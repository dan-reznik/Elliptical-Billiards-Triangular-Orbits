(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3661812,      68935]
NotebookOptionsPosition[   3645979,      68467]
NotebookOutlinePosition[   3646324,      68482]
CellTagsIndexPosition[   3646281,      68479]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Utils", "Section",
 CellChangeTimes->{{3.7657196589240246`*^9, 3.765719665743774*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\<C:\\\\Users\\\\drezn\\\\Dropbox\\\\Mathematica\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7657217378447948`*^9, 3.765721737973451*^9}, {
  3.765721775573923*^9, 3.7657218002300367`*^9}, {3.7657221018699837`*^9, 
  3.765722114062396*^9}, {3.7671242620943127`*^9, 3.7671242758445625`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"toDeg", "[", "r_", "]"}], ":=", 
   RowBox[{"180.", "*", 
    RowBox[{"r", "/", "\[Pi]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"toRad", "[", "d_", "]"}], ":=", 
   RowBox[{"\[Pi]", "*", 
    RowBox[{"d", "/", "180."}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"negl", "[", "v_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Abs", "[", "v", "]"}], "<", 
    RowBox[{"10", "^", 
     RowBox[{"-", "9"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"magn2", "[", "v_", "]"}], ":=", 
   RowBox[{"v", ".", "v"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"magn", "[", "v_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"magn2", "[", "v", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"flipY", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "y"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"flipX", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "x"}], ",", "y"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"perp", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "y"}], ",", "x"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"perpNeg", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "x"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refl", "[", 
    RowBox[{"v_", ",", "n_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"v", ".", "n"}], ")"}], 
     RowBox[{"n", "/", 
      RowBox[{"magn2", "[", "n", "]"}]}]}], "-", "v"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"norm", "[", "v_", "]"}], ":=", 
   RowBox[{"v", "/", 
    RowBox[{"magn", "[", "v", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"clamp", "[", 
    RowBox[{"v_", ",", 
     RowBox[{"max_:", "100"}]}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"v", ">", "max"}], ",", "max", ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"v", "<", 
        RowBox[{"-", "max"}]}], ",", 
       RowBox[{"-", "max"}], ",", "v"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ray", "[", 
    RowBox[{"p0_", ",", "phat_", ",", "d_"}], "]"}], ":=", 
   RowBox[{"p0", "+", 
    RowBox[{"phat", "*", "d"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "rot"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rot", "[", 
    RowBox[{"p_", ",", "st_", ",", "ct_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "m", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"m", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ct", ",", 
           RowBox[{"-", "st"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"st", ",", "ct"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"m", ".", "p"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rot", "[", 
    RowBox[{"p_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"rot", "[", 
    RowBox[{"p", ",", 
     RowBox[{"Sin", "@", "t"}], ",", 
     RowBox[{"Cos", "@", "t"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getEquilateral", "[", "th_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s", "=", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", 
           RowBox[{"\[Pi]", "/", "3."}]}], "]"}]}], ",", 
        RowBox[{"c", "=", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", 
           RowBox[{"\[Pi]", "/", "3."}]}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rot", "[", 
          RowBox[{"#", ",", "s", ",", "c"}], "]"}], "&"}], ",", 
        RowBox[{"rot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1.", ",", "0."}], "}"}], ",", 
          RowBox[{"Sin", "@", "th"}], ",", 
          RowBox[{"Cos", "@", "th"}]}], "]"}], ",", "2"}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"x0", "+", 
      RowBox[{"nx", "*", "t"}]}], "=", 
     RowBox[{"0", "=", " ", 
      RowBox[{
       RowBox[{">", "t"}], "=", 
       RowBox[{
        RowBox[{"-", "x0"}], "/", "nx"}]}]}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"interY", "[", 
     RowBox[{"p0_", ",", "phat_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"p0", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "/", 
         RowBox[{"phat", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ray", "[", 
        RowBox[{"p0", ",", "phat", ",", "t"}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"y0", "+", 
      RowBox[{"ny", "*", "t"}]}], "=", 
     RowBox[{"0", "=", " ", 
      RowBox[{
       RowBox[{">", "t"}], "=", 
       RowBox[{
        RowBox[{"-", "y0"}], "/", "ny"}]}]}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"interX", "[", 
    RowBox[{"p0_", ",", "phat_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "t", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", "=", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"p0", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "/", 
        RowBox[{"phat", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ray", "[", 
       RowBox[{"p0", ",", "phat", ",", "t"}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdy1kow3EAB/ChtjVChMiRWEYkeXAWfw+UmKvmLGyTtkiyknLkyhQl9jDl
2uRO4sHEyvYyx7SanJErXvhTSM0Vv+/v4dunb9++odKGwhpnDocTSgJlCSOf
EneWGRM1/8HeDB63mChokrtDScSpP9TOOAfBgZvtOLr/XsTD725hCpw/EKZC
W5BvFu2xK2I4rGct9D9q34WMUssvIQY0n3tAx12ho5QYHKiiatJeGCmRbw4r
gIn54XXQ+PxGnerYa4XLmWdUtfZNC5PDskfhGO9zAupNskn4IKrdgD8nFuol
05grIz4uVuVBvoFrgQPvPlZoKbK+QpGXnVp3rVIpiMddPdSSlo1x+GwV6qBU
mVOpJF5E6aRwsP9wpJO4PmvSwLVqyRI0iR+XYbG+3gxzDav70HYmb+shli+6
tsPb6PhpJw+W2Yz1noFfbhkLUN0npl6tJ91wiWtH7D3c1hwaIokVbeItOPdR
ZoaBTQpqlK6hRePJMo0urVTJkN/pE9Fm3L+DAvWOKMSbZdL9Q2LgP+VR8y8=

  "]],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "s"}], " ", 
       RowBox[{"(", 
        RowBox[{"dl", ".", "dl"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"p", "-", "l1"}], ")"}], "dl"}]}], "\[Equal]", "0"}], 
    "\[Implies]", 
    StyleBox[" ",
     FontWeight->"Bold"], 
    StyleBox["s",
     FontWeight->"Bold"]}], 
   StyleBox["=",
    FontWeight->"Bold"], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"p", "-", "l1"}], ")"}], ".", "dl"}], "/", 
     RowBox[{"dl", "^", "2", " "}]}],
    FontWeight->"Bold"]}], "DisplayFormula"]], "DisplayFormula",
 CellChangeTimes->{{3.766046175268909*^9, 3.7660461971803007`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"closestPerp", "[", 
    RowBox[{"p_", ",", "l1_", ",", "l2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dl", "=", 
        RowBox[{"l2", "-", "l1"}]}], ",", "s"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"p", "-", "l1"}], ")"}], ".", "dl"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"dl", ".", "dl"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ray", "[", 
       RowBox[{"l1", ",", "dl", ",", "s"}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "quadRoots"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"quadRoots", "[", 
    RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"det", "=", 
        RowBox[{
         RowBox[{"b", "^", "2"}], "-", 
         RowBox[{"4", "a", " ", "c"}]}]}], ",", "sqrtDet"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"det", "<", "0"}], ",", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<quadRoots fail: {a,b,c}=\>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "c"}], "}"}]}]}], "]"}], ";", 
        "False"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sqrtDet", "=", 
         RowBox[{"Sqrt", "[", "det", "]"}]}], ";", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "b"}], "-", "sqrtDet"}], ",", 
           RowBox[{
            RowBox[{"-", "b"}], "+", "sqrtDet"}]}], "}"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "a"}], ")"}]}]}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "interRays"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"interRays", "[", 
    RowBox[{"p1_", ",", "n1_", ",", "p2_", ",", "n2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "b", ",", "sols"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"m", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"n1", ",", "n2"}], "}"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"nx1", ",", 
            RowBox[{"-", "nx2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ny1", ",", 
            RowBox[{"-", "ny2"}]}], "}"}]}], "}"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"negl", "[", 
         RowBox[{"Det", "[", "m", "]"}], "]"}], ",", "p1", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"b", "=", 
          RowBox[{"p2", "-", "p1"}]}], ";", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x2", "-", "x1"}], ",", 
              RowBox[{"y2", "-", "y1"}]}], "}"}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"sols", "=", 
          RowBox[{"LinearSolve", "[", 
           RowBox[{"m", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ray", "[", 
          RowBox[{"p1", ",", "n1", ",", 
           RowBox[{"sols", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"interRaysIllConditioned", "[", 
    RowBox[{"n1_", ",", "n2_"}], "]"}], ":=", 
   RowBox[{"negl", "@", 
    RowBox[{"Det", "@", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{"n1", ",", "n2"}], "}"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"interRaysUnprot", "[", 
    RowBox[{"p1_", ",", "n1_", ",", "p2_", ",", "n2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "b", ",", "sols"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"m", "=", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{"n1", ",", "n2"}], "}"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"nx1", ",", 
            RowBox[{"-", "nx2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ny1", ",", 
            RowBox[{"-", "ny2"}]}], "}"}]}], "}"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"b", "=", 
       RowBox[{"p2", "-", "p1"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x2", "-", "x1"}], ",", 
           RowBox[{"y2", "-", "y1"}]}], "}"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"sols", "=", 
       RowBox[{"LinearSolve", "[", 
        RowBox[{"m", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ray", "[", 
       RowBox[{"p1", ",", "n1", ",", 
        RowBox[{"sols", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.77088148786456*^9, 3.7708815748434095`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Second", "[", "l_", "]"}], ":=", 
   RowBox[{"l", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Third", "[", "l_", "]"}], ":=", 
   RowBox[{"l", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7670147435906525`*^9, 3.7670147496393466`*^9}, {
  3.7679104981995945`*^9, 3.7679105149996314`*^9}}],

Cell[CellGroupData[{

Cell["Triangles", "Subsubsection",
 CellChangeTimes->{{3.76735539449273*^9, 3.767355402979031*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cosHalfAngle", "[", "cosAngle_", "]"}], ":=", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.", "+", "cosAngle"}], ")"}], "/", "2"}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"careful", ":", " ", 
    RowBox[{"plus", " ", "or", " ", "minus"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sinHalfAngle", "[", "cosAngle_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.", "-", "cosAngle"}], ")"}], "/", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"tanHalfAngle", "[", 
     RowBox[{"sinAngle_", ",", "cosAngle_"}], "]"}], ":=", 
    RowBox[{"sinAngle", "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", "cosAngle"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"careful", ":", " ", 
    RowBox[{"plus", " ", "or", " ", "minus"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cosDoubleAngle", "[", "cosAngle_", "]"}], ":=", 
    RowBox[{
     RowBox[{"2", "*", "cosAngle", "*", "cosAngle"}], "-", "1."}]}], ";"}], 
  " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"cA", "^", "2"}], "-", 
     RowBox[{"sA", "^", "2"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"cA", "^", "2"}]}], "-", "1"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sinDoubleAngle", "[", "sinAngle_", "]"}], ":=", 
    RowBox[{"2", "*", "sinAngle", "*", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"1.", "-", 
       RowBox[{"sinAngle", "^", "2"}]}], "]"}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"2", " ", "sA", " ", "cA"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"gives", " ", "cos", 
    RowBox[{"(", "A", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lawOfCosines", "[", 
    RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"b", "^", "2"}], "+", 
      RowBox[{"c", "^", "2"}], "-", 
      RowBox[{"a", "^", "2"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2.", "b", " ", "c"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSin", "[", "theCos_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"1.", "-", 
     RowBox[{"theCos", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sinCosTripleAngle", "[", 
    RowBox[{"s_", ",", "c_", ",", "s2_", ",", "c2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s3", ",", "c3"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"c3", "=", 
       RowBox[{
        RowBox[{"c2", " ", "c"}], "-", 
        RowBox[{"s2", " ", "s"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"s3", "=", 
       RowBox[{
        RowBox[{"s2", " ", "c"}], "+", 
        RowBox[{"s", " ", "c2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"s3", ",", "c3"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSinCosApB", "[", 
    RowBox[{"sa_", ",", "sb_", ",", "ca_", ",", "cb_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"sa", " ", "cb"}], " ", "+", " ", 
      RowBox[{"sb", " ", "ca"}]}], " ", ",", 
     RowBox[{
      RowBox[{"ca", " ", "cb"}], " ", "-", " ", 
      RowBox[{"sa", " ", "sb"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSinCosAmB", "[", 
    RowBox[{"sa_", ",", "sb_", ",", "ca_", ",", "cb_"}], "]"}], ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"sa", " ", "cb"}], " ", "-", " ", 
      RowBox[{"sb", " ", "ca"}]}], ",", 
     RowBox[{
      RowBox[{"ca", " ", "cb"}], " ", "+", " ", 
      RowBox[{"sa", " ", "sb"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSinApmB", "[", 
    RowBox[{"sa_", ",", "sb_", ",", "ca_", ",", "cb_"}], "]"}], ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"sa", " ", "cb"}], " ", "+", " ", 
      RowBox[{"sb", " ", "ca"}]}], ",", 
     RowBox[{
      RowBox[{"sa", " ", "cb"}], " ", "-", " ", 
      RowBox[{"sb", " ", "ca"}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.76591906281505*^9, 3.765919078501348*^9}, {
  3.7659191143404655`*^9, 3.7659191992291965`*^9}, {3.76657832275782*^9, 
  3.766578327165077*^9}, {3.7665784325336213`*^9, 3.766578440268614*^9}, {
  3.7665785667815685`*^9, 3.7665785731805363`*^9}, {3.7666098515226717`*^9, 
  3.766609958194751*^9}, {3.766615461807331*^9, 3.766615488571554*^9}, {
  3.7670103269827766`*^9, 3.7670103287340918`*^9}, {3.7671231947036533`*^9, 
  3.7671231951903543`*^9}, {3.7673553660914555`*^9, 3.767355366258979*^9}, {
  3.767549318998588*^9, 3.767549319485285*^9}, {3.7677390008982353`*^9, 
  3.7677391362668514`*^9}, {3.7677391840759*^9, 3.7677392730113115`*^9}, {
  3.770538892908145*^9, 3.7705389023961015`*^9}, {3.7705970366746793`*^9, 
  3.7705970664179325`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cosDiffAngle", "[", 
    RowBox[{"sa_", ",", "ca_", ",", "sb_", ",", "cb_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"ca", " ", "cb"}], "+", 
    RowBox[{"sa", " ", "sb"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cosSumAngle", "[", 
     RowBox[{"sa_", ",", "ca_", ",", "sb_", ",", "cb_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"ca", " ", "cb"}], "-", 
     RowBox[{"sa", " ", "sb"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"compute", " ", 
     RowBox[{"sin", "^", "2"}], 
     RowBox[{"(", 
      RowBox[{"A", "/", "2"}], ")"}]}], ",", " ", 
    RowBox[{"by", " ", "passing", " ", "cosA"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sin2HalfAngle", "[", "cosAngle_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "cosAngle"}], ")"}], "/", "2"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"sinHalfAngle", "[", "cos", "]"}], "^", "2"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cos2HalfAngle", "[", "cosAngle_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "cosAngle"}], ")"}], "/", "2"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"cosHalfAngle", "[", "cos", "]"}], "^", "2"}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7705389189201593`*^9, 3.7705389403946557`*^9}, {
  3.770539030347898*^9, 3.770539128061*^9}, {3.770539490453212*^9, 
  3.7705395282453823`*^9}, {3.7705395779005947`*^9, 3.770539639851725*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7705970296883507`*^9, 3.7705970300793123`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "cosThird"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cosThird", "[", "cos_", "]"}], ":=", 
   RowBox[{"Chop", "@", 
    RowBox[{"N", "@", 
     RowBox[{"Re", "[", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"sin", "=", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"1", "-", 
            RowBox[{"cos", "^", "2"}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"cos", "+", 
              RowBox[{"I", " ", "sin"}]}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "/", "3"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"cos", "+", 
              RowBox[{"I", " ", "sin"}]}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "3"}], ")"}]}]}], ")"}], "/", "2"}]}], "]"}], 
      "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7691256309913645`*^9, 3.7691257280467873`*^9}, {
  3.769127369219716*^9, 3.769127412637098*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getTriBisectors"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getTriBisectors", "[", 
    RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"u12", ",", "u23", ",", "u31"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"u12", "=", 
       RowBox[{"norm", "[", 
        RowBox[{"p2", "-", "p1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"u23", "=", 
       RowBox[{"norm", "[", 
        RowBox[{"p3", "-", "p2"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"u31", "=", 
       RowBox[{"norm", "[", 
        RowBox[{"p1", "-", "p3"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"norm", "[", 
         RowBox[{"u12", "-", "u31"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"norm", "[", 
         RowBox[{"u23", "-", "u12"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"norm", "[", 
         RowBox[{"u31", "-", "u23"}], "]"}]}], "\[IndentingNewLine]", 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7659674426372366`*^9, 3.765967615297035*^9}, {
  3.765967735768882*^9, 3.7659677445274525`*^9}, {3.7659681322883053`*^9, 
  3.7659682066725426`*^9}, {3.765968810586872*^9, 3.7659688117673054`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ellipse", "Subsubsection",
 CellChangeTimes->{{3.766046228637311*^9, 3.7660462354366193`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQlcTVv7x5Xmkkqkm0xFKSHpJjJFkuEiY6REhmTKPFPGi5LxkiIaSCHT
lQYZQkRCA6UIJQ16KQqV/+/feu95u00azjn7DOv7+dz7yT77rP3sfdb6redZ
e61ndZixyHK2aJMmTZZK4X+WdisHLVlit3qcGP5hunrZrBlN8UcS/nMXadLk
///+SaFQKBQKhUKhUCgUCoVSA76+vsbGxn369Pm9HPxhbm4+Z86c06dP//jx
g2nrKBQK5X9s2bKlSZMmSkpKPXv21NfX19XVVVVVbVKOra3t9+/fmTaQQqFQ
/sv27dshTYsXL2Ydyc/PP3nypJycHI5fu3aNQdsoFAqlIkSvFi1aVOn4tGnT
cHz37t2MWEWhUChVqUmvbGxscDwgIIARqygUCqUqVeNB8Pz5cwUFhY4dO+bk
5DBlGIVCoVSC6NWsWbOys7OzsrJevnx59uxZHR0dNTW1GzduMG0dhUKh/A+i
V1JSUsrKykpKStLS0vhnixYtIiMjmTaNQqFQ/gXRKz09vXnz5tnZ2Y0dOxbO
VdOmTVu3br1161Y6BYtCofAORK+WLFnCOvL169dTp04pKiriuJubG4O2USgU
SkVqej944sQJHNfU1Pz8+TMjhlEoFEolatKrzMxMGRkZKSmpN2/eMGIYhUKh
VKImvYqJiRETE1NVVf348SMjhlEoFEoliF45OTlVPJiYmGhqaorjCxYsYMow
CoVCqQRZ79ymTRvzciBTenp6kpKSODhkyJDs7GymDaRQKJT/cvToUV1dXW1t
bc1yOnfurK+vP378+MOHDxcWFjJtHYVCoVAoFAqFQqFQKBQKhUKhUCj8xMuX
L0+ePOnp6fn06VOmbaFQKJQaOXjwoJKSEsnZLiMjs2bNGrrMmUKh8CDh4eFi
YmJN/s2RI0eYtotCoQgyZWVl8IuKi4vz8/Pfv3//6tWrpKSkx48fR0dH37p1
KyIi4urVqxcuXDh37lxAQICvr6+3t/exY8f69u3bpAqdOnXy8PA4fvy4j4/P
6dOnz549Gxwc/Pfff0PcUNS9e/diY2MTExPT0tIyMjI+fvxYVFSES8MApp8B
hUJhmO/fv3/69CkrKwsSBKEICwuD4Bw+fPjPP/9cvXr17NmzJ0yYYGZm9vvv
v2tpaf32228tWrSQl5dHZCcuLl5Vi9gFvDJpaWlcCJdTVVWFxPXq1Wvw4MGW
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
pnAe5Pjx4wiot2zZ0rCvFxQU9OjRQ0ZGpqYZyJwGbnYt68soggTU6ebNm/Cv
EKaxwqia4IReJScnKykpkWSSFQer3759q6ioiGCwjjOlEaAlJCSQlwUbNmyo
y1cCAgLc3d33/gP+Jq4a0SvcbKUMALGxsbCHJuCqBAknly1bxpQBxcXFffv2
FRMTo9vMUSrCofmia9asIQ6ev78/66CnpycJTqvdh44FOnfIzpQpU9q2bYvY
kAzg11GvyHhXRcgwCNGriRMnVjo/LS2tWbNmmpqa/PgSkEOgu0G30q5du4bN
5mUXUVFR+On19fXp1s8UFhzSq6ysrDZt2jQp3wCdLLImaW9xZNOmTbV8MTQ0
lOQYxNfnzp17+fLlnTt31l2vXrx4AZfp8T/AucrOzv75j15VzVCBtomoR1tb
m98niLKL0tLSsWPH4ln5+Pgwbct/5zZwdJ01hb/g3HocV1dX4uHs37//Z/lY
OjwZSUnJWualp6amksG3rVu3skw6evRo3fWqJohewfuq9AogOjoax4cMGdKY
wgWJ48ePkzkM9UpKxiFQB7p16yYuLl7T22SKsME5vUKZOjo6qPzt27f/9OnT
gfLNNPv27VvLNignT54kUy8qHrSxsWn8kDhZP4jospJaklfnwrbTTU0kJSWh
v1BRUal2UwlGuH37tpSUVOfOnemiQspPDq93JvoD1qxZM3ToUPzh5uZWy/nn
z5+vpGkBAQFk/KqRkzbJuhIUBVeKVfMReyopKcHrq1dCZkGlqKiI5P/39fVl
2pZ/sX37djL2yAsuH4VZOKpXxcXFxsbGRCjg1cvKyr548aKW8z98+NClSxfi
Ym3cuBFRSceOHR0dHXFk1KhRjbGETIqYPHnygAED1NTU8MewYcNERUUbP1NC
YICTiacxc+ZMpg2pzPfv38mQ2s6dO5m2hcIwnM4nc+XKFREREeJlwbf55eTD
hIQE9KSQlE6dOk2ZMgURCtyh8ePHOzk5NaZ7DQ8PR50PDAzMyclxcHCADLZs
2RJaevz4ce7Ph+RBgoKCoN4GBgYVNyvhHTIyMlAf0OvRPb+EHE7rFURm0qRJ
ZCcpLy+vOn4rPz+fo0kSCgsLc3Nz6W4shLi4OGVlZUVFxUqTaXmKe/fuycvL
q6iocG7PCwrvw4V8ffDnoT+4BB1/4EEyMzP19PTgA58+fZppW36Br68v7NTV
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
1kGmraMIEf8HvEYZGA==
    "], {{0, 215}, {400, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{239., Automatic},
  ImageSizeRaw->{400, 215},
  PlotRange->{{0, 400}, {0, 215}}]], "Input",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ellEqn", "[", 
    RowBox[{"a_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "/", "a"}], ")"}], "^", "2"}], "+", 
    RowBox[{"y", "^", "2"}], "-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellEqnb", "[", 
    RowBox[{"a_", ",", "b_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "/", "a"}], ")"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y", "/", "b"}], ")"}], "^", "2"}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ellGrad", "[", 
     RowBox[{"a_", ",", "x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"-", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"y", " ", 
        RowBox[{"a", "^", "2"}]}]}], "}"}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "/", "a"}], ")"}], "^", "2"}], "+", 
     RowBox[{"y", "^", "2"}]}], "\[Equal]", "1"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellY", "[", 
    RowBox[{"a_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "/", "a"}], ")"}], "^", "2"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellError", "[", 
    RowBox[{"a_", ",", "b_", ",", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_"}], "}"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "/", "a"}], ")"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y", "/", "b"}], ")"}], "^", "2"}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "eccentricity"}], ";", 
  RowBox[{
   RowBox[{"eccentricity", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", "/", "a"}], ")"}], "^", "2"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"focalDistance", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"a", "^", "2"}], "-", 
     RowBox[{"b", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getFoci", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"a", ",", "_Real"}], "}"}], "}"}], ",", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "c", "}"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"a", "<", "1"}], ",", 
         RowBox[{
          RowBox[{"c", "=", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"1", "-", 
             RowBox[{"a", "^", "2"}]}], "]"}]}], ";", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "c"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", "c"}]}], "}"}]}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"c", "=", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"a", "^", "2"}], "-", "1"}], "]"}]}], ";", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "c"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"c", ",", "0"}], "}"}]}], "}"}]}]}], "]"}]}], "]"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getFocib", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"b", "*", 
    RowBox[{"getFoci", "[", 
     RowBox[{"a", "/", "b"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.76789110133794*^9, 3.7678911078754535`*^9}, {
  3.7680461786418557`*^9, 3.7680462136163073`*^9}, {3.768157660984069*^9, 
  3.768157677071046*^9}, {3.770371214116288*^9, 3.7703712257023115`*^9}, {
  3.7707234432333508`*^9, 3.7707234467918406`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ellRayCoeffs", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", ",", "eqn", ",", "sols"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"r", "=", 
      RowBox[{"ray", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nx", ",", "ny"}], "}"}], ",", "s"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"eqn", "=", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"ellEqn", "[", 
         RowBox[{"a", ",", 
          RowBox[{"r", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"r", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"Assumptions", "\[Rule]", 
         RowBox[{
          RowBox[{"a", ">", "0"}], "&&", 
          RowBox[{
           RowBox[{"Abs", "[", "x", "]"}], "<=", "a"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"nx", "^", "2"}], "+", 
             RowBox[{"ny", "^", "2"}]}], "\[Equal]", "1"}], ")"}]}]}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "^", "2"}], " ", 
        RowBox[{"CoefficientList", "[", 
         RowBox[{"eqn", ",", "s"}], "]"}]}], ",", 
       RowBox[{"a", ">", "0"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.765637805842102*^9, 3.7656378633575897`*^9}, {
  3.7656379254694333`*^9, 3.765637929686124*^9}, {3.765637966269289*^9, 
  3.7656379720617642`*^9}, {3.7656380094540954`*^9, 3.7656381704387407`*^9}, {
  3.765638471204547*^9, 3.7656385133662405`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["y", "2"]}], ")"}]}]}], ",", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"nx", " ", "x"}], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", "ny", " ", "y"}]}], ")"}]}], ",", 
   RowBox[{
    SuperscriptBox["nx", "2"], "+", 
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["ny", "2"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.765638159037404*^9, 3.765638170868575*^9}, 
   3.765638347636087*^9, {3.7656384853641496`*^9, 3.7656385141930285`*^9}, 
   3.7656385992629375`*^9, 3.7656428422107067`*^9, 3.765701835535811*^9, 
   3.7657018878546796`*^9, 3.7657022337673535`*^9, 3.7657196478775673`*^9, 
   3.765720973837229*^9, 3.765802017763794*^9, 3.766046206161281*^9, 
   3.766089683268818*^9, 3.7661314576958876`*^9, 3.7661320311778345`*^9, 
   3.7662363058805323`*^9, 3.766236444242606*^9, 3.766270216880103*^9, 
   3.766342655962682*^9, 3.7665660528096967`*^9, 3.766746221486204*^9, 
   3.7669188272222834`*^9, 3.7670090450568247`*^9, 3.767009799626189*^9, 
   3.7670099382437115`*^9, 3.7670139015148306`*^9, 3.7670139992996593`*^9, 
   3.7670141001856947`*^9, 3.7670323964346447`*^9, 3.7670486335481772`*^9, 
   3.7670865691274495`*^9, 3.767087965157824*^9, 3.767116413624178*^9, 
   3.7671204108024597`*^9, 3.7671232731258655`*^9, 3.7671242910627184`*^9, 
   3.7671348114370346`*^9, 3.7671352710027823`*^9, 3.767691128437108*^9, 
   3.767732697996874*^9, 3.7678136956629267`*^9, 3.767814143920453*^9, 
   3.767890277192581*^9, 3.7681206272633824`*^9, 3.7681699074564247`*^9, 
   3.768171236497014*^9, 3.7691253124714813`*^9, 3.7701323940195456`*^9, 
   3.770132439909853*^9, 3.7701447027134047`*^9, 3.770156538923111*^9, 
   3.770157766573496*^9, 3.770371013125205*^9, 3.770417393579455*^9, 
   3.7704534486731443`*^9, 3.7704750427267694`*^9, 3.770484365816631*^9, 
   3.770535979889059*^9, 3.7705360697123933`*^9, 3.770585301451167*^9, 
   3.770630753138438*^9, 3.7706310736373453`*^9, 3.7706660812862687`*^9, 
   3.7708011169286766`*^9, 3.770802488273113*^9, 3.7708321935436172`*^9, 
   3.7708382342858067`*^9, 3.770842251295807*^9, 3.7708824453246584`*^9, 
   3.770886465953621*^9, 3.7708945350373697`*^9, 3.7709343877783346`*^9, 
   3.770936123669255*^9, 3.771025638024449*^9, 3.7711592685491924`*^9, 
   3.7716755270227275`*^9, 3.772137203597121*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "ellInterRay"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellInterRay", "[", 
    RowBox[{"a_", ",", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"nx_", ",", "ny_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c2", ",", "c1", ",", "c0", ",", "ss"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"c2", "=", 
       RowBox[{
        SuperscriptBox["nx", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["ny", "2"]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c1", "=", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nx", " ", "x"}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", "ny", " ", "y"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"c0", "=", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["y", "2"]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ss", "=", 
       RowBox[{"quadRoots", "[", 
        RowBox[{"c2", ",", "c1", ",", "c0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ListQ", "[", "ss", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"ray", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"nx", ",", "ny"}], "}"}], ",", "#"}], "]"}], "&"}], "/@",
          "ss"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}]}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.765616122000228*^9, 3.765616156819413*^9}, {
  3.765616213568821*^9, 3.765616227617854*^9}, {3.7656162693292503`*^9, 
  3.765616466450385*^9}, {3.765616528520337*^9, 3.765616702593474*^9}, {
  3.7656167574178524`*^9, 3.7656168873219366`*^9}, {3.7656169212424374`*^9, 
  3.7656169673621545`*^9}, {3.765617004659359*^9, 3.765617366697528*^9}, {
  3.7656381766132083`*^9, 3.7656383147327538`*^9}, {3.765638356590396*^9, 
  3.7656384325349646`*^9}, {3.7656385177745852`*^9, 3.7656385768219695`*^9}, {
  3.7656524223963385`*^9, 3.7656524643486853`*^9}, {3.7656525462532167`*^9, 
  3.7656525849015355`*^9}, {3.765652713566042*^9, 3.76565271378144*^9}, {
  3.7657018112844925`*^9, 3.765701844859399*^9}, {3.7657020043236523`*^9, 
  3.7657020205650425`*^9}, {3.765964082351487*^9, 3.7659641177966986`*^9}}],

Cell["Used for Proofs", "Text",
 CellChangeTimes->{{3.7659641235538635`*^9, 3.765964127236492*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"quadRootsUnprot", "[", 
    RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"det", "=", 
        RowBox[{
         RowBox[{"b", "^", "2"}], "-", 
         RowBox[{"4", "a", " ", "c"}]}]}], ",", "sqrtDet"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sqrtDet", "=", 
       RowBox[{"Sqrt", "[", "det", "]"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "b"}], "-", "sqrtDet"}], ",", 
         RowBox[{
          RowBox[{"-", "b"}], "+", "sqrtDet"}]}], "}"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "a"}], ")"}]}]}]}], "]"}]}], ";", 
  RowBox[{"Clear", "@", "ellInterRayUnprot"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellInterRayUnprot", "[", 
    RowBox[{"a_", ",", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"nx_", ",", "ny_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c2", ",", "c1", ",", "c0", ",", "ss"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"c2", "=", 
       RowBox[{
        SuperscriptBox["nx", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["ny", "2"]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c1", "=", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nx", " ", "x"}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", "ny", " ", "y"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"c0", "=", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["y", "2"]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ss", "=", 
       RowBox[{"quadRootsUnprot", "[", 
        RowBox[{"c2", ",", "c1", ",", "c0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"ray", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"nx", ",", "ny"}], "}"}], ",", "#"}], "]"}], "&"}], "/@", 
       "ss"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "triSides"}], ";", 
  RowBox[{
   RowBox[{"triSides", "[", "vs_", "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#1", "-", "#2"}], ")"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"vs", ",", 
       RowBox[{"RotateLeft", "@", "vs"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "triLengths"}], ";", 
  RowBox[{
   RowBox[{"triLengths", "[", "vs_", "]"}], ":=", 
   RowBox[{"magn", "/@", 
    RowBox[{"triSides", "[", "vs", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"triPer", "[", "tri_", "]"}], ":=", 
    RowBox[{"Total", "[", 
     RowBox[{"triLengths", "@", "tri"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"a", ",", "b", ",", 
    RowBox[{"c", " ", "are", " ", "side", " ", "lengths"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "@", "triAreaHeron"}], ";", 
   RowBox[{
    RowBox[{"triAreaHeron", "[", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "s", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"s", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "+", "b", "+", "c"}], ")"}], "/", "2"}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{"semi", " ", "perimeter"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"s", "*", 
         RowBox[{"(", 
          RowBox[{"s", "-", "a"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"s", "-", "b"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"s", "-", "c"}], ")"}]}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"order", " ", "by", " ", "oposition", " ", "to", " ", "vertices"}],
    " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getMedians", "[", 
    RowBox[{"t1_", ",", "t2_", ",", "t3_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t2", "+", "t3"}], ",", 
      RowBox[{"t1", "+", "t3"}], ",", 
      RowBox[{"t1", "+", "t2"}]}], "}"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getMediansV", "[", "vs_", "]"}], ":=", 
   RowBox[{".5", 
    RowBox[{"(", 
     RowBox[{"vs", "+", 
      RowBox[{"RotateLeft", "@", "vs"}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7661337620883174`*^9, 3.7661338191733656`*^9}, {
  3.7661338921831665`*^9, 3.7661340674480762`*^9}, {3.7661345241044846`*^9, 
  3.7661345363283467`*^9}, {3.766134687305379*^9, 3.766134690503578*^9}, {
  3.766142401680124*^9, 3.766142450727894*^9}, {3.7661425245618796`*^9, 
  3.7661425732326365`*^9}, {3.766142639994296*^9, 3.7661426616725283`*^9}, {
  3.766142740881012*^9, 3.766142766936796*^9}, {3.7663986552041454`*^9, 
  3.7663986688209686`*^9}, {3.767117410266687*^9, 3.7671174108022556`*^9}, {
  3.7678252008876257`*^9, 3.767825238966894*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getCircularity"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getCircularity", "[", "locus_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rads", ",", "ctr", ",", "mean", ",", "sd"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"assume", " ", 
       RowBox[{"it", "'"}], "s", " ", "zero", " ", "since", " ", "points", 
       " ", "may", " ", "not", " ", "be", " ", "evenly", " ", "distributed", 
       " ", "so", " ", "\"\<mean\>\"", " ", 
       RowBox[{"won", "'"}], "t", " ", "work", " ", "and", " ", 
       "RegionCentroid", " ", "is", " ", "too", " ", "slow"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ctr", "=", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rads", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"magn", "[", 
          RowBox[{"#", "-", "ctr"}], "]"}], "&"}], "/@", "locus"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mean", "=", 
       RowBox[{"Mean", "@", "rads"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sd", "=", 
       RowBox[{"StandardDeviation", "@", "rads"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<n\>\"", "\[Rule]", 
         RowBox[{"Length", "@", "locus"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<ctr\>\"", "\[Rule]", "ctr"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<min\>\"", "->", 
         RowBox[{"Min", "@", "rads"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<max\>\"", "->", 
         RowBox[{"Max", "@", "rads"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<mean\>\"", "\[Rule]", "mean"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<sd\>\"", "\[Rule]", "sd"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<zscore\>\"", "\[Rule]", 
         RowBox[{"sd", "/", "mean"}]}]}], "\[IndentingNewLine]", "}"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.767011845478818*^9, 3.767012039900096*^9}, 
   3.7705988535271616`*^9, {3.770628028723605*^9, 3.770628063609456*^9}, {
   3.7706282946503024`*^9, 3.770628319042116*^9}, 3.770628486187739*^9, {
   3.770630757389079*^9, 3.770630813782441*^9}, 3.7708038590343046`*^9, {
   3.7708039492363434`*^9, 3.7708039617960796`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Ellipse Inversion, Isogonal and Isotomic Conjugates", "Section",
 CellChangeTimes->{{3.770804461297823*^9, 3.7708044708728085`*^9}, {
  3.7708045149769416`*^9, 3.770804518073593*^9}}],

Cell[BoxData[{
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
HDny4YcfLlasWMuWLceOHXv48GGLxWLe5t5C89ilNSJJiuFaoLq59VRX6K0K
61DP+GTbK7Lbkkzee339Ew8sfeHJ9S/0WDR46Mp0O9XuTpfCc1JSDakrGnUB
JKmpqU2bNm3Xrh0PmUH5hyAIguROQOwFBwe//vrr/K3bzdZmfQw1worir11h
eW7pF1UlUwwlF3uKSt8qChOAnoVcmFWvhZETp+Xz1+2x6TTxnMo/0GUWOCIK
y3JbjR8jpIhMucvtIsvxTbbToicy9YTUPUZNzRPz61DIyYvKrj0J2zbH7Nmc
GHaO2B3E4qIJ5RRqTpVlxQl7VVkxWZcm0WhoXfIsIkua5OQ9zLvI4XCEhIS8
//77DRs2LFu2LIiQ6dOnh4WF6cyLT6h64drne766B7/X/b+335b+/PftGS6X
PDG2okF/WI384TpxSG4+4BwS866kebjdhMVxuB3kwlly9KB++qjr9Kn0y5E2
9s+D8FhrN8/yR23ZRhE3uI1q0KBBXFwcQe2HIAiC5FZcLlehQoVGjhzJ3+rZ
uqn7bdeJ5pSszDGKW/x4kV5mQtRp4IZIKazqCsggjUd16Cypn85d/+BZUz0h
I9nXKct7iFgPsaDtWYJkxSKI002cVlo1THHxDlRkGpXACxmzerhMDbsJt6Bq
GUqGiRDo5ri4hJkzZ/Lo3cqVK4P8W7NmTUJCAi8xZg7fyNGOyDl4R7lALbt1
w/RKh6cq0+Eo0WBft6SwJIog1BWaU9HtsmqaEQtMH6ADVTZW4VaHSUQlw1Kt
sqtAhyvcQ1WvXv3atWs5fcIIgiAIkiVRUVEBAQGTJk3SfSJ8dRPZtOtGwSs2
h2pUXjhllu5F5znQqGGKTY80eZ3OLFe09oeqqSqt66EbpRZgLpV1T+kymnxD
lTUaGJspdzE3T/kuTN/pds3DLbbr3NmMpm7WzS26JvMkwwovFUEknaYi4fqZ
JXXR+AK6VaMhCjwZjsRz1Ll1u9Vx7tyZiT9NeOihh0D1NWzYcNiwYYcPH+Zx
HPwAxLUTL8zVPfwev+6J6vW97nm0XeNxQ6wvqfbTiM1BX7k0et/hILxSGzWw
qoqLqW83M/8xAy1rkJlvoKqKS+mxbDNborCaDh48uEKFChcuXMBYDwRBECR3
ArMVSAXQfkuWLBEtWXnO+40RgBYQcyD2eJl7t04sDrJzt7pjh5KeTqdPh8sz
XRpZWxTmA0hzl3imTr7AC+1uVVcyGtkH0CLrnpXizL97FyIF/IrDW2xnJ697
TFAsAISbWD1NuiSrLtWo/MtS0LE4DpdMy71FxJINO9RT5wlN+kdz1Wkh23f3
f//Dxk0bFQ8s0r1712nTpl29epWrPq7uzMcjtFBWXp1+Rf7d6eesxtXtaocx
pBqdrSiqi92DUNteajoJ2U027SCpDhpuw/wpWaYi2cFCqnWWb1wzbNk0uTa9
fqpk2Gx1U9i16M/x48eXLl365MmTuOCLIAiC5Fo2b95csGDBbdu2+Rp/VIav
UcW7nU1/kovao6LjyauvRLZocqFRnePdHj95/ChRRcJmlc+nML8qNPKBaNS3
UGVzq6pxEwszdtGVOM3IX8JtLzyTye0WYzfd/t8th7rnFKHPPKXrFJMTmqZJ
TtZDLA6GLeMydaE6WBWJhXNJm2YHa1cJbd30zLTJZP78cz16vlatWo0qVao8
/exzazduiomL1TyV2og/xMUSFw62zypVi1e7+bv/vd23fzSPn94daufGZ5WO
KSe7v9Bkidy4Rno9e6JB3dD6tY+99PyVK2cJdQCknpMyv/vQaHJFJ6277Gb2
WWLVic2t2EXMiKH7qMVWFuc7Y8aMYsWKHTx40NwPCIIgCJJ7gCly6dKlAQEB
q1evjouLS0tLE5Om0+lMTEyMjo6GdovFwgMf/LczDeOwkPDr5P3+Z0uWOF4g
IKHofXElixzu9Vxo7A0SE+ZKioyLi4q2WNLYsifIGdXqtkdHRybHxyRFRjmS
U7ilBVSPze6Mj0uLvpGYEBdvtaUqmsy1n8PhSEhIgN+FZ5vNJo7nTrfb7fb4
+Pj/2A7Hn5ZujYtLgE6LS4i12FJ1Kn6p/c+S6oiNvJGSEJuQmJyUZhUOgZZ0
R0JiTFwcCdlCWjYIKRFwplRASmBAZOWgPYEl36xVr+MHAz7esm1zusWhsiuW
np4eExMDPxobGwvHIIQQbweg3Wq18oOEdq/j1DxpnGEb2DIqKgquMvSJEIq3
pR16I0faoaMT0xKiE69HJ0TeiI20O8knA2IrBP5dLCCiSMD1MkVC338jJvoa
C8MG7U3r6hGbVb4REx2bFJcYk+C221iZQotO3KmpybERsYkxybFxSQ6Xk1un
NU1JSUmB/vz9998LFCiwe/dugtoPQRAEyZXA9DRq1KiCBQvWrl27YcOGI0aM
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
rAwjWUWqmhWI30PyauETtNdHwnDk1S52npV09NtOTCJZ7F+oIL/tXpgNhuZm
nUbEqJJM3CzLMw09SCfpyTSYmhd3Y8qQpiPmkQxib377x7fdS3h7tWcVv+zb
D0Kf++1PLhR9t/e9LkL6+vYzMWlI3+O/yXYm53hQhoMQp6LJMFbdGolPJmkO
ku4idsmjCzVP0mxT/3gNGN+bCMGYMWOCgoKOHz9Osh7hCIIgCJKDwCyWmJjI
czsT09Tpd2NfVeaZynWjUC9L4ifRnM3UIOVWFVUIE09GDHiwtBiZjkFYe4hJ
yIkZ3Hd+N5sEfY/Qt2St2VTou723TjCZd/ydrJ8kciQLveS33WxSy6Jd0T1Z
/lhyG5oBm9fv0DQbqzrLj1zWWcYSTc+kfrniMi+PiiMxJ3j5x3bNg9/tfS8N
N4r6XhofK7GfdvP+dU+SFr+63fcimtt9TZFGPkOZd6XCeo/2ITeX8poyLp5z
h9XvoMJPkmS3ZP4Jof3Mv24W/8Lw+MEHH9SoUePKlSsk67sYBEEQBMlZYIos
VKjQkCFDxPopMc2/XhKFT3A+JjiNJsZQXfQl85MHdacqEn+r8nK01NbnpiUU
WK1eVrPDe+GMeHSdr07gjWJ7sz70WjU2n5pfKSvO0WyVMhszvVYbiUmVee3Z
d3uz4vJSL0KymvVSFuerqboEIprVdGMCRtI9xijoQ7fi5q9Bxth1Iouf5kvG
XuvXvuuq5nYvscdf8CVgkhm+wOol3ohnqPhun9X+s2r3HWxZbW9eR/a7Xuyv
XZMkl2HUo92n0f9oqQ5V9WSW5L/JkvUZ3W7ej1hfFqfs+xro0aNHrVq1wsPD
CYIgCILkSviUWrdu3WeeeUY0eokTPsXTPMymRvGa6Q3VcKbypL3lJiqev07X
RNVZF5MrMjOveO/Hd31QtBN/Ks7voiQx2X+89JuYuH2lkV/FaP5dXwOU74Kv
eUtfQ6LfYzYLRa+jZWKEdqmsOJka0aj80+G9g/Yzj+1lpYCF9vM9haxOytw/
WXWOsIh69byXfPUSrmYhZDYMms/U3OKr6DRT8RHfExFmt6zaveDOnOxc+bgk
stvoPUVieSlpyDmt9EFt1+yEiEb9/rhbgjhCsX+vszMrXtgGfu7RRx9t1qxZ
UlKS3+NBEARBkNwAzGI9e/asVauWX0e1m4SvThruUqrJaUrnelDzlOdAD6ib
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
M8GhCQkZSD7lZKaEnj+ekhxfUCyQHeS81LjspOuJsdERcdk2YiUzG7KSkhJi
bsTl5ubiqDgMm5mRduFC8LETRy8Eny8sMFEFlZQUHRF+PiQkxGq1Z6YmnQ8+
m2ewYg0sWfMz4kKuRR47G5IUGRNz5VpqThFSK6lJMVcunL5w8bLJShSsgGcq
8hZTZMTVUyePXzh76saNaCtLLFSsnS0ujIuJuHTpUmj4dSRik5JSwi9fSUyM
L7ZaBKpTUeYQAyaVo0hdS7w9JvraxZCwuPhkkhtsdlrS1UsogSF5+YW5eQUx
MbGRkdeTklOJ+lGH3QWRjphTtUY8bnir3RITHX/yxNng4LMpKUmMQ8ASE+U2
b89IjIkMCwm9GMawUmZWfkRkTNT1mJzcfKp1JZfS0cbEGZnPig45/MB/vIj2
Q0m3IVn+p/+8uPQcqyybLFx4+DViArRasmNeeLrx0NGzjaQOIM7+5dR+RXZz
cnLixYtX42JTBSQBOWtWWkx05KXgkEuFRmtyYtK1y6EXz53NLyiykAXg6IOQ
kZ4aGnb51LkLySlp6EEwFOVRqymqw4mxcefOXjxy9OSVyOgCq4WnUpEodvqu
I9MtAAAAAFCxQH23kWEK69dt/nyrzgy2FnFyccHIn37cf+FyPupQSd9ltRgD
N63r/2afZ5u1SC0owqYuu6kwK2X4iDHz/lxy+PCeqVPHfTb4q4Bt+5au2uA3
Y1pSavT4CSN8GzQdPW4aNgExtsOBKz7s061W/UZh0QmoR0yOvjZlxM/PPdP0
s++Grdm6d9G8P59p0vDosYOCLCKB8cOPvyxZuvzChQvbt24c/OnAi5cuK3Yu
bYqWpBjuSDhqJBiZQ5vXPPnIg2ej4ouIAQvLF2L0mzpmdMcXng+/EUNMXYq1
Ti/8FMkhWmUuI3DZjAcerua3ajtZ6kyMi43ymzSuWfNnp8/wDwzcfuTA3nMH
dw35+L1x0xcYONlsMqxfNu/bj9997plmIyctTMzFo9JhIcffeqdPv/feXbV0
EWMxhV+++t33P63ZsPFy+KUVixf+/MOPiakFNkbctWV5726tO3XutnzNpk0b
1/d8pfsHA78wW9nIsFOL5k48c/FiTFzyhaPH+3TvtefoOYskr1w8/bWubTq9
/FpytoXFFkzOnJc9eczIlUuXIGF54fyZaTOm+y9YUWBAupovzEicMvqX555t
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
ZeHxsXJx4fLZfj8M/XbctKnz5y2aN/fPUeMm9nrjrTf7vp+amUNXc8jOzFm2
ZPnKpct27wjcF7QpLOzkh4M++fX3UbuC9sfG3Fjx5+xpE0ZNmjT5z6XrjpwO
U6bfSxaRsZ0/f3HBkhULV6wO2L5t996ggqJCvX8uq1nwyNTEwC3r161aPmP6
1IkTJ86eN3/x8lX79h7BCy6IPCczp4/sXzbfPyO7gFNuW6Z2KpYTtGDCNpvt
wtlTaxfPmTVp9Jjxk6f4L1mwbF1wyKX05IQVC+dP85s8ZfKM+YuX5Rvz9u9a
s3zBlMnjxs2bs3jn7sOsJFt44iRrNwSsWLRx6y6bGqeOBKKWGWvBXweDpi1Y
vCZgV9CWgLDTJ01WC9KQB7aunTNhxJiJU+Yt3bBp0+5is0PCa0eYV65ccObk
kS1rt/y148DewB379u4qshbZedvaxX/O8Zs8fdaC6fMW3oiNEjmbwDjCQq6s
Wr955fr1a1Yu2rB2RWxcss2GjXnZKXHL5032nzlx7JR5/ks2R8ckHDmwd8Gs
iZMmjvGbu2J54CEy8VHES1fI1HomIvWyZOlCdIUp0+esXb/OairaH7B+0exp
YyZPmz5/cVBQUFJ05Kp5M2dMHDdi0uTZy9YlpuTSlUhIJBzs90GWGhENRXkr
Vyzx95+3e1fQvh2b8rJTkFgaMXH6/mMniwpzNy+dtWj6eL9pMyfPWXzi9PnQ
88ErF8yYPmHsaKTe1my3OgQ6hiqrLjwc67AUZqN0LJw5ZejPY0ePn7Vi+eKl
S+f5//nnwiVL/WdMnTF54u9jxweHX0NHRYWHLV84Z+KEceNnLJi3arPBYAjc
tH4OKrrxfjPmLzwVGhKXfGP5ikVTp06fOmXm2o1bbKZ82Z56LGBRrboNlgfs
DdgWtGtb4OL5swICNmeYsbXOYcpd++f0o3/tCwgI3LZj+9YdO/cdOmZjiU1W
chTk527dum3+giWbNm/buGFdZMRVxbDMMYEbN85bsi7PgsfByQKFoP0AAACA
CoGq/VhZMhPRRUPSkkh0kqis/Sqp6yzgCXFkdTA8xon3CT9/vH+fV1IzM7AS
I6uKOVgmPjGh48td9uzbi1fvIkNy6By5ufkmYxHjKOZ4W05ers3OcCxdF4uO
NirL15LVex14jI9sZEU5IyffiINzkJFFsiScNubruq4HR9dmlVTnU5RqjlOm
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
fZ8GWR0JO5sEdwo/Wi3fuHSpw1VPLXbuuKLHUpLq8qMH961Zux7s18ePSS9f
BDqctj938nh6aqbWwOgYeN6KEGszxvDXL0eOn/rjkpUoUhPsnMBmIdXe7s5r
ft/x5GWor9/9oKePDx46dv367RcvX3n43EvOySBx8gqvA0XwtHTr6oUHT19X
cKjbndErarJXLpo9auyUjLwqwb+LL/GfLEL1rEEjuXj+xC8rfnsc+PqGy22l
WqXXaa45nt+4apntsKGrt+x68vZdTlHG0aO7p4yfPG3y7AsXr9bX1/OUuqos
+8CRY/ZnHJ78L/a+Oj6qq1s7r1RpaSkU2kKBttBS+taoUKfuFOpCnSLF3V2D
BXd3p7i7a0JCQojLTCbjPmeOn2/vtfY+cwK0t+/9bt97/+D8pjSZzBzZstaz
7FmrVs2fP3/B0pWeYFSSlFlTJ/3w2UeNGz32U6ceK7btzsw+37tHxxdebPLW
u80GDxlR7nJyjMHSlRHyAkqJ5Gan/tKy7fRZC5etXjd7/oIF8xb+2qbttq0b
iYpf+9tOV1BAljC06yXTj6TxBcGBH1L8GVhoY2g2m43cYcuWrXr37nv6VKqB
NNSmjwghKUF5egzpEbZuX9v0sw+Hjk/ZvOvA6ZOnFsyY2qdz23nTpvjKI8BS
y4qPiDpYtmj+0H7dmr713BOP1P+hdadpC9ZExAQXmRCXEM/rOuvPcjHjxBuv
PDds2FgsiYLHxw6e3OnHJgc5cIgJc3LkkH4/fv5x48cef+G19/oOH79k5Zpw
xD92aL8WnzR9+pkXOnTvP2Xe/ABmQwiSYWakQOqNozRn0IAuLVu2aPz0i2+9
1azP0OQj59JUi+DlJcYW7Mf+Z8kNYDmTMlRr0iscP7C+e8fvnnzmuWZffjNv
/nSvt/STph+njJm0cP6CnTu2LF4wOyUlhYbFmS1DB4GgPmKDM6xO+crCY4cP
/Oy7n+et2ZIyfW4wGil3lwwf3r/5+x89//SLnfv0Ts06t2fnyg6tv3ny6Reb
ffrDlClzwsGQHA+eOnnk13adksdN2rp5y6yZUzdv3hiK0fpUpPBlDPAoI2hK
WEAM28mW+bFN53nzVm3dsHPu5Cnpp4/qhnjwyO5enVs999QT7zVr0XPgWHuZ
m6zbti0+b9SwwY+/dtuy99C+vWu6dPzmiWee/+irn2cvWKZGw0bM0++nb+s8
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
JSq0mTZ7FidIoUXJo+vhWFRavXrL0FFjZsyZvWbFyvnTpndv33b29CmBcDxu
moqAnVz2wllTJ3Tv3Om7777r2q9vcsr4yePHTBk7esTwodNmzSy0OQTWkk05
uGdHpZtuXrTsN5GBzv+mrEvUsiVG0+JiZVLLqtRknvGCh7Jm9fKd2zYaYtiI
R4vzc+rUvX/SvFUh7Y+wn4lzMP5LFl7m+XNzJo3q3uGXn3/t3KHvsGHjpp09
f4Gojy3rls2cMK5Lh/bf/dy21+BRU2bOLyl10DOo1nir6XPDKpiKSvyq2E9X
TJeUcZmrsyJ4qAC0uOYycS+GoRPfq1CfyLGf4gs68wYOG1ngdEOPcnn8uMmP
NGwkxBnJwJ/DfkYiqcAKUzn2U6xheAL8tJChC5oqpp3PGjtx6qQZ0xYtXzh7
1rRBAwb27z88p8AhmN4eMa5TMsHwpmVzxw7p/fnXX7Vs33HcmLEzp06bMGHi
qOTRI0cOP332jECZduA7IjrweQqThlrPgv2gXg8itlAqSGOCdNROnz87anxy
ypSpq1atWTBr3rABQ3r1G3ghrwBiAQoMGnmWmBp2bVwxf/SIgd+3bNPil44T
Js5NmTB9QkryyJEDR49MPnvmAqtxMLypp7bfWvmOMRPnJioREridNVu9fAj/
HeyX+KNlpfEvWz3AiTPqlmAEP4dJWKeZI6bF8euyL+pbtW7t2DEpc2bNXbF8
0fRpE3t06zlzxrxQmNLGGmBIqhC9jXq8c6ZM6tS9w2fff9Gte+9xYydNnDh5
TPKoiSOHz5s57VJ+gcTdgFOmTKp06y3Hz2XB/KKXPuEnx+iFBftZyopZ6iaP
VzLsxwChar4JliwkbFDhkJp6fES/rk3feiN50vwA2BQKzwnR2agCqqfRXiUu
+VUa8Y6vXPPb4OTRf6U8/PeBFhufy21h3YqHrdiPSX5D5Usjgf0s68eyLK8d
147/6PH555/XqlXrrrvuqlu3bu3ate+++27yb40aNci/9913H/mBvE9+uPfe
e48ePfrvnz6hJQlyTE29CEJPCWtxyRD95dk71i+rUu3eVRv2gtzQZVWRdYsL
3apbE0LZiuswwGCYbg2+6RTjsnIqlDO6otAO8nI8HFi8eDFRH1PnLS1z++k5
xYAQdgwc1Ov5V948nZoDF4cgFKW7k4uL8nb+tuKeO2977rV3953KSs/MSz93
NvXY/rFD+z3z1HMz566guk/Hom/IoNb0K7CfYgpMTi+vqGqwpCS7S+eeXbr0
O3rqLMvhEYXMM8fffePVzj36RWRI7GHRLlGJegsupvbq1vX6G24aM3XK2ayM
7Iy0rDOntm1c9/6H773Z7PO03EJaAq8Lg/r1fvrpZ8tcMYXVYv7/YL8ETwg8
gCX9soLUSkQ5VWtclT41uaWAEfcsmrvwuZfeSS/yRn8fjF7VveyyF+ec2tu5
1bdJ11X6rnP/s1n5Pn9YluKOopy0Qztfffbpv1WqlrJg7fnsIkomo1mMaI6I
4GfM2dP+APtxQIA0BVfDfvpV/IH8NJeNTAXAZfDzYz5S4pOUBTQOLOvkPn0e
T9EHTb/uO2CCqDCr5XLMd5W3KjxpBezH4J9quRWNevwkb8TvnDp92rc//rps
9W/ugAtCilpZSWnfnr0+/PCjPLsrgq5sNphiedaJbSvn/e36m7/+pd25c+fO
nz2VkZF5+PDhUaMGNfzXwwtWbQXyXwNKoWi+FuOa0FBjXhZ516JKlGwKPR4i
mzEciU2YMr3FTz+sWLM6GA7FYrTaxWV3DuzTo3mzDy7k026McQacKXOs4+KJ
VQtnJF1f+Yufu5w8m516LuNCZurJY/tH9Ovz7JONZy3cRHvSyc6Rg9o/8Mhj
mcXemHSZkuXw78ohvAz4Xf39hNfXquXZjDNrNFEVbn3wq2A/7vfjC0YxhDhF
GJqaVZjXtXf3jp07nTp1RhCgDZEuZZ469t6rr3XoOcCvQKMN6rmNq5ooi1L2
xcyu3dr987qkqTPmnjxDxuRS6ukTBzat+vKjd5q82yw1z0ab18SjL7/+9net
O8awe4siJWwTdoeKmqAsTrin4O+abuXZ1qzSmGM/c0Pp2J1NCQcch7asefKh
B7/4vqtXQzoFCOJqnMcDGnygtaVo4QJbTucuRB72+YvloXblLP/+kZiyCtgP
/mTawubaqHhma4Q3EcP6d65+7bh2/M8fZAO+8sorN99884MPPlizZs0HHnjg
oYceImCP/EDeIZiwYcOGderUITgwKSnp0KFD/40rmIqyvDyUnDwF0sUpvbtM
xLnqiXlKqt5535rfDiP2M3g9ndmX5CrYz+rJUVkXvCuwn1YB+6kaT4ABxuBY
OHnE8BdfaLL/yImghDFLIkwEXQ2Gw+43X3/jqy+/i8ms9xKTyXL07MGtVW65
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
r0f+f8n/AUYGPxo=
    "], {{0, 386}, {852, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{396., Automatic},
  ImageSizeRaw->{852, 386},
  PlotRange->{{0, 852}, {0, 386}}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"https", ":"}], "//", 
  RowBox[{
   RowBox[{
    RowBox[{"arxiv", ".", "org"}], "/", "pdf"}], "/", 
   RowBox[{"1309.6378", ".", "pdf"}]}]}]}], "Text",
 Evaluatable->False,
 CellChangeTimes->{{3.7707221736781435`*^9, 3.770722197860546*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "ellInversion"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ellInversion", "[", 
   RowBox[{"a_", ",", "p_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"q", ",", "w", ",", "p2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"q", "=", 
      RowBox[{
       RowBox[{"ellInterRayUnprot", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "p"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w", "=", 
      RowBox[{"q", ".", "q"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p2", "=", 
      RowBox[{"p", ".", "p"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", "*", 
        RowBox[{"w", "/", "p2"}]}], ",", "q"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.770722091401864*^9, 3.7707221145100803`*^9}, {
   3.770722221514331*^9, 3.770722552633396*^9}, {3.770722654787421*^9, 
   3.770722695749922*^9}, {3.7707228442630243`*^9, 3.770722858382295*^9}, {
   3.7707229039644737`*^9, 3.7707229351421857`*^9}, {3.770723182130931*^9, 
   3.770723188779403*^9}, {3.7707232583759174`*^9, 3.7707232605700817`*^9}, 
   3.770724208409692*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ellInversion", "[", 
  RowBox[{"1.5", ",", 
   RowBox[{"{", 
    RowBox[{".5", ",", ".5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7707231689710684`*^9, 3.7707231776698217`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.384615384615385`", ",", "1.384615384615385`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8320502943378438`", ",", "0.8320502943378438`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.770723177919154*^9, 3.7707231896540656`*^9}, 
   3.770723285778163*^9, 3.770801116992506*^9, 3.770802488325971*^9, 
   3.770832193638365*^9, 3.7708382343865366`*^9, 3.770842251392562*^9, 
   3.770882445423394*^9, 3.770886466056347*^9, 3.77089453513707*^9, 
   3.7709343878631077`*^9, 3.7709361237440557`*^9, 3.7710256381212177`*^9, 
   3.771159268685856*^9, 3.771675527147423*^9, 3.7721372037078176`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "=", "1.5"}], ",", "ell", ",", "pinv", ",", "q", ",", 
       "fs", ",", "gr"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ell", ",", "fs"}], "}"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"plotEll", "[", "a", "]"}], ",", 
         RowBox[{"getFoci", "[", "a", "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Dynamic", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"pinv", ",", "q"}], "}"}], "=", 
         RowBox[{"ellInversion", "[", 
          RowBox[{"a", ",", "p"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"gr", "=", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "@", "Large"}], ",", 
            RowBox[{"Point", "@", "fs"}], ",", "Red", ",", 
            RowBox[{"Point", "@", "pinv"}], ",", "Dashed", ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{"p", ",", "pinv"}], "}"}], "]"}], ",", "Blue", ",", 
            RowBox[{"Point", "@", "q"}]}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ell", ",", "gr"}], "}"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], "a"}], ",", 
               RowBox[{"2", "a"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Inversion with Respect to Ellipse\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"Black", ",", "Medium"}], "}"}]}], "]"}], ")"}]}]}], 
         "]"}]}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", 
       RowBox[{"{", 
        RowBox[{".5", ",", ".5"}], "}"}]}], "}"}], ",", "Locator"}], "}"}], 
   ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.770722943579604*^9, 3.770723017090183*^9}, {
  3.7707230813923364`*^9, 3.7707231588770494`*^9}, {3.770723197051325*^9, 
  3.7707232327115326`*^9}, {3.770723266450338*^9, 3.770723358368167*^9}, {
  3.7707234536914015`*^9, 3.770723489275179*^9}, {3.7707235791936064`*^9, 
  3.7707235830472765`*^9}, {3.7707236273917675`*^9, 3.770723781423464*^9}, {
  3.77072385163332*^9, 3.770723881904975*^9}, {3.770723916744512*^9, 
  3.7707239877124634`*^9}, {3.770724065297888*^9, 3.7707240669135427`*^9}, {
  3.7707241046977167`*^9, 3.7707241120490694`*^9}, {3.7707269007410417`*^9, 
  3.7707269623748145`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`p$$ = {0.5, 0.5}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`p$$], {0.5, 0.5}}, Automatic}}, Typeset`size$$ = {
    360., {128., 133.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`p$$ = {0.5, 0.5}}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      DynamicModule[{$CellContext`a = 
         1.5, $CellContext`ell, $CellContext`pinv, $CellContext`q, \
$CellContext`fs, $CellContext`gr}, {$CellContext`ell, $CellContext`fs} = {
           $CellContext`plotEll[$CellContext`a], 
           $CellContext`getFoci[$CellContext`a]}; 
        Dynamic[{$CellContext`pinv, $CellContext`q} = \
$CellContext`ellInversion[$CellContext`a, $CellContext`p$$]; $CellContext`gr = 
           Graphics[{
              PointSize[Large], 
              Point[$CellContext`fs], Red, 
              Point[$CellContext`pinv], Dashed, 
              Line[{$CellContext`p$$, $CellContext`pinv}], Blue, 
              Point[$CellContext`q]}]; 
          Show[{$CellContext`ell, $CellContext`gr}, Frame -> True, 
            PlotRange -> {{(-2) $CellContext`a, 2 $CellContext`a}, {-2, 2}}, 
            PlotLabel -> 
            Style["Inversion with Respect to Ellipse", {Black, Medium}]]]], 
      "Specifications" :> {{{$CellContext`p$$, {0.5, 0.5}}, Automatic, 
         ControlType -> Locator}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{417., {162., 168.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`getFoci = 
       CompiledFunction[{10, 10., 5468}, {
          Blank[Real]}, {{3, 0, 0}, {3, 2, 
         3}}, {{0, {2, 0, 1}}, {-1, {2, 0, 2}}, {1, {2, 0, 0}}, {
          7., {3, 0, 2}}}, {1, 3, 6, 0, 
         4}, {{10, 0, 3}, {27, 3, 2, 0, 3, 0}, {2, 0, 12}, {40, 56, 3, 0, 0, 
          3, 0, 3}, {19, 3, 4}, {10, 0, 3}, {13, 3, 4, 3}, {40, 57, 3, 0, 3, 
          3, 0, 4}, {19, 4, 3}, {10, 1, 1}, {10, 1, 5}, {34, 2, 2, 2, 1, 4, 5,
           3, 3, 0}, {42, "CopyTensor", 3, 2, 0, 3, 2, 3}, {3, 11}, {40, 56, 
          3, 0, 0, 3, 0, 3}, {10, 2, 1}, {13, 3, 1, 3}, {40, 57, 3, 0, 3, 3, 
          0, 1}, {7, 1, 4}, {19, 4, 1}, {10, 1, 3}, {10, 1, 5}, {34, 2, 2, 2, 
          1, 3, 4, 5, 3, 1}, {42, "CopyTensor", 3, 2, 1, 3, 2, 3}, {1}}, 
         Function[{$CellContext`a}, 
          Module[{$CellContext`c}, 
           
           If[$CellContext`a < 
            1, $CellContext`c = 
             Sqrt[1 - $CellContext`a^2]; {{0, $CellContext`c}, {
              0, -$CellContext`c}}, $CellContext`c = 
             Sqrt[$CellContext`a^2 - 1]; {{-$CellContext`c, 
               0}, {$CellContext`c, 0}}]]], 
         Evaluate], $CellContext`ellInversion[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`p, 
          Blank[]]] := 
       Module[{$CellContext`q, $CellContext`w, $CellContext`p2}, \
$CellContext`q = Part[
            $CellContext`ellInterRayUnprot[$CellContext`a, {0, 
             0}, $CellContext`p], 2]; $CellContext`w = 
          Dot[$CellContext`q, $CellContext`q]; $CellContext`p2 = 
          Dot[$CellContext`p, $CellContext`p]; {$CellContext`p \
($CellContext`w/$CellContext`p2), $CellContext`q}], \
$CellContext`ellInterRayUnprot[
         Pattern[$CellContext`a, 
          Blank[]], {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, {
          Pattern[$CellContext`nx, 
           Blank[]], 
          Pattern[$CellContext`ny, 
           Blank[]]}] := 
       Module[{$CellContext`c2, $CellContext`c1, $CellContext`c0, \
$CellContext`ss}, $CellContext`c2 = $CellContext`nx^2 + $CellContext`a^2 \
$CellContext`ny^2; $CellContext`c1 = 
          2 ($CellContext`nx $CellContext`x + $CellContext`a^2 \
$CellContext`ny $CellContext`y); $CellContext`c0 = $CellContext`x^2 + \
$CellContext`a^2 (-1 + $CellContext`y^2); $CellContext`ss = \
$CellContext`quadRootsUnprot[$CellContext`c2, $CellContext`c1, \
$CellContext`c0]; 
         Map[$CellContext`ray[{$CellContext`x, $CellContext`y}, \
{$CellContext`nx, $CellContext`ny}, #]& , $CellContext`ss]], \
$CellContext`quadRootsUnprot[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]]] := 
       Module[{$CellContext`det = $CellContext`b^2 - 
           4 $CellContext`a $CellContext`c, $CellContext`sqrtDet}, \
$CellContext`sqrtDet = 
          Sqrt[$CellContext`det]; {-$CellContext`b - $CellContext`sqrtDet, \
-$CellContext`b + $CellContext`sqrtDet}/(2 $CellContext`a)], $CellContext`ray[
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`phat, 
          Blank[]], 
         Pattern[$CellContext`d, 
          Blank[]]] := $CellContext`p0 + $CellContext`phat $CellContext`d}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.770723143220913*^9, 3.7707231599421988`*^9}, {
   3.7707231910802546`*^9, 3.7707232340399756`*^9}, {3.7707232828859234`*^9, 
   3.7707232953605824`*^9}, {3.770723462513853*^9, 3.7707234908629847`*^9}, 
   3.7707235275589*^9, 3.770723584131379*^9, 3.7707236300686135`*^9, {
   3.77072366926492*^9, 3.770723782515546*^9}, 3.7707238875768595`*^9, {
   3.770723921601531*^9, 3.770723948497528*^9}, {3.770723978774351*^9, 
   3.770723988393676*^9}, 3.7707240684105406`*^9, 3.7707241127671547`*^9, {
   3.77072693543578*^9, 3.77072696345393*^9}, 3.770801117026415*^9, 
   3.770802488362873*^9, 3.770832193913657*^9, 3.770838234661832*^9, 
   3.770842251645871*^9, 3.7708824454663086`*^9, 3.7708864663597746`*^9, 
   3.770894535481152*^9, 3.7709343881333857`*^9, 3.770936123771981*^9, 
   3.7710256381601143`*^9, 3.7711592687456684`*^9, 3.771675527437648*^9, 
   3.772137203991061*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"CloudDeploy", "[", 
   RowBox[{"%", ",", "\"\<inversion with respect to ellipse\>\"", ",", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.770723531288575*^9, 3.770723556692738*^9}, {
  3.770723586915938*^9, 3.7707235954710746`*^9}, {3.770723638369463*^9, 
  3.7707236395513*^9}, {3.770724199729887*^9, 3.7707242011062093`*^9}, {
  3.7707269794700994`*^9, 3.770726989802515*^9}}],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
/B3qQn8UQozHh4s+HbHZVCbT4fb2h8RiWvyXublvlJcfb2oq0Wh6GWZeTzcA
AAAAAAAAQELxDqhdMrE99SvDkY+1W1b3Lnu+a+2bbdvWNH26uTc7Sd/S4PRz
LRTalsPhiDqyMzgc3UZjzdDQDqXyPn/G9cPMzNvz8h4Six8Uix8oKbm/uPjp
0tI3y8s3yGRfNDfnqdUtY2P9Fov54iGTY05np8kkGx5O7eraq1CskkpfKi19
QiymxdlCP9Iv6SOqQNWoMi0y5p/ctkirXSuX/zI39ymJZENt7VctLeL+frXZ
PBkwlvOUSvWnsrLAcIl+pF8GDk0dtFqrtdqMrq5N9fWPlZTcJBAsq6nJGxzk
belPMzN/JxI9L5EcaG6uHB52eTxsrzY2l6OaVJ+WomVpDaE/CiHG48Ols9ub
9foSjWarQvFAUdE1ycm3XbjweHHxuzLZmc7OxrGxeT3dAAAAAAAAAAAJZbyx
znb2qPG9l/SvPDb82O8Hfvf/9D/ya82z/6VZ+rju2G5LXbnnG94FMT4+7nQ6
o47sRu32Vr2+tL9/s0Lx+8LCK86fvz0v7yWZ7HB7+4HW1k9bWj5pbt5cX/+u
TPZWaenG6upDjY3JnZ2VWm2/xRK4HhXDFPX3f97cvJMqV1a+Iha/U1m5sb6e
FmcL/fiO/yOqQNWoMi2i8vcHk+v1X7a3v1FevqqyckN19Ue1tRk9PW0Gw2TA
WM7POjr+WyIJjOzoR/pl4NDUHpMpv6/viFJJK3lRInlAJNre0CAdHuZt6fdS
U3+amXlbTs6K2tosjSYw+mNzOapJ9WkpWnbUP9o0xEchxHh8uHrNZnF//4mW
llUy2f35+T9KS/tfAsFvhMJHCgo+ViorRkbm9XQDAAAAAAAAACQUZ1k+s2XF
yH0/H/mPfx75v64Z+T+uGP3Zdwz/749MD/5P20dvu6WiBd4fr9frcrmijuyG
bTalTpff27uhru63BQVXnD//kFh8uL1dZTJ1Ggyten2jTpfS2bm5tvbpwsJX
xOJVUumHMllyZ2fLxf24FKOjx1tbl5aWvioWP19cTJVpEVqQFmcLux6qQNWo
Mi1CC9LivQxTotEcb2r6pL5+g0wW+FGIsZzcoam0V7RvtIdrKypoVwPXw20p
Wx6hal1dOpuNVuLyz3kRYqBuOGN4uWI8PlxsS18Qi+/Lzb05I4Mty6urRf6O
hfN3ugEAAAAAAAAAEoq7ud52/kvT+tf1rz858sR9g/fcPvCnu/tfeFiz8mn9
yX32hqoo1+vzl8jNeWT3SGnpsa6uEZtNa7UOWCx9DCMdHDzT0bG9vn6NTPZy
WdmSoqLdjY1lWq3L43F4PHa32+Z2Fw0ObpHLHxCJnhGLV1ZWUmVahBakxdnC
rocqUDWqTIvQgrS4mmFqh4fzVKoDjY3LKioCe8fp/a+nqxgY2NbQcI+/Y9i3
k5N/kJp6Y0bGErF4l1Ip0WhavunnVqvTHWlufkEsXiaVvi+TBfbW47b0uykp
P87IuDU7+zmpdGps7NAQbWjs4tGvMUZ27LyuMR4fWsn0S+3+Po2Fx0PHn84C
nYu/isUvSqWvV1Y+VlJylz+7e62yMqmnh3fW3RhPd4jpMAAAAAAAAAAA4sir
7R+vq3BcSDId3z+84/2+lS/3fLiyfffG5qN7+guzGVVnNCudyut8f0/tIkxE
5jyye0wqPdPba3O7LePjZpeLcbm6TSaZVputUm1XKJ4qLb01O3tZdXVmXx99
ZHQ69Xb7iM2WpFK9KpPdJBAsEYu3KhRUmRahBRn/GpiL10MVqBpVpkVoQVq8
j2E6DIYGne6z1tbnpNLAd9DRHtLvRb2962kP8/NpD3+QmnqLQHBXTs6LpaUf
y+WZXV01Wu2g1UqVS7XaLQrFfbm5L0okmy9+Jx63pT/OyPiVULikqOjtioqd
cvnXra2lAwN9/spzFdmx87rGeHyYb8I39s1+dPzpLNC5eEIi2ahQJPf0fCiX
P1ZScnNGxvNlZUdbW3ln3Y3xdLMDhwEAAAAAAAAAEorP5fQxxgmd1qKsG84X
9Jw83JJ6Wi7MqpSIO1paxkZ1ka/Rn9dN+Evkqd2cR3bcaVi5k5OyI0mHLBaN
2Rz4ETvQkhax+d8vF2I9bGVaCa2KVkirpZUH7saAxSIbGkrt6HinqupXIhF9
dGNGxl05OU8XFq6QSj+qrQ2cI1U0OLi8uvrmjIw/l5TsVCgC8zRuS9kZWtnC
jgCdq8guRJMjOj5sZZc/Aww8UOy5SO7peb2ykrftc3W62YHDAAAAAAAAAAAJ
xWdhvIN9nvZGc2m+NvVkz6EdbV8dUiZ/XZOT2V1fY9Dyv0PM34nONzkx8fe/
BJiwmL1D/e6OFk9vt3ewf2JUN2FmfBd3jgqx+AJEdmxXsWPfxEQPlpQcaG3t
NBjaxsaaR0cbdbo937xojh1oyXBGZXLXQ4vs8b+Mrtto1FqtgZ3Hln7Ts6tJ
r89RqY4olW+Ul/86N/ea5OR/z85+tKBghVT6XmXlxqqqj2prU7u6GkZHbW53
mlr9UmXlj9LSnvTPA1s/PKwymYz+SVe5Lb0jL2+ZTPZ1a+tOufztioolRUVT
w2yHhmg9Z3p7H5NKY4/s2BfxxXh82Jf1mVwuNcM06HSft7W9WF4e2AWueHBw
Z0PD40VFb5aXb6mt/bypqVCjmTF7RYyne8hqtWDqWAAAAAAAAABIPBNjOk9H
s6uyxJR1Xnt8n2rnuo6DHzUfP6hIOtlbITH1q/kX8/kmvV6fx0N/zszctAPj
9VWOnFSnJH+8rtLd3jwV3JmZmYtPTPho2enULnDx+Y/s2BeysUHWvUVFO5TK
6qGhqqEh2eBgxeAg+6I5dqAl+/q1EOuhRWhBWrx1bGzYag18RdtWufyCWt3H
MKUDA6daWzdXVz8vFt8lFP4oLe23ubkvlpZ+VFu7sarqvcrKFVLp0ebm0sHB
EZvtZHf3n8vKrklOXlJa+mVnZ5/ZzE4my23pPUVF25XKyqGhA83Nz0mlt2Zn
v1lVldLbG5hWxRjZ/f1FfDEfH1qJ3v+SPdqQYmQkT6U60tS0pqoq8EVzDXr9
+a6ujbW1H1RXr6+qWieTnevsbLp42ogYT3eX0Wjw7wYAAAAAAAAAQEKZepdd
faUjJ9l46tDQp5tUG97q3PFe2/5tTcf2aYqFTG8X/2ITEz6Pxzc+PpXaXRzU
uDtbHTlp5k+3WE8dcWSnuMpL3O3NE3rdzMW9Xp/b/ffULnB/5j+yY3HTKraE
s3iI9bCpFzsR6hdNTbkqVaNOJ+ju3qtQLC0tfaKw8Lc5OTdnZDxSUPCuTHa8
qemj2toVUunThYXb6+uzVarAsZxsMubyeqeTMd6ZF6bHe7KDTNmBqOx6Yozs
Ijq84RwfdmrdgwrFztrawMG87AjifQrF6ooKOiz7GhurR0bm8HSHMzcuAAAA
AAAAAMDCc3e3OvLSzAe26jcv1y5/pu/ZB3rffLLnvZe7t60aTj9lbVPyLjVh
NnkH1O7WBneb0t3e6Olo8qg6vP1q7/DQeL3Mnp1s+Wy37fRRe+Y5Z+GF8Zpy
T0eLd3jQ09tFi4zXV9Ii3n7VxNjohMXsG79ozOyl0cuO7UXWazaL+/tPtLQk
dXRkdXcXqtWHm5qWV1Y+IBLdm5v7m5ycO7Ozn5dIdtTXZ3Z1fSyXv1haeldO
zhvl5Ueam6UDA3saG5+QSG7MyHitqkqg0bi8XnaSU25L/1RWdkqlYlyuLI1m
RW3tbTk5z0qlu5VKkVq9vr5+uk6C9LJrHxvT2e1UoUGv/7qj412Z7C2p9G8S
yZKiopXV1XtbW2mvjnZ2blcq36mq+ltZ2SOFhXRY1tbWCjWawGkj0MsOAAAA
AAAAAC5J4w3V1pMHDSuf0f3tIe2jd/bf/bOBR3458Ox9A8seN5z4xKGQ8S7l
HdKM15U7ss9Nlayp4iy64KoUjytrnZJ8e+Y561eHbGe/tKeecmQlOQunPnI3
1LpKhI60k7Yvdjmyzo5XSTy9nRM6rc9muWjNl8S77Nh3tens9ma9vkSjEapU
6V1dZ9va3q+pebS4+CaB4BfZ2Xfl5DyQl7eiouLz5maJRrNLqVwiFt+YkfFw
UdH6mprkjo7t9fV/k0io2ob6+qKhIY8/r/MFiewel0rPqdUuj6dyePhAc/Pz
EsmKysrNtbUHlMoXpdJfCIWJ8y67XpNJ73C4vF6JVrujoeGRgoJ78vLuyMm5
NTv7VyLRf5WU0C49LJHcW1REP96Wk3NzVhYdlufLy092ddEOhBgdjHfZAQAA
AAAAAMAlwFlRzOxaN/LoHcN3/0x72/eHfnrl8O3fH733prEnfmnZu3ZcVsy7
lKez2ZGTZNm7wfLJesvu9ZZd71u/2GNP/sqRn2W/kGJPP2M7f5yKPWmqONJP
Oy6kOEUC2/F95i0rjK/90bJrrSPjlFtZ4+3rnjAZAtd8acwYy1Zm60gHBpI7
OvbW1z8vkdyWkxM4Uezm2tqUzs5Gne6Tb3IwqkDVqPIGmeyt0tJIx4R2Go05
KhUtvrW6+r2KiqWlpQ+IRDcJBIkzY+yQ1TrmcFCFrL6+t6qqbs7I+FFa2jXJ
yVQnRKGD88nFiShmjAUAAAAAAACAS5K7o8medY7ZtU7/3svalx/t/9Ov+174
794Vz/RsWjqSctzWouBdytPZ4sxJtnz6oWXXOvP21cym5eaP11kObLV+8Ynt
1BFb8gm74Jw95aTtzFHbiQP+sp+KZfd609pXDK88Yv54rSPja3dTnVfTM8EY
A9fMG9kNDQ1907/Mx7s/LG6Gw47ctIyPm10uxuXqNplkWm22SrVVoVgiFt8k
ELxRVZWuVtNHRqdTb7eP2GxJKtWrMhl9RBWoGlWmRWhBxr8GJsh6aBFaMLDL
GdvFq2Jo6GRr6waZ7PGioluzs2nH/jUz8768vFfE4r0NDaK+vj6G+ayj478l
Evrop5mZvxOJnpdIXi0rWyaVrq6oON3RodTrQ7eUTasGrdba4eGpl+Y1NLxV
Xv6ASPSLCxd+mJ4eOrL7tUj0bk2NoKtLNjioMpnoiLGFHfTKNifG4zNosVB7
qcLpzs43KypuEwh+JRTeU1DwkFjMLbTPvxAKafHHxeIt9fXULmrdkNUa++lm
B9gCAAAAAAAAACQU75jO3dHkrCg2ZZ4Z/nyPeus7nfu3Np84JE89o5KVGQf4
3+Tv6WpxClOs+zaZd77HbFxmeu9l09pXTe+/btrwpmXfZtuZo06RwJ72te3k
IcvhjyyfbjJ/vI7ZuorqGJc9bXjxD+adax0Zp93NCm9/7wRjumh/OJFdXV3d
wMAA/X46tQvdHN5JGaZHbmqt1gF/UiQdHDzjH3O6srLyGbH4AZFoq0JRMjTk
8ngcHo/dH1IVDQ5ukcvpI6pA1agyLUIL0uJs4a6HFqEFAzMu9kVqMq328+bm
twI6vP1PgeDhgoJVUumxlhb6lHG5TqlUfyoro4++l5r608zM23Jy/lhcvKKy
cp9CIezt7TKZQreUjexoVRqzuUmv/7y9/fnyctrcD9PTv5OSEjqyuzMvb7lM
dq6trbivr2l0lI4YW9gEkm1OjMeHTkSzXl8+MHCkufk1qfQ/s7OfEovfra09
3N7OLevr61+USh/wZ5jvyWR7FYqc3t5O/9GI8XSzLwYEAAAAAAAAAEhMVu3A
iFzWI0xtkhRW1daWtHY1D2h1ZitvZU9XqzM3zbp/i3n7atO61wzLnja8/vjY
iw+PPXs/8+FS28mDrtJ8R+YZ6/F95t3rmU1vG1e/YHhjieHVP4299MjY3/7b
vOM9e+YZd6vSO9A3YZ49suvv73e73dOpXehWcDMcdjBmp8HQqtc36nQpnZ2b
a2ufLix8vrj4VbF4aWnp8dZWxeho4HroR/olfUQVqFrg8FW2hLMeVvXIyL7G
xqf90yjcmJFBO3ZrdvaSoqLAOVLZ9IwtvxKJ3qmqSu3okA0NDVgueulfiMjO
MzHh8noDJ1xgS4jI7pe5uW+Ulx9varrQ01M1NERHjC3cQa8xHh92Ntid9fWv
SCT35uS8S83s7g7cKFtEavUBpZIWZwu7nrk63QAAAAAAAAAACWWCMXo0PeNN
dUxxzvD5L1X7t7QdP9CQfKpGKOiW1xq0Q1TH53b77LYJs2libNQ7POjtV7sq
SuxJxyy71pu3rWY2vm1a95rx3ZeN7/zNuOJZZvNKy4FtttOfWb/cS38x73qf
2fqO6YOlpqkKLxhXPmd8+6/mnetsX3/mLM4Zry13dzR7tQMTBr3Papl0j08F
dk5HYGRHf/b19TmdzvHxca/XG7o5o3Z7q15f2t+/WaH4vX9K09vz8l6SyQ63
tx9obf20peWT5uaN9fXvVFa+Iha/W1m5s77+8+bmov5+FcMErod+pF/SR1Th
XX9lWoQWpMXZEs56WM0GQ3JX1wfV1UtKSqYHxv77hQt/FYt31tYKenraDVMv
9MsbHFxWUxPYKe53hYXUEIlG06LXU9NCt5SN7CZ8Prc/tcsfGlqnUPxKJLo5
O/v7aWlU5/f+FdJSrd+skI3sbsrKur+w8I3y8rW1tR8plYH93HIHBtpNpsBu
aTEenxaDIaW7e2Nt7ZrKyrfKyl4oKdmrVNKngV372FI7PJzW1bVXoXhPJnte
IgnsJjdktTaPjsZ+ugEAAAAAAAAAEopH0+OUFtrOHjUc2Krd+LZ66dPd617v
+OjdloPb+/MyzN1tVGcqrxsb9fb3eTpaxhU1rgqxQ3DO+vke87Z3piK7bWuY
7e9O/Ull6+qpsm2Nefsa80fvmXeuNX/8vnnH2r9X2LyK2bjctGEp/dJy5GPb
6aNT88lKROPyak9X28TI0KTd5rXbXHZbYGRXXV3d29trtVqdzqnxpqGbY3A4
uo3GmqGhHUrlfUVFV5w//8PMzNvz8h4Six8Uix8oKbm/uPgJsfil0tJVUule
hSK1q0s2PNxpMo05nYHroR/pl/RRqj8sosq0CC1Ii7MlnPWw+szm0sHBr9va
lspkd+Tl0Y79IifnxbKygwpFXm9vt3+Yp3R4eHtDQ+Cr5/6rpOTTlpYWvb7f
bDb7J1wI0VI2svP5fBM+n2diQqHXn+zsfKeq6g/FxTf7c0KqSfVpKVqW1jAZ
ENldm5Z2U1bWL3Nz78rPv7eoKPBtclsaGwsGBwNf/hbj8akcGdnT1PR4UdGL
EsmK8vKN1dXnOjrkOl3gC/TYomIY2dCQoLt7S3394xe/jG7AYmnT62M/3QAA
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
WxRUZyqvGx329vW4SkW2kweZTW9PJXUfLmU2LDVvX2PZ+6H1sx22M585spOc
EpE97ZTls4+ncrzdGywHtlu+2Gs7+4Uj67yz+II95YTlCH202rRxuWn9m8b3
XmU+etdymJY96pLkebrbfE6H2263Tw2Mtfb0LJp32cn0+r3t7U9WVOxoaREN
Do7YbIzL5fR46KNes7lkYOB4a+v2hoZlNTW8dSBqdADpMNLBpENKB5YOL50I
Oh2X524AAAAAAAAAwCVjqn/drnW6R+8Yuftn2tu+P/TTK4d/8f2Re28aXfJL
8ydrXbJiqjNhMnj7etzKWofgrGXvh8ZlT5need609jXmw7ctuzdYP99tP/e5
I/O0Iy9jKrLLOm/7+ojl4HbLZ7usx/ZZTx62p33tyM90VRQ5ss9bTxw07/6Q
2bbGtGGZcc3LpvVvMptXmHe8a0/9yt1Q7bOa3VaL3Wo1W209qt7FEtmlajRP
VlRccf78Q2Lx4fZ2lck0YrPZ/LuqGB093tq6tLT0AZHoJoGAtw5EjQ4gHUY6
mHRI6cDS4aUTQafj8twNAAAAAAAAALhkjDdUW08eNK58ZvRvD2kfvbP/7p/1
P/LL/mfv61/6+NjxT+wKGdWZMOg9XW3j1WX21K/MezYY337atPpvpnWvMRuX
m3eutezbbP18t/XzXf7ysfXEPtuZz2zJx22nP5uan+LoLuuXn1i/2m87fcj6
xW7Lvi3MjnXMlndMG5Ya33tlKrLb9LZ52yp70jF3XYXPZHCbmakZY232nt5e
WVV1pJEdO0a1TKfrpGVcrqll/ONPR53OVqOxVKtlC/1Iv5yMeWAjG9k9KBYf
aG3tNBj6zWa93U4rLBoc3CKXPyAS/aGo6LHS0kXRy457NMQjI81G47DNZvpm
n0OMBY7IhM9HZ8fl8dCf9PdIF7eMj2utVjrgdNgfjF9WliC7AQAAAAAAAACX
DE93qzMvzXJg69jm5drlz/Q9+0Dvm0/2vPdy19ZV2vRT1jYl1fGOjrhblc6y
Atu5L8y73jcu/4tpzQum919nNi1ntq0271xr3rOB2brStP5V46q/mPess539
zFmSa888bf1qv+XTjeZd65jtq5hNS5nNy5ktq6a62G1aYdrwlmnta1Nvw/tw
6vf2s0fHq0t9Y6Nuk3EqsrM7enrVsuqIIzt2jOq2pqYLGk0fw4z6F6OPWo3G
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
prWmFefm566k8IDV2m42c4dBk0NTRE8xYLPpRke5izv2WT0pGAAAAAAAAAA+
O+wNdbYL75oP7x/+2Y8Hw57q3+7TtzOwN/IHPS+HD6e/OalR/HmFGzfoM6vX
TUn+OH7isPW3KZMXzk5fuTyZ9Xvr70QTKQnjvz5oOfLzsVf/Y+w/XzTHR5pj
nx9/XXgzfzYve/LCmZtl3njNlp42lZtlr7zmaNHND39sI99iyG58fHwxZLfa
d9m1ms25DJOiUiUplceqqw/L5WcaGq719DBjY++1tv60spL7Ljv6SRfpVkVf
3wW9nmqxn6yWlsr+/m6LpbivL625+aXqavbzZkPD5YWDGNjjU5eG7D5kmLe0
2tiqqn+TSr8ukdCtb+Tl/bis7JhKldHWJl8IIbLnsb4ol8fV1NCtd5ubC7q6
qGWV0VhjMMgHBi62t/+3Tked/lqjOdPcnMcwdMuwcADE0nNdn6uqilIoqHCC
SvWGVnumqem3jY1pOt2bWu2vVKr91dVURlhX9zu9vmThFX+myUmnc7g0ZHdv
dvZjly9/Ny/vF0plQU8PFfgDw/x7ebnTkN2E3T5gtbaMjlLJtxobuVNHP+ki
3aocGJAwDI1wf1XVtwsKqB33Dz74VkEBtXakvp6eaPHRqM3l22keGWkYGuIO
9Vv5+ZEyGfeRX9Nqc7q6qPDAn962R6tGa0fzTOtIq8ltmdaaVpybn7uSwu1m
c/PwMHcYNDk0RfQUtSbTH9vbuYvL/rMBAAAAAAAAAPjfTJdfHfuv2MF/fXzw
iYeMj/wf473rhjZ/ZfQ79499/xHb8Z/PVlxxWutmyO5y5s131r15zPrOf9vS
T1nFImva6xOi18Zf/4XlWOzYL3/GfsZ/88vFyJ5V/MbEiV9ZfhVjPZU8dSnT
rihztDXNj3ws/3R2dnZqamp8fLxj4V12qw3ZdVosJT09Z3S6FJXqsFx+oKzs
DbX6cnu71mQ6p9fHVlVxT4yln3RRu7DFTqzTJcjlryuVb6vVVP1SW1tpTw/d
+m1T0wvl5V//4AP28+OSktfVaqfHp7LxK7avb16+fF92Nt2iv/SdrhxUKLLb
27nnsbK3flZe/lZ9PbWc19Fxua0tu6XliFL5I6mUOt1RWHigouINlSqPYVrN
5o+cnet6T1bWpvffp8LfXdgRR8/+H9evP3/t2rPFxU/m5f3jBx9QmW8XFOyX
yegBaZZorpzO4dKQHdvyT6uqsjo6TDbbmba20LIypyG7kampltHRqv7+kzpd
RGkpd+roJ12kWxdaWn6jUtEIv19Y+M+XL3OzlalZaty08GjU7PLt1BgMdYOD
3KHSY9LDch/5e1LpcY2GCtOoaGw0Qlo1WjuaZ1pHWk1uy7TWtOLcx1lJ4aV5
0OxTfNjZeaimhru47D8bAAAAAAAAAID/zap32S1wdHfMlBfbMt6ZvJg+Jbkw
XXh5uuCDqfycqbxs29m3xl8XmmNfGDv0U8uxV8aTD1nPvHnziIrKkukrH0xm
nbX+7o2pDzJmyotmGzVzvV3z42Pclj9hyK7faq0xGC61tZ3UaOIqK58pLv6F
QnGmsbG0p+f3TU2/qq6OkErZD/2ki3TrD01NrymVkdev/1KhSKuvp+rZra3n
W1rO6fUnqB2FIqK09LmyssiKihdlsgNyeXx19eHa2gsdHQ0L0bNV7bL7vV5/
rbeXex4rFaBiVJiqSBjG6S67n1VVvVhR8Xxp6cmGhgqDwTY7Ozw52Ts+zm3n
nz/88PvXrkUrFC9UVDx97dr3Cwt3l5S8VFlJj/aSXL6noiL4+vVnysqer6jY
L5P9Tq+vGx52OodLQ3YP5OR8Oy8vtKjol0rlhba2xoWTKYIWElqXhuyax8Zy
urqOazS/qK19SaGgGWM/9JMu0q3/1mrTGhqW32WnGhq6wDBU+JcqVWx19U+r
qvbJZD+pqHihvPxlheKoSnVSp/tja+u1hcgqO9Rv5uY+W1p6XKWiR362rOx7
Uik9+KtKJRUu6OlpW4hS0qrR2tEK0jrSatLAaGVpfWmVaa1pxWndy/r7uycm
VliYlru8r487jC1Xr76iVGZ1dJxubDxeV8ddXOyyAwAAAAAAAIC/aHXvsvuT
+aHB2UbNTGnhTGWJvabSrlbO6upmm7SOlsabx1KIjo7+7JmxX0TdTIl95zdT
l8/bq8vnupnZBvVM1fXpq5dn5NdvnhLb2zk/bLox+bEdR58wZDc0Odk4PFza
05Om0+2Xyb6bl7e3rCy5ru5SW9u7Ot3rtbX/WVnJfujnuwsb6k6o1VHl5U8V
FMRUVp5uaKDq51taUtTq2KqqX9XUJNXVndTpTjc2vqvX/6G19aha/Ty1XFR0
pL7+uvHmi/hW9S47xeCg2mTinsdKBagYFS7q6akfGnL6LrvfNDTskcm+lZcX
U139fmen0WbrHR9vN5u57fgXFR2sq5N0dx+rr/9Raek/X7787yUlv6qtvdja
+l5r67stLWl6fXxt7TNlZd8uKBDW1UkNBqdzuDRk5/Xhhz+USg/K5W9oNH9s
aaH5eU2t/n/FxU5DdmVG42ta7fek0p9UVb2m0dCMsR/6SRfp1itKZXpb2/Lv
sqPh0QxT4X1yeZJWm9XRkdHW9nu9/rdNTf+lVr+8EEdNrKvLXthCyQ71yatX
X62tpcmnR05tbDyu0byqVP6sqooKv9XYWL1wdgatGrVMK0jrSKtJA6OVpfWl
Vaa1phW/uf2ypaV+ZGSFhd/SaqlH7jA8JZJ/LS7+aVXV4dpakVbLXVy8yw4A
AAAAAAAA/qLVnRjL1rJOzA32O9r1jq72ud7uOUP/vHn0xuTkR/M37DUVE2lJ
I5EhY8J9E6Kjk+fFMxXFc90dH83Pz1vMc31ds831js62ucG++bHRGzbrjVk7
t+VPGLJjw01sQmtoUdFBufyMTvdOff3bavUbKhX7oZ90kW5RASrGTXVkM1t/
LpOJGxur+vvrjMam4WFuIip7KuiqToxdGhBbyWGpbBfUNQ2AhtE6Otr08fen
sQfgsmfjsi1TSSrvdPDLzCHbMptOe66x8Xxzc3ZLS5xCsaWw0Onglw6V/axk
6pa2wyaZ9lgsrQuHTbCLy64XO1S2U3pkWjJuXu1L1dWF/f1OR8gWprWmFad1
P6ZSlS2ENFdSmM2wXppKvDTTFgAAAAAAAADgL7oxYZnr73botePlVw3Z6R1p
Sc2/T62/eK4m71K7qmbU0O+81vTU/Njo3GD/vGlwfmToZrzOar1ht988meLm
RruL428csf7+ranLmTOlhbON6nmTgW7dmLRRYepuzmT4n3jdzPRHH99x9AlD
duwb3s60tOwuL9/0/vtP5uc/d/36kerq5NratzWad3U69kM/6SLdogJUjApT
FarIPasisrz8VENDjcHQMDTUOTZGjb/7p9e4sUcMLD2LYVUhu5DS0tMtLdwj
D+gpTJOTnRZL3fCw1GCginFq9daFXW07rl9/q6mpdeHkhcaPn7zwP6eUzs0t
Pc6VSlJ5bhbtqkJ2AVevHqqtvcIwf9Tr39FqX1epdpeWeuflcbtoN5sHrFbu
bNAs0VzRjLGflUzd0na+XVi4v6bmTFsbzRKNn4pFy+U7ioudhuzYTmmxaMlo
4d7U6Z65fp0W9yeVlRc7O52OkC1Ma00rTuv+c4XiclfXCgu/WFHxu+Zm7jA2
ZGW5XbxInT5bVvZOc3PT8HDfxMQ4QnYAAAAAAAAAsDLzIyZHS8NMVcmY5I+G
M28yr/+i5e1fN5x5W30hvbOydKy3y3k1h+PG9NQN68TNsNvk5M3vdvtHc3Mf
3fhozmiwa1XT0ryZquuzGqWjrWnO0HdjYvxmyG7WfmPKNj8+drMWVZm134zX
zc9zG/6EITv2HNX09vYfV1Tck5X16OXL/CtXIktKfiGXv6XRZLe0sB/6SRfp
FhWgYlSYqlBFqv5eR8cemey+7OynF14fVzc42DY6OmizcfewsaE2+kvfbzlk
x8avbj7ewmyYJicbhodLenp+p9cL6+qo7tbi4ocW3on3/ZISUWNj0/Bw49CQ
7uMhu6dlsqzubsf8PP2l79zxUEkqz82iXVXIjv6e0Ok0JlNOe3tyXd2+0tKn
Cgv/6dIlbhfNw8PtZjN3Nthdf+xnJVO3tJ1Nly9/u7AwtKzsB6WlO0pKqOST
hYX/NzfXaciO7ZQWi5aMFu4NnS60pIQW9+myst99vNOlhWmtacVp3XeVl59t
bV1h4WdKS1MbG7nDcLlwYUNWFnX676Wlp5qbW0dHDX86rxYAAAAAAAAA4C9a
eJdd1VRelvkPqQOio8zh6NakV5tP/pfu3Td7ruVbOttW2+CN6el5y9iccXB+
ZJi+ON1Kt4xPGLJzzM/PzM1xo0NLz2NlP/STLnLPdV0mt3RpwiZ7a2mK66pC
dkujZ+y5t/tlssXTGdjPSrpYVaLuUktHuPT8U3bGVtXFrU3d0s/StNNVJSDf
gcLsh02nNS7Ee1f4vwAAAAAAAAAAPuccbU1TBdkTJ18bOfJzw893d0d8v3N/
WMerL7b9V6wh5w/W5vrVNnhjdvZmAqxlbH5igr7cjNfNzn40P7fS8TgcU1NT
ExMTHR0dCoVitSG7+Rs3Zheidh/09Pykquq+7Ox/zMnZ/MEHiymuaQ0N1QMD
7CftT4mNVICKUWGqQhW51e/ALjv21v8M3uGoNpl+29y8XyZ7vqLimbKy4OvX
fa5cuf/ju9ruZMiO3Qco7e39dV3dvxcWPpGb+0BOzp3ZZUcPTo9PkxBaVkbV
aeQRlZU/qaz8aVXVCa320sfPffiM7LK7Nyfnsdxc7qEV1wcGmPFxx/w8rTJZ
xf8oAAAAAAAAAPj8sasV1rNvjv782aE93zf84Ik+/0f6fuDbF/FUX8zTI2dT
ptTyVbc4N3czajc9fcM+Q18WUl/nPlpxjMLhcExPT1utVoZhbiFkd+PGjfkb
Nxzz84V9fbE1NdxwXHhZ2W/1+tbRUfZDP+kiN6xHVagit/odeJcde2t2fp6e
kArk9vTE1dZ+u6DgmbKy+NraNL1+r1zus3Dy7JqE7P7nLXkOR6XB8JZW+9y1
a4H5+V/74IM78y47enB6fJoEqp7R2UnDzu7uvtjZmdXRcaW7u3Jg4DP4LrvH
cnN/VFp6uLY2vrr6gFz+okyW1twsN5lm5uZmF6J2q/gPBQAAAAAAAACfPzOy
YkvSQVPI/zX6Pzz4uJvhgb8xev+96XuPDD/zxMQbv5iRX7vD43E4HDMzMzab
rbOz8xZCdqwyg+GYSsVN4WSzO9nPmT9FkNjkWfacULb6HTgxlr01s/AiPu7A
2LRKttM1CdmxhdVDQ2eamg6UlX2/sPCfL19ePnH40zoxdmluKTtR7Bmyn7UT
Y79bVHS4tvZqZ+fravWPS0qo92iFQtLdTeOfmZtzfPz9jQAAAAAAAAAAf2ZW
r528lGFJ+s/h+L2Gnwh6BAFdzwUzB8Lbf7Gv7720EVXV5IKpO2ViYsJsNg8N
Den1+srKytzcXIVCcQshu2qj8S2dLkIq/W5+vsfCfjB2Zxf7YTdQUQEqRoWp
ClWk6vUjI+daWmKrqn5VU5NUV3dSpzvd2PiuXv+H1tajavXzMtl3i4qO1Ndf
XyjMRnXYsyHYz9LjHsZnZvomJpzeYnfZ5XR17Vco/vny5dCSEmFtLXV6oLr6
icLCFXaxqvEstcwIm0dHP+jo+LVSuev69W/m5nK7YE9ELTMaX9NqvyeV/qSq
6jWNhgbPfugnXaRbVKBsYequ9PfH1NTQkwZJpT9TKFIaGi53dzeazTMOh9Rg
oBnmtpPZ0XGhq4tGUtDXVzYwoBwcVBuNuo8fq/Hk1auv1tZ+yDDvtbamNjYe
12heVSp/VlUVUVr6VmNj9dAQdUqrRi1zs1ZpZWl9aZVprWnFb4bgWlro38AK
C6fqdPmdndxh/Ou1a//d0FBvMqXr9S9VVX03L+/nVVVn9XqVycRYLGYcHQsA
AAAAAAAAy5ofNs42189UFJsvZQ6IRR3Hf9H8xrH6U/+tPJvWVPhht1Y9PDw8
smD09qNejEZjf39/V1eXVqutqKjIy8tTKBQdHR2rDdlph4ff0+v/s7IytLjY
a+GsVTa7k/3Qzx8tvFqNClAxKkxVqCJV756YKOvvP6fXn9Bo4hSKiNLS58rK
IisqXpTJDsjl8dXVh2trL3R0NJjNH3FCZDuuX3+rqYmbe0s/d3x8X9mE3W6w
Wp3eYt9lVzIwkKhWf7+w8N+l0t2lpdTp9qKif1rY1baSLlY1nqWWGWHX+Pj1
3t7fNzZGV1U9sXAuBtsFeyJq89hYTlfXcY3mF7W1LykUNHj2Qz/pIt2iAlSM
ClcMDtJPetKgoqIgqfRfr107Ul9f2N9vmZlRDQ1dYBhuO8/LZLtkMhpMXG3t
mzpdTmurtLtbaTBwh/rN3NxnS0uPq1QvyeXPlpV9TyrdU1HxqlJ5Uqcr6Olp
s1ioU1o1Wjtu1iqtLK0vrTKtNa04rTutPv0bWGHh/M5OxceHsZhFO2izXenp
+XVd3TPFxS/LZCfU6ky9Xtbf37PQMgAAAAAAAADAcm7coM/E4EB/vUpflFd3
7Wpl6fXiCplCVdeo1/f09PT29vb19fXfZn0LOjs729rampqalEplaWlpfn5+
dXX1LYTsWs3mPIZ5Q6V6vrT0W3l5yx9gSgWoGBWmKq0LUTg2OfS3TU0vlJd/
/YMP2M+PS0peV6uvdnbWm0yDNttHq0wFtc3OGm02p7dYbP7pM8XF383Lo043
vf/+PVlZq802XUnhpZYZIT0vPTU9++Ha2u8WFTnNWh2ZmmoZHeVmpLIf+kkX
6RYVoGIfOcu0ZfOXqU2af2477CSw65XV0lLR18cd6j9+8MGTeXnPFhfT339c
2F35Pan0uEbD7ZR9CjZrlf2wR9Cy+bkrKdw0PNw6Oup0xtgHjK2oEFZWJsjl
Wa2tjQv79wAAAAAAAAAA/oIbNybNo0NMe3ddTWONorqq8lp5hUyuUKpUWq1W
p9M1NDQ03k4Nf1JfX19XV6dUKuVyeUVFxfXr1+lKb2+vzWabnp52OBwrfCCD
zaYyGvMYJrWx8T9VqrDKyjf0evnCDjoW/aSLdIsKUDEqTFUMC1G4ydnZocnJ
bouluK8vrbn5pepq9vNmQ8PlhXhdl8UythDVYdtJamws7O/nHrhAP+kit/fp
hfewOb3F6hwfL+nrO9PU9IZWm6BSUadRCsVzVVUr7GJV41lqmRHS89JT07Nf
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
AIDPl6XvsltMjLXZbEiMBQAAAAAAAAAAuPOWnhgrEAjS09PNZrPNZrPb7Ws9
QAAAAAAAAAAAgM8Xg8GgVqsLCgoOHz68bds2V1fXHTt2nDhxQqVSMQxjNpud
1pqenrZYLEajcWhoaGRkhIpZrVbE9wAAAAAAAAAAAD45i8XS09Oj0+lOnjwZ
GhrK4/G2bdt28ODB7OxshULR29v7v9Xq7u6mWs3Nza2trQzDGI1Gq9V6hwcP
AAAAAAAAAABw97Hb7TabzWw2nz9/fvfu3W5ublu2bImMjExOTpZIJHq93mkt
o9Go0+mkUml5eblcLl9+Sx4AAAAAAAAAAACsnMPhmJ6ettlsJSUlSUlJAoHg
ueeei46OFgqFaWlpEolEpVKp1er6+nqtVtvQ0NDU1KTX6+lnTU1NeXm5Uqls
bGzELjsAAAAAAAAAAIBPy/z8vMPhsNvtzc3Nubm5IpHotddei4+Pj4qKEgqF
ycnJYrH47Nmz586dy8zMzMrKysnJkUgkhYWFpaWlcrm8sbGxp6cH77IDAAAA
AAAAAAD41JnNZoZhVCpVZmZmQkJCWFhYREREZGRkVFRUTExMbGysUCik64mJ
icnJyenp6QUFBciHBQAAAAAAAAAAuH2sVqvRaGQYRiaTZWVliUSit99++9Sp
U0532ZWWlqrVauTDAgAAAAAAAAAA3D52u91qtZrN5p6enoaGBrlcXl1drVQq
nb7Lrqury2AwIB8WAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO4+U1NTIyMjvb29er1epVKV
l5fTX/pOV+g63V3rAQIAAAAAAAAAAHy+jIyMtLa2KhQKiUQiFosTExPpL32n
K3Sd7q71AAEAAAAAAAAAAD5fent7FQpFdnZ2cnJyVFQUn8+nv/SdrtB1urvW
AwQAAAAAAAAAAPhcmJ+fdzgcdrtdo9G89957QqHw+eefDwoK8vb25vP5ERER
cXFxJ0+evHz5skqlYhjGbDav9ZABAAAAAAAAAADuZg6HY3p62mazFRUVHTly
5Kmnnvr2t7+9efNmd3d3T09Pb2/vLVu27Nq169ChQ2KxuLi4mGGYtR4yAAAA
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
AAAAAADcaQaDQa1WFxQUHDp0KCAggBtPc3Fx2bBhA4/H++EPf3jy5MmGhgaF
QnHt2rUPP/xQJpM1NjYODAxIJJJf/vKXfD4/KChox44dwcHBCQkJdLG3t5cK
Z2dni0SivXv3+vn5Oc2QpYvu7u6Lp1fExcWJxeLCwsLm5mabzTY9Pe1wONZ6
egAAAAAAAAAAAO40hmGkUqnTk15dXV15PJ6bm9uzzz6bnp5uMBiampoqKyvz
8vLq6uoGBgaoukqlWqwrEAi2bt3q6ekZExNTUFBAt8xmMzVOBUQiEd1dYYZs
ampqeXk51bXZbHa7fa2nBwAAAAAAAAAA4E7T6/USiSQ5OTkiIsLb25sbRtu4
caOHhwddPHDgQHZ2ttFobG5uXgzZqVSqgYGB+fn51tZW+ikSiaKiogIDA93d
3Xft2nXmzBmGYTo6Ojo7O+kLtZ+YmBgWFkYFvLy8nMbu2AzZ/fv3p6SkUJXq
6ure3l5kyAIAAAAAAAAAwOeNVqvNzMxcfOmcl5cXN4y2adMmHx+fkJCQo0eP
5ufnm0wmvV5fVVWVl5dXW1vb398/Nzc3MDBQV1dXUFCQkJDA5/N5PF5QUNCx
Y8ekUqlKpero6DCbzTqd7sqVK2KxOC4ujlrz9PR0d3enkk4zZNl34p09e7a6
uhoZsgAAAAAAAAAA8HnDZrby+XxPT0+nyapvv/12aWnp8PBwS0uLXC5fDNn1
9vbOzs5aLJbBwUGGYdLS0oKDg9dxjo6VSqV0nbqwWq0mk4m+nz9//sCBA1SA
WnZzc3OaIUvX6S6ViY2NlUgkyJAFAAAAAAAAAIDPG5lMlpSUFBIS4uPjs2nT
Jm70zMvLSyAQCIXC9PR0hUJhNpvb29vpS15eXk1NTVdX1+Tk5Pj4+OjoqMlk
ysjI2LNnj7u7u5+fX3h4ONXKzMzU6XTUxfT09NjYGJUpLy8Xi8WxsbE7d+6k
7pxmyLLb7ajMsWPHJBJJVVVVW1sb9W61WhG7AwAAAAAAAACAu15RUVF8fLy3
t7eHh8fGjRu50TO6GBERkZyc/P7772s0momJCYZhqqur8/LyFApFR0eHxWIZ
Hx+3LsjNzX355Zepir+//44dO8LCwkQikVwupy4cDsf09DSV6ezspIoSieTY
sWM7d+50miHLnnnh4+NDZWJjY0+dOkWDpK6NRiM1stYTBgAAAAAAAAAAcHtJ
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
lo+OZVHhsbExk8nEHke7c+dOehCnGbLsdjsqc+zYMYlEQgOmkTs9VgMAAAAA
AAAAAGCtFBUVxcfHe3t7e3h4bNy4kRvjYo+NkEgker3eaXWbzWYymTo7O7Va
bWVlZWFhoUajGRwcpFtNTU05OTmJiYmRkZGBgYEPPfTQ/v378/Ly6FZ9ff25
c+du+ehYlsPhoMJWq5UGoFAoaJzHjh3buXOn0wxZ9jQNHx8fKkO9nzp1ih6f
YRij0bjywy8AAAAAAAAAAABuK4lEEhkZ6XRbmq+v72LKqlQqZRjGafXJycnh
4eGenh6dTldRUZGXl1dXVzcwMPCRs7Now8LCsrOznd66taNjWXa73Wazmc1m
epzY2NgVZsiyCbnUL9X9hDMJAAAAAAAAAADwSbAnOGRkZISHh/N4vA0bNri4
uHBDWwEBAYcOHVr+ONepqanR0dH+/v7GxkaZTMYN2dFFpVIpkUgOHjzo7+9P
DYaGhp45c8ZoNLa0tCgUCmr58OHD27Ztc3V13b59+9GjR6VSqU6nW8yrXZXF
7XY2m416PHfunFAojIiICAwMXP5AiqCgoOjoaJFIdOnSJY1GgwxZAAAAAAAA
AABYQ1ar1Wg0Mgxz+vTp0NBQV1dXFxeX9evXc0NbQUFBKSkpOp2up6fHYrE4
bWd6eppuUVPNzc2VlZXckN3IyEhra6tcLj9+/Pj27du5DbJOnjxJvfN4PH9/
/+jo6OV39C1jfn7e4XDY7XbqWqPRUCNpaWkxMTF8Pt/b29vd3d1phuzmzZuf
fPJJgUBw5MiRS5cuIUMWAAAAAAAAAADWkNlsZhhGpVIlJyfz+XynCaQCgSA9
PX35k1VnZmYmJiaGh4dbWlrkcjk3ZMce55qWlhYcHEwNBgYGJiQkSKVSNhf1
/Pnzu3fvdnNz8/X1DQsLW/6oi1VZ5iTcpbE7elKRSIQMWQAAAAAAAAAAWENL
s1aXBrL27Nlz8eJFm822zCmuiwm2o6Ojixvq8vLyqNne3t7FUJ7ZbDaZTNSL
UCgMDAx8+eWXz507p9PpFt9ZRy3n5+fHx8f7+vrS3ZCQkLCwsJSUFJlMRs1S
j/Pz87f8gNRFcXGxWCym9kNDQ728vB544IF77rmH+6QuLi4bNmygh/Xz89u7
d69IJMrKyqLeF7fb0fBuuXcAAAAAAAAAAIDVam9vLywsTE1N3bt3r4+Pj9NX
vUVHR+fm5i4fPWPPfaAGFQpFXl5edXU1wzATExNWq3Xxb11dXWZmZkJCwrlz
56qqqoxGI/vWOJlMlpKSEhYWFhISEhgY6OvrGx8fn5+fv3yccCXYbYQZGRmH
Dh0SCARPPPHEAw88wH3S9evXu7i4uLq6enh4+Pn5URnq/Z133pFKpVqt9hZe
qQcAAAAAAAAAAHDLtFptZmamUCgUCAReXl7cQBZ7oCrdlUqly7czOzs7OTlp
sVg6OjoWQ3ZyubylpWV4eHhiYmJmZobKGI1GnU7n9GgJdhhhYWHUI3W9e/fu
8+fPL5+N+2k96dKNhYGBgTExMbf8Sj0AAAAAAAAAAIBbplQqT506FRkZuW3b
tocffpgbv7r//vt9fHxCQkKSkpIqKiqWb8fhcMzMzExOTnZ1ddXU1DgN2Vks
lu7ubp1OR3//7BiLzs7O0tLS9PT0V155hUbi5uYWGhp64sQJaqS1tXVkZOST
Pyl1Sk+RmZl59OjRXbt2+fr6enp6UkdOM2Qff/zxHTt2REVFiUSiK1euIEMW
AAAAAAAAAADumIqKiqSkpJCQEB8fn/vvv58bv3r44Ye3bdsWGRl56tQppVK5
fDuLR7XOzs729fXV1tY6Ddmxp8rSX/rOrc6eKnvixInQ0FA3Nzfq+pVXXklP
Ty8tLe3s7PzkT7oYMNRqtZcvX6ZenB5IwWbI3nvvvY888oivry89vkgkQoYs
AAAAAAAAAADcMVKpVCgUOt1y5uXlJRAIVnt468DAQF1dndOQ3TLYV+HdvqNj
WQzD0FMvHiNLvTjNkGVRASqGDFkAAAAAAAAAALjdFjfF2e323Nzc6OhoT09P
d3d3Ho/HjVb5+Pjs3bs3NTW1sLCwvb19hS2zIbvKysqmpiaDwTA2NjY1NbV8
LRrM9PT0bT06lmU0GrVarVQqPXny5L59+7Zs2fLoo4/ed999rq6uLi4u69ev
504CzQyfz4+KikpOTn7//fdVKhXDMGaz+ZMPAwAAAAAAAAAAgIsNkV28eHHP
nj1ubm48Hs/V1ZUbrfL39z948KBEIlEqlf39/StsmQ3ZVVRU6HS6np6e4eHh
ycnJ5WuxIcTbd3Qsi5oyGo0MwxQXF586dSouLk4gEHh7e9MMbNiwwcXFhTsJ
7Bkci1v+xGIx1cJ2OwAAAAAAAAAA+NSxiajp6ekCgcBpTiifz09OTl7tvjI2
ZFdeXq5Wqzs6OoxGo9VqXWH1O3B0LKu3t1ehUGRnZ1N39LBO45ZLt9uJxWKa
k09xGAAAAAAAAAAAAB8tnMXQ09Oj0+lSUlKCgoKcHsEQGhp6+vTpxcNSVx5z
W0w7LS4urqqqqq+vb2trGxwcnJiYWGF19kVz0dHR/v7+PB7vBz/4AQ3ydmSk
Lp55oVAo0tPThUKhQCDw8/Pz8PBwmiHr7u7u7e3N5/Pj4uKoPI2nvb19aGjo
U8zYBQAAAAAAAACAzzODwaBWqwsKCg4dOhQQEMCNTbm4uGzYsIHH44WHh2dk
ZJjNZqvVuvLtbUNDQ83NzeXl5TU1NVqttrW1lfpaecjOaDTqdDqpVHr06NHt
27e7urrS8OLj47OzsxUKRW9v760+sRNTU1MjIyPsXjuRSLR3714/Pz+nGbJ0
0d3d3dPTMzg4OC4uTiwWFxYW0pN+ihm7AAAAAAAAAADwebbMqamurq48Hs/N
zS0yMlIikay25ZGRkfb29urq6rq6Op1Op9frBwYGxsfHV1jdarWaTCYaXlpa
WnBwMI3H29s7IiIiOTmZBkOtrXY8K2E2m6lHlUolEokEAsEKM2RTU1PLy8tv
R8YuAAAAAAAAAAB8Dun1eolEkpycHBER4e3tzQ1Jbdy40cPDgy7Gx8cXFRWt
tmU2ZKdSqbRabVNTU19f38pDdtPT02NjYyaT6cKFC/v27fP09Ny6datAILit
L5GzWq2LB1LQnCQmJoaFhQUGBnp5eTmN3bEZsvv3709JSaEq9LC9vb3IkAUA
AAAAAAAAgE+CPeVBIBB4eXlxQ1KbNm3y8fEJCQlJSkqSyWSrbZkbsquvr29s
bOzt7bVYLCusvniUrdVqLS4uPnr0KJ8jMTGxrKxsteNZCbvdTj2azWadTnfl
yhWxWBwXF0cz4Onp6e7uzuPxnGbIBgQEhIeHx8bGnj17lp4XGbIAAAAAAAAA
APBJqFSqxaxYPp/v6en5KR6NyobsamtrNRqNTqfr6elZechu6QgFAsHWrVtp
VDExMQUFBattZ1XYtNzz588fOHDA19eX+nVzc3OaIUvX6S6ViY2NlUgkyJAF
AAAAAAAAAIBPQiaTJSUlhYSE+Pj4bNq0iRuJ8vLyEggEQqEwMzNTq9WutmWz
2dzZ2VlXV6deoNFourq6xsbGuGXm5+cdDofdbh8aGmpvb1epVIunVFitVnaj
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
AAAAAIfIxsbG2tra6upqXV1ddnY2m81msVgMBsM38xMZGZmVlVVaWtrU1GQ2
m/cjDCpl193drVar5XJ5f3//1NTUfjxrfHxcpVLV1tbm5eXFx8fT6fTExMTL
ly/LZDKTyXTAd6NRfW+vXr167ty52NjYd95554033iCjoNFoISEhvgtHVpPH
450/f14sFt+9e1en01kslr1t6gEAAAAAAAAAAHtubW1teXnZ5XLduXPn7Nmz
TCaTwWDQ6XTfzM/JkycvXboklUo1Go3Vat2PMKiUnV6vb29vb2lp2b9aTqoN
a0lJyb/927+R8ZIBZmdnH4rdaFTfWzJF5eXlubm5fD6fw+GQUYSGhtJoNN+F
o/qGCAQCkUhEBkiuOuADBAAAAAAAAACA1dVVl8s1NzdXVVXF5/P91lfyeDyx
WLyve7SolJ1Wq21tba2vr9fr9eTIfjyLGvLNmzc/+ugjJpNJJbX2r/J3z1F7
BUnYZIH85lo3b7c7+L1xAQAAAAAAAADA4XCMjY2ZTKaSkpKkpCS/7QxSU1Ov
XbvmbTy6T596c7lcdrt9eHjYYDDI5fLtpuyWlpZmZmbGx8dJkAMDA0ajcXR0
lAzN78nUxsIHDx7k5eVFRUVxudyUlBSBQEAmQaFQrK6uknM2Njb2bnx7j4x3
aGhIpVJVVVWJRCI+n/+LX/zin//5n3/84x//6Ec/+vu//3vfpWSxWBwOh8fj
5ebmkvN1Op3ZbJ6amjoUIwUAAAAAAAAAeNlMTk52dXU1NDTk5+fHx8f75nlo
NFpoaCiDwUhPT6+urp6bm3M6naurq/sRxtLS0uzsrNVq7e3tVSgU203ZUfkr
mUwmlUpramra2tpGR0f9nkx9vo88qKSkRCAQpKSkcLncqKiovLy8Bw8euFyu
5eVlcs7ejW/vUVlK7147iUSSlZUVHR39yiuv0On0H/3oR75LSRaRxWKx2ezk
5OTc3NyKioqmpqb+/v5DMVIAAAAAAAAAgJdNgA6kdDqdwWAwmczMzEypVLqv
YaysrCwuLk5PTw8ODiqVyu2m7KjMFRmIWCzeYokrOYGcRk4WCARk7GSkH330
0c2bN+fm5lwu1z4lJ/cc9Wm+//zP/0xNTf2Hf/iHV1555cc//nHgCtnS0lK5
XH64RgoAAAAAAAAA8JIYGBiQSqVisTgjI4PD4fimd8LCwsLDw8nBvLy85ubm
fQ1jc8pOq9U+ffrU4/FspXJzbGxMoVDU1NSQgeTk5PD5fPKDXC4PXPg5PDzc
2tpaVVX12WefJSQkMJnM1NTU4uJiEsDQ0NDMzMw+DHTvLSwsWK3W/v7+6upq
MpAPPvjgX/7lX372s5/94z/+409/+tO/yt1RFbIXLlwoKSkhS69Wq8fHx1Eh
CwAAAAAAAABwcFA7zfh8fkREhG965+jRo5GRkSkpKUVFRQqFYl/D2Jyy6+zs
HBkZcbvd5Fd/s3KTnOlNvlEDuXjxolQqDVz46S2nJY8rLi5OTU1lMpkJCQmf
ffYZuQ+52/Dw8D4MdO+RKSLzNjY21tLSUlpa+pvf/Ob06dNxcXE/+9nP/umf
/umnP/2p3wrZ+Pj49PR0oVBYWVmpVqtRIQsAAAAAAAAAcHDodDpvVSyPx2Oz
2cFqM7o5ZadSqZ48eeJwONxut8fjCXz55vJePp9fVVUVuPDzxWgdS00dCbix
sfGbb7753e9+d/r06Z///OfevXZ+K2TJYMn6kvEKhUKpVIoKWQAAAAAAAACA
g0OhUBQVFaWkpERGRh49etQ3qxMREcHn859P/srj8bjdbofD8eTJE5VK5U3Z
mc3mLaaSrFarRqORSqWXLl06efIkCf7UqVNXr14dGBiYmJhYXFz0e1WA1rES
iUSpVO7DQPee0+m02Wxk3nQ6nUwmu3v37rVr165cufLpp5/+6le/+td//Vcm
k8lgMOh0ut/tdmlpaYWFhWTqOjo6Hj9+vK9NRgAAAAAAAAAAYCuam5vz8vI4
HE54eHhYWJhvVocczMjIEIvFUql0YGBgX8PwtnB1u90jIyOdnZ319fXeD8rN
zs5uJYNElbh++eWXiYmJJPiEhITCwkK5XN7f3z81NeX3qgCtY0UikUwm24eB
7r25ubnh4WG9Xk+G/5e//IUsaGNjY11d3f3793//+9+npaWx2WwWi8VgMHwX
l+otEhkZSc4RCoXl5eXkWovFYrPZyJwHe1gAAAAAAAAAAC8vqVSamZnpdyNW
VFSUtypWJpNZLJZ9DWNjY2N9fd3j8YyPj2u1Wm/KbnBwcHp6enFxcWVlJfDl
TqfTbreTIMvKypKTk0nwsbGxubm5tbW1KpWK3DPw5Ztbxz6HJrl7hQy8t7f3
0aNHcrm8o6NDrVb39fWNjY3Nzc2RIQiFQjIiNptNBhW4QpaqgCbTSK4N9rAA
AAAAAAAAAF46q6urTqdzbm6uuro6PT2dwWCEhobSaDTfZE58fHx+fn5DQ0NX
V9fk5OS+xvP999+v/8BqtXpTdh0dHQMDA3a7fWFhYXl5OfDl5IT5+Xly8o0b
N86cOcNkMknwFy5cKC0tbWpqMpvNgS+nPoWXnZ198uRJMhtpaWnXr1/3bjlz
uVx7N9A9463qJYs4Njam1+tbWlra29vJD2TSyJGpqSkStkajIRMiEokyMjK4
XK7f7XZUhWxSUhIZvkQiuXfvnsFgQIUsAAAAAAAAAMBz5v0AmsViuXbtWmpq
Kp1Op9FoISEhvsmcpKSkkpISk8k0NjbmcDj2NZ7vf7CxsTExMaHT6err69vb
2/v7+0mQ5NF/M2VH5a/u379/4cIFNpudkJDwySefFBQU3L59u6enJ/Dl5Clk
mDKZ7PLly4mJiWQ2yL/kZ3LEaDSS3+7dQPeMN0tJYhscHFSpVE1NTUqlkszY
5OQkVU1MJtNgMJBRlJWV5eTk8Hg8DofDYrH8Vsi+9dZb77//Pp/P/+KLL+7d
u4cKWQAAAAAAAACA52xubs5iseh0OrFYzOPx/JZMbqXp6p6bmJjQ6/XelF1f
X9/k5OT8/PzS0tIWL5fJZCKRKCoqigxKIBBssd3t5rra51kUvDNU14muri65
XE5mrLOzc2RkxO12k8VaW1vzPTlAX+DNuTuy7hKJBBWyAAAAAAAAAADP2eYW
q5tTN2fPnr1z547L5VpeXv6rFND+efbsmcFgaGpq6ujo6OnpGRsbm56edrvd
W7y8ra3N2wCXQv6rUCgCX0XV1d66devcuXNsNjs+Pj49PV0oFN64caO7u3vX
w9oz1HZEEvDIyAiJTavVkrlqbW01mUwTExOrq6sej4ec4HuVxWJpaWmpqKjI
y8tLTU2NiIg4duzYq6++6rvuNBotNDSULH1MTExWVpZEIrl9+zaZuoNcHQwA
AAAAAAAA8CIxm81NTU2lpaVZWVmRkZF+P26WnZ1dV1fn3bL1Vymg/WOz2YxG
Y0tLS0dHB/nhyZMn2yrP1Gg05eXlmZmZfD6fy+VyOJy8vLzm5ubAV1F1teS5
ly9f5vF4SUlJp06dSk5OLioqamtr2/Ww9gz10b+pqamBgQEySyqVqrOzU6vV
kjWdmZnxLhY5zfcqalNldXV1fn4+mZzo6Ohjx475rntISAiNRqPT6eHh4TEx
MeQcMnVff/31Qa4OBgAAAAAAAAB4kVA9Uvl8fkREhG/qhmohSn4rk8mec2BU
/1OlUmkwGAYGBiYmJhYWFrZ4+S57v1IFpGRa4uLiyDzk5OQ0NDTsdDR7j2qt
a7Vayfw0NzcrFApv14mtTFSAdd+8zZLL5ZLhH+TqYAAAAAAAAACAFwm1Gy0h
IeHEiRO+GZsjR45ERkZ6S0qf/wazqamp/v5+uVze2dnZ3d293ZQdtXvw/Pnz
sbGxDAYjPT29urp6i/1Ph4aGHjx4IJFIyOVcLpfFYp05c+abb745OMWhZAgk
DO+uOa1W29zcrFKp+vr6nj59OjMz8zcriEdHR8ma1tTUXL58mQwtKiqKzWYz
mUy/FbLvvffeqVOnyFSQCWlsbDw4kwAAAAAAAAAA8EKivvkWGRl55MgR34zN
iRMnEhISMjMzy8vLNRrNcw5senp6cHCwo6NDq9Uajcbtpuyob/SJRCIul0un
01NTU69du7bF/qeTk5NdXV0NDQ0FBQU8Ho/BYCQlJRUWFh6c4lC32z0zM/P0
6dO+vj6VStXc3EwmytsnYitdQhwOx+joKBnL/fv3i4uL/TakoCpkX3/99Tff
fDMqKoq8DBKJ5OBMAgAAAAAAAADAC4nqrLp5k1VERASfzye/rampMRqNzzmw
mZkZs9msVqv1er3JZNpuym5zJ1zyL/l5i/1PD37rWDIVZELItJD5USgUzc3N
BoPBarV6PJ719fWtf3KQjIWMyFsFTMbot0KWctAmAQAAAAAAAADgRbKxsbG2
tra6ulpXV5ednc1ms1ksFoPB8M3PREZGZmVllZaWNjU1mc3m5xzh7OzskydP
NBqNTqczGAwmk2lsbMzhcGzxcqfTabPZLBbL9evX09LSyNASExPz8/OlUim5
p9VqDXw51Tr25s2bmZmZx48fj4uLEwgEQW8d6104j8czPT1NFkWr1XZ2dqpU
qo6OjoGBgampKW9Pir/qOhGAt82HTCa7evXquXPnYmNj33nnnTfeeINOp9No
tJCQEN9XgrwnPB7v/PnzYrH47t27W8x/AgAAAAAAAADAVnhbo7pcrjt37pw9
e5bJZDIYDDqd7pufOXny5KVLl7aY49pzs7Oz3q+06X6g1+uHh4e3nh1aXV11
Op3k/Fu3bn388ccsFishISE7O3uLGUiqdWxjY6NIJIqLi+NyuTweL+itY0lg
Kysrbrf76dOnRqOxtbXVWzvc3d09MjIyPz/v7RK79ZQdeQe8uc2Wlpby8vLc
3Fw+n8/hcMj7EBoaSqPRfF8JqiOJQCAg01JRUUGuwnY7AAAAAAAAAIA9QTUv
qKqq4vP5fqsgt1VJuufIE4eHh/V6vVar1Wg0arXabDbPzMxs9z4NDQ05OTls
NpvL5WZkZGy3zlepVEokEoFAQGbDWz4c3NaxHo/H7XY7HI4nT56oVKr6+nq5
XN7V1UX+u5Vv9AUwPj5OblhbW0umiAzWbxZ383a7iooK8obs4QABAAAAAAAA
AF5aDodjbGzMZDKVlJQkJSX5ZmOoPqFpaWnXr1/fYr+GPTc/Pz86Otrd3d3V
1aXVanecsqNa4ubl5RUVFW33O2xGo7GmpkYkEqWnp//iF79gsVi//vWvq6ur
yZyQOVxeXt5uPLtEdZ3o7e3t6OhoampSqVSDg4MkHjJju4mH3HZoaIjcraqq
ioyXz+fHxMSEh4f7rZAl88DhcHg8Xm5uLjlfp9OR1ZmamlpdXV1bW9v6l/QA
AAAAAAAAAIBCdUTNz8+Pj4/3zcaEhoaGhYWxWKyPP/741q1bc3NzTqfzb3Yg
3XMOh2N8fLy3t7e7u1un0+04ZTcyMtLa2lpVVXX79u26ujqZTGYymbbe7ZTq
zpCdnX3y5EkGg5Gamnr16lVyk9HR0a1/W2+vLCwseLvEkjlRKBQtLS16vX5s
bIys0fLy8tra2o7vvLS0RKaX2msnkUiysrJiYmL8VsiSg+QNYbPZycnJubm5
ZH6ampr6+/tdLtcuwwAAAAAAAAAAeGkF6BNKZWOCWwFKdUQ1mUx6vX7HKTuq
9yuF/HfrmwZtNhsJgMxVQUEBl8sl80P+JT9vN/W3V6hGuh0dHXK5/NGjR729
vWREe/gIqtmuRCLh8/lbrJAtLS0l8ZBrXS7X80/wAgAAAAAAAAC8AAYGBqRS
qVgszsjI4HA4vkmY11577e23346Li/v8888fPnwYrAiplF13d7dGo1EoFOTn
6enp7d6H6v1K2VYBqcPhGB0dNZlMZWVlAoFgu20s9sr6+vrq6urS0hKZk56e
Hrlc3tHR0dnZud2uHFtBNdslb8iVK1fIqLlcbkREhN/cHVUhe+HChZKSEnKJ
Wq0eHx9HhSwAAAAAAAAAwHZRn2jj8/kRERG+SZhjx45FR0eT48XFxe3t7cGK
kErZGQwGpVK54+1kVO9XyrYqN8nJDofDZrPdvXs3JyeHw+EkJiamp6dfvHix
srKyq6tru/HsjLcB7vz8vLeLbktLS0dHB1nE3Xed+N+eNTc3ZzKZGhsbKyoq
cnNzU1JS2Gw2i8ViMBh+92TGx8eTaREKhWRa1Go1KmQBAAAAAAAAALZLp9N5
q2J5PB6bzT6AzUCplJ1er1coFM3NzUaj8dmzZ8GKRy6XX7lyheeD/JccfD5P
X1pamp+fn5yc7Ovra29vr6+vVyqVg4OD09PTi4uLKysr+/FQqqb45s2bFy9e
9DbMZTKZfitkyXHyW3KOUCiUSqWokAUAAAAAAAAA2C6FQlFUVJSSkhIZGXn0
6FHf3Mu77757+vTpgoKC27dv9/T0BCtCl8tlt9uHh4eNRmN7e3tTU5PBYAhi
yq6rq6uysvLixYvp6emJiYkcDicnJ+fu3bvPp3Xs4uLi5OTk0NAQmYSOjo7v
vvuOxDM6OkqOLy0teTye/XgoVVMsl8srKiqEQmFaWhp5YfxWyFLb7cg5hYWF
UqmUxPn48eNgtS8BAAAAAAAAADh0mpub8/LyOBxOeHh4WFiYb+4lMjIyKyvr
OX+rbbOlpaXZ2Vmr1drX19fR0dHQ0NDV1TU5ORmseMhUkAkh05KdnZ2QkMBi
sQQCQVlZ2fNpHUumwlsS29nZqVKp2tvb+/v7bTbbysqKx+PZp0/GUTXFw8PD
5KFSqbSwsDAtLc1vhSydTidHmEwmeX/IOUKhsLy8nLxmJOw9L90FAAAAAAAA
AHghSaXSzMxMv9ulYmNjc3Nza2trVSrV+Ph4sCJcWVlZXFycnp4eHBxUKpX1
9fV6vX5iYiJY8QS3dazdbu/t7X306JFCoVCr1fvRdSKA1dVVl8tFHkdeG6FQ
uMUKWaq22mKxPLdQAQAAAAAAAAAOHaqzQHV1dXp6OoPBCA0NpdFovimXhISE
wsJCuVze398/NTUVrFA3p+y0Wq3VavX2If3++++fczxU69ivvvoqLS2NyWTG
x8dfuHBhX7cjejyepaWlhYUF8mi9Xu/tOtHd3f348eNnz56R+dmPh27m3W7n
crk0Gs2NGzdEIlFGRgaXyw3ckCIpKSk7O1sikdy7d89gMKBCFgAAAAAAAADA
L6fTabPZLBbLtWvXUlNT6XQ6jUYLCQnxTbmcOnXq6tWrAwMDExMTzy0ptNnm
lJ1GoxkfH19dXd2/UtAAqNaxt27dOnfuHJvNPnny5OnTp/e1day3OpgsRF9f
H5mEpqYmlUpFlub5fECPQmZ7bW2NzDyJxGAwyGSysrKynJwcHo/H4XBYLJbf
Ctm33nrr/fff5/P5X3zxxb1791AhCwAAAAAAAADg19zcnMVi0el0YrGYx+P5
LWzk8/lVVVVB7/i5OWXX2dk5MjLidrtJVGtra8EKTCaTiUSiqKiouLg4Lpe7
r61jqba5Wq22tbX14ExCgI7Dm3N35I2SSCSokAUAAAAAAAAA8MtqtWo0GqlU
eunSpZMnT/omWH7yk5+EhYWxWKzMzMza2lqXy7W8vBzEpBD1/TSz2axSqerr
69VqtcVi2dceqVuhVColEolAIDh16hSZQw6H89vf/raurs7pdO7VjH3/g42N
DW+KVa/Xk7G3t7e3traaTKaJiYlgbTWkkKhaWloqKiry8vJSU1MjIiKOHTv2
6quv+r5RNBotNDSUwWDExMRkZWWRSbt9+7ZCofButyOLG6zgAQAAAAAAAAAO
FKrtaVZWVmRkpG+CJSwsLDw8nMPhCIXCxsZG7yauICaFvJ9xW1xctFgsarW6
vr5epVKR+IO+/c9kMtXU1IhEovT09JiYGBaLdfbs2erqarvdPj8/vyfFqt9/
//36D8g9+/v7FQqFUqkkk6DVaskMzMzMBOuDfhRquyYZeH5+Pp/Pj46OPnbs
mO8bFRISQqPR6HQ6ea/IRJFz8vLyvv76a5lMZjQa97thBwAAAAAAAADAYWE0
Gr3pJj6fHxER4ZtgYbFYHA5nX8s8t8X78TS32z0yMtLZ2VlfX69UKgcHB6en
pxcXF1dWVoIVmMVikclk3rLQqKgoMnXJycllZWXkuN1u35NvtW1sbKyvr3s8
HqvVajAYmpubFQqFXq/3fmBwYWFh94/YKwHeqM0VslwuNycnh0wdmUAyXcGO
HQAAAAAAAADgQNBoNOXl5ZmZmQkJCSdOnPDNq4SHh3/wwQcZGRlfffWVWq0O
dqT/f9rK4/Gsrq6Oj4+TsOvr6zs6OgYGBux2+8LCwg42s1E9FKampsxms06n
Gxoampyc3G5Bq81mMxqNMpmssLAwKSmJwWDweLyCgoKGhoauri5yw+0Gtpm3
se/s7CyJk4y9ublZpVL19fU9ffp0ZmbG7Xbv/hF7ZXR0tK2traam5vLly2fO
nImKimKz2Uwm02+F7HvvvXfq1Knz589LJJLGxkZUyAIAAAAAAAAAEG1tbUVF
RSkpKZGRkUeOHPHNq7z99tsffvihUCi8ceNGd3d3sCP9H+/H3NbW1qxWq1ar
ra+vb29v7+/v33GzVHIrcpXL5SI3aWpqqqioePDgQVdX13YLWskdvF13v/nm
mzNnzrBYLC6X601DkRsODQ1tNzC/j5iamhoZGenp6VEqlc3NzWQGvL0bglsU
vBlZi9HRUaPReP/+/eLiYr8NKagK2ddff/3NN9+MiorKzMwk04UKWQAAAAAA
AACA//Hpdrp5KxSHw8nIyBCLxVKpdGBgINiR/j8TExN6vd6bsuvr65ucnJyf
n19aWtrufah+FnK5vLS01Jtka2ho2HFBK7k2JyeHzGRcXByfzyc3rKio0Ol0
273PZg6HY2xszGQyaTQaEm1zc7PBYLBarR6PZ319PYgfGAxgc71wAOQE73Sh
QhYAAAAAAAAAXlpUTWhdXV12djabzWaxWAwGwzeLEh0dTX5VVVXV2to6MjIS
7JD/n8nJya6uroaGhvb2dpPJNDY2Nj09vYPiUGqXXUtLyxdffMHj8X7729/+
4Q9/UCqVQ0NDMzMz272hd8ticnLyqVOnkpKSyA0vX75Mbr7j1rHeZfJ4PFNT
UyQktVqt+oH3I37koLcnRRC7TgRA1QtfvXr13LlzsbGx77zzzhtvvEGn02k0
WkhIiO/LRt5AMl3nz58Xi8V3797V6XTePYTBHgQAAAAAAAAAwPNDZavu3Llz
9uxZJpPJYDDodLpvFiU+Pj4/P38PP8i2V549e2YwGJqamhQKRXd395MnT2w2
2w42xW3OW6alpf3+97+XSqUajcZqtW73hiSYGzduCIXC9PR0MnvkhufOnbt1
69aOW8eS8FZWVtxu99OnT8nNHz582NHRodPpent7x8fHHQ6Ht0vswUzZUfXC
LS0t5eXlubm5fD6fw+GQNy00NJRGo/m+bOQNJNMVFRUlEAhEIlFFRQW5Ctvt
AAAAAAAAAOClQtWEVlVV8fl8v7WKPB5PLBYfwP1Oz549MxqNe9g1tba2ViAQ
7L48c89bx3o8Hrfb7XA4njx5olKp6uvr29radrOxMCjGx8dJ8GSSRSIRean8
5oc3b7fbq5piAAAAAAAAAIDDgvo2WklJSVJSkm/OhOrmmZaWdv36dW8Tzx2k
m/aP3W7v7e199OiRUqk0GAy7T9nV19dfuHDh+PHjXC43MzPzypUr3377bV9f
33bvs+etY91u98zMzNOnT0kwZLB//vOfOzs7Hz9+PD09Tca7srKy3RsGBRnC
0NCQSqWqqqoSiUR8Pj8mJiY8PNxvhSyLxeJwOGTecnNzyfk6nc5sNk9NTa2u
rq6trR3Mr/YBAAAAAAAAAOwJ6nNw+fn58fHxvjmT0NDQsLAwFov18ccf37p1
a25uzul0HqiepNPT0wMDAwqFQqPRdHd37z5l9/Dhw88//zwuLi45OTkjIyMn
J6eyspLMz3bvs+etY8mgvPk6vV7f0dHx6NEjMl5yxO12r6ysrK+vb/eGQbG0
tDQzM0PttSOzkZWVFRMT47dClhwk88Zms8la5ObmVlRUNDU19ff3k7nd2fcA
AQAAAAAAAAAOiwDdPKmcSU5OTkNDQ7Aj9WNmZsZsNqvVar1ebzKZdp+yUyqV
EolE4IP8lxzc8Q33qnUsNVISTEdHh0KhIIOdnp7ecWDBNTc3R148Mg9kesm0
bLFCtrS0VC6Xk2tdLteBSh0DAAAAAAAAAOytgYEBqVQqFoszMjI4HI5vquS1
1157++234+LiPv/884cPHwY7Uj+oRJZOp+vu7qZ6Mez4hl1dXZWVlTk5OWQ2
kpOTydjz8/NbWlp2XIzZ2tp6+fJlLpebmJiYlJSUkpLy5Zdf/uUvf9niDdfX
18mZS0tLExMTPT09crlcqVRqtVoy2NHR0fn5+Z0ONMicTqd3FyJ5965cuSIQ
CMgURURE+M3dURWyFy5cKCkpIZeQFScLjQpZAAAAAAAAAHhRGY3Gmpoa74fF
IiIifFMlx44di46OJseLi4vb29uDHakfVMpOq9V2dXXtPpHV19f37bffXrly
JTMzk8vlHj9+/Ny5c+TIjosxSWxfffVVRkbGv/3bv8XHx3M4nN/+9rd1dXVb
vOHq6qrT6SQjslgsZIwtLS1KpdJkMg0PD9vtdnKTnQ40yLzjmpubI2NpbGys
qKjIzc1NSUlhs9ksFovBYPjd7UkmMD09XSgUVlZWkolFhSwAAAAAAAAAvKh0
Op23KpbH47HZ7MPVspNK2Wk0Gq1Wq9frh4eHd9PTdnOZMJ/Pr6qq2nExJpUR
FQgE5IZMJvOjjz66efPmFm+4tLQ0Pz8/OTnZ19fX3t5eX1+vVCoHBwenp6cX
FxcPS9eJAJxOp91uJ9NO5uTixYtkishbR2bJb4UsOU5+S84RCoVSqRQVsgAA
AAAAAADwolIoFEVFRSkpKZGRkUePHvXNkLz77runT58uKCi4fft2T09PsCP1
Y25ubnh4WK/X636g1WotFsvs7OyOb2i1WjUajVQqvXTp0smTJ8kknDp16urV
q96v5C0uLm73hiS81tbWqqqqzz77LCEhgclkpqamFhcXK5XKoaGhmZmZwJeT
J05OTpIzDQZDR0fHd99919XVNTo6So4vLS15PJ6dDvSgWF5enp+ft9vtcrm8
oqJCKBSmpaWRV9FvhSy13Y6cU1hYSJaJzMnjx48PYGMUAAAAAAAAAIDdaG5u
zsvL43A44eHhYWFhvhmSyMjIrKys0tLSpqYms9kc7Ej9cDgcY2NjJpPJYDDo
dDqNRvPkyZPdpOxmZmaGhoaUSuWXX36ZmJhIJiEhIaGwsFAul/f3909NTe34
hsXFxampqUwmk9zws88+q6qqam1tHR4eDnw5GYu3JLazs1OlUrW3t5MwbDbb
ysqKx+N5AT7jtra2try87HQ6yVSQAUqlUjLbaWlpfitk6XQ6OULmkLyZ5Byh
UFheXk5eYDJFZE7ITYI9GgAAAAAAAACAvSGVSjMzM/1uaoqNjc3Nza2trVWp
VOPj48GO1I+FhYWJiYmBgQGTyaTX69Vqtdls/ptb1wKg6jTLysqSk5N3Pwmr
q6sul2tubu7mzZsfffQRmeeoqCiBQCASiWpqaoxGY+DLSTC9vb2PHj1SKBTe
xri7rPw9sKiJIi+kUCjcYoUsVbVNluyFnBYAAAAAAAAAeKlQ3/+vrq5OT09n
MBihoaE0Gs03MbLLDWbPAZWyMxqNWq22o6PD+523Hd+QqtO8cePGmTNnmExm
fHz8hQsXdrzV0LuLzOVyPXjwIC8vLyoqisvlpqSkCASCkpIShULht+2px+NZ
WloioxsdHdXr9S0tLWRo3d3djx8/fvbs2Q7qcw8+aqI0Gg2ZfJFIlJGRQeYq
cEOKpKSk7OxsiURy7949g8GAClkAAAAAAAAAONScTqfNZrNYLNeuXUtNTaXT
6TQaLSQkxDcxssvPuD0HVMquu7u7s7Nz99lFqk7z/v37Fy5cYLPZCQkJn3zy
yY4/6LexsUHuubq6qlAoSkpKBAJBSkoKl8uNiorKy8t78OCB37anS0tLs7Oz
ZGh9fX1KpbKpqUmlUpFhkiVzOBzk/B0P8MCiJoqM2mAwyGSysrKynJwcHo/H
4XBYLJbfCtm33nrr/fff5/P5X3zxxb1791AhCwAAAAAAAACH2tzcnMVi0el0
YrGYx+P5LT/cZbPU54BK2RkMBqVS+ejRo97eXrvdvvs7y2QykUgUFRVFJkcg
EOy+be62WsdS49Jqta2trfX19Z2dnSMjI26327srb9fjOwQC9DLenLsj76pE
IkGFLAAAAAAAAAAcaptbo1J+8pOfhIWFsViszMzM2tpav9vADgjvXsEnT54Y
jcaOjo6WlhbyAzmy+zu3tbV5G+l++OGHqampfD6/uLi4vb19xzekWsd++umn
8fHxDAaD3FwsFvu2jv3++++9m828XSe8X+cjDyUXmkymiYmJ1dXVF6PrxFaQ
GSALWlFRkZeXR5YgIiLi2LFjr776qu+7SqPRQkNDyWRGR0d/8sknZD5v3rwp
l8u92+3IqxvsQQAAAAAAAAAAbIPZbG5qaiotLc3KyoqMjPRNg4SFhYWHh3M4
HKFQ2NjY6PdjaweE2+2enp4eGxvr6enp6OggIzIYDM+ePdv9nTUaTXl5eWZm
5unTp5OSkuLi4j7//POHDx/u+IZU69iioiJyQzqdHhsbm5OT49s6lkyyx+Mh
E06G0NfXp1AoyPlqtVqr1XrbangX4vvvv9/9AA8+aiNodXV1fn4+n8+Pjo4+
duyY77saEhJCo9HIZJLjP//5z3k83sWLF8lbLZPJ9ip5CwAAAAAAAADw3FB1
mnw+PyIiwjcNwmKxOBwOj8e7cuWKXC4PdqSBLC0tzc/PT05O9vX1tbe319fX
6/X6iYmJ3d+Zmh+qCUJOTk5DQ8OOb0h1RK2qqiJzTuaZTDv5wbd1rPdjbm63
e2xsjAykublZoVCQH7yfE1xYWNj9uA6jAO/qZlQbWZlMZrFYgh07AAAAAAAA
AMA2ULvIEhISTpw44Zv0CA8P/+CDDzIyMr766iu1Wh3sSANZXl52OBw2m62/
v9+bstPpdBMTE96taLvZjUbVsRYVFf3mN78RCAQSiUSpVO74hlRH1Hv37nkb
W0RHR586dcp3nldWVhYWFux2+9DQUGdnZ3Nzs0ql6uvre/r06czMjNvt3vHT
D7XR0dG2traamprLly+fOXMmKiqKzB6TyfSbsiO/4vF458+fLykpqaurGxgY
sFqtB7N5CgAAAAAAAADAX6G+1RYZGXnkyBHfpMfbb7/94YcfCoXCGzdudHd3
BzvSQJaXl705roGBgY6Ojvr6eq1Wa7Va13+wm5QdVcdaV1dXWVkpFoulUil5
yo5vSHVEffTo0e9//3sej5eYmJiQkMDlci9fvtza2krOcblcZCzDw8PeT/M1
NzeT4Xj7KRzYDiDPgcPhGB0dJXNy//794uLiwA0pmEwm+VVUVNTZs2fJG05W
TaPRkFci2IMAAAAAAAAAAPjbqI6omzcscTicjIyM3SepnoOVlZXFxcXp6enB
wUGlUulN2Y2Pj3s8nvX19d18f4+qY/V+To1Ml8lk2pNvo1GNUPl8flxcnG/J
rcPhGBsbIw/SaDRyuby5udlgMFit1t0P58VA1oIshHf2yKsbuEL2EL3GAAAA
AAAAAPCSo/Z61dXVZWdns9lsFovFYDB8cx3R0dHkV962CCMjI8EOORAyEKfT
OTs7690RV19f39nZSWJ2u93erhk7vjNVx2q32y0Wi8lkGh0ddTgcu4+ZhPrg
wQOJRHL+/Hkul0vm/8yZM5WVlSTswcHB7u5utVqt+gEZETkyNTW1+02DLwab
zWY0GmUy2dWrV8+dOxcbG/vOO++88cYbdDqdRqOFhIT4re8uLCy8deuWTqfz
7lcM9iAAAAAAAAAAAP4alYm6c+fO2bNnmUwmg8Gg0+m+uY74+Pj8/PyGhoau
rq7JyclghxwItRfObDarVKr6+nry75MnTxwOh9vt9ng8O74zldt0Op3k/jab
jdyTTN3uYyZTSiaWTG9BQQGPxyPz/8tf/vLLL79s/cGjR48ePnzY0dGh0+l6
e3vHx8fJc3f/ab4XA1lrshAWi6WlpaW8vDw3N5fP53M4HDKHoaGhNBrN9zWm
Gh+npaVdunSpoqKCXIWGFAAAAAAAAABwAG3uW7oZj8cTi8WHYleSx+Nxu90O
h+PJkyfelJ13Z9r09PTi4uLKykqwA/TD6XR6d+6VlZUlJyf7bmv805/+9O23
35JRtLW1mUymsbExMpCXtutEAOPj42S5a2trRSIReV39Zp4pVEOKiooK8lYH
O3YAAAAAAAAAgL9GfS2tpKQkKSnJN7NBo9FCQ0MZDEZaWtr169ctFovNZnM6
ncEOOZC1tbWVlRW32z0yMtLZ2XkoUnbLy8vz8/N2u/3WrVvnzp1js9nJyclC
obCioqKmpub+/fstLS0ajcZsNpNRLCwsHMxRBJe3OYhKpaqqqhKJRHw+PyYm
Jjw83G+FLIvF4nA4PB7vs88+++abb8gbMjAwQN5tb+k0vhAIAAAAAAAAAEFH
VWXm5+fHx8f7ZjZCQ0PDwsJYLNbHH39869atubk5p9N5wLuUestXPR7P06dP
tVrtoUjZeWuTydy2tLRcvnyZx+ORCf/d73731Vdf/fGPf/zv//5vuVze09Nj
tVrdbjcZwvr6erBDPnCWlpZmZmaovXYSiSQrKysmJsZvhSw5SN5qNpudlJSU
nZ1NTpZKpSaTyeVykYXYzQcPAQAAAAAAAAD2RICem1Rmg2pgeohMTEzo9fpD
kbKjUK1j8/LyLl++XFJS8n/+z/958OCBWq02m80zMzPBDvAQoFr6SiQSPp8f
uEL2+PHjcXFxAoFALBaTvwJyrcvlOuBJaQAAAAAAAAB4GQwMDEilUrFYnJGR
weFwfBMar7322ttvvx0XF/f5558/fPgw2JFuD5WyUygUvb29Vqt1dnZ2aWkp
2HEFQq2FRCIpLS31LYw1Go02my3YAR4CTqfT25CCzOSVK1cEAgGXy42IiPCb
u6Pe8MzMTDLt5BK1Wj0+Po4KWQAAAAAAAAAILqPRWFNT4/38V0REhG9C49ix
Y9HR0eR4cXFxe3t7sCPdHiplJ5fLDQbD8PCw3W53uVzBjiuQp0+fqlSqu3fv
3rlz5/bt23/605/Iv7W1tf/1X/+lVqvJb4Md4CFAtfQ1mUyNjY0VFRW5ubkp
KSlsNpvFYjEYDN83/JVXXnnttdeOHz8eGxsrEAiEQmFlZSWZalTIAgAAAAAA
AEBwUcWYPB6PzWa/MI01qZRda2urVqsdGBggRxYWFoIdVyBzc3PDw8Mk7Pb2
9u+++44E/+233/7pT3+qqqoioxgZGQl2gIcJ1Yf35s2bFy9ejIqKIu8zk8n0
WyFLjpPfknOEQqFUKkWFLAAAAAAAAAAEl0KhKCoqSklJiYyMPHr0qG8e4913
3z19+nRBQcHt27d7enqCHen22Gw2o9HY0tLS3t6u1+sPcsru+x9sbGzMzMw8
fvxYrVZ/9913Uqm0pqbm+vXrJSUlhYWFd+/e7evrC3akhwnVh1cul1dUVAiF
wrS0NPKS+62QpT7byOfzyQtfW1tLrhocHDwULVcAAAAAAAAA4MXT3Nycl5fH
4XDCw8PDwsJ88xiRkZFZWVmlpaVNTU1msznYkW7P1NRUf3+/XC5Xq9Xd3d0H
PGW3/gO73U5iVigUDx48qKmpKS8v//LLL8nqkFX4+uuvNRpNsCM9TKg+vMPD
wyqVSiqVFhYWpqWl+a2QpdPp5AiTySR/CCkpKefPn5dIJA0NDRaLxWazkZsE
ezQAAAAAAAAA8HKRSqWZmZl+tx7Fxsbm5ubW1taqVKrx8fFgR7o9MzMzZrNZ
rVbr9XqTyXSQU3YbGxvr6+sej2dycpKE+ujRo7t371ZUVBQVFX322WcfffQR
j8e7cuWKXC4PdqSH0urqqsvlmpubI6+6UCgMXCFLbbcj015WVqbT6SwWC7k2
2IMAAAAAAAAAgJcC9ZX+6urq9PR0BoMRGhpKo9F80xcJCQmFhYVyuby/v39q
airYIW8PlbLT6XRGo7Gvr+/p06d7m7JbWloiTxkfH7dYLAMDA+Qpo6OjDodj
u/ehckreD9lRVbFff/31v//7v//qV7/icDg5OTl379612Wzk/svLy3s4ihee
d7sdmWGNRnPjxg2RSJSRkcHlcv1utyN/BWFhYeQ4OcG71+7evXsGgwEVsgAA
AAAAAADwHDidTpvNZrFYrl27lpqaSqfTaTRaSEiIb/ri1KlTV69e9e5PW1xc
DHbI2+Obsuvu7u7t7R0fH99BPi3wI4aGhlQqlUwm8ybZ2traRkdHt3sft9tN
bvX06dO+vj4SMLlbQ0PD/fv379y587vf/e6Xv/wli8USCARlZWUmk2lnWcGX
2cbGxtra2urqKnmNDQYDmV4ykzk5OTwej8PhkLn1fefJX0FoaCiDwWCz2XFx
cXw+/4svvrh37x4qZAEAAAAAAADgOZibm7NYLDqdTiwW83g8v0WCfD6/qqrq
kHbPpFJ2Wq3WYDCYTKaxsbG9TXaNj4+rVKra2tqKigoyjSKRqKamxmg0bvc+
CwsLExMTAwMDer1eoVA0/6DlB//xH//B5XLJWpB/CwoKZDIZGYjNZtvDUbyE
AnRJ3vx1O/JXIJFIUCELAAAAAAAAAM+B1WrVaDRSqfTSpUsnT570TVb85Cc/
8dYGZmZm1tbWulyu5eXltbW1YIe8PVSdadcPDAbDyMjI/Pz8Hj5ibGxMoVDU
1NSIxeKcnBw+n09+kMvlq6urZLo2NjYCX+7tEkvOnJ2dtVgsJFSyIkqlktyT
quctLS0VCARkLRISErKzsw9pK5CDhsx2S0tLRUVFXl5eampqRETEsWPHXn31
Vb/b7aKjoz/55BOysjdv3iSL691uR/4ogj0IAAAAAAAAAHgBmc3mpqam0tLS
rKysyMhI32RFWFhYeHg4h8MRCoWNjY1bTEAdNA6HY2xszGQydXd3d3V1abVa
i8UyOzu7h48YGRlpbW2tqqoSiUR8Pj8iIuLixYtSqXSLSU4ypR6Ph0zvs2fP
+vr6FAqFUqnUaDR6vb6/v390dNRms929ezcnJ4esRWJiYnp6Orl/ZWUlGc4e
juIlRG0xra6uzs/PJ2sXHR197Ngx37+CkJAQGo1Gp9PJ8Z///Oc8Ho9MPvl7
kclkRqMRGx0BAAAAAAAAYD8Yjcaamhoq1+SbrGCxWBwO57B3KaWqTU0mk16v
V6vVZrN5ZmZmDx9hsVhkMpm3xDIqKmq7pcTeD6y53e6xsTESYXNzs0KhID/4
Nrcl809WgefjUC/KQRPgr2AzssRkoclyk0UnSx/s2AEAAAAAAADgBaTRaMrL
yzMzMxMSEk6cOOGbmggPD//ggw8yMjK++uortVod7Eh3iErZGY1GnU6nVCqH
hob2NmW3ubh4Ww07VlZWSJB2u/3x48fkPjKZjMy2t7MtidPtdpNzurq6Kisr
L168mJ6enpiYiNaxe2t0dLStra2mpuby5ctnzpyJiopis9lMJtNvyo78isfj
nT9/vqSkpK6ujqwyeQEOXVsWAAAAAAAAADjI2traioqKUlJSIiMjjxw54pua
ePvttz/88EOhUHjjxo3u7u5gR7pDvik7rVbb0dExODg4PT29h4/wdoxVKpVf
fvllYmIimbqEhITCwkK5XN7f3z81NRX4cpfLZbfbh4eHe3p6VCrVd999p9fr
yX99N+lR9cvZ2dnk5mgdu7fIBJJpJG/I/fv3i4uLAzekYDKZ5FdRUVFnz54l
fztSqVSj0Vit1mAPAgAAAAAAAABeHDKZTCQS+d1WxOFwMjIyxGKxVCodGBgI
dqQ7RKXsuru7NRqNQqEgP+9tys7pdNrtdovFUlZWlpycTKYuNjY2Nze3trZW
pVKNj48Hvpz62p43o/jo0SPy8+TkpMfjWV9f93480GazkYNksQoKCtA6dv9s
rnEO4MX4AwEAAAAAAACAg8PbonR1dbWuri47O5vNZrNYLAaD4ZuRiI6OJr+q
qqpqbW0dGRkJdsg7tLi4+OzZs8ePHxuNRpVK9ejRo97eXrvdvoePWF5enp+f
J/e8cePGmTNnmExmfHz8hQsXAvd19XadWFlZIRcODg6qf9DZ2anRaEi009PT
6z/4/vvv/+f/bgMzmUxXr15NTU0lK0Ue8emnnx721TlobDYbeU9kMhmZ53Pn
zsXGxr7zzjtvvPEGnU6n0WghISF+K8cLCwtv3bql0+ksFsvc3FywBwEAAAAA
AAAAh9Xa2try8rLL5bpz587Zs2eZTCaDwaDT6b4Zifj4+Pz8/IaGhq6ursnJ
yWCHvENU2anRaOzo6Pjzn//c3d397NmzPXyEdzKdTuf9+/cvXLjAZrMTEhI+
+eSTgoKC27dv9/T0+L3K4/EsLS0tLi6Ojo4aDIaHDx+S8PR6vfcrdgsLCxsb
G9//4H9+yAo6HA6bzVZdXf3rX/+axWKdPHmSPOLKlSvffvstuWQPh/MyI28L
mWSLxdLS0lJeXp6bm8vn8zkcDvnrCA0NpdFovn8gVEvltLS0S5cuVVRUkKvQ
kAIAAAAAAAAAdmx1ddXlcs3NzVVVVfH5fL91fzweTywWH/a9Q263e3p62lt5
2tbWVl9fr9frJyYm9uNZVJUxmTqBQODtK0om0O/JKysri4uLJLbBwUGlUkkC
I+GRIEmo5KC368RmDQ0NOTk5bDY7Li6OLFzgR8COjY+Pq1Sq2tpasqBkNf3m
tClUQwqsBQAAAAAAAADsBvX9tJKSkqSkJN/8A41GCw0NZTAYaWlp169ft1gs
NpvN6XQGO+QdWlpamp2dtVqtvb29CoViX1N2VC8PCvkveajfk10u19TU1MjI
SE9Pj1KpbGlp0Wg0ZrN5enp6YWFhZWUlwCOSk5NPnTpFFo7H412+fJlcSxZo
eXl5bW1tP8b1EvK2FFGpVFVVVSKRiM/nx8TEhIeH+62QZbFYHA6HrMVnn332
zTffkNUcGBggfzWrq6tkRbxfIwQAAAAAAAAA+JsmJye7uroaGhry8/Pj4+N9
8w+hoaFhYWEsFuvjjz++devW3Nyc0+n09i09jKiS0v7+/vb29n1N2Wk0mvLy
8szMTD6fz+VyORxOXl5ec3Oz35NJVOPj4729vSQelUoll8t7enqsVqvb7V5Z
WVlfX/d7VXd3940bN4RCYXp6Olk4Npt97tw5skx2u31+fp4Mdj/G9RJaWlqa
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
ffvcpxS2bt3KRPDFxcUVFRVNTU29ZYlHnz9/3tDQ8Pjx49raWoPB8OzZM/rE
Q8sI2eyiVMTAwIDVau3o6GhubtZqtWq1WqlUUi+YTCb669zc3IqyTrDY8MyH
Dx+eP38+ICBAIBBERkaKRKKrV6/S+ZmZwFWcGVbKYrFIJJKcnBzqiMOHD+/a
tWv79u3vvvvuosvtAgMDv/zyy4yMjIKCAplMxiy3W0VkNAAAAAAAAAC8Ndra
2h4+fCgWi7/88ss9e/a4Tyn4+fn5+/vz+fzExMRHjx69fRM+Nputubm5qqpK
pVI1NDRQUwwMDHhoyo7NLkrnHxsbGxkZ6ezs1Ov11dXVtbW1arVap9NZLBb6
nGnkV69erbQINjxTLpdfvXpVJBJFRkYKBIKAgIDz589TL799k66vLWaLwvr6
+jt37ly8eFEoFAYGBm7fvt39+dqyZYuXl5e3tzd9To9eWFjYqVOnsrKypFJp
Y2Mj9h4EAAAAAAAA+ClrbGzMz89PSkoSCoW7du1yn1Lgcrl8Pj8sLCwtLU0m
k212Tdef3W43m81yuVyj0TQ0NDCb9Y2Pj3u0UGZWzel0dnV11dXVlZaWVldX
a7XadSyd7VORSBQQEMDhcGJiYgoKCt6+0ObX3xLP10LUWSdOnMDegwAAAAAA
AADAZjINCQn54IMP3CcQ/P39P/vss9jY2OvXr6vV6s2u6fqz2+2tra0KhYKZ
sjOZTH19fZ6esmNT9JrNZpVKVV5erlQqqWir1ToyMrIu+Wo7OzuZVBdnz56l
buVwOIcPH87MzKSC2trahoeH114ELFN3d3dNTU1+fn5KSkp0dHRAQACPx6Me
WXTKjv4UFhZ24sSJq1evPnjwgO6Q/v7+tynhCwAAAAAAAAAsU01NTXp6emRk
5N69e7dt2+Y+gbBz585Dhw4lJibm5eU1NDRsdk3X3/DwcFtbm1Kp1Gq1BoOh
ubm5t7fX4XB4tNCJiYnnz58/e/aMmlShUEgkEp1O193dPT4+Pj097XK51l4E
e12ZmZmHDx/mcDghISFnz57Nzc2trq7u7OxcexGwTExG5sbGxvv371N3LJ2Q
gnqK/hQQEHDs2DF6KktKSjQaTX9//2ZfBAAAAAAAAABsNKlUmpSUtOjiHz6f
Hxsbm5GRUVJSYjabN7um6294eLi9vV2tVjNTdkajsaenx9NTdqOjo52dnTqd
jsqVy+VVVVXNzc02m20di0Dq2NeQxWKhZ41JI0vdsXSE7Fv/6AEAAAAAAADA
othsCPfv3z958iSPx+Nyub6+vu7zBoGBgfHx8czSrK6urs2u8vobGRmxWCxa
rba+vl6v1xsMBrrMsbExT5T18uVLl8s1Ozs7ODjY0tJSW1urUqnq6uqodCbr
xDqWhdSxryHq98bGRqlUev36dXriqEd27969bds2b29vLy+vLVu2LBqTnpqa
WlhYSPcn3SSjo6ObfREAAAAAAAAA4FkzMzNjY2M2my0vLy86OprD4fj6+np7
e7vPGwQHB1+8eLGsrEyv1w8MDGx2ldcftUBXV5fBYKALrK+v98TsGcvlck1P
T09MTHR3d1NxT548USgUVLQn0tQidexriNp8cHCQbrCqqqrbt28nJydHRUXt
3buXnjsfHx8vLy/3R49N1nzkyJELFy7k5ORIJBIkpAAAAAAAAAB4601OTtps
NovFkp2dHRERsWh0XlhYWEZGxlu8wsfhcPT09BiNRoPBoNVq1Wp1e3u7h7Iz
zM7OTkxMMAkvlEplaWlpbW2tyWQaGBgYGxtbl6wTCyF17GtocHCQbjmpVHr5
8mV69BadLWexCSlycnLoSdzsugMAAAAAAACAZ7EZCq5cuRIaGuo+S/BP//RP
P/vZz3x8fCIiIjIzM7VabXt7u91ud7lcb1k0pcPh6O3tbW5ubmhoqK+v9+iU
3dTUlM1m6+zsNBqN1OwSiYRZ1Dc2NjY5Oemh2TN2/7T4+PgDBw74+voePnz4
2rVrG7NrHyyKSUhBXfDdd99dunRJKBTu27fP399/0QhZLpfL5/PDwsLOnj17
69YtunPMZvPg4CBCmwEAAAAAAADeSv39/RqNpqSk5MKFCwcOHHCfJfjZz37m
6+v785///PPPP7969WpdXV1ra+vz58+dTufs7OzbFE05Pj7e19dnMpkaGxs9
PWU3NjbW3d3d0NCg1WqVSqVMJmtqarJardPT03Nzc/Pz854olF3QlZKSEhoa
6u3tHRIScunSpbc42Pn1NzMz43A4qGvoTrh3755YLD5+/Pi+ffsWjZClD7lc
Lo/HCw8Pj4+Pp4PpmaU+RWgzAAAAAAAAwFtpifyVPj4+P//5z7dt2/Zv//Zv
YrFYrVabTKa+vj6Hw+F0Ol0u12bXfd2Mj49brVaz2Ww0GpkUrp6bsrPb7VSQ
XC5XKBRKpdKjZbEWhj9TXzNRltT72Bttc42OjlIX1NfX01MmFAqXjpDdsWNH
UFCQSCTKyMigvkNoMwAAAAAAAMBbyWQy3bt3Ly0tLSoqavfu3e6TAz//+c8/
+OCDPXv2/O53v8vKylIoFPX19c3NzR0dHX19fUNDQw6HY2pqillx9/Lly1ev
Xm321azSxMTEwMBAW1tbY2NjXV2dTCZraWmhC1zHIubn56mhnE4nNV1DQ0NV
VRW1p06no/ZvamoyGAzUtmazmf46Ojq67hGybJKRwsLCr776isfjBQcHU48n
Jibm5eVRfdaxLFgp6m4mIcWDBw/S09NjYmJCQ0M//vjjRefu3nvvvZ07dwYF
BcXFxWVkZJSUlKjV6t7eXkTIAgAAAAAAALxN9Hr97du3ExISDh48+OGHH7pP
Dmzbtm3Pnj2//vWvz5w5k5OTI5PJmLVhKpWqoaGhra2tp6fHZrONj4/Pzc25
XK43d7pgYmLi+fPnz549o+uiC5RIJI2NjYODg+tYxOzsLDWU3W6nUurq6h4/
fqxUKplVixqN5sGDB9TCJSUl1LYWi4WKnpycXMfSX7x4MTMzQ+ekS0tJSQkL
CwsPD6cej4iISE9Pr6mpWceyYKXo8aGuGR0dbWlpqaysLCgouHjx4ueff87j
8bhcrq+vr/tT+c4777z33ns7duzYv3+/SCRKTEyk51etViNCFgAAAAAAAOBt
olQqxWIxjf2DgoJ27NjhPjnwz//8z7/61a+++OKLb7755r//+7+rqqokEkl5
eXlpaWllZaVarTYajZ2dnTabzel0Mot8NvtqVolZ5tTR0aHX62UyGV2gTqez
Wq3rWAQ1kd1uZ/LS1tTUUBEqlYpKdDgc9Gt2dvaJEycyMjKKioo8mpmXTs4E
QQuFQupxHo+XkJBQVlbmibJgpeghmpqaoq4vKSlJTEwMCAigDuJwOItGyNLn
9Fc6ho6k4xEhCwAAAAAAAPA2qa6uTklJEQgEv/jFL95//333OYFdu3b967/+
a1JS0h//+MeysrLm5ma9Xq9Wq2tqahQKBf2g1WqNRmNra2tXV5fVarXb7Uyo
7NzcHBMn+6aEyi6cT1uvKTumEag12KS09fX11HqVlZUNDQ19fX1U9NOnTzMz
M5kVU2KxuKioSKVS0Z/WXvpCbW1tDx8+pFJOnDhBnc7lcqOjo2/dusUs7aO+
80ShsEzMYkjqBXq4bt++TffD0aNHP/nkE+omPz+/rVu3LpqQQigUJicn020j
k8noYfREYDUAAAAAAAAAbLDy8vIzZ8589NFH27dvf/fdd93nBP7lX/7ld7/7
3X/+538WFxfX19fbbLbe3t5nz54xORrq6urYBAr0c2NjIxMqOzQ0NDk5Of+D
N2XKbnp6emxsbGBgwGQy1dbWru+UHdMU1Cytra3UXKofUKNRc9GHLperqqoq
NTU1LCwsJiYmMTGR2aDMbDavvfSF6Br1en1ZWVlycjKV6OvrGx4eTqVLpdJ1
jwWGlXr58uWLFy/m5uboQaM7hG6DK1euREdH8/l8f39/Pz8/98fT29ubuo/D
4dBfIyMjT5w4IRaLqWc9EVgNAAAAAAAAABuspKQkLi5u0Y3u9+/ff+7cOWbR
V29v71/dVqOZTCaNRrNoqGxXV9fIyIjL5Zqfn39TdrebnZ2dmJigS2Nm1dZx
yo5agNqBWqO/v99gMFRUVMhkMmo6aihqRofDQcdIpdKkpKSAgICwsDCRSMQk
cq2vr1976QshdewbgY2QffTo0ddff003Bp/P53K5i0bIssvtYmJiqFs9GlgN
AAAAAAAAAB41MzPjcDgGBwdzc3NFIhGN+n18fLy8vNynAkJCQlJTU93Tp7I5
FPr6+jo6Opqbm3U6nUqlomNqa2vpB41G09TU1N7e3t/fb7PZRkdH6Xhmp7vX
OVR24ZSdVqula3S5XGvMwsnOvVgsFjpnRUUFnZ+aqKuri5qUCUStqalJT0+P
jIw8dOjQ4cOHhUJhZmYmtef6Xd//QerYNwIbIavX6+/evZuWlnb8+PHQ0NBF
E1LQk+vn50efCwQCZq1dcXGxwWBAhCwAAAAAAADAG8fhcHR3dxuNRhrgR0RE
eHt7e3l5bdmyxX0q4ODBg9euXTObzVardWJigr41Pz8/OzvrdDrHx8dHRkZs
NltPT09ra6ter9doNEqlUiaT0b/0s8FgaGlpsVgs9N3h4eGpqanXOVR24ZRd
XV1dV1cXXSn9aS1pNegMdPl9fX0mk0mlUlVUVFDjtLe3U+ux0yn0yY0bN+Li
4o4ePRoeHh4UFHTp0qXKysr1u77/g9SxbwQ2QnZgYKCpqYkeq5s3b54+fXrR
5Xb05Pr4+Pj6+vJ4PLp5hELhN998U1xcjAhZAAAAAAAAgDcOjeWNRqNUKk1O
ThYIBIsG3NHYPzc3d+lMlGyu1YaGBoVCUeFGLpfrdDqz2dzX10cneZ1DZRdO
2bHpXJ1OJ9V81WceHx+3Wq3UCNQU1CDULAaDob+/3701Ghsb8/Pzk5KSYmNj
qS82JosrUse+Wdj+CgsLo85a9IFld7ejPhWLxYiQBQAAAAAAAHjj9PT0yOXy
/Pz806dP79u3z33gv3XrVibOLi4urqioaGpqamZm5h+tNGMCLQcHB7u6usxm
s8Fg0Gq1KpWKTs4st9PpdCaTyWKx9Pf3Dw0N0cGTk5NLnHBTuFyu6enpiYkJ
qqdarWam7Nrb25eerlwCkyWWrnF4eJjOQ21Cp6UGoWZpaWmx2Wzuaw7pgPLy
8qysrPj4+JCQEGr5L774orCw0KOBjdQp9+7dS0tL+/LLLw8cOECFxsbG5ubm
9vb2Up2pNTxRKKwa3ZkSiSQnJ+f8+fOHDx/etWvXwnwx7HK7wMBA6taMjIyC
ggKZTIZ0wAAAAAAAAABvira2tocPH4rFYhra79mzx33g7+fn5+/vz+fzExMT
Hz16NDc3t8R+bmyg5djY2NDQUH9/v8ViMZlMOp2OCZWVy+UqlUqr1RoMBrPZ
3NXVNTg4SAfTtzb4kpdAV+dyuWZnZ3t7e6napaWlVHNqIvfw1VWckL5otVqN
RmN1dXVtba1araZmYRY+ue/sR41GhZaUlFy8eDE0NNTX1/fIkSM3b970aGAj
dQTVKjc39/Tp08HBwVRoRERERkYGdRZd+PDwsCcKhVVjtkOsr6+/c+cO3SdC
oTAwMHD79u3uT+6WLVu8vLy8vb3pc3qow8LCTp06lZWVhXTAAAAAAAAAAG8K
NhiTxv67du1yH/hzuVw+n0/j/bS0NJlMtswTsqlRR0dH+/r63ENBWQqFoqGh
oaOj47XdYstqtVK1mSm71tZWu90+MTExOzu70vMwG5E5nc6urq66ujo6YXV1
tVarZTYGHB8fdz+YnY3JyMigZqcuoH/pZ48GNi6MjF6YIBheQ0s8uQshHTAA
AAAAAADAm4VNeRASEvLBBx+4D/P9/f0/++yz2NjY69evq9XqZZ7w1atXTLDn
1NTU8PCw1Wq1WCwtLS3uobLMcju9Xt/a2trT02Oz2UZGRpiUsrOzs/Rdj17y
crBTdrW1tVT5wcFBh8OxigWBbEJes9lMV11eXq5UKk0mE52fLvnvwk6Z/QCp
uW7evHnkyBFfX9/Q0NCLFy+WlJRQN/X396/f9f0fNv9Idna2SCTicrnBwcHH
jx/PyMigcqnanigU1o56raamJj8/PyUlJTo6OiAggMfjcTicRafs6E9hYWEn
Tpy4evXqgwcPqFvpdmJSyQAAAAAAAADAa4hG/enp6ZGRkXv37t22bZv7MH/n
zp2HDh1KTEzMy8traGhY5gmZMM+XL18yq8vGx8dHR0dtNpt7qGxdXZ1CoZDJ
ZCqVin5tbm7u6Ojo6+uz2+10/CoWs607dspOLpdT9ajyC2fYlmNiYuL58+fP
nj1jsnJIJBI6bXd3N10mne3v8llQi01OTlJzFRYWfvHFF1wuNyQkJD4+Pisr
q7y8vL29ff2u7/+wk4rff/99QkICn8+nQo8ePcosyqqvr/dEobB2zFxrY2Pj
/fv3MzMzl05IweFw6E8BAQHHjh2j592jk8AAAAAAAAAAsHZSqTQpKWnRJTp8
Pj82Nnbtq60Whspqtdrq6urS0tLy8nKJRFJVVaXRaEwmU09Pj91udzqd63iB
q8NO2dXU1BiNxlVXjC65s7OTTqVWq+VyOV1pc3OzzWZb+ltlZWUJCQnUIwKB
gLqAOig/P7+xsXG1V7MsMpksLS0tzM2KAqJhs1gsFnqKmTSy9CAvHSG7Xg81
AAAAAAAAAHgCmy3i/v37J0+e5PF4XC7X19fXfXQfGBgYHx+fm5tbXV3d1dW1
6rIWhsq2t7cbjca6ujomfapCoaCfdTodffjs2bPe3l6bzcakSZ2dnXW5XP8o
54XnPH/+3GAwlJeX19bWNjY2dnZ2UpWWn2qTTWMxODjY0tJCJ1GpVHSNWq3W
YrGMjIws/fXKyspLly4FBQWFh4cfPXo0Li7uxo0bGo1mzZe1FL1ef/v27VOn
TkVFRYWGhvL5/ISEhO+//37VQcGwMaiD6BaVSqXXr1+nZ1kgEOzevXvbtm3e
3t5eXl5btmxZNNo9NTW1sLDQo9skAgAAAAAAAMBKzczMjI2N2Wy2vLy86Oho
Dofj6+tLY3z30X1wcPDFixfLysr0ev3AwMCqy1oYKstM3HV1dbW2thqNRq1W
q1arFQpFTU0N/UDFNTc3d3Z2Dg4OTkxMLAwg3QDMNIhEImEyZTx79uz58+fL
3/uLKkzVpuO7u7vpcp48eULnMRgMbW1t1JI/ep7a2trMzEyhUHj48OFDhw5F
Rkamp6dT46z5spbS3t5eXl6elZUVHx8fEhLC5XJFIlF2djZ1EF2Fw+HwaOmw
alNTU8wWiFVVVbdv305OTo6Kitq7dy890T4+Pl5eXu4PNZsG+siRIxcuXMjJ
yaGbHAkpAAAAAAAAAF4Tk5OTNpuNhurZ2dkRERGLxtB5Ll0pm0eV6tDZ2Wk0
GtVqdWVlpXuorE6n6+joWHWq1jWiijU3N1M1lEqlwWBYNMHrEqjCVG2qfGtr
K52BSWNhMpkGBgbGxsZ+dE88anMmzlEkElEvBAQEJCUlSaXSNV/WUhamjqV/
6Wf6hD6nv3q0dFg7tgcvX75MD/Wi8/AsNiEFdiwEAAAAAAAAeH0MDw+3tbUp
lcorV66Ehoa6j+W9vLx8fHxosH/kyJGbN29aLJbBwcHJycl1LJ2JG52bmxsf
H7fZbD09PVSZhoYGlUqlUCjkcrlMJqurq2tsbGxtbe3q6hoYGKAKOxyOqamp
jQmVHRoaamlpYapBFVvplB3Vk52NpEaWSCRMSOzY2Bi1JF340l9vamq6e/du
cnLyl19+GRISwuPxEhISysrK1nxZS1mYOnYDkl/AOmJ78Lvvvrt06ZJQKNy3
b5+/v/+iEbLUv3w+Pyws7OzZs7du3aK7lG5yetLp5nzx4sXGh6IDAAAAAAAA
AOnv79doNCUlJRcuXDhw4ID7WN7Hx8fPz49G9F988UVhYSGzp9yPzjKtCBMn
++LFi9nZ2ampKYfDMTQ01NfX19HR0dzcXF9fr/gbpVLJpJRtb2/v7e2lwzYm
VJZZIEcV0Gq1jY2NK52yGxsb6+7ubmhooK/TJchksqamJjoD1Zxacn5+fumv
szGqJ0+eDA4O5nA4cXFx1FlrvqylLEwdGxoaGhUVderUqdu3b+v1eo+WDmvH
9iDddffu3ROLxcePH9+3b9+iEbL0IT3jPB4vPDw8Pj6eDqYbzGg00vNI56Fn
c7OvBgAAAAAAAOCnaIksk+xYfgNWdrFcLpfT6XQ4HH19fSaTSa1Wy2QyiURS
WlpK/9LP9Elzc3NXV9fGhMoODw+3t7dToUxSjJVO2VEl6StyuZyZdaTz0Nno
nMv8em9vr0qlKioqOnfu3P79+6lTRCIR/braq1kZpI59042OjtIDXl9fLxaL
hULh0hGyO3bsCAoKohssIyOD3gn03ampqfWdogcAAAAAAACAZTKZTPfu3UtL
S4uKitq9e7f7EP69997buXMnjeIvXbpUWVm5MfVhVtw5nc7h4eG+vr729vbm
5madTqf8gUqlYmbPmpqa3ENlx8fHp6enmTi+V69erWN9RkZGOjo6NBpNfX29
wWAwGo09PT0/moKBzcPb29vb0NBQVVWlUCio2tTadFHLn/Fjwpbpqr/99tuT
J0/u379/I/uCrvrGjRtxcXFCoVAgEPD5/NOnT9+/f98T6y3BE6ibmIQUDx48
SE9Pj4mJCQ0N/fjjjxedu2Ofd+rxjIyMkpISetboBkaELAAAAAAAAMDG0+v1
t2/fTkhIOHjw4Icffug+hN++fXtgYKBQKMzMzKytrd2Y+jBxssxaOyal7MDA
AJNStqmpSafTqdVqlUrFzOCxobJWq3VsbGxubm7dd7cbGRmxWCxarbb+B1Ri
Z2fnj+bgYPLwDg4OUrWpwo8fP6baMvN1dEV0acssfXp6mo7v7e2tqqr69ttv
z507l5eX19DQsObLWhZ2J73Y2NigoCAulxsdHf1f//VfntjVEDyBngjqJrpd
W1paKisrCwoKLl68+Pnnn/N4POpNX19f9+f9nXfeee+993bs2LF//36RSJSY
mEhvBrp7ESELAAAAAAAAsPGUSqVYLKYRelBQEI3WX8NUkmzS1a6urubm5kVD
Zc1m88DAgNPpZFYErWPpo6OjnZ2dOp1Oq9VqNJplRrYyq5s6Ojr0ej3VkKqq
UqnoV4fDQZVcxf57bIQs/Us/r/ZqVmZh0LTncgeDR9FzMTU1RV1WUlKSmJhI
vUlPN4fDWTRClj6nv9IxdCQdjwhZAAAAAAAAgI1XXV2dkpIiEAh+8YtfvP/+
++4j948//vjo0aPJycl3795tamrarBq6XK7p6emJiYmhoaHe3t729naqjFar
rf0bJua0paWlq6vLarXa7XY2pezaQ2XZ/BF6vZ4KXXrK7tUPqET6FlWGyTpB
1aNGbmxs7OvrczqdTK1WWg02Qpb+Xf5WeGs0ODhI1ZZKpampqeHh4b6+viEh
IRcuXGBmDulyNqYasHZMpDY9FHQD3759OzExkR7tTz75hMvl+vn5bd26ddFN
LIVCIT3+1N0ymay1tRUB0QAAAAAAAAAbpry8/MyZMx999NH27dvfffdd95H7
3r17jx8/npWVRce0t7dvVg1fvnzpcrnYlLLDw8NWq9VisZhMJr1ezyy6q62t
VSqVdXV1jY2NbW1tPT09NpttfHx87aGyVGJvb29zc3NDQ0N9ff2PTtnN/2Bo
aMhsNisUCpVKRbXSarX0LbvdTpVZ3bZgbIQs/Us/r/pyVoQanNkJ7datW9HR
0VwuNzg4mG4JZqMzusCNqQasHRNvTo8D3UJ0D1P3XblyhfqUz+f7+/v7+fm5
P/je3t6+vr4cDof+GhkZeeLECbFYXFZWhoBoAAAAAAAAgA1Dg/e4uLhFt6Pf
v3//uXPnNjgYczmmp6fHxsYGBgba2tq0Wm1VVZVEIikvLy8tLa2srFSr1Uaj
sbOz02azrT1Udnx83Gq1ms1mOiezk94SU3YvX76cn593uVz9/f0Gg6GiokIu
l9O3Vppn9nVTVlaWkJDA4/GCgoKEQuGmx0rDqrERso8ePfr666/DwsL4fD6X
y100QpZdbhcTE5OdnY2AaAAAAAAAAABPm5mZcTgcg4ODubm5IpGIxuY+Pj5e
Xl7uA/aQkJDU1FSZTNbS0jI0NLTZVf4/zKb6zKydxWJpbm5mltvV1NQoFAr6
QavVGo1GJqWs1WplUsoy03dMnOzyQ2XZKbuGhgaNRiOXy+lnu93+jyrGzIcw
GSsqKipUKtUqsk68bqhh09PTIyIiDh48GB4eHhYWlpKSIpFIqBeQmODNwkbI
0iNz9+7dtLS048ePh4aGLpqQgt4Jfn5+9LlAIGDW2hUXFxsMBkTIAgAAAAAA
AHiIw+Ho7u42Go00DI+IiPD29vby8tqyZYv7gP3gwYPXrl1jVohNTExsdpX/
z/z8/NzcHLPB3cjIiM1m6+3tffbsGbMQrq6uTqFQKJVKtVpNP9OHTErZ4eHh
qakpJnB1FVN2BoOBzllVVdXc3EwlLnqw0+mkUvr6+kwmk0qlqqio0Gq1zMKk
N3oD/4aGhry8vMTExKioqODgYB6P99VXXxUWFlI7jI2NzczMbHYFYbnYCNmB
gYGmpiaZTHbz5s3Tp08vutyO3gk+Pj6+vr7sAstvvvmmuLgYEbIAAAAAAAAA
HkIjbqPRKJVKk5OTBQLBomFxNELPzc19I6abnE6n3W7v6ekxmUwajcY9VLa6
ulqr1ZrN5r6+ProWl8s1Pz+//N3k2Ck7nU4nl8srKioaGxufP3++zIMNBkN/
f/9KC33dLEwdGxERkZ2dTZ/bbDZM3bzR6uvrmZ4NCwvj8XiLvgrY3e3onSAW
ixEhCwAAAAAAAOAhPT09crk8Pz//9OnT+/btcx+eb926lYmGi4uLKyoqmpqa
ev2DH2dnZ8fHx+12e19fH7Pcrr6+nknVWltbq1ardTqdyWSyWCz9/f02m210
dHSZobJ0+XR8Z2dnY2Mjnaq8vNxgMPzdlB2TJZaaaHh4uL29XavV1tXVqVQq
qoDZbB4aGlrp0r7XzcLUsWFhYcnJyWVlZXq9fmBgYLMrCKtHD4VEIsnJyTl/
/vzhw4d37dq1MBMNu9wuMDDwyy+/zMjIKCgokMlkzHI7ekY2+yIAAAAAAAAA
3hJtbW0PHz4Ui8U0AN+zZ4/78NzPz8/f35/P5ycmJj569IhJ3/CarxCbn5+f
nZ11Op3MxB27x51Wq1Wr1UqlUi6Xq1Qq+tVgMLS0tNBflxkqOz09PTIy0t/f
bzKZFArFopNUTE5baig6p9ForK6upiOprIaGhq6urrGxsZVuoPe6WZg6lt3c
jO4iupc2u4KweszWi/X19Xfu3Ll48aJQKAwMDNy+fbv7O2HLli1eXl7e3t70
Ob0uwsLCTp06lZWVJZVKGxsb6d7Y7IsAAAAAAAAAeEvQQDs/Pz8pKYlG6Lt2
7XIfnnO5XD6fT6PytLQ0mUy22TVdGTZn6+joaF9fn3uMKovN4rqcUNnZ2dmJ
iQm73d7a2qpUKktLS+m7VqvV/RhmczCn09nV1VVXV0fHULvp9fqOjo63bMsv
pI59iy3xTlgoICCA6X2pVGqxWDa77gAAAAAAAABvCY1Gc+PGjbi4uJCQkA8+
+MB9MO7v7//ZZ5/FxsZev35drVZvdk1X5tWrV8yquampqeHhYavVarFYWlpa
DAaDVqtVqVRyuVypVNLlu4fKDg0NORwOp9M5OztL33U/4fT0NJOalg6ura0t
LS2lk7S3t4+OjtJXxsfHmdy1dAY6hgqik5eXl9Mxra2tg4ODb1l2hqdPn6al
pYW5+Y//+I+qqqo3YikmLK27u7umpiY/Pz8lJSU6OjogIIDH43E4nEWn7OhP
1PsnTpy4evXqgwcPzGYzPUevVZIaAAAAAAAAgDcRjc3T09MjIyP37t27bds2
98H4zp07Dx06lJiYmJeX19DQsNk1XRkm/vTly5fMsrfx8fHR0VGbzdbf32+x
WEwmk06n02g0fxcq29ra2tvba7fb6fjZ2Vn3EzJJYOmvRqORGo1ZQcdEvNKH
Vqt1cHCQfujo6GhpaaGT19bWSiQS+qGnp2dycvL13wZwRdhUBUKhMCgoiMfj
nTx5sri4+I3Y8BCWxmSRbmxsvH//fmZm5tIJKTgcDv0pICDg2LFj9CYpKSmh
x4qess2+CAAAAAAAAIA3m1QqTUpKWnQhDZ/Pj42NzcjIoGG42Wze7Jqu1XJC
ZZVKZXNzc09Pj91udzqd7l+fnJy02WwWi8VgMMhkstLS0idPnigUCr1e39TU
RGfr6OgwmUz0q0qlqq2tpWOqqqrobPStzbpkz6HrpbuC7g26Q+g++X9vVFph
WKaFCYKX8Ja9LgAAAAAAAAA2xYsXL2ZmZiYnJ+/fv3/y5Ekej8flcn19fd3H
4IGBgfHx8bm5udXV1V1dXZtd5bVaNFSWWW5XV1enUChkMplKpaqvrzcajc+e
Pevt7bXZbENDQ3a7nY7v6+tra2szGAxKpfLJkyelpaUVFRVMggm1Wq3VavV6
vUajoV+fPn3KRN3Sadvb20dGRjxxOWwPDgwMUMWo2nQ5o6OjnihrIWocaqui
oqLz588HBwd7e3uHh4enp6fTVVNlqLk2phrgUWyC4OvXr9NbQiAQ7N69e9u2
bdTdXl5eW7ZsWTSOPjU1tbCwcINvSAAAAAAAAIC3w8zMzNjYmM1my8vLi46O
5nA4vr6+NBJ3H4MHBwdfvHhx0dSob6KFobIjIyPPnz/v6elpa2trbGzUaDQq
lUqhUNTU1KjVarrq5ubmlpYWs9nMHFBXVyeTyZ48efL48ePS0tJHjx5VVFTQ
r5WVldXV1cyyOvpVIpHI5fL6+nqTydTX10cFeeJy2B6kej58+DAnJ4fK3bD9
/9nsolevXv3Nb35DNw/dLadPn2YmeDs7OzemGuBRbIJgurFv376dnJwcFRW1
d+9e6m4fHx8vLy/31wWbYPrIkSMXLlzY4BsSAAAAAAAA4O3AhnlmZ2dHREQs
GukWFhaWkZHxFq+WYRO8UlN0dnYajUa1Wl1ZWVlaWlpeXi6RSKqqqmQyGbNk
7unTpxUVFaXLU1NT09jY2N3dbbfbp6amPFF5tgfLysrEYvEG52yldqProrui
oKAgJiaGw+EEBASIRKKkpKT8/Hy69o2pBmyMwcFBejqkUunly5fpdbHoDD+L
TUiBJMIAAAAAAAAAKzU8PNzW1qZUKq9cuRIaGuo+4vby8vLx8aEh+ZEjR27e
vGmxWGjAPjk5udlVXqWZmRmHw0GXwK6m6+7upk/++sPudi6Xa25ubnx83Gaz
sQfU1dVRy9TU1FT/zdOnT6VSaXl5+TKn7KqqqugkJpOpt7eXyqKCmDV+63hd
VGer1Wo2mwsLCy9cuBAWFpacnPzo0aPR0VHqLE/vJseE5U5NTT18+PD8+fMB
AQECgSAyMlIkEl29elUulyN17NuESUhhNBq/++67S5cuCYXCffv2+fv7Lxoh
y+Vy+Xw+3ZBnz569desWPUp0l9IDiFsCAAAAAAAA4Ef19/drNJqSkpILFy4c
OHDAfcTt4+Pj5+dH4+4vvviisLBwY6aAPIedbZDL5Q8fPszPz6+pqaFP/vpD
qOzLly9fvHgxOzs7NTVFR9rtdqvV2tXVZTKZqH2ePn3KxLpWVFSUl5eXlZUt
c8pOIpFQKXV1dc+ePaNzMnvore+UHdW2p6eHruvbb789duwYj8eLi4vLzc3d
mClWpt3orqBWvXr1qkgkioyMFAgEAQEB58+fp3ZG6ti3CTvvrdVq7927JxaL
jx8/vm/fvkUjZOlDenvQDRkeHh4fH08H03uGblTcEgAAAAAAAAA/aolckOyI
OyEhoaysbLNrulZsTF9+fr5YLF46cpMNle3v76dvue9ctyJsXC2dZGBgwOVy
zc/Pr+/6InY3uYyMjLCwsM0KZKaWpPakVhWJRHQjcTicmJiYgoICpI59K7F3
HT1KQqFw6QjZHTt2BAUF0Y1BtyU9gLglAAAAAAAAAH6UyWS6d+9eWlpaVFTU
7t273Qfa77333s6dO2msfenSpcrKys2u6Sqxy8BsNltra6tSqfzuu+/S09OX
3mKLDZV9/vw5NZFcLq+qqlrFlF1ZWRl9SyKR6PX6np4ep9PJRAWu4wVOTk4y
qQH++Mc/Hj582NvbOyQkhLpsg9OFdHZ2VldX5+bmnj17lirA4XCoMpmZmUgd
+1Zi77oHDx7Q0xQTExMaGvrxxx8vOnfHvkni4uIyMjJKSkrUanVvby8iZAEA
AAAAAAD+Eb1ef/v27YSEhIMHD3744YfuA+3t27cHBgYKhcLMzMza2trNrukq
sZutMTkajEbj3bt3v/nmG5FIJBaLlUrlot9iQ2WHhoaYib7q6urlZ51gPXz4
sKysrLy8XKPRUOkOh8PpdLpcrnW8wLm5ucnJydHR0Tt37kRFRf1dztaurq51
LGsJ7KaIdLccPnyYw+GEhIScPXsWqWPfSuxd19LSUllZWVBQcPHixc8//5zH
43G5XLoJ3d8k77zzznvvvbdjx479+/fTc5eYmEjvHLVajQhZAAAAAAAAgH9E
qVSKxWIaRwcFBdGY+u1L+MimNB0cHOzr67NYLEVFRUlJSXRpaWlpMpls6a8P
Dw+3t7er1Wo6UiKRrHTKjkXt3NraarfbJyYmZmdnPXGlJSUlcXFxHA5n//79
7HIms9nsibIWQurYnya23+lmS0xMpE6n9wb1/qIRsvQ5/ZWOoSPpeETIAgAA
AAAAAPwj1dXVKSkpAoHgF7/4xfvvv+8+vv7444+PHj2anJx89+7dpqamtZfF
rsxhdsFiU6/S4L2mpsZkMg0ODjocjpmZmb+6bXTf3NxcVVVVVFREB9fW1rpn
el0OdpUdfWV4eNhmsz148ODSpUvLnLIbGhpqaWlZ9V52LLlcThfS398/MjIy
PT291qZcDLXPmTNnPvroo9DQ0N/+9rfMXJnRaPREWQux7UzNS9Xg8/mffvrp
wYMHl17NCG86tt/VavXt27cTExPppfHJJ59wuVw/P7+tW7cuuj2mUCikFws9
1PRktba2vumpbQAAAAAAAADWHTvPs3379nfffdd9fL13797jx49nZWXRMe3t
7Wsvi93/ikl4kZSUREWfPHkyLi4uPT393r17RqORnY5jE7zevXs3JSVFJBLR
wZmZme6ZXpeD3ctuZmbG6XRSHSQSCZ1wmVN2VOHGxkb6yuPHj5efKHYhKshg
MHR2dtpstqmpqbU25WLY2dff/OY30dHRG7w8km3np0+fXrlyJTIyMjQ09NNP
Pw0ICKCOph7fmGrABmP7vbe3V61Wl5SUUO/T7cfn8/39/f38/NxfKd7e3r6+
vhwOh/5KdwjdomKxmB6rjcluDAAAAAAAAPAGYaMpF24av3///nPnzhUVFalU
KhqPr70sdn0dm6D2o48+2rFjB5UeERFx+fJlqVRqNBpp8P5XtwSvycnJAoGA
6rNr1y6hULj2QEuZTJaWlrbMKTur1arT6VY9U8eqrq7WarVms5lOOD4+vurK
L4GNcWZtyvI2tn8jIyP5fD51Lt1gdJttcDVgg7ERso8ePfr666/p+aLe53K5
i0bIssvtYmJisrOzNzi7MQAAAAAAAMBriw07zc3NFYlENIL28fHx8vJyH1aH
hISkpqbKZLKWlpahoaG1F8qusispKUlLS6NyBQLBrl27OBzOkSNHrl+/7r7K
rr+/X6PR0JHp6enHjh0LCAiIjo5OSUlZ6Sq7hVY0Zff8+fOGhobHjx+Xl5ev
ZZVdVVWVWq1uamqimo+NjTGJMl+9erXqq1iInSuLioo6ePDgZqX6bWtre/jw
oVgsPn78+C9/+Uu6tahzb968yayk8tAKQ9h0bISsXq+/e/cuPVx0A4SGhi6a
kILeNn5+fvQ5vQGYtXbFxcUGgwERsgAAAAAAAPATx4ad0mA5IiLC29vby8tr
y5Yt7sPqgwcPXrt2jVkYNjExsfZC2b3sVCpVbm5uUlKSSCQKCAjgcDjR0dF5
eXnue9lR9eRyeX5+PtXh0qVLNK7PzMy8f//+SveyW2hFU3Y2m43ZTE8ikTA7
763OkydPFAqFXq/v6Oiw2+3UFC6X6+XLl6u+ioWoN6m5qFWpMQ8cOLBjx46T
J09S0etYxHIMDAzQZZaVlVGvhYSE0K0VGhqakpIilUqp75gllPD2YSNk6QZo
amqiJ+vmzZunT59edLkdvW18fHx8fX15PF5QUJBQKPzmm2+Ki4sRIQsAAAAA
AAA/cQvDTheicXRubq4nsjqy29klJCRQ6YvGTrLHsOhX+nDtpa9oys5ut5vN
ZrlcXlVVtZb0E1T5mpoajUbT2tr6/Plzp9NJTfrixYu1Xw6L6kltmJGRERsb
y+fzqQdFIlFRUdE6FrEck5OTNpuNeio7OzsiIoKqERAQwGyst149CG8Edtkn
PWs8Hm/Rlwy7ux29bcRiMSJkAQAAAAAA4Ceup6eHWcN2+vTpffv2uQ+it27d
ysSsxcXFFRUVTU1NzczMrO/kEpPTQSqVXr58OSIiggbsIpHoT3/6E43We3t7
6a80Zm9oaHjw4EFWVtaf//zn4uJiOlir1ba1tdFfqfL0Q+OS6AA6zH3ZHmtF
U3YjIyMdHR0ajaampkYikaxisu7hD+i71dXVtbW1er3ebDZT3Z4/f04nHx8f
Z6bvmDjZtYTKsusSqU9/+ctfUlcePnz41q1bizaC51BBY2NjNputsLDwq6++
4vF4wcHBUVFRiYmJeXl51K0bUw3YdPQ4022fk5Nz/vx5uhV37dq1MMcNu9wu
MDDwyy+/zMjIKCgooKcSYdQAAAAAAADw08RuOEbD5D179rgPov38/Pz9/fl8
fmJi4qNHj5jFYOsbwkkjcWZTuz/96U8ikcg9/YRKpTIajfQnuVx+9+5dqiH9
Sz/TJ1TnlpYW+iv9SpXPXxIdQIe5b47HWtGU3djYGJ2hoaGBKlZZWbmK+bqy
sjJqxoqKiidPnlRXV1Ot1Gq1TqczmUx0UVardXh4mBpk/gdrmbIbGhqi9qEr
Sk1NDQkJoa4MDw+/evXqoo3gOcyeZu6ZeakaBw8epC5OT0+vqanZmGrApmPT
zdy5c+fixYtCoTAwMHD79u3ub5stW7Z4eXl5e3vT5/Qiorvl1KlTWVlZCKMG
AAAAAACAnyYaDjP7ntE4eteuXe6DaC6Xy+fzlzmjtUZsvlqBQJCQkJCTk1NU
VESjdRrml5WV5ebmZmRk0DFms/mvbsG8VHOxWJy0JDqADnNPQcta0ZTd+Pi4
1WqlCmi12urq6lVM2T169Ki8vPzxDyrcyOVynU5HZ+7r6xsdHXW5XPPz82uZ
Gl0YkUqtmpycvGgjbAA2LpLusaCgIB6PR11M3brB1YBNt8TbZiGEUQMAAAAA
AMBPmUajuXHjRlxcXEhIyAcffOA+ZPb39//ss89iY2OvX7+uVqs9Wg0aldNA
ngbphw4d+uqrr5KTk8VicW5ubokbqmp/f/9f3VJmbOQqu+np6ZGREavV2tLS
Qq0hkUgeP378o6ljmWBYOowukIpQqVR1dXX19fUGg0Gr1dKvVDelUkmXxi63
o2u02Wyjo6Pj4+NUqMvlWmljshGpbBZggUCQmJhIrUHF9fT0rPSEa8Su5Dxx
4gTVhMvlRkdH37p1CzGPPzX0DNbU1NB9mJKSQvcAPe88Ho/D4Sw6ZUd/omeT
7pmrV68+ePDAbDbTo7Eu6W8AAAAAAAAAXn80gk5PT4+MjNy7d++2bdvch8w7
d+48dOjQxuw8plQqxWKxSCSigfxvf/vbuLg4KjctLS0rK6uoqEgmk7kP2Gdm
ZhwOxwbvZedyuaanp8fHx3t7e+m0dPyTJ09+NA8Fu7iOjq+vr29paWlvb+/u
7qZrsVgsJpNJp9NpNBq6fLlcrlKptFqtwWCgw5hQ2ZGRESp0pY3JRqR+//33
1JJcLlcgEJw4cYJamOpDDbLSE64Rmzo2OTmZWtvX1zc8PDw1NRUxjz81zGQ7
dfr9+/czMzOXTkjB4XDoTwEBAceOHaN3lPukPQAAAAAAAMBbj13etnC5C5/P
j42NdY9I9Rw2Yo5G8SKRiAby9C/9TJ/Q5/RXTxS6oik71vDwcHt7u1qtpq/8
aB6KsrKy8vLyiooKOp7acGBgYGRkZHJy0uVyjY6O9vX10Yc6nU4uly8aKmu1
WsfHx1d9gVR6QkIC9axAIKCu9GhjLgGpY+HvsGmg6Tagm2HpCNmNfBEBAAAA
AAAAbC52Idb9+/dPnjzJ4/G4XK6vr6/7SDkwMDA+Pj43N7e6urqrq8uj9Wlv
by8vL8/Kyjp37pxQKKRB+uHDh0+fPr2OC8NevnxJVz03NzcxMTE0NNTb2/uX
v/zlwoULAoHg0qVLjx8/ptZYTkpch8PR09NjNBrVajWTh4JdSkf/0s/0Cf0s
lUqZzLBMjonW1ta+vr6xsTGmlPn5+ampqeHhYavVarFYWlpa/i5Ulr5Fv5pM
pu7ubpvNxqaUnZ2dpe8u85LZqOfz58+np6dv1hQZG6hbUFBAldmxY0dQUJBI
JELq2J8sNlX09evX6f1Dz+Du3bu3bdvm7e3t5eW1ZcuWRSP0U1NTCwsL6+vr
6R4eHR3d7IsAAAAAAAAAWH/sLEpeXl50dDSHw/H19aXxsvtIOTg4+OLFi2Vl
ZXq9fmBgwKP16e/v12g0JSUlycnJkZGRXC43PDz8woUL67j9GjNLOTU1xexH
p1Kpvv3225MnTwYFBZ0/f764uJhag9rk74JnF5qcnBwcHOzo6KBmkclkpaWl
bB5Y+pd+pk+kUilVW6vVGo3GZ8+esZG509PTbOJd+sHpdI6Pj4+OjlLR7qGy
arW6tra2urpaqVTSr83NzVRcX1+f3W6n42dnZ5d5yV1dXXSS3Nzcu3fvPnjw
YLPST7Dzw9Q4SUlJ1OACgSAsLAypY3+y2FTRVVVVt2/fpqc+Kipq79699Bby
8fHx8vJyfxGxqauPHDlC74ScnByJRILFmQAAAAAAAPBWWhiruFBYWFhGRsbG
rGmh81MpVBaVSOX+Pw8kOZ2bm5uamqKCzGazTCYrKipKS0uLiYkJCAg4depU
QUEBVYDahFpm6fNMT0+PjY0NDAyYTKba2lpmTd2TJ0+ePn1K/9LP9El1dbVW
q6WCenp67Ha70+lkZuoWPeHLly/n5+fdQ2XZpLR0NolEUlVVpdFoqDj2bMu8
ZLaXWcu5QM9hdyykLmZisZE69ieOzf58+fJlehEt+n8HLDYhRU5ODr0rNrvu
AAAAAAAAAOtveHi4ra1NqVReuXIlNDTUfVzs5eXl4+NDA+cjR47cvHmTSevp
6Xkedj3Y6dOng4ODPZHkdOEqu3v37l2/fj0pKen27dtUyjJX2U1MTAwMDFDr
6fX62tpaiUQik8nUajX9qlAonjx5UlpaSmdramrq6+sbGhoaHx+fm5tzuVwv
X75c9ISvXr2a/wEbKtve3m40Guvq6ui01Ed0WvpZp9Mxa/Z6e3uZUFmqCbNs
7x+FyrJrKVnLuUDPYXcsjIqK+uUvf8nlcn/729/euXNn0eQg8EZg18vR/V9V
VVVSUkIPBT0do6Oj9NKgm3Ppr7PZn7/77rtLly4JhcJ9+/b5+/svGiFLNwyf
zw8LCzt79uytW7fo0TCbzVQ6u3J1Yy4ZAAAAAAAAwHPYQNQLFy4cOHDAfVzs
4+Pj5+dHo+MvvviisLBwmUPvNTIYDHl5eYmJiUePHg0MDPREktOFe9mZTCa1
Wi2VSnU6XU9PzzL3shsZGbFYLFqtlglflclk1JJNTU30IV0FEyqrUqna29uZ
ppudnWXmE169erXoCV/9wD1Ulpm46+rqam1tNRqNTFkKhaKmpoaZG2xubqbi
BgYGmM3x/lHvsBGprOVcoOewSQfi4+PprvP19T18+PC1a9foGru7ux0Ox2ZV
DFaN3ZXu9u3bKSkpcXFxmZmZ9Mwuc6qfzf5MN/m9e/foeT9+/Pi+ffsWjZCl
D+nNwOPxwsPD6Raig+kNRjfP1NTU5t7YAAAAAAAAAOtliYyN7Lh4I4MW2eSt
QUFBfD5/05OcLsFmszU3N1dVVVGdFQqFWq2mX7u6uux2e2trq1KpLC0t1Wq1
vb29Lpdrfn5+FYt/mKlFp9NJZXV2drqnumBDZamItrY2ZtZuenraE1e67tgo
yOTkZOpfT4Q/wwZj3yT0uqDe5HA4QqFQLBavNKCeDY2n79IZlo6QZTOYZGRk
UOn03ampKU//twIAAAAAAADABjCZTPfu3UtLS4uKitq9e7f7cPi9997buXMn
jYgvXbpUWVnp0WowYXGNjY0PHjy4fv16YmLiV199RVWKiIj4/PPPjxw5QqNy
GsIrlUqPVmM5XC7X9PT0+Pg4VVin00kkktraWvrBbDZ3dXUNDAyMjo62t7er
VKrS0tK6ujr6cOkt7Jbw8uVLKo6+S8XZbLaenp62tjZqJTotNQWztI9Zbkf9
aLFYrFbr8PAwNebU1NTs7OwSQbibi42CzM7Opp7lcrkhISHx8fFZWVnl5eXU
eptdQfgR7FLVoaEh6q/6+vrvv/8+IyPjxIkT7BaF7M6QKwqoZ7K60LfoVZCe
nh4TExMaGvrxxx8vOnfHvqPi4uKo9JKSEnocent7ESELAAAAAAAAbzq9Xn/7
9u2EhISDBw9++OGH7sPh7du3BwYGCoXCzMzM2tpaj1aju7u7pqYmPz//zp07
f/7zn3Nzc69du5aampqYmHjs2DGqW0BAQFJSklQq9Wg1lmN6enpkZMRqtZpM
JqVSWV5eTv+2tLQMDAwMDQ2Njo5OTExYLBa1Ws0ExnZ0dDgcDqfT6XK5VloW
Eyf74sWL2dnZqakpOo/dbmdCZalEnU6nUChq/0ar1TY1NbW3t/f29lJNmA3u
VlHoBmCjIL///nu69/h8fmhoaFRU1KlTp+hupHtysysIP4LdEJLuQ3oEcnJy
6PEUiUT0nAoEgoiICGbl25MnT1YaUE9H0vH0LTpzZWVlQUHBxYsXP//8cx6P
x+VyfX193d9R77zzznvvvbdjx479+/dTifS6oPuHHj1EyAIAAAAAAMCbjs3d
GRQURCPfzUrLyOYjyMrKKikpoeKkUmlRUZF7nF1cXBz9yaPVWI7x8XGr1eqe
zpVdSseiX+lD+hM1b2trq91un5iYmJ2dXXvpbKjswMAA1UGtVstkMolEQmWx
+S/Y+Nz1KtRz2DhoFv1KH252veBHsGmXqbPomaW3BPUdvTHovbFr1y6hULj2
SHa2CHrqExMTmczC9B5YNEKWPqe/0jF0JB2PCFkAAAAAAAB401VXV6ekpAgE
gl/84hfvv/+++yj4448/Pnr0aHJy8t27d5uamjxR+sTERH9/v9lsrqysvHPn
TkZGBg3zZTKZxWJpaGiQy+VlZWVUvV//+tc0JBeJRH/605+YODsaj3uiPktg
c0Mwe23pdDom6wQ1oNFotFqtc256e3s1Go0npuzYUNmxsTEmpWxzczNVRvkD
lUpFtaJfqb+oXCZQd3h4eHx8fHp6eunkF5uCWeR56tSpqKio0NBQPp+fkJDw
/fffI3Xs64ldAvfs2TOFQlFSUiIWi6nLIiMjqfs+/fTTgICA6OhoembpQa6p
qenu7l51WexCPrql6SZhUtJ88sknXC7Xz89v69ati268KRQK6ZVVVFRErxF6
BDYmaQ4AAAAAAADAuisvLz9z5sxHH320ffv2d999130UvHfv3uPHj3t0ezE2
X+3du3f//Oc/5+TkPHr0yGg00kCbmY+in69fv37kyBEOhxMREXH58mWpVNrY
2LjxGQpevXo1/wObzdbS0iKXy5VKpVqt1mq1VM/h4eEXbui66HNPTNmxobLM
fnpU7sDAAJNStqmpiZlIVKlUzAwe/drc3EzVo8YcGxubm5t73Xa3o7rR3UX3
WHx8fEhICJfLFYlE2dnZSB37emI3mquoqLhx40ZiYmJsbGxYWBifz6fuO3r0
6IkTJzIzM+/fv08P6Rp7kN0ur7e3l+5qektcuXIlOjqayvL39/fz83N/WXl7
e/v6+tJbgv4aGRnJ5JguKytb6U56AAAAAAAAAK8JGgjHxcUturX7/v37z507
V1RUpFKpaNTsidLNZjNVICMjIysrKzc3170sNiyuoKAgJiaGaigQCBISEnJy
cqRSKY3EPVGfJbx8+XJ+ft7lcvX39xsMhoqKCrlczmSdsFqt4+Pj7gfTJ/Qn
T0zZLUSnpZNTEV1dXc3NzYuGylIlBwYGVp0Fw3OQOvbNwqZzZXNMf/TRRzt2
7PDo48m+Ch49evT1118zM4RcLnfRCFl2uR29NLKzs1earxYAAAAAAABgc7H7
/+fm5opEIhrn+vj4eHl5uQ9+Q0JCUlNTZTJZS0vL0NDQ2gtll80MDw93dnY2
Njb+5S9/SU9Pj4uLS05OpsF+WVmZXq8fGBigg51OJx3W19dHNaTRNw3D9+3b
FxUVlZSURJ+oVKoNDnljQgJHRkba29s1Gk1FRQXVwWQyUQ2pnlRb94PpEuhC
6HIUCgUd09/fT1+cnp72RMWYDLYTExPUR729vVS9pqYmrVbLpqWgOuh0OurE
rq4uq9Vqt9vZlLKbHirLpo5l11Ju7sQsLIruFmZxnVwuv3v3rlgsPnv2LPVX
QEBAcHBweHi4UCg8f/78t99+64lFsGyELD1TVHpaWtrx48dDQ0MXTUhB7zE/
Pz/6nG4kZq1dcXGxwWBAhCwAAAAAAAC8EdipEhrSRkREeHt7e3l5bdmyxX3w
e/DgwWvXrjGryCYmJtZeKDv0bmtrq66uzs/PT01NPXbs2P79+2lwnZWV5T49
yGZ5yMnJiYmJ2bFjx549e2icLhKJaMxeUlKywSFvVG2qWFdXV1NTk1KprKio
0Gq1zAKehRvdP3/+3GAwlJeX19bWNjY2dnZ22mw2D+2/x+xux6aUHR4epnaj
iplMJr1ezyy6o2pQnevq6qgy1Pg9PT1UH2rhTQ+VZaeOCwsLv/rqKx6PJxAI
YmNj1568ANYRdRD1hVQq/fbbb8+fPy8UCsPDw4ODgwMCAo4cOXL27Fl6jdy9
e1cul3tiq0l2qn9gYICePrqfb968efr06UWX29F7zMfHx9fXl+6loKAgquo3
33xTXFyMCFkAAAAAAAB4IywMSFyIRru5ubnrmHuRDXBTKpV05qSkJJFIRKN+
DodDZdGo3z2KjQ3By87OjomJoQH4Rx99RCN0Op5NYruRIW8Oh6Onp4caTaPR
yGSyiooKg8HQ39/vcrnm5+f/btbr+fPnjY2NSwfPes709PTY2NjAwEBbW5tW
q62qqpJIJOXl5aWlpZWVlWq1mq6CmUV8fUJl6Vak+4E6l+7GyMhIujHofqD7
ZLPrBf8/etCog9zTN+/YsYOex816GNnIXDZN7ULs7nYL3y0AAAAAAAAAr62e
nh65XJ6fn3/69Ol9+/a5D3W3bt3KRJbFxcUVFRVNTU3NzMysy6zOwlV2NJRO
SkqigjIzMx8+fOi+Eobd6L68vPz69esJCQlnzpw5f/48Hc9GTW7AshlmhY/L
5RoaGqJqM8kdmPwOra2t9CGTk+LvYkttNltzc3NVVRUdZjAYNnjKjonhZWbt
qJWoJsxyu5qaGoVCwaTMoIrJZLInT57U1dVR9ZjwXuoaJk5240NlqT50M4hE
okOHDoWGhgYFBVFHP3r0iC5kvW4/WDV2z8n4+Pjf/OY3fD4/LCwsNjY2MTHx
xo0bFRUVG7yGjYqTSCT0HqAXwuHDh3ft2rUwew673C4wMPDLL7+kyhcUFDDZ
qDcl5TQAAAAAAADAcrS1tT18+FAsFtNgds+ePe5DXT8/P39/fxqV03j80aNH
zCqsdYmdXLiXnVKplEqlJSUltbW1VCX3/aaYeSf6pL29Xa1Wl5WVlZeXV1RU
0PHsgpkN2JyKKjw7O+t0Ovv6+hoaGiorKxUKBVWgubm5t7fX4XAsOsdlt9vN
ZrNcLtdoNPStDZ6ym5+fp2ZhNrgbGRmx2WxU1WfPnhmNRp1OV1dXR5dQXFx8
8+bN1NTUnJwcan9qYWp/qvaiM5AbgOqWn5+flJQUHR396aef7tixIy4urqCg
gCo/NjY2MzOzwfUBd/SoMr1z8uRJ6qDIyMiEhAR6e9CdQ/cS3VobvFMcuwT3
zp07Fy9eFAqFgYGB27dvd3+PbdmyxcvLy9vbmz6nV1xYWNipU6eysrI2K+U0
AAAAAAAAwHKwY3Aa7e7atct9qMvlcplVNGlpaTKZbLNruslcLpfT6XQ4HB0d
HSqVqrS0tKamxmg09vT02O32v8s6wRoeHmZmGnU6HR28wVN2C1E9qbZUZ5PJ
pNFoqqqqvv322zNnzhw8ePD3v//9H/7wh3v37imVyu7u7kXjfDcAG3rJ5CGl
+zAiIiI7O5s+t9ls2IJsc7GBqCxm58l1jJpfnSXeYwuxYbzIbAIAAAAAAACv
LY1Gc+PGjbi4uJCQkA8++MB9YOvv7//ZZ5/FxsZev35drVZvdk03GZu41mQy
KZXKx48f19XVPXv2zG63j4+Pz87OLvotdsquvr6+oaGBXZK3wZVnUT2ptlRn
upCOjg6qz//8z/+cPXtWIBD8+7//+7lz5/7whz/87//+r0ql6u/vt9lso6Oj
dDyz093GhMqyCQ5SU1PDw8N9fX3DwsKSk5PdkwjDZmEDUVnl5eUtLS3rGDW/
Ot3d3TU1Nfn5+SkpKdHR0QEBATwej8PhLDplR3+im+rEiRNXr1598OCB2Wym
u31dEusAAAAAAAAArBca56anp0dGRu7du3fbtm3uA9udO3ceOnQoMTExLy+v
oaFhs2u6ycbHx5n5Op1Op1AoqqqqqE3oE6fTOTs7Oz8/v+i32Ck7rVar1+vp
K93d3WNjYxtceRbVkwnvpcthQmWLi4upiwMDA8PDw6Ojo0+dOnX16tW//OUv
BoOhpaXFYrFYrVZmd7uNCZWlgpitC2/dukX14XK5AoHgxIkTYrH44cOHbW1t
Hi0dlsYGorLo9h4aGlrHqPnVYTJfNzY23r9/PzMzc+mEFBwOh/4UEBBw7Ngx
evuVlJRoNJr+/v7NqjwAAAAAAADAQmyCzoWLUvh8fmxsbEZGBg1pzWbzZtd0
k7GTb0qlUqFQyOVyahO73b7Mb2k0Gq1Wq9PpOjs7X6tslY8fPz537tzu3bsD
AwNDQkIiIyPPnDmTnZ3tnuW2r6+P6rzBobJlZWUJCQl0WwYFBQmFQjYh6caU
Dm+ohYHVS8ArDgAAAAAAAF43TM7WycnJ+/fvnzx5ksfjcblcX19f9/FsYGBg
fHx8bm5udXV1V1fXZld5c7AZHKxWa1NTk0wmUyqVWq12mevlRkdHOzs7dTod
sySJvmixWEZGRjam8stBV3T58uWwsLDQ0NBf/epXn3322e9///s//vGPcrmc
rlSj0VDlTSYTVbu/v39oaMjhcCy9sHC9MOs/IyIiDh48GB4eTjVMSUmRSCRI
HQtLYAOrr1+/Tm82gUCwe/fubdu2eXt7e3l5bdmyZdHY/9TU1MLCQjadzWZf
BAAAAAAAAPx0zczMjI2N2Wy2vLy86OhoDofj6+tLo1r38WxwcPDFixd/4nuI
Mflqqa1oLK/VaiUSiVKpNBqNnZ2d1HpTU1NLf93hcPT09NDxBoOhvr5eo9F0
dHS8VlN2dXV12dnZX3zxxeeff/6rX/1qz549X331VU5Ojk6no9rSxcrlcpVK
RddOl9Da2trb27v09n3rpaGhgW7OxMTEqKgouhV5PB5VrLCwEKljYQlsYHVV
VdXt27eTk5Pp/tm7dy+93/4/9t4/qM3ryv/f8bCYDJNlWW8Gr8uwGSbjH/Ew
WS+hBoeolGqJIcYaxtVSwLFV6jAUs9iySyklhEIIValXcQ3ewNYMpYZACWMr
xoARFkToJxISQkggECAkfgrxQ+K3CU6/Z/N8P081gVJsAwL7vP7wiIdHz3Pu
ue97mXN9zz0uLi5OTk72UxxZFDsiIiI5ORlkDwMcC1IgCIIgCIIgCIIgDmR2
dtZsNkNwmp+fHxoaumbWGJVKZbFYL/jOk4WFhenp6ZGREa1WKxQKq6urxWKx
TqezWCwzMzN/c9nKZrMNDw93dXWp1WqFQiGVSvV6/cTExPYYvxHIUpsxMTEU
CsXb2/vcuXO///3vwWYwWCAQ1NsBbddoNOsXyd0ssHQs8iyMjY3BoAMJffTR
R6CcNf9XgoQsSIHJ1wiCIAiCIAiCIIhjmZiY6O7uFovF2dnZwcHB9tGrk5OT
i4sLhLcREREFBQV9fX0Q/L6wKyQzMzMjIyPgq7a2NpFI9PDhQ6VSOTAwANcX
FhaWl5fX/zq5ZNfe3i6Xy+EJxHLf9hi/EfR6fV1dXV5eXkJCQlBQkIeHB51O
v3nzZkdHh1qtVqlU0HBiux2fz5dIJK2trXC9p6fHZDKZzebJyUmipOymp8qS
GY4ZGRkgUWdnZzAvLS3tBd/2ueksLi5arVbw9tTUFAxzhxeS2CyIghSg1c8+
+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
rb6+XiAQKBSKrq6u4eFhm832pA9cWlqamZmxWCw6nU4sFu/kJbvW1laigjCd
TqdSqb6+vikpKQ0NDet/i2ygwWDQaDRSqZTP53O5XGgp/Auf4Qpch98+daos
mc9YVlYWHR0NogXbwMg1U3eRNSErRCcmJlIoFPChp6fn4cOHwZNkCjxRLtbR
lm4HpKJqa2s/+OADULuPj4+Hh8eaGbLkdjvQXn5+/gvlKARBEARBEARBEGTb
IDd9FRcX0+l0iEZdXFycnJzsQ9SgoKDMzEw+n9/Z2Tk+Pu5ok7cV4qT6yclJ
vV4vk8nq6+slEolWq33qM/nJBxL7xKqrq+GxJpNpEwuqbhYdHR0VFRXp6enn
z58HDXh7eycmJtbU1Kz/LaK07szMDEgF2gV+02g0CoWC2GgH3pNKpfAjPFyn
0w0MDID2pqam4H5iK9dGtiyS+Yz379+/evWqr68vhUIJCwsDAV+7dk0gEGA1
z29BbicDb3d1dUFHlJeX5+Tk2K/HvvPOO2fPnmUymTdv3gSdv1Cbx0hFKZVK
0HxWVlZsbGxwcPCaBSlghnRzc4ProDpir92dO3fa2towQxZBEARBEARBEATZ
RKxW68DAgFqthsAzNDTU2dnZyclpz5499iHqyZMnr1+/Tuwrm5mZcbTJ2wpE
8ePj4waDoaOjQywW19fXy+VyYlPN0x0+T+7n0ev1EomkurpaKpXCAzexoOpm
ARbW1dXl5eXFx8cHBga6u7szGAwOh7P+t4jT7cg82YmJiZGREaKkLPiQOAwQ
Gk6s4CmVys7Ozv7+/tHRUbh5gwcDkgtQAoHg2rVr9kmdV69evX//Plbz/Bbk
khSMdOhBGOyXL1+OiIggVjth4IMPwXU3btyA34pEop6enhdqAYpUFGgVVMrn
8wsKCpKSktbcbgczpIuLi6urq7e3d0BAAI1G+/DDD+/cufNCLXIiCIIgCIIg
CIIgWw3EmBDFNzQ0pKenQ/C+ZiIYxKTFxcUvZoVEq9VKVHeVyWQQyNfX17e1
tQ0NDS0vL6+srDzFPi744vz8PDy2t7eXWLITi8U6nW4TC6puFiaTCSysrKy8
cuWKv78/KIFOp8OPT/qcdVJlHz58KBQKFQpFT08PSPFJy+9i6dgNQi4Uw0hn
sVj2haEPHToEAxx8CGMcpIiuIyCzwqlUqre395oTI3m6HTiQzWZjhiyCIAiC
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
giAIgiAIgiAABJUMBmPNY9L9/f2vXLlSWVkpkUggAnW0pVsImV9pNBoVCkV9
fb1AIIAPXV1dw8PDNpttS99OLtmpVCqZTAavhs87fMludnbWbDb39fXV1NSw
2eydkz1NduXY2FhPTw90olAofPjwYXV19Z/+9Kfi4uKbN2/eu3dPqVSCh2dm
ZrbofMJNh8y45PP5eXl54HAqlert7Q3j9NChQzQaLSUlpbS0tL293dGWIv8H
2V+1tbUffPABdJaPj4+Hh8eaGbLkdrvo6Oj8/HxMbUYQBEEQBEEQBHmRWVxc
tFqtY2NjxcXFdDodYkYXFxcnJyf7QDIoKCgzM5PP53d2do6Pj6/5HPLc9V29
sWdpaYnIrOzp6ZHJZA0NDVKpVKvVDg4OTkxMzM/Pb+nbZ2ZmiPRSlUolkUga
Gxs1Gg0Ys6UvfUbIZcby8vLk5GQqlZqenl5bW+twJZAbJkHeo6Oj/f394FWB
QFBTU1NRUXHr1q1PPvkEbP7yyy91Op3BYADPQxdDc6CX4Ys7rWQnOb5AmSKR
iMPhsNnsxMTEsLCw4ODgt956y9fXNyoqKiMjo7S0tLm5eWBgwNEmI/8HuStS
qVSC8LKysmJjY6HL1ixIAXOvm5sbXKdQKMReuzt37rS1tTl8NCEIgiAIgiAI
giDbj9VqheherVZDeBgaGurs7Ozk5LRnzx77QPLkyZPXr18ndprNzMys+RyI
KMfGxnZ7JhdE1kT9go6ODolE8vDhQ4VCAT9uz4Hw4NvR0dGenh4I0oVC4YMH
D1QqFVzZ0pc+I2SV208//fTs2bPe3t4MBqO4uNjhSiBTZRcXF8Gx0IO9vb0y
mayurq6ioqKgoOA3v/lNUVHRF198IRaLoZc1Go1eryfXZpeWlnZUyU5yfNXX
19+8eZPJZMbExBBbtoKCgs6cORMXF5ebm3v37t329nYY0dAvjjYZ+T/IDNmR
kRGYVfh8PmgvKSlpze12MPe6uLi4urrCOAoICKDRaB9++OGdO3ccPpoQBEEQ
BEEQBEGQ7QciQbVa3dDQkJ6eTqFQ1kzXgsixuLh4/WUr+C3Elbs9k4tcgCKO
kmtsbITPEGsvLy+vrKxs9bYrYlmmt7dXqVRCaF9dXa1QKIaHh7f0pc8I2e8s
FotKpYJa4F/4vAOVMDo62t7eXl9fX15efvPmzY8++igvL+/27dvgZy6XCw4n
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
wCW7bePpSsd2dXWBHlgsVnZ29q9+9av09PTf//73XC53gweFrayswBuh0+FO
6HcYpyaTCXRLFB8B9ZIbROEzXNTr9cTCHRiz8g24ZIf82e4EzsbGRpijQIeR
kZHHjh2D2d7FxcXJycl+widLhEdERCQnJxcWFoJisSAFgiAIgiAIgiDINjM7
O2s2myEcy8/PDw0NXTNPikqlslis52avxfz8vMViMRqNarW6ubmZqDrR29tr
tVrhV8vLy+t/fXUGMXkGFI1GS0xMBF9VVlaCuzZYS/SJWFpampmZAft1Op1Y
LMYlu+3niUrHkgmJ8BUOhwOfQXXPcvYgqV6tViuTyexTZZuamuRyeVdX1+Dg
IBgDSl5ZWcHT7RB7yHrZH330EUz4a/4fDQlZkAIEDBOao21HEARBEARBEAR5
sSAP1c/Ozg4ODraP15ycnFxcXCCgi4iIKCgo2OY6C5sOkST4+PFjq9VqMpk0
Gg0EoSKRiMfjqVSqwcHB+fl5ovLm+s8hV2xiY2PDw8P9/f0DAwODgoIgtj19
+nRkZCSDwUhOTs7NzS0uLq6qquJyueDetrY28DO8Fxy+sLDw1K1YvWQnl8vB
+OXl5U1Pwt0GoC1DQ0NdXV3gHL1eT2hsbm7O0XatB7kKl5CQcOLECRggIIPr
16+r1Wqj0Qjqsr+ZTEgUCAQymQzuGRgY+NY9TwS5RxQ6ndhuR8i4qalJKBRK
pVIixRuMBMeazeapqSlMlUVIyHrZn332WVpaGo1GO378uJeX15oZsh4eHj4+
PjCzXb58+datW/alUnbjbIMgCIIgCIIgCLK7gLheJpNxOJzk5OQTJ07Yx2su
Li5ubm4QtZ07d668vBxi/9nZ2c3dM7adfP3110Sq4Pj4OLHeJfkGqVTa3d0N
Fze46mU2m4lFmNu3b+fm5l65ciU+Pv78+fN0Ov3dd98NDg729/cPCgo6efIk
hMMXLlxITU1ls9klJSX379+H18G7/maFi3VYvWTX0tJiMBg2uN640yDlB86p
q6sDr+78ArjkPqWMjAzobmdnZ+jutLS0NTPHyYTEgYEBaCx8tlqti4uLT/12
8iRGYuGOPONOLpeDkkESAoEAZAY/trW1dXZ2wm8xVRYhIetlg0KqqqpgaoqN
jT1+/PiaGbJwEeZ/b2/vkJCQhIQEuBmGKoh/K1L+EQRBEARBEARBkG+xTiVB
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
9fX19vZ2d3dfc8kOfgXjJS4u7tq1azCaQP9DQ0M7fGMzgiAIgiAIgiDIzgHi
r5ycnLCwsGPHju3fv98+4Dp48OCpU6eYTGZJSYlKpXK0pU/J9PQ0hJlgv1wu
F4vFRBrj8PDwwsLCo0ePVlZWHG3ghpibmyMOtQPjZTIZtAJC4Nu3b+fn56em
pp4/f/4//uM/vve97wUEBLz55pvwL4VCWX9xacei1WqrqqqysrIYDAa0wtPT
Mz4+vrq6envePjEx0d3dLZFIQPNpaWl0Ov3kyZMnTpzw8fGBsZCQkLD+Quji
4iJcgZ76/PPPExMT4VtBQUFnzpxxVHrvE0Ge+kiUlAVXjIyMGAwGnU6nVqth
+Ij+H0ShE7huNBrNZrPNZoOhhKfbvQgQi9Ig/rt37+bm5q5fkMLd3R1+5evr
e/bsWfgrw+FwYO4aGhpydCMQBEEQBEEQBEF2Bw0NDSkpKWtulthpJTufDovF
AsYLBAJiqUEqler1+h11qtjTQWZuVldX/+Y3v2EwGKGhof/+7//+ne9855/+
6Z9eeuml9VM4dyxkCnBcXBzIElpBp9MrKyu35+0mk0kikZDJsDAiPDw8PD09
YXRER0fn5+dvMN2Yz+dnZWVR7diN2eVkqmx/f79KpSLqLD948AAkx+PxYCip
1Wr4Fehwfn6eOOvS0SYj28TqcboOz8efEgRBEARBEARBkO2BLIh59+7d+Ph4
b29vDw8PV1dX+zjLz88vISGhuLi4qanJYDA42uQng2ygyWRSqVSNjY0ikUih
UGi12sHBQZvN5mgDnxWyPoJUKq2oqPj1r3/985///P333//hD3/47rvvBgcH
+/v7/+hHP0pNTd1dZ0kNDQ3JZDII7ZOTk0+cOAE6DA8Pv3Xr1tjYmNVqhVZv
6dv1en1dXV1eXh6TyaTRaPbb5Nhsdk1NzQaLehDpvRcvXoyMjIS+gOckJiZ+
/vnn29OKzYJMlQWZDQwMdHV1wVBqaWlpbm6G0QTCk8vlRJ4szA/Dw8MWi4VI
lX306BGRJ4upss8rZKr+jRs34C8IhUI5evTo/v37nZ2dnZyc9uzZs+YZC5mZ
meXl5bv0mE0EQRAEQRAEQZDtgVzwKSkpiYqKcnd3d3V1hWjLPs4KDAxMTU2t
qalRKpUjIyOONvnJIBoIcaVOp5NKpQ8ePBCLxcR63cTExPz8vKMNfFbINcn+
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
CxJUKBQikQgqycHBwc7Ozlw6+fr6JiYmqlSq1tbWoaEhaxd5TkxNTY2NjQ0M
DKDMlZWVBQUFWq22vb0dNbW1TV/zDtPFnZ2dqHVeXp5Op4PanZiYeMK8nCxU
Fu15/vz51NTUI0eOREVFCYVCf39/Hx8fDw8PPp8fGBgIW4qPj8/IyLC60GY7
fPr7++vq6oqLi7Oysk6dOoXiweZh1X19fajXwq8OlZeXHzt2DG0VEBCA1hMI
BAkJCUVFRTYYSjxfzAyVhYk2NjZWVVXBROGnGo0Gr2tra3Hx2rVrvb29XKgs
Z7roRAqVXdSwCFmDwYABJCkpKTIy0s/Pz2JCCsxETk5O5ttQL168CBemCFmC
IAiCIAiCIJ4RWJAgBFFgYKC9vb2dnd2yZcvMpVNAQMDJkye5I+Khna1d5Dlh
nnWioqKiqKgIL3p6epbwegjj/v37U1NT6Knr16/rdLq8vDytVtvZ2fnk28lY
qCye1tTUVFNTU1paCh2tUChOnDgRFxcHZS0WiyMiIkQiUWxsbGpqanFxMazr
1q1b81jBR4KtEuj1+vT0dJRq9+7dISEhfD5fKpVmZGRYK/dBfX09yoMyhIaG
+vj4uLu7o2BZWVk2GEo8X8wMleUW7oxGY3t7O+ykuroaFqvRaMrLy/HCYDA0
NzfDjAcGBtAmtFCz2GHr5+hQDCAqlerMmTP79u2zuN0OM5GDg4OjoyPbifr+
++9jtKEIWYIgCIIgCIIgnhFYkGB8fDyfz7cYoAStpFAoFlfmPi7rBCf/IQxL
S0uh/QcHB61droVgZlBwZWVle3v78PDwxMTE/J4Pxnb0wYqUSmVqampSUpJE
IhGJRFKpVC6XWz2eepZslQKBQCaTWWsf4LOTOnYWmK2iyt3d3bAi+GxJSYl5
qGx1dXVHRwe3ajc1NWXtIhPzCbyPc4GZIfYzT7fDTIQhxeobdwmCIAiCIAiC
IBaGnp4etVqdkZGxb9++TZs2mQul5cuXc3FJYrE4Ozt7gU/pfzy4rBPT09MQ
+M3NzSqVioXadXd3PyMqj6Xe6O3t1ev1eXl5XJ7cwcHB8fHx+d2+xfawwZAM
BkNxcXFOTk5aWhqUdXp6en5+vlar7ejoGBkZmctz7t69Ozk5iRdPnsWVRXxz
K9KZmZnx8fEikYjH43l6evr4+AgEgtjYWBi2tTbtPDupY2eB2SosE/YJK4K1
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
//zDDz/EnVDrEPvWLvujwVLHsgqGh4dnZmZS6ti/y+Tk5PDwcE9PT0tLC6zd
PFS2rKwMxo8xoa+vDy2J4QKDBm27WkSg1+D+NTU1crlcKBTOHiFr+xmiCYIg
CIIgCIIgZgfCNicnJykpKTQ0dP369eaSZ8WKFa+++ipUz+HDh0tKSqxd0tlg
h4BB0EGVFxYWarVaVA3afGRkBCre2gW0MmiZ7u7u2tramq9BE6GhRkdHrV2u
R4OlSuEOtmIBs2KxODg4GIYKc127du0///M/v/baa+++++7Zs2dx540bN2wz
BHgWWOrYAwcO+Pr6Ojs7o4LHjx+n1LF/l+np6fHx8eHhYfh+V1dXc3MzzB7t
hvasqKjgjnPEyAD7N5lMsCW4BoXKLha4o0rRd5cvXz527Fh4eLifnx9c3uLa
HZu/MD5wR1mi93t7eylCliAIgiAIgiCIxYLBYEhLS5NIJAEBAa+88oq55Fm1
apWnp6dQKDx+/DjUrrVLOhtQ3CMjIxDpEONarbawsJBblaKdFRx37tzp6elp
bGysq6urqanR6/VdXV2LbsmOO+qNyfaGhgYuYBZi/L//+7+jo6PffPPNzZs3
83i8l19++Z133vnkk09wJ+qOT1m77I8GO2ESrhccHOzs7Ozr63vgwAFKHft3
efDgwfT0NAaE8fFxLlT2xo0bGBYwIOh0OjSpWq3GEIFf4Qutra0wJAqVXSxw
RxdiVEfHlZSUZGZmxsXFvfXWW+7u7i4uLo6Ojubz13PPPbdixQpXV1cvLy+R
SCSVSjHTwQYoQpYgCIIgCIIgiMUCNKxcLucO8Ie6WaSp9yDPobvb2tpqa2sh
yQsLC6HHTSYTxb5xsPbhzviCbuWO+LN2ueYN2Ofvf//7qKiorVu3/su//Iuz
s7NYLM7NzbV2uR4TSh07j8wcHBgsfJ5CZRcXzEHg41Kp1Dyd9ExwHe/iHtyJ
++n/OARBEARBEARBLBbKysoSEhL4fP66deteeOEFc6Wzdu3a7du3x8fHnz9/
vqmpydoltQCXJfbPf/4zd1ZbdXV1VVWVVqvVaDSQ4UNDQ7RthoOtWjQ0NHC5
dNvb24eHh61drnkDVfv000//8z//UywWe3p6Ojo6hoaGnjt3zmLOFJbl4dat
W/hgZWWlXq83GAxoHFiRyWSyeqYVljr28uXL+/fv5/F4W7ZsCQgIEIlEcrkc
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
pn19fXMsDzv0z2g0trS01NTUlJaWXrx4UaFQQMvHxcVB1O/fvx8vkpKScnJy
cM/8NcZssNSx8fHxaBZHR0d/f//ExEQK5ZtfZobKDg4O3rhxg4uThT1UmoEh
CCMPfKq3t3doaIj+ZWBTsLD3S5cuHT9+fPaEFGwr744dOzAzYujQ6/Umk8na
lSAIgiAIgiAI4lkESj82NtbixgMejxcREfGo25MWEohoKOXS0lIu8YROp4Nq
HhkZsXa5bJf79+9PTk5Cw3Z1dXFLdjYSSszWEmGQMDmRSOTt7e3q6vrY8afs
gX19fbDeJ88FyR7Y2NioVCpTU1OTk5PlcvkCOwiljrUWLKjcaDRi2MFog2Gn
qKgIToSfeI0ruI53re5NhEXgHfARLq4cXjN7hKztT38EQRAEQRAEQSxV2Gn2
ly5dioqKcnd3d3FxcXR0NNcsnp6e0dHRCoWirKwMOtTaRf4rXNaJ8fHxGzdu
cFknKioq8GL2FKLEX77u9+np6cnJSXRoVVWV1ZfsuEDd27dvX7t2TaPRQB0f
P3589+7dfD7fx8dny5YtXl5eO3bsSExMfNQsD2zb3sjICKyCixt9kowk7IE9
PT0GgwHav6CgID8/f477cJjHoTy4GeUZGBi4c+fOo2Z1YaljMzMzxWKxq6sr
WiksLIxb0mxsbHzsChKzw5LdDA0N9fb2dnZ2Njc3Y9jhNtpptVqdTodfm5qa
4FBcZgoWJ8t1sU2ld3kGwQjQ0NAAzz116hRmPQwy69evX7lypb29vZ2d3bJl
yyyeC4HBJysr68nX/AmCIAiCIAiCIOYIE/7p6enQ+87Ozo6OjlAu5prFx8cn
Li5OqVQaDIaBgQFrF/mvQDiPjo729/e3tLRALBcUFOBna2srColK4V1rF9B2
4WL97t+/39fXV11dbfUlO+40QmjhwsLC06dPS6VSWKOvr++aNWvwE69jYmKg
ry9fvgytfePGjTt37szxyexwvMnJyfHxcWhtfNffylXxSA9EGWBpKHNnZ2dH
R8ccT7tiHoeP6PX64uJiuFVPT8/sJ/LNhC39XblyJTY21tvb28/Pb9u2bSKR
SC6Xozcfu4LE7HCn27E42ZGREZgBl1K2qamptrZWp9NptVpuBa+urg7X0b/o
cZgfzIZC9a0OOo4bbUpLS9PS0uLj40NDQzds2IC5z8HBwc7Oznz6YwnTQ0JC
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
fv06zBiSPy0t7fjx47GxsXv27BGJRAKBwNfX18fHx9vbm8XMHjlyJCcnh1tZ
nZiYMH8gt2N27969oaGhuJ/H40kkkgsXLlDqWFuAhcrCvzBe1dXVVVdXo9+5
7Dl6vZ5ttzOZTIODg7dv36ZQ2YWHeSWGRHiTVCrFJPj666+7uLg4OTktX77c
4nGvQqEQE2V2drZKpULn2k6qJoIgCIIgCIIgFjUFBQX79+9fs2bNqlWrnn/+
eXM9smHDhsjISNs5EQtiios16+vrq6+vLykp0Wg0NTU1bJWJhO1jwJbsqqur
DQYDGvbGjRtjY2PWLtfSh1uChq6HwIcBt7W1of0rKiqKi4svXLiQmpoqk8kO
HToEHxQKhf7+/j4+Ph4eHvj1ww8/VKlUra2tQ0ND5g9EP8JV4bDR0dG+vr4u
Li4ikSglJYVSx9oCLFQWHYGOM5lM169fb2lpqa2t1ev1lZWVarVaq9XCDevq
6tC5FCprFZhXwiUxKubm5h49ejQsLIzH47m5uTk5OZlPkTMTx8jlcqVSib67
devWUkqaQxAEQRAEQRCEVYAkEYvFFg/Z9vLyiomJyc7OhpCEfrF2Sf9y//59
TvB2dXWhSHl5eeXl5Y2NjT09PcPDw5R14vFgS3Z6vb66urq2tra7u/v27dvW
LtczDctfyQXM7tmzJygoiMfjwU8FAkFsbKxFr6TUsYsClvAavdzX19fW1gan
U6vVFCprU7AI2StXrrz33nvwOzigi4uLxQhZtt0uPDw8JSUFnsudrWrtShAE
QRAEQRAEsShhR9YrFAqRSATF4eDgYGdnZy5DfH19ExMTLe7nsQqTk5MjIyPQ
sC0tLZWVlZ999llVVdW1a9eGh4fHx8enp6etXcBFCXRld3d3bW1tzddwiTxG
R0ef/MlciJkN5o+YmJgwmUxtbW0dHR2dnZ3clhjIc2uX66+w/JVcwGxqauqx
Y8cOHjwoFouTkpIyMjJwHYWHO5h/iqWOPXnyZHBwMJx68+bN0dHR+HhxcTGe
Zq3qEOZ89dVX3K45mBx6sL+/H12DMfYbobLcxtfm5ma8OzAwwI1yGAMx0OGz
1q7E0odFyBoMhvPnz8PvIiMj/fz8LCakwOzp5OSE63w+n9trd/HiRXQoRcgS
BEEQBEEQBPEYMHUPcREYGGhvb29nZ7ds2TJzGRIQEADtb/HULKsAxcqt19XW
1mo0mtLS0vr6elwhGfsksFweEJg1NTV6vb6rq2teluwgeMfGxgYHB/HTpg5S
M5lMqGZubm5+fn5BQUFxcXFDQ4NNbUJj+Su5XVjoF24XFsp89epVdFZvb+/I
yMjU1JT5p9g6/Llz53bu3Oni4rJx48bQ0NDY2NiMjAzU0VrVIczhgvcfPnyI
XuZSyqKj4SbmobI6na6ioqKsrIyL/UePX7t2DcZA/55YMFiE7MDAQFNTk0ql
OnPmzL59+yxut8Ps6eDg4Ojo6O7u7u3tLRQK33///YsXL1KELEEQBEEQBEEQ
j8HMGLqZQHcoFArbyYLHQjgrKyuhZNVqdVtbGzSstcu1uBkfH+/v70dLwh64
tQI08je2bz0eEKqDg4MQrfhpU6IVlc3NzZXJZHK5PDk5eeltQlMqlRKJhMtl
KRAIRCIRagqvsXa5CMvMDJWtrq4uKyvLy8srKCgoKioqLS3V6/UtLS10CIAV
qampwVixZ88e+BScy+KkyU63w+wJp6MIWYIgCIIgCIIgHgNIP7VanZGRsW/f
vk2bNpmLjuXLl3MxPmKxODs7+969e9YNbISY/fLLL6empvr7+7ndDpWVlZC0
lChhXmBLdg0NDRCYaNuZEZdzgW1KGRoa6uzsxKOKioqysrJSUlIuX76Mh9tO
jBis6Pz58/Hx8YcPH46Li+M2oTU2Nlq7XPNGeXn5sWPHAgMDBQIBn8/39vaO
jIw8ceJEfn5+aWmpTqdDd7D9P7YWtvwMMjNUFh4Eg6yqqmL/ocDr2tpabrtd
b2/v4ODg6OjoxMQEBkb4FO0xXgDgMhjTUlNTDx48GBwcvHr16pk5m9h2O09P
z127dslksszMTMxZNhh9TxAEQRAEQRCEzdLR0QH9LpfLIStee+01c9Hh5OTk
5ubG4/GkUumVK1egB6HorXjyORckODY2BtVTXV0N0QQNC+na3d0N3Uoi6Akx
X7JD82o0mvb29sfYu8iOfmptbS0oKICwTUhI2L17d2Bg4OHDh3NycmwnRqy+
vj49PR3mHRUV9fbbby+9TWisgqiat7e3q6vrxo0bf/KTn/ziF7+Ij4//8MMP
MzIyuJwUNhi2/AwyM1SWW7gzGo1wRnQTHFOn08E3y8vL8cJgMLAz7tB9NrIS
vuRhSWHOnTsXFxcnFAo9PT1XrVplPnsuW7bMzs7O3t4e1zGxCgSCvXv3Jicn
22D0PUEQBEEQBEEQNgvkA2R7bGwsdMfq1avNRYeLiwuPx4PWSEpKUqlU1i7p
X6ampiBLIU5bWloqKiry8vIqKyu5ZaWJiQk61ukJYUt29fX1er3+scONWYJF
2Awkqnn4GF7IZDLbiRFjAW4ikQhl8/DwgCNAU1u7XPMG2hnV4eqI2qELvvOd
73zve99zc3Pz8fEJCwtDfVk4sK2FLRN/+XoBnFu+Q+90d3c3NjbqdLqSkhLz
UNnq6uqOjg5u1e4bpxoST5VZZs+ZwAHhhksv+p4gCIIgCIIgiKeHXq8/ffq0
WCz29fV9+eWXzSXGd7/7XVzZsGHDz372sw8//JALRK2pqYFOgULs6em5desW
C3JcgA14ExMTkKX46rq6Oo1G8/nnnxsMhhs3bnBBYffv33+q377kQTPevHnz
2rVr6F+tVltaWtrc3Dw4ODjHj7NECXgCeic3N1cul0skkqCgID8/vy1btkCx
7t27NzMz03Z22bHA2F27dsH+3d3do6KiLl26tGSiRNHO6M3i4uIjR478n//z
f77zne+sWLHi+9///iuvvLJx48aAgICIiIh9+/YlJiampKSkp6ej7riZ27zK
7d26c+eO1bfXPsug2TGyoQvGx8fhjBh1MQCiT6uqqtBNFRUVGJa57XYtLS3o
sv7+/pGREfTavXv3pqen8VnquKcHZp/y8vKMjIyEhISwsDAMcRhDnJ2dLS7Z
4S2BQLBnz54TJ05cvny5ra3NZDLZQjongiAIgiAIgiBsFu60q6CgoA0bNqxc
udJcYnAbcl566aUf//jHP/vZz5KSkuRyeWpqKhRKfn6+Wq3mdD0XlLoASxyj
o6NcSCzkqlarhVxtbW29desWKdN5AZ3I7eRpaGjQaDSfffZZfX39zZs35/jx
u3fvoi/QQYWFhadPn5ZKpREREVxSRV9f3+3bt0OrJicnq1Qq2znLrrOzs6Cg
AKWKiory8fGB1obuTk9PXzJRouhTrlM+/vjj0NBQuPP3v//9H/zgB+vWrYO/
e3l58fl8Pz8/f3//wMBA1B3tEBsbCzfnAmYNBkNPT4/VD7F8luHiZNH4GOXQ
EXfu3BkeHuZCZTH6cSmzK/4XjI1NTU2w6t7e3qGhIfpfxtOGy7eOAfPSpUvH
jx+fPSEFhhcuEcyOHTsw5+bm5ur1epPJZO1KEARBEARBEARhu0CYQ6Rb3B7w
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
JTuWdeLo0aNHjhxB56ampl65cgUGwEKbFxFsBRvGCSN0dXWNiopCC1i7XPMP
208Ix9+yZQuPx9u/fz+cy3w5jrOEL7/8kh2Php94PccFBBgAPDQjIwNNmp+f
X1xcjNGmp6eHwv0WDBYqyw3RGCrRideuXWtsbKytra2qqtJoNNw5A3iNi52d
ndzCHfqIO46AluyeEO5oUDR+a2trSUlJZmZmXFzcW2+9ZTF503PPPbdixQoM
O15eXtzch9kZvUMuQxAEQRAEQRDPJky5z8wOOe9p7FgSPYvxs38rBe26detw
Q0JCwm9/+1uFQnHp0qXz58+np6f//ve/z83N1Wq1lL/yKQHxDl0/+5IdC6zO
yMhAd5hHNC9GZsaJw/ZgrtYu1/zDtkeigqips7NzeHh4ZmbmPMbisa9ISkrC
IINWVSqVMA8K97Mik5OTcOSenp6Wlha9Xm8eKltWVlZdXd3W1tbX14c+un//
/oMHD2hn13zBwswxTkqlUm6+g99ZjJBl6bZxJ+4nlyEIgiAIgiCIZxPItISE
BD6fv27duhdeeMFcNaxdu3b79u3x8fHnz59vamp68u9iSfQsxs9+IwWtn5/f
li1bXn/9dZQhJibm5MmTp06dSklJ+d3vfveb3/wGN//85z//93//91//+te4
mJaWlpWVNccUtMQcYUt2FRUVEPgDAwNjY2NTU1Pm97AMpGq1Gm1unjdkMTIz
G0twcPDZs2eXnv10d3fDUxQKxYEDB3x9fZ2dnVHT48ePw3fgMiMjI0/+FWwH
b3R0dFRU1J49ew4fPgxHzszMvHz58tWrV2tqatgC0d27d2lFYgGYnp4eHx8f
Hh5Gs3d1dXEpZTEgq1QqjUZTVVWFX+Hs169fhy8MDg6iayhUdl5gYeY6nQ5+
IZVKMbVhgnNxcXFyclq+fLn55MsOkhUKhZiCuWMk29vbyVMIgiAIgiAI4pmi
oKBg//79a9asWbVq1fPPP2+uGjZs2BAZGZmcnIx7Ojs7n/y7WBI9Fj/b2NjI
4me/kYL22LFj//Ef/wGx/9577/32t7/9n//5n48++uj48ePvv//+u+++u23b
Ng8Pj82bN/v5+QUGBoaEhISFhc0xBS0xR9iSXXl5ORqwp6cHSh/i3fweloEU
zQuNv9iXtkZGRjo6OmCQR48ehWnBC/z9/U+cOLH07IfVFD4VHBzs7Ozs6+t7
4MABeF9ZWVl3d/eTf4Ver4cbwivhnmhMOCy+At8VHh4OP0ULp6amso2ysBza
KLsAPHjwgDupcnx8fHR0dHBwEH7d3t5uMBiqq6vRFxgt8ROv6+rqWltb0TUU
KjsvsDBzTH86nQ6WDxfAtMXj8dzc3JycnMwnX5ahiWWHwaSG+ZE8hSAIgiAI
giCeKVjiyJlHYXt5ecXExGRnZ0PBQWUsTHlYClqImry8vD/84Q+ZmZk5OTl4
DYF/5MgR8+SkMwXOXFLQEnOELdmpVCoo+q6uriWvFpn5paSkBAYGwrRgTvHx
8UvPfliYHvwrPDwcvuPh4QHHmcdUvzOD7mcuRMhkMowwNTU1aHMU5sm/lHhU
uPwI8O76+nqNRlNoBsvNTaGy8whzvStXrrz33nsWk6rP3G4HJ8WgRJ5CEARB
EARBEM8CbMObQqGApoYucHBwsLOzMxcLvr6+iYmJKpWqtbV1aGhowQrGpaBt
bm6+evVqTk5Obm5ufn7+Z599dvHiRS6QNikpSSKRmCet2Lx588aNGz08PPA6
KChIZEZkZOSBAwfMU9B++umnUKOoV2VlJRRQQ0MDNCl0UG9vLxqEizyis77B
zZs3oeLR8hUVFXV1ddeuXcOViYkJa5frKcLMD1YXGxsLc9q/f396evrS22XH
wvTgXAcPHjT3HXiKWq1+8iSVHR0deXl5crkcLSkWiwMDAwUCAb7Fy8sLY0tA
QIBQKIR7Hjp0SCaTnTlzJisrS6lUwtjg+3DGkZGRb0RhE08DzuYx9BmNRoyE
8HS23Y47YcA8VBYTAW6mEfJJYK5nMBjOnz+P6WzXrl0+Pj4vvviis7MzJmLz
WRi/Ojk5ubi4wHG4vXaYB9FHFCFLEARBEARBEEsYdqwcJACktL29vZ2d3bJl
y8zFAjT1yZMnIeL6+/sXbKGGpaDt6emBVCwqKiouLv78889LS0shIXU6XU1N
jUqlgrQ3T0F74MABaH/zlbqgoCBoHA8Pj40bN27evNk8Be3u3bsPHjzIjsRn
eROgUtEgXDILSkELuIVTtDxapr6+vqOjY2BgYGkv2THzg+3BMGBa6enpGo1m
sQf8zoSF6cGt4ETmLgPvyM/Pf/IklSz29sqVK5mZmSkpKR988EFMTIxYLN6+
fTv80dvb28fHx9fXVyAQhISEvP322xKJ5Pjx4+fPn4fJzdeResTsMJvHoDc0
NGQymTAGtrS0wAX0ej26zzxUFtOB0WiEO9AI+dgw18Nw2tTUhOns1KlTmL9+
9KMf/dM//dM3ElJgXnZwcHB0dHR3d4e/CIXC999//+LFixQhSxAEQRAEQRBL
GJa8NT4+HjrdYkgO1IFCobBWrjqo9c7OTp1OB82o0WggG6EWh4eHLdYiIyOD
28zDEligUmvWrLEY8Ovi4sLj8QQCAW7bs2cPPiWTyVJTU7Ozs/EoLvKIUtAC
tDbanMsrUV9fzy3ejo+PW7tcCwEzrSUWDzuTBUgdy8KNVSoVvgvuxsLbWYbo
meftL2Q8PvGXr5eSHjx4cP/+fXR9X18f/L22thbubx4qi6EYQ8GzECO/kKCR
f/Ob32zduvVHP/rRiy++aHE6ZkHlcBBMdhQhSxAEQRAEQRBLmJ6eHsgEyOd9
+/Zt2rTJXBosX76ci8QRi8UQzk++2eaRYKejm0wmbgdCZWVldXU1dOKNGzfG
xsbMb2Z7BVGX/Px8VCctLe306dNQNAkJCfv370cVwsLCQkJCuBS0mzdv5gIA
8atIJMJbO3bswD179uyRSCQxMTHx8fEymSwlJUWhUFy4cEGpVBYXF7MQWnyR
eQjtEtt29eWXX0KDQwMajca6ujrUurS0FNUvKCjAa3RBS0sLhPwzsmTHTGuJ
xcPOhKWOxVDg4+Pj6Oi4devWEydOzOOaAAs3bm1thavm5uay8Pa3334b7ikQ
CHx9ffHt3t7e8Mq4uDjcANtDAZ7824k58tVXX3EJJjDmj4yM9Pf3o/3RZRgN
uO123EjIJeNub2/HJII+HR0d5VLKYtzGZ61dCVuBbaWbmJgYGhpiGZcaGhrQ
gOXl5Vy6JfgCJtkPPvggPDz8Rz/60Q9+8IPvfe973/72t2duemfb7Tw9PXft
2oV5KjMzEz3CbbdDl1m7xgRBEARBEARBzBsdHR35+flyuRx//L/22mvm0sDJ
ycnNzY3H40ml0itXrjz5kVaPBHQfBODw8HBnZyekTVFREURiY2Njd3c35OE3
hAk7kQ/iETWCGoKW5NRlWVlZQUEBBFFWVlZaWlpKSsrRo0cPHTq0x4wdO3Zs
3749KCiIHbGFn3jNLeixBBZ/K4R2iS3mcKfQQwCi6dLT01HrkydP/uEPf8jJ
ySksLESTcieMLaUqzwIzrSW2MDsTFr567Ngxf39/e3t7Hx+fgwcPzuM+NxZ6
OTQ0BK9pa2urqam5evWqUqmEe545c0Ymk8E3IyMjzU+3g6/hzif/dmKOfPU1
GOox5nMpZW/fvo1R12QyYTRuamrC0AqTqKioUKlUeFFbW4sxoaurq6+vDyM2
7sfobe1K2ArswLr+/v7W1lY0FyYOmDQmkdOnT8PXzPeE/+u//ism3BdffPF7
3/se5l9HR8fly5d/42jZZcuW4Qrcc9WqVZiyMU/t3bs3OTkZj8XEt7R3AhME
QRAEQRDEswaLhoNGXr16tcW40aSkJEizBS4YpCLUX09PT2NjY3l5eV5eXmVl
ZXt7Oy5OTEw8hiRkQXl4Dre9Ry6Xo2rckfhBQUEeHh7u7u7fOEGIhenh3b8V
QrvEQiYhz9FKNTU1CoVCKpWi1pGRkYmJiX/84x8//fRTWALqi355Rpbsnh1Y
/kr0O0YDGD/cPyIiYmEWzZjVwae4gFmJRALzm8fEtcRjw0JlR0dHjUYjRgCd
TldSUoJhuaCgoKioqLS0VK/Xt7S0YGTAEI3R29pFthWYW8GDMHjCvDFxwMJn
n3e+/e1vY+r57ne/i594bTFCloEnwF9oPypBEARBEARBLD2gs06fPg3t4Ovr
+/LLL5sLATc3tzfeeAOa/dSpUxBoC1MetsFjfHy8r6+PO/y8oqLi888/NxgM
N27cmJiYmJqagnh81CezoLyOjg7UGuomPz8/JyfHfLdDdHT0jh07hEIhS2rJ
wK+QV3hLJBKhTdBiuPngwYNzTEE7NDSEki/wTsVHAsUzmUwoMNT3uXPnICoP
HDgQGhqKur/zzjv4FW0Fea5Wq+vq6iDbvxGbTCx22HagixcvRkVFsVPuudUA
2PNT/Xa2t1Or1XIr6mlpaenp6XDP8vJyOP4cn8PCuimN5jzCQmW5HZJsM3NV
VRU7ZRSvMVY3NjZeu3YNIx5GWq4XpqenMVzb5qD3hMwl6PXy5ct/+tOfFArF
yZMnExMTY2JiMHFERkZiEtm+ffu2bdu4iQa+5uHhsXnzZj8/P8w+ISEhP/3p
TzHL4AWuWFzWY+AtPAR+ipkIX4cCYCRf2umBCIIgCIIgCOIZAbLi2LFjQUFB
GzZsWLlypbkQePXVVyEopFIphHN9ff3ClIdpw+HhYUg/CB9OElZUVLS2tkLU
P7YAZEF5IyMjXDJEqM6WlhaL8iolJUUmk8XHx6P6kEKQVyKRSCgUmgfPQl75
+PjMMQUtCt/f37/A5wE+EmgTtAMKDN0XFRVlfqrYO++8gxp99tlnpaWl0ObV
1dVovdHRUWsXmZhP2PoDevnIkSMCM2DSV69efarfzpbauHwHNTU1BoMBww7c
85ECz9nSH6VFmEfMQ2UxiKE7MD5jQDMaje3t7Y2NjRgTMFBjcMBAihfou+bm
5u7ubvTCY/+TxfaZS9Ar+zdQQEAARlSLEwf3PyBMNIcOHTp69Chmn7S0tKys
rEuXLp05cyYhIYFlabG4ZOfs7MztA8cX4UtRAIzkGM+t3TwEQRAEQRAEQTwp
kBiQFRb/ib+QYXEMFoE1MDAAJVhaWqpWq6EBa2trIQCfdl48FsTExeiZp6CF
aIK2gm5ibfVIKWhVKhXa0FpZd+cCioeORoHR6aiFuRJ85513oCIrKiogySFL
0R2dnZ0jIyPWLjLxVIDlw2hhwEKh0NvbGzYgkUiUSqW1yzUnmPNSGs2nCre6
Ozk5OTg4iJHZYqgsBu2urq7HPsrA9nm8oFd22ALbxcpmCozAlZWV5pnK8RrT
EOePeNrsEbJWmbIJgiAIgiAIgph32JazS5cucUFwEBGQEuZ//3t6ekZHRysU
irKyMqPRuDAFYyIIMhCK7/PPP4eEqa+vv3bt2s2bN592sA/bNcGdemeegtb8
7DvutPDQ0NDg4GC26Q56ysfHx9/f3zx4lqWgTUxMPHnyJBqT2zvx/7H35mFV
Xufe/1tDFJsmxFqLsZRjc1LBGJoYQhAkhFJDACUeQrgo4FRKiQUCgrGEQ5CA
HEqppZTBYJQSighBKoRBBAWEzYzMbGQqyGhkqEAq9fCanvd7ua6u8/yyd/eP
eQ/cnz+49sR+1nCv+1nftde97ry8PMjb8vLymzdvonatra1QWGjkkZGRlYnp
41uqvvjiC1wajZycnBwUFIRiQ2lCS+ro6Jibmx88eBD1jYmJuXz5cu0jWCgc
LdmpMDwlDawXtg3P4OjoeP78eUVOSck36cFpsNPw4uPjMdYw0OC+YLHNzc18
653C7nRVIuBAZmdn0exTU1PwlixUFq6sqqqqoqICbrO0tBS+As3e0dHBPBs8
xuTkJOxHKUJlFxb0Cm+PUfO1u8PXgl55SqOAgICIiAjhfmx8M5oR7Xnv3j2W
7AYWiyvirejoaNyp8W07duzYvHnz2rVrJZPJ8rMsUBgYPy1cEwRBEARBEISS
wg92S0pKgh6XumfMxMTE398fmrehoQGCa2UKdv/+fSg7doodhDZXMSuTspPL
NCb/hSloIX8qKyuhQ1EktAkUVnJy8pkzZ1j8LMQalJqLi8vhw4elRtGamZlZ
WlriRbQ2PibUa+iCtLQ0fGFJSQmaemVi+vjiZEtLCy4dGRnp5eUFjamnpweB
iWKjqO+//358fDzqCwGOXmB5eFkEHC3ZqTAY7OhoGDkMG5YAz2BhYREcHKzI
KSl5PGx6erqfnx+KbWtre+jQIQy0oKCg6OjoCxcusEwxwvUQYsGwOFm4kQcP
HrBQ2dHRUfjtnp6etrY2eMuKfwK3yVLKwmnwUz0VP1R2YUGv/NRT+FJYoNSg
18TExEuXLgl/teGnng4NDcGvCleVUQBm2MXFxQkJCRiSDg4OO3fuxKhUV1f/
WjJZnuQdl8blcHMpLCykhBQEQRAEQRAEoXTw9KlQEFZWVlKjbCA9wsPDV/iX
+qmpKUgk6BeoPJFIVFBQgAf9/f33799nuRtWphhzQRg/KwyJkgyhlR0V5ePj
AyGG/4WUg45bmQbnuxlReFwaBUZ5tLS0UEIdHR0UTJipk3dKS0sLuoOW7FQb
Seeg+Ckp+WCEMWPoCQeaqamps7Mz7JmXn0cdEkvI7OwsvPTk5CT/waW0tLSw
sDAnJwd/8RivtLW19fX1KUWo7MKCXvlhApLHI0gGvc6LL774Au4XBnzq1CmM
Sqm/snF4QooVSBxDEARBEARBEMSSMz4+3tnZCQURGhpqbm4unO2rqampq6tD
Dtja2sbHx6/Mpi++Z2NiYgJXrK+vr62tRfFEIhHU3507dyCgFC2Wim/sgZIS
7sEQhtDKSEFraWmJFnYWgA/7+/tD37GdGMuRgpZvIOzq6qqoqECBIyIiXF1d
UR4TE5Pdu3fv2rULBQ4ODhZm6sSFRkZGeI5IlKe9vR0FWM7WJeQG34KbmpoK
24D8h204ODiscCaaeSG5yw5uzczMTHjIP8ZXUFAQBldycnJ2djbMGE6mtbUV
/wXznpycVOSEzooP23HHt0l3d3e3tbXBk1c+gp2Biado8I6ODjgW9BccEXwL
21GGZsddYGWKusigV0dHR7huqZuo4TxhZrBAySREkkGv8wL2iUbDvebixYsB
AQG4lqGhoba2ttQIWX6q6rFjx86fP4/2R+3Q4GThBEEQBEEQBKEU8PSgJ06c
MDY2Fs721dXVNTQ0MOc/dOgQNPuKHa3GTka6c+eOWCwWiURQGSghJB5LTrrC
mm4uCONnhaKPhdDeuHFDdgpaBwcHOzs7KC8IKyMjIygsAwMDExMTPLWysmIH
4i15Clq+slFQUBAXF4fCQH5Cb+rq6uIvHkOZRkdHo9jCTJ0QtuiXrq6upqam
ioqKwsJChQ2QJBYPP+gSHR0UFASDtLCwsLS0hFmGhYWVlZXJu4BSkDzLzt/f
393dHQPNxsYGti08TOzAgQPe3t4YVhgCaWlpGFANDQ39/f2KnNBZ8WHrYGyv
3dTU1Pj4+MjICEsp29raynbnwnGxFTw0ODxYb28vHAtbLF3JX2QWGfRqa2sL
Vyn1qFJ4ezhPfBv8/9d+Z5EMep0X+C80FLxuXV1dRkYG7gguLi6GhoZSI2T5
FlOMXFQEH0btWlpayMIJgiAIgiAIQimQkYeOz/ZXMk0kzz8I4QxxV1BQIBKJ
8ABiB6oKAnBlirHkzCUFrZ6eHhpcanzTkqeg5SXhXa+rq6ulpbVhwwZcBd+P
b4aAHRgYEP4XW+jr6emB0MZ1c3Jy0DXol2VoMEKBUMbUsdzCs7KyYmJiYNIY
O7BzYSAhH1ZHjhwJDAxEHVGplpYWRU7orIw8ePBgenp6bGysr6+vra1NGCp7
/fr18vJyuJGuri74lhU+92CRQa/4AD4mr4Tg3MJxH8HAlB0hC9+OkYshgKLi
7kMWThAEQRAEQRBKgVgszsjICAkJcXBw2LFjh3CSv3Hjxm3btmGeHxAQUFRU
tDLlgbhjmQeh4GprayEuoO9QyMHBwfHxcQi6lSnGkjOXFLTHjx93dXVlGStY
/KyJiYmBgYEwE4SdnR16ytnZ2cXFxd3dXXYKWmH8LIs+4/skoZ1LSkrwX+hc
fCHkp6mpKRQoro5XkpKSqqqqOjs7v3ZOHdofuru/vx/lLysrW51LdjyYbnR0
tLu7G+2MhhoZGVHhDKSwoqysLIh9WB1sUilSx/J9pHAj+fn5fIX8yJEjGEQW
FhbC7VJ45eDBg25ubqGhocnJyRTxvbTMzs7OzMzw4FOMmtbWVhZ5Ck9VWVkJ
J9/U1MSSZcOfwMnwlLIL3la9AkGvYWFhcXFxi9/zvDC4haMWKImTk5O5ufn2
7dulrt3xuzmqhoGMAqPN0SYUIUsQBEEQBEEQikxDQ0NCQgJ0CsTIc889J5zk
b9myxcDAAAolIiICwmplysMWtXp7e6HpoICuX79eX1+Pp8q+K2AuKWgLCgo+
//zz9PR0Hj/LY/o4UJHoKXbinLGxsewUtEIt2dLSIjyNsLGxMSkpycfH5+DB
g2+++aa+vr69vT07mR8CsK6uDmpufHwcQltYCzy9d+/eyMiIWCyGSazOJTu+
+gp5np+fjxbLzc3FOFLhDKSDg4MwIVjmiRMnYG9KkTqWj7WhoaHu7m6UE6OM
hT2eP3/+17/+NUvujDGFsYPqYEBhFNjZ2R0/fjwmJgY9i/+SdyVUBHbcAU8p
C8fCOoVnsRGJRBUVFbCxmpoa9BQcI9wjBtTU1NSCQ2VXIOi1rKyMZdBe5Mmi
C4NbOGpXVFSUkpKC+8Vbb7317LPPampqYpAK7+br16/fuHGjlpYW6ghXD8+P
+z5aniJkCYIgCIIgCEKRgYyNjIwU5gnlyCXZHAQd28RVV1cHEVdcXIzHIyMj
UG0PHz5cJZsBeMRTXl4eFKLw7DsemSgpyiRT0AojtiAwhSloS0tLQ0JC2AYS
fF5fX9/DwwOiT3YeQx7g1tHRActZnUt2PJgObRgTE4N2xghCT6lwBlLJNKyK
nzpWBgMDA2wFEh2HYSX0fpRhc2Xg+3XFYnFtbS38fGFhYX5+PlxKUVFRdXU1
3H5vby8G1IJDZZU66HVe8JpmZWXBnqXWS7KC+CQ+r4DVIQiCIAiCIAiCU1JS
EhQUZGpq+vzzz2/atEk4t9++fbudnV1gYGBaWlpra+uyFoNvw4BG6+joqH5E
TU0N1FxXVxfE3cNHKFTWieWDRzw1NDSggyCs0AVJSUlQjhEREQEBAZ6eni4u
Lo6OjsL9IcbGxiYmJsIUtIcPH8bH3NzcfH190Y/QnmfOnElOTsYXnj59+ujR
ozyhAPQpxOmFCxeglPv6+iYmJqRuFJFcsqurqxscHETfrZ7oKr57p7Cw8OTJ
k2hDb2/vc+fOoUEkQ4lVA26QqCasTlNT08jICAa2Ms5hyWFpsquqqnJzczGs
eMCslZWVq6sr/CEGGjpX6ZYilQh2AAI8CbxHT09PW1sbfB18fllZWUVFBR7A
scAXwc+wUFl0GT7Plu/YzYIlRmEb9tBT6FCxWKwyQa/zgnsktFtCQoKPjw9u
3K+88grGqYaGxrp166T+soPKYvyypUi088qklyIIgiAIgiAIYl7k5+d7e3vr
6upu2bLlySefFM7td+7c6eLisjIxYvywo9u3bzc2NhYVFUG41dfXs1PsINbY
cUarZMmORzyxTIu3bt1qbW1tamq6efNmeXk5GicvLy8zMzM1NVUoSKE00V/C
FLQ83I8HfNnY2OBdiFb8xWPhKyEhISkpKZWVlWjzf6VMJZfsampqUEJIaXbq
lLxabCXhMc7Z2dloc4hfyP+PPvoI0r62tnZoaEjeBVx6uEHC6ry8vPT09GBO
MDCYTVxcHGot7wLOD7ia8fHxgYGBzs5OeBtY8pUrV2D8sbGxGFOFhYXC/ajE
cvDw4UN4DJZSdmJi4u7du+iOrq4uFioLrwL/z864w2O8iBsQW7iDX8L/4h/v
3buH/0IPsiNPc3NzMzIyVCbodV5wj4RCosXgiEJDQ1FBjFNtbW0NDQ3hbX3t
2rVPPPHEhg0b8C6aQrhJmB+bQBAEQRAEQRCEgoDpPZSL1AOroXGgZaRmDl1y
JNeCoJig1Pr7+/Gi8madWD5khH3JSEHL9RqLjRKmoIVwg+AVxs9KBkxJdhNs
o6enZ3JyEn00Ozsrr9aQC2hztJ6yR4nOCx5PzcFTvCjvci2WL7/8kuWFUdXQ
ZsVHRqhsSUlJXV0dHN3g4CD8EvwMHM6dO3fQX/BCuIXxDD6qF/Q6L/hN4cqV
Kx9++KHsLOR8u52Tk1NsbCwtUxMEQRAEQRCE4vD3v/8dqueLL75ITEy0t7fH
7F1dXV1NTU04pTczMwsODl6Z5IkQGrhEX19fa2srVBjEGlRbd3c3RNzU1NSD
Bw+W9erKiIzD1WWkoEWfmpiYCDec4C18wNnZ2c3NzcfHh8XPQsEJN5zcuHED
nQJN19DQ0NjY2NTUhKdFRUVsyQ7dpOxSd2Gg+kePHtXS0kJjsm2KGRkZYrFY
3uVaRli2Gg8PDwcHB3Nzcz09PU9Pz0uXLsGTwJ8ob+oNlJzt2ppXApHp6emh
oaFbt261tLSwJDJoHxjAX/7yl5GRETSIAu7IUlh4qCy7C1RXV5eUlOTn52dm
ZuIvXFBNTQ08DwuVxQOWsfrcuXMYd+7u7u+++y58neoFvc4LflOAHaalpaFl
XFxcME6lnn2KO76GhgZeRyuxvXaXL1+Ge6cIWYIgCIIgCIKQO5CTt2/fhtLE
RN3Kymrt2rVqampr1qwRTukhc6KioiBIoWUgTpe7PAMDA21tbfX19RBQpaWl
UG2Qwyzi8uHDh8t6dWWEB0Oha0ZHR9F6f/nLX9BZslPQBgQEeHl5Qdg6Ozuz
pTyubTl4CpMQKlxIP9jJ2bNn//SnP126dCn3ETmPYAe4TUxMrEKVV1RUhPY0
MjJCc6E9PT09ExISIJblXa5lpLu7Oz8/PyYmBoZhZmYGvQ8rgmnBk8CfYBTL
u4ALhK11wIbntWIDB1VbWytcJ4cBZGRkXLt2DWbQ39+v7EtAKwkPlYU3gyuD
HysvL4exwX2hhfPy8tCqxcXFcGt4naX9/c1vfuPt7f3OO+8YGxu//vrrKhn0
Oi/4TWFkZAQ3ULRVfHw8HL7U7Xa446urqz/xxBM8Y9HJkycvX75MEbIEQRAE
QRAEIXcwJ4fKhngJDAw0NTWVGjiDOTxkzspsoBofH+/u7q4WgKcqeZK/XJBM
QSuMn2VBZJLbMKTGz7JQsj/96U+Q0mzJrqOjY2xsDIJ3tW2G5NmWOXiKF+Vd
rmVE0m/gLx7jFbyOd+VdwBXl1q1bWVlZwtHk6ekZEhKCAYKBhgZZnbtPF8mX
X355584d+P+ampqrV69evHgxLS3t0qVLf/7znzMyMuB2Pvvss6ioqA8++ODw
4cM/+clPdHR04Lg2b968bds2FQ56XRjw+WgEGCd8OJy51Bs9Py0Bd3x4MIqQ
JQiCIAiCIAi509/fLxKJLly44OXlZWhoKJzAr1u3jsXLQPhA7yzrRhG+s2Jo
aIjtCqiqqqqvr29raxsYGFDeTTtyQcZOIckUtML4WchbT09PdLe9vT2Ln2UB
ZZLBszwF7UcfffTJJ5/k5OTk5eVduXIFyrqoqKisrKyysrK2thZXaW5u7uzs
hJkpe8ikDFiUKJoOLYN2MzIy8vf3LywsVPa9OjLgu3NjY2NhEvASZmZm7u7u
K5OkRtHAgLp27RrGEQaRh4cHGyNsf1dAQEBUVFRKSkp2dvaNGzdu3rwpFov7
+vpUeDjMBe6jeKZXvjGYJ9bBTeePf/xjdHR0WFgYmtHb2xsOKigo6Ne//jWa
FG4nOTk5Li6O7Rn+5S9/6eDg8MYbb7z99tto+ffeew+fxP+qXtDrwkALwyPB
RI8fP25jY6OjoyOZZ4pvtzMwMICHR8PCbnEvZtvt0G7yrgRBEARBEARBrDo6
Oztzc3MjIyMxRX/xxReFE3gNDQ1tbW09PT0fH58rV64s6/oDP78IYr+2thbi
orKysrW1Fdp2dHSUxMK8kHEel2QKWn76FqQZhC2U8qVLl3j8bGBgoK+vr6en
p5ubmzCKlqegPXjwID6Wk5MD+Yx/CQ0NhaD+7W9/C4uCmk5ISIBkhoGJRCJl
D5mUgVgszsjICAkJQROZmppqaWm5urriFRVeHOBnYMJaYB7wEubm5g4ODh4e
HiofFCzJwMBAVVVVeno6zB7ekq14wxIwQMzMzGxsbJycnLy9vTE6zp49C8Mo
KSlR4eEwF7iP4ple+c8HERERAQEB7LeDd955By35k5/85LXXXjM0NHzjjTfs
7Ox+9rOfnThx4je/+Q0s7dy5c/Hx8WfOnPn9738PRxQcHPy73/3uk08+SU1N
xT2rvLxc9YJeFwbfXw1H7e/vDx9uYGCwZcsW4R1/zZo1ampqa9euxeuYDOzZ
swfDOSYmBr2DZlxtW2cJgiAIgiAIQhHAVBxCyc/PD3N4HR0d4QReU1MTSnxl
ckHyLIFQsuw48dUcaLlIFpn1kv879B3EmuwUtLt37/7ggw/QX9HR0T4+Pra2
tm+//TaENj4GxQ3dLUxBq6ohk3yTFdpHX19/hWPJ5Yuqpo6dFzxMGDYAg4fx
GxkZaWlpCYMNMWSsra1hIWgf2IYKD4e5wJ0Mz/TKPQzGDlpPaoT+d77zHdyk
4HOcnJzgdj7++ONPP/2UHUyXl5d39epVtGp1dXVbWxtlGP9XyLjjS7J6UmAT
BEEQBEEQhGJSW1sbFxd35MgRMzOzrVu3Cqfr2trar732mrOzc3R0NHTQclz9
H4/46quvpqamBgcHxWJxfX19RUVFUVFRY2Pj7du3p6enZ2ZmZmdnl+PqKgaL
VYQiKy4uTktLi42NhZLF0/km/uMbYKDRWlpaZKegPXHiBC6Um5t77ty5U6dO
eXh4/PznPz9w4ADecnBwcHR0FKagPX369Pnz54XHyPPj39H1nZ2duOLQ0ND4
+Ph8z/+XLzz7AFrD2Nj4/6xsxhb5ws/IsrOzgw/R09Pz8vLKzMxcVekmeZgw
TBrDBGPEz88PTlUYXW5ubr53716MCxcXl2PHjmE4wEKSk5MxECorK2EqKhMq
O5egV76VNzQ0FKMG9oNmOXz4MNyFra0tho/UPDiHDh167733Pvzwwz/84Q8p
KSmFhYUlJSUikQi3J7Qhvpw9xk0EfdHV1TUwMAA/NjExgfsLJTBiwFDhdWGl
QUFB8M/s/NINGzZIXbLDW2h89A5cN+4m6Ed0qGo7NIIgCIIgCIJQKDB7DwsL
s7a23rlz5+bNm4XT9W3btu3bt8/HxycpKampqWk5rv6Pf/zj4SPGxsagsGpr
a2tqaljWiY6ODqgtiKzZ2dnVFsS0MLgWQ4cePXoUIjcgICAjI2O+if+44v7r
X/+Kf5Sdgvby5ct4kJubi+tyAf6LX/zC3t7exsbGwsJCKL3xFC8KN+ChqHFx
cfhflBNfcu3aNdhAZ2en1KhehWV8fBxlRsug+ubm5hg7ZmZmwcHBaKj29vbR
0VF5F3AZ4ZkXXFxcTExMNDU1HR0dz507t6rSTfIwYZbhFJZw5cqVlJQUjIhT
p075+vrC4B0cHN566609e/bAQmAeGA4YCwcPHsRAiIyMRBuqTKjsHINeWfgw
WsPY2FhfXx/GA/+wf/9+Ozs7tJVwqR/WhZZkmV7hJYqLi3GDQHP19PT0PqKv
rw/3C7Q8Loe3Kioq4AnxoKGhoa2tDR8bHBzELWZqaoo2bPNfdjIzM9EdshNS
8MRDBw4cgK9GP6KFh4aG5F0JgiAIgiAIglgtQE/5+flJ/aldT08PuglyCRN1
CPPluPpXX3318OHD2dnZkZERSDBoMaituro6PO7v71cB9bqSSEY8QYuh+5Y1
8R86Dro4Ly/vz3/+88WLF//4xz9C2b333ntzTEHLszqGhIRERkZC1MPYKisr
FxzVKxd4lF9sbKyVlRUquGvXLl9f3/T09KqqqoGBAXkXcBnhx7ihvqj1ylid
4sNNorS0FKMSDeLp6YmBKfS0GBQYGniKwYIPqEyo7MKCXvk5DDwnNQ+o57Yk
GWb+f//v/8Ur9+/fxxV7e3vRgNXV1UVFRTk5Ofn5+YWFhbin1NbWisViCpX9
GpLh/DJYgckAQRAEQRAEQRAcvpMqMzPz6NGjUjWUgYGBu7t7YmJiSUlJX1/f
chQDagsqDFoMaqu+vv769euQ/62trXgKCUZZJ2TAexBSFE0H8fXJJ5+wc7T4
0fceHh4pKSnLut+Jn+J19erV3Nzczz//HFf8Vylo+Y4a/MVja2trW1tbR0dH
fMDFxcXV1RXi8cSJE6GhobGxsQkJCampqVCIkN6wQEVOQcu3FSUlJaE6GzZs
MDExwbBaDelT2Q5DDFvIeXQxfIiZmRk6kS1XDg4OyruA8oGbRHt7u0gkghnD
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
6VZUVMCP1dXVsTjZvr4++Dfcm1ioLEY9i5NV7ZsU92NoioSEBB8fH5jKK6+8
oqmpqaGhsW7dOqk/hcCW4ELhPOE20XQrvN+bIAiCIAiCIFSJ/Px8b29vXV3d
LVu2PPnkk8IZ+M6dO11cXGJiYvCZ7u7uJbwoF0pQSQ0NDdevXy8vL6+vr2en
2E1NTa0GNbQw+JIddDp0NBR3UFBQcnJyZWUl9OYXX3whrxOE+JId+hG9WVhY
iKIu9/abhaWghfB0c3ND09nb20NdCoNnjY2NWZTxXFLQtre3o8pS10hZqkoe
X6Y4sYErCaWOXVZGR0dh6qWlpZmZmefOnQsPD0dTOzo6mpubv/baa0ZGRq+8
8sru3bvx1MrK6q233nrnnXfw7ttvv713714YPHrEwMBAT0/P0NDQzMwMowCf
sbW1hc3D7R87dky5gl4XhjBUFjY5NjaGG1BXVxfbKlxTU8OCZKurq/GY15od
D7gaflfifmxgYACNANcXGhoKK4LZaGtra2hoCCcMa9eufeKJJzZs2IB3YU4s
Fh7ud4VPVSUIgiAIgiAIVQKT8CNHjkgNhtq1a5evry/0WlVVFWbsS3hRHo7U
0dEBQZSTk1NWVgaVBDWEFynrhAz4kh0EdUhIiOIcksaX7Orq6kpKStCn0Lx4
Rd7l+l8kU9CyeMA9e/bwgK95paAtLS1FfSn+619BqWNXBh7rmpyc/J//+Z9v
v/22sbEx7Pmb3/zmunXrHnvsMbT8mjVr1NTUYNv4i8erIeh1YeDug3sQ7kRi
sbi2tra4uLiwsDA/P18YKtvX1zcxMbGqTm/gEbJXrlz58MMPheHYkvDtdk5O
ThjvK5y7nCAIgiAIgiBUAH62f2JiIpQa5tjq6upQc8KJt5mZWXBw8HJEOLKA
wd7eXsifyspKaCKIo+7ubmilqampBw8eLOG1VAyefiItLS0jIyMrKwtNNzQ0
JO9y/W+fNjY2wmYUcMlOMgWt8Ow7Fj/r4OBgY2PDN90JD97nwbM8BS1GR1RU
FEZQampqZmZmXl4eRH15eTkkalNTU2tr661bt6DuR0ZGVmdoGCre0NCAZgkI
CIAzWbt2rbm5eVBQ0OpcC1okMjK9wpiTkpJgyT4+Pu+8846hoaGOjo6mpua6
devWr18P3/7UU09paGg8/fTTGzZswGPm7Z999lnYtgoHvS4M3H1wD2Lb7Xp6
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
SkFOt+MdBydQXV2NYRUaGopBp6enBy+hoaEhnORI7pOMjIzE6FaujiMIgiAI
giBUGExoIcClBnlBZkKSzzfEjAfXYD6Pib2yxzxCql+4cAH6C1pbR0fn/1Cy
uSXlzp07aGF2eHt9fb2yZxNWfOQb9DoveGpm+JDf/OY3uO6bb775ox/9aJOA
73znOxs3bvz2t7/9wgsvWFhY4DNxcXG1tbVLWAwZ8PhZaPzExETh2XdwF/AS
Us/RohS0yg63TJZsHcPB2dnZ1NRU2N179uxBhyp7V/K7eW9vb1NTE7x0cXHx
1atXMSSLioqqq6tbWlrY7yz3799na/LyLvL/wn3dlStXPvzwQ/SInp4eOkhq
hCwflU5OTrGxscrecQRBEARBEISy8/e//31ycvKLL76ASLS3t8d8VV1dXU1N
TTiJNTMzCw4OhiRvb28fHR2d4zezxG09PT3Nzc0VFRUs60RfX58CHlg9F/iS
3aFDhywsLDDnt7Gx8fLyioyMzMrKgmChA6sXA7ReW1sbZCDbtkFLdouB7aCT
mmFBQYJe5wW+8N69e7AQOJDPP/8c1w0NDX3//fd/LsDBwWHv3r2v/xMUGNq8
oKAAjbACo5InqWxoaCgpKUGbpKWlJSUlnT17NiIiIiAgAG3r4uKChhVuWTQ2
NmbbdHkKWg4a2d/fPzw8/MyZM8nJyfjCvLw8tLMwBW1nZ2d/fz+uy7f1Uo7L
FYZbJvw/C5iNjo4OCgpi4dK4n1pZWaH3MzIylH2zFt8zzzJTwJk0NTXV1NTA
meDmXl1dLUwpCz8wNjamOKGyfEcxhicGZkhICAajubm51IV0zH80NDTwOgYm
22t3+fJl3JJo8zxBEARBEAQhF9gRbZhsY2oKfbF27Vo1NbU1a9YIJ7FQlND1
bBUFk/Y5fjOmuL29vVDZmNizxBNtbW0jIyOYwytI4My84Et2Xl5erq6ukNWQ
ZlDTUNBoGcgxksyLARIPzSgSiWprayEGacluMfCVBBbEp4BBr/OCr0DCe3R0
dLBVx4KCgs8FnDt37tSpUyitnZ2dkZHR1q1bf/7zn1+8eJEln8W/L2F5JOHx
syx+EG3S2toKM75582Z5eXlRUVFeXl5mZmZqaqpwjRRd4OLiIkxBi/ZH4fX0
9AwMDExMTPDUxsYG76IvUDX0mjAFbW5uLsYL+hftz6LI6SeDFYZbJluwxXCo
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
X9wd96hXO+Hh4dza4M2gypFUV1dXVlaWm5ubnZ2dmZnJbJWTk1NSUkK9NTc3
0yj9lU8mNJsh3CbtK7lyBEEQBEEQxi6IycTERHS4q6vr888/rxd76pyoDz74
oLy8/I9//KP2nFd7alxUVJSXl4fsbG9vN/Mxcb8wPCmaora1tQ3hV4xpRiDo
VUvzOgpPI1dRSPRGuqIs2Q0AFZF65MgRX19fvFf6Q3BwcHx8PH5lU1OTpQs4
6mCsMcoYDjt37mT44OxjHhlcZ8+eraysvH37tqULKAg/iBrv2MwfCqE13HrN
7LB48WKmCX738vJ6Q0dgYGBYWNjYSkGrRAVl5mb9/Py4U5QPN7hkyRLmQe6R
KZJKiIiI+M1vfsN9aTMg8wu306/9hExD3d3dTEmtra3Xr1+vra3FSjBbUYDi
4mJ+QVPREExbWqgs9cP7teU7LU72h0Jl1V3ExMRgurWzCjHgRpfslIrjls+c
OXP16lXaYsTOPRAEQRAEQRAGj3ZAE0p1/vz506dP14s9Ozu7NWvWbNu27ejR
o9XV1Y8ePULw19fXFxYWamezoDlx7ZGaZh7G0i+0oE50ck1NDcpfpOZjjEDQ
K5VPtY8eh0uhopBu3bqFbyhLdgNARaSeOnUqODgYzw7XlV6BD56amsqgs3QB
Rx3ffffdN998w3DAkcdTnjZtGgNKy3zBALx27ZqlCygIP4ga7/fu3dOH0Jp+
1hMWFsY0oV+pQypowbOLFy92dnYeWylolajQJs2UlJQDBw5s376dUcyIXrly
Jbfj4uLCfTk6OnJf3t7eWmIObUshYomPm/ld6CVmIi2lbFdXF/dOnTc2Nmqh
sqWlpcXFxZqO4ndeREppC3fYmUff80OCSt0FpjsuLs50QgqVZCQgIIB2kUef
giAIgiAIYw7kNIrU6INae3t7f3//vXv3njx5sra2tq+vD6VXVVWFsEfxIju1
k+pRpJa+iSeR8Rr02i/ofvRDWbIbDMoCaFlQtSgqvHhLl2v0olLHqtEkNSaM
JwwnF5XAYtmyZXZ2dvqQUsPVodGfgvYPf/jDd999d+/ePW6T4UwJVbSsEkIq
KJgX+RdvoDa+/vrrAX+piVDZvLy88vJyBFVrayulQms9evToR8MWDEP1TaDk
nBwwIgiCIAiCMCYw3GMzbdo0BKpe4y1evDg0NBSZeuHChdra2q6urqamJqRm
VlbW5cuXkZ3Iy87OToSope9mnIBEp13wJlTiOXM2QoyzoNd+oZbsioqK6uvr
x1b6wlGC2mer4M/CwkJLl2v0olLHenh4MNaWL18eExOD9z16tqEKwmAw3MKd
lJSUmJi4f/9+uvqWLVuYTXx9fdeuXcsoYIpholHTDQZEJa0IDAwMCgoyupeb
qYfpjEmNqY0v0rZzM+WNjA3X9M9333138+bNyspK/eIkcojC6++LMc4rzJ5U
Am8e8JfqQ2W17Xbce3FxcV5eHvNXSUkJcxmyStvWzox8794906GyKlT/4MGD
FHvZsmVz586dPn36xIkTraysJkyYoJdztra2S5cuRSfs3Lnz2LFjfDVfxFcM
ui4FQRAEQRCEYcHwJCvDh+Yqg2R5eTlKsqWlpaamBo2dlZXFK5reQ/QOd3rQ
JwflR7S3t9fX15t53NA4C3rtF2rJDteytraWe+nq6urp6bF0ucYS6jTLNWvW
0Ivs7e3pY4xxS5dr9KJSx/r4+Li4uMycOZMhiRc8Rte9BeExDA9KraysxFAw
++fl5WVmZjIr0eGTkpKYXJhimGiYbhgFzDtqNc/Ly+ux1Tz9wyP9Hjz1/Igp
b2RS0KqnY3zR7du3tfP9uDvKcOrUKUY39xUTExMSEkKBuZ1169ZRbOwklTDg
L9WHynZ0dGjfy7SFmiopKeHbmcWoAf6sqqpCAPBf06GyKlQ/NzeXtoiOjsYi
zZ8/Hy1nbW1tZWWll3M2Nja2traYd5qG9qLas7OzJSGFIAiCIAjCqMUwX6Qh
Kh8ioh0BiaZFr2obvZCUbW1tZoZvCGaionWuXr1KPZuZ1G+8Br2ag1qyKygo
oH/iYOIKybbPfmGYRRHnlJ5j6XKNXiR1rCAoCcEUg7lQD5WwJBgQLy8vo6dt
qNlKH4mvJiymPIunoFX3pY1xfVAwN8jNDv4rkEwIJ+QTc31rayvTPbNYYWFh
lg519og5obIqkHn37t3YIqNPYBUqIYWE8wuCIAiCIIxmOjs7r127hv7cs2eP
m5ubXtFZWVlZW1sj+by9vQ8fPqwFceDXl5SUXP4e7dywu3fvmj4kWaGeaPOl
zc3NXAo9jMgcozu7BoaJoNeysrKCggL09pkzZz777LPk5OQDBw7s3LkzIiIi
JCQkMDDwyQx6NYc7d+5UV1efP3++uLiYmqR3cbPfffedpcs1lmhqasrMzIyP
j8eJc3R0ZODT2Y4ePYqfyAiVPbSGqHi0mJgYxiCuMT/53eKrDYIwYqiN+kwx
TDR0/oyMjLS0NGafxMTE2NhY/WKX4Z5wlbRC7WFjsouMjNSnoP3iiy+ysrJU
/KzaGa7Fz2oGasglhLovdZqfCgpOT083P8sMllNL9mFoRZFMmnZiqkIUtbe3
c1P19fVVVVXl5eVILH2Gr9raWv57+/btjo4OLU62t7eXz+ovqAKZP/30U2QA
OsHBwcHW1tZohOy0adPs7e2XL18eFhZGPfNF1Cr1SSG1PGJDVpWCIAiCIAjC
IGhra0Nmnz59euvWrc7OznpFZ21tbWNjg65DSKNX7969i1OPYM7JySkuLuYX
NCSaGZVo9HwVQ1S8J3I3Ly+Pa2q+7TheSjLERNCrcnDwWQICAtDbHh4erq6u
jo6ONI2Li8uTGfRqDnQhemNubi71yV03NjbeuXNH0gr3C2UK6IH0NLw8XOn3
3ntPratbuoCjDhWP9sEHHzAqJ02axDhl8H744YcMaok1E54E1HG4TDHYEG03
fl1dnf4hFLMShsXoyau+vr4+Pj5vvPHGihUr3Nzc9JOdWs0LCgqKjIz8ofhZ
bVPrkEsIdV/aGNcHBXOD3KyZ11FXMLSimmpCPv3hD3/Q4mTv3bvHvWjVSB1W
VFSUlJQwm6OXNNHF/TK7tba2agt3j6VYUoHM5eXlaWlpVBciwcHBwWiErNro
SD1jtXgztcr1MWvjVScIgiAIgiCMRUzkGlOKjn8h/5CC169fRyQPOPxQxXsi
epOTk7dt26Z82ycnjsxE0Ks5YURPYNCrOdAPqc/CwkJcqurqaklhPADok/Qi
vEL61fLly+l1/OR3OZ/8R2EMMniHMKekIIxLBpaCVu0HMxo/qxmoUTv9Kbtq
jhU1DJUtLy/Py8tDdGVmZmZnZ+fm5jLH1dXVmVZf6kupZASD6QjZGTNmoCuo
W2qV+pSjiQVBEARBEEYVaL+0tLRdu3b5+PjMnTtXL+SmTp06Z84chPTWrVt5
DwKSN1+6dOn8+fOlpaWNjY1Gn/Maop78alo9JSUlLi4uLCwMicj34u2OZr3d
LwYZ9Ort7b1y5UocE+ocCS1Br+ZDV2xoaCguLsbB0fYWypJdf1G7QdSeMfpe
VFQU3Yw+1tbWZukCjl4Yhtu2bWPAMnK9vLwYrfv27SssLJQQM0HQY04KWqTI
qlWrtHnQ0dGRYeXi4uLu7r5mzRpGFhMl73nzzTeZDZk9o6Oj9+7dazoFbUtL
y+3bt0c4wF/Fw1ZUVBw/fpxCYlePHTtGCfPy8kpKSoweDGIYKtvU1MRdoLi0
zBTMcfzONbXtdmgMpv6urq7HQmWVMUdvxMbG+vn5YcxffPFFo2t3U6ZMmTVr
FpKDiqWcGHy+iyuL+RIEQRAEQRgNVFZWoplRvx4eHi+88IJeyNna2i5duhSF
vHv37s8//1wL00Ax5ubmVldXt7a2Gj1NxRCl0hGuu3btQj0iyF1dXZHimzZt
QrSPmyW7QQa9qjgg5ZVI0KuZqCMZVc3Ikl1/UT4mfuX69eunTZtG/6S7xsfH
Z2Zm4jlauoCjFzre/v37GbleXl4MZCxbZGRkRkaGhJgJgh5zUtAePXr0vffe
27t3b3R0dEREBPNgYGDghg0bmBYZYkydjDK1oMdPfjedgpYr8y0jHOCvFs2Q
PRSJQq5duxa7SgljYmIOHjxo9GAQw1BZbeGupaWloaGBN2tZZZFhBQUF/MJ9
1dbWXr9+/bFQWWXM0SFohpSUlKioqNWrV8+cORPDPmnSJL3Se/rpp6dMmTJj
xgzqk2oMDw9HE3JxMV+CIAiCIAijAeVsOjk5odn0Qm727NnIY9Qm8vLzzz9X
D3kLCwuvXr2KPjTzKwyzmCn4XnT1uFmyk6BXS4Ff09TURBfVth/Ikt1gOHv2
LH4lHRJ3GDdZwjx/FMNku35+frjJEmImCP1FBXWiGYxmS+9vCtrk5GRs2ggH
+BueM6BKqOyqOQeDaPv2Hz58yHuam5uZ3ZjmcnJyzAyVVZoELREeHm606hS8
rlUg7+T9Yr4EQRAEQRBGA3l5eTExMWjIOXPmTJ06Va/f5s6d6+Pjs3v37vff
fz8tLU0LNikvL6+urr5x48a3335r+soPHjxoa2u7evUqqvLQoUPR0dHr1693
dXVFEy5cuNDDwwOvNi4uLisra0wEdQ4s6HXz5s04Dhs3bvT19V27dq3p7QES
9Dpgurq6aA46Z2VlJf1TO2jx/v37li7XmIRel5iYSJ+MjIyMjY2VZAo/Cq40
hpSBHxYWhonD8121ahVjub8n1QuCoPanYcb1O9UxRPv379+1a5d+szoTqDal
KviTeVYfRRsaGsrcquJnTaegZXJnih98TKjhLjs3NzeMg347PXeB+qJUR48e
RTxQHmxvTU2NlhmW+esPOrq7u1ECandiaWkplaM9QlXPqpqamrRd93z2u+++
6+3t7fkefuc9SUlJ4eHh3t7eCLBp06bZ2Ng89dRTRpc9qT0EGyWnSA0NDZI0
XBAEQRAEwYJkZmZu2bLFzs7uueeee+aZZ/T6bd68eRs2bEAko/TS0tKys7PR
t8hC/FOkIyLQ9JVVAkpc16CgIJTqkiVLFi9evGDBAl9fX5RqSkoKfm5jY+OY
COocWNCr8iDWrl3LXZs+hEeCXgfMt99+29LSUlVVVfk9+C/0UsmYMDCoSW0B
KjU1FUdSi97C/bR0uUYvKi4bW4czPnnyZIZ/WFgYdUhN0hUtXUBBGDOooE5s
jv7RGDMjQ+zixYv6p2NMoFoIrUpBaxg86+LiwnjUHpBpS3kmUtAyuTPFDz4m
1PAsu6ioKBQCJVQHg6izapENyDDKg5bA6lISZrGbN29qxdDWD3t7e/nz/v37
HR0dWqgs1VJdXa2FP6AcCgoKtBW/pqYmtfb48OHDnp4ersArvJPb3LNnD1LE
3t7e1tbWxsZGL/kmTpw4adIkzBf/pQKpT+oHZSJJwwVBEARBECyIynVoeCgx
kvIf//EfP/roo08++eTEiRPp6ekow4aGBhQjUvBHs06gJ7k4ShWNigL8X7q8
b2+99da5c+fGVtjFwIJeVaQJb+BtYyvV3RgCRwYH58qVK1VVVdppP7gtsrtp
YNAb6ZP/qUO6qGmUcUhJSfHz85PUsYIwrKgRp0JoVQpaw/jZfqWgZXJnih9C
caIKiRyKj4/Xh8+rgqnyIBKio6MpydmzZ5nOjBZDhcp+8803jY2NFRUVRUVF
Fy5cQKFlZ2dTfqa/2tralpYWvVRTNYb0QoDxXXwj32s0QlZtt8OaJSQkSNJw
QRAEQRCEkUedAp2cnIyARKFZW1tbWVnpZZuDg8OWLVs+/fTTzz//PCMjA01Y
WVl548YNRGBPT09fX5/+gipulGuieC9dunT06NGYmBh/f38vLy8nJ6fZs2e7
u7sHBQXt2rUrNTWVS42ew42HPOjV1dXVw8NjzZo1AQEBISEhqPTY2NjExET9
03wEubYYIkGvg4fOTKvhp1RXV+NfyJLdYKA30id/r0O6qGnUFlzsZGRkpKSO
FYRhRY047eGCPgWtPn6WOdp0Clpvb2/+i0oJDAxkpmZaZ3JnimeiP3bs2KlT
p/S735lcampq+puCVkXIoiUyMzPV0iIF49sphn43Pq+sW7cOXbFnzx4UVH5+
fn19PZpEf0HMCOqL72XWu3PnTnNzM+9BUF36HqSFFidLURsaGrSiMhXe+x4s
eXl5ObdG/XDLbm5uRhNSoAZtbGx4nYJpe+1OnjxZVVUlEbKCIAiCIAgjhsri
ihjz9PScOHGilZXVhAkT9LJtyZIlCMszZ86cP38+NzcX1YoyRHz29vaiGB9z
P5WE5pqnT5/msqGhoehke3t7Jycn5CjyeOvWrYcPH0aFIiaRkaPHjR3yoFcl
+z/77DMttFALWtGfmUNNagJ4lKxbjmm6u7tbW1vr6uq0+ClZshsM2nD4f3VI
FzWNWvMvLCzct2+fpI4VhGFFjTgVQqsOedPiZ5EZTLtnz541nYKWuZsJnaHq
4uLi7Oysf9zGnM7b9GfMHjlyJDU1tb8paFUh29ramJUoIcXTBAZy6De/+Y1W
JArDl7q7u1MS7Ia3tzemw2i2bi2lrGalHzx4oN0+cq6hoQFlVVFRwfSHhtFW
8PiztrZWC5Xlbd9++y3vpAzUzwcffIBIM7rdDjVobW09adIklRVrx44dJ0+e
lAhZQRAEQRCEEUNlcUXEoleNBke88sorMTExubm56nxjE+eDqbALrok21qeg
VZlnR22M2JAHvQ55cI1gmu7u7vb2duqcXq35LLJkJ4w8kjpWEEYbJlLQokwQ
KkZ3mhlmcg8PD9dOoB2qFLS3bt26fPkyRdq/fz8X16smvnf58uV8KaXli0xf
p7e398GDBx0dHS0tLbW1tUx/KJDs7Gx9qGxdXV1ra+v9+/cfPnyohUhwWS7O
V/BFfJ1REahOt6MGKKREyAqCIAiCIIwYN2/eLCwsxLsMDQ11cHB4LCbi2Wef
nT59+urVq/fs2YPkKy4urq6ubmxsvHPnDsrQ6AXVGuDBgweDg4P1Gdw2bty4
a9cuvqugoODGjRsjfKcWCXodqiOsBTOhcW/fvq1S6RmNJxKE4QbbggXAEcYy
ODs74+2uWLFi37594uoKgqUwkYI2Li5u+/btTPeBgYHM9fpd9IxfFxcXJn1e
QQP462B0R0VFmU5By2SEylJ76Y3GFGhpayhSRkbGkSNHVMCsp6dnUFBQTEwM
JUSA/Wi27r6+vp6eHqVwmpqaamtrKyoqKEzx/0CpePH69eutra287f79+9QG
34t0CQ8PX7ly5ezZsw1zkKntdosWLdqwYQO3nJKSwm1q2+1+NAeZIAiCIAiC
MGAQiqg1JCIybN68eXqR9uyzzz7//PMvvfTSunXrELSZmZlIyqtXr6LQkHk/
dKSVSjYRHBz8+uuv29nZ6c9SPnfuHCL2xo0bXGGE79QiQa9asrbRE/k77qG2
79y509jYWF1djXuCm0NzSJJTYYRRTy5wt93c3CZOnIjXHxkZiVOP5cEyWLqA
gvDEYSIFbVFRUU5OztmzZ0+dOnXs2DH9YztUQWBgoL+/v4+Pj7e3N/IASeDk
5GRvb79o0SLGtekUtOirwsJCdWKt0ed3PT09nZ2dFAk9VlVVdenSJZRSSkpK
QkIChWEWM3OpXzvdTqWU5Zq3b99uaWlpaGhQz7AoDDMjVogpUltO5L98KS9+
/PHHqCBuhPt67rnn9GpwwoQJVlZW2DFeRyhyy5s2bYqPj8fEyQwrCIIgCIIw
rKgALnTa7Nmz9SJt+vTpL730koeHx+bNm99999309HQkH/Lv4cOH2hqU0Qui
NhGraNdly5bZ2dlNnjwZNbt7926kHarVgtJOgl6fBLR9FNevX6+srKSB6LQV
FRXt7e2WLpfwZKGS7eJ0YwCxJDj4eP1Yj9OnT2M3LF1AQRCMYEInqBS0JlKs
GqagRQ4hsVReeDMFgzIgg0zSrUJlmROZCnNzc7OzszMzM5kZc3JySkpKUGXN
zc18C7quvLz8yJEjRtWgIYgiLVyXW/vR7X+CIAiCIAjCgCkrK0tMTNy4caOr
q+vzzz+vl2R/9Vd/tXjx4rVr127duvWjjz7Ky8tD3bW3t6M2DbNOKGpqalJT
U6Ojo8PDw1F0fn5+u3btQvfy2eHbXKfOye/s7GxrazPz6bkEvY4/8DtwT27e
vEl/KygokCU7wSKoZLvYnKCgIP1BWOacSSUIgkUwsRtfpaCNjIxkUL/xxhuM
aE9PT2SDi4vLokWL9Dm2VApa/dl3Wvys2pZ/8eJFFT/7WDoqlAwTWX+TdKvd
elyNy2rxueXl5dXV1VXfU1lZieTjRSbH4uLikpIS/stcqaWU5fWTJ0+ic379
619T/pdffvlv/uZvnn32WaNLduqQvX379nE7fCPS64fOSxEEQRAEQRAGDMot
NjbWy8tr/vz506dP10syW1tbhKifn9/bb7+dkpKCtNNO8tdiPP/0pz8ZvaA6
HI+PaD/V/joT4bSDRDnI165dQ5GaeUaNBL2OP/BZ6Am3b9+uq6srKiqSJTvB
IqiHCNnZ2TExMct14PLjqlu6gIIgGMHEmbcqBW1WVtYXX3xx/PhxFEJCQsLe
vXujoqJCQkL0x9ypFLQKFT+rngPq42fVo0AthJY5C63V3yTd6kw8rsZluX58
fLwWnIuAqa6ubm5ubmxsrK+v19IzlZaWFhcXc1MlJSX8rp3oy5v5LFYrKCjo
1Vdf/Zu/+RujS3YqAIHbQUPyjQiktra2YW0dQRAEQRCEJxAUGtLRaEwoUs3N
ze2Xv/zlv/3bv2nBXMjI7u5u0xdUSdl4f2tr68jEjaooEsSnJlbNyQQnQa/j
DxUH1NDQQGeQJTvBsqhsjMoQbd68+ezZs5YulyAIg0WpHUZ0cnIy+kHFF5gj
PPTxs0p76ENo+1selXmWq2kZYNUxwpTwypUrXPPu3btMiDdv3qyrqysrKzMa
KsuLXOS9994LCgp6+eWXTUfISsi/IAiCIAjCcKA2gZw6dSo4ONiosLSzs1u7
dm1UVNThw4fz8vJaW1s7OzsfPnxo+soqKZv2mHjwcaPmBL2eOHFCe969Z8+e
rVu3auGuyEj08KpVq9zd3ZctW+bi4uLs7CxBr+MbwyW78vJyum5fX59shhRG
HpXfB6OEFcLM+vr6YlEl06IgjHWU2qmsrEQjoR9SU1OPHDli5vZ+LWMFQmXD
hg28DRMRERGhhdC+9957R48e5YLIGzSJmSloVdab999/PzIykuv7+PisX7+e
KyPk9u3bh0w6duwYlz3/P2RmZmZnZ+fm5vIVCCrET1lZ2YULF1CGn3zyCYWh
8AsXLvzbv/3bqVOnTpw40crKasKECY+FYyxdupS72LlzJxeXpNiCIAiCIAhD
gookRV4iySZPnjxp0iT0mF6JvfTSSxs3bnz33XcRb1VVVWZuOVNJ2bq7u1Wi
isEslZgT9Eo5kb6enp5ubm7Ozs4LFixwcnLShPHKlSu9vb3Rk0jikJAQCXod
3xgu2amcKfxLVl+FEeb27du48/jdOL+YI8ysu7s7JkgyLQrCWEepHS0xK/qh
pqamurrazEN0taeKa9aswSa4uLigW9SC3qpVq3x8fHgPb34shNZEClq16+/T
Tz99++23uT7XcXV15cpcn2/hu4KCgv71X/8VXffRRx+lpKR88cUX2CJKq465
y8/P18JjP//88/fff5/rIJy8vLzmzp2L+bK2traystILRRsbG1tbW3t7e+3c
YwqZnZ0tCSkEQRAEQRAGiWFCQ0McHBxCQ0MRdUi45ubmvr6+R48ejfz6lQS9
CuZjuGR3+fLl69ev379//+HDh/RhSxdQeLIwtLSSaVEQnhwGloJ24sSJSBqj
IbQmUtAqa3P27FltZy8f5Ar6K6u0EdHR0fHx8Voobnl5ObNkdXV1cXFxlg4U
17Fjxz7++OMtW7a4uroafbZreGXJsCMIgiAIgjB4tGOKL126tGfPHjc3N73u
+rM/+7M///M/t7a2fvXVV3fs2IFsq6qqun379qPv+aGsEwNjYEGvgYGBGzZs
0J/wLEGvgkZfX9/Dhw/v37+PA0Jba0t2TU1NskI7JBieVKlFZlm6XKMXw9Sx
GCsfH5/w8PAjR47gI1u6gIIgDCP9SkFreI6HYRStiRS0Fy5c+PJ7uDhXVquC
r7322iuvvOLk5LRgwQIu6OnpyYuIqODg4IiIiLfffvvdd9/9+OOPtZhZJB/X
uXjxYmFhYXZ2trZqt3v37o0bN1KqOXPmTJs2DYmIUHwsQpbX7e3tKW1YWNjh
w4eRl0wT33zzjUQrCIIgCIIgDIC2traysjLE2NatW1GGet2FGJs0adKzzz6L
RET1VVRUaE9ytSyxQ7tkN7CgVxXi4e3tjfMrQa+CQkv29/Dhw5aWltLS0vT0
dBwHeldXV5csLg0eRhBOHMOTcYrvqR3IRsVaulyjF8PUsdguDw8PDFpsbCzW
ydIFFARhGOlXCtrDhw/v27cvOjo6MjISSaMPnvXy8sJ6mJmCNj4+nl/27t37
b9+DmtqxYwcC6c033+SCfITPurq6IqUcHR1fe+01pJSWqOLQoUPnz5/Py8uj
YGg/tWr3wQcfvP3228HBwXzjiy+++JOf/OSpp576sz/7M710RDdOmzZt5syZ
mDjKQwH44JUrV+TxqCAIgiAIwgBANH755ZdaKsMFCxbodZe1tfWzzz47ffp0
pN3HH3988+bNjo6OH806MTAGFvSqHuYaZluToNcnHPyjR48e9fX14RmVl5dr
S3YNDQ30YTym3t5eSxdwbKPynzLiGG5y0rj5SOpYQRBMo/JHGI2fRaqZeQyI
Wrs7ceJETk5OVVUVP/mdV/gvV9MuxQf1S22/+MUvYmNjz58/X1BQUFFRgZTS
Vu2ysrI+//zz3/3udwkJCcHBwUuWLLGxsfnJT37y53/+50YjZGfMmIGJ41so
P/ciekwQBEEQBGEA1NXVpaWloet8fHzmzp2rl1vPPvvs888/P2/evMDAwPfe
e6+0tFR7Cnz69OmioqJr166ZGQ03VEGvCnd391WrVqEDg4KCIiMj9QcyS9Cr
oPGnP/1Ji+Cmy2lLdnQ2egWu0P379+kVli7g2ObSpUsMOsZgeHg4v+BXMuha
W1stXa4xANYPM4UPi4lzcXGR1LGCIDwGk9SNGzeuXLliNH5227Zt+rgDbdOd
PnjW29s7ICDgTR0RERE7duyIi4t7++23//mf/5mPr1u3bvXq1Xxk4cKFc+bM
QezNnj3b3t6ePzFNBw4cyMvLY+psaGhASmGdmD2rqqoKCgrOnTuHwf/Nb37z
D//wD25ubi+99JKtre0zzzxjmJBiypQps2bNcnJyoqhYPO6ipKTk1q1bEtog
CIIgCIJgPpWVlUlJSeg3Dw+PF154QS+3pk+fPm/evNdff10Lbfjiiy/ee++9
7du3o74QfhkZGWZGww1V0Ks6uWXfvn14uIhGipSVlZWfn3/p0qWvvvpKgl4F
hRa7TdPjbtA30tPTCwsLa2tr29raurq6enp6LF3Asc3FixfxHHEP/fz8GJWa
O8bos3S5xgCtra244ZivrVu3urq6SupYQRAeA9V0//59rIGKn71y5YqKn8VW
6B90Yn7RRfoUtAEBAb6+vpqmWrZsGYLKycnplVdeee2111599VXMDi+itbA8
Xl5eaDztRV7RAvbDwsIOHTpUXFzMjIm96u7uvnfvHhKO2RMVV1FRQRlSU1OR
hRgx5Jmjo+Nf/uVfTp482draWq8hn3766SlTpsyYMYM3aM93UJslJSXyLFUQ
BEEQBMF81G4ZFB3KSi+3fvrTn6Lx1q9fjxR85513PvzwQwQhSg9hpp1uZ2Y0
3FAFvar8aGhXcWwFM2lvb8fFSE9PLygooOcMa3z3kwPDkCGpz2AoyQHNRGXu
wAxSe/9LUscKgtB/lLLCmPxQCK2JFLR2dnbIOd7m6+sbEBCwcePGdevW+fv7
//3f/31MTExKSope4KmDJviztbX16tWrly9fPn/+fGpqanR09Nq1a2fNmvWX
f/mXzzzzjNEIWRWxGx4ejgiUCFlBEARBEATzycnJ2b59u5OTE4prypQpj51D
4ujo+Itf/MLPzw85pz9HZdOmTSg65Fx7e3tnZ+fIBL1mZGQUFhZeuXLlxo0b
9+/ft3TNCWODO3fuVFVVZWZm0iHpmc3Nzbg5En44SKjMuLi4NWvWrF69esWK
FV5eXrGxsQxPS5drDIC1/OabbzCVhw4dwlnGocb8YgzxfPF/a2pqLF1AQRDG
ACp+AWPyQyG0hilonZ2dFy9erGWMxW7zr5/97GfYcP7r5ubGi0uWLOHF0NBQ
7WRg9JuWvaukpISZtKys7NKlS/yZl5fH6+fPn4+Pj+fNnp6eCxcu/OlPfzpp
0iQTCSmYMjB02mnDDQ0NkmpcEARBEAThR0lPTw8ODp4xY8aUKVOefvrpxwJj
58+frw9WRc7xp3aY8IULF5BbnZ2dHR0dIxP0ylfcvHlTziIT+gUdhs6TnZ1d
XFxcXV3d2Nh4586dBw8eWLpcYxsVUM/4ZVzb29vjGzJgLV2uMQD+KV4qxvPU
qVO4ulQddhVjiJ1MTEzEilq6gIIgjAHUKcEYE30IrekUtGFhYYGBgW/oeP31
152cnObOnTt79uyZM2f+9V//9Zw5cxwcHPQxDrGxsQkJCZ988smnn37K1U6e
PHnu3Lm8vLySkhL+/Pd///df/epXP/vZz15++eWpU6f+7//9v5966imjW/sw
d15eXlxz//79Z8+elVTjgiAIgiAIPwpyC1VmNJYB6YVye+WVV/jJ77yCosO1
RL/9x3/8B7LwvyXoVRj10D9ra2tzc3PpolVVVXg07e3t3d3dli7X2EblUNi4
caOjoyO+GL/wiqXLNZbAodbOA1TwJy9aulyCIIw3VApahBZyS5/AYtmyZXZ2
dthwdNrEiRONBrQapqA9efJkYWFhQ0PDxYsXU1NTDxw4sGnTptdee+35559H
Lj4m+Qy32/n5+SUkJEiqcUEQBEEQhB+ip6ens7Pz1q1bH3zwwcqVK42KKxsb
m5/+9Kd/93d/N2vWLFtb27/4i794+eWXV61aFRwcvHPnzo8++ujMmTOfffbZ
xx9/rA96Rdf5+/ujA9F4r7zyysKFC/nUSy+9xHW0M5DRh1wkICAAgacUYFJS
UlpaGnqyrKyssbHxG0EYIurr6/EsTp8+fe7cuZycnKKiourqau3hvjBgcLVw
2X7729/+wz/8g6OjI47Y6tWrDx48WFNTw/jVdsMKpsnOzo6Li8NaYoGXLl1q
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
AAAAAAAAAAAAAAAAAAAAAAC4k/0PdvK6mQ==
     "], {{0, 923}, {1681, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{319., Automatic},
   ImageSizeRaw->{1681, 923},
   PlotRange->{{0, 1681}, {0, 923}}], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
ci+ipuQ1ew/k59f3Ec0NVSD5u08+cR98yL59XqaRPSRvfzc2O7uv9KavlOmu
nJzEo0e9ufzs9bo6yYTK+5W+y8+fdx/zlL17/9b3jvc3TJO8XYAYoXiv+7XK
c4+Wrq65Bw9mGo393/Tm7rhAUhzG3x854uV/Fq5cu/aLkhL3RpINBu/HKXr8
Y9/1JYl3Oba6ulen4qwT555rNXHKTfmfy7AH81nu6fEvJ078ury8vxsCAAAA
AABXgwkkl3/6aa8Nb7pSdn9JzrX0ZsnmXvq6mq6vzGRIAslTFkuQ28WNnmdb
90Vy3veM4mLJu3T2tVLJ5i+/9DKpq/zqq/vc5sOKAfzuk08k79Hn5Rgm7tp1
tKOjr036Fab1FYL19wLd4XFnBZIBubk5Z870q19xarmfn099/LFkZXESLiov
71V57sGDXp5ariRz7163rzxx8eIktzvQcpUjAAAAAAAjaDCBpHvMMrSBpORc
y5veirAvktlmvzK9/gaSkimN+5RSb0hmm/fl5lZKzaiVHHy/Epjmy5e/7zZr
+6Z3BezlqY8/7tfp0a8wTTKJGvI8fKjcWYHkAMI6yQQ7tKioUyocruvo6JUQ
ep7f7YH4KIW7rRglnnH9iEkeEwJJAAAAAABG0NAGkuNycvLOnh2qsTVeunS/
29huulhzXyRnf/cr0+tXICmZpo7Nzt566tQABn+jj9nfkld4Dj5lkmxBnCdf
9ufIv1xT477725qa+qrfrzDNvfEBh73DYNQHkpIJdl8z9N1v9TCwCdQ9/lBb
26s1MRIxHmcFyWPSK7QEAAAAAADDaWinbIsSW109gDv4Sco7e3ac200CPS+M
4llMVZX7gCXvxDj4QFLyznX35+U1Xro0sMFLHo1/O3TI/WgMScrknqH1N5B0
T4o8h2Peh2kWh2NGcbF72jngsPdWG/WBpPcJtuQ1jeKbpL89Oom969Var/8y
SE7Z/s6uXTUXLgy4UwAAAAAAMBhDu6iNz9eLSni4Cq5fJBMt0emAG8wyGt3n
UMdUVbnXHHwgechkmuA2p3gw12Wdslgmuy3YLXkR2m0SSLonRUMVSEpGTIMJ
e2+1UR9IXr9x498OHfLmhJG8lnIwh8J9l3vN3Jf814DP12G+N8szAQAAAACA
ITeYQFLyxnGijN+x4/dHjpy/cmWQY3O/CeE9O3YUtbYOuEHvQ8LBB5KS4edg
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
8YH8fPd2flpU1NLV5U0LNRcuPOh2maXn9+gbEkj2dWzH79ixobHR+7fp47Y2
54WsBJLDE0ie6+qaKvWPBvG5HsDVjLbubvFpnfA/ob1kINlzYrxSU9PfxlWn
T7t/e3j+6gAAAAAAAJ4NSSDZkySE7d//cVubN0HQpatX5WVl7pdIScZ9ktFl
T4+/LC09f+WK545+f+SIe0eiPLx792mr1cO2ktmOeCa/nxdJ/tFgkBxAkEYj
DpeHDa9/HYYE5Oa6b3tXTo54qa8NvyGB5I2+j614UrzvN42exO488/fn4XAG
korjx8UABllMf39T0zslkBR2NTffvWOH+2Hx+fofHF5+k5jt9tTjx3t9g/UV
SPaUCTt3Jh49avbuHrl7z51z/wDezmuCAwAAAABwGypsaUlrbHQta44dc58O
/JBGs7a+vldNsa1rU33dlXFyfn5CbW1fN1hrs9ncA4Se4mFFkpoLF76za5dk
dnHPjh2/++QTQ0dHr/hCDGB1XZ1kmnfTQM85VMnZ4uN37HhJr2/7+yDI1t1d
0NIiLysL3rOnVwgjXprrtkqvMzebo9WKDXtNP7c4HFtPnRK9S6ZtojxbUeEh
rvnmBJIejm3PGfVKTc0Xly71Olbi+IjDO33/fvfDO5yB5JCUXm/rHRRI9nUj
BedH44d79775+efub59w9vJlsVOPl5RIXvnsOZB0fgOIzfPPnpW884Pj+nVd
W9sThw5JDs/zpw8AAAAAAPQymGCk15/5fQWSznKvWj2toGCBTifKkx9//IM9
e+51i0pc84dXamo8/Jmf/sUXkuGDawvf2bXru3l5k3btumlNz3059XUBnnMH
RXeiBOTmOqtJhjDHOjslp127Fv+dO3ta83CUekpoUVGbx8W+vzmB5I2vj+3D
UqvbSJ4boozv46o8L7sbGAJJSbbu7mekrpR2f/vER6zn7RPv403rexNIujYu
xvl4SUnPN9XPtVrPXfT3BrAAAAAAAGA4A0nvi/jz/5myMs+L1Hi4FWR/+0qo
rfXyAqe+7nTnofQVwvR1K8j+lun793tOI/t6a0ZrIHnDu0zSy0IgOYBTpa99
9OaEEZ/66MrKm2aMgzkmngPJfpWA3Nz9ra0DODgAAAAAAHyTDWEgaXE4/rXv
2bLelzHZ2f/56adeLpmdZTROcJtg7n0Zv2OH4vjxfk23lFzh2kPxEMKcuHjx
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
S5YkJiamp6fv2bPns88+S0tL+81vfjN58uSAgIC7777b89xt510lIyIi3nzz
Ta1WazAYTCbTSB8DAAAAAAAAALfWtWvXHA6H3W7ft29ffHx8SEhIUFCQv7+/
ZJB43333Pfzww48++ujjjz/+61//umfadVFR0enTp/Pz85OTk+Vy+c9//vMp
U6YEBAT4+fnd9FLJ0NDQZ599NikpKTMz89ChQz3L3Fit1pE+KgAAAAAAAABu
CYfDYbPZrFarWq2OiYkJDAz09/cfN26cZJA4adKkn/zkJ3Pnzv3lL3+5YMGC
qKgohUJx8ODBjo6OmpqaHTt2pKamLl269Be/+EVwcLBoys/PT7KdMWPGjB07
1tfX9/777xcNhoeHL1u2bMOGDVqttq6ujkslAQAAAAAAgNHKbrdbrVaz2ZyV
lSWXyz1PtX7ggQemT5/+zDPPPPXUU/Pnz5fJZCkpKTqdTrRjMpkMBoNWq1Uq
lTExMWFhYcHBwQEBAZ4bdBL14+LiMjIyRAtGo3GkjwoAAAAAAACAW+LSpUst
LS0NDQ3r1q2bP3++ZFrovOXjj3/8Y5lM9h//8R9yufzxxx8PCwtLTEzUarWi
nY6OjtOnT3/22Wfbtm174403fvWrX/3rv/7rT37yk/vvv/++++4bP36850Ay
ODhYtBwXF7d27dr8/Py6ujqWuQEAAAAAAABGn/Pnz9fX1+t0ujVr1sydO1cy
LfTz8wsMDAwODp49e/avfvWrF154QfwUj8UzK1asKCwsFO1cvnz5woULZ8+e
LSkp+etf/7py5crnnnvuiSee+OlPf/rwww/fd999ngPJgIAA0VpYWNjixYuT
k5NVKlVZWVlTU9NIHx4AAAAAAAAAQ6m5ubmqqkqtVq9cuXLmzJme08LIyMiY
mJjExMSoqCjxq3he/KrRaEQ73d3dV69etdlsx48f37t37/r161etWiVenT9/
/k9/+tP777/fcyDpNHXqVLlcLrpQqVR1dXUjfXgAAAAAAAAADKWTJ08WFRWl
paXFxsaGhoZKhoSTJ0+ePn26XC4XdV599VWFQvH888+LZ/z8/BYvXpydnW2x
WC5fvnzlypWrV6+ePn368OHDarV63bp1ovKSJUsiIiJmzJjxox/96Hvf+969
997rOZB09rVq1aqPPvpIr9cbjUaz2TzSxwkAAAAAAADAEDh27FhOTk5SUtKi
RYumTZsmGRL+8Ic/nD9//ooVK1avXr127dqMjIxly5bNmDHD19d34cKFmZmZ
bW1tHR0dly9f7u7uPn/+fENDQ0VFRXZ2tqj84osvxsbG/uY3v3nyySf/+Z//
+Xvf+57nQHLChAmTJ0+eOnXq008/nZCQIPo6cOAAy9wAAAAAAAAAo4Ner8/I
yIiLi5PJZMHBwZIhYUhISHR0tEKhSEtLy8rKcp3fHRERkZ6ebjQa29raLBaL
aFD8FI/FM4cOHfrggw+Sk5Nff/311157LT4+/sknn/zRj37kOZB0ci5zI4Yn
BjnSxwkAAAAAAADAECgvL09NTY2MjAwNDe3r8sXp06e/8MILWVlZOTk5u3fv
1mq1SUlJ4eHh4qUnnnjinXfeMRgMZ86c6VkU22azdXR0tLW16fX6/Pz8tLS0
P//5z8nJya+99trzzz8fERERFhb2wx/+cNKkSb6+vmPHjh0zZoxkp4GBgSEh
ITKZ7KWXXtq0aZNOpzt27Fhra6vdbnc4HNeuXRvpIwcAAAAAAACg34qLixMS
EkJCQoKCgvz9/SWzwTlz5qxataqwsLCkpOTw4cN6vV6hUMhkMvHSvHnz3nrr
rcrKysbGxvb2dtGgw+Gw2WwWi+XkyZM6nS47O3vTpk1//vOfX3/99T/84Q8v
vvji73//+/nz5//4xz/28/MbP3782LFjJTt1Lu0tuoiNjU1JScnJyamtrbVa
raJ90ctIHzkAAAAAAAAA/abRaGJiYgICAvz8/Hx9fSWzQZlMplAo9Hq9wWBo
aGgwGo3p6ekRERHipfDw8KSkJK1WK14ymUyuLYtfxZPipezs7LS0tOTkZNHI
+vXrN2/e/OKLL4oNPXfqfqnkG2+8sW/fPrPZbLVa7Xb7SB0xAAAAAAAAAP1l
t9stFovZbP7oo4+effZZyYsVxa/iSfHSwoULN23aZDQaz5w509LS0tbW9t57
7z399NOizowZM1566SWVSlVeXi5ede2is7OzqanJYDAUFxdv2bJFoVAolcr0
9PTNmzevWbNm2bJlcrlcbB4UFOR57ra/v7+oExISsnjx4rfeekuj0VRXVzc3
NzN3GwAAAAAAALhTWCwWk8lkNBrffffdp59+WjISHD9+vL+/f2Bg4G9/+9vs
7Gyz2dzZ2Xnx4kWx7UcffbRw4UJR59FHH33++eeVSmVBQUFjY6NrFzabTdQX
vej1+ry8vHXr1qWlpYnuMjIyxM/169eLrWJjY2fMmOF57va4ceN6hvGzn/1s
0aJF8fHxmZmZ1dXVzN0GAAAAAAAA7hRms9loNLreDdLDXRxXrFhRWFjourla
rY6KihJ1pk6dKpfLExMTVSpVXV2dZF+iI61Wm+FCbC6eEb0rlUqxuZdzt0U1
MZiwsLD4+HiNRsPcbQAAAAAAAOBOce7cuSNHjmg0mldffXX27NmSAeDEiROn
TJkya9as1atXl5SUuG6+e/fupUuXBgYGhoWFyeXyFStWZGZm1tbWSvbV0tKi
1+v37t2bnZ39/vvvr1u37sMPPywoKKisrNyyZYtoPCoqKjw8fOrUqZ6TSWdA
umDBglWrVm3btk2Mqr6+3mw2WywWkkkAAAAAAADgtnXy5MmioqK0tLTY2NjQ
0FDJAHDy5MnTp0+Xy+Vr166tqKhw3dy5Nnd4eLioEBMTs3HjxiNHjkj25bwa
s7CwMCsrS6FQvPfee3l5eTqdrqCgYPv27RkZGStXroyMjAwODg4MDPTz85Mc
j6+vr3gpICBg2rRp8+bNW7JkSWpq6p49e0TjJpPJYrEMy5EDAAAAAAAA0G91
dXUqlSoxMVEul0+dOlUyAAwODpbJZHFxcRkZGXq93nVznU6XkpIiXo2MjBQt
REVFKZXKyspKyb66uro6OjpaW1srKiq2bt2anJyclpaWnZ2t1WrFJgaDwWg0
btu2bfny5WFhYaLTgIAAz3O3ncmk6Fr0K8YmWjCbzcNy5AAAAAAAAAD025Ej
RzZu3BgTEzN37tyHH35YMvebNm3aokWLkpKScnJyjh075rp5RUXF2rVr5XL5
008//eSTT0ZGRqamppaVlUn21bOid0dHx9GjR3fv3p2WlrZ58+YtW7ZkZ2cX
Fxd/+umnRqNRPBDjiY+PX7hwYWhoqOe5287lv2fMmBEbG6tUKnNzc0U7JpOp
s7PTZrMNyyEEAAAAAAAA4K2ysrLU1NTIyMjQ0ND7779fMvcTL8XGxqalpRUV
FZ08edJ18+rq6g0bNkRHRy9cuHD+/Pnh4eHJycmlpaWSfXV3d9vt9q6uLqPR
KPrNzs7esmXL5s2bRcu5ubkVFRXi+draWrG5RqNZs2aNaNPz3O0xY8aMHTvW
19c3KChoxowZcrl89erV27dvNxgMTU1NnZ2dw3EEAQAAAAAAAHhNq9UmJiZ6
niI9c+bMlStXqtXqqqqq5uZm1831en1GRkZcXFxUVJRMJhPtiNZEm547NZlM
BoNBVMvOzk5LS0tOTv7ggw8OHTpkNBrPnj0rXjWbzRqNJj4+vr9ztyMiIt58
803RsmhftHMrjxwAAAAAAAAAb127ds3hcNjt9j179rzwwgueL0ScO3fumjVr
dDpdfX39+fPnXds5evTo1q1b4+Pjn3322Tlz5oh2VqxYUVhY6Ln3zs7OpqYm
g8FQXFy8ZcsWhULx/vvvazSaioqKY8eONTc3X7x4sbq6WryUmJgYHR0dHh7u
eYTOuduhoaFiJElJSZmZmT0Jp8lkslqtt/JYAgAAAAAAALgJh8Nhs9msVuuO
HTuee+45z7dqnD9//rp16xoaGlpaWi5duuTazrFjx3JycpKSkhYvXjx9+nTR
TkxMjEaj8dy76Lqzs9NkMun1+ry8PNF4RkbGhx9+qFary8vLT548KQbW3Nxc
W1ur1WrT09NXrFghk8lCQkICAwM9z92+//77f/KTn4SHhy9btmzDhg1i87q6
Oi6VBAAAAAAAAEaW3W63Wq1mszkrK0sul3ueEC0qiGqisthEbOjaTkNDg0aj
USgU0dHRISEhonJUVJRarfZyGEajUavVZmRkvPvuu+np6evXr9+7d+/x48dt
NtvVq1e7u7tvuMwKl8lkwcHBnofqFBYW1rMsuGhf9DL0RxAAAAAAAACA1zo7
O8+cOWMwGN55550nnnhCMtMbN26cv79/YGBgTEyMWq22Wq02m83hcLi240wU
4+LiwsLCXNNLi8XSK71019LSotfr9+7du23btk2bNr399ts5OTmVlZVnz569
cOHC5cuXe7o4cOCA6CIhIeHpp5+eOnXq5MmTJ0yY4DmQDA4OlslkYlRr167N
z8+vq6tjmRsAAAAAAABgpLS2ttbW1hYWFq5atWrOnDmSmZ6/v39QUFBISEh8
fPy+ffvsdrvD4bh27ZprO83NzVVVVWq1euXKlTNnzhRbRUREpKen99y80WKx
eB6G2WwWNfV6vRhJZmbmn/70J/FT9PXZZ5+dPn26o6PDtc5HH30kRiuXy6dP
nz558mTPgWRAQEBwcHBYWNjixYuTk5NVKlVZWVlTU9MtPKYAAAAAAAAA+uB+
ZaO7wMDAkJAQmUyWkpKi0+kk23Gul52UlBQeHi62EvUVCoVerxddmM1mz8Po
6urq6OhobW2tqKjYunVrcnJyWlpadna25DLZdXV1KpUqMTFRLpdPnTrVcyDp
JGqK+mIrsa1oYciOIAAAAAAAAACvud/70V1QUNBjjz0mKmzYsKG6ulqyHefl
i6IpmUwmtgoPD09KSpJMFN3Z7XaLxdLR0XH06NHdu3enpaVt3rx5y5Yt2dnZ
Op3u5MmT4lXnPPGmpqaysjKVSpWcnLx48eKwsLDg4OCAgADPgeTkyZOnT58u
l8tXrVr10UcfeZmUAgAAAAAAABhC3lxtOGXKlKeeeio+Pn7r1q1Hjx6VbMdi
sbS1tRmNxvT09IiICLHVzJkzV65cqVarq6qqmpubPQ+ju7vbbrd3dXWJFsrK
yrKzs7ds2bJ58+a0tLT8/Hy9Xi8a7+josNlsN76+72VTU5MYuXhp7dq1Xi5z
M2HChMmTJ4t9fPrppxMSEjIyMg4cOMAyNwAAAAAAAMBw8mbp6pCQkOjoaIVC
odFoGhoaJNtxX617YMtbO6d+Z2dnp6WlJScnf/DBB4cOHRIttLW19boXpTfz
zd05l7kRG4rdH+wRBAAAAAAAAOC18vLy1NTUyMjI0NDQ733ve5IJ3r/8y7+8
9NJLKpVKVO5rORiHw2Gz2axWa3Z29uLFi/38/GbMmBEbG6tUKgsKChobG70c
T8/VjwaDobi4eMuWLQqF4v3339doNBUVFQ0NDefPn+/u7r527dr169dvfJ1e
1tXVabXadevWLV26dObMmY888sh3v/tdX1/fsWPHjhkzRnJ3nLfEFDu1adMm
nU537Nix1tZWycV6AAAAAAAAAAyh4uLihISEkJCQoKAgf39/yQRv7ty5a9as
0el09fX158+fl2zn2rVrDofDbrfn5+fHxsYGBgbOnj37+eefT0lJyc3NPX78
uJfjsdlsnZ2dJpNJr9fn5eWtW7cuIyPjww8/VKvVhw8fPn369NWrV52xodVq
FTWNRuOBAwc2bty4cuVKuVwu9sXPz2/8+PFjx46V3B3xqhhecHDwvHnzxFDF
CHNycmpra0VrzttUAgAAAAAAALgVNBpNTExMQECAn5+fr6+vZIIXERGRnp4u
OWnaXWFh4YoVK4KDg8PDw6Ojowe8qrVzOva7774rel+/fv3evXuPHz9us9mu
Xr3a3d3tWrm5ubmqqkqtVovuZDKZ591xv1TyjTfe2Ldvn9lstlqtdru9v0MF
AAAAAAAA4JnzQsSsrKyoqCjJSwrFr+JJ8ZKoIKq5LivjgfOSy7lz5y5atGjA
t2psaWkRW+3du3f79u2bN29WKpU96+OcPXv2woULly9fdq3c3t7e2NgoXhXj
7FmgZ8aMGUFBQZ7nbvv7+4s6YqiLFy9+6623NBpNdXV1c3Mzc7cBAAAAAACA
oeW8VaNSqYyIiJAM7saPH+/v7x8YGBgTE7Nz506LxeLNjOaSkpLVq1fPmjVr
3rx5Tz31VFRUlOiisrKyvyM0m81Go1Gv1xcVFW3duvXtt98WP/fv3//ZZ5+d
Pn26o6PDtXJXV1d7e7vzOknRY2xs7IwZMzzP3R43blzPDv7sZz9btGhRfHx8
ZmZmdXU1c7cBAAAAAACAoeVczDopKSk8PNzzvRZXrFhRWFjoZcs6nS4lJUXm
QvwqnuzvCLu6ujo6OlpbW6uqqrKzsxUKRUZGhlqtFmMWIxfjl9zKGWMqlUq5
XO7l3G1RTexmWFhYfHy8RqNh7jYAAAAAAAAwtM6cOVNeXq5SqV566aUZM2ZI
xnSTJk368Y9/HB4enpycXFpa6mXLlZWVSqUyKirqqaeemjdv3qxZs1avXl1S
UtLfEdrtdovF0tHRcezYsaKiovfff3/Lli0fffRRdna2Tqc7efKk5BWb4sme
ZW727NmTmpq6ZMkSMYZp06Z5Tiad0euCBQtWrVq1bds2MeD6+nqz2SwaJJkE
AAAAAAAABqmxsbGgoECpVD7//POPPvqoZEwXFBT02GOPRUdHb9iwobq62suW
9Xp9RkZGXFzcokWL5s6dGxISkpCQUFxc3N8Rdnd32+32rq6upqYm0btGo9m+
fXtmZmZaWlp+fr7oRfKelj0xptlsrq+vLykp2bZt26pVqxYsWBAcHBwYGOjn
5ye5p76+vuKlgICAadOmzZs3b8mSJampqXv27DEajSaT6abr+AAAAAAAAADw
rK6uTqVS9az/MnXqVMmYTjwvXu3vMtnOlqOjo8PDw/s749vdV199deLEiYqK
il27dr377rvJyckffPDBoUOHPK/6bbfbrVar2WzWaDTx8fFhYWFiJAEBAZ7n
bjuTSbHjSqVSr9eLXkQjAx48AAAAAAAAAOHIkSMbN26MiYmZO3fuww8/LJnO
hYSEREdHKxQKjUbT0NDgZcvHjx/Pzc1NSUl5/vnnZ8+eHRgYGBsbm5+fP+Cl
qy9dunTu3LkTJ04cOnRIpVK9/fbbmZmZokGdTif6amtr6+7uFs1ev37ddSvR
l81ms1qt1dXVon58fPyiRYt+9rOfifH4+/uPGzdOcpedC4vPmDFDDFupVIp9
+fTTT00mU2dn501XGAcAAAAAAAAgqaysLDU1NTIyMjQ09P7775dM58LCwuLi
4jIyMrRardFo9LJl52Rw5zrXixcvzs7OHvDS1VeuXLl06dJXX3119OjRvXv3
vvvuu++9996WLVtUKpVOpxMDu3r1qnvUKX4VT9rt9ubm5p4Z32+99ZYYSUhI
SFBQkL+/v+QujxkzZuzYsb6+vqKOGLxcLl+9evX27dsNBkNTU1NnZ2d/Bw8A
AAAAAABA0Gq1iYmJnicyz5w5c+XKlWq1uqqqqrm52cuWjUajaLznNpKifdGO
XC7Pysoa/NLVTU1NOp3uww8/FI2vX79eoVDs2rXLYDDYbLarV692d3dLbuWc
u71v37433nhDJpOFhIQEBgZ6OXc7IiLizTff9Ly0NwAAAAAAAABJPROZLRZL
fn7+smXLPC/1Mm/evD/96U9VVVWNjY3t7e1edtHc3Cw2UavVK1eunDlzpmgn
IiIiPT3d8y0fvWEymQwGg1arFY1nZGQoFArnRZKiZavV6mGXxau1tbU5OTkp
KSmxsbFi1zzvu3Pudmho6LP/P3v3H9N0vuWP3xjCZdJMTOPMrZcQdtI44mi6
Luki4nW6xjSssHIbQhqC6LUhhhhlHQtriPEyrIzjbRS7ahGtFgtYhFv5UcWC
2Ai3gIDcLtJ6ERjSAQsy/BrKbwTB/Z7Pt8n7kku3i/wqM/N8/GEQyvt1Xj/4
5+R13icyMikpKSMjw/HiSgrjfxsLAAAAAAAAAAAA5pqcnLTb7b29vVlZWVFR
UWw2m8VieXp6Ok3KHThw4ObNmzabbWBgYGJiYoFDMGnDpKQkgUBAzxEKhTKZ
bOkNYoaHhzs7O5uamujh2dnZ9EyVSqXT6aqrq1taWvr7+53+FlO73d3d/fLl
S6PRSJM6efKk66uSTO32pk2btm/fThM5duzYtWvXaGiz2YyrkgAAAAAAAAAA
AAsxOjra29trtVrT0tJCQkJcly2LxWKtVvuhQwwODtLzTSaTTCYTCoX0HIFA
kJSUtPSqZ6b4mh5OgdHzFQqFWq3+0KJy+nVHRTmFx+VyXS8CY3Fv1AQAAAAA
AAAAAPglGxgYaG1trampOX/+/L59+5xm3j766KONGzf6+PgcO3asuLj4Q4cY
HR3t6emZm/Nc3Lso52OKr5ubm8vKylRzPH78uKmpaXh4eHx8fHp62vVzKLYn
T54olcqEhISwsDA/Pz9vb++PP/7YdUKSy+UKhcLY2NiLFy8WFRWZzWa0uQEA
AAAAAAAAAHCtq6urvr5ep9OdPn169+7dTjNvGzdu3LJlS1BQ0NmzZ58+ffqh
Q0xNTY2Ojg4ODqrVapFItIx3C+c2zn7+/DnNQqPR0GMvX77syHZ2dnYODAyM
j4+7fg5zh/Pu3btnzpyhIAMCAry9vV0nJNlsNpfLpblERUUlJyfT0JWVlR0d
HYueDgAAAAAAAAAAwM/e/BbY8/n4+AQFBYnFYrlcXlNTs+ixtFotPYQeyOPx
oqOjZTKZTqdrbm5e+iz6+/tbWlqqq6sLCgrS09OTk5OZS5KdnZ3Dw8MLfI7Z
bNZoNImJiSKRyM/Pz3VCkkGfpM/Tb9Hv0hOWPh0AAAAAAAAAAICfq6ampvz8
/JSUlMjIyO3bt7uuTVYqlSaTadFj6XQ6iUTCZrMDAwMPHz5Mg9LQFMDSZzEy
MtLV1dXS0lJeXq7RaC5dunT79u379+87Os788MMPMzMzs7Oz79+/d/2cjo6O
yspKekJycnJUVBSfz6e5U8CuE5Le3t4BAQEikejMmTN3795derMeAAAAAAAA
AACAn6uGhoaMjIy4uLj9+/dv3rzZacJt69atzA1Ai8Wy6LH0ej0NxOVy9+7d
e+TIkaSkpLy8vJcvXy59Fm/fvh0ZGenv729sbCwuLk5PT79169adO3eys7Mr
KiqsVuv09PS7d+9mZ2ddP2doaKijo8NsNhcVFV28eHGBbW4+/vhjb29vPz+/
sLCwhIQEpVL55MkTtLkBAAAAAAAAAACYr6amRi6Xi8XioKAgHx8fpwm35aqw
NhgMiYmJfD4/NDRUIpGsRI1zR0eH0WjMzs5WKpVXr16lmAsKCiwWy+Tk5PT0
9MzMzAKfs5BK9vmW6yopAAAAAAAAAADAz1VFRUVycrJAINi2bdunn37qNM+2
c+fOkydPajSaqqqqpTRtYcY6cOBAVFTUSiTuenp6LBaLwWDQarX0cJlMRmEb
jUar1drb2zs2Nrbw55jNZnrOtWvXjh07RjFv375906ZNnp6eHh4e69evd7pQ
HA6Hx+MJhcK4uLi0tDT69RcvXrx582Zqamoh9zMBAAAAAAAAAAB+9kpLS7/6
6qutW7d6e3t//PHHTvNse/fuPXfunNFofPXqVV9f36LHqqysvHDhQmhoaFhY
WHh4+NK75Mw3PDzc2dnZ1NRkMBiys7NlMplKpdLpdNXV1S0tLf39/Qt8ztjY
WE9Pj9VqLS8vz8jISEpKioyM9Pf3Z7FYXl5eHh4eTheKfsrhcLhcrkAgiI6O
TkxMzMrKqq+vp6dNTk6+e/duGWcKAAAAAAAAAADwU8Q0mmGxWJ6enk7zbCEh
IWlpaY5LhqOjo4seiykPF4lEoaGhQqEwJSXFaDQu43SmpqbGxsYGBwdNJpNW
q5XJZAqFQq1W09e1tbU2m+1DH8hcufzmm29oHVwvFIM+xuVy+Xy+VCqlFaZ4
KCqKbRlnCgAAAAAAAAAA8BMyMTExMDBgs9lUKlVERITTi3+enp70fTabHRUV
lZWV1dvba7fbJycnFz1ofX399evXJRKJSCQSCAQ8Hi8hIaGsrGwZ5/Xu3TuK
cGxsrLm5mZ6smuPx48dNTU3Dw8Pj4+PT09MLfKCjzY3FYrl3797Zs2cp8sDA
QF9fX9e128xVyfDw8HPnzul0utra2u+//350dBRXJQEAAAAAAAAA4BdoYGCg
tbW1trb2j3/8Y3BwsNP0GpNVO3bsWFFR0dKTaUxHb5FIxOfz6eFHjx598ODB
Ms5rdnaWIpyamrLZbM+fP9fpdBqNRqlUXr582XFJsrOzk+Y+Pj6+wAfSlIeG
hnp6ev7yl7/k5+fL5fKYmJjAwEDXtdtMLtff3z88PFwqlVIMRqNx6UldAAAA
AAAAAACAnyKbzVZbW6vVauPj43ft2uW67jgxMdFgMCx9ULPZrNFo6GkikcjP
z4+GEIvFFMPSnzxff39/S0tLdXV1QUFBenp6cnIyc0mys7NzeHj4Qx84ODho
tVpNJpNcLqf4P7R2+8SJEzk5OUsvewcAAAAAAAAAAPgpslqtBoNBqVTGxsby
+XynybRNmzb5+/uHhoZeuHChsrJy6YO2trY+evRILpcfOXJkx44dNER4ePjd
u3dXopB5ZGSkq6urpaWloqLi3r17ly9fzsjIyM/Pp1mbzeYffvhhZmZmdnb2
/fv3C3wgBeloc/Pw4UNakIMHD+7bt++LL75wnZlkbpnSMsbHx9OCl5SUWCyW
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
aH4C0EV18Co0vGbql5OSkgQCAY1O/9LX9B36Pv10RUefj1kftVqtUChkMhl9
bTKZVqJEmp5ptVrp4XK5XCQSfWjt9okTJ3Jycla0oB4AAAAAAAAAAGCJ2tra
SktLFQpFTEyMv7+/05TXpk2b6EehoaEXLlyorKxc0XiY+uXU1NTg4OB1q9La
24X+/v6Wlpbq6moKQKVSyWSy7Oxsg8HQ1NTU2dk5PDy8jGONjo462tw8fPiQ
lvrgwYP79u374osvXGcmmfurtEHx8fFKpbKkpIQWcHBwkB6It0oCAAAAAAAA
AMCa8vLly7y8vKSkpIiIiC+++MJpyuuzzz7bu3evRCK5fv16fX39isbD1C+r
VKqwsDAafefOnSdPntRoNFVVVR0dHSs6+nxjY2O9vb1Wq9VoNFIMMplMqVRq
tdqVuLE5NTU1Ojo6ODj46tWrp0+f5uTknDlz5ne/+x2Xy+VwOCwWy3Xttp+f
n0AgEIvFKSkpOp2OYqbwcFUSAAAAAAAAAADWFJPJ5OggIxQKuVyu05SXn5+f
SCRKTEzUaDRms3l1AmO6fvP5fAqPgjQYDFardXVGZ8zMzExPT09OTlosloKC
AplMdvXqVQomOzvbaDSuUIJ0ampqbGxscHBQp9NJpVJaAdoaNpvtunabyUzS
ZsnlctpZWi56yEpECAAAAAAAAAAAsDjV1dUXL14UiUQBAQHe3t5OM13+/v4x
MTEKhaK0tLStrW11AissLDx8+DCLxQoMDKTR5XL5o0ePWltbV2d0xuzs7Lt3
76anp5lLkpmZmbdv305PTy8uLm5sbOzv7x8ZGXn79u0yDkojTk5Ojo2N1dXV
ZWRkSKVSsVi8a9cuHx+fjRs3fvTRR063ycPDw8vLa+6KabXa2tpam802MDAw
MTGxjBECAAAAAAAAAAAsztOnT8+ePRsUFLRly5aNGzc6zXS55S2ODx8+PHr0
KIfDodGPHDmSkpKSn5/f1NS0OqMz3r9/Pzs7OzMz09vbS6MbjcaioqKMjIxL
ly5pNJry8vKWlhZak5GRkWUc1JEFnZqastlsdXV1tPIymUwikbjepvXr13t4
eHh6evr6+gYGBjoutarV6tra2tbW1oGBgWWMEAAAAAAAAAAAYHH0en1cXJzr
txQKhUKZTLbKJcBMYAKBIDo6epULxucbHR11vEyyvLz8zp07ycnJ6enpBQUF
1dXVLS0t/f39KzEoU7ttMBhoC8RicVBQkI+PzwJrt2njaN2Ye5IrESEAAAAA
AAAAAMBCMP1TcnNzf//733M4nA0bNnh5eTm9cRcWFpaenr7KTVLKysoSEhJ4
PN7evXsjIiIcr5E0mUyrM/p8k5OTdru9t7eXYigqKlIoFBkZGffu3dPpdHV1
dR0dHRMTE7SqMzMzyzgoU7ttsVhoILlcfvz48eDgYNcJZKZ2m1ZPJBLFx8df
v379yZMnjh2kpy1jhAAAAAAAAAAAAAsxOjra09NjtVpv3rwZHh7OYrG8vLw8
PDyc5rUiIyPv3r07ODhIvzU1NbU6ETK15Pv27Ttw4IBYLJbL5TU1Nasz+nyO
3CCtQFtbm9FozM3NpTXJzMxUqVSlpaUvX7602+3Lvj5M7TZtVnNzM02fhjt1
6pRQKOTxeBwOx3Xt9q9//eutW7fu2rXr6NGjV65cMRgMZrN5eTuDAwAAAAAA
AAAALMTg4KDVajWZTDKZTCgUuq78lUgkOp1ulSM0Go0pKSnCOei/9M1VDmO+
np4ei8ViMBi0Wq1SqaQFzM3Nra2t7e7uttvtK907ZiFd0edzb6dyAAAAAAAA
AACA7u7uhoYGvV5/5syZPXv2OM1ibdiwwdfXl8fjJSQklJWVrXKENTU1crlc
LBaHhoYKBAI+n5+YmGgwGFY5jPnsdnt7e/uLFy8eP36clZV16dIl+re0tHR1
3rFJQzx58kSpVJ4+fTo8PJx2h/aIdsp1QpLL5QqFwtjY2IsXLxYVFZnN5o6O
jqGhoRUNFQAAAAAAAAAAgNHe3l5RUaFWq48fPx4QEOA0i/Wb3/zG398/NDT0
woULVVVVqxwhcxVQJBIFBQVxudy4uDi9Xr/KYcw3Pj7+448/dnZ21tbWarVa
uVx+69ate/fuFRcXU8xv3rxZ0dGZq625ubnnzp2Ljo7+8ssvfX19XSck2Ww2
LSCfz4+KikpOTtZoNJWVlR0dHSsaKgAAAAAAAAAAAKO5uVmn08lksujoaB6P
5/panVu6yZjNZo1Gk5iYKBaL+Xy+uyrH55uZmZmenp6cnGxqaiouLr569Wpa
Wlp6evoqF0QvZAfn8/PzE4lEbm9ZDgAAAAAAAAAAvzSNjY1ZWVlSqfTAgQNb
tmxZg8krJuF25MiRgIAAFosVHR19//79qampd+/ezc7OrnI8DEejmenp6fb2
9mfPnmm12uzsbKVSeeXKlcLCQpPJ1NPTMzQ0NDk5uaJhdHV11dfX0xJduHDh
0KFDfD6fy+Wy2WzXCUlvb29aTNrWM2fO3L17l6Jta2vr6+tz+6oCAAAAAAAA
AMDPW11d3bVr11wX/PJ4PPqATCbT6XTNzc2rHKHVajUYDEql8tixY4GBgZ6e
nmKxOCcnZ2xsbHJy8t27d6scD+P9+/ezs7MzMzN9fX20LNXV1bQ+KpWKFioz
M7OsrMxisazCGxpHRka6uroogIcPH6ampi6wzc3HH3/s7e3t5+cXFhaWkJBA
y1taWvrq1Su3ryoAAAAAAAAAAPy8MT2seTweh8Nxmrxyb2tmm83meEljfHz8
rl27KB6RSKRWqwcHB8fGxqamplY5nvlGR0d7e3tpZcrLy+/cuZOcnKxQKHJz
c2m5LBZLT0/P6oTBZG5ps2jLXCckGUw9PsVMh2HtrCoAAAAAAAAAAPycOMqN
p6amSkpKpFKp6x7Ne/bsOXPmjF6vb2ho6O7uXuVQ5/cBDwkJSUtLs1qtvb29
o6OjqxzPfJOTk3a7nYIxmUxFRUUKheLWrVuZmZm5ubmVlZUU58TEBC31zMzM
iobR09NjNpsNBgMFcOLECaFQuGPHDm9vb09PTw8Pj/Xr1zvdXA6HQ7tPHz52
7FhqaqpOp6urq7PZbKjdBgAAAAAAAACAZfTu3bvJycmxsTGtViuRSDgczoYN
G371q185zVkFBwenpqZaLJbXr1+vdAHyfH19fa9evTIajefOndu7dy/FIxQK
ZTKZyWSyWq2Dg4OrHM98jsUcHR1ta2ujOHNzczMzM2/duqVQKB48eNDY2Gi3
2+mnK33tkHazp6eH1oRiyMnJmfvWTS8vLw8PD6ebSz+l3edyuXv27ImMjJRK
pRkZGXV1dajdBgAAAAAAAACAZTQ1NTU2NjY4OKhWq0UikeuqXveWSNO4VqvV
ZDLJZDKhUEjxCASCpKSkVS6IXggKhkKiwHJzcxUKRXJyclZWVnV1dXd3t91u
n5iYWJ0wmBWTy+W0d2w2m8VieXp6ut5l+hiXy+Xz+VKpVKfToXYbAAAAAAAA
AGDNmpiYGBgYsNlsXV1d3d3dPXPQf+mb9KP29va2trbm5mb6enBw0O31sCMj
I2/evKF4rly5sn//fqcZKk9PTxaLxWazDx069Kc//cldV+ZGR0cdF//S0tJC
QkIosF27dsXHx2u12traWlrPVY7HBbvdThv94sWLkpKSjIyMb7/9lv7V6/Wr
fJmTWbHCwsKvv/5aJBIFBQVxudwFXpUMDw8/d+6cTqd79uzZd999R2GvwvVO
AAAAAAAAAABYuIGBgdbW1tra2vr6+oaGBssc9F/6Jv2ooqKitLRUp9PR11ar
1e31sPProF1kqI4fP/7w4UN3JVFp3NHR0bmXOd3bZMeF8fHxH3/8sbOzs6am
Ji8v79KlSzdv3szJySkuLjaZTG/evFmdMJgVe/HiRWFhoVwup+USCASOwnwv
Ly/X+Wd/f//w8HCpVHr9+vWysjJa4Z6enrXwrk4AAAAAAAAAAHBg2kDrdDq9
Xm+Yg/5L36QfqdVqhUIhk8noa5PJ5PZ62Pmtq13U8CYmJtJc3BUqg6IVi8UU
GI/Hi46OpsWktW1ubnZ3XH8zMzMzPT09OTnZ1NRUXFx89erVtLS09PR0d+VO
mdptCuPgwYO0mxwOh8ViLbB225H1XTvv6gQAAAAAAAAA+GVi+lP39fW1tbWZ
TKaKioqHDx9qNJri4uKqqiqnNyRLS0vz8vKUSmVWVhZ9odPp6PurdmVuPoqc
QlIoFDExMf7+/k4TU97e3gEBASKR6OLFi9XV1e4KlUGLJpFI2Gw2RRUVFZWU
lEQr+fLlS3fH9TeOszE9Pd3e3v7s2TOtVpudnU2bfuXKlcLCQjoqPT09Q0ND
k5OTqxMPU7ut1+sd9yRDQ0N5PJ7rt0oyN2ODg4OPHz9Ov0jBv3jxArXbAAAA
AAAAAABuwfSnfvXqVWlpqVKpvH37dkZGhlqtpv82NjY6fYckff/p06darfbG
jRvnz5+XSqVZWVkvXrxw1yxevnyZl5eXlJQUERHxxRdfOE1Mbd68ef/+/XFx
cTS7hoYGd4XK0Ov1FMzcftC0hrSw7o7rb96/fz87OzszM9PX19fc3FxdXa3T
6VQqlUwmy8zMLCsrs1gsHR0dq9apnKndbmlpMRqNdPxox0Uikeurkkzt9uef
f/7b3/6WPv/1118XFhaidhsAAAAAAAAAwC2Y/tRGo1GhUMTGxiYmJspkMtdl
uUz/ZblcLpFI3F4HbTKZKGAKXigUcrlcp4mptVYZTctFi0ZLRzGLxWKmoNjd
cTkxOjra29tLh6G8vPzOnTvJycl0VHJzc93VGZw5tLSVUqmU1pA2nc1mu67d
ZjKTIpGIzi1qtwEAAAAAAAAA3KK7u7uhocHRRvn8+fNxcXEXLlzIysoyGAxm
s/l/yzUNDQ11dHRYLJabN28eOnSIy+VKJBK1Wu24dTY2NrbKs6iqqqKwQ0ND
/f39f/Ob3zjNRwUEBBw/fpyCrKioaG9vX+UI5/vzn/+ckpIiFAoPHDgQERER
HR197dq1uro6d8flxOTkpN1u7+3tNZlMRUVFCoXi1q1bmZmZubm5lZWVtOkT
ExNTU1MzMzOrEw9zrZeWi86tVCoVi8W7du3y8fHZuHHjRx995PQAeHh4eHl5
sViswMDAmJgYuVyel5dHJ8ddhxYAAAAAAAAA4JfJUez8hz/84cyZM6dPn3Y0
I37y5InrLM3k5OTQ0BB9ICsrKyoqis1mh4SEfPPNN67TmCunrKwsISGBx+P5
+vpu2LDBaT5qz549NEe9Xt/Q0NDd3b3KEc5XU1Mjl8vFYnFERER4ePjaebnl
fI4E4OjoaFtbm9FozM3NzczMvHXrlkKhePDgQWNjo91uX833MTIvPrXZbHV1
dTqdTiaTSSSSoKCgLVu2bNy40ekBWL9+vYeHh6enJx2SwMBAWnA6Mzdu3HDX
oQUAAAAAAAAA+GUyGo2Oe3qOquHExESNRmM2mxf460yraKaLsVv6LzMNYlw0
N6E5ymSytVOoy5SZR0dHi0QiCo82grbD3XG5wpTq5+bmKhSK5OTkrKys6urq
7u5uu90+MTGxyvEwtdsUEm0uHcWgoCAfH58F1m4LBIK4uDh3HVoAAAAAAAAA
gF8UR8212WzOyMg4duwYn8+PjIw8e/aso6L5+++/d/3rzBW13NzciIiIdevW
7dix48iRI3K5/NGjR62traszC6bLyd27dyl+Fovl5eXl4eHhtFA3PDz85s2b
a6eVSUNDAy1+XFwcRb5v3z4ej5eQkFBWVubuuFxhSvUpzszMTJlMRgdGr9e7
K83L1G5TSDqdjo7f8ePHg4ODXbe5YY7Etm3b9u/fHxsbS79YUlKC2m0AAAAA
AAAAgJXT0dFRWVmp0WjOnDkTFhbG5XKjoqKuXLlSU1PT2to6MDDg+teZRNDd
u3fDw8PXrVu3ffv2yMjIlJSU/Pz8pqam1ZnF6OhoT0+P1WpNT0+nWXh6enp4
eKxfv35u9snLy2vDhg0cDuf3v/99bm7u4ODgahYXu9DY2JiVlSWVSiMiIgIC
AijCo0ePPnjwwN1xucKU6ptMpsLCQjowKpWKVrW4uJi+8+bNm1WOh0mMU0jN
zc10eimeU6dOCYVCHo9HS+q6dvuTTz7ZvHkzn8+XSCRyuRy12wAAAAAAAAAA
K8dsNms0msTERLFYzOfz2Wz2wYMHc3JyBgcHx8bG/s98HVMqq1arRSLRunXr
/Pz86IsPrfheIgrAarWaTCaZTCYUCp1mn1gsFofD4XK5cXFxer1+dQJbCGYL
aN1o9ShU2gutVuvuuBaElt1gMCjnWCNVzwvptz6fe184AAAAAAAAAADwM8bc
KKuqqkpNTRWLxaGhoQKBgM/nJyQkPHr0aGxsbHJykj7j+jmjo6O9vb1WqzUt
LS0kJGTdunVffPFFREREUlJSXl7ey5cvV2c6XV1d9fX1Op3u9OnTu3fvdppr
2rhx45YtW4KCgs6ePfv06dPVCWwhWltbacHlcvmRI0d27NhBoYpEIrVavXbu
cLrw5s0bk8lUXFycm5urUqmuXLlSWFhI3+np6RkaGqIj5K7A6Ew+efJEqVTS
kQgPD3fd54jB5XKFQmFsbKxMJrt///7aedEoAAAAAAAAAMBPHVNq/ejRo4SE
BD6fLxAIQkNDxWJxampqVVXV1NQUfWZ2dtb1c+ZfTXRLyXZbW1tpaalCoYiJ
ifH393eaa/L29g4ICFiDPaxfv35NC67RaE6ePBkYGEihhoSEpKWlrZ23XLrA
HAC9Xq9Wq+kYZGZmlpWVWSyWjo6OoaEhtweWm5t77ty56OjoL7/80tfX13VC
ks1mc7lc+nOgP4TExESlUuloNO+uWQAAAAAAAAAA/GwwpdY5OTkHDx5ks9lM
EuaDSq2ZbstJSUkCgWDdunU8Hi86Olomk+l0uubm5hWdBWN+1bOLy29KpdJk
Mq1OYAsxfw3XWh9wFyYmJux2e3d3d3V1dVZWVnJyskKhyM3NpenQpNbCaxjp
ENJRpPWkY0mH03VCcu2fFgAAAAAAAACAn6iRkZE3b940NzenpaWJRCIWi7Vz
586YmJgP7Y49/3ZfQEDA8ePHHU2629vbV3ISf1NfX3/9+nWJRLJ3797PPvvM
aYrJLbXkCzEwMEALXlNTc/78+X379lGoNItz584ZjcZXr1719fW5O0BXHP3N
7XZ7Y2PjgwcPFArFrVu3MjMzc3NzKf62tjb66UJq/1cOU85/4cKFQ4cO8fl8
LpfLZrNdJyQ5HA6PxxMKhfHx8XSYTSYTzYX2YoE3hwEAAAAAAAAA4O/09fW9
evXKaDR+8803QqHQ09Nz9+7dp06d0mg0VVVVr1+/XuBz5r//cM+ePWfOnNHr
9Q0NDd3d3Ss6C0ZlZeWFCxdCQ0P9/f03bdrkNMVEP4qJiVEoFKWlpW1tbasT
2EIMDQ3RglssltTU1ODgYHet4eLMzMxMTU1NTExYrVbahdzc3MzMzFu3btE6
FxUVmUym3t5eu93uxpdJjoyMdHV1NTc3P3z4kFZ4gW1umBZIISEh8fHxSqWS
jg39ySzw3aoAAAAAAAAAAPB3bDZbbW2tVquNj4/ftWvXunXrBAJBUlLSh1ba
zq+Vdku5MYVNMbi+/EbTpMnSlGniNP3VCWwh5jcGWrOhusAUnufm5ioUiuTk
5Dt37pSXl9O8aHZr4U2YTEPw2NhYOiquE5IMpnabJmU0GhfYfR4AAAAAAAAA
AP7O/ORMcHBwamrqAnuRzG/SvXfv3u3bt3M4nKioqNu3b89tyEJPo2eazWaT
yVRTU2M0Gp8+fVpWVqbX6+vq6tra2hbdTpoJ4+HDh8ePH+dyuRQAi8Vymlla
s3XQk5OTdru9t7c3IyMjPDzc09MzMDDw2LFjtDu0Rz+VjiqOXabzQzubmZkp
k8lUKpVOp6uurm5ubqYFn5mZof16//69uyKkA0mHkJZUoVCcOHFCKBTu2LHD
29ubFtzDw2P9+vVOjw1Tu007QkedZkSH1mazoXYbAAAAAAAAAOCDzO/0ERYW
plKpenp6hoaG/s8C2/lNuv39/Xfs2EGPOnnyZFFR0dwcY0dHR2VlpUajUSqV
crk8JSXl7Nmz9FtxcXHXrl0rLS1ddDtpJow//elPhw4dYrPZLBbL09PTaWZp
//79V65coYm/efNmZGRkkQu3AhyzoOnn5uZGRUXRFAICAo4cObLKjYGWiKZA
J4f20WQyFRYW0lLTdmdnZ2u12mfPnrW3t09PT7s3g0fnhMKjw2Y0GnNycmh5
aZFpqWnBvby8PDw8nB4bpnZ7z549kZGRUqk0IyOjrq4OtdsAAAAAAAAAAB9k
fqm1WCzWarUL/PX5Tbq5XC6fzxcKhSkpKUaj0elYsbGxNAp9JigoiMfj0a/Q
76alpS26vpsJQ61W00Rc197SB+hja7nkVqfTSSSSRXc8XyOYy7fp6em0uVev
Xi0uLm5qapqcnJyenp6ZmXF3gP9DZ4CCpFMnl8vpVLjOYzOYQy6VSmmn1vJB
AgAAAAAAAABYg16+fJmXl5eUlBQREfHFF198aEKSaQx98eLFsLAwNpvt7+8f
Hh4ulUqzsrJevHjxP3MupNXW1up0OqVSefXqVfp8SkpKQkLC0aNHacTjx49/
/fXXaWlpi2s0M78dzHy/+tWvNmzYwOFwJBIJTXAtX2zT6/VxcXFcLnf37t20
L/R1RkZGQ0ODu+P6MG/evDGZTMXFxTk5OTdv3rx06RKdNDoqnZ2dP/744/j4
uLsD/H8v7XSczMLCQjp+IpEoKCiIln2BVyXpnJ87d46O9LNnz7777rtFv3AA
AAAAAAAAAOAXpampKT8/PyUlJTIycvv27R+akPz+++8rKirUavWpU6f27t3L
ZrPpX/qavkPfb29v/585r+xjPH36lH5qNBoLCwtv374tk8nOnDlz/PjxgwcP
Xrt2ra6u7kNn0d3d3dDQoNfr6Tl79uxxmkfasGGDr68vj8eTSqUlJSVr+dV/
TGueffv2hYeHSySS69ev19fXuzuuD8PcP6R9ycjI+Pbbb+lfWvkXL17QwbDb
7e4O8P9drB0dHaU4KSQ6inK5PDY2ViAQcDgcOi1eXl5OD5KnpyeLxZqbe6fd
KSsrW/QLBwAAAAAAAAAAflHmv0PygxKSTBU2/Rafz2ez2SKRSC6Xzy2+Zkp3
aaCampq53ZaZjswUAD2By+XGxcXp9foPncVC+iYzTUnm15KvNRQeBUmhhoaG
0nrSytCS0tK5O64PMzExYbfbu7u7q6urs7KykpOTFQpFbm7uhzZwXwVM7jQt
Le3gwYOumyLNr92mU0dnb5UbygMAAAAAAAAA/ER1dHRUVVVpNJqTJ0/u3Llz
3cKa2jBV2EVFRcnJySKRKCQkRCgUCgSChISEvLy8ubfFbDZbbW2tVqutqKj4
61//2tvba7fbHU9mOjKnpaWJxWIOh3P06NGHDx9+6Czmp1Xn8/X1/fLLL+kD
i7uEuZpqamrkcjktCC1saGjoTyKJOp/j/iHtdWNj44MHDxQKxa1btzIzM3Nz
c2kubW1t9NM1UjXP1G7r9XrHPUladjpIrt8qydRuBwcHHz9+nH6xsLDwxYsX
qN0GAAAAAAAAAHChr6/v1atXRqPx3Llze/fuXbduXXBwcGpqqsVi6ejoGBoa
cvpbTBX2xYsXo6Ki/Pz8BAKBWCyOi4u7ceNGVVXV3JwMcw2yoaHh9evXc9NQ
TEdmtVpNv85isQ4fPlxYWPihs5jfmme+LVu2HDhwwPFyy8bGxiWu24oymUyO
256O1j98Pp+mRgvo7rg+zMzMDB2AiYkJq9VaWVmZm5ubmZl569YthUJRVFRE
c5ybmnYvpna7paWF/ha0Wm1SUhKdJddXJZna7c8///y3v/0tff7rr7+m04va
bQAAAAAAAAAAF0ZHR3t7e61Wa1paWkhIyLp16wQCQVJSkuu62vkl0kzhKn2f
fjr3w0w9rIuCVq1WKxaL131gwTiDyeAJhUIul+s0fcTj8aKjo2UymU6na25u
/tAhVhOTX6WAaTsWXcm+RjAZ6dzcXIVCkZycfOfOnfLy8rnF+2sE066dDolU
KqVTTYvPZrNdlm7/LTM5/30FAAAAAAAAAADwdyYnJ+12e29vb35+/ldffcXn
88PDw+kLuVyu1Wpra2ttNltXV1d3d3dPT097e3tTU5PJZNLpdGlpaYmJicwt
vhMnTigUCoPBYDab/y6NydTDzr82xtxMu3//Pj1q0Zm3qqqqCxcuhIaG+vv7
/+Y3v3GaNdq5c+fJkyc1Gg19uKOjY6kLt5KYTkNHjhzZvXv3oivZ1wimML+s
rCwzM1Mmk6lUKjpC1dXVzc3NfX19MzMzs7Oz79+/d3ek//Pu3Tv6ixgbG6ur
q8vIyJBKpXS8d+3a5ePjs3Hjxo8++sjp0fLw8PDy8mKxWIGBgTExMfS3k5eX
R8fMcebpae6eFgAAAAAAAADAGuLIwIyOjj579uz69euxsbFHjx6NiYmRSCQp
KSkajaa2tra+vr6hocFisVRUVOTn5yuVSvrRiRMnxGIxfT4xMVEmk+Xk5BiN
RqcZGCbrOP/Fekyu8v79+/ScRb8ssaysLCEhgcfj+fr6btiwwWnWaO/evefO
naOHv3r1qq+vb6kLt5JaW1sfPXokl8tpIwIDAxddyb5GMIX5JpOJZnHlyhU6
QtnZ2Vqtlk5de3v79PT0Gul4TjFQJHRKbTZbXV2d48Wk9LcQFBS0ZcuWjRs3
Oj1a69ev9/Dw8PT0pONH+yUSieg03rhxw2l+HgAAAAAAAAAAHJgqbKZl9sGD
B1NSUrRarU6n0+v19FO1Wk3fmftuwyX2F2aquWkUmUzGPO1Dn0MRSiQS1y1I
QkJC0tLS1mCZ8HzzK+IXV8m+1jDzSk9Pp724evVqcXFxU1PT5OTk9PT0zMyM
uwP8G6Z2m2kBHxQU5OPjs8DabYFAEBcX5/QNBgAAAAAAAAAA4MD0qWGyjlKp
NCkpSSaTXb169fbt2xqNhv6lr+k79AH6UWJiIpNyYcqxXdyHnK+zs9PRgDs7
O5serlAoSktL29raFhjz/J44Xl5eHh4eTstp6QP0sbXTSMWFxbU+X/vevHlj
MpmKi4vv3bt369Yt5rUAdAx+/PHH8fFxdwf4N0zttsVi0el0FOrx48eDg4Nd
t7lhDtu2bdv2799Pf0T0iyUlJajdBgAAAAAAAACYb2xszFE9XVtbq9PplEql
TCZzvCUyISHhP//zP+Vy+Y0bNzIzMx13JktKSgwGA3M3kkk/unhj5HzNzc2O
qtjbt28XFhZ+aD0183JCii0kJMTT09PDw2P9+vVzc0ReXl4bNmzgcDgSieT+
/ftze3yvWV1dXfX19bQyp0+f3r1797qFtT5f+5gLsaWlpVlZWZcuXaJ/Hz9+
/OLFi/b2drvd7u4A/4ap3aZjTKe0pqZGpVKdOnVKKBTyeDw6Tq5rtz/55JPN
mzfz+Xw6dXQ4UbsNAAAAAAAAAOACkzVSq9VSqVQoFDLvilQoFDqdznWB9kJ6
ajOY7tj0ZKPRSJ8fGxv7P+9VMpj2zUlJSQKBwGmOiMVicTicn1aj6vnzWkjr
87VvYmLCbrd3d3fX1tbm5ubKZDLafa1W+5OY10I6uc/novs8AAAAAAAAAMAv
HFNqbbFYSkpKlErl2bNnDx8+LBAIwsPDjx49mpiYePXq1fz8/JqampaWlt7e
XvoVphfJxMTEwMCAzWajH5lMJtd3HZnbmPSxnJwcmUxGj21sbKTvf9D1xY6O
jsrKyrt37/77v/+7o7R5vk8//XTbtm00i+Tk5IqKiuVarhXF3PxMTU0NDg6m
Wezevfv06dM6na6+vr6rq8vdAS6S44zZ7faXL1+WlpaqVKrMzEzavtzcXDoJ
bW1ta/n+Kh3XJ0+ezH3JKpfLZbPZrhOS9BmhUBgbG0uH/P79+4t+2yoAAAAA
AAAAwM8PU2pdUlIil8tjY2MjIyP/9V//NSgoKCwsLCYmJjEx8b/+67/y8vKM
RqPFYuns7JybPxwYGGhtba2traWfGgwGvV7f0NDQ3d3tdCzmfZU0lk6nc3Rb
7ujomJvhXIiWlpaHDx+mpqYePnz4H//xH51mhHx9fb/88svo6Ohr167V1dUt
23qtJObdmCqVihafZrFz586TJ09qNJqqqipaKHcHuEgzMzO0xRMTEzQFRw/r
e/fuZWRkKBSKoqIik8m0lt/wyVz9vX//vqMB00KuSrLZbPoMn88Xi8WOd64+
efIEVyUBAAAAAAAAAP5nTr6Fae7MCA0NlUgkiYmJcrlco9HMfXUkU2Fts9kc
7WkY9F/6ptOxmG7LjnLdRV8ba2xszM7O/o//+I+wsLAtW7Y4zQj5+fmJRCIK
niI3m81LXabVResjFot/fpW//f39LS0t1dXVBQUF6enpycnJd+7cKS8v/4n2
QF8I5qrk4vrIAwAAAAAAAAD8bDCV2t9//73JZDIYDBkZGcnJyRKJJCoqKjw8
PDQ0NCIi4tChQ7GxsadOnTpz5sw333yTmpp6/fp1tVqt1WpLSkoctyId1x1L
S0srKipqa2tbW1sHBgbmjsWUdTc2Nj59+nRuNpLpgOPobrzA0t3nz5+npaX9
/ve//5d/+Zd/+Id/cJoI2rJlS1hYWEJCQmZm5n//939/6CVM9yosLDx8+DCL
xQoMDIyJiZHL5Y8ePaKFdXdcSzUyMtLV1dXS0lJeXq7RaC5dukSnrqioiA5S
U1NTb2/vzMwM7dH79+/dHakTzP1e2g76M+Hz+Zs3b/7kk0+c9lRicDgcHo8n
FArj4+PpD4eOfVtbW19f30/rQAIAAAAAAAAALB1Tqe3IRmq12qysrBs3bsjl
8uTk5FOnTkkkkkOHDkVFRYnF4vDw8LCwsJCQkH/7t3+jL0QiEf1UKpWmpKQo
FAqNRqPX6589e/bXv/7VZrMNDAxMTEzMHYsp666qqqqoqHBkI7///vu5Tbon
JyftdvsCS3crKyu//fZbiuef/umfNm3a5DQR9Pnnn1O0NBGVSlVXV/ehr6l0
r4cPHx49epTD4ezevfvIkSO0zvn5+U1NTe6Oa6nevn07MjLS39/f2NhYXFyc
np5++/btzMxMOkJGo5FO4/T09JpN0zFvQGVebrB///5t27axWCwvLy8PDw+n
55BprkTHNT4+XqlUlpaWvnr16qd1IAEAAAAAAAAAlo6p1HZkI5VKpUaj0el0
9F/6Qi6XJyYmxsbGisVioVDINPJgsVienp5z732dOHFCoVC4bpfMlHXr9Xqj
0ei0Unt0dLS3t3eBpbs0HIXnur3I5s2b9+/fHxcXd+PGjaqqqg9t5O1etFAU
Oc1OIBBER0f/RAvPXejo6KCTkJ2dTQfv6tWrMpmsoKCAjtDk5OT09PTMzIy7
A3SFqd2mPaINmvt3sZDa7cV1lgcAAAAAAAAA+KljbkhaLJba2lqDwVBVVVVf
X0//pS8ePXqk0WiUSqVcLk9JSUlMTIyLi5NIJIcPH3bcmTx69GhCQgL9KCMj
o7S0lH6ro6NjaGho7hDMjbLy8nL6WFJSkkwmS0tLm1vxzTCZTC0tLZ2dnQMD
A+Pj405jZsq6i4qKjh07xuVyORwOi8Vymv/x8/P73e9+d/r06WvXrjk6pzQ3
N9tstv7+/pGRkbdv367KMi8Sk3EVCoW02j+/NxDSwaAzwyTD6WAwlyR7e3vp
5Lg7QFeY2u0bN27QX4FIJAoMDPT19V1g7TYd3dTUVJ1OV1dXRwcStdsAAAAA
AAAA8AvBvEOyp6fHZrNZrdaOjo6uri767+vXr1tbW81ms8lkqqmpYdpn63S6
wsLC/Px8rVb74MGDsrIy+lFDQ0NbWxv91tDQ0N+VWs/P2xw8eDA2NlYqlSYm
JiYlJaXModFoaCynz2EwZd1ZWVlRUVGub6Zt27ZNLBYnJydfvnxZpVJRzBTw
8+fPW1paaJojIyOrssyLRAtLayIUCkNDQ2ndaCJyuZzWx91xLZvh4eHOzs6m
piY6HtnZ2TKZjPaIDlh1dTVtUH9/v7sDdIXJtFdVVeXl5dHWxMTEBAYGLrB2
e8+ePZGRkfRXkJGR8ZN7mQAAAAAAAAAAwFrGVLZKpdKQkBAul8vj8YKCgoTO
/OEPfygpKXFdx8qUdaelpdEDXVfI0ljR0dGyOX5CKa+amhq5XC4Wi0UiUWho
KK1PSkqK0Wh0d1zLhraYNpq222QyabVa2h2FQuG4OuuiS/taw7z3gDaLdmqB
tdv0Mfpb4PP59HdBBxK12wAAAAAAAAAAy4W5IZmVlXXhwoW4uLiEhISzZ8+m
OJOXl9fQ0OD6tpijOU5NTc358+f37dvnNNvz0Ucfbdy40cfH58CBA0lJSQUF
Bffu3VOr1UqlMjMzk76m75SXlzc2NnZ0dPzwww92u31iYmJqampNvbewvr7+
+vXrEokkPDycZsrn8xMTE2kl3R3XsnFU39N2Nzc3l5WVqeZ4/PhxU1PT8PDw
+Pj49PS0uyN1hXnvQWFh4ddffy0SiX77299+/vnnrjOTzFVJ+jwdUa1WazQa
W1pa5vZ4AgAAAAAAAACARWAqWxsbGysrK/V6fVlZ2dOnT43OvHz5sru72/X7
9Lq6uurr63U63enTp3fv3u0027Nx48YtW7YEBQXFxcWp1WqLxfLs2bPS0lKt
Vnv37t2MjIz09HSNRlNcXEyDUmDt7e12u32tJYIaGhooVJpCREQEzZTL5dLX
tIDujmvZ0BbTRtOa22y258+f05463ll6+fJlxyVJ128TXSOY9x68ePGisLBQ
LpcfP348ODjY9dtNPT096UdsNpvH44WGhsbGxtIv0ubSXwr9vfyfHZ0AAAAA
AAAAAGDVMDXgsbGxfD7fabbHx8cnKChILBZfunTJaDROTk52dna+ePGCfjE3
N1ehUCQnJ9OP0tPTs7Ozy8rK6Efd3d2Oe5Lunt/fmM1mjUaTmJhIE6GZstls
iUSi0+ncHdfy6+/vb2lpqa6uLigooE2h3WEuSdLGDQ8PuzvABWFqt5nD6aL/
+/yrkgcPHkxLS3PafR4AAAAAAAAAANyoqakpPz8/JSUlMjJy+/btTpM8XC5X
KBTGxsbeuHHj+fPn09PTP/74Y3t7u8ViMRqNRUVFd/5/GRkZjk43paWl1dXV
jY2NjvtpLlrqrKbm5madTieTyY4cORIQEMBisaKjo+/fv//z68g8MjLS1dXV
0tJSXl6u0WguXbp0+/ZtmqnBYDCbzT/88MPMzAzN9/379+6O1BWmdrusrOz6
9etSqTQ8PNzf39917baXl9eGDRs4HI5AIHDckywsLHzx4gVqtwEAAAAAAAAA
1gimkHn//v2bN292muTZunWrSCRKTEy8e/eu2WyemZkZHx+32+09PT1tbW0m
k6m8vPzBgwcajebGjRu3bt26c+dOVlYWfaeystJisXR0dAwNDbl7on+7C3rs
2LHAwEBPT0+xWJyTk/Pz68j89u3bkZGR/v7+xsbG4uLi9PR0x6ZkZ2dXVFTQ
OkxPT6/9HCxTu/3dd989e/ZMp9OdO3cuPDzcde22h4eHl5cX/ZQ+FhQUROf2
66+/LiwsRO02AAAAAAAAAMAawfSeDgoK8vHxcZrkYZpr63S65ubmub/ONOmu
rq7WarVXr169dOnSt99+m5ycrFAocnNzDQaDxWLp6elx1wQZNputtraWgoyP
j9+1axfNSyQSqdXqn3FH5o6ODqPRmJ2drVQqaWtoBwsKCmg7Jicnp6en11TL
IReY7uF0/KRS6QJrt5m3StIu0wlH7TYAAAAAAAAAwBpRUVGRnJwsEAi2bdv2
6aefOs3t7Ny58+TJkxqNpqqqqqOjY+6vT05O2u323t7e5ubmZ8+eFRcX5+Xl
ZWRkKBSKW7duZWZm5ubmlpWVOdJBb968GRwcdFcD7u7u7oaGBr1ef+bMmT17
9tC8QkJC0tLSKDCK/2d5d66np8disRgMBq1Wq1QqZTIZbaLRaHRMeWxszN0B
LgjTPbyuro6OllQqjYyMpB1c4FXJgICAI0eO0NxzcnIcc6dl+anMHQAAAAAA
AADg56e0tPSrr77aunWrt7f3xx9/7DS3s3fv3nPnzhmNxlevXvX19c39dUey
aHR0lL7f3t7e1NRUU1NTUlKSm5ubmZl569YthUJBXxQWFhoMBkda0l0NuClC
ip9mQXOhGdG8hEKhTCb7Gd+dGx4e7uzspE2hxc/OzqbJqlQqnU5XXV3d0tLS
39/v7gAXZG738Lq6Ooo/NTX12LFjtH08Ho/D4Tg9tOvXr/fw8PD09KSDvWPH
DvrwiRMn6DQ6XqS5Fq7sAgAAAAAAAAD8Mul0OolE4rpRyEJuEs7MzExPTztt
wC2Tya5cuaJUKouLi00mk7sacDNdmykeoVBI8xIIBElJSWunqHzZMcXONGut
VksTpx1Rq9X0dW1trc1mc3eAH4aZjtFopInExsbSPnK5XNe12ww+n0+/QueQ
dpxOgrtnAwAAAAAAAADwyzIxMTEwMGCz2VQqVUREBIvF8vLy8vDwmJvAYd7C
FxUVlZWV1dvba7fb/7d+2Y5rbE4bcNMQSqUyPT09JydHr9e7qwE307U5LS0t
JCSEJhgYGMiUor9+/Xp1wlhNTLFzc3NzWVmZao7Hjx83NTUNDw+Pj4/Trrk7
0gVhpvPq1avS0lI6VPHx8bSVrmu3GUyz+NTU1IcPH9KadHV1jYyMuHtaAAAA
AAAAAAC/CAMDA62trbW1tX/84x+Dg4M9PT09PDzWr18/N4HDYrE4HA6Xyz12
7FhRUdHo6KiLbtTv37+fnZ112oBbp9NlZ2enpaXdvHkzIyPDXQ24ma7NarVa
JBLRBHfs2HHkyBG5XP7o0SNajdUJYzXNLXZ+/vw5bYRGo1EqlZcvX3Zckuzs
7KSTQFvm7kgXhJlOX1+f43TRVsbHx7uu3Waw2Ww6zHw+/9ChQxcuXKDVqK+v
7+rqcve0AAAAAAAAAAB+Eea3nHaRwElMTDQYDB86xJptwE3BiMVimqCfn59I
JKLZaTQas9m8ymGspv7+/paWFtqIgoKC9PR02gLmkmRnZ+fw8LC7A1wkk8mk
VCo/tHbbRdd4AAAAAAAAAABYIVar1WAwOJI5fD7fad5m06ZN/v7+oaGhFy5c
qKys/NAhFtKA+/Hjx/X19d99953NZuvv73d9CXO5PHjw4OjRoxwOJyAgICIi
QiqVZmVlNTY2ruig7jUyMtLV1dXS0lJRUXHv3r3Lly/TRuTn5zs6vPzwww8z
MzOzs7Pv3793d6Qfho7xkydP6BgnJiaKxWI6yVwul81mu05I+vr6fvnll9HR
0efOnaND+DPuagQAAAAAAAAAsHY0NzfrdDqZTBYdHc3j8ZzmbT777LO9e/dK
JJLr16/X19d/6BALacB9584drVZL36ytrW1paXH9msrlUlZWlpCQQLPet29f
ZGRkXFxcRkZGQ0PDig7qXm/fvh0ZGenv7zebzbTaKpWKVp52ITs7u6Kiwmq1
Tk9P037Nzs66O9IPwzQqun//Ph3mBV6V3LBhg6+vLx2A8PDw06dPK5XKJ0+e
oM0NAAAAAAAAAMCKMpvNGo0mMTFRJBL5+fk5zdssV0Wziwbc33777aVLl65e
varVaqurq1038l4uRqMxJSVFKBTS7KKjox2dl00m04oOukYwpfpqtZq2QCaT
FRQUWCwW2h3aI9opdwe4SAu58Tsf0+bml3MAAAAAAAAAAADcpa6u7tq1a9HR
0V9++aWvr6/TdM1y9XyZ34C7srLywYMHWVlZGRkZN2/eTEtLy87O1ul05eXl
JpOpra2tp6fHbrePj4+vRClxdXX1xYsXRSJReHh4RESEWCymOdbU1CzjEGsW
8zJJWm2VSiWTyTQajdFodKSCx8bG3B3gItGBMZvNBoOBtlIikfD5/M2bN3/y
ySdOuzUxOBwOj8cTCoWnTp2i1aAz0NzcTI+ampr6Kd4XBQAAAAAAAABYyyoq
KpKTkwUCwbZt2z799FOn6ZrAwMCTJ09qNJqqqqrXr18veqz5DbitVmtjY2N1
dbVer8/JyUlPT1cqlY464qKiIqPRaLFY2tvbf/zxx5UoJWaSsREREQcOHBAK
hSkpKX/+85+XcYg1a2xszNFpiBaZdlYmk9Gy63Q62ouWlpb+/n53B7hINC/H
uSopKZHL5bGxsfv376ezzWKxvLy8PDw8nJ5wpo98cHDw8ePH6RdpKejs0dNW
4V2mAAAAAAAAAAC/KHq9Pi4ujsvlcjgcFovlNF0jEAiSkpJWohf2xMSE3W7v
7u42mUzFxcVKpfLKlSsymWxuA+4XL150dnauRCkx05pZLBYLhcJFtxH/KWLK
52lPCwoKaM1pwdVqtVarra2ttdls7g5wqZjabTredIDZbDYdb09PT9e12z4+
PkFBQXQeaEHo1wcHB8fGxqamptw9GwAAAAAAAACAnzym0cz9+/clEgmHw9mw
YYOXl9fc5Mz69es9PDw8PT1DQkLkcrnFYuno6BgaGlrGMKampigGu93u6Ehi
MBgKCwszMzPnNuAuKSmpqalpampqb2/v6+tbxgbcDQ0NGRkZcXFxERERu3fv
5nK59LVer1/6k9c+pnyeVr6ioiI7O5tW+86dOyqVihbcbDb39/ePjIy8ffvW
3ZEuElO7fePGjYSEBJFIFBgY6Ovr67p2e+PGjVu2bAkKCqI/CplMptPp6urq
bP8fe/cf01Se74//xhDGCTGEmNm6xJBJ76zouI0hHQdwtWFJY4SV6eWaXhaZ
GQkxXNchzgLXcLnIsqKyjWgDgmilUMDyYys/qsgvu8IWkCLTUcDBwrAMWAT5
ZfkNwrje7yu3+Z5LLt1+cAROgefjDwPlQF/v13mfk/Tt+3VeRiNqtwEAAAAA
AAAA3tHs7Ozo6Ojg4KBCoRCLxRYLWulbepF+RAfQYQMDA2NjY8vb+fr169dz
c3MzMzMmk6mvr8+8LFlVVbWwAXdGRkZBQUFpaemDBw8MBsMyNuBubm7Ozs4O
Dw/39/d3c3NzcnIKDg5Wq9Xv/pdtH1M+/+LFC/PCXWFhIaX68uXLeXl5NTU1
7e3tz58/n5iYYDvSn4ip3a6rq6P5I5VKQ0JC3N3drdduv//++1u3bt2+fbuH
hwdNe5oblJPGxkbUbgMAAAAAAAAAvKPJyUnzIwRTU1N9fHwsLs7Y29s7ODis
8jLdwMBAa2vr6jTgXtxhXCwW07u8+19eQ8bHx3t7e9va2iorK+VyOSU8LS2t
qKhorT9MkmEymcwL3VKplE70Emu36TAul8vn88PDw2nyo3YbAAAAAAAAAOAd
DQ0NPX36VKvVnj171svLy+KazJYtW5ydnXfu3Pn1119XVFSsTmBjY2M9PT2r
04C7o6Pj7t27Uqn02LFje/bsoSGLRCKFQmEymSYnJzfI6hMlcGRkpLe3V6fT
qVSqy5cvy2QypVJJqX748OE6qFamU2neKllcXPyHP/yBTvGvfvWrX/ziF9ZX
Jpk2N3R8bGwsZYYulvb29g01NwAAAAAAAAAAllFPT09dXZ1SqTx16tSnn35q
cU3mgw8++PjjjwUCQVxcXE1NzeoENjs7OzY2tjoNuJ89e8Ykwd3dnYbs4+OT
mppKb00BLMsmTNtH2Zuenh4fH2c2STKqqqoMBsNar1Y2P6fUZDI9fvy4uLhY
KpWePHny4MGD1hs5MduDeTyer69vaGgo/SJNxQ01NwAAAAAAAAAAlpHBYFCr
1RKJJCgoiMfjWVyTYToOS6XShoaGVY5wFRpwM+XhsbGxAoGAhiwUCukt6B27
urpMJtNKjMtmGY1G8yZJhUJBGaY80NeUinVTrczUbptbq/P5fC6X6+TkZL12
m9kqefTo0dTU1I05NwAAAAAAAAAA3l1rayvz+MSdO3daXIr56KOPDh06FBYW
lpGR8ejRo1WO0EoD7vT09JycHJVKVVlZqdPpzA24BwYGxsfHp6en5+fnl/gW
zAqVRCIRCoU0ZC8vr7Nnz2q12qdPnw4NDa3oAG3N8PBwe3t7fX29Wq2Wy+WU
E0oypZ3S29vbS7llO8B3xdRuV1VVXb16dWEzIyu125s3b3Z0dORwOAKBwLxP
kubh48ePUbsNAAAAAAAAAPBWmH1iQqGQy+VaXIrZvXt3QEBAfHx8YWFhW1vb
KkdopQF3Tk5OZmYmxZ+dna1SqUpLS+vq6p48edLb2zsyMjI9Pb3Et1jc2Wf/
/v3R0dFlZWWPHj3q7+9f0QHamqmpKXM2tFqtUqmUSCSUYUqvRqNpbW0dGBhg
O8B3xdRuf//99w8ePFCr1WfPnvX397deu830mqfDPD09RSLRH/7wh+LiYtRu
AwAAAAAAAAC8lYaGBqlUKhaLPT09t2/fbnEphs/nh4aGymQyjUbT1dXFdsj/
W2GtUqkoKolEkpiYSKNITk4uKCiorq5+2718c3NzU1NTJpNJoVCIRCIasoeH
R0REBP19nU5nNBpXdDi25vXr1/Pz87Ozs5TkoqIiSi8llvKck5Oj1Wp7enrY
DnDZMOddrVaHh4cvsXabeaokTRWadajdBgAAAAAAAAB4K/fv34+JifH09Nyx
Y8fWrVstrsDs27fv9OnTarW6qanp+fPnbIf8vw24Hzx4UFFRoVKplEplRkbG
tWvXcnJyioqKmApuo9E4PDw8NTVlvQH3jz/+ODs7S4fl5uaKxWJ7e3t3d/cT
J07YzhrsaqJEUULm5+dp4DU1NeZtqDdu3EhLSystLW1ubqaUTkxMvHr1iu1I
3xVz3hsbG2n+hIeHBwQE7N+/f4lbJffu3Xvs2DGJRELTRqvVmrdK0l9je1gA
AAAAAAAAADattLT0xIkT27dv37p16/vvv29xBcbb2/v8+fMNDQ0dHR0jIyNs
h/y/Dbi7u7ufPn2q1+v/8pe/FBYWLmwMzTxYsr29fXBw0HoDbvMS3Nzc3K1b
t4KCghauNanVaoPBsMoDZNebN28oIa9fv37x4kVLS4tGo6G0pKenJyYmKpXK
6upqSunz588nJibYjvRdMefdaDQ2NjbSub506RJdDkKhkMfjcTgci5fDpk2b
7Ozs7O3tnZ2d9+zZQwd/9dVXKSkplChK1zooaQcAAAAAAAAAWFEqlUosFluv
UfXx8UlNTe3q6hocHLSpZ+UxJbdtbW0ajSYnJyctLS0xMTEuLu7y5cvmZcn6
+nqKfIkNuNVqdXBwsJOTE5/Pp7RERUUplcqWlpbVGY6tGR8f7+3tpdxWVlZS
MimrlN6ioiJKaXt7+/DwMNsBLhtmImm12pSUFOuPVF3M1p5pAAAAAAAAAABg
g2ZmZkZGRoxG4/Xr1w8fPmxxmYV5Vl5gYGB2dvbg4ODo6Ojs7Czbsf8vpuS2
t7e3tbVVq9WWlpYqlcq0tDSZTCaXyxUKhVqtptfpp11dXS9evLDegLusrCws
LIzpWmJeZdLr9as7LFtBiaJJQrnV6XQqlery5cuUDUovpfThw4c0eebm5qzs
O11DmIn09OnTiooKGmZERISPj4/12m0GHSYUCmm2XLp06c6dOwaDYX3sIAUA
AAAAAAAAWEYjIyMdHR06ne7ChQve3t4Wl1kcHBw4HA6Xyz1x4kRJScnk5OTs
7OyPP/7Iduz/iym5HR8fHxgY6OnpaW5urq6uLioqUiqVcrk8JSWF/qWv6ZWa
mpqWlhbrDbg1Gk1UVBSfzxcIBL6+vmKxWCqVNjQ0rPK4bMT8/DwlinLLbJJk
VFVVGQyGqakpW5sSPw0zkYaGhjo7O/V6vUKhiIiIsF67zXBycqLLhKbN559/
npCQYDtPWwUAAAAAAAAAsB1Go9G87S0iIsLDw8P6MktUVJRGo2E75CUZHh5u
b2+vr69Xq9VyuVyyQE5ODo3CegNurVYbHx8vXIC+pRdXeRS2hpktCoUiJSWF
kklf6/V6k8k0NTU1NzfHdoDLj0Ynk8netnabx+MFBQVtzEePAgAAAAAAAABY
19nZWVFRkZKSEhIS4ubmZnF1Zdu2bfQjX1/fhISE2tpatkNekomJiefPn7e3
tz98+LCqqkqlUuXk5MhksuTk5MzMzFu3bllvwN3Q0CCVSsVi8eHDh729vT09
PWNiYu7fv8/2sFi2eJl3Kau7a1pXV9e9e/do5kRFRdF84PP5XC7XycnJ+oKk
i4vLgQMHgoKCzp49m5+fr9fr6e+YTCa2RwMAAAAAAAAAwL4nT54UFBTExsYe
OXJk165dFldXPvzwQy8vr+Dg4KtXrzY1NbEd8pK8evVqYmJieHjYaDQaDAa9
Xq/RaFQqlUwmu3HjRnp6uvUG3My+OEoLjZ3H40VGRlZVVbE9LJZNTU1Rorq6
urRarVKplEgklCVKI+W2tbV1XfaVNplMNF6aD7du3aLxLnGrpKOjo4uLC00b
f3//06dPU5bu3buHNjcAAAAAAAAAAP+9tIpUV1dXkUi0RjtN/7QG3DRMGiwN
OSgoSCAQUGbCwsLKysrYHg3LKDmUIkpUa2trUVGRRCJJTk6m+UNZ1Wq1PT09
bAe4gmiG0PwxXyx8Pt/6giSDaXOzkZsiAQAAAAAAAAAsVF9ff/HiRZFItHfv
XmdnZ4uLKm5ubiEhISkpKRUVFZ2dnWyH/HYWN+C+e/duXl6eTCZLT0/PyMhY
2ID7b3/7W19fn8lk+uabb+iY+Pj4Y8eO7du3j8PhHD9+/M6dO2yPhmXmni/z
8/PMJsmsrCxKY1paWmlpaXNz8/Dw8MTExKtXr9iOdPkNDAy0tLRoNJqkpCSa
DB4eHjt37vzZz35mb29vZ2e3adMmi9cOzRwejycUCn//+9/L5fKGhgaDwUB/
at30JQcAAAAAAAAAeFv379+PiYnx9PTcsWPH1q1bLS6q7Nu37/Tp02u0ZfDi
BtwtLS21tbV37twpKCjIzMxc2ICbsvHtt992dXXV1dXRT6VSaUhIiLu7u4OD
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
t5mnSvr4+Jw7d24dZ4zJDw2wrKyM7i1KpZJypVmAvqUX6UcKhYK+UKlUOp3O
aDSyHTsAAAAAAAAA/ERMyWR5eXl4eDiPx3NxcXF0dLS4TrJ///7o6OiysrJH
jx719/ezHfuqYiqRKysrT58+zefzP/30Uw8Pj1/96ldBQUFnzpyRy+WFhYV/
+ctf9Hr906dPu7u713Gl7VIwZcuUkJKSkpSUlBs3bmRlZeXn59fW1nZ1dc3M
zNDEe/36NduRriBmB2BTU1N2dnZUVBTNFoFAsMStkm5ubgEBAbGxsRkZGdXV
1eY2N/TX2B7Wu6Kc0KVBYzH3sqebD91VzP/W1NQ0NjZa3CGpUqlkMplEIsnL
y3vw4AFqtwEAAAAAAADWKGbBhD7sBwcHczgcR0fH9957z+I6ycGDBy9dutTa
2vrs2bN1WUBqBVOJ/Ne//vXs2bNCofDXv/71gQMH9u3bFxgY+J//+Z/Xrl3L
yMgw7+CqqKh48ODBOq60XQqmbLmzs1Or1ebn52dlZd24cSMlJeX27dvNzc2j
o6P00/W9lZRZ8O/r63v8+LFGo0lNTQ0LC7O+FXnTpk12dnb29vbbtm3bvXu3
QCA4ceLElStX6NdbWlrWwVZJuijo0mB2RZ45c4b+pa/plY6ODrq9WHyGZHl5
uVQqDQ0NTUhIyMvLQ+02AAAAAAAAwBrFlEwqFAqRSGS9kpQOoMM2eElyQ0OD
VCoVi8WHDx/29vb29PT8t3/7t//4j/9ITk6m1xMTEyUSiUwmU6lU67jS9q1Q
BigPlI38/PyUlJS4uLjs7Oz6+vr+/v7R0dGNtsNNr9fT9AgNDRUKhVwu1/oV
x1hnT0tgpgTNh6+++opScebMmfLycuv3FuaxEpQKuspQuw0AAAAAAACwRk1M
TPT19RkMhqSkpEOHDllcDGGeaPf555//+c9/3uBNW5qamq5evRocHCwSiQ4c
OPDLX/7yt7/9bUJCQmlpqUqlys7OlslkmZmZOTk5+fn5VVVVer2+q6uLkmwy
mTZCkfJio6Oj3d3djx8/Li8vz8jIuHDhAv1bVlZmzgylhe0AVxUN+d69ezRJ
IiMj/fz8XF1dnZ2dt2zZYn1BksvlmhfiLl68WFJS0tLSshY33zKV2jqdTqlU
njt37o9//GNcXNyZM2foW5oP1u8tzP8FhISEfP3117GxsQUFBd99990qjwIA
AAAAAAAA3tHQ0NDTp0+1Wu3Zs2e9vLwsLoY4ODhwOBwul3vy5Mk7d+7Mzc39
+OOPf//739mOnR2PHj3KyMgICwv713/9Vw8PDxcXl6CgoOvXr7e1tel0usrK
SpVKlZOTk56enpKSkpWVVVxcrNFozItvG6FIebHp6emXL1/29vY2NDQUFBQk
JiZSunJzc0tLSyktfX19bAe4qkwmE80EGvjNmzejo6NFItHevXudnZ2tL0g6
OTnRBcjn8wMDA+Pi4pRKZW1tbU9PD9ujeTtMpTbFHxUV5ePjc+rUqeTk5PLy
ckoIzRDr9xZmc+mXX34ZEBBAqbt48WJ9ff0qjwIAAAAAAAAA3pHRaNTpdCqV
KiIiwsPDw/piSFRUlEajYTtklrW0tJiXU8RiMeWEkvPFF1/cunVrdna2t7fX
/JxApjZZIpEkJSXJZDLz4tvGLFJmGpS3tbVRHpKTk1NTU9PS0tZNAfJPw0wk
kUjk6upqfUGSQUfS8fRb9Lv0F9gexNthKrXPnTvn4+ND187Ro0dzc3OX+BQI
JmNMY6CwsLCysrLVCR4AAAAAAAAAlktnZ2dFRUVKSkpISIibm5vFNRBnZ+e9
e/diP5KZwWBQq9USieTYsWOUFgcHh4CAgJs3b5pMpr6+Pspna2urVqstKSnJ
zMyUy+UymSwtLS03N7esrIyy19zcbO6VvHEacDMNyru7ux88eGDeQUppSUpK
Ki4u1uv1GyobjJ6entraWqVSGRcXFxgYyOfzuVyuk5OT9QVJ5mKMjo6mWbcm
yt6Zzj50adDZP3fu3IkTJz777DMacmRk5N27d5f4FAhmQZKuOHd3dw6Hc/z4
8Tt37qzOKAAAAAAAAABguTx58qSgoCA2NvbIkSO7du2yuAby0UcfHTp0KCws
LCMj49GjR2yHzLKuri6NRiOTyU6cOOHu7m5vb/8v//Iv6enp/f39L168MPcF
7uzs1Ov11dXVarU6JycnNTX1+vXrlL3s7Ozbt2/X1tZuqAbcTIPyoaEhg8FQ
X19PaZHL5RKJJCsrq6qqakNlg2GuX25paSkpKbl48eIS29xs2bLF2dnZ1dXV
z88vMjKS5uG9e/dsfJepud/61NQUXTjx8fE+Pj6fffaZv7+/WCy+dOlSXV3d
Ep8CwSxI0s1qz549Dg4OX3zxRXFx8eqMAgAAAAAAAACWy1J6/vJ4vKCgIIlE
olarDQYD2yGzbHGRu4+PT2pqaldX1+Dg4OTkJB1D/9LX9Ep9fT0dmZycnJiY
eOHChbi4uJSUlPz8/I3ZgJtJS3V1dWZm5gbPBoNZ4qbLkM/nW1+QZDBtbugX
6SpmexDWzM3NTU1NmUym3Nzco0ePOjk50TDFYvHbFp4vLnKnP0LX14oGDwAA
AAAAAADLrq6uLiEhwdfX183N7ec//7nFpY+9e/eePHlSoVDU1NR0d3ezHTLL
mOfgxcbGCgQCys/BgwcvXbpELz579sy8zW92dnZ0dHRwcNBgMDx48KC0tLSg
oCAjIyMlJeXGjRtZWVkbswE3kxYaeElJycJs1NbWUio2QhIWoxnV0tJCMyop
Ken48eMeHh47d+782c9+Zm9vb2dnt2nTJotXJYfD4fF4QqHw1KlT169f12q1
T5486e/vt8GeUyMjIx0dHQ0NDRKJhG41Dg4O+/fvp7DNt5QffvhhiX+H+d8T
uuJ27NhB+QkMDCwsLFzR4AEAAAAAAABg2VVVVUVGRvJ4PBcXF0dHR4tLH/v3
74+Oji4rK3v06FF/fz/bIbOM6ZIskUiEQiHlx9vb+/z58w0NDR0dHSMjI//9
/9eoTk5ODg0NdXd3t7W10U/Ly8vz8/OzsrJu3LixMRtwM2np7OzUarULs3H7
9u3m5uaNkITFpqamBgYGaA7cu3fv6tWrERERIpGILkkHB4fNmzfb2dlZvCrp
pxwOh8vl0vQLCQmJj48vKCigK3SJz2NcTT/88ENNTY1CoQgLC/Pw8LC3tz94
8GBCQsLCS2Yp6HipVCoWiw8cOPDRRx+hZBsAAAAAAABgjVKr1cHBwU5OTvTp
3t7e3uLSh1AolEgka6J9xipg6o5TU1N9fHwoPwKBIDY21mLdMdNgGg24F2J2
mTLZyM7Orq+v31BJWIx5GkBUVBRddNavysVbJc+cOVNeXr7EjtWraXGpNX2h
UCjeNlStVhsfH08jZRoA0b2L7mArGjwAAAAAAAAALJe5ubnJyUmTyXTz5s2A
gACLe7HoW3qRfuTv73/9+nVzb2jzMxI3MqbuOD093c/PjxLl7u5+6tQppVJZ
V1f37NmzhQczDaZfvnzZ3d29xAbc9Penp6dfv35Nv/7mzRu2RrpyzP1cKBtV
VVVZWVkSiUShUFASNviit7m0WafTUTbMy3c0tVxcXKzXbjs6OtIxPB4vMDDw
/PnzarW6sbHRaDTaTu12U1PT1atXg4ODDx06tGfPHg6HQ1+rVKolbuZkmnSX
l5eHh4fTSHfv3v3xxx/v3Lnz66+/rqioWJ1RAAAAAAAAAMA7mpycNFeJpqWl
+fn5WVzx2Lx5s6OjI4fD+fLLL/Pz800m0wYsp12MqTu+efOmv78/JWrPnj3H
jh2TSqV3797t6OhYeDDTYHp6enp0dHSJDbi7u7tfvnw5Pz9vIwtKy44SODY2
RtmgVBQXFyclJcnlcppj5s2ifX19bAfIjpmZmZGREWafJM2okJAQd3d367Xb
7733nvk6/eSTT44cORIeHk7TqbGx0XZqt2lWmx9U6+XlRcPh8XgUZHl5+RKX
TJkm3ZST4OBgGulHH33k5uYmEAji4uJqampWZRAAAAAAAAAA8K4WPwjRykPq
wsLCysrK2A7Z5qhUKrFYTIlydXUViURLbBm8lAbcjx8/7u3tnZ2dnZ+fX98d
XpgG0wz6ll5kOy6WMZenVCqlqbXE2m06jK5WPp8fHh6uVqttp3abzildHRSY
p6enQCCgG058fLxWq13irzNNuhUKBWWDRrp9+3b6U3T1UX4aGhpWNHgAAAAA
AAAAWC7Pnz9vampSq9WnT5/et2+fxfWNrVu37tixgz74x8TE3L9/n+2Qbc7t
27ePHz/O4XD4fL5IJAoLC8vIyHj06JH132Iqvtvb23U6XXl5uUqlyszMXNhy
ml5saGhoa2vr7u4eGhqanJy0ka1uy66vr0+v15eWltKo5XJ5UlJScXExvTIw
MDA2NkajZjtAdjAbmOkKjY+PF4vFAoHA1dXV+sok8z8In332WXR0dG5uLl22
T58+ZX1vc1lZGV0d5sVSoVD4tguJTJPu8+fPe3t7W/8vAGYDszmB9NOenh6a
SyswLAAAAAAAAAB4O52dnRUVFSkpKSEhIW5ubhbXN5ydnffu3Usf/C9evFhf
X892yDaHaVAuEAgoS8HBwVevXm1qarL+W8yCyfDwsNFo/P777+lXKisrF7ac
zsjIKCgoKC0tffDggcFgGBwcHB0dXZerc8xWwLKyMoVCIZFIKAmU2NbW1o28
jsQ84pXyUF5eLpPJIiIifH19uVwuh8NxcHCweMHa29vTj5ycnHbt2uXt7X30
6NGEhIQ7d+6w/vRXpnMWXSw0itDQUBoRnfQl/jrTpPvkyZOffPIJjZTP55v/
yOL9tMyCv7lrklKprK2tpbm0AsMCAAAAAAAAgLezuO/tYlwuVygUvu3qwcbB
9Pz19fWlNP7kAtLFLacvXLiQmJiYnJysUqnq6+u7uroGBwfXZTuhmZmZ0dHR
/v5+GmZ2dvbCuvXFLcs3IKbAPzc396uvvmK6S1uv3WZWJmla0pxkvVXQT3u4
AWPxzcpKX3smY+ZHAbztewEAAAAAAADAymH63np5eX344YcWlzV27dp15MgR
+uBfUFDw5MkTtkO2OfX19RcvXhSJRH5+fr/5zW98fX0TEhJqa2vf9u8wLafp
d2/fvp2dnZ2RkXH9+vXU1NScnBy1Wl1dXa3X6zs7O9dfA27zVkAaVHNzM419
Yd26VqulIa/jcvWlYPb7UTZkMll4eLi/v7+bm5v12m07O7vNmzfTAe7u7iEh
IVKptLCw8JtvvmGrEJ7ePTAwkKLdvXs3xb/ERUKmuXZdXd2lS5fEYrFQKDQv
yX7++efXrl1buI2W2XhsXo2kH9EUiomJwQZvAAAAAAAAANvB9L11c3Pbtm2b
xWUN+lFISEhKSkpFRUVnZyfbIducxsbGK1euBAUF+fv7Hzp06Cf3/GVaTnd1
dTU3N9fX15eVleXm5qalpclkMrlcnpmZWVJSotVq118D7tevX8/Nzc3MzNDY
aU4urFunIev1+nVcrr4UzDrbDz/8oNPp1Gr12bNnab5Zr93etGmTnZ2dvb29
i4uLu7u7SCSKiYnJy8tjqxC+uLj4iy++oGj37Nlz5MiRJS5IMs217969GxkZ
ubAnDg3nzp07C9dXmZVb82pkQ0NDcnLy559/7urq+vXXX9MdbFUGCgAAAAAA
AADWMH1vrVSAenh4REREqFQqnU5nNBrZDtnm6PV6mUwWGhrK7N2ilFJif/If
ZOqXzX1e6I8nJSVJJJKN0IB7cd16ZmZmdXX1Oi5XfytMp2m1Wh0eHv62tds+
Pj7nzp1jqxCeeYYkhU0XyxIXJJkh5+bmHj161PojKBfujWxoaKCRxsbGCgQC
SgK9I93EVnJ8AAAAAAAAAGANUwV5586dkydPWt9n5eXldfbsWa1W+/Tp06Gh
IbZjtznNzc3Z2dnh4eEBAQH79++nZIaFhZWVlf3kP8jUL5v7vGg0muLi4qys
rI3QgJupW6+qqqKRSiQSuVyuVqvr6+sNBgONdN1Uqf80zHbBpqYmmnVRUVFB
QUECgcD6JczUbru5udEsjY2NzcjIMC/zDgwM0F9bneCZ9k90Szly5Ij1x9Iy
9yij0djY2EhzIC4uzs/Pb/v27UKhkC4xi3u2mR2Sz5496+jooIl06dKlgwcP
YkESAAAAAAAAgHXMssaf//znzz//3PqT6A4dOpSUlGQwGPr6+iYmJtiO3eY8
efKkoKAgNjY2MDBw7969lMzg4GC1Wv2T/yBTv2wymSjn5mXJqqqqjdCAm6lb
pyEXFxfTxJPJZDk5OSqVikba3d29bqrUfxpmmY4mxuPHjzUaTWpqalhYmFAo
5PF4HA7Heu32tm3bdu/eLRAITpw4ceXKFfr1lpaWVdsqWVdXZ35AhJ+fn7+/
v/X2T8w9qrGxkWZ7eHg4XV9eXl47d+4MCgqiX7T4XyRMbTvNopGRERqaXC6n
t8OCJAAAAAAAAADrmCpIhUIhEoms13vSAXQYHUy/Qr/Iduw2x2AwqNVqiUQS
FBTE4/FWYuljAzbgZvojp6Wlpaam0khLS0vb2trWX5X6O2KeGCAUCrlcrvVr
mcHn880bFCnJlOpVDpWuFLqrUMDx8fFardbiwYuL0xn0Lb24xDsS09obC5IA
AAAAAAAA7BobG3v27NnCesbF3nvvPUdHRw6HExwcTB/k6bP/+igKXnbM0llo
aCifz1+4hDs5ObksS7iLG3BnZmbeuHHj2rVrSqWSXll/Dbj7+vrMj9DMzc29
fv16YmJiQUFBQ0NDb2/vy5cvaYBsB2graPrdu3ePpl9kZKSfn5+rq6uzs/OW
LVusL0hyuVyhUEgz9uLFiyUlJS0tLavQ5obmZ0VFRUpKSlRU1NGjRwUCwe9/
/3uazPTuHR0ddEei2fv8+XOKhAb17bff0mVFdx6K8OTJk76+voGBgSdOnKDf
pV9pampa4h0JC5IAAAAAAAAANqK/v//Ro0dlZWXR0dH79++3uGTh6Ojo4uLC
4/HCw8PLy8vn5uY2cqmsFUajUafTqVSqiIgIDw8PSp2Pj09qaqr5AX3Lsmtx
cQPuiooKeke5XJ6RkZH5P9ZZA26TyWSuVadZSmO8cOEC/Uvz8PHjxzTA0dFR
tgO0FUyibt68SZezSCTau3evs7Oz9QVJJycnLpfL5/MDAwPj4uKUSmVtbW1P
T8+Khjo0NPT06VOapSkpKaGhoZ6enp9//vnZs2fp3e/evVtXV0ezt6mpib7Q
aDQKhSI+Pp4OO378eEhISHBwMMVJc8Dc0amvr2+JdyQsSAIAAAAAAADYiMWb
+hbjcDg8Hs96WSX894J6aqafLyVNIpHo9XrKs8lkWsb3YhpwP378uKqqKicn
Jy0tLTExcf014GZGWl9fn52dvXCArHSItn0tLS1KpTIqKkokErm6ulpfkGTQ
kXT8Ehtev6PFVdi+vr7BwcH07lKplAKgk0s/oi/o1kQH+Pj4cLlcuqaCgoJ+
coRYkAQAAAAAAACwEYsfe7iYi4vLgQMH6IArV640NjayHbLtYraoUT6FQiGl
TiAQxMbGrsTSGdOAu7u7u7m5WavVlpaWKpXKtLS0jIyMmzdvqlSqioqKBw8e
0FtTVC9evBgfH5+enp6fn1/GMFYBM1Ia5u3btxd2GKdRd3Z2rpvG4sulp6en
traWJkNcXFxgYCCfz+dyuU5OTtYXJJ2dnffu3SsSiaKjo2n+rMQqOmNxi/DT
p09HRkaGh4fHx8fTKabg6XWayTKZjK4mOiA0NDQmJiYpKcniHk7zJLH+bAQs
SAIAAAAAAADYiKVsptqxY8fhw4fDw8Ozs7Obm5vZDtl2TU5ODg4OdnV1paam
+vj4UOo8PDwiIiJUKpVOpzMajcv4XkwD7tHR0RcvXvT09NCpqa6uLioqysvL
y8rKkslkCoWCvqZXampq6ET39vaOjIysuYcuMiOlxNbW1i7sMF5SUqLX69dN
Y/HlYn7QKJ1xys/FixeX2OZmy5Ytzs7OdBPw8/OLjIyk+XPv3r0VanOzuEU4
3VsSEhLCwsLoXhQfHy+VSpOTk69evWqexnSPoouosrLywYMHFp9ySZee+TkG
Vp6NgAVJAAAAAAAAABuxlM68PB4vKChIIpGo1WqDwcB2yLZrccvy1WxhPDw8
3N7eXl9fT6dJLpdLFsjJyaEA2traent7x8fHVzSMlbO4w3hmZmZ1dfX6ayy+
XJbyQIbFmDY39It0f1idUJkbUVhYWHh4OLMsSS+WlZXRebfeSpvZnGxlVycW
JAEAAAAAAABsRF1dXUJCgq+vr5ub289//nOLCxSffvrpqVOnlEolHbzS3S7W
NKYQNT8/PzAw0MHBwd3dPSQkRCqV3r17t6OjY0XffWJi4vnz5+3t7Q8fPqyq
qlKpVDk5OTKZLDk5OTMz89atW5WVlTqdrq2tzWg0Dg8PU5xrqwE302GcRpeV
lSWRSORyuVqtrq+vNxgMQ0NDa2s4q2BgYKClpUWj0SQlJR0/ftzDw2Pnzp0/
+9nP7O3t7ezsNm3aZPF6Z54ZS1f99evXtVrtkydP+vv7V6KbFbOZMzc3Nyoq
im5EAQEBFGp4eHhcXNylS5doAt++fbupqWnh/l7zhTY5OUknnX6dzn77/6Av
+vr6/tGSOxYkAQAAAAAAAGxEVVVVZGQkj8dzcXFxdHS0uEDh5eV19uxZrVb7
9OnToaEhtkO2XUwhaklJSUhICIfD2bdv37Fjx+Lj4wsLC9va2lb03V+9ejUx
MTE8PGw0Gg0Gg16v12g0KpVKJpPduHEjPT1dLpeb6151Ol17e/vg4ODaasDN
dBinoRUXFyclJdHQcnJyaFAPHjzo7u5eW8NZBVNTU+ZC5nv37l29ejUiIkIk
EtHF7uDgsHnzZjs7O4vXO/2Upi6Xy/X29qZpTLO3oKDg0aNH9NeW/VmdzOMu
Y2NjxWIxxUZvGhAQEBYWFhMTc/HiRTrFdK7r6uoWLjZSGKOjozSB6Y5EP1Kr
1ea28tYfSoAFSQAAAAAAAAAbQZ/lg4ODnZycHBwc7O3tLS5Q+Pj4pKamojB2
6crKysLCwt69L/BPw1SOt7W1aTSahQ24L1++bF6WrK+vpxO6RhtwM5XINC6a
mcnJyaWlpTTYNTqcVWA0GnU6HZ13mopCodD69b54q+SZM2fKy8utF03/NMwz
bMViMZ/Pp8DoHX19fUNDQ+lFiURCZ5nCptO9sBybeVirVqulX6fD6Bg6wHqE
WJAEAAAAAAAAYBez2UyhUNDHc4s7puhbepF+RAfQYWgdsnTMvlMvL68jR46s
8uP4mMrx3t7e1tbWhQ24KQy5XE5nk9lUthYbcPf19VEyaVB5eXk3btyQSqXm
tkE03pcvX665rj2rYGRkpKOjg1JEp97cwcrd3d3FxcV67bajoyMdQ9M4MDDw
/PnzNGcaGxuNRuO7124zWzdpEubm5kokkq+//jogIEAgEPzmN7+ht1v4MMnY
2Nj4+Hg6hibwzZs3KYy7d+9WVlZqNJqysjL6ls5+XV1dZ2en9T2cWJAEAAAA
AAAAYBfzOD6pVOrj42NxXWLz5s2Ojo4cDic4OPjWrVuTk5PLXrC5Xt2/fz8m
JsbT09Pb2/vw4cNisZjy3NDQsDrvzlSOj4+PDwwMLGzArVQq5XJ5SkoK/Utf
r9EG3EwHk4qKiuzs7MTERPq3srLy8ePH3d3do6OjbAdoc2ZmZuj8MvskaTaG
hIS4u7tbr91+7733zHeATz755MiRI+Hh4RkZGY2Nje9eu8083FKtVtM8lMlk
Fy9epEsmLCzs5MmTJ06cCA0NpdtOUFAQXTsikYjuUUKh0M/PLyAggF6PjIxM
SEhYuHmys7NzeHjY+kopFiQBAAAAAAAA2MU0LI6NjRUIBNYfJRcWFlZWVsZ2
yGuJVquNj48XLkDf0otsxbPOGnDPzMyMjo729/frdLr8/PyFhb00q2lusx2g
7WLWcqVSqUgkWmLtNh1G9wE+nx8eHk5T6N1rt5mie4VCoVQq6dzRv/Q1vUJn
MyoqKjQ0VCwW04VDb0pvTQFQGBQnRUtf04v0UzqMfqWhoWGJ8WBBEgAAAAAA
AIBdz549q6urUyqVp06dcnd3t7gK8cEHH3z88ccCgSAuLq6mpobtkNeShoYG
qVQqFosPHz7s7e3t6ekZExNz//59tuJ5qwbcQ0NDdPxKtFReLhTb5OTk6Ojo
kydPKioq5HJ5VlbWzZs38/PztVptZ2cndvP+I5QZc630nTt3EhISjh49SvNz
165d1lcmmf+b+Oyzz6Kjo3Nzc2kyP3361GQy0R/8CSuTzA5JurHQjYjmHv1L
Xy/cM0lXUHx8fFRUVFhYWHBwMF1NgYGBX3zxBX1NL9JP6TD6lY6ODos7NplO
3CMjIzT5acipqam+vr40HD8/P5ozFMPY2BieQQEAAAAAAACwauhT/N27d+lD
/bFjx/bs2WNxFcLFxeXAgQNBQUFXrlxpbGxkO+S1RK/Xy2Sy0NDQI0eOeHl5
8Xi8yMjIqqoqtuJ5qwbcT58+7evrW4mWysvl9evXc3NzMzMzPT09NDPVanVe
Xl5GRkZKSkpJSQmNDs87/UfMa7kmk4nO8v3793Nzc6Ojoz/77DMul8vhcBwc
HCzeCpitibt27fL29j569GhCQsKdO3e6uroGBgZ+QqMr5hmS3d3dz549o2lJ
/9LX9ArNz5aWFjqJDQ0Nf/3rXxc+KLKwsLC4uJi+phfpp3TYDz/8MDIyYnHx
nOnETfe6pqamhbvBDx48eOnSpdbWVpo/Y2Njy5ddAAAAAAAAALCGaW4rEolc
XV0trkLQ6/TTVe4QvT4w6Q0KChIIBLZT9r6UBtxardZgMKxES+Vlx5SiFxUV
0UBoFJmZmdXV1egI///EzAS1Wh0eHr6wMtoKZmWS7gxSqXRh52tbw3Tibmho
oDGa/4OAhkmjoEsyNjYWBf4AAAAAAAAAq6ypqenq1avBwcFeXl4ffvihxcUH
Ho8XFBQkkUjo47zBYGA75LWkra2tsLAwPj7+2LFj+/bt43A4ISEhJSUlrNdB
L27AXVZWVlBQIJfLMzIyMjMzFQpFcXHx/fv39Xo9nXSj0Tg8PDwxMfHq1Su2
YraCKUWvrq5WKpWJiYk0CsozjYtOweDg4OvXrynbb968YTtSm8PMhMbGRkpa
eHj4kSNHPvnkE5qrjo6O7733nsV7gp2d3ebNmx0cHNzd3WlKS6VSmufffPON
DZY/L94hKZPJoqKixGJxXFwczXnskAQAAAAAAABYZbW1tQkJCb6+vm5ubtu2
bbO4+MDn80NDQ+lTPH2W7+rqYjvktYSpiGd6GQcGBubn57NeB724AfeTJ08a
GhoqKysLCwuzsrJSUlLS09NzcnJUKlVVVdXDhw/b29ufP38+MTHBVsxWMKXo
zc3NpaWlaWlpFDyNQqlUarVamrTz8/M2+yRMdjEzwWg0msvez58/T7OUx+O5
uLg4OjpavCds2rTJzs7O3t6ejqGJLRKJYmJi8vLybHBxb/EzJJknFVRXV3/3
3Xc2uIgKAAAAAAAAsL7RB/OoqCjrdZoeHh4RERH0+V2n0xmNRrZDXkuYJsJM
lahIJFIoFDZYBz0+Pt7b28tUcC9swC2Xy9VqdX19fXt7+/DwMNuRWtPT06PV
aplOPRR8UVFRa2vr7Ozs/Pz869ev2Q7QdjG12+Xl5WfOnBEKhTwej8PhLLF2
28fH59y5cyh/BgAAAAAAAIB/hNk1VFJScuLECeudLLy9vS9cuKDT6To6OkZG
RtiOfS0xGo2UN5VKFRER4eHhQcn08fFJTU21wWcbTk9P08nt7e1taWmpqakp
KipSKpVyuTwlJYX+pa/plerq6ubm5p6enoGBgfHxcdYLzxejwFpbW5lOPRKJ
hNkkSQmfmppiO0DbxdRuP3r0qKCgID4+PiQkhK596zcHpnbbzc0tICAgNjY2
IyPD/PROOhdIOAAAAAAAAAAwmOeqZWdnBwYGOjk5OTg42NvbW1xzOHz48PXr
141G48jIyMzMDNuxryXM+hjT2FcoFEokEhtsAjI/Pz89PT0+Pv7ixQuKzfxg
SbVarVAo5HK5TCZLS0tTKpWlpaX0Ov20t7eX9cLzxRbv81xD2zvZxdRu9/f3
P3nyhM4yXfWnTp2yvlWSqd3etm3b7t27aZKfOHHiypUrlP+WlhZslQQAAAAA
AAAABtN5NjU11cfHx3pVplgsVqlUbIe8JplMJvMz6yQSiVAo/Ke10Nj39evX
8/Pzs7OzFHl9fT2derlcfvny5bi4uMTExLS0tJycHIq/ra3NBgvPmbpjyjlF
TmlPSUlRKBR44MBPQDk0P22Api6Xy7V+l2DgkbMAAAAAAAAAYNHIyEhHR0dD
Q8P58+e9vb0tLiy8//77W7du3b59+4kTJ0pLS9kOeU2anJwcGBhYuPBr+w/k
NO+Um5+fHxwcbG9vpzgrKyvNy5Lp6ek3btyQyWT0rUajscEG3EzdMQVWVVUl
X4BG0dbWNj4+Pj09TaNjO9I1gObtvXv36HRHRkb6+fm5uro6Oztv2bLF+oIk
l8sVCoWhoaEXL14sKSlpaWmxtTY3AAAAAAAAAMCK58+fNzU1qdXq06dP79u3
z+LCwtatW3fs2OHp6RkTE3P//n22Q16T5ubmJicnTSaTQqEQiURrYv/Ymzdv
/v73v79+/Xpqamp4eNhoNLa1tZmXJW/dupWZmZmcnEzx22YD7oU9oykwmuFK
pZKivXz5snkRuLe3d2RkZHp6mu1I1wBmf+/Nmzejo6NpAu/du9fZ2dn6gqST
kxOXy6V5HhgYGBcXR/mvra3t6elhezQAAAAAAAAAwLLF3Z8X2759u6enp1gs
lkqlDQ0NbIe8tqlUKsokZZXH4wUFBUkkErVabTAY2I5rSdZiA24KhkKiwIqK
itLS0uLi4phNkjQWGhHbAa4lLS0tSqUyKipKJBK5urpaX5Bk0JF0PP0W/S79
BbYHAQAAAAAAAAAsa2trKywsjI+PDwgI2L17t/XSS5lMptfr2Q55bVOr1cHB
wU5OTu7u7l988QVlnvJPZ4HtuJZkLTbgnpiYeP78eXt7OwVGESYmJqanp9+6
dcvcbOXFixevX7+m8N68ecNWhGtIR0fH3bt3pVLpv//7v3t5eTk7O9NM3rx5
s/UFSTps7969IpEoOjr65s2bNtjICQAAAAAAAABW06NHjzIyMsLCwg4dOvTR
Rx9ZXE/YuXMns8GptbWV7ZDXtrKyMso2l8v18vI6duxYbGxsQUHBkydP2I5r
SdZiA+5Xr15NTEwMDw83NzdTYBThjRs3MjMzc3JyampqaBQ0KHaXTNeQZ8+e
1dXV0SmOi4sLDAzk8/k0k52cnKwvSG7ZssXZ2dnV1dXPzy8yMpLmyb1792zz
MQUAAAAAAAAAsAoaGhqkUqlYLPb09Ny+fbvF9YS1WFxsszQaTVRUFJ/P9/X1
DQ4OXqN1rGuxAXdPT49Wq6XAZDJZcnIyzeeioqLW1lYaBY2FRsR2gGvAwMAA
ZYzOLJ3i8PBwPz8/msn/z4dJMrDXGgAAAAAAAABITU1NXFycQCD4+OOPP/jg
A4vLCJ9++umpU6eUSmVdXR16UrwjJuGHDx8ODAxco4szixtwV1VVFRYWZv6P
jIwMuVx+69ate/fuPXz48Lvvvuvu7h4YGBgbG5udnWUrZmYxTaVSUc4lEglN
aa1W29XVRaOYmppiKzDbR2fNZDL19fW1tLT85S9/yc/Pv3r16rlz58LDw4OD
g0UiEc3n3bt3b9u2zd7e3s7ObtOmTRbvJBwOh8fjCYXCsLCw1NRUOhePHz+m
P8t6XT8AAAAAAAAArKaKioqvv/56586dzs7OW7ZssbiM4OXldfbsWa1W+/Tp
06GhIbZDXttqa2sTEhJ8fX39/Pz8/f3XaKugxQ24DQZDU1NTdXX17du3lUrl
tWvX0tPTFQqFuYK7rq6utbW1p6dnbGyMrZgXd+Sx2UY8tsbcZfvbb7+tqqrK
y8tLSUlJTU29evVqWloazd4LFy7ExsYGBAS4ubk5ODhs3rzZzs7O4p2Efsrh
cLhcrkAgCAoKioqKys7OpmnDel0/AAAAAAAAAKwmpseKg4ODvb29xWUEHx+f
1NRU80ayyclJtkNe25gaeZFI5OvrKxQK4+PjtVot23G9K5oYND2YCu7k5OTE
xMQLFy7ExcWlpKTk5+drNJrW1taBgQG2Ipybm5uamjKZTHq9niKUSCQUmEKh
oK91Op3RaGQrMNvX19f37bfflpaW5uTkJCUlLTynjHPnztGNwvqdhEGHcblc
Pp8fHh5OtyDbqesHAAAAAAAAgJUzMzMzMjJiNBrlcvmRI0cs7muyt7en152c
nAIDA7OzswcHB0dHR1ksuV0fmpqarl69yhS68ni8yMjIqqoqtuN6VzQxaHrQ
JDEYDA8ePCgtLS0oKMjIyEhJSblx40ZWVlZ+fj4N09xhua+vz2Qy0SScm5tb
tYc3/vjjjxTk1NQURUiRyBeorKxsa2sbHx+fnp6en59fnXhsH1Op3dzcTBnL
yclhuhcVFhbW1NS0LpCXlxcTE0Oz2t3d3cXFxXrtNrNV0t/f/+zZs2q1WqfT
/fDDD5OTk9gqCQAAAAAAALBejYyMdHR06HS6P/3pTwcPHrS4esAsGpw4caKk
pARrBcuCaWsuEon4fD5l+Pjx47dv32Y7rndlXu6jSTI0NNTd3d3W1tbQ0FBe
Xp6fn5+VlXXjxo2UlBT6ori4WKPRmJclR0dH6fhV2xdnfu4lvZ3RaHz48KFa
rVYqlTKZ7PLly+ZNkr29vXRdTE9Pr048tm9hpTblKikpSS6X0wm9c+fOgwcP
DAbDwALffPNNYWGhVCoNCQlxd3e3XrvN/GeHm5ubv79/eHg4nQitVov/9QAA
AAAAAABYx4xGo06nU6lUERERHh4e1ssqo6KiNBoN2yGvEy0tLUqlklIqEolc
XV0pz2KxmE4E23EtG6YBd29v7+PHj2nm5Ofnp6SkxMXFSSSSpKQkmUxWWlqq
1+v7+/tHR0dnZmZWOcLh4eH29vb6+vqioqK0tDQKjNkkSTGPj4+vcjw2a3Gl
Np27O3fumNeTTSbTwoPNq5f0I6lUSnP7bWu3v/rqq9zcXDwXAgAAAAAAAGAd
ow/+Go1GJpOFhoby+XyLawXbtm1zc3Pz9fVNSEiora1lO+R1oqOj4+7du1Kp
9NixY3v27KE8+/v737x5c91sQGUacL98+bK7u7u1tVWr1ZaUlGRmZpqrfdPS
0nJzc8vKyurr65ubm2kqrnID7omJiefPn7e3t9fU1OTl5V2+fDkjI6OwsJCu
iJaWlhcvXrx+/ZpG8ebNm9WJx0YsblT06NGjysrKhZXadB4bGhrMp+z/LBvS
t/Qi/ejOnTt0xzh69Ki3t/euXbusr0wy27DpPhMREUFvUV5eTnPGZDKt5u5Z
AAAAAAAAAFgFBoNBrVZLJJKgoCAej2dxreDDDz/08vIKDg6+evVqU1MT2yGv
E8+ePaurq1MqladOnXJ3d6c8+/n5paenr5tiVWZda3p6mkY0MDDQ2dmp1+ur
q6tpyuXk5KSmpl6/fj0jIyM7O/v27du1tbWr3ID71atXExMTw8PDLS0t5eXl
crk8MzMzKyuLYqupqenq6pqfn//xxx9pFKsTj41gVpJpKra3t+t0urKyMvPe
SKZSu6Ghgc6mxdVC+pZepB89ffr0/v37ubm50dHRn332GZfL5XA4Dg4O1mu3
XV1dBQKBWCyOj4+neWJxzRMAAAAAAAAA1rTFhcOL0ev0UzqGjqTj2Q55nRgY
GGhtbdVoNLGxsQKB4J82QBNzm23AzTy4QKFQUCQSiaSoqIgimZ2dnZ+fX7Vu
OzaCqbVnzpRcLr98+bL1Su3FmG7marU6PDycz+dzuVwnJyfrtdvMyiTdc6RS
6RLfCwAAAAAAAADWkMbGxitXrgQFBR04cMDFxcXiEsGePXuOHTsmlUrv3r3b
0dHBdsjrhLmdUENDw/nz5729vSnPQqFQIpGs4xUYm23AzTxMUq1Wy+VyOgtK
pVKr1ZoXh6emplb03W0Es6N1fHzcXMnOJCQ9PZ1OkPVK7cWYbuZ0k6GzHB4e
fuTIkU8++YTD4Tg6Or733nsW7zZ2dnabN292cHBwd3cPCQmh246505DRaKRL
ZvUfNAoAAAAAAAAAy66mpiYuLk4gEHz88ccffPCBxSUCd3f3U6dOKZXKurq6
Z8+esR3yOjE2NkbJbG1tvXTp0sGDBynPdBZiY2PZ2iW4Cmy2AffU1JR566ZW
q6V5LpFI5HK5Wq2ur69vb28fHh5e0Xe3EUyl9vPnz80PjVSpVOnp6ZcvX6ZT
k5eXZ71S+x/9QXM388bGRsrn+fPnAwMDeTyei4uLo6OjxbvNpk2b7Ozs7O3t
6Ri685j3ZisUCp1O19HRMTIysjrZAAAAAAAAAICVU1ZWFhYWZv3xbut+oYwV
TP1yamqqj48P5dnDwyMiIoLZD8Z2gCvI1hpwM/HQDC8qKqIYKBiFQrERzgWD
SUJ7e3tlZSWdAjoRlIq3rdRejKndLi8vP3PmjFAo5PF4dMNZYu02HR8VFbWh
zgUAAAAAAADAusTsVbt161ZwcLC5iHLz5s0Wtyr5+PhIpdJVbjiy7jH1y+np
6X5+fpRwPp8fGhoqk8k0Gk1XVxfbAa6gxQ24a2trb9++nZ2dzfRxzs/P/z8N
uCld09PTK9H5momH3qimpiYnJycrK8vcDby8vLylpWV4eHhiYuLVq1fL+KY2
YnGltlarValUKSkpTMshOhEPHz78yf1lmNrtR48eFRQUxMfHh4SEeHt7W/9/
EKZ2m8fjiUSiiIiIq1ev3rt3zxzGBqmjBwAAAAAAAFhPmNUwhUIhFovpUz99
9rezs7O4IEAH0GEDAwNjY2ProPuzjWDWhG/evOnv708J5/F4QUFBEolErVYb
DAa2A1xBixtwd3V1NTc319fXl5WV5efny2QyuVxOs25hA+7u7u6XL1+uROdr
Jp4XL160tLRoNJrCwsKMjIzLly/n5eXV1NS0t7c/f/58YmJiGd/URlis1Kbk
S6XSrKysO3fu0Emh5D979myJldr/6C3oF/v7+588eaLVaq9fv37q1CnrWyWZ
/xD52c9+tnPnTg8Pj+PHjyclJdHZoXOErdoAAAAAAAAAa87iemErJZPBwcFq
tZrtkNctlUolFov/aWN3M5+ZmRkdHe3v79fr9aWlpQvrhZkG3I8fP+7t7V3R
ztfj4+P0Fm1tbZWVlXK5nN49LS2tqKhoHT9McnGlNiVcKpVS8intOp1uJarm
6SzTG4WGhgqFQi6Xa712m7FxthADAAAAAAAArEtDQ0NPnz7VarVnz5718vKy
+PF/y5Ytzs7OO3fu/PrrrysqKtgOed26ffv28ePHORwOn88XiURhYWEZGRmP
Hj1iO65VNTc3Nzk5OTo62tXVpdfrNRpNcXFxVlbWwgbc5eXlDQ0NbW1t3d3d
NIHp+NnZ2R9//HEZw5ienh4ZGent7dXpdCqV6vLlyzKZTKlUqtXqhw8fGo1G
inPZ92eygtm1SDmn8S6s1KaEZ2dnU8JramoMBsNK9BWis3zv3j3KbWRkpJ+f
n6urK91q6IZjfUGSy+UKhcLQ0NCLFy+WlJS0tLTgIRIAAAAAAAAAawh9kK+r
q1MqladOnfr0008tfvz/4IMPPv74Y4FAEBcXV1NTw3bI61ZVVVVkZCSPx6NU
i0Si4ODgq1evNjU1sR3Xqnr9+vXc3NzMzIzJZOrr6zMvS1JmFjbgzsjIKCgo
KC0tffDggcFgGBwcHB0dXd5nCMzPz09PT4+PjzObJBkUDL3p1NTUsq+CsoJ5
riPdCijVCyu1s7Oz7969q9PpaLwvXrygk0KnZnm3pNJZNp/imzdvRkdH07Tf
u3evs7Oz9QVJJycnLpfL5/MDAwPppkS3r9raWop/GQMDAAAAAAAAgJVjMBjU
arVEIgkKCuLxeBY//m/fvt3T01MsFkul0oaGBrZDXre0Wm18fLxQKPT19RWJ
REi42cDAQGtr68IG3BcuXEhMTExOTlapVPX19V1dXYODgz+hx8pSGI1G8yZJ
hUJB705XCn2t1+tNJtPU1NTybhdkBdP5mpJcVla2OpXai7W0tCiVyqioKJr5
rq6u1hckGRv54QYAAAAAAAAAa1drayuzDrBz506Ln/o/+uijQ4cObcwK4tXU
0NAglUrFYrG/v7+fn5+vr29CQkJtbS3bcbFsbGysp6dnYQNumofXr19PTU3N
yclRq9XV1dV6vb6zs3MlGnAPDw+3t7fX19fTG8nlcolEQm+q0Wja2tp6e3vH
x8ff/S1YwexEHRwc/P77783bUPPy8lanUnsxOsV0fuleFBcXFxgYyOfzuVyu
k5OT9QVJZ2fnvXv30r0rOjr65s2bNIquri6TybSioQIAAAAAAADAO1pKU4nd
u3cHBATEx8cXFha2tbWxHfK6xZyLwMDAw4cPo0bebHZ2dmxs7P804M7NzU1L
SzP34M7MzCwpKdFqtSvRgHtqasrc9Yn+vlKplEgk9KYqlUqj0dDbrd0Wz8yz
OpmHRmZnZ1+7dm11KrUXMy87t7S00Km8ePHiEtvcmB9v6+rq6ufnFxkZSafm
3r17aHMDAAAAAAAAYOOYXXmenp7bt2+3+KkfPW1XB1O1Ghwc7OvrS2mnrynn
bMdlK1hpwM30nm5tbS0qKqK3S05OprfOycnRarVr97mFTDJ1Oh2lTrLAalZq
L0Z3GDqP5pV5ugSsL0gymDY39Is0PVY5ZgAAAAAAAAB4K/fv34+JifH09Nyx
Y8fWrVstftjft2/f6dOn1Wp1U1PT8+fP2Q553Xry5ElBQUFsbOyxY8e8vLy4
XG5YWFhZWRnbcdkKVhpwm5tQz8/P05vW1NTk5ORkZmbS26WlpZWWljY3Nw8P
D09MTLx69WoZR7pymErtFy9eGAwGnU539+7d7OxsqVR67do1+kKlUmm12vb2
9tWp1F5sYGCgpaWFTu6VK1dOnDghEAh27969bds2e3t7Ozu7TZs2WbxHcTgc
Ho8nFArpkklNTTUvTff19a2bZugAAAAAAAAA60lpaSl96t++ffvWrVvff/99
ix/2vb29z58/39DQ0NHRMTIywnbI61ZbW1thYWF8fPwXX3zh7u7u5OQUHBys
VqvZjstWsNKA+82bN3//+9/prV+8eGFeKLt161Z6enpiYqJSqayurm5vb3/+
/PnExMQyjnTlMIu6lJyamhpKXXZ2tjl1eXl5lExK6ffff095W51K7cWmpqbM
5fmUWzqbsbGxAQEBbm5uDg4OmzdvtrOzs3iPop9yOBwulysQCIKCgqKiomhc
TU1N66YZOgAAAAAAAMB6olKpxGKx9XJIHx+f1NTUFe1lDP9tqeM5nRo6QWzH
ZbtWswH3+Ph4b29vW1tbZWWlXC6n90pLSysqKqJ3aW9vHx4efve3WAWLK7Wl
UimlTiaTlZWVUTJtp3s4c3LPnTtHtyAnJycHBwd7e3vrNys6jMvl8vn88PBw
uppsZzgAAAAAAAAAMDMzMzIyYjQar1+/fvjwYYsf7emzv4ODA33ADwwMzM7O
fvfNZmDd4qfn+fn5yeXygYGBsbExZH4xpgF3XV1daWmpUqlUKBTp6enXrl2j
r2/fvl1dXd3U1GQwGGiqDw8PT01N/eQG3NPT03TJ9Pb26nQ6lUp1+fJlOlP0
Lmq1+uHDh/T3bbk62EqlNk0wGk5lZaVer6dk2s6WQubk5uXlxcTEiEQid3d3
FxcX67XbzFZJf3//s2fP0tmhwf7www/vXrwPAAAAAAAAAO9oZGSko6ODPqpf
uHDB29vb+kf7EydOlJSU4BP9SjMajebFroiICA8PDzoFBw8evHTpUmtra09P
z9jYGNsB2hymAXd3d/d333338OHDe/fu3bp1Sy6XZ2RkZP6PwsLCqv+PvbuP
afLe/8f/jSEcFnJiiNthxxCyEKebS2MIHwc4JcY0RIiehpDGKG4SYohhxLNi
DDEe9MCUdYIdWECKLQWswMpdpXJnB6xyK6vcDlrGGFhupIIg94Jsn+/rnP6+
148dejpQ4FJ5Pv4wWK5e1+u63tf7Mu+379f1KiujC2swGEwm0wsX4KYvTk9P
j4+PM4skGbR/vV7/6kzlLWUlU5t5aWRfXx9t8OpMqzKN+8MPP1AjikSioKAg
d3d367nbzH+juLq6+vn5CQQCiURCJ4j/TwEAAAAAAABg3dK5LyvJj6j1vD6Y
HNWIiAgvLy9qAvqTfqZP6HP6LdsBvrrm5uampqZGR0fb29vpcmVkZCQlJcXE
xFy8ePHq1avmRYDmDO6XL8DN9B25XC4Wi4VCIf2s0+le5exgK5napaWlBoNh
FeuSrzq6sOb3hVLMPB5vpbnbn3/++a1bt/DGCQAAAAAAAADWdXV1lZSUiMXi
oKAgV1dXiyP6d999l37l6+sbHR197949tkN+8zE5qrGxsd7e3v8H9c2X7fnz
57Ozs1NTU319fXQBtVqtOYM7KSlJIpFIpVK5XE6XkT6n33Z3dz969Gh8fHx6
enp+fn6lxxoeHjYYDNXV1bRD2rNQKMzIyNBoNO3t7XR02u0anN8LMi+MHB0d
NRqNP/74o8VM7cbGRrq1Xnjh6DqgUzCXuSksLKRn0bFjxw4cOPDhhx9an5lk
FnjTEywsLIxug+LiYvNLMlmpHg4AAAAAAAAAbW1t2dnZERER/v7+NLS3OKJ/
77339u/fHxgYmJiY2NDQwHbIbz4mR1UqlR4+fJia4OOPPz59+rRCoaiqqurt
7WU7wFfXr7/++vz587m5ufHxcbqAdK2am5srKiry8vLo6tH1FIvF9Cf9TJ9U
Vla2tLT09fWNjIxMT0+v9FhTU1Mmk6m7u1ur1dIOhUKhRCJRKpWv4EJWZirv
hx9+MJcjX5qp3d/fTxfthV+tuQ6YadWOjo7y8vJbt26dO3fub3/7m4uLi6Oj
o729vfXc7R07dnh5efH5/KioKJVKRVeDrgmWSgIAAAAAAACsP51OZy6ewuVy
aVxvcURPA3kejxceHq5QKFpaWtgOeQNhSp+7ublRG1FLaTSa7u5utuN6nSxd
x8h4yQWNCwsL8/Pzs7Ozra2teXl5tMP4+HhqI9qtVqt9peaNmWTnoqIiuVz+
emVqL8Uk5lObCgQC6h307HJwcLCeu83MTNLTjE6frgZdE9oJ22cDAAAAAAAA
sOFUV1dfuXKFRui7d+/eunWrxYG8q6trUFCQWCwuKSnp6upiO+QNJD8//9NP
P7W3t3d3d6cmEIlEd+7c6ezsZDuu18nExER/f7/BYLh//35ZWZlSqczIyJBI
JPHx8ampqTk5OaWlpXV1de3t7SstwG1ejTk/P88skkxLS7tx40ZSUpJarW5u
bqa90dGfPXu2Pme6FLOkkLptbW1tYWFhVlaWVCpdfO6vfqb2Ukxifn19vUwm
EwgEfD7fw8PDyclpy5Ytb731lsXnmI2NjZ2d3eLeRDcDNT21+8jIyMzMDNun
BQAAAAAAALBRlJeXnz9/3tPTc/v27TSWtziQxwsM2VJYWHjy5ElHR0dqghMn
TkRFReXm5ra3t7Md1+vk2bNnExMTw8PDRqNRr9frdDqNRqNUKiUSSUpKyo0b
N5iXKK60APdvv/1G2ywsLNBXqFG0Wm1BQYFMJouJiVEoFBUVFeY8aDr6+pzp
Ukymdm1tLcUmWSQ/P7+qquq1yNReiknMpzatr6+nR5NQKAwMDLT+HNu0aZON
jY2tra2zs7O7u7t51bdcLqd27+zsHBkZYfu0AAAAAAAAADaKoqKi0NBQ6y9h
43K5NN5HhuP6Y1rHy8srICAAWfMvY+0KcE9OTppfJllRUZGamko7pD3n5eXR
3gwGw/Dw8JqelxVMpnZhYaFEIqHA6HwpNjp3CrWrq+v1ytReimlTalB6RvH5
fE9PTycnp2XmbtOTjfoUs06S7bMBAAAAAAAAeMMxuZxZWVmfffaZo6Pj5s2b
7ezsLC4oOnz4cFJSEmpArL+ysrIzZ85wOJz9+/f7+/ubXyOp0+nYjuu1tHYF
uGm3Y2NjJpOJmqagoEAsFstksszMTNpbfX19b2/vzMwM9bh1m/f7b5nacXFx
aWlpt2/fpnP88ccf6QRfr0ztpZg2pSajqy0SiUJCQry9va3/DwuTu009i8fj
hYWFJSYm3r171/yIo72xfVoAAAAAAAAAbyYmlzM5OdnPz4/G5jRCp3G6xWH7
kSNHbt68OTo6St+am5tjO/YNhEmoP3DgwKFDh/h8vkgkqq2tZTuu19LaFeA2
T4tR7+jq6tJqtVlZWdRf0tLSaG8lJSVtbW1jY2Pr2XeWZmqbp1szMjIoHp1O
R+duMplos9crU3sppk3pfPV6PZ0vnekXX3zB5XI5HI6jo6P13O2//OUvH3zw
gYeHx8mTJ+Pi4jQaDTX6K1UeHQAAAAAAAOBNwuRyCoVCGrxbT2wMDAxUqVRs
h7wRabXaqKgo7iL0V/qQ7bjeEKtegHtoaKi1tZV5RyXtJysrq66ubnBwcGxs
bN3KpizN1I6Li6MzUqvVDx48GBgYWJ8wWEFnTaccHBxMncXFxcV67jYDVewB
AAAAAAAA1sHg4GBjY2NRUdG5c+f27t1rcZC+efNmZ2dnDodz5syZsrIytkPe
iGpra0UiEZ/P9/X19fLycnNzCw8P12g0bMf1hrBYgPvGjRtisTgtLS03N7e0
tJSaoK2trbe3d2hoaHx8fG5uzkqO89jYWE9PT1NTE30xPT09JiaG/jQvSlyH
96/Ozs4+ffrUvFawpqZmcaa2QqGgE3zw4MEb/xpYOsG7d+9KJJKzZ8/6+fnR
44seYvQosz4h6eLiwuVyg4ODhUJhTk4O3pcLAAAAAAAAsBZ6enoqKyvlcnlI
SMju3bstDtL/+te/urq6+vr6RkdHV1VVsR3yRsQs9+LxeJ6eni4uLqGhoUVF
RWzH9YZYWoC7vLw8Pz+f+kVqaqpMJpNKpdnZ2XTBzS+W7Ovrm5qamp2dff78
ucUdTk9PP3nyhDarq6tTKpUikSglJSUzM1OtVtPO13pp4tOnT3t7eylO6tq5
ubmLM7XLysqam5spgNHRUYp/TcNgF7M6NCsrKzIyMiAgYN++fc7OztYnJB0c
HKhzubm58fn88PBwunTmV0qyfTYAAAAAAAAAbxS9Xq9SqYRCIQ3YORyO9VVD
KKTClpaWFoVCER4ezufz3dzckD6/RphizdQvtFqtUqmUSqVXr15dXJbanMFN
29CW/+1tkAsLC/Pz87Ozs7SlWq2Oj49PSEgwF81Zh1xgJmE8KytLLBZvqEzt
pZbziMNDDwAAAAAAAGA9NTc3p6enCwSCQ4cObd++3eLYfMeOHTweLzw8XKFQ
tLS0sB3yRsRMqpw4cWL37t329vYBAQE5OTnWE4dhpZhizQMDAx0dHXV1daWl
peZpyRs3bqSkpEgkEvqrRqPR6XTUKEajcXh4eGJi4tmzZ4v3Y66xMj8/39PT
U1NTY84Bp+/GxcXl5+fTd4eGhp4+fbq6axRpb6OjoxQ5ddLvvvsuKytLLpcn
JydvqEztpfr7+xsaGqj7REdHHz9+3M3NzcXFxcHBwfqEpKOjI4fD4XK5YWFh
dBmpybq6uh4/foweBwAAAAAAAPDy6uvrr127Zj2fkQbmtIFQKKRBvV6vZzvk
jai7u1uj0UgkklOnTrm7u9va2vL5/Fu3bllPHIaVYoo1T0xMPH782Gg0tre3
m6clc3JyUlNT4+PjqRUyMjKUSmVZWdn9+/cNBkN/fz9tv3g/v/32G+1qYWGB
dkJdZnG5nLS0NPpia2trb2/v06dPVzF4c5LygwcPaP+ZmZlisTg5OVkmk22o
TO2lzC8IpVYoLCyMjY1dZpkbe3t7R0dH2szHxycsLIwavaSkpKOjAz0OAAAA
AAAA4OUx5Zs5HA4NwC2OzVF5lnVGo9H8NsKwsDAPDw9qFB6PJ5fLrScOw8sb
Hx/v6+trb2+nmz8jI2NxAW6pVKpSqaqrqw0Gw/DwsMWvT05Omkwm6jUVFRWp
qakXL14Ui8VZWVm0t9bW1qGhoVUMdWBg4MGDB2q1muKMi4vb4JnaSzGz+vQ0
o2ea9QlJBpO7TQ1HT0v0OAAAAAAAAIAXxqwEKy4uFggE1kvQ7t2799y5c0VF
RY2NjYODg2zHvhEtLYbu4+OTkJDQ3d1tMpkmJyfZDvCNNT09PTIy0tfX19LS
UllZmZeXp1AopFKpWCymP+ln+qSioqK5udliAe7Z2dmxsTFqI51OV1BQQN9K
SUlJS0vLysq6d+8eNd/MzAxtv7Cw8MIRMpnaFENZWVlGRoZcLqfYmOzyjZmp
vRS1DjUiXRBqhc8//5zL5e7atWvr1q22trY2NjabNm2y+PRjcrdPnToVGxur
Uqnq6+uNRiNytwEAAAAAAABWinlXnlKpDAwMpEH35s2b//SnP1kcknt7e9NI
vLW19eHDh6ubZArL9Pjx446ODq1WGxkZuX//fmoULpcrFAp1Oh3mmtbU/Pz8
9PT0+Pj4o0eP6FJTL6BWUKlUzKRfUlKSQqFQq9UWC3CbO9rk5GRXVxdtkJWV
lZaWlpKSIhaLb9++3dzcPDY2Rr99mRV3izO1KZK4uDgKjA5UWFhYXV3d3t6+
MTO1l6J2GRoaomtFDXHr1q3Fb2S1s7OzsbGx+PRjcrf37t175MgRgUAgk8nq
6+uRuw0AAAAAAACwUkw1YblczuPxrCctIjuYdeZJJ51OJxQKuVwuNYqXl1dE
RMRaZP6CRUzhbGqI6urqlRbgXlr5Oj09nfYzODg4NjY2MzPzwoEtzdSWSCSF
hYWYrP5vmN4kEono4ebg4GBvb29ra2v9MUibubi4uLm5CQQClUqF5yEAAAAA
AADASk1MTAwMDOj1+ri4uIMHD1ocgNMIncbpNAw/fvz4t99+ixVBLJqcnDQv
7kpISPDx8aHW8fDwCAsLUyqVdXV1RqOR7QDffEzhbJPJZDAYVlqAe2xsrKen
p6mpqbi4WCaTXb58mb6oVqsbGhra29vpV0OLjIyMPH36lBp9aY9jyuVMT08/
efLEYqZ2QUFBbW0t3S20K6TzL8X0pvz8/AsXLvB4PE9PTxcXl2UulfTz84uM
jFSpVDU1NT/99NPo6OhLrnEFAAAAAAAA2CCWpgBbGYCHhIQUFhbinWksoos/
OTm5eEUrKg2tM2YmcGpqanh4eKUFuM3zh319fbW1tdnZ2TExMdevX79582ZB
QcHdu3fpw9ZFOjs7Hz58aDKZxsbG/iPVmpkXpRh+/vlni5natLeuri5MlP03
TG9qamrKz88XiUTUlby8vMxvrrCzs7P+HzSurq5+fn4CgSAxMZEuPiZ+AQAA
AAAAAJZpadVmKymK4eHhGo2G7ZDhX6jJ+Hw+tQ6HwwkICBAKhSqVSq/Xsx3X
RrSiAtxMxjdtr1ar4+Pjr/2bWCxOS0vLz8/XLGKen7RYsYjZT29vb0NDAzK1
XwaTu52QkHDs2DF63Dk6Otrb2y8zd9v8PwK44AAAAAAAAADL1NXVVVJSIhaL
g4KCXF1dLY67t27dunv3bh6Pd+XKlerqarZDhn9RqVSBgYEODg7UNEePHo2I
iMjOzm5ra2M7ro1oaQHuzMxMuVwukUjS0tLo58UFuAcHB2nj8fFxaqyioqLk
5OSEhIS4uLjY2NjExMTU1NSsRQoKCoqLi+m7P/zwQ2dn58DAwJMnT+hwCwsL
tIf+/n6DwVBbW3vnzh1kar8MJnebWsS8TtLX15fD4Vh/qySzdNzb2zskJIS+
mJ+f39TUhCWpAAAAAAAAANa1tbVlZ2dHRET4+/t/+OGHFsfd27ZtO3jwYGho
qEwma2xsZDtk+JeioiJqkcU1f9PT05ubm9mOayNaWoC7pqampKREqVTevHmT
es3iAtxNTU20zcjICG1WWlqamppKvxWJRNHR0VeuXPnmm2/Ei1y/fj0lJYW2
yc/PLy8vf/Dgwc8//zw8PExH7O/vp85ozhOnQyBT+2UwudsGg4HaiBqOHok8
Hs/6Ukkmd/v999//5JNPaPsLFy5QS2EqGAAAAAAAAMA6nU4nkUiCg4O5XC6N
vi2Ou5EU/ArSaDTh4eFubm7UcHw+n0kaZTuuDY1Jo+7r62tqalpcSpspwF1W
Vka/GhwcbG5upg1u3bqVnJwcGxt70aq4uDj6rrn2TW9vLx3CYDCUlpZSo9Ov
qG8iU3tVzM3NTU1N0dWjZ51AIKD+RU9FBwcH67nbzMwkj8cTiURoAgAAAAAA
AADrqqqqoqOjfX19XV1d//rXv1ocbu/evTskJEQul1dWVvb09LAdMvzL999/
HxUVxeVyDx065O/vHxAQcO3atfr6erbj2tCYQjNPnjyhntLa2qrVagsKClL/
TSaTSaVSpVJZUlJSXV1dVFSUlZWVnJwcFxf31VdfWZ+QZOYzCwsLqc+2tbVV
VFR8++235lWUN27coP2r1Wq6AbA872VQ883Ozk5NTdGVpPYSCAR8Pt/Dw8PJ
yWnLli1vvfWWxSekjY2NnZ2dvb29u7t7UFCQSCTKzs6mZjK3Be2N7dMCAAAA
AAAAeLWUlZWdOXOGw+E4Oztv3rzZ4nB77969586dKyoqamxsHBwcZDtk+Jfa
2lqRSMTn8/39/f38/PCGz1cBU4B7enp6bGxsaGioq6tLp9NVVFTcvn1boVAw
Kdjp6en0g1gsjo2N/eqrr7788kvrE5KXL1+OiYmJi4u7cePGrVu3CgoKaG8S
iYTuAXNCNx2CumdPTw8ytV+GeUqZrp7RaKyvr1epVEKhMDAw0NPTc/v27Vu2
bLH4hNy0aZONjY2trS09Rd3d3akz0kOV2lqj0bS0tNBtwPZpAQAAAAAAALxa
mNooVmo3cLlcGpUjD/GVwuTaBwQE8Hg8aqOoqCitVst2XPA7k5OTJpOJOk51
dbVSqYyPj4+Jibl8+bL16UcrvvzyS+qMsbGxtJ+vv/6aflYoFNTuFitxwwtj
crc1Gg1dZD6f7+np6eTktMzcbS8vr9DQUOqh9HVqGrbPBgAAAAAAAOCVwBRx
uHnz5pEjR2gQbWdnZ2NjYzEP0c/PLzk5Gamgr5TGxkaZTBYaGkrNd+DAAQ6H
c+bMmbKyMrbjgt+ZnZ0dGxszmUx6vb6mpkatVlOPS0hIuHTp0pdffhkZGbnS
CcmoqKjLly9//fXXYrGYboCsrKzy8vK2tjY6BB2IDsf2Gb8hmNzt1tZWlUol
EolCQkK8vb2tl7lhnpk7d+48ePBgcHAwfbG4uBi52wAAAAAAAAD/+++FWzRA
pmFyUlLS4cOHbW1taSi9adOmxYNrGllv3ryZRt+fffZZVlYWUkFfKc3Nzenp
6QKBwN/ff/fu3dRMJ0+evH37Nttxwe+Y57Wo4zx+/Linp6e9vf277767efPm
lStXoqOj/zBTe6nIyEj61uXLl2/cuEHNXVdX19HRMTAwQIegA9Hh2D7jNwST
u03PSb1eX1tbK5VKv/jiCy6Xy+FwqLtZz91+++23t23b5ubmFhgYKBKJkLsN
AAAAAAAAQEZHR7u7u3U6nVAopCG2xcG1vb09jbtdXFxCQ0OLiorYDhl+p6Wl
RaFQhIeH83i8HTt2UHvx+XylUsl2XGAZU4D7xx9/vH379jfffHPlypVLly6t
dELyn//8Z2RkZFRU1M2bN2tqagYHB8fGxmZmZtg+vzcf85IEemDSU9F67jbD
zc2NvoLcbQAAAAAAAADS39/f0NCgUqnOnj27Z88ei0PpLVu2bN++3dPT8/z5
8+Xl5WyHDL/T2dl5584dkUh04sSJXbt2UXvxeDy5XI6FrK8mpgC3wWAoKSlJ
TEyktouOjn6xFZL0xezsbJ1ONzY2huZeH93d3Xfv3pVIJPTM9PPzs14IjOHi
4sLlcoODg4VCYU5ODt7ECwAAAAAAABtZV1dXSUmJWCwOCgpydXW1OJTeunXr
7t27Ub751fTw4cOqqiqFQnH69Gl3d3dqLx8fn4SEBLzq89XEFOCmBvruu++k
Uum1a9e+/vrrlU5IRkVFRUdH0xfz8/Pb2tpmZmbm5uZot2yf35uPWVWelZUV
GRkZEBCwb98+Z2dn6xOSDg4OLi4ubm5ufD4/PDxcIpHcvXsXSyUBAAAAAABg
Y1qa8GtlbQ8NomkYznbI8DtDQ0Otra0ajSYiIsLLy+v/oBj6a6K3t1er1WZk
ZCQlJcXExKx0QvLSpUvUylevXlWr1Z2dnWyfzUak1+tVKhW1QkBAAIfDsT4h
iccpAAAAAAAAAKOhoSExMTEwMHD//v3vvfeexRH0hx9+6O/vHxERkZ2d3dbW
xnbI8DsjIyOdnZ21tbWXLl06cOAAtRc1ZWRkpFar7ejoePz4MdsBgmVGo7Gm
pob6VEpKSmxs7EonJL/66qtvvvnm+vXrd+/e/fnnn9k+m42Ied9FdHT08ePH
3dzcXFxcHBwcrE9IOjo6cjgcLpcbFhYml8t1Ol1XVxf107m5uefPn//6669s
nxYAAAAAAADAmrt37x6Npn19fV1dXd99912LI2j6VVBQkFgsLikpobEz2yHD
7zx9+vThw4etra2xsbHe3t7UXnv37j137lxRUVFjY+Pg4CDbAYJl/f399+/f
z8vLS01NFYlEK52QvHLlSmJiYlpa2vfff9/T08P22WxEExMT1Ih6vb6wsJB6
3zLL3DA1wnx8fMLCwiQSCT1XOzo6pqamUB4dAAAAAAAANgiNRhMeHm59bY+H
hwcNnJVKZV1dndFoZDtk+J3JyUmTydTd3Z2QkODj44P2el0MDAw8ePBArVZn
ZGTExcWtdELy6tWrUqkUrfwqoN5HD1Jz6W16llqfkGQwudtisVir1Y6Ojk5N
TaEsEQAAAAAAALzBzKV+afBbWFgYEhJCQ2NHR0d7e3uLA2ekAL/KZmdnx8bG
TCaTTCbz8/OztbV1d3c/deqURCLRaDSomvHKGhkZ+emnn+rq6lQqFTVWVFQU
9bJ//vOfK5qQzMnJqa2tNRqNCwsL1Kl/++03tk9rIxoaGmppaaHuJhaLP//8
cy6Xu2vXrq1bt1JntLGx2bRpk8XnKpO7Tb01NjaWboP6+npqSuRuAwAAAAAA
wJuKBryzs7NTU1Pffvvt8ePHHRwc7O3tafhsceB88ODBuLg4vV4/MDAwMTHB
duzwO+amnJyczMrKOnr0KLXj7t27T5w4IRQKVSoVtRrbAYJl1GSPHj366aef
Kioq0tPTL1++/OWXX0ZGRi5zQlIkEslkspycnJqamt7e3vn5ecxisYUepEND
Q93d3Vqt9tatW9T1qANSN6TOaGdnZ2NjY/G5yuRu792798iRIwKBgBq0vr4e
udsAAAAAAADwppqbm6Nh7+joqFwu5/F41lMLaQPaDBmFrziVShUYGOjg4ODm
5sbn88PDwxUKRUtLC9txgWVMH9TpdEqlUigUXr58OSoqakUTkrm5uTU1Nb/8
8svs7Oz8/PzCwgLbp7WhUWt2d3dTg1Lr0GPT+n/0MGgzFxcX6rYCgYB6MZ60
AAAAAAAA8KZaWgllqT/96U+bN292dHQMDAxUKpVYt/OKKyoqCg0NdXFx2bNn
j7+/P/0sk8kaGxvZjgssY1Yp6/X6srIyqVQqFou//vrrf/7bf0w/0idRUVGX
Ll2iP82/pS1pe2pilUp179699vb2np6ex48fT05Oop+yhS6+ealkfn7+hQsX
eDyep6cndcllLpX08/OLjIykBq2pqfnpp59GR0dph5iZBAAAAAAAgDfG4OBg
Y2NjUVHRuXPn9u7da3GYvHnzZmdnZw6HIxAIiouL8WazVxxTn+jAgQN+fn6B
gYGJiYkNDQ1sxwWWMe9xNRqN9+/fV6lUaWlp8fHx5jdJ/secZFRU1OXLlxev
orx06dLXX38tEolSUlKysrLUanVNTY1erzeZTGNjY7Ozs2yf30ZErTk5OTk6
OtrU1JSfn0+tExwc7OXl5ejoSI9TOzs7i09aW1tbe3t7BwcHV1dX6rn0vKWe
W1ZW1t3dPTQ0RDtk+7QAAAAAAAAAVsdyysIyNReioqK0Wi3bIcMfoDailqL2
8vX15fF4fD5fJBLV1tayHRf8geHhYYPBUF1dnZ+fn5ycbLG6zaVLl4RC4dWr
V+lP+nnxry5fvhwTExMfH69UKmkn1LVNJhNmsdjF5G4nJCQcO3bMetWwpbnb
9FimhzN9nXZCu2L7bAAAAAAAAABWh16vV6lUQqEwICCAw+FYHB07Ozvv27eP
Nrh27Vp9fT3bIcMfqK2tFYlEfD6fx+P5+vpiJvkVx6ym6+zsrKqqysvLS09P
T0xMvHLlijkXO2uRnJycgoICtVr97bffpqam0gaxsbHR0dHMhCR10rS0NNqm
oqJCp9N1dXUNDQ2NjY1NT0+jAPf6Y3K3i4qKzOskqUvSk9b6WyWZ3G1vb++Q
kBD6Yn5+flNTE3K3AQAAAAAA4M3Q0tKiUCjCw8N5PN6OHTssjo63b99+6NAh
gUCQnp7e3NzMdsjwB3Q6nXnJK5/P53K5bm5u1L4ajYbtuMAyZs6qtrY2Pz8/
KSkpISFBLBbHx8dnZmZSwzUt0tbW1tHR0dnZef/+/dLS0qysrJSUlNjYWPOE
JP1w7do12gN9mJqaWlBQoNVqW1tbe3p6njx5ggLc64+ZbTYYDNQWSqUyIiKC
HrbWl0oyudvvv//+J598QttfuHCB7g3kbgMAAAAAAMCbgZm84nK5NEa2ODrm
cDgBAQFCoVClUun1erZDhj/ATDJTq3l5eVGzhoaGFhUVsR0XWMZk9RYWFlJn
vHjxIvW1uLg4+rm0tNRgMMwuwlTQHhoaam1t1Wg0WVlZYrGYvhUdHR0bG7t4
zST9TL81T2n29fWhADeLmFrq9BQVCARubm7UMR0cHKznbjMzkzweTyQSIXcb
AAAAAAAA3gxVVVXR0dG+vr6urq5//etfLQ6KP/7449OnTysUCtq4t7eX7ZDh
D7S3t+fm5kZFRZ04cWLPnj2Ojo4nT54sLCxkOy74HWbtXFdXV21tLTVQVlaW
VCqNi4tLTU3Ny8vTaDTNzc0DAwPzizBLHJ8+fUqdsbW1taysLC0tTSgUxsTE
fPPNN9cWSUlJycjIUCqVpaWldXV15gLcQ0ND4+Pj09PTtDe2r8EGwtRSr6+v
l8lkAoGAz+d7eHg4OTlt2bLlrbfesvjstbGxsbOzs7e3d3d3DwoKEolE2dnZ
9Bw2L5WkvbF9WgAAAAAAAAAvoqys7MyZMxwOx9nZefPmzRYHxfv374+MjNRq
tR0dHY8fP2Y7ZPgDnZ2dd+7cEYlEQUFB7u7u9vb2n376aX5+Pttxwe8sztQu
KCiQSCRSqVQul2dkZBQXFzc0NNCvHj16NDExsbAI8xLI2dnZp0+f0h50Oh01
blxcXPy/Xbt2LTk5OTU1VaFQpKWlyWQy2nN6erpSqVSr1VVVVW1tbX19fSMj
I9PT02xfgw1kcS31+vp685t7AwMDPT09t2/fvmXLFovP3k2bNtnY2Nja2tLz
mfoyj8ejx/X169c1Gk1LSwu1PtunBQAAAAAAAPAiaFxMg2LrFRZ8fHwSEhJQ
tPd1sbRyOp/PVyqVbMcFv7M0UzsuLi4jI0OtVj948GBgYGCZ+2Ga2/zyyfj4
+NTUVGrukpKSrKys5ORk8+JJkUhEv8rOzq6oqGhvb+/r6xsfH1/TEwSLmNxt
ajVqGuqbnp6eTk5Oy8zd9vLyCg0Npeamr1PTs302AAAAAAAAACvALK+Sy+U0
Iqahrp2dnY2NjcVsQdqANjOZTGNjY/RFtmOHP9Db21tVVaVQKE6fPv3xxx9T
Ux4+fFgqlVJzU6OjBdn17NmziYmJ4eHhzs7O/8jUpiYrKyt78ODBit4TODAw
oNPp1Gp1ZmZmSkqKSCSivZnTtOnDgoIC+pn2LJPJrl+/npGRkZeXx2RwG41G
imRqagoFuNcNk7vd2tqqUqmovUJCQry9va2XuWGexjt37jx48GBwcDB9sbi4
GLnbAAAAAAAA8BphXkBHo1ofHx9bW1sa8G7atGnxEJjGv5s3b6YxcmBgYE5O
zuTkJI2jaTTNduzwB/r7+xsaGlQq1dmzZ/fs2UNN6e3tHRsbS81NjU5Nz3aA
G9rExAQ1kMFgqKqqys/PX5ypXVZWZn5p5Ojo6PLnjZmVliUlJenp6TExMSkp
KUql8u7du99//31tbS396rvvvsvNzZUuwrxYkiIxmUwowL1umNztoaEhvV5P
DUTN8cUXX3C5XA6HQ89b67nbb7/99rZt29zc3OixTE9v5G4DAAAAAADAa4Qp
0RsREeHl5WVxCGxvb0+jY9Rofu0sbVz6k36mT+hzzF2wa3h42GAwVFdX5+Xl
JSUlvXCmNmNmZmZsbGxwcLCuri4rK0soFEokEqVSSc3NFGVub2+nv9JR6Igx
MTF00KtXr5qnJSkS2gYFuFlEzWR+wQKXy6XnrfXcbYabmxt9BbnbAAAAAAAA
8Bp5+PAhk9Xr7u5uccD7zjvv7Ny508vL6+LFi5WVlWyHDMvFLH+NjY319vam
ptyzZ8/Zs2dVKlVDQ0N/fz/bAW5Es7Ozo6OjAwMDbW1t33//fV5e3s2bN1NS
Ul44U5thrtY9NjZGey4pKZFKpWlpabTzrKys8vJy+nBoaKirq6uxsVGr1arV
ajpcUlISszKT7gr6nO4Wcw0dFOBef3Tl7969Sy0SHh7O5/Pd3NxcXFwcHBys
T0jSNlwuNzg4WCgU5uTkMJPPbJ8NAAAAAAAAwH/FFGI+ceLErl27LA54nZ2d
9+3bFxAQcO3atfr6erZDhuViXhAqlUoPHz5MTfnxxx+fPn1aoVBUVVX19vay
HeBGZE6sfvDgwd27d7Ozs5OSklJSUlJTU184U5uxsLAwNzc3MzNDLWsu35yZ
mSmTycRicV5eHn3S19dnNBofPnxIG9CBKioq6HO6Gej2oG3oT/qZPqmsrGxp
aUEB7vXHJN3n5OQIhcJlLpV0cHCgbdzc3Ph8fnh4uEQioVsLSyUBAAAAAADg
VdbS0qJQKGgYy+PxduzYYXHAS5/Tb2kb2pK2ZztkWDGlUsnn85Hd+SoYGBh4
8OCBWq3OyMiIi4t7+UztpZYmg6emplZUVFCLm0ymycnJxduoVCqpVCpchIKh
2wMFuFnEFEyn3kp91vqE5NKlkvRFnU7H9kkAAAAAAAAA/FcNDQ2JiYmBgYH7
9+9/7733LI5zORxOQECAUChUqVR6vZ7tkGHF8vPzP/30U3t7e3d396CgIJFI
dOfOnc7OTrbj2kCYTO3m5uaysrKMjIzU1NSUlJSkpKTs7Oy7d+++cKb2Uky5
nIqKCoVCERMTI5PJCgoKtFpte3u7yWRaWFh4+vSpeZv79+9TPEqlkkKSSCTx
8fEUWE5ODgpws2hoaKilpUWj0VBXpYezm5vbtm3b3n77bYtFxxiOjo70rOZy
uV988YVUKq2traXHNe1qbm4OhYoAAAAAAADglXLv3r3o6GhfX19XV9d3333X
4jgXy+ped4WFhSdPnnR0dNyzZ8+JEyeioqJyc3Pb29vZjmsDYTK1y8rKFApF
XFxcSkrKzZs38/Lyvv/++7a2thfO1F7q2bNnExMTw8PDzc3NarU6KSnpxo0b
aWlpdFytVkthzM/PT09PP336lLYxGo16vV6n01HvViqV1M0pMNoeBbhZNDU1
NTQ0RC1VXFwsEono8Xvw4MGdO3fa29vb2dnZ2NhYfFAz1ce8vb1DQkLoiyqV
qrW1lfZG9xW1HdunBQAAAAAAAPD/0Wg04eHh1qsneHh4hIWFKZXKuro6o9HI
dsiwYkVFRaGhodTEXl5eAQEByL5ff0sztZOSkvLy8qqrqw0Gw/Dw8FoctLe3
V6vVMksfhUIhHbG1tXVxKe25ubmpqSkU4H41Mbnb1H+p89Ij2t7e3tbW1nru
tpOTk6enJ5/Ppxanr1PjUhNTQ7N9NgAAAAAAALDRPX/+fHZ2dnJysqCg4NSp
Uy4uLo6OjjTUtTi8PXDgwOXLl+vq6jo7O0dGRtiOHVaMmXbmcrl8Ph9vmVs3
SzO15XK5VCql65+fn19VVWUwGPr7+ycmJtbi6ENDQ62trczSR6FQyCySNJlM
U1NT//v/HgX0c19fH21Mv71z505mZiZtf+PGDZlMtrgA988//2xeyUmPDkxw
rQMmd/v69etnzpzh8Xju7u7Ozs7Wc7e3bNmyfft2T0/PwMBA86s26uvrjUYj
crcBAAAAAACAXbOzs2NjYyaTKT09/ejRo9YX3hw6dCg5OZnGsyMjIzMzM2zH
Dium1WqjoqK4XK6vry+Px+Pz+SKRqLa2lu243nxLM7WlUmlWVlZhYSFd/87O
zuHh4YmJiWfPnq3F0cfHx/v6+pilj0KhkI6uUqkWL8v89ddfnz9/Pjc3RxsP
DQ319va2tLTcu3ePIszOzk5NTV1cgLu8vNz8rkva0lwcB9YUk7tdVVVFzUHd
NigoyN3d3Xru9ltvvbVlyxYnJycPDw/q7AKBQCaT1dfXI3cbAAAAAAAA2DU5
OWkymWicm5CQ4OPjYz0BkIa0SqWS7ZDhxdXW1opEImpHHo/n6+vL5XKjoqK0
Wi3bcb35lmZqSySSwsJCnU63WiVsrGDSselw1IWFQqFYLJbL5dZfv2CeRKWv
FBUV0caLC3DTX+nD9QkeFmMahToy9eJl5m7TZi4uLm5ubgKBQKVSIXcbAAAA
AAAA2DUyMtLZ2VlbW3vp0qUDBw5YX2Zz6tQptVrNdsjw4pha6n5+ftTcbm5u
4eHhGo2G7bjeNL/99tuvv/66sLBgnvDv7e3V6XQlJSWLM7ULCgqo363PIkMm
HVuv15eVlUkXKS0tbW9vHx8fn56enp+fX/wtisq8Ku/Bgwfl5eV5eXkKhYK+
IhaLU1NTs7OzCwsL792719LSQidIW9JOkAu81phGyc/Pv3DhAo/H++STT95/
/33rM5NMmRvaPiIiQqlUarVag8GApHsAAAAAAABgRX9/f0NDg0qlOnv27J49
eywOZpkXkZ0/f768vJztkOHFNTY2ymSy0NBQf39/am4XFxf6uaioiO243jTm
9Of5+flHjx79+OOPWq329u3baWlp/5Gp3dXVtT4zQkw6ttFovH//PvV3hUIh
kUiuXr1qXiTZ19c3MjIyPT29+Fu0PcVmfvXlzz//bH6xJH1XLpfTXXTjxg3a
Q2Zm5p07d8wvlqSdIBd4rTGN0tTUlJ+fLxKJQkJCvL29rb/+19bWln7l4ODA
4XB8fX2Dg4Ppi9TxkXQPAAAAAAAArGCKt9IQ1c3NzeJglinVivcNvu5aWloU
CkV4eDi1JjW3g4NDYGCgSqViO643zcLCwvz8/OzsbFdXV0VFxeKK1euZqb3U
8PCwwWCorq7Oy8ujkCgeZpFkX1/f+Pi49dOhmOm7SqWSvnX16lX6Op0U7YdO
kB4jtBPkAq8bJnebeXq7uLhQj7aeu80slTx27FhCQgKS7gEAAAAAAIAV7e3t
ubm5UVFRR44c+eijjyyOYWn0yuVyUZH5DaDX61UqlVAoPHHixO7du+3t7QMC
AnJycpBpuyqYTO3x8fH+/n6DwVBVVZWfny9ZZD0ztZeamJgwB1ZRUaFQKGJi
Ym7cuEE3gEajaWlpefToEQVPp0AnsvhbzIJPk8lE362rqystLTVPS9LXU1JS
6Lzor7QTej7QPWY0Gte0Rg/876Lc7bKyssTERIFA4Ofn5+rqaj13287ObvPm
zY6Ojl5eXuZ1knR/NjU1IXcbAAAAAAAA1hOTw3vw4MFt27ZZHMN+8MEHPB4v
PDxcoVC0trayHTK8OGZB7KlTp9zd3W1tbfl8/q1bt5BpuyqYibv+/n7qWaWl
pTk5OampqfHx8axkai/17NmziYmJ4eHh5uZmtVqdlJSUkpJCEWZkZFRWVtLt
QcEvnZpmJlrpPqHvGo3G9vZ287Qkc4J0U9FOlEplWVnZ/fv3DQYDXQQ61jqf
4MbB5G7/9NNPNTU1KpUqMjLSz8/Peu62jY2NnZ0d/ZY28/T0pAf7hQsX8vPz
kbsNAAAAAAAA64kpu0yDUycnJ4tjWA6HExAQIBQKacyr1+vZDhlenNForKur
UyqVYWFhHh4e1Lg8Hk8ulyPTdlUwqc0Gg6G0tFQikYjFYupfr2BZ6t7eXq1W
m5GRQUHGx8dThHl5ea2trRQ8nQKdiPWvj4+P9/X1tbe3azQa2sniAtxSqZQe
FNXV1XQRhoeH1+d0NjKmhDpddoFAsMzcbeatkvQEoFv01bkzAQAAAAAAYCOo
rKy8ePGil5fXzp0733nnHYtD148//vj06dMKhaKqqqq3t5ftkOHFDQ4ONjY2
FhUVnTt3bu/evdS4Pj4+CQkJ3d3dJpMJ66NezNJMba1Wq1QqxWJxSkpKenp6
VlZWWVnZDz/88OqsQ6MwWltbNRoNxSmRSIRCIXVwCtt8J0xNTVn/+vT09MjI
SF9fX0tLCz1DFhfgpj/pZ/qkoqKiubkZBbjXGlNCvb6+XiaTCQSCI0eOUO9e
5lLJ3bt3nzhxgm6AW7dumW8Aaq8/vAEAAAAAAAAAXkZJScnf//73Dz74YOvW
rX/+858tDl33798fGRlJY9WOjo7Hjx+zHTK8OGo+akRqSmpQalZqXC6XKxQK
sT7qZSzN1Da/X1EkEqWnp9+5c6euru7HH380Go2vzpv6li5xXNHKRjrZ6elp
2smjR4/ozllcgJv2I5FIkpKSFAqFWq1GAe61triEen19PbVCbGzsqVOnqGtz
OBxHR0eLT/VNmzbZ2NjY2trSk3/Xrl208eeffy4Wi81vEx0aGmL7tAAAAAAA
AOBNRqPXwMBA63UQsIjujcFU5hUKhVwulxrXy8srIiJCo9G0trZiFuLFWMnU
zsrKqqurGxwcHBsbm5mZYTvS/x+T50s3g1KppFApZrlcTj9TwEajcZn7QQHu
VwfTplqtllozODiY+riLi4v13G2Gm5ubuXIZtRe1JttnAwAAAAAAAG+gmZmZ
kZERo9EolUr9/f3t7e3t7OxsbGwWj0+Zl4wdPXo0PT3dZDKNjY3Nzs6yHTu8
OKYyb0JCgo+PD7Wyu7s7k4//8OFDtgN8nSwsLMzNzVFXevLkCXUli5nalZWV
er2eOs6KFkYya96ePn06ODhI7dXb29vf3z+0CP2VPqRf9fT0UMNRANSjlz/n
yeT5UnhlZWXSRUpLS9vb28fHx6enp+fn55cTqsUC3Izc3NzvvvsOBbjXGtOm
HR0dJSUlEokkLCyMurn13G0GbcblcoODg2NjYwsLC6mxUJYIAAAAAAAAVtfI
yEhnZ2ddXd1XX33l7e1ta2trY2OzadOmxeNTGsDSMJZGqadOnSooKJicnETG
5euOqcwrl8t5PB618q5du06cOCESie7cuUO3BNsBvk7MF3NsbOznn39uaGiw
mKmt1+sfPXo0MzNDG/9hpRgGM7P08OHDxsZGjUZTVVVFh2hdhP5KH9KvKisr
6Qc6FjUf9etlHmJxnu/9+/dVKpVCoZBIJFevXjUvkuzr66O9TU9PW9+PlQLc
eXl5GRkZ169fl8lktHMU4F5rTJs+fvy4q6tLp9NRNw8LC7Oeu81wcHCgp72b
m9vx48ejo6PplqB7jFqK7dMCAAAAAACAN8fSastWxqfh4eEajYbtkGE1UdPz
+Xxq5R07dvB4PGpihULR0tLCdlyvk5mZmbGxscHBQZ1Op1arVzFTm8m9bW1t
LSoqoj1T66hUKs0izBSiXC43T/etKNWaMTw8bDAYqqur8/LykpKSLl68yCyS
7OvrGx8fX+kOmbdTVlRUZGdnx8fH0zWJiYlBAe71R3cm3SErzd3mcDgBAQHU
XtRYer2e7ZMAAAAAAACAN0d3d7dGozGPVd3c3CwOS999911XV1dfX9/o6Oh7
9+6xHTKsptu3b588edLR0XH37t3+/v4CgSA9Pb25uZntuF4DTKb2o0eP9Hp9
XV1dcXGxQqF4+Uzt2dnZp0+fDg0NmXOfabdFRUXmP2mH9fX1FldIMmWyMzMz
a2pqVpq7PTExYa4MToegPVy9elUmk+Xm5pqLm9A50vn++uuvv/322zJ3yBTg
bmtrowjVajVFSJeFgkxLS6ND5OXllZeXNzY20lNoYGBgdHR0pStIYZnoCt+9
e5eufHh4OJ/Pp0e9i4uLg4OD9QlJZ2fnffv2BQQEREZG0s2MilcAAAAAAACw
WvR6vUqlEgqFNOrkcDgWh6Xvvffe/v37AwMDExMTGxoa2A4ZVlNZWdmZM2eo
6Q8cOHDkyJHQ0FCZTNbY2Mh2XK8BJlObOlFlZWVWVpZcLk9KSnr5TO2nT5/2
9vYyqyL/8Y9/0J/0M33S2dn58OFDi++QLC4upkMHBwdHR0dnZmauNHf72bNn
ExMTw8PDLS0ttCupVJqampqWlpaRkUFnR/ufn59//vz5r7/+uswdMgW4Kcie
nh4mg1upVN68eZNuM3Olm4KCAo1GY57sWunMLSwTU8QqJyeHnvbLXCq5efNm
Z2dnejj4+fmdPXuWbsK7d++izA0AAAAAAAC8vJaWFoVCER4ezuPxduzYYXFY
imTeN5hWq42KiuJyudTEAQEB5uq6Op2O7bheA0ymdl1dXVZWlnCRl8zUHhoa
am1t1Wg0YrH4888/p9b5xz/+UVxcbL0+NdOU1IgUwwvnbjOvcZDL5RQA7Sov
L4/imZ2dnZ+ff4Hli0wB7r6+vqamJjovuj6054sXL9LO4+Li6JZTq9V0172C
VcjfMMtZEr8UU+YGDwcAAAAAAABYFfX19deuXQsICNi3b5+zs7PF0SjKnbzB
qqurr1y5wuPx/Pz8/P39+Xw+NXRtbS3bcb26lmZqU79IT0+n65acnHzz5s28
vLyqqirqKS+cqU37VCgUX3755T//+c+LFy/+4x//oL/qdLqpqSkr9aSo1SgG
asGgoKC///3vERER2dnZP/7440pPkHmZpEqlkkqlQqGQjq7Varu7u00mE8Ww
0h0yBbifPHnS09PT2tpKeysoKEhNTaX9SySSpKSkW7duFRUV0UGbm5vpQHQR
6FLQya70WGAdXdiWlhaNRkO3SmBgoJub27Zt295++22L5cwYjo6OHA6Hy+V+
8cUX1GR0p9GdT7uie3tFi2YBAAAAAAAAzCorKy9evOjl5bVz58533nnH4mjU
3d399OnTCoWiqqrq4cOHbIcMq4mZkfb39z906BCXy42Kivr+++/ZjuvVtTRT
Oz09PSUlRSwWZ2dnl5eXt7a2/vLLL8PDwy+cqW1etOzj40P9Lj4+vri4WKfT
9fX1WZ//YQqXfPbZZ0eOHOHxeFeuXKmurl7pCU5NTZlMpu7ubq1WS5G8fA0a
pgD39PQ0XbehoSFz6eeKigrabUZGRkJCQnJyskwmoyt5+/bte/fu0UWgS0EX
ZKXHAuuocen6L07wP3jwID387e3t7ezsbGxsLP4TQL91dHR0cXHx9vYOCQmh
L1LDURtZnyEHAAAAAAAA+G+KiopCQ0NppEnjTRp1WhyNenl5RUREaDQaGoHS
YJbtkGE1MbNYfD6fy+WilvofWpqpLRKJxGIxXcbS0lKDwfDCqc1MpvaXX37p
4+Pj4OBw7NixW7duWc/UZjCvXwgICKA+S52aujZ18JWGwWRYUzB5eXl0gnR2
crn8hXPAl5qcnDTPeVZXV9Nu4+PjY2JiLl++fPHiRToWXVU8bdYak7tNNwnd
LXSz0fPf1tbWeu62k5OTp6cnPSvorqCvL/POBAAAAAAAADB7/vz57Ozs5ORk
Tk5OYGCgo6Pj5s2b7ezsFo89N23aZGNjQ0NUHx8fkUiENUtvpMbGRplMFhoa
6u/vv2fPnheexXrjMV1mYGCgo6Njcaa2VCpVKpWlpaV0Mfv7+1da/MWc0Tw3
N0ddjPbz5Zdfnjp16m9/+5ubm9uZM2foKMtch8ZMSB45csTd3Z069cmTJwsL
C1d6pkyGdXd3d2VlZUZGRlpamjm9uri4mI4yPDw8MTHx7Nmzle6ZQaczNjZm
Mpn0en1NTY1arc7Ozqb70FygnA6XlZVVVlZmrnSDAtxrgcndvn79Ot1mPB6P
7hlnZ2frudtbtmzZvn27p6cn/ashFApVKlV9fb3RaETuNgAAAAAAACwHMyEg
l8v5fL7FfD36K31Iv6INaDO81e2N1NzcnJ6eLhAI/Pz8XF1dHRwcAgMDVSoV
23G9cpgu09bWVl5evjhTW6lUarVag8HQ398/Pj6+sLDw66+//vbbb8vcs3mq
c2pqSqPRREVF+fj4/O1vf6PmoH4XGxtbVVW1zNkeZkLS399/165d1HM//fTT
/Pz8lZ4pk2H96NEj85xVbm6uTCa7evVqZmZmZWWl+UwnJiZWumcGM7v7+PFj
cwHu2tra4uJiuqppaWnmq0o/UPAowL1GmNxtusGys7NFIlFQUJC7u7v13O23
3npry5YtTk5OHh4edH/Sc4NujPr6euRuAwAAAAAAwHIwKZMJCQk+Pj4Wx562
trY0OMUM1ZttaZl1Pp+vVCrZjuuVw3QZ5s2Kq5WpPTc3NzU1NTo6euvWrWPH
jlGPc3Nzo1ZYaV37VW/K8fHxvr6+9vZ2OkGpVHrx4sWkpKS8vLwXfpnkUijA
zTq68eiupitM9zPdOcvM3abNXFxc6EYVCAT0rwNytwEAAAAAAGA5Hj9+3NHR
odVqIyMj9+/fb3HI+ec//3nr1q0ffPDB3//+95KSErZDhjXR2dl5584dkUh0
4sSJXbt2UbvzeDy5XD46OooFaf/7/0rY0NXo6elpbGysqKjIz89PTU19+Uxt
xsjICLVCbW2tUCj09fW1t7ffu3fv6dOnqRUqKyt/+eWXZe6HeR2ot7f39u3b
bW1tjx49mpubu9J4GNPT0xRbX19fXV0dnenVq1dp/wqFQqVS3b9/f1USdV+s
APfY2BjFttKVqGAR3d7mpZJ0Y1+4cIG6/yeffPL+++9bn5lkytzQ9hEREcwi
YTw3AAAAAAAAwIre3t6qqiqFQnH69OmPP/7Y4pDznXfe2blzp5eX18WLFysr
K9kOGdbEw4cPmTvB3d2d2t3HxychIcE88zM5Ocl2gCxjpmvq6+vVanVqauqN
GzeuX7/+8pnajF9++YX6l1wuDw0N9fDwsLW19fb2jo6Orq2t7ezsHBkZWeZ+
aHuRSMTn8/ft27dt27YXTtlmzM/PT09P06kxiyQZZWVler3+5RN1X6wAd09P
z5MnT154BhgWY6bcm5qa6G6hWygkJITuQOuVzpj18xwOx9fXNzg4mL5YVFSE
5wYAAAAAAABYodfrabwvFAoDAgJoRGlxyMkUVKWRZm1tLdshw5pgKjtHRER4
eXlRu3O5XLoxzC/uGx0dZTtAljEJrYWFhRKJZHEq8UtmajOWplozi1RXlAar
1WqjoqLMpdJdXFxW8WULRqPRvEiSohKLxXQF6Ge6JmuRqLucAtxNTU19fX0v
f+VhMeZWN6+zZe4i67nbzFLJY8eOJSQk4LkBAAAAAAAAVrS2tjJzIB988IHF
kea2bdsOHjwYGhoqk8kaGxvZDhnWBDMLIRQKuVwutfv+/fsjIyO1Wm1HR8fj
x4/ZDpAdzLKxrq6u2trawsLCrKwsqVQaFxdH3SEnJ+flM7UZDQ0NiYmJgYGB
1N127drl6OhIPyuVymWuP2SKdBcXFwsEAg6H89FHH+3cuXMVX7YwPDxsMBiq
q6tVKhVdBLpVMjIyNBpNe3t7X1/f+Pj4yx+CwRQPoiPW1dXRSdGlSE1NXVyA
mz6kRqGj9/T00C1KLYWKKi+PWQxcVlZGN+TiQldWcrft7Ow2b95MN62Xl5d5
nWR+fn5TUxNytwEAAAAAAGApZhkMl8t1cXGxONL86KOPjhw5EhUVlZubS2N/
tkOGNbG0vNHevXvPnTtXVFTU2Ng4ODjIdoDsYCZnamtrCwoKqLNIpVK5XJ6R
kXHnzh368OUztRn37t2Ljo729fXdv3+/u7s7h8MRCATFxcXLfEMjU6RbqVQG
BgY6Ojpu27bN1dV1FV+2QDv/j4I+dEHocBqNprW1lS7Uyx+CwRTgHh4eNhqN
P/30U0NDQ2lp6eIC3DKZLDs7W61W19TU6PV6im1sbIy+tYphbEDMJDxdc7qw
KpUqMjLSz8/Peu62jY2NnZ0d/ZY28/T05PF4Fy5cyM/PR+42AAAAAAAALMW8
bo6GkE5OThZHmm5ubsHBwRKJRKPR0OiS7ZBhTTAlnuVyOY/Ho3b38PAICwtT
KpV1dXVGo5HtANmxNFM7Li4uIyNDrVY3NDT09vauYr4w9a/w8HDqbtQZvby8
uFxuVFSUVqtd5teXtuCqv2yBqYXd2tqal5cnFArj4+PpstAFoTjparz8Iaxg
3irAFOC+fPlyTEwMxUB3aXV1NbWUyWTC3NdqYe4olUolEAiWmbvNvFWSbkK6
8ZC7DQAAAAAAAEuVl5efP3/e09Nz+/btW7ZssTjA3LNnz9mzZ2lM2tDQ0N/f
z3bIsCaY9XW3bt3i8/m2trbu7u6nTp3amBPRVjK1FQpFWVnZgwcPfv755+Hh
4VWsqFJUVBQaGuri4uLm5sblclc6kcgU6b506dKBAweo5+7YsYPH44WHh1PM
LS0tLx8hUwub7ofKysqMjIzU1NSUlJSkpCS1Wt3c3EwXZGJi4tmzZy9/rKWe
Pn3a29vb2tp6796927dvp6eny2Sy5OTkhIQEioQeUBUVFTqdjpoMBbhXBfNM
qK+vp0stEAiOHDmyd+/eZS6V3L1794kTJ4RCIT1StFqteakk7Y3t0wIAAAAA
AAD2qdXqU6dOOTk5bdmy5a233rI4wDxw4MClS5dWWuoXXi/MGwhzcnICAgIW
zyeoVCq9Xs92gOvKSqZ2WVlZc3PzwMDAkydPVnfKi65zYGDg4oLFdFydTrfM
rzNFukNCQv7nf/5nLdY2M7WwHz161NLSQrulu+XGjRsxMTEKhaKiosKcwD4x
MfHyx1pqdnb26dOn5nahJqiuri4qKrp161ZSUpK5gVJTU6mxtFotCnCvCuaZ
YDQa6+vr6f6MjY2lfy+4XC7doo6Ojhb/vdi0aZONjY2tre3WrVt37dpFG3/+
+edisZjuFrpnVjevHwAAAAAAAF5TSqWSz+dbT8Hz8fFJSEhAOuQGwUyLubm5
0b2xiuvrXiNWMrUfPHgwMDCwFgdlOuOLrWxcWqTby8srIiJiLV7wOD4+3tfX
197eXlpaKpVK6fokJSXl5eVVV1cbDIbh4eFVPNZSMzMzY2Njg4OD1EDUItRA
1DpCoRAFuNcIk7ut1WrpClt/5/BSeOkHAAAAAAAAmNGIfmRkxGg0JicnHzp0
yOIoknkV2NGjR9PT01EwYoNgEofNlSlWuk7vtcaswdPr9TU1NRYztdfuhXi5
ubnU16jfffTRR35+fsuckGSWsVVVVcXGxvL5fC6Xa37d3/Hjx69fv97a2trb
20vntYqhTk9P0wOkr6+vrq5OqVRevXqVbhKKVqVS3b9/nx4syyzE82LMCfX0
ODJPGms0mvz8/LS0NBTgXiNM7nZHR0dJSQm1dVhYmI+Pj/XcbQZtRvckPUno
/qQ+RZ1r7ZbRAgAAAAAAwKvM/Lq5urq6y5cvm183txQNM2mwSWPJU6dOFRQU
YES/QTClVby8vHx9fVexJMqrj3lLYWVlZW5ursVM7dHR0TWals/Pz//000+p
3+3atcvf33+ZE5LMZNGdO3fOnDmzuCbO+fPnCwsLh4aG6LxWN+b5+fnp6enx
8XFmkSSDLpRer6d41u5xsbCwMDc3NzMzQ21BLWKelqTjogD3GmEmvR8/ftzV
1UVXmzpFWFiY9dxthoODg/nNqMePH4+OjsbriAEAAAAAADYso9FoXtpEg0oP
Dw/ro8jw8HCNRsN2yLBOtFptVFQUd5EV1Xp+rS2t47wOmdqMF0uWZ9Jpb926
dezYsRd+BeWLYZ4kcrmcrphQKKSf6aAUD0VFsa3p0RkowL3OqInp7lpp7jbd
mQEBARvztbQAAAAAAABAurq6SkpKaOQeFBTk6upqcfD47rvv0q98fX2jo6Pv
3bvHdsiwTmpra0UiEZ/PP3To0IEDBzw9Pc+fP19eXs52XGtodnbWvNaupaXl
u+++W7zQLjMzc60ztRl0oDNnznA4nP379/v7+1ufUVxacOTixYuHDx92cnLi
crmhoaEUPPVx6ulrGvPw8LDBYKiurqYApFKpUCjMyMjQaDTt7e19fX3j4+Nr
enTG0gLc5vLf169fVygU9AkKcK8u6g53796l+zM8PJyeFeZXBDg4OFifkHR2
dt63b19AQEBkZCT1MmqRdehWAAAAAAAA8Opoa2vLzs6OiIjw9/f/8MMPLQ4e
33vvvf379wcGBiYmJjY0NLAdMqwTZu0T3Rt0A3A4nDNnzpSVlbEd1xoyl7B5
8OABnWZmZubiVxF+9913LS0ta5qpzaiqqoqOjvb19T18+LCfn5/1ZHkmU7u+
vl4mkwkEgqNHj1J7ffDBBwEBAfRFrVbb0dHx+PHjNY2ZAjCZTHT16HAKhUIo
FNLNo1Qq16KSjhVLC3CXlJRQGFKplC5O6r+hAPcqYqo+5eTkUKMvc6nk5s2b
nZ2d6ZFCt/fZs2fpVrl79y7K3AAAAAAAAGwcy0m4e7FSv/C6Y4o1BwQEeHl5
0e0RGhpaVFTEdlxraGBg4MGDB2q1OiMjIy4ubnGx5vWcVWN6JV156nrWk+WZ
TG2VSiUQCNwWob/Sh+uTNL2wsDA/Pz87O0sXKi8vTygUxsfH01nQlaTIe3t7
1/ToSzEFuJuamsrKyiiMpKSkmJgYFOBeI93d3XRJzfct3XvWJyQZTJmbjVMw
CwAAAAAAAEh1dfWVK1d4PN7u3bu3bt1qcczo6uoaFBS0Pomf8Opob2/Pzc2N
ioo6ceLEnj17HB0dT548WVhYyHZcq4/J1G5ubjZPXsnlcqlUKpFI6ApUVlau
RX1qK5gXKYSHhx87dszLy+uLL75IT09vaWnp7Ox8+PDh0NBQf38/hWRez6nR
aJRKJXXkkJAQX1/fo0ePnjp1ir5LX2loaFjTsjIMc+b4/Pw8s0gyLS3txo0b
SUlJarWaLuzw8PDExMSzZ8/WNAwGU4C7p6eHjk4hURgUFcUjk8lu3rxJV4wu
ck1NDTUuxfzo0aPx8fHp6Wk6hfWJ8A1D9yTdn3QrxsXF0YPCw8Pjgw8++Mtf
/mJra2tjY7Np0yaL/7jQU4XD4XC5XLrDqcfV1tbq9Xra1ZoWZwcAAAAAAADW
lZeXnz9/3tPTc/v27Vu2bLE4ZtyzZ8/Zs2dREXWj6ezsvHPnjkgkCgoKcnd3
t7e3//TTT/Pz89mOa/UtztRWKBRxcXFSqTQrK6uwsNBcmnkt6lNb8fjx446O
Dq1WKxaLg4ODqXseP348MjKSYqMWqaqqam1tpc5IP2g0GrlcHhUVRZudPHmS
WiowMPDixYsymcy8AnBgYGB95nZ+++03OsTCwoLJZGpvb6fgCwoKKIyYmBgK
u6KiwmAw0NNjYmJiTcNgMAW4x8bGHj161Nvb29zcTGHk5eVlZmampaVJJBK6
dPQzfVJZWdnS0tLX1zcyMjI9Pb0+Eb5hpqamzJnyd+/eTUxMDAsL4/F4HA6H
nht2dnY2NjYW/3Gh3zo6Orq4uHh7e4eEhNDThv6hodt7fWbRAQAAAAAAgC1F
RUWhoaE0HqRRIY0NLY4ZuVyuUChE3YGNZmkOJp/PVyqVbMe1+pZmatNZFxYW
snXPL83C9vX1DQwMDA8PF4lECoWC2oV+RT9QnLSBj48PdWEvL6+AgADWX60w
OTlpfplkRUVFamoqXcykpKS8vLzq6mqDwTA8PMxWYEvL7jBYqb/zpmLqrdOt
SP92ODg40L8stra21nO3nZycPD096QlDzUFtsc7F2QEAAAAAAGB9mPMZadCX
lZX12WefOTo6bt682c7ObvEIcdOmTTY2NjSQPHz4cFJSUnd399DQEH2L7dhh
nfT29lZVVSkUitOnT3/88cd0S9CdIJVK13m54Kpj1vJNTU0NDw8bjcbGxsbS
0tLFmdoFBQW1tbVs3fNMnZqGhob09PTw8PCzZ8+eOXNGIBBERUWJxWJqFPpc
JpNRqEKhkDYIDg4+f/58XFwc/erevXv/8c5Gpr/Tn2s9yUORj42NmUwmnU5H
l5GipTgzMzNVKlV9fT0FNjMzQzGs/zsbJyYm+vv7DQbD/fv3y8rKlEoltThd
wPj4+NTU1JycHLoH6urq2tvb6ZagG4OuPwpwv4CRkZHOzk66ktSb6M7k8Xju
7u7Ozs7Wc7e3bNmyfft2T0/PwMBAuqXNdws1BHK3AQAAAAAA3iSTk5Pm9Lrk
5GQ/Pz+LWXX0V/qQfnXkyJGbN2+uz2wGvDr6+/sbGhpUKtXZs2f37NlDt4S3
t3dsbOw6v1Bx1TFvOzSZTAaDoa6urqioyLw2ksnUrq2t7erqYuueN0dIxx0Y
GGhqatJoNOnp6dHR0aGhoeHh4VFRUSKRKD4+PjEx0Zx3rFAolEplaWlpTU1N
S0vL0tZh+vs6zK+aZ1PpKHQBtVotXU96eqSlpdG1LSkpaWtrGxsbY+WqPnv2
bGJiwjwFrdfrdTqd+d2bdA1TUlJu3LhBEZovI90SdGPQ7YEC3C9gZmZmZGSE
WSe5+J0PVnK333rrrS1btjg5OXl4ePD5fIFAIJPJ6uvrkbsNAAAAAADwJjG/
NI+G5EKhkMvlWhwh2tra0hDSwcEhMDBQpVKxHTKst6GhodbWVo1GExER4eXl
RbcE/Uk/r3PJ6VXH1IP+v+zde1BUZ54//lmHIWYpl2IyCYZYbJbKBI3bMRRB
wNEeiu1yhRG7GLfLRWJgHcdlDWMWmCzFGkJJlOkvaC8IEi4NzaW5pOXSgNxH
mAYEJIg0BBqGISB3BEUUNDpm5vuu6fo+v/6Fnl6MwOmWz+sPqm368pznPOc5
fg7P53xwCDQ1NSkUCqlUev78ec4ztQ1gdbcDAwODgoLYZUk8WV5ejt1hOMWV
He9ruV1s/Ggv+mGqycvLa2lpmZiYmJube/Dgwdo0YymWEd/T04Pm6RbgxjDQ
XpbEwEBfUQHuZ8FGHQaqUChcZu42XmZnZ7fGNeIJIYQQQgghhKyNiYmJjo6O
8vLysLCw3bt36w0MLS0tbW1teTxeSEhIdXU1100ma+3u3bvDw8NdXV3nzp3b
u3cvhoSLi0twcLBCoWhpaRkZGeG6gU+HZWrPz89rU3fZ7QRTU1NTUlI4z9Re
SrsL1Gp1Tk5OaGiop6fnoUOHjh07FhQUFBERgf2CNpeUlLS1tekWZGFrFG/d
uoW3azSavr/Ag/Hx8TW7R6K2wvWNGzeqqqoyMzNjYmLws7KykvPrvSwjHp2G
4a1bgBv9ifEgk8kwMPA8FeB+FmxdLjozMjJSJBLx+Xx7e3vDVyZZmZsDBw7g
9ISRf+XKld7eXlqiTwghhBBCCCHPgaGhofr6esTdJ06ccHJy0hsYvvrqqw4O
Dp6enlFRUY2NjVw3may1hw8f3r17d2pqSiqVenl5YUg4OjoeP348OTm5trZ2
cHCQ6wY+HZapPTY2pr1ppEKhSE1NPX/+fEpKSm5uLueZ2ksNDw83NDTI5fLw
8HCRSMTj8dzd3Q8dOhQYGHjq1Kno6Gjsi6KiIhyeuhcb2V0ce3t78St2bW2N
q0jji27fvo0vZam72n4uKytrb29Ha9emGUuxjHh0F4a3bgFudDVGe3x8PH7i
MRXgfhbszqUYexUVFRirwcHBOKEYrqHGVuZv27YNo/3w4cM4AeHYNJ4/ExBC
CCGEEEII+c40Go1SqRSLxb6+vjweT29giLBRIBBoL0C1t7dz3WTCGYVCIRKJ
MCQwVDBgtCUnMIS4btfTYZnafX19VVVVGNWxsbHYFmPO1Far1XK5PDQ0FP3v
6OhoZWWFXeDp6YmjEk+i8Wg59k5tba1u41mda5VKhbfjZXgNXrDG2a+sw3t6
esrKyuLi4hISErSrEI3tgjYV4F5VbEDm5OR88MEHGMk4uWAwG87dZlcmhUKh
RCIxwsOTEEIIIYQQQsjT6uzszMzMDAoK2r9//5tvvqk3HrS3t0ckGBoaKpfL
1Wo1100mnFEqlf7+/lZWVs7OzkeOHImMjCwoKOjp6eG6XcuyNFNbpVIpFIr4
+PikpKS0tDQcCOXl5deuXTOeJVgLCwvaXFc0NScnRywWf/jhh4cOHeLz+T/7
2c98fHx0byYZHh6OPYLXJCYmZmdnY2ddvny5qqqqtrYW24V/YmMbGxsHBgbW
uD4IW5I6NDR09epVVtU6Nja2qKiovb3deMq1UwHuVcWW7GI8o1cxbr29vR0c
HAznbrOqaph2jh49KpFIMO188cUXxjNsCCGEEEIIIYQ8rdbW1gsXLvj6+u7Z
s8fW1lZvPGjSy+HICiovLw8MDLSzs3Nzc/Pz8wsPD8/Pz+/u7ua6XcuiN1Nb
KpVKJJKMjIzS0tKmpqaurq6bN28aT6b21NSUWq2ura3FoSeXy5OTk6Ojo0+d
OoW9cOLEiYCAgOPHj/v7++PwFIlEQqHQw8NDIBB4eXkdOnQIz4eEhERFReku
nhwYGJiZmcGmrWXNaHYp+NatW5hAdNcfouerq6uNp1w7FeBeVeympl999RU6
EMPg9OnT3t7ehnO3N2zYYGZmZm5ujjOUs7MzxjkOgdzcXOMZNoQQQgghhBBC
npZKpYqMjBQIBDweDyGh3njQpG8YSFYQBkBoaCjGg6enp7+/v2ktml2aqR0f
Hy+RSIyn6PNSONzQ52iqTCZDVysUCvzEY22tavQ/DkyRSITjVzf7laW44kn8
Fi/DW5qbmzmvU8wyduvq6tLT0yMiIrAL0PlGWK6dCnCvKta9SqUyKCjoaXO3
PTw8Pv30UyMcNoQQQgghhBBCDGPVHCoqKhAP8ng8W1tbS0tLvWHg7t27w8LC
ysvLOzo6JiYmuG474Ux9fX1ERASfz9+/f782X9j4byvKhvrc3Nzo6KhupnZK
SkpmZmZeXh62S6PR4AVGsjCSYSsk0cLGxsaWlhb8xGPdNZMSiSQyMjI0NDQw
MNDf318kEmHXHDlyRHvFGL/Fy/CW/v7+Nc7UXopl7GLMFBcXa3dBRkYGdkFD
Q8Pg4OCDBw/Q/8ZwcW9pAW5MgPn5+VKpNC0tLT09XbcA98DAAF42MzNz7969
r7/+muu2mwDWvW1tbTgGMVB9fX0xsRheKslytx0cHA4dOhQeHo59UVdXp73H
Aj6N680ihBBCCCGEEPK/YPGgQqHw9/dHDGhpafnCCy/oDQP37t177tw5bTYr
5cetZw0NDVFRUZ6enl5eXt7e3iKRSCKRNDc3c90uQ9hQHx4ebm9v183UzszM
vHz5cktLi0ajmZycNJ6rYQy7h+TQ0BCOvpGREfzEYzyDNqvVamwR+v93v/ud
7o0iCwoKioqK8BhP4rd42VdffTU7O7vGmdpLsYzdgYEBlUqVl5eXkZGRkpIS
Hx9fUlLS2dlpPNeElxbg7u7uRmdi/KB70WzdAtzo57a2tr6+vrGxsXv37nHd
dhPAund8fPzGjRvowISEhMDAQMNr9Vnu9ubNm7dv387n8wMCAi5cuIC3Y5DT
UklCCCGEEEIIMX4sY04mkwmFQsOJcngBXsZ5vifhXHNzs0Qi0d6u0NPTUyAQ
REZGqlQqrttlCBvqXV1d5eXlJpGp/dybmprC7qitrcUuwO6IiIjIzMxsamoy
5n0xPz8/OjrKMrh1C3BLpVKlUon29/X1zczMcN1Sk9Te3o5j8/jx45hV7Ozs
DJ+SGLqdCCGEEEIIIYSYlnv37o2Pj2s0mtjY2H379umN9dgNu957773PP/+c
83xPwrm2traLFy/6+/t7e3u7u7s7OjqGhobW1tZy3S49njx58ujRowcPHkxP
T//+979vb2+vrq7Ozc01iUzt5x76fGho6MaNGxUVFWlpaWfPnsXP8vJy7KbB
wcE7d+5w3UA9FhcXZ2dnR0dH1Wo1Rk5hYaFcLpdKpbpLJevq6jo7O4eHh6em
pubn5zlfkmpCsN9ramqSk5NDQkK8vLzs7e1tbGw2bdpk+IKknZ2dQCA4fvx4
dHR0cXExdg2VuSGEEEIIIYQQY3br1q3e3l6VSnX69Gk3Nze9sZ6FhYW1tTUi
vhMnTpSWllJwTTo6OtLS0gIDAw8ePLhr1y6MDTwuLy/nul16YLjev39/bm6O
3TQyMzPzs88+M4lM7efe4uLi7du3R0dHm5ub8/PzY2JikpKScnJyysrK2tvb
x8fHuW6gHo8fP0az5+fnMWYGBwe1N5ZUKpUymUwqlSYnJycmJsrlcmyC9saS
2Dr6I87y3blzB72KvZ+dnR0WFiYUCp2cnGxsbAxfkLSyssIs5Ojo6OPjExER
gf5vaGgYHh7memsIIYQQQgghhOg3MjLS0tKiUCiCg4NdXFwMx3pGuwqOrDG1
Wo2QH+NBJBJhYGCE+Pv7K5VKrtulx4MHD+bm5iYmJjDO8/LydBNsKVObc6zi
eU9PT1lZWVxcXEJCQmJioknk3rLGo51NTU3aW5KeP38+IiIiJiYGW5GVlYWt
wKbRbS6+AzbJCIVCe3t7wxckGbwSr8e78F58AtcbQQghhBBCCCFEv4GBgcrK
yvj4+KNHjzo4OOgN8WxsbJycnBDlRUdHI+7musmEexqNRqlUisViPz8/jA0L
CwsfH5+8vLz79+8byUowlqk9OTmJ1ra0tFy+fDkzM1MikXz22Wd4oFAoVCpV
X18fZWpzSFvT5PHjx0NDQ1evXsVOycrKSk5Ojo2NLSoqam9vn5qaunv3LgYV
1y3VgzV+enoaAwljjFVKSk1NTUlJwYbgn7W1tdgQDMKRkREqwL18w8PDDQ0N
crk8IiIC04ujo6OdnZ2VlZXhC5LsbBUWFpadnW3Muf+EEEIIIYQQsp51d3fn
5+eHh4cfPHhw27ZtekO8N954Y9++fYGBgWlpaR0dHVw3mXAPMX5tbW1ycnJA
QICzs7O5ubm3tzeGx/T09NzcnDFcPmKZ2hqNpr6+Pi8vLzMzU1vHOTc3t7q6
ur29/fe//z0aTJnaHPrTn/70zTffoPNv3bqFPdXU1KRUKqVSqVgszsjIwG7q
6uoy2psBssYvLCzMzMyMjIz09PRoL0teunQpPT09Li4Ox0hWVpZCocC2XLt2
jQpwLx92Ona9Wq0uLi6Ojo5eZpmbTZs22djY2Nvbe3l5hYSEoP9ramqMfKkt
IYQQQgghhKxDyylpyuPxfH19xWKxUqnUaDRcN5lwb2mmv4eHR0JCAgL/6enp
+/fvc91APZnaEokkPj4eo728vLyrq4uyaI0KxgxGDsZPXV1denp6REQEdhZ2
XG1tLXbW1NQU1w1cFirAvRrYnz9wnnJ0dDR8QZJhZW7wRpzmuN4IQgghhBBC
CCH/P42NjVFRUZ6eng4ODq+++qreyM7JyenEiRMymay+vn5oaIjrJhPuTU1N
dXV11dbWhoeH8/l8DJK9e/eeO3cOT968eZPD9WwGMrWlUqlCoaiqqmpvbx8e
HqY6I0YF+2Jubm56ehp7p7i4WFsDPSMjIy8vr6GhYXBw0CQWslIB7tWAjkJ/
YraJjY09duyYi4vL1q1bX3nlFXNzczMzsw0bNug9bVlbW/N4PIFAcPLkyaSk
JJVK1d3dPTExQR1OCCGEEEIIIcaguro6JCQEgZutra2lpaXeyG737t1hYWHl
5eUdHR0I6LhuMuEeq4QrFosR8mOQuLu7nzlzprm5ub+/f3Z2lquGGcjUZjeN
HB0dxQvouoRRwb54+PAh9t3AwAB2E3ZcRkaGdseVlJR0dnaaxK0+qQD3akAX
TU1NoT9ramouXrwYHBwsFApxzrKwsNi4caOZmZne0xZ+a21tbWdnh6np6NGj
kZGR+fn5OIVRhxNCCCGEEEKIMUCw7O/vb2VlhfDN3Nxcb2QnEAjEYjFVByAM
S7BNSEjw8PDAIOHz+eHh4Zwn2BrI1K6qqurr63v48OHjx4+NfKHdesYW32L3
YcdFRERkZmY2NTWZVjF0KsC9GtidIkJDQ3FWMnzaWrpU8uOPP66oqKAOJ4QQ
QgghhBAOaReSITTLzs4+dOiQ3qUm+CeexK+8vb2TkpIQWU9NTRnD7QEJ51iC
bWpqqpeXF0aLs7PzyZMn5XJ5Y2PjzZs317g9bDyPjIx8+eWXejO1Ozo6xsbG
Hj9+TAsjjZm2lElXV1d1dXVGRoZYLJbJZOXl5ab1B5GlBbixOQUFBel/kZaW
hmF56dKlmpqaa9euYcQODQ0Zcz1xIzE7O9vf34/OxJAIDQ0VCoWYdmxtbQ3n
bltaWuI1PB7Px8fnzJkzSqWytbUVEwWtkSaEEEIIIYSQtXf//n1tElxiYqKX
l5fegG7jxo0I5aytrd9///28vLw7d+4Yf8okWRsswTY7O9vb2xujZceOHX5+
fhKJ5PLly/39/WvcHjaev/jii+rqar2Z2mNjY/Pz80+ePPnmm2/+9Kc/rXEL
yTJhXN29exd7s729vaioKDY2ViqVYoeWlZXhmfHxca4buCxLC3BrNJq2tra6
urqSkhK5XP7ZZ5+lpqbKZDJtBndjY6Mx1xM3Eg8ePJidnWXrJDHbHD161NnZ
2XDu9gsvvKA9kb377rsHDx4MCgpKS0trbW2l3G1CCCGEEEIIWXtL7wFo4B5c
gYGB5eXlXDeZGCOFQiESiTBa7O3thUJhaGioXC5Xq9Vr3Aw2njFQZTIZZWo/
B1htZQb/xJNct+s7Ync50GZwx8XFxcTEnD171kTriXOLHe84zDHtLDN3Gy/D
6czR0TEoKEipVFLuNiGEEEIIIYSsvbGxsba2NgRlH3300a5du/SGby+99NKb
b77p6up66tSpK1eucN1kYoxKSkqOHTtmbW2NMF8oFAYGBqalpXV0dKzNt7NM
7YGBgebm5tLS0ry8PKlUGhcXl56efunSJcrUNl3j4+Pt7e1lZWXafRobG1tU
VIRnTDS1md3lQKPRXL16FduVn5+Pg0W3nnh1dbU2Mx3bjlFtEoXFOcFWROMU
FhkZKRKJ+Hy+vb294SuT7E9sBw4cCAsLy8nJwXmtt7eXFv8TQgghhBBCyJoZ
GBiorKxELHz06FEHBwe94ZuNjY2Tk5NQKIyOjm5qauK6ycQYsSrtfD4fQ8Xf
3//ixYttbW1r8+3sukRzc3NxcbHuarqioqLGxkbK1DZdS1e9ZmRkYLyZaGoz
u8vBrVu3hoaGenp6MGgrKip064njAcZtbW2t9rKkSRQW5wT7SwQGA/oQx3tw
cLCnp6ednZ21tbWFhYXeM5q5uTl+ZWVltW3bNnd398OHD0dFRZWWltLtkQkh
hBBCCCFkzajVarlcrq0LYG9vrzd8Q3AnEAiOHz+OcA8BMtdNJsZIpVJFRkZi
nHh6emIsiUQiiUTS3Ny8Nt/OrlmVlpZilOqWMK6rqxsYGKBMbdPFCqY3NTVl
ZmY+N6nNrAD36OjojRs3dOuJi8Xi2NhYjGTtDTNNq7A4J1gifE5OzgcffODo
6IjTlpWVleHcbXZlElMW5ivTqpdECCGEEEIIISatra3t4sWL/v7+bm5ur7/+
ut6obdu2bQcPHgwPD8/Pz+/u7ua6ycQYNTc3I6IXiUTe3t5eXl6enp5RUVEN
DQ2r+qV/LVM7NjY2IyOjpKREpVJ9+eWXk5OTlKlturR7eW5urrOzE/tUN7UZ
+xe7Hr81xaIkrAD37du3h4aGurq6sDnFxcXp6ekYw8nJyYmJiTk5OeXl5U1N
Tdh27fo9U8xSXwMsER59iK4LCgrCROTg4GA4d9vMzGzjxo14gbOz89GjRzGD
FRQUfPHFF6bez2wV7tjYmHYJ7pUrV8rKyhT6FBUVYebEMKuvr29tbVWr1aa4
8JgQQgghhBBichoaGqKiojw9PRG7bd68WW/Uhl8hWIuPj6+srET4z3WTiTFq
b29PTk4+fvy4j4/P/v37+Xx+REQEItxV/dKlmdpSqVQmk2VlZWGsokmIrKen
p/EyytQ2Xdh3jx49evDgAXY05ivd1GbsdOxl7OK5uTmTu3zECnAvLi6i/RjJ
mF2xOXV1dUqlEmM4ISEhKSkpLS0tMzOzpKQE226iWeprgF2C++qrr1paWtCB
p0+f9vb2Npy7vWHDBjMzM3Nzc1tbW2dnZ6FQeOrUqdzcXFPvZ3Z5tq2traCg
QCKRYLsCAgJE+hw5cuTYsWOBgYGYsS9cuCCXyzHSsPlcbwQhhBBCCCHkOVdb
WxsaGmo4wc3FxSU4OFihUCDQGxkZ4brJxBix3H9/f39PT0+MKDzG6FrVL12a
qR0bG5uVlVVWVnb9+vXx8fFV/Xayxqamprq6unRTm9PT0+vq6jAGtJeduW7g
s6IC3M/u0aNHCwsLmBmUSmVQUNDT5m57eHh8+umnpt7PbCCxWj+urq5btmzR
u+2sxA+fz/f19cW8jZkc8znXG0EIIYQQQgh5PmmzBRG7lZaWnjhxwvAyEjc3
t9OnT6tUqt7e3lu3bnHddmKMuru78/Pzw8PD/fz8MGAwogIDA8vLy1fjux4+
fHj37t2pqSltnWLdTG2E0tXV1devX6d7wT1/sNOHh4e7urqwizMyMsRiMXa6
UqlsamrCSMDUZOrrYKkA97PTLpVcWFhoa2vLzMwMDQ319fXl8/mGz3Esd9vB
weHQoUOYx9Dt2mvdmGfwaVxv1tNhA6m2tlYikejekmXz5s3YRg8PDy8vL29v
b5FIdODAgb1796KL2B2AIyIiiouLTXTbCSGEEEIIIUaORW2ff/75e++9Z/hG
W/v27YuNjUWMjBD43r17XLedGKOenp6CgoLIyMgjR444OztjRCEKViqVq/Fd
7MJUfX09vlQ3U7u6urqzs1N7rcbkcniJYexCdHt7e1FRkbbsC3a6QqG4evXq
0NCQqd8plApwPzv2tzZMAtpSQQkJCYGBgQKBgMfjWVtb6z3HsdztzZs3b9++
nc/nBwQEXLhwAW9Xq9Umt1SSDaSWlhYcI9h8nMTfeOON7/2/G7CgT1JTU7Oz
s3Hs4Dj6r//6L19fX09PT1dXV3t7ex8fn+joaBPddkIIIYQQQoiRY3ltMplM
KBQaTmfDC/AyvBhvociX6KXRaJRKpVgsRmCLwB/DRiQSIdpdje9amrpLmdrr
yuDgIPa+tuxLQkJCXFwcdn1PT89zU0udCnCvIHZ7W4FAYGdnZ/hkxzg6OuIt
eCM6H+ON6434jtidNHASt7e3x3Z5eHjgkNG9y8HS1zwf204IIYQQQggxTnfv
3r1582ZXV9e5c+f27t2rNyJ74YUXLC0tra2t/f39FQrFwsKCKZayJWuDXSNC
JIt4Vvc69kqt4MLww6eNj48jgv7tb3+bl5eHz09KSqJM7fUGY6C9vb2srCwn
JwcDICYmJj8/v7m5eXR09Pbt24uLi1w38FktLcDd0NBQUlKSmZmJMa+twY3x
/60C3HNzc9h2U89bX3HonJqaGvRYSEiIl5eXvb29jY3Npk2bDF+QtLOzEwgE
mM2io6OLi4tNtPZ0W1vbxYsXcQbHWX779u1WVlY+Pj4YRbp1oLBdGF2YQk+e
PLlz505s+44dO/z8/CQSyeXLl/v7+7neCEIIIYQQQshzZWJioqOjA/FsWFjY
7t279UZklpaWtra2PB4vKCiooqLi0aNHJp0OSVbVyMhIS0uLQqEIDg52cXHR
XYozNTW1IgVHtCVsrl+/Xl1dnZubGx8fr61BTJna6w0rZoQZDAPg7Nmz+Ik5
6saNG0NDQ3Nzc1w38FktLcCN7cUIb2pqwibn5eWx2xToFuDGtt++fdvU89ZX
HBst2dnZON8JhUInJycbGxvDFyStrKzs7OwcHR19fHwiIiJMtPY02hwVFeXp
6blnz54dO3ZgiwICAoqLizEhsz8vau+AoVar2V8nt2/ffujQocjIyIKCgp6e
Hq43ghBCCCGEEPJcWbqebSlra2sejycQCBCYqFQqrptMjBpLow4PD+fz+Rg/
GDlisVh7p7sVWbU4Pj5+/fr1srKyrKys2NhYytRetx48eDA3NzcxMdHU1JSZ
mbkeilCzTdYuDcXUjcGP40t322/cuDE6Ovrc5K2vuKW5ycuBV+L1Jlp7GqMC
LXfUgX/iSb0vVigUIpHI1DeZEEIIIYQQYuSW3vFvKVtb2z179uAFFy5caG1t
5brJxKixZUgYVAKBAOOHz+eHh4c/+zUilqnd2dlZXV2dlZXFslYRQePzKVN7
vXn06NH9+/fn5uYwJEpKSnSLUKtUqoGBAd0FYM8HtsnaowzDvqioCJusu+0V
FRXNzc09PT1DQ0O3bt16/jrhGbHc5IiICB8fH0dHRzs7OysrK8MXJG1sbJyc
nIRCYVhYWHZ29gr+hWX1sMo+paWlJ06cwGbu2LEDZ3NPT8+oqCh0gu6LWQUc
bJ23t/f3KGWbEEIIIYQQspqWs1bkzTff3L9/f1BQUGZmJgJ/rptMjBri2enp
aYTqCQkJHh4eGD8uLi7BwcEKhaKlpWVkZOQ7f7JupjYGbWxsrFQqzcvLQ6zd
1NTU09NDmdrrzZMnTx49evTgwQMMjIaGBt0i1MXFxe3t7bq3yHs+sE3WXpzX
XpbEEaG77Wlpafn5+WVlZVevXtVoNM9fJzwjlpuMQRIdHb3MMjebNm2ysbHB
WdLLyyskJCQ5ObmmpsbIS71orzEuLCx8/vnn7733npWV1fbt2/fu3evv73/x
4sW2tjbdF+OVGCcYLampqdhGbLKzs/PJkycx2TY2Nt68eZOrrSCEEEIIIYQ8
l5ZTeJTH4/n6+orFYqVSifCW6yYTo7a0bvtKlWpdmqmNzywtLTWJpUpkVS2t
t56enl5XV6dbRPh5tXTbz549GxMTExcXp1Aompqa1kMnfDfLuWPJUqzMDd6I
yYfrjTBk6WxsIAt76d+SVmpxOyGEEEIIIYQs1djYqL3XvYODw6uvvqo3/tq5
cydbJmFyN/Mna4ytycnLy/Px8bGwsHB2dj569OjT5v3plvO4ffu23kzt4uLi
5ubmFSyXQ0yUds1bV1cXRkhGRoZYLMYIUSqVTU1NGo3m1q1bz3HJabbtrAB3
WlpaUlJSQkICDhZ0Ql1dXXt7+8DAABXg/hZ0iFqtrq2tjY2NPXbsmIuLy9at
W1955RVzc3MzM7MNGzboPSGymyrjtIh+VqlU3d3dExMTRljuDWPj5s2bGBus
Tg1O9JiN4+PjKysrMST+/P9uAnDnzp3e3t4rV67k5OScOnXK29vb3t7e398f
0yzeboqFxQkhhBBCCCFGDvF7SEgIwitbW1tLS0u98Zebm9vp06cRdiFgQWjP
dZOJUWN3LSsuLkbki+B9165dfn5+T1uqVfs5jx8/npmZ+cMf/qA3U7u5uRkx
NUJpBNT4xlXdLmLMHj58ePfu3ampqfb29qKiIgyS5OTkrKwshUJx9erVoaGh
57jkNNt23QLcOTk5iYmJ2hrc6enpOBgxgVMB7m9ZWFjQ9ltNTc3FixeDg4OF
QiHOhhYWFhs3bjQzM9N7QsRvMa3Z2dm5u7tjisPMlp+f39HRgU8ztnt1TkxM
oGEYD2FhYbt370bjMRt/9NFHSqWyra1tbGzsz39ZGKnthMrKyri4uA8++AAb
9a//+q/oCmxaRUUFfosBRin/hBBCCCGEkJWFwMTf39/KygpBlrm5ud74y8PD
IyEhgfL+yFNBFBwYGIiwnc/n+/r6Pm2p1idPnjx+/BhR8PDwMGJnytQmy8GS
cBMTEzFrxcXFYeT09PSsh5LTVID7OxsZGWlpaVEoFJimBAKB4RPi0qWSH3/8
cUVFBeaihYUFo/rLyNKcdLQWQ0J38mRlyNjLPD098b8CKq5NCCGEEEIIWQ1s
UY1MJhOJRHoXhOCfeBK/wgvwMqqMQJ4KW3zr5uZ28ODBZd5yjWVqz8/Pj42N
9fX1NTc3X758mTK1yXKMj49rL8fl5uampKRIJBJtNaXR0dHbt28vLi5y3cBV
RAW4v7PZ2dn+/n6ME0wy2hJvzs7Otra2hnO3LS0t8RpMcT4+PmfOnFEqla2t
rSMjI8aTu63RaNAqsVjs5+fn5OSEs7lAIAgPDy8vL6+vr7927ZparcZPPMYz
aWlp2IoPPvjgk08+iYuLk8vlDQ0N37pJC1sAjx776quv8HbK5iaEEEIIIYQ8
FXbbMQTsHh4eesOujRs3IuCytrb29/e/dOkSha7kqVy5cuXUqVOurq7u7u77
9+8XiUQYbM3NzYbfxTK1x8bGOjo6qqqqMPYQKVOmNlkOttyrsrIyMzMzJiYG
PzGKbty4MTQ0NDc3x3UDVxEV4P7O0Gmzs7NsnSRmqqNHjzo7OxvO3X7hhRe0
p8h333334MGDQUFB6N7W1lbjyd1Wq9VyuTw0NPTQoUPYHDRVIBAEBwfLZDIM
iezsbPwWP/EYz+BIycrKysnJuXz5cmNjo96LjewWwf39/fX19XovWhJCCCGE
EEKIAawwa3h4OJ/PN3ynrMDAwPLycq6bTEyMSqWKjIwU6MA/8aThd7FM7b6+
vqqqKt20U8rUJv8rlrbc0tKSl5eHkYNho1Ao1melYCrA/bTYBW2JRCIUCpeZ
u42X4UTp6OgYFBSkVCqNJ3ebJWJjW1xdXVl9cBwXmI1x9g8NDcVPPMYzcrkc
87PhIcHKdjc3N2tXk1JaNyGEEEIIIeSp3Lx5s7GxEaHEyZMnnZ2d9QZZL7/8
8ltvvcXn8xHG1tfXc91kYmIQsSKoF4lE+/fvd3d3Rzh86tSpK1eu6H3x0kxt
hMYKhSI+Pv6zzz5LTU1NT08vKytrbW2lTG1iAEtb7u7urqyslEql2pVgeXl5
GFEDAwPraqU3WwmP2R6HDyZ8mUyGownHFB6XlJTU1dV98cUX/f394+Pj2pT2
dV6Am1V4KS0tjYqKOnz4MOaubdu2Gb4yyf54d+DAgbCwsJycHEx0vb29nK/i
bmpqio6OFgqF+/btc3NzwyTs7+8vFouVSmVBQUF+fj6GAX7iMZ7BIEGb9S6a
ZZnaGFGTk5Pon6Kiok8++QSfjM/Ht3C1gYQQQgghhBCTgwj08uXLEonEz89v
x44deoMsW1vbPXv2+Pr6XrhwobW1lesmExPDFuccPHgQsTCPxwsJCamurtb7
4qWZ2gqFQiqVYoimp6cj+K2rq8PzQ0NDnMf4xJixtOXh4WHMWkqlMjc3Ny0t
LT4+vri4GGNyXSUps3sF48D58ssvr127VlNTc+nSJRxZ6JP0v8DBdeXKlevX
r//hD3+YmZlZ5wW4tRe0Mcn09vaiW3JycsLCwg4cOGBnZ2dtbW1hYaH3XGlu
bo5fWVlZbdu2zd3d/fDhw1FRUaWlpZz/9YTdNwMz8L59+4RCYXh4OAaARqPp
6enp7u5Wq9X4icd4BofMX7utKMvUnpycxH8ecBxdvHjx/ffft7e3//DDDysr
K7naQEIIIYQQQojJYbeWQoSCmEJvkIXn8VvKySLfDRtjvr6+fD7fcO7/0kzt
+Ph4iUSyzERCQr5lZmYGY6mpqamwsDAxMTEiIiI9Pb2urm59DiSWadvT01Nb
W5uVlYU+iYmJQbfExsbin2VlZW1tbcPDw1SAW4v1mFKpDAoKcnR0xAxmZWVl
OHebXZnEqRPTF+f3l8B8i1kXLXd1dUWTlllZbCnWG6xeErvZi0gkUigUq9F4
QgghhBBCyHMJsefFixf9/f3d3Nxef/11vbEVj8fz9fXVpndpNBqum0xMTE9P
T0FBQWRkpJ+f365du6ytrY8ePVpcXKxbgtZApnZKSkpmZmZeXt6VK1e6u7vX
1cI28uzu3bunHVF1dXVyuTwmJiYtLQ3DDwMMIxPDaV3lJrMVbqOjo11dXegE
bQZ3YmJiampqRkYGK2WC3w4ODk5OTuKQXFxcfPz4Mddt5wbrsdbWVoycoKCg
gwcPvvvuu5jHLC0tX3jhBb0nTTMzs40bN1pYWDg7O2O6Y0XeR0ZGZmdnHzx4
sDaNZ+s8MX++//77aLOLiwvO5uHh4fn5+ZhOn/YDWW/gwMHwwCA5d+7c3r17
6YIkIYQQQggh5Gk1NDRERUV5eno6ODhs3rxZb2zl6OioXVBRW1uLGITrJhMT
w24LwOrV+vj4IEDWLUFrIFM7MzMTb0cs39vbOz4+vq5u/Uee3ddff33v3r2Z
mZnOzs6ysjJ25Y0tuF1XucnsHoDz8/NTU1PDw8Polrq6usLCwpycnPT0dPQP
fuIxnqmvr1er1aOjo7Ozs4uLi1y3nRusx0ZGRrS5/2fOnMEMxuPxbG1tLS0t
9Z40N2zYYGZmZm5ujtdg0tOmGMhkMsxjmA/Rn2vTeHYnzKSkJG9vb8y9rq6u
OJvHx8dXVlYODAw87Qey3tBe58SHY5b28vKiC5KEEEIIIYSQp1VbW4tAyXAa
mouLS3BwMFvgwXWTiYlBOIxhpr2NJEYaRhTCc8TmuiVoDWRq5+XlYeBNTEzM
zc2t2coi8vwZHh5WqVRZWVkYXXFxcRhahYWFXV1d6zw3maW0K5VKqVQq1oG+
wpHb09MzOjo6Pz/PdUs5xrKVKyoqPv74Y4FAwOPxrK2tl5m7jdfjVLvGp1GW
W429iQasxtkcHyUSieiCJCGEEEIIIWSZtIlX9+/fLy4uDggIMHyjfnd397Nn
z67x0g7y3EDYi8GDWBWBMMJhjCgPD4+EhAREyuwyI8bV8PBwT09PfX39559/
rpupjWc0Gg1eRiVsyLOYmprq6uqqra3FUExOTv7WXUkXFha4biA3WEr7tWvX
qqur0Tnsmm16evqlS5eqqqpw/OLYxIE8MzODjlpXSe4My1bu6OjIz8+PjIw8
evQoTo6Gz54sd5vH4wmFQsyBFy9erKmp0Za5We1RhwkWrS0vLw8LC9u9ezfa
4+bmdvr0aQz73t7eW7duPftX0AVJQgghhBBCyFNBYDU3N4cwPDMz08fHx8rK
ChGTubm53pBq//79SUlJa3zzK/LcYBeCWPkDgUAgFovb29s1Gs3o6CiG4sDA
QEtLS1lZWV5eXkpKim6mNl4zOTmJgffo0aN1u4yNPLv5+XkMNlbMBSNQKpUq
lcqmpqa+vr6ZmRmuG8gNltKOGR7HmrZSifaaLY7E1NRU9BL+qb0siY7CWWNd
JbkzLFt5YmKiu7tbpVLhtHjy5EnDSyVZ7vYrr7yydetWFxeXY8eOxcbGopPV
ajXmxlVt89DQUH19vUwmO3HihJOTE9qzb98+fDt29Pj4OPb7s38FXZAkhBBC
CCGEPJX79+9rb0qfkJDg4eFhOOmMAg3yLJamDfL5/PDwcITk165d6+vrQ4Df
1tZWWFgYFxcnkUhiYmIoU5usOJZyi6GICQ1jLD4+XiaT0c0otAwU4D5//rz2
smRTUxOO5XWe5M5gIGnvRIFpzc7OzvBplFnLezJrNBqlUomh7uvry+Pxvqfv
dhnPiC5IEkIIIYQQQp7K7Oxsf39/c3PzmTNn3N3d9cZNL7744ksvvbRly5aA
gICysjKum0xMFSuswK5+Ozs7f/jhh7m5uSUlJb/97W9bWlrKy8uzs7Pj4uKS
kpIyMjIoU5usOJZyi3FVXV0t1VFVVdXT00PlpP9aAe7k5GT0kkwmUyqVeJ4K
cGuhE2pqatA5ISEhXl5e9vb2NjY2mzZtMnxB0s7OTiAQHD9+PDo6uri4WK1W
Dw8P3717dwUbhv2ID8SsW1dXd+HCBd1LprRCkhBCCCGEEMKtsbGxtrY2RJcf
ffTRrl279MZNL7300ptvvunq6nrq1KkrV65w3WRiqlhJVplMJhQKMbTeeecd
f39/xMXs8iN+4nFcXFx2dnZ5eTllapMVp1su+dq1a5j95HJ5cnLy+fPntYsk
qZz0XyvAjY6SSqXx8fH4icdUgFuLrf3GrBUWFobJzcnJycbGxvAFSSsrKzs7
O0dHRx8fn4iICPRnQ0MDensFG3b37l18YFdXFxoWEhKiTSp/5ZVXvkf3kCSE
EEIIIYRwbWnh46W2bNni6uqKKEMikTQ3N3PdZGLyWOi6bdu2n//856dOnUI8
fubMGbFYHBMTg2EWFxdXWFjY1tZGmdpk9bC60hhsiYmJGIRskSSVk9ZFBbiX
Sa1Wy+Xy0NBQoVBob29v+IIkg1fi9XgX3otPWMH2sNv2Yk9hytUtu0NVtgkh
hBBCCCHcQiBZUFAQGRl56NCh7du36w2XWGZZcnJye3s7100mJq+4uNjPz8/S
0pLH43l6ev77v//7r3/969OnT0skkpSUlLy8vLKyMoTJAwMDlKlNVg+rK11X
VyeXy2NiYlJTUy9duqStMzI5Obk+q0gvpbcAN/oqPj4+IyMDZ5Cqqqrm5ubu
7u7h4eGpqan5+Xkcs+uw3g02v6GhAWMpIiLCx8fH0dERZ08rKyvDFyRtbGyc
nJyEQmFYWFh2djZOsoODg3fu3Hn29rAVkkqlErNrYGDgsWPHjhw5IhKJTp06
lZmZiWm2v79/dnb22b+LLkgSQgghhBBCnkpHR0daWhrilH379r3xxht6w6Wt
W7ey9RsIbbhuMjF5ly9f/o//+I+///u/f+edd9zd3f/lX/4F//zkk0/i4+M/
//zz+vr6np4exNHaYu6UqU1WCasr3dnZWVZWlpiYmJKSkp6enpWVhUE4ODi4
PqtIL7W0APeVK1eKiopkMhm6C2cQqVSan59fXl6uvbHk6OjowsLCw4cP0Xtc
t31NaS8AqtXq4uLi6OjoZZa52bRpk42Njb29vZeXV0hISHJyck1NzYqUuWH3
kMRea25uxg4qLS3FjlMoFNiDGPbYodpp9tm/iy5IEkIIIYQQQp4KghSJRIII
wtXVdcuWLXrDJR6P5+vrKxaLlUol4hqum0xMXnV19a9//eu333773Xff3bVr
l5ub2/vvv3/q1ClE4lVVVX19fVS9l6yl4eFhlUqVlZWFERgXF4e5rrCwsKur
i8bht7AC3DgRoMcUCoVUKj1//nxERERMTExiYiLL4F7B8s2maDn3QlnKpJMR
6IIkIYQQQggh5KnU19cjluTz+W+99dbLL7+sN0rauXPnyZMn5XJ5Y2Pjyt5y
n6wrjx8/XlxcnJ+fLykp+fDDD99++20HBwcnJycXF5df/OIXEomkqqqqo6Nj
bGyMVqaRtcRutadQKJKTk8ViMaY7lUo1ODg4PT29sLDAdQONBSvAPT4+3tvb
29LSgmNWe1kyNTU1JSUFvYd/oifb29s1Gs3IyMjMzMy9e/e+/vprrtu+pjCi
1Go1+uHChQsBAQE4w27fvn3z5s3m5uZmZmYbNmzQe6q1trbm8XgCgSAwMDAh
IQFvv3HjBrraJPLf6YIkIYQQQggh5KlUVlZ++OGHW7dutbGx2bRpk94oacXL
cZL1aXFxcXZ2dnR0NC8v78SJE2+//faOHTveeecdBwcHxOwZGRl9fX1jY2Pz
8/N07z6yljDkMCx7enpqa2uzsrLEYrFUKlUqlU1NTRiTMzMzXDfQWLAC3Pfu
3cO5YGRkBJ2mvSx56dKl9PT0uLi45ORk9KFCoaiurr527Zr2oMbruW77mlpY
WJiamhocHKyrq0tLSwsPDz906BAmOgsLi40bN5qZmek91eK31tbWdnZ2fD7f
19c3NDQ0MzOzra3NJPLf6YIkIYQQQggh5Kkg6Pb397eyskIoZG5urjdK8vDw
SEhI0C4Wun//PtdNJqaKXfZJT0//5S9/+fbbb//jP/7j9u3bt23b9qtf/aqs
rIwyZAknWCZye3u7QqEQi8Xx8fEymWwFaxA/r5Zey2Xoou6fdRbffvrppziT
Gj7VMniZnZ2do6NjUFAQ+tAk8t/pgiQhhBBCCCFkOR48eDA7O4tAGzHjwYMH
9S7bQNCE5xEZ+fj4ZGZmTk9Pz83NPXz4kOu2ExODOPr+/fuIqQcHB9va2qqq
qs6fP3/06FFnZ+e33377jTfeeO211375y18i7qZMbcIJloms0Wiqq6ulOjBc
e3p65ufnFxcXMT65bqnRYcue1Wp1fX19YWGhXC5Hv8XHx+MnHuOZurq6zs7O
9VmAm9W5zs3NPXXqlFAoxLxna2trOHebLZX09vY+ffo05saWlpavvvoKE6mR
LJVculY2KSlp//79aDx+4vEKlsshhBBCCCGEPE8QKfT39yPG+c1vfrN37169
wRGLiQICAoqLi40nFCKmBSNHm72I8VZSUiKVSsPDw99///2f/vSnO3bsQGz+
d3/3d0eOHCksLKRMbcIJdnVlZGTk2rVrSqVSLpcnJyefP39eu0hydHQUc+bi
4iLXLTU67Mawk5OTOMa7urpUKhU6UCaT4UhHHyYmJqIzy8rK1mcBblbn+osv
vigoKJBIJNq/xRjO3WZ/DXRwcPD29g4KCkJPogON58+CS+8mevbsWXd3dzQe
P/EYz+D/GDhquG4pIYQQQgghxLgg7ka8gFg7ODjYxcXFcNZYaGhobW0t100m
pkq7NrK9vb20tBRhdURExK9+9avDhw/v27fvnXfe2bx5M2X5ESMxMzPT19fX
1NRUWFiYmJiIscoWSY6Ojs7Pz3PdQOP15MmTx48fP3z4EAc7OpAKcH8LmwYl
EolQKHza3O0PPvggJyfHeG6csrTeOvu/BH7iMd3ugBBCCCGEEKIX4hrEhsnJ
ycePH0ewozcU2rx5s4ODg6enZ1RUVENDA9dNJiaGZWoPDAw0NzeXlpbm5eVJ
pdLY2NizZ8/+93//98mTJzG63njjDQw2b2/v7OxsWoVLuHXv3r2xsbG+vr76
+vrc3Nzz58+npaUVFBRgtlSr1ZOTk7SI96/RrjJ9/Pjx9PQ0OpAKcH8LWyiO
mRCn1MOHD7u7u2/bts3wlUmWp4CpMjg4GH1YUVHR1dWFeRUfyOFF3aUrJDMz
M0+dOiUSifATj2mFJCGEEEIIIUQvxINKpVIsFvv6+vJ4PL2h0Ouvv+7m5ubv
73/x4sW2tjaum0xMDAvAm5ubi4uLEUpLpVKZTJaVlZWWloZ/Ylz94he/cHBw
wGDz8vJKTU01noREsj59/fXX9+7dm5mZUavVFRUVGLHp6ekZGRkYtPX19RjM
dJvTv+ZPf/oTuuXJkycLCwvoQCrA/S3sDzS9vb1XrlzJyckJCws7cOCAnZ2d
tbW1hYWF4dxte3t7Pp8vEokiIyNx7sZQxOzK4VLJpfeQ7OzsxHZh5+InHtM9
JAkhhBBCCCF6IdyWy+WhoaFCoRCRjt5QCM/jt3gNXonXc91kYmKWZmrHxsZm
ZWWVlZVVVFRUVVXV1taGh4cjyv4eVXInRobd1EImk8XHx4vF4sLCwq6uLioE
v3xUgFsvluyMHggKCnJ0dLSzs7OysjKcu82uTOKkLJFIMK9itsSHcL01hBBC
CCGEEPJ0WltbL1y44Ovru2fPHltbW70R0I4dO/z8/BD7XL58ub+/n+smE9PA
1phhzHwrU1sul1dXV1+/fr2trQ0jEL89c+aMtg6CQCAQi8UUZRMjwW4mqVQq
MXoxODF6VSqV9pr5wsIC1w00AUsLcOfm5spksuTk5IyMDDzWLcA9OTk5Nzf3
4MGDR48ePd/Xe1myM+bAtLS0oKCggwcPvvvuu9bW1paWli+88ILe07GZmdnG
jRstLCycnZ2PHj2K8zK7SSMtRCSEEEIIIYSYEISHERERfD7/rbfeevnll/VG
QAh8Tp48iTC8sbHx5s2bXDeZmAZ2Fz4Mm6KiIt1M7erq6s7OzvHx8eHh4f7+
/q6urnPnzu3duxeDDUMxPDy8trYWT05NTXG9EWS9W1hYmJ6eHhwcVKlUmAPX
+aK+72ZpAe6rV69WVlYqFIrs7Oy0tDTdAtyYGYaGhubm5ri9NeIa0C3p3tra
ikF15swZHx8fHo9na2traWmp93S8YcMGMzMzc3NzvAanZm3yAuZVulUjIYQQ
QgghxLSUl5cHBgYavnsVXSMi38HSOsUsU/v69evj4+N//svtJbVXexISEjw8
PL5HhVmJkWE1ozH7YSSLxeL4+HiZTEZD9DtgnTk6Onrjxg2cU/Ly8tCfugW4
q6ur8auJiQntOkmum7wWWO52RUXFxx9/LBAIeDwezsjLzN3G60NDQ2lAEkII
IYQQQkyCNlns/v37ly5d8vf31+aIbdy4Ue9KDA8PD4lEgnh8eHj47t27XLed
GDWMK0TW4+Pj3d3dv/vd7woLC7Ozs1NSUnQztVk6Nl48Nzc3PT2dlpbm7e2N
webs7BwQEJCcnFxbW4uXcb01ZL1jNaMxGuvr67OysjIyMtLT06VSaUVFhVqt
XlcVop8R68zbt28PDQ3hnKJSqYqLi9P/ApMAelWhUFRWVjY1NXV2dmortuCk
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
nTt3/uQnP/npT38qEAgOHTqEk2N4eDjeWFFRoS2ZrV0baWx52U+FJUdgYj99
+rSvr++ePXtsbW0NX5BkdXxEIlFoaCj6RHtLSa63hhBCCCGEEGJ6NBqNUqkU
i8WIRxCLGV4UQTVE1pWlmdoSiSQ+Ph7DoKqqqq+vD/H448eP16wMh1qtlsvl
iIIRCyMipnsIEFOE4wVHDY6dnp6esrKyuLi4hISExMRESoNdJSxHXiaTRUZG
4kTm6emJkx0mEAsLC3Nz8+/9JS/75Zdffv3113fs2LFnzx7tLWqPHDmCF4eH
h2PSUygUTU1N2DtrPOmtgeX8H4D+V0AIIYQQQghZcZ2dnZmZmUFBQQjB3nzz
Tb2hh729vVAoDA0NlcvlarWa6yaT1cWqb4yPj/f29upmakulUgTmVVVVHR0d
Y2NjCMzx4m+++WZtGsYCZz8/PycnJwsLC0TQly5devTo0Vo2g5BnoS0vgmNn
aGjo6tWrOKCysrKSk5NjY2OLiora29unpqbu3r1rurnAnNAu575z5w7mpYGB
AZynWltb6+vry8vLs7Oz0bfh4eEnT57E1IFz2d69e3fv3u3o6Oji4sLn8wUC
gbe39/vvv3/ixIlf//rXn3zyCSaZ3/zmN1FRUWfPnsW8l5iYKJPJMPmoVCrt
CsnJycn5+fnFxUXsR643/Vmhx9ra2rB12N733nsP3WJnZ2dlZWX4gqS1tTWP
x0PXBQcHo3MwbtHtt27dotmYEEIIIYQQskyI2i5cuGA4XQtxB16AGA0xi0aj
4brJZHU9fPhwbm5uenq6u7v7ypUrupnaCoUCIXlfXx9iWMTjT548QeD5pz/9
aW0aNjg4WFtbm5ycHBAQ4OzsbG5uLhKJcnJyFhYWTDp3kqwrOF5w1ODYuXXr
FqbTpqYmzKtSqRQTbEZGRnV1dVdX1/Dw8N27d7luqSm5f//+1NQUpoi2trbK
ykq5XI7zWkRERGBg4JEjR7y8vPh8/u7du3ft2uXq6uru7v6zn/0Ms8fx48dD
Q0PR85999hkmuvLycvR/XV1dY2NjTU1NcXExpheZTIY5B7Mf9hE+trCwsL6+
Xq1Wj46Ozs7OLi4ucr3pz+revXuYzzEUS0tLz507t8wyN6zWj4eHR3BwMLoI
3d7b20uzMSGEEEIIIWSZWOViHo+H+EJv6EGFNdcVhPbT09PY0RgbCMA5z9Rm
RkZGtLfdQ/zr4uKCkSkUCmUy2Z07dxAFr3ZJHUJWFjvQ6urq0tPTIyIicJTl
5eVhmu3q6pqamuK6gaaE3RFRqVSiG0NDQ319ffl8vp2dHc5rFhYWutfQ8Dx+
i9fglXi93sosMzMzmOt0LxczWVlZ2Ec9PT2jo6Pz8/NcbfKKY3/xwekeJ33D
FyQZlruNzsQpg2ZjQgghhBBCiGHatEFEDRUVFUFBQYYrbO7evTssLKy8vLyj
o2NiYoLrtpNV8X/Ze/egKPPs/n/jsiwTa2OIM2HXsqgN5agzE8pQfJHLYIeQ
XhZQwlKkiygqHUJYiqF0gLIIRZClS7FHkHATuTd3GK4N2GLDAINggyxyHS4O
43JHBR3AVXdmarL7e2ef+n2+/Z3u9KICTzec1x8WwtPdn+d5zjmfc57+vD+H
aR4nJydxo1tbW2tqavLy8nhXajM0O8K7ubmlpaWxHhObPB6CeB3YUuTe3t7a
2trU1NSsrKz8/PyysrJbt27BqjenV5QBoUOXjYuWkZEhlUojIiICAwNFItHR
o0ednZ3t7e0dHBwQLgQCgYeHx6lTp0JCQmJiYlJSUoqLixsbG3t6enCpHz58
+J0Awq0bHB8fv3PnjlKpZMr65ORkRMXKykrEw66urpGRkZmZmaWlpWfPnm3y
ivF1BxcBl7S5uRmm+MEHHwiFwkOHDu3Zs8fY2NjIyGjHjh1a0wOm3Q4KCkpI
SJDL5bgpuCak3SYIgiAIgiAIQivcPoGooVBnicVi1BS7du364Q9/qLXicHFx
QaExNDQ0PT1NQsKtCtM8opxsaGhA0Z2dnX3t2jXeldqMxcXF0dFRjCQ2NtbJ
yQmWiSpYKpVqXeBEEHoO26x1YmICVl1WVpafn8/tjVBXVzcwMLC8vIy/0mIz
hg5d9unTp728vBAQBAKBnZ2dtbW1o6MjZi5PT08/P78zZ85ER0cnJSUVFRUp
FIq2tjZEucHBQVx5xDSEDs3r/NVXXz19+nRpaWlmZmZsbAxBprm5GZEwMzMT
9wixkX1N09XVhdj46NEjvr6pWS+QD3CXF9ZYUlKivluviYmJkZGR1vSArTvF
Bffx8QkNDc3NzcXlJe02QRAEQRAEQRBaQfGFegGFmEwmQ8mmW5NFwtjtANM8
1tfXo+hGmY+CFCU870ptzRFiYEKhEJYpEAiio6NJ4koYNKwNdFlZWWpqKlyv
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
qee71alUKtS2qIi9vb29vLxom1Nia8B2VpyYmGhvby8rK8vPz8/KykpNTa2r
q4N7Li8vG9AufOwp1vT0NCaR5ubm4uJieK5WXbatrS1+dnd3h1OfOnUqMDAQ
s09CQgKiEyJVU1MTvL6/v//evXubo8teC0xrj3NcWlrCwEZGRrjHkpWVlXl5
ecnJyYixiK4VFRUIsHfu3BkfH5+bm3v69CnfY3852LNlnGN3d7dcLpdKpWKx
2N7efv/+/bt379aaQuzYscPIyMjY2BhpBu4vAjWyjmvXrsESBgcHt9KKX4Ig
CIIgCIIg1g5rC6Jja3qhUIiig2RWWwnUgENDQ6gHy8rKUlNTDUupzWAbDvj6
+qLIhaFKJJL29na+x0UQ64OmnxYUFHR2di4sLCwvL+vDs7i1wHS+OBeFQgGf
jYiIEIlEunXZISEhcGccjJfghYYldl5dXZ2dnR0ZGcG9Q1xVb8DNbXqJmzg+
Pr60tMT3SF8Rdk9xgjgp3C/cNdy7/1W2/UeYdlsgEOD+bs/28QRBEARBEASx
zWF71BcVFfn4+KBGMDExMTIy0iqz8vLyysjIoI3otwC/+93vuBYMg4ODn3zy
ifrKq9LSUkNRajP6+vpyc3NR2MKGnZ2dLS0tw8PDcRZ8j4sg1ge2khlWDVeV
SqUymUyhUOjh10OauuyRkRF4qEqlampqqqqqwsgTEhIiIyMDAwOPHz9+7Ngx
3bpsuDZe1dzcjDeZnp42rHYwz58/f/z48ezsLCJtW1ubegNu/Iuf8ZvW1taB
gQEDbcDNVr3COOVyOe5XcHAw7qDuNjcsqXj33XddXV1hCXjhjRs3SLtNEARB
EARBENsH1ls5PT3dw8PD2NgYlcKOHTvUawcUDrt27UJxcfr06bKyMhS/BiQS
JLTCtbC5e/euUqksLS1V35vuk08+Qe1sEEptBsr5goKC0NBQb29vGxsb2GpA
QEBdXR3f4yKI9YHt9drb21tTU5OUlJSTkwNvbWhowG/0aiWzpi67qqoqNzc3
MTExMjISjunp6eni4uLo6Ghtbf3+++87Ozvr1mXjTUZGRhCvFhYWcBEM63nd
N9988/z589XV1QcPHnB7ZrIG3LiDmZmZmHmLi4txHw20ATd7/sxtRIz7hfP6
8MMPhUKhpaUlQrFu7fabb765b98+WIJYLIaFkHabIAiCIAiCILYPrLeyVCpF
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
wKRh8yhCxWKxXC7ne1zE1mFmZqarq6uioiI1NTU6OhrRVSgUWlhYaFWJMl22
ejeZzX8GwoS61dXV6enpCDJskaTe6nOJDYXJ+dkWo6wB95UrV7jHkjAYWKwe
bhXCJk2W3sDd4HT/q2z7/10qeeLEibS0NLwcb4K34vtsCIIgCIIgCEI7SMVX
VlYePnw4NjamUqkUCkV9fX1NTU2FNhoaGlpaWnDY8PDw9PQ074IgFBpVVVUS
icTHx+e9997TmqIjOUc1Tc2INx9107p9+7a6Uru4uFipVN69e5fKpZcFF1Mu
l0ulUj8/PxsbG1Sgvr6+lZWV1FmVeCk0ddkdHR3wSm7nvUuXLoWFhSFswro8
PT0RQu3t7XXrsvHy0dHRR48eLS8vw/c3+XSYULe1tRXhJT4+Pjs7G37R3Nw8
ODj44MEDWn293WBy/tnZ2aGhIfUG3GyVPuwWv9fDBtxMVgCXvHr1amhoqJeX
l5WVlW7ttomJya5du8zMzAQCAbdOErlcf38/76kaQRAEQRAEQWhlZWVlamoK
CTkyc6SvISEhAQEBp06dEmkDFWhUVBQOKy8vR/nJuyCIyVddXV337dunNUU/
ePAgCmoUzqhEcJp8DXUbwkyrra2tqqpKXamNImtgYGB+fh6F0uY/uzBo2Kpg
OKOtrS0qUzhmSUkJdVYlXgpNXXZcXFx4eLhYLPb29nZxcbGzs7O3t+f+FQqF
iKK6ddlw9sXFRUwHvNghE+oisDQ0NKSnp2dlZeXl5SHaIP7Aa/RHlktsDkzO
v7q6ikRFvQE3kgFMRqmpqfgXP+thA26m3f78889v376N9Ax+5+XlpVu7bWRk
ZGJigr/iMLgtfPb8+fM1NTW8p2oEQRAEQRAEoRWkqUNDQ6grpVKpSCTSne4y
+XN0dDTSeN4FQazjsGanV4alpSXqaJwdUnpUzXwNdRvCTKusrAylHym11wUm
pw0LC7Ozs4OFo+qUyWTUWZV4KTR12e7u7oiW6kuwmAKUW2TOuy57LUxNTWGE
rI8JxlxdXY1ApIeyXGKTMcQG3Ex4jjGHhoauUbvNdpXE7IAcifdUjSAIgiAI
giC0wpaxZWRknDx5Ernu3r17UYQilT1w4MDf//3fi0QiLy8vDw8PNzc3VKzc
v/7+/lFRUWlpaY2NjRMTE3wNvq2tLSYmRiAQvPvuu2+99ZbWzPzw4cNnzpxB
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
WVhYWFFRAUe7c+cO7w242VfGN27cQHBGNHB1dUV2hHTOxMTEyMhIa47EGl0h
jAQHB+OFcIqhoSHepegEQRAEQRDE9kGlUiERRamLOvfgwYOmpqZisRh5qfox
TBAUEhKCw3AMqmC8ii9ZrkKhwEjUtYqaYJzR0dEYNhJs5OqbPMKtCpOzoQRD
gQaTSEpKQoFPSu3Nh+2fwD2neuWG8mvpWc/Yu3evvb09PhHOVVxcTLd7ffnt
b3/7nUdnCHQIturtKkiX/bKwqIW5oLq6GlcVl0smk9EVI9aCATXg1kzVECsQ
MdYY1XFGeLn+SNEJgiAIgiCILQ9bbYiMFGUvityAgIDs7OxBNdju7shXQ0ND
T5w4ERcXV19fv8nro5iesbKyUiwWm5mZ7dq1y8TERD213rFjh5GRETJwNze3
xMREVKBTU1MrKyubM8KtiqZSGyaBch51/bVr12AteXl5DQ0N3d3dtGRu02At
7318fBwdHS0sLFCEKhSKl30ftkLy4sWLzs7O6itnEBCEQiEKVS8vLw8PD/iU
q6uri4sLfunn5xcZGZmWltbY2DgxMbERJ7hV0aHLrq2txT3FVY2NjT1z5oyv
ry+uPK454jNusYODA+myXwG2rhvRCfNdYWFhfn4+QlZOTs6NGzcwwfEuuSX0
GQNqwM3ELJiXER88PT1tbW3Nzc11a7d37969f/9+ZICIKsjxkOxhKp+ZmSHt
NkEQBEEQBLHRoJI9e/bswYMHra2tUfa6u7sHBQVdunSpWI2SkhL1H/BvS0vL
6OjoJstymZ5RJpOJRCKtciT8F7/En3AADkN+vrKyghduzgi3KppKbW5PrcTE
RNT1NTU1KMfw+8nJSVJqbxrDw8Pl5eXR0dHHjx+3sbHRurZ5LbA9JDMyMo4d
O/Y9tb3FAgMDP/roI9zroqKi7OzstLQ0FLne3t6IFU5OTh4eHidOnEhJSUH1
uhEnuFXRoctG7MXddHNzw+U9fPgw7oKtrS1+Ztv2ki77FWDfpzx48IB7XFNV
VYVrfuXKldLS0ra2Nt4lt4Q+Y0ANuJl2G5EBswMmaH9/f8QQ3drtN954Y/fu
3Xv37rWzs0PiFBoaCu9AVCftNkEQBEEQBLHRIK8Wi8XqAsCQkBBkpBFqSKVS
biN35NtjY2N8KXqYnjEtLQ01u9bUmukZX+3hDKEVTaV2amoqip3vtIeghZGb
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
3ZCXvY8OLCwsfvaznyHNvnDhgkwmQ9qMk1KpVCQ1+pMwpXZXV1dZWZlUKkV5
npiYmJycXF1d3dPTQ0pt/QSlpVgsNjU1tba2hoNEREQUFxejWlzjyxUKRUhI
CBwHL0ccUO9Qz1R+cB94H0yC7eC6Dbuvsu0pdOiycRe4K+np6YljcMVwL7gF
RWwvC0J/WF1dnZ2dHRkZuXnzZk5OTkxMTHp6OsJdZ2fn+Pj40tIS3wMkDBW9
bcDNojriEkaie1NuTWhXHIIgCIIgCOKVYarDoqKioKAgS0tLKysrGxsbVNbn
zp2rr69/WWkz6+Gouf6Q7aZeWVmJDPaV95Dk2j3PzMxkZGQcO3ZMa5L8Z3/2
Z9///vd/8IMf7Nmz5+/+7u9+9rOf/cu//EtwcHB0dHRsbOyFCxekUmlaWppM
JkNpIJfLMQz1/jvcE8vBwcHh4WEUp2NjYzgjfCJOil2QrbqKSVOpff369YKC
gsTExKysLNRNDQ0N+OXExAQptfUT9kSR6z7AVYuwZ92vYu0Y4J5isdjMzOzQ
oUOurq74OS4urqqqCu7Q19fX09MD78BHFBcXo3rFnyIjI/FxKSkpjY2NW2/h
MYs2MHhEA1zGjo4OpVKJoIH4ExMTo1uXffz4ccTViIiIy5cv5+bm4lV4+ejo
qPpeFoT+8Pz5c9zu2dlZbuORK1euwHdg6rhxd+7cgRls4chPbCh624CbabcR
lxDDYfDh4eEeHh4HDhxA+vSjH/3oT37nKxQKEQYTEhKQMeLsaC0xQRAEQRAE
sUaY6vDixYtIQc3MzMzNzffv34+aGnV0UVHRyz5hYE8dNR9VsWeVlZWVqNBf
eREmCsZ79+6hYMSYnZ2dtSbJ3//+942Njd94442/+qu/QlKNnPlv//ZvbWxs
BAKBk5MTXoVPd3Nz8/T0FIlEYrE4JCQEQ4qKioqJicGoEhMTuToUJUNVVRWq
UVwifOLQ0BC3tGkL7/OmqdQuKCjg2oN+/PHH+M3IyMjU1BTuAim19RPYKozZ
2toa1u7u7q6+xFEHrF5mOyq89957x44dg2ucP38+JSUF7lBYWIjCWaYGzKOm
pkahUHR3d09MTGy9rVlZtEGpjmiAsBAXF4eCHUHDy8sLkUS3Lhu+U1tbizvS
2dnZ19cHn4LvLC4uqu9lQegP33zzzfPnz1dXV9kiSYZSqcTt28KRn9hQ9LYB
N9NuY2CcrhyJX2RkJLIjpExIn3Q/kGSLwE+ePInYiGSpp6dnbm5uQ8dMEARB
EARBbA2Y6jAwMBApJdLLnTt3mpmZbYQGk6m5mdhzLQu3NGF9c8LCwuzs7LQm
yT/4wQ/eeOONv/iLv8C/+HmNGbW9vb1AIOBkqhheREREdHS0RCLBaDFUfCKr
FLZwJ1xNpXZiYiJqJVwBVOjj4+OoqlC203NIveXVtl9gikJ4vZubG/ziwIED
qEkjtME84qX6dxsiLNrABRANEBbc3d0tLS0RNBAqjY2Nv0e67K0Iu+8ymQy3
HvcUPyP4b+HIT2wO+t+Ae3BwEBEMcR4BDbOA7vSJwTUQfNktiwmCIAiCIIjt
DFshiRwY+adIJDp16lRAQMBGaDCZDq6wsDA7OxsZON5/YmLiZd8HL8EL8XJ/
f38rKyutufFf/uVf/s3f/A3+euTIETc3N5yXl5eXh4cHfnZxcXF2dhYIBHZ2
dtbW1siibW1tnZyc3N3dXV1d8VehUHjs2DFvb29fNQIDA8PCwqKjo5nWu6io
CHUETqeurk6pVLa3t3d2dnZ3d6OO6OvrGxgYwIVlWm9UFouLi/q8fowtDeK2
UFNXaufk5OA0b968ifOam5vDkSRa1GdYgyqYMUzd3t4+KiqqpaVF96u4pYB4
7YULF7iFx2xzMK7zQrEabM0wXoIXbs55bRw6dNkw/kuXLsH3cSkQB9Qb1iCA
fOf7C9JlbxmWlpbGx8cR0jkbQNjHtAWbR2xEhESc5HuAhKGi2YD71q1byCIQ
Y5FXcD24kVp8pwE3Igkm6G+//RYv//3vf7+hI5yamsKQEOdjYmKOHz+OWGdh
YWFqaqr7gaS5uTnSLQTJ2NhYjH9b7SdMEARBEARBvBpsD0lkj6i2Kioqampq
6uvrN0KDOTY2xrXlzc7Oxqe0t7ejZl9cXHzZ9xkeHi4vL4+Ojvb29n7nnXe0
5sZ79+61s7P753/+59DQ0MTERJxXUVERPjctLS0hIeHChQt4OXvIcOrUKT8/
P7FY7OPj4+HhIRQKnZ2dnZyc1B9aqj9/4LTeXl5eGIBIJAoICAgPD5dIJJcv
X05JSVF/gMOe2/T19eFk9XmHPbZ5GluzwZTauHq4WVyfWVTim1MTEa8MfJlb
8wz7hBnDemGfSqVS96twc3t6emCx586dc3BwgBPB2uEmMIaOjo5f//rXg2qw
J+2ccn9zzmvj0KHLxjV0cXGB79vb23P/IjgcPXqUPYTkFotWVlaSLnsrgZmR
WzCM0IdIrr5InpfOI8SWQbMBN8xsYGAA0QN5F2ZeWFpOTo5MJlNvwD05Ofnk
yZPN+TZwZWUFEQxxvra2FlnNGtvc7Nq1y9zcHNMNUiNMIjiLpqYmanNDEARB
EARB6AnsOUlqaiqqvFfWvrH30ZEkM7Up6y/MFKnI7VUqFff0Fe+DSlMikURH
R+NgvKdIJMLb2tvbI6/Gm5uZme3cuVN3Ho5jcDBehU/k1lKGhISEhoaqK1tR
aOCU9XnNAFsbiStTWFhISm3DhQnuYI0CgWCN3aM0d29wc3NLS0vbDrrjteiy
2V4WuKS4sLi8OFgul+uzUxOvDNPVYr6orq5GPExOToZ3IDYikk9NTfE9QGLr
wLZJQTBpaGiAmSUlJcHk1Btw9/f3Y4Le5FlYc1JYC6zNzavtyUMQBEEQBEEQ
6whbhIk6rqSkBGl2VVXVwMDAK3cH6OzsvHz5su4d162srPz9/dVV4axnx/T0
9L1791BmdnV1IdmWy+UYT3l5eXFxMfLnxMREiUQSFRUVHh4eEhISEBBw6tQp
kUiEj3Nzc0Oa7eTk5OjoyFZOHjhwAMNwdnbGAd7e3j4+Pr6+vvgXP7Pnk2Fh
YZGRkbGxseqtvdlKVKVS2dLSoru19+PHj1dWVjZiwRVrQoTP6unpuXnzJsaW
k5NDSm3DBcYDk4YZ+/n5OTg4mJmZwYxhbGt8FQze1tbW1NT0+PHjBQUFW0Z3
zEwdxoyYAEfr7u5ua2uDD8Il4Zu6ddleXl6nT59GTIiJieFa/CC2wGX0edkz
8cowXS1bJJmfn5+dnZ2ent7Q0ID5a2lp6enTp1999RXfIyUMHtZIjmlVkB7A
3tQbcN+4cQMZAqL05OTkpq2+Zlv6JCUlYRJBMDx48OBf//VfGxsbGxkZ7dix
Q/dXtB9++CGyCAwbyQzeijrUEwRBEARBEJsPy2mRUcvl8oqKitu3b09NTb1y
dtrS0hIVFWVvb79///7du3drTYkdHBzOnTun3vCR9bhcWVl5/PgxRjUzM4P8
H6kykvzh4WEMErUAkmeUn/gIpVKpUCjq6+tRGnCtDdLS0qRSaWxsbGRkpPqz
C83nkM7OzjY2NgcOHGBab0dHRycnJ/XW3myvzvDwcJyO7tbe9+7dm56e3ohH
Q6z1OT6orq6O28AKRTcptQ0XWMv169dhTv7+/ra2tjt37oSxwYx1v6qvry83
NxcGCRuG+1hYWAQFBdXW1m4Z3TEzdcSExsZGOFpKSkpMTAxOGc4Lx9Sty87I
yOA2dmtra+vu7ka4mJiYgGvo88awxCvDdLWIupggEAnhC3CQ+Ph4WE5raysX
GJ8+fcr3SAmDB2aGAPLixQsEk/n5ee6xJDIQ9QbcsD0kBg0NDUifkLRszvdE
7Nvkpqamq1evIu1B9oKsBnOKiYmJkZGR1uyLLSZ3cXEJDg7GTIRkBmkMdagn
CIIgCIIgNh+m+vlOl+pXfkOFQhESEqJbTy0UCqVS6Ua0CEdligEwuXdERERo
aCjGw55P4qORsWNsumVNLGnHwfb29rpbe6tUKuTzGyGeZedVX1+Pj1Nv9ElK
bQNFU2cH04Ih6X4Va4Xj7u4uEAjwQpgi3mdzxrwJMFNHdYwCX13SziIJ6bKJ
78D2+mhtbc3Ly0OETE9Pr66u7uzsRHhcWlrie4DEFuThw4eY8dUbcF+8eDE+
Pj45ORmRHLa3yTtpsE0tEBKRq6jvZaGDvXv3IrfBnIKkAudCHeoJgiAIgiCI
TYM1rh0YGGhpaVF/GskUjmzV4lq+N2eKS6Top0+fNjMz27Vrl4mJiXoCvGPH
DiMjI+TJHh4eKBvXUU3JlleNjo729fUxuXdxcXFBQUFubm5mZmZKSsrly5cl
Ekl4eHhAQADycG9vby8vLyb31tolx8nJydnZGX/FmH18fMRisZ+f36lTp9Rb
e1+4cCEhISEtLS07O7uoqEi9tfetW7dQnqhUqp6eHgxMveHI3NzcwsIChr2y
svKdpRTsYk5MTOC19fX1uKo5OTlJSUkoulFu4+xw4+bn50mpbXBMTU11dHTA
Ms+cOXP48GH4BUwLN1erJTDa2tpQ9sIgYY0uLi7u7u5xcXGwrk0e/GuiQ5cN
C8/IyOC+ROB2iz169CjXhZwtYCZdNvEd2F4fmLxqa2u5tWqlpaUI/jAt+Bpm
OlgdfWVDrCNcWxn1BtywOoQv5ACFhYWwvdbWVhgkQtzmNOBmbb9kMhniJ1Ia
W1tbc3Nz3drt3bt379+/HwEWWQ0CL+cyyExIu00QBEEQBEFsNCyD7ejoaGtr
455G/uY3v1FXOLJaby3iI/ZIEGm5l5eXVtEQ/otf4k8+Pj5FRUXrqKZkDzoW
FxcXFhaY3HtwcHBgYKCvrw9nh2S7s7Ozvb1dqVSiiKioqCgrK8MwmNxbvbU3
w9vb+9ixY0Kh0MXFxdXV1d3d3cnJCdm++kNL7hmRm5ubh4cHzl29tXdcXNzl
y5cTExOvXr2KmkW9tTf3iBJFDUobFDhaL6ZKpUKVzdp6oti5ceMG9wTmwYMH
T58+JaW2waHZLxvGk5CQoNUSGI2NjWfPnj148OD7778PM0MJCYvC+2zy4F8T
Hbrs06dPw3fUvxdwdHTElUFx7e/vj2tFumxCE/atGSwBsZ0L6fn5+QiYMLDh
4WFMXmQbxPoCk0Og/k4D7pKSkvT0dG6yzsvLw8QNg9ycBtzs+2VunaT6fiA6
tNtvvPHG7t279+7di3iLpCU0NBQpCuIqabcJgiAIgiCIjYblrjoaTDM13FrE
R0xxKZVKhUKh1gTY2NgYGbKpqalYLJbL5Rt5fmsCVSpybzZy3a29BQKBvb29
tbW1hYUFTkG3GIrtG+/u7s5tSolTDgkJUW/tjSuAi48PRc2C0kZ9YJpK7aSk
pMLCwoaGhrt3787Pz/N1xYjXh8n9YGAwKlgL/sXPWi2BAWuBCcHwYIEwJ/UO
9QbEWnTZLErAg+A+cEC4DPyFdNmEDphbsRheVlaGOW5hYWF5efnFixd8D5DY
guhbA24WYBMTE5F4rFG7jcMQgTGzhIaGIjKTdpsgCIIgCILYINgu6K2trbm5
udHR0eqtpW/cuNGuBtLa8fFx5NKPHz9+/vy57ndGTt7X16dQKCIjIx0dHbXm
vbt27TI3N7e0tAwPD1cqlZtzyjrgVtfgmnDPXXW39kaJERUVFRERERISIhaL
1Vt7Ozs7Ozk5CQQCW1vbQ4cOqbf2Znh5eXl7e+NVfn5+QUFBYWFh586dw7XC
LUhISOBaZldXV+OjUdd8/PHHeXl53LrN//zP/0SZ8Ktf/QqVDm7TzZs3BwcH
N7S1N7GhMLkf7ruLiwv8ws7ODvYAA4D5zczM/OH/byKMkhB3+Te/+Q3uOO7+
P/3TP6G6fO+9944dOwYjhGXieD00ALZojQs1a9Rls541uCbwFLgYokRcXBxO
E06BMyVdNqGD5eXlycnJ/v5+RMiCgoL4+Hj829jYSM+xiY1D3xpws6iLmImk
BQEWaQkSEt1PJtnevJhikJOUlJS0tLSMjo7SynOCIAiCIAhifWE9ta9du4Z6
39PT88SJE4GBgaGhoaxdC6O4uBiJtO6t7RhIttva2mQyWXBwsI2Njda89yc/
+YmVlRW3/V1HR8fmnLIO2GMfTu6tu7U3zg5ZOi6dQqHg2pEzrfeFCxdiY2Nx
9c6cOePn56fe2pt7bolTdnZ2dnBwsLa2xsWxtbW1s7PDfx0dHf8/9t49qOrr
3P//joeqqWOsNQZLDJM6VryUsYQglyChlGGAsMNQyhAkZO9DOZSTUAxQDocS
hkAQGUSK3ETud6jc74IBymaLiIqA2VxCEu6ogBVNpKlj7e/9O5+ZdT6Tvfs5
WwU2l+f1h4Pw2Xuvz1rredbzfPZ61hv5gpWVlUgkwpW4/t///d9/97vf/fa3
v8X7YGjc3NwkEom7u/tHH32E90eWnZub29TUtKTS3sSSwsr90tPTMe6wC8wK
2OC5c+cwuzD9/sl7VI5RxsSDJWICYMIgo9y7dy/mEmZFbGwsrl+BE4Ad9cDt
WFOxLpsdynry5En0DEyssbERXgIGCHucmJig7JgQ4OHDh3fv3sU8YVWrqamp
hYWFNTU1mEK0q5xYClaaADcLZuB76+vrsabAoyL8EBYZZJvSDxw4gMUFgQci
tOrqavoOiCAIgiAIglhcmMKvr6+vjY0NX0VakY8//hgxrYr1O4i0Kysro6Ki
XF1d8Z5K4158HN6We/aCuH15bnnpYOVR3BNL7tkLEmGl0t6s1ltgo8ILL7zw
4x//+JVXXnn11Vdfe+01rorqV7/61W9+8xuJRPLhhx/infH++JQllfYmlofz
5887OTlh3GEvmCecrADs6J+8wwQwykynQEdH5//xpFHDw8Nx/QqcAOyoB87V
qFiXHRISguSdv02UIFTn8ePHjx49+tvf/iaXy2tqas6cOZOYmMid6cee8xPE
UrNCBLiZEy4oKEDkoOJRM8wtY7lBpEG7iwmCIAiCIIjFhe2QzMnJiYyM9Pb2
9vf3Dw4ODldGcXFxd3e3iiec9/T04D19fX3t7Oz27dunNNzV0dFBoLtKj79T
hJVHDQ0N9ff3Iw1pb2+vra1VKu3Nar3Ztkkm7W1gYPDzn/987969P/sf0Hvo
qAMHDhw6dAh/euutt3Dl22+/LRKJ8CqxWOzj46NU2psdStna2iqVSvnS3kjS
0Ug0dXR0dHJyUsVdr8SSwo6FNDQ0dHNzwyQpLS3FSP1T2Q5JzKLjx49j5nh5
ecFgkS3iYoyvunZIsrrsmZkZTKqBgQHMNKTbmH4VFRWY/5iZmKWenp6YtNbW
1ubm5sJ12fA2DQ0Nly9fxi3Pzc0t8+0Qqx1uu/ujR49GRkYuXboEf5ibm8ud
6VdeXn7t2jVyesQywE7kQDBQU1MD152VlYU1+uzZs/i5qqqqpaXl6tWr8HJT
U1N3795dIgFutk29ra2N+wLawcFBT09P+CtRJjuIJcnd3Z1bZdBash2CIAiC
IAhiUWBnSPb09Eil0rq6usbGxubm5jZl3Lx5c3p6+u9//7sq6pCdnZ3x8fGu
rq5Hjx7V1tZWGu4q7gRb1bDyqLm5uZmZGXTs2NgYEg2l0t6s1rukpKSgoIAv
7f3hhx8eO3aMPbRB1vD666/r/w/IC0xMTMzMzI4cOcKdTol/8Uul0t5MNyc0
NDQyMpIv7Y20ora2Fm1AltTV1SUs6EwsD5gPGK89e/Zg3MViMWZCcXExjO6f
ys6QxCxqaGg4f/48klwYLHco2eTkpLrOkGQJb39/PyYVJjZmWnR0NKafl5eX
i4sLZiZmKeYw/0hVgbps3Pjw8PD4+DhumSRIiKflyZMnsJrHjx/DFWNxgb1g
dmGOwcdmZ2djmpHTI5YBdiLHyMjI559/fuXKlaamJiz6mIrwkJn/Q3l5OXz4
9evXv/zyy9nZ2aUQ4GZfGGH5uHz5MmwhLCwMcYJw7faGDRs0NDQ2btyIEA5h
Bjx2cHBwYWEh2Q5BEARBEASxwmlrawsPD7e0tNTV1UXEqzTcVTwrbx2iKO3N
dqu+9957dnZ2pjyMjY2PHDmiYr0V08o0MzOztbXlP6LE0MTGxqLn8/PzkZsI
CzoTywNGAUOD8cJgYaRW185hVhIIw0ezo6KiMNOQwCqdq+ysBqrLJpYaNjNb
WloyMzP5esfk9Ihlgy30crkccy83Nzc5OfnUqVOYkHFxcfhvTU1NV1fX6Ojo
kgpws2Zg3ff19X3a2m0bG5tPP/2UbIcgCIIgCIJYmbCtXPX19Qh3dXV1tbW1
t23bpjTKNTU1DQoKqqur6+7unp6eVnfb1QOrxkUmcu3aNU4TNjo62s/P7/jx
497e3v/5n//50UcfcRpDwcHB6DG+tLeDg4NIJEKaYGVlZWFhwZf2Zo8i7ezs
uPpuJu3t6uqKl3t6evr4+AQEBPClvUtLS8vLy1m5d1tbm0wm6+zsRNswTD09
Pb29vZyADvKRmZmZubk5khdZFFpbW5GcYsgwXi4uLivwbFVm3Rjx8fFxpXXZ
YWFhmFSYYJhs1tbWuB0TExPMSb5gjZeX1yeffEJ12cQywPbuwpQwS/l6x1Kp
9KuvvlpYWMCUXqLnPwTBwRb6iYmJvr4+LKxcBXdycnJaWhomZEFBQW1tbXt7
O3cW9K1bt+7fv//w4cNHjx4tRTO6urrgsZWe6KsIq93W09NzdnZGwJCRkdHS
0sLJ3ODdFrGFBEEQBEEQBPHMsHD3/PnzEokEIe62bds2bdqkNMq1srKKiYlB
+D02NrZuy3/YQx7kKUiZ6+vrkSacPn06KCjo008/xQ/cYVPV1dWI/5ubmz/7
7DO+tHdeXh7SmcTERPRkREQEX9qbPXh0cXFxcHDgS3szjhw5wtWAM2lvXMxp
ebO9lNHR0fHx8efOnUMOgrahMSxv6u/v586iJPHN50cqlUZGRmKYWNF9bGxs
R0eHutv1vzDrxohzdX+Kddnm5uaYVLq6uoaGhvgZt+Po6IgZ5enpiSmNWZqV
lVVeXo7JTHXZxDLAilUx09ra2vh6x1VVVT09Pffu3aPvU4ilhi309+/fx3I5
OjqKuQc3WFZWVlBQkJmZmZycjH/xM37T2tra29uLkACO8eHDh0vRjKmpqRs3
biCWQPCAtV64mIXVbu/atevQoUMIGODwERXg5WgnbZUkCIIgCIIgVgisICgr
K8ve3l64DggX4DIVZbvXPEgQrl+/XlNTk5ubGxcXFxoaigwFuYlMJhscHJyd
nVX6KlaQ2NfX19HRwZf2Znh6ejo5Oako7c2Ks7hyb7yKnfWHtMXX15cv7Y0E
Hx9K4puLAnoSHcspHNna2qLnw8PD0cPqbtf/wqwbI37+/Hnhumwm/41rcCPn
zp2rq6vDLCV7J9SCot5xTk4OvOv09PS9e/foeTixzGBNx8rOP92UgRgAE1Uu
l09MTNy/f39JmwFnDueM9R0rDty4cMzGoPN2CIIgCIIgiBXIgwcPpqamBgYG
4uLirK2thR95vffee3/+859VlO1eq+De//rXv6LTenp6GhsbkYlkZWUhPUGo
X15e3t7ejpxlcnISHfuvXs4VJHICOnxpbwbeKjY2li/t7ebm5uLi4uTkJBKJ
rKysuLpa7nRKBn5jYWFha2vLNls6Ozs7Ojrypb3DwsIiIiKQQCUmJqLZfGnv
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
TExiYmJaWlpeXh6Sxz/+8Y/W1taamprbtm3bvHnz0z6QfPnllw8dOvTLX/7S
1NSUE+4RqMtuaGiAhdK+FIJQCtvT3tPTU1VVxXns7OxseOy2trbh4WHaQkys
NJhk3p07dwYHB5dHgBtWADPBJ8Iu8P6+vr5YbvT09IS/vNPQ0MAahwuwaLq7
u8fGxpaWll69epWORCAIgiAIgiAWBalUGhkZaWtri9B0165dSoNS/AmxKHK9
hoYGpHjqbvLiw7JaBP+tra1IZrOyspKTk6lSeyXAis7m5uZmZmaQCo2NjQ0N
DSmV9kYSV1dXV1lZWVJSUlBQwJf2DggI8PHx8fT0xGQWi8V8aW8rKytra2tY
gbm5OTIvvrS3hYUF/mpjYyMSiZDBOTk5HT16dO/evSoeHanI1q1bX3nllf37
9+OD8M7Cddkwt8nJSTq5iyCUwr5L+uqrr7CWwXyys7NTU1OxWlVUVMAz0CGr
xErjyZMn//jHPzB1v/3229nZ2eUR4OZOcsY68vXXX+OzsESGhYVhRRPe6r9h
wwascRs3btTW1saCZW9vHxwcXFhYSEciEARBEARBEIvCxYsXAwMDhet3jIyM
/Pz8EBsjjkXwrO4mLz6s7g83iJSWL39JldqrFEVpb6RgfPUcvrS3mZmZsbGx
ilVsz8kPfvADZH8/+tGPXn/9dXw61WUTxPNz+/btvr4+mDk8NgwqNDQ0MzOz
paWFZOiJlc9yCnCzlRFv6+vr+7S12zY2Np9++ikdiUAQBEEQBEE8D0xnpLq6
+oMPPhD+ltzc3DwsLKytra2/v39mZkbdbV80FCu1a2trc3JyYmNjU1JS8vLy
ysrK2tvbh4aGqFJ71aEo7d3V1YXRRCaFUS4tLeU/nAwNDQ0ODmbl3kqlvZG4
7d+//9VXX33ppZd++MMfPvMDyU2bNr344os7d+48cuSIs7MzPjQ6OjojIwPp
IZoHE1Mq7U0QhACwl9HRUZh5Y2NjdnY2/0kOfDuWLXh7rHpPnjxRd0sJ4vso
CnAXFhZmZWVhhcJkxs98AW6EK9zXo89WrMFWRiyIiHawALm6unICbQJBIKvd
1tPTw7IVEhKCNYt74I8FC++2FN1CEARBEARBrFVYUPrnP//5vffeEz5HyNra
Oi4uDmnd1NTU8xQNrTQUK7URn3PlfsXFxc3NzUhvv/7669nZWarUXnUoSntP
Tk4im+POopTL5Xxpb4w+hpuVeyuV9v7d737n4ODw5ptv6ujovPTSS8/8QPKF
F1748Y9//MorrxgbG7/77rvIBz/55JPo6Gj+rFOU9iYIQgCYyfz8PMwcRl1e
Xo4FixW9Xrp0aWRk5NGjR3AIcAvqbilBfB9FAW5M2oaGBszevLy8jIwMvgB3
T08P5vMzf0nKVkaEczdu3MCqh5XO29vb0tJSV1dXU1NT6bLFard37dp16NAh
MzMzLy+v+Ph4vBwrKW2VJAiCIAiCIJ4KVraTlZVlb28v/AgFF+CyRRR8XCEo
VmrHxsYmJCQgk71w4cLg4CCSXGQK9BxyHaIo7Z2amhoUFPTuu++++eabr776
6jM/kNyyZcvOnTtfe+21o0ePHjt2LJAHph+yTqXS3gRBqAKsBhYEH56cnJyY
mHjmzJmamhq5XE7OnFj5MAHuiYkJ7mkhO4KACXA3NjbiT4t4jAyWOdiLp6en
paXlnj17VFzI9PX18RK8EI2E0T1/MwiCIAiCIIj1w/z8/NjYWF9fX0xMjJWV
ldKAc9OmTdu2bdPU1JRIJOfPn//222/XRgEpO919amqqv7+fX6mdnp6OO71w
4UJ3d/fk5CRtqlm3MANhO1WQD3744Yd2dnavv/76T37yk2d+IAmbevXVV3/+
858fPXrU3t6eLwguFot9fHyUSntXVlbW1dUh9Wtubm5tbW1ra+vo6EAi2dvb
K5fLh4aGkBKOjo5i0t6+fZuJ4NDsJdYb8Oqwi5qamoKCgpSUFJhtcXExjGVi
YuLu3bsPHz5UdwMJ4l/CBLgxV0dGRrAAwdVXVFRk/g8ZGRlciIIlSSaT9fT0
cBXTzyl4jTdpamo6d+6cv7+/SCTS0dHR0tLaunWr8EK2Z88eS0tLT0/P6Oho
tBArEcncEARBEARBECoyPT3d3d1dV1cXFBRkamr6r56caGtr6+rq+vr61tfX
r5nnGwjd7927d+fOnZs3bzY3N/MrtRHqI/7nFC3v379Px46tWzD6U1NTAwMD
7e3t5eXlSNaCg4Pd3NzeeuutgwcP7ty585kfSO7YseNnP/sZJ+GNhM7W1pY7
oBJp4OHDhw0NDZVKe0skEm9v78DAQDQjNDQ0PDw8NjYWrcrPzy8tLa2trb14
8SKa2tXVxbZWrplvEAhCddjeZqxuGRkZJ06cwL9Yv27cuMEVuqq7gQTxL2EC
3A8fPsRcvX379vDwMCZzS0tLVVUVvP3Zs2cRq2RmZiJowW+kUunzC14zk8nL
y0NAaG9vb2BgoKWlJbyQbd++fc+ePVi5XFxcsCShbWgMWrKIvUEQBEEQBEGs
VVhdm6enJ0JKpQGnpqamrq6upaVleHh4W1ubupu8aHzzzTec0AluClE0VWoT
iihOEm9vb2Rqz6/EzczqqaS9WfaHl3BPMp2cnGC8gYGB/IeTlZWVsGsm2L3G
zlggiP8TdhCHTCbLyckJDQ2Fby8qKiJdYGI1wlYizOfz58+fOXPm1KlTJ06c
WIqJ3dvbi0UEawpWOh0dHRVXNFyJ6/EqvBbv8PzNIAiCIAiCINY8AwMDlZWV
UVFRrq6uurq6SuNMbW3to0eP4oL4+PjOzk51N/l5YfomIyMj3d3dLS0t5eXl
mZmZVKm9bmHF+zMzM6OjozAKTADkfUjxKioqcnJyEhMTw8LCfHx8YAUODg7W
1tZmZmYGBgaHDh0S1iRVBFfierzKwsLC3d1dqbQ3PkIkEtnY2FhZWeEyfJaR
kZG+vj4s1NDQ0Nzc3NbWFm3AXy0tLe3s7BwdHdEwsViMN/T09EQ7AwICQkJC
YNdoeVZWVkFBQUlJCSv3bmtrw93Blq9du4Y77enpQf7ICeggn0UnzM3NsXJv
dQ8OQTwLTKoM07uqqiohISE1NTU7O7uoqAjzf3h4mMTriVUEK+jA8nTp0qWa
mpri4uKMjAz+xG5sbOS+hJqamoIDf2YNPiyCUqk0Pz8fa5OLi4uKX5ZpaWlh
TbS3tw8KCsrLy2Nfhy1FbxAEQRAEQRBrA1W+Ct+3b5+dnZ2vr29OTg6SO3U3
+XlBHnr79m2Eyp2dnYjqMzMz09LSzp49S5Xa6xaW6/X397e3t1dWViLRi46O
hl14eXkhI7OxsTE3Nz9y5IjSR4ICmqSKsI2RPj4+KSkpSqW9kc1hTiYmJsbE
xERERISEhPj5+Xl6erq6urq5uYnFYolE4uzsLBKJ8D4WFhZoj5mZmYmJCdqG
5BHtxM/c/km0HKbt5OSE17Jy7/DwcNxdfHz8uXPncKewaziB2tpa3HtfXx86
gTuLEmZCSjrEKgXe++9///vCwgJmslQqLSoqys7O5k7kqKiouHbtGonXE6sI
/rdmIyMjcrm8o6Ojvr6eP7HxQ3l5Odsb/8wC3PPz86OjowgOYSlYKVSUudm6
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
vaOiojCfkYgtj2o8MzRXV1czM7PVfgCCAKyUD32LG+RLe2NocNfs+eRSSHuz
R8rLMKbEamd2dnZwcFAmk5WVlSUnJ2N1yMzMbGlpoflDrDHYMQWcnBMcJgIh
eE6+APeNGzcmJiaeVmuenY5SWVkJD48VFr4aq62wV2dPJrEQYNWmMzoIgiAI
giDWJ11dXUlJSRKJxNzc/LXXXlMaOurq6rq6uiJ2RcA5MDCg7iarBIJqBLdT
U1O9vb2fffYZ/1D3wsJCqtRejbC67OHh4Zs3byKFaW9vx1BiWqanp588edLP
z8/Dw8PZ2Vm4Ljs6OjojIwOvwsv7+/uXZzeUXC4vLS0NDw8Xi8UmJiaampru
7u4VFRVrT2aUlfKhb7u7u/nS3jk5Oeh55MLx8fEYBb60t6Ojo4ODAyv35hTP
MXb8ra1M2lskEmGU4bXQmW5ubnxp74iIiJiYmMTExLS0tLy8PL60t1Qqlclk
HR0dcHpoGF/ae3JyEqk6mj0/P0/74tYPDx48wNAPDg62tLRgfp46dQrzk9sw
BoOFZyCBM2JtwI4p4L4tgk8uLy9HUMQX4K6vr4d7xMwfGRmZmZlR8eACph/X
2dkJ8/H19YUzf+ONN7DGbdu2bdOmTUqjSg0Njc2bN2/ZsgXuHUshU7qHN8Yq
j7V+ebqFIAiCIAiCUC9I0iMjI21tbfX09Hbt2qU0dNTX10e+f+7cOQSxiGbV
3WSV4LZpXb9+vbGxsbCwkB91f/bZZ729vVSpvepgddkNDQ3FxcWYkJi6/v7+
EokEGZCVlZWRkZGJiYmpqalwXbZMJuvu7h4YGBgdHVU97XpO2NkITJPUxcUF
s3HtyYyyUj707fT0NF/au6enBz2PdBipK0aBL+2NrsjLy2Pl3iEhIQEBARg7
eB70mFgs5kt7Y6wxvvzHzkza28LCAn+1sbERiUSYAHxpb8yW6OhoDEFSUhIS
Z760N/eIsq+vD1Nifn5e3V1ILBPffffdgwcPZmdnMTNramqSk5PT0tKwTLC9
0yqWrxLECocdU8B9Ucs9loT75X9XC6+IhRWGcOnSJXhsFb+q486rxJvD1XMH
IERERGB1g1vW1tbetm2b0qhyw4YNGhoaGzduxDXw4VwNDvw/vDHWSqz1y9Mt
BEEQBEEQhHpBPo44ULjKBpm+n58f+/5a3U1WCYTc169fR2idm5sbFxfHr0si
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
/9zc3MyX9r5586ZcLmfl3rdv34YfmJ+fX11TndWoYrnBAnT69OmMjAx0Nfoc
93jr1i2lFakEsbZRFODGugYDgfNJS0uDjfAFuL/88supqSmlRz3gN5zMDdwI
Ys5jx47BCx04cED4ySQr5EGkCr+ED62vr8cHrYfTJAiCIAiCIFYvyA0RIiKd
RIKJJFRppPfaa68hV5VIJElJSV1dXepqKkJKBJZIvdmhkTk5OWfPnqVK7SWC
5RdIDdC3wnXZ7LQ6R0dHNzc3T0/PoKCgmJgY5CDl5eUtLS3rvC5bgLGxsfb2
9vz8fB8fH3QjLE4kEiGDo6IzQhUUpb1ZrbdcLofR8aW9m5ubGxsb6+rqkOzD
MOFFYaGJiYlYAsLCwmCzrNxb6XNIJu0Nk9fX1zcyMjI1NYXh86W9Yf4eHh7e
3t7+/v7BwcF89Zzi4uLS0lJW7t3X1zc0NIT5v7qmOqtRRcfW19enp6dnZmZm
Z2fn5ua2trai55VWpBLE2kZRgBsGIpVK4Wpg+LARvgA3HNH169eVHvXARXp/
/etf+/v7cVlBQQH80jvvvCO8r5vVbsM7mZmZwRHB88DVrIfTJAiCIAiCIFYv
iuWiiuD3+CuuwZW4Xl1NXVhYQNI6PT2NTLaoqIgv5kiV2kuBoqqsQF327t27
jY2NkQXgGiQC586dq6ur4/YnkOqlMExdNCQkBJnU/1t5cvbEGoYVSLa1tcFm
+dLevr6+MGf2fFJFaW+2VYmdH8ukvTHD4RxYuTfmfEdHByb/Kp3q7MCTrKys
hIQE3FdZWRluR7gilSDWCcy3wLHARvgxG/6LXwof9cAikMrKSvgipYGHwJNJ
uKzY2Nh1dZoEQRAEQRDEqqOzszM+Ph755tGjR7W1tZUGeIcPHxaLxQjtamtr
h4aGlrmFrFL71q1bAwMDSADRjJycHLTn7Nmz+AH5IFLpwcFBqtR+Btiuhvn5
+enpaYTucrm8u7u7o6OjqamptLSUyyP8/PyE67I9PDyCgoIwKKx6EW8yNjaG
hGIVFWOqBU5YCh0eERFhYWEBi7O0tESfUyZFLAOsQLK/vx82y5f2hneFOZ87
dw5rRHR0NF/a29HREd6AlXvzpb25nZP4jbm5OeYzX9qbwZV7h4SEYM7HxMQk
JiampaXl5eXxpb2lUqlMJoNddHV1oWF8ae/JyUk4KzQbXkuN+yrZYZLorvT0
dNgsOg0t556vwvWpq2EEsRJgvuX69evNzc1lZWUwEFhKQkJCZmZmcXFxdXU1
zBymPTo6iivv37+PUITtLmY1GghT4Yh8fX3hRt544w1NTc1t27Zt2rRJabyq
oaGxefPmLVu2IERxd3dHTMKOrabSDIIgCIIgiJVGa2traGgokseDBw/u3LlT
aYCHuM7HxweRZHt7+9jY2DK3kFVqIxtFa4uKipAmp6amIqYtLCxE6nrt2rUv
vvgCCSBVaj8DLObHyCLrv3jxYmlpKYJ/hPFBQUEeHh7czigjIyPhumy8qqmp
qaOjA28il8uRg0xPT8/Pz/PzC0Ip6CV0fl9fH3rSysoKFgd7DAkJwVjgl0jT
1N1AYi3DCiRnZmZgs3xp756eHpgzHGxnZ6dMJuNLe8MP5+XlsXJvvrQ3A17C
zs6OL+2t+NASf8Kct7GxEYlEDg4OfGnvyMjI6OhoOKKkpCR4JL60N/eIEtYx
OjoK81FX18Ftfk/bKz09HY1EXw0ODs7OzqqrYQSxEmC+ZWpq6ssvv+QOloSB
wG/AotPS0s6dO4corra2ljtYcmJigv8NJl/XHi4IL4yIiHBxcYED0dbW3rZt
m9J4dcOGDRoaGhs3bsQ1iFi46h58Ih1eTRAEQRAEsQKpq6vz9vYWPpxHvY9H
FCu1kaImJCRQUfCioChZHh4ejinh5ORkbGy8e/du/kyguuylgKkkJyYm2tjY
oJ+NjIz8/PxIjpxYsTC/wZVkLoW0t62tLXcopUQigcPhS3tXVlbC86j9if3j
x48fPXr0t7/9Dc0oKytD87Awcco+ZLkEwWCWAnchk8lgIOnp6adPnw4NDT11
6lRycnJubi7MWS6XK40lmLepr6//+OOPVTw7gtVu43p4D7JKgiAIgiCIlQPT
QSgpKUG6x5XAbN68WekXzTY2NrGxscu8HUWgUhuhLGLLCxcuIBFGk6go+P9E
lbrsmJiYoKAgT09PNzc3R0dHW1tbc3NzQ0NDRP5HjhzBz5gGmCoI7Kkue3Fh
KsnoVQcHB1gcut3Ly+vcuXPoYQyWuhtIEN+H7azmnqU/s7Q32zyJOX/48GG+
tDcDRgGPhFeJxWLYhZ+fX0BAAJxVSEgIvBa3HKhF2pvzq48ePcI7t7a25ubm
ZmdnZ2Zmokn19fX46NnZ2QcPHnz33XeL2PMEsepglgJ3MTg4CF+B+I17LJmW
lpaamsoOlYXNwlRhp3zbYd4G8QZ8C1yKu7s7vITwdxysdhsxDNwI/EZSUhIC
Hk7mhk5UIAiCIAiCUCPsGUhWVhYSPcRsiNwQvykN53ABLlvmA7sEKrXZoZET
ExO4gIqC/09Uqcu2srIyNTXV19c3NDQ0MTExMzOztrZ2cHBwdXX18fEJCwtL
TEwsKChAok112YsL+3YAk9zFxQUWZ2BgIBaLo6KiKisrMf/V3UCC+D7sOw6u
JPOZpb0jIiLgW0JCQuBkMOf50t7cc0tbW1sLCwt4JLgm2AW8k5GREf4LZwUf
Ba8lEonUJe395MkT9MPjx49v3bqF+2V+9fTp04WFhVi2sEhNTk4+ePBgEXue
IFYdzFIQhMzOzsJXwEtwjyVLSkoyMzPPnDkDa83NzYVzgK+4cuUK33aYt0G8
Ad8Cl5KSkgKPIbxVkn2l/vLLL+/fvx9+Ay4iLi4OdgprpbNQCIIgCIIg1Ihi
lahAwYtEIkE2t8wtFKjURhCLYJWUTFXnqeqyMeJ79uxB+m9vb49rvqfUsOqU
cFcRsDLYGvofnY+hUbuuPUEsEazWm3tiefHiRUx1eHil0t5MXRfrEVYlpauV
eqW979+/PzExIZfLsTalp6eHhoYmJyeXlZXRYZIEoRRmMrDH3NxcvgC3Kgex
wnXAnGHgsHRY/b8o2v4+8CR4CZUeEARBEARBqJ2ZmZn+/n5kgmFhYebm5kqD
t61bt2ppae3fv//48eMNDQ3L0zC25WZ8fPzzzz9XWqnd3d09OTn56NEj2pWn
lIWFhbm5OXTg8PDwzZs3Ebr/5S9/qa6uLigoiIuLCw4OFq7LdnFx8fLyQiIf
HR2dkZGB1KC9vR2z5fk3FBHCsANdTUxMMDr4Gf2P2a7udhHEIsPkd4eGhuBb
+vr64GTg6pVKe8MXwRYkEgnbNsmkvWEpcFz8fd1M2lskEjk7O+NVYrEY7k5Y
2psdStna2iqVSvnS3nK5HI1EU0dHR7HuKK0UePjwIVzuxMQEFiy82+nTp7nN
mXjbK1euwBXTHnKC4MNMBiYGo+MLcONf/IzftLS09PT0KBXghj02NTXByvz9
/WHpOjo6CFYRsgo/kMTaCs8APwDHUlFRwal7q1EViyAIgiAIYt2CMAwJIKI+
Hx8fJHRKg7edO3cePHgQKV5oaCgixuVpGEtUr1692tjYqLRSG1khotPHjx8j
NH3y5MnyNGwVgTgfGTRS44aGhuLiYgTtSMCPHz9+7NgxhO5I2IXrstHhiNWR
m8tkMqTkAwMDmC0zMzPPf+QaIQz6PDAwEKNjYWGBQZFIJElJSV1dXepuF0Es
MuyLJzgr+Bb4/LGxMXgtpdLesIu6urrKysqSkpKCggK+tHdAQAAcl6enp7u7
u1gs5kt7W1lZwbnxv3MRkPZmujlY7CIjI/nS3qWlpbW1tWgDVkwYo9KzlB89
evTw4UOsSmyTJAOrGFwonbJLEHyYydy6dYs7hJYJcMNqELQkJyfD+mpqapQK
cLMt1nl5eUFBQfb29gYGBlpaWsIPJFn1h4uLCywd7y+VSmHO6u4MgiAIgiCI
dQdSJMR+yOmQwSFTUxq8MUllZGcdHR3L0zAWZyIDRWhKldrPwPj4OLdRB/2G
nB3ZOrJyjDK/5pHqslcg6P/w8HC+vvBymh5BrHAUpb2xivHVc/jS3mZmZli/
WLm3ik8q8CpYH/8RJf84Su4gSgFpb+Z7sXjB/cKv4mc0Val2MEEQzynA3dvb
C8OEnWLF1NHRETZzBq7E9XQoCkEQBEEQhLpASsWiuP379yuN2fbu3Wttbb08
daNsw8zw8HBHR0d1dXVRURHi0jNnzmRmZpaUlFCl9vdQrMtub29vbGxEyox+
O3nypJ+fHzuHjQnWmJiYWFhYUF32ygQzPzY21snJycHBQSQS2draRkZGSqVS
dbeLIFYEitLeXV1dcFwXL16sra0tLS3lP5wMDQ0NDg5m5d7MrOD94A/hBvnS
3uxRpJ2dHa7hS3vDheLl8KU+Pj4BAQF8aW98Ynl5OSv3bmtrQzMKCwtTUlJO
nTqFKz/66KPTp0/jSpj2559/PjY2hjUOKx09mSQIDgEBbgYM7bPPPlMqwD06
OoolEoYPe0dUo+IXEFpaWgYGBjDzoKCgvLw8vDP8CWxT3Z1BEARBEASxXlDl
SPBDhw45Ozsjs0M0KJfLl7Q9rFIbiVtFRcU5Hsj4kHJSpfb3UKzLjoyM9Pf3
R+6MPBoZt5GRkbGxMfcvsu+3334byfUHH3yAuJ3qslcmzCqRWNnZ2S3zaQkE
scJRlPbGogDHxZ1FiUWKL+0Nw2lubmbl3ufPn8/Ly0tLS4P3i4mJiYiI4Et7
swePMD0HBwe+tDfjyJEj3DEXTNobF7u5ufH3UuJtT5w4AVeM//7ud7979913
jx8/fvLkyaysrJqams7OTjQVzaYt6ATBISDAXVZWlpube/bsWe7wBKUC3PPz
8/AAMHzEM9HR0SrK3HAHpOvo6MCQETVh2W1qaiKZG4IgCIIgiGWD7cVSFFlm
LKciIavCq66uxifyq3VaWlqGh4epUvt7qFKXzZRnkUQj3UaOzEaT6rJXIKz6
TCKRYDRhgPgZ46XudhHEWgAej22txArIl/ZmsIpvVaS98Xv8lZV741W/+c1v
PDw8/vCHP/z2t791cHAwNzf/9a9//R//8R94ZzjqyspK2otFEMIwAW7EfsXF
xWfOnIGRIiAUFuCGWcGiuW/0YIzCDyQZTOYGL4RtquuWCYIgCIIg1hvNzc3B
wcHGxsb79u3bsWOH0lDNxMQkICAA4V9XV9fk5ORSNONfVWrHxcVlZ2dXVVW1
tbV9/vnnt27dWp+V2qx/0P/oot7eXi6PFq7L5oQbEGYjI37//fe9vb1DQ0Pj
4+ORfXMHoFFd9srk5s2byL9CQkLEYrG5uTlyJYxdXV2duttFEGsBeDz4PXg/
TkCHL+3N4B9HydV6u7m5ubi4ODk5iUQi+Fi+tDeDOwrD1tb217/+Nbyxh4cH
fC+uPHTokKGh4a9+9Sv4Z3d3d6ynUVFRiYmJWVlZfGlvLMetra1Y7ODer127
plTam9V6r8N1kFhXMAFuLIiw0JqaGhhLTk4ObBNhYWFhYVlZGUymu7sbBjI1
NQXTWFhYGB8fv3HjBqwJoY6Xlxdnfbt27dq4caOGhsaGDRuURrmampq6uroI
lmDsMEy8HG+C9yRDIwiCIAiCWFIQ4yFm2717944dO1544QWloRoyrIiICKRI
yIwQHy5FMxQrtdPT05Gs5ebmNjQ0IDVDOsbt5Vufldqsf7q6utAhbD+PcF22
p6cnrkHmm5KSUlRUhJwX2W5nZyfyXFYwSHXZKxC5XF5aWhoeHu7m5mZoaLh9
+3YMdGVlpbrbRRBrAe4ISni/+fl5rGh8aW8Gq/hmtd7l5eWwSu5Qu5iYGL60
N8zT1dUVLhfe2MHBgTt58te//vVvfvObt9566+DBgzt37nzllVd++tOf6ujo
6OnpmZiYWFpa2tjYcEXirNY7ODg4NDSUr56jKO3NbWsntW5izcMEuGGhIyMj
rIKbO3UhIyODq53hzpzhthxzXzSMj4/j55aWFlwDO3V2dobRbdmyZfPmzRoa
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
b+U9v8Df3z80NFSe2huKCDUkNzf36NGjx48f15naW8R69/f3Dw0NMXD4O5Fm
z46NjV24cAE/MZ4qHi8EcGJi4quvvoof4je/+c0zzzyzZMmSBQsWzJs37557
7tGpsWfPnj137tz58+fjx/X19UWVyMnJgTiXtCjOb+gbJYQQQgiZKCBNoYGh
cp944glIJp1iae3atREREcXFxRCuUKryw8dHakOMwT+Cl/Tuu+9iS0tLC9T4
8PDwRHhJuDTUGjQbdH5paSkU/vbt26Ojo4OCgry8vKDnxcJN+uOyUU4ocwjy
jo6O3t5e6nAyjdBqtfBf5AGAetZ6JYRMa0QEMayVRqORVkeRbO7Ro0cbGxsn
Z5Vmcp2I5ayhnaAuenp6oFigl+SpvdFdV1VV4deEHsOPqDO1t1j1GtrG29vb
x8dn3bp1EDm2trbQNtbW1vJBS/mLVynWG6YBBgJmws/PD5JPZ2pvEeuNgrW2
tvLN7HcireyKtvbZZ5/hWUHrnj59+q9//St+QTxbyGb8TI6Ojr/61a9+/OMf
P/jgg9+W5uauu+6aPXv2nDlzoMMtLCzwe+E32rlzJ34O1BNOeyaEEELIHYzI
iCECmccDTatQKHRGkYyP1FYqlfCMoHKPHTt29uxZqPEvvvhigmZroDAoEgqG
u8BFdYbJMC6b3NmIVRekDE1orXA24dsaulyEkAlExALD8sKoRUdHZ2Rk1NTU
TPLqKGQiGJ/aW8R6o3uPioq60dTeAuyDnXWm9hax3sXFxbAg1Eg3gUjAffjw
4R07dqBV+vn5OTg4PP300z/+8Y+/7aW/QMRuQ6/id8HPgZ8ev4Khb4sQQggh
5DYjgp0zMzPXrVunMxWgiCJxdXXdtWuX/HX5F1988fnnn3/22WcXLlxoaWmR
R2rv3bsXgvbYsWMNDQ29vb3Y8xbTO+qJy4YjhoJJyzFJ4vy5556zsbGBPl+9
evXatWsh6pydnb28vBiXTe5U0NDS0tJQw9GQUfnhbIaFhR0/ftzQ5SKETCAi
FhiNPT09HXZQpVLBLHIc6Q5gfGpvEeudl5eXk5OjP7W3i4uLg4ODra2ttbU1
hJCYOWlsbGxubg4zgR3c3NxgMuSpvUWsd0RERExMjDy1d35+fkFBAWoXKlt5
ebn+1N7Dw8OonDMzA6BIwI3fC48LP9Pbb7+9cePGf//3f4ccxfPX//ZfqO5f
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
X3559erVy5cv/+1vf8vIyNA5MVKQkJAQFhbm6elpb29vbm5uZGQUFBRUXFws
P+HY2NjAwEBnZ2dtba1arU5NTU1MTIyPj4+NjcWxfn5+7u7ugYGBb7zxRnJy
cmlpaUdHh6HunRBCCCGEEEIIIYQQMslcvXp1ZGRkcHCwuro6LS1N59KRgoKC
gu3bt4eEhLi6upqami5cuNDHx0etVstPODAwgD3LZJSXl1dWVmo0mvz8/D17
9igUioiIiMDAwPXr1+Nsp06dMtCtE0IIIYQQQgghhBBCJpvLly8PDg52dnaW
lZWlpqbqTK4taGtrU6vVCoXC09PTxMRk1qxZ7u7uubm58n3EqbCnVqvFvzi/
tFDkwMBAc3MzvsUZcKDOCZaEEEIImVCGhoZaWlo0Gg3+4rOhi0MIIYQQQgiZ
cfT29tbV1anV6pycnIyMjNTU1LKyss7OTp07i8FGf39/MzOzWbNmubi4qFQq
eb7snp6e2tra3NzcysrKDz/8cHBwcGRk5OrVq9/8X97t5ubm5ORkd3f3RYsW
+fn5FRQUTOoNE0IIITOblpaWQ4cOxcbG4i8+G7o4hBBCCCGEkBkHPJG8vDx4
JSkpKTk5OWVlZc3NzQMDAzp3FoONoaGhq1atmjVrloODQ3JysjxftpgG2dDQ
0N3djY1Xr1798ssvv/lnePjo6Ch2UKlU7u7u8+fP9/Lyys/Pn9QbJoQQQmY2
Go0Gdt/W1hZ/8dnQxSGEEEIIIYTMOLRarVKpdHd3h1eiVqvlEdbjEYONUVFR
VlZWs2bNgjujUCjk+bLxF5/1Z9DOzc3FFXVGfBNCCCFkIhCvBQ8dOhQUFGRi
YoK/+Iwt2C7FMhBCCCGEEELIxCFFTzc1NalUKvgjlpaWGzZswOfm5ubu7m58
K99ZZOL+6KOPKisrs7KygoODLSwsZs2ahQNDQ0Nzc3NPnjyJE167dm1kZOST
Tz6Rz5kU4FtsuXjxItwff39/riFJCCGETBrjF07BX3zGFmz/F9NPCCGEEEII
IbcduB5VVVVZWVnh4eEODg6LFy+GV6JUKrVabXt7+/DwsHxnkYm7rq4uLy8P
u3l7e69YsWLWrFkmJiaenp4KhQLbGxsbx8bGLl26hJ3lq0oKsGVgYKCzs/PQ
oUO4LoPFCCGEkEljfJgD/uKz/tVaCCGEEEIIIeR20dTUJI1Guri4GBsb6/dK
xmfiFkcZGRnZ2tr6+/snJSVpNJqLFy+OjY39yzikQERz5+bmKhQKHIWz4d9J
uWNCCCFkRtPd3V1dXS0Pc1i1apUU5lBbW9vT02PoAhJCCCGEEELucMQMyfj4
+I0bN7q7u0dHR+fk5OiM2xIzJKWZFfKjgoKCYmNjU1NTS0tLW1tbx8bGRAqb
8Vy4cEHKibN///49e/YkJSXhqI6Ojkm5Y0IIIWRG097eXlRUJA9zMDMzk14O
wrh3dnYauoCEEEIIIYSQOxyxhmRNTU1paWlubm5FRcWHH36oc2V7sYakFHAt
P6q4uFij0dTX13d0dAwNDV27dg07f/311zov2tbWplarFQrFnj178vPzcWBr
ayuOmpQ7JoQQQmY044MjxLorsM6w0YYuICGEEEIIIYTcfurr61NTU68zvpsQ
Qgght454BVlZWZmXlwdDHBQUZGVltXDhQgsLCy8vr9jYWGxvaWkxdEkJIdOJ
r7/++ssvv4SSHx4ePnfunHzGwnjy8/MLCgqKi4vREZ06dQo7M5cWITOQK1eu
oMfo6enp7e3t7+8fkIF/sRFfnT9/vqOjo62tDZ8vXryof8oTIYToZ2xsTJpa
qdFosrOz5Rlw9MR3E0IIIeTWEYu0wPgWFhaWlZXBELu7uxsZGVlbW3t7e0dF
ReXk5Jw5c8bQJSWETCekECro+fb29srKSvmaTuPx8vLy8/MLCgqKjo7evn07
dka/hN7J0DdBCJlUhoeH0WPU1tbW1dU1NDQ0y8C/2Iiv0J+Ulpaq1Wp87uzs
5KABIeRWGBgYaGpqggdUUlKCjiU3N/fkyZNQIHzZQQghhEw0IlJbrBWZnZ29
YcMGMzMzR0dHHx8ffIUdsJuhS0oImU5AyY+NjV28eFGr1apUKvlyEOOZP3/+
okWLjIyMrKysPD092e0QMjPp6emRkkqo1eri4uIyGfhXGitAf5KUlKRQKPC5
vr6eYZWEkFtBpOdGl4IP6FWwBR2LoctFCCGE3LGI9Z8/+OADOP5RUVHp6ekn
T54cHByE4A8PD7eysnJycvLw8JDy2sA6G7rIhJDphJgh2dDQkJOTExsbu27d
uuXLl8+aNeuBBx548sknV61aZWNjg37G3d3dxcXFwcHB1tbW3t7+ueeew7/R
0dFHjhyBUzAwMICTGPpuCCG3H7Gww9DQUEdHB5RGZWVlQUEBZElhYWF1dbXO
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
     "], {{0, 949}, {1755, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{336.79999999999995`, Automatic},
   ImageSizeRaw->{1755, 949},
   PlotRange->{{0, 1755}, {0, 949}}]}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{3.770804661989845*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "isogonalConjugate"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"isogonalConjugate", "[", 
    RowBox[{"p_", ",", "tri_", ",", "bisectors_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"refla", ",", "reflb", ",", "inter"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"refla", "=", 
       RowBox[{"refl", "[", 
        RowBox[{
         RowBox[{"p", "-", 
          RowBox[{"First", "@", "tri"}]}], ",", 
         RowBox[{"First", "@", "bisectors"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"reflb", "=", 
       RowBox[{"refl", "[", 
        RowBox[{
         RowBox[{"p", "-", 
          RowBox[{"Second", "@", "tri"}]}], ",", 
         RowBox[{"Second", "@", "bisectors"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter", "=", 
       RowBox[{"interRays", "[", 
        RowBox[{
         RowBox[{"First", "@", "tri"}], ",", "refla", ",", 
         RowBox[{"Second", "@", "tri"}], ",", "reflb"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "inter"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.770726091047941*^9, 3.770726253066962*^9}, {
   3.770726745267684*^9, 3.770726745611765*^9}, {3.7707274081015086`*^9, 
   3.770727410227563*^9}, 3.770804740395367*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"could", " ", "use", " ", "cevianTriangle"}], ",", " ", 
   RowBox[{
   "but", " ", "needs", " ", "conversion", " ", "from", " ", "cartesian", " ",
     "to", " ", "trilinear"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.770804783199725*^9, 3.770804789315984*^9}, {
  3.770804933211876*^9, 3.7708049475056753`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "txtSubscript"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"txtSubscript", "[", 
    RowBox[{"txt_", ",", "subscr_", ",", "style_", ",", "where_", ",", 
     RowBox[{"offset_:", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ":=", 
   RowBox[{"Text", "[", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"Subscript", "[", 
        RowBox[{"txt", ",", "subscr"}], "]"}], ",", "style"}], "]"}], ",", 
     "where", ",", "offset"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.766141396806887*^9, 3.7661414413194227`*^9}, {
  3.766141471624304*^9, 3.7661415049046497`*^9}, {3.7708056409082184`*^9, 
  3.770805646251934*^9}, {3.7708058525811167`*^9, 3.7708058619318666`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "ellLabel"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "ellLabel"}], "=", 
   RowBox[{"{", 
    RowBox[{"inward", "\[Rule]", "False"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellLabel", "[", 
    RowBox[{"a_", ",", "p_", ",", "lgt_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"p", "+", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "@", "inward"}], ",", "lgt", ",", 
       RowBox[{"-", "lgt"}]}], "]"}], "*", 
     RowBox[{"norm", "@", 
      RowBox[{"ellGrad", "[", 
       RowBox[{"a", ",", 
        RowBox[{"Sequence", "@@", "p"}]}], "]"}]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "ellLabelTxt"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "ellLabelTxt"}], "=", 
   RowBox[{"{", 
    RowBox[{"inward", "\[Rule]", "False"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellLabelTxt", "[", 
    RowBox[{"a_", ",", "p_", ",", "txt_", ",", "lgt_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Text", "[", 
    RowBox[{"txt", ",", 
     RowBox[{"ellLabel", "[", 
      RowBox[{"a", ",", "p", ",", "lgt", ",", 
       RowBox[{"{", "opts", "}"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.770812985191003*^9, 3.7708130398380194`*^9}, {
   3.7708133074136033`*^9, 3.770813346174176*^9}, {3.7708134296143494`*^9, 
   3.770813434645901*^9}, 3.7709869302664747`*^9, {3.770989869367771*^9, 
   3.770989985080997*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "labelPoints"}], ";", 
  RowBox[{
   RowBox[{"labelPoints", "[", 
    RowBox[{"pts_", ",", "prefix_", ",", "style_", ",", 
     RowBox[{"offset_:", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"txtSubscript", "[", 
       RowBox[{"prefix", ",", "#1", ",", "style", ",", "#2", ",", "offset"}], 
       "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "@", 
        RowBox[{"Length", "@", "pts"}]}], ",", "pts"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7708055859497566`*^9, 3.7708055992024937`*^9}, {
  3.7708056489068108`*^9, 3.7708057835315375`*^9}, {3.7708058376599927`*^9, 
  3.7708059166047144`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "ellLabelPoints"}], ";", 
  RowBox[{
   RowBox[{"ellLabelPoints", "[", 
    RowBox[{"a_", ",", "pts_", ",", "prefix_", ",", "style_", ",", 
     RowBox[{"lgt_:", ".33"}]}], "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"txtSubscript", "[", 
       RowBox[{"prefix", ",", "#1", ",", "style", ",", 
        RowBox[{"ellLabel", "[", 
         RowBox[{"a", ",", "#2", ",", "lgt"}], "]"}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "@", 
        RowBox[{"Length", "@", "pts"}]}], ",", "pts"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.770813070509441*^9, 3.770813139589883*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "isotomicConjugate"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "isotomicConjugate"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"drGr", "\[Rule]", "False"}], ",", 
     RowBox[{"\"\<drLines\>\"", "\[Rule]", "False"}], ",", 
     RowBox[{"drLabels", "\[Rule]", "False"}], ",", 
     RowBox[{"drLogQprime", "\[Rule]", "False"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"isotomicConjugate", "[", 
    RowBox[{"p_", ",", "tri_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "inters", ",", "meds", ",", "isos", ",", "isoConj", ",", "gr", ",", 
       "grLines", ",", "grLabels", ",", 
       RowBox[{"txtD", "=", 
        RowBox[{"-", "1.25"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"inters", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"interRays", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"p", "-", "#1"}], ",", "#2", ",", 
            RowBox[{"#3", "-", "#2"}]}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"tri", ",", 
           RowBox[{"RotateLeft", "@", "tri"}], ",", 
           RowBox[{"RotateRight", "@", "tri"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"meds", "=", 
       RowBox[{"getMedians", "@@", "tri"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"isos", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "#1"}], "-", "#2"}], ")"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"meds", ",", "inters"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"isoConj", "=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n1", ",", "n2", ",", "n3"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"n1", "=", 
           RowBox[{
            RowBox[{"isos", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{"tri", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"n2", "=", 
           RowBox[{
            RowBox[{"isos", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "-", 
            RowBox[{"tri", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"n3", "=", 
           RowBox[{
            RowBox[{"isos", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "-", 
            RowBox[{"tri", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Which", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"interRaysIllConditioned", "[", 
              RowBox[{"n1", ",", "n2"}], "]"}]}], ",", 
            RowBox[{"interRaysUnprot", "[", 
             RowBox[{
              RowBox[{"tri", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "n1", ",", 
              RowBox[{"tri", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "n2"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"!", 
             RowBox[{"interRaysIllConditioned", "[", 
              RowBox[{"n1", ",", "n3"}], "]"}]}], ",", 
            RowBox[{"interRaysUnprot", "[", 
             RowBox[{
              RowBox[{"tri", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "n1", ",", 
              RowBox[{"tri", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", "n3"}], "]"}], ",", 
            "\[IndentingNewLine]", "True", ",", 
            RowBox[{"interRaysUnprot", "[", 
             RowBox[{
              RowBox[{"tri", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "n2", ",", 
              RowBox[{"tri", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", "n3"}], "]"}]}], 
           "\[IndentingNewLine]", "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "@", "drGr"}], ",", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FaceForm", "@", "None"}], ",", 
            RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Blue", ",", 
              RowBox[{"Point", "@", "p"}], ",", "Dashed", ",", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Q\>\"", ",", "16"}], "]"}], ",", "p", ",", 
                RowBox[{"{", 
                 RowBox[{"txtD", ",", "txtD"}], "}"}]}], "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "@", "Black"}], ",", 
              RowBox[{"Polygon", "@", "tri"}], ",", 
              RowBox[{"Point", "@", "tri"}], ",", 
              RowBox[{"labelPoints", "[", 
               RowBox[{"tri", ",", "\"\<P\>\"", ",", "16", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "2"}], ",", "0"}], "}"}]}], "]"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Red", ",", 
              RowBox[{"Point", "@", "meds"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Blue", ",", 
              RowBox[{"Point", "@", "inters"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Darker", "@", "Green"}], ",", 
              RowBox[{"Point", "@", "isos"}], ",", 
              RowBox[{"Point", "@", "isoConj"}], ",", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Q'\>\"", ",", "16"}], "]"}], ",", "isoConj", 
                ",", 
                RowBox[{"{", 
                 RowBox[{"txtD", ",", "txtD"}], "}"}]}], "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"OptionValue", "@", "drLogQprime"}], ",", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "isoConjLog", "}"}], ",", 
                RowBox[{
                 RowBox[{"isoConjLog", "=", 
                  RowBox[{"isoConj", "@", 
                   RowBox[{"Log", "[", 
                    RowBox[{"1", "+", 
                    RowBox[{"norm", "@", "isoConj"}]}], "]"}]}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Darker", "@", "Green"}], ",", 
                   RowBox[{"Point", "@", "isoConjLog"}], ",", 
                   RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<log[Q']\>\"", ",", "16"}], "]"}], ",", 
                    "isoConjLog", ",", 
                    RowBox[{"{", 
                    RowBox[{"txtD", ",", "txtD"}], "}"}]}], "]"}]}], 
                  "}"}]}]}], "]"}], ",", 
              RowBox[{"{", "}"}]}], "]"}]}], "}"}], "\[IndentingNewLine]", 
          "}"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"grLines", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "@", "\"\<drLines\>\""}], ",", 
         RowBox[{"{", 
          RowBox[{"Dashed", ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{"#1", ",", "#2"}], "}"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"tri", ",", "inters"}], "}"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Darker", "@", "Green"}], ",", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{"#1", ",", "#2"}], "}"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"tri", ",", "isos"}], "}"}]}], "]"}]}], "}"}]}], 
          "}"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"grLabels", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "@", "drLabels"}], ",", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Red", ",", 
             RowBox[{"labelPoints", "[", 
              RowBox[{"meds", ",", "\"\<m\>\"", ",", "16", ",", 
               RowBox[{"{", 
                RowBox[{"txtD", ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", 
             RowBox[{"labelPoints", "[", 
              RowBox[{"inters", ",", "\"\<i\>\"", ",", "16", ",", 
               RowBox[{"{", 
                RowBox[{"txtD", ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Darker", "@", "Green"}], ",", 
             RowBox[{"labelPoints", "[", 
              RowBox[{"isos", ",", "\"\<iso\>\"", ",", "16", ",", 
               RowBox[{"{", 
                RowBox[{"txtD", ",", "0"}], "}"}]}], "]"}]}], "}"}]}], "}"}], 
         ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"isoConj", ",", 
        RowBox[{"Graphics", "/@", 
         RowBox[{"{", 
          RowBox[{"gr", ",", "grLines", ",", "grLabels"}], "}"}]}]}], 
       "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQHZ+zw8FW4o2j1/1wFxD94olFNIj+o6KUAaLX6/3M
BtEhFZKFIHr5vQelIHpLxsJ6ML02vQVE655qWg5RP/coiJ5YXHwCrE/+7nkQ
fcbKjs8OSF8JvSUFoi/Iy2uC6AVF1hYgetM2TzBtmdpjD6LfHOJ0BNGlvdNc
QXTTkS2eIPqeebofiLYtPh8GomsudcWC6DTx7DgQ3XcsLgVEb4tQrAbRAjGr
GsDmyCV0gegYht/LQPQXBtYdIFrBkDvHD+SOL/aTQfQ+S9F5IHr94pNgWkk/
91gSkP7wYcl1EL3s5PG7IFrmR8kDEH1HIO0niE4vC2NLBrlnxV4uEP1dOFAM
RFfYJFaD6Fsv1veCaABYu6K+
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tri", ",", "actData", ",", "isoGr", ",", "actGr"}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tri", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "p2", ",", "p3"}], "}"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"isoGr", "=", 
       RowBox[{
        RowBox[{"isotomicConjugate", "[", 
         RowBox[{"p0", ",", "tri", ",", 
          RowBox[{"drGr", "\[Rule]", "True"}], ",", 
          RowBox[{"\"\<drLines\>\"", "\[Rule]", "drLines0"}], ",", 
          RowBox[{"drLabels", "\[Rule]", "drLabels0"}], ",", 
          RowBox[{"drLogQprime", "\[Rule]", "drLogQprime0"}]}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"actGr", "=", 
       RowBox[{"If", "[", 
        RowBox[{"drACT", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"actData", "=", 
           RowBox[{"getAnticomplData", "[", 
            RowBox[{"tri", ",", 
             RowBox[{"RotateLeft", "@", 
              RowBox[{"triLengths", "@", "tri"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Graphics", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"FaceForm", "@", "None"}], ",", 
             RowBox[{"EdgeForm", "@", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", "Dashed"}], "}"}]}], ",", 
             RowBox[{"Polygon", "@", 
              RowBox[{"actData", "[", "\"\<tri\>\"", "]"}]}], ",", 
             RowBox[{"Darker", "@", "Green"}], ",", 
             RowBox[{"Circle", "[", 
              RowBox[{
               RowBox[{"actData", "[", "\"\<inc\>\"", "]"}], ",", 
               RowBox[{"actData", "[", "\"\<incR\>\"", "]"}]}], "]"}], ",", 
             RowBox[{"PointSize", "@", "Medium"}], ",", 
             RowBox[{"Point", "@", 
              RowBox[{"actData", "[", "\"\<tps\>\"", "]"}]}]}], "}"}]}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"isoGr", ",", "actGr"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "->", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<Isotomic Conjugate: Move Q or \!\(\*SubscriptBox[\(P\), \(3\)]\
\)\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "Medium"}], "}"}]}], "]"}]}]}], "]"}]}]}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p0", ",", 
       RowBox[{"{", 
        RowBox[{".75", ",", ".5"}], "}"}]}], "}"}], ",", "Locator"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p2", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", "Locator"}], "}"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p3", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", "Locator"}], "}"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drLines0", ",", "False", ",", "\"\<isotomic lines\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drLabels0", ",", "False", ",", "\"\<label points\>\""}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drLogQprime0", ",", "False", ",", "\"\<log Q'\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drACT", ",", "False", ",", "\"\<anticompl\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQrbdCqdhW4o3j7Udd5SA6UXBLA4i2mHMSTLPsr/wI
oo9NNfoM5qceELQD0jbWzRIg+o72ZlkQLeFyCEyvvcCiBaIz593VBtFCknv0
QfS5xh0mINrqyeVIEC0wfU40iP7R/KMaRIcVa9eA6Hfl2d0gWoYpYQqI3vT8
z04QvVTo/W4Q3fHlyhGwupNmJ0H0vtzA8yC6IbUaTC9r0bgCog+ULbsNlmfs
+w6iVbpM/oPoaewcEfYg+5vswPQ5ptD5fkB6d1MVmA6du9wtGUi76S9KAtGn
DmxIA9EnjBYXgmiTAu1+EP30s+MkEA0AlZGPLA==
  "]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`drACT$$ = True, $CellContext`drLabels0$$ = 
    False, $CellContext`drLines0$$ = True, $CellContext`drLogQprime0$$ = 
    False, $CellContext`p0$$ = {-0.5199999999999996, 
    4.32}, $CellContext`p2$$ = {4.15, 
    1.3399999999999999`}, $CellContext`p3$$ = {-0.22999999999999954`, 
    2.4800000000000004`}, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`p0$$], {0.75, 0.5}}, Automatic}, {{
       Hold[$CellContext`p2$$], {1, 0}}, Automatic}, {{
       Hold[$CellContext`p3$$], {2, 2}}, Automatic}, {{
       Hold[$CellContext`drLines0$$], False, "isotomic lines"}, {
      True, False}}, {{
       Hold[$CellContext`drLabels0$$], False, "label points"}, {
      True, False}}, {{
       Hold[$CellContext`drLogQprime0$$], False, "log Q'"}, {True, False}}, {{
       Hold[$CellContext`drACT$$], False, "anticompl"}, {True, False}}}, 
    Typeset`size$$ = {360., {185., 190.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`drLines0$1148$$ = 
    False, $CellContext`drLabels0$1153$$ = 
    False, $CellContext`drLogQprime0$1154$$ = 
    False, $CellContext`drACT$1155$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`drACT$$ = False, $CellContext`drLabels0$$ = 
        False, $CellContext`drLines0$$ = False, $CellContext`drLogQprime0$$ = 
        False, $CellContext`p0$$ = {0.75, 0.5}, $CellContext`p2$$ = {1, 
         0}, $CellContext`p3$$ = {2, 2}}, "ControllerVariables" :> {
        Hold[$CellContext`drLines0$$, $CellContext`drLines0$1148$$, False], 
        Hold[$CellContext`drLabels0$$, $CellContext`drLabels0$1153$$, False], 
        Hold[$CellContext`drLogQprime0$$, $CellContext`drLogQprime0$1154$$, 
         False], 
        Hold[$CellContext`drACT$$, $CellContext`drACT$1155$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      DynamicModule[{$CellContext`tri, $CellContext`actData, \
$CellContext`isoGr, $CellContext`actGr}, $CellContext`tri = {{0, 
           0}, $CellContext`p2$$, $CellContext`p3$$}; $CellContext`isoGr = 
         Part[
           $CellContext`isotomicConjugate[$CellContext`p0$$, \
$CellContext`tri, $CellContext`drGr -> True, 
            "drLines" -> $CellContext`drLines0$$, $CellContext`drLabels -> \
$CellContext`drLabels0$$, $CellContext`drLogQprime -> \
$CellContext`drLogQprime0$$], 2]; $CellContext`actGr = 
         If[$CellContext`drACT$$, $CellContext`actData = \
$CellContext`getAnticomplData[$CellContext`tri, 
              RotateLeft[
               $CellContext`triLengths[$CellContext`tri]]]; Graphics[{
              FaceForm[None], 
              EdgeForm[{Blue, Dashed}], 
              Polygon[
               $CellContext`actData["tri"]], 
              Darker[Green], 
              Circle[
               $CellContext`actData["inc"], 
               $CellContext`actData["incR"]], 
              PointSize[Medium], 
              Point[
               $CellContext`actData["tps"]]}], {}]; 
        Show[{$CellContext`isoGr, $CellContext`actGr}, Frame -> True, 
          PlotRange -> {{-5, 5}, {-5, 5}}, PlotLabel -> 
          Style["Isotomic Conjugate: Move Q or \!\(\*SubscriptBox[\(P\), \
\(3\)]\)", {Black, Medium}]]], 
      "Specifications" :> {{{$CellContext`p0$$, {0.75, 0.5}}, Automatic, 
         ControlType -> Locator}, {{$CellContext`p2$$, {1, 0}}, Automatic, 
         ControlType -> Locator}, {{$CellContext`p3$$, {2, 2}}, Automatic, 
         ControlType -> 
         Locator}, {{$CellContext`drLines0$$, False, "isotomic lines"}, {
         True, False}}, {{$CellContext`drLabels0$$, False, "label points"}, {
         True, False}}, {{$CellContext`drLogQprime0$$, False, "log Q'"}, {
         True, False}}, {{$CellContext`drACT$$, False, "anticompl"}, {
         True, False}}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{417., {257., 263.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7708828093812833`*^9, 3.770882837422295*^9}, 
   3.770882885255508*^9, {3.770882916092019*^9, 3.7708829573881507`*^9}, {
   3.77088318489111*^9, 3.770883218384159*^9}, 3.770886466675339*^9, 
   3.770894535776364*^9, 3.7709343882540627`*^9, 3.770936123890697*^9, 
   3.771025638411414*^9, 3.771159268938182*^9, 3.7716755277238817`*^9, 
   3.772137204283308*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"CloudDeploy", "[", 
   RowBox[{"%", ",", "\"\<isotomic conjugate\>\"", ",", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7708070511350403`*^9, 3.7708070674777627`*^9}, {
  3.770807493199895*^9, 3.7708075013192253`*^9}, {3.770808033671476*^9, 
  3.770808034774528*^9}, {3.770808421103941*^9, 3.7708084632862096`*^9}, {
  3.770808515792248*^9, 3.770808517247385*^9}, {3.7708089400120244`*^9, 
  3.770808949071842*^9}, {3.770840435741718*^9, 3.770840453297724*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p1", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"p2", "=", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}]}], ",", "gr", ",", "tri", ",", "bis", 
       ",", "isoConj", ",", "p0star", ",", "inc", ",", "bar", ",", 
       RowBox[{"lgt", "=", ".2"}], ",", 
       RowBox[{"lgtLine", "=", "3"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tri", "=", 
       RowBox[{"{", 
        RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inc", "=", 
       RowBox[{"getIncenter", "[", "tri", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"bis", "=", 
       RowBox[{"getTriBisectors", "@@", "tri"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p0star", "=", 
       RowBox[{"isogonalConjugate", "[", 
        RowBox[{"p0", ",", "tri", ",", "bis"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"isoConj", "=", 
       RowBox[{
        RowBox[{"isotomicConjugate", "[", 
         RowBox[{"p0", ",", "tri"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "@", "Large"}], ",", 
          RowBox[{"FaceForm", "@", "None"}], ",", 
          RowBox[{"Arrowheads", "@", "Medium"}], ",", "\[IndentingNewLine]", 
          RowBox[{"EdgeForm", "@", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Black"}], "}"}]}], ",", "Blue", ",", 
          RowBox[{"Point", "@", "tri"}], ",", 
          RowBox[{"Polygon", "@", "tri"}], ",", "Red", ",", 
          RowBox[{"Point", "@", "p0star"}], ",", 
          RowBox[{"Darker", "@", "Green"}], ",", 
          RowBox[{"Point", "@", "isoConj"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Arrow", "@", 
                RowBox[{"{", 
                 RowBox[{"#1", ",", 
                  RowBox[{"#1", "+", 
                   RowBox[{"lgt", "*", "#2"}]}]}], "}"}]}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{"tri", ",", "bis"}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"drLines", ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Gray", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Line", "@", 
                 RowBox[{"{", 
                  RowBox[{"#", ",", 
                   RowBox[{"ray", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"norm", "[", 
                    RowBox[{"p0", "-", "#"}], "]"}], ",", "lgtLine"}], 
                    "]"}]}], "}"}]}], "&"}], "/@", "tri"}], ",", "Red", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Line", "@", 
                 RowBox[{"{", 
                  RowBox[{"#", ",", 
                   RowBox[{"ray", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"norm", "[", 
                    RowBox[{"p0star", "-", "#"}], "]"}], ",", "lgtLine"}], 
                    "]"}]}], "}"}]}], "&"}], "/@", "tri"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"gr", ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", ".25"}], ",", "1.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", ".25"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*
StyleBox[\"Isogonal\",
FontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",
FontColor->RGBColor[1, 0, 0]]\)and \!\(\*
StyleBox[\"Isotomic\",
FontColor->RGBColor[0., 0.8666666666666667, 0.]]\) Conjugates\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"Medium", ",", "Black"}], "}"}]}], "]"}], ")"}]}]}], 
       "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p3", ",", 
       RowBox[{"{", 
        RowBox[{"1.25", ",", ".75"}], "}"}]}], "}"}], ",", "Locator"}], "}"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p0", ",", 
       RowBox[{"{", 
        RowBox[{".75", ",", ".1"}], "}"}]}], "}"}], ",", "Locator"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drLines", ",", "False", ",", "\"\<isogonal lines\>\""}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.770726256086342*^9, 3.7707266360609045`*^9}, {
   3.770726713366763*^9, 3.7707267575079436`*^9}, {3.7707267974771566`*^9, 
   3.7707268768441257`*^9}, {3.770727174630066*^9, 3.7707272485980935`*^9}, {
   3.770727413518796*^9, 3.770727416478858*^9}, {3.7707371128674464`*^9, 
   3.7707371306528*^9}, {3.7707371953718405`*^9, 3.7707374526354237`*^9}, {
   3.7707374970686803`*^9, 3.770737537508608*^9}, 3.770738997174717*^9, {
   3.770804595180806*^9, 3.770804595884925*^9}, {3.770808551203642*^9, 
   3.7708086373327084`*^9}, {3.770808686106391*^9, 3.7708086942031865`*^9}, {
   3.770808752028082*^9, 3.7708087975318537`*^9}, 3.7708088915874696`*^9, {
   3.770881838958523*^9, 3.77088185724366*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`drLines$$ = False, $CellContext`p0$$ = {
    0.75, 0.1}, $CellContext`p3$$ = {1.25, 0.75}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`p3$$], {1.25, 0.75}}, Automatic}, {{
       Hold[$CellContext`p0$$], {0.75, 0.1}}, Automatic}, {{
       Hold[$CellContext`drLines$$], False, "isogonal lines"}, {
      True, False}}}, Typeset`size$$ = {360., {133., 139.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`drLines$1182$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`drLines$$ = 
        False, $CellContext`p0$$ = {0.75, 0.1}, $CellContext`p3$$ = {1.25, 
         0.75}}, "ControllerVariables" :> {
        Hold[$CellContext`drLines$$, $CellContext`drLines$1182$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      DynamicModule[{$CellContext`p1 = {0, 0}, $CellContext`p2 = {1, 
          0}, $CellContext`gr, $CellContext`tri, $CellContext`bis, \
$CellContext`isoConj, $CellContext`p0star, $CellContext`inc, \
$CellContext`bar, $CellContext`lgt = 0.2, $CellContext`lgtLine = 
         3}, $CellContext`tri = {$CellContext`p1, $CellContext`p2, \
$CellContext`p3$$}; $CellContext`inc = \
$CellContext`getIncenter[$CellContext`tri]; $CellContext`bis = 
         Apply[$CellContext`getTriBisectors, $CellContext`tri]; \
$CellContext`p0star = $CellContext`isogonalConjugate[$CellContext`p0$$, \
$CellContext`tri, $CellContext`bis]; $CellContext`isoConj = Part[
           $CellContext`isotomicConjugate[$CellContext`p0$$, \
$CellContext`tri], 1]; $CellContext`gr = Graphics[{
            PointSize[Large], 
            FaceForm[None], 
            Arrowheads[Medium], 
            EdgeForm[{Thick, Black}], Blue, 
            Point[$CellContext`tri], 
            Polygon[$CellContext`tri], Red, 
            Point[$CellContext`p0star], 
            Darker[Green], 
            Point[$CellContext`isoConj], {Blue, 
             MapThread[
             Arrow[{#, # + $CellContext`lgt #2}]& , {$CellContext`tri, \
$CellContext`bis}]}, 
            If[$CellContext`drLines$$, {Gray, 
              Map[Line[{#, 
                 $CellContext`ray[#, 
                  $CellContext`norm[$CellContext`p0$$ - #], \
$CellContext`lgtLine]}]& , $CellContext`tri], Red, 
              Map[Line[{#, 
                 $CellContext`ray[#, 
                  $CellContext`norm[$CellContext`p0star - #], \
$CellContext`lgtLine]}]& , $CellContext`tri]}, {}]}]; 
        Show[$CellContext`gr, PlotRange -> {{-0.25, 1.5}, {-0.25, 1}}, Frame -> 
          True, PlotLabel -> 
          Style["\!\(\*\nStyleBox[\"Isogonal\",\nFontColor->RGBColor[1, 0, \
0]]\)\!\(\*\nStyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)and \!\(\*\n\
StyleBox[\"Isotomic\",\nFontColor->RGBColor[0., 0.8666666666666667, 0.]]\) \
Conjugates", {Medium, Black}]]], 
      "Specifications" :> {{{$CellContext`p3$$, {1.25, 0.75}}, Automatic, 
         ControlType -> Locator}, {{$CellContext`p0$$, {0.75, 0.1}}, 
         Automatic, ControlType -> 
         Locator}, {{$CellContext`drLines$$, False, "isogonal lines"}, {
         True, False}}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{417., {178., 184.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`getTriBisectors[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`p3, 
          Blank[]]] := 
       Module[{$CellContext`u12, $CellContext`u23, $CellContext`u31}, \
$CellContext`u12 = $CellContext`norm[$CellContext`p2 - $CellContext`p1]; \
$CellContext`u23 = $CellContext`norm[$CellContext`p3 - $CellContext`p2]; \
$CellContext`u31 = $CellContext`norm[$CellContext`p1 - $CellContext`p3]; {
           $CellContext`norm[$CellContext`u12 - $CellContext`u31], 
           $CellContext`norm[$CellContext`u23 - $CellContext`u12], 
           $CellContext`norm[$CellContext`u31 - $CellContext`u23]}], \
$CellContext`norm[
         Pattern[$CellContext`v, 
          
          Blank[]]] := $CellContext`v/$CellContext`magn[$CellContext`v], \
$CellContext`magn[
         Pattern[$CellContext`v, 
          Blank[]]] := Sqrt[
         $CellContext`magn2[$CellContext`v]], $CellContext`magn2[
         Pattern[$CellContext`v, 
          Blank[]]] := 
       Dot[$CellContext`v, $CellContext`v], $CellContext`isogonalConjugate[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`tri, 
          Blank[]], 
         Pattern[$CellContext`bisectors, 
          Blank[]]] := 
       Module[{$CellContext`refla, $CellContext`reflb, $CellContext`inter}, \
$CellContext`refla = $CellContext`refl[$CellContext`p - 
            First[$CellContext`tri], 
            
            First[$CellContext`bisectors]]; $CellContext`reflb = \
$CellContext`refl[$CellContext`p - $CellContext`Second[$CellContext`tri], 
            $CellContext`Second[$CellContext`bisectors]]; $CellContext`inter = \
$CellContext`interRays[
            First[$CellContext`tri], $CellContext`refla, 
            $CellContext`Second[$CellContext`tri], $CellContext`reflb]; \
$CellContext`inter], $CellContext`refl[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := 
       2 Dot[$CellContext`v, $CellContext`n] \
($CellContext`n/$CellContext`magn2[$CellContext`n]) - $CellContext`v, \
$CellContext`Second[
         Pattern[$CellContext`l, 
          Blank[]]] := Part[$CellContext`l, 2], $CellContext`interRays[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`n2, 
          Blank[]]] := 
       Module[{$CellContext`m, $CellContext`b, $CellContext`sols}, \
$CellContext`m = Transpose[{$CellContext`n1, $CellContext`n2}]; If[
           $CellContext`negl[
            
            Det[$CellContext`m]], $CellContext`p1, $CellContext`b = \
$CellContext`p2 - $CellContext`p1; $CellContext`sols = 
            LinearSolve[$CellContext`m, $CellContext`b]; \
$CellContext`ray[$CellContext`p1, $CellContext`n1, 
             Part[$CellContext`sols, 1]]]], $CellContext`negl[
         Pattern[$CellContext`v, 
          Blank[]]] := Abs[$CellContext`v] < 10^(-9), $CellContext`ray[
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`phat, 
          Blank[]], 
         Pattern[$CellContext`d, 
          
          Blank[]]] := $CellContext`p0 + $CellContext`phat $CellContext`d, \
$CellContext`isotomicConjugate[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`tri, 
          Blank[]], 
         OptionsPattern[]] := 
       Module[{$CellContext`inters, $CellContext`meds, $CellContext`isos, \
$CellContext`isoConj, $CellContext`gr, $CellContext`grLines, \
$CellContext`grLabels, $CellContext`txtD = -1.25}, $CellContext`inters = 
          MapThread[$CellContext`interRays[#, $CellContext`p - #, #2, #3 - \
#2]& , {$CellContext`tri, 
             RotateLeft[$CellContext`tri], 
             RotateRight[$CellContext`tri]}]; $CellContext`meds = 
          Apply[$CellContext`getMedians, $CellContext`tri]; $CellContext`isos = 
          MapThread[
           2 # - #2& , {$CellContext`meds, $CellContext`inters}]; \
$CellContext`isoConj = 
          Module[{$CellContext`n1, $CellContext`n2, $CellContext`n3}, \
$CellContext`n1 = 
             Part[$CellContext`isos, 1] - 
              Part[$CellContext`tri, 1]; $CellContext`n2 = 
             Part[$CellContext`isos, 2] - 
              Part[$CellContext`tri, 2]; $CellContext`n3 = 
             Part[$CellContext`isos, 3] - Part[$CellContext`tri, 3]; Which[
              Not[
               $CellContext`interRaysIllConditioned[$CellContext`n1, \
$CellContext`n2]], 
              $CellContext`interRaysUnprot[
               Part[$CellContext`tri, 1], $CellContext`n1, 
               Part[$CellContext`tri, 2], $CellContext`n2], 
              Not[
               $CellContext`interRaysIllConditioned[$CellContext`n1, \
$CellContext`n3]], 
              $CellContext`interRaysUnprot[
               Part[$CellContext`tri, 1], $CellContext`n1, 
               Part[$CellContext`tri, 3], $CellContext`n3], True, 
              $CellContext`interRaysUnprot[
               Part[$CellContext`tri, 2], $CellContext`n2, 
               Part[$CellContext`tri, 3], $CellContext`n3]]]; $CellContext`gr = 
          If[
            OptionValue[$CellContext`drGr], {{
              FaceForm[None], 
              PointSize[Large], {Blue, 
               Point[$CellContext`p], Dashed, 
               Text[
                Style[
                "Q", 16], $CellContext`p, {$CellContext`txtD, \
$CellContext`txtD}]}, {
               EdgeForm[Black], 
               Polygon[$CellContext`tri], 
               Point[$CellContext`tri], 
               $CellContext`labelPoints[$CellContext`tri, "P", 16, {-2, 
                0}]}, {Red, 
               Point[$CellContext`meds]}, {Blue, 
               Point[$CellContext`inters]}, {
               Darker[Green], 
               Point[$CellContext`isos], 
               Point[$CellContext`isoConj], 
               Text[
                Style[
                "Q'", 16], $CellContext`isoConj, {$CellContext`txtD, \
$CellContext`txtD}]}, 
              If[
               OptionValue[$CellContext`drLogQprime], 
               
               Module[{$CellContext`isoConjLog}, $CellContext`isoConjLog = \
$CellContext`isoConj[
                   Log[1 + $CellContext`norm[$CellContext`isoConj]]]; {
                  Darker[Green], 
                  Point[$CellContext`isoConjLog], 
                  Text[
                   Style[
                   "log[Q']", 
                    16], $CellContext`isoConjLog, {$CellContext`txtD, \
$CellContext`txtD}]}], {}]}}, {}]; $CellContext`grLines = If[
            OptionValue["drLines"], {Dashed, {Blue, 
              MapThread[
              Line[{#, #2}]& , {$CellContext`tri, $CellContext`inters}]}, {
              Darker[Green], 
              MapThread[
              Line[{#, #2}]& , {$CellContext`tri, $CellContext`isos}]}}, {}]; \
$CellContext`grLabels = If[
            OptionValue[$CellContext`drLabels], {{Red, 
              $CellContext`labelPoints[$CellContext`meds, "m", 
               16, {$CellContext`txtD, 0}]}, {Blue, 
              $CellContext`labelPoints[$CellContext`inters, "i", 
               16, {$CellContext`txtD, 0}]}, {
              Darker[Green], 
              $CellContext`labelPoints[$CellContext`isos, "iso", 
               16, {$CellContext`txtD, 0}]}}, {}]; {$CellContext`isoConj, 
           Map[
           Graphics, {$CellContext`gr, $CellContext`grLines, \
$CellContext`grLabels}]}], 
       Options[$CellContext`isotomicConjugate] = {$CellContext`drGr -> False, 
         "drLines" -> False, $CellContext`drLabels -> 
         False, $CellContext`drLogQprime -> False}, $CellContext`getMedians[
         Pattern[$CellContext`t1, 
          Blank[]], 
         Pattern[$CellContext`t2, 
          Blank[]], 
         Pattern[$CellContext`t3, 
          
          Blank[]]] := {$CellContext`t2 + $CellContext`t3, $CellContext`t1 + \
$CellContext`t3, $CellContext`t1 + $CellContext`t2}/
        2, $CellContext`interRaysIllConditioned[
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`n2, 
          Blank[]]] := $CellContext`negl[
         Det[
          
          Transpose[{$CellContext`n1, $CellContext`n2}]]], \
$CellContext`interRaysUnprot[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`n2, 
          Blank[]]] := 
       Module[{$CellContext`m, $CellContext`b, $CellContext`sols}, \
$CellContext`m = 
          Transpose[{$CellContext`n1, $CellContext`n2}]; $CellContext`b = \
$CellContext`p2 - $CellContext`p1; $CellContext`sols = 
          LinearSolve[$CellContext`m, $CellContext`b]; \
$CellContext`ray[$CellContext`p1, $CellContext`n1, 
           Part[$CellContext`sols, 1]]], $CellContext`labelPoints[
         Pattern[$CellContext`pts, 
          Blank[]], 
         Pattern[$CellContext`prefix, 
          Blank[]], 
         Pattern[$CellContext`style, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`offset, 
           Blank[]], {0, 0}]] := 
       MapThread[$CellContext`txtSubscript[$CellContext`prefix, #, \
$CellContext`style, #2, $CellContext`offset]& , {
          Range[
           
           Length[$CellContext`pts]], $CellContext`pts}], \
$CellContext`txtSubscript[
         Pattern[$CellContext`txt, 
          Blank[]], 
         Pattern[$CellContext`subscr, 
          Blank[]], 
         Pattern[$CellContext`style, 
          Blank[]], 
         Pattern[$CellContext`where, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`offset, 
           Blank[]], {0, 0}]] := Text[
         Style[
          
          Subscript[$CellContext`txt, $CellContext`subscr], \
$CellContext`style], $CellContext`where, $CellContext`offset], 
       Attributes[Subscript] = {NHoldRest}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.770726847423774*^9, 3.7707268778833485`*^9}, {
   3.7707271848243675`*^9, 3.770727249210428*^9}, 3.770727420206361*^9, 
   3.7707371312332487`*^9, {3.7707371973421288`*^9, 3.7707372147324033`*^9}, {
   3.770737379504891*^9, 3.770737389835284*^9}, {3.770737438055393*^9, 
   3.7707374535978565`*^9}, {3.770737503669876*^9, 3.770737537940427*^9}, 
   3.770801116618534*^9, 3.770802487956959*^9, {3.7708045962380095`*^9, 
   3.7708046205490394`*^9}, 3.77080854641943*^9, {3.770808601951984*^9, 
   3.7708086377855268`*^9}, {3.770808886023307*^9, 3.7708088921210413`*^9}, 
   3.770832194301595*^9, 3.770838235038827*^9, 3.770838988090186*^9, 
   3.770840247540656*^9, 3.770840432478443*^9, 3.770842251968011*^9, 
   3.770881812403494*^9, 3.770881872292444*^9, 3.7708824456856937`*^9, 
   3.770886466753098*^9, 3.770894535845208*^9, 3.7709343883039603`*^9, 
   3.770936123938564*^9, 3.7710256384812593`*^9, 3.771159269009961*^9, 
   3.7716755277936954`*^9, 3.7721372043531227`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"CloudDeploy", "[", 
   RowBox[{"%", ",", "\"\<isogonal conjugate\>\"", ",", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.770726855798393*^9, 3.7707268857583017`*^9}, {
  3.770727251463408*^9, 3.7707272594271507`*^9}, {3.7707375520666733`*^9, 
  3.770737560197115*^9}, {3.7708088182085686`*^9, 3.770808825985021*^9}, {
  3.7708088627875752`*^9, 3.770808864124009*^9}, {3.770808902146246*^9, 
  3.770808908024544*^9}, {3.7708818833877597`*^9, 3.7708818955064025`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cyclic Quadrilaterals", "Section",
 CellChangeTimes->{{3.770901594866383*^9, 3.7709016027403116`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "orderVertices"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"orderVertices", "[", 
    RowBox[{"vs_", ",", "ctr_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vs0", ",", "atans"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vs0", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "-", "ctr"}], ")"}], "&"}], "/@", "vs"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"atans", "=", 
       RowBox[{"ArcTan", "@@@", "vs0"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"vs", "[", 
       RowBox[{"[", 
        RowBox[{"Ordering", "[", "atans", "]"}], "]"}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7709006163928666`*^9, 3.770900661600382*^9}, {
  3.770900801895933*^9, 3.7709008302338123`*^9}, {3.770900876449134*^9, 
  3.770900896114086*^9}, {3.770900930625883*^9, 3.770900931489576*^9}, {
  3.7709016097220516`*^9, 3.77090161244278*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Pick", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", "False", ",", "True"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7709021854355044`*^9, 3.770902192683541*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "c"}], "}"}]], "Output",
 CellChangeTimes->{3.770902192922887*^9, 3.770934388453562*^9, 
  3.7709361240751705`*^9, 3.771025638515165*^9, 3.771159269189509*^9, 
  3.771675527826579*^9, 3.772137204385008*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"assume", " ", "ordered"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "@", "getMaltitudes"}], ";", 
   RowBox[{
    RowBox[{"getMaltitudes", "[", "vs_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "ls", ",", "vsNonDegen", ",", "meds", ",", "feet", ",", "lines"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ls", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"magn2", "[", 
            RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"vs", ",", 
            RowBox[{"RotateLeft", "@", "vs"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"vsNonDegen", "=", 
        RowBox[{"Pick", "[", 
         RowBox[{"vs", ",", 
          RowBox[{"Not", "/@", 
           RowBox[{"(", 
            RowBox[{"negl", "/@", "ls"}], ")"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"meds", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{".5", 
            RowBox[{"(", 
             RowBox[{"#1", "+", "#2"}], ")"}]}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"vsNonDegen", ",", 
            RowBox[{"RotateLeft", "@", "vsNonDegen"}]}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"feet", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"closestPerp", "[", 
            RowBox[{"#1", ",", "#2", ",", "#3"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"meds", ",", 
            RowBox[{"RotateLeft", "[", 
             RowBox[{"vsNonDegen", ",", "2"}], "]"}], ",", 
            RowBox[{"RotateLeft", "[", 
             RowBox[{"vsNonDegen", ",", "3"}], "]"}]}], "}"}]}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"lines", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"meds", ",", "feet"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<meds\>\"", "\[Rule]", "meds"}], ",", 
         RowBox[{"\"\<feet\>\"", "\[Rule]", "feet"}], ",", 
         RowBox[{"\"\<lines\>\"", "\[Rule]", "lines"}]}], "|>"}]}]}], "]"}]}],
    ";"}]}]], "Input",
 CellChangeTimes->{{3.7709016251792135`*^9, 3.7709018741329556`*^9}, {
  3.770902079644576*^9, 3.7709021367495847`*^9}, {3.7709022363734703`*^9, 
  3.7709022405722513`*^9}, {3.770902280701008*^9, 3.7709023252935534`*^9}, {
  3.7709024334061794`*^9, 3.7709024454050546`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"DynamicModule", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"quad", ",", "gr", ",", "malts"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"quad", "=", 
        RowBox[{"{", 
         RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"malts", "=", 
        RowBox[{"getMaltitudes", "[", "quad", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"gr", "=", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"FaceForm", "@", "None"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"EdgeForm", "@", "Blue"}], ",", 
             RowBox[{"Polygon", "@", "quad"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Red", ",", "Dashed", ",", 
             RowBox[{"Line", "/@", 
              RowBox[{"malts", "[", "\"\<lines\>\"", "]"}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "@", "Large"}], ",", "Red", ",", 
             RowBox[{"Point", "@", 
              RowBox[{"malts", "[", "\"\<meds\>\"", "]"}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "@", "Large"}], ",", "Blue", ",", 
             RowBox[{"Point", "@", 
              RowBox[{"malts", "[", "\"\<feet\>\"", "]"}]}]}], "}"}]}], "}"}],
          "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"{", "gr", "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", ".5"}], ",", 
          RowBox[{"-", ".5"}]}], "}"}]}], "}"}], ",", "Locator"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p2", ",", 
        RowBox[{"{", 
         RowBox[{".5", ",", 
          RowBox[{"-", ".5"}]}], "}"}]}], "}"}], ",", "Locator"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p3", ",", 
        RowBox[{"{", 
         RowBox[{".5", ",", ".5"}], "}"}]}], "}"}], ",", "Locator"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p4", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", ".5"}], ",", ".5"}], "}"}]}], "}"}], ",", "Locator"}], 
     "}"}]}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7709018790288706`*^9, 3.7709020429237137`*^9}, {
  3.7709022869124084`*^9, 3.7709022870201197`*^9}, {3.7709023290135827`*^9, 
  3.770902406230801*^9}, {3.7709025236389685`*^9, 3.770902536405856*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`p1$$ = {-0.5, -0.5}, $CellContext`p2$$ = {
    0.5, -0.5}, $CellContext`p3$$ = {0.5, 0.5}, $CellContext`p4$$ = {-0.5, 
    0.5}, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`p1$$], {-0.5, -0.5}}, Automatic}, {{
       Hold[$CellContext`p2$$], {0.5, -0.5}}, Automatic}, {{
       Hold[$CellContext`p3$$], {0.5, 0.5}}, Automatic}, {{
       Hold[$CellContext`p4$$], {-0.5, 0.5}}, Automatic}}, Typeset`size$$ = {
    360., {177., 183.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`p1$$ = {-0.5, -0.5}, $CellContext`p2$$ = {
         0.5, -0.5}, $CellContext`p3$$ = {0.5, 
         0.5}, $CellContext`p4$$ = {-0.5, 0.5}}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      DynamicModule[{$CellContext`quad, $CellContext`gr, $CellContext`malts}, \
$CellContext`quad = {$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$}; $CellContext`malts = \
$CellContext`getMaltitudes[$CellContext`quad]; $CellContext`gr = Graphics[{
            FaceForm[None], {
             EdgeForm[Blue], 
             Polygon[$CellContext`quad]}, {Red, Dashed, 
             Map[Line, 
              $CellContext`malts["lines"]]}, {
             PointSize[Large], Red, 
             Point[
              $CellContext`malts["meds"]]}, {
             PointSize[Large], Blue, 
             Point[
              $CellContext`malts["feet"]]}}]; 
        Show[{$CellContext`gr}, PlotRange -> {{-1, 1}, {-1, 1}}]], 
      "Specifications" :> {{{$CellContext`p1$$, {-0.5, -0.5}}, Automatic, 
         ControlType -> Locator}, {{$CellContext`p2$$, {0.5, -0.5}}, 
         Automatic, ControlType -> Locator}, {{$CellContext`p3$$, {0.5, 0.5}},
          Automatic, ControlType -> 
         Locator}, {{$CellContext`p4$$, {-0.5, 0.5}}, Automatic, ControlType -> 
         Locator}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{417., {212., 218.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.770901982787391*^9, 3.770902047208234*^9}, 
   3.7709020904018*^9, 3.770902241707218*^9, 3.770902287913705*^9, {
   3.7709023346355677`*^9, 3.7709023570647383`*^9}, {3.7709023916348085`*^9, 
   3.770902406582833*^9}, 3.7709024473698034`*^9, 3.770902536762917*^9, 
   3.7709343884934607`*^9, 3.7709361241140957`*^9, 3.771025638557025*^9, 
   3.771159269239376*^9, 3.7716755278694644`*^9, 3.7721372044318824`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Ellipse Invariants", "Section",
 CellChangeTimes->{{3.7660460012127438`*^9, 3.766046008589987*^9}}],

Cell[CellGroupData[{

Cell["Constant Perimeter (Darboux, 1917)", "Subsubsection",
 CellChangeTimes->{{3.7659623547818885`*^9, 3.765962371013446*^9}, 
   3.765962459082839*^9, {3.7677325634537053`*^9, 3.7677325641328864`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
om5vclX/Mb0gLqPfb+rZr0QeN4WymN9PO4pyheSWB0LKKXzoSV6b9/HymuGm
sn/eP7u9yGo4bLkbXdSuTUaYtfkRN9YMVmraioScfv9Zt5N5rmFl4oO2WEhz
lnfFKLhf/lrWzkl+h6uIPD7dRlNGvJNrgMQkZMwc5jzOaufzD2XmBWweaa3G
GTP1sWuvRRXxeL1CKlNeHJzZhavbiriRrev5LzwuV9j5/j8kV7Mcv+VtYdv2
npJ5f5GFvBRXWbCy7YYnieU8dlZn1SQ9Wj3GRrbxj3F2ntufp9a0aZc6UW12
0MnFzkYy3FXSnU9Ww2zxuXdZhHaaSUVIme9Pzu8h2fjyOCMrtyuxtbx+gaH0
2FMOCtyd2jDyC28nE/jXi7+doAij4N2WQWoSPznEnUdcSs5quPed7zXtdfjo
Je/3DjZRbSwjlzWY6huYVsnrStZlkecXjtLl7J36II+DoUVtD8mZtSUB6zW4
3zeE5AAIIhatKj3owGRdcRExKZUu49YeOwcAAIDviERiZ1//ARBwKIOQEXJx
w4SeurIYjJiSkc2kjWcCvhfXtmVJzV+gpN6b1UumWTG5ms3Kh3G8dqPl7DIx
/dXhGQ6GUhgJJUuP7ffjKzo0akQpecEnZ7uYSLPfiaSh09Ttt0MzK6l8ugND
agoibqx15txHKujbzD8bQ+C5fJnFiPPtxR2SjzofXcWPHh/koshbW8f1UBLH
dDYloyF7HseXtufECVKdH359dV9Nrq0o6HSdeyGOyPNGqqIOjpTBco6O5pCj
Hwvbe3nXDkeIvTi/r25jT/5OI46V7zlklX9eO+dmTPwn34n2nIbkGOn+S0+G
5PD4uULJuWHnVgzEce2mnIX9vIdpQrNo7v+F5KJy3QbNf5LZpmPMSLvnZSWP
5f4K6LPkdlwpr98A5Gz//ZPsOSWiChaTtt+JqxCW0vx/oeR/vLR6hLli508s
clMytF9/43MeDz2lecEi54dfXTOYcx6Ia/Ucuv9TBa+LdiJI4WNvBZFm0whd
twcUtPMUPh+gCLPk84Gx+th/H+FOJCmj4jBpzbM03pZVaBmrIHDjcAMlzpvs
PvV4cAaB12scWhpxZsEILc7edRk56+LXyjbvFMIgZd2f3+zAQ0gOgABi1pRE
31xio4bBYGVVR2wIENrHwgAAAADw90BZNflf7++d6WisICaGUzXvP2PXtdB0
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
uauDEHxutIOhrnKtuFJIrraE5FDn3TP6d+/x3w64bm3qlc6fS0ck0itkW715
h27/6R/rN3jkkl1XXsZ/x7eZ6LapjZ3Vx1441X/feNs3TsVpsvgXp5f0rpZP
aWRVCsnxX8mjUxuSlzdT+uT1ctu2nuiktr358R3UqFFDBAAAAEA1t27dyupL
+CwnjX95afXv9XJ9qK/SNS3t+Pvux6ouLydJCL++qIpySF559UN6kmcNQUh5
fWlKPYN0KXluu7H/eMZ+c8sVeUrQrQ1/OJbMoSPStWkyYvuNABXKaL+aIJdE
PNzQNU+6b2eemgtvhqiakUtjXDf/Vq24oizZuN7odTf8M2Nff5RY98OzulSy
1P/2phrfi0n+eiuuBX+X5vYK4sgnR2d3rWT88VX08zp0m3naR7Xe7oIsKfTR
zkGK7kIauoZWw5xC1Wa45bE+19YPLauoBNcvaNNu8wPVuzpIHq2rZa6vpfRN
Nhm43S0sQa0rgwW5LPDSlLoWOulOQFlNW8/Itn63nQ++3wSK2Gt/n/IFP7aF
KtB76bkXkSqeqOQhzhtHtrRS6raiZ9d8yIEnCeo8sj+D1Ibka0bUNlYuJM9t
XWPcfo94PvqfGCE5AAAAoDpC8jfyGO9zqwZVVRS25S5db/zupxl1LVCQJIRd
mVdeERdoamu23+sjIyTPGoJcHOO6oomxhnKwql144PYHYUnfFq8J0c+Pze9W
uaCeSNe8Yq8/Dz9RsfHuV76KTBLtuqFF4fTfzrpTLwQkqFq/HO+xf0zt0orV
8MwrDlpz7kVsdq7OTHh5Zmn/WkVzaImymkXZzlvvhSV+z3pLWfjjg392LZtL
6VUsKzSffcxTxaxQlhzlcWxstbRtNbUNSnXe+0JtmmzLkwLu7Z7YWDFlo523
dN251yNV/uoIQccG5NFLFzbbTP3nZXRm9Dn6fgRBFua8tH1xfQ11Ssl1jcyr
dRj7j+d3mzCTBJ2Z7lDUXHGOzeE498jTMFVXMo5zPzalq71SRi4yr9Fu5rlX
VDNnLkEcdG/nhFbpFu3QL+HQdYtrbGY8GQV1QUgOAAAAqI6QXEh4eXnFsNom
aV0LDEvX7rvjgcq3jYIkPuT8zKKKTERL22LK1Vgy8iwjCInPdnYppaOpHFMV
c1x2I+BbCoEFcdDtDcMcrU10RbrWjf7YcsUvc1Y4k6fEPd7U2kwn3Zez2MRT
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
e9I75v8KegS5OCbgwcmlvWrnFb1bANnSrt6g9Zf9f/XeVWoekr95E+3+9+Rm
Nnn1tTREBVpN2HvPP/7/bkIFcXzQk7Orx7YsY2WY2ofcskSDQX/uV6uE/C15
7L11LSsU0v30yqZI0/F77wZ86dkONZMY6Hr2wNrFCxbMnztr+pQJ48aOHDao
Z9u65Quba3/63lIXTjUvUqF5tyEjxk6YNG3WvAVvLVy5aedVn08bNwEAkMUE
eUr48wubxrdrVL3pkIXH7r+O+8yFhDwl1v/uvhmdy1gYvP+tM7RuO3aXS/C/
N9iEOhAkkY8PT+5U2aZu19n7b/lEfaaRiiBPDn50/K9e9UrnNHh3WZOzbL2h
a04+Dk7gWQEAWUae8vrayuEtCpnqf3qzpVepzcij7tm94cqb1InKhKCHJ5f+
0bSUlYlOzvxlO4xdffLey9CYj7VVqZ3Qol4/ubr3zy4OBbV0cxWu3G7k1tsk
5NmBOOjcjKr5c2grtVwxqDp+t2ugUkMHabzHofGNyqSWkeeqPWDlRc/oHx7m
yJPDnDf3rVw0R+p+6udrMGm3s0+kolAitU4iKsj7/tkts/rUqViqvOPABUdc
XseI5eIw5y2DG5fJ+a4zeY76ozemdlJ/u5FMHON3d/fMTpXt7VpP2XrLP4Hu
fOpFnhzy6MTioXUK59YTaRnkd2g9afcNX8WAp65MFB/u7377nw2Teje0LV+h
ybClxx+GiGWS+ADn7cMq5k29BdA0NCv5xxHfd7M9glwcH3D/4ATH/LpF6s46
75ecxbXYgjja79auSY52+Qz0jS0qtZ9ywMUvKm2nUt9dbIj3g/Nbp3StmVek
oamVq3DFBp1mHrofmsRhqvYh+Rt59OPD07vXLGymr2Vm3WzCpnNPguPTpvQE
WcrbA/fp5d0LhjQsld9QZGBmVaZmt8lrzjwJVr8Hn2XBN5Z3r1fEWE/px0HX
pGDridvuvFKXnjAqEAKvLxnQwPLTKzRNfSPTvFaFPlHAMk9Oo/Q1D5o6+ewb
zbsaltXvAwCAdOTJ4U+dVgxpW6vRwIUnn4Z/uXhYLo7zv7FlSC2L9z9yWgZG
Nn2WXQ+gwZiakkU+3jmytnXV9rOOPAxNzODGWxLssnNiq7L5DN5fsZlVajv9
wN2A+B/21DcAfEoW5X1568Ru9a2tchnqaOsY5rKyruDgYFfcqpZj//1uX27h
nV0I0qQwjytbZ/SpU65onjzm+R1aDpm1etexi7ddHjx6/Mjl5sV/diyZ3K9J
+QJ65tZVmg2ef8CFhDy7EKLvLG1ayky55YpelX4bbvjEpPUJEAdeX9avciFT
kShH4ZYz97oEJmZJpCyP97u4ekC9isVzGWhomJdpO2bJztPX7t53c3O9d+PM
3k1Lpw5qW7OsbaWavaZuuuIZkRY5iQPv7pjSqUYJEwOdt9cMrSesP3z1ruvd
K8c2TPutun0Zu27Tdt55xUWEGhIk8f4uRxYNa1auSG6jHDkLV287evnek9ed
7z9wc7116dT+NfPG929dx7501Wbd/txx9WXc+xOtXBwfeHfXmBY2+U1S62RK
dpq2/7Lz/fsu109smtLFNke+0k0XnnmlDg29BXlyhPfVbRPbOBQxNzPJU6Xd
2OW7zt689+Dho/u3r5zas2r2sHYOBTW0jHIXta/jOHr5yUehVPu8o/4heeoc
SIjLvum9GpbJb6RboHyzIbO2HLtw+77bw/tvz1QHNi8c3bVu8bxmhrkKla7c
bsife648D1XXap9E/6ubR3WoWzq/mb6OppaRuVWp+t1m/X3rVYxalbxnQB71
3GnjjP6dW6XXrufAETMWLFuezrK/5k4dNbBDuj9s33XAjPXX/LN7E3YAwM9F
kMV5X1o3xrFGyz6rrr9W4b5bkMQF3NrQu+S7lVBEGpq6ua07bXKLzT6z3mpI
kEvFSfHRkRFhIUEBr/19vb083Z88fODqfOvqeacTJ06cPHPx+pPgr69xkaf4
nRhbrUSJjiuv+MWp0DpFkIY5bx3cuJTp+1XydHLa9vjzoFso620ByDqCJNr/
4fkdC8f1/63Tb/3HL9zhdOGfjaM6dPt5QvJUcmlSuM/dY6sm9m1aq4p9mVIl
i5eyq1a/Weu2bZrUtCtbslBJ20p1WnYev9HpUeCv3hEgexFin20bXNbcSCkl
NyzcfulZz8h3P62yBK8jExqWyaMt0sxZa8Cqi55RWRiQSKKen103pmv9avY2
xQrkyW1dsU6zFi0a1a9TqXgp2wpVG/82bvUxF7/Y9A+kyeP97h5YNKBDgwo2
RfIVsi5XvU7DBnUqVqhoX6vnpI2XPMIJH9WWPCXa997RlWN/a+pgV7pIgcKF
ileq1bh586Z1HBwqlChTuU7LPhPXnXoQEC9Pv1G83529c/rXrVK+ZJH85oXt
ajdt2rhO1ZKl7Gu0nLbHLVxt8r13DVXcTqwc07W2g12pksUKlq9et3mr1s1q
V7AualnE2ta+er3mb9/gSdfX8RyiCtkhJH+TmpNHelzcNK1Hq7r2ZUoULFW+
Qp2mLVo2qVvZtmjR4sVt7Bxqtuwxesneq+7Bceq9upI87vX9szvmj+3dtX2H
gRMX7br8NDA2RVCXrxAAAL8oQRz19MS87nWL2XUYv/nS4xcBEfEZhqmy5Iin
x8bVSmukpqOfo/G0yyGk5N9KkMYHPbtxfMvKpX/NmzV10vjRfwzs3b1zm2YN
alcrV8w89WPWzFmi8ogTfl99qZfwfFvfgjmK1h259dydZ76hcWJZhv9E/Iuj
M1rYWaY9DVes0fBt1/1/go4GAH4a4lCX3WPbdPq5QvL35NKkqECPexeP7lgx
a/SANs1TtenQecTslbtO3Hjs//+tdaH+pH4nRlYqnK7lionjlMOPghJlb6Th
9zYMcSiaUyQyLOA4Y69rFpWRK5NEeLtcOLh58ZRBnVq1cHx7ALYbOmXRhoPn
XbzDkz7TalqeFOFz/8KBtbOH9ujcsnnz3waN+WuHk+vLCPVrcYBPCLLk2GDP
u2f3r5s3fnC31DNOy47dBkxdvu3wlQc+n5vhkL+9DfC5d3rXyunD2jVv7tii
5YApy/acfxSifteKqZ2CQjzvntm/Zv74wV1TT6eOrdt2Gzd33e5/Lt/3Ck34
yX4//rtsEpK/I08K93lw5fC2pVN//61j63e/lX3/mLp0y6G3dzyvo5LUOx4H
AABqSx7t6bS4b4XUGzQzy0pN+8xYd+JhSEaFP0JyhOfhcSU/3OxpaOrnKTv5
UqTaXRxnF9JoD6eFvSv93+otChpauW2qT70Q/LWfsNz7QHcbk9SnvPPZ1O70
+4KjrgFx4gxuwIUUr6Ojm9iZps2AmDcYtfaaH40aAaiN5MDbW0e0bNdyyMHH
cdwHQ+0JoTfmtytpZqBUTJ674rCdt/1i4v3OzWtbKb++psiwUs+l5zwixfzY
Asgq2SkkBwAAyAySgLsbRzuapN23aVnYNJ28zz02g9s0aXzYvQ1d9BRbGRrV
WvOQe7tvJI31ub5tZo8a1atXq1rFoZK9XZkSBXIbK91N65gWqz/kiPdXt/VM
uDm3lMnHZ7z1qw3d9zA0MaN/JsZlY5c6JRQLqxTsMH73g1A1aDEJAKmEWK/T
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
K2GVt4Rtlbr1G9SqUauKTYWqtZt0Hjpn25mHAXFimfLqnEJC4EOn9eP7t6tT
2aZwkRI29lVq1K5ZyaFm7Ra/z911wyuS5tXqTJAnR/o6H1s1qV+L+tXsbMuU
qFC1Rv0G9WtWKlPSurht5ZoNWncdOHXl4ZvPw5JYeBUAAAAAAADAL0Ea7ffk
ptPfmxZPHta/b5/evXsPmvrXut2nrj96FZkk/fe+KfLkaP+nN0/tWjlt9LB+
vXsPnzRn/aFLj/zSmndAvQnS5JjA584XDm9ZPmv8729HvHffIcPG/7Vh/8kr
Ls9fRyUTjwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAD4Bf0PoYGTvw==
    "], {{0, 270}, {1975, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{447.26666666666665`, Automatic},
  ImageSizeRaw->{1975, 270},
  PlotRange->{{0, 1975}, {0, 270}}]], "Input",
 Evaluatable->False]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJyM/QnURudd1/1yzoFaVCidPAVkHooWxMMgitMrKqjoUaCKszLZipD0bRPS
pHNo06ZthiYdaJqkTelMmzSdUgoiUwuFtlJKEQdwRBFEXxRfzuG49HzP/Vn3
b+0+SVjnWuvZaz/Xvva+9/D/Xf/5f33GN176tX/v//pRH/VRT3hgm6/9hiv+
xOMf/w1Xft1H989XXHnZt3zj/62dr/y/fNRHfWx//7/9L//yL/9Df+gP/cE/
+Af/wLl92Zd9Wf/+4T/8h9t+6Zd+af/+kT/yR/74qf3RP/pH62/8n/pTf+pP
/+k/3YD2/+Sf/JN/4k/8ifr/2B/7Y1/xFV/xp06to3/mz/yZr/7qr/5zf+7P
tf8Vp/ZVX/VVf/7P//m/cGp/8S/+xf/nuf2lv/SXvu7rvu6v/JW/8lf/6l/V
34kN/sqv/Mp2/vJf/st/62/9rW/5lm/5a3/trzXgG7/xG7/5m7/5r//1v974
v/E3/kY9f/Nv/s1v+IZv+KZv+qa2f/tv/+0Gt9Xz9/7e3/vWb/3Wb//2b3/c
4x73v5/a4x//+CecWjuXXnrpt33btzXg7//9v+9Q20suueRbT61Dl57a5Zdf
ftVVV11xxRVd5B/8g3+gv1Pa6cr1tN/4Tnz8uXWdDrlI/z7xiU+88sorn3pq
V57a05/+9GtO7eqrr37a05725Cc/uUPf+Z3f+exnP/s5z3lO2+c973nXXXfd
9ddff+ONN77sZS971ate1bbO60/tulO74YYbbrrpphe96EUveclLvuu7vuu2
22777u/+7te+9rWvec1rXnVq7dT5yle+sv477rij7atf/eqXv/zlnXLrqb3i
Fa+o8/bbb+/0/u1oPY3vxDe84Q133nnn3Xff/da3vvVtb3tb+29+85vvuuuu
7/me7+loZ7l+237xe07t9a9//ete97q2nVt/+284tXYa086b3vSmN77xjW95
y1u6oKu1rbPrOKvWgPqNecc73vEP/+E/bFuP/m7m7afW/bT9vlNrp/vslHbe
emiucM8997zzne/83lN717ve1fjv//7vb/uuU/uBH/iBto3paL/VIT/Xflj4
0lMDilr7X/zFXzy81NN+lP9HTg1kQkFIAZx2+jeItQ0jf/LUQke0HS5CQRgB
n7ZR+1edWhgBiq/5mq/52q/92qDxtacWNOps24mNaSdoBIS/83f+TjuPfvSj
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
QUaZmjbSdv6Et5iCcqPtLeqUruiijrdMzeJnAnvXP//5z+81PhLL6MdjGQL1
ZUc2pYLKBg1F2xIe5vztMR/1qEeBRq+KhFM34hdyheQ7/Nx9mx3fe9RVWHzU
NW6yIoen0vGGS223Nxytl9hyH8h4++ZLvVziFmgw0iJ7rgrF2Wgf2If+fRO3
zoaYAqjCRbpbukYbRZyU3r1eln/x0qTpxlgpuUsgoNcSnwUm0myTnXj6zqzw
OcQnSvHoReey9pREWMU2Aerz67X0K5XTQUTSp3BEtQwaSitoWMNCxYolvDbK
77tstu2cS9DQs4mF6qbLiCzbJPvB9s9Eqc///M//zM/8zGap1flv/+2/pYaH
iPXIgIu1g5EAKJ4qZbypbr36YmTfrp7EHtFG+XdcjViDXT3NYlF/XQYUSVM9
2gL1m8x2GFUgVl9lG4inXsbWD1yNHoGMquNP69JBE9JXGGxbuNbdxsiXwZIf
v1DbMBErvLTKzWQ3HBEuk47w/5ZLH+SzgfhCR86sVdyTqYr4BD7LHHzdfYsn
nOavucJXzHPKiJx3fOFa3vcZZAsR61ZzJr2eg7Wqj3RXXxjVtOkzlWmpGdRt
2gRD00JwcY05LLj51H/eYICicVssTm0WWq5w4tA1ttIZNUMQvHwcLKbr5StF
9uMmNG7QIKXPTivpia4tNLGPCPD4i6jCRl/sYXWfCR0xjnaA5jNoaHC8dmPX
ijkLx1XKIGX8V3/1V1udFjGqiLTiDsn/AsKfeTX60+5Np9qwwFq7AODujeVB
haLm2du11uXCbsZYttk0SJg65+LXzLOtaV8JO+1Rq2wc5NMvwkJsQkXoNkxl
P9M1woWFbkpD9M9etSpGZiJvF2F4ejHm7DhNuDzgPgKNBa6/7gHG6emYWMUY
zitxLSaKPjKOsHEWFZkfFo9o6Ov3z47RGS6/Hp8Czq/N38eRBxerWHiePMun
A4tQELHo64mMTUCEuA4pfmf7gPUEl9C0cNzVxaV0E5bEGTqgrTPYds0abVDb
ecll7mAQylKpnyCwsBEo2Pw7iD5Tcjvuib7kS77kcz7ncz73cz83dHzxF39x
yIrU//RP/3QNXteJ72wiI+aQIfcjH/kIO9XPX7XATsVIa5ZkxNse8TOUUW2g
XnhMn4aRPsIgel2uuq3eECkdQ1EW2w5mqllImB9d3EHL1685zw4ZLh75yEdq
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
a9D4UzlU33QNVmNep7bJxv8PKJv7Ww==
    "], {{0, 326}, {265, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{167., Automatic},
  ImageSizeRaw->{265, 326},
  PlotRange->{{0, 265}, {0, 326}}], "\[IndentingNewLine]", 
 RowBox[{"Jean", "-", 
  RowBox[{"Gaston", " ", "Darboux", " ", 
   RowBox[{"(", 
    RowBox[{"1842", "-", "1917"}], ")"}]}]}]}], "Subsubsection",
 CellChangeTimes->{{3.76773259557681*^9, 3.7677326796728935`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"deltaA", "[", "a_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"a", "^", "4"}], "-", 
     RowBox[{"a", "^", "2"}], " ", "+", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.767518908992114*^9, 3.7675189314570284`*^9}, {
  3.76751906076943*^9, 3.767519062896768*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "darbouxP", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"darbouxP", "[", 
    RowBox[{"a_", ",", 
     RowBox[{"b_:", "1"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a2", ",", "b2", ",", "delta", ",", "per"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a2", "=", 
       RowBox[{"a", "^", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"b2", "=", 
       RowBox[{"b", "^", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"delta", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"a2", "^", "2"}], "-", 
         RowBox[{"a2", " ", "b2"}], "+", 
         RowBox[{"b2", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"per", "=", 
       RowBox[{"2", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"2", "delta"}], "-", "a2", "-", "b2"}], "]"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a2", "+", "b2", "+", "delta"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"a2", "-", "b2"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      "per"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.765962462231406*^9, 3.7659625984851584`*^9}, 
   3.7674524544003525`*^9, {3.7677323662632604`*^9, 3.7677323737442513`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Exit angle at ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]]],
 " which creates triangular orbit (Garcia, 2019)"
}], "Subsubsection",
 CellChangeTimes->{{3.7656386401343875`*^9, 3.7656387080664387`*^9}, {
  3.7657020836958857`*^9, 3.765702091623542*^9}, {3.766046026750311*^9, 
  3.7660460355557504`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
zmVAEf4/Zr3FQA==
    "], {{0, 128}, {760, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{350.33333333333326`, Automatic},
  ImageSizeRaw->{760, 128},
  PlotRange->{{0, 760}, {0, 128}}]], "Text",
 CellChangeTimes->{3.7657020770149593`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "cosAlpha"}], ";", 
  RowBox[{
   RowBox[{"cosAlpha", "[", 
    RowBox[{"a_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x2", ",", "a2", ",", "a4", ",", "c2", ",", "denom"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x2", "=", 
       RowBox[{"x", "^", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a2", "=", 
       RowBox[{"a", "^", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a4", "=", 
       RowBox[{"a2", "^", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c2", "=", 
       RowBox[{"a2", "-", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"denom", "=", 
       RowBox[{"c2", " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"a4", "-", 
          RowBox[{"c2", " ", "x2"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a2", " ", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"-", "a2"}], "-", "1", "+", 
          RowBox[{"2", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"a4", "-", "c2"}], "]"}]}]}], "]"}], "/", "denom"}]}]}]}],
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7656141896654034`*^9, 3.7656144502193213`*^9}, {
  3.7656386376131325`*^9, 3.765638637892413*^9}, {3.767134928908119*^9, 
  3.7671349313641386`*^9}, {3.767135012220955*^9, 3.767135064963421*^9}, {
  3.7671351340200477`*^9, 3.7671351920041447`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cosAlpha", "[", 
   RowBox[{"a", ",", "x"}], "]"}], "//", "TeXForm"}]], "Input",
 CellChangeTimes->{{3.7666680318751464`*^9, 3.7666680434402533`*^9}}],

Cell["\<\
\\frac{a^2 \\sqrt{-a^2+2 \\sqrt{a^4-a^2+1}-1}}{\\left(a^2-1\\right) \
\\sqrt{a^4-\\left(a^2-1\\right) x^2}}\
\>", "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGCwAmKZuzWJkQJvHNdM2dxbD6T/JWdfvQykd1gvffQfSEdP
/+bAIPjG0feIbxCIfvB6syMTkC7yeusLooW9O6NAdIvKBE9uIH0uc5a5MJDe
+UJ9ryqQ3vZuWbYakJbfu93fBEjrCZY6mwFpthK1leYgedsUDQsgveZxgbct
kN5z5lgUiP4y23gCiF7UJ9VbBaSttgm99xF641gX7WSdCKStzjEwdALpntQV
OuuAtF11zjI54TeOtzXKt5kBaYGzIhacom8cFZQuf/si9saRgZXhN4hmmX3z
+y8gXXctcT+D+BvHeI6rEYxAOq1leUUmkP7030quAUhHrZDcORFI/7KLdpkD
pDM7911cAKSlWncL7ALSBtybpC4BaYtVmj4vgPQxZfMSEP27SafnJ5B+07a4
2loCGF7bhdVtgPS2HRU19kC65LjPCi8gLZGfMtsXSM+XaproD6SvGO00TAbS
WdXRGqlA2kzln0QmkN5YMamvBkh3Srel1wJpocNXZFYC6RSf1TGvQPoX/it4
JvnG0WfjhHvHpd44AgAIc9IW
  "]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Can I find an expression for the next orbit point ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "2"], TraditionalForm]]],
 " in terms of \[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote] and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.765964228473589*^9, 3.7659642707689686`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "getP2"}], ";", 
  RowBox[{
   RowBox[{"getP2", "[", 
    RowBox[{"a_", ",", "x1_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "y", ",", "p1", ",", "norm", ",", "ca", ",", "sa", ",", "p2", ",", 
       "normRot", ",", "normRotNeg", ",", "p2Neg"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"y", "=", 
       RowBox[{"-", 
        RowBox[{"ellY", "[", 
         RowBox[{"a", ",", "x1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"{", 
        RowBox[{"x1", ",", "y"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ca", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"cosAlpha", "[", 
          RowBox[{"a", ",", "x1"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{"1", "-", 
             RowBox[{"a", "^", "2"}], "+", 
             RowBox[{"a", "^", "4"}]}], "]"}], "\[Rule]", "d"}], "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           SuperscriptBox["a", "2"], "+", 
           RowBox[{"2", " ", "d"}]}], "\[Rule]", "d2"}], "}"}]}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{"to", " ", "simplify"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"sa", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", 
         RowBox[{"ca", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"norm", "=", 
       RowBox[{"ellGrad", "[", 
        RowBox[{"a", ",", "x1", ",", "y"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"normRot", "=", 
       RowBox[{"rot", "[", 
        RowBox[{"norm", ",", "sa", ",", "ca"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"normRotNeg", "=", 
       RowBox[{"rot", "[", 
        RowBox[{"norm", ",", 
         RowBox[{"-", "sa"}], ",", "ca"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{
        RowBox[{"ellInterRayUnprot", "[", 
         RowBox[{"a", ",", "p1", ",", "normRot"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"get", " ", "2", "nd", " ", "solution"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"p2Neg", "=", 
       RowBox[{
        RowBox[{"ellInterRayUnprot", "[", 
         RowBox[{"a", ",", "p1", ",", "normRotNeg"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"p2", ",", "p2Neg"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7659634120463915`*^9, 3.76596364205964*^9}, {
   3.765963700482627*^9, 3.7659638173399634`*^9}, {3.7659638555896573`*^9, 
   3.765963887923172*^9}, {3.765963996307176*^9, 3.7659639985232496`*^9}, {
   3.765964138244048*^9, 3.7659641836275735`*^9}, {3.7659643384669185`*^9, 
   3.765964361931343*^9}, {3.7659644102840123`*^9, 3.7659644500596237`*^9}, {
   3.7659644850458846`*^9, 3.7659644974532433`*^9}, {3.7659646775200863`*^9, 
   3.765964736216584*^9}, 3.766046272230219*^9, {3.766429544047526*^9, 
   3.7664295470754595`*^9}, {3.7678084322510147`*^9, 3.767808478842349*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Triangular Orbits", "Section",
 CellChangeTimes->{{3.7660460814601183`*^9, 3.7660461045722866`*^9}, {
  3.766046439730899*^9, 3.7660464446997833`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "getReflData"}], ";", 
  RowBox[{
   RowBox[{"getReflData", " ", "[", 
    RowBox[{
    "a_", ",", "p0_", ",", "normal_", ",", "sinAlpha_", ",", "cosAlpha_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nRot", ",", "inter", ",", "interNorm", ",", "interRefl", ",", 
       "nextInter", ",", "nextInterNorm"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nRot", "=", 
       RowBox[{"rot", "[", 
        RowBox[{"normal", ",", "sinAlpha", ",", "cosAlpha"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter", "=", 
       RowBox[{
        RowBox[{"ellInterRay", "[", 
         RowBox[{"a", ",", "p0", ",", "nRot"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"interNorm", "=", 
       RowBox[{"norm", "[", 
        RowBox[{"ellGrad", "[", 
         RowBox[{"a", ",", 
          RowBox[{"inter", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"inter", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interRefl", "=", 
       RowBox[{"refl", "[", 
        RowBox[{
         RowBox[{"norm", "[", 
          RowBox[{"p0", "-", "inter"}], "]"}], ",", "interNorm"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"nextInter", "=", 
       RowBox[{
        RowBox[{"ellInterRay", "[", 
         RowBox[{"a", ",", "inter", ",", "interRefl"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nextInterNorm", "=", 
       RowBox[{"norm", "[", 
        RowBox[{"ellGrad", "[", 
         RowBox[{"a", ",", 
          RowBox[{"nextInter", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"nextInter", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"returns", " ", "an", " ", "\"\<object\>\""}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<nRot\>\"", "\[Rule]", "nRot"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<inter\>\"", "\[Rule]", "inter"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<interNorm\>\"", "\[Rule]", "interNorm"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<interRefl\>\"", "\[Rule]", "interRefl"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<nextInter\>\"", "\[Rule]", "nextInter"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<nextInterNorm\>\"", "\[Rule]", "nextInterNorm"}]}], 
       "\[IndentingNewLine]", "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.765617915036533*^9, 3.7656179467847757`*^9}, {
  3.7656186273902903`*^9, 3.765618954168909*^9}, {3.765638719615542*^9, 
  3.7656387563746033`*^9}, {3.765638835590863*^9, 3.7656388657498207`*^9}, {
  3.765639145228895*^9, 3.765639150084904*^9}, {3.7656392395346627`*^9, 
  3.76563925272674*^9}, {3.7656472106279583`*^9, 3.7656472979703765`*^9}, {
  3.7660463387139406`*^9, 3.766046339007156*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getOrbitData"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "getOrbitData"}], "=", 
   RowBox[{"{", 
    RowBox[{"posY", "\[Rule]", "False"}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"getOrbitData", "[", 
    RowBox[{"a_", ",", "x_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "y", ",", "o1", ",", "n1", ",", "ca", ",", "sa", ",", "sa2", ",", "ca2",
        ",", "halfAlpha", ",", "pos", ",", "neg"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"y", "=", 
       RowBox[{"-", 
        RowBox[{"ellY", "[", 
         RowBox[{"a", ",", "x"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "@", "posY"}], ",", 
        RowBox[{"y", "=", 
         RowBox[{"-", "y"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"o1", "=", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"n1", "=", 
       RowBox[{"norm", "[", 
        RowBox[{"ellGrad", "[", 
         RowBox[{"a", ",", "x", ",", "y"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ca", "=", 
       RowBox[{"cosAlpha", "[", 
        RowBox[{"a", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sa", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", 
         RowBox[{"ca", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pos", "=", 
       RowBox[{"getReflData", "[", 
        RowBox[{"a", ",", "o1", ",", "n1", ",", "sa", ",", "ca"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"neg", "=", 
       RowBox[{"getReflData", "[", 
        RowBox[{"a", ",", "o1", ",", "n1", ",", 
         RowBox[{"-", "sa"}], ",", "ca"}], "]"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"orbit", " ", "at"}], " ", "-", "\[Alpha]"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"half", "-", 
        RowBox[{
        "angle", " ", "to", " ", "display", " ", "\[Alpha]", " ", "at", " ", 
         "bisector"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"sa2", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "ca"}], ")"}], "/", "2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ca2", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "ca"}], ")"}], "/", "2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"halfAlpha", "=", 
       RowBox[{"rot", "[", 
        RowBox[{"n1", ",", "sa2", ",", "ca2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<ca\>\"", "\[Rule]", "ca"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<sa\>\"", "\[Rule]", "sa"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<halfAlpha\>\"", "\[Rule]", "halfAlpha"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<nRot\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"\"\<nRot\>\"", "/.", "pos"}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<interRefl\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"\"\<interRefl\>\"", "/.", "pos"}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<orbit\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"o1", ",", 
           RowBox[{"\"\<inter\>\"", "/.", "pos"}], ",", 
           RowBox[{"\"\<nextInter\>\"", "/.", "pos"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<normals\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"n1", ",", 
           RowBox[{"\"\<interNorm\>\"", "/.", "pos"}], ",", 
           RowBox[{"\"\<nextInterNorm\>\"", "/.", "pos"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<nRotNeg\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"\"\<nRot\>\"", "/.", "neg"}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<interReflNeg\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"\"\<interRefl\>\"", "/.", "neg"}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<orbitNeg\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"o1", ",", 
           RowBox[{"\"\<inter\>\"", "/.", "neg"}], ",", 
           RowBox[{"\"\<nextInter\>\"", "/.", "neg"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<normalsNeg\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"n1", ",", 
           RowBox[{"\"\<interNorm\>\"", "/.", "neg"}], ",", 
           RowBox[{"\"\<nextInterNorm\>\"", "/.", "neg"}]}], "}"}]}]}], 
       "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.766131059264862*^9, 3.766131101288623*^9}, {
  3.770725125785127*^9, 3.7707251338924904`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"getOrbitData", "[", 
   RowBox[{"2.", ",", "1.", ",", 
    RowBox[{"posY", "\[Rule]", "False"}]}], "]"}], "//", 
  "ColumnForm"}]], "Input",
 CellChangeTimes->{{3.765647347183366*^9, 3.765647357137536*^9}, {
  3.7656474395771904`*^9, 3.7656474423118477`*^9}, {3.7656487616143956`*^9, 
  3.7656487642313943`*^9}, {3.7656496326380577`*^9, 3.765649636926094*^9}, {
  3.7656498421738853`*^9, 3.7656498426366744`*^9}}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"\<\"ca\"\>", "\[Rule]", "0.5498845318951073`"}]},
    {
     RowBox[{"\<\"sa\"\>", "\[Rule]", "0.8352406848223443`"}]},
    {
     RowBox[{"\<\"halfAlpha\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.6999447055028296`"}], ",", "0.7141970381054217`"}], 
       "}"}]}]},
    {
     RowBox[{"\<\"nRot\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.954983821932709`"}], ",", "0.29665788350690403`"}], 
       "}"}]}]},
    {
     RowBox[{"\<\"interRefl\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.999046437670315`", ",", "0.04366022650254692`"}], "}"}]}]},
    {
     RowBox[{"\<\"orbit\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.`", ",", 
          RowBox[{"-", "0.8660254037844386`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.9958221967905105`"}], ",", "0.06460216482111569`"}],
          "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.9431448594673921`", ",", "0.2367425052274368`"}], "}"}]}],
        "}"}]}]},
    {
     RowBox[{"\<\"normals\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.2773500981126146`"}], ",", "0.9607689228305228`"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.9917220718836333`", ",", 
          RowBox[{"-", "0.12840300673595442`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.8989334497264451`"}], ",", 
          RowBox[{"-", "0.43808521198839007`"}]}], "}"}]}], "}"}]}]},
    {
     RowBox[{"\<\"nRotNeg\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.6499627641892748`", ",", "0.7599660552731531`"}], "}"}]}]},
    {
     RowBox[{"\<\"interReflNeg\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.9990464376703146`"}], ",", 
        RowBox[{"-", "0.04366022650254653`"}]}], "}"}]}]},
    {
     RowBox[{"\<\"orbitNeg\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.`", ",", 
          RowBox[{"-", "0.8660254037844386`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.943144859467391`", ",", "0.23674250522743723`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.9958221967905108`"}], ",", "0.06460216482111761`"}],
          "}"}]}], "}"}]}]},
    {
     RowBox[{"\<\"normalsNeg\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.2773500981126146`"}], ",", "0.9607689228305228`"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.8989334497264447`"}], ",", 
          RowBox[{"-", "0.4380852119883909`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.9917220718836329`", ",", 
          RowBox[{"-", "0.12840300673595817`"}]}], "}"}]}], "}"}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{
   "ca" -> 0.5498845318951073, "sa" -> 0.8352406848223443, 
    "halfAlpha" -> {-0.6999447055028296, 0.7141970381054217}, 
    "nRot" -> {-0.954983821932709, 0.29665788350690403`}, 
    "interRefl" -> {0.999046437670315, 0.04366022650254692}, 
    "orbit" -> {{1., -0.8660254037844386}, {-1.9958221967905105`, 
     0.06460216482111569}, {1.9431448594673921`, 0.2367425052274368}}, 
    "normals" -> {{-0.2773500981126146, 0.9607689228305228}, {
     0.9917220718836333, -0.12840300673595442`}, {-0.8989334497264451, \
-0.43808521198839007`}}, 
    "nRotNeg" -> {0.6499627641892748, 0.7599660552731531}, 
    "interReflNeg" -> {-0.9990464376703146, -0.04366022650254653}, 
    "orbitNeg" -> {{1., -0.8660254037844386}, {1.943144859467391, 
     0.23674250522743723`}, {-1.9958221967905108`, 0.06460216482111761}}, 
    "normalsNeg" -> {{-0.2773500981126146, 
     0.9607689228305228}, {-0.8989334497264447, -0.4380852119883909}, {
     0.9917220718836329, -0.12840300673595817`}}}],
  Editable->False]], "Output",
 CellChangeTimes->{{3.7656473525422935`*^9, 3.7656473581458097`*^9}, {
   3.7656474404608293`*^9, 3.765647442720807*^9}, {3.765648757104462*^9, 
   3.7656488111814804`*^9}, 3.7656493923809986`*^9, {3.765649627881259*^9, 
   3.765649654383269*^9}, {3.7656498026112814`*^9, 3.7656498429458404`*^9}, {
   3.765649931211861*^9, 3.765649936107792*^9}, 3.765701888154399*^9, 
   3.76570483595704*^9, 3.765719648342352*^9, 3.7657209765300317`*^9, 
   3.7658020580660195`*^9, 3.7660896835052147`*^9, 3.7661314578175344`*^9, 
   3.7661320312865334`*^9, 3.7662363060560637`*^9, 3.766236444350319*^9, 
   3.7662702170077615`*^9, 3.76634265611827*^9, 3.7665660529273744`*^9, 
   3.766746221709608*^9, 3.7669188274197764`*^9, 3.767009045264269*^9, 
   3.767009799771772*^9, 3.7670099385139885`*^9, 3.767013901708346*^9, 
   3.7670139995001116`*^9, 3.7670141003831654`*^9, 3.7670323965692844`*^9, 
   3.7670487972661743`*^9, 3.7670879652834606`*^9, 3.7671164138346157`*^9, 
   3.7671204118586626`*^9, 3.767123273258511*^9, 3.7671242912073317`*^9, 
   3.767260270582525*^9, 3.7676911286755*^9, 3.767732698118577*^9, 
   3.7678141441029654`*^9, 3.7678902773391895`*^9, 3.768120627475814*^9, 
   3.7681699078224783`*^9, 3.7691253127407894`*^9, 3.7701324067006407`*^9, 
   3.77013244006444*^9, 3.7701447028540287`*^9, 3.7701565391521792`*^9, 
   3.770157766713123*^9, 3.7703710133336477`*^9, 3.7704173939504585`*^9, 
   3.7704534488885994`*^9, 3.770475042937208*^9, 3.7704843660609784`*^9, 
   3.7705360699347973`*^9, 3.7705853016376686`*^9, 3.7706307534077177`*^9, 
   3.770631073800908*^9, 3.770666081479752*^9, 3.77072511073438*^9, 
   3.7708011171999536`*^9, 3.7708024887169266`*^9, 3.770809315879262*^9, 
   3.7708321944981003`*^9, 3.770838235233302*^9, 3.770842252156507*^9, 
   3.7708824459899096`*^9, 3.7708864669595456`*^9, 3.7708945360337067`*^9, 
   3.770934388658017*^9, 3.7709361242566857`*^9, 3.771025638739566*^9, 
   3.7711592694647455`*^9, 3.7716755280480194`*^9, 3.7721372046124277`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "orbitDataT"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"orbitDataT", "[", 
    RowBox[{"a_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "ellP", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ellP", "=", 
       RowBox[{"N", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", "  ", 
           RowBox[{"Cos", "@", "t"}]}], ",", 
          RowBox[{"Sin", "@", "t"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"getOrbitData", "[", 
       RowBox[{
        RowBox[{"N", "[", "a", "]"}], ",", 
        RowBox[{"ellP", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"posY", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ellP", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ">", "0"}], ")"}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.770738173235361*^9, 3.7707382127541265`*^9}, 
   3.770738294436034*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "orbitNormals"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"orbitNormals", "[", 
    RowBox[{"a_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ellP", ",", "orbitData"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ellP", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"N", "@", "a"}], " ", "*", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"N", "@", "t"}], "]"}]}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"N", "@", "t"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"orbitData", "=", 
       RowBox[{"getOrbitData", "[", 
        RowBox[{
         RowBox[{"N", "[", "a", "]"}], ",", 
         RowBox[{"ellP", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"posY", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ellP", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ">", "0"}], ")"}]}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<orbit\>\"", "/.", "orbitData"}], ",", 
        RowBox[{"\"\<normals\>\"", "/.", "orbitData"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.765651969948132*^9, 3.7656520793945556`*^9}, {
   3.765652164147605*^9, 3.7656521846265364`*^9}, 3.770725142386788*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getTriCosines", "[", "tri_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"u12", ",", "u23", ",", "u31"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"u12", "=", 
       RowBox[{"norm", "[", 
        RowBox[{
         RowBox[{"tri", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"tri", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"u23", "=", 
       RowBox[{"norm", "[", 
        RowBox[{
         RowBox[{"tri", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "-", 
         RowBox[{"tri", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"u31", "=", 
       RowBox[{"norm", "[", 
        RowBox[{
         RowBox[{"tri", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", 
         RowBox[{"tri", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"u12", ".", "u31"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"-", 
         RowBox[{"u23", ".", "u12"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"-", 
         RowBox[{"u31", ".", "u23"}]}]}], "\[IndentingNewLine]", "}"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7671209523883815`*^9, 3.767120995325675*^9}, 
   3.7681214085527973`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getOrbitCosines", "[", 
    RowBox[{"a_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"orbit", ",", "normals"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"orbit", ",", "normals"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"getTriCosines", "[", "orbit", "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7659143005967426`*^9, 3.7659143335134487`*^9}, {
   3.7659143816178093`*^9, 3.76591443646488*^9}, {3.765914734137042*^9, 
   3.765914894755134*^9}, 3.766175776834915*^9, {3.7671210004349833`*^9, 
   3.767121016314105*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getTriCausticParams"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getTriCausticParams", "[", "a_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"px", ",", "qy", ",", "delta"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"delta", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"a", "^", "4"}], "-", 
         RowBox[{"a", "^", "2"}], "+", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"px", "=", 
       RowBox[{
        RowBox[{"a", "^", "3"}], "/", 
        RowBox[{"(", 
         RowBox[{"delta", "+", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"qy", "=", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", "^", "2"}], "+", "delta"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"px", ",", "qy"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7703728625065365`*^9, 3.77037287129062*^9}, {
  3.7703729149147816`*^9, 3.7703730166693497`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Trilinears", "Section",
 CellChangeTimes->{{3.766664661581194*^9, 3.7666646732055235`*^9}, {
  3.7670072031362944`*^9, 3.767007214049448*^9}, {3.767010073676444*^9, 
  3.767010075948375*^9}}],

Cell["\<\
Trilinears x : y : z convert via triangle vertices A, B, C  and sides a, b, c \
:\
\>", "Text",
 CellChangeTimes->{{3.7663928906096363`*^9, 3.766392920072796*^9}, {
  3.7664995705174584`*^9, 3.766499570837592*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
9eloA8B0lOe8hu6dyn/FxEok7rtpPYZ7uTOPpGxlvjJQMvlCZoaFiEczj1yN
TqKYtQmfdjPKZfLdJzy2sRRsPtemPp2Iyob3/cMPPzQD9StvkGnYJA5u4qiJ
g4iMZprZ8FDy4C29rutuVDbHw9a7U4KoZFrIpBES3js3LWTJwR8omZlMmTyE
CzZllW17KUaBgVlrykp+MZuYssqwqtzrBw8eJA6Sb8pks62tLXdfTFkTapiy
/FesuSkrNo4BsErIW3Z8fKzW7eJY5UU+PDx0NUIqjb/927/1Ns43kl5sbW1t
TQ4o53r+/Pnjx4+9prWRdU/9ZXvZWMom8rqxseFWUKWJbPlRWbkdoZ1xr6q5
4HJtX7x4Idfcsz/mOYlddi8EYSaNykG8I8iXOUVVu4+XflW72ABId5TL7Xg+
RbbxGoeZ0QO3azWGue/u0dwOgjLb81AyJsQaKojRCxGyg4ODzc1N909fffWV
91jKETJP58XW5GgmA48cQYTMa/2+9957Zp6764Zke9l4NBqJwornst8X6BbL
j8qqSWXff/9995/2Bsnz8OjRI+9RSQRmvXstN0vqLrlx3hkzg5nh7NQShKyL
UVm5L2HbtfdOyMxMT9NQdF98c69zXrHKuFNPawKZ+JjdQNRwntcAVpCEKZPv
VVP2+eefexvbrsBKvDCdEU3h2bNnmaZMqkTVlJVQs3mUH5VVk8rmm7Je0gvn
mDJx5ZmmzA48LuqOd9SUxWbimHskL6O8YvL01jZl4UMVnsvrZHRbPpgygAWg
xmfkNfeirJWdtplVn5zu3r177om811z+6fXiyXlti9qL4MnGH330kVullDbK
qPyorJpU1iLy7XkKM8bS20xVcNnSrc/Fw5rvw9G5ma2jsPv44OCglYvQhM41
ANR3WW6BOo1XvvnlL3850yuW42Tt0UxVY2ZmPXnyxP4pPzgGMAkiIfap9vRF
3cwlXOVQxavExDF574WcyBNWKcxnn33m1l1WEaSQblS2wOe//KisXMN0VeP1
ARkh88ysOu5xMk2qZrdxj+NVpO+9916ObVG7F9u6DrXpXFRWbbvGchTIxp9/
/vna2lr+K1Y5rN3FNGXfTnEjFZnBDQCLGp/Z2tryJEY2k6cu8UzmmzL3Oc/J
HSce7eOPP3bfOLtxaMouLi5auSxtUX5UVk0qaynclIVLki2ezpkydaR6LLeS
3JeFmTK3r6e0RinA6qE2a2MJJN36PCTHqXmKEHvHrQE0uA1pV4zU8XiltYHL
j8qqufgMsfEk8kO8vaTCD3XB9SbuvX7z5o0n5Tl9cOqY3hIEt1sNADUTSKxj
Xc1ukX7F1F3SmEGG+acA8FBjrfnVl0vm+CIvTKee6Pz8PDar2n3C1VdSCl/7
asyD8qOyh4eHsXuamLHutSLUGIK7jddoCeu6nBBEuFdmX8Bc6VZUVrWxsRsd
qx/STbKDg4PYE6UiD88HH3zgvvKZI3IBLDFTFtOypZgyF9eUqZuV1pwrPypb
z5R5w1bVYB2mrEBmNWXhK59+xVxlzyQ0ZVIplRnBAFgZVPVPNyNfvXqldrhk
hhxjiuChTt/ofdeoxrp+SnMThUdlEzG0dCLxsPXl6YKr1969Vu9vZWef2n1c
QnygQw0ANS1V7E2MjcRIx4u82yTPgFnl0yzzmtNdW2xTGcokNko28RSps93z
qxQ3TJdoD8fG2rlli5WkhMGTLuVHZWNClm7SyJ88MfK295Kqufu6uUMtles6
yV5hIfPnGs+PDkVlVRubWGhGHR5fWUWEE7fl+mxvb+cLGfM9YSaKNWUxLXOr
xJiWlVaZlB+VrWfKwuGyXopX9wZJ2977U2jKKlUJU9Yc1ZTFWpWx5PbpHsbw
NmHKAEqjhpM1e3kTLW2dUHlGN46a7tmJRWXd2v7TTz9Va48SprS7FB6VVfs6
K2/QZKoOoWdxb9De3l7soVKlvDIqW2ZS2Ul3GgAXFxf56j+JzwhOv+xue9JO
6rx5h3wWEzEajcKMtfYpwsnCTISZzXLiIWo6ypwqJX9ButgQBTdwF5uryFjZ
mUj05FY2abxa0Rti5C7Y7f1wecbCk1ZGZdWmSwmXtCtRWTX4k7jRsR789Mvu
tjc+/vhjK2ST6YWSz1IMeSlMlr/w+IlhhwAq7ZqynH69xZiy0iqTwqOyCVOW
lgnVlLkNoVlNWWVUFlPWELV7MW3K1Gcj/bJXmjKjZZgygCWiTv/PefWePXsW
7lg5/85t8MuHtBSqZsdLVhObtlNaDVx4VPbFixfhNcyZdqd2ndupTK7Ehy5V
nZ5TaUtDvSgkcNGJBoDqTNON0tgsqkQb2x14VhnYl9dBLt3XX3/9B3/wB2aX
AlOQQeFIVRM2U9WVZD3UuZY5KdHsWKZKT6eGjzz5i71llcG9BVN4VFbtQsox
3eoUYFt3uXcwfDbUnAmVElCsk+1EVFYdLLSxsZG40TU6PtzASE5gX7aXxs+H
H35oD05IFmZFNWU5K2U0N2U5WhaaMu8N6pwpKzMqq9ZXzU2ZewfD2qktU1bI
HJ9OmDL1ftUzZYmGq3spYtkpLaopY7VKgHmjhmgqs2wZ6tXe6TBdYmOLW7XG
kilVxnsXT+FR2fBuZppuVVCsmXWbPd7R1FmflRdH7T4uIRffpAsNANXJVt5o
NX1ButtUTvTo0SO56dJIyHkTZRs7zIPBRTAragKWTBWoNzjEDdNVzstQay2v
/RwO9FWrzaVTeFRWTQGaufSn2t9n9Mi9O+HRajx7qm6WsDzKpAtR2dhSfekm
ZWw908TLbrL33Lt3L7GUuVcwVviCJqimLNM1qN1D4/E4vZdUaLbhWs+UeXt1
zpSVGZVVLXbOiKn0MhCYsqKoZ8oeP34cPhutmzK3YJgygHkTy0ySaWHsJAiL
vO+VLQd36kTlxjmB39FoNFPVtCxKjsqqE2wzy6kqsjGz6fFFOa27EHVMbyHB
gfIbAOpk7Uq1VeNFlXuZGTE5pfJSqKH+MCtqiCbzQarXvei+SjP1RVq8KkJd
EazAd6HwqKy68FPmYjeJ4Ko7wceTRXXwWGV8tdikspMuRGXVwYSV1zxMt2he
scpRQ5lC5sWKCcnCrMiTFhqr/JpB3bey9nNNWeXGauDXM1yqKStw9lPhUdk5
mTJ72LZMmbqXtGfq//L2WFVTphrhnGmJmDKAYlFbtvnVfo05C+74kJxhIarD
8oon/5QfYrYUJZIPBYZkJ2VHZev5Srtv+BSZBoA7mTQM9YdrGfQyGpDFzvqc
FN8AUOf2yiuTMx9Kbqh9c2UXaXW3VSrUHxqiJrrJ91n1vI/d6+HDh5WnyAn8
yhnFesuLtj5Fjt/iW9YiJUdlY4lGa+9rniLX5IYWVR2dWxlFKTap7KT4qGxs
LaHKhp/8LvGtrpClF82ZiTAkW2CcBwpnKaYsEaYLCQO/4SDY0JQVUrN5lByV
bWjKwqisuU1pk1Kvhzrcq5zr2UVTlnPNzTRhq2Xvvfdei9bJM2V0LwIsAHWO
Qy87i51qhHPyF5maJGcyi9r2VlXJ9AAa5hSgu2mMVa7NzU03w3Y92v11ar9b
poSp/aRGlM/Pzx88eCCf5bffBOOL6s3Sml/+oua3+M2bN/alkEZpUbdYDqiO
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
    "], {{0, 168}, {1842, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{538.2, Automatic},
  ImageSizeRaw->{1842, 168},
  PlotRange->{{0, 1842}, {0, 168}}]], "Input",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "trilinearToCartesian"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"trilinearToCartesian", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"A_", ",", "B_", ",", "C_"}], "}"}], ",", 
     RowBox[{"(*", " ", "vertices", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], ",", 
     RowBox[{"(*", " ", 
      RowBox[{"side", " ", "lengths"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}]}], " ", 
    RowBox[{"(*", " ", "trilinears", " ", "*)"}], "\[IndentingNewLine]", 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"(*", 
       RowBox[{"a", ",", "b", ",", "c", ","}], "*)"}], "denom", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"may", " ", "not", " ", "need"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"magn", "[", 
         RowBox[{"C", "-", "B"}], "]"}]}], ";", 
       RowBox[{"b", "=", 
        RowBox[{"magn", "[", 
         RowBox[{"A", "-", "C"}], "]"}]}], ";", 
       RowBox[{"c", "=", 
        RowBox[{"magn", "[", 
         RowBox[{"B", "-", "A"}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"denom", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c"}], "}"}], ".", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", " ", "x", " ", "A"}], "+", 
         RowBox[{"b", " ", "y", " ", "B"}], "+", 
         RowBox[{"c", " ", "z", " ", "C"}]}], ")"}], "/", "denom"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.766392274332153*^9, 3.7663922814904995`*^9}, {
  3.766392428106147*^9, 3.766392528042677*^9}, {3.7663925915550756`*^9, 
  3.7663927128902264`*^9}, {3.766392936819051*^9, 3.766392999564353*^9}, {
  3.7663932016307125`*^9, 3.7663932823309326`*^9}, {3.7663937775636516`*^9, 
  3.766393784411344*^9}, {3.7663938204298825`*^9, 3.766393858821268*^9}, {
  3.7666147840769415`*^9, 3.7666148537812605`*^9}, {3.7666149627556343`*^9, 
  3.7666149947333703`*^9}, {3.7667526846064796`*^9, 3.7667526876649*^9}, {
  3.7667888094003525`*^9, 3.766788827040985*^9}, {3.7667889040894938`*^9, 
  3.7667889330641994`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rotateSym", "[", "fabc_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"fabc", ",", 
    RowBox[{"fabc", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[Rule]", "b"}], ",", 
       RowBox[{"b", "\[Rule]", "c"}], ",", 
       RowBox[{"c", "\[Rule]", "a"}]}], "}"}]}], ",", 
    RowBox[{"fabc", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[Rule]", "c"}], ",", 
       RowBox[{"b", "\[Rule]", "a"}], ",", 
       RowBox[{"c", "\[Rule]", "b"}]}], "}"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7665767841381903`*^9, 3.7665768310223866`*^9}, {
  3.7665768637727995`*^9, 3.7665768643971605`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"trilinears", ":", " ", "a", ":", "b", ":", "c"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"getIncenterTrilin", "[", 
      RowBox[{"orbit_", ",", "sides_"}], "]"}], ":=", 
     RowBox[{"trilinearToCartesian", "[", 
      RowBox[{"orbit", ",", "sides", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getCircumcenterTrilin", "[", 
      RowBox[{"orbit_", ",", 
       RowBox[{"{", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a2", "=", 
          RowBox[{"a", "*", "a"}]}], ",", 
         RowBox[{"b2", "=", 
          RowBox[{"b", "*", "b"}]}], ",", 
         RowBox[{"c2", "=", 
          RowBox[{"c", "*", "c"}]}]}], "}"}], ",", 
       RowBox[{"trilinearToCartesian", "[", 
        RowBox[{"orbit", ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a", 
            RowBox[{"(", 
             RowBox[{"b2", "+", "c2", "-", "a2"}], ")"}]}], ",", 
           RowBox[{"b", 
            RowBox[{"(", 
             RowBox[{"c2", "+", "a2", "-", "b2"}], ")"}]}], ",", 
           RowBox[{"c", 
            RowBox[{"(", 
             RowBox[{"a2", "+", "b2", "-", "c2"}], ")"}]}]}], "}"}]}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getOrthocenterTrilin", "[", 
      RowBox[{"orbit_", ",", "sides_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "cs", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"cs", "=", 
         RowBox[{"getTriCosines", "[", "orbit", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"trilinearToCartesian", "[", 
         RowBox[{"orbit", ",", "sides", ",", 
          RowBox[{"1", "/", "cs"}]}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getCentroidTrilin", "[", 
      RowBox[{"orbit_", ",", 
       RowBox[{"{", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"trilinearToCartesian", "[", 
      RowBox[{"orbit", ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"b", " ", "c"}], ",", 
         RowBox[{"c", " ", "a"}], ",", 
         RowBox[{"a", " ", "b"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getFeuerbachTrilin", "[", 
      RowBox[{"orbit_", ",", 
       RowBox[{"{", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"trilinearToCartesian", "[", 
      RowBox[{"orbit", ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"b", " ", "c", 
          RowBox[{"(", 
           RowBox[{"b", "+", "c", "-", "a"}], ")"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b", "-", "c"}], ")"}], "^", "2"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"c", " ", "a", 
          RowBox[{"(", 
           RowBox[{"c", "+", "a", "-", "b"}], ")"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"c", "-", "a"}], ")"}], "^", "2"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"a", " ", "b", 
          RowBox[{"(", 
           RowBox[{"a", "+", "b", "-", "c"}], ")"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "b"}], ")"}], "^", "2"}]}]}], "}"}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"getNinepointCenterTrilin", "[", 
      RowBox[{"orbit_", ",", 
       RowBox[{"{", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a2", "=", 
          RowBox[{"a", "*", "a"}]}], ",", 
         RowBox[{"b2", "=", 
          RowBox[{"b", "*", "b"}]}], ",", 
         RowBox[{"c2", "=", 
          RowBox[{"c", "*", "c"}]}]}], "}"}], ",", 
       RowBox[{"trilinearToCartesian", "[", 
        RowBox[{"orbit", ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"b", " ", "c", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"a2", 
               RowBox[{"(", 
                RowBox[{"b2", "+", "c2"}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b2", "-", "c2"}], ")"}], "^", "2"}]}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"c", " ", "a", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"b2", 
               RowBox[{"(", 
                RowBox[{"c2", "+", "a2"}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"c2", "-", "a2"}], ")"}], "^", "2"}]}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"a", " ", "b", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"c2", 
               RowBox[{"(", 
                RowBox[{"a2", "+", "b2"}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"a2", "-", "b2"}], ")"}], "^", "2"}]}], ")"}]}]}], 
          "}"}]}], "]"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzU0og3EAx/HHInkp22FIE6sdeDZPrGmSwx435WDDQW3lJTXvTC3J2zQO
1GI5rOWtjIM4WLR5Z9tB4uIlIVlieZmyTdJC/r/n8Otz+vUV13doGnkURWWR
QVucc+MsJcg+9s9swp9BgQce9YhOoVTcfglPWCtnr6nkC0pco99Q8aehz4ky
9bgMfsVH9FC/YjFA/nOtCYZjdGaYzIa8cPq97hQ2MMp7OJLexGmep9YuiHtV
fZwFt5JtSGuiO3Ap6Wb3krjPeHzQzBizr4iGZr8Mzvo776+J3/KDJ/i2m0E9
E6fsLzy4LD1soflBVj431gaHqzID0C6VcbrLSnNMxK31xDzomGjVThF9ysoG
qPW+NkPbEK8d0qpYm0JA+sblRfj40JqrJOb7wgVQI+I7HcRjT7ULMpZJJkr8
iFvjFBeV2xKE5GddWoH+8J0TurWrbkhrQzvQKKo4hOnygeKutCBbaBSqYGXk
Uw2LFj50UBGo6YFWSYjz5vdH2E0c+D1Khf/B4vDS
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getX142Trilin", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"b", "+", "c", "-", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"b", "-", "c"}], ")"}], "^", "2"}], "/", "a"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"c", "+", "a", "-", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"c", "-", "a"}], ")"}], "^", "2"}], "/", "b"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"a", "+", "b", "-", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "-", "b"}], ")"}], "^", "2"}], "/", "c"}]}]}], 
      "\[IndentingNewLine]", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7710230186141243`*^9, 3.771023106915146*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"X", 
    RowBox[{"(", "356", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"getFirstMorleyTrilin", "[", 
      RowBox[{"orbit_", ",", "sides_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cs", ",", "c3"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"cs", "=", 
         RowBox[{"getTriCosines", "[", "orbit", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"c3", "=", 
         RowBox[{"cosThird", "/@", "cs"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"trilinearToCartesian", "[", 
         RowBox[{"orbit", ",", "sides", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"c3", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "+", 
             RowBox[{"2", 
              RowBox[{"c3", "[", 
               RowBox[{"[", "2", "]"}], "]"}], " ", 
              RowBox[{"c3", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"c3", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "+", 
             RowBox[{"2", 
              RowBox[{"c3", "[", 
               RowBox[{"[", "3", "]"}], "]"}], " ", 
              RowBox[{"c3", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"c3", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "+", 
             RowBox[{"2", 
              RowBox[{"c3", "[", 
               RowBox[{"[", "1", "]"}], "]"}], " ", 
              RowBox[{"c3", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"X", 
     RowBox[{"(", "357", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getSecondMorleyTrilin", "[", 
      RowBox[{"orbit_", ",", "sides_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cs", ",", "c3"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"cs", "=", 
         RowBox[{"getTriCosines", "[", "orbit", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"c3", "=", 
         RowBox[{"cosThird", "/@", "cs"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"trilinearToCartesian", "[", 
         RowBox[{"orbit", ",", "sides", ",", 
          RowBox[{"1", "/", "c3"}]}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"X", 
     RowBox[{"(", "358", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getThirdMorleyTrilin", "[", 
      RowBox[{"orbit_", ",", "sides_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cs", ",", "c3"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"cs", "=", 
         RowBox[{"getTriCosines", "[", "orbit", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"c3", "=", 
         RowBox[{"cosThird", "/@", "cs"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"trilinearToCartesian", "[", 
         RowBox[{"orbit", ",", "sides", ",", "c3"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getSimmedianTrilin", "[", 
      RowBox[{"orbit_", ",", "sides_"}], "]"}], ":=", 
     RowBox[{"trilinearToCartesian", "[", 
      RowBox[{"orbit", ",", "sides", ",", "sides"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getMittenTrilin", "[", 
      RowBox[{"orbit_", ",", 
       RowBox[{"{", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"trilinearToCartesian", "[", 
      RowBox[{"orbit", ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"b", "+", "c", "-", "a"}], ",", 
         RowBox[{"c", "+", "a", "-", "b"}], ",", 
         RowBox[{"a", "+", "b", "-", "c"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getGergonneTrilin", "[", 
      RowBox[{"orbit_", ",", 
       RowBox[{"{", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"trilinearToCartesian", "[", 
      RowBox[{"orbit", ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"b", "*", 
          RowBox[{"c", "/", 
           RowBox[{"(", 
            RowBox[{"b", "+", "c", "-", "a"}], ")"}]}]}], ",", 
         RowBox[{"c", "*", 
          RowBox[{"a", "/", 
           RowBox[{"(", 
            RowBox[{"c", "+", "a", "-", "b"}], ")"}]}]}], ",", 
         RowBox[{"a", "*", 
          RowBox[{"b", "/", 
           RowBox[{"(", 
            RowBox[{"a", "+", "b", "-", "c"}], ")"}]}]}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getNagelTrilin", "[", 
      RowBox[{"orbit_", ",", 
       RowBox[{"{", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"trilinearToCartesian", "[", 
      RowBox[{"orbit", ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"b", "+", "c", "-", "a"}], ")"}], "/", "a"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"c", "+", "a", "-", "b"}], ")"}], "/", "b"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "+", "b", "-", "c"}], ")"}], "/", "c"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getSpiekerTrilin", "[", 
      RowBox[{"orbit_", ",", 
       RowBox[{"{", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"trilinearToCartesian", "[", 
      RowBox[{"orbit", ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"b", " ", "c", 
          RowBox[{"(", 
           RowBox[{"b", "+", "c"}], ")"}]}], ",", 
         RowBox[{"c", " ", "a", 
          RowBox[{"(", 
           RowBox[{"c", "+", "a"}], ")"}]}], ",", 
         RowBox[{"a", " ", "b", " ", 
          RowBox[{"(", 
           RowBox[{"a", "+", "b"}], ")"}]}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7703869610648484`*^9, 3.770387017519718*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getX144Trilin"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getX144Trilin", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cosA", ",", "cosB", ",", "cosC", ",", "sinA", ",", "sinB", ",", "sinC",
        ",", "tanAov2", ",", "tanBov2", ",", "tanCov2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"b", ",", "a", ",", "c"}], "]"}], ",", 
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"c", ",", "a", ",", "b"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sinA", ",", "sinB", ",", "sinC"}], "}"}], "=", 
       RowBox[{"getSin", "/@", 
        RowBox[{"{", 
         RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tanAov2", "=", 
       RowBox[{"tanHalfAngle", "[", 
        RowBox[{"sinA", ",", "cosA"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tanBov2", "=", 
       RowBox[{"tanHalfAngle", "[", 
        RowBox[{"sinB", ",", "cosB"}], "]"}]}], ";", 
      RowBox[{"tanCov2", "=", 
       RowBox[{"tanHalfAngle", "[", 
        RowBox[{"sinC", ",", "cosC"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"csc", " ", "A"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"tan", " ", 
           RowBox[{"B", "/", "2"}]}], "+", 
          RowBox[{"tan", " ", 
           RowBox[{"C", "/", "2"}]}], "-", 
          RowBox[{"tan", " ", 
           RowBox[{"A", "/", "2"}]}]}], ")"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"trilinearToCartesian", "[", 
       RowBox[{"orbit", ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"tanBov2", "+", "tanCov2", "-", "tanAov2"}], ")"}], "/", 
           "sinA"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"tanCov2", "+", "tanAov2", "-", "tanBov2"}], ")"}], "/", 
           "sinB"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"tanAov2", "+", "tanBov2", "-", "tanCov2"}], ")"}], "/", 
           "sinC"}]}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7705964718325367`*^9, 3.7705964869816504`*^9}, {
  3.770596524838976*^9, 3.7705966864505005`*^9}, {3.7705969248017483`*^9, 
  3.770596984541231*^9}, {3.770597079658063*^9, 3.770597124850935*^9}, {
  3.7710229820929165`*^9, 3.7710230122990055`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"o", ",", "s"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"o", "=", 
     RowBox[{
      RowBox[{"orbitNormals", "[", 
       RowBox[{"1.5", ",", "1.1"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"s", "=", 
     RowBox[{"RotateLeft", "@", 
      RowBox[{"triLengths", "[", "o", "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"getOrthocenterTrilin", "[", 
     RowBox[{"o", ",", "s"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7675215276357155`*^9, 3.7675216022960205`*^9}, {
  3.7679055076881695`*^9, 3.7679055158293943`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.696531536895043`", ",", "1.0435181395192759`"}], "}"}]], "Output",
 CellChangeTimes->{{3.76752154052207*^9, 3.7675215638322268`*^9}, 
   3.7675216027268405`*^9, 3.7675216562157974`*^9, 3.7676911288470407`*^9, 
   3.7677326981993604`*^9, 3.767814144186567*^9, 3.7678902774109974`*^9, 
   3.7679055163310523`*^9, 3.7681206275725546`*^9, 3.7681699079481373`*^9, 
   3.76912531283753*^9, 3.77013240977941*^9, 3.770132440144226*^9, 
   3.770144703098379*^9, 3.7701565392598915`*^9, 3.7701577668038797`*^9, 
   3.77037101345233*^9, 3.770417394072133*^9, 3.770453449013235*^9, 
   3.7704750430858107`*^9, 3.7704843662405057`*^9, 3.770536070067444*^9, 
   3.770585301758374*^9, 3.770630753928327*^9, 3.770631073928567*^9, 
   3.7706660817410536`*^9, 3.7708011174931965`*^9, 3.7708024888864737`*^9, 
   3.7708093160917225`*^9, 3.7708321946516843`*^9, 3.770838235394842*^9, 
   3.770842252326065*^9, 3.770882446155467*^9, 3.7708864671330824`*^9, 
   3.770894536186267*^9, 3.770934388802597*^9, 3.7709361243743715`*^9, 
   3.771025638905095*^9, 3.7711592696861825`*^9, 3.771675528224548*^9, 
   3.772137204803917*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"o", ",", "n", ",", "s", ",", "cirs", ",", "incs"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"o", ",", "n"}], "}"}], "=", 
     RowBox[{"orbitNormals", "[", 
      RowBox[{"1.5", ",", "1.1"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"s", "=", 
     RowBox[{"RotateLeft", "@", 
      RowBox[{"triLengths", "[", "o", "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"cirs", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"getCircumcenterTrilin", "[", 
        RowBox[{"o", ",", "s"}], "]"}], ",", 
       RowBox[{"getCircumcenter", "@@", "o"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"incs", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"getIncenterTrilin", "[", 
        RowBox[{"o", ",", "s"}], "]"}], ",", 
       RowBox[{"getIncenter", "[", 
        RowBox[{
         RowBox[{"o", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"n", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"o", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"n", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cirs", ",", "incs"}], "}"}], "//", "MatrixForm"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7679055303964314`*^9, 3.767905596333373*^9}, {
  3.7679056290767927`*^9, 3.767905691782073*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.07014963981142205`"}], ",", 
        RowBox[{"-", "0.3365753193545852`"}]}], "}"}], 
      RowBox[{"getCircumcenter", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.680394182138366`", ",", "0.8912073600614354`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"1.3668975082036705`", ",", 
          RowBox[{"-", "0.4118204582185985`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.4910594330698377`"}], ",", 
          RowBox[{"-", "0.10901940103272956`"}]}], "}"}]}], "]"}]},
     {
      RowBox[{"{", 
       RowBox[{"0.44931720032962197`", ",", "0.21019126269653302`"}], "}"}], 
      RowBox[{"getIncenter", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.680394182138366`", ",", "0.8912073600614354`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.3213187264371512`"}], ",", 
          RowBox[{"-", "0.9469711062333461`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.3668975082036705`", ",", 
          RowBox[{"-", "0.4118204582185985`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.8277406019803908`"}], ",", "0.5611109478820926`"}], 
         "}"}]}], "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7679055650530405`*^9, {3.7679056807874794`*^9, 3.7679056920583334`*^9}, 
   3.7681206275905066`*^9, 3.768169907982057*^9, 3.7691253128584747`*^9, 
   3.7701324098282785`*^9, 3.7701324401571913`*^9, 3.77014470311932*^9, 
   3.7701565392838273`*^9, 3.770157766817842*^9, 3.7703710135670514`*^9, 
   3.7704173941050453`*^9, 3.7704534490342107`*^9, 3.770475043107753*^9, 
   3.770484366264434*^9, 3.770536070103347*^9, 3.7705853017782917`*^9, 
   3.7706307539572496`*^9, 3.770631073944525*^9, 3.770666081762995*^9, 
   3.7708011175151095`*^9, 3.7708024889183884`*^9, 3.7708093161136646`*^9, 
   3.7708321946755924`*^9, 3.7708382354188104`*^9, 3.77084225234999*^9, 
   3.770882446181402*^9, 3.770886467157018*^9, 3.7708945362909875`*^9, 
   3.7709343888205805`*^9, 3.7709361243903284`*^9, 3.7710256389300275`*^9, 
   3.771159269708124*^9, 3.771675528250475*^9, 3.772137204827836*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate Billiard as Locus", "Subsubsection",
 CellChangeTimes->{{3.7672656202757683`*^9, 3.767265635167061*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getX100Trilin", "[", 
     RowBox[{"orbit_", ",", 
      RowBox[{"{", 
       RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
    RowBox[{"trilinearToCartesian", "[", 
     RowBox[{"orbit", ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
      RowBox[{"1", "/", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"b", "-", "c"}], ",", 
         RowBox[{"c", "-", "a"}], ",", 
         RowBox[{"a", "-", "b"}]}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"YFF", " ", "PARABOLIC", " ", "POINT", "\"\<\>"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getX190Trilin", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"b", " ", 
        RowBox[{"c", "/", 
         RowBox[{"(", 
          RowBox[{"b", "-", "c"}], ")"}]}]}], ",", 
       RowBox[{"c", " ", 
        RowBox[{"a", "/", 
         RowBox[{"(", 
          RowBox[{"c", "-", "a"}], ")"}]}]}], ",", 
       RowBox[{"a", " ", 
        RowBox[{"b", "/", 
         RowBox[{"(", 
          RowBox[{"a", "-", "b"}], ")"}]}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getX88Trilin", "[", 
     RowBox[{"orbit_", ",", 
      RowBox[{"{", 
       RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
    RowBox[{"trilinearToCartesian", "[", 
     RowBox[{"orbit", ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
      RowBox[{"1", "/", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"b", "+", "c", "-", 
          RowBox[{"2", "a"}]}], ",", 
         RowBox[{"c", "+", "a", "-", 
          RowBox[{"2", "b"}]}], ",", 
         RowBox[{"a", "+", "b", "-", 
          RowBox[{"2", "c"}]}]}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"isogonal", " ", "conjugate", " ", "of", " ", "X88"}], ",", " ", 
    RowBox[{"therefore", " ", "all", " ", "are", " ", "inverted"}]}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getX44Trilin", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"b", "+", "c", "-", 
        RowBox[{"2", "a"}]}], ",", 
       RowBox[{"c", "+", "a", "-", 
        RowBox[{"2", "b"}]}], ",", 
       RowBox[{"a", "+", "b", "-", 
        RowBox[{"2", "c"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getX693Trilin", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "c"}], ")"}], "/", 
        RowBox[{"a", "^", "2"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"c", "-", "a"}], ")"}], "/", 
        RowBox[{"b", "^", "2"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "-", "b"}], ")"}], "/", 
        RowBox[{"c", "^", "2"}]}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.767265456387086*^9, 3.7672656159214077`*^9}, {
  3.7672658927040424`*^9, 3.7672659049602604`*^9}, {3.770739671683756*^9, 
  3.770739690373238*^9}, {3.770811749484144*^9, 3.7708117910203543`*^9}, {
  3.772139954715101*^9, 3.772140003358927*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Barycentrics (does not appear to work!)", "Subsubsection",
 CellChangeTimes->{{3.770594389185073*^9, 3.7705943921082883`*^9}, {
  3.7705945002123213`*^9, 3.7705945030915985`*^9}, {3.7705968229897876`*^9, 
  3.770596826349433*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
n8u+gZLzu2rVqhQlYB/Jyz7cd999MpL1M9sQpOrVDDAsd6wJkivkTMkQL5pr
F1sUqUcBRfe2TpKmeYNCMLeo9j21Lt9aZziiFMkVsm8ylK5ZjWuG3GVOrujs
7LT8sJzlHNO9sidXBJdP0iA0uuXc50MapdOJvd359ddfz5s3L+knZs2aFfa2
hpKXMNgcNkuT9cc//lG/VD/66CP5CcMXpamRBse+pgUXqU3sWskcXrrKNxxt
9Hl7OVNvv/12zf4u9QXrIXizFzsLlOOaNhcuXJg9e/b8+fOlAf/yyy8ti0uK
6NNPP120aJE5qomS89Xd3W0zQ5KutXnuuecs96RikVxR9Dx5Qa1NuuSKQs9m
0UFRvi5dulTcefcWo0YLWZpKc2wjB9vR0aEfyOeff24ev8s/Sa9Us/VLuj8S
TESbL4GMQ1ep/G1tbTa12mnoUcc7PgWN9TwcUS7JFQRpSQjSkngI0pAL/ba1
TS6Ect9ZmfdQ/tXmVSMHDhyI5hvLf8tfzF+RCvzWW28ps+s1SUCb11PeZidO
nLBsM0OTJ08+dOhQzS3LZSjD85qTJ7Hkwty1a5f52k/qmCRyuP322y1/aPjw
4bt3785x9lt5a4xl2yvt1S233KLsm+U0nZIjpKwuGJtcsWfPHkPkE33/o8/k
CgmxJCSzuW8bki712WefzbcfLyK54urVqxIp2R+aXP4yqrXf55IUXejixYt3
3XVX9OfsV2IpiBypHK9NDKaTFk/aSfP29eQKOSnKMkeKuXPnSiBkvxuGBiEY
Mcl+Oh2XtPw1jyt0+fLlZcuWOdWxSv8gPXaS1lB0Nm1m0Wcz9ua1HMWbb75p
n8shx26zvlZGxfXg1f6b6TXvzemc6pWHH9KTK+TabG9vN1TmESNGHD16NGNp
SxwiV6W35IpC62dB4VyO97lkHLd48WKnHZOyevnll+1ntlOUgNQxaTal8bQs
53Q+//xzGfDmuGONnlxR6CjAQ2/rKnaa9/Tp0zZTygH7TiGUe60zHJFrckWO
IXdpkytkh0eOHKksUvGDH/wg6fMLFy5MvWOKjMkV8mFzbBwlJ3HFihU5ZoY0
Sqej3+786quv7rzzTsPGH3vssXD4H1vycs2asyNCUuzbt28P91M2u23bNssI
bebMmbKrNQ/wzJkzhlu3SQptSANFhKMNPW9f9AVbdPDmSrrOsWPHmgvKs3QD
8MDs2bNrziena21eeukl+90wJFd4mCcvrrVJkVxR9NksOijKi5x3uYrtB60B
aSss1wbxGaMGhSw7Zt+UrVq1KpyDdRq/y+jG6YWJQfPl1IlLObS1tTk9gS7b
37Fjh+vZtJkkTDqiaiOP9TwcUfbkCoI0A4I0s0KDNORFuYk8ZcqU8+fPO31F
WQpAWYYiek85iXLrvOY+SL+5Zs2adBHU6NGja2ZuZCGt8RtvvGGfNBsl39qz
Z49h49LJbt26Nd2BB+S77e3thk4wtmMypw0k/dDOnTvzKlUl/UZ0dnbW/FZs
D2iT7aPfxQ5ffBPQkyvee+895VWSihkzZoTrTXlLrvjiiy9mzpxpv52oBx54
IMcXTuWeXLF///4HH3zQ9aAsp6dKVXQhiV6ULHSbylwcOUY50nRFFJBLxhwr
KuddhjCrV682b7OjoyOXeXsJXaSpTJdpIK2l9AI1xxo1E0XMP2HuLFyTKzyc
Tf3mtXT05tvxScdeXE5RoT14NVvDItuX6m05hi36h/Tkiprl9vDDDyuJZ/IT
7777ruu8gfzKs88+6yG5otD6WVw4l9d9rqNHj9pPRygef/xxmxmkFLFlSBrP
gt4Skq5ahiZPnvzJJ5/om23c5IonnnhCxnGuZ0p6TxkF2LRXHnrb7GUoUXrN
OyM6qUVSl2x2r6BaZzgip+SKdOGKDHxibyWUNrniJz/5iZI7IQdu+PqgQYPy
aoWyJFekqJnioYceyut9x43S6ShF9/vf/95cq4cOHbpv3z5DyctF53SbQHrt
YD5BAoC1a9c6BQA1u7x01SBQM4DPoqBwtHHn7Q8fPpziTAXNkc0OewjeXEmw
p/zQ7Nmz7V/bkbvTp09PnTo1XREF5AyaJ5TStTa5PBntYZ680NbGNbnCw9ks
OijKhVy5cv0WVAL+Y1QpZCkr5Sngmp5//vmb/WQA4jSsMJdA7P2RFFMECxYs
sHw0QD4mH3baeEj2auPGjeYlWfzf8Sl6rOfhiDK2zwRpZgRpNgoK0pAXZaGJ
W265RaqT4fPKYhf6KhO9vb2LFi2K1gHzwvX655VVAhTyT0n31+Tqvvvuu1et
WiUfkMs5+vLKKLmmPvjggxRlVZP5vsyYMWOWLFmyut+9994b+zHZt6Tyl40n
deLBa93kkIONy39EX/qm/4Sh4dI7Jmkw9bSB4JVqEilF3w2kkEYjr7ck6C/4
MFeSaly9Ctg87K8seaG8+KYaV0rR2RWpddJDST2MVsKtW7cmfb0S9165Dz/8
8A/9uru7p0+fHv3wAw888Ifvik1GMvTgt956q4wIgtoidTL66rEoudLzGgJk
PCIl3pZmR3klfXhck/sZgv+1a9fWXACwVEUXknJTfuX++++v1zvoDYPK4CWD
q78lpWRoJczT5sp5lzFpNMlKfihoUWVPgvoQvL5HKk9YkTZt2hTdglzXEkFF
a5pUS70+GBrb4O2oQWMr13j0BY5RNW9PJ3VkwXvbly9fHjbmSR2ZNMsff/yx
ZdGZm30/Z1O/eb1r1y699OTiDa7ipIur0p8llf1tj7pCe/Cqcf5HjjosZ0PD
Ynm/0sMPKWdz/Pjx0U1J4UgRyU9ITZ44ceLgfnqebdKYN+xDzTsZVURyRXH1
s9Bw7vr163v37g3at9/97ndK/LZy5cpoAyjlFjvPI0P4pHzR6IUQtr26X/7y
l+buKeknlDbH8BM2vbkr+0ZAdjIp0oh9Bip6XmxOTVL3ZCNLJ6gHqFLN9AIJ
XgtrHgWYO6mwwIvubdNR+tCf//znSi8puycFtXv3binDrq4uOX2xizDbJN0V
V+sMR2SfXLFixYrYcEV2rGbI/cwzz+inJnuQ5kTGg9IWSUN35MgRGRjaZFkM
GjTo4MGDwXfNuRmui5MkSZ1c8R//8R96/Ba8HFlOjUTFSfVKPvPqq6/msvON
0ukoRSdNSvT/ShgTxN7hVSb/Ed2g8nX5pD5UDKdHknYyGKfojV7YoiaFFubz
lRTGKxFFGJLpnyzorl9x4ejx48ej9UrJD58+fbqMmm0qXk0Zq7dSbeSMxK4n
EDSn5gvW5h6Wh+soBeUxuqDc6vI2+apxkkeKKJzkCUrJEOpLWGLom9K1NnK9
hHVJiij6FTmtUv2ilU0uAf13PcyTF93aOCVX+DmbRQdF2RkyK6KxtPzvlClT
Yk/KvHnzLl26FLvxusSoetRdsegog0Uy9emFMCgyjFkMp0af+X/22WeVn5At
r1+/vqenR67NLVu2zJo1K/aHbB4NMDzxFL2KDZeY/NE8RvZ8x8fDWM/DEWVp
nwnSCNIC5QzSkBdloYlKrTUBlNWYY1eZUKroXXfddfHixaQNSishtdRyB5Ja
ZmmT33vvPb0HkUijq6tLX3M4x/v+UbEXizQ40rudPXtW3ze5/PWLN2la/uOP
P9Y3PmfOnCNHjsSuDyN/lH+KXbzLkO6idExS1P/8z/8c/l9pTNra2qTORL8u
ByIRV2zC2NNPP51LACkbkX2Obrnm8iZ6xQ4pa63olAqsvyvHsA6DtITKYgIS
qe7YsSPaG9ZMrjD/Vs13LFYTenA5m4sXL5aar58UqZ9SS/VB1iOPPJL7Sy5S
HJH5MTepe1IDlV4m6YiSlqYPlbboXnzxReUnbGpCQSR40CcGYxu6QFJTbE52
SjrvEuzJ1qINvjR3Bw8efPPNN81bsMyJjb3nKzsvP6oni8puSO+jv9dAtrB/
//6kn5B/Un5Ctp/06k/5UWmU9OFqdL3iLAfu52wqN6+VziV4U6TS90njKT1+
7FsDZMSU9EOpFdqDyx9j08KTOvGkhqXmrTo/P5SUJS6nVdolZX5G+kSpY0oT
LX/UR3NSyV944QXl69LqStsrLbDhCZHckysKrZ9+wjmnw4+KnatMuhAMZ8cw
TyWdo3SR0Q8H772NXYspeJOyfvg1e/MU9JbZcOyG81LzKbB0pyYF107QvM6Y
FMUTTzzx17/+NVpRkzrBirGTCnjobdMxhJ1SV1euXKnP9svuSSeudwrS0JkX
GfNT61InV0hLGL26Z8yYIWctOiwKGgGpGHo/Ig2debidLkhLTUpvwYIFNZMr
womIa9euff/737f5ZEapkyuiKcfBq70/+ugjJTyWChP72vHomop5KW2nU01+
6vD222//05/+pLRpPT09SqtiKPlgV5XpEdnz1atX6zv5k5/8JLzeg9d8K12/
hBYSCOkxv+Fh/1dffVX5IWknZf9jIwrZfuz6z9HHQHLhLe6tas9IZlzxJkmK
6m1+1nXWrFnSBurNaWz1DjJzDL/l5zpyJZtS7kPZlFtBgkVjlJ2JHXqEkq5H
c2+VsbXRt2Dzdgw/8+RFtzb2B+7tbPoMilJIOu9JsXRS35R04dclRo0WcjAN
qww9glOp79iPf/zj6BA7aGOjlT+p2hsWBDaPjOR6kQqg13/ZWuzK/9u3bzc0
sPoAOZB0FSdVafNy5Z7v+HgY63k+Itf2mSCNIK1a1iANOdI7C3MucWdnZ/TD
sQsIKA/+m1fDUN74YI5t9M5dKtuGDRvMNzFjF1bK/dZnbLdb8030sdlieiMg
hfzYY48pH4u+WSyJtIrSgyuXpCEzwZw2cO7cuaQfii3kmi2MPeWxfX3JFIWy
JEuUuTHXS0C/S5JUSpbrVBedXCHXrzS5yr7JlSVlYm6H9UWKcnyyKZRjcoW0
BnKxGK4CqST6PSxDdk2Zi05fXKteUxNyUSsZcXIienp6avby0kroL3Mx3ByM
Pe828VvSFmzm7SWM0Zfqkp7OnEwbuwhn0n12vT2XQOuLL74w75jUMaUyG0bo
9gfu7Wyab8cbWs7Y1eqUJwqzK7QHj21YpJx37dplfnfep59+qm9fhv9JtcXb
DyWdzdWrV9s8ZSyfkQDGqbTND87knlwRyr1+egvnnA4/FDurU/NCiF0w1jAN
Iq3ZiBEjooUcfRl90o7pdSavDN5A7CRDzWOX3e7q6tJr5rJlywzXQiMmV8ya
NcswJxz73Jz55WUeetvUDGGneXHa2E7B8FCkt1qXOrkiJBf466+/nnSdJq0a
bZ4M9JxcIWomV7S0tITTaPIfI0eONHz4yJEjuexV6uSKkFxK0t4m1czYBZlt
3tzqqrSdTjWh6OwXW04qebneJYJK2knp2mK/Vem/oN58882kU6YPYJPm0yTY
kJAj+kkJzs2tqPyo/rKnfJNtvIWjgYabt5e27q233jI0p7ERr/Ka2ihv15Gr
2KCiuNc7minBZ6W/BbBJ05Xqp98TMZz9jK2NvgWb5AoP8+QeWhv7A/d2Nn0G
RSkoj74GzLF0bAsTG4DVK0aNnlNDbCNVS3l1eEgCnm3btiX9XGysntTAGkZG
5pdBx74D1Bzo6nfhba7ic+fO6YtdyNWRdA/O5x0fP2M9z/ewnNpngrQqQVqJ
gzTkS1mrzbDQhHQQ0hJGPxz7yIZ8XTZiWauV+mxIy9fbTJv52ID+NLp0xPZ3
6GxIA6i0/zb3y6pxT8vqLaf0Sspn5syZk5SUq5CzJpFM9LuGdJcsaQNff/21
7Llygvbu3WuzkzVJCDR27Njoxl988UXD56O1Ws51tEUyT/YqPxQb/8SWkv1y
KEUnV+gxtuVYoxpXG1taWpIeYE8nr+QKy1vAeowqlfnatWuxHy5t0cW+5sbQ
fReqo6ND2ZPgFYc235UmUVlSxtDmx553p1xN13n72Hu+Nvc9qwlLccb2fdK8
K0Gp5ToMemVOemrS/sC9nc0st+P1J/1vu+22kydP2uykpUJ7cH3+x+b1kYHY
JOekW3Xefij2bNrf34xtaW2mHJPeJFJcckXu9dNbOOd0+CEpYWWeyvJCqMad
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
XnzxxehnLN+2UBy9UqVbttr+yZcGSq5wKgo9dSo2wPPW26amhx+uG1cqg76a
q+dalyW5winkVqICc5UrW3KFtMyx3zp27FjQbrf0W7hwYY6ZFdVsyRVOHb0y
vZnvI7TVEnc61biic7oZp3/dsvvWe23LRHG9NY69P6vfFLBZB7tQPsPRQAPN
2zsVhTL1mnTB+ryOXJUnuULik/fee2/Lli3Lly+/4447Jk6c6HqPW6lmSbdR
qplbG30L5rba2zy5h9bG8sB9nk2fQZET/SaO62UrhSYlPH369FWrVkmQI+c3
jG3qG6NWjItUR+ktjP3KAEodSOqa9b7Y9STqAxb96PRQIcVVrP9QbJXwc8fH
51jP8z0sp/aZIK1KkFbiIA25UypVbM+iNI/muw96+xY7AlV+19CH6mn/KZ5a
1Vv4FH2WTk9JdZqT98D+tpR+4uzjk2pcCeeYXKFvPLZSKaFgcC6Uu5lJJ0jp
aJICAL2UnJ79KTS5QlltO112tJLHUkmVZpAkl+QKp0WxLPNFy1x05UmuyM5+
jKmfd9dm32neXk99T7Hwjr76jd6MJK1c19PTk1cCqrcbFvZnUw93ndYh0SeO
8roXWXQPrkTd6aYm9PkTfSe9/VA17mxazoFU+98/m3E/9SFhEckVJamfCqcs
I6cxpv4IT7qHmpU0xdjzq59B+b9PPPFEvSJnPSUgxfxPNW7dhqRRRgMlVziN
AvSvx5aAt942NaXcXDPuqnGXqhK4eq51WZIrnEJupQVorOSKjz76yPz1vn65
71WW5AqnxwCV+b36Jlf47HSqce/kckon1kvecnxn+XYPnd6cxk5H6yvQipkz
Zx48eLCIumrDZzgaaKB5e6cL1mbVVs/XkavyJFdkZ5+clrG10bfgtOx8pbB5
cg+tjev7UFKzP5s+gyIn+tM6udzaCNQ3Rq1Y3+LUW5ikhyh1lnXAsi820DNV
9LGV8qRPJe0csk3/6+eOj8+xnud7WE7NFEFalSCtxEEacqfcEIy9q6iMDWve
fVDG73ozqDeVhsqfPUatxt1DyWU9TH2ZTfs+vVDSZEkprV+/fty4cUqjYZ9c
4dT0pbhv7kTpCGL7ViUUDPZfadNkACLDkJrbTwoA9MN0OuPFJVdkzPoI6bF6
jq93ySW5wmmW2+brJS+6Rk+ukLZXAksJCaTNHzZsWPQo7Gf4ky5bA6d5++y5
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
qVytDZdc4SGcc92r4oZ+5hH0qVOnFi5c6JphMm3atEOHDlmenZpIrgg1enJF
XsVIcoXNJ7N/neSKAMkV+bJ5G1HzJVdU+28ybtq0SXmQsKbhw4fv2LEjr5RF
5u2jGnrevrjHQ3J826yrvr6+119/3XVhRolRf/aznykr7zV9ckXFGJYU1No4
FZ2fs0lyRaAkMaqC5ArFQEiu0HvehkiuqBKkfYsgLRcFFSOyU16+o7xNbPPm
zdHzaHioP0q53KLrOylLQ5s7KVauCH7F/ubXmDFjZNjS3d19/vx5OVP2e1j+
5IpTp05FM5OVRVSUG9DKYSrVOPruG+WtEJMmTYp9TXYuh9mIyRWsXFH3olOW
Xqm4vxTM5ifuvvvuJ598UsrHsPq6NCk7d+60vBcmH5s2bdr69evl2gzKwX4k
2DTJFTVHo319fcePH1+zZo1TsC1ddtKixPYH7u1sklwRILmC5Ao/4ZzrXtU3
r/7SpUtdXV2zZs1S3khrMGzYsI6OjlyWbyK5ItToyRWsXFEhucKI5IosX6+p
zJ3OQEiuCNy4cWP//v3Lly93Whj/l7/8ZS4v3mLePqqh5+3zmsRTXrxbsX5M
z+knpk+fHoxPDa8alEtj7dq1lnGmXD5333335s2bT5w4EWzT8lZstVmSK2x6
5NxbG/sD93Y2Sa4IlCRGVZBcoRgIyRUNunJFiCCNIC0XrFxRZsqibTt37gz+
rrc23d3dNhtUEjaiX1TCbPMj2PoO1PGRbV2hb2wPfPXVV3feeWfsNSUh5bhx
45YsWdLe3i5X7tmzZ/WstmZKrtB/Inos0fZNSRCqaqkX0XcoS82MbtOcUd9A
yRXRBJKSaJTkirIVnf5KTbn2e3p6cvwJKZboEHX8+PHSKehRnOGdcfL3lpaW
VatWdXV1ffjhhxcvXtTvfDVKcoX+5iAPpLjkR6XzlT7OJuHhkUceuX79ur4d
+wP3djYbKLkixx48x/GLvnZNQckV5h9K+jnL06Ek1la0l9DZ0DuRBkqu8BbO
uR6U3lFahvr5ksqwb9++J5980maBX2mj9u/fn/1Hc5xCVEZSJFfYJFfUpbc1
U8otxVvY5PPyrehGlNtJnmsdyRUBkiuyfL2mMnc6Aye5ItTX13f69GkZz06f
Pt3mFuQzzzyTPV/RczgaYN4+qi7Bm4Ee+Y8YMeLo0aM5/kS0oKSqT5kyZfv2
7UoILXVbouukC2H48OH33HNPW1ublN6JEydi55kbJbmiLvPkebU2lgfu82w2
SnJF9DnW7Eoboyr8J1ekK2f5ivIIVXTZ9hyTK5QnRmMLpC7JFYWO9RoruSJE
kJYvgjSUh3JnLby/rDTRTo9LK53pqlWrgr8rC8TJxwwb0Weocp8NyOLrr7+e
NGlSLg1ULDkLy5YtUy5JOVMPPfTQ4cOHbe5KNFNyRVVbgCKsqMrdZxlYnT9/
PvpF5dn/sIuXrz/22GPRbZpbvNImVxRdFXNRzuSKhig6pfuuWC8iZEO28/TT
Tyvb17OMvvjiC2UBjUr/GHbDhg1ffvmlhIiuR1Ge5IoXX3wx48/lS0r+1KlT
7e3thkQLCWj37Nmjf9fywH2ezdImVxR67esppqlHE3KilTMVbce8/VAg9enQ
2//777/fNQ9fPi/fMu+h6376qZ8+wznXg9KnfQq63W/v4sWLcmbNiRa5DM/1
xyrTHbv9aGWAJ1eUrbfVKeWWoprpRRHN6K56r3UkVwTMyRWumX55GZjJFZ47
nQGYXBEldVsK3DyHn8sF6DkcDQzkefsSBm8K6aRaW1uVU5njTirv9g3oz8hI
nztixAjlY6NGjZKBdrA0XM0fKmdyRQnnybO0NpYH7vNslja5wr6FTKG0MarC
f3JFunJWDlB5QfmNGzeWLl1qWSHNbHoEP/cyfI71GjS5IoogLTuCNJSHkkQR
PmKjXDVO14KSsBHMoiudrHygZg+l3E/PNzMzIz0fW5lAy+jo0aNK9Dhs2LA3
3njD/qaqfVJZQyRXKIcTJlEouRP6fWEl+yKMauTrspHw7zXTh0qbXKH3lSnu
WxWtnMkVDVF0+gSd+f01Ti5cuDBjxgyloKI51YGtW7cqn5k6darT20ksH+yt
ek+uUJavEbF5C3UhbZccy5w5c/RgO3aZHcsD93k2S5tcUWgPri84IyUs11qK
TSlRkPJKLG8/FMhyOpThlTRiSW+3SaLnwzRKcoXPcM71oPQ3T6V4Wr8gwZI+
Gzdu1F+cFFs/XemP+YSp4E70QCLp+cEBnlxR5t42oJRbiuZUb6aUSuW51pFc
ESC5IsvXaypzpzPAkyuiZHgrgce0adMqmuzLNnoORwMDed6+zMFbSJkQFnPn
zs1rmkV5ZXAlbvVa/UEq8cADD9ifDr1ilyS5olrueXLX1sbmwD2fzdImV+hD
wnDh8exKG6Mq6pJckaKclUyD22677eTJk9EPKFNq+gcs6SMs/aFRP/cyfI71
miC5IoogLR2CNJSH0qqETbrS1Dtd0UpdCmbRlXsZNmsE6Y2zftevXvRUwxQ3
CyQ6kgBGWrbly5dv2bJFAozLly8H/6S0WhX3FYH00mvo5Aql/oQDKCXCjA17
lMAmqMzKF2uuUl7a5Aq9KjqtM+NHOZMrGqLoYh/N6OjoyGXj0koo8x56Cejj
I9dV2fVyLk9yhZ6ib15Syb++vr7t27crpyn2xbU2B+75bJY2uaLoHlyJoNLd
C9avfT1w8vZD1WynQ7rm6Bf1KdCa9Eu1UZIrfIZzrgelNwi5vxQ7uy+++EJ/
qUr24YCeYZVuUWV9hj/pHXMDPLmi/L2tUm4pmlN90lupqJ5rHckVAZIrsny9
pjJ3OiRXKCTeW7VqVeW7UrypTeczHA0M5Hn7hgje9Cc4pH/ct29f9i1LCP38
888r1VgvAf3uxu233y69p/0P6eVcnuSKMs+TB+xbG5sD93w2S5tckcs9OxmH
jhs37p577pETtHv37g8//DAIIEsboyrqklxhfoG4Tr+drbdRyrrulVTvDtAX
Io7tf/3cy/A51muy5IoAQZorgjSUijLxu2fPHqWpcZ0GV7qS4MpVhpk2TYQ+
MpVrOfZd8wZXrlyZN29eGD+0t7fv3bvXdSOxlMsqxXhB2UJ4W/PatWvz58+P
/lOKbGSl/TS0Mw2RXKGvLhjkSERrb1IfEZtHoZRPzbvVpU2uqMa9OSLFzfej
R4+OGjVq0qRJUvfa2tq6urqOHz/uupEk5UyuqDZC0Ymenh7l3npLS8vZs2cz
bvbSpUtz5sxRDv+xxx5TBg4nT5687bbbop9xXd9DH6mVJ7lCWcFGzJgxwzWP
N3iYYsyYMdOnT5eKrdxnr/YnSJw7d+6//uu/nnvuOakk0h9t377dfvv65ZN6
cUXPZ7O0yRXVInvwatzjWilyzvWpCX1U4u2HqtlOhz7Wfvrpp53mgvQVVxoi
ucJzOOd6UHpklW7qWzqpESNGTJ48ecmSJbK33d3dSpKeVCc56t27d0sLOb2f
Uy6TXs+zNwX6saebZ5CYwfLsDPDkCj+9bRZ63Oh6gpQBtV7ynmsdyRUBkiuy
fL2mcnY6gaZMrpBm8IsvvpASkAOfO3eutIdOT4bqTXEuM94+w9HAQJ6393wd
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
6af6a4AMDYu3H8p+OmJX4Onq6jK0tNJ3x2ZWVBokuaLqN5yrxgUbNd/CHNs6
SQMiJWyO1eXCnzx5svJFqVTSaukf1s++zQBTdkAa8JozganFHvvtt99+8OBB
w7ekxr7++uvDhw9Xvmh+2shbcoVrJ+gtuaLqpbdNLTa5olLrNpBU0TfffFOp
DOY0G2+1rpzJFSmCtIxIrsjy9ZpK2+lUmze54tSpU9JiRD8mbc727dvN41bx
ySefKAWY43KL3sLRgJ95+xTV29u8vbfrKKPYjAj5ixypfSyXFAbIX5JeZx97
19LmpSRyRcyaNasSRzZYUGtTjcs8rPmKdg/z5B5aG5ui83w2y5xcIY4fP650
MVIack7NF5Q+po5NdC9hjKqoY3KFePzxx69evWrYN/uEh4B+Fcv/bW1tNfxK
tX9qTv8hwzIjPu9l+Bnreb4749Q+E6RVCdIaJ0hDvvQVd0PSDH7zzTcpttnd
3R27QeH0vqrYxFoxatQoaX71u4rSZEnXHxtESQdkfxfSUuwdT4krXnjhBb0P
lS6yq6tL9lz5vD7Tro/KK/1Zo3JosVeilNJ77703bdq0pDKvuKQXlja5IrZY
AuaKev78+SlTpqT4YshzKelPiC9evNgckMTmEwq5Fv785z/rPabURrmC9NqY
/W2YuRyRt+SKaumLLhS7Nn6lvzGUhsUcgVf7h6WPPvpo7BbMt4Rik5rk9ElU
H/t5afqkAdSHVzanI/to9OTJk7fddpuyEel0DEFjbJp0pb8lf/bZZ/UsIPm8
BJlSaPpXDLdNYxcylUZbmu7Yfevt7ZWv6NUs6WRZFp3Ps1ny5IpqYT14QAJg
fSRS6W9YpCvXh1fyi1Lf9KKumRfq54eynw6pt1J79R+V6ifDRqXllJ1ct26d
jPj04wo0SnKFz3BOXLt2TZlsCXLwzI93JSXvyfmSYb59FTLMcseuPyznd+3a
tbGPHErhfPHFF3qf5bQ+rQ3Zmj6TIzvW2tqqhyiGxr/mJIO35ArXTtBncoWf
3jadpOSKoD5Ic6RfRElhlflZnqqvWlfO5IoUQZorCZ+uRUgjY0iuuHz58rXv
qjn5mYumSa4obadTbd7kiqRXhkkne+TIkdgKfOXKFdkHvQDzTVHzFvdWfc3b
p6je3ubtq76uo4ykgkk102tFxTgKDgU9oB5ABgwVWF/3rFLrsRQJR2WDhqGH
/TOqKVravXv3Kr28DBb2799v6JI8zJN7aG1sis7z2Sx5ckVSLJ10QSUVRdLz
NWWLURX1Ta4Iylm/MKUkYyfuar52NnZ6JNi3np4e+4noirE99Hkvw89Yz/Pd
Gaf2mSCtSpDWryGCNORLeYtHlNPrzKL05ccDTu+bDsQueRTWzIkTJy5fvnx1
v7lz5ybdA8p9Fi4Um4+t7JtEg3fffXfsx2KXnDUMQ2SbTz31lPTdf+i3ZcuW
Bx98UN+ytPbK/eKVK1fGzuQ3UHKF/gqqkJSw4YtSnkuXLo39omUN91xK0lvF
7m0o9uZC0vLplf4GWWqglJLURvlpiQmTxhqWy8q5cj0in8kV1XIXXSgpUg33
U1obOczz58+Hu9Hb2/u3v/2ts7NTQqakL9ZcqC0pDJNykOtRmqCgLZJGSSKZ
6dOn6z907733KtOMSeFB9tGoROz6AqRRsaFd0uxEYMyYMUuWLAl6GemMbr31
1tiPmdcPl5+ILuiklKTEdWFHJv8h/ze2mhl+wrLofJ7N8idXVIvpwUN6/nlI
YpV77rknaFjkV+S3Yq9Q+ePWrVtrNiwefiiX05GUyVaJXGXSzE6ZMiWpvQo1
SnKFz3AuEPv6nlBSy5B0IVT6q5BE12HrZKhC5vRC/UmrkDSq4U8EwXxSM5t7
Pxu7OEZIqqW0+TaNf801rr0lV7h2gj6TK6peett0DMkVAanh0jRJ4QQXwvjx
42M/NnPmzJrjTT+1rpzJFemCNCcLFiwYFJGUWSH+6Z/+aZDm1VdfzfLrlpom
uaJa4k6nWZMrqglrrwWkVFtaWoKWSkiLOm7cuNgCLGJyzFvc62fevupevX3O
21e9XEfZmfv9kSNHrlmzRroz6R3Cew1yNk+dOvXSSy8Zko1rrgD58ccfx07v
SIlJvC1HHYTfXV1dsikpH71k5s2bF30C0bBaY/aWVs88VMTGZh7myYtubSyL
zufZLHlyRdV4TUWnLg0XvuGx07LFqIq6J1cE5GoKy+Hee++NLa4hQ4bs3Lmz
ZuuqL1Qbil5i5olo85Ianu9leBjreT4i1/aZII0gLdAQQRpyJGdq5cqV+nnM
8iLUpC4p3WV1+fLlBQsWGK4asxkzZrhmdNiLXRLWklyMH3zwQexmDaFyTYsX
L5YmYvPmzdE/3n///bERVAMlV4h169bFHnLN5VBin9e2r+GeS0l/JZYiaZZG
vqgsQmXPZgmy1FyPyHNyRbXERRfV19cnfashCd+VNDI24YQh+cRMYgnZ4QsX
LihDhqRl7bOPRiXSe+yxxwy7lBRBXb9+fc2aNTVv6SapuV5iNVurXqk1SrUv
Om9nsyGSKwrqwUMSe8Rms9iweT+Rtx/K63R88cUX+hJ5NcmIQ3mjTaMkV1Q9
hnOBnp4eczsWW3RyIbz77rvpLoSK3aqSVeMA04Z54ii1LI1ApT/7xeZGv7fk
CtdO0HNyRdVLb5uC3odK1+baV0rnaLlop4daV87kitRBmiXpyFpaWgwJFTWR
XOGqtJ1OEydXVI3ZqjamTp1a0OSYn7jX27y9a/X2PG/vJ3jLLmO/r7CfeEkd
dkrJy6mXMcuECROif096oCB7Sxv77s6opEruYZ680NbGvui8nc3yJ1dU+1cw
kKsg3TVVM1gtVYyqqEtyxS9+8QsZhDoVgtTVjo4Oy1uise8TsWTzUhj/d3yK
Hut5PqIU7TNBmrl88kKQhrLp7OzUT+WUKVPOnz+fepvKbHBA/phua9I+t7e3
u1ZLudCWLVtmfi47FxI/mJdx1s2aNevzzz83bNOQxJhk1KhRb7/9dtDcKW9m
SVozpLGSK/bt2zd06FDlqG2WQ4l99410K/rKVLH8Z3smPeta8+vnzp1LevuD
gVxZL7/8cnFr4boekf/kimpZi04hHfQf//jH2LXgnNjE4VEffPBB0kPHSebM
mRO8JE5fOmbRokWx77nOZTSa9GhDzW3KSZT2M0XZzps3z/zWnlDqgbAUprm/
cCo6P2ezIZIrAkX04CEZjkn75nrSZX8OHTrkdBSF/lCOp0NCMgnMLPczaKn+
+7//W+lDGyi5ouornAskrS9qs59yjSetvWzeVemVLKePDh48mCKPUfrZHTt2
FDq0jH2jqJlUTokZLIfkPhs0p07Qf3JF1Utv6yq2D7VPuw1eHeKa/FNorStn
ckU1Q5Bmg+SKfL9uo7SdTnMnV1TT3o5x6rnS8RD3epu3d63enuftAx6Ct+yk
cX755ZdT32IIOWWem5/BjxVcIMHrMvVVc5PWvM2lpY19HYPNNj3MkxfX2tgX
nbez2RDJFdVU11SwZr5lsFqSGFVRl+QK+aJTtkCKaRzZ/gsvvOD6DJ004z09
PTWb8brc8Sl0rOf/iFK0zwRpIYK08gdpyEvsW6GXLl2aZSbzwIEDyn3wLEth
BCQ0WrVqlU1MJW3Ffffdd/z4cW+1UTrE119/fdy4cTX3TT4jn7S5rSmf2bFj
x8iRI222KQONaKSkv5lFwlH9JxorueL8+fNTpkxRjt38FGcgdh3a1tZWy+pR
l2zPZ599Nim+km762rVrSd+Vgzp8+LA04DY9plxNEmMX2n2nOKK6JFdUy1p0
OqnwMh5MvYSFhEYHDx50bRul+ZUxeM0flaKTAlRe3Kbk740ePTq4U6/IazRq
uFcuu7d3717Dd6VsN23aZNPqVvoTtGSfnVJrpNilY5LuyX509s4779T8Cdei
83A2Gyi5olpMDx4K3ia5cOFCm2vW8ox7/qF8T0fQ0sa+9lfZw6Cl0vvQxkqu
qHoJ50Lm9BXza9SkPkitsMw1ksPZtm1bzQBMIZ+Xb1m2sdLPyg4H86JFkyFP
T0+PzbHL9SVXWWy7l8Rzg2bfCdYluSJQdG/rJKkPlavp17/+taFFDd6d6lQZ
ooqrdaVNrqhmC9LMSK7I9+uWytnpNH1yRbW/9OQCtLz/FYT0En15mBwrOu71
Nm9fdazedZm3r3oJ3nKR7kmWUJjq70S+YjPuDjpZqbfRC0RZNTfpyaxcWlrz
EzS33XbbyZMnDV8vep68oNbGteg8nM1GSa4ISHG1tbXVPO/pTnoZYlT9eOuS
XFHtv0IlQFV+XSHX7yuvvOI0TRR15swZy6t43Lhx9j9Uxzs+BY31/B9RuvaZ
IC1AkNYoQRqy0zM5RWdnZ5Zt6vfBJ02aZLlcqllvb++BAwc2bNhwzz33RF/S
JN2Q/MTSpUu7u7stVyTInVw1p0+f3rJly9y5c8eMGRPum+yn7O3mzZvl6nOd
G5SoZv/+/U8++eQdd9wR7Wpl+/Ir8lvyi/o2pat9+OGHo+U/c+ZMvVgaK7lC
f2i6kpx1bP6iNL+WN9yr9Sulzz77bM2aNdLmK73e1KlTbWq4fEauhZUrVyo1
R2rj9OnT169fL9dR7CPnxbE8onolV4RKWHQ6iQQ2btxov2x1ELB98MEHWW5P
XLp0qaura/78+dHXw8nZnDBhwpIlS+SfYmumDLWU/XzmmWf0uDHH0ag0gG+9
9Za0kPqL/Hbu3Fnz69JiyE/rLXlwpHL40j/K8CdL6BvWMan80Z1M9xPpiq7Q
s9lYyRWBInrwKAmS3333XaVhkZKX8pezIDUzY6Uq7oeKOB2yA59//rmUqpRt
+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
5ApL3EVFXZBcUWY0Cyg/pknRrEiusEQjUFpFnxoZZZvvF4j1/aIz28HUt3zm
tddeCz5z+fJl+Quz38iCgUPzIbmi+RAwNBDprNva2lpaWkaOHPmv/Qb1+16c
cHVoiQc6OjqU+zvBF+WP8k8DJE9AQpoFCxaEpTfoW3rRyR/DMpFilG/J55UP
yF8WLlwowdJAuE1GxSsnoqxGESYmhblJSmKSCMZfSnsSfDIYoJGb1IjkfCnv
BJG2tLifc+2Pgqy5gnamzJrmwKXRiNYu6aNpH7whucISd1FRFyRXlBnNAsqP
aVI0K5IrLNEIlFbRp2bhwoUyrDZMesfOfitPPYQT4C0tLQcPHuT1nbCnDBbM
lDZcibGjV8elS5fa29unTJkyePBg+afhw4fPnTt3165d8vekr6cI0S9cuNDd
3b1q1arp06ePGTMmuqlbb7116tSpK1eulA9Ef9RM2SV96CSb6urqmj9/fvTn
5L/lL/J32R+n/Vf09fUdP358w4YN99xzj5RYsPFhw4bJdb1p06bPP//85s2b
4YeVE5fUvWZPrpC9kkLYvHmz7JWUarSE5S/yd/nX4iY8jx49OmLEiOj+P/30
09FysHTgwIGhQ4dGtyMVw+aLZ8+e7ezslPM7bty4oDIHJ+WOO+548skn5Sxc
vXrVaU+UPiWc1rtx44b897x582Tj8vchQ4ZMmzZt/fr1p06dkuNVvmWmXEfZ
60Bvb+++ffueeuopudDCmimlIWUiJbNz504pJacNKnIv5Nj9l01JmxDuf1CH
5YjkuORfC5rc1peArtnLHzly5Gc/+5n5k0Ff3xw3Ggz0m1xJguQKKZBDhw6Z
C1w+KXFX04dJVDxpNltbW6Ptnv1c6OHDh2+55Zbod+0HsFu3bjV80Tw9K/ss
Hb1099GWNmwJ9+/fL92EazkoJIaRvm/p0qUTJkyQXib4CfkP+b/yR6d4KfaI
ws5FKonUqJ///OfBgUjDPnHiRDkK+aNN/cl9P50EuUn/+i3DGC2a1hWMzpTr
LsxNYnTWKOQ8KmdZupV8fyJ8REKqWZBAKCTek0AoKYFNvnLs2LGXX345+nnZ
SEO0xlkELYkcbHDgwfMm6Q48zJgqYj/tyeEoTYTnlkE6mjNnzkhlW758uUTF
0ZFdpX9IGwTGTrG3MtDQp8skzpfBwty5c8OfCwYR0p6/++67GUtAekbpH6V/
kd8N+wv5IX3moejkCvtpQ+WTyrgs9oikMw3G3adPny7iwtenZcwsi65sUYfy
dWXIHJT8ihUrogNSuSgefvhhqajmK0Iq+ZYtW+6+++5gIB+eMvlj6mHyhQsX
gnmnaOkF145Ub9lyQZWhJikoiWqkNY7Gq0FZOc0OOc1vOFU8Rcbq3XzRewrm
mVsphFOnTq1ZsybaauU1RxooeuLXcir7+vXr0iAY6oMlfTuLFi2yCVGCZmHJ
kiXRyhDUNymBmi2VWRETv0X3dzlOk0aH7dJub9y4cfz48WEJSGWWChYt3vLP
sqZQ6C4FraVcXHJBRa9i+SG5hHOZ+C3uh9JN45u3qYfH8nWpVHr0Yp9c0Six
qNS0AwcOPPfcc3L40das0t+gTZo0SeqbnEHlLpjNgZhZ3nM0xDmyw5Y7ZhAM
x4KzH405g549uNbkA1l+IjW5NKRKy6mXbiWMacPg0/7YvcV41f7OS3lC0Dz7
Hdw4MKdhBJN4x44dS7dL9qSySd8qUb2cd6n5YZmH9SGI+bPceJWfkAMJ6nO0
cw+axCB4YK4yoyKSK/bu3Ttq1KjYLUjdaGtrC4YYqZMr5Os9PT1SK8ImyEw+
dt9993366ac1WwBDcsW5c+daW1ujbX7sDz300EPSjbqeBblG3nnnHSU2082Z
MyfcuIfkCon5X3nlFWlCa5awfEY+KZ93PXCbfVDGHTLMOX/+vNNG5Lw//fTT
0Y1IkyVdlfkrhw8flgKvWcek6ZNRnlQPy52Jjcq+/vpriceSfmLWrFkSddQ8
C6EckyuklOToos17LCklKSspMafev7hCDslXbPa/0t80Pfroo5999pnrT5i5
3uO+fPlyzUzLsK+XeC/fvS0b1+QK5YFQAwmT6n6HpVBUPNHd3a1c5pZvt9cH
AhLTmruMgB7VbN26NfqBpOlZaQylVGfMmGFupiSySt3VSvCwcOFCcwwTtITy
MfswJvY2h9SoFStWJDXs48ePN0xCFrSfTuwvnzC5wiatS5qdEydOFLHDyNGz
zz6rt5A5bl8qzMsvv2xI15FhrzJwDpZjiv2wXAVNvKBQjgcuH5avBOlSv/nN
b+o4e3Ds2DHlcF599VU/P3316tVdu3ZNnDjR3LpGm9lly5bZ9H2G5ApppWVo
bI7z5YdkiJ0iyJfecMeOHdL21tx4sD/lT64Iht5JsyjRLb/zzjv53lXPPbmi
nFFHUnKFFObbb79tLnmpaR0dHXqxf/755+ZKLv8kY0z7Gm4/QA72atu2bd7a
NKnSbW1tNiNrmx1r9OSKxo3eUzDM3MrvSnU17J79ZKzO28Sv/VS2tAPK35Xh
ng0ptNGjR0d3Ww7T8HlpeaSyFTdvVtzEb9H9Xe7JFVJzdu/eHb2dGiXFK4FH
7NcrpZllTafQXZLT/frrr9tUsIyzssX9ULpp/KQoWloAaanMl7PUrj179gTl
7DO5otBYVA5H2udFixbZBBIBOZvd3d2GNMV8kyskbtm0aZN5cBGYNm1aihII
7v3Jdy2PXepzETfaYsnlIBdFzZDDcsfKnFxhf+NAakJxMba0D7/+9a+Tuhud
7Ex7e7tTYph9fQ7Cp+PHj9clpacJ5J5cIe2/oZ2Mxo3pkitOnDhh2RDpP71h
wwbz5Z+UXCGh7O233275Q3JpSDxmXyGl0ObPn2+5cWnoZKAapEdG/55vckUw
VJw8ebLlXgXkvBRx40Daveiv1Bx66C5cuKAMe1tbWw0nSAYjixcvdjp2Oekv
v/xyimc05Dx+9dVXd955p2Hjjz322EsvvWS/M7kkV8iV8uyzz9p0rCE5NTLe
tGzqCy3kan/3Kh+276cCcrxy1DlGL073uP/85z/rHzbc8vb/wKNnTskVMrSJ
fWY86Svr1q1r4md+qXjV/mB1woQJ0Qvc3PIHpHtdunSp3rjZhPqnT58eO3Zs
+K1bbrnl8OHD0Q/ETs9Kmyk7ZjlnKGQIL7XdvhzkZEnLbL99p5ZQv80hP2cO
aebOnRtbfwrdTydOyRWy26+99prltSafv3z5cr57i3ytX79eOWU5Zi/UTMIJ
RDMHaj5VUeiQv45qlpWUkmUnLle0hNnR70oAUPT+G3ZGOS45kKJ/VDq+P/7x
jzWnSWPJoH7Xrl3moo5NrpAfffPNN+3jcNm9vXv32h+U04SAjOJlYFvy5Aqn
CQHpK1esWJHjtZ9jckWZo47Y5Aopefsx6apVq8L9dKrkUgltHm+XIGHZsmVO
pVfpv3zkGi90OlTC4x07driOrM071tDJFQ0dvacQO3MrXYN0EJb3yGT3pPN1
uingc+LXfipbBpiTJk2K/j1paGOgVH7zk1/yT4YbuLGklsqu2rQJRU/8Ft3f
5ZtcIb/S3t5uuO5GjBhx9OjR2K9XyjHLmkLRuyQhveuFnK41K/SH0k3j6ykB
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
3K9Xm7lUfl8yibU7FjX9FzWTlZg5dRKI6ipGNTl8Fk8rpo0XUMcTHMLxk7pv
ZWZY8Eo9ouWEqOmwQFR+c+xbbTbdoyaaq7X8/8EHH5h9/7rtVThkFVzhuYRI
rK6NFCPaUXzWlJN8IvWa1mh0XJe7jf3pp59GHci6vpN7ftYsXesurTY+Ph61
h0gmwRVSF5ibNaxevdqdztYFlHzePPJn9l/UBdnctHXao+6+deig7mZG1pVp
3V0Ma6ss1ipPuQZXSJ2oxbHU3bPSGirc0dFh1g7FJLK2C4x8su6Ok5LDzbU9
85j/8qnl1dmEup9v4NLWxfNZq19NkLqfl/5CY6+oMNM2450+fVpb7XnVqlWO
sBBHG8DRfA3Iv6olj7WPGTU8K8WUFMuOYtb64pJjpxIp8fr6+rTPS/UnJ+Au
DM09m9zDONYr8l+burDzTMNzl5Cwyqj7+ca+Ne/DnPwtgwI2v5DGgHbQ/v7+
lL+prcPguIRKpWK9cLU1ou0tEurt7U15niWhXqAWMWLeHZ/gCvNbIu+Na93M
5yun1WzMtfvaa+981e1ASf3+4osvag37m266Kep9Ivf0hOMeWdehdWxeL1ck
56993t2PcK8tX5LgipDUa9K7iar+rKteay/SZiLB7HOztDqimmHSxHKkvKSw
dU2z9tqI6PPPPx8Vz2B9H3D37t3mJ82ndfHixfKAuC9HUk9rHMof6y6dGos5
YFV3ZEB8+umn5tvQc+bMcS8f13TBFc3bek/A0UWSrpZjzPPs2bM/+9nPtK+4
J6EaO/DrOZStnaR732GVdA+10BHrfJm1vqubGawLEVjf9S5s4LfI+i6r4ArP
PYLLM8qaTK6nZM1g7rKiWstgmzdvNqe5g924rF8p7EAph/HNV37qprZjXZE8
gitCmT+b2lo9Qbr5zNtKK8gMMHO/KpWgIWGGtvq0c6wzgFFhjeZWUHUrNWuN
lm1AtbXJIUd8+eWX3SO9H3zwgdm4ve6669yt1iKDK6rGQpEmda/ewiYOpFy6
4YYbtASvO11VjZixinrxQXviJD9Lv959TyXfmk0O93IBcMgkuMJnO4yor0d1
bcwmaN0nNySZQapI7SStvdqoK2r3a2ObIdaSh9966y3PK/IcFnjvvfes8RXp
gyusDXifIbhqRNRr3ReEY9H6L55DB3LyK1euVL8YFZVhti19xjTC72q1nn9r
pz1+5ze/4Aqz0vcph6sRGcAMTigmkbVs7BmHYzbL3ZOwyfjMcWvvye7cudP/
w63NZ63+SqUSft7c2VyjvhLb2qZzxtNeDpLWrGM9PW2lI22RNMdwqHkga1s3
alLAp0Vtjm9LyyQqD5v9d88+bNW2iJxjGMd6Re7lmxpynmn47OGo9s7qljzl
nwf3XEqxYG1tbcUHV6TvSktbKDx/d1fCGgagxWNI2WtNnNZYuUId2TBrGXlw
zAuv2zszvyU3orHBgWYUTU6BYdKy1QrJu+66K+odMY007B999FH1u459tdJM
T5hra1x11VXvv/++9cPWKsNnWDtqhflSBVf4XIv17T/p+GR4FdVEs8/N0uqw
fn3OnDnBwlNRzPGEgM9qDGbn13q/Tp48qY1Uewb5m43DDKsDcxBYjrVlyxaf
aUfrCgzuRYybK7iiqVvvCUQNk/psQRJr0L6xA7/+Q9nmzfKchtCW5I0a1Uw8
HWmud2EeosiB3yLru0yCK/xfEizPKGsCuZ6SNbj33nvv9SnSrcsIRM1MFXag
arphfOsT59NIjtpBIL/gisyfTUlnKRu1dIsqlk3S9dBKwtWrVzvSLW4hYFYE
ng9C1XZ3ovaikn6N9G7Uj/kE45nBD9alcRMza5m6r3uHrAsrWQP5QmULrlBb
y3K7o8ZYZhhraaYhRaWWaI6ALo00hLQ1+aUBdvr0afOTg4OD6sc8Y3LMZUxi
LckFVSbBFY5VQ+t+Papro70Q2h5z4l4K5K9//es+X7dekX973nxSog60c+dO
7Yr8nynrAFH64Aqzg+A/BFet1SxaXGW2YXXm6fm0Ks1xRWs9bt73uu9WqMw1
vhzVpdmGcbwL5vMLGQZXmNuvrFixwjEGojKLei2qoZhEllpPa+G88MILnr+v
tfrck7DJ+Mxxq+EBVWcUpfx9glpevtLf39/Y1zaTqTvFKf+qJUjUi8Bi27Zt
PkeUH5QfkabXwMCA/FdaL/I3Tbf7WEMyXpB6Y2NjO3bs6K+R/5FyoODU04o1
d5dEa2xImaA2HhzdWG2JjKhlLtJMCpiDjVGFv9l/j9WHrdpe0oyqcM0rqtt0
bMh5puETXKFOwcvnrbPA1g+Xkzy28pi3NdRcQwHbqYyMjGR7s9R4iboTXtYK
S106w5EV677R2RTUJR3MqAnz2s1K32T9Vm5X4EWeL+2Ucsrb5nq/nm/3B6Q0
1or3qFAE6/SEZy/SbH47DqQFMfpXGdZxYMeBkkkzoO1/LWbf1j1hnUDc2edm
aXVYv97uNwhjPg7tfgH82p5x7RFz69rAu1R5nj01s3G4du3arF40M4e2Ym02
YY69uycUmiu4oqlb7wlYh0n939o2d3SKWuO3sQO//kPZZsyVz5ieORdsLUas
05GDg4M+J1atlVdaGmo5ociB3yLru0yCK/zzW0lGWZPJ9ZTMG+cftlSNiN+w
Bi8VdqBqumH8Dz/88JprrlG/6//EWTf4yym4Io9n02wFxWq1muvQZlsImBGw
jz76qP9wpVm1WR/Pt956Sy2T/ScazHT2nN2oy9r/8o9VrtpCOt1vQJctuEJr
ikv3vC1iZ5CsmlJmqyNWEKxky9WrV/ukodaY9O8XaM1+/84INJkEV/iP2/h3
bbSxFKmYpHryvy7/Zo/1itwvq6ok40n2U78rZ25+zGyKuzcQ0ZgvE7VnEVxh
Lm0XawiuamzHkO06pWai+VTKWgEelc5mzJ476M5kvtkRteep2YaJOwaSU3CF
nIN0J9WPxQ1+0GpnbVfZYhLZfITdoa0qyfBXXnnlkiVLpCDaunXrm2++aW43
mV7d3RbMATep6M1vSdUf99WkYJu8efPmydflMptiWweVT3CFdlHyR2khmM0k
99rs1S/TSlLJPMrMmTPl7yXxm2vhiyIznjxxBw8edKRef39/Yalndugcdbra
2JCWxsjIiNpdcuyUrQ3lOQYMtfI/1gLOWlso6vVes6iMO/NivswStU67eUXf
//73fVbTLfg80/AJrtDys/wxKjYp1qov8igFwV3FlzZSQk42zjlDMRXWtm3b
tPuVMrhC2kXB79StdNQPq9SoiagwOfnLWOkj+UoeNCmH5b/laQmoi1OZtbnk
Cqk+4j5Nk7YdVDdt2lT3ZILgwIGBAflv5klkBle8/PLL2R6iWktPbWvsuK+f
mJMvsYIr/OcEpfmtfdfazDD3iIxV4JtzAY4rSibNgHbUy0cmuWSpZ9Pc2bri
zj43S6vD+nXPZpgW/NDusVtcYNII+7cmjvm4eT5B0gH/+c9/vmDBAkkxKRJ3
7twpPe5MgivMmxIrjiVgTvJGjZBUmyq4otlb7wlYh0n93w6r2mJ1rEV9Ywd+
Y41/arsP+wx+mnfZ+qSbvddYwQ9mSI82IFbkwG+R9V36YdJYc0klGWVNIO9T
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
M/JBG/MsJpFTBtpps6VsC1Iq5Qmu0FZgEOV/C7j4jHfkyJH+/v6uGm32UP6m
UfsdaOusStdG/RtHs0fb1nPVqlVr1qwJ/+g5ylHM8KxZGrfHaWNUay8Ia6tj
Rb1hkeaKijzPNPIOrgiDtcJdcuS/l112WRMVLy1DUl5bKkFKzsS/pkVWBLR3
D81FkMTIyIj7l9Wog23btlk/I423YBsmKX6DDoLk5MWLF4dHSbPGo/zU6Oio
JM43v/lNeTqkqM9ja3jr7h51D2Rd70JO0noVfX198q+XXnppGOwnhVL4re7u
7swvqmob7cm8QjQ7pLGCja3DZe2NDq6o2rrP/nudDA4OmgMCBFdYxR0PaZZW
R5qv5xpcYc51xrouc5osq803zSduxYoV/kP6x48f15YXdk/HT/PgipK3iq1x
C3fddddnn33m8/Xx8XFtLt46VtZEA78m8w5KH1PrP3q++WVGR8h1+e/LY0Y+
yK+pY3pFDvwSXFHNeZQ1mVxPycyB8scjR454npucxuOPP65lMC0PF3ygarqc
bI6E+++O8fe//137bnszB1fEiiswQ1/qnmfcizLbOffee69/r1ZqQKkHtV/Q
OvtmXRMrjMHcTiKTbUGs0ZhPPvmk/wuDZrXujtEiuEKbxo11H605zdocNQ+0
bt06/9tqLhTJtiAJaEVf3dZsMaEI5qqkzz77rGcvQx5t7Xl3n2dhwRXmC0Gz
Zs3yWR1Iyh8p7c0rSh9cYe0x3XfffT6vU8nt2Lp1q9Y8ixv+Gpe5TvtLL72k
xgTGanaaIZGSczzP36xW2qODUTMPrqg7XuqfB8wSW+6p3Nm6j5s1A5g9rAIS
2YzA9G+4mo9AJj0XDcEViZUkuEJaJtqyFX19fSVftqJaeMa7cOFC8Dqw5tJL
L5XeZQOTSxvjuu22226//fbwj47haG1FPinuvvrVr8YtK4oZnq3aApuljbFn
zx6ftpM5GN4ePc6Q8ooKO8808g6u6O/vn1GbAQ8fQ4IrGkXutVZUJr6/1sCA
GUa0hjVr1W14h8MFUnpHfTgMAgyXepALUYvl7u7uZJWmfMuMG5EzyXydB/lB
M3HqjndZU37Tpk3mJ6XVpz1icmlqEuXUUtJuumPtkcS0LlJ7nHkZKX6lEJai
uN3Q8OAKa/fZp8qwdiIcdWgypRrQTsPsENUdAGyWVkc5gyuqtnku/wUezXHU
rNpCZrdaTnJgYMDnx6Ws1jYnaq83F9+o4Iq62bv1Wu8JWIcKxeOPP173ENYw
G+tSCU008Gulvacjv//000+rf+M/SWENlfFZc8x89MxFQooc+G1gcEWGw6Qp
v573KGsCuZ6SGR0k7rzzTp/V6aMymDwR5ocLO1A165zc7vfEWcM/2psnuEIb
eWuPE5IniSNJZF57toWAdaW+devWeUbBmXfHOipoLrHiHxxuNgxiLXviIIW2
VstIk2NoaChxk8MdoDXNgyvMBUyuu+66Y8eO+XxXcqO5aVp7RHPUXHfOfz0W
uX3agfKe1W1VZtfMvblbMaEIZmfTp2E5NTX1u9/9zlzhIRC101NhwRVV2+JO
crbS1XIUZVJKa0FrofTBFUKeOHMwTY7onjOSpH755ZfNL8YKe0tGyxtXXnml
egI+i7SHrKvF1r0j1dp43Y033qh9cenSpVEtuvR1ihkEZa6pqIqVByRJzU69
3F/H8LKkz2uvvaZlAGtIQwGJLL8jDRXtk1Lv1622JK8ODAzk0XPREFyRWEmC
K7RlK+bNm9eoRRhiKTjjBW8EB7u8zasJDzdz5kz5y4MHDzYkxMLctVDlqDXM
uSqV5z7UhQ3PSgv8wQcf1D5ctzCvRjQzHO+ApLyiws4zjVyDK+S7wbou6nCr
9InUQ+zatSuL64CXbdu2acVjsvsb1aNXF5qw7gkyo946BpI9wpUZ1q9fb31S
wt0uurq6wg9oQTtSRCe4LlGpVIqpSrQHIeAOrjDDYwJm4EcYRyFNxLD01pJI
PpDh5YSH0G56Tq0XcxxPrvT48ePub0mZLH0Ea2SFeOGFF6zfKmx6omrrPsvZ
ShPXkYb79++3zri1E1wRTYsHiFqPMdQsrY7SBldY+8g+w/vSF9YSsO7IQCzm
Eyd/lNby2bNnHd/69NNPzcgKyQ/uJ66wgfe42bv1Wu8JRAVXSH7YuHGjI6Na
zy1qfq2JBn6jLlaNR5ozZ861114b/jHWazvSMtEWtBE33nijOzXkwfzZz36m
fcsaqVXYwG+R9V2uw6Qpv57rKGsyuZ6S/I2a+QNS2LpnuiWjPvfcc5dffrl/
BivsQClzsrWWv/fee6W6jPqK9XEONEtwhTVE0yeGR26r+gKUSn7QETwTtxCo
2to57bXBPXfoi2QhqfvMBtLg4KD1crRcKp988cUX63YA33vvPW0eJMMFqaxT
J/JQPP/88+6BzQ8++MBcTaVuk2OaB1eYMQ/tfuGpUkQ89NBD1mdBLsTaJDCz
tM9LzZIfhoaGtOLdc7ktaN5///2rrrpKTUlpo+7evTvqdhcTimCNJZMTkya0
tSwKtoo2l0xRRVVGRQZXyIdXrFihnZg8Aj/+8Y/NNq1UrFJKR3UZHFcUq8ln
jd4Us2fP3rRpk9nrlM9LuSpXYX7FZwQvPcc0WYKBBetrTXJpcoFSqZmZTbqE
kiySONpX3IuQpK9T3nrrLS3BpcKV/lFU1RwrD0QFx8oDJY+VdgjJAFKzS1Fv
NiqimkwFJLJ19TD5BWk/W3vxclA5tFliZDUiIRX3pOI//uM/omr5tra2U6dO
Tf6rrOr9nIIrzBjs9OMSKjUppEHyne98Jyr15J/kA1rqZT5hoc2Fyf+Ha4nH
ZQ61ZbJ9XqjhGW/qSxcuXDhX093drSad/LH4uBRz7WWV+8VeM7d7fjFU2PBs
NSKeXEhH9c9//rPZrpNmxssvv3z11Vdrn3d3gVNeUWHnmUauwRXhrhDqjwRb
FYSK7/1NZ6Ojo1rxmGzDi6h4NnWgxtrrd4coqBuXyP9EnVu4JoMaVBCskRJK
vNCEI1TPHZMfl3WDj3AhDqvh4WHzrOT5NR8iaxJpwZN5xDXJRWmnt379+syP
UrW9MdFe6y+MjIxYy0kpbN94441FixZFVXPt0Q28IqcnorrP0hmRLol2adLs
7+npMQfPQwRXRDHfkJIUdk+6NUWro7TBFdWIHQ3kkZQH0zoWJ8WafMVMwFg7
d9RlfeKCq9izZ4//bW33eO+msIH3uNm79VrvCUQFVwSsI0VRA5iOeIkmGvi1
cncz4y4kYs0MUqPJo2QuKR9ViUeldmEDv0XWd7kOk6b8et6jrAnkfUrW7diC
DGaOysrhpIFqnU93vLdY5IEyeUfSDEyS0nvnzp1avKKcpORbR5u8WYIrzBfh
22t5Rvo+UX1YKdykiHM03d1VcNxCoBr9IMitkerVPE9HFrr//vut1xW136L1
WQvI70gKm/Mg2b7CbN10pr3W5JBr9J+diYoqUeXdxtNGvyWhosYr5s6dOzEx
kffEgck6mCyFalSElaT2c889Z6a2ytqetO4hEtV4qNby57Fjx3784x+b7y9k
21OePqQRtXDhQseN08rwwkIRrNVle62tuHbtWqmMfl8j1frDDz9s5j0pfrUY
oe9///vWQq/I4IpqdO9JzJ8/X65FCnmpjJYtW6ZVLtqC5OatCcVtMUbVLNpZ
Cak4tJUiQp5r1qVn3SgqcOeddyaY9Ny7d2/U61qSryQXBde+Zs2a66+/3pon
67Z409cpZhCURst1cfOAdRlPMxEkJ0h+sH7MHYBXQCKbYdghOWe5uuAQ8nAt
X77cWltl1XMJZuXaFFFVvLjkkkvaDF1dXSnPIdCMwRXBLFKYFJI+cVMv2w3C
tA1B0kRWVHMOrihPxtPO6tChQ+qhJQ0zX0m+Lm3J1pCUq1K6Or5o7kAX8N/L
vsjh2Wr0QujttabybbfdJmWglITyzErnPaoP6y7P0wdXFHOesUhG7e3t7fzS
Aw888I1vfMPx+MgHOv/V6Oioz4HC5QXUAtl8d77pVhlqauq6EAHPu6mxBk6o
C01Y97yY4QznkLwRxvnIxxwnFsTnSOYJH4ows4WSBe2o52DK9k0Q6/4jkrBR
H9YCY0Jywubng7gmqdPVE84kidzMdT8OHjyY+VGqtTv+5JNPWktLaV3/8pe/
lKow6D5v3rz5vvvuM1vmN954o9ZLjXr/t8jpiapf91nqi5tuusnaiVARXBFl
cHAwQdKVv9VR5uAK64vqAUkr+ZZ0jcM+svzRmoB5DMKYi2Oot1UKWLnAurf1
Zz/7mXuxi2qBwRVxs3frtd4TMMc577jjDq2MvfLKK4NhFjlDOU/rgE/drZCb
ZeA3yttvv20dhkq2pIwjM6gDs3LJ1hEtd2oXM/BbZH2X9zCppmyjrAnkekrW
lYED8pcLFiyom4HFwoUL6w6zFHOg9DVUVERT+7+W7XJH3NOp7c0TXCGOHDli
LcTkkqX3IQkSFOlStsvlSw9F+5gk1z333KMOwUW9rR+IWwgEHA+CnICcVdgA
c2Qhd5iZHOLee++1flFtSgWPm2Raaz7J4xVmc3GMkFzp8uXLg2zpnp3ZsmVL
3aIp7zZeZ2dnmtHvbCcOrKJCWaQhJ81s6Y8Hz4L00NevX79kyRIztb/73e9q
AatRVfzhw4ej3s2X2jws24MsHVW/Z17jTB/WLasc+b+wUAR3w8/t9ttv//jj
j7XJlKilhAoOrqjWXiwyl7Fyk0dPyi6tZM4quKJaW+DoiSeeqDseFUUuZ2Rk
xD/RUjK38Qok24hKGjyvv/563cZMFJ81lNLXKdYFhVRaZkiQB+QrUa2Luh55
5BH3a54FJLKj4erDs3ngQ33JNBltf/bEmjG4ImrJdH8ZtpEkubZv3x7+spxY
ykCIXIMrypPxNJKM2tvTxcdXmBveBeqG5EWtlVR3s+ZQwcOz1dpeinHbGCGf
lZ8zCa4o4DxjSf/4RM3/ai5cuCA9rHnz5qmPwKZNm9Sf2rFjR1bXBR9y97WV
GZKtxnDgwAH1R6TPLr8TFhRSu82ZMyf4J/kfLXpH3csjIH+UTKJmS/m1qEo8
KGYlX6kLL4QLNQQS7wnifjoSL/QRxQxFsB7CvGt1H6KBgQFJIvXmak2OnOKa
zKib/FZwcgwV1vXQQw9JX+CZZ55R/zJqiqrg6YlqbZE6c3XlutasWaN1oAiu
iGJuxKyJukclb3WUObiimu6Zba/Ncu7fv983LeJIMzJQd9uIUGHBFXGzd+u1
3hMwxzn37t0bd4R29uzZr7/+uvvtlWYZ+I0ifUlrMNKtt9566tSpBD84MjKS
LDPMmjVLGjnu1C5g4LfI+q6AYVJV2UZZk8n1lORxfv755x2rELjV3aemyANl
UkNJz2Lr1q1xz1Mq91/96lfq3zRRcEXV+XKlm9S2e/bsMRemdsSMxS0EQhMT
E9KXTHCSgbo70VSdweE+fAKNkpGftU76+/DZuSyQaxvPvdKsjwKCK6rOgMm6
6SxFx8mTJ7UGRtSWndUUz13AJygaDlFxZQGtK1FkKIIUklJ3x8oM0nqX7Bd0
5bQXTr/2ta9Z+57FB1dUIzYidFzUb3/7W0kN7UAZBldUa0XTf/3Xf1lXdHS7
5557/HcSzIS19kw8vxM4evSoe3VBK0muP/7xj3XXOsikTrEuKRb1m8nygDw4
mzZtitXwCwp8z5iEXBO5WouvkCclQQiHHEKacFmttleeOW6CK1JSVwufN29e
+tmQ6RlcUa01KbVjqa9XF0AKt5UrV5rPfk9Pj/uLcpKrV682v+g/91r88Gy1
tk+fuchbXVJ4btu2rW4pkVVwRd7nGUthwRXVWnNLzfzyxwLenYeD3ALJUeot
kK56ggymbWnxgx/8INh9aWxsrL+/P/ynYFemSqWivmERrB0klY7UCMFXHnjg
AfWU1DiNqKvQCtWs9gSRX3Y/HdkO/MrhzKiJ4O0SOZCkj1yIpJX7/RRrfR0k
kXpns0oiN+1ykuUuf45XzqNIM1j6gMFZaVNUUcs0FT89Ua2Ngj766KOeVUYw
vfu///u/WveZ4IoojpVPAo7WfplbHSUPrqjWdlJ47LHHEsx1Srf6448/9jyl
BKJ2qHeL1a0uLLgibvZuvdZ7AuY4p1xFrKn5RYsWeS6r0hQDvw5btmwxzzDZ
m1+BTz755J577omVIDfeeKPnwmt5D/wWXN8VMEya8ut5j7ImkOspSfm/b9++
BO+T9vT0xJray/tAWdVQcp5//OMf/Z84eZal5NTqkeYKrpBLlq5rrHleqVak
Bgy2SzAj1tyjdrEKAZU8CJKr484gyKlKf0Td99MhWSxTkBo5tYgCUu1KDRi3
ySHVuv8KnwRXBN58882oNSWiSAv/6NGjVdtwtPstv2TBmfIIvPTSS6xZkZ4U
3VG7O8mz9tZbb4WfLDgUIWj4LViwoG5mmDt37tNPP61usHXq1Klbb71V/cyG
DRvMjl5DgiuqtWL8N7/5jbuGlcRfsWJF0Gs2DySPmDXzp2kxSgErySiJWTfB
22uhelKLNWTxanN6d+XKlT7vRzjIhfz3f/+3e+vhkCTR888/7zmenEmd4m6S
aYvbp8kDH330kdTjdVva8gH5mHw41lXkl8jqta9fv96zIReUG9nOC5Rnjpvg
ijTUl2e1VcQTm7bBFZLx1N1VZtQWryj49XzrhnfuVWoD5krCsYZYGzI8W61V
GQcOHJBmuU+PSQpMKTY9K6YMgytyPc9Yigyu0GjLC+SxOw/qMhedSFbma7tU
WNeoDEKzgs1bzYxkfl7+xroFqpucv1rqpoxnGxsbcywTsX379sS/bBW1KoU1
oMLcwcczekGOosY1ZVXRa6RVo438SCGW+VE00iF66aWXfHpz0sV++eWX1RFm
c6EnazBhQ6Ynql9WGdZdj1XS0ZCnRj5snRz0P8+6SjignYZ7tuX+++93hBmX
ttVR/uCKai31Dh8+/L3vfc9/zlo61MUMwnzyySfr1q3z6VlLefKb3/wm1oBM
YcEV1ZjZu/Va7wlElZ9yknv27HEPY0oFJNVQrMxQ/oFfh6NHj2qvK86ZM+fQ
oUNpflMSRBLc5+XiZINm+Q38FlzfFTZMmvLruY6yJpPrKUnbUlqYPk+0FGVS
ywSz6gnkd6Bsayh54qQOcs/jB4EfwbPc1MEVASkYfRo2ctVdXV0ffPCBWmhL
OqifkSLo5MmTUQeKVQiYJEt4tnPkWuSKpMEW68VM/8I8OIS0AaQlkNW7nw5y
CEl2SXyfOKsELU+CK0KSxx599NG66RzcfW3kR85T/Yw0NoK4iyhSgEiTwLNy
T1n8wiRN39/97nfWvVcGBwfDjzUkFEHylRRfvb29S5YsUSsjOdXly5dv3Lhx
bGzMHDOUgkIa1eqxrr32WjMTNiq4IiCnLSevXVqw/dbmzZtPnDiR4EApW4zB
WUn/UU5A8oO61ZoUBdddd530PeXplo52AaV9FLP/snv37kx+WS5KLk0u8OGH
H5aLVUs/SQrJb88884wkTqwx6gzrFCkn5XmU09BaZVoQVPo8IAd6/fXX165d
e/PNN4fNjCADrF69WlJb7c/GlUcia86dO7d//34pHOTXtP3LsjqE49BSy7e1
tc39Ukc9cxXB66uZnEkzBlcEU5xpUi+TKXspb8NpqQzXWMg7uGLx4sVlyHgm
8938GbVJ5CKDY7V3mtqjX8it+8VYd61Rw7Mh6YdKia0V5u21FpTcFGl+SFEZ
a0ox2+CK/M4zFkdwhedOjomDK6SeUn+n4B1zENAWnRAHDx5M8DtByERUVpFD
qO96BBt/OIIWZtRi3pLFf8ovq7/T39+f4Ee0Hww2Ng2fizCqIfPgimotcYaG
htwhT1/5ylfefPPNcLOVkGf0QlbbprhNTExop1epVPI4kElq2H379v3iF7/Q
ClVpBkv/Tnp5UgOazUJzoadly5aZ45kNnJ6o1voRH3/8sbTk1Q6RXKNc6RNP
PHH48OHwugiuSOCjjz6SZJRDaGOACxcudIxsh8rW6miK4IpQmHqS2uqgXMMH
YeSWvf3227/85S+14Th3eVJXkRk74Jm9W6/1noC7/JQqRv64evXqcLRQklQS
ViodqXoSd/HKPPDrYFad6d/8CgTjZoODg/L4q4NakjhBTpBmZ5oOdR4Dvw2p
74oZJi35KGsyuZ6SPNFSO5gZLMjAUqdIzZJJUZbHgfKooc6ePSupLQmrPs5B
Tbpz5041qVsguCJw4sQJeTa1+xI02iXXSWpYu7pyv9S94CWt6vY3PQuBKOoM
gtoAk1O94YYbgmfBpxkcRZ0EufHGG9WTzOoQiVkLAUk3yaVSC0iqJmt55h1c
EQxNzLWxjnjnMXEQizzg8phrtXlQ2EqukH+y3n1z9rOvr6/u7VArd23SrciW
JFA2cVdGAtAok4pz/2rqS9rfq1/J6kWknIIrQmFjKcPgimrq1MvkBMLIiqgA
gPAckh0i7CtlGFxRbUTGk68Ex6o7qiMpqU0wSSKz8hhKIpjmnvjSGYPkc+1v
wg9XapKVBtkuL4DEzK0o/Lf+MX9K8tKGDRuWLl0a9NyF/LiUgWYNFRShBw4c
CPr+wYflf+TzcgKSzRLX2nnsNROcbZDh5dzCt0X8VwdNcDhJHEmNYBgkCOqQ
/5HEHBkZkX89deqUGXThGb3Q19enfivDuljV29urHkUSLZOGCgAAKAkzuCJx
MxIAANSljWabA+COoW/648D0lD5KFsC0kndwxQsvvJBHcEVjqXOdfX19UROd
27dvnzlz5i233JIsSffu3ZtHcEXBgo3vZ9ZI7nJvqmsGV8i3aNNimtOWF8jp
3Xn4GB4eVu/Fd77znTQBCUF3Puzp160p1M8HX0l86GqtIrvsssvyq/2DQ4R7
eHnuOZtYEBloTZwNGzaYwRU+NUsBSRTQFizdtm1bHkcBAACNor1YesMNN3zy
ySeNPikAAAAA/8/4+Li2aU6265oCaDG5BldcvHhx7dq1QVn0zDPPZPWzjXX+
/PkwsmJ4eDgqsuLChQvBS8GJ99EI41JWr17dpC+qa2/cB8ESjglBM7hiRkYv
UwPNy7G8gBTXTVo4NCltZ5C2trZk+3GUQX9/v5qv1L1msspXklzh7+cdXOE4
hzDAI9TZ2enT1BkYGFC/tWvXrvCfgliOrM5QPUpTZyoAAGClLX7+05/+lDY8
AAAAkJXPP/+8s7PzhhtuePjhh5966qk9e/YcP3481i8MDQ2pLfarrrrq/fff
z+lsAbSAXIMrTp06deuttwbF0e7du7P62QY6f/780qVL60ZWVJU3XpO9Zi5f
X7VqVbPHpWzcuNEMlnDsW6dNIgcZkuAKTGeOd+el/Onq6uIZKZIk/vr169Uy
qkmXdHbsNSP/09/ff8stt6ixBMls2rQp+P25c+dmsgZRsJ2K9JV6e3uDLVHq
fkWLIfGP9JBjqVWSJJf6oMnPyr9msg2rtieIZLCc1scAAAANIS2Wu+++Oxyn
/drXvvb22283+qQAAACA1vH555//8Ic/VKMj1q5de/HiRc+vnzx5ctmyZerX
77zzztOnT+d6zgCaWq7BFXv37v3a174mZdE111zz4YcfZvWzjSIps2rVqjCy
wv1hKc/rxhI4vPvuu1dccUUw9rJ///5E59t42m71gYGBAeuHtZmsgPwC00yY
zrQIJXV5ASlbgr9k65wiyS1oa2sL78jcuXObMbglrKHCkjb8pzNnzpiZLZkw
bKCjoyN9SS75vLOzUz3tpUuXujO/3Bp1pZHwZHxumSOJ5KBByFP6+BM5E21P
kEYt8QEAAHLy9ttvB6MigbvvvptVqgAAAIBsrVu3To2OuO66644dO+bzxYsX
Lz777LPt/2rLli15nzCAppZfcMXx48cXL14clEV9fX3+cWLlJMmyffv2IJXk
f6YinK85d+5cT09P4vmpM2fO3H///UHSPfjgg1988UUeV1SAQ4cO6aEV0Qli
Xby9UqkUfM5AeUhhEvXufPhP2UbEoS5t8Yq2trZmnA3XIt8+//xz7Z/cWzj5
kIQKwwbqhiPWJScjLQqzQnGvHCLHNb/iWa04tk0J/yl9XI1kHvUoS5cu5XEG
AKCVSCtrxYoV6jhtk657BgAAAJTZ7t27tQCJ+++/v25U8/nz57ds2fJv//Zv
yQIzAExbOQVXfPDBB0uXLg3KosWLF8fd4aiEwpfE58yZsyTa3Llz582bp74q
G/el8k8//TSMrPjWt741Pj6e0xUVQNtKPpgdjspg2mvCM4xl2IHpRtsTRH13
PuXaOEijUqmoJVVXV1dzTYhfuHBBDdpR633JckGQW7INrVRq2ED6xVVGR0fN
MIkg8aO+Igc1l63Ytm2b583SkijcNiXcUSV9Eglt2QriCQEAaCVffPHFE088
oQ7VStV/4sSJRp8XAAAA0GqkmS2NbS2+YtGiRXv37rXOMZ0/f/7gwYN33XWX
9hVpvQ8ODhZ//gCaS7gagzmDkNjFixe3bt0ajCEsXbq0BTYE0abS/CV4+VdK
+1mzZknSXXvttSMjIzldUTEuXLggGSBMjVWrVkXlrqmpKW29d0k6trXCNKeF
J4XvzstzFEzvZlJiIy6tvGq6xSukZP4//+f/hOff09MT/L1cV1bLVogwiTLZ
E0RdLUQVVUtqC4wE/PdwiUqiqrIaRvqIEa1pISnWXFE6AABA9VrNX//613/+
85/y31deeeXf//3ftaHaX//6140+TQAAAKA1bd++XVuDInD55ZdLy3zNmjWP
1/znf/5nR0dHMAdnkg8w3g5ANTU1NaZ49dVX+/r6ghk6dUa7u7t7eHh4x44d
lUol+GSCSZYzZ8489NBDmzZtaoHtRMPd1RNIsBKIFN1PPvnkY4899umnn+Z0
RUUaHx8P85hkLetCHJJE4cIgIcmETDNhmrtw4cIVV1wRPhTB3g3qDDjvuTfK
u+++q66K0Fy7OcipqlW/NAaq/1oOp9/FQ11oIpNcqq3wEJBbEBXWYm4IEisG
RlKjq6sr/O7AwEDw9wcPHswqidRtU4LTSx+tAQAAGuiFF16wDs+Gli1bdvLk
yUafJgAAANCazp8/PzAwYI2v8CFffOyxx86ePdvo6wBQLuYeDZ76+/sbfe6N
tGrVqmTpNqMWXNHo02+wqampSqUSrDM/48vonV27dh05cuRczdjYmDqHFXxG
shzxgYA8Pmr509vbK09T+Lykn95FYnJrDhw4EN6aplu8QsrY8OSlTFbL4e3b
t6csfqVgDyNPOjo60i+CYS5tFLBuWS4fHhkZ0T4pN+jUqVOxDqqG/ElVLo9e
T09P8Me+vr70NZQWUsj26wAANDtpnDuGamfNmvWHP/yh0ecIAAAAtLKpqald
u3bNnj07bmSFfEW+2ERvzwEoDMEVCUhxqm68Hlf4uut0Jmk4Pj5uxqiEEReq
efPmTUxMUIsBgSNHjqh764TPDku7NNy5c+fUGf9MoggKo63MEJJ8lT6yIlyQ
oa2tLavVq4aGhtTzlF+WvzETXK5r27Zt2kU5FrhwiEqi3t7e9JEVavzJjDj7
lQAAgNL6wx/+EDVUe/nllw8ODl68eLHR5wgAAAC0vs8+++zpp5+eO3euT1iF
fEw+LF9p9FkDKKmpqamdNTt27JD/Hjp0qFKpyH8PHz48NjZ2+Evh34effP/9
9xt97g0jiSZpEiZFKPyj438Eyy+EgiUsopYBmTlz5rx584aHh1kXHdCMj49v
3LhRHpCZNV1dXTwmJSFVpzpF3lyLD0j1dPDgwSVLlgRZq7u7W+r9lBE7WmxD
hgkiSR3+7CWXXPLrX/862CVHPbRUMeYCF/I3iZ8X+U1Jk1tuuSXDJAposSKj
o6PpfxMAADTWu+++e8UVV5ijtVdfffWePXuIrAAAAACKdP78eWmib968+e67
716wYIG6Xcj8+fOXL1++cePGsbExpvAAACU3NTU1OTlZqVReffXVvr6+rq4u
+Z+JiQn5ywsXLjT67ICSkgfnwpcafS74/8l9GR0dVZdTkMKt0ScVw1TNuXPn
sspX6lYXnZ2dGa7GoO3DEqR2R01njRrlEi4HMTIyksmmJBkmkZBMop5nc8Xk
AACAKNKrfe6552677bZZs2YF+4DI/w8ODma1kBcAAAAAAAAAAM1ramrqlVde
USf0p/P4eaVSaWtrm5HPJimS1L29vda1j6xhFeW8EdqGIHJFbAgCAAAAAAAA
AAAAAGh52qR/V1fXtJ0ul6QYGxt78MEHc0qB4Pc3bNgQhHBoC1nMnTu3s7Oz
tGEVVSOyItvFPQAAAAAAAAAAAAAAKDMzvkL+ptEn1bLC7aVEf3//K6+8curU
qYmJidLGVATktDs7O8NMksfiHgAAAAAAAAAAAAAAlJk6dd7W1jY0NNToM0K5
DA8PE1kBAAAAAAAAAAAAAJjm1PUr2traxsbGGn1GKAvJDGwcAwAAAAAAAAAA
AABAtRZfMTIyMrdm165djT4dlEWlUrniiiskVwwNDbFlDAAAAAAAAAAAAAAA
52oafRYokampKXIFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
gPz58+evuOIK8xc0RS6l7v8ufyySepdddpn7MhsVXOHYC6BR5BZ0d3c3ML6i
UqmokRVyPv/85z+tUTFdXV2evxmm85IlSyTnmx8YHx9funSp+uPJZpz9eS7S
Eovcte3btwc/JTfRvNIg2MmMr5iYmEhzXB/yfLmXImkIyV253mU3M7Kis7Mz
qmD3v0dhHlixYoW1WJPjmlEH+RX16tI6ofQFuxoxJb9mLbLkLxcvXqweN6oE
AAAAAAAAAAAAMHV2dmpzHLHWOkDxzMgKuYnyl9YdXmZ4LyAfBlcES6l3dXV1
d3cfPHhQ+80igyus7/Knn/oMgyvUK5VjNXxbkKmpqUWLFpmX3HBtbW2NKhNG
R0e1HBgsT2GNQvHZCEl8/vnnwb2Wu++YVx0fH9fCjXJ9zz3WIi2ewi2iJJM7
rvTw4cPaoZcsWZL3HT927FjKbJmT/v7+XC88irkYUbA8RVQUSk9Pj8/ParFk
5noOATMPDAwMZH2J/09OBbs8m+GvyaMqpbo1D+/cuVM7dLLNswAAAAAAAAAA
wHRjnY5P/wIp8nPu3DktHiZcH35qasoMlZkRZwH5IEIj2B8h+Bv5H21+ucjg
CvNdfs/Z87qCKw32Rwj/puHBFXLEN954w1yso+F6enoasnKFGVkRRgqFYQOa
7du31/3ZjRs3Bh9etGjRjh07HJsRDAwMaL+fYHMQHzm9y9/V1RX81IoVK4aH
hx1XKtdlXmnKo7udPn36vvvuS5Yh8yP5rYBVO0xmyJycSVDWmUEX4Qd8yihJ
Z+2Lt9xyi5mH5ae0j7lDj9LIY5EW4ZmHx8fHtY9ZF3UBAAAAAOD/tnd/O3Ek
ef6wuY/uwpcx24aei/ip1YPB17DalnpoTPc9jGawoWzv6Z7syS7CYGztJax2
FpVdYPDOnu3hSAiDELjEGy+pTmVnZCZZWVXUHz/PgeXGWVkRmZFBS99PRgAA
QE7hC6Tv378fd7sodnV1lXu9fWFhIbvrx7t37+IbOshC9+MNV4ziXf4ykxCu
uLktpIbvPR/M3//+96+//jrpyH/9138NeLZxbRLU6XRyOZOdnZ307sfL+6cj
pPrGhSG9vLyc/cji4mLZRz5+/Bj+tebBgxjFu/yhnbmePn78uKyIHC9cMLra
eraFgw/OP/3pT0mDv//++3AZBzzbfc5v2euQi0/ktnMKIyEeHnN9Romq72y8
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
lQUAAAAAAADuWa/XW11djUt1S0tLSnVfrDAqjo6Ozs7Owl/G3ZbmymrQVmX5
kp2fn799+3bcrRjIyclJ4XZOVmUBAAAAAACAkXr37l1hDfr8/HzcTWM8Njc3
kzHQ6XTG3ZbmrMpCTpjTkiERRvi429JcWSJuZWVlqtNQAAAAAAAAMOGurq4K
a9A7Ozvjbhpj0Ov1lpaWkjEwkzVoq7J8sdLFTMIYmOocgkQcAAAAAAAA3L9e
r7exsRGX6hYWFtSgv0AzE664UYPmt2YmXCERBwAAAAAAAGPR7XYLa9BnZ2fj
bhr3bZbCFWrQZCX73cxAuEIiDgAAAAAAAMairAY97bV1GpilcIUaNFkzE664
KV+VRSIOAAAAAAAARipdMF8N+gs3S+GKG6uykDFL4YqyRNyzZ8/G3TQAAAAA
AACYZUdHR3GdLtjd3R1307hXMxauUIMmNUvhitD+drstEQcAAAAAAAD3rNfr
Fdag19bWxt007tWMhSturMrCr2YpXHFTkohrtVr7+/vjbhoAAAAAAADMssIa
dKvVury8HHfTuD+zF66wKguJGQtXSMQBAAAAAABMr96tcbeChk5OTgpLddNY
gzYOG5u9cEXo0aNHj2amBm2abWzGwhU35Ym4aVyVxcAGAAAAAAC+BL1er9Pp
bGxsrK6uLi0tbW5u7uzsnJ+fNzvV1a2hN5I7hYsf7mBcqgv3dIruSBh4BwcH
q7eS0bi3t9ds8Y0vczTOXrjiZiZWZTHNDm72whUnJydhGE91Ii7ciKOjo+3t
7TCwl5eX19bWwm3qdrvNbtAXO7YBAAAAAICpcHp6mpZic4XLnZ2dvk51fn6+
trb28OHDpHSoPnL/Op1O4a1sVsO9Z0n1uXDxjTCiwj/1dbajo6PV1dVwtvDZ
g4ODEbV5As1kuOLy8nKqV2UJD2DFNNtXGTpcijCwk2m23W5/UdPs7IUryhJx
KysrU3FnQyO3t7cLB3b4n4G+fu8kpwqfCp9dX1+fit9ZAAAAAADAF6Wslp2q
n6+Iq5/Pnj0baeOJXV1dFd7QfnMy96/X6xUW6bLVuvr5itPT0+x1CJ/d398f
afsnx0yGK6Z6VZY7p9n6U2XobG6HlC9qmp29cEXw7t27wulu8tMFSc6nYmCH
21S/F7n5PzwyM3OLAQAAAACAGZBd5aDVaq2uru7t7aXVq/Tn3W63ztlyH5yx
+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
AAAAAAAAAAAAAAAAAAAAAAAAAAAAYCr8fyoPyCE=
    "], {{0, 454}, {2847, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{490.9000000000001, Automatic},
  ImageSizeRaw->{2847, 454},
  PlotRange->{{0, 2847}, {0, 454}}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
n8u+gZLzu2rVqhQlYB/Jyz7cd999MpL1M9sQpOrVDDAsd6wJkivkTMkQL5pr
F1sUqUcBRfe2TpKmeYNCMLeo9j21Lt9aZziiFMkVsm8ylK5ZjWuG3GVOrujs
7LT8sJzlHNO9sidXBJdP0iA0uuXc50MapdOJvd359ddfz5s3L+knZs2aFfa2
hpKXMNgcNkuT9cc//lG/VD/66CP5CcMXpamRBse+pgUXqU3sWskcXrrKNxxt
9Hl7OVNvv/12zf4u9QXrIXizFzsLlOOaNhcuXJg9e/b8+fOlAf/yyy8ti0uK
6NNPP120aJE5qomS89Xd3W0zQ5KutXnuuecs96RikVxR9Dx5Qa1NuuSKQs9m
0UFRvi5dulTcefcWo0YLWZpKc2wjB9vR0aEfyOeff24ev8s/Sa9Us/VLuj8S
TESbL4GMQ1ep/G1tbTa12mnoUcc7PgWN9TwcUS7JFQRpSQjSkngI0pAL/ba1
TS6Ect9ZmfdQ/tXmVSMHDhyI5hvLf8tfzF+RCvzWW28ps+s1SUCb11PeZidO
nLBsM0OTJ08+dOhQzS3LZSjD85qTJ7Hkwty1a5f52k/qmCRyuP322y1/aPjw
4bt3785x9lt5a4xl2yvt1S233KLsm+U0nZIjpKwuGJtcsWfPHkPkE33/o8/k
CgmxJCSzuW8bki712WefzbcfLyK54urVqxIp2R+aXP4yqrXf55IUXejixYt3
3XVX9OfsV2IpiBypHK9NDKaTFk/aSfP29eQKOSnKMkeKuXPnSiBkvxuGBiEY
Mcl+Oh2XtPw1jyt0+fLlZcuWOdWxSv8gPXaS1lB0Nm1m0Wcz9ua1HMWbb75p
n8shx26zvlZGxfXg1f6b6TXvzemc6pWHH9KTK+TabG9vN1TmESNGHD16NGNp
SxwiV6W35IpC62dB4VyO97lkHLd48WKnHZOyevnll+1ntlOUgNQxaTal8bQs
53Q+//xzGfDmuGONnlxR6CjAQ2/rKnaa9/Tp0zZTygH7TiGUe60zHJFrckWO
IXdpkytkh0eOHKksUvGDH/wg6fMLFy5MvWOKjMkV8mFzbBwlJ3HFihU5ZoY0
Sqej3+786quv7rzzTsPGH3vssXD4H1vycs2asyNCUuzbt28P91M2u23bNssI
bebMmbKrNQ/wzJkzhlu3SQptSANFhKMNPW9f9AVbdPDmSrrOsWPHmgvKs3QD
8MDs2bNrziena21eeukl+90wJFd4mCcvrrVJkVxR9NksOijKi5x3uYrtB60B
aSss1wbxGaMGhSw7Zt+UrVq1KpyDdRq/y+jG6YWJQfPl1IlLObS1tTk9gS7b
37Fjh+vZtJkkTDqiaiOP9TwcUfbkCoI0A4I0s0KDNORFuYk8ZcqU8+fPO31F
WQpAWYYiek85iXLrvOY+SL+5Zs2adBHU6NGja2ZuZCGt8RtvvGGfNBsl39qz
Z49h49LJbt26Nd2BB+S77e3thk4wtmMypw0k/dDOnTvzKlUl/UZ0dnbW/FZs
D2iT7aPfxQ5ffBPQkyvee+895VWSihkzZoTrTXlLrvjiiy9mzpxpv52oBx54
IMcXTuWeXLF///4HH3zQ9aAsp6dKVXQhiV6ULHSbylwcOUY50nRFFJBLxhwr
KuddhjCrV682b7OjoyOXeXsJXaSpTJdpIK2l9AI1xxo1E0XMP2HuLFyTKzyc
Tf3mtXT05tvxScdeXE5RoT14NVvDItuX6m05hi36h/Tkiprl9vDDDyuJZ/IT
7777ruu8gfzKs88+6yG5otD6WVw4l9d9rqNHj9pPRygef/xxmxmkFLFlSBrP
gt4Skq5ahiZPnvzJJ5/om23c5IonnnhCxnGuZ0p6TxkF2LRXHnrb7GUoUXrN
OyM6qUVSl2x2r6BaZzgip+SKdOGKDHxibyWUNrniJz/5iZI7IQdu+PqgQYPy
aoWyJFekqJnioYceyut9x43S6ShF9/vf/95cq4cOHbpv3z5DyctF53SbQHrt
YD5BAoC1a9c6BQA1u7x01SBQM4DPoqBwtHHn7Q8fPpziTAXNkc0OewjeXEmw
p/zQ7Nmz7V/bkbvTp09PnTo1XREF5AyaJ5TStTa5PBntYZ680NbGNbnCw9ks
OijKhVy5cv0WVAL+Y1QpZCkr5Sngmp5//vmb/WQA4jSsMJdA7P2RFFMECxYs
sHw0QD4mH3baeEj2auPGjeYlWfzf8Sl6rOfhiDK2zwRpZgRpNgoK0pAXZaGJ
W265RaqT4fPKYhf6KhO9vb2LFi2K1gHzwvX655VVAhTyT0n31+Tqvvvuu1et
WiUfkMs5+vLKKLmmPvjggxRlVZP5vsyYMWOWLFmyut+9994b+zHZt6Tyl40n
deLBa93kkIONy39EX/qm/4Sh4dI7Jmkw9bSB4JVqEilF3w2kkEYjr7ck6C/4
MFeSaly9Ctg87K8seaG8+KYaV0rR2RWpddJDST2MVsKtW7cmfb0S9165Dz/8
8A/9uru7p0+fHv3wAw888Ifvik1GMvTgt956q4wIgtoidTL66rEoudLzGgJk
PCIl3pZmR3klfXhck/sZgv+1a9fWXACwVEUXknJTfuX++++v1zvoDYPK4CWD
q78lpWRoJczT5sp5lzFpNMlKfihoUWVPgvoQvL5HKk9YkTZt2hTdglzXEkFF
a5pUS70+GBrb4O2oQWMr13j0BY5RNW9PJ3VkwXvbly9fHjbmSR2ZNMsff/yx
ZdGZm30/Z1O/eb1r1y699OTiDa7ipIur0p8llf1tj7pCe/Cqcf5HjjosZ0PD
Ynm/0sMPKWdz/Pjx0U1J4UgRyU9ITZ44ceLgfnqebdKYN+xDzTsZVURyRXH1
s9Bw7vr163v37g3at9/97ndK/LZy5cpoAyjlFjvPI0P4pHzR6IUQtr26X/7y
l+buKeknlDbH8BM2vbkr+0ZAdjIp0oh9Bip6XmxOTVL3ZCNLJ6gHqFLN9AIJ
XgtrHgWYO6mwwIvubdNR+tCf//znSi8puycFtXv3binDrq4uOX2xizDbJN0V
V+sMR2SfXLFixYrYcEV2rGbI/cwzz+inJnuQ5kTGg9IWSUN35MgRGRjaZFkM
GjTo4MGDwXfNuRmui5MkSZ1c8R//8R96/Ba8HFlOjUTFSfVKPvPqq6/msvON
0ukoRSdNSvT/ShgTxN7hVSb/Ed2g8nX5pD5UDKdHknYyGKfojV7YoiaFFubz
lRTGKxFFGJLpnyzorl9x4ejx48ej9UrJD58+fbqMmm0qXk0Zq7dSbeSMxK4n
EDSn5gvW5h6Wh+soBeUxuqDc6vI2+apxkkeKKJzkCUrJEOpLWGLom9K1NnK9
hHVJiij6FTmtUv2ilU0uAf13PcyTF93aOCVX+DmbRQdF2RkyK6KxtPzvlClT
Yk/KvHnzLl26FLvxusSoetRdsegog0Uy9emFMCgyjFkMp0af+X/22WeVn5At
r1+/vqenR67NLVu2zJo1K/aHbB4NMDzxFL2KDZeY/NE8RvZ8x8fDWM/DEWVp
nwnSCNIC5QzSkBdloYlKrTUBlNWYY1eZUKroXXfddfHixaQNSishtdRyB5Ja
ZmmT33vvPb0HkUijq6tLX3M4x/v+UbEXizQ40rudPXtW3ze5/PWLN2la/uOP
P9Y3PmfOnCNHjsSuDyN/lH+KXbzLkO6idExS1P/8z/8c/l9pTNra2qTORL8u
ByIRV2zC2NNPP51LACkbkX2Obrnm8iZ6xQ4pa63olAqsvyvHsA6DtITKYgIS
qe7YsSPaG9ZMrjD/Vs13LFYTenA5m4sXL5aar58UqZ9SS/VB1iOPPJL7Sy5S
HJH5MTepe1IDlV4m6YiSlqYPlbboXnzxReUnbGpCQSR40CcGYxu6QFJTbE52
SjrvEuzJ1qINvjR3Bw8efPPNN81bsMyJjb3nKzsvP6oni8puSO+jv9dAtrB/
//6kn5B/Un5Ctp/06k/5UWmU9OFqdL3iLAfu52wqN6+VziV4U6TS90njKT1+
7FsDZMSU9EOpFdqDyx9j08KTOvGkhqXmrTo/P5SUJS6nVdolZX5G+kSpY0oT
LX/UR3NSyV944QXl69LqStsrLbDhCZHckysKrZ9+wjmnw4+KnatMuhAMZ8cw
TyWdo3SR0Q8H772NXYspeJOyfvg1e/MU9JbZcOyG81LzKbB0pyYF107QvM6Y
FMUTTzzx17/+NVpRkzrBirGTCnjobdMxhJ1SV1euXKnP9svuSSeudwrS0JkX
GfNT61InV0hLGL26Z8yYIWctOiwKGgGpGHo/Ig2debidLkhLTUpvwYIFNZMr
womIa9euff/737f5ZEapkyuiKcfBq70/+ugjJTyWChP72vHomop5KW2nU01+
6vD222//05/+pLRpPT09SqtiKPlgV5XpEdnz1atX6zv5k5/8JLzeg9d8K12/
hBYSCOkxv+Fh/1dffVX5IWknZf9jIwrZfuz6z9HHQHLhLe6tas9IZlzxJkmK
6m1+1nXWrFnSBurNaWz1DjJzDL/l5zpyJZtS7kPZlFtBgkVjlJ2JHXqEkq5H
c2+VsbXRt2Dzdgw/8+RFtzb2B+7tbPoMilJIOu9JsXRS35R04dclRo0WcjAN
qww9glOp79iPf/zj6BA7aGOjlT+p2hsWBDaPjOR6kQqg13/ZWuzK/9u3bzc0
sPoAOZB0FSdVafNy5Z7v+HgY63k+Itf2mSCNIK1a1iANOdI7C3MucWdnZ/TD
sQsIKA/+m1fDUN74YI5t9M5dKtuGDRvMNzFjF1bK/dZnbLdb8030sdlieiMg
hfzYY48pH4u+WSyJtIrSgyuXpCEzwZw2cO7cuaQfii3kmi2MPeWxfX3JFIWy
JEuUuTHXS0C/S5JUSpbrVBedXCHXrzS5yr7JlSVlYm6H9UWKcnyyKZRjcoW0
BnKxGK4CqST6PSxDdk2Zi05fXKteUxNyUSsZcXIienp6avby0kroL3Mx3ByM
Pe828VvSFmzm7SWM0Zfqkp7OnEwbuwhn0n12vT2XQOuLL74w75jUMaUyG0bo
9gfu7Wyab8cbWs7Y1eqUJwqzK7QHj21YpJx37dplfnfep59+qm9fhv9JtcXb
DyWdzdWrV9s8ZSyfkQDGqbTND87knlwRyr1+egvnnA4/FDurU/NCiF0w1jAN
Iq3ZiBEjooUcfRl90o7pdSavDN5A7CRDzWOX3e7q6tJr5rJlywzXQiMmV8ya
NcswJxz73Jz55WUeetvUDGGneXHa2E7B8FCkt1qXOrkiJBf466+/nnSdJq0a
bZ4M9JxcIWomV7S0tITTaPIfI0eONHz4yJEjuexV6uSKkFxK0t4m1czYBZlt
3tzqqrSdTjWh6OwXW04qebneJYJK2knp2mK/Vem/oN58882kU6YPYJPm0yTY
kJAj+kkJzs2tqPyo/rKnfJNtvIWjgYabt5e27q233jI0p7ERr/Ka2ihv15Gr
2KCiuNc7minBZ6W/BbBJ05Xqp98TMZz9jK2NvgWb5AoP8+QeWhv7A/d2Nn0G
RSkoj74GzLF0bAsTG4DVK0aNnlNDbCNVS3l1eEgCnm3btiX9XGysntTAGkZG
5pdBx74D1Bzo6nfhba7ic+fO6YtdyNWRdA/O5x0fP2M9z/ewnNpngrQqQVqJ
gzTkS1mrzbDQhHQQ0hJGPxz7yIZ8XTZiWauV+mxIy9fbTJv52ID+NLp0xPZ3
6GxIA6i0/zb3y6pxT8vqLaf0Sspn5syZk5SUq5CzJpFM9LuGdJcsaQNff/21
7Llygvbu3WuzkzVJCDR27Njoxl988UXD56O1Ws51tEUyT/YqPxQb/8SWkv1y
KEUnV+gxtuVYoxpXG1taWpIeYE8nr+QKy1vAeowqlfnatWuxHy5t0cW+5sbQ
fReqo6ND2ZPgFYc235UmUVlSxtDmx553p1xN13n72Hu+Nvc9qwlLccb2fdK8
K0Gp5ToMemVOemrS/sC9nc0st+P1J/1vu+22kydP2uykpUJ7cH3+x+b1kYHY
JOekW3Xefij2bNrf34xtaW2mHJPeJFJcckXu9dNbOOd0+CEpYWWeyvJCqMad
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
XnzxxehnLN+2UBy9UqVbttr+yZcGSq5wKgo9dSo2wPPW26amhx+uG1cqg76a
q+dalyW5winkVqICc5UrW3KFtMyx3zp27FjQbrf0W7hwYY6ZFdVsyRVOHb0y
vZnvI7TVEnc61biic7oZp3/dsvvWe23LRHG9NY69P6vfFLBZB7tQPsPRQAPN
2zsVhTL1mnTB+ryOXJUnuULik/fee2/Lli3Lly+/4447Jk6c6HqPW6lmSbdR
qplbG30L5rba2zy5h9bG8sB9nk2fQZET/SaO62UrhSYlPH369FWrVkmQI+c3
jG3qG6NWjItUR+ktjP3KAEodSOqa9b7Y9STqAxb96PRQIcVVrP9QbJXwc8fH
51jP8z0sp/aZIK1KkFbiIA25UypVbM+iNI/muw96+xY7AlV+19CH6mn/KZ5a
1Vv4FH2WTk9JdZqT98D+tpR+4uzjk2pcCeeYXKFvPLZSKaFgcC6Uu5lJJ0jp
aJICAL2UnJ79KTS5QlltO112tJLHUkmVZpAkl+QKp0WxLPNFy1x05UmuyM5+
jKmfd9dm32neXk99T7Hwjr76jd6MJK1c19PTk1cCqrcbFvZnUw93ndYh0SeO
8roXWXQPrkTd6aYm9PkTfSe9/VA17mxazoFU+98/m3E/9SFhEckVJamfCqcs
I6cxpv4IT7qHmpU0xdjzq59B+b9PPPFEvSJnPSUgxfxPNW7dhqRRRgMlVziN
AvSvx5aAt942NaXcXDPuqnGXqhK4eq51WZIrnEJupQVorOSKjz76yPz1vn65
71WW5AqnxwCV+b36Jlf47HSqce/kckon1kvecnxn+XYPnd6cxk5H6yvQipkz
Zx48eLCIumrDZzgaaKB5e6cL1mbVVs/XkavyJFdkZ5+clrG10bfgtOx8pbB5
cg+tjev7UFKzP5s+gyIn+tM6udzaCNQ3Rq1Y3+LUW5ikhyh1lnXAsi820DNV
9LGV8qRPJe0csk3/6+eOj8+xnud7WE7NFEFalSCtxEEacqfcEIy9q6iMDWve
fVDG73ozqDeVhsqfPUatxt1DyWU9TH2ZTfs+vVDSZEkprV+/fty4cUqjYZ9c
4dT0pbhv7kTpCGL7ViUUDPZfadNkACLDkJrbTwoA9MN0OuPFJVdkzPoI6bF6
jq93ySW5wmmW2+brJS+6Rk+ukLZXAksJCaTNHzZsWPQo7Gf4ky5bA6d5++y5
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
qVytDZdc4SGcc92r4oZ+5hH0qVOnFi5c6JphMm3atEOHDlmenZpIrgg1enJF
XsVIcoXNJ7N/neSKAMkV+bJ5G1HzJVdU+28ybtq0SXmQsKbhw4fv2LEjr5RF
5u2jGnrevrjHQ3J826yrvr6+119/3XVhRolRf/aznykr7zV9ckXFGJYU1No4
FZ2fs0lyRaAkMaqC5ArFQEiu0HvehkiuqBKkfYsgLRcFFSOyU16+o7xNbPPm
zdHzaHioP0q53KLrOylLQ5s7KVauCH7F/ubXmDFjZNjS3d19/vx5OVP2e1j+
5IpTp05FM5OVRVSUG9DKYSrVOPruG+WtEJMmTYp9TXYuh9mIyRWsXFH3olOW
Xqm4vxTM5ifuvvvuJ598UsrHsPq6NCk7d+60vBcmH5s2bdr69evl2gzKwX4k
2DTJFTVHo319fcePH1+zZo1TsC1ddtKixPYH7u1sklwRILmC5Ao/4ZzrXtU3
r/7SpUtdXV2zZs1S3khrMGzYsI6OjlyWbyK5ItToyRWsXFEhucKI5IosX6+p
zJ3OQEiuCNy4cWP//v3Lly93Whj/l7/8ZS4v3mLePqqh5+3zmsRTXrxbsX5M
z+knpk+fHoxPDa8alEtj7dq1lnGmXD5333335s2bT5w4EWzT8lZstVmSK2x6
5NxbG/sD93Y2Sa4IlCRGVZBcoRgIyRUNunJFiCCNIC0XrFxRZsqibTt37gz+
rrc23d3dNhtUEjaiX1TCbPMj2PoO1PGRbV2hb2wPfPXVV3feeWfsNSUh5bhx
45YsWdLe3i5X7tmzZ/WstmZKrtB/Inos0fZNSRCqaqkX0XcoS82MbtOcUd9A
yRXRBJKSaJTkirIVnf5KTbn2e3p6cvwJKZboEHX8+PHSKehRnOGdcfL3lpaW
VatWdXV1ffjhhxcvXtTvfDVKcoX+5iAPpLjkR6XzlT7OJuHhkUceuX79ur4d
+wP3djYbKLkixx48x/GLvnZNQckV5h9K+jnL06Ek1la0l9DZ0DuRBkqu8BbO
uR6U3lFahvr5ksqwb9++J5980maBX2mj9u/fn/1Hc5xCVEZSJFfYJFfUpbc1
U8otxVvY5PPyrehGlNtJnmsdyRUBkiuyfL2mMnc6Aye5ItTX13f69GkZz06f
Pt3mFuQzzzyTPV/RczgaYN4+qi7Bm4Ee+Y8YMeLo0aM5/kS0oKSqT5kyZfv2
7UoILXVbouukC2H48OH33HNPW1ublN6JEydi55kbJbmiLvPkebU2lgfu82w2
SnJF9DnW7Eoboyr8J1ekK2f5ivIIVXTZ9hyTK5QnRmMLpC7JFYWO9RoruSJE
kJYvgjSUh3JnLby/rDTRTo9LK53pqlWrgr8rC8TJxwwb0Weocp8NyOLrr7+e
NGlSLg1ULDkLy5YtUy5JOVMPPfTQ4cOHbe5KNFNyRVVbgCKsqMrdZxlYnT9/
PvpF5dn/sIuXrz/22GPRbZpbvNImVxRdFXNRzuSKhig6pfuuWC8iZEO28/TT
Tyvb17OMvvjiC2UBjUr/GHbDhg1ffvmlhIiuR1Ge5IoXX3wx48/lS0r+1KlT
7e3thkQLCWj37Nmjf9fywH2ezdImVxR67esppqlHE3KilTMVbce8/VAg9enQ
2//777/fNQ9fPi/fMu+h6376qZ8+wznXg9KnfQq63W/v4sWLcmbNiRa5DM/1
xyrTHbv9aGWAJ1eUrbfVKeWWoprpRRHN6K56r3UkVwTMyRWumX55GZjJFZ47
nQGYXBEldVsK3DyHn8sF6DkcDQzkefsSBm8K6aRaW1uVU5njTirv9g3oz8hI
nztixAjlY6NGjZKBdrA0XM0fKmdyRQnnybO0NpYH7vNslja5wr6FTKG0MarC
f3JFunJWDlB5QfmNGzeWLl1qWSHNbHoEP/cyfI71GjS5IoogLTuCNJSHkkQR
PmKjXDVO14KSsBHMoiudrHygZg+l3E/PNzMzIz0fW5lAy+jo0aNK9Dhs2LA3
3njD/qaqfVJZQyRXKIcTJlEouRP6fWEl+yKMauTrspHw7zXTh0qbXKH3lSnu
WxWtnMkVDVF0+gSd+f01Ti5cuDBjxgyloKI51YGtW7cqn5k6darT20ksH+yt
ek+uUJavEbF5C3UhbZccy5w5c/RgO3aZHcsD93k2S5tcUWgPri84IyUs11qK
TSlRkPJKLG8/FMhyOpThlTRiSW+3SaLnwzRKcoXPcM71oPQ3T6V4Wr8gwZI+
Gzdu1F+cFFs/XemP+YSp4E70QCLp+cEBnlxR5t42oJRbiuZUb6aUSuW51pFc
ESC5IsvXaypzpzPAkyuiZHgrgce0adMqmuzLNnoORwMDed6+zMFbSJkQFnPn
zs1rmkV5ZXAlbvVa/UEq8cADD9ifDr1ilyS5olrueXLX1sbmwD2fzdImV+hD
wnDh8exKG6Mq6pJckaKclUyD22677eTJk9EPKFNq+gcs6SMs/aFRP/cyfI71
miC5IoogLR2CNJSH0qqETbrS1Dtd0UpdCmbRlXsZNmsE6Y2zftevXvRUwxQ3
CyQ6kgBGWrbly5dv2bJFAozLly8H/6S0WhX3FYH00mvo5Aql/oQDKCXCjA17
lMAmqMzKF2uuUl7a5Aq9KjqtM+NHOZMrGqLoYh/N6OjoyGXj0koo8x56Cejj
I9dV2fVyLk9yhZ6ib15Syb++vr7t27crpyn2xbU2B+75bJY2uaLoHlyJoNLd
C9avfT1w8vZD1WynQ7rm6Bf1KdCa9Eu1UZIrfIZzrgelNwi5vxQ7uy+++EJ/
qUr24YCeYZVuUWV9hj/pHXMDPLmi/L2tUm4pmlN90lupqJ5rHckVAZIrsny9
pjJ3OiRXKCTeW7VqVeW7UrypTeczHA0M5Hn7hgje9Cc4pH/ct29f9i1LCP38
888r1VgvAf3uxu233y69p/0P6eVcnuSKMs+TB+xbG5sD93w2S5tckcs9OxmH
jhs37p577pETtHv37g8//DAIIEsboyrqklxhfoG4Tr+drbdRyrrulVTvDtAX
Io7tf/3cy/A51muy5IoAQZorgjSUijLxu2fPHqWpcZ0GV7qS4MpVhpk2TYQ+
MpVrOfZd8wZXrlyZN29eGD+0t7fv3bvXdSOxlMsqxXhB2UJ4W/PatWvz58+P
/lOKbGSl/TS0Mw2RXKGvLhjkSERrb1IfEZtHoZRPzbvVpU2uqMa9OSLFzfej
R4+OGjVq0qRJUvfa2tq6urqOHz/uupEk5UyuqDZC0Ymenh7l3npLS8vZs2cz
bvbSpUtz5sxRDv+xxx5TBg4nT5687bbbop9xXd9DH6mVJ7lCWcFGzJgxwzWP
N3iYYsyYMdOnT5eKrdxnr/YnSJw7d+6//uu/nnvuOakk0h9t377dfvv65ZN6
cUXPZ7O0yRXVInvwatzjWilyzvWpCX1U4u2HqtlOhz7Wfvrpp53mgvQVVxoi
ucJzOOd6UHpklW7qWzqpESNGTJ48ecmSJbK33d3dSpKeVCc56t27d0sLOb2f
Uy6TXs+zNwX6saebZ5CYwfLsDPDkCj+9bRZ63Oh6gpQBtV7ynmsdyRUBkiuy
fL2mcnY6gaZMrpBm8IsvvpASkAOfO3eutIdOT4bqTXEuM94+w9HAQJ6393wd
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
6af6a4AMDYu3H8p+OmJX4Onq6jK0tNJ3x2ZWVBokuaLqN5yrxgUbNd/CHNs6
SQMiJWyO1eXCnzx5svJFqVTSaukf1s++zQBTdkAa8JozganFHvvtt99+8OBB
w7ekxr7++uvDhw9Xvmh+2shbcoVrJ+gtuaLqpbdNLTa5olLrNpBU0TfffFOp
DOY0G2+1rpzJFSmCtIxIrsjy9ZpK2+lUmze54tSpU9JiRD8mbc727dvN41bx
ySefKAWY43KL3sLRgJ95+xTV29u8vbfrKKPYjAj5ixypfSyXFAbIX5JeZx97
19LmpSRyRcyaNasSRzZYUGtTjcs8rPmKdg/z5B5aG5ui83w2y5xcIY4fP650
MVIack7NF5Q+po5NdC9hjKqoY3KFePzxx69evWrYN/uEh4B+Fcv/bW1tNfxK
tX9qTv8hwzIjPu9l+Bnreb4749Q+E6RVCdIaJ0hDvvQVd0PSDH7zzTcpttnd
3R27QeH0vqrYxFoxatQoaX71u4rSZEnXHxtESQdkfxfSUuwdT4krXnjhBb0P
lS6yq6tL9lz5vD7Tro/KK/1Zo3JosVeilNJ77703bdq0pDKvuKQXlja5IrZY
AuaKev78+SlTpqT4YshzKelPiC9evNgckMTmEwq5Fv785z/rPabURrmC9NqY
/W2YuRyRt+SKaumLLhS7Nn6lvzGUhsUcgVf7h6WPPvpo7BbMt4Rik5rk9ElU
H/t5afqkAdSHVzanI/to9OTJk7fddpuyEel0DEFjbJp0pb8lf/bZZ/UsIPm8
BJlSaPpXDLdNYxcylUZbmu7Yfevt7ZWv6NUs6WRZFp3Ps1ny5IpqYT14QAJg
fSRS6W9YpCvXh1fyi1Lf9KKumRfq54eynw6pt1J79R+V6ifDRqXllJ1ct26d
jPj04wo0SnKFz3BOXLt2TZlsCXLwzI93JSXvyfmSYb59FTLMcseuPyznd+3a
tbGPHErhfPHFF3qf5bQ+rQ3Zmj6TIzvW2tqqhyiGxr/mJIO35ArXTtBncoWf
3jadpOSKoD5Ic6RfRElhlflZnqqvWlfO5IoUQZorCZ+uRUgjY0iuuHz58rXv
qjn5mYumSa4obadTbd7kiqRXhkkne+TIkdgKfOXKFdkHvQDzTVHzFvdWfc3b
p6je3ubtq76uo4ykgkk102tFxTgKDgU9oB5ABgwVWF/3rFLrsRQJR2WDhqGH
/TOqKVravXv3Kr28DBb2799v6JI8zJN7aG1sis7z2Sx5ckVSLJ10QSUVRdLz
NWWLURX1Ta4Iylm/MKUkYyfuar52NnZ6JNi3np4e+4noirE99Hkvw89Yz/Pd
Gaf2mSCtSpDWryGCNORLeYtHlNPrzKL05ccDTu+bDsQueRTWzIkTJy5fvnx1
v7lz5ybdA8p9Fi4Um4+t7JtEg3fffXfsx2KXnDUMQ2SbTz31lPTdf+i3ZcuW
Bx98UN+ytPbK/eKVK1fGzuQ3UHKF/gqqkJSw4YtSnkuXLo39omUN91xK0lvF
7m0o9uZC0vLplf4GWWqglJLURvlpiQmTxhqWy8q5cj0in8kV1XIXXSgpUg33
U1obOczz58+Hu9Hb2/u3v/2ts7NTQqakL9ZcqC0pDJNykOtRmqCgLZJGSSKZ
6dOn6z907733KtOMSeFB9tGoROz6AqRRsaFd0uxEYMyYMUuWLAl6GemMbr31
1tiPmdcPl5+ILuiklKTEdWFHJv8h/ze2mhl+wrLofJ7N8idXVIvpwUN6/nlI
YpV77rknaFjkV+S3Yq9Q+ePWrVtrNiwefiiX05GUyVaJXGXSzE6ZMiWpvQo1
SnKFz3AuEPv6nlBSy5B0IVT6q5BE12HrZKhC5vRC/UmrkDSq4U8EwXxSM5t7
Pxu7OEZIqqW0+TaNf801rr0lV7h2gj6TK6peett0DMkVAanh0jRJ4QQXwvjx
42M/NnPmzJrjTT+1rpzJFemCNCcLFiwYFJGUWSH+6Z/+aZDm1VdfzfLrlpom
uaJa4k6nWZMrqglrrwWkVFtaWoKWSkiLOm7cuNgCLGJyzFvc62fevupevX3O
21e9XEfZmfv9kSNHrlmzRroz6R3Cew1yNk+dOvXSSy8Zko1rrgD58ccfx07v
SIlJvC1HHYTfXV1dsikpH71k5s2bF30C0bBaY/aWVs88VMTGZh7myYtubSyL
zufZLHlyRdV4TUWnLg0XvuGx07LFqIq6J1cE5GoKy+Hee++NLa4hQ4bs3Lmz
ZuuqL1Qbil5i5olo85Ianu9leBjreT4i1/aZII0gLdAQQRpyJGdq5cqV+nnM
8iLUpC4p3WV1+fLlBQsWGK4asxkzZrhmdNiLXRLWklyMH3zwQexmDaFyTYsX
L5YmYvPmzdE/3n///bERVAMlV4h169bFHnLN5VBin9e2r+GeS0l/JZYiaZZG
vqgsQmXPZgmy1FyPyHNyRbXERRfV19cnfashCd+VNDI24YQh+cRMYgnZ4QsX
LihDhqRl7bOPRiXSe+yxxwy7lBRBXb9+fc2aNTVv6SapuV5iNVurXqk1SrUv
Om9nsyGSKwrqwUMSe8Rms9iweT+Rtx/K63R88cUX+hJ5NcmIQ3mjTaMkV1Q9
hnOBnp4eczsWW3RyIbz77rvpLoSK3aqSVeMA04Z54ii1LI1ApT/7xeZGv7fk
CtdO0HNyRdVLb5uC3odK1+baV0rnaLlop4daV87kitRBmiXpyFpaWgwJFTWR
XOGqtJ1OEydXVI3ZqjamTp1a0OSYn7jX27y9a/X2PG/vJ3jLLmO/r7CfeEkd
dkrJy6mXMcuECROif096oCB7Sxv77s6opEruYZ680NbGvui8nc3yJ1dU+1cw
kKsg3TVVM1gtVYyqqEtyxS9+8QsZhDoVgtTVjo4Oy1uise8TsWTzUhj/d3yK
Hut5PqIU7TNBmrl88kKQhrLp7OzUT+WUKVPOnz+fepvKbHBA/phua9I+t7e3
u1ZLudCWLVtmfi47FxI/mJdx1s2aNevzzz83bNOQxJhk1KhRb7/9dtDcKW9m
SVozpLGSK/bt2zd06FDlqG2WQ4l99410K/rKVLH8Z3smPeta8+vnzp1LevuD
gVxZL7/8cnFr4boekf/kimpZi04hHfQf//jH2LXgnNjE4VEffPBB0kPHSebM
mRO8JE5fOmbRokWx77nOZTSa9GhDzW3KSZT2M0XZzps3z/zWnlDqgbAUprm/
cCo6P2ezIZIrAkX04CEZjkn75nrSZX8OHTrkdBSF/lCOp0NCMgnMLPczaKn+
+7//W+lDGyi5ouornAskrS9qs59yjSetvWzeVemVLKePDh48mCKPUfrZHTt2
FDq0jH2jqJlUTokZLIfkPhs0p07Qf3JF1Utv6yq2D7VPuw1eHeKa/FNorStn
ckU1Q5Bmg+SKfL9uo7SdTnMnV1TT3o5x6rnS8RD3epu3d63enuftAx6Ct+yk
cX755ZdT32IIOWWem5/BjxVcIMHrMvVVc5PWvM2lpY19HYPNNj3MkxfX2tgX
nbez2RDJFdVU11SwZr5lsFqSGFVRl+QK+aJTtkCKaRzZ/gsvvOD6DJ004z09
PTWb8brc8Sl0rOf/iFK0zwRpIYK08gdpyEvsW6GXLl2aZSbzwIEDyn3wLEth
BCQ0WrVqlU1MJW3Ffffdd/z4cW+1UTrE119/fdy4cTX3TT4jn7S5rSmf2bFj
x8iRI222KQONaKSkv5lFwlH9JxorueL8+fNTpkxRjt38FGcgdh3a1tZWy+pR
l2zPZ599Nim+km762rVrSd+Vgzp8+LA04DY9plxNEmMX2n2nOKK6JFdUy1p0
OqnwMh5MvYSFhEYHDx50bRul+ZUxeM0flaKTAlRe3Kbk740ePTq4U6/IazRq
uFcuu7d3717Dd6VsN23aZNPqVvoTtGSfnVJrpNilY5LuyX509s4779T8Cdei
83A2Gyi5olpMDx4K3ia5cOFCm2vW8ox7/qF8T0fQ0sa+9lfZw6Cl0vvQxkqu
qHoJ50Lm9BXza9SkPkitsMw1ksPZtm1bzQBMIZ+Xb1m2sdLPyg4H86JFkyFP
T0+PzbHL9SVXWWy7l8Rzg2bfCdYluSJQdG/rJKkPlavp17/+taFFDd6d6lQZ
ooqrdaVNrqhmC9LMSK7I9+uWytnpNH1yRbW/9OQCtLz/FYT0En15mBwrOu71
Nm9fdazedZm3r3oJ3nKR7kmWUJjq70S+YjPuDjpZqbfRC0RZNTfpyaxcWlrz
EzS33XbbyZMnDV8vep68oNbGteg8nM1GSa4ISHG1tbXVPO/pTnoZYlT9eOuS
XFHtv0IlQFV+XSHX7yuvvOI0TRR15swZy6t43Lhx9j9Uxzs+BY31/B9RuvaZ
IC1AkNYoQRqy0zM5RWdnZ5Zt6vfBJ02aZLlcqllvb++BAwc2bNhwzz33RF/S
JN2Q/MTSpUu7u7stVyTInVw1p0+f3rJly9y5c8eMGRPum+yn7O3mzZvl6nOd
G5SoZv/+/U8++eQdd9wR7Wpl+/Ir8lvyi/o2pat9+OGHo+U/c+ZMvVgaK7lC
f2i6kpx1bP6iNL+WN9yr9Sulzz77bM2aNdLmK73e1KlTbWq4fEauhZUrVyo1
R2rj9OnT169fL9dR7CPnxbE8onolV4RKWHQ6iQQ2btxov2x1ELB98MEHWW5P
XLp0qaura/78+dHXw8nZnDBhwpIlS+SfYmumDLWU/XzmmWf0uDHH0ag0gG+9
9Za0kPqL/Hbu3Fnz69JiyE/rLXlwpHL40j/K8CdL6BvWMan80Z1M9xPpiq7Q
s9lYyRWBInrwKAmS3333XaVhkZKX8pezIDUzY6Uq7oeKOB2yA59//rmUqpRt
+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
5ApL3EVFXZBcUWY0Cyg/pknRrEiusEQjUFpFnxoZZZvvF4j1/aIz28HUt3zm
tddeCz5z+fJl+Quz38iCgUPzIbmi+RAwNBDprNva2lpaWkaOHPmv/Qb1+16c
cHVoiQc6OjqU+zvBF+WP8k8DJE9AQpoFCxaEpTfoW3rRyR/DMpFilG/J55UP
yF8WLlwowdJAuE1GxSsnoqxGESYmhblJSmKSCMZfSnsSfDIYoJGb1IjkfCnv
BJG2tLifc+2Pgqy5gnamzJrmwKXRiNYu6aNpH7whucISd1FRFyRXlBnNAsqP
aVI0K5IrLNEIlFbRp2bhwoUyrDZMesfOfitPPYQT4C0tLQcPHuT1nbCnDBbM
lDZcibGjV8elS5fa29unTJkyePBg+afhw4fPnTt3165d8vekr6cI0S9cuNDd
3b1q1arp06ePGTMmuqlbb7116tSpK1eulA9Ef9RM2SV96CSb6urqmj9/fvTn
5L/lL/J32R+n/Vf09fUdP358w4YN99xzj5RYsPFhw4bJdb1p06bPP//85s2b
4YeVE5fUvWZPrpC9kkLYvHmz7JWUarSE5S/yd/nX4iY8jx49OmLEiOj+P/30
09FysHTgwIGhQ4dGtyMVw+aLZ8+e7ezslPM7bty4oDIHJ+WOO+548skn5Sxc
vXrVaU+UPiWc1rtx44b897x582Tj8vchQ4ZMmzZt/fr1p06dkuNVvmWmXEfZ
60Bvb+++ffueeuopudDCmimlIWUiJbNz504pJacNKnIv5Nj9l01JmxDuf1CH
5YjkuORfC5rc1peArtnLHzly5Gc/+5n5k0Ff3xw3Ggz0m1xJguQKKZBDhw6Z
C1w+KXFX04dJVDxpNltbW6Ptnv1c6OHDh2+55Zbod+0HsFu3bjV80Tw9K/ss
Hb1099GWNmwJ9+/fL92EazkoJIaRvm/p0qUTJkyQXib4CfkP+b/yR6d4KfaI
ws5FKonUqJ///OfBgUjDPnHiRDkK+aNN/cl9P50EuUn/+i3DGC2a1hWMzpTr
LsxNYnTWKOQ8KmdZupV8fyJ8REKqWZBAKCTek0AoKYFNvnLs2LGXX345+nnZ
SEO0xlkELYkcbHDgwfMm6Q48zJgqYj/tyeEoTYTnlkE6mjNnzkhlW758uUTF
0ZFdpX9IGwTGTrG3MtDQp8skzpfBwty5c8OfCwYR0p6/++67GUtAekbpH6V/
kd8N+wv5IX3moejkCvtpQ+WTyrgs9oikMw3G3adPny7iwtenZcwsi65sUYfy
dWXIHJT8ihUrogNSuSgefvhhqajmK0Iq+ZYtW+6+++5gIB+eMvlj6mHyhQsX
gnmnaOkF145Ub9lyQZWhJikoiWqkNY7Gq0FZOc0OOc1vOFU8Rcbq3XzRewrm
mVsphFOnTq1ZsybaauU1RxooeuLXcir7+vXr0iAY6oMlfTuLFi2yCVGCZmHJ
kiXRyhDUNymBmi2VWRETv0X3dzlOk0aH7dJub9y4cfz48WEJSGWWChYt3vLP
sqZQ6C4FraVcXHJBRa9i+SG5hHOZ+C3uh9JN45u3qYfH8nWpVHr0Yp9c0Six
qNS0AwcOPPfcc3L40das0t+gTZo0SeqbnEHlLpjNgZhZ3nM0xDmyw5Y7ZhAM
x4KzH405g549uNbkA1l+IjW5NKRKy6mXbiWMacPg0/7YvcV41f7OS3lC0Dz7
Hdw4MKdhBJN4x44dS7dL9qSySd8qUb2cd6n5YZmH9SGI+bPceJWfkAMJ6nO0
cw+axCB4YK4yoyKSK/bu3Ttq1KjYLUjdaGtrC4YYqZMr5Os9PT1SK8ImyEw+
dt9993366ac1WwBDcsW5c+daW1ujbX7sDz300EPSjbqeBblG3nnnHSU2082Z
MyfcuIfkCon5X3nlFWlCa5awfEY+KZ93PXCbfVDGHTLMOX/+vNNG5Lw//fTT
0Y1IkyVdlfkrhw8flgKvWcek6ZNRnlQPy52Jjcq+/vpriceSfmLWrFkSddQ8
C6EckyuklOToos17LCklKSspMafev7hCDslXbPa/0t80Pfroo5999pnrT5i5
3uO+fPlyzUzLsK+XeC/fvS0b1+QK5YFQAwmT6n6HpVBUPNHd3a1c5pZvt9cH
AhLTmruMgB7VbN26NfqBpOlZaQylVGfMmGFupiSySt3VSvCwcOFCcwwTtITy
MfswJvY2h9SoFStWJDXs48ePN0xCFrSfTuwvnzC5wiatS5qdEydOFLHDyNGz
zz6rt5A5bl8qzMsvv2xI15FhrzJwDpZjiv2wXAVNvKBQjgcuH5avBOlSv/nN
b+o4e3Ds2DHlcF599VU/P3316tVdu3ZNnDjR3LpGm9lly5bZ9H2G5ApppWVo
bI7z5YdkiJ0iyJfecMeOHdL21tx4sD/lT64Iht5JsyjRLb/zzjv53lXPPbmi
nFFHUnKFFObbb79tLnmpaR0dHXqxf/755+ZKLv8kY0z7Gm4/QA72atu2bd7a
NKnSbW1tNiNrmx1r9OSKxo3eUzDM3MrvSnU17J79ZKzO28Sv/VS2tAPK35Xh
ng0ptNGjR0d3Ww7T8HlpeaSyFTdvVtzEb9H9Xe7JFVJzdu/eHb2dGiXFK4FH
7NcrpZllTafQXZLT/frrr9tUsIyzssX9ULpp/KQoWloAaanMl7PUrj179gTl
7DO5otBYVA5H2udFixbZBBIBOZvd3d2GNMV8kyskbtm0aZN5cBGYNm1aihII
7v3Jdy2PXepzETfaYsnlIBdFzZDDcsfKnFxhf+NAakJxMba0D7/+9a+Tuhud
7Ex7e7tTYph9fQ7Cp+PHj9clpacJ5J5cIe2/oZ2Mxo3pkitOnDhh2RDpP71h
wwbz5Z+UXCGh7O233275Q3JpSDxmXyGl0ObPn2+5cWnoZKAapEdG/55vckUw
VJw8ebLlXgXkvBRx40Daveiv1Bx66C5cuKAMe1tbWw0nSAYjixcvdjp2Oekv
v/xyimc05Dx+9dVXd955p2Hjjz322EsvvWS/M7kkV8iV8uyzz9p0rCE5NTLe
tGzqCy3kan/3Kh+276cCcrxy1DlGL073uP/85z/rHzbc8vb/wKNnTskVMrSJ
fWY86Svr1q1r4md+qXjV/mB1woQJ0Qvc3PIHpHtdunSp3rjZhPqnT58eO3Zs
+K1bbrnl8OHD0Q/ETs9Kmyk7ZjlnKGQIL7XdvhzkZEnLbL99p5ZQv80hP2cO
aebOnRtbfwrdTydOyRWy26+99prltSafv3z5cr57i3ytX79eOWU5Zi/UTMIJ
RDMHaj5VUeiQv45qlpWUkmUnLle0hNnR70oAUPT+G3ZGOS45kKJ/VDq+P/7x
jzWnSWPJoH7Xrl3moo5NrpAfffPNN+3jcNm9vXv32h+U04SAjOJlYFvy5Aqn
CQHpK1esWJHjtZ9jckWZo47Y5Aopefsx6apVq8L9dKrkUgltHm+XIGHZsmVO
pVfpv3zkGi90OlTC4x07driOrM071tDJFQ0dvacQO3MrXYN0EJb3yGT3pPN1
uingc+LXfipbBpiTJk2K/j1paGOgVH7zk1/yT4YbuLGklsqu2rQJRU/8Ft3f
5ZtcIb/S3t5uuO5GjBhx9OjR2K9XyjHLmkLRuyQhveuFnK41K/SH0k3j6ykB
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
3K9Xm7lUfl8yibU7FjX9FzWTlZg5dRKI6ipGNTl8Fk8rpo0XUMcTHMLxk7pv
ZWZY8Eo9ouWEqOmwQFR+c+xbbTbdoyaaq7X8/8EHH5h9/7rtVThkFVzhuYRI
rK6NFCPaUXzWlJN8IvWa1mh0XJe7jf3pp59GHci6vpN7ftYsXesurTY+Ph61
h0gmwRVSF5ibNaxevdqdztYFlHzePPJn9l/UBdnctHXao+6+deig7mZG1pVp
3V0Ma6ss1ipPuQZXSJ2oxbHU3bPSGirc0dFh1g7FJLK2C4x8su6Ok5LDzbU9
85j/8qnl1dmEup9v4NLWxfNZq19NkLqfl/5CY6+oMNM2450+fVpb7XnVqlWO
sBBHG8DRfA3Iv6olj7WPGTU8K8WUFMuOYtb64pJjpxIp8fr6+rTPS/UnJ+Au
DM09m9zDONYr8l+burDzTMNzl5Cwyqj7+ca+Ne/DnPwtgwI2v5DGgHbQ/v7+
lL+prcPguIRKpWK9cLU1ou0tEurt7U15niWhXqAWMWLeHZ/gCvNbIu+Na93M
5yun1WzMtfvaa+981e1ASf3+4osvag37m266Kep9Ivf0hOMeWdehdWxeL1ck
56993t2PcK8tX5LgipDUa9K7iar+rKteay/SZiLB7HOztDqimmHSxHKkvKSw
dU2z9tqI6PPPPx8Vz2B9H3D37t3mJ82ndfHixfKAuC9HUk9rHMof6y6dGos5
YFV3ZEB8+umn5tvQc+bMcS8f13TBFc3bek/A0UWSrpZjzPPs2bM/+9nPtK+4
J6EaO/DrOZStnaR732GVdA+10BHrfJm1vqubGawLEVjf9S5s4LfI+i6r4ArP
PYLLM8qaTK6nZM1g7rKiWstgmzdvNqe5g924rF8p7EAph/HNV37qprZjXZE8
gitCmT+b2lo9Qbr5zNtKK8gMMHO/KpWgIWGGtvq0c6wzgFFhjeZWUHUrNWuN
lm1AtbXJIUd8+eWX3SO9H3zwgdm4ve6669yt1iKDK6rGQpEmda/ewiYOpFy6
4YYbtASvO11VjZixinrxQXviJD9Lv959TyXfmk0O93IBcMgkuMJnO4yor0d1
bcwmaN0nNySZQapI7SStvdqoK2r3a2ObIdaSh9966y3PK/IcFnjvvfes8RXp
gyusDXifIbhqRNRr3ReEY9H6L55DB3LyK1euVL8YFZVhti19xjTC72q1nn9r
pz1+5ze/4Aqz0vcph6sRGcAMTigmkbVs7BmHYzbL3ZOwyfjMcWvvye7cudP/
w63NZ63+SqUSft7c2VyjvhLb2qZzxtNeDpLWrGM9PW2lI22RNMdwqHkga1s3
alLAp0Vtjm9LyyQqD5v9d88+bNW2iJxjGMd6Re7lmxpynmn47OGo9s7qljzl
nwf3XEqxYG1tbcUHV6TvSktbKDx/d1fCGgagxWNI2WtNnNZYuUId2TBrGXlw
zAuv2zszvyU3orHBgWYUTU6BYdKy1QrJu+66K+odMY007B999FH1u459tdJM
T5hra1x11VXvv/++9cPWKsNnWDtqhflSBVf4XIv17T/p+GR4FdVEs8/N0uqw
fn3OnDnBwlNRzPGEgM9qDGbn13q/Tp48qY1Uewb5m43DDKsDcxBYjrVlyxaf
aUfrCgzuRYybK7iiqVvvCUQNk/psQRJr0L6xA7/+Q9nmzfKchtCW5I0a1Uw8
HWmud2EeosiB3yLru0yCK/xfEizPKGsCuZ6SNbj33nvv9SnSrcsIRM1MFXag
arphfOsT59NIjtpBIL/gisyfTUlnKRu1dIsqlk3S9dBKwtWrVzvSLW4hYFYE
ng9C1XZ3ovaikn6N9G7Uj/kE45nBD9alcRMza5m6r3uHrAsrWQP5QmULrlBb
y3K7o8ZYZhhraaYhRaWWaI6ALo00hLQ1+aUBdvr0afOTg4OD6sc8Y3LMZUxi
LckFVSbBFY5VQ+t+Papro70Q2h5z4l4K5K9//es+X7dekX973nxSog60c+dO
7Yr8nynrAFH64Aqzg+A/BFet1SxaXGW2YXXm6fm0Ks1xRWs9bt73uu9WqMw1
vhzVpdmGcbwL5vMLGQZXmNuvrFixwjEGojKLei2qoZhEllpPa+G88MILnr+v
tfrck7DJ+Mxxq+EBVWcUpfx9glpevtLf39/Y1zaTqTvFKf+qJUjUi8Bi27Zt
PkeUH5QfkabXwMCA/FdaL/I3Tbf7WEMyXpB6Y2NjO3bs6K+R/5FyoODU04o1
d5dEa2xImaA2HhzdWG2JjKhlLtJMCpiDjVGFv9l/j9WHrdpe0oyqcM0rqtt0
bMh5puETXKFOwcvnrbPA1g+Xkzy28pi3NdRcQwHbqYyMjGR7s9R4iboTXtYK
S106w5EV677R2RTUJR3MqAnz2s1K32T9Vm5X4EWeL+2Ucsrb5nq/nm/3B6Q0
1or3qFAE6/SEZy/SbH47DqQFMfpXGdZxYMeBkkkzoO1/LWbf1j1hnUDc2edm
aXVYv97uNwhjPg7tfgH82p5x7RFz69rAu1R5nj01s3G4du3arF40M4e2Ym02
YY69uycUmiu4oqlb7wlYh0n939o2d3SKWuO3sQO//kPZZsyVz5ieORdsLUas
05GDg4M+J1atlVdaGmo5ociB3yLru0yCK/zzW0lGWZPJ9ZTMG+cftlSNiN+w
Bi8VdqBqumH8Dz/88JprrlG/6//EWTf4yym4Io9n02wFxWq1muvQZlsImBGw
jz76qP9wpVm1WR/Pt956Sy2T/ScazHT2nN2oy9r/8o9VrtpCOt1vQJctuEJr
ikv3vC1iZ5CsmlJmqyNWEKxky9WrV/ukodaY9O8XaM1+/84INJkEV/iP2/h3
bbSxFKmYpHryvy7/Zo/1itwvq6ok40n2U78rZ25+zGyKuzcQ0ZgvE7VnEVxh
Lm0XawiuamzHkO06pWai+VTKWgEelc5mzJ476M5kvtkRteep2YaJOwaSU3CF
nIN0J9WPxQ1+0GpnbVfZYhLZfITdoa0qyfBXXnnlkiVLpCDaunXrm2++aW43
mV7d3RbMATep6M1vSdUf99WkYJu8efPmydflMptiWweVT3CFdlHyR2khmM0k
99rs1S/TSlLJPMrMmTPl7yXxm2vhiyIznjxxBw8edKRef39/Yalndugcdbra
2JCWxsjIiNpdcuyUrQ3lOQYMtfI/1gLOWlso6vVes6iMO/NivswStU67eUXf
//73fVbTLfg80/AJrtDys/wxKjYp1qov8igFwV3FlzZSQk42zjlDMRXWtm3b
tPuVMrhC2kXB79StdNQPq9SoiagwOfnLWOkj+UoeNCmH5b/laQmoi1OZtbnk
Cqk+4j5Nk7YdVDdt2lT3ZILgwIGBAflv5klkBle8/PLL2R6iWktPbWvsuK+f
mJMvsYIr/OcEpfmtfdfazDD3iIxV4JtzAY4rSibNgHbUy0cmuWSpZ9Pc2bri
zj43S6vD+nXPZpgW/NDusVtcYNII+7cmjvm4eT5B0gH/+c9/vmDBAkkxKRJ3
7twpPe5MgivMmxIrjiVgTvJGjZBUmyq4otlb7wlYh0n93w6r2mJ1rEV9Ywd+
Y41/arsP+wx+mnfZ+qSbvddYwQ9mSI82IFbkwG+R9V36YdJYc0klGWVNIO9T
Mnf2ibuotdlms46uFHagarph/ARlRci6IE9OwRV5PJv79+/XohfiDmJLHe15
7eZFuQsBM9otQTtHy4TyKJlLDGmtCMdigBpJZ7leyaLSkpTKUeqLv/zlL7FO
L4pZGcVd7cqaM627XAUKDq5wv+tknTioVCrmCJ66Pm1KZpCVdb7YwTMNtUfG
/7mW6k86FAsXLlyzZs3mzZvfeOMNVq5IJn1wRazWr3/XRgoQKUYk40mRIvf6
wQcfjJW9zWZP1JpF5in5l3vWA1mvKP0zZQaapgyuMAMC/R/AkNmM94/99qG9
M2KttlRmBzPqfJ555pnENz1gtjCjAlnNNkzc1kVOwRXmoGXcHr00nCRjL1++
fP369XKzjh49qnbiiklk+Yy0ctXP+O/DW4y6c9zWb0mJt3HjRrn8ji/5Zxtp
J8jXx8bG1JXeWzK4Qn3DV/2WXLv8k3xXCij5r6SDuwaZnJysuyr+zJkz5TNx
C8kGSpzxJOliZTxpkmmpJ2kVhPRof3nw4MECMqEZ4htVsmn1oHxMSkV1csqx
1ZdWLEfFdJnDs/7RX1WjYx7VSDPfr4z14ltAGwKNOpZ5Rf7tmSLPM40EYV3V
2oNgPnSxemfqoyTPS7YvJsPKDG9IE1wxqcTY+ATVWNdY0DLM6Oio9pm4a1jJ
D6r5qjz7iUijPbwobSWlasQISd27Y91pRZoE7m9Jmawm0Y4dO1JdmEHul3ZK
kj0yrw2lPSy9pJ07d8qPS29o/vz5cTub5mxv1GuzZkcj1si/eSBrP8Ucno01
hG5OJbSXKbjC/1WOqjFolvn4ZNzZ52ZpdVi/7rkLpJnJ/V881O6XNRpEfkob
5V68ePHx48f9Ly1z5oMZq8kaMEeHHK/6NlFwRbO33hMw0y1WhEnV2HsxKhkb
OPAbN5DD/+2qkHaXo6ZxU9Z3oq+vT1JP0nDz5s2SgeWhC0dBCx74LbK+Sz9M
GitYsSSjrAnkekrmk5UgGsS6eIvWZivsQIHEw/hmtHPclavN6jin4Io8nk3J
bG+88YYURGvWrLn55puvv/76WMWseaCFCxc6FkiPVQh41kpu5uISZjlgvoUt
hXPmLwTFYi4SFevuB2ItLlSq4IqokZmxsTHpO4ej33UnDmI5e/bsm2++uXXr
VsnSS5YsufLKK+Nu8qKlYVSw7gsvvKB+zGcTQ2QrfXBFrNZIgq5NMp4xD9ZT
irU1gNlStR5Ia1Qn2DjJvznk2eQzX8eIOwRXtc1hJWioO5j9F0dcXNV4lThq
IUrzjZJkbwBptzUqeMBcpDdliZpVcIVZ4yeoXqMUmchmK3HWrFkDAwP+0f65
cs9xSxvA8d0phftjkuByQ3ft2vXQQw9Jk8Cc2m7J4Ar3PItP0lVr3Z8wuWbO
nNnd3R28BSZZyFyKQT7Q39/fFClZQMar1urQMPXkf4I37i/USIaUtDJTL9Or
tNPKjaihM63fGhSAWtPUWiqaLYeo4VBzeDbWyn6eQe/aQnBxhwoD5rK61osy
r8h/rrbI80yjbskT9fgEkV2vvvpqb83GjRv9e2fyyGjldjEPyzRnBlekGfdQ
FyioG//guTJD8FaFZCdpsEmpnqDLrwW/lacxIFVtcEpmSIm6qEXIJ1TJOq5S
915Iva9+Xp7EbJPIDK6Iu/ZIMTxjHqq2jkasxQTMsU3rgbQNZBMEaZsDieUJ
rogVB67Fqzc8uKJZWh3Wr3v2ds1Mbt3dw8pnAiJqa9o9e/Y0ai9CLSQg6o7U
pS1E4Hhymyi4otlb7wmY6eYZmBQyZxjdc2TJpBn4jTs8Zcbsued2zRSI2oBA
634mqO8cCh74LbK+Sz9MGitXl2GUNZlcT8l8kzTBhHXVFmKknWRhBwokHsaX
Uk7bOSLueZqFVU7BFaVqi4byi7DSdutoj//ea9U2CWjeX3MxIrFs2bKRkZFG
dQD922YOZqXmqARLFVxhvseh8Rn6Lp6Who5AdC1jyx9//vOfp1zyCP7SB1f4
dzOtX882uEKedGk2SJm/aNEirRzzb2PHiuH0vCKtHEsQYOn/Kq5nky/lSEVI
6wgk6xVGMcNK3cEbWjpHfThlozpktlGtaegZbOaQU3CFtiqv4x3tBIpMZDN+
MryiJUuWSIGQPtg7Dfccd8oVyAPhDIVDeeZT/NWd4oz19q6V+r5qd3e3lkXl
BCQHavNfwQoMKY9bgAIyXhiXcumll27fvt18yiQBBwYGtNSr+xJxembX2zrS
qA4jh+8saH0uayNH+31HxWdWtbFmdny+nn6oMGC+RGkdedNOyb/iKPg800gZ
1pWMpI92lL6+vsyPAo1ZTqYJrpCyQvr18ps+gxXWNRaiOv7BglQJTkm+pVVh
5WkMSJdTGvnW5LImTt3FQKxPbtQyTaECksjcrMS6+k2jSOGzf/9+yboLFizQ
ahz/4IpYPXqffoq5MF2CQTmzMVCS4Iq4b5fnPT4Za4imWVod1q+3e089p8nk
nvMC5qYJgVmzZt13333SuVPfPS+A52YWdXnu+1NtquCKZm+9J2CeYYLZWG2o
MMOFNTIZ+I01lB0w1xN2DKJqg1RRb36Z9V22USgFD/wWWd+lHyaNWufE8+vF
j7Imk+spmbEKUeueuZmlmTaAXNiBAomH8c0R7LgL0VSNGjmP4IpStUWlW/S3
v/1Niia50ssvv9z/QGlKjATvvVZtJbZZfZszWaHZs2evXr369ddfL3L/hQxj
HbWKwJGGzRVcUR6SeaT9L70VySfSI/B5Zs2lpULXX3+9pMyhQ4cyXJEDpvTB
FbHGUrINrpBfO378uFzC5s2bpWE8f/58a15yHyhlSLbPFZnlWKy3e0JaIZYy
uMKMWlyxYsXj8d1xxx3qj2QbZV01+i+OotssT6KWuTDfzLr55psTXPuPfvSj
BCGvCeqUnIIrUjau3IpMZKl9+vr62p2kVvrud78rze9PPvmk4PWR3HPc6u7q
iWnBFcGmDIsXLy7nfIo/9xRn3KXRraQBH/xaf39/VASO9I8kM6uHluQt/4r9
BWS8MPUuvfRSMzQlIDfRTL28g53MqtkcadRePgqDHrU3aq3BkNrKGI5mg9bK
ituD8xmeNQv8a6+9Vi4tbmErncQ5c+aov2N9ySJuu7FR55lG3eCKPBZ1VHeU
CIrx9OUb3Kw3urBkT7bGQlzmiiiZ73mRB2vi1K22rIuB1F0BRpJIW6Uq8ySS
CkILrpCHvVFDHKdPn/7rX//6+9///qmnnrr77ruvvPLKiIbz/8c/uCLWdJ5P
PyXl6w8B8+XBkgRXxH0ZoVTBFc3S6rB+3T8PFBBcIflz2bJl7U7yhAaD8Hmv
Jm2+yJM4m5mDAFGT8s0SXNECrfcEzHRLsO+qGWmTrBDOaeA3wVi0+c7yypUr
v/jiC+uHtRwe9eZXJvWdQ8EDv0XWdzkNk6b8eq6jrMnkekrmDkeJH3PtQdAe
mcIOFEhcQ6UMzwtoq7flEVzRwLaoVFLSBHrnnXdeeeWVNWvWyE9pARX+B4p1
VlrzTCr3H/3oRwkKw5tvvln9HeuA4dGjR6Vaj7qowLe//e1f/OIXb7/9dt69
QrPmSlzL+Actlyq4orQDa1NTU/IsjI+P79y5c926dR0dHVpAhcpRdG/fvl1b
vEIjj5h0OqRBLk99000MlV8TBVcEwclBc3rBggXubGPKqY3t8/WsWsvaUo0p
gyu0SMgMZTtsZdYCUYvpaWEYjsxshrxmxZp5ShtcoTUtYm2IU1fBiXzmzBlt
FxKH2bNn/+QnPymgDRNwz3FnMlYmZWNXV1d3d7eUEq+99pq0HKS9qkVctGRw
Rco7KF+/7LLLZtRiAyYmJhzpY64NIqndwOVQfOSd8ST1tAkp+aM1TbQV12cU
Ejm8ZcsW9ak3u8zaZlthgIRWZZtvdpjjz0NDQ1GnUcCkgPlmblaszYzEV1Tw
eabhLnna2try6J3JQfv6+mbWSHle/vCtFmDe6JxurpV1jYU8qukdO3bMmzcv
yFeHDh3K/Pczl3hPkE2bNpkPrM86M2NjY0EIitRWeaxLI2euhk7NKDC4IliV
IoijcM9GWfkHV2Q+PWFuiJlgBTyzD16S4Iq4ncFSBVc0S6vD+nV59KTT5PPF
AoIrqrUenHX1Ravrr7/+6aefzmlQNMPpXfOl4Kika5bgihZovSdQt0Pkw1yD
3SdCo5wDvyGtjymP8NGjR82PSV9bal71k1Fvfpmlzdq1azN8G6jggd8i67ty
BlfkOsqaTK6nlFXkRt0lywo7kPVw/jlZm7hJtjyCVo/kEVxRWFs0XJVizZo1
N998s2Pu2CqrQsB86zkrUVlR6jvPiw3W3N66dWtOr4KmXHJQ5b8wS3mCK4oc
4XELV6VYt26d3PHZs2dnktOqtTHqxx9/3PN3JFt2dnYWELk9fTRFcMVHH31k
LocSVwODK7Iqxzyr12RNvgxlO2xVNfovS5cuNdcvMjdAdMSQmx3erDR1cEW2
lV3BiVytdWB/8pOfxOp9S6ki7atKpZJr1IFjjltq+fyqM4Ir6lLX4Z85c2Z3
d3dUo+vChQva8gvlf68874xnLqU+I+KFXzM0JdlipLFoexCbzRvtA+pbddqG
ktoLd9oWiu6GUwHDs+YbglnJdpqj4PNMo4A1c6KOe66m6crqJiXprJWTuVbK
KusaC3W3vUgmzFclDwgMJdsTRMhnzC/6PK1BEk3WZHEFOuu2ILkGV0i36PDh
w/fee6/jRTAfDQyuyKT7LCmvhV4TXGEVazykWVodKb9eTHCFeO+998x9Ddy+
9a1vDQwMnDhxwvN8fGQYXOGfdNM5uKL8rWIt3ZLNY5qX6a4syjzwG/eiDh06
pC4q4kjADKe9rAoe+CW4ItdR1mRyPaUMl8Vwn2dhB7Iezj/RMjlPLTKtSYMr
pFv9/PPP+weRWmVVCJhVQFYct1ju49VXXx3r166//vqtW7d+9tln/remrgxr
Gf9qvTzBFfkN3/n74osvdu3aJTc3cTZrr1eYnD9//umnn47V95cPf+9735Oq
vFmGiUqr5MEVUhTLB+LGKsuD88gjj2jPO8EVmvza2Ak2FHPz2azwk08+0V6R
cGyomt+8v/WmEFxRQCIHLl68eODAgbvuuituoSFf+fjjj7O6dg3BFYm5pzjT
z01s3LhR+82BgYGoD7/66qvahwuIEEgj74wnDVRttfmoNDHTuaurK+XR6zJf
etXOTS1XtRcKtM6stiGvtkqSewyzqYdnrZVCCYMrMu+pNSq4AgUzgytm5LPn
i8kaP5DHmgnNKPGeINrqEDNyWwwkLmtwRX4n9umnn/ov5hZasGDBj3/8YzXm
sL35gyuqRmeH4AqrkgRXZNvqSPn1woIrqrUR19/85jfyDMZKrssvv7ynp+fs
2bOeZ+VGcIWq9VrvCRQcXFH+gd+QPLArV65Uf+fuu+82W4/aehGON7+aN7jC
Z1MMgisIrsjqPKdVcIVWeDZdcIV0c3bt2hX3xXxp2DzwwAPaIF75gyvanf0L
qR2efvppbbWHuiTpXnrppaymvAmuaODw3cWLF/ft21d3jxiNNIduv/32//iP
/1D/0qcwOXr0aFdXV9zXKxYtWjQ6OlpMgrSkMgdXHD9+vO42lKErr7zy/vvv
Hx4e/tvf/ibFuH/R0ZDgimQ7ITZLcEXmK1eY/ZfHHntMWytpz549al/shhtu
MDe9CrFyRaBJgyt8ntATJ05s3bo11ntAUvq9+eabWV2+iuCKxPIOrujr69N+
c968eVGFs7n8wvbt29McPW95Z7wLFy5Is037ZWur1Uzn/v7+lEevS+qIDRs2
qM+4WvNqqwLedNNN//jHP8LvSvVx3XXXhf+q7aKojZVFLfEaaOrhWVausCK4
opVIKaHd32KCK6zdf/JVNeLp8wlFkBtnJmlOi4HEJXdWOzGpoHNqkklJ6z96
M3/+fKkZd+/eLTWgVJr+w2UEVwTKOaCdQEmCK6bnyhUhKRMOHz78xBNPxBqB
v/POOzNZ3Z3gClXrtd4TyCm4whqH3xQDvyqpN9XfmTNnjrbt2smTJ5cuXap+
xvHmV/MGV7ByBcEVVYIrDARXnD9//sknn/QMlps1a9Ztt932zDPPjI+PB6O7
sbJrGYIrfG6xpMm+ffvWrFkTa2mmRx55JJOhCYIrGjXMIv3rwcFBz1AH+dii
RYvkQvbv3x8874kLk88++2znzp233367f8yq5MyhoaE8dqWZDkobXCEFiOOl
m/nz58u/bt68+Y033vjrX/9qzq+VKrhCruX73/+++plkXR5t665sgyu0yaOy
ccdOSD21evVq9XLM6AuV2eF1dHbSa5bgimy33is4kaPI0/f6669L9vAJmr32
2mutO2am5J7jzq+WJ7iiLnPSX1Ip6jelta99uKurq8xJWkDGq1Qq6sr20g60
hqZIqmonMDY2lv7odUkppFYcagSFtrWHtpO7Fnqh7jJ8+vTpO++8M/ynr3/9
6wcOHHCfg1rIFDM8q+1jkq0MgytyPc808t6QCOWxbds27f4WE1yRLH5gOjDj
EGb4rRNlHVEpyWIg5kWtX78+j9t9/PjxxYsXW5u4UpEtWLDg4Ycf3rp1qxTj
J06cMOvrUgVXmMtPaTW1D7OfTnCFVcrginK2OlJ+vfjgitDFixc/+eSTwcFB
aXD6jMc++OCDUW/E+8swuOLDDz+85pprfJKO4Ar1M2VrFWvppvaG/PkkRbMM
/KrMVXO126etc+h+88u8hLVr12Y4wVHwwC/BFbmOsiaT6yllFfOgjcCYN7Sw
A1kP55+TtYkbbYlUT56v1sY6z2KeTSm7pK8RNaU7e/bs5cuXSz9o9+7d4+Pj
p0+fNn+hsOAKaWVZTyBX0gGUZpJUGUuWLPGZ+O7r60tfHWQYXCGZWa3d2gmu
cNq7d29UOI38fUdHx7p163bu3PnOO+9Iz9e80ekLPSnupEHyi1/8wmd3Hjml
ffv2ZXf100g5gyskRz377LPmjb799tvlhH16eaUKrjD3e01WhmuPVcrgihde
eCHWrW8srf8iddCePXvCf/XZN0Qllbj2SkjmW5moShtckWseKDiR65JS5R//
+Ic04dyBFlK1Zb7bFMEVidUNrkh5RYcPH9Z+07EYhTk5UvIkLSDjyeXLk75x
48aHHnpIEtP67Fy4cEELrpg5c2Yxe7ppC1CogRBap8AsnaS/o5YM4YiZtn9u
3dq8gOHZv//979r4XravO7lPyf+KCj7PNKZncIVc9bmSKeCqzeCKAqbjzU0i
ZpRmjYWG6+/vNx86n4gX6zNbksVAzFU1ent7M28/SMX66KOPalWG9JhWrFgh
dZ/PA1Wq4Aqzi/39738/buyT+YIDwRVWscZDmqXVkfLrDQyuUMlzffTo0a1b
tzoCLaRBu3fv3mS/rx5Ie1cl8Wn7DwJM5+CK8reKMwlO01Z4MIPSm2jgVzvt
xx57TP2pW2+99dSpU1H/6n7zK6t38aIUPPBLcEUJR9pzPSXtMW9P2taq+yAU
dqBA4pxsVgEJ6mj5St0zjHuexTybUsirw2WBq6++WloywUJ5dQ+UU3CFHHrt
2rVpUiBz0juTJpM70CKTp1V7Qcydo9y0nNke/RiWKriimJElzbFjx9Th6MDs
2bM3btwYLL1V9xcyXK6nWntzQW6WO9Ai8zWBp4lyBleYkcBSzmzZssV/OsY/
YL6YK1q3bp36mQTRwmZFkDK4wmyZpO+V58e9wPvQ0JD6T3Vnu7QZt/asg8M1
pQ2u0EJqk72PEKXgRI5FarG//OUv8qiaMYR5RPITXJFY3sEV8vVVq1aFP+jY
E6RKcEVSUk9pR/d5BzkT54y3EsKSUI2dsK4+oUVf3H///UGKaaVxT0+P+xwK
GJ41+0oJZqASn5L/FRV8nmkUHFwhhztfk+FvxiX9eikxvqmQy4z6H02CD/h8
UgrkkZGRvC9cnn3t/hYQXDExMWHmq0qlku1RypCvEjBrLp9VqqR8VpdRCr/o
rqODgCJJoryr8rGxMe3c8oil0WL/2muvn7z22mv+bW//d5Ga5d1Pc/qS4Aqr
WOMhzdLqSPn1kgRXqKS8ksu56667zBH4ZHvOarRt76666qr3338/we+Yo0xR
y1dO5+CK8reKzXRL8KaMFqx+zTXXfPjhh+oHmmjgV6OtTaG+nK5dVN03v8we
68KFC0+ePJn43DQFD/wSXJHrKGsyuZ6S2XocHBxM8DvmALJWtRV2oEDinGzG
Kr/wwgtxT1KLh2mW4ApJxp/+9Kft/+ree+/1P5BZHmZYCGhV0ty5c8fHxz1P
LG/SAJBem3Vn8/QLW2VYy2hp6FjIl+AKacxot1KSXWsFuWkt86zi4oIl8gYG
BsyNCOuuzAyrcgZXmM2/uKsdSmaQLOFznsVcUfqFofwjzTybfGYS1Z0kaiyt
/xJOgpu3QEow90+ZiamGmmeutMEVZh6I2+qTGuqhhx6Se3H33XevX79+586d
hw8fDv6p4ERO5tChQ1rMXrJF29wIrkgs7+CK6pdrL0haSUni/rVdu3ZpJ9DX
15fy6LkqSXCFGr4yoxbBUmTLVqt8g0XFtc6FtWehzcgENY72RZ/iooDhWfNl
Q3PoMkOJr6jg80yjsOAKeQy7urrkB2fOnCn/7e7ubtSL9kuXLo263gaSkirv
assMrnCsX5QVa9/f59ZLbVWpcSeLPGs7duyQwjbIV5LH5ItN0QCwPno+cQjW
eBVJ56jPB0kk7SJJJUki+Z+xsbH8kkhumXZuf/7znzM/ijbY1R5/IVmzA97Y
4IrBwUH1Mwma6GZPh+AKq1jjIc3S6kj59RIGVwSkpHrxxRe1+IpMetlam7k9
0Z6e5hsxDR94L2dwRflbxWa6xX1TxmcN9iYa+NWYg13haKq2MaXP45l+yk8y
jzxBN95448MPP/zUU0/t2bMn3A2z4IFfgityHWVNJtdTMgOcksX7aQP+7cac
cmEHCiTOySdPnly4cKH63bgb25kVRLMEV5iBK3G33jaL1gwLAbPGKey1L09S
/WmvZifIP1baNH2yOXQ5vZUrV6q/43g7dZoHV5g5Oe6mG2Y5kPk6SMeOHTN3
FC3bQ9EUyhlcYRYmcWNrzb5hY4MrzNjFuA1a83WklMEV2o7zYunSpXFD14K4
xPnz5y9ZskQufPPmzZKjJiYmYv2IpzNnzkhDTj3hoL+vpa1PaWOu1Fc3ntxK
+ixyU4IujNxQOR9rj7i0wRVmHpCKMlZn1vyFMGMXlshSZ73zzjtbt25ds2bN
zTfffP/998d66UNL2/asx12rBFekUEBwhb+NGzdqJzA2NlbY0RNoeHCF3J0d
O3aox505c2bB2xpqFUTQ+Nc6fdZeuTWOQuvR+1SaBQzPVm3l2NDQkP9RAtLM
uPrqq2+44QYpRR3DOGmuqMjzTKOY4IpKpTJv3jztx+UZaUjB4uiNNlABhbw5
KZ8yuEJOWO6gdEP6+/vlv9YGiZm7fK5UfipYnEEKcEc7R8p2a76S0jjNdRVD
Tl6eL+3kfdb0sGbgqC/K82tNIrllOeU3rT02I4cFUsw9KBNMzWjDbu2NDq4w
5wI2bNgQa2rPfGOI4AqruOMhzdLqSPP1XIMrpKj59NNP/+d//uepp56Sy1+w
YMGLL77of1Hm/cokS5gDVgnmraRhLM1j9UduuummcJJXM52DK6qlbxWb6RZ3
tFDburfdNgTaRAO/Jq2KCYIozEGwum9+VY14jASZQfsFNRyx4IFfgityHWVN
JtdTMp+sZCt1a4F5kp+1krOwAwUS52RzSlRKwlgBBuaSPs0SXPHWW29pRVnc
qDwzhCbDQsBs58R9EKq1Lvk999wjLbfly5dLFbZ161a5avVHJAMcO3Zsz549
8ozcfffdUmzGqtfMZy2TnRrMWibBghhmtZ5JzsxE2YIr3n///auuukpNgbgL
lEmLQtoV6i9Ym6OS/tLlf+WVV6RqXlITa6VHM2MkWKYM5Qyu0Dqkcbsz5lEc
51nMFZmBAR0dHSdOnPA8itkAaE8dXGE2++WBijukbBatju5zelr/JejvayW2
Z+VoFiBxg+TNmL3MW2WJf8EzD5itvjlz5kgP3f/EpMGgJqOWAsUksjYUHPel
D8/RjzQIrkisPMEV5lyMpGfJl1tvYHDFhQsX5PeHh4fVgxYfWVE1AoaDAkTr
9EWF5mqLMUrvQ4t1d++fGyhmeNbsJy5btizWoJm1mWGtONJcUZHnmUYBwRXS
fguKFPnvxo0bR0dH1Sel+N6fXHKlUnlVIc9F1P9oEnzA55NShRWQDtI+l/JQ
vb9dXV2Jf01OeP369eqvXXbZZVon2rqBhc/iDOGIgWTOqAI8jKyQQ3R3d8s9
lScuzFfpFz4N9tHI777I+Wu3Y4ZfcIVZ38lzak0lqbil+g4SZNWqVQcPHlST
KKfQJnO0J/NA9PSTrdItlazlWboWMz1hdp9vuOEG/1F0qVykivGpQxMr1YB2
GnHHQ5ql1ZHm67kGV5jjpXFfS8xjcQzziUvwipw0lbXuvyNCY5oHV5S8VWym
m9zZPXv2+J/bs88+q37d+qJNEw38mrQ7GLwIrMUXeV6R+bq3PIz+szDmUvzq
qGzBA78EV+Q9yppA3qdkxrLGLYiOHTumPQLWwInCDlRNl5O15Gr3C7IKyeOp
fb1ZgivM6i/uDTLDDjMsBMxaIO5iAlXbyifa3THjQ2IFR5knmUlwhRmxE2tS
smqr1tudERrTPLjCbOPFbXLs3btXy2nWFkXKjRLM8yS4IoGmCK6ImzfMPp3j
PIu5IjE0NKSd0osvvugZwnf48GEtt7enDq6o2iqFhQsX+o9ZSQvt0Ucf1c4q
7itFsWhNemnPf/TRR1r6ey5fab5VIUnh31us2rJZVAR4aYMrqrZWn9xTzylj
M/JBG/MsJpFTBtpps6VsC1Iq5Qmu0FZgEOV/C7j4jHfkyJH+/v6uGm32UP6m
UfsdaOusStdG/RtHs0fb1nPVqlVr1qwJ/+g5ylHM8KxZGrfHaWNUay8Ia6tj
Rb1hkeaKijzPNPIOrgiDtcJdcuS/l112WRMVLy1DUl5bKkFKzsS/pkVWBLR3
D81FkMTIyIj7l9Wog23btlk/I423YBsmKX6DDoLk5MWLF4dHSbPGo/zU6Oio
JM43v/lNeTqkqM9ja3jr7h51D2Rd70JO0noVfX198q+XXnppGOwnhVL4re7u
7swvqmob7cm8QjQ7pLGCja3DZe2NDq6o2rrP/nudDA4OmgMCBFdYxR0PaZZW
R5qv5xpcYc51xrouc5osq803zSduxYoV/kP6x48f15YXdk/HT/PgipK3iq1x
C3fddddnn33m8/Xx8XFtLt46VtZEA78m8w5KH1PrP3q++WVGR8h1+e/LY0Y+
yK+pY3pFDvwSXFHNeZQ1mVxPycyB8scjR454npucxuOPP65lMC0PF3ygarqc
bI6E+++O8fe//137bnszB1fEiiswQ1/qnmfcizLbOffee69/r1ZqQKkHtV/Q
OvtmXRMrjMHcTiKTbUGs0ZhPPvmk/wuDZrXujtEiuEKbxo11H605zdocNQ+0
bt06/9tqLhTJtiAJaEVf3dZsMaEI5qqkzz77rGcvQx5t7Xl3n2dhwRXmC0Gz
Zs3yWR1Iyh8p7c0rSh9cYe0x3XfffT6vU8nt2Lp1q9Y8ixv+Gpe5TvtLL72k
xgTGanaaIZGSczzP36xW2qODUTMPrqg7XuqfB8wSW+6p3Nm6j5s1A5g9rAIS
2YzA9G+4mo9AJj0XDcEViZUkuEJaJtqyFX19fSVftqJaeMa7cOFC8Dqw5tJL
L5XeZQOTSxvjuu22226//fbwj47haG1FPinuvvrVr8YtK4oZnq3aApuljbFn
zx6ftpM5GN4ePc6Q8ooKO8808g6u6O/vn1GbAQ8fQ4IrGkXutVZUJr6/1sCA
GUa0hjVr1W14h8MFUnpHfTgMAgyXepALUYvl7u7uZJWmfMuMG5EzyXydB/lB
M3HqjndZU37Tpk3mJ6XVpz1icmlqEuXUUtJuumPtkcS0LlJ7nHkZKX6lEJai
uN3Q8OAKa/fZp8qwdiIcdWgypRrQTsPsENUdAGyWVkc5gyuqtnku/wUezXHU
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
vfu///u/WveZ4IoojpVPAo7WfplbHSUPrqjWdlJ47LHHEsx1Srf6448/9jyl
BKJ2qHeL1a0uLLgibvZuvdZ7AuY4p1xFrKn5RYsWeS6r0hQDvw5btmwxzzDZ
m1+BTz755J577omVIDfeeKPnwmt5D/wWXN8VMEya8ut5j7ImkOspSfm/b9++
BO+T9vT0xJray/tAWdVQcp5//OMf/Z84eZal5NTqkeYKrpBLlq5rrHleqVak
Bgy2SzAj1tyjdrEKAZU8CJKr484gyKlKf0Td99MhWSxTkBo5tYgCUu1KDRi3
ySHVuv8KnwRXBN58882oNSWiSAv/6NGjVdtwtPstv2TBmfIIvPTSS6xZkZ4U
3VG7O8mz9tZbb4WfLDgUIWj4LViwoG5mmDt37tNPP61usHXq1Klbb71V/cyG
DRvMjl5DgiuqtWL8N7/5jbuGlcRfsWJF0Gs2DySPmDXzp2kxSgErySiJWTfB
22uhelKLNWTxanN6d+XKlT7vRzjIhfz3f/+3e+vhkCTR888/7zmenEmd4m6S
aYvbp8kDH330kdTjdVva8gH5mHw41lXkl8jqta9fv96zIReUG9nOC5Rnjpvg
ijTUl2e1VcQTm7bBFZLx1N1VZtQWryj49XzrhnfuVWoD5krCsYZYGzI8W61V
GQcOHJBmuU+PSQpMKTY9K6YMgytyPc9Yigyu0GjLC+SxOw/qMhedSFbma7tU
WNeoDEKzgs1bzYxkfl7+xroFqpucv1rqpoxnGxsbcywTsX379sS/bBW1KoU1
oMLcwcczekGOosY1ZVXRa6RVo438SCGW+VE00iF66aWXfHpz0sV++eWX1RFm
c6EnazBhQ6Ynql9WGdZdj1XS0ZCnRj5snRz0P8+6SjignYZ7tuX+++93hBmX
ttVR/uCKai31Dh8+/L3vfc9/zlo61MUMwnzyySfr1q3z6VlLefKb3/wm1oBM
YcEV1ZjZu/Va7wlElZ9yknv27HEPY0oFJNVQrMxQ/oFfh6NHj2qvK86ZM+fQ
oUNpflMSRBLc5+XiZINm+Q38FlzfFTZMmvLruY6yJpPrKUnbUlqYPk+0FGVS
ywSz6gnkd6Bsayh54qQOcs/jB4EfwbPc1MEVASkYfRo2ctVdXV0ffPCBWmhL
OqifkSLo5MmTUQeKVQiYJEt4tnPkWuSKpMEW68VM/8I8OIS0AaQlkNW7nw5y
CEl2SXyfOKsELU+CK0KSxx599NG66RzcfW3kR85T/Yw0NoK4iyhSgEiTwLNy
T1n8wiRN39/97nfWvVcGBwfDjzUkFEHylRRfvb29S5YsUSsjOdXly5dv3Lhx
bGzMHDOUgkIa1eqxrr32WjMTNiq4IiCnLSevXVqw/dbmzZtPnDiR4EApW4zB
WUn/UU5A8oO61ZoUBdddd530PeXplo52AaV9FLP/snv37kx+WS5KLk0u8OGH
H5aLVUs/SQrJb88884wkTqwx6gzrFCkn5XmU09BaZVoQVPo8IAd6/fXX165d
e/PNN4fNjCADrF69WlJb7c/GlUcia86dO7d//34pHOTXtP3LsjqE49BSy7e1
tc39Ukc9cxXB66uZnEkzBlcEU5xpUi+TKXspb8NpqQzXWMg7uGLx4sVlyHgm
8938GbVJ5CKDY7V3mtqjX8it+8VYd61Rw7Mh6YdKia0V5u21FpTcFGl+SFEZ
a0ox2+CK/M4zFkdwhedOjomDK6SeUn+n4B1zENAWnRAHDx5M8DtByERUVpFD
qO96BBt/OIIWZtRi3pLFf8ovq7/T39+f4Ee0Hww2Ng2fizCqIfPgimotcYaG
htwhT1/5ylfefPPNcLOVkGf0QlbbprhNTExop1epVPI4kElq2H379v3iF7/Q
ClVpBkv/Tnp5UgOazUJzoadly5aZ45kNnJ6o1voRH3/8sbTk1Q6RXKNc6RNP
PHH48OHwugiuSOCjjz6SZJRDaGOACxcudIxsh8rW6miK4IpQmHqS2uqgXMMH
YeSWvf3227/85S+14Th3eVJXkRk74Jm9W6/1noC7/JQqRv64evXqcLRQklQS
ViodqXoSd/HKPPDrYFad6d/8CgTjZoODg/L4q4NakjhBTpBmZ5oOdR4Dvw2p
74oZJi35KGsyuZ6SPNFSO5gZLMjAUqdIzZJJUZbHgfKooc6ePSupLQmrPs5B
Tbpz5041qVsguCJw4sQJeTa1+xI02iXXSWpYu7pyv9S94CWt6vY3PQuBKOoM
gtoAk1O94YYbgmfBpxkcRZ0EufHGG9WTzOoQiVkLAUk3yaVSC0iqJmt55h1c
EQxNzLWxjnjnMXEQizzg8phrtXlQ2EqukH+y3n1z9rOvr6/u7VArd23SrciW
JFA2cVdGAtAok4pz/2rqS9rfq1/J6kWknIIrQmFjKcPgimrq1MvkBMLIiqgA
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
AACAKNKrfe6552677bZZs2YF+4DI/w8ODma1kBcAAAAAAAAAAM1ramrqlVde
USf0p/P4eaVSaWtrm5HPJimS1L29vda1j6xhFeW8EdqGIHJFbAgCAAAAAAAA
AAAAAGh52qR/V1fXtJ0ul6QYGxt78MEHc0qB4Pc3bNgQhHBoC1nMnTu3s7Oz
tGEVVSOyItvFPQAAAAAAAAAAAAAAKDMzvkL+ptEn1bLC7aVEf3//K6+8curU
qYmJidLGVATktDs7O8NMksfiHgAAAAAAAAAAAAAAlJk6dd7W1jY0NNToM0K5
DA8PE1kBAAAAAAAAAAAAAJjm1PUr2traxsbGGn1GKAvJDGwcAwAAAAAAAAAA
AABAtRZfMTIyMrdm165djT4dlEWlUrniiiskVwwNDbFlDAAAAAAAAAAAAAAA
52oafRYokampKXIFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAMJ1NfulcTaNPB8jL1NRUkM+D/8ofG31GQF6CfE7BDgAAAAAAAAAA
AGRieHi47Uvf/OY3Ozo6ent7K5XK5ORko08NyNK5c+c6OzvVrB7k9omJCaIs
0GJGR0clk3/lK19RC/YdO3ZQsAMAAAAAAAAAAAAJTE1NdXR0zLCRvx8aGmLS
GS1j165d1qze1tbW1dU1NjbW6BMEsuEo2OfOndvb20vBDgAAAAAAAAAAAMQy
NTXV29vb1tZmnYYTXV1drCeP1jA+Pj537tyorC5PwcTERKPPEciAFOz9/f2O
3E7BDgAAAAAAAAAAAMQ1NTU1OTm5Y8cO65vObW1tQ0NDjT5HIANTNe+++25X
V1dUfAUzzmgNQcE+OjoaVbD39PQ0+hwBAAAAAAAAAACApvTuu+9a33SWv2TG
Ga0keK/fGl9BKBFaTFTBTigRAAAAAAAAAAAAkNiBAwesM87bt29v9KkBWZqa
mrK+0U8oEVpPpVKhYAcAAAAAAAAAAAAyFDXj3NXV1ehTAzJmnXFua2ubmJho
9KkBWZKCvbOz08ztS5cuJZQIAAAAAAAAAAAASGZ4eNg64zw5OdnoUwOydO7c
Oet2CT09PY0+NSBjo6Oj1oL9zJkzjT41AAAAAAAAAAAAoClNTk5aZ5yHh4cb
fWooEcknnZ2dIyMjU1NTjT6X5KyhROwMApXk8H379vX29jZ1HEJUKNHQ0FCj
Tw0AAAAAAAAAAABoSlELyHd0dDDjjEAYgdPsb76PjY2ZWZ1QIqjCTNLUuyNJ
wb5+/XpCiQAAAAAAAAAAAIAMHThwgAXk4TA5OTlz5swgYxw8eLDRp5Pc1NTU
4sWLzdze1NPoyFa4vElHR0dTr9NSqVSsBfvExESjTw0AAAAAAAAAAABoSiwg
D7eWCa6oRuwM0tbWJtfY6FNDKfT29rZGcEVUwd7T09PoUwMAAAAAAAAAAACa
EgvIw62VgivCLU4027dvb/SpoRRaJriiGhFKRMEOAAAAAAAAAAAAJMYC8nBo
peCKqampzs5OM7d3dHQw44xqawVXjI2NmVmdUCIAAAAAAAAAAAAgMRaQh0Mr
BVeI0dFRayjRmTNnGn1qaLxWCq6Q87cW7F1dXY0+NQAAAAAAAAAAAKBZsYA8
orRYcEVUKNHQ0FCjTw2N10rBFdWIgr2trU0e6kafGgAAAAAAAAAAANCUohaQ
Hx4ebvSpocFaLLhiampq/fr1hBLBqsWCK8bHx62hRBTsAAAAAAAAAAAAQDJT
U1OLFy825+BYQB4tFlwhKpWK9XX+iYmJRp8aGqzFgivkEjo7O83cLldHKBEA
AAAAAAAAAEDxpqamJr/kM18T9/MoRksuIC+ZTfLYmTNngszmk9/UzxdwhuXX
esEVUTuD9PT0NPrUUpHrkpvln3uDojj4Frk90GLBFeLAgQPWgl3ySaNPLbmg
YA9LdQp2AAAAAAAAAABQclNTU2NjY52dnR0dHcFMZVtbm/xPd3d3pVKxzl+c
OXOmt7dXviIfa6uR73Z1dTX1LE/LmJyctM44b9++vdGnFptkTslUQ0NDktm+
+c1vBplT/kfym/ylNVxEviL5Vvu8ZGbJ5K0xx5pY6wVXVCNCiZp0ZxC1KJZM
GxSt8j9StDqKYvnXILeHRbEUzhTFrRdcERVKJCVho08tCSmOwoK97Uvu3Bs8
HWrBHjwarXF/AQAAAAAAAABAyYVzeeZ8TfhWrPyrOtMhXxkdHb3iiiuiPi//
2sArQrWFFpCfnJyUC5FM5cifIyMj6sxa8JWoD0/z+J+WDK6QEsx6u5srlMin
KNZyb1AUW2fbKYqrrRhcIVexfv168143XSiRnO22bdvcBbvcvlgFe1OvywQA
AAAAAAAAAMpvampq27ZtUbMb2uRFpVIJvjI0NKT9E5N6JSS3wHofmyi0QE7V
nDi25reurq5gbnFiYkL7ivn58MPTUEsGV0ih1NHRYeZ2udGNPjVf+RXFwYen
p9YLrqhG7wwiRV+jT81XgoLdXLKDgh0AAAAAAAAAABTJnM7r7OzcuXPnmTNn
Dh8+vGnTJm2+MpiXV6fs5W+Gh4eDrc8PHDjwgx/8QP0nXiNtrGZfQF57JV/+
P1grXlQqlVWrVmmTaz09PdolB6/5T0xMjI2NjYyMXHLJJWHmbJZEyFxLBldU
I3YGaZZSSCuKgznl1157TXLv+Pi4FMXf+c53zKJYvWS1KJYH54c//KH64Ezb
GeeWDK6IKtilAGz0qXnR4t/k/8Pc/u67765cuVIr2IMlKSjYAQAAAAAAAABA
Y6lzc3PnzjUXNDC3lrj55pvnzJkTTleFc3bB5KA2J8LiFY3V1AvIq682B1Nm
2jnLH7WlOeRjkj+ts2yVSuWBBx5QPywZu/yJkIdWDa7Qpl9DUso1+tTqUxeg
kKswlyCQvKqFuoVZXSuKrbst/POf/yz8mkqhJYMr5EKsoUTNUrCHG4qpC1OE
5Oq0pTnkY9/4xjfC/1efaHMbnWlbsAMAAAAAAAAAgFypE9Pq3JxmZGTEnMTR
5nHkf7TV6QM5vUM6NTU1NjbWWzLj4+N5XGxKlUrFvC/lX0BefTXbcbZR8+kz
/nVKXbK6uYB8U0xE5qFVgyvMSLC6hVtJqEXxtm3bos7WWsaaRbE1Eabt6/y9
rRhcUa0FFdQt90pIzZ+Ogj1qaQ7tAk+dOmXdW6QpFqsBAAAAAAAAAABNRJ28
cM8y+0ziWGfwxfr16/M4+ajDNVY553SiZql6e3sbfWou4TyypKojAGBqakrb
LiGgTqTK/1hToJz3qwCtGlwhtBfewxttrslTHmqAkDsOJKoo3rFjR/gZ64IG
5X/e89OqwRVRxVpXV1ejT81FzZ+OgB+5Om2hoYDaVpHPaGu5hKZnwQ4AAAAA
AAAAAPITvj1a9/39iYkJ9xyHsO49Ifr7+/M4+Z07d1oP13CHDh3K43pTss63
trW1lfZ1fvVFfveL2FHza2rMgDUDz2i5yVZ/LRxcERVKVOZ1G1IWxVo2ti5b
MeNfAzCmlVYNrqhGF+ylDS04depUWPLUXWHDmpPVbHzmzJnw11TyHJU2BQAA
AAAAAAAAQDM6c+ZMOBMxOjrq/rB1mQg1asLxAmlOe0+89957q1at6iiZ4eHh
ck7eRS30sX379gyPMlWT/nfOnTvX8WV26qg3Hzo5Odlh5D3tW1GhOImXVZEf
P3/+fLLvlkELB1fIrbEGeqXfAibI3ue/lNUJnzp1KjxJeU7dH7ZOpqvTzY6i
ONbaHXlcaaO0cHBF1Eom6Qv2PHK7VrC7n0f1w2rB/vnnn4efiYqa6+zs9L/R
6pW2WPYAAAAAAAAAAABZCecf685xiA0bNpjzF2rUxNTUlPUl01hzHHFNlU9O
V5qSnNi2bdusk1AZLiA/OTkpv7ZkyZL0M3GxppvVOIGQFjXx7rvvmtee+P3u
sbGxJTWlveN1tXBwxZkzZ+bMmWO93YkDvSS5JB/29fVJDp83b97cuXPl7ssf
h4eHP//88zTZQMresHT1mfoP4wRUatTEVERR7LkniJyPXGlXjXalkghNmuFb
NbhCriXcO0njU61H/abcaLndah4Q8v/p84A8gGGxU3cdFWvBLnlb/Uyagl0u
ZHx8fPv27cGVBpcp19vd3d3UuR0AAAAAAAAAAGRucnKyra3Nc45DWF8g1eYv
xsbGtNX4E8/vIEOOyAr/eSg3+YWDBw/Omzcv+M30Pxhrutn68rIWMGDOOMuF
112UXhNOOwa/MHPmzObN3q0aXCGZwbonSKCnpyfuD54/f17N2yZJxu7ubvVt
+ljUfQ0SF8VaPpSi+Ctf+Yr7M4mvtBl3W2jJ4Aq5EOsyJmH5FmuhkoDkAflN
60YbYR548MEHE+eBsGD3WUbGWrBrz8iUsUyNZ8Eul9DX1xd1mU2d2wEAAAAA
AAAAQObCtcR95tblA+Z8pXU/hTNnzoyMjHR2dnZ1dR04cKB5p55bhjuyIhA3
xiD8ZckY4+Pjcq+1ybiUE1JTyr4GQ0NDdT9vfZffPAf52dHR0Q0bNkj+lK94
zjwGC5JYr5TgirJxR1bMiL8zyPnz5+Wmq3d8Xo35y/JPybYEeu2118Jz8ymK
w6C4UFRRvH//fv+iWD7gf6WSYZorRKH1git8CnafwlMleSC840EGWLVqVXd3
t/xXywlBHkhwzmHB7rMfU91FWsKfDQt2ycM+Bfvp06e1K5XL3Lhx45IlS7Qr
lT9KYynulQIAAAAAAAAAgBZz7ty5/v7+3t5en4kDn5UBVK0xe9UCzLd6v/GN
b5i3MtYCIzt27AgXUY+a1EsfXCHZUjLnq6++6pOXrO/yR33RM3PKxwYGBoJd
TqKutFHBFXJuZ1I7efJkGFzxpz/9KeWvlWEJfS2y4pJLLrHeNf9QovPnz69a
tSr41rx586TEk8u8cOGC/P2RI0d27txpvuAvhWrcdJAstGnTppyKYk9yReGc
8uLFi+VM5KyCKx0fHzeXMkgcSZJAJrn9ySefDM78pptukjRM+WsND6kyIyus
BXusUCL5zTAPSLmnPdHy/9o6D5IH6m7YZJKstXHjxldeeSVxwR51Rf65US5N
u1L1X+X3w6c+vNLE69IAAAAAAAAAAIBpyPMFUpTKuXPntMgK+eP+/fvNW+m/
gPz58+evuOIK8xc0RS6l7v8ufyySepdddpn7MhsVXOHYC6BR5BZ0d3c3ML6i
UqmokRVyPv/85z+tUTFdXV2evxmm85IlSyTnmx8YHx9funSp+uPJZpz9eS7S
Eovcte3btwc/JTfRvNIg2MmMr5iYmEhzXB/yfLmXImkIyV253mU3M7Kis7Mz
qmD3v0dhHlixYoW1WJPjmlEH+RX16tI6ofQFuxoxJb9mLbLkLxcvXqweN6oE
AAAAAAAAAAAAMHV2dmpzHLHWOkDxzMgKuYnyl9YdXmZ4LyAfBlcES6l3dXV1
d3cfPHhQ+80igyus7/Knn/oMgyvUK5VjNXxbkKmpqUWLFpmX3HBtbW2NKhNG
R0e1HBgsT2GNQvHZCEl8/vnnwb2Wu++YVx0fH9fCjXJ9zz3WIi2ewi2iJJM7
rvTw4cPaoZcsWZL3HT927FjKbJmT/v7+XC88irkYUbA8RVQUSk9Pj8/ParFk
5noOATMPDAwMZH2J/09OBbs8m+GvyaMqpbo1D+/cuVM7dLLNswAAAAAAAAAA
wHRjnY5P/wIp8nPu3DktHiZcH35qasoMlZkRZwH5IEIj2B8h+Bv5H21+ucjg
CvNdfs/Z87qCKw32Rwj/puHBFXLEN954w1yso+F6enoasnKFGVkRRgqFYQOa
7du31/3ZjRs3Bh9etGjRjh07HJsRDAwMaL+fYHMQHzm9y9/V1RX81IoVK4aH
hx1XKtdlXmnKo7udPn36vvvuS5Yh8yP5rYBVO0xmyJycSVDWmUEX4Qd8yihJ
Z+2Lt9xyi5mH5ae0j7lDj9LIY5EW4ZmHx8fHtY9ZF3UBAAAAAOD/tnd/O3Ek
ef6wuY/uwpcx24aei/ip1YPB17DalnpoTPc9jGawoWzv6Z7syS7CYGztJax2
FpVdYPDOnu3hSAiDELjEGy+pTmVnZCZZWVXUHz/PgeXGWVkRmZFBS99PRgAA
QE7hC6Tv378fd7sodnV1lXu9fWFhIbvrx7t37+IbOshC9+MNV4ziXf4ykxCu
uLktpIbvPR/M3//+96+//jrpyH/9138NeLZxbRLU6XRyOZOdnZ307sfL+6cj
pPrGhSG9vLyc/cji4mLZRz5+/Bj+tebBgxjFu/yhnbmePn78uKyIHC9cMLra
eraFgw/OP/3pT0mDv//++3AZBzzbfc5v2euQi0/ktnMKIyEeHnN9Romq72y8
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
lQUAAAAAAADuWa/XW11djUt1S0tLSnVfrDAqjo6Ozs7Owl/G3ZbmymrQVmX5
kp2fn799+3bcrRjIyclJ4XZOVmUBAAAAAACAkXr37l1hDfr8/HzcTWM8Njc3
kzHQ6XTG3ZbmrMpCTpjTkiERRvi429JcWSJuZWVlqtNQAAAAAAAAMOGurq4K
a9A7Ozvjbhpj0Ov1lpaWkjEwkzVoq7J8sdLFTMIYmOocgkQcAAAAAAAA3L9e
r7exsRGX6hYWFtSgv0AzE664UYPmt2YmXCERBwAAAAAAAGPR7XYLa9BnZ2fj
bhr3bZbCFWrQZCX73cxAuEIiDgAAAAAAAMairAY97bV1GpilcIUaNFkzE664
KV+VRSIOAAAAAAAARipdMF8N+gs3S+GKG6uykDFL4YqyRNyzZ8/G3TQAAAAA
AACYZUdHR3GdLtjd3R1307hXMxauUIMmNUvhitD+drstEQcAAAAAAAD3rNfr
Fdag19bWxt007tWMhSturMrCr2YpXHFTkohrtVr7+/vjbhoAAAAAAADMssIa
dKvVury8HHfTuD+zF66wKguJGQtXSMQBAAAAAABMr96tcbeChk5OTgpLddNY
gzYOG5u9cEXo0aNHj2amBm2abWzGwhU35Ym4aVyVxcAGAAAAAAC+BL1er9Pp
bGxsrK6uLi0tbW5u7uzsnJ+fNzvV1a2hN5I7hYsf7mBcqgv3dIruSBh4BwcH
q7eS0bi3t9ds8Y0vczTOXrjiZiZWZTHNDm72whUnJydhGE91Ii7ciKOjo+3t
7TCwl5eX19bWwm3qdrvNbtAXO7YBAAAAAICpcHp6mpZic4XLnZ2dvk51fn6+
trb28OHDpHSoPnL/Op1O4a1sVsO9Z0n1uXDxjTCiwj/1dbajo6PV1dVwtvDZ
g4ODEbV5As1kuOLy8nKqV2UJD2DFNNtXGTpcijCwk2m23W5/UdPs7IUryhJx
KysrU3FnQyO3t7cLB3b4n4G+fu8kpwqfCp9dX1+fit9ZAAAAAADAF6Wslp2q
n6+Iq5/Pnj0baeOJXV1dFd7QfnMy96/X6xUW6bLVuvr5itPT0+x1CJ/d398f
afsnx0yGK6Z6VZY7p9n6U2XobG6HlC9qmp29cEXw7t27wulu8tMFSc6nYmCH
21S/F7n5PzwyM3OLAQAAAACAGZBd5aDVaq2uru7t7aXVq/Tn3W63ztlyH5yx
+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
AAAAAAAAAAAAAAAAAAAAAAAAAAAAYCr8fyoPyCE=
    "], {{0, 454}, {2847, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{490.9000000000001, Automatic},
  ImageSizeRaw->{2847, 454},
  PlotRange->{{0, 2847}, {0, 454}}]], "Output",
 CellChangeTimes->{3.770630754058014*^9, 3.7706310739954195`*^9, 
  3.770666081815854*^9, 3.7708011176477547`*^9, 3.770802489058016*^9, 
  3.770809316242325*^9, 3.770832194820239*^9, 3.7708382355594316`*^9, 
  3.7708422524936056`*^9, 3.77088244633*^9, 3.770886467312604*^9, 
  3.770894536460534*^9, 3.770934388905322*^9, 3.7709361244451823`*^9, 
  3.771025639075667*^9, 3.7711592698676972`*^9, 3.7716755283950872`*^9, 
  3.7721372049904013`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"barycentricToCartesian", "[", 
    RowBox[{"orbit_", ",", "lambdas0_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "area", ",", "lambdas"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"area", "=", 
        RowBox[{"Area", "[", 
         RowBox[{"Polygon", "@", "orbit"}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lambdas", "=", 
       RowBox[{"lambdas0", "/", 
        RowBox[{"Total", "@", "lambdas0"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{"Total", "@", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#1", "*", "#2"}], ")"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"First", "/@", "orbit"}], ",", "lambdas"}], "}"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{"Total", "@", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#1", "*", "#2"}], ")"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Second", "/@", "orbit"}], ",", "lambdas"}], "}"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.770594683843901*^9, 3.770594714036233*^9}, {
  3.770594811348403*^9, 3.770594882598117*^9}, {3.770596735320371*^9, 
  3.7705968017615423`*^9}, {3.7705971377783875`*^9, 3.770597155754732*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "X10405"}], ";", 
  RowBox[{
   RowBox[{"X10405", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"barycentricToCartesian", "[", 
    RowBox[{"orbit", ",", "\[IndentingNewLine]", 
     RowBox[{"1", "/", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"3", 
          RowBox[{"a", "^", "2"}]}], "-", 
         RowBox[{"2", "a", " ", "b"}], "-", 
         RowBox[{"2", "a", " ", "c"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"b", "-", "c"}], ")"}], "^", "2"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"3", 
          RowBox[{"b", "^", "2"}]}], "-", 
         RowBox[{"2", "b", " ", "c"}], "-", 
         RowBox[{"2", "b", " ", "a"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"c", "-", "a"}], ")"}], "^", "2"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"3", 
          RowBox[{"c", "^", "2"}]}], "-", 
         RowBox[{"2", "c", " ", "a"}], "-", 
         RowBox[{"2", "c", " ", "b"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "-", "b"}], ")"}], "^", "2"}]}]}], "}"}]}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.770594393963303*^9, 3.77059449064487*^9}, {
  3.7705947175977173`*^9, 3.7705948013809485`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"perpector", " ", "of", " ", "anticomplementary", " ", "on", " ", 
    RowBox[{"extouch", ":", " ", "http", ":"}]}], "//", 
   RowBox[{
    RowBox[{"mathworld", ".", "wolfram", ".", "com"}], "/", 
    RowBox[{"Perspector", ".", "html"}]}]}], "  ", "*)"}]], "Input",
 CellChangeTimes->{{3.770596161041416*^9, 3.770596166975133*^9}, {
  3.7705962111099424`*^9, 3.7705962160706673`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"X144b", "[", 
     RowBox[{"orbit_", ",", 
      RowBox[{"{", 
       RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
    RowBox[{"barycentricToCartesian", "[", 
     RowBox[{"orbit", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"a", "-", "b", "-", "c"}], ")"}]}], "+", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"a", "-", "b", "+", "c"}], ")"}]}], "+", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"a", "+", "b", "-", "c"}], ")"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"b", "-", "c", "-", "a"}], ")"}]}], "+", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"b", "-", "c", "+", "a"}], ")"}]}], "+", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"b", "+", "c", "-", "a"}], ")"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"c", "-", "a", "-", "b"}], ")"}]}], "+", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"c", "-", "a", "+", "b"}], ")"}]}], "+", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"c", "+", "a", "-", "b"}], ")"}]}]}]}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7705960988978877`*^9, 3.770596152489276*^9}, 
   3.7705964644402924`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"o", ",", "s"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"o", "=", 
     RowBox[{
      RowBox[{"orbitNormals", "[", 
       RowBox[{"1.5", ",", ".1"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"s", "=", 
     RowBox[{"RotateLeft", "@", 
      RowBox[{"triLengths", "@", "o"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"getX144Trilin", "[", 
       RowBox[{"o", ",", "s"}], "]"}], ",", 
      RowBox[{"X144b", "[", 
       RowBox[{"o", ",", "s"}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.770594889010399*^9, 3.770594930780878*^9}, {
  3.77059615638287*^9, 3.770596157927743*^9}, {3.770596701063483*^9, 
  3.7705967154005775`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.5900904471509048`", ",", "0.34629774019097903`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5900904471509052`", ",", "0.3462977401909789`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7705949088000946`*^9, 3.7705949313921876`*^9}, 
   3.7705962187307005`*^9, 3.770596715962144*^9, 3.7705967554164777`*^9, {
   3.7705967953875823`*^9, 3.770596806048087*^9}, {3.7705971296819963`*^9, 
   3.7705971597113733`*^9}, 3.770630754132781*^9, 3.7706310740422955`*^9, 
   3.770666081866721*^9, 3.770801117702608*^9, 3.770802489117855*^9, 
   3.7708093163340764`*^9, 3.770832194880079*^9, 3.7708382356142673`*^9, 
   3.7708422525494566`*^9, 3.7708824463828306`*^9, 3.7708864673704805`*^9, 
   3.7708945365174093`*^9, 3.770934388951228*^9, 3.7709361244890976`*^9, 
   3.771025639132488*^9, 3.7711592699464965`*^9, 3.7716755284509387`*^9, 
   3.7721372050432787`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Triangles form Trilinear Matrices", "Section",
 CellChangeTimes->{{3.7671181333907766`*^9, 3.767118147026329*^9}, {
  3.767707467749441*^9, 3.7677074819091167`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"trilinearMatrixToCartesian", "[", 
    RowBox[{"orbit_", ",", "sides_", ",", "tryM_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"trilinearToCartesian", "[", 
      RowBox[{"orbit", ",", "sides", ",", "#"}], "]"}], "&"}], "/@", 
    "tryM"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.767120629256834*^9, 3.767120682448732*^9}}],

Cell["to do : anticomplementary, external tangents triangle.", "Text",
 CellChangeTimes->{{3.7671182968449345`*^9, 3.767118309883055*^9}}],

Cell[BoxData[
 RowBox[{"orthic", ":", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztvQ1Yjmn+/2/GGI4ds9bujBbDl0VjZgghSgzyTKimtCkNEdbDethUW2wq
oWiI9VBYzzXf5HFJDxR5qMQ3rEHhGxkPi9kZZsx+mdl+r3/nMdf/PkaT1K37
upvP+zh03K77us7rfPh83p/357rP87xajvujs++rtWrVml2PP85j/fvMmjU2
0OU1/tM38E8TxtXmQxb//u+VWrX+v88lAoFAIBAIBAKBQCAQCAQCgUAgEAgE
AoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFA
IBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAI
BAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKB
QCAQCAQCgUAgqDC+/fbbf/3rX7dv305KSpo1a1b37t2HDBni5eX1xz/+cfTo
0QMGDLC2tp44ceL69evPnTt3/fr1L7/80tRVFpSN//znP+pvOdBOE7wMPH36
FId69OgRDlVQUHDmzJkLFy5cvXr15s2bDx48ePz4Med888039+7dw5X4y2dT
V1nwc4FQfY2BUL3JIVQv0Cfw+lu3bp06dWrPnj0rVqz405/+5OrqOm3atIUL
F/7tb3+LiIiYOnWqi4sLf8PDw2H7w4cPX7t2zdS1FpSNr776Ckr57LPPsrOz
U1JSEhMTd+7cuXfv3gMHDvDfQ4cOZWZmMoLp6en89/jx42fPnoWF7ty58/XX
X5u67maJ77777t///jd0jRPR7SdPnqSHk5OTd+3aRc+rv3//+99TU1MzMjLo
/7S0tIMHD3KEr/77v/+b84uLi03dCEHNh1J358+fj4+PDwoKCgwM9PPzQ9gv
X74c5v+f//kfjf9nzJgB26PtY2Nj8/LyTF1xQdmAN3JycsjOli1bNnv2bDc3
tzFjxvj6+k6fPp1BZIjnz58/d+7cgIAA/rtkyZItW7ZAPhA+bG/qupsl4PmH
Dx/ev3//9OnTsDrdHhYWNmfOnMmTJ/M3NDT0k08+iYmJWbVqFY5Dh//lL3+Z
9QMYoM2bN+fn55u6EYIaDi2XP3LkCPY5YMAAaMHf3x/j3L9//+XLl/m2sLAQ
EfLXv/4VZkDbW1tbY8CQg6nrLigbCEsIZ8GCBR4eHlZWVrVr127QoEGTJk0s
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
70wuVK9PVJHq1RRcsk4MPjExcdGiRWhCFxcX5BD0aGlpSQqJF0yZMgXvgB9Q
O4YbaqFqFixYcPLkSewcNWVYsnqZAn5RVFSkFu4tXLiQotAqXBUWFga3IKjU
wkMN3377LdYOaykt+qK/Q+Es0NrNmzfRXXFxcXPmzJk9ezb0rubCLV26dN26
dUFBQR4eHra2tpA8NaEhyDOYoYK30C3oscLCQsMHC8+qzWdXy/bo0SMgIGDf
vn0YQA3YA8es7VmtAcGAGR3qXLdu3VatWn344YekpYQSRraCnaA9CKrc6m+h
en2iilSvTTvHtlE4iNtt27ZFRUVBj6g+FFHjxo2trKwwaQYde965c6dhwosq
5qYcxPLVPGQN+AVHOBm/wJuoEsVCPrVr10Zz+vn5lXkVfnHt2jUya1jrzp07
Lzq7DDehIWqvJ7zD398/MjJy/fr16gktrcOLY2Njp02bhh5D5yOZqvlB6MuD
es0o/UbDBw8ezOg4ODjAdcjXq1evqgfF2s+FdILSjTVsZ0uztmftsc+nn34K
vf/yl78kB+nSpcuLqhFtCx3+VmJPJ6F6faKKVK9tdYj7qzT/ypUrJKeUGRgY
iI29/fbbeAdaCKvz9vamcHhj5cqVikysra3Hjx+/atWqlJQULjQsWdtoMTc3
l/rgIDgU1FqnTh0bG5uJEyeuWbMmNTX1R1dRDfxi//79aBi+etE1I9qefqh3
PJEmIJA48pUBqGpISAiu7ejo6OTk5ObmFh0dTQio4C10C+1JrzafBEFIS6E7
Ol/tV/9sOID0iIb0Od5d8bXzuoVZ27M2VwplMm7cOKoKzbZt2/ZFXxambaFT
zmOociBUr09UkepxBywQ6yXhzc/PP3/+PNeiA6E+xPDs2bNxAXL8du3aNW/e
fOzYsVu3boUrIBM0Uv369TkOYSKS8Q4oha+QLvgaNobyQUhTGewcfVVcXLxx
40YvL6+mTZsirrh85syZav8oGIb0lkvU3owHDhzg1ngNnlVBVa8yX8rh8qSk
JPJxnJdCUHSZmZkw22MD4MXBwcHQIE0jTaZK5PLV9pvXy4PaaBEyT0hI8PT0
bNiwIWkLVmG49lPteYg+RO0TDho1auTu7s4owI2Mmrm/Qr3E/O1ZsX16ejqB
iWI7duwI1auXhcXHx1OTMoW6mlWlXlhAkxli7nX58mUCTSV+OxCq1yeqPq9e
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
BsPe
     "], {{0, 195}, {505, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{190., Automatic},
   ImageSizeRaw->{505, 195},
   PlotRange->{{0, 505}, {0, 195}}]}]], "Subsubsection",
 CellChangeTimes->{{3.7677074960242233`*^9, 3.7677075004683084`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"excentral", ":", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3W1MU3m+wPFzH17cd/PuvvANeycxm81s3IlZszETsxGLudl5UYGgNTEa
xxlmmXEVqyiguA44SDuw1CIIissoDyt2HOjIU3kQ0NpCS4sFSoWW8lAKLZRC
aaGlD5z7h826L0Z3jncK53/O+X3CTGaSJj2/v+d8z7+twP98cjYh+d8Jgjj/
X+hfCScv7RcKT2Yk/if6n9iMC5998h/oP7rQP1n/RhAb/00CAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
APAO1je/IqG1Ff/yvNdls5temro6eh890nUpB03jJtea3RtaXovQfZwUsWwc
Kjg4MmC6jTMWffm980uzIw6zWvv9/brsy9KkpPJscc33nfVmn2bGj85buo+T
IpaNQwUHRwZMF9n8CnkXJhyjKkuPTJ4rzI3de4wgvozlZ+ZWiHrc6LxFd0y6
j5Milo1DBQdHBswW8i8HPLMrztHJoWd9nbUtspuFwpPJez/cRxBHDvCFNyry
Ne4fLL5XC8w4aVk2DhUcHBkwXWBpdnnKMDeo0LdXyqvybxVc/NNxftxvfhlD
ELwD/JS8ir9o3Q1jvhGGnLQsG4cKDo4MmM7ntMwPtk50lLZVXi8Wp6amHvv4
4307d6JzlviQxz8pqripczdZfaNuZpy0LBuHCg6ODP61QCDg8XicTqfNZrNY
LMPDw6Ojo+Pj4+h/7Xb7zMzM7Ozs4uKi3++n7QiXHJ5JAzpvB549VNSXVPw1
5/wXgoO//WAHQcTy+ClMO2lZNg4VtIwcDAZXV1fRub2wsOBwOKanpycnJ61W
q9lsHt00MjKCTm+v1xvFJwUUoT+Xqakpo9GoVqtbW1sfP37c1NTU2dnZ29ur
1Wr1er3BYEAVQuWh6whDAR86b9Ed0zmhswy39+tk5SLhH3l79xBEIo8vZNp1
yrJxqKBlZNQcFBx060Q308HBQY1Go1QqOzo6mpub0RneuEmn06HyRPFJAUVo
n4Oagzojk8lKS0uvX78ulUorKipQf+RyOfqjUSgUqDxoz0P3kZJkZImMTJKh
gRcP80WJB/kE8RmPf5m51ynLxqFiG0dG91PUHJPJhILT3t5eV1dXU1NTXl5e
VFSEznCJRFJYWIhOb7TnieKTAorQVkelUj169OjOnTtisTgzM/PWrVvozwif
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
AAAAAAAAAIDx/g+JMhyT
     "], {{0, 192}, {381, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{163., Automatic},
   ImageSizeRaw->{381, 192},
   PlotRange->{{0, 381}, {0, 192}}]}]], "Subsubsection",
 CellChangeTimes->{{3.7677077398792696`*^9, 3.7677077437110205`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "excentralTriangle"}], ";", 
  RowBox[{
   RowBox[{"excentralTriangle", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearMatrixToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.76770775263914*^9, 3.767707784951699*^9}, {
  3.770539979365053*^9, 3.770539980900979*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
sMvc6OutWw8eCEw/md58nTXUOCiY1WAS8ah0slbKybl9KXKPnetnyNjePiAq
vfjBuKJNqB6XvX2HrZgZFg9V8puv3/v5RMAeW9MvDJy27/I6mx5R1JvdPNbC
m517iKFKrJaNY7NDI32djyqb6PTq8uqu7uFJfMSHh0+xqOf79LemmHoWU45h
0r5mRtLVgzY+q5CN0Zefb3BAdictT12LZNRVc/jdk9OT4kmtdrzrfjrD055i
gHaafG9IDkJHCrZSn9xqGYPzfQCA96fH9v16z8ZeJrXAn5hoiHyJlkTfaMPE
umOFfSW9r13j8Hr7nE1sdvsle+T0p9XyGv/8DR4XHT4OwnMwUUlJj/DeYr4Z
IcMNW/xPpjOLJrBmITY2fzm2UtAv4zBF7NTMuHCS1QGEiFaOlDhaDVuGcZSY
4B2jM+kYm9+cxS0KSju5Z/OGucfZm5P8IzKZlSKsS4ZNLPmtTPW3pm8eBjde
vWGl3UnkW0TOaKY3P79n7OubjZu1mdGeUBTEIme10dnj71j066B9AAAd9Nm+
F/d1GazIZEWQ0gnIz+n7TW5BBr6FBzOe3GsZe+Ve/aopTN6LiesqrkdFOFgS
ECL/YOcRknqCOXKjdbr1nXMnloDm+VmqmYFHQ8yE5p93xh7Z8aP1dmRAJuyP
j8mpbRRiA1LtjEozN2B6+vhp9c/tWe7xJz2tthxCq3ztvKg/32vGczCpeuds
TNFwDbfiXHemQ8JR0iZzElpB/NGVco5e3SrFhpXYzNI9wkLva6qRjqmnmxWj
hcWppwM22xmjz0z+7fTDwUTLK80RrKHygfl7xqpEmPwZJultuJOY4rHJzQCR
fiSYHY5Zm9x4rGigpG+hZ36hfQAAHfTZvhcTG57W0aoTHbNc0LFt31g4HV5B
vO4aW0mv4bzyjDblBCbtwoSVrGsRwSRzE4ScNm45HP3L2brJu32irunFuMvV
f74W+NuUPXtyv+kX3/xDawN3bTK134c2nLILzv6Z2f5Ujk0q1VLN3GvG2gqe
3DxWeHLdSU/H77cdRYQE0umCa+V9gvnLEJTvOE433VPUf9/3cfwXZz3NN27E
W+Nre5Cacq9lSIVNqDHx0j26UO9rqhIOyUfLxZ0ZOReC9lo7rkRrfrD02ht1
K7p27E7vTNfU/F1b5ZOYqAebqGFmRh7fbmG0ApkRbOyDknbe6UuqH6tf8B1+
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
AB0Wq33S8faZdvqzh2GXw3w2m7kiZGfyw6FjoRdyHzAuX046e8L/GJnsST7w
EzmQTI49GZl7Nb+1iiPunJThO7Q/WvbzKwg0Ev7I5MBjTgOjuvjWTdq12KS0
CwkRF88fSosln08MDk+9diyj9mp5b/3Q9Mvn15aCVoxpJzH1cDvjUvZe21Of
ob0bLK3co9bE1fnl9xb3TL3y4rn2DWGy5hpa7PP2kYytHb3jt2Z0nC8feTQk
XLJ3vXB4+Kb7H3MbGFX3sjLT0sPDk86fS0pLScrKSEo5Gxrp44n/coNPnIlI
Y8QyBxmtPDx/f7BAPW4tL0D7AAA6LFb7ZkcaebVp/TkeyX6eNiaHEfI1WR/o
53M6h0Y57bPTef1aQ4QM0MoVaO4E13qrSJ+4Ehqbj+/Q8O/zf7Ts50/7UQm4
HZyGu+w8SlbKqZOBfkRXD+fthN1OqzyIyMnFxMLdz9A3x4dae6d55OV5lUtB
I8Q0XEzV1ZydQHWy9kVojxHBwY1ikdgUXjhY3st/5cVqPqYcxGRNNTQKxZGA
t8/WiGD1rhd/HPARHx6+rjwKLe6kv4e3hYXrVgdXjz2uQb6ue+w2WK82wH+5
JusIBHcKMbUJzx8++tO9QH1uLS9A+wAAOrx3+15c1s3vLx8oPt14kRCzz4rw
Lxv8m/xX6w/s9omMo2WciT0TfOSAn5Oty7cbLf77+y+QsbmJl7Nfhk9O5y+1
o09GRe94YM2LJcuEHD6nmsvOriu9Sr+eEhcXFxOfEJWQcjopjXIuMDFyW1qo
se9hR2vXIwZ2cXui7mWW94yosGk1Jlmyg55qAaZ6isnbG7POpzpauSO004hA
cqNYJTZFFg5WfLLtk89OCJ+1T/SWNzFz7qReSgg4HR0UHRoSdywsKSr2fEpK
DI16Jtx7u4vxmq8RIny7iXw0wZ3enfqI2/BU9I5F6m9reR20DwCgw3u378Vl
3ePt99jZXqWnVp1y+vsPX36O0OrP12+z8Yn2oRVGZ92+ejOjKPtSiu8h/283
OqCVm9aQzLefXX+GFXi7raRz/B0PrHmxZD6nsr/qXAPNiZpwwC842Moj3uvs
9QvZxfn1jaXlt6sLzzXmep0P997idHjFah9H76spec3dUoyrxERLdpm4agZT
DGOSlrob5xIdfnRBiGxEILpRbBObzhYOVn2y7cPDN/KE3lUYfvN86In9wdam
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
Rm/PJpeFoLC9X5lt+gkZxhP97//Wvvk/o5HPCoW80Yn+rvHREd6UYEysnpFr
ZKo/nAex6F7cdW2ql9lTcKI2wTjKm2BJcEQGbjYeKUl3HvdKtGNy7ez8G1MK
+iScYkHrxZw4v/1WJAO0lrTZNyI1P39U2jSt5Eo/4MHcF+3rf5hZEkK6ZIo8
N5t+v+vECp97u6423G7mKjGtWDg0M1I+3pHJyjiU6PWNuzEi2ZqYuvmtPpGz
N62MWtrW2z/G5c0IZ2VvnZGiv63lTdA+AIAO79k+fl/JYNGxpuS1lGO2hK0H
kHHkloDc9JLOCRUmlIvlUnyMM9hXml105miSran/VvJW1yPG7hTv5DuZ5e34
d3h8VyZ6x3TMiXZ6B51cHobC9xua2+xChnFE/3tUZs98+7TK+daIeCOjrY+7
mIz2hnp2H6d5UjkoVOH5W7yPZ4Fe3G1b/KyJ13ClP88rOdjZ5kcCWmFkvv1Y
RGZx1YS6S6SdkM+lQPKsafJJOqfA60qQO/n7PSvQTiIp4cK1R80i1ZBUPbPg
ezXrwYv29T3ILAokJX+NDtub/+gRbhBWfpDent/BU2PqmZEqTm1sWw7pavA3
B21XrluJTM3WW+7zsTtL80nNT6JXFDKbm1qHRngzb70SQX9by5ugfQAAHd6z
fb8fmfReb7bLBxFpTpSq7BoOvt9TK/ha8SDGb6qnUpKIBFeEtq8jOC34lo8T
HfSu2+TKCBThsdbc9rVnoGsVcyenVJMDHZ3Mu5WplIeMO6V17KJhGZ6/saW7
ru91SsGQjFMmYlMz47xIVsYIIRNbJ79L2TnDqtpJzcj8SUpBfzmHGc5OtYhz
32G17ihClC1kRjq9ewLDhPNPAfxwXrSvl5lZ4E+an61KIPpSDBOb/Av6mXOz
VVXjHdltOU6sCBTqjMzWzF2TvnqdsZ27l28qNTj1ZnTq3cTUonxmc8fA2Fuv
QNff1vImaB8AQIf3bV97ftutA6zQlaEeZmb2+5FxjPWha/HXmR297Ce1FbX5
jHIqlRYWce6nA75mtoEHQ04n5i7wVv+CIRanPISdYZp83GqrDekzg50bHUOP
RmdSmTU5DyqLH5bXlLNYBfcL6Dm5V68VF5dVt/Z/uHHfC2rJuGKyHc/fA3p8
hJ+rtemabTtc9p+I8btUlEhn5ZVVNbPrmXczrseeiHO399/l40K+YL75bnDM
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
Pul4+0w7/dnDsMthPpvNXBGyM/nh0LHQC7kPGJcvJ5094X+MTPYkH/iJHEgm
x56MzL2a31rFEXdOyvD8/dGyn0+n10j4I5MDjzkNjOriWzdp12KT0i4kRFw8
fygtlnw+MTg89dqxjNqr5b31Q9Mvn2zSHzx80/2PuQ2MqntZmWnp4eFJ588l
paUkZWUkpZwNjfTxxFc5+MSZiDRGLHOQ0crD8/eJrunb3qkY005i6uF2xqXs
vbanPkN7N1hauUetiavzy+8t7pl65cVz7RvCZM01tNjn7SMZWzt6x2/N6Dhf
PvJoSKiPNwjtAwDosFjtmx1p5NWm9ed4JPt52pgcRsjXZH2gn8/pHBrltM9O
5/VrDREyQCtXoLmzPeutIn3iSmhsPp4/fPT3R8t+/ugblYDbwWm4y86jZKWc
OhnoR3T1cN5O2O20yoOInFxMLNz9DH1zfKi1d5pHXp5kqD/4iA8PX1cehRZ3
0t/D28LCdauDq8ce1yBf1z12G6xXG+CrbLKOQHCnEFOb8Pzho79PdE3f9k6F
mIaLqbqasxOoTta+CO0xIji4USwSm8ILB8t7X11TNR9TDmKyphoaheJIwNtn
a0SweteLFwm0DwCgw3u378U1zvz+8oHi040XCTH7rAj/ssHHfV+tP7DbJzKO
lnEm9kzwkQN+TrYu3260+O/vv0DG5iZezn4ZPjmdv9SOPhkVvePxRi+WLBNy
+JxqLju7rvQq/XpKXFxcTHxCVELK6aQ0yrnAxMhtaaHGvocdrV2PGNjF7Ym6
l1neM6LCptWYRD+HAuWzE8Jn7RO95U3MnDuplxICTkcHRYeGxB0LS4qKPZ+S
EkOjngn33u5ivOZrhAjfbiIfTXCnd6c+4jY8Fen+DD+2NdVFLcBUTzF5e2PW
+VRHK3eEdhoRSG4Uq8SmyMLBCmgfAODj9t7te3GN83j7PXa2V+mpVaec/v7D
l58jtPrz9dtsfKJ9aIXRWbev3swoyr6U4nvI/9uNDmjlpjUk8+1n159hBd5u
K+kcf8fjjV4smc+p7K8610BzoiYc8AsOtvKI9zp7/UJ2cX59Y2n57erCc425
XufDvbc4HV6x2sfR+2pKXnO3FOMqMZF+biKDh2/kCb2rMPzm+dAT+4OtTQMP
eiTHJN25xaovrCqrqS9gN+dkxPod/tHEFCHSD3Yep1KDS0dusqfbeBLdn+HH
tqa6qGYwxTAmaam7cS7R4UcXhMhGBKIbxTax6WzhYBW0DwDwcXvv9r1xjTMB
mayav53neoKxD4VIa4qpbKsc7FWphluyL91wsg1CyMFg/RcbfJArzTGpilbP
ecfjjV4smcumNdAc84JQgIeR6VY3ZJG4Obwgrbx37m6Qs0NSXhnWT6UnR5Jt
vBAiEkgUSmZNkwgblGF8/dw8FB/x4eGrTLSIcHMwN9qDkK+NEzU5u7lfhfHU
glktB8PY5fS4cLKVBUKuBGIAhZrYxC8cFPe+87E9H+ma6qLkY7JBTNRUk0mh
kOZyRpxvHzGxKbZwsBraBwD4uL1v+zQyTC3EVOM9D9PvnbaPI6Dd3/3XV0Zf
otUbDF38XC9kx1YNMjqHO8efqtXctjtp9N2bT69A2/5psub/b+/OvprK8j2A
n/+Ap1sPvLBWr2uv6nJJc+3CWjZaDCIICAlDRAUHLEFBCgMoyCBgRCQOyKAS
FQ2CKASRMQyRMBXITISAEcJgZAhjICFkDudu0rTXsoASEKXv+n0efCEe9g5n
ne/5nbMHm3OYV87CXLCWoSXrPo1cpJrulwlbW5hxjy87BDnqnTxm5ewXYRbO
DM1sK+IKF151ycdVM134aGV9SU5cTAqJdO3y9fy86rcoDkaVuPSLVkNahUQl
HlaM89rZT7JunaV4mPgcdndxidjtQA+KrcytGRjV4iLFuFTaqZ6pLE6NJRMd
t2L6LjYnIhKzn/GltUKFYHbpMSmbraefRSPBVcO47G0LI57mvs9TDzv8zz0E
r1jLhGZKcV91z9TvP/xp9jn8w8rh1A37+x3UckFt38xGNBCyDwCwgvVmn2YW
VwlxGZ+Tl/jotI3fXzAbo7/9925HzC7U4uLj6LyGWoHo7cTUhHRifn6MV5SS
521PNcDcdu4yJIVgZ5ku9Las18Il3/cpp99JB2pEnPSC5OCg47Ym3xs4Hzzi
czWFUtKTyRG+Hp1d2P1NLdXIx/DZgUH+m1c1rQxGbVUt7+27CVQHoThQftG3
YCj45gabxLy8YvrVsFNHzIx+dHE5fepCSmgKJ5090NI/M6vF56RDsol6mSD7
+d3o43bu32HG9vZBV1JKy8eUXLFmTL50gzZbTz+Ldg7XTOHqQW4B7dlpuzAD
zHPvHsKZqzsTmsKKe9l/ln3OO6wP+MYfTuMlVA83vINxngCAr2292feHZ1/G
W3br24Vi5BJSKofBEeo+tLjUZw+LzgwkJBhiHtamRscjsBA26SmX0TG25IFl
wg4R5+lwSci90OP7dy/sA25GDKSksWokOE+Oj3/1p3yo4kPBN15DTaGccTDb
j9qz2yEwNIVVMo5zxLhQN3lfNdMrF7AkHbS0G1FEq1MYRrByot7IqOuQ4wIV
PrNMdbbZevp5Pv2bkgkWBHKMYULDuWJ+Wc8ncxw+zT7XnTZHA5K8snvv1Y+2
bMxar5B9AIAVrDP7tDKhZoqjHCoupV0K2m9njH238x/OP59OsHjAobAHqvqm
Fz6kluCKEXyup/lFwh2vfR4GGHGvpemvsduSWs6V9JXxl37dI3lXN1x9/W2a
Y7w/cZ8ZEdMj7HWnXmfUtsvwdyp8+us95dP+633cdN+rAVY8J9nt2tlDe60P
YgYky5Nxsdn1LWK8TzY/rdYulIbvm97XJnc+9YwL9bZy8MX+QrbzoScXcFDw
TaiXHY25aXq6KovruvRXp7EpxBRLLMB51z6PEANy8enUtoLXwt9t26GexBU9
uLShOv0KxdHCEsNIP9t5hdOCWYNP2qfalx0CtC6QfQCAFawz+9TiAcVQlfRN
avatkBPWTvrY1p8tfE5cyYqpF77omeZN6pZqVEzgkm58vI6VFn3+oLmRHmZq
aWMfkuj2gp/YKGxcZlmPqe6S3iJyU9z3V73N9uxBWUO2PU2/U/B6QI2Pa3Dp
13vKp9HVOPKRtqLWh+RC320Xjuwzsf8F233RLiwzmdX5XoFPqDQy7cJnhFxm
27NzxaHbQ72ddh3wxyzjiZeYj6v4M7ppCKo/zOLYZD1dlcXxOe8bMmoTnJ4e
xs4d2GHu/KseId39Wg2jTvC77RpV47iMh4tr2I8pYUSznRjmvMfh15iHVxsm
cvkS3tSGLHgH2QcAWME6s085yZPy80QNVHqMP8HiEIaZWxCjYtKqGiQ4X45P
/ut5nXQYn2jG3+Uz7gaRdFvYbLNwcItJoTaM5/HFvMmlL31jHQzuUxI7BIs4
bmRq7YEZJhACmXRWz1efzf2HhSttf9ru/MkgVbVmYftxSV9dGotKpBEwT1eT
7UeDMK980r1mRsvwyr9g0/R0VRan4Q9zMpvpzvlkLOiwkYnlQuOJgcw0Vo9E
960tPq9VjuFSLi5is+gRgQRTQwxztCaej0+j8SSsYXmvGPYwAgB8bevMPulQ
41hjYv8Lt9sXj9raHcf0T+z75W5CTnO3DB9RqGaVUlwpEnXX80seNd4NunXO
08WFpL/dcr9PRGR6KQq+ppG54dmlL31jXEZnJqkyHIs88XfTfccwwzhCYNGH
RND9H61iViweHRrv5Y0NDY5OzgilmmmFVq5epr5ao8Xs661IKwsn3jXBvPeb
7DoSrOdXcORR83POsAqfl4oHpgerxrrS2Km+CT47PI0xou1OE4+ALcHZJ+5V
0l9ye3qFw6PT4ln5kqN6Nk1PV2Vx+bXJHlY3M7g+3vjKGUsLSyfMwMPG607i
i6aeuXmhYn5W10LVDH9OUDrTfjv7RsBJK6IBto24n0yhFRYOyVqnVMMy2LsW
APC1rTP7RPyy/pJzrUnbqOdsLV1OYcbRDkE5KWVvxtW4WCFVyNANfz//ZWbJ
Zf9EW5NAF5KL+1ljT+qZpBdpVZ2o4kPBJ1lmkOJ4J6OLQaqKxKJOGprZHMEM
bxACC+isbl0izKt0F17J6OBQexOPldfZ3NjBF3AmVP1iNQqFL/f14B+yj1+e
VnKBmPQj9qu92V6vKIPIqtOMzsKuUQ2umR78TVB/jZtNfBS247St/nZ9zMT0
J4tf/OyuZvjRChMZ1cUsTmv7wODo9JKzOTZNT1dlcdlt6UjraPOD3nyfpDBX
m72WmJ6R2cFzlLTS38Y1PMn8uGIh++ZGWifaUgRMnwchnqRdx/UwNwIx/tbj
VxyJekCmmf7zxczXArIPALCCdWbf/z2vO/OT6RE/jJDhTP0ts06ArvAapWhe
2o+LWhvp1ESCpTuGHdxu6fzZi1uOdzF4z0k1FIzitc3M9pMNweeVC6+S1BN9
XW9YuTU0akXei5cNHSXv5CgUhF94ttti9vWw0piBRN2ARksCmWqY0BrI7GUt
DGhUj3VlcrOd2RQswhUz3bowr3/LdmM7Tx8yjR5GexZDy02glRSyOF19wiVn
8W+anq6FamZALqiUdNDTbvgQrYxR33faOgfczcx+p66f0A7q3lbO9FYJWFEd
NPMbnoestvtjGNWBlJfCeDuO42LdLoAbAbIPALCC9WZfZyE36xQ7Qj/Cy9TU
/iRmHGvt+zgundXV09FWX11fmFdFp2dEUq4fO0U2tb1wOvxSQs5nbmowM8AW
VIV3pJoknbdysSF+Z+C2xynCPyaNzqrLLq8praiqq2KzmUVMRnbOo8elpZW1
7b0bUw0tjnUR1OXWXPdKdzQIdrWwc/M08KDah9wPT3zOYLBz0pPyHnoX3jWN
8f7h4K7/2qqH7fgfIzPn43bnb3lfe3KVzspgcqpbB/pHlq77Nk1P10IzN6ac
6ETxV86IowS4W5tsPXDo8Mng2IC7JQkMdn7lb5yORlZuavq14Bue9oFH/A6T
bpntzw2LbSquHULBN/fhneCXBtkHAFjBerPvTTk35wI72jjCw9p09yFM3/ef
DpHnKYm5zAx60u14/0tRhLOUY+EUP2p0xN37jwpzKzo+czO7ubH2yc4n7yuC
MqKPnrax2qq37Sej/XuczhACqScuxASFU6hRkXE3kpJoT5MzWAWVr1v5wo15
C7Y4x0HYUd6WHl58fnfEUVNraws9I8u/7jr4s80ZEinS3z/y5s2IrKyIuDCX
APsfXA0wq7//sMOctMUx6kB4WuyzurJ24WvB9MiMYsn3fZump2uhVUlR/KHq
721DQSE9Oj7INeDU8QOHvHfaBrh5X4y4Gpv6NJESGXXykK/V9sOHSZd/DX5O
udeV9XKwvV+i0AXfBuU3ZB8AYAXrzT5eLTfvGptKiHAjmG5bWNZxm9ERN48z
1IQQfw+vQ0Yu5pj5UdOgsIhsGvsdizvRO/ane9gtUs0Oy0ebJb35JUlB4TYm
5hi2VU//OwNjzJCg/6OtsYkVwdz8+El//9g0SnbH83pB1+CGLI31wWRvI5+V
2EBzj/HcbbHdYOHJJvYdahSGmRub+vhE3Kaz2XfiIm4cMaUYYq6GW7Ya2mGG
ZEs/OvUFp1WE90vx5Zbz3Gw9XRvxcNdw83NePiU+yMvaxBbDDLd8v9vO0Z4c
4m7neGzL979gmJfZ/mTKvaaaYTVPpB2XbWzRCtkHAFjBOrNvZvitoCkPxV9W
fGwEOcaZGE0m37x5625WbuqDhDs3A69HkqKSIp88y6pHwdcuEI/OfO7rHY18
Sjndi0KBU5yeeSU0ytmJ7P7LsZOBBN9ojwBKYMilK5FRicmp9NxqFAf13ROD
kxsyRfqD2dGekfZiFH85yeGRgZ5OBIKT4zEnZ7ITKSooMuVBVmkll1takJkf
H844S7xJPnM24IpTIP3So8rcxgEUfKNyXLrMFrObradrI5sanOqtR/HHTKdd
Cb1Mcjrr6xtyOSb6fmoc5WrCGb87zqR7kbGs7Jd8FHyDs1qxcmOLVsg+AMAK
1pl9Cskkij9U/XW+qmYXsTPTygrzKiorfmtqqX9VXVfNrGEzqhoqO7hdQ6ji
Q8EnVXzuHuNatQyFAqqJRvmvudWsqswMZtZzBqOQ/rwsM/9lQUlFObuqrul1
K2+hDkJxIJZt7OJfSukUij9U/XU1vmQX5WTQ6RnpjIxnzAxGVWllW0tX78DY
GJ/Xwast4+an1RblF5VUZbA4bM4Ab3gGVXwo+JZbdXOz9XRtVDIxij9U/fFf
N9Ww2IyM/MK84vLyl7X1VS8ravOLGjIZLRW1fV39IlTxoeBTaCD7AADfzJfa
t12rUmrlUrVENDctmpkSjY+LZsTSOYVS/e9Z0Gun1aCj42q5ck4qnRGLxkXT
M1LxnFKixuVafGMGyK9Eo1SqpFK5SCRH/yqVHw/d1KpUWrlcLZGoZDKFWr3M
3kzL22Q9XSONClfJcblEKZVIxRKRSCKRyuRK9Rc4E1YDsg8AsIIP2RcSEhIQ
EODr6/vw4cO2trbVHmdeo9Yq5Sj+0HV7blYqRsEnQ8mn0S69J/uqDq1FpREK
BY1SoZiTSdGR5xQypQbFAaqkNrh6WIJWjVJNjuJPpVCoNJqPh27OazRaJboH
kGtUKvXvf/RZNllP1wgluFqJ4k+jkCtkCzcIcoUKfVFf4ExYDZFI1NfX19LS
kpSUdPDgQcg+AMDHPmTfhQsXyGSyt7f3gwcPWltbV3ucea12If5USjUqi5To
2q1El38Ufdp/z4Jeu/l5XShoFkJHpVIq0C9Qq9Cv0sWB9qsnAuopagmq/jS6
/n08dFP3JWgWqj+N5pMffd6hN1dP10jXBVT9aVHbUS+UuvsA7Zc4E1ZjamqK
z+c3NjbGx8e7urpC9gEAPvYh+4KDg/38/Ly8vO7du4fulr91uwBYl8nJye7u
7levXt26devAgQOQfQCAj6F749LS0tu3b8fGxoaHh6PSLzk5uaKiYnBwcHh4
eGRkRCgUTk9Py+Xyb91SAJalUqlkMplYLEbl3ujo6NDQUFdXV11dHZPJRNmH
Us/S0vLy5cvV1dXfuqUAgE3h/fv36N4YlX7379+/du1aaGgoysHc3NzGxsbm
5ua2trb29vaBgQEUf9+6pQAsCwUfSj10t9bb28vlcpuamthsdl5e3pMnTxIS
Ei5evIjiLyUlZQ0P8wEA/y+NjY2hO+TKysrs7GwajRYdHZ2YmEin03NycvLz
89Ftc1lZGYo/VP1965YCsCxU8aHg4/F4KPXKy8vRzdvTp09R2CUlJaHzOT4+
HlV/6GTu7u7+1i0FAGwK6KKBSj8Uf/X19SwWC0VecXExikKo+8B/kD/WfbW1
taj0KykpQeczUwcVfSMjI9+6pQCATUGhUKD4Q9Xf4OAgum68efOmp6cHhR28
7wP/Qf74vk8gEPT39/P5/B4dVPGhk3l2dvZbtxQAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAACW8L9zOcyv
    "], {{0, 272}, {596, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{152., Automatic},
  ImageSizeRaw->{596, 272},
  PlotRange->{{0, 596}, {0, 272}}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
sMvc6OutWw8eCEw/md58nTXUOCiY1WAS8ah0slbKybl9KXKPnetnyNjePiAq
vfjBuKJNqB6XvX2HrZgZFg9V8puv3/v5RMAeW9MvDJy27/I6mx5R1JvdPNbC
m517iKFKrJaNY7NDI32djyqb6PTq8uqu7uFJfMSHh0+xqOf79LemmHoWU45h
0r5mRtLVgzY+q5CN0Zefb3BAdictT12LZNRVc/jdk9OT4kmtdrzrfjrD055i
gHaafG9IDkJHCrZSn9xqGYPzfQCA96fH9v16z8ZeJrXAn5hoiHyJlkTfaMPE
umOFfSW9r13j8Hr7nE1sdvsle+T0p9XyGv/8DR4XHT4OwnMwUUlJj/DeYr4Z
IcMNW/xPpjOLJrBmITY2fzm2UtAv4zBF7NTMuHCS1QGEiFaOlDhaDVuGcZSY
4B2jM+kYm9+cxS0KSju5Z/OGucfZm5P8IzKZlSKsS4ZNLPmtTPW3pm8eBjde
vWGl3UnkW0TOaKY3P79n7OubjZu1mdGeUBTEIme10dnj71j066B9AAAd9Nm+
F/d1GazIZEWQ0gnIz+n7TW5BBr6FBzOe3GsZe+Ve/aopTN6LiesqrkdFOFgS
ECL/YOcRknqCOXKjdbr1nXMnloDm+VmqmYFHQ8yE5p93xh7Z8aP1dmRAJuyP
j8mpbRRiA1LtjEozN2B6+vhp9c/tWe7xJz2tthxCq3ztvKg/32vGczCpeuds
TNFwDbfiXHemQ8JR0iZzElpB/NGVco5e3SrFhpXYzNI9wkLva6qRjqmnmxWj
hcWppwM22xmjz0z+7fTDwUTLK80RrKHygfl7xqpEmPwZJultuJOY4rHJzQCR
fiSYHY5Zm9x4rGigpG+hZ36hfQAAHfTZvhcTG57W0aoTHbNc0LFt31g4HV5B
vO4aW0mv4bzyjDblBCbtwoSVrGsRwSRzE4ScNm45HP3L2brJu32irunFuMvV
f74W+NuUPXtyv+kX3/xDawN3bTK134c2nLILzv6Z2f5Ujk0q1VLN3GvG2gqe
3DxWeHLdSU/H77cdRYQE0umCa+V9gvnLEJTvOE433VPUf9/3cfwXZz3NN27E
W+Nre5Cacq9lSIVNqDHx0j26UO9rqhIOyUfLxZ0ZOReC9lo7rkRrfrD02ht1
K7p27E7vTNfU/F1b5ZOYqAebqGFmRh7fbmG0ApkRbOyDknbe6UuqH6tf8B1+
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
AB0Wq33S8faZdvqzh2GXw3w2m7kiZGfyw6FjoRdyHzAuX046e8L/GJnsST7w
EzmQTI49GZl7Nb+1iiPunJThO7Q/WvbzKwg0Ev7I5MBjTgOjuvjWTdq12KS0
CwkRF88fSosln08MDk+9diyj9mp5b/3Q9Mvn15aCVoxpJzH1cDvjUvZe21Of
ob0bLK3co9bE1fnl9xb3TL3y4rn2DWGy5hpa7PP2kYytHb3jt2Z0nC8feTQk
XLJ3vXB4+Kb7H3MbGFX3sjLT0sPDk86fS0pLScrKSEo5Gxrp44n/coNPnIlI
Y8QyBxmtPDx/f7BAPW4tL0D7AAA6LFb7ZkcaebVp/TkeyX6eNiaHEfI1WR/o
53M6h0Y57bPTef1aQ4QM0MoVaO4E13qrSJ+4Ehqbj+/Q8O/zf7Ts50/7UQm4
HZyGu+w8SlbKqZOBfkRXD+fthN1OqzyIyMnFxMLdz9A3x4dae6d55OV5lUtB
I8Q0XEzV1ZydQHWy9kVojxHBwY1ikdgUXjhY3st/5cVqPqYcxGRNNTQKxZGA
t8/WiGD1rhd/HPARHx6+rjwKLe6kv4e3hYXrVgdXjz2uQb6ue+w2WK82wH+5
JusIBHcKMbUJzx8++tO9QH1uLS9A+wAAOrx3+15c1s3vLx8oPt14kRCzz4rw
Lxv8m/xX6w/s9omMo2WciT0TfOSAn5Oty7cbLf77+y+QsbmJl7Nfhk9O5y+1
o09GRe94YM2LJcuEHD6nmsvOriu9Sr+eEhcXFxOfEJWQcjopjXIuMDFyW1qo
se9hR2vXIwZ2cXui7mWW94yosGk1Jlmyg55qAaZ6isnbG7POpzpauSO004hA
cqNYJTZFFg5WfLLtk89OCJ+1T/SWNzFz7qReSgg4HR0UHRoSdywsKSr2fEpK
DI16Jtx7u4vxmq8RIny7iXw0wZ3enfqI2/BU9I5F6m9reR20DwCgw3u378Vl
3ePt99jZXqWnVp1y+vsPX36O0OrP12+z8Yn2oRVGZ92+ejOjKPtSiu8h/283
OqCVm9aQzLefXX+GFXi7raRz/B0PrHmxZD6nsr/qXAPNiZpwwC842Moj3uvs
9QvZxfn1jaXlt6sLzzXmep0P997idHjFah9H76spec3dUoyrxERLdpm4agZT
DGOSlrob5xIdfnRBiGxEILpRbBObzhYOVn2y7cPDN/KE3lUYfvN86In9wdam
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
Rm/PJpeFoLC9X5lt+gkZxhP97//Wvvk/o5HPCoW80Yn+rvHREd6UYEysnpFr
ZKo/nAex6F7cdW2ql9lTcKI2wTjKm2BJcEQGbjYeKUl3HvdKtGNy7ez8G1MK
+iScYkHrxZw4v/1WJAO0lrTZNyI1P39U2jSt5Eo/4MHcF+3rf5hZEkK6ZIo8
N5t+v+vECp97u6423G7mKjGtWDg0M1I+3pHJyjiU6PWNuzEi2ZqYuvmtPpGz
N62MWtrW2z/G5c0IZ2VvnZGiv63lTdA+AIAO79k+fl/JYNGxpuS1lGO2hK0H
kHHkloDc9JLOCRUmlIvlUnyMM9hXml105miSran/VvJW1yPG7hTv5DuZ5e34
d3h8VyZ6x3TMiXZ6B51cHobC9xua2+xChnFE/3tUZs98+7TK+daIeCOjrY+7
mIz2hnp2H6d5UjkoVOH5W7yPZ4Fe3G1b/KyJ13ClP88rOdjZ5kcCWmFkvv1Y
RGZx1YS6S6SdkM+lQPKsafJJOqfA60qQO/n7PSvQTiIp4cK1R80i1ZBUPbPg
ezXrwYv29T3ILAokJX+NDtub/+gRbhBWfpDent/BU2PqmZEqTm1sWw7pavA3
B21XrluJTM3WW+7zsTtL80nNT6JXFDKbm1qHRngzb70SQX9by5ugfQAAHd6z
fb8fmfReb7bLBxFpTpSq7BoOvt9TK/ha8SDGb6qnUpKIBFeEtq8jOC34lo8T
HfSu2+TKCBThsdbc9rVnoGsVcyenVJMDHZ3Mu5WplIeMO6V17KJhGZ6/saW7
ru91SsGQjFMmYlMz47xIVsYIIRNbJ79L2TnDqtpJzcj8SUpBfzmHGc5OtYhz
32G17ihClC1kRjq9ewLDhPNPAfxwXrSvl5lZ4E+an61KIPpSDBOb/Av6mXOz
VVXjHdltOU6sCBTqjMzWzF2TvnqdsZ27l28qNTj1ZnTq3cTUonxmc8fA2Fuv
QNff1vImaB8AQIf3bV97ftutA6zQlaEeZmb2+5FxjPWha/HXmR297Ce1FbX5
jHIqlRYWce6nA75mtoEHQ04n5i7wVv+CIRanPISdYZp83GqrDekzg50bHUOP
RmdSmTU5DyqLH5bXlLNYBfcL6Dm5V68VF5dVt/Z/uHHfC2rJuGKyHc/fA3p8
hJ+rtemabTtc9p+I8btUlEhn5ZVVNbPrmXczrseeiHO399/l40K+YL75bnDM
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
Pul4+0w7/dnDsMthPpvNXBGyM/nh0LHQC7kPGJcvJ5094X+MTPYkH/iJHEgm
x56MzL2a31rFEXdOyvD8/dGyn0+n10j4I5MDjzkNjOriWzdp12KT0i4kRFw8
fygtlnw+MTg89dqxjNqr5b31Q9Mvn2zSHzx80/2PuQ2MqntZmWnp4eFJ588l
paUkZWUkpZwNjfTxxFc5+MSZiDRGLHOQ0crD8/eJrunb3qkY005i6uF2xqXs
vbanPkN7N1hauUetiavzy+8t7pl65cVz7RvCZM01tNjn7SMZWzt6x2/N6Dhf
PvJoSKiPNwjtAwDosFjtmx1p5NWm9ed4JPt52pgcRsjXZH2gn8/pHBrltM9O
5/VrDREyQCtXoLmzPeutIn3iSmhsPp4/fPT3R8t+/ugblYDbwWm4y86jZKWc
OhnoR3T1cN5O2O20yoOInFxMLNz9DH1zfKi1d5pHXp5kqD/4iA8PX1cehRZ3
0t/D28LCdauDq8ce1yBf1z12G6xXG+CrbLKOQHCnEFOb8Pzho79PdE3f9k6F
mIaLqbqasxOoTta+CO0xIji4USwSm8ILB8t7X11TNR9TDmKyphoaheJIwNtn
a0SweteLFwm0DwCgw3u378U1zvz+8oHi040XCTH7rAj/ssHHfV+tP7DbJzKO
lnEm9kzwkQN+TrYu3260+O/vv0DG5iZezn4ZPjmdv9SOPhkVvePxRi+WLBNy
+JxqLju7rvQq/XpKXFxcTHxCVELK6aQ0yrnAxMhtaaHGvocdrV2PGNjF7Ym6
l1neM6LCptWYRD+HAuWzE8Jn7RO95U3MnDuplxICTkcHRYeGxB0LS4qKPZ+S
EkOjngn33u5ivOZrhAjfbiIfTXCnd6c+4jY8Fen+DD+2NdVFLcBUTzF5e2PW
+VRHK3eEdhoRSG4Uq8SmyMLBCmgfAODj9t7te3GN83j7PXa2V+mpVaec/v7D
l58jtPrz9dtsfKJ9aIXRWbev3swoyr6U4nvI/9uNDmjlpjUk8+1n159hBd5u
K+kcf8fjjV4smc+p7K8610BzoiYc8AsOtvKI9zp7/UJ2cX59Y2n57erCc425
XufDvbc4HV6x2sfR+2pKXnO3FOMqMZF+biKDh2/kCb2rMPzm+dAT+4OtTQMP
eiTHJN25xaovrCqrqS9gN+dkxPod/tHEFCHSD3Yep1KDS0dusqfbeBLdn+HH
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
AAAAAAAAAAAAAACW8L9zOcyv
    "], {{0, 272}, {596, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{152., Automatic},
  ImageSizeRaw->{596, 272},
  PlotRange->{{0, 596}, {0, 272}}]], "Output",
 CellChangeTimes->{3.770585301947839*^9, 3.770630754191648*^9, 
  3.770631074103129*^9, 3.770666081939523*^9, 3.7708011177814336`*^9, 
  3.77080248919864*^9, 3.770809316458714*^9, 3.7708321949428787`*^9, 
  3.7708382356910515`*^9, 3.770842252626252*^9, 3.770882446465639*^9, 
  3.770886467453577*^9, 3.7708945366829395`*^9, 3.770934389028042*^9, 
  3.770936124544944*^9, 3.77102563919335*^9, 3.7711592700561934`*^9, 
  3.7716755285306983`*^9, 3.772137205120074*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "medialTriangle"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"medialTriangle", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearMatrixToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"a", "*", "c"}], ",", 
         RowBox[{"a", "*", "b"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"b", "*", "c"}], ",", "0", ",", 
         RowBox[{"a", "*", "b"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"b", "*", "c"}], ",", 
         RowBox[{"a", "*", "c"}], ",", "0"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.770540016276436*^9, 3.7705400784139614`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tri", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"medialTriangle", "[", 
    RowBox[{"tri", ",", 
     RowBox[{"RotateLeft", "@", 
      RowBox[{"triLengths", "@", "tri"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7705413815818105`*^9, 3.770541424456128*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7705414247543306`*^9, 3.770585301989727*^9, 
  3.770630754216587*^9, 3.770631074124079*^9, 3.770666081963459*^9, 
  3.770801117806366*^9, 3.770802489227562*^9, 3.770809316503627*^9, 
  3.7708321949788103`*^9, 3.7708382357150173`*^9, 3.770842252651185*^9, 
  3.7708824464895744`*^9, 3.770886467582219*^9, 3.770894536707901*^9, 
  3.7709343890489655`*^9, 3.7709361245648947`*^9, 3.771025639219288*^9, 
  3.7711592701948233`*^9, 3.7716755285566278`*^9, 3.7721372052357626`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "orthicTriangle"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"orthicTriangle", "[", 
    RowBox[{"orbit_", ",", "sides_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"secA", ",", "secB", ",", "secC"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"secA", ",", "secB", ",", "secC"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"getTriCosines", "[", "orbit", "]"}]}]}], ";", 
      RowBox[{"trilinearMatrixToCartesian", "[", 
       RowBox[{"orbit", ",", "sides", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "secB", ",", "secC"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"secA", ",", "0", ",", "secC"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"secA", ",", "secB", ",", "0"}], "}"}]}], "}"}]}], 
       "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.767707507910433*^9, 3.7677076334472127`*^9}, {
  3.767708104286793*^9, 3.7677081625733194`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"http", ":"}], "//", 
    RowBox[{
     RowBox[{"mathworld", ".", "wolfram", ".", "com"}], "/", 
     RowBox[{"TangentialTriangle", ".", "html"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"tangentialTriangle", "[", 
      RowBox[{"orbit_", ",", 
       RowBox[{"{", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"trilinearMatrixToCartesian", "[", 
      RowBox[{"orbit", ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "a"}], ",", "b", ",", "c"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", 
           RowBox[{"-", "b"}], ",", "c"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", 
           RowBox[{"-", "c"}]}], "}"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"anticomplementaryTriangle", "[", 
      RowBox[{"orbit_", ",", 
       RowBox[{"{", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"trilinearMatrixToCartesian", "[", 
      RowBox[{"orbit", ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "b", ",", "c"}], "}"}]}], ",", 
         RowBox[{"1", "/", 
          RowBox[{"{", 
           RowBox[{"a", ",", 
            RowBox[{"-", "b"}], ",", "c"}], "}"}]}], ",", 
         RowBox[{"1", "/", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", 
            RowBox[{"-", "c"}]}], "}"}]}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"externaltangentsTriangle", "[", 
      RowBox[{"orbit_", ",", "sides_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}], "=", 
         RowBox[{"getTriCosines", "[", "orbit", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"trilinearMatrixToCartesian", "[", 
         RowBox[{"orbit", ",", "sides", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"x", "+", "1"}], ")"}]}], ",", 
              RowBox[{"x", "+", "z"}], ",", 
              RowBox[{"x", "+", "y"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"y", "+", "z"}], ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"y", "+", "1"}], ")"}]}], ",", 
              RowBox[{"y", "+", "x"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"z", "+", "y"}], ",", 
              RowBox[{"z", "+", "x"}], ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"z", "+", "1"}], ")"}]}]}], "}"}]}], 
           "\[IndentingNewLine]", "}"}]}], "]"}]}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7671165815218987`*^9, 3.7671165854523277`*^9}, {
  3.767116628649467*^9, 3.767116743090029*^9}, {3.7671184443079004`*^9, 
  3.767118475292719*^9}, {3.767120599697027*^9, 3.767120620616911*^9}, {
  3.7671206934333515`*^9, 3.7671208483473654`*^9}, {3.7671209383724785`*^9, 
  3.7671209432996626`*^9}, {3.7671210335073185`*^9, 3.7671210396987667`*^9}, {
  3.7673551069416294`*^9, 3.7673551273409057`*^9}, {3.7677081448231907`*^9, 
  3.7677081709199944`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3XtUVPe5P34bG1ezWvtd7Tr9xR571knanJMYEmtijUHTWI2KGk28myYa
4w1jvUQlIsZog+INRvBCRREJityiiEqRiyA3ucklCgcQRUQBB0QRQUAE9ffO
bN2iDDDM7Jm9h3m//pg14lw+n73383meZy57Xp791UTb57p162b3C1xMnLVy
6PLls1ZN+jn+MWzV1/Nmd8eV/+9n3br9iL/8dP0hERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
EREREREREREREREREREREREREREREREREREREemsoaHh9u3bFRUViYmJXl5e
9vb2kyZN6tevX8+ePceOHatSqdLT0y9dunTz5k25R0pkdAwHIv0wdoiIiKg1
VghEIoYDkX4YO0RERNQaKoRbt26p1erU1NSgoCBnZ+eZM2f279//hRdeGD16
NP7JCoEsB8OBSD+MHSIiImqtvr6+qqqqrKwsMzMzLCxs3759//jHPwYOHPjz
n/985MiRW7ZsYYVAloPhQKQfxg4RERG1VldXh+xfUlKSnZ2dkJBw7Ngxe3v7
wYMHd+vW7YMPPti8eTMrBLIcDAci/TB2iIjIcBUVFcgj0dHRuMR1uYejJ7Oe
heSDv3v3bk1NDQqAy5cvnzt3LjExcd26dUOHDmWF0CGzPpBIK4YD6Y4rQEuM
HSIiMhxSqp+f3zfffINLXJd7OHoy61lIPvjm5mYUCXV1dZWVlcXFxbm5ua6u
rjY2NqwQOmTWBxJpxXAg3XEFaImxQ0REhouOjkZiHThwIC5xXe7h6MmsZ2G8
wYund/D09Bw3bhwrhA6Z9YFE7WM4UIe4AmjF2CEiktfdu3eF04OXlJQUFhbm
5eVduHDh8uXL+GdZWdm1a9ewRGOhxnIt90i1iIiIWLp0aZ8+fXCJ63IPR09m
PQvjDR6HXHV1dXl5+d69e1kh6MKsDyRqH8OBOsQVQCtZYufevXv19fUorvD4
eOrS0tIrV64UFRVdvHjxgkZBQQHqq9raWmM8OxGRomAxvHr1am5ubkpKSlRU
VHBw8IkTJ2JjY9PS0rAUZ2VlnTt3Dr0n+k25R6pFaGjo/Pnze/fujUtcl3s4
ejLrWRhv8KyuO8usDyRqH8OBOsQVQCtZYgedJh65rKyssLAwJyfnzJkzp0+f
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
gpycHEyqsrKyrq5OrjG3wxyra4aD4eEg1SxkCQc2m6bBQLPwQDMeNptERJIz
sNlElsSyjCU0ISHBz88Pa7Kjo+OqVauWL1/u4+OTmZmJHITkeOrUKfzT2dnZ
zs5uxowZKpXq5MmT169fRxpF3td78JInfWR8pHuMzdfXF6PFLNavX+/u7o6p
YYJIkQ81v/6MjFNWVoYCxtXVdc6cOTt27ECpg1RSW1uLvG/4MPSDjC+cTw9V
ire3Nwa/bNmypW3ALggICECRlpeXh7wv15jbYY7VNcPB8HCQahayhAObTdNg
oFl4oBkPm00iIskZ2GxWVVVh/czKykKWXLly5dixY4cOHTpw4MA33ngDD4WF
FEv3mTNn9u3bh0Tz8ccfv/nmm7/61a8mTpy4Z88e3BF5H2WD3oOXPOkjmyDj
Y2zYFOPHj7eyshoxYgQe3MHBQTw/PDIRMn5+fr6Hh8eUKVN+97vfffrpp/v3
77927RqyCUoCw4ehH9RXyPioo0JCQhYtWoTBv/7663369HlNmwkTJqxevRqT
Qt4XihmlMcfqmuFgeDhINQtZwoHNpmkw0Cw80IyHzSYRkeSkemczLi7uwIED
69evnzt3LhbnP/3pT1OnTsUSjRwaFBS0e/fujRs3rlixYt68eZMnT8b1iIiI
9l9hvn//fnNzMxIZVv7y8vLL2iA7o3745S9/KVYRreG+eAQ8TlNTEx6z/emI
rzC7u7sjbyLjI/Ujp2PYmEJGRgZug8SKjFNSUoKMaWtr++qrr86fPz8wMBD3
xXSQqjo7C13oMouamhoUHgUFBcHBwd999x22MzIaCok5c+Z89tlnkyZN+vDD
D0eNGjV8+HAUZpgdZtT+K8ymHHxr5lhdMxwMDwepZiFLOEi+C0TmGA7GW0AY
aBYeaLpQWqCx2SQiiyXVdzaLiooyMzOjo6OR0JEoe/fu/d57782YMWPt2rVY
qHfs2IGle5+Gt7d3VFTU+fPn2//ujPAjy/X19aWlpdnZ2XHaoMZAXv7FL36B
S1zXehvcFwkamVqX7+mI351BCnB2dv7iiy+QLqdNm4Z0rFKpkpKShCnj0ZA4
QkND7e3tBw0ahO0WEhKC9IQk9UzS12UWutBlFiii8vPzExISDh06hKIFW37L
li24gh3q5uaGfy5ZsuTLL7+cNWsWJoWdEhYW1v53Z0w5+NbMsbpmOBgeDlLN
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
5FRUVKBawA3kHimRsjB2iERKCwc2m0RksdhskqKgPKirq0MNkJ+fHxMTc/Dg
QRcXl+XLlyM7Ozk5hYSEXLhwQa1W19TUyD1SImVh7BCJlBYObDaJyGKx2SRF
aWhoQHlQUVGRmJjo5eVlb28/adKkfv369ezZc+zYsSqVKj09/dKlSzdv3pR7
pETKwtghEiktHNhsEpHFYrNJioIKAUlZrVanpqYGBQU5OzvPnDmzf//+L7zw
wujRo/FPFsxEWjF2iERKCwc2m0RksdhskqLU19dXVVWVlZVlZmaGhYXt27cP
GXngwIE///nPR44cuWXLFhbMRFoxdohESgsHNptEZLHYbJKi1NXVIfuXlJRk
Z2cnJCQcO3bM3t5+8ODB3bp1++CDDzZv3syCmUgrxg6RSGnhwGaTiCwWm03Z
VVRUIBtGR0fjEtflHo7M7t69W1NTgwIAeVk4f+C6deuGDh3KgllaXeOo6xqz
kApjR29d40Ay61lIPnilhQObTSKyWGw2ZYfc6ufnh+2PS1yXezgyE353u66u
rrKysri4ODc319XV1cbGhgWztLrGUdc1ZiEVxo7eusaBZNazkHzwSgsHNptE
ZLHYbMouOjoaG3/gwIG4xHW5h6MU4ukdPD09x40bx4JZWl3jqOsas5AcY6ez
usaBZNazMN7gFRIObDaJyGKx2ZRdRETE0qVL+/Tpg0tcl3s4SoEKobq6ury8
fO/evSyYJdc1jrquMQvJMXY6q2scSGY9C+MNXiHhwGaTiCwWm03ZhYaGzp8/
v3fv3rjEdbmHoxQKqRC6qq5x1HWNWUiOsdNZXeNAMutZGG/wCgkHNptEZLHY
bMruyJEjn3/+ec+ePXGJ63IPRynEn+T28vJiwSy5rnHUdY1ZSI6x01ld40Ay
61kYb/AKCQc2m0RksQxsNhsbG+/cuVNVVVVcXCyc8C0uLi46OjoyMhIPcu3a
tebmZizmRUVF+Ofp06fxd+SRpKQkLPK44927d5uamow6wU7BkMrLyzE2zAWj
jYiIiI+PT0tLy87OvnLlSnV1NW5z7969+vp6JK/CwsLk5ORjx46lpqYiieCP
2BqYb2efVKoke//+fWxMDK+0tDQrKyvisXBtsAtycnIwqcrKyrq6Or2f1HgU
UiEYj7yxI3lpx9hRDnOMHYaDhYcDm00ioq7KwGYTKRVrOJbQhIQEPz8/LOCO
jo6rVq1avny5j49PZmYmEhYy6alTp/BPZ2dnOzu7GTNmqFSqkydPXr9+HTkX
RYJRJ9gpKA9QG2Bsvr6+GC1msX79end3d0wNE0Q+faj5qWikp7KyMlQ7rq6u
c+bM2bFjB+oipJLa2loUCZ19UqmSLMoD4eR7KGm8vb0x+GXLli1tA3ZBQEAA
Krq8vDwUCXo/qfEopEIwHnljR/LSjrGjHOYYOwwHCw8HNptERF2Vgc1mVVUV
1s+srCyk1JUrV44dO3bo0KEDBw5844038FBYSLHOnzlzZt++fchKH3/88Ztv
vvmrX/1q4sSJe/bswR1RJKDGMOoEOwWpB+UBxoZNMX78eCsrqxEjRiD3OTg4
iOdjR9pCeZCfn+/h4TFlypTf/e53n3766f79+69du4Zsgvqhs08qVZJFMYby
AEVXSEjIokWLMPjXX3+9T58+r2kzYcKE1atXY1IoEoTKR2kUUiEYj7yxI3lp
x9hRDnOMHYaDhYcDm00ioq5Kqnc24+LiDhw4sH79+rlz52Il/9Of/jR16lSs
50i4QUFBu3fv3rhx44oVK+bNmzd58mRcj4iIaP/l6Pv37zc3NyPrIU2Ul5df
1hfui0fA4zQ1NeEx25+O+HK0u7s7kizKA9QJKAAwbEwhIyMDt0EWRnoqKSlB
erW1tX311Vfnz58fGBiI+2I6yGudnQUKEpRMv/zlL8XCSb9Z1NTUoEopKCgI
Dg7+7rvvsJ2R0ZC458yZ89lnn02aNOnDDz8cNWrU8OHDUcVhdphR+y9Hy7IL
RAqpEIy3EeSNHamOOhFjxzSHjS4UEjudwnCw8HCQfBeIFBIObDaJyGJJ9Z3N
oqKizMzM6OhoZH9k1d69e7/33nszZsxYu3YtVvUdO3Zgnd+n4e3tHRUVdf78
+fa/aCP8InN9fX1paWl2dnacvnBfZHOkdV2+1CN+0QYpwNnZ+YsvvkBunTZt
GtKfSqVKSkoSpoxHQ+IIDQ21t7cfNGgQtltISAhyGTLaMxWCLrNAWYVS5Be/
+AUucV3vWaDiys/PT0hIOHToECocbPktW7bgCnaom5sb/rlkyZIvv/xy1qxZ
mBR2SlhYWPtftJFlF4gUUiEYbyPIGztSHXUixo5pDhtdKCR2OoXhYOHhIPku
ECkkHNhsEpHFkupstFj5saTX1tYGBgaiMPjtb3/7xz/+8e233x42bNj8+fO3
bt16/PjxxMTE3NxcHT8jJJ48IS8v7+TJkz76wn3xpNXV1chQeEwdp4Ok5u/v
j21ia2s7adKkIUOGYBPFxsY+1LxIK5w/IT4+HuXQ2LFjHR0dT5w4gVRbU1Pz
zKvrusxi8eLF1tbWPXr0wCWu6z0LZOGUlBSUB9ih2AsBAQERERFpaWkXLlxA
2RAUFLR9+/ZNmzahVMCOPnDgwNmzZ5W8CxRSIZhgI8gSO1Idda0xdnQcvC7M
Onb0w3CwzHAw3i5QSDiw2SQiiyVVs9nc3NzY2IhVPTQ0FJmiT58+/fv3f//9
90eNGoWHRZrIyMjIz89HFtPx7AfCC91IBLgjRrhZX8iMyCk3btxonb7bcf78
eZQ0Li4uS5YsmTBhwoABAxwcHKKjox9q8iamiUdDwaBSqZA1cInr+Avy6TMZ
UJdZTJ8+vV+/fs8//zwucV3vWeB/CwoKUCQkJycnaeD6mTNnMjMzw8PDURKg
TnN3d9+7dy+uo7wpLi5W8i5QSIVggo0gS+xIddS1xtjRcfC6MOvY0Q/DwTLD
wXi7QCHhwGaTiCyWVM3mgwcPUCQ0NTXFxMSsXbv2b3/724gRI8aMGfPxxx87
OjpiRS0rK6usrMSar+N53ZFKcOPr168jl+3evbutU+F1CPeNi4tTq9WtvwXT
jqKiIkwEucne3h4VgpWV1fLlyyMiIh62yFynTp3avn27ra2th4dHamoqBozy
4Jkvkugyi7Fjx7766qvdu3fHJa7rPQtsWGRh1GBXNa5cuYKSDPkU1UtwcDAK
A6TX/fv3R0ZGnj17FuWBcPp9xe4ChVQIJtgIssSOVEdda4wdHQevC7OOHf0w
HCwzHIy3CxQSDmw2ichiSdVsilJSUtzc3KZNmzZVY8qUKa6ursnJyZ19HOQ7
LM7Xrl0LDw/ftGnTJ/rauHFjWFgY8iZyiu6/Aobbp6WlIbFiy6DIefnllxcu
XIjHeaj5Mg5KHWTY6Oho1AZ2dnbtfI5Il1kMHjwYeee5557DJa5LOAtUZRkZ
GcePH/f19d25c6eTkxNmlJeXp+Pd5d0FCqkQTLkRTBk7xjvqGDs6Dl4XZh07
BmI4KGcWJggH4w1eIeHAZpOILJaE72wKZ5yLj4/fsGHD6NGjR40aZWNjM3Lk
SCQm/LGzD9jY2FhbW4v1GYMJCQnZpi/cNysrCwmlUx+8QVrEvZDXHB0dkZ5+
//vfz5s3D6kWc1Sr1fgvJM0jR44EBAR4e3vHxsYWFRXpPYvZs2f379+/R48e
uMR1w2ch/HxbaWkp6paoqCg/Pz+ME3sZ5UFqaioytVnsAoVUCCbYCLLEjuRH
nYixo+PgdWHWsaMfhoNyZmHKcDDeLlBIOLDZJCKLJVWzKZzo4N69e0hJeKhB
gwZZW1u/++67AwcOxD+Fr6h0ivDNHSQ7ZOT8/PwUfeXl5SHdC+ev6/ADVyIk
ppycnJiYGJQ3Y8aM+c1vfjNz5kyUBJim8B2crVu37t+/HyXEmTNnCgsL20pY
usxiy5YtKKheeOEFXOK64bPAYC5evIiBRUZGBgYGenh4HD58OCEhAQ+C8gBp
1yx2gUIqBBNsBFliR/KjTsTY0XHwujDr2NEPw0E5szBlOBhvFygkHNhsEpHF
kvAEQcLpDrB44kHeeOMNKysr4Wegly5dGh4ebozBG09lZWVBQUFSUtKmTZts
bGyQAZEdDh06hCooLS1t165dc+fOdXd3xw2Q+JBGdT8Ne2uS/5h1aWkpyoOQ
kBBfX18M1dnZ+dixYyhsDH9kU1JIhWACssSO8X5CnbEjO7OOHYaDcmZhynAw
3i5QSDiw2SQii6Vfsyl80knQrCG+BHrw4EE82ieffDJ8+PA///nPvXv3nj17
Np4Cqz3SbllZWXFx8fXr13X/woUsxJ97c3FxGTVqVI8ePXCJVJuRkXHixAls
oi1btiAh5uTkoDxofTKHTpEqyWKTYgtfuXIFORQpbN++ffv37/fz8wsKCoqP
j0eFIHxrprCwMDs7Gzfr8KwO8kKFgAGr1WpPT0+xQti4cSMqNBxpCi+Y26GQ
2DFeacfYkZ0ZxQ7DgeEg7eBbU0g4sNkkIoulX7MpFAZNLSDvREdHIyvt2rVr
69atGzZsmDFjxoABA5A7Jk+e7OXlVVJSgiSFnItslZubiyLBNBPUD+oZDBjj
dHNzGz16dPfu3d955x2kBkzQ19c3MDAQ2TA1NfXq1auYO7YGSia9n0uqJIvy
ID8/Pykp6dixY97e3qhnsCtDQ0MxzrNnz2LjozbD9o+KivL3909MTESRoPdz
mUB9fT3qNJSUe/bsGTt2LCqEYcOG4bjCdC5cuHDjxg25B6gnhcSO8Uo7xo7s
zCh2GA4MB2kH35pCwoHNJhFZLL2bTWTGRo27Gunp6chKy5Yt27RpE+qB48eP
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
rKwMDQ1FeYDFf/r06V9//bVKpUJ5IJzzEOWBMn/mgEhGjB0iEcOBniH85E1Z
WVlhYWFOTs6ZM2diYmKOHj168ODB7du3r1mzBv2ml5dXh19ZIiLqAioqKnJz
c4XznO/evdvJyWnHjh3ff/99cHDwsWPHwsLCIiMj0W+q1Wq5Ryq9O3fuoDwo
Li5Goz1p0qSePXv27dt3/Pjxy5YtwxZAeSB8P0iZXw4ikhFjh0jEcKBn3L59
G51mfn4+2szo6OiQkBB/f390lzt37kSJtW3bNjc3N9RXBQUFco+UiMjosCRe
vXoV/WZKSkpUVBR6zBMnTqD3tKh3Nk+ePKlSqWbMmGFnZ+fs7Ozj4yN85EnJ
Z6IgkhFjh0jEcKBntH5n8/Tp0zExMeHh4SixwjQyMzOvXbsm90iJiIxOyJIV
FRUlJSVYFfPy8i5cuIDu0qK+s4liICkp6ciRI5GRkbjy448/YgtUVVUJZ0qU
e5hEisPYIRIxHOgZrb+zeeXKFRweFy9evKBRUFCA+qq2tlbukRIRkSkIZUDL
SyLSBWOHSMRwICIiIq1YHhDph7FDJGI4EBERkVYsD4j0w9ghEjEciIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIyJQePHjQ3Nzc1NR0T6NRQ+5BkUk9aJfcoyMy
EXExbGhoqKmpqaqqun37dm1tbX19PVZF/Bdug8u7d+/Wacg9XiIi6sqS13UT
TPRXyz0WIv2hdkIdheIKBVXdY3IPikynw3bSkvtNrvMWRVwMb926pVarL1++
XFJSUl5efvPmTfSewqtw6DTRgVZq6PMcDVlO7+KA6mUX1fDkjylOj46zbk7J
OjxE8jrrx7fv1muoU3Lto/8w/eGq6AARt+oUP7Uufzc3RZ5jfprFOh0OmYcP
b10M81oxZ9gbvYSpv/zuxIXOfsklDR3f07D7PlQn+zkvnDi0z6M7v2I9bJad
1ym1bnc2ex3to2Qx8nXVxkM92kfidu72svWIOXbeYXltrVKX/Sb+tHx86ndZ
inmS0Sh6jSXSmfAyfm1tLaqp6urqWxpyD4pMRGgkO3xn02L7Ta7zFkVcDNFp
XrhwISsrKzc399KlS6Wlpeg36+vrcZu6ujq0mVc0Ov8Mj/rEXjOCtbc/HTeb
Dckbhz2uJ7v1GqfKqn3yf2w2n9K1m83Lfp/2aq/7eKI2z2/xk1cnntZr2LLg
oibj3PdhQ9aOiS+3deehq2P0erXGnHS8j6RoNmvzvGa1tZnh5TneeVpb+yxX
zZ6d4lck6aRJWopeY4l0VlFRkZOTc+rUqbS0NFRWxRpyD4pM5Pbt2yik8/Ly
UlNTIyMjDx06dOTIkePHj584cQL/jImJiYuLw7ERHR2NfyYlJZ07dw61d3l5
+Z07d+Qeuylwne/CxA/EXrt2DSGQkpKCoz08PDwkJARRIFz++9//joqKio2N
RSycPHkyIiICf8F//aDR2WdsSHHSlHdjvC4+/R+6NptPd5ozvPJqn/pvNptP
6cLNZm2y5v3x9huZx7ccKh4yP72xOGeFSuWssptlLfYnLd8cl+y+T7//3u2V
MQvXaO779z5PHvGVOcGXDd8WSqXTPup0s2m9I6/NZxHedNZs59ULxrTY0N2s
1yVr6TdrY+w0txnjyXZTuRS9xhLpLD8//+jRo5s2bfLx8UEpdU5D7kGRiZSU
lKSlpQUHB2/bts3Ozm7q1Kmff/65ra3tkiVLvv7669WrVzs6Oq5Zs8bBwQH/
VKlUvr6+KLlxhKDflHvspsB1vgtDp1lTU3Pjxo3MzEz0lQiB9evX29vbL1iw
AJfr1q1zc3PbsWPHrl27PD09cfD/85//XP6YnUbnnu/RB2i7vdW68NOp2WzI
ch3TTqf5kM3mM7pqs9lU5DejRSPRXrN5K2yBeMuf3uF66kNLt7JU4x79b68F
Ya0+z2TIfX96XeWtx4fqGNesp25wOXjh4/7o2bf4u4xO7KMOqYMfP1SvGc+8
C9kQs6KXuJlVKU/vhyZ1zEZxxei18LiWT6yp/ScK4etXYsAAyZgUvcYS6Swp
KQl11MSJE1euXLlv374EDbkHRSaSl5eHMnvDhg2ffvpp3759u3fv/v/+3//7
z//8z//93//t16+ftbX1Bx988N577w0YMAD/O2HChBUrVuzZswf95qVLl+Qe
uylwne/C6urq0GlevXr13//+98aNGz/55BMbG5t33nnnf/7nf95///2pU6d+
9dVXy5YtQ1OJw3769OnDhw+3srJ66623cJv3NDr1dI++vaW1ruu42Xym0/Rr
9+OLpqPoADH3plKrFl1eh41My47vU39t7149eV+s1+pTDVLdV9OoPrrzW2u0
vacmfGFQ8/+qH3WZtlnpzD7qUJH/o4/iduu3+tk3kS96jXn0BNZOKVo/Ktvi
/eV+qiwtN8hS9dPsQm2vGJASKHqNpS7BqF+Uq6mpKSsrO3/+vK+v7+LFiwcO
HPjll1+ijzijYbznJWPQ+1BBpZ2cnPzDDz8sX7580KBBaDb/67/+CwcD+spZ
s2bhj+vWrcMlruMvqMZnzpxpa2vr7u6ekJBQpSHtRJSG67xi6X3MNzU13b17
986dOwUFBTExMQcOHNi6dauDg8PcuXPnz5//j3/8Y8mSJWvXrnVzc/v+++99
fHxwAyySmzdvXrRo0fjx4z/++OOPPvponEYnnrUybKGmZOy1KkZLUdhBs9mq
09Rv5kag6ADpcs3mrRyvOa90e1abjUxDzKpeHW6BhlOre2m5jSH3/enedo/u
POzZT4yLt1jxuNt01dYDma1O7qOOtNtOZrk+ej1A+6oiqAye0+6+ePzmpnUX
7Pq7BEWvsWT+jH1iFnSa6enpoaGh3333Haqm3r17o5XYtWtXjoaRnpSMwZBD
5datW5cvX87KynJxcRk5cuRzzz1nZWU1efLkNWvWoKNEExoXFxcYGOjq6rpi
xQp0mqNHj+7fvz+qbj8/v8saEk9GYbjOK5Mhxzw6zerq6uvXr0dHR+PA/uKL
L2xtbdFjfvXVV5s2bUKDeeLEiVOnTqWkpPyocfbs2XPnzmGpRETY29ujFcXt
P9fQ/Ukfv63Zxvs47TWbDXmenz75OOOsYOV0mg8VHiBdqdm8lee37MnXda0X
hyUfePzeYJuNTJbT4zs8derjZyU/vlnL99wNue/DhyXiG5d2bXVBRR2P39zo
s4/aV+Q1+vGjafnSpTp4xqP/1foRWfFB/CY8utnqRK3DDlsodKx8c9NQT15C
aSNqnrzj362X9g+xiC8gjPF+tNI/u8beKgrb8eT0zr3eGDZxgXvYxY53nTrF
T7VgonhOac0dVX4pbZ4X+vHzakK7Ni943RxrzasoP30veEdYUasn7OzjkxK0
LKWM1G+eP38e5ZNKpULJ1LdvXxwb6CN27NhxUcMYz0jGYOChIp5+09fXd+LE
iWg2ra2tly1bhgYzKSnp6tWruE1hYWFUVNTu3bvnzZv39ttv41AZPny4s7Nz
loaUk6nMi/FXLZwyTFyvsGL1GTpszgqvsHzta+lT66HmEZ5Zh3+6b4frMFZv
b7s5j+/Vci1VdC1tqQw85u/cuYNO8/Llyz4+PjNnznzppZfef//9GTNmrF69
OiAgoK2X2i5duhQTE7N3716smWvXrv1KQ9enbIh59A6Q9k+ytdNsPtVponxt
v9Ns63B9NkzUyX7r5gx79+XHIYYDPkbd8nO5Qj3Tzg3aekZ1TIvfyHjZespC
lX+y1js+o9OFyuMtpnnehrwjTnOE0b5i/aT06ux3Np96TCyOt/JOuGM5erya
9PnpNztOtC6ynnGr6ISX3ayW93LCRISt9fiJdfmBm6eI21k8uejjN6TabmTU
wZ8+3jnt/ryF2m/Ko9s9qZANue/Dls3mp219J7PIc1gH49eDuGeFx2xSxzw5
jLGwD5uzzi/ZaAu5PvuoXU/68V52MVrOwlQUjJAZMQwtgFNKOw/zZB+10ZOK
LVKrE5dRJzVEPXpLv5f2PZ68WjxGtL/RXOQ14tn/bbHGFhUdsRv29Ae0H+s1
bE1Mm0tTZczqodrv9tM9h9ppPU/Xk6yR/9RJqLQcKno9vmVqbGxEvX3z5k1U
FJmZmadOnYp5LC4uLiEhAYV3Xl7etWvXUJmLv+597969urq627dvl5SU/N//
/V9ycjJuifuiMj/5WEZGBh4Tj4zHF36mTSS8qfTjjz/iNmlpacLdY2Njca/E
xMQzZ86cPXu2uLhY2h8iEX4kDrUWnmj79u1z58794IMPXn75p9X4ww8/RENR
oiHhM3YxXexQwXOVl5ejnXR3d8cB0L1792HDhq1btw5zyc3NxXGC21y8eDEi
IuJf//rXnDlz3nrrp5fdRowYgWZTeN9Hou16K9m5zZPkC16e1c4ZUX6qoouO
t70OL2urSm/I82/jXr2GrY66xWbzYVc55lt+ehYP8v33369atWry5Ml9+/ad
OnUq+kd/f//Tp0+39YMmpaWlGMaRI0f279+/c+fODRo6PrVYgbT5iUHtzWbn
Os2HOjWbDXnec7QH2rsLwy7/dONbUau1R4S2c4c+VQj5t/HIr0x0T297N+lX
qDxpDPOeOuupxqM3BQxpNi+H2bUxKgwpTOuQHv506pu27qVZvgxtNl+eoop5
POKOG5knHV8Hp3+JWfX4dgeKJLjvTx59ExAWntD6gsGT9+ykXFpbNpuXg7V8
nFWzFSfuyDLGW3j67KN2PP7gfVvn9tHVk48093JKb+MmHS5QpKPHbxNrf13x
R9VbT47Dbp/+0OrIF+Ouxd3FNfatd63FH6uduGC1lnMOa9194u/vaI6BPuMW
rnZWqZxXL5zy5JzS3Xp96pX/bJw+ft63rN/tJTyp5mTUdnPefbnXihYfWND3
8S0TSh1USiiqo6Ojvby8vtVYreHo6Lhx40aVShUcHJyVlYXaBuWKUBcJ55dA
KZWSkvLDDz+4urriliha7DVWrlzp4OAgnk1FrVbjWVo+KUop1E4+Pj6enp6o
XvAUqF7++c9/4l54HBT/Bw4cQH0l7Q+RCLVffn6+r6/vV1999d5777322mv/
8R//gcPho48+2rdv3w0NCZ+xi+lih0plZeX58+dRY+MBhw8f/vzzz6Pl3LFj
BwpyTLOmpga3uXDhwokTJ/DHWbNm9ev3Uw2BZtPFxUW6Exc/deI+zduRP528
/dn1Cv+14tnPZIlV9Op1n4rrsHB3XdbhJ+de0H5Ha+vHL+hZcrPZNY558dOz
eMatW7d+/vnnkyZNsrGxwRq4ZMkSPFF2djY6TdxG691xRzTUeMawsLDAwEAv
Dd2eWfzoVK8234DQ1mwWHWjRaa5q+1XrFjpsNsUw6fWG8FMUqxeOaxElo72y
Hv04S4sbjG4RgqO9itp4xpaFUOsfyGjzBCZ6FyqPt9jj533ZepbdoycV3wbS
u9lc4/R4VI8eVrVm4Zg3Wqwm72qrJLXOpcUdew0d9rgr7nSzmeX6qerUU4OV
rtl88s7Xk4cy5L4ajz83jm2l5bdRWiy8c4Il/LVNcc8uXr36lad3xIpHHwJ8
dDhq/SkQw+izj9rUkLzucV/SKug65dbxxz1r2x9p7qBFok64FTxL2JRa3rh8
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
mM57Nrdt20aOy5cvp8zcQpn5jTJ7pZ9tzF8YEdI/Nd+HdwZKTEvqlrxGjRqF
FB83bhzZkQv16RRnprhzNXYV/Z7NQ4cO4Ry5l3RoEeWUClIjfX6JyOfn9evX
UzZsAt2Ji7lFmdM0X6vge1e5BlhhY7kBikWilXGaV0vnvxr7vAn0ZPzmRx99
RN+mDIx+fApSU1NpHaXb4y55Uvx1dnY2T83FytGi3qyetefc1pgqMrl5bZKf
2EILfqqe4RIfFxURVPQRMIIdR5MjGkV5U1FiNj3CNq0ZIuu6hWLDd1acv3DV
IBLKxJkS2/Bq8ZjOqAEYURcY6q+//hqhZXQOnYqyr4rLlEg4yvHlP/74o3qe
uMPFyhlzXK8E6ED8KHdhDMnXPETkVQfVmJeXh3hDas6aNWvs2LEISPzLlS6X
r0hXEf5uXGN9Xi2Ass4c23v8+PHTp09TNgpwafaAnMsefsFuWpwP+Bauds7m
JoabnPRx4RQnkx2dgh8Qs+kJFxf2N/LDQTyC4C/OWuEr2OFbXo2XqAgD/qps
27lS5fQR1TsDkgMR4s7OUyWSBiiH4iGlCgsLSee8k5RSL1bqSqkuslDuUu28
SYjI4o8SgYTHQbahSPGVWVlZKSkpy5YtW7FiBU5TWZN5pYvpK9JVhL8b116f
VwqgRsxmvOKhlK8z1yGwfOdstnUxrSVqo6ylvQYpPJKZHBcZqs1mWsoFBUdE
J6bnyduFS4+YTfex7ootYQlLPnqlSyIIOv5nxXnWUo2XqNpMk/CGxR81AOOv
NtwRNsqJbIrvRrcorpwbXdaDerFaXcoqR+5S4nyah4gs/uy1sn///oMHD+bl
5eE0k5OT4+Pj+X9mZqayJrPIMMXFH+kqwt+Na7LPk5SShRKyW3moq/qVqSAI
giAIwjXMWisZGRnYzK1bt6akpOA0+/Xrt2DBgn37JAyfIAiCIAiCIAiC4A3D
rMTFxc2ePXvp0qWLFy9euHBhUlLS+++/n58vmwMEQRAEQRAEQRAEb6hnpX37
9gMGDIiPj8dpKjGKcZpXy1kPgiAIgiAIgiAIQnHjditPPfVU8+bN+/fvP3/+
fJym/rR3QRAEQRAEQRAEQfAUMZuCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiXmf8HQ4lP
3g==
    "], {{0, 278}, {1231, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{410.20000000000005`, Automatic},
  ImageSizeRaw->{1231, 278},
  PlotRange->{{0, 1231}, {0, 278}}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3XtUVPe5P34bG1ezWvtd7Tr9xR571knanJMYEmtijUHTWI2KGk28myYa
4w1jvUQlIsZog+INRvBCRREJityiiEqRiyA3ucklCgcQRUQBB0QRQUAE9ffO
bN2iDDDM7Jm9h3m//pg14lw+n73383meZy57Xp791UTb57p162b3C1xMnLVy
6PLls1ZN+jn+MWzV1/Nmd8eV/+9n3br9iL/8dP0hERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
EREREREREREREREREREREREREREREREREREREemsoaHh9u3bFRUViYmJXl5e
9vb2kyZN6tevX8+ePceOHatSqdLT0y9dunTz5k25R0pkdAwHIv0wdoiIiKg1
VghEIoYDkX4YO0RERNQaKoRbt26p1erU1NSgoCBnZ+eZM2f279//hRdeGD16
NP7JCoEsB8OBSD+MHSIiImqtvr6+qqqqrKwsMzMzLCxs3759//jHPwYOHPjz
n/985MiRW7ZsYYVAloPhQKQfxg4RERG1VldXh+xfUlKSnZ2dkJBw7Ngxe3v7
wYMHd+vW7YMPPti8eTMrBLIcDAci/TB2iIjIcBUVFcgj0dHRuMR1uYejJ7Oe
heSDv3v3bk1NDQqAy5cvnzt3LjExcd26dUOHDmWF0CGzPpBIK4YD6Y4rQEuM
HSIiMhxSqp+f3zfffINLXJd7OHoy61lIPvjm5mYUCXV1dZWVlcXFxbm5ua6u
rjY2NqwQOmTWBxJpxXAg3XEFaImxQ0REhouOjkZiHThwIC5xXe7h6MmsZ2G8
wYund/D09Bw3bhwrhA6Z9YFE7WM4UIe4AmjF2CEiktfdu3eF04OXlJQUFhbm
5eVduHDh8uXL+GdZWdm1a9ewRGOhxnIt90i1iIiIWLp0aZ8+fXCJ63IPR09m
PQvjDR6HXHV1dXl5+d69e1kh6MKsDyRqH8OBOsQVQCtZYufevXv19fUorvD4
eOrS0tIrV64UFRVdvHjxgkZBQQHqq9raWmM8OxGRomAxvHr1am5ubkpKSlRU
VHBw8IkTJ2JjY9PS0rAUZ2VlnTt3Dr0n+k25R6pFaGjo/Pnze/fujUtcl3s4
ejLrWRhv8KyuO8usDyRqH8OBOsQVQCtZYgedJh65rKyssLAwJyfnzJkzp0+f
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
gpycHEyqsrKyrq5OrjG3wxyra4aD4eEg1SxkCQc2m6bBQLPwQDMeNptERJIz
sNlElsSyjCU0ISHBz88Pa7Kjo+OqVauWL1/u4+OTmZmJHITkeOrUKfzT2dnZ
zs5uxowZKpXq5MmT169fRxpF3td78JInfWR8pHuMzdfXF6PFLNavX+/u7o6p
YYJIkQ81v/6MjFNWVoYCxtXVdc6cOTt27ECpg1RSW1uLvG/4MPSDjC+cTw9V
ire3Nwa/bNmypW3ALggICECRlpeXh7wv15jbYY7VNcPB8HCQahayhAObTdNg
oFl4oBkPm00iIskZ2GxWVVVh/czKykKWXLly5dixY4cOHTpw4MA33ngDD4WF
FEv3mTNn9u3bh0Tz8ccfv/nmm7/61a8mTpy4Z88e3BF5H2WD3oOXPOkjmyDj
Y2zYFOPHj7eyshoxYgQe3MHBQTw/PDIRMn5+fr6Hh8eUKVN+97vfffrpp/v3
77927RqyCUoCw4ehH9RXyPioo0JCQhYtWoTBv/7663369HlNmwkTJqxevRqT
Qt4XihmlMcfqmuFgeDhINQtZwoHNpmkw0Cw80IyHzSYRkeSkemczLi7uwIED
69evnzt3LhbnP/3pT1OnTsUSjRwaFBS0e/fujRs3rlixYt68eZMnT8b1iIiI
9l9hvn//fnNzMxIZVv7y8vLL2iA7o3745S9/KVYRreG+eAQ8TlNTEx6z/emI
rzC7u7sjbyLjI/Ujp2PYmEJGRgZug8SKjFNSUoKMaWtr++qrr86fPz8wMBD3
xXSQqjo7C13oMouamhoUHgUFBcHBwd999x22MzIaCok5c+Z89tlnkyZN+vDD
D0eNGjV8+HAUZpgdZtT+K8ymHHxr5lhdMxwMDwepZiFLOEi+C0TmGA7GW0AY
aBYeaLpQWqCx2SQiiyXVdzaLiooyMzOjo6OR0JEoe/fu/d57782YMWPt2rVY
qHfs2IGle5+Gt7d3VFTU+fPn2//ujPAjy/X19aWlpdnZ2XHaoMZAXv7FL36B
S1zXehvcFwkamVqX7+mI351BCnB2dv7iiy+QLqdNm4Z0rFKpkpKShCnj0ZA4
QkND7e3tBw0ahO0WEhKC9IQk9UzS12UWutBlFiii8vPzExISDh06hKIFW37L
li24gh3q5uaGfy5ZsuTLL7+cNWsWJoWdEhYW1v53Z0w5+NbMsbpmOBgeDlLN
QpZwkHwXiMwxHIy3gDDQLDzQdKG0QGOzSUQWS6qz0WIxxypdW1sbGBiIXP/b
3/72j3/849tvvz1s2LD58+dv3br1+PHjiYmJubm5On7sRzwfQl5e3smTJ320
Wbx4sbW1dY8ePXCJ61pvg/viSaurq5F08Jg6Tgd5yt/fH9vE1tZ20qRJQ4YM
wSaKjY19qHndVTglQnx8PCqcsWPHOjo6njhxAtmzpqbmmRfMdZmFLnSZBRJr
SkoKMj52KPZCQEBAREREWlrahQsXUAkEBQVt375906ZNyP7Y0QcOHDh79qzh
u0CqwbdmjtW1iOGgdzhINQtZwsF4u8Acw8EECwgDzTIDTRdKCzQ2m0RksaRq
NpubmxsbG7FQh4aGInP16dOnf//+77///qhRo/CwWPkzMjLy8/ORmHQ8oYHw
2jXWdtwRI9yszfTp0/v16/f888/jEte13gbJDmnixo0brTNyO86fP48qxcXF
ZcmSJRMmTBgwYICDg0N0dPRDTSrENPFoqAFUKhWyBi5xHX9BinwmqekyC13o
Mgv8b0FBAfJ+cnJykgaunzlzJjMzMzw8HFkepZe7u/vevXtxHRVLcXGx4btA
qsG3Zo7VtYjhoHc4SDULWcLBeLvAHMPBBAsIA80yA00XSgs0NptEZLGkajYf
PHiAvN/U1BQTE7N27dq//e1vI0aMGDNmzMcff+zo6IgVtaysrLKyEsu4jqdq
R3bAja9fv470tHv3bq2nths7duyrr77avXt3XOK61tvgvnFxcWq1uvUXW9pR
VFSEiSDd2NvbI+lbWVktX748IiLiYYtkdOrUqe3bt9va2np4eKSmpmLAyPjP
fDdEl1noQpdZYMMisaKsuqpx5coVVFlIkShIgoODkeuRMffv3x8ZGXn27Flk
fOGM+gbuAqkG35o5VtcihoPe4SDVLGQJB+PtAnMMBxMsIAw0yww0XSgt0Nhs
EpHFkqrZFKWkpLi5uU2bNm2qxpQpU1xdXZOTkzv7OEhhWJyvXbsWHh6+adOm
T7QZPHgwVuznnnsOl7iu9TYbN24MCwtDKkSa0P2HvXD7tLQ05EpsGdQtL7/8
8sKFC/E4DzXfr0H1gqQZHR2NdG9nZ9fOR4N0mYUu9JsFCq2MjIzjx4/7+vru
3LnTyckJM8rLy9Px7vIO3hyr69YYDsqZhQnCwXiDN8dwMOUCwkBTziyYd7Ri
s0lEFkvCdzaFk8jFx8dv2LBh9OjRo0aNsrGxGTlyJHIN/tjZB2xsbKytrcX6
jMGEhIRs02b27Nn9+/fv0aMHLnFd621w36ysLOSITn2WBpkO90KqcnR0RMb5
/e9/P2/ePGRPzFGtVuO/kAePHDkSEBDg7e0dGxtbVFSk9yx00alZCL/IVlpa
ilIkKirKz88P48ReRsZPTU1F8pVwF0g+eJE5VtcihoNyZmHKcDDeLjDHcDDB
AsJAU84smHfax2aTiCyWVM2mcO6Ce/fuIcvgoQYNGmRtbf3uu+8OHDgQ/xS+
ddIpwpdxkL+QZPPz81O02bJlC6qLF154AZe4rvU2eXl5yODCKek6/AyVCLkm
JycnJiYGFcuYMWN+85vfzJw5E1ke0xS+VrN169b9+/ejKjhz5kxhYWFbOUiX
WeiiU7PAYC5evIiBRUZGBgYGenh4HD58OCEhAQ+CjI9MKuEukHzwInOsrkUM
B+XMwpThYLxdYI7hYIIFhIGmnFkw77SPzSYRWSwJTxAknMEAiyce5I033rCy
shJ+2Xnp0qXh4eHGGLzxfkK9srKyoKAgKSlp06ZNNjY2yMjIDocOHUJhk5aW
tmvXrrlz57q7u+MGyGXIjLqfWd0ESktLkfFDQkJ8fX0xVGdn52PHjqFWkXtc
nWOO1bWI4aCcWZgyHIy3C8w6HIyHgaacWTDvtI/NJhFZLP2aTeHDS4JmDfFV
zYMHD+LRPvnkk+HDh//5z3/u3bv37Nmz8RRYwJFJy8rKiouLr1+/rvt3KNph
vKQv/oKbi4vLqFGjevTogUtkz4yMjBMnTmATbdmyBc+Yk5ODjN/6/AyywCbF
Fr5y5QrSIlLYvn379u/f7+fnFxQUFB8fj6QvfBGmsLAwOzsbN+vwRA3yQtLH
gNVqtaenp5j0N27ciKILR5qiqmuGg4ThINUsZAkHozab5hIOxsNAY6AZm/EC
jc0mEVks/ZpNIdc3tYBUEh0djUSza9eurVu3btiwYcaMGQMGDEAumzx5speX
V0lJCfIO0igSUG5uLvK+4YM3XtJHiYIBY5xubm6jR4/u3r37O++8g9SACfr6
+gYGBuLpUlNTr169irlja6AKkvDZ9YOMn5+fn5SUdOzYMW9vb5Qo2JWhoaEY
59mzZ7HxUW5h+0dFRfn7+ycmJiLvyz3k9tTX16P0QpW4Z8+esWPHIukPGzYM
xxWmc+HChRs3bsg9wCcYDhKGg1SzkCUcjLcLzCgcjIeBxkAzNuMFGptNIrJY
ejebSHaNGnc10tPTkWiWLVu2adMmpPjjx4+vXLly8ODBWKttbGxcXV2RQE+f
Po0cpOOPbenCeEm/tra2oqLi0qVL7u7uSPqYxSuvvIIrS5YsQRmArJqTk4OM
r6gXaZHEkfEDAgI8PDw2b97s4OCAEiUhIUGtViPHIekj9WP743+xr5H3s7Oz
5R5ye+rq6m7evInSa/fu3R9++KGQ9J2cnJKTkwsKChRVXTMcJAwHqWYhSzgY
bxeYUTgYDwONgWZsxgs0NptEZLH0azaxbCJrI4kgy0RGRgYHB+Ne27dvX79+
/d69e7F+ZmRkbN26ddy4cb/+9a+HDBmCh/Xx8QkKCkLSiY6ORsYsLy83fPCm
fB/Byspq2rRpmCCKFmRSZPzKykpJPpRlIPFjP+Kvktna2n722Wfjx49fsGDB
unXrPD09kd22bdvmoqFSqbBrsCOQOuUeuxbNzc2oIbFhUcPgKIqIiFi9evVf
//pX7IIBAwYgO+NIO3nyZH5+vvDbec/8mrksGA4ShoOBs5A3HCTfBeYYDsbD
QGOgGYkJAq2dZlP4fHhTU1N1dXVpaSk6dAzj+vXrtbW12M6KOiMEEZEe9Gs2
xRczkUpWrVo1e/ZsOzs7JycnrKJHjx5NT09HuvT19Z05c+Yf/vCHd955BwkI
66qrq+vx48fz8vKwnOp+brp2COkSdYXkSR95B+v8jRs3vL29P/roI2Sct99+
e968eR4eHmFhYShakBSQmJRQ2gkp7Ny5cxjqokWLrK2t//KXv/Tt2/e1117D
laFDh6L0GjNmzKhRo0aMGDFnzhxHR0fs4tjYWNxL7rFrgS1fU1ODLY+Mf/jw
YZQo2LmYDnYBZoQDycHBwcvLKy4uDkcRboa8L/eQGQ5ShoOBs5A3HCTfBeYY
DsbDQGOgGYkJAq2dZhOdJvZpY2MjjvC0tDQcrqdPn8YRW15ejnuh3zTCjImI
TEe/ZlO81/Tp0wcNGvTiiy/a2NisXLkSZQCKAeFLGREREcuWLXv99dexYr/1
1lsDBgxAYYBVVMJ0GRISIqZLXDf8AUVNTU3IPnfu3EHpMmHCBGQcJFOMH2mo
Uz8ZZgJqtRoZPzIycs2aNUOGDOnevftzzz33s5/9rJs2gwcPxm7CXkBKRWEm
99i1wLGBVH716tXw8HBk/FmzZqFueemllzD43r17o4DE7sBMcfhJWD0aiOEg
4XMZOAt5w0HyXWCO4WA8DDQJn8usA01yJgi0dppN4cPhGEN2djYafxcXF39/
//j4+MLCQvSbtbW1RpgxEZHp6NdsYk1Gcg8MDHRzc0MSQbb67rvvDhw4gD/m
5+dXVlbiNllZWd7e3osXL166dCnSpb29vY+PT3p6uvC7V5J8MiQtLW3nzp14
dlziuuEPKBJ/nxpr/oIFC6ysrGbOnOnu7q7A03GIrzBjd2AvTJs2barGFG2Q
Lg8ePIiMjyxWVVUl99i1EF9hxkEYGhq6a9cuTGrhwoUY/Pz581etWoVEHBQU
lJycrJy3chgOEj6XgbOQNxwk3wXmGA7Gw0CT8LnMOtAkZ4JAa6fZFFrdkpKS
EydObNmyZcaMGThut23bhtoMz4jD3ggzJiIyHf2azerq6itXriDRJCYmYrVE
ZoyKikKWxx/Fb5SUlZUhxR89ehRLd1hYWEREBG6AP967d084k57hg8eyjywZ
EhKCS1w3/AFFmCBW+JycHGwcIZNu3LgRs0A6UFpFJ353BqONjY09pPFDG2Ji
YrKzs7EXkPEVNQuR+N0ZzOj8+fNnzpyJi4vDlsfghS9eobAUzpKhnC+pMRwk
fC4DZyFvOEi+C8wxHIyHgSbhc5l1oEnOBIHWTrMpfhnZ09Nz7ty5ffv2HTly
5Oeff46WE006DngjzJiIyHQM+ekTrLdYdbH23rx5s7a2trGxseVtkNmRj/B3
LOC4IvwCtRJ+j1IXwuncUdIcOXJk9+7d69evP3z4cG5urtzjIiViOBCZAAON
zFc7zWZFRQUqsVOnTqESGzJkSLdu3V588cU333xz+PDh69ati4+Pl3vsREQG
0a/ZfPDggfCb2kjlyPtaz5km/K+Q7oVXlfEXZSZ9DFI4B6Barcayj4yP/I6V
PyAgICgo6NChQ8j4KSkpivqqJikHw4HIBBhoZL7aaTaFd7RRjB08eHDFihUj
Royw0Rg9evSGDRsSEhLkHjsRkUH0bjaFk3ULrzNrffVYKAyEn94W0r2BP0Jt
PMj4ly5dyszMPHv2LDZIfn4+Mr6fn59KpcJlTEwMagBk/K598g3SG8OByAQY
aGS+2mk27969i36zoqIiPT390KFDOABWrlw5e/bscePGbdmy5fTp03KPnYjI
IPo1m11MWVkZMn5oaGhERATSfWJiYkBAABb8pUuX+vj4WNrWIAvHcCAyAQaa
RWmn2Wx5G+FbyTgSvv3224kTJ+J4SEpKkmvMRESSsORmUzzPPDL+wYMHsbY7
Ozvv2bMnMDAQ/zxw4IC3t3dsbGxRUZHcIyUyOoYDkQkw0CxTh7+ziaMCnWZq
aurRo0f37dvn4uKyatUqf3//7OxsucdORGQQS242sbbfvn27srIyNDQUGX/4
8OHTp0/HRlCpVMj4wmkMkfGVeap2ImkxHIhMgIFmmdppNoVzXtXU1Jw7dy4k
JMTV1RW38fT03L9/f1xcHO4l99iJiAxiyc3mnTt3kPGLi4uxqk+aNKlnz559
+/YdP378smXLsBGQ8YWv/Cjz+z5E0mI4EJkAA80ytf+dTXSaOCri4+M9PDwW
L17s4uKCwiw1NfXixYuK+l1vIiI9WHKzKb7CfPLkSZVKNWPGDDs7O2dnZx8f
H+FTTEo+uQSRtBgORCbAQLNM7TebOCSuX7+O/w0LC/P09Dx69GhSUhI6zWvX
rtXW1so9diIig1hysyl+dwb5HQv7kSNHIiMjcQXTR1KoqqoSTn4o9zCJTIHh
QGQCDDTL1E6z2dDQgGazoqICh0ROTk5qaioKsytXrty4caP1L8kSEZkdS242
RUJmb3lJZLEYDkQmwECzKO03m9XV1eXl5egu0XXW1dUJP+sj95CJiKTBZlPA
jE8kYjgQmQADzXK0f4KgO3fuoN+sra2tr69Hp4m/PPMDskRE5ovNpogZn0jE
cCAyAQaahWin2WxubkZ32dDQcPfuXVxpamril3aJqCths0lERERkPO00m0RE
XRubTSIiIiLjYbNJRBaLzSYRERGR8bDZJCKLxWaTiIiIyHjYbBKRxWKzSURE
RGQ8bDaJyGKx2SQiIiIyHjabRGSx2GwSERERGQ+bTSKyWGw2iYiIiIyHzSYR
WSw2m0RERETGw2aTiCwWm00iIiIi42GzSUQWi80mKdz9+/ebm5vv3bvX1NTU
rIG/PHjwQO5xESkdY4dIJG84sNkkIovFZpMUDiXB3bt36+vrGxoaGhsbmzRQ
JMg9LiKlY+wQieQNBzabRGSx2GySwt27dw/lwe3bt2tra3EF1YLwurTc4yJS
OsYOkUjecGCzSUQWi80mKYrwMaeGhobKysqioqJz584lJiYiI/v5+UVHR+fk
5FRUVKBawA3kHimRsjB2iERKCwc2m0RksdhskqKgPKirq0MNkJ+fHxMTc/Dg
QRcXl+XLlyM7Ozk5hYSEXLhwQa1W19TUyD1SImVh7BCJlBYObDaJyGKx2SRF
aWhoQHlQUVGRmJjo5eVlb28/adKkfv369ezZc+zYsSqVKj09/dKlSzdv3pR7
pETKwtghEiktHNhsEpHFYrNJioIKAUlZrVanpqYGBQU5OzvPnDmzf//+L7zw
wujRo/FPFsxEWjF2iERKCwc2m0RksdhskqLU19dXVVWVlZVlZmaGhYXt27cP
GXngwIE///nPR44cuWXLFhbMRFoxdohESgsHNptEZLHYbJKi1NXVIfuXlJRk
Z2cnJCQcO3bM3t5+8ODB3bp1++CDDzZv3syCmUgrxg6RSGnhwGaTiCwWm03Z
VVRUIBtGR0fjEtflHo7M7t69W1NTgwIAeVk4f+C6deuGDh3KgllaXeOo6xqz
kApjR29d40Ay61lIPnilhQObTSKyWGw2ZYfc6ufnh+2PS1yXezgyE353u66u
rrKysri4ODc319XV1cbGhgWztLrGUdc1ZiEVxo7eusaBZNazkHzwSgsHNptE
ZLHYbMouOjoaG3/gwIG4xHW5h6MU4ukdPD09x40bx4JZWl3jqOsas5AcY6ez
usaBZNazMN7gFRIObDaJyGKx2ZRdRETE0qVL+/Tpg0tcl3s4SoEKobq6ury8
fO/evSyYJdc1jrquMQvJMXY6q2scSGY9C+MNXiHhwGaTiCwWm03ZhYaGzp8/
v3fv3rjEdbmHoxQKqRC6qq5x1HWNWUiOsdNZXeNAMutZGG/wCgkHNptEZLHY
bMruyJEjn3/+ec+ePXGJ63IPRynEn+T28vJiwSy5rnHUdY1ZSI6x01ld40Ay
61kYb/AKCQc2m0RksQxsNhsbG+/cuVNVVVVcXCyc8C0uLi46OjoyMhIPcu3a
tebmZizmRUVF+Ofp06fxd+SRpKQkLPK44927d5uamow6wU7BkMrLyzE2zAWj
jYiIiI+PT0tLy87OvnLlSnV1NW5z7969+vp6JK/CwsLk5ORjx46lpqYiieCP
2BqYb2efVKoke//+fWxMDK+0tDQrKyvisXBtsAtycnIwqcrKyrq6Or2f1HgU
UiEYj7yxI3lpx9hRDnOMHYaDhYcDm00ioq7KwGYTKRVrOJbQhIQEPz8/LOCO
jo6rVq1avny5j49PZmYmEhYy6alTp/BPZ2dnOzu7GTNmqFSqkydPXr9+HTkX
RYJRJ9gpKA9QG2Bsvr6+GC1msX79end3d0wNE0Q+faj5qWikp7KyMlQ7rq6u
c+bM2bFjB+oipJLa2loUCZ19UqmSLMoD4eR7KGm8vb0x+GXLli1tA3ZBQEAA
Krq8vDwUCXo/qfEopEIwHnljR/LSjrGjHOYYOwwHCw8HNptERF2Vgc1mVVUV
1s+srCyk1JUrV44dO3bo0KEDBw5844038FBYSLHOnzlzZt++fchKH3/88Ztv
vvmrX/1q4sSJe/bswR1RJKDGMOoEOwWpB+UBxoZNMX78eCsrqxEjRiD3OTg4
iOdjR9pCeZCfn+/h4TFlypTf/e53n3766f79+69du4Zsgvqhs08qVZJFMYby
AEVXSEjIokWLMPjXX3+9T58+r2kzYcKE1atXY1IoEoTKR2kUUiEYj7yxI3lp
x9hRDnOMHYaDhYcDm00ioq5Kqnc24+LiDhw4sH79+rlz52Il/9Of/jR16lSs
50i4QUFBu3fv3rhx44oVK+bNmzd58mRcj4iIaP/l6Pv37zc3NyPrIU2Ul5df
1hfui0fA4zQ1NeEx25+O+HK0u7s7kizKA9QJKAAwbEwhIyMDt0EWRnoqKSlB
erW1tX311Vfnz58fGBiI+2I6yGudnQUKEpRMv/zlL8XCSb9Z1NTUoEopKCgI
Dg7+7rvvsJ2R0ZC458yZ89lnn02aNOnDDz8cNWrU8OHDUcVhdphR+y9Hy7IL
RAqpEIy3EeSNHamOOhFjxzSHjS4UEjudwnCw8HCQfBeIFBIObDaJyGJJ9Z3N
oqKizMzM6OhoZH9k1d69e7/33nszZsxYu3YtVvUdO3Zgnd+n4e3tHRUVdf78
+fa/aCP8InN9fX1paWl2dnacvnBfZHOkdV2+1CN+0QYpwNnZ+YsvvkBunTZt
GtKfSqVKSkoSpoxHQ+IIDQ21t7cfNGgQtltISAhyGTLaMxWCLrNAWYVS5Be/
+AUucV3vWaDiys/PT0hIOHToECocbPktW7bgCnaom5sb/rlkyZIvv/xy1qxZ
mBR2SlhYWPtftJFlF4gUUiEYbyPIGztSHXUixo5pDhtdKCR2OoXhYOHhIPku
ECkkHNhsEpHFkupstFj5saTX1tYGBgaiMPjtb3/7xz/+8e233x42bNj8+fO3
bt16/PjxxMTE3NxcHT8jJJ48IS8v7+TJkz76wn3xpNXV1chQeEwdp4Ok5u/v
j21ia2s7adKkIUOGYBPFxsY+1LxIK5w/IT4+HuXQ2LFjHR0dT5w4gVRbU1Pz
zKvrusxi8eLF1tbWPXr0wCWu6z0LZOGUlBSUB9ih2AsBAQERERFpaWkXLlxA
2RAUFLR9+/ZNmzahVMCOPnDgwNmzZ5W8CxRSIZhgI8gSO1Idda0xdnQcvC7M
Onb0w3CwzHAw3i5QSDiw2SQiiyVVs9nc3NzY2IhVPTQ0FJmiT58+/fv3f//9
90eNGoWHRZrIyMjIz89HFtPx7AfCC91IBLgjRrhZX8iMyCk3btxonb7bcf78
eZQ0Li4uS5YsmTBhwoABAxwcHKKjox9q8iamiUdDwaBSqZA1cInr+Avy6TMZ
UJdZTJ8+vV+/fs8//zwucV3vWeB/CwoKUCQkJycnaeD6mTNnMjMzw8PDURKg
TnN3d9+7dy+uo7wpLi5W8i5QSIVggo0gS+xIddS1xtjRcfC6MOvY0Q/DwTLD
wXi7QCHhwGaTiCyWVM3mgwcPUCQ0NTXFxMSsXbv2b3/724gRI8aMGfPxxx87
OjpiRS0rK6usrMSar+N53ZFKcOPr168jl+3evbutU+F1CPeNi4tTq9WtvwXT
jqKiIkwEucne3h4VgpWV1fLlyyMiIh62yFynTp3avn27ra2th4dHamoqBozy
4Jkvkugyi7Fjx7766qvdu3fHJa7rPQtsWGRh1GBXNa5cuYKSDPkU1UtwcDAK
A6TX/fv3R0ZGnj17FuWBcPp9xe4ChVQIJtgIssSOVEdda4wdHQevC7OOHf0w
HCwzHIy3CxQSDmw2ichiSdVsilJSUtzc3KZNmzZVY8qUKa6ursnJyZ19HOQ7
LM7Xrl0LDw/ftGnTJ/rauHFjWFgY8iZyiu6/Aobbp6WlIbFiy6DIefnllxcu
XIjHeaj5Mg5KHWTY6Oho1AZ2dnbtfI5Il1kMHjwYeee5557DJa5LOAtUZRkZ
GcePH/f19d25c6eTkxNmlJeXp+Pd5d0FCqkQTLkRTBk7xjvqGDs6Dl4XZh07
BmI4KGcWJggH4w1eIeHAZpOILJaE72wKZ5yLj4/fsGHD6NGjR40aZWNjM3Lk
SCQm/LGzD9jY2FhbW4v1GYMJCQnZpi/cNysrCwmlUx+8QVrEvZDXHB0dkZ5+
//vfz5s3D6kWc1Sr1fgvJM0jR44EBAR4e3vHxsYWFRXpPYvZs2f379+/R48e
uMR1w2ch/HxbaWkp6paoqCg/Pz+ME3sZ5UFqaioytVnsAoVUCCbYCLLEjuRH
nYixo+PgdWHWsaMfhoNyZmHKcDDeLlBIOLDZJCKLJVWzKZzo4N69e0hJeKhB
gwZZW1u/++67AwcOxD+Fr6h0ivDNHSQ7ZOT8/PwUfeXl5SHdC+ev6/ADVyIk
ppycnJiYGJQ3Y8aM+c1vfjNz5kyUBJim8B2crVu37t+/HyXEmTNnCgsL20pY
usxiy5YtKKheeOEFXOK64bPAYC5evIiBRUZGBgYGenh4HD58OCEhAQ+C8gBp
1yx2gUIqBBNsBFliR/KjTsTY0XHwujDr2NEPw0E5szBlOBhvFygkHNhsEpHF
kvAEQcLpDrB44kHeeOMNKysr4Wegly5dGh4ebozBG09lZWVBQUFSUtKmTZts
bGyQAZEdDh06hCooLS1t165dc+fOdXd3xw2Q+JBGdT8Ne2uS/5h1aWkpyoOQ
kBBfX18M1dnZ+dixYyhsDH9kU1JIhWACssSO8X5CnbEjO7OOHYaDcmZhynAw
3i5QSDiw2SQii6Vfsyl80knQrCG+BHrw4EE82ieffDJ8+PA///nPvXv3nj17
Np4Cqz3SbllZWXFx8fXr13X/woUsxJ97c3FxGTVqVI8ePXCJVJuRkXHixAls
oi1btiAh5uTkoDxofTKHTpEqyWKTYgtfuXIFORQpbN++ffv37/fz8wsKCoqP
j0eFIHxrprCwMDs7Gzfr8KwO8kKFgAGr1WpPT0+xQti4cSMqNBxpCi+Y26GQ
2DFeacfYkZ0ZxQ7DgeEg7eBbU0g4sNkkIoulX7MpFAZNLSDvREdHIyvt2rVr
69atGzZsmDFjxoABA5A7Jk+e7OXlVVJSgiSFnItslZubiyLBNBPUD+oZDBjj
dHNzGz16dPfu3d955x2kBkzQ19c3MDAQ2TA1NfXq1auYO7YGSia9n0uqJIvy
ID8/Pykp6dixY97e3qhnsCtDQ0MxzrNnz2LjozbD9o+KivL3909MTESRoPdz
mUB9fT3qNJSUe/bsGTt2LCqEYcOG4bjCdC5cuHDjxg25B6gnhcSO8Uo7xo7s
zCh2GA4MB2kH35pCwoHNJhFZLL2bTWTGRo27Gunp6chKy5Yt27RpE+qB48eP
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
rKwMDQ1FeYDFf/r06V9//bVKpUJ5IJzzEOWBMn/mgEhGjB0iEcOBniH85E1Z
WVlhYWFOTs6ZM2diYmKOHj168ODB7du3r1mzBv2ml5dXh19ZIiLqAioqKnJz
c4XznO/evdvJyWnHjh3ff/99cHDwsWPHwsLCIiMj0W+q1Wq5Ryq9O3fuoDwo
Li5Goz1p0qSePXv27dt3/Pjxy5YtwxZAeSB8P0iZXw4ikhFjh0jEcKBn3L59
G51mfn4+2szo6OiQkBB/f390lzt37kSJtW3bNjc3N9RXBQUFco+UiMjosCRe
vXoV/WZKSkpUVBR6zBMnTqD3tKh3Nk+ePKlSqWbMmGFnZ+fs7Ozj4yN85EnJ
Z6IgkhFjh0jEcKBntH5n8/Tp0zExMeHh4SixwjQyMzOvXbsm90iJiIxOyJIV
FRUlJSVYFfPy8i5cuIDu0qK+s4liICkp6ciRI5GRkbjy448/YgtUVVUJZ0qU
e5hEisPYIRIxHOgZrb+zeeXKFRweFy9evKBRUFCA+qq2tlbukRIRkSkIZUDL
SyLSBWOHSMRwICIiIq1YHhDph7FDJGI4EBERkVYsD4j0w9ghEjEciIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIyJQePHjQ3Nzc1NR0T6NRQ+5BkUk9aJfcoyMy
EXExbGhoqKmpqaqqun37dm1tbX19PVZF/Bdug8u7d+/Wacg9XiIi6sqS13UT
TPRXyz0WIv2hdkIdheIKBVXdY3IPikynw3bSkvtNrvMWRVwMb926pVarL1++
XFJSUl5efvPmTfSewqtw6DTRgVZq6PMcDVlO7+KA6mUX1fDkjylOj46zbk7J
OjxE8jrrx7fv1muoU3Lto/8w/eGq6AARt+oUP7Uufzc3RZ5jfprFOh0OmYcP
b10M81oxZ9gbvYSpv/zuxIXOfsklDR3f07D7PlQn+zkvnDi0z6M7v2I9bJad
1ym1bnc2ex3to2Qx8nXVxkM92kfidu72svWIOXbeYXltrVKX/Sb+tHx86ndZ
inmS0Sh6jSXSmfAyfm1tLaqp6urqWxpyD4pMRGgkO3xn02L7Ta7zFkVcDNFp
XrhwISsrKzc399KlS6Wlpeg36+vrcZu6ujq0mVc0Ov8Mj/rEXjOCtbc/HTeb
Dckbhz2uJ7v1GqfKqn3yf2w2n9K1m83Lfp/2aq/7eKI2z2/xk1cnntZr2LLg
oibj3PdhQ9aOiS+3deehq2P0erXGnHS8j6RoNmvzvGa1tZnh5TneeVpb+yxX
zZ6d4lck6aRJWopeY4l0VlFRkZOTc+rUqbS0NFRWxRpyD4pM5Pbt2yik8/Ly
UlNTIyMjDx06dOTIkePHj584cQL/jImJiYuLw7ERHR2NfyYlJZ07dw61d3l5
+Z07d+Qeuylwne/CxA/EXrt2DSGQkpKCoz08PDwkJARRIFz++9//joqKio2N
RSycPHkyIiICf8F//aDR2WdsSHHSlHdjvC4+/R+6NptPd5ozvPJqn/pvNptP
6cLNZm2y5v3x9huZx7ccKh4yP72xOGeFSuWssptlLfYnLd8cl+y+T7//3u2V
MQvXaO779z5PHvGVOcGXDd8WSqXTPup0s2m9I6/NZxHedNZs59ULxrTY0N2s
1yVr6TdrY+w0txnjyXZTuRS9xhLpLD8//+jRo5s2bfLx8UEpdU5D7kGRiZSU
lKSlpQUHB2/bts3Ozm7q1Kmff/65ra3tkiVLvv7669WrVzs6Oq5Zs8bBwQH/
VKlUvr6+KLlxhKDflHvspsB1vgtDp1lTU3Pjxo3MzEz0lQiB9evX29vbL1iw
AJfr1q1zc3PbsWPHrl27PD09cfD/85//XP6YnUbnnu/RB2i7vdW68NOp2WzI
ch3TTqf5kM3mM7pqs9lU5DejRSPRXrN5K2yBeMuf3uF66kNLt7JU4x79b68F
Ya0+z2TIfX96XeWtx4fqGNesp25wOXjh4/7o2bf4u4xO7KMOqYMfP1SvGc+8
C9kQs6KXuJlVKU/vhyZ1zEZxxei18LiWT6yp/ScK4etXYsAAyZgUvcYS6Swp
KQl11MSJE1euXLlv374EDbkHRSaSl5eHMnvDhg2ffvpp3759u3fv/v/+3//7
z//8z//93//t16+ftbX1Bx988N577w0YMAD/O2HChBUrVuzZswf95qVLl+Qe
uylwne/C6urq0GlevXr13//+98aNGz/55BMbG5t33nnnf/7nf95///2pU6d+
9dVXy5YtQ1OJw3769OnDhw+3srJ66623cJv3NDr1dI++vaW1ruu42Xym0/Rr
9+OLpqPoADH3plKrFl1eh41My47vU39t7149eV+s1+pTDVLdV9OoPrrzW2u0
vacmfGFQ8/+qH3WZtlnpzD7qUJH/o4/iduu3+tk3kS96jXn0BNZOKVo/Ktvi
/eV+qiwtN8hS9dPsQm2vGJASKHqNpS7BqF+Uq6mpKSsrO3/+vK+v7+LFiwcO
HPjll1+ijzijYbznJWPQ+1BBpZ2cnPzDDz8sX7580KBBaDb/67/+CwcD+spZ
s2bhj+vWrcMlruMvqMZnzpxpa2vr7u6ekJBQpSHtRJSG67xi6X3MNzU13b17
986dOwUFBTExMQcOHNi6dauDg8PcuXPnz5//j3/8Y8mSJWvXrnVzc/v+++99
fHxwAyySmzdvXrRo0fjx4z/++OOPPvponEYnnrUybKGmZOy1KkZLUdhBs9mq
09Rv5kag6ADpcs3mrRyvOa90e1abjUxDzKpeHW6BhlOre2m5jSH3/enedo/u
POzZT4yLt1jxuNt01dYDma1O7qOOtNtOZrk+ej1A+6oiqAye0+6+ePzmpnUX
7Pq7BEWvsWT+jH1iFnSa6enpoaGh3333Haqm3r17o5XYtWtXjoaRnpSMwZBD
5datW5cvX87KynJxcRk5cuRzzz1nZWU1efLkNWvWoKNEExoXFxcYGOjq6rpi
xQp0mqNHj+7fvz+qbj8/v8saEk9GYbjOK5Mhxzw6zerq6uvXr0dHR+PA/uKL
L2xtbdFjfvXVV5s2bUKDeeLEiVOnTqWkpPyocfbs2XPnzmGpRETY29ujFcXt
P9fQ/Ukfv63Zxvs47TWbDXmenz75OOOsYOV0mg8VHiBdqdm8lee37MnXda0X
hyUfePzeYJuNTJbT4zs8derjZyU/vlnL99wNue/DhyXiG5d2bXVBRR2P39zo
s4/aV+Q1+vGjafnSpTp4xqP/1foRWfFB/CY8utnqRK3DDlsodKx8c9NQT15C
aSNqnrzj362X9g+xiC8gjPF+tNI/u8beKgrb8eT0zr3eGDZxgXvYxY53nTrF
T7VgonhOac0dVX4pbZ4X+vHzakK7Ni943RxrzasoP30veEdYUasn7OzjkxK0
LKWM1G+eP38e5ZNKpULJ1LdvXxwb6CN27NhxUcMYz0jGYOChIp5+09fXd+LE
iWg2ra2tly1bhgYzKSnp6tWruE1hYWFUVNTu3bvnzZv39ttv41AZPny4s7Nz
loaUk6nMi/FXLZwyTFyvsGL1GTpszgqvsHzta+lT66HmEZ5Zh3+6b4frMFZv
b7s5j+/Vci1VdC1tqQw85u/cuYNO8/Llyz4+PjNnznzppZfef//9GTNmrF69
OiAgoK2X2i5duhQTE7N3716smWvXrv1KQ9enbIh59A6Q9k+ytdNsPtVponxt
v9Ns63B9NkzUyX7r5gx79+XHIYYDPkbd8nO5Qj3Tzg3aekZ1TIvfyHjZespC
lX+y1js+o9OFyuMtpnnehrwjTnOE0b5i/aT06ux3Np96TCyOt/JOuGM5erya
9PnpNztOtC6ynnGr6ISX3ayW93LCRISt9fiJdfmBm6eI21k8uejjN6TabmTU
wZ8+3jnt/ryF2m/Ko9s9qZANue/Dls3mp219J7PIc1gH49eDuGeFx2xSxzw5
jLGwD5uzzi/ZaAu5PvuoXU/68V52MVrOwlQUjJAZMQwtgFNKOw/zZB+10ZOK
LVKrE5dRJzVEPXpLv5f2PZ68WjxGtL/RXOQ14tn/bbHGFhUdsRv29Ae0H+s1
bE1Mm0tTZczqodrv9tM9h9ppPU/Xk6yR/9RJqLQcKno9vmVqbGxEvX3z5k1U
FJmZmadOnYp5LC4uLiEhAYV3Xl7etWvXUJmLv+597969urq627dvl5SU/N//
/V9ycjJuifuiMj/5WEZGBh4Tj4zHF36mTSS8qfTjjz/iNmlpacLdY2Njca/E
xMQzZ86cPXu2uLhY2h8iEX4kDrUWnmj79u1z58794IMPXn75p9X4ww8/RENR
oiHhM3YxXexQwXOVl5ejnXR3d8cB0L1792HDhq1btw5zyc3NxXGC21y8eDEi
IuJf//rXnDlz3nrrp5fdRowYgWZTeN9Hou16K9m5zZPkC16e1c4ZUX6qoouO
t70OL2urSm/I82/jXr2GrY66xWbzYVc55lt+ehYP8v33369atWry5Ml9+/ad
OnUq+kd/f//Tp0+39YMmpaWlGMaRI0f279+/c+fODRo6PrVYgbT5iUHtzWbn
Os2HOjWbDXnec7QH2rsLwy7/dONbUau1R4S2c4c+VQj5t/HIr0x0T297N+lX
qDxpDPOeOuupxqM3BQxpNi+H2bUxKgwpTOuQHv506pu27qVZvgxtNl+eoop5
POKOG5knHV8Hp3+JWfX4dgeKJLjvTx59ExAWntD6gsGT9+ykXFpbNpuXg7V8
nFWzFSfuyDLGW3j67KN2PP7gfVvn9tHVk48093JKb+MmHS5QpKPHbxNrf13x
R9VbT47Dbp/+0OrIF+Ouxd3FNfatd63FH6uduGC1lnMOa9194u/vaI6BPuMW
rnZWqZxXL5zy5JzS3Xp96pX/bJw+ft63rN/tJTyp5mTUdnPefbnXihYfWND3
8S0TSh1USiiqo6Ojvby8vtVYreHo6Lhx40aVShUcHJyVlYXaBuWKUBcJ55dA
KZWSkvLDDz+4urriliha7DVWrlzp4OAgnk1FrVbjWVo+KUop1E4+Pj6enp6o
XvAUqF7++c9/4l54HBT/Bw4cQH0l7Q+RCLVffn6+r6/vV1999d5777322mv/
8R//gcPho48+2rdv3w0NCZ+xi+lih0plZeX58+dRY+MBhw8f/vzzz6Pl3LFj
BwpyTLOmpga3uXDhwokTJ/DHWbNm9ev3Uw2BZtPFxUW6Exc/deI+zduRP528
/dn1Cv+14tnPZIlV9Op1n4rrsHB3XdbhJ+de0H5Ha+vHL+hZcrPZNY558dOz
eMatW7d+/vnnkyZNsrGxwRq4ZMkSPFF2djY6TdxG691xRzTUeMawsLDAwEAv
Dd2eWfzoVK8234DQ1mwWHWjRaa5q+1XrFjpsNsUw6fWG8FMUqxeOaxElo72y
Hv04S4sbjG4RgqO9itp4xpaFUOsfyGjzBCZ6FyqPt9jj533ZepbdoycV3wbS
u9lc4/R4VI8eVrVm4Zg3Wqwm72qrJLXOpcUdew0d9rgr7nSzmeX6qerUU4OV
rtl88s7Xk4cy5L4ajz83jm2l5bdRWiy8c4Il/LVNcc8uXr36lad3xIpHHwJ8
dDhq/SkQw+izj9rUkLzucV/SKug65dbxxz1r2x9p7qBFok64FTxL2JRa3rh8
8m6+oFU9g50l/E/Lrr/FO+bdNG+aZ91q+VmRp857vPDZT0LXJq9+/LLPy1Pc
k5+JtVstfkW31emnWj7v/9/eeYBXUextHCveq171XsvxU/SiqDSlqgmIkAAC
QVpoGkCIoYdqCC10ImIIoUoNAYEQWiItEJFEpIQmARESFA1NiViIiorXxvfj
LGd3T9nNaUDA/+/x8QnJ7szszJw577sz8x+H4Ofn1HL7kP7fk++++w4ptWvX
LoRNz549a9asWcNKYGBgUFBQSEhIaGjo2LFjkRmIIgTVOWtdK8bt0KFDSClU
UOvWrRs1alSrVq0qVapUrVq1WrVq1atX79q1K4Jqz549ygt8fab79u1D4fTv
379bt24dOnRA+XD7888/z13k2LFjx+joaCyhfw8iQTLhNJFM48ePx11iM2+/
/faSJUvSF1q0aEF2P1nxY47XGNdYV1GPPkH/U56bb765VatWJEWBf/nll99+
+41rMJ48zqRJkzp16lSpUiW6ygsvvID4P2DF9yrVfRsGxmY5aerfC9KHqDMX
jsrHfhwOjFxiH5//bG6iNg47fdXui7elawkenm6/jNDxKPO/s9m8Nvq8unp2
/vz5OM2HHnroySef5FlIDRvLkPjnn3/+ZcXl7erjUA9ZWVlrrLiVsTaz4KQE
VJzMpt5plgh3d8thUWbz4sckZr3dX+1eubi6oHBjjO3D4Ljn1D5lS8g4h+W4
urCczksBfREqWo05uVFVCXlrNi/WQu9k+9HEbqLZaU+WNlVXIiAm3b7B8tMi
7SdfPTabzrhhZNSJVPOIr9ospC4pX+5VyE1Uz0YJikrckX9O6Rhn8zO1RSwG
cW69xr4FnRqiUBdoy7fpQvfw3mxqcYGcI/16gu4UTrMgQq5WbwreoTa6k2aw
vXWsH3zRczpae/W1pN2HTj/G2q8fsGE7L7WE07bcnDhbCCnDsHKaV3V4Ia/L
13B9tS/pG6FEnjx27Bhf7lu3bt28ebNyzjuS4NSpU3/88QdSIT8/n39u27aN
36elpW3fvh0JwVf8r7/++vvvrrdt8P2OoOWCb7/9Fhnwsf+gqKT5v//9j6zJ
xTx3JMSqVavQz6NHjx48eHDv3r0ROYiZIUOGIIdwYYicHj16vPXWWzz4wYMH
0VSk/Omnn27cuBEBhg5HrsTExHD9oEGDuLFLly6I9nr16iGT+OfEiRNRJocP
H6aiUGLolm+++eb999+fOnUqV7722muIMWUrUL9+/cLDw9FXlCEqKmrhwoX7
9+93p4HMIV8KTNY4zfXr18+YMYPHbNeuHdqvfPny991334033ogaTElJ+dWK
7znS7l999RUdgA5Dl8jIyPjggw/QafrpAyofR0NtfPbZZ9nZ2atXr965cyfd
gF+qi/FUpKtciq6izlpiIjAO999/PzocDU+xkdbUM05z3bp1lIqMmjdvjr94
5JFHXn31VbI7bsW77qFDE2nGR0trksZhLNWNh0bx+W3vbB3vVd9AGgTnt59v
ddNs/mbliy++yMnJybCxwRUMj/Q9KpD2/fnnn12mJn3ej32e76m9e/euXbuW
1Bo3bsygh1+mt/NQ2GGK/ZcNl7erE7X4bi7+0IpbGatLp+obz1DYm01n92dw
roEjbphNlx8TnVFyfYH2YXFQO3ohZHBwvCZ3HcSGT0JFZysMxw0fzKZBkc6l
97ZdMdzOPhSm2UJ+GrzAP7c1RreC7vKYTd35I3HGMk+/tE+rEF/utfF7fmp0
iOHmiDKh8Vv9bff0ZtPVjKobR4H4E2/Npr+mNc9lD9eOr0k1XQ6dPfzihS7W
dgoeob4oMAjRXCUh1Rayyf7lufpa0j52kDbGGsQU0gcmshv51VgB5rtxjyQG
m+dr9M3lW/pGKJEnt2zZkpycPH78eL6gUQ7IgAULFvANjibBL2RlZfHPuLg4
ZAAqAnnw3nvvff311zgLI/+i7utB02JGlvoPUkPtnD17FvViZHXV3ClnbGxs
kyZNkEzoIp5i2bJleB/EEo/z8ssvlytXrmnTpgMGDJg9ezbqMTc3lxupjcmT
J/Ok/H7ChAkoH0QLd+G1Z82aNXDgQOxbaGgoEp17qTSKREkKCwuVhaypqalj
xox56aWXhg8fzr24LVQ9P6jaDEVHSfyyLQ7th/sj661bt+I0cRY8affu3ZFt
DRo0KFu27C233MJjrlix4ncrvueI08RmUrE4F+qQrjJ27Njp06fTf6g3xaRg
Kr/77rsvv/ySGktISIiIiEBeolcpp/MeLukql6Kr0EaLFy+mAKju+vXrP/nk
k3QJmiw/Px8ZrywaxAvgKWrXro0brVu3Lpch+3m076141z00zuYkR0cE1w8u
ZzGe9zEaS/XjoaFy0FST3b3aOjHjdVza62V3zebPVnbt2pWUlESfp136GcDw
mJKSwueRHoK3cpma9Hk/9nnSfOedd954442OHTs+++yzd9xxR8OGDUeNGkWB
6eqMVyZOU18bDFmnT5/+0oo7+RYst4VacVo0paGJ5JhkzWlaLFqgLJcRQhwp
2mwahUAcZzG/wCici+4DGGu0MFE7IEP/IfVRqGg1ZjwX473ZNJzOU9e52d+r
rSaNSDMaxTTDfrnMpv2iEdfvK/K1dbD2D+XLvTbOFexIjmpUwhVVwhJcBLT0
Fa0FLYZBdLWOZ7ys3U94aTa1w0p8mdbU2WqsZlEW0sdYRoIOdZrYXtLsuBi5
OWarNt7a9VLbBQ5z0NoYa/wNoiZoN/LbEjR7z2m92/Yy32BGdbhBl/AtfcOr
raBCBw0a9OKLLyI7+b6uWLFi37590QAolt27d8+bNw8R1axZMyTrbbfdhpBA
e2BR8ZtGKzPVeDVoibfffnu4/0CW7Ny502XoCefcuRhVc+edd7Zo0QK/o7z5
514ERlpaWnh4+D333FO9evVWrVrhoxMTEyktoghrhgh/5JFHkFtTpkwhO/Qb
uvHPP//cs2fPzJkzu3Tp0qhRI2qJlBFdXE+Op06dOnToECJz7ty5pEZlIrT4
J+VBw5B1ZmYm9fzmm29St/Pnz/eL2aSBKHBBQQFyC5n3/PPPU+bo6GjUYOfO
nQMCAmgvSsjD+p6Xwueff45GpQMgNdGTFSpUwKTgaAYPHozfVJZfUvkINkQg
dYXypJLDwsLoBlQRpcWK6hOUrnIpugol4SnatWvHp5UC1KlTBw1PmgcPHiTx
JUuWoO2xnzjN++67r2rVqjiO7t27z5kzx91pHT9RtIo2Hodd3msgGh3Qgsa7
aTYVA86nrFevXvT58uXLY8TKuoL+g2Pis0CDGk0QS5/3Y59XuzqduUyZMrfc
cgtjDo9GUXGRRpXgO6oMMAu+4bD8z6o4QhJyCrWV3m4dr+n1x0STmkVeYGA2
zZ5OW0isExs+ChWdPTcUx96bTePdbS7v1WK3mrwx08KwXDazaTdnbQmJtd9R
eL4wNzH8wsSj9lLD7vALX+61X0F9IRJsRFScspM3WNskbAmOSrs0y2hN51Cy
x7jxkfQH3jm4/CTbO07v517PZY/THcLizgbVrbY4qdfAOUFXGvXVnN5L2n55
YYhQ5YdlnNbC6koPh/ck6hgbbLj0y/XaXS2aceUw6154o/9iwtRwXrq15dq3
icu1uz6nb4Qys7l582a+nceOHatEMX300UfbtGmDGMBWLFu2bNasWePGjVNX
SfFzRkaG+cwmv//xxx9RICiBxYsXj/YfqDj875kzZ9SAFc7wVzwRshnPRYEZ
NpEiCJgTJ05QJGTYH3/8gc5B2OCgEU7Dhg2bNm2acvggFgknxfWlSpVq3749
EuvIkSNKTJW//voLvYR2GjNmDO4JiX7rrbci5pHoqMrc3FwKpgSDffXVVxFp
PXv2REnye+5CTX300UcbN25EUMXHx69du/bw4cNFto4Ryrt61B2ejscktXnz
5tEu/fr1GzJkCO1IFjTlc889d/fdd0dERKxevdrrvBxQZzanT5+O8MZpYjmp
DfoG/USxKmg8JOvJkydpLKr3iSeewNcsXbqUe+kz587ZfeKkq/ixq6gdg+KN
GjUq2EpdK3QDOoZy0v3AgQM7deqExeCv1apVQ5wrQV02bdpEbfjYQ4rmbGFB
Xnb6kun6SCNGKtpkHHapwFULoB/tnXH9wtCYT6ykpqZSq/QTfNYrr7xCldL6
LVu2bNy4ccOGDevVqxcUFMSHgg+C+cym9Hm/9Hmlt5PmyJEjcZrk+Pjjj//f
//0f6a9cuZJRyGR613fU9WlmXcjRbFrC5uQqw58WaMX4S1/LqyizadTbi1TF
RZpN09MYXRy+4KtQUWushbEH99psurPgWX+vO4U5r19NcdnM5nmHoKy2uE+6
8E0BkelLYl0n5fW9urXTXJP8sb3C/L0gc5y2d9Kf6zbVhjBZRaBfbNDB6GAW
/+CV2dT2jKgnLXpIYaYW5cDtUEg6ny4xgnzFtrxcdwCKbQxUxg11wYY2Yqjt
7vjCyp2Q+C7Npv2GerdwebtRvj6mb4SyZzM/P3/v3r1ITQwL3uGBBx7Ap3To
0GHEiBFYzqlTpyIq5llJSkpCEqAEzPdsqmpq165dKSkpr/sPPMuePXvM1ZQa
zR4Rgl56+OGHsUKoIJyOchdqnEfAgk2YMAFluGTJEuTNhg0b8FBIlzfeeIO7
7rvvPvQkf/r22295Fp4IYYMxz8rKohIiIyMDAgJuuummBg0aoMoo0vbt2xFj
VI5Shw8++OCLL75IBVKMDz74ADWFMURQZWZm4t+zs7OVsw69QzEUQLKkxmPy
IDNmzMBKIO2QcxSJR65Tpw6asHv37uvWrfM6LwfUPZukGRcXh2dBebZt2xZV
iUqkEs5bF/ei9AoLC6lVfE2NGjUGDBjwzjvvnD59+ocffjAym9JVfO8q5PuH
lfXr1/ft27ds2bIocD7LZI2twBz169cPj/DCCy9UqVKF3yvvCoYMGULPUY6r
oLp87CHOFOZlpybFx1w4OyzQaKePkYo2GcRcXuOWBTDb7O+aLVboGNOnT6el
aEd+wKBNmjSJf/bp04dPWXh4OJ8FBsz09HTzPZvS533v8+oYSG2T3aOPPorT
pMNXqFCBTk7/N9+46jOaz3LbbGpO04p+sWJg7B4z5Vik2TQqg+9m03xFovPH
zVehYmQY9XhtNj1MU6ucIsyL90efOOOBkTE+XKZ06/jsb3RTrs5JeXVvTkLR
ISi1jcmWyHR/BaTdYeCajS67xLN43phNbRtsEYfOuOb3/ORw9cvzwuoId5fh
qvbHH53zb4/NOapz07Z4v7bJ9Bzbwg6btVTrv4fj4oi/m9lUUI+AR6vgMf/9
738/8sgjyNTg4OBu3bopcR62bt166NAhlyshnUF7kBo6BJmxfPnyN/0Hoghf
bL5E6tNPP0WBTJ48uXfv3iEhIU888QTCG7Gkvwal98knnyCBdu/enZOTg9rZ
tm0bEgXtFx0dXbduXSoB9bhq1Sr9XfisAwcOILqGDx/+/PPPU8ko9sGDB+O8
0q2QQkxMTO3atW+88cZKlSohPhFXK1euJH1Ky+15eXlIKbL25SASRWXRaug0
FGbjxo0pA8Lv4MGDyDk0ML9EQGIlHnvsMZQwpfI6LyOoB3IcOnRo165dW7Zs
ySOjXdGiDsXj8VGVo0ePpgzUuaJL9elIV/FjV6HacZq//fYb6fBBvuOOOxDh
zzzzDI+GwaSoZIcaxynccMMNiPNGjRr16tUrMTGRijIP2ukdhXumh1V0LWlK
WJdghRocyuat2XTPAnhuNldYoX8yQtLuGRkZ+DU6Dw4UczRlyhQsGNZpwIAB
7gS3kT7ve59XzCa9nUd+6aWXSpYsef/999O3a9WqRUPged1oVV/w1Gw6OE0r
+jM1XIc9uUjxNZtOBbg2zWYRnuIKmc0LFOavT9SWsJYJDA6PTd5R4JCUQffw
9F5tbs54B+v5S3LUpv6kVDcuK4ZmMyfB5jXDUz3e0mr3ZqB0hEeRfv067S7Y
lmrbdpRf3DWgbhNWw1Bc/I3aVZw/Mn4wm17tw/XAbF6Cfb5qUNO1a9eiQMqV
K1etWjXUQsOGDZFPCxYs+PDDD5EBJ0+edBnjxRmMBoaUKz///PMdO3as8h+k
lp+fb75EKjc3Ny0tDcOFD+IRypcv379/f/Sh/hpcz5dffomq+eyzz44ePXri
xImdO3dy11tvvdWjRw+e3aWaUk8knzBhAur9+uuvR8n37NkzKSmJezMzM6mo
qVOnIn4eeugh3Dp27+WXXx40aND06dNXr15NGTZv3qzscvLFbCrFQATiK/v1
6xccHNy9e/eEhASab+7cuWPGjOERWrduHRQU9OSTT0ZFRb377rte52XE4cOH
16xZQz1gZlu0aPH000+jKjdt2nTeGnOD1qGG8Z7x8fHUAP/nZ36jnruhIl3F
j11FCc30xRdf4B9DQ0P/+c9/Vq5cmSxGWBlppVu3bk2bNqW9MAL0HJ4a/f/O
O+/wXGRkNBnnBfnLHc6CLx1Y33rUZlJq5r78Qqu09lpFG11ziWY2d1jBB223
ws+4MGwdHk1ZmUyr8dHj5w8++KDIMyKlz/ve53k6PPtPP/2UnJzcqlWrm266
qVSpUvRq+jamG2vsRqv6gqdm0yA+jy4+rfNpsyrF12yazGx6J1SKp9kswrxc
QbNpWixb6zjE+vbyXs22hJlP9BpFnfIe9fRV882YxddsqrFlPDbg5/ISdWNE
cMxGD62qzGz6FTUqmtKOtncI2mZwtW9YdwCp0cNcTGd7bTa1z5fTbKk7FJmv
j+mbo6y+4+sbPYAorVOnDjIgJCSkWbNmo0ePXrduHcLjm2++UQ7pcz69whll
YgsxgPRFqOT5DwzvmTNnzJdIKZNuQ4YM6dSpE5qnYsWKzoaLFJSVbJSQBL//
/nuE0NKlS8eOHduhQ4dnn33WpZpS4uTzRLNmzULV3HjjjYh5rkfepKSkoEIp
3vLlyxFvAQEB1atX56/kTn1i/RBpXLZs2bJdu3YdOXLE4fg5j0DRoWnffvtt
Gqtdu3bk1aZNm+joaITcsGHDOnfuTNl4cDQhYo96UDygf0HT0lswNQMHDsRs
VqhQ4bXXXlMkq3LMwenTp7OysqZMmYKmnTlzJhqS/oDTdGg16Sp+7CoUT3kL
gdrHR6DAa9euzdMpyyDpBlj+RYsWYTS6d+9Oq9WsWbNMmTJhYWFqpBdf3oHY
8U26GvTQ0iQ286hrHW3kDb02m27u2VSHUze/+k9aOWHl+PHj9K49e/ZQmamp
qXjM8ePH82Gk2+zfvx+nWWQsX+nzvvd5Sohb57L58+c3b94cY1u6dGmSeuWV
V7CuJOJGq/qEh3s2jZReQap2EI/h6YRX0Gya+hQt0Ja6tdNXoVKczKYWXMU8
2NEV2bNZNOpEpBfrNl3d6/Zjum3S3UZtHaP4mQ75mm7t9B2P20irOs/aonBr
rBYPqEyE3bGzbqJW3aU/EeZvgRoV7cL4ZnuHoO/n6nppLrAtsnV50o3XZlNb
4m6J8aKjF5mvj+m7yY4dOyZNmtS2bds2VtAACQkJ2dlX2RsRxHZSUlKfPn1e
fvnlevXqVapUacCAARs3bjS/Sz1tHBFepUoVl2pKmQLGcaPWqJ+bb765fPny
WHLUGpoHPcZfsYGoptDQUCTZAw88QIvdeuut9957L1qI8kybNs3lWecegaZd
uHAhD4WQQy7ygPXr12/fvj12j980aNCgatWq2MwaNWrgNzGkyupW/4JuRNEh
tpWdXzxdZGRkenr6eeu+TmQqqht3g83047mifuca6yoFBQXUM5Y/JiamVq1a
JNikSZM5c+bw+8LCQmW3LAnSLvyyW7du1apV45rAwECemqakQWlW72rSAV3k
PcOjE0yiwnptNt2LRmtwbIrbKIG51qxZg3OnmWJjY6m93NxcL5K6/FwbfZ5c
cME0xOzZs1988UXSeeyxx0JCQvwY69sct15rFG027V7LYDeTj7q45AqaTZMI
XbpotKFqsX0VKsXKbGoewSwareZJL5fZzJkaHFw/OLCMaRBIg3Ngvb9X75iO
mj2C9sLB1Bt6gDshnnQHaZl1Wn/gqdnUvpWKCNFsx7kdsVo8oICYTK82wGqf
R4lG6x/UbhaVefKil7Tvb9m24SAmfX2USYf02myqG0VLmC9oP5sZZbmwnCy4
dWSq7hipovP1LX1z1P0vyh7ARo0aNWzYEM+CkUFH8Ut3E7JBUr/++uvPP/98
6tQpNFi2/yA1lDOy2WSC9eDBg8uXL8cEdezYsXbt2g8//HD37t1Xr16tRDRy
eOFPIb/++mucEY+JmuIuNA9m7bbbbuOHlJQU/aF1ypQEWa9YsQJz969//Qu5
HhYWNmrUqOTkZGTS999/v3fvXv46fvx45FzLli0DAgKQc48//nipUqWQdjgy
BNWGDRuOHHG7eWyoiyQ3b948d+7cgQMHouIwmOgrHOXEiRMTExNxGZQH+4DN
DA4O9roFi4SWRbXiLkePHo2juf/++7t06YL8popoIP7EM6alpVGBKFvcbn6+
61FWuoofuwqVnJWVNW/ePLpEUFDQf/7zH7JG+eM01YgxJ06c2LFjB09NzyFH
xhNkPwUwP63DU9xaTaepF7+ZTd1ZZsbH/GnXeGY21Q8gjh53Ro3R6NQkTnPn
zp3u+3Tp8773eeWIYZrj7bffJp2SJUs++uijPE67du2mTp1Kc7jZFupyXJN4
dy7x8JxNMxuCINQ2Nge4mIC4gmbT5PT5wjTbx0gvoX0UKsXKbOq2Hxo/y7nM
IWrrXSaz6UbfQxLbjju1j33qw73ank3TYfMS7tk0G9Uv9CjlGuMTWv2Ep2ZT
ezHl/my1bkO3pUl8jhun8bpEiw4t52z6CdurA0tU9MXgQPanTKqvsoNDGllc
XXAR782mfswxeD9pdx6r/Xs/N/L1KX1zFJHw22+/oaCGDh1ao0YN3AoyABXK
P71YhKmEW0QJIC1QYhP9B/5l3759evHsjBoBA/vDs9x5550oEEUXIRcdFAVS
CoWGzEZuzZ8/nyw6deqERrr55ptbtGiBfUO8nTlzRpkVUl35qlWrXn311Xvu
uadWrVrkEh8fj37btWsXF5P7hx9+iL1CX02YMAFJ36pVK2oSO/bUU08hqNTz
6TytVeqTxJVIkgiqQYMGxcXF4SyU7U7kiImYM2dO7969MRrKQuhLt4NJPR0P
M0tGd911F9qVgimhLHGd1CQ6kIbYvXv3Z599ZjRVIV3Fj11FOXsC+x8REcHt
jz32GOqdttC7D+XwGj7pw4YNU6K4VK9eHbtB+WlNo3cCnqKJVcN4CPnJ2gJC
/5lN3ThpcILhuezhVYzyNYdeigmiP7/77rtLly6dOXPmypUrt2zZQq/Aaf7w
ww9upiN93vc+r86iLlu2jPJjbEuXLk1P9vT1Gm2BBTY/ycs16uyPyfo098ym
Q590PtTgSppNo8W9hemqQ/ajECpmZlNnqA0iONlNP122ZbRHEm0LR1wvy9RK
ZYnKPOu3e7VotJYoo6le3TbkiFS/R6M1GdXVHnXpp/A8NJvaAh53j4OxO2LG
LHRYkair/f15Es3fHN3LaiuOp/dqM/sKBl8QPpjN8+dPpobp11d7cgiRO/n6
kr45SgRLBMO6dev69u1bsWLFChUqKKeW9+vXzyFQoTuoJy2uXbt27NixrfzH
66+/vn79ev2yQGfULY29evV6+umnqQ48V1JS0rfffougclAUx44dQ0otXryY
67lm7ty5CG9leWGjRo3wdMhLsuNG/V1UFJeVKlUKbUMVzZ49W43OcerUKZ6d
GsBhkTIqa8iQIVyG9EJQcYt+xalHqGcWoPHQaSRLmfnNDzqQwaNGjWrYsGGT
Jk1Qg23atElISKBg9ilp0S28HpnVeJVvvPFGgwYN/vGPf6AScTqIVYo0Y8aM
zp07T58+nQuUwJhGswbSVfzYVZDxpN+1a9e2bdvSKAEBAUOHDsVC6q8hR7LD
MdFwdevWpfBVqlTBnNJYGRkZTjNKXnYVbeEQY5HTMYLnTmbG6k4GL+F01KAP
ZtNunCwdnpirHyZ/L0gfHqzP2COzyQeQenvnnXcWLVpED4+Li8OCeXFgrvR5
3/u8EjaZ/9MEirF9+OGHlbN+Bg4c+N5777nZFrhynCZ1wv/52c27rGTbotwb
x0tx12zay8sSVWK2uj7++0qYTQiMTMu3K9DR1EhNDDtJKV+ESjEzm/p5OktQ
TLr93wqyYkPshrHLtmdTm3y0BMVm21dwflqk6gld6UAf7jU/Z/N8YW6SFhQu
0CmYj/Zonm4jtT+vNrB3svGoHuhiFkm73atjR5zw0Gyq6yotsXvcSl9n6o1e
17iJOhntNNvr7zr5O6ETRSVcbU7fE6sfFarEuX4Z6ZPZtL4U0kuZ0gGhymm5
MT1Cyul+7/6rS3+lb4RyKp/6xh5RMXLkyJdeeknZy/PAAw/wPY4ewMVgLr78
8ku0B1/KRYasROd8//33X331Fapmzpw5Uf4DtYNEUQ93c5m7OnejROC/7rrr
ateuPWLECFT3vn37Tpw4gTTiKfgBu7Rz507kGQ++bNkyZCQiB/Hz3HPPcVdQ
UBBSkOzy8vKU89lVV47jQ59bLJbGjRuTMlIKl8fDKjEq9+/f//HHH5PXnj17
kFjz5s2j5GizmjVrYuQfeuihHj16oMfcPGlCWTB25swZEkxNTY2Pj8cXkGZy
cvLmzZtpuF90UIxhw4bxvGTXsmXLDh06TJs2zSlchh/Mpno8qxKL5uabb+b/
yG/8DvU5f/78N998k1pSDjVwjgukIl3F966injm4ZcuWcePGkVGTJk2aN2+u
P/xUXbqJOeJ5yQhJHxgYWLJkSR550KBBPBFFwk/5qavkxGviWTs3PH54ZGiA
TY9YgqN6F6F1vTGbjtMNpUN6xDgMkjSHO+OtynErtBFtQdXhvPj00Q1oR+oT
Z4eHwj0dOHCAy4oMECR93i/Do/LXTZs2UaRnn322cuXKmE28aufOnVNSUk6f
Pu1yslJJlj/RUhQjNzeXFuRJaUEqzZ3OoDajukdMDY/jiPtmk+T26DqtJSxV
pwCvoNkM7XDRONo+wjGRTXRao0xE6lFXz+K1UCl2ZtP+hJoSlnJNImPsxzF1
MLmsAYK+SY8so1VwYHjUhdE1OiJYO2rKEjzOQAf6cq9dbWgDe0yP0EAtzRKl
w1Od5x/9YDbVuraUcx7VDWfhr6zZ9DQ6kOPEWdEYfoupWTtPronZ9AFdT3Z8
T34BbTN7Cd2pKI74aDYv5JOXHGVwWq6V0qFTc5wXILhpNr1O34jfrSCT+Mrm
S3/GjBkTJ058/fXXMSlPP/307bff3qpVq8TExJMnT/KNjE5AMBw6dAgpYp6s
3h+hNKb6j9WrV6OUkArIZodDNFT4K0rp4MGDCQkJOKDrr78eHdKxY0cebcWK
FcpqLjQGIhxJg4JCR6Gm1qxZg3fLycnBMdWvXx81VaNGDVTQypUr1Q1Z5Ei+
WG/EDFV09913N2vWDLeFZKJm3nvvPcQYaZIU5UT5Iz4pCT8sWLAA0cUt6DQs
fNeuXdeuXfuXDfPKpCYRTkePHs3IyJgyZQoegQeh2NQDv/zuu+9+04GGHDx4
MNLrhRdeaN26dZcuXWbNmoWos0/SD2aTSqBO6AyTJk1CKN5www3KMQf0okWL
Fi1duhTBSb3x+MpGMKPHlK7ie1dR1i5Szxs2bKAYlSpVqlev3ksvvdS7d++k
pCTKed66XFB5ZUQWdIk+ffpQnqeeeuqOO+7AmeJJ6SSuVjv70FWOppuMVKVb
x2cWGEax8NFsnrce8RlaxlXGVh2Vu9BsDHdGOfGElqI+afT58+fTKLQ1vomB
8dixY4yNfPSWLFnizr5X6fP+Gh75K7lPnjyZ3l6nTp1y5crdddddLVq0mDZt
GkbS2firafKnbdu2UU6sNE9KbVCSIt8SOKCGwTfciuWJ2Tyvn9GwXy54RY8+
OZeTEOLyY2xpEpttvE7SS6FSDM3mefuZXHsCe6fnb3UnfI27eGBkTAZYS3DU
EqdzXf117zfZ8a1Lu77XpGX9YjZbJ+fuizfojsbHglxZs6nNc7k1COgWBbmL
0cdfXQTuIkCNmE1f0A6UcbkfU6eajPcz+m42rZwr2JEc3yM0WHuHXy64dWRM
UnquweDsvtn0Ln0jfrWCzkRE9e/f/4033sBaIgYGDRpUs2ZNEm7QoAGaBE/B
VzMCwP2D5M6dO6ceJLfafyAtlIPkTFZm6qPiIzzwQWpUfB6QRI4cOcJTYIh4
tLfeegt/hJpCC6HTvvrqK2qgadOmaLCqVas6LC9UD/V4++2327Zti1DHjM+e
PZsi7d69GynF7+fOnUuaWDD++cknn5zXxa4cOXJk48aNLRZL586dKYZiwYo0
m+p5FlR+dHQ0zu7111+n/C5vf/fddwcMGICJqFu3LiXs1asXT6fYDR1+MJvU
MPVA+1I/FImUypQpww+4GJ6dp0PsuaPfpKv43lXUwCypqamdOnVC5GMEwsPD
eQTMQl5e3nnr0k2cJhobdzBw4MCgoKBq1arRZPfee2+7du0ozKlTpwoLC3/5
5Rf7tH3rKr8X5qTFR7a2nRvOOBUUGhmXnHlEVQXqWkS7yA++m01r7gXZS8g9
8OIoWSYwtMf0dGvWnp6zmWJl5syZ48ePHzx4MN0Ai4Qp44OJ2cRyMjby16FD
h+I38VBF1Ir0ef8Nj8pJLtQ8z1K2bFnaVJ2oZQiiMPqLlQRJWbkrJiaGViNr
RkiakpHWnc6gw7ZKzWIgIz00m/pFmxc+EjaJeMXP2Sw8kj5dnbpCbITHJu8o
cGP1lOdCpXiazfMXhrLc9dO1ocxWCe6m7zYeLtEszNeX6sJZxhGxSzLz3Zpv
8OXe84V56YnREXYtWz8iylSC+sVsFlgLnj5VnVkuHdg6Mn5JdoFJcK8raza1
adlYdw4f0c+auYnBx1895NFVVCUxm8LlJdUKqmPKlCljx45FCaxbt46v/okT
JzZp0uRf//oXX9x9+/ZdsGDBsmXLEFSbNm3iGxzJYZ6sEr0B7cF3/aeffrrH
f5AaaZqvzFS1HIoF71OhQgV0UUBAgBKrEK2IQIqPj8eyDR8+fNq0aStWrEBc
IaWUM/K467XXXkOK169fv02bNt27d4+Li0Oi7927d+vWrbi5tLS0CRMm8Hsu
GDZsGNVCkbidP6GmqDqyQC+hS7lr3759VBpKlYz4PYoOGzh69OjNmzebv7r/
6aefqGfk6Pbt25cvX04D4RHat28fHByMlEL74QuUkyt5XqQjig7RO2PGjLCw
sIcffrhy5cpc2bJlS5qVNlUOCrTPwXoUdQfz85kNcT56gHpGYZIdphgpjtPE
3RS54lq6itddheeiFZQpZj6V5IhZCAkJuf322ytWrIhu79mzJ79ZtGhRVlYW
fYCPcFJSEgl26dKlYcOGtBr6vHXr1uROd8JpUg8GUWV86irXAP2sdO3alV7R
vHnzHj16jBkzZs6cOfimyZMnT7BCP6FBaWLFQ5kgfd734VHl+PHj5ItzJC/6
8xNPPNGgQQNaaty4cXydrVq1atu2bdnZ2Zj6Xbt2Ycb5gREVq5ucnEzz8fXH
X3GaFNLDPZsXsB3xY4nJuqQn+wnFGFW3X+LjHa8NrO8xjLc5u8Svdv7vgm05
rmWIdEvhyvOqlaioqNjYWL55+WpGseAgEKgdO3Z88MEHn3nmGcQVqjUhIWHN
mjW5ublffPFFkXEXUQjKuj4kzbfffvul/yA1JIH5ykx1ogcRguxp1aoVAqZK
lSpYsKeeeqpWrVrIbGxReHh4ZGTk1KlTMzIyEBsFBQVIKWQYagTLhiDnGqT7
c889hwaLiYlBulAJo0aNorrwfUgjfklF4c0pEgozMzMTNTVy5EgsYWBgIHeh
1hQjjzSNsh5ToqhW5SQ4cymF0zxw4ABp4ubILjQ0FPvAg1CeQYMG4R0o7Y8/
/oibo8xHjhzBUODy+vfvX6dOnTvuuKNUqVI4jho1aiCMZ82atcOKXQZHL6zn
NzskzhR8rtK4+JemTZsypiFZqbSZM2ci5PA+5mv5VKSreN1VlJM4eFLlKBM1
UmjJkiUfeughPrm0S4cOHXr37k3iJKh4JYrasmVLPtTdunUbMWIEn3raKy8v
j9QMz8vwratcAwRaqV69Or2ibNmy/BAUFNSkSRMaHduOq4qIiMAi0Vjvv/8+
PcQ8Nenzvg+PKsruS4ZKHCs5NmvWrKkVWodHiI6OfvPNN/loTJ48GRNNXpMm
TcJKMyRSNnwxVhSHfubMGZP4vWaoBy4YRl0Wrl4KkjuUC64fGjk80WTBsBp8
8lIf73hNYA3N6t4cn4aYTc+xvQdzFTFJEC4791lp0KAB/oUv6+3btysbjhAY
2Jby5csjP9AhTz/9NGIAs+mmgygmYHmWLl2KpEFdlytXjg/e9ddff8MNN9x0
002lS5d+/vnnw8LCECHZ2dloP1WeffbZZ++++y6CCpuGlLrzzjupBIwe/3z5
5ZfRlgEBAah6NMzq1asVb35eF+MRsVS7dm3sXqVKlVA+ffv2ReSj+RF1vXr1
UqaP0V2ff/65eeG5gMu4WDkz8Z577vnvf/9Li9AWNE1qaurp06fRlrQIknXn
zp1KnA0k1uOPP15Cd1Q6ZaAGVljRp29dreH9C3n1fDo0W4sWF0J7IyAd9nBd
RVyNXeWHH34gQXwidY7TQfzXqFGjVKlSFJ6SUGzlk0sZKFvlypXLlCljsVie
fPLJ4OBgLsYXYFEPHjxIY5mvdvaxq1wD3GCFLnHddde5XMhUs2ZNhlBGSLyV
0srFn6uxz5vw0UcfLV68GJ/bpk2bZ555htGPh6JdMJ48IGV75ZVXlJct5DV0
6FAKw0h15MgRRlFfqjF/TojhWjXh6kY9Ms/4nM2z2TEXA366Pk1PsMMassbj
uTYxm55yLjvW2i0tMtsuFA9esYLsXLhwIU5TjSuYk5OTlJTUu3dvtIHypnrB
ggUoB5ymp4dfX0FOnDjBQyGoJkyYwLM0s9K8eXPMEQpn2LBhU6ZMUbYOKcE8
FTVVUFCwf/9+BNWcOXO4BiHUp0+fESNGTJo0afz48ah6hIo6C6zGVMH6oduz
srIwfeg37kJHcfG0adMQbBMnTkR9kSCODyl14MCBIpciqzOb8+fPV05O7Nmz
JzZz8ODBtIVy4gk202FmkxKSb+vWrdu3b9+5c+fIyMi4uDhqwGFms/DjxDBL
CYsPCyPVA+6XLFmCzqxQoULHjh2nT5+Ofvv000991G+Xn6uxq6gzm9Q5fpNM
KUP37t1pfdQ+Ta9OMJFLdHQ0z9WlSxc+zuTFxaRPl8Bpmq929r2rXAO0tdLG
SmtXUMM4HZwmrez51r8rw9XY5004duzYli1baIWEhIQhQ4YwYPIRoLdTyDFj
xpA+JUywQnYpKSmYX4bNU6dOOZzb4jHncpTzIGS52rWHds6mJczxDBco0B3h
JD6oSApzEztYHCItu4WYTQ+xbfyU/ZhCcWGJlY0bN+Iujx8/rspOFCxSAcGw
du1a9EZGRgYX8Etlh6DRbqDiBnYMQaVsZ+NZknQgzt977z3VGemXbKE9EFTI
JKQj16B/0tLS1qxZo9QDdbVp06bdu3cfPnyYCkFKKTFVlLuUHVjcRfpK7W3Y
sIFbUFDvv/8+d6G4Pv/8c6RUkfuD1D2b+/bt27x58+rVq9etW0cByJ3f4PLw
mM57Nrdt20aOy5cvp8zcQpn5jTJ7pZ9tzF8YEdI/Nd+HdwZKTEvqlrxGjRqF
FB83bhzZkQv16RRnprhzNXYV/Z7NQ4cO4Ry5l3RoEeWUClIjfX6JyOfn9evX
UzZsAt2Ji7lFmdM0X6vge1e5BlhhY7kBikWilXGaV0vnvxr7vAn0ZPzmRx99
RN+mDIx+fApSU1NpHaXb4y55Uvx1dnY2T83FytGi3qyetefc1pgqMrl5bZKf
2EILfqqe4RIfFxURVPQRMIIdR5MjGkV5U1FiNj3CNq0ZIuu6hWLDd1acv3DV
IBLKxJkS2/Bq8ZjOqAEYURcY6q+//hqhZXQOnYqyr4rLlEg4yvHlP/74o3qe
uMPFyhlzXK8E6ED8KHdhDMnXPETkVQfVmJeXh3hDas6aNWvs2LEISPzLlS6X
r0hXEf5uXGN9Xi2Ass4c23v8+PHTp09TNgpwafaAnMsefsFuWpwP+Bauds7m
JoabnPRx4RQnkx2dgh8Qs+kJFxf2N/LDQTyC4C/OWuEr2OFbXo2XqAgD/qps
27lS5fQR1TsDkgMR4s7OUyWSBiiH4iGlCgsLSee8k5RSL1bqSqkuslDuUu28
SYjI4o8SgYTHQbahSPGVWVlZKSkpy5YtW7FiBU5TWZN5pYvpK9JVhL8b116f
VwqgRsxmvOKhlK8z1yGwfOdstnUxrSVqo6ylvQYpPJKZHBcZqs1mWsoFBUdE
J6bnyduFS4+YTfex7ootYQlLPnqlSyIIOv5nxXnWUo2XqNpMk/CGxR81AOOv
NtwRNsqJbIrvRrcorpwbXdaDerFaXcoqR+5S4nyah4gs/uy1sn///oMHD+bl
5eE0k5OT4+Pj+X9mZqayJrPIMMXFH+kqwt+Na7LPk5SShRKyW3moq/qVqSAI
giAIwjXMWisZGRnYzK1bt6akpOA0+/Xrt2DBgn37JAyfIAiCIAiCIAiC4A3D
rMTFxc2ePXvp0qWLFy9euHBhUlLS+++/n58vmwMEQRAEQRAEQRAEb6hnpX37
9gMGDIiPj8dpKjGKcZpXy1kPgiAIgiAIgiAIQnHjditPPfVU8+bN+/fvP3/+
fJym/rR3QRAEQRAEQRAEQfAUMZuCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiXmf8HQ4lP
3g==
    "], {{0, 278}, {1231, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{410.20000000000005`, Automatic},
  ImageSizeRaw->{1231, 278},
  PlotRange->{{0, 1231}, {0, 278}}]], "Output",
 CellChangeTimes->{
  3.7676911289856405`*^9, 3.767732698275159*^9, 3.7678141442673187`*^9, 
   3.7678902775825386`*^9, 3.7681206277919784`*^9, 3.76816990814561*^9, 
   3.7691253129791536`*^9, {3.770132413203255*^9, 3.770132440233986*^9}, 
   3.7701447032110844`*^9, 3.770156539406499*^9, 3.770157766894637*^9, 
   3.770371013813365*^9, 3.7704173942362013`*^9, 3.7704534491518927`*^9, 
   3.7704750432354107`*^9, 3.7704843664951677`*^9, 3.77053607021106*^9, 
   3.770585302027626*^9, 3.770630754294382*^9, 3.77063107416796*^9, 
   3.770666082003352*^9, 3.770801117877174*^9, 3.7708024893003674`*^9, 
   3.770809316560441*^9, 3.7708321950516157`*^9, 3.7708382357877913`*^9, 
   3.770842252724987*^9, 3.770882446559387*^9, 3.7708864676610346`*^9, 
   3.770894536779709*^9, 3.7709343890968385`*^9, 3.770936124602761*^9, 
   3.771025639293086*^9, 3.771159270273612*^9, 3.771675528721216*^9, 
   3.772137205309537*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"hexylTriangle", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z", ",", "diag"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"b", ",", "a", ",", "c"}], "]"}], ",", 
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"c", ",", "a", ",", "b"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"diag", "=", 
       RowBox[{"x", "+", "y", "+", "z", "+", "1"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"trilinearMatrixToCartesian", "[", 
       RowBox[{"orbit", ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"diag", ",", 
            RowBox[{"x", "+", "y", "-", "z", "-", "1"}], ",", 
            RowBox[{"x", "-", "y", "+", "z", "-", "1"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "+", "y", "-", "z", "-", "1"}], ",", "diag", ",", 
            RowBox[{
             RowBox[{"-", "x"}], "+", "y", "+", "z", "-", "1"}]}], "}"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "-", "y", "+", "z", "-", "1"}], ",", 
            RowBox[{
             RowBox[{"-", "x"}], "+", "y", "+", "z", "-", "1"}], ",", 
            "diag"}], "}"}]}], "}"}]}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7673604227639303`*^9, 3.7673606019049406`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"outerNapoleonTriangle", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "cosA", ",", "cosB", ",", "cosC", ",", "sinA", ",", "sinB", ",", "sinC",
        ",", "\[IndentingNewLine]", "cPi6", ",", "sPi6", ",", 
       "\[IndentingNewLine]", "sApPi6", ",", "sBpPi6", ",", "sCpPi6", ",", 
       "sAmPi6", ",", "sBmPi6", ",", "sCmPi6"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cPi6", "=", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Pi]", "/", "6."}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sPi6", "=", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Pi]", "/", "6."}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"b", ",", "a", ",", "c"}], "]"}], ",", 
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"c", ",", "a", ",", "b"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sinA", ",", "sinB", ",", "sinC"}], "}"}], "=", 
       RowBox[{"getSin", "/@", 
        RowBox[{"{", 
         RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sApPi6", ",", "sAmPi6"}], "}"}], "=", 
       RowBox[{"getSinApmB", "[", 
        RowBox[{"sinA", ",", "sPi6", ",", "cosA", ",", "cPi6"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sBpPi6", ",", "sBmPi6"}], "}"}], "=", 
       RowBox[{"getSinApmB", "[", 
        RowBox[{"sinB", ",", "sPi6", ",", "cosB", ",", "cPi6"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sCpPi6", ",", "sCmPi6"}], "}"}], "=", 
       RowBox[{"getSinApmB", "[", 
        RowBox[{"sinC", ",", "sPi6", ",", "cosC", ",", "cPi6"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"trilinearMatrixToCartesian", "[", 
       RowBox[{"orbit", ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"2", "sCpPi6"}], ",", 
            RowBox[{"2", "sBpPi6"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "sCpPi6"}], ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"2", "sApPi6"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "sBpPi6"}], ",", 
            RowBox[{"2", "sApPi6"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.767355129316516*^9, 3.7673551511965714`*^9}, {
  3.7673551888674216`*^9, 3.7673553016278815`*^9}, {3.7673554620038643`*^9, 
  3.7673555156378403`*^9}, {3.7673555527245464`*^9, 3.76735560403681*^9}, {
  3.767355690608306*^9, 3.767355690829713*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
+stN0NuykRDuSapHn0WvCJ98+Xi/UHUIIWfeIOQsAAg5S5hGIdJIxlUCRlN+
9EO3I84mn9kc3r/7aqhZeLNH4QC1j6d+/ffG0ycXJCwapylqJN82zPvC9r1O
2pGdbVxgRgs6mo3JZEIVGn9P9JVlFt50CTP76fLxCwevx/4U1fpbYsbjjLsj
hbZh7nu3/2yGLft6wy9O16JyS0ZkbRwFW6JtaLyRxqGaqNZUuxCnbb+uW7kC
w3403nHUPdKzfJz8tLaxNlnQ4Bvr7WRush8NFX/a4no9MKO0Z6ylt32YXi7q
S6+tfhKTVfUbqSW+ZLCZMcdpHSVqLkMFwtbQ2DvXLExPYZjFZsvbPnGVNAne
L597Rs+CUysmVeJeJa+6MtrzrvnGPRi26f/6z3//913L9d322ieRctpQwplU
zn0fw9/PX2gH9JqZH+XvzcXtiOnx69jWGAtPalz5gFg3aP/4d0+AOsSXXh2+
oFHw1NJBlaClMsX3zgnT3XrYhn//5z/XWS8zvfbzhZDrkY8pVZXZhRlpqQ/I
sd5+rjaOViYo4Vh8t2XH5gtmluGXbhUmFfehz2JUiv/hVqsLVYcQcuYNQs4C
gJCzhKklbBWnQzFSVhAX5nrUdv1nJrv3XHYMyLxbzcru5fVwZC+fU3hh+uTC
FL2Qke/ScG+tN3GPydnL2O4owp1iUkU/Gq8JlEq5WnthyUQvrSMnsdTfPSUq
JvRxqXvhQERGYm6iXVPU2ttOZpu3/ILpnfj5RKh/Sm2XQMWUqIVK7d8s4/fz
BovHW0iPfc9cMDU0RC3kuy27HAKPkXuDcsvKShMFDX6x3mfMTUwx7LOvfth3
1CU4KIeW8ZRG66RNsmhd9I7yJnpaxVBN1+TIxByzWnTNhSJsDY6942Fhiobk
h82sgu8+qu2U4yMqnP/RV9lViUcUE3WSwfSsEGf7bd//G8P+/d8N//39Wf3d
0ef9qOlPB/gqbcJRzHn+Ycb5i2chR/NqyLl6yPSIG2YaaXGj6GEpQ6Q7Vfbx
Qw7UIb706vAFlWRcyW2TjRZnR12z+2WD/jLsn5//4/O1W/S22v505Lejl4ge
ft5Org7HT+yzNjcxMzJZ9y8T/eUmKOHYXiTdja9PLe1rZEyhzwIlnD/ce3Oh
6hBCzrxByFkAEHKWMBV/UMEs131j729pdhnDbNDICx2X5johMn1yYYyWSCNZ
5dljrs7GRle0pwCsU7rJ7RMzHyrjs/nMTnZnWV9nM62zv6yTSy0klUQRitwx
N5uvN2w9gRmEmTsWxBb0vXTdxfOyqYz39rY0IWDY1tUmpke8jQMarsRT8ijx
goaAWO8j5ibaOUefrTYyOeJqE5Dnn1FT2EJnCrjMqSkmh89kC7h8qUQ2xxf9
M+6pdMvC9AqG2W/dRbqXRGOo8XENLnqfaxnm5dX5Kcv1f9Lf7W7sXkZM6aS2
z3HW42383lwuHzQ9eBkzDjMnFsRS+95/vbj5gTrEl14d/r5hgmH5aJW4Ozku
wMHi53XaG1at0NMzNDIg7F9n8avJLivCLwTDdYYr/vsK3d2sPkNJ8C0/wYWq
Qwg58wYhZwFAyFmC1DKNUqCRTYx2VDVkxWb7X/V18Txx7K7R9lAnz4IUat9c
J0RUz2YADVcnVAdYpuzFLp3euOnSzWVe1YfSetI6X7rA8tnyHai/sEYY/SOj
HSPc2iJS0T1C+jnMed/X36Pmsi7M/HJBbNHLRza1QHsfH0VXfYp/+IGfTy7D
9n5vssNG21yukisKKgoljIy8mMuXjm9e98Uyo/Xf/LTzF9RfDjv7XfWNCY/N
Sc6rLm6gNw1NDUyKp8Rz1NiM5uJlYeqKYee37HpwL6mxT6VtLsJZmotMJuPz
+Ww2e3h4uLe3t+2N0APQw9CD0VPQE9+8Pa+GnP/4cuO3hz3N71bfzumt7J7j
+tW3sVRCDtThDEutDl+Qc+jCXgqnJiTK8zhhk7Yg/9//XL3O+oi1W8BJj7uX
vH19/HycnW2PHbQgmBp+/+X3//jbhmWYicnPbi4B+Y97BDWjkhHB62sKQs6i
g5CzACDkLD3aziIZ0Qi7aAWPo4nXL5hZOx278tvVh67htbEFvbV07lwnRJS6
c+bigdI4qrtFjAnmvH/TVicvPd/a01n07G7OzIeqFTLUX9A4WiSYnBJwJgTc
1mJSoQ/h4W7svPnX36LmYhJm7l4QW/rykU0jxjUcXDXclhWWdGqbmx52ZrOJ
9Vltc7mWTiuiNSm5LY0FIaSbex0s9HabfoH6CxpHr15v8aOpzXZz1wtu0cEp
VQU9nOYxIUvw9s3F08L0Nww7vWVXRFBiA2ouLPWszQW1iaGhofb29qqqKgqF
Qn4j9AD0MPRg9BT0xDdvz6sh53+sMfnplM/hyMbgov5axgKsZrNEQg7U4Usv
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
ZLdw6GldbljsrbOu+4x++fl71F/QOPrvX6775oefTLaYbdtzwOK0w26XW5fC
k0Lz6/K6OA39YyOjg/LJnvby5NSwy962204f3Ib6Cxr6mR87d/GWb3hKyr07
t+7aHvMmbLi4b8+hE45bL/hdjshMqers5SmHmd3snhxeY2BKhIvNqcOfGZpt
2X/KwcMHPSs8/E6Yl23oRYKbk91xh7tbL6S5R9c+aWIKdZ1FOUtzUYtHVBM1
yoHURyE+VttOLIGQo9TlHNEUg8YoTmqMuhHjeMxxy2ZTvZWbvzTc/NNmE3Pr
fTZnHa+4+wSGe91y93A7R3SydnU56+h2/ZxH2PU7j0JCcpNJlSVPutp6JmbO
VHoxw4jdmt7+6Cj18vK7RIuDHn4G3rVO6fQPHXKgDv8UdfhihUZGXULJQ0fS
FWMHq39v+tfy5Ri2/P/5x/JvtizfbrvBxvU00TMwPPCW+xW3syccrQlnf7U+
unfPngOHjp13OHfF09k3PCQ5P7euq31cghIOX/aH62sWuA4h5MwbhJx5k3GH
UcJhNyQXR18PdNxtY2pg8qXeZ39bprvvyT/0DLcYEGytnP1dHmSSKtpQzumf
WIAlzsBrsTupnenEMm9j9336P61ajs0BfUZ6GGawfruDc3heBlNZx1UzZ12W
bXr+xVgXlZbul+e9H/UXNI5+6a/7Yp2ehYOBS7JdfFVGy/DMeRPcQRqjPLoh
3h71FzSO1t72Rl/fZPduG3f3g7t379bXJ2DY3u9Mj7+8Dt6ra+W9eJaNrY3N
3q2o2E6fPHHu1oO3XT3v+cQQcuQ9651nFj/kPPdirbz6xzfunzc+bYCZ6mGf
61abW6H3maGRCWG/zdYdJqZGnxkbYOuNVq3Zsc9gv/dx3/TI4q4WLj4owv84
gH7lZk/elzbuu66dK+SU3kuZZQrMQoE6nOMNWhp1+KLqGrNukFyN7Y2xbfrY
ymcf17LlmJ4+ZmCsZ7zVyMpqv83+HSZGRp/pGaDPacU/DHRH9T2uwTcTijJa
mHWDXCZvtmubF7gOIeTMG4Scefv9mxxqcm6sf7iHk7vT6XMnDllbWx86ef70
JU8nn6g7cTkJxfXwTc6Hxme2DdeSUX9JDnQgOh2zngP6jE5bWztduRUTV0hD
nYUuVHPksy2sPz29ZYrZ3l+XTUsPTAi4cvWCjZWluaWWlYXFrv3nXU/5xDgl
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
8E1umUxK9zosTgesgnwalvTC/Goq0c8VY6gHQRgjM9eFil04IunngmzTHwHg
Dz8lfyib6Rb0ZSA3mPDwHvpq+MpjSSrBoIJVJmMQUiLsLQ7pIw9qGwpzEk/E
N/EzmZLuZUq/Xv4QiByNWaPIkfIn+ONN0z15pYTrYdY/XtSFDvxN5y9fGUA6
J//+TxvzU843btxAfvn69evu7u6ujrbOtpYO545c/s3D7l6KzeO22IrhxqF3
zw2TTA9we4tYL2IzIpzczxobbNP5Tv/7r388itj1/tNu1h4++IhQ/6Dbfj6u
tz0u3rp71zsh50ZmX3Jpc2NjhbA/n5Lsf+sqFrVrqyn6MMbGBbFr77hnKZSK
xs7O+ipKTVZcNcH7/o3LlidPbN1t9Ivz7YCnxUhD0NDXMdCWOddwLz/t3s2g
EJR9iEtICiG7FDmr8UVuQ154fbJzBM7Dyspn6+67Np5ZT4p6EIueUy2bCUrJ
G5SP0cTdiaT7OHPjsxtu1PC8FHFPiM4ZrMwuC/QgHDV0/+Hg4b8af7XJ9OC+
y5ecg/BE8qOM/Kzi8qq6xsrK8vLSPBqFTMl7mp31lJz+5NG9R6EOEb5ofLxf
Zj6la+kKkdfrFDjdhf3Pnev8dSMDzp4LjNLDN7hlDlC6Z1cpGEBT1HPAhTNS
zih7oK6/4XkjJSLc6/yv//xWB4L27t5/3OmO65Oa6NLO4s7RwWnuFF8kXC0t
LUBjgD/8JPyhSiZQCCZkM32MhsySJ3cS7ljaO9rrn/CCDtw9fCsrprhnTDo/
q5gXL0wLn1dK52U8lZg9N1TLrH3cnIULcsce3Ptf6gmNevsMTuJO4ml3n3UU
tU1NCZVcqUqq+CD+EIgcjVmjyOGNtY01POnK9Ey8aW576Osdm6G//I9N//d/
14E2bfuf/993f9fbbWBg8OOPP+7du/eHH37Ys2vv7u9+3LXdwOLcNceI58FV
E9k9c73Tknf+skI0I5npFYy8aMiPIQZe9jxp8MvPPyB2jcQvf/lmz3c/7kMd
MjY9ccrMzuW4R+D12KfRhQ0FPbNNg5NjE8NI7e2sTHse44V3MLU7bYrYNRK/
YC5cuRYYHJue/uBe4H2HC3j0T9dOnjhj7WriHOIVl51e042EuqPjvey+PG5z
eHqch43t2S/1jQ9Z2br4BSFnxcbeiwlwiL6G9nZzvOhy38Q5wyexvrhlXLBg
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
jWQvtIO5/vd/34J4pP/rf3717383/trgstExB+srzr6+bk72F63MLA7tPnD4
0ImjJxzN7P29o9PTqzp6uYoJkYovf3l9pCxiGOYN5CZR7TAxOlCw+ZFb/g9d
qRPE1rkW1mp9BWsD1MNV0NZ6uAJS3hB/tHy6k/g8xN3Z2EQf0jl3xDYkPps6
pWjlKVnLj1dtYD38nJFyWbzhVkTntFWkUjKjCAm+rva/Gu3URXzKfhTaDoic
tQFEjsasUeRwmfSRUkL7I8esuOD70WSHB7VROV1lbeOTXMHUDHuGNcwZ724v
IhaEXo631rc13b9zOwbafNr4bERIel2nGB6Vwzzt7j9eSCmnUslVyCfy/U+f
r56xOQiLm8tJMT7m51CQ7uUjThFx+VSWopWrWt5RLyLmDM4yy8eakxLxNy1R
v26Gdh44cMUlgJRYzyzun+qbFUoWAlcNHuHvc3IGKgcrYlueON91Mj24+/8g
Iuff/777ezMnM89U9/Dn8eTc8nJK9pOHxGCPCOdfHU+ZHT5k8rX+/l8dbgWk
FhWMSOgz8knRy+svzvoYLHtc6m2WYAD5nfnZHheGIfbdLZ+oHuL/+TL+CUA9
XAVtrYcrwBujj9UndWU4x1wzO/HD9i3QJlMTqxtR5GdD4tpp+eiyA08bWQ8/
ZxRSIaJzhFOMqaEmRlcxvSktHu9ii9qjD0EWKLQLEDlrA4gcjVmjyGF31nWn
h1f4WBUmhmWU1ZKYqsqp+eE3c4pxGVXD1KC2GHSwtYnRDiMIMtyPwflr5xKh
t0BiZ6RlUUgU6vZF+edD1d9zr8W6Yq7qQYYXMLgYIq2JDzMlMGe1e+dNdo/T
M7sL8KGel40NDkOQ3ra9F066x+CzmtIbmPRxDn9hPslaHqGK26cayVe0h6fe
O2dhtB0ROV8bHDbzjPUoGE+hc9omkaAYFow0s14kMJ5ejXA+dGj3X5FjvjUy
u/DHIQDlQkEkw3WkynBzkhV08zIK64nXwze5ZTIp3Zw1lHF1QD1cBa2vh2/D
7qZ1Z+Iq8IY+J3X3bduM1Dp9Y4x9KJHQzS8blwzylrvaRtZDgJrfxxmD8RZG
aAiyRqG9gMhZG0DkaMxae3JGekeqc9tTQ5pKc2raeyqm5rt48+w3c4pxB6pG
ioM6HqLvXcIYfWcOQccOmt+7S3rRIoaH5PDcauGfUiaUC6Yks8zx7rY2WjWN
TKFl5NJyM2gUciElL4tSTqY0ljb2tw/NLE3vppSJ5IJpyezwRHdHJ+1FFZlS
mU2pWFwrVJqdXUkm15XQelp6WKMc6YxQLn657GJeAc9LYZVQMDvKYrQyGmkd
9ZUNNTUVlfXlRWXlOXk0MrmqqLy2qbdxkDcwJeIIV/HrKsmEkktXTOZnx923
PWKrAxmewOAi3rtxEXHGZpn1o80ZuaQ4v5sBWKybq1d0GJGSUcuo6WcNrkcE
LZ1q57WnsktuxHtbHv1pNwRt/mb/qTP+KSG1nNx+Ye+M2iOJJttn6U9GC7xi
PM1NDf6uHmQ/iDl3NymshZc/JO6be3kbqoUgWj5Bf96UcC7XYXPAdXNLn1C9
4Ca3bCal58M2LqAerlx47a+Hr5lXiOYl0yrBcGc5KS3EFlE4vxj8h67Ov6ml
Nero+cCE8MaZggFBP0e63L1uYD0EqHk1Tb3yyV1/i4MmEHQehfYEImdtAJGj
MWudkzPH5gx2jjfTRvs7h1hspnB+SgoL38wiy2NWjZYGdT5Ch9gdN955BoJs
fraIDX3S2KOAx5Uwf7WoFGlZRJNtPEZJQwYpxScYh3XDnbHD2Z3BuWFd3K5c
cPPBusV6P6SklPcuTe+GtCzCyS7uQGVzxtN0n5AgrFvARbc7i2uFvC9eDMRi
w718s5My22qYvF6WaOZlM6FuWZAwhM3qr2mlJlNjceSowNiI0MD70f43bvva
XcZhsfjrfmHxubFlo9SOGaR9WbnwSsGwnFUtHnhCjrhjdejCJsjwKAYX8t6N
i1zME82Ocsc6e1sbK0qRBpFCKW6oaUae9cwImz8nkq19LgR/uHGiOrb3iXWY
k/nPu36CIN3vf3a8GpaT3CuumJAPLSxikU738HuypquCHvlaHTXUQ5qbb1CY
04GJ9xq5OQOi3sXbeJkKTDnTWdBNdq68pRvmd+4sPlovpMktl0np/bCNC6iH
Kxde++vhaxCFo5zrUrIqS8lBty6j923bjCic/7XpvyG17h/7Dp+4/dC/YuJ5
11wXW7zcD2xgPQSoeZVwoDwlyNf8oBEEnUGhrwORszaAyNGYtS4hV8hlUolY
yJdK1fsCvXNjoNf5x0LtTxnrX4YgDxMsKYrcNrSw3kO42iWQ2BlpWabq47MC
fvM4YG4I6Rlu0jHU2YQ0trp6X27WQ0F6Nga2kZ7E6qXp3ZDYGWlZWA2kvMCb
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
dCqBgsOGqiPXNXbuBOKCDdfB5xMr/vJkez04n0CxwYIf4YjFXLCUiwsup5va
MwZ++khLRlX87RQHFaAvYB6teGWzGUGAGVDfreFg4ZMZ38IsG2IPza0yY10i
Lg91Ne4giLGWfkRwYj1dohCXZS4GmA4DsaBSqSkpKSCkcSsCBoBhYDA4BBy4
2uVd5P12VLuPnbJ4nLS065NoboA3VMxqIaT5mFpoqKogiJqq5gnTgPOEzqBi
Rs0yBeg2iLjAOFzKho1DVMwCDgflNFCJeJyOXBCV/23b5h3ayFFL5XOWhrct
3dwszQ21DZW3yf8Xsm0zoo0glpr6hIBEWqcEZciW3VC0QeLwewSanC8ANDlr
5vOZnMXmv+zRtuHqrLYXQck+njgzF4NjNq642OdkGlCWfq5sViRXT4lYIpgX
cOe4/HmBSCx5tzzXorj0FRILnHQi9iKW2mqaFx2VLHNvxNBITfISvOK3KRWL
KTAiPpczPTE10tecFU5+cOrpqU0mWnt+PXAVUX100j4j+mXXtKIozGslECkq
cszSX8ZQ7LGhvyL2eofPWHrt96tzJLUXtPZL5sfHe0paip8UxdmEu1+yua59
4vDu37fvUt788xZE+befL+pdDLLwKY/M7KrpmV55H+OSDZ9uuhq3EOSspl6g
X0J1uxAdkSy7IWR6erq3t7e6ujonJ+fZs2cBKwIGgGFgMDgEHLjabZK96mA4
A1Q00736kdbDC38cUtklryZ74rZTFJkyudDEXhhXvAOQcIaF45W8nqTMICvL
o3uAydm3U0PTyEc/vMUnf6iS/uGMnvUWFxiHH7ooGy4OF6+YYLqT1UlilOGz
Q6zdblzQ2aOhq3NN1+Se3v3I236RPpGRiYmRoW62bueP3969TXvb3m3/4wSC
XMbohuDjahvm0X4Rylrmd17vOPyOeW1ySuLxD/QwsK3DZwGanDXz+UzOqzIX
UyO0l1XRfim3Lkc5uvh4Rro8zovNoZV3jIO5M1AWgVSuIUBZZqdmJ4YmWFNz
vHnBu+W5FsWlv4RY6KYThUFuaar+oW22CRtz1rs4oUK+fDD/9hm1mALDmZ4e
7aF3VNVVPg/K8TgdZ6xkceKP3369iGxxOW6c+CSrDcyKZxWlYV7/CPAtm14U
S3HWCd2P2P152MDK81ef2jspTbl1HXxmH3O4ub+roqUpn5oX84LgGell4XBW
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
4j1ltOTUxTtmOKjb6Srv/2nzhy/me8z1UIdycS2B6lF+t6/7EFTwDbakfkrn
culInwsYh99SHIqmO7k96eAXjH7ii70VtPK7JBl3QDJRLKITEoJN9bVUwYXa
jtE5hyfiGzikfkHnMme/TnEIefuQySe62+ioqyCIjoaujSKw84YFvXOw2vRa
gCZnzXyiyRFyxjiMhqmunCKCfaDR79eVkcP/pfSfP6ghSuf+/oex3gUrZ2dn
8Mn29vZ2dnY2t29a3TxrceWE2V0HE98E42ctEaVD9YMf3qMomOqb6y6YqIxI
D7a0u6yptl1pl+pvP/1+EujLoYu2Rg5u+OAAD+/77m429x2u33v0yDU6y5nU
E1fUWF9fyuvNpcR53LtlgNm9TRt7XMfYGuiLa+SLBEppfXt7bTmlKiOyguDq
72x29tyZbXs0/rS675n0EvwB1vW09bWQZut8c1N8Xbz9MKZ+1n4JhMwicFR9
ZXZdTlBtnFUwzuH8ebdtex4ZO2Y8L+gCyjIrW7YimZQ9IB6l8jtj4v1xepqX
101cXlfGmx2pGWhIoJHdIxxPX1X7pzIQ3x9+Vda8qWwWeflRSkhqfk19TXlJ
QXHui/xkQmKIexjO9KGZjvnFk6f0TuzXOH75jptHXB6Q6aoh7sjcX96tL+bL
sDrzetOsajyUQzwvX/EKVcHX2ZL6KJ0zHz6xzwSMw28iDmUiroQ7JpruodeR
Cp8/jH541vS2qeoZJ+Two+P3MsJfdo0KF2YkC3zFtvAFqXBBxJbxmbOD1f3V
zxozcN52Bkf2/wOYHCWVg2rncOfw1Ecv2gpaJid50jmhTCh59cuvZxx+z8hE
fDFvWsgaYfbV9Nal1VOCg5yunv5D/pp7/55DhpYPbZ5XhRW1v2wfGZiam+TM
81Yr0w1ZCjQ5a+YTTQ57tGW07nkHyTHGRe+m1k87NyP/+T83/bf/roRs2v6/
/t+uv6vsUVNT+/333/fv379v3769u/fv2fX77h1q+lfu3A5O8ykfy+ya7Z4S
fPCTJfPTgulu7nBlXW440cvM8Zzan0f3AX0B8+j//Hnvrt8PYrQ0tc9c0DWx
NnTwso9ICsurI3fNNAyMj44Ngadoe1lKWrgT3kLb5KI20Bcwj9a5Zn7Hyyci
NfWxr5e/xTU89sCdc2cuGdkcs/JzisxMreoEU4wRRjezJ2euMSg10sH45uWt
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
    "], {{0, 291}, {759, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{215.10000000000002`, Automatic},
  ImageSizeRaw->{759, 291},
  PlotRange->{{0, 759}, {0, 291}}]], "Input",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"firstMorleyTriangle", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cs", ",", "cs3"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"b", ",", "a", ",", "c"}], "]"}], ",", 
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"c", ",", "a", ",", "b"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cs3", "=", 
       RowBox[{"cosThird", "/@", "cs"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"trilinearMatrixToCartesian", "[", 
       RowBox[{"orbit", ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"2", 
             RowBox[{"cs3", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ",", 
            RowBox[{"2", 
             RowBox[{"cs3", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"cs3", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ",", "1", ",", 
            RowBox[{"2", 
             RowBox[{"cs3", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"cs3", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"2", 
             RowBox[{"cs3", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", "1"}], "}"}]}], "}"}]}], 
       "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.769125743247164*^9, 3.7691260036928096`*^9}, {
  3.7691272277324305`*^9, 3.7691272470707893`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cevianTriangle", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t1_", ",", "t2_", ",", "t3_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearMatrixToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "t2", ",", "t3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t1", ",", "0", ",", "t3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t1", ",", "t2", ",", "0"}], "}"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"antiCevianTriangle", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t1_", ",", "t2_", ",", "t3_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearMatrixToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "t1"}], ",", "t2", ",", "t3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t1", ",", 
         RowBox[{"-", "t2"}], ",", "t3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t1", ",", "t2", ",", 
         RowBox[{"-", "t3"}]}], "}"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.767122053832755*^9, 3.767122161985443*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
kr9kPeRKBGkNEGstpzWTetQ4ydONlJSlRQXucLZAH1n+2fWbE8l2t3jRnEFu
/9TcRgYlpn2FzfQ2PkxO9dp+xAxRviNZ/xi3KaXpbGl/ed+b33xXDtWIK690
Z+1OOkPZbkNB68jfedCusKrb1NiQHpuCu5wAgH+X6fVzZVP9LwbZSbyb7vGn
v//OYR8yo5KOXYvLrW1SYP3q2SmDae7y28uGl9U327M9r4V42+86hT72c/Zh
3HzEw6PauOGtb6AvXQ+5EkFaA8Ray2nNoBjUjnBVnZm5icFHHVzWo43f2Pkc
vXQ/tnb0Ye9U18T8UsXacUzZg43VsLNizu2z3bwOWZMcdwbT3R/20etH60em
37jnyZ5S4WO/hmufXva2+fZbvP/0czrBSH3UOmjAxoyYCu5yAgD+Xcb561qa
Vy2Pm3/2Kzq1KejAdqudP6BtF5xDc26y219qsXG9UW2a22ZUUNxy72xJyJYQ
b5ev95xBpCRKVPEdbp98frIg/VvuUy5dD7kSQVoDxFrLaU030aXqK5DV0Rix
Z8h23yNka0eJjM3i1imxPg028fp+pUqMjTdiQ4WsG4FUp7kF8jbZ7XKPzaDV
jRX0Kbom3rxCnpTPEmRTOcEo/PBma4cjyDyZHFDMYPfCzLcAgEWin1/2RNnP
zWJHUtJskafT1i2u//QypsGIqee2qcli0yhpZOS512rLwUDkVUhNb2Q1id/9
DZauh1yJIK0BYq3ltKYaqZfW0wceul+/cNDJ+TBaf3T7DzeS8xp71NgrrX5a
p8J0MllPbV/p7fobgYlnPd3cqOu3kHb4hEfcLcM7ooZXM+LpNz+CJhWw2nOo
FWEo4ujn1tsPIfNr5IDHf01r8/+PSTutUEhGxoRd0pFhyYR8VGWc0po0hlXw
NC4AYBn8mtaEz7LKwyg3rJD3DquvD5xf5/vowO3GBzyxHptVKQanhrnSjixO
5qlkny89LRDFydLqiP+G87lH0ysYTwS9wlGxZEoxrXnjuwBL10OuRJDWALHW
clqT9ZUPlJ5tTtlEO+tEcjuOLGJ2BeZllHeOGTCFVqVVSzHVQN+TnNKLZ+hO
VgFuVDeP0xaetJMpD7O47fhnRrwjUr7l1c2xdlYHi8qNQJHHzG0cDyDzBHLA
Iwa7Zz6tzernl6NSSoZH2hq62AXtjfX8PhFvXD+gMOCBbZl/CACAlenXtNb3
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
qNaHLkdnVzdIyF7F9KRGp+/avqh7UXm97bbH5dNeNtuOok/8HLzp1+834TI4
pnnzGJ/XHPOVH+KvJiamJl6JTowNTIw+5OVqb75m7Uq08h9rzJ1dvY5FJ56N
Tbx0Be+ReDU++cpvj5k3qZl4Qx9ZpxjWTjSph4pKUs4FbnEwRSs3/MPl6yMJ
Vj80RbD7Ob2T+p00UlL1kpR3199LSPbc7G6EHL+xNv8uek1Sw4ni3tKeN4zx
/4BnIR2oEpRf6sxwij/uuNnCEa2gfONGu8SsbFGQAwQ5CU85wfKie/WWFNSo
t69R73R1WCQ1CtIaMKx3GBOqwH0oyeiLwQ5ue2Vly9OnjdXVtXNTXV339Gl9
ZWVDUxuve2gc95twVFNqcT9O+fLZg8Yf/QqOrgnau9ls60G08azDmczrrLYX
KnKM0Cp0+n2GuYXP7pwoOr3utJfzVzuOI+t4x3OFNzk94pnh2MQbh3r/8Zir
G/WH3FBb/ai28m5tRdrVc4EHLJyMkbGzxYGgc1fpFbX3KmvZ1XgPfNB11b8/
Zp3iDSOVNJJ+1RBH9jw9+0rwt7bOq5Dx11be317Iiqoevtc92TE+s1CyaoyU
dpGjVayMyJO7LNeuQObWdluDE13v9STWDtcOTRn8LCa6inkP/Oouf3rRy2LT
JnxV8rM/Qk++39yvIUe1pAyecoLlRTtzrwlq1Dxq1DteHRZFjYK0Bgxr0cyO
S8xMLC3t5WSwwh1TLJGH/fp1Lr8bfKTRkgr9PlUZLJpjCgV57DRbty8QeeZT
U+uZDYL5f/lCzzypHu+Q9eSJamj0qOMUq90IWVo5hkdlcH6zqJ9MQI7VkwP5
zGuBVHv98nxrrLa5RqXRakbzeiQd42+/Pt9Cn8VIK5N7m8oORqEH1prbuiOT
BEpAIZ3VDTPfgmUJatQ716iF9iFrFKQ1YFiLLa3xHmeUhjheM0NeW8y+2ntq
he/9vTfq7zYJCHJaJumfHOSMtGew048meH/hYYoc7TeYufuvPpX9bWoZ/SG3
mzcsEE5KppSvf/d1Fr+s6sK5c/PnSugc/uNtzrxXdZEN1Y7UJvbdc716dp+9
wwG06tvNB68l5NR3KciXKmJKLSPVIlFXdU/xjdprgVdOeGzfTl21znqLd2jY
rRJcButeygVTb//KxUKfxQiX2ZZJLQtBYd9+Zr55PzK5TAl48K9KOHN8OtWU
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
haOa9A1j50bbmO1MKicMhR8ysbDbi0xiKQH36ayumcvlNDGzHpBUODjUUtfB
ymurr23t4TeNEX0SDb5ifuC/BPDB/ZzWeh5lFAc5Jn2Ovttq8Y1nuFEY5wiz
raBdqCW1k4NP+NUx3GzHG2e+OGK/at0qZGa+3uqgr8NFhm9KQSKzvIjV1NjS
PyicfO0EMtD8AFhwkNaAYS3ntPZ/Hhj5rDff64soDBfak8wqPr78adWiaVkf
KWqspdMSKdZuCO1aZ+0y5/UZR9uZHXepFREownONhb0rMqFRAvLorM5Xl0u1
/s0lzVhv+3NWbkUK7XHevYc1rcUDSnzFHIaJrj5+P6e1blZGYYBjggnyo1hT
/GgmCY0BhTxW9zhuGyPtmdxsF3YECt2JzI310zWvXmfq4OHtl0I/k3InKiU3
IaW4gNXU3jv82smZofkBsOAgrQHDWtZpra2Am3WYHboq1NPcfOshZBpte/Tm
5Vus9u7WZ9Xl1QV5HDqdERZxaf9hP3P7oCMh5xJycFTLaxF2CmWzf7K4n83n
hLSmmyWdtNlu57jSyHWTc+jxqAw6qyr7UUXJY04Vh80ufFDIzM65cbOkpKyy
hQc3N5aNn0cZ8KtyKy553nIyOrXTysHVw8idtjX4+5DEu0wmO+dWUt6PXgXX
zKO8/rbrq383XoG++PtaC5cDDieveMX8dJHOYhQ2lTf29718/b01aH4ALDhI
a8CwlnVae/6ImxPEjjQNdbc137gbrTr65bawkxGJuYUMetLV+OPnwinHIvaH
RPjSIkOvfX+jIPdxayVPhKPauOxP3tSWj7SMt/304nEgI3LfETsb4xVr1q/d
ssnZhxJA+zYoKjAkghYedjk2KSnl9nUG635Zc2PPMLw4tGz8PIPHcOujZ7dC
ik5uDN1nbmtrtWKt9X99tetrOx8qNez48bC4uNCsrNDLZ7b7b/3bTiNk89nf
vrCkrnYK3xGSEX2nqrRluJk/+VKseu17a9D8AFhwkNaAYS3rtNZRyc2LYdMo
oa4U8zUUhChr1u51dfehJQQfd/fcvXa7JbLcZx54JjQ7hT3A4o7xRv7kltq/
EFMCpbBeyssvTgoMsTOzRMh4xaqVRqbIhLLqc3tTMxuKpeWBQ8ePR2dEZLfe
rea3D4rf65mCRWicV9vDSqxJcYvy2Gi1zkj/vBOtxC0FIUtTc2/v0Kt0Njv5
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
qS730OXww1s8fl6y3M/98K2kAmG7mpDghNKSLsm1IIky87PgNZAoi0sUWFSg
rQFyzbGtGbXo5Z3Qj0r7W1tquZyCnLKC3KKCvIJ3lFdoOjynpLyioaF9UCTT
oxd59K789UcY7eSiwVqZ4BCxb6v9qr0YRnP2YCRmCUV6YsQgn5oRE0QzlxUb
TnVywDAvR0pgNCOhXlbco+qUveXbkjesOa+ooLCgoKQgl1mQfbWAGRHot8N2
zQoMw1assd3hFxjBLLiaXcDMRUcUFOUVFv6nNb/GMHurRs1AHZOf4p7jg/k7
Yms/mb2p4xpHG79oCrM+qrKlsqdTr+9rzLp2x8MlGMO2Wq35bJ0f5sV0pz9l
1ohf3u3xj9OJjF1ImpkCpntBMBbos8p22z7MIWFTeFEKt1NCELKpXvVIOSFi
sBIjqc6HMIzi6BYdnV5VryR6NITMkn42uCCJMvOz4DWQKItLFFhUoK0Bcs21
rakJwwSBDw608Z8VZmfHx2bQ41IT6UnvJpF+nR53Iz42lZnzqKy2q2EE75Eb
ZBrTK7xRq8QVEu1oWxPnTnbc0Yh9tod2em3bFrZuCyMwqjyvsnfESMi0oyrV
c728vDgtiua2dQW2bJvzj2H0nLtdKt6wVjz1ljOR37Bmemri9aSk1KSEmKTL
QUlRPj/tcvzHStMI/HTlPzbu+ulIVFLo5aTYBHREUjL9+tW3rPlNj6UxXQde
L+14kvrg7OZYR2z3V//j81V/w5avs97p7xWXFfO0J/9F3wtpv8Egabmfwtq9
6ewSbPv/XbvC+Tjmk+uRUn23bvDNn4Qs4C4MGhk+2aMerq8runL73JbArUv2
73Hy8AuzDy06ldXwsGXYdCqRZhSXtxIj5fyS3CsXUqnUmHOXCvIr2tFgHdER
Kgv4JGRhE2WeZ8GbHgsSZSmJAosTtDVArjm2NcMUGhyEtlskKC37JfEazS/W
/1jEiRNB7+bEiRD/Y2E0v7MxV7OZj5rK+7Wt43rptOmFGA3W6YFaRVt+MeNi
yIEf7Fd9sW3bwQNBqadShRmc3roe+ZSRmFYNqsf4anHOvWuRe129lmI2mzcH
nk8tfSzVtSgM0rfNuzes+XjEiVNBQWeDjh8NonkFHXFx2/iPzz79X2gq/e9P
P/tqo9uOI0HetKCA4+iIoJATISfesuY3PxY+TKi7hPn0Wwed/T7BnFf97dN1
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
AAAAAAAAAAAAWBT+H5aDdyw=
    "], {{0, 383}, {826, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{306., Automatic},
  ImageSizeRaw->{826, 383},
  PlotRange->{{0, 826}, {0, 383}}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
kr9kPeRKBGkNEGstpzWTetQ4ydONlJSlRQXucLZAH1n+2fWbE8l2t3jRnEFu
/9TcRgYlpn2FzfQ2PkxO9dp+xAxRviNZ/xi3KaXpbGl/ed+b33xXDtWIK690
Z+1OOkPZbkNB68jfedCusKrb1NiQHpuCu5wAgH+X6fVzZVP9LwbZSbyb7vGn
v//OYR8yo5KOXYvLrW1SYP3q2SmDae7y28uGl9U327M9r4V42+86hT72c/Zh
3HzEw6PauOGtb6AvXQ+5EkFaA8Ray2nNoBjUjnBVnZm5icFHHVzWo43f2Pkc
vXQ/tnb0Ye9U18T8UsXacUzZg43VsLNizu2z3bwOWZMcdwbT3R/20etH60em
37jnyZ5S4WO/hmufXva2+fZbvP/0czrBSH3UOmjAxoyYCu5yAgD+Xcb561qa
Vy2Pm3/2Kzq1KejAdqudP6BtF5xDc26y219qsXG9UW2a22ZUUNxy72xJyJYQ
b5ev95xBpCRKVPEdbp98frIg/VvuUy5dD7kSQVoDxFrLaU030aXqK5DV0Rix
Z8h23yNka0eJjM3i1imxPg028fp+pUqMjTdiQ4WsG4FUp7kF8jbZ7XKPzaDV
jRX0Kbom3rxCnpTPEmRTOcEo/PBma4cjyDyZHFDMYPfCzLcAgEWin1/2RNnP
zWJHUtJskafT1i2u//QypsGIqee2qcli0yhpZOS512rLwUDkVUhNb2Q1id/9
DZauh1yJIK0BYq3ltKYaqZfW0wceul+/cNDJ+TBaf3T7DzeS8xp71NgrrX5a
p8J0MllPbV/p7fobgYlnPd3cqOu3kHb4hEfcLcM7ooZXM+LpNz+CJhWw2nOo
FWEo4ujn1tsPIfNr5IDHf01r8/+PSTutUEhGxoRd0pFhyYR8VGWc0po0hlXw
NC4AYBn8mtaEz7LKwyg3rJD3DquvD5xf5/vowO3GBzyxHptVKQanhrnSjixO
5qlkny89LRDFydLqiP+G87lH0ysYTwS9wlGxZEoxrXnjuwBL10OuRJDWALHW
clqT9ZUPlJ5tTtlEO+tEcjuOLGJ2BeZllHeOGTCFVqVVSzHVQN+TnNKLZ+hO
VgFuVDeP0xaetJMpD7O47fhnRrwjUr7l1c2xdlYHi8qNQJHHzG0cDyDzBHLA
Iwa7Zz6tzernl6NSSoZH2hq62AXtjfX8PhFvXD+gMOCBbZl/CACAlenXtNb3
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
qNaHLkdnVzdIyF7F9KRGp+/avqh7UXm97bbH5dNeNtuOok/8HLzp1+834TI4
pnnzGJ/XHPOVH+KvJiamJl6JTowNTIw+5OVqb75m7Uq08h9rzJ1dvY5FJ56N
Tbx0Be+ReDU++cpvj5k3qZl4Qx9ZpxjWTjSph4pKUs4FbnEwRSs3/MPl6yMJ
Vj80RbD7Ob2T+p00UlL1kpR3199LSPbc7G6EHL+xNv8uek1Sw4ni3tKeN4zx
/4BnIR2oEpRf6sxwij/uuNnCEa2gfONGu8SsbFGQAwQ5CU85wfKie/WWFNSo
t69R73R1WCQ1CtIaMKx3GBOqwH0oyeiLwQ5ue2Vly9OnjdXVtXNTXV339Gl9
ZWVDUxuve2gc95twVFNqcT9O+fLZg8Yf/QqOrgnau9ls60G08azDmczrrLYX
KnKM0Cp0+n2GuYXP7pwoOr3utJfzVzuOI+t4x3OFNzk94pnh2MQbh3r/8Zir
G/WH3FBb/ai28m5tRdrVc4EHLJyMkbGzxYGgc1fpFbX3KmvZ1XgPfNB11b8/
Zp3iDSOVNJJ+1RBH9jw9+0rwt7bOq5Dx11be317Iiqoevtc92TE+s1CyaoyU
dpGjVayMyJO7LNeuQObWdluDE13v9STWDtcOTRn8LCa6inkP/Oouf3rRy2LT
JnxV8rM/Qk++39yvIUe1pAyecoLlRTtzrwlq1Dxq1DteHRZFjYK0Bgxr0cyO
S8xMLC3t5WSwwh1TLJGH/fp1Lr8bfKTRkgr9PlUZLJpjCgV57DRbty8QeeZT
U+uZDYL5f/lCzzypHu+Q9eSJamj0qOMUq90IWVo5hkdlcH6zqJ9MQI7VkwP5
zGuBVHv98nxrrLa5RqXRakbzeiQd42+/Pt9Cn8VIK5N7m8oORqEH1prbuiOT
BEpAIZ3VDTPfgmUJatQ716iF9iFrFKQ1YFiLLa3xHmeUhjheM0NeW8y+2ntq
he/9vTfq7zYJCHJaJumfHOSMtGew048meH/hYYoc7TeYufuvPpX9bWoZ/SG3
mzcsEE5KppSvf/d1Fr+s6sK5c/PnSugc/uNtzrxXdZEN1Y7UJvbdc716dp+9
wwG06tvNB68l5NR3KciXKmJKLSPVIlFXdU/xjdprgVdOeGzfTl21znqLd2jY
rRJcButeygVTb//KxUKfxQiX2ZZJLQtBYd9+Zr55PzK5TAl48K9KOHN8OtWU
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
haOa9A1j50bbmO1MKicMhR8ysbDbi0xiKQH36ayumcvlNDGzHpBUODjUUtfB
ymurr23t4TeNEX0SDb5ifuC/BPDB/ZzWeh5lFAc5Jn2Ovttq8Y1nuFEY5wiz
raBdqCW1k4NP+NUx3GzHG2e+OGK/at0qZGa+3uqgr8NFhm9KQSKzvIjV1NjS
PyicfO0EMtD8AFhwkNaAYS3ntPZ/Hhj5rDff64soDBfak8wqPr78adWiaVkf
KWqspdMSKdZuCO1aZ+0y5/UZR9uZHXepFREownONhb0rMqFRAvLorM5Xl0u1
/s0lzVhv+3NWbkUK7XHevYc1rcUDSnzFHIaJrj5+P6e1blZGYYBjggnyo1hT
/GgmCY0BhTxW9zhuGyPtmdxsF3YECt2JzI310zWvXmfq4OHtl0I/k3InKiU3
IaW4gNXU3jv82smZofkBsOAgrQHDWtZpra2Am3WYHboq1NPcfOshZBpte/Tm
5Vus9u7WZ9Xl1QV5HDqdERZxaf9hP3P7oCMh5xJycFTLaxF2CmWzf7K4n83n
hLSmmyWdtNlu57jSyHWTc+jxqAw6qyr7UUXJY04Vh80ufFDIzM65cbOkpKyy
hQc3N5aNn0cZ8KtyKy553nIyOrXTysHVw8idtjX4+5DEu0wmO+dWUt6PXgXX
zKO8/rbrq383XoG++PtaC5cDDieveMX8dJHOYhQ2lTf29718/b01aH4ALDhI
a8CwlnVae/6ImxPEjjQNdbc137gbrTr65bawkxGJuYUMetLV+OPnwinHIvaH
RPjSIkOvfX+jIPdxayVPhKPauOxP3tSWj7SMt/304nEgI3LfETsb4xVr1q/d
ssnZhxJA+zYoKjAkghYedjk2KSnl9nUG635Zc2PPMLw4tGz8PIPHcOujZ7dC
ik5uDN1nbmtrtWKt9X99tetrOx8qNez48bC4uNCsrNDLZ7b7b/3bTiNk89nf
vrCkrnYK3xGSEX2nqrRluJk/+VKseu17a9D8AFhwkNaAYS3rtNZRyc2LYdMo
oa4U8zUUhChr1u51dfehJQQfd/fcvXa7JbLcZx54JjQ7hT3A4o7xRv7kltq/
EFMCpbBeyssvTgoMsTOzRMh4xaqVRqbIhLLqc3tTMxuKpeWBQ8ePR2dEZLfe
rea3D4rf65mCRWicV9vDSqxJcYvy2Gi1zkj/vBOtxC0FIUtTc2/v0Kt0Njv5
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
qS730OXww1s8fl6y3M/98K2kAmG7mpDghNKSLsm1IIky87PgNZAoi0sUWFSg
rQFyzbGtGbXo5Z3Qj0r7W1tquZyCnLKC3KKCvIJ3lFdoOjynpLyioaF9UCTT
oxd59K789UcY7eSiwVqZ4BCxb6v9qr0YRnP2YCRmCUV6YsQgn5oRE0QzlxUb
TnVywDAvR0pgNCOhXlbco+qUveXbkjesOa+ooLCgoKQgl1mQfbWAGRHot8N2
zQoMw1assd3hFxjBLLiaXcDMRUcUFOUVFv6nNb/GMHurRs1AHZOf4p7jg/k7
Yms/mb2p4xpHG79oCrM+qrKlsqdTr+9rzLp2x8MlGMO2Wq35bJ0f5sV0pz9l
1ohf3u3xj9OJjF1ImpkCpntBMBbos8p22z7MIWFTeFEKt1NCELKpXvVIOSFi
sBIjqc6HMIzi6BYdnV5VryR6NITMkn42uCCJMvOz4DWQKItLFFhUoK0Bcs21
rakJwwSBDw608Z8VZmfHx2bQ41IT6UnvJpF+nR53Iz42lZnzqKy2q2EE75Eb
ZBrTK7xRq8QVEu1oWxPnTnbc0Yh9tod2em3bFrZuCyMwqjyvsnfESMi0oyrV
c728vDgtiua2dQW2bJvzj2H0nLtdKt6wVjz1ljOR37Bmemri9aSk1KSEmKTL
QUlRPj/tcvzHStMI/HTlPzbu+ulIVFLo5aTYBHREUjL9+tW3rPlNj6UxXQde
L+14kvrg7OZYR2z3V//j81V/w5avs97p7xWXFfO0J/9F3wtpv8Egabmfwtq9
6ewSbPv/XbvC+Tjmk+uRUn23bvDNn4Qs4C4MGhk+2aMerq8runL73JbArUv2
73Hy8AuzDy06ldXwsGXYdCqRZhSXtxIj5fyS3CsXUqnUmHOXCvIr2tFgHdER
Kgv4JGRhE2WeZ8GbHgsSZSmJAosTtDVArjm2NcMUGhyEtlskKC37JfEazS/W
/1jEiRNB7+bEiRD/Y2E0v7MxV7OZj5rK+7Wt43rptOmFGA3W6YFaRVt+MeNi
yIEf7Fd9sW3bwQNBqadShRmc3roe+ZSRmFYNqsf4anHOvWuRe129lmI2mzcH
nk8tfSzVtSgM0rfNuzes+XjEiVNBQWeDjh8NonkFHXFx2/iPzz79X2gq/e9P
P/tqo9uOI0HetKCA4+iIoJATISfesuY3PxY+TKi7hPn0Wwed/T7BnFf97dN1
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
AAAAAAAAAAAAWBT+H5aDdyw=
    "], {{0, 383}, {826, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{306., Automatic},
  ImageSizeRaw->{826, 383},
  PlotRange->{{0, 826}, {0, 383}}]], "Output",
 CellChangeTimes->{
  3.7676911291163187`*^9, 3.767732698355943*^9, 3.767814144363228*^9, 
   3.7678902777052097`*^9, 3.768120627906661*^9, 3.7681699082562847`*^9, 
   3.769125313207546*^9, {3.77013241329501*^9, 3.7701324402918315`*^9}, 
   3.770144703279891*^9, 3.7701565396249156`*^9, 3.7701577669564714`*^9, 
   3.7703710139240685`*^9, 3.7704173943504996`*^9, 3.770453449367319*^9, 
   3.770475043516688*^9, 3.7704843665895405`*^9, 3.770536070287854*^9, 
   3.7705853020884633`*^9, 3.770630754405054*^9, 3.7706310742597127`*^9, 
   3.7706660820671816`*^9, 3.7708011179709234`*^9, 3.7708024894749007`*^9, 
   3.770809316651224*^9, 3.770832195243108*^9, 3.77083823597928*^9, 
   3.7708422528217297`*^9, 3.7708824466780725`*^9, 3.7708864677647233`*^9, 
   3.7708945368804398`*^9, 3.7709343891616373`*^9, 3.7709361246586123`*^9, 
   3.771025639493554*^9, 3.7711592703913007`*^9, 3.7716755288239403`*^9, 
   3.772137205411265*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"intouchTriangle", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearMatrixToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", " ", "c"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"a", "-", "b", "+", "c"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", " ", "b"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"a", "+", "b", "-", "c"}], ")"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"b", " ", "c"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "a"}], "+", "b", "+", "c"}], ")"}]}], ",", "0", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", " ", "b"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"a", "+", "b", "-", "c"}], ")"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"b", " ", "c"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "a"}], "+", "b", "+", "c"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", " ", "c"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"a", "-", "b", "+", "c"}], ")"}]}], ",", "0"}], "}"}]}], 
      "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.767260765525319*^9, 3.767260877710635*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
+FCfn79dZk2I89erPU7EHHvQc7NuuL5/7OU/cWKtNUaZFIqhnmftjfXC0lph
ebWwQjhFFVUTh5eKGp92dkqG+1WmEc3EiusVzTdN3j+ilzbcq0v2fHDioxOu
f/j6048JWfjx0o2OXme9ErPOJt2+djM+O/lytPc+3798s54sWLXI2XbzuaWn
8v1v1+c+lepfejP8S3pRUS2sEgpFwrJHwpI7wqJfw4O8XWxXzCfzV9i67A8K
v1okvF0ifFRGHyGsrqiqevNeyMRF7Y/PCxNdeRG7fI4dc/C46HnuRnhyTkZ5
5QPB7eKs85V3PC8E7l3n+vO8hV4ue69Fp4ua1ZRETyln08tKZqSipn0sZqSi
pv33YgYqCjEEAIBxiCHwgRhoFdArxqJIu+Ad622XbCfE29GVF5UsajdQ/Ub5
6LiYouoE/LBAtoMdIe72LD8OL7JKltWpapW94sYNk5Zea1GGAemzxvoKQX56
Sm76ncz01PQpSs2YODwlu6Cwurq5t11moFdco7pXXZylV0v0ok/TU5lYGuuS
4kF87MmyjwhtwVJ7Ky8OK7EqpKi+qLPVYOiuSb78m6vTEULWWyz9ZLkXcU90
4T5OLBdrJn/Evy67XtKL1Mz0jPT07PQ7iem3LqUnBvt5bbJeuoj+rEVLrTd5
+QUnpl+6lZ54hz4iPTM1I+PNeyGpSxQmuqQfIX4eS6w37CB2kWsCM2MFrRKK
ko12qfsLqHYeP+o029GTEJa9M4eTUFKlpDo1lGw2bc81IxU17WMxIxU17b8X
M1BRiCEAAIxDDIH3m0mr1Csk2oGm2vzfboXvD95h7bnFfcOGgOXreH4hBalF
Xf0mSqYdUKkaDPKCrPgQb+f1i8iCDY4/BHBTbrapivu04tFXPMZqUlPGYUrf
29NU+iTj1q2IsBvc8LgobvTURHGvcMN/iQiLS0x5kFvRVt2v75QbZZpXLLdM
mon3aBukLY/i7gWtDbMnW7/8j8+WfEoWLrfc4uMenhz6uDPtafdT6TOjUVJ/
N5a/dU3QPLLxv5YtcjxIPO64xpbdrOx9+bXrl/SCGxd1JTo6LjoyNPqCf3SI
x49u9n9cPLFC/XjxH1e5/bgvJPr4heiwSPqI6BjulUtT7oVRI9OPdKr7qioz
L14/tc5v/byftjm4egXYHs88mlx9v75v4nZ9zYBe3kj1F5Rm37l4No7NDj11
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
G3YRq9Pr/O7E5T4dMFAKrUqrllKqzrYHydmnDnCdrH03sDe477faydkbdTdB
0NA0pKVXjMq32GTKOEIZuiitSJAUH+jiTS99vdYHxv0mqBij2nXU8Cs2nX2N
gQZ+I58tOEkCf7K0dfyeWIaxfO/x8lomF40Tt/LQ/4+V/T29tRVNeWkNwvK6
NrFoUN+pMNDrxjf+MOaZtaKYHgvzVBTTZrKiEEMAABiHGALvqb8uGlvzEjJ9
nSMtiTfLnuXNsYys8s1sz2sdopeB0sbk+hTX/GASsInYTLwRjiz83Gr1Tk/v
GN6xmJtnY1IjY7Iz8kSNHX0vf03bDPr7zSd7l9p870VYia6cx8klYnr5adTJ
xlWdlKyqnMfhsuzdCdn8ub3rTg4rpio0r7O4/RXPEU+FUUbpOylNlSCRF+iy
f2Lp6xx49V/u23kTA438ptvsomAS7LHY1smNWHJYvmm8vOYXi0bdxP9gw2BH
49O81KIYzqO0uw/K6rK7NfS6sW82vC/EvBXF9FiYp6KYNpMVhRgCAMA4xBB4
T/31gWJxSWrReY8b6y0Ob1qx2m2nxQ7O2iO/HOfe5vPz79yISvt1T8Zlm7N7
/nPzV//vonnkz39cYuu6ffWh8D2hv53j5SVmigqrujqfm//bEGlDRv2tXfkB
CwI8bGzW/kSsQlbuu37xRl5ja111aWFpRpqAx0s8GXx+2y5vGyf/3ceDIu/Q
K8a02v7mftXbf6pxhNJ3URpRYeL1Uy6+DsThgPOpawmFFUqqXUMNv/nSV96V
LxYcr4u3jjrksMHReb6F2zcuAQfOJvDySlIeFuU8EpQI8vMz72fyU+5cu56T
U1Bc2z6bvg0xa0UxPRbmqSimzWRFIYYAADAOMQTeU3/dXrWv7mH1jeNZh5YH
bLVZuXLFvCX2/99Xm7923Mtmnzxw4OSFCwG3bgVcPLbBZ+1/brIgDp/955/t
2AvXB248nhBysyS3tq9GPPJcrjX7syHSpw/r7/jnn7YK2LHSZvl3ZMG+L9ed
PBTMTc1M5EVdijgQFMjaH7zteLAX53TA5V+uZaQ+qitul9ErxiHVOzynO7H0
7aY0NY8TfzvrctiJOB1yPhuf8FiopDreauk7Jq0davjt2SO/xNNbdzs6LJq3
eOmSNd+47GX5cn7wP+t3PJgTePJiWFRUTNKVxLx7BTVVbX2z6dkQs1YU02Nh
nopi2kxWFGIIAADjEEPg/TbUXt6Wxy2LcT+7c/mKzy0mbpQh8wlZRIidlY2n
Z8AlXn5+9MWAsO9tgi3JJsuFiyxXE0tvey8e566oSkZ1qijZLFh2SZuK69NC
8zmsADeWzWIWIazFS75327GXE3nkwA6P75ZssCN2W238jgWkxOR359UPtkuZ
uGRtlFN6MaWpK0lM4rgcZRHWEWfOjYSSKiXVqaFkb7701Y9KNP1CZXt6dpTf
cUdrO3oY5i2Yb2FFLFkLvnCysnZg2dlt/+nAgZCE4JS626Xixh45A71gmnkq
iumxME9FMW0mKwoxBACAcYghb2183DRuMpqMeqNBT9Pp9HqD0WgyvbjIORuu
3gJttL/1eW0WvW68c+X4Sd+dLiyWy/ptLq7eLuxAv5NxV2/lFNTX59xLTo84
zt/vfMF7736fMy6+vKBrBanlXfSKsV9Dqd78+V/GySXN4oo0et14KyIkwPus
q/Npb+8LF8Iv30qNvxoZfcH3/El2YNTJ327eKqVXjLViRb+cic1UTWOUYZBe
/TY/Lk4PuxnKDk06n15U2Eyve/t11Fs8rmHUDOtG2ul1oyjrRvKZo4GuLt7u
P277yZe17/QOn2DfI0FnTgZyr8TzUgvpFWNpy2DP0BgDvWCaeSqK6bEwT0Ux
bSYrCjEEAIBxiCFvbSKDGHQmvUav1WjUGpVKo9Hq9XQQMfcNPPCPdKphet04
1F7eWP4g//6dRB4v8QY/8WZmIl+QU1Bd2djeJZW2NdU1FefWpycU30+/ny1I
zBPli7qaJHKZbmLFOAs2BKK0yiF63ShtKm54Uph/Pz85ITcj7VHBo8cVlaVP
CksKM4vy+YKygrr6xt52qYpeMaq0TGSnia2GxiijfFAsbiqpL+YX1xU3dXcP
yvQT6963+N9iMqjpdaN+VNLfVlNfmCdITsy8dZvPz+Ddzk1Of3Av+9HDfEFJ
RU1V08RVa3rFqFCbf0vY3zNPRTE9FuapKKbNZEUhhgAAMA4x5K2ZjHo6gxg0
So1KqVQoZTKlUqXW6AwvnjydBUtX+CdGnU5PZ0WZbCIx6nT/uFWRSa83aTQG
pVKvVmsNBrPvi/UaJr3OpFEZlLKxEZl8WDYwIJMrVGNa3RyrOpOR7gll0OjG
VCq5QjYgG5GrFGM6pYHSmCj9HOkGKmoWmf6KQgwBAGAcYsibMqjlmmHxqKSu
raasMO9hcmJ62t2M3JzMwsLs3NxHafdKkvmVBSUdTd0js+daOlATF07p5aCG
XjfqtVq90fiPWxWNG40mHb0Y0xgnb6wz+75YrzFuNJh0GnrdSC+3xkZVCnrF
qKaXjHPtO7hxEz0e9LrRqNNqx9QquhdjWrXOSK8Y6d8X4xzpBipqFpn+ikIM
AQBgHGLIm6IzyEj7435hUtaNS2eOBrm67N+z2zfghH9U1PGAgDN79oS7smOD
Qh+kFXTMnicLgJpYp5jodaNRpzPSfzWZ/nGrIvo/Tawb9XqT0fgv/2m2mWyq
waTXGXQ6vY5eck08kjTRn7n1RNL4+OS60TixktfrdVq6MwY93a3JFaNpjnQD
FTWLTH9FIYYAADAOMeRNjUrq6AzSnn4kym+7o/VKQiw/+ugLe3trDw87e/u1
H320hRAPe1Ysh1c5e/ZZAgCAd4EYAgDAOMSQKTLpVcYxqV7e1VKWlskLjPJb
f3CX+8bNu5Y6+mz66bB/wPHY2MDjh3y2Ov9gu8j1O5eT3v63ObzmOwWS+m6l
evK1Z7PzznAAAPi3EEMAABiHGDJFdAbRDTZoxAX5/AunfLY4Wn+ycfPmHYfO
eUVlX0zKu5OXX1kpuJ90+ZeAvcGb7H7e4PGdy3l7VtqJUGFmiURGUaOTSQQA
AOYixBAAAMYhhkyRXt5FZxBlHS8hzNPZwYoQstTR1SsqObHd8LjfJB6dePx0
oDG36fbBomDL4E1rbBftJYSzhp0Wy2+WUBSdRNTm7gIAALwdxBAAAMYhhkzR
aG9VX3lc611P7pGNjvYryLzFNpt8AuJz8vuN9fJxqWbiGUhFV1lPYWTj9e8u
7tuy0sqNEDd754iQ+CdCuaFjzCibK/uQAgDAP0MMAQBgHGLIFA00P2hK938c
ahXsscJ2xTpi4bZyZ2T4nbKno+O9mnGFYSKGaAaeyp/e7S88czVo91rb1YQs
tl7tffhyxj2xunJQLxnD0yEAAHMSYggAAOMQQ6aop5JfGstO8SA+rouX2bkR
Sw7LN42X1yyjKNV/P/dhUklMg0JDd3ryZT9XJ2tCyOcOzjvDEmLqlHliTbt8
Nr4SGgAA/i3EEAAAxiGGTJG4jP84kp24hXht+NNS1i7i9Mv6sw9vPO6kM4hm
8t1ktHFN/7i83tj/MP1qwM61Xy8gxO4b1q4Q3kWh7H6HqmUYD6kDAMxJiCEA
AIxDDJmirmJ+AYd9bS3x3LjMaqsv8bjtGlt2s6pX94+vTtYNjY+1jo+UPog/
c5i1wooQlt3aPafiThVL7zQrng5qzNwHAAB4K4ghAACMQwyZonYBPy+QHWNH
dm6y+XxfAAnOZ9+u5zdK/+kgo5zSiylNXUliGMfFgUXI9zZr9gbEHsmXJNXL
6qTYKwsAYE5CDAEAYBxiyBQ15/Dv+bDPLyI/Odku3xM8/1zRj6lN6U0D/3SQ
cYTSd1OampLE8xyXb+kYsulLx20HL3nc7Ygtl1b2jpqp7QAA8E4QQwAAGIcY
MkUN6fxbP7JPzCc/LF/hsPPMorAyn4zWnJahfzpoIoZ0URpRSWLoixjibLXS
Ze/FDfGNFwQ9T7oUZmo7AAC8E8QQAADGIYZMkYjPj2ezvQnZvsR+/Q6OXWRV
YFanoFX2TwcZZZS+k9JUlSRyOC72dAxxWmLv8KqDAQBgjkAMAQBgHGLIFFXy
+TFs9k5C3JbYO+/gOERWnc7qLEQMmfW0Wq1CoRgYGOjp6Wlra2uAuYYeNXrs
6BGkx5EeTXMXFCpqznu7ikIMAQBgXANiyNSU8fmRbPYWQthL7Fk7OE6RVeey
Oh8jhsx69Erj2bNnjY2NpaWlubm5fJhr6FGjx44eQXoc6dE0d0Ghoua8t6so
xBAAAMYhhkxRMZ8fymbTyYI1GUNYkVWhWZ3FiCGz3sDAAL3eEAgEKSkp9Poh
EOYaetTosaNHkB5HejTNXVCoqDnv7SoKMQQAgHGIIVMkTOXHbGPvnEe2fPkN
yyPEPlIYnNVR2Dr8Twf9Loas+5PDul1ha3+p4zwUF3fIzdT2D9rQ0FBbW1tZ
WVlmZuaNGzciYK6hR40eO3oE6XGkR9PcBYWKmvPerqIQQwAAGIcYMkX19/k3
97CPWZCd337D2ntuWWTFsaz2/H8XQ1z/vHLjvogtCU2RhZKybvPfT/IBohcP
3d3dNTU1AoEgLS0tHuYaetTosaNHkB5HejTNXVCoqDnv7SoKMQQAgHGIIVPU
msvPOsiOtCTerBUs77OWkWUHs9pyW/9lw95/jSGbljlu9YnySGmPLe2v7MF7
Q8xAqVRKJJLm5mahUJifn58Gcw09avTY0SNIjyM9muYuKFTUnPd2FYUYAgDA
OMSQKeoU8POD2XH2xMf1q1U7jlh4Z+2Or75X06enwwdFmV4cZBiitK2Uqqzw
xpng9SvsCWF/vdrjeMzhvJ7faodr+8fM24UPk1qtHh4eptcb7e3t9fX1Qphr
6FGjx44eQXoc6dE0d0Ghoua8t6soxBAAAMYhhkyRuIxfHMlO2kIObvyznevP
81g33EOL+CViDUXpJpPIBP0ApW6iFEX514OPOdsuI8T1m3U/n/31XNlgapuy
adj8e41+gAwGA73SUCqV9JJDKpX2wlxDjxo9dvQI0uNIj6a5CwoVNee9XUUh
hgAAMA4xZIokIr4wnp3uTfy2LLG230EsI519MxPyWpUURScR/YuDdFJKVU/J
8vN4Ab4sG0tC1q90PhSRENOkzJNo2hV683YBAADeDmIIAADjEEOmaKj1QWuW
f2mE1Zm99ivsXYjFDkePaO7ditax8T7t+KhhnD5GL28bE+fIay+lhPn85OBs
QRY7r/EOjsnI6FVXDeslaqO5OwEAAG8DMQQAgHGIIVM0KqnqF8a1p3tGHdvk
+K09mbfEdvPB4IScxwPGJuX4gHYihow9rxqsjhNnel49spP91fZ5xI3lHBF+
/YlIaehSG0f0JnN3AgAA3gZiCAAA4xBDpkgv79KIC5R1vIQwT2cHK0LIMidX
n8vJKd2G0kFTj2oiYsjbBeK8wLoYu7Cd3zl8foAQzjp2Why/eYCiFBSFJ0MA
AOYoxBAAAMYhhkyRcUyqG2ygk8hD/sVgH/eV1os2frflp8MhPpezI/n56QWP
RXXleanxN0IPh+1c6/u91xZ2uO2a1GMhFVnFvXQGGfvb8yMAADDXIIYAADAO
MWSKTHoVnUT08q7msnsZvNMRfpt8dm3f+N2eZU4+bntOBJwLiU/iBp8M/Om7
fQ6fb9nCPvXz4dvBsY23HvTUdiq1kxkEt2QBAMxRiCEAAIxDDHlTCkmjRHi7
KT04ws9jpbUTIZYLP1m+ev1a7yPuq9dvW/jJj4R42K65EhxbUSQxNMlMA2rk
DwCAuQ0xBACAcYghb0o93DPcXkonkcwbMWeOnmK77N+378ips6d/ib8YfC5y
r1e0Kzv2ZEheyoM2OoP0jJoUunFzNxnmvHGTadyoN+m1es2YWqUYVcjkIyND
QyNSqXxEPqbW6F+8QxOlBjBNEEMAABiHGPKm9GoFnUQUksa2moqivHx+YnpG
WtbDhw+KSwUPHhWn3y9L5lc+Ku5o7JQNqCcyiNaItSG8q4kMohszaRRqxeDI
YG+/pFPc1dXa0l1fL+5+NjisGNNTlAE3/gFMG8QQAADGIYa8PaOe0msojVKn
UqoUSplMqVSpNTrDi9UgFoTAIJNeS2cQg3JAIe1+3t3U3lRVVy0qfVKTn19X
Uy/ulcpfvEMTb6YBmCaIIQAAjEMMeXsmI2XQ0UnEqNVo1RqVSqPR6vVGowm3
xwDTDOoR3bB4rLe2sSw3I+V6VAQnjHv1zOXUgJjCpLyn1R0DYxSlm/xCBACm
A2IIAADjEEPe3rhpIokY9SaD3qDX63R6vYEOIaYXGQQxBBikV/SN9dbIn+bk
JEUGHt7ruNLeYePuFTvDbHzTjiVUZNdKVJMvpkEMAZgmiCEAAIxDDAGY/bRD
XYq2goEyXtxZz3UrJt6eSRZYEStPwuI5cwoSSrqUFKXBu2kApg1iCAAA4xBD
AGY/vbJP3VeraM1N4x73WrV8MSGffmz9B0d/C68Mj2tVqaLnmsmbsvBsCMA0
QQwBAGAcYgjA7GfUyQ2jz7TDDcXXLoSzHNwIWf/ZipVbzywPKzue0fqwZfjF
8+nYGAFgmiCGAAAwDjEEYC7QUZSKomTNfF4am8Uh5Ogyx70+Ue4p7dzS/vKe
UXM3D+A9hxgCAMA4xBCA2W/cqBzXPx9Xt5YlRka6rHIjZKft2v2BV/0F/YmN
8roBjbkbCPCeQwwBAGAcYgjA7DeuGxxXtRhlJTm80z4su8WEOK9c73MxIbpx
NKdH06bAFlkA0wsxBACAcYghALOfSS0xyYQGSXpyrJ/rGmtCiPU6tl8cP32A
Eiooidbc7QN43yGGAAAwDjEEYPbTyzvU4jxFXcz1MB9nh9WELPzSYcehC3Gp
9c0ZT8qzcvJy+fz7/IxU/kM+v/hh4VNRS79YrhscM4zp8dg6vN6L1xyZ9GrF
2HCvXNIkbmuor6spLq8sLS0sf5JZWcx/UpZfUFmTK+qp7hrqHRl78aLMD62w
EEMAABiHGAIw+6mlDSMN/OePTv5y0muNjTshq5d9ve9gQPidh2m//MI9d9j3
IJu9h71rG9ufzQ49evrOtYzax2LV00ENnUTM3XaY5cYnI4VpTNYz2FEhFqYV
59y6mXg9lBsbHhF86cK+2FD2hchjgTHXD8aXXhO0lncNqyZfUvOhFRZiCAAA
4xBDAGa/0Z7K/tLY9hSPKJ89jst+JsR72VJ/H6+glEROkJfbpqWLLQmxIAvm
EStCWEsdTnuF5SbWyegkIpbrzN12mOVMk38MckmjWJhal85Jij5x1N+H5e6x
abP9VtePPFjEdcsyu50+lt4pXrzSu6Ie2eSubR9aYSGGAAAwDjEEYBZ7caXa
KGsXdOQEVV6yD/nRwf6PjoSs/mzprq1ep8MS40+Fnjq2f5ePq9OWv3xj9z+/
+oRY2S7z3OQT75Xy9NfS3upe5Yv3iYybuycwy/y1tDQKsUxcLKlLLntwjX8j
OiwsLORixJmI6CBuLOe8f+TpjbEBVt4/u6x032+xOmz7mXsJgpYeAzVspMY+
sLuyEEMAABiHGAIwi5kmb37RSxvu1SV7Pjjx0QnXP3z96ceELPx46UZHr7Ne
iVlnk25fuxmfnXw52nuf71++WU8WrFrkbLv53NJT+f6363OfSvUf5J388O/8
tbRk4qL2x+eFia68iF0+x445eFz0PHcjPDkno7zygeB2cdb5yjueFwL3rnP9
ed5CL5e916LTRc1qSqKnJvLthwQxBACAcYghALMYvdSjY4SmpzKxNNYlxYP4
2JNlHxHagqX2Vl4cVmJVSFF9UWerwdBdk3z5N1enI4Sst1j6yXIv4p7own2c
WC7WTP6ID2zNCP/WX0tLUpcoTHRJP0L8PJZYb9hB7CLXBGbGClolFCUb7VL3
F1DtPH7UabajJyEse2cOJ6GkSkl1aiiZ3tw9mFmIIQAAjEMMAZi9TBrKqKAM
0pZHcfeC1obZk61f/sdnSz4lC5dbbvFxD08OfdyZ9rT7qfSZ0SipvxvL37om
aB7Z+F/LFjkeJB53XGPLblb24tsQ+D2jRqYf6VT3VVVmXrx+ap3f+nk/bXNw
9QqwPZ55NLn6fn3fxAMgmgG9vJHqLyjNvnPxbBybHXrqfHpaYTOdQfp1lOoD
S7aIIQAAjEMMAZi9jKOUvo9St4nSuNd2O3p9RByXfPrx8vVk9dEVJ66fTisr
FsuaB4cHVYPj49Km+3Fpe9ZyLIjbsq8s2UfI/swNvOpbNX14NgR+TzfSreoq
kolu3Lty2G+7k/UnFq6bv/c8Fxec3Zos6qvpH1XTxxhURo2UGu3qaXv6pKiK
zy8WFDc1dw/K9BMZRPeBJVvEEAAAxiGGAMxeehml6aSUVSUJHI6zPYsQq4XL
F6w+Sryz2fEivqhv8iDd5MZFstY8XqYvK9KS7Fhps2R7ADmSz06q59dJzdwF
mJXUfXUyUZIk+0js0e1rlq8kxNLW2Tc4Ia9ISTVpqIEP7IarqUAMAQBgHGII
wKxlUvcZh0W63qycmCC/NautyPxlf3L9enfkiqui4PwuQcfIxEEGJaV9To21
Cu9GRnus2mFBnL+1t/k5ZHFU5cHsjtw2mbk7AbORsrtEUni+OWF9xAHnVbbO
ZB7rW3fOeX5xrZrq1lMjH9gNV1OBGAIAwDjEEIBZy6Do0vYKVE/jU8KP/LDS
ZQFZ9PUKzx/O3Dpb2ne3daRpSDNxkHaQUrZQAyV5CacPbbZbMo/Y2DuuPcJ1
u9vGLe8r7x01dydgNhpuyW6/711x8ZNze2y/+WYzsfB22s2LvlfTZaAGjJTq
A7vhaioQQwAAGIcYAjBr6YaaVG1psjIO7+wB1orvCLFb4Rx4NkFQpqTaNNTQ
iztnVBJqUEh1p/Mv+7GdrAkhi1esczsbxykbSGtTNA1pzdwHmJWkdfz6JHb+
ERKwfYnNyh3EMpLlm8nLa/0wX004FYghAACMQwwBmLVUveXScm7nXbdLJ7Y6
rd5OFvyw6sfLkXeELWrquVY/qlNROpmspbQt+1r5Zb/wgzs3bGAv+Nx+jWfA
yRs5dAapeD4mGcVd/vAS0np+QzK74Dg5+cNnNqu2EcuLLN/7f4shk0Vj0o4q
FP29A+1N0t6e/iF5n8o4ojVpDB/obgeIIQAAjEMMAZi1ZG25ndkHq6IWcw46
2W/YRaxOr/O7E5f7dMBAKbQqrVpKqTrbHiRnnzrAdbL23cDe4L7faidnb9Td
BEFD05CWziDKD20/I5iagQZ+I58tOEkCf7K0dfyeWIaxfO/x8lomY8i4fmJz
NZOyv6e3tqIpL61BWF7XJhYN6jsVBjqJmLvt5oEYAgDAOMQQgFnr73fO7F1q
870XYSW6ch4nl4gNFGXUycZVnZSsqpzH4bLs3QnZ/Lm9604OK6YqNK+zuB1P
psPrDDTym26zi4JJsMdiWyc3Yslh+abx8ppfxBDdxMsNDYMdjU/zUotiOI/S
7j4oq8vu1tBJpO9De1/If0MMAQBgHGIIwKwlbciov7UrP2BBgIeNzdqfiFXI
yn3XL97Ia2ytqy4tLM1IE/B4iSeDz2/b5W3j5L/7eFDkHTqDpNX2N/erzN12
mNXkXfliwfG6eOuoQw4bHJ3nW7h94xJw4GwCL68k5WFRziNBiSA/P/N+Jj/l
zrXrOTkFxbXt+DYEMQQAgFmIIQCzlvTpw/o7/vmnrQJ2rLRZ/h1ZsO/LdScP
BXNTMxN5UZciDgQFsvYHbzse7MU5HXD5l2sZqY/qittldAYZUuEhY3idMWnt
UMNvzx75JZ7eutvRYdG8xUuXrPnGZS/Ll/OD/1m/48GcwJMXw6KiYpKuJObd
K6ipauvDsyGIIQAAzEIMAZi1pE3F9Wmh+RxWgBvLZjGLENbiJd+77djLiTxy
YIfHd0s22BG7rTZ+xwJSYvK78+oH26X4EgSmRD8q0fQLle3p2VF+xx2t7QhZ
NG/BfAsrYsla8IWTlbUDy85u+08HDoQkBKfU3S4VN/bIzd1kM0MMAQBgHGII
wKwllzSLK9LoJHIrIiTA+6yr82lv7wsXwi/fSo2/Ghl9wff8SXZg1Mnfbt4q
pTNIrVjRL8f2vDAlRs2wbqSdTiKirBvJZ44Gurp4u/+47Sdf1r7TO3yCfY8E
nTkZyL0Sz0stpDNIactgz9CYuZtsZoghAACMQwwBmLW0yiE6iUibihueFObf
z09OyM1Ie1Tw6HFFZemTwpLCzKJ8vqCsoK6+sbddqqIziEprMHeTYW4wGdR0
EtGPSvrbauoL8wTJiZm3bvP5GbzbucnpD+5lP3qYLyipqKlqmvgehM4gCvWH
vvMzYggAAOMQQwBmP5NeZ9KoDErZ2IhMPiwbGJDJFaoxrY5OHabJPwBvyWSk
y4syaHRjKpVcIRuQjchVijGd0kBpTJQetfXfEEMAABiHGAIw+40bDSadhk4i
9FpxbFSloDOImg4hxhcZ5AN9ZhgYMW6iTAY6iRh1Wu2YWkWX1phWrTPSGURn
ooyorf+GGAIAwDjEEIDZb9xkmkgiep1Bp9Pr6PWiTq830CnkRQbBUhHe3vj4
ZBIxmgwGg16v09IVZtDTtTaZQUyorf+GGAIAwDjEEAAAgNdDDAEAYBxiCAAA
wOshhgAAMA4xBAAA4PUQQwAAGIcYAgAA8HqIIQAAjEMMAQAAeD3EEAAAxiGG
AAAAvB5iCAAA4xBDAAAAXg8xBACAcYghAAAAr4cYAgDAOMQQAACA10MMAQBg
HGIIAADA6yGGAAAwDjEEAADg9RBDAAAYhxgCAADweoghAACMQwwBAAB4PcQQ
AADGIYYAAAC8HmIIAADjEEMAAABeDzEEAIBxiCEAAACvhxgCAMA4xBAAAIDX
QwwBAGAcYggAAMDrIYYAADAOMQQAAOD1EEMAABiHGAIAAPB6iCEAAIxDDAEA
AHg9xBAAAMYhhgAAALweYggAAOMQQwAAAF4PMQQAgHGIIQAAAK+HGAIAwDjE
EAAAgNdDDAEAYBxiyLQaN5nGjXqTXqvXjKlVilGFTD4yMjQ0IpXKR+Rjao3e
SFEm+jBztxMAPkw4R00RYggAAOMQQ6bVxPyuGzNpFGrF4Mhgb7+kU9zV1drS
XV8v7n42OKwY01OUYXKWBwCYeThHTRFiCAAA4xBDppVJr6Xnd4NyQCHtft7d
1N5UVVctKn1Sk59fV1Mv7pXKNRRFz/JGc7cTAD5MOEdNEWIIAADjEEOmlUE9
ohsWj/XWNpblZqRcj4rghHGvnrmcGhBTmJT3tLpjYIyidJMXGwEAZh7OUVOE
GAIAwDjEkGmlV/SN9dbIn+bkJEUGHt7ruNLeYePuFTvDbHzTjiVUZNdKVBSl
xRQPAGaCc9QUIYYAADAOMWRaaYe6FG0FA2W8uLOe61ZYEdoCK2LlSVg8Z05B
QkmXkqJe3PMAADDzcI6aIsQQAADGIYZMGNdTJjVlVIz0P++qbxUJRK31XZL+
EbmRGjNR+nfYI0av7FP31Spac9O4x71WLV9MyKcfW//B0d/CK8PjWlWq6Llm
8oYHZu67nrZeAICZvR/nqLkMMQQAgHGIIRPo+d0wTOklXbXVglvZ8YHxWbcE
wtousZ4aNEzM8m/NqJMbRp9phxuKr10IZzm4EbL+sxUrt55ZHlZ2PKP1Ycvw
i2c/mdmFZtp6AQBm9n6co+YyxBAAAMYhhkwwKuj5ndI0iR5k8k5wve28I07w
0h+I6jQUPcvL3+k6oI6iVBQla+bz0tgsDiFHlznu9YlyT2nnlvaX94wy1YMJ
09gLADCr9+McNZchhgAAMA4xZIJRTumfUZqGsoyUyP3BWxZtCfKKTL5XJhqj
unTUyDs8nDluVI7rn4+rW8sSIyNdVrkRstN27f7Aq/6C/sRGed2Ahrk+TGMv
AMDM3o9z1FyGGAIAwDjEkAnGEUrfTWlqCm8nBG/3tZ9vf2Bb8DV+oVBFdWip
4XeZ4nWD46oWo6wkh3fah2W3mBDnlet9LiZEN47m9GjaFIxmg2nrBQCY2ftx
jprLEEMAABiHGDLBKKP0nZSmKi8xxtflR0tiucPZNzohr0xJtWmooXfYI8ak
lphkQoMkPTnWz3WNNSHEeh3bL46fPkAJFZREy1wXqGnsBQCY2ftxjprLEEMA
ABg3+2OIXq1UD0sUkiZxS31NZZVAUP6kpLyyorxOVF7x+FFh1v1cPj//gaCw
srm4XdbcrxpS6d74M4wjlKGL0ooeJl31d9n9BfnCY71/zG8PK8aodt07XWnU
yzvU4jxFXcz1MB9nh9WELPzSYcehC3Gp9c0ZT8qzcvLoxt/nZ6TyH/L5xQ8L
n4pa+sVy3eCYYUz/5o+ETlsvKGp88o9Jr1aMDffK6bFoa6ivqykurywtLSx/
kllZzH9Sll9QWZMr6qnuGuodGXvxvjM81gofApyjZoFpP0chhgAAMG72xxB6
fh9ur5AI0x7fS0qIjQsM5F44z42N5ibFc6PPBZz22nOQzT52+FRwbFpoXmda
bT89y7/xZ5hGKGM3pa95dJN33HWfNbHe63L8atIjoZbqMFDD7/D4p1raMNLA
f/7o5C8nvdbYuBOyetnX+w4GhN95mPbLL9xzh33pxu9h79rG9mezQ4+evnMt
o/axWPV0UEPP8rOnFy/md/rPmKxnsKNCLEwrzrl1M/F6KDc2PCL40oV9saHs
C5HHAmOuH4wvvSZoLe8aVk2+awD3c8CHAOeoWWDaz1GIIQAAjJv9MUQhaaLn
96Z0TmLYUV+PvXZ27hvWu3tsdz/i7b599fKVCy0sCVn2ub39Tg4rpoqe5Yvb
ZW/8GSY5ZRJThjpBckKg6wE7YrffNZCXLKgyUJ0mSvYO1/xGeyr7S2PbUzyi
fPY4LvuZEO9lS/19vIJSEjlBXm6bli6mG29BFswjVoSwljqc9grLTayT0bO8
WP7m10unrRcv5nd6xpZLGsXC1Lp0TlL0iaP+Pix3j02b7be6fuTBIq5bltnt
9LH0TvHild4V9cgmN9958z4AzD04R80C036OQgwBAGDcW8aQcdPk67S0mjGF
fHhAKunpk/Q8l/RKpog+kD68p086IJMp1aM6k8YwbjD90yu4tKMDiucNA62C
qryUuzGXI/yCzh45G3A87OBJ7pnQC9HRIYm8U4F7N2+xWvQFIfZ/WcU+ELGT
3xzzRCJ8ppxym3ufT7Sm73lPs0RcKunMvnmJs8dpyyKy6DunPecu3bzfKSkR
S5p6nvdJJM+n0OZ//LDJOdEoaxd05ARVXrIP+dHB/o+OhKz+bOmurV6nwxLj
T4WeOrZ/l4+r05a/fGP3P7/6hFjZLvPc5BPvlfL019Le6l7li736//UDzNEL
jUIsExdL6pLLHlzj34gOCwsLuRhxJiI6iBvLOe8feXpjbICV988uK933W6wO
237mXoKgpWfyCi1eVgLvMZyjpnyOYnh2+H0vZuAchRgCAMC4t40h9CwzRpkU
iqGeZ+2N9cLSWmF5tbBCOEUVVROHl4oan3Z2Sob7VaYRzcRc84+fQM/vPdX8
pqzAmxcCDv90bKW1/26PqBDu3Vv55VmPC0rKM+tEKfGhPj9/u8yaEOevV3uc
iDn2oOdm3XB9/9iU21xRLawSCkXCskfCkjvCol/Dg7xdbFfMJ/NX2LrsDwq/
WiS8XSJ8VEYfIayuqKr6d23+B6bJb/v10oZ7dcmeD058dML1D19/+jEhCz9e
utHR66xXYtbZpNvXbsZnJ1+O9t7n+5dv1pMFqxY5224+t/RUvv/t+tynUv1L
b102Ry9k4qL2x+eFia68iF0+x445eFz0PHcjPDkno7zygeB2cdb5yjueFwL3
rnP9ed5CL5e916LTRc1qSqKnlHhZCby/cI6a8jmK4dnh972YgXMUYggAAOPe
MoaYtPQsQxkGpM8a6ysE+ekpuel3MtNT06coNWPi8JTsgsLq6ubedpmBnmtG
df80mw20Cuj5vSjSLnjHetsl2wnxdnTlRSWL2g1Uv1E+Oi6mqDoBPyyQ7WBH
iLs9y4/Di6ySZXWqWmWv+Jr9JW1OzUzPSE/PTr+TmH7rUnpisJ/XJuuliwgh
i5Zab/LyC05Mv3QrPfEOfUR6ZmpGxr9r8z+g5zZ6itb0VCaWxrqkeBAfe7Ls
I/oHkwVL7a28OKzEqpCi+qLOVoOhuyb58m+uTkcIWW+x9JPlXsQ90YX7OLFc
rJn8Ef86SZqjF5K6RGGiS/oR4uexxHrDDmIXuSYwM1bQKqEo2WiXur+Aaufx
o06zHT0JYdk7czgJJVVKqlNDybA9F7y/cI6a8jmK4dnh972YgXMUYggAAOPe
NoaoKeMwpe/taSp9knHrVkTYDW54XBQ3emqiuFe44b9EhMUlpjzIrWir7td3
yo0yzcREY9Iq9QqJdqCpNv+3W+H7g3dYe25x37AhYPk6nl9IQWpRV7+JkmkH
VKoGg7wgKz7E23n9IrJgg+MPAdyUm22q4j6tePQVDx2+pM3cuKgr0dFx0ZGh
0Rf8o0M8fnSz/+PiiZn448V/XOX2476Q6OMXosMi6SOiY7hXLr2izS/7LM3E
W48N0pZHcfeC1obZk61f/sdnSz4lC5dbbvFxD08OfdyZ9rT7qfSZ0SipvxvL
37omaB7Z+F/LFjkeJB53XGPLblb2vvxK4wz2wqiR6Uc61X1VlZkXr59a57d+
3k/bHFy9AmyPZx5Nrr5f3zdxc7VmQC9vpPoLSrPvXDwbx2aHnjqfnlbYTM/v
/TpKhW9D4L2Dc9Sbn6OYmR1+bybPUYghAACMe8sYYhyl5y9K29EuzMn9Neqy
t1eYz4HgQ4f8p+bQoWM+BwK8vYJCL91KfFBb8EzbOGSQjk3MB/T8PtZToWhK
y+KdO7bre9slX2zYsHuXf9zRONGN/K7KTvmoiRpT9aoHS9XilNuXT29f7T6f
WK1d63cmLuehVFevMEpfNe2+pM0Hgw8d9fcP8j+439/b3X+fk/OqP37y8f+g
p/j/9fEnX65y3rTPf6e3v+9B+gj/Y4eOHXpFm1/+Wfo+St0mSuNe2+3o9RFx
XPLpx8vXk9VHV5y4fjqtrFgsax4cHlQNjo9Lm+7Hpe1Zy7Egbsu+smQfIfsz
N/Cqb9X0vfy+6xnshW6kW9VVJBPduHflsN92J+tPLFw3f+95Li44uzVZ1FfT
P6qmjzGojBopNdrV0/b0SVEVn18sKG5q7h6U6Sfm91dewgSYs3COevNzFDOz
w+/N5DkKMQQAgHFvG0MUlF5CaZoaC/gp544Hs1iHXF33bN7sPjWbN29zdf2R
xfLwDrgccac0vV0j7NdLRicmGu1AEz2/DxRx4oL3rrNdQ4jl8nW+R+Pysgco
kYLqm3yXll7erhHnKetiEsICnR12EcJycOGEJZbUaSixnpK/6urWS9q8ac/m
re7uHu6bXd1d7dxZlsutLCwWzKOn+PkLLBZZLbdjua91dd+ymT7CfevmbZte
0eaX0MsoTSelrCpJ4HCc7VmEWC1cvmD1UeKdzY4X8UV9kwfpJndqkbXm8TJ9
WZGWZMdKmyXbA8iRfHZSPb9OavZeqPvqZKIkSfaR2KPb1yxfSY+FrbNvcEJe
kZJq0lADuOEKPkg4R735OYqZ2eH3ZvIchRgCAMC4t78pyzBMzzU9jU/KUpNv
h4beuHDhakQEd2oiIqIvXLgSGhobfys3s7yVnmU65PphDT1n6Ec6nnTlRYiu
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
5Mi81rTa3rq+UTWzj15l0PTTo53dbU8eFtfw+SWikuaWrkEZZRoxvvKm+Dv0
bivKPL8FLz8WKso6Kgo+ToghAABmN90YoqApKa1pbirkp58MjWSx9nl5+a1Z
4z01a9Zs9PLawmL5BoRdiL1ZliXWVPVR0lHT0EU70MyMGAeKOcmRO5c7LiXE
duHyoIPJgrwBulZB9068nY2SizUSgbI+MTUmwsNlGyEsF09ODK+0XkNLKFr+
qvulLznn1X5rNnh7+3qv8fL2cvJm2S60s7GZNYMZbs2cZTPbbqETy3uZl/fa
Ncwe3hvWbFz9inN+CUpGazpoZU1pKofj4cwixO7ThbOWHCQBeeyUWn5t78RO
uom1f2StAm5OECvOlmx2dZi7KYwcELKvNvDr+y3eCnVvvaz2qjTvQNLBTUsX
ujL/F44eQZGpgmIl3ayhB96T6THvtqLM81vwEqgoAItCDAEAMLvpT8rSDzOj
l+6mh+UZaTeio6+cPv1jbGz81MTGnj99+mJ0dFLK9YKcilZm3NIup4Y1zCiE
Gml/2CmIrb24Lnr3t1+7riE2bOetZ6LSy6oVdLt6fERvNN3eflb5rORi41Wf
Mwf9XJbvIp8ELNnBvXi7lhkxDupfvZbOS8757I+x5+Ljk+LPRsXHBMdHbfVb
5+4wZ+5MMvM/5zh4rvPbHRV/OCb+1Flmj/hzsefP/v6cxSP64VfcJzeqew3D
tbqe3PzEI8FLl9iRmQv+0+ur7XGLfqyNFHaK2kdMO+mVtPY5PdZadSvuvO83
m22Ix9fODt9HzUmo3pvXXtD2ikVi32ErlF2l0qJTLakrYvd4fOPoQWawvvbm
nOKXPFbTXRQ9Yu3TY4wvnkR4txX1Rr8FqCgAq4UYAgBgdm+wUpaaNigUA8+6
mxuaSkoeP3xYU1ZWMTVlZZUPH1aVlFTXNopbe4akowYmg2gMOprWPH90p+an
gOxdc0LWf2O/bAtZeHjJobSLgsZnWnqQMqiNpn16G3IeXdube3DeQT/PL1ft
Ic6xHkdyLova5BPreVKvXCv0H8+5rMZ0ytUVZfcqSm5UFCefOxK8yXHFbDLb
03FTyJFz3OKKWyUVwjJmD+akK8v+eM5G9StWBNIrOrU9ItWTlPSzB75z9ZxF
Zn+1aMd3x6+fKOu91TrSPKQx7aQdpJVP6YFSQeqxfWuc5s4gDs5uyw7Er7vV
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
tHS5tEVSmcmMG6/HRoUFnPDyOBYQcPr02QvXM1J+jDt/OuhUODsiIfzna9fL
mBHjY4miT/76i6m+/VYYNMO6ETEzbqzNvZJ2/GCEl2eA95aNW4NYu45tDowM
OnDkeHhE/MUUbkYRM2IsezrYPTRmhlaYm2UqytxQUfC2jY8bx40Go4Ey6CmG
TkdReoPBaHzxOSA+jkIMAQAwO2uLITrVMDNuHBJXNFXcFd65yeNyeVf4vGs5
PL4ov/BRdZO4s7+/rbm+uaSgISu15E7WnTwRT1ArrO1slsplOtOIcRoLAk0s
0jNGG+SDEklzaUMJv6S+pLmra1BGmcZa0/iBWuUQM27sby5pfFgkvCNMSy3I
zrxfeP9BZXXZw6LSopxiIV9UXljf0NQj7lcxI0aV1hwjXXO3wqhXM+NGalTa
11bXUCQQpfFyrt/g87O5NwrSsu7ezrt/TygqrayraTbdtWZGjAr1698ff/ss
U1HmhoqCt82UQfQ6I6WhtBqNWqNSaTRaimKCiKVnJFoJxBAAALOzthjyXww6
HcVcCGUy0+VQp/vtUkVGijJqNHqlklKrtXq9xVcxmoSR0hk1Kr1SNjYikw/L
BgZkcoVqTKt78byzFQxvp8ZoYFpC6zW6MZVKrpANyEbkKsWYTqmnNUaaek+a
gYqyIh9ERX1gjAaKySB6jVKjUioVSplMqVSpNTr9e1Zabw1iCACA2VltDDHq
meGghhk3UlotZTD8dqmicYPBqGMGYxrDxKwBi69iNIlxg96o0zDjRma4NTaq
UjAjRjUzZHzfbjCOG5n/D2bcaNBptWNqFdOKMa1aZ2BGjDojbXhPmoGKsiIf
REV9GPRquWZYMiqtb6srLxLcS+NlZd7KLsjPKSrKKyi4n3m7NI1fXVja3tw1
Yj0fDloEYggAgNlZbQwZNxqZcaNBpzMwfxqNv12qiPmSadxIUUaD4Q9fsjYT
p6o3Ujq9TkfpmCGXab61qT3v13Tr8fGJcaPBNJKnKJ2WaYyeYpo1MWI0vifN
QEVZkQ+ioj4MTAYZET/oq7qae+Xc8YNHvDx3+20PCjsckpAQGhZ23M/vrBc7
6Uj03czCdut5VMoiEEMAAMzOamMIAAC8baPSeiaDiLMOJARvcrN3JcT2k08+
d3a29/V1cnZe9sknawnxdWYlcbjV1rNwnEUghgAAmB1iCADAx8ZIqQxj/ZS8
82l5Zg43IiF4xd5t3qvWbJvvFrh66/6QsNCkpIjQfYEbPL5znO31rWd4QMgN
DrflZqG0oUupnngzqHU+PPX2IIYAAJgdYggAwMeGySC6wUaNpFDIP300cK2b
/Wer1qzZvO+kf0LemauCmwJhdbXoztULP4TtjFzt9P1K3289TzmzMg9HV+WU
SmU0PTqRRD4qiCEAAGaHGAIA8LGh5J1MBlHWc1Njdni42BFC5rt5+Sek8cT6
B31GyajpQfSBpoLmG3uLI20jVy91nL2TEM5SdmYSv0VK00wSUVu6Ce8YYggA
gNkhhgAAfGxGe2p6K5Jbb+2IP7DKzXkRmTHHYXVgWEq+sM/QIB/v15iWCVB0
lncXxTVd/vbMrrWudusIWefsERuV8rBKrm8fM8g+soWVEUMAAMwOMQQA4GMz
0HK3OSvkQbRdpO8ix0XLic06V5+4szfLn4yO92jGFXpTDNEMPJE/udVXdPzH
I9uXOS4hZI79koD9F7JvS9TVg5R07ON6OgQxBADA7BBDAAA+Nt3V/LIkdrov
CfSas8BpHbHlsIIyuYIWGU2rfn3uw6iSGger9F1ZaReCvdztCSHzXDx8YlIT
65UCiUYs/7jecY8YAgBgdoghAAAfG0k5/0Ecm7eW+K/8z/msbcT9hxUn7l15
0MFkEM3E6zsZ45q+cXmDoe9e1o9hPsu+mkWI02LWtijumSrZnXbV0+GP6yF1
xBAAALNDDAEA+Nh0lvALOexLy8iOVQvsNgQR3xteSeXXanp0ExnkxVMf47qh
8bHW8ZGyuynH97MW2RHCclrmdzT5aEn/zRbFk0GNhdvwbiGGAACYHWIIAMDH
RiziCyLYiU7EZ7XDvF1hJFLIvtHAb+r/3U4GOU1JaE19KS+G4+nCImS9w9Kd
YUkHhNKrDbL6/o9rrSzEEAAAs0MMAQD42LTk828Hsk/NJlvdHRf6Rc48Wbwl
ozmreeB3OxlGaKqL1tSV8k5xPL9mYsjqv7tt3HvO91Z7UkV/dc+ohc7dMhBD
AADMDjEEAOBj05jFv76FfXgm+W7hIhef47NjygOzW/OfDv1uJ1MM6aQ1taW8
6BcxxMPO1XPnmZUpTadF3Q87FRY6d8tADAEAMDvEEACAj00tn5/CZgcQsmmu
84rNHKe4mojcDlGr7Hc7GWQ01UFrakp5HI6nMxND3Oc6u7xq5w8dYggAgNlN
L4ZotVqFQjEwMNDd3d3W1tYI8CumHpiqYGqDqRCmTt5NGaNWP2DWVlEfhmo+
P5HN9iFk3Vxnj80cl7iaY7kdRYghr4YYAgBgdo3TiiHMeODZs2dNTU1lZWUF
BQV8gF8x9cBUBVMbTIUwdfJuyhi1+gGztor6MJTz+XFs9lpC2HOdWZs57nE1
J3M7HiCGvBpiCACA2U0vhgwMDDCjApFIlJ6ezvTJEQC/YuqBqQqmNpgKYerk
3ZQxavUDZm0V9WEo4fOj2WwmWbAmYggrriY6t6MEMeTVEEMAAMxuejFkaGio
ra2tvLw8JyfnypUrsQC/YuqBqQqmNpgKYerk3ZQxavUDZm0V9WGoyuAnbmT7
zCBr/76Y5RvlHFcVmdte1Dr8u53+IYYs/0+X5dtilv1Qz7knKWmXW+jcLQMx
BADA7KYXQ5gOuaurq66uTiQSZWZmpgD8iqkHpiqY2mAqhKmTd1PGqNUPmLVV
1Ieh4Q7/mh/7kA3x+Xoxa+fJBXGVh3LFwn8WQ7y+cF21K3ZtanNckbS86+Oa
IIcYAgBgdtOLIUqlUiqVtrS0VFVVCYXCTIBfMfXAVAVTG0yFMHXybsoYtfoB
s7aK+jC0FvD///bu9qupK9Hj+P4PfHPvvPC+YK1Ovasdr9TxDnUYRIRJQURN
eIiPaLUtqIiIQFFEARGRWFQeKoUWDWJRDCogghCNoII8gxAQhQhGiBAeQhJC
Hk4Szj1gZ9bcrqWrQ4+C8Pu84A1nsfZZa784X87Ze5eE8ZNtSTDXhRscb5tc
E1bSVdb5qw17f50hG+3dt4ek+ufJMqoHGnpxbggyBADgd5lehuj1+pGREeap
QCaTSaXSeoB/YOYDMyuYucHMEGaevJ9pjLk6h822GTU3dFeIJLH8TA4J8V6x
emeETXDJ7qymm4/7KSY+aNr6+iLzMG3spHU19y+diPV04RDCX+nhfyT9oLj3
55aRloHxmb2F9wwZAgDAuulliNlsZp4HtFot82CgVCr7AP6BmQ/MrGDmBjND
mHnyfqYx5uocNttm1NwgrxFVJvMvbyFhGz539t63gHvJ99QDUZXcQNOmqRKZ
RA3S+g5a80ByMTaSt8qeEO+/r98Xf/5kzVB+l7ZjZH5tnowMAQBg3fQyBAAA
PlyKZlF9Fr8wmIRvWerA2Ulsk3mhxdniTi1NMyVCvb7IpKR1UlolEQujQrlO
toR4uvG+TcpO79CKFQaZhprZW3jPkCEAAKxDhgAAzDfDnXc6Sw5VJ9md2Mtx
4XgRm53u/udSbtR1jk/0GyfGzBPMNZS6a1xeqm75Pi8x5BtXng1ZwlsbHJte
VNSnbxyhFHrLTN/Ee4UMAQBgHTIEAGC+GVM0DtRnygoDUiM3un/BIQuWrtoU
Fptd+nDQ0qGdGDROZsj4q8ahpkx5ccBPEX78FTsWkK1cXtLZi4+ateYevWWU
ss70TbxXyBAAANYhQwAA5htK3WOQl2tbhdmJATxXO0KI/RrvkLTcvBfm6iFr
r24yMdSyCrk4pjXdOdFvs+uyA4QI1vMLMkVPB2laQ9Pza2UIMgQA4B1AhgAA
zDeWcaVpqI0pkbuiM7Ehvm4Oizds3vLNwYSQtNvJIklh+cPm1lpxftalUwcT
/daFbgvawj+7am1+ZEJdSWUf0yDj/1w/Mm8gQwAAWIcMAQCYb6yUjikRSt3z
tOZmkTAuKXxjyK4dGzbvsV8TsnXP0aiTCVmXU2KjY77ZHOi6bMsW/vF9B6/F
ZrRfvdPb0q01TjXI/PokCxkCAPAOIEMAAOYtjaJdUX+tozA2KdzfzWENIbaL
PnH08FwXHOHr4fnlok++JsR/1dofYjPqHijMHSrroH6+9ccvkCEAAKxDhgDM
fhNW64SFslJGyjCu12nGNCr16Ojw8KhSqR5Vj+sN1Osj5yZmepzwwdGP9I7I
qpkSKb6UfuLwcb7X/sDAiOPxcT9mnYk9mbw36Jw3PyM6QZx3p4tpkN4xq8Y0
T2cZMgQAgHXIEIDZb7JBTONWg0avGRod6htQdMt7ejqfvZBK5S9eDo1oxima
Ns+/72Tg96P0GqZENIr2rsd1D8QSUU5hUUHJ3bt3Kqsr7tyrLLxVkytquFf5
vL1bNaifbBCjBRmCDAEAYAcyBGD2s1JGpkHM2kGN8sWrFx2yjsbWpubqR48l
ktbHUnmfUv36yLn5dZADsMtC0ZSBNmhNOq1Oo1WptFqd3mAyv85bFC4yBACA
dcgQgNnPrB81jcjH+1raa8qK8i6mJgkSU346kZYflX7/svhJ0/PBcZo2Tb0Q
AZgmq4U2m5gSsRgNRr1BpzMYjBRlsVjxvd8UZAgAAOuQIQCzH6XpH+97rH5S
Wno5OebgXnc3juuG3S5+iU6hBZHZdbdbFLqpcxyQITB9E9bJErFQVjNlpiiT
iaLMTIRYXzcIMgQZAgDAOmQIwOxnHO7RdJUP1ggz4wPWu0weNkcW2hG7AMIV
8gTl2VU9Wpo2zL+jHADeG2QIAADrkCEAsx+l7df3t2g6ywpSjgStdlxCyKcf
O/zR/ZBNUJH/hcb85leGqY+ysDYE4B1BhgAAsA4ZAjD7WUxq89hL40hb5YXT
Z7muWwnx/MzFbfsJx8SaI0Wdd5+NvF6fjnXEAO8IMgQAgHXIEIAPgYmmdTSt
eioSFvC5AkIO27vvDUn1zZOlVA/U9o7N9PAA5jhkCAAA65AhALPfhEU7Qb2a
0HfW5CQne63eSojfqnX7Y346VDGQ065uHTTM9AAB5jhkCAAA65AhALPfhGlo
QvfMoqoqFcaFcJ2XEMJz8ww5k32ufay019ClwRZZAO8WMgQAgHXIEIDZz6pX
WFX1ZkVhbka491oHQojDen54pqhwkK7X0ArjTI8PYK5DhgAAsA4Z8u+i9Fr9
iEKj6JA/kz5uaKyoqH1UVdtQV9vaXFv38N79kltlIpHkTsX9hqeVMtXTAd2w
zjTTQ4YPHqV+rpeLNa3pFxNDeK4ehCz6m+vOb09n5kufFj2qLSkVM7Pulqgo
X3RXJKq8e/9J87MBudo0NG4ep7BsHYAFyBAAANYhQ/5dTIOMyOoU9QUPb17O
zsiMiUk5/V1KxrmUy1kp505GxQXtCePzIw8ej80oOCXuLmgZYEpkpocMHzy9
sm20TfTqXvSP0UFrnXwJ8bBfGRgWdfb63YIff0w5eTCUmXV7+Lu+5B/i808d
jrt+oajloVz3ZMjAlMhMjx1gLkCGAACwDhny79IoOpgG6SgU5CQeDvXf6+zs
6+Pp67/DNyLYd4eHo9siG1tC7JdxOH4CbnojUyKVMtVMDxk+eGO9DQPVGbI8
/9SQPe72+wgJtl9+KCToWF6O4FjQ1o3LlzCzzoYsXEDsCOEud40LSizLaVUx
JSJX42UcAAuQIQAArEOG/EbGsUHNq7bBzopGcd6N9LSk8GPxEfFRRxLDolNO
nDp97lxCjvB4zN5NW+wW/4UQzl9X8w8k+Ymepj9S1L/UzvTY4cM1MXUYiEUl
q3heeqzhe07C166cP7sT4vHZ8l3bg+ISc7KOnzoeuX9XiPeaLX/9u/N/rfiE
2K2yD9gYkhWU9+R8dV9Tn/b1eSITM30nAB80ZAgAAOuQIb8R0yC9TaKOkpgr
p6MOfhPp5nBot39qQsqNq5LakoflVbXFrc15WadC9n1h70AIb6WH/9H0yDu9
V1pHpAPjMz12+HAxAWGmaUrZdrM1N+DO0Y+Oev9x5acfE7Lo4+Ub3IPig3JK
4i9fu3Al63Zu2rngwNC//t2TLFy9mLdq08nlxyWHrknLniipqT+BJSIAvwcy
BACAdciQ32iws4JpkAfJzrE7PVct3UFIsLu3MDW3WWamByzqsQk5TbdWiBJj
+K7OhPhyuOECYXKjqqRb16nCVzEwbRamQWja0NuQU53hledPQjjE/iPCWLic
Yxck4OY0JjyQPujuNJtfPM5N+9l7TQQhnjbLP3EMIr45XikPc2rlhqk/YZnp
OwH4oCFDAABYhwx5O6tRS2kUxsGOFsnPV8/uj93pELDF18cnynG9MDyhPP9B
z4CVVhkHdbo2s7q8JCshmOe5mCz0cf8qKiXvSpeust8oH8MaYZguq4G2aGiz
8tm9zJvH1iVyyPa//cdnSz8lixxtt4T4ns099bC74MmLJ8qXFotCeiNDtH3t
sQVkw//YL3YPI/7XvTNqrjT04W0IwO+HDAEAYB0y5O2YBhnvrdN0FJQIT0bu
2rZq6V98fHbvOpR5OLP5kqSnoVs9ZqXHdX36oWq9PO9aWtwOD98/ELt168JP
ZJbeVZqkGovSgAdAmC7LGE310/qu5oKUC7vdgz4i7ks//djRk3gcdjl6Ma6g
plKuejo0MqQbmphQdtzKLNizTmBDttqvsOVHkP3FPsKmq4/7sTYE4PdDhgAA
sA4Z8nbGwQ6mQQYfCDJj965ftZYQW8f1oYczxbcH6WYN3T91bByllhnkYm1r
enZiDM91FyFcVy9BYk5Vq4GWU7QaX8PAtFEq2tBNaxursgUCHodLiN0ix4Ue
h0nwbX5Ws6i5f+oiE03raFrVKRYWh3KTbclON6elO6JIhIR/WSpqVc7wLQDM
CcgQAADWIUPewPr6s/zR5496xEnNP2w9tX/zF26biA2f882ZhLzqBg39XD8x
arZOvjB5Wfey8oe2y35nDu9xXR9IPgr2CBD+cLOZaZAhMz2OlyEwXVZ9v2Wk
2dRXUpp+LHythx35g/3/eq/cnezyU3OspKfi+ejkRWYtbXxFj3fW30g+5796
pw3hfcFx2pewJLUh7Pbzsi7sFw3AAmQIAADrkCFvYJn6J7PhVdOtxvPBRYFL
Dm1b7bDua+J41CMy9wdx20sjPURZ9NbJa/qlxU1XwkoOLzu8x2vFhgOEk8Q7
VnyxokttmWwQCl/DwHSZNT3Gvgrdk6y8sxFfuXktJItXugR8deJqfHX/jc7R
jmHD5EXGIVr7jB6sEmfHfbvJeekC4sRxXxeRsvVGV0ptf23f2EzfBMBcgAwB
AGAdMuQNJrcnomnt84pscQwv3Zn4rVm+zPtXuw+ZLbR+8pqqbLGAl84lfhsd
lm0PJ/6F/Ix6UYNipm8BPnim4Q5dV4GqRiCMP8B12UyIswsvJj67okZLdxno
YWrqIp2CHqqnXxSK0sL5axwIIUtc1m+NzxTUDBZ0aTqGjTN8DwBzAjIEAIB1
yJA3+CVDZPeyy47w0hzInrUOK7YdXBB0c9uF+mvNCoqe0Gl6RnsrlO3ZkqzA
5IDP/ewIb429w86QRQfzvsooF96Rdsr6FQOjmjED1gjD9Oj6apW1Kd03tn5/
dPsajx1k4Verv05Lvl7/TE+/MlJjJh1tUqmeVXfdvlCbFn42zM/Hh79wGWdt
QFT0pVKmQepejSvGqJm+CYC5ABkCAMA6ZMgb/JIhXXezbx/ipf6F7Fu36gv/
GJvoit2itqL2AQttGe19KK8+Jc3jXYj8fPeahcsWEgen5S5fB3mczAlKL0oR
3S8RNze29PQOjGLHVJgeVVdZ9+2wxtQlgrA1HJ9dxC5uffj1zLIng2ZaY9QZ
9Upa1911J/f28QMpaxxCffg+vvvt/AR7U29kV7R1DBuZBtGaMO8AWIAMAQBg
HTLkDX7JkE5xdnEoL9mWBHM53GCBbXJjaLFM3DnMhIWyPVea5y2JJVEbidPi
yRPlFi2z8/ALCE4XRqZfiU/PT06/XSRubn/ej/PjYHqUrSLpZb4kgkTtXe60
LYhwc7wFD3Or5EzVWkyqCV03rWqsFQpSuBxfQjYt43j7CbjpjafE3ZUyrEwH
YBMyBACAdciQN/hlibq8Kv/Bd/6XPG0ObnTx2Opns1OwLuLHIynXRCLJ9Uup
Bef3FKU5xe/506YV/7l4Afn8z0tXee/w+PbsnlM/nxSKc4qb7zf2dL/C2xCY
JmVbkfTqLknUwih/J6d13xC7BLfAi2cuids7W5uq71cXFVQIhTnRsd99uSvY
ac2h3UeOJV9nGqSgZeDpgG6mxw4wpyBDAABYhwx5g1827O1vvdt06UjJt45R
253c3FwWLOX894pNK9338vnRBw5Enz4ddfVq1JlIn5B1f9poQ1w/+9PnzvxF
njEbjmQnXKkqa+l/LB99pTZibQhMj/LJXen1Q5I4u6idbk6Om8nCwL+tj/42
NiW/OEeY+n3SgWMx3P2xXx6JDRLERaX9eKEo/15rpUzFNMiwzjTTYweYU5Ah
AACsQ4a83bCstkucUpPuG+/n6LLMZvLTK/IHQhYT4mznFBAQ9b1QIjl3Jipx
m1OsLdlou2ixrQexDeYECQU3mhtVdLeOVuF5EKZL2VEpLTglEXCjtnKdlnAJ
4S5Zum3rzr2C5IgDO/03L/VxJs7bncIjo/LSJS/E0iGZEi9BAN4JZAgAAOuQ
IW83NtD5qqWEKZHrPxyJDvXz4nK9PL/08g724seER2f+dLW0XCotvZlbmHRE
tJ93Onjv/pATXqHCYxfK82t7mAYZMNA680zfA3yw1Iqn8roCpkSuJiVEBcd7
8+KCg0+fPpt2NT/rp+Rzp0O/i+bHpEb/fOVqNdMgLXLNgBrb8wK8E8gQAADW
IUPezqQbYUpkWFbbXntHcut6jlCYc0mUc6U4R1RRWt7U0C7rUSq7Olo7Ksuk
hdmVtwpv3a7IETdLmns6FGqVabJBsFMRTJtRO8yUiLKjsu3RfcktSW52WVHB
vfJ7D+saqh/dr7pf/EAiqqgpb5W298mUOqZBdEZEL8A7gQwBAGAdMuQ3sphM
lE5nUKkMzE+T6V83v7JSlNVgMGu1lF5vNJuxLxawzkqZrAadWasaH1WpR1SD
gyq1RjduNL3e+gClC/CuIUMAAFiHDPmNrGYmMAxMiVBGI2Wx/OvmVxMWi9XE
PCUaLBRl/v+/AmDFhMVsNRmYEjGN68bHdBqmQfRMhFis2P0A4L1AhgAAsA4Z
8htNWK1MiVhMJgvz02r9182vmF9NlghFWS2WX/0KgBVTc8xspUxmk4kymYxG
E5O8kxNxaqZhsgG8a8gQAADWIUMAAADeDhkCAMA6ZAgAAMDbIUMAAFiHDAEA
AHg7ZAgAAOuQIQAAAG+HDAEAYN0/MyQiIiIkJCQwMPD8+fNNTU0zPS4AAIDZ
QqVSPX/+vKGhITU1ddOmTcgQmBH/B6rSTH0=
    "], {{0, 375}, {1069, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{361.9000000000001, Automatic},
  ImageSizeRaw->{1069, 375},
  PlotRange->{{0, 1069}, {0, 375}}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
+FCfn79dZk2I89erPU7EHHvQc7NuuL5/7OU/cWKtNUaZFIqhnmftjfXC0lph
ebWwQjhFFVUTh5eKGp92dkqG+1WmEc3EiusVzTdN3j+ilzbcq0v2fHDioxOu
f/j6048JWfjx0o2OXme9ErPOJt2+djM+O/lytPc+3798s54sWLXI2XbzuaWn
8v1v1+c+lepfejP8S3pRUS2sEgpFwrJHwpI7wqJfw4O8XWxXzCfzV9i67A8K
v1okvF0ifFRGHyGsrqiqevNeyMRF7Y/PCxNdeRG7fI4dc/C46HnuRnhyTkZ5
5QPB7eKs85V3PC8E7l3n+vO8hV4ue69Fp4ua1ZRETyln08tKZqSipn0sZqSi
pv33YgYqCjEEAIBxiCHwgRhoFdArxqJIu+Ad622XbCfE29GVF5UsajdQ/Ub5
6LiYouoE/LBAtoMdIe72LD8OL7JKltWpapW94sYNk5Zea1GGAemzxvoKQX56
Sm76ncz01PQpSs2YODwlu6Cwurq5t11moFdco7pXXZylV0v0ok/TU5lYGuuS
4kF87MmyjwhtwVJ7Ky8OK7EqpKi+qLPVYOiuSb78m6vTEULWWyz9ZLkXcU90
4T5OLBdrJn/Evy67XtKL1Mz0jPT07PQ7iem3LqUnBvt5bbJeuoj+rEVLrTd5
+QUnpl+6lZ54hz4iPTM1I+PNeyGpSxQmuqQfIX4eS6w37CB2kWsCM2MFrRKK
ko12qfsLqHYeP+o029GTEJa9M4eTUFKlpDo1lGw2bc81IxU17WMxIxU17b8X
M1BRiCEAAIxDDIH3m0mr1Csk2oGm2vzfboXvD95h7bnFfcOGgOXreH4hBalF
Xf0mSqYdUKkaDPKCrPgQb+f1i8iCDY4/BHBTbrapivu04tFXPMZqUlPGYUrf
29NU+iTj1q2IsBvc8LgobvTURHGvcMN/iQiLS0x5kFvRVt2v75QbZZpXLLdM
mon3aBukLY/i7gWtDbMnW7/8j8+WfEoWLrfc4uMenhz6uDPtafdT6TOjUVJ/
N5a/dU3QPLLxv5YtcjxIPO64xpbdrOx9+bXrl/SCGxd1JTo6LjoyNPqCf3SI
x49u9n9cPLFC/XjxH1e5/bgvJPr4heiwSPqI6BjulUtT7oVRI9OPdKr7qioz
L14/tc5v/byftjm4egXYHs88mlx9v75v4nZ9zYBe3kj1F5Rm37l4No7NDj11
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
G3YRq9Pr/O7E5T4dMFAKrUqrllKqzrYHydmnDnCdrH03sDe477faydkbdTdB
0NA0pKVXjMq32GTKOEIZuiitSJAUH+jiTS99vdYHxv0mqBij2nXU8Cs2nX2N
gQZ+I58tOEkCf7K0dfyeWIaxfO/x8lomF40Tt/LQ/4+V/T29tRVNeWkNwvK6
NrFoUN+pMNDrxjf+MOaZtaKYHgvzVBTTZrKiEEMAABiHGALvqb8uGlvzEjJ9
nSMtiTfLnuXNsYys8s1sz2sdopeB0sbk+hTX/GASsInYTLwRjiz83Gr1Tk/v
GN6xmJtnY1IjY7Iz8kSNHX0vf03bDPr7zSd7l9p870VYia6cx8klYnr5adTJ
xlWdlKyqnMfhsuzdCdn8ub3rTg4rpio0r7O4/RXPEU+FUUbpOylNlSCRF+iy
f2Lp6xx49V/u23kTA438ptvsomAS7LHY1smNWHJYvmm8vOYXi0bdxP9gw2BH
49O81KIYzqO0uw/K6rK7NfS6sW82vC/EvBXF9FiYp6KYNpMVhRgCAMA4xBB4
T/31gWJxSWrReY8b6y0Ob1qx2m2nxQ7O2iO/HOfe5vPz79yISvt1T8Zlm7N7
/nPzV//vonnkz39cYuu6ffWh8D2hv53j5SVmigqrujqfm//bEGlDRv2tXfkB
CwI8bGzW/kSsQlbuu37xRl5ja111aWFpRpqAx0s8GXx+2y5vGyf/3ceDIu/Q
K8a02v7mftXbf6pxhNJ3URpRYeL1Uy6+DsThgPOpawmFFUqqXUMNv/nSV96V
LxYcr4u3jjrksMHReb6F2zcuAQfOJvDySlIeFuU8EpQI8vMz72fyU+5cu56T
U1Bc2z6bvg0xa0UxPRbmqSimzWRFIYYAADAOMQTeU3/dXrWv7mH1jeNZh5YH
bLVZuXLFvCX2/99Xm7923Mtmnzxw4OSFCwG3bgVcPLbBZ+1/brIgDp/955/t
2AvXB248nhBysyS3tq9GPPJcrjX7syHSpw/r7/jnn7YK2LHSZvl3ZMG+L9ed
PBTMTc1M5EVdijgQFMjaH7zteLAX53TA5V+uZaQ+qitul9ErxiHVOzynO7H0
7aY0NY8TfzvrctiJOB1yPhuf8FiopDreauk7Jq0davjt2SO/xNNbdzs6LJq3
eOmSNd+47GX5cn7wP+t3PJgTePJiWFRUTNKVxLx7BTVVbX2z6dkQs1YU02Nh
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
EStCWEsdTnuF5SbWyegkIpbrzN12mOVMk38MckmjWJhal85Jij5x1N+H5e6x
abP9VtePPFjEdcsyu50+lt4pXrzSu6Ie2eSubR9aYSGGAAAwDjEEYBZ7caXa
KGsXdOQEVV6yD/nRwf6PjoSs/mzprq1ep8MS40+Fnjq2f5ePq9OWv3xj9z+/
+oRY2S7z3OQT75Xy9NfS3upe5Yv3iYybuycwy/y1tDQKsUxcLKlLLntwjX8j
OiwsLORixJmI6CBuLOe8f+TpjbEBVt4/u6x032+xOmz7mXsJgpYeAzVspMY+
sLuyEEMAABiHGAIwi5kmb37RSxvu1SV7Pjjx0QnXP3z96ceELPx46UZHr7Ne
iVlnk25fuxmfnXw52nuf71++WU8WrFrkbLv53NJT+f6363OfSvUf5J388O/8
tbRk4qL2x+eFia68iF0+x445eFz0PHcjPDkno7zygeB2cdb5yjueFwL3rnP9
ed5CL5e916LTRc1qSqKnJvLthwQxBACAcYghALMYvdSjY4SmpzKxNNYlxYP4
2JNlHxHagqX2Vl4cVmJVSFF9UWerwdBdk3z5N1enI4Sst1j6yXIv4p7own2c
WC7WTP6ID2zNCP/WX0tLUpcoTHRJP0L8PJZYb9hB7CLXBGbGClolFCUb7VL3
F1DtPH7UabajJyEse2cOJ6GkSkl1aiiZ3tw9mFmIIQAAjEMMAZi9TBrKqKAM
0pZHcfeC1obZk61f/sdnSz4lC5dbbvFxD08OfdyZ9rT7qfSZ0SipvxvL37om
aB7Z+F/LFjkeJB53XGPLblb24tsQ+D2jRqYf6VT3VVVmXrx+ap3f+nk/bXNw
9QqwPZ55NLn6fn3fxAMgmgG9vJHqLyjNvnPxbBybHXrqfHpaYTOdQfp1lOoD
S7aIIQAAjEMMAZi9jKOUvo9St4nSuNd2O3p9RByXfPrx8vVk9dEVJ66fTisr
FsuaB4cHVYPj49Km+3Fpe9ZyLIjbsq8s2UfI/swNvOpbNX14NgR+TzfSreoq
kolu3Lty2G+7k/UnFq6bv/c8Fxec3Zos6qvpH1XTxxhURo2UGu3qaXv6pKiK
zy8WFDc1dw/K9BMZRPeBJVvEEAAAxiGGAMxeehml6aSUVSUJHI6zPYsQq4XL
F6w+Sryz2fEivqhv8iDd5MZFstY8XqYvK9KS7Fhps2R7ADmSz06q59dJzdwF
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
lphkQoMkPTnWz3WNNSHEeh3bL46fPkAJFZREy1wXqGnsBQCY2ftxjprLEEMA
ABg3+2OIXq1UD0sUkiZxS31NZZVAUP6kpLyyorxOVF7x+FFh1v1cPj//gaCw
srm4XdbcrxpS6d74M4wjlKGL0ooeJl31d9n9BfnCY71/zG8PK8aodt07XWnU
yzvU4jxFXcz1MB9nh9WELPzSYcehC3Gp9c0ZT8qzcvLoxt/nZ6TyH/L5xQ8L
n4pa+sVy3eCYYUz/5o+ETlsvKGp88o9Jr1aMDffK6bFoa6ivqykurywtLSx/
kllZzH9Sll9QWZMr6qnuGuodGXvxvjM81gofApyjZoFpP0chhgAAMG72xxB6
fh9ur5AI0x7fS0qIjQsM5F44z42N5ibFc6PPBZz22nOQzT52+FRwbFpoXmda
bT89y7/xZ5hGKGM3pa95dJN33HWfNbHe63L8atIjoZbqMFDD7/D4p1raMNLA
f/7o5C8nvdbYuBOyetnX+w4GhN95mPbLL9xzh33pxu9h79rG9mezQ4+evnMt
o/axWPV0UEPP8rOnFy/md/rPmKxnsKNCLEwrzrl1M/F6KDc2PCL40oV9saHs
C5HHAmOuH4wvvSZoLe8aVk2+awD3c8CHAOeoWWDaz1GIIQAAjJv9MUQhaaLn
96Z0TmLYUV+PvXZ27hvWu3tsdz/i7b599fKVCy0sCVn2ub39Tg4rpoqe5Yvb
ZW/8GSY5ZRJThjpBckKg6wE7YrffNZCXLKgyUJ0mSvYO1/xGeyr7S2PbUzyi
fPY4LvuZEO9lS/19vIJSEjlBXm6bli6mG29BFswjVoSwljqc9grLTayT0bO8
WP7m10unrRcv5nd6xpZLGsXC1Lp0TlL0iaP+Pix3j02b7be6fuTBIq5bltnt
9LH0TvHild4V9cgmN9958z4AzD04R80C036OQgwBAGDcW8aQcdPk67S0mjGF
fHhAKunpk/Q8l/RKpog+kD68p086IJMp1aM6k8YwbjD90yu4tKMDiucNA62C
qryUuzGXI/yCzh45G3A87OBJ7pnQC9HRIYm8U4F7N2+xWvQFIfZ/WcU+ELGT
3xzzRCJ8ppxym3ufT7Sm73lPs0RcKunMvnmJs8dpyyKy6DunPecu3bzfKSkR
S5p6nvdJJM+n0OZ//LDJOdEoaxd05ARVXrIP+dHB/o+OhKz+bOmurV6nwxLj
T4WeOrZ/l4+r05a/fGP3P7/6hFjZLvPc5BPvlfL019Le6l7li736//UDzNEL
jUIsExdL6pLLHlzj34gOCwsLuRhxJiI6iBvLOe8feXpjbICV988uK933W6wO
237mXoKgpWfyCi1eVgLvMZyjpnyOYnh2+H0vZuAchRgCAMC4t40h9CwzRpkU
iqGeZ+2N9cLSWmF5tbBCOEUVVROHl4oan3Z2Sob7VaYRzcRc84+fQM/vPdX8
pqzAmxcCDv90bKW1/26PqBDu3Vv55VmPC0rKM+tEKfGhPj9/u8yaEOevV3uc
iDn2oOdm3XB9/9iU21xRLawSCkXCskfCkjvCol/Dg7xdbFfMJ/NX2LrsDwq/
WiS8XSJ8VEYfIayuqKr6d23+B6bJb/v10oZ7dcmeD058dML1D19/+jEhCz9e
utHR66xXYtbZpNvXbsZnJ1+O9t7n+5dv1pMFqxY5224+t/RUvv/t+tynUv1L
b102Ry9k4qL2x+eFia68iF0+x445eFz0PHcjPDkno7zygeB2cdb5yjueFwL3
rnP9ed5CL5e916LTRc1qSqKnlHhZCby/cI6a8jmK4dnh972YgXMUYggAAOPe
MoaYtPQsQxkGpM8a6ysE+ekpuel3MtNT06coNWPi8JTsgsLq6ubedpmBnmtG
df80mw20Cuj5vSjSLnjHetsl2wnxdnTlRSWL2g1Uv1E+Oi6mqDoBPyyQ7WBH
iLs9y4/Di6ySZXWqWmWv+Jr9JW1OzUzPSE/PTr+TmH7rUnpisJ/XJuuliwgh
i5Zab/LyC05Mv3QrPfEOfUR6ZmpGxr9r8z+g5zZ6itb0VCaWxrqkeBAfe7Ls
I/oHkwVL7a28OKzEqpCi+qLOVoOhuyb58m+uTkcIWW+x9JPlXsQ90YX7OLFc
rJn8Ef86SZqjF5K6RGGiS/oR4uexxHrDDmIXuSYwM1bQKqEo2WiXur+Aaufx
o06zHT0JYdk7czgJJVVKqlNDybA9F7y/cI6a8jmK4dnh972YgXMUYggAAOPe
NoaoKeMwpe/taSp9knHrVkTYDW54XBQ3emqiuFe44b9EhMUlpjzIrWir7td3
yo0yzcREY9Iq9QqJdqCpNv+3W+H7g3dYe25x37AhYPk6nl9IQWpRV7+JkmkH
VKoGg7wgKz7E23n9IrJgg+MPAdyUm22q4j6tePQVDx2+pM3cuKgr0dFx0ZGh
0Rf8o0M8fnSz/+PiiZn448V/XOX2476Q6OMXosMi6SOiY7hXLr2izS/7LM3E
W48N0pZHcfeC1obZk61f/sdnSz4lC5dbbvFxD08OfdyZ9rT7qfSZ0SipvxvL
37omaB7Z+F/LFjkeJB53XGPLblb2vvxK4wz2wqiR6Uc61X1VlZkXr59a57d+
3k/bHFy9AmyPZx5Nrr5f3zdxc7VmQC9vpPoLSrPvXDwbx2aHnjqfnlbYTM/v
/TpKhW9D4L2Dc9Sbn6OYmR1+bybPUYghAACMe8sYYhyl5y9K29EuzMn9Neqy
t1eYz4HgQ4f8p+bQoWM+BwK8vYJCL91KfFBb8EzbOGSQjk3MB/T8PtZToWhK
y+KdO7bre9slX2zYsHuXf9zRONGN/K7KTvmoiRpT9aoHS9XilNuXT29f7T6f
WK1d63cmLuehVFevMEpfNe2+pM0Hgw8d9fcP8j+439/b3X+fk/OqP37y8f+g
p/j/9fEnX65y3rTPf6e3v+9B+gj/Y4eOHXpFm1/+Wfo+St0mSuNe2+3o9RFx
XPLpx8vXk9VHV5y4fjqtrFgsax4cHlQNjo9Lm+7Hpe1Zy7Egbsu+smQfIfsz
N/Cqb9X0vfy+6xnshW6kW9VVJBPduHflsN92J+tPLFw3f+95Li44uzVZ1FfT
P6qmjzGojBopNdrV0/b0SVEVn18sKG5q7h6U6Sfm91dewgSYs3COevNzFDOz
w+/N5DkKMQQAgHFvG0MUlF5CaZoaC/gp544Hs1iHXF33bN7sPjWbN29zdf2R
xfLwDrgccac0vV0j7NdLRicmGu1AEz2/DxRx4oL3rrNdQ4jl8nW+R+Pysgco
kYLqm3yXll7erhHnKetiEsICnR12EcJycOGEJZbUaSixnpK/6urWS9q8ac/m
re7uHu6bXd1d7dxZlsutLCwWzKOn+PkLLBZZLbdjua91dd+ymT7CfevmbZte
0eaX0MsoTSelrCpJ4HCc7VmEWC1cvmD1UeKdzY4X8UV9kwfpJndqkbXm8TJ9
WZGWZMdKmyXbA8iRfHZSPb9OavZeqPvqZKIkSfaR2KPb1yxfSY+FrbNvcEJe
kZJq0lADuOEKPkg4R735OYqZ2eH3ZvIchRgCAMC4t78pyzBMzzU9jU/KUpNv
h4beuHDhakQEd2oiIqIvXLgSGhobfys3s7yVnmU65PphDT1n6Ec6nnTlRYiu
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
5Mi81rTa3rq+UTWzj15l0PTTo53dbU8eFtfw+SWikuaWrkEZZRoxvvKm+Dv0
bivKPL8FLz8WKso6Kgo+ToghAABmN90YoqApKa1pbirkp58MjWSx9nl5+a1Z
4z01a9Zs9PLawmL5BoRdiL1ZliXWVPVR0lHT0EU70MyMGAeKOcmRO5c7LiXE
duHyoIPJgrwBulZB9068nY2SizUSgbI+MTUmwsNlGyEsF09ODK+0XkNLKFr+
qvulLznn1X5rNnh7+3qv8fL2cvJm2S60s7GZNYMZbs2cZTPbbqETy3uZl/fa
Ncwe3hvWbFz9inN+CUpGazpoZU1pKofj4cwixO7ThbOWHCQBeeyUWn5t78RO
uom1f2StAm5OECvOlmx2dZi7KYwcELKvNvDr+y3eCnVvvaz2qjTvQNLBTUsX
ujL/F44eQZGpgmIl3ayhB96T6THvtqLM81vwEqgoAItCDAEAMLvpT8rSDzOj
l+6mh+UZaTeio6+cPv1jbGz81MTGnj99+mJ0dFLK9YKcilZm3NIup4Y1zCiE
Gml/2CmIrb24Lnr3t1+7riE2bOetZ6LSy6oVdLt6fERvNN3eflb5rORi41Wf
Mwf9XJbvIp8ELNnBvXi7lhkxDupfvZbOS8757I+x5+Ljk+LPRsXHBMdHbfVb
5+4wZ+5MMvM/5zh4rvPbHRV/OCb+1Flmj/hzsefP/v6cxSP64VfcJzeqew3D
tbqe3PzEI8FLl9iRmQv+0+ur7XGLfqyNFHaK2kdMO+mVtPY5PdZadSvuvO83
m22Ix9fODt9HzUmo3pvXXtD2ikVi32ErlF2l0qJTLakrYvd4fOPoQWawvvbm
nOKXPFbTXRQ9Yu3TY4wvnkR4txX1Rr8FqCgAq4UYAgBgdm+wUpaaNigUA8+6
mxuaSkoeP3xYU1ZWMTVlZZUPH1aVlFTXNopbe4akowYmg2gMOprWPH90p+an
gOxdc0LWf2O/bAtZeHjJobSLgsZnWnqQMqiNpn16G3IeXdube3DeQT/PL1ft
Ic6xHkdyLova5BPreVKvXCv0H8+5rMZ0ytUVZfcqSm5UFCefOxK8yXHFbDLb
03FTyJFz3OKKWyUVwjJmD+akK8v+eM5G9StWBNIrOrU9ItWTlPSzB75z9ZxF
Zn+1aMd3x6+fKOu91TrSPKQx7aQdpJVP6YFSQeqxfWuc5s4gDs5uyw7Er7vV
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
tHS5tEVSmcmMG6/HRoUFnPDyOBYQcPr02QvXM1J+jDt/OuhUODsiIfzna9fL
mBHjY4miT/76i6m+/VYYNMO6ETEzbqzNvZJ2/GCEl2eA95aNW4NYu45tDowM
OnDkeHhE/MUUbkYRM2IsezrYPTRmhlaYm2UqytxQUfC2jY8bx40Go4Ey6CmG
TkdReoPBaHzxOSA+jkIMAQAwO2uLITrVMDNuHBJXNFXcFd65yeNyeVf4vGs5
PL4ov/BRdZO4s7+/rbm+uaSgISu15E7WnTwRT1ArrO1slsplOtOIcRoLAk0s
0jNGG+SDEklzaUMJv6S+pLmra1BGmcZa0/iBWuUQM27sby5pfFgkvCNMSy3I
zrxfeP9BZXXZw6LSopxiIV9UXljf0NQj7lcxI0aV1hwjXXO3wqhXM+NGalTa
11bXUCQQpfFyrt/g87O5NwrSsu7ezrt/TygqrayraTbdtWZGjAr1698ff/ss
U1HmhoqCt82UQfQ6I6WhtBqNWqNSaTRaimKCiKVnJFoJxBAAALOzthjyXww6
HcVcCGUy0+VQp/vtUkVGijJqNHqlklKrtXq9xVcxmoSR0hk1Kr1SNjYikw/L
BgZkcoVqTKt78byzFQxvp8ZoYFpC6zW6MZVKrpANyEbkKsWYTqmnNUaaek+a
gYqyIh9ERX1gjAaKySB6jVKjUioVSplMqVSpNTr9e1Zabw1iCACA2VltDDHq
meGghhk3UlotZTD8dqmicYPBqGMGYxrDxKwBi69iNIlxg96o0zDjRma4NTaq
UjAjRjUzZHzfbjCOG5n/D2bcaNBptWNqFdOKMa1aZ2BGjDojbXhPmoGKsiIf
REV9GPRquWZYMiqtb6srLxLcS+NlZd7KLsjPKSrKKyi4n3m7NI1fXVja3tw1
Yj0fDloEYggAgNlZbQwZNxqZcaNBpzMwfxqNv12qiPmSadxIUUaD4Q9fsjYT
p6o3Ujq9TkfpmCGXab61qT3v13Tr8fGJcaPBNJKnKJ2WaYyeYpo1MWI0vifN
QEVZkQ+ioj4MTAYZET/oq7qae+Xc8YNHvDx3+20PCjsckpAQGhZ23M/vrBc7
6Uj03czCdut5VMoiEEMAAMzOamMIAAC8baPSeiaDiLMOJARvcrN3JcT2k08+
d3a29/V1cnZe9sknawnxdWYlcbjV1rNwnEUghgAAmB1iCADAx8ZIqQxj/ZS8
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
QqVSPX/+vKGhITU1ddOmTcgQmBH/B6rSTH0=
    "], {{0, 375}, {1069, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{361.9000000000001, Automatic},
  ImageSizeRaw->{1069, 375},
  PlotRange->{{0, 1069}, {0, 375}}]], "Output",
 CellChangeTimes->{3.7704173943983717`*^9, 3.7704534494221716`*^9, 
  3.770475043587474*^9, 3.7704843666539097`*^9, 3.770536070321764*^9, 
  3.770585302115391*^9, 3.7706307544619017`*^9, 3.770631074283647*^9, 
  3.7706660821010914`*^9, 3.7708011180297675`*^9, 3.7708024896294904`*^9, 
  3.7708093167200155`*^9, 3.7708321952999525`*^9, 3.7708382360381393`*^9, 
  3.7708422529783206`*^9, 3.7708824467349186`*^9, 3.7708864678235674`*^9, 
  3.770894536939254*^9, 3.7709343891975718`*^9, 3.770936124681575*^9, 
  3.7710256395523787`*^9, 3.7711592704571266`*^9, 3.771675528881787*^9, 
  3.7721372054651203`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"extouchTriangle", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearMatrixToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "-", "b", "+", "c"}], ")"}], "/", "b"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "+", "b", "-", "c"}], ")"}], "/", "c"}]}], "}"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "a"}], "+", "b", "+", "c"}], ")"}], "/", "a"}], ",", 
         "0", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "+", "b", "-", "c"}], ")"}], "/", "c"}]}], "}"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "a"}], "+", "b", "+", "c"}], ")"}], "/", "a"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "-", "b", "+", "c"}], ")"}], "/", "b"}], ",", "0"}], 
        "}"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.770405829780486*^9, 3.770405847257759*^9}, {
  3.770405911129668*^9, 3.770406013802948*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sinHalfAngle", "[", "theCos", "]"}], "^", "2"}]], "Input",
 CellChangeTimes->{{3.7705387263633757`*^9, 3.7705387594896927`*^9}, {
  3.7705388005709033`*^9, 3.770538803499078*^9}, {3.770539099851088*^9, 
  3.770539101707158*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"1.`", "\[VeryThinSpace]", "-", "theCos"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.770538755069414*^9, 3.770538760321497*^9}, 
   3.7705388085894737`*^9, 3.7705391021838827`*^9, 3.770585302137332*^9, 
   3.770630754484869*^9, 3.7706310743035655`*^9, 3.7706660821230326`*^9, 
   3.770801118050706*^9, 3.770802489650432*^9, 3.770809316753953*^9, 
   3.77083219532785*^9, 3.7708382360600643`*^9, 3.7708422530122204`*^9, 
   3.7708824467578588`*^9, 3.7708864678475013`*^9, 3.7708945369612265`*^9, 
   3.7709343892174883`*^9, 3.770936124700528*^9, 3.7710256395792933`*^9, 
   3.771159270488039*^9, 3.771675528903702*^9, 3.772137205486065*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cosHalfAngle", "[", "theCos", "]"}], "^", "2"}]], "Input",
 CellChangeTimes->{{3.770538820762786*^9, 3.770538821498825*^9}, {
  3.7705391043949585`*^9, 3.7705391061233406`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"1.`", "\[VeryThinSpace]", "+", "theCos"}], ")"}]}]], "Output",
 CellChangeTimes->{3.770538822131121*^9, 3.7705391064524307`*^9, 
  3.7705853021622663`*^9, 3.7706307545118017`*^9, 3.7706310743135667`*^9, 
  3.7706660821350007`*^9, 3.7708011180776386`*^9, 3.770802489676363*^9, 
  3.7708093167719054`*^9, 3.7708321953538127`*^9, 3.770838236085995*^9, 
  3.7708422530371532`*^9, 3.7708824467827616`*^9, 3.7708864678744297`*^9, 
  3.770894536988124*^9, 3.7709343892284584`*^9, 3.7709361247105026`*^9, 
  3.7710256396062436`*^9, 3.7711592705199256`*^9, 3.7716755289296303`*^9, 
  3.7721372055110283`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3XlYU9neL/jd3befvv/0W8/TT19fbr33fbzWqbpddajyaJ3yKOWxqkBE
xYHBolTKoZRyRBEFnBBFRBSME6KCRkAUVJRBmQQEg8wgICAgU5B5TiAMgQyk
dwKZIIGQBAyc7+fheCzcw9prr5W1ftlrrzVv5yHL3f87QRAO/5X8w3LHMcMj
R3ac2PBfyP8wOuG4a+f/Qf7F6X8jiL/8nwQh/LsAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4F9ZfbAloT73zJHD
ZLiN/MYypPmTXs8oGe4aXNQspqv3SzGdTm2muIhZBete4iZp+q9lNuWe5vKj
iN1+wp/Tac2a/B4AZKGmAADAJ4FAW/lFzWK6er8Um/rUMktDHBxC1Tr4bAoV
EWhrjs8qjQ5ziG1XZ18E2rOVJqUChk1FzQIAAJhSCLSVX9Qspqv3S7EpTS0z
08fGUE/9g8+mUBGBtmaY+Uk2jsL+vGU0Am0YoWmpgKmrWQAAAJ+IJLpRpQ+s
q4GbNND+VwifVaer90uxKU2tpgefTaEiAm3NZPj5DffnEWiDhKalAqauZgEA
AHwiCLRnMV29X4rpdKA9myDQ1sxUhVQIE2YyBNqaQx4CAMAsg0B7FtPV+6UY
Au1pgkBbMwi0YSwEiZpDHgIAwCyDQHsW09X7pRgC7WmCQFszCLRhLASJmkMe
AgDALKNRoM2kx3jbWhp+oyf6pd63Rpb7fGIqmROetDkzmLLP0ujb4f2Gd6QE
Zzaz1b0ILQbak02bKhGcKtuoe17L4HqBoKc0zM3G4Evhf89bYmnrHUNnKjpv
cxLVyUZ8inkGVraUkIxm7kQ50l6aFEKxtTKSpI1M3TeGRjZO1JiyCe81W9l1
TZxL6pauUUdVOlGeW8bIJuIwUHRedmm4u82SecL//tJAesYJQ0UuszRZdKXi
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
+zrp3Q0FpRmvEx9HBnoFRoXTMotqKtmCpkFhKw8AOgAVFmCWQaUGAACYlfii
H+5Ad0NXQ35raVzKkwDfUxftzewvnw94+qogiyUgW/kOzqdOJgAIocICzDKo
1AAAALqJbKB5AgGnt/Nja0UaPTs0L/l5YvTL0FBaTGxaypvst3l5JRVV9KaO
ph4ug81jc4cU7s7uqmN8zG4qfB5179bpfc5rFv3h6HAzICoHTfxMwe3vYXc2
9TRWNFW/L3+f//ZtdkZK8uuY6PjQ0OREWurbD9lVjIqW3s7ewU+d0n9xqLAg
hAo7i6BSgxAqNQDArEM20OSHNru1MqU47lKSt9Wd0zbH9x2xsnI9cNDLzf2G
H5X6NCYxKb+8oHmAzuCQrfyY3bkCwUA/o6ajOr0+7+nD65f/tDr01ecWv++8
5B2ajiZ+piDbd2ZVfktubH5CaFSov5+f92W3064H9jlaWZ0+du6iX6R3Aj22
sIVs5T91Sv/FocKCECrsLIJKDUKo1AAAsw7Z+rIFAhY9OyjJ25y6hdi7bM4P
c/UJwvCLv5gZr9y6e7/t2au+d2MyYit7yVa+qYcrvztv+Ah9nVVtFbSPWcG3
PNxNjXaSuxuZu3oE0dDEzxQ9jRVk+171/HqM75nLZ+x2796ywXiZ4Rdz5xPE
su+N1+3y3OKbR7by2VWMT53Sf3GosCCECjuLoFKDECo1AEyRgYGB7u7utra2
hoYGOp1eXl5eVVX18ePH+vr6xsbGpqam5uZmJpPJZrM/dUo/tSGOgN8n4HZ1
t9LrS3NL0uIzX0W/jIoIDQ2Nepn0KrMwraSxtL6ztbufI2p9VZhnVNzEpwW9
umh+dx3htOrr9cstvv7p+Pqt7o4u1yb6Lp0v+i6dM8Cq627Mafvw4uG1y1tW
7ZlDGFqYu15GEz9zjP0u/YLTHkeLpTu+++x3s/UbDl9ZdyPvYhw9tRJN/GSg
wsLUQIX9ZFCpYWp8kkrN5XL7+/tZLFZnZ2drayvZCa+tra2uri6XQfbDyQ20
eFIAmGZklF1XV1dSUpKTk/P69euoqKiEhISUlJTs7Ozc3Nz8/PzCwsKamhoy
1v7UKf3UyPad0y4YrK9/n5wV4ffMy/Hq8X1H9my3srLac+TU8asPvZ7lhmdV
F9Uz2KKxaCrMMzrSxFe/Dko8be63jDi7Yem+vUctXCJP+iY8jEqf6O2w4flO
ebyB1gHm+75m2ou7t+zW2eoThtvNXX3QxM8cY98OS3h0/dHZTTd/n3v8wObf
XW4su5J3OpqeXI5++2SgwsLUQIX9ZFCpYWp8kkpNRtlkiE2G0lVVVcXFxWSX
OzU1NTExMUrG27dvyQ20eFIAmGZtbW1klE2j0SIiIvz9/S9fvuzr6xsUFBQW
Fvb8+fOYmJj4+Hgy1m5ubv7UKf3UuF1k+y7oe1+SfO+pxy43s/kbF83V//wz
giA+11+6aONRM7fn55/mvippZIlabhWaVnETnxCU4GDuO5+4snXdOcrdE4kt
IUVdRS0qDyHgMQQcuoCdRwsOcLU8ZEgY2pm73kUTP5N1lMVXRjpmec6/6Wmz
w9N3vmeeYyQ9vgz99slAhYXpggo7TVCpYbpMQ6VmsVhkEP3hwwcyxE5KSoqM
jHz48KGfn99lGWSsXV5ersWTAsA0q6+vz8zMDA0Npd67d+XqVdezbr5+fmSI
PVOfaA/xh3jcIe4glzM4OMjpH+AMcng8vgojyCbCZjZ217xtLYh6G02NuHPh
xhl7l0M7927fsMHMeIOl1YZfd23YePSMV9DT5HelLF5DP7+bMzTRIUea+KqE
oHgH81tkE799vce1e6dT2p+Ust63DaiaMjTxs07nh8TqqOO5lB9uX9qz0+sO
+u1qQIWFaYMKOz1QqWHaTEOlHvtE+9WrV+Hh4YGBgVeuXHF2dt67d+/du3fz
8vK0eFIAmGaVlZUvX768efOmp9el066uDkeP+t25+5pGm6HvaJNRNp/D5g/0
DvT39fT2M7rZPX1kwK3CCLKJdNVV1KXHFj++nvr0XlTY4wcR0cGhwSEPbz8O
8Lx8/NARS6tN+kuP7zt551FCYsNgUSe3pX/C6H6kia9MCIpzML9BNvE7zDx9
AtwzmWEVvaUdKq8igSZ+1mGWJ9XEnCq4utTvsq3NJSr67WpAhYVpgwo7PVCp
YdpMQ6Ue+452SUlJWlpaVFQUGWjv27dv+fLlbm5uNBpNiycFgGn2/v370NDQ
M2fOHDt+3O7wkd37bf2o1Lcz9gu0Ie4gGWXzehm93czOzu7GNhYZa/cPaKGd
ay0pKH4WmORmn3CfGkfLjq7pf9vQUt9ayWXkZQR4Xjcz3kIQR1Zael57GFDW
/7pxsKZ7wuh+pImvSAiKcTC/TjbxNuYU3yDPPFYknV3GUDnNaOJnna4KWm2s
a5G3IfXqoT8pAei3qwEVFqYNKuz0QKWGafNJKnVHR0d5eXlGRsbVq1d/++23
uXPn7t+/Pzo6ekpPCgBTShJoHz9xwv7IkX0HDty9dy8vP/9Tp0tNg8yGno/Z
He/CC19HRIdH+lGfx7zKLa5qIhvMXp5gUIMh5Iza6urUpLfBd9++Sswrrshr
G6zuZHZ2NfJ6K/Mfewf8vtr+M8LV0vLqreCA8v7XTZwalnpN/H3PvO5Ier+O
NfHDc6sO9nV1ttfW1haVNNbUt3V2a56rM9oQn8/jcriDA4MDQv3k/waFrypw
eUM8/hB/SDhPzmBvV09LXWf1+9b6jw0tnTWMwdZebu9EWcasoH2MdX3nbXgH
/XZ1ocKqXWFVKdhD5P/zye1E/z004QBdnSC5Li6Xw+PzhmelHpV0Tm93X2t9
V01JW0NtQysqrG5Bpda8Uo9T+GerGVSpOzs7Kysrs7Ozr127tnHjRgTaALOA
JNA+ceLEEQeHAwft7vn758/YQLunPr8ly786zO7ZZbtTBw+tXX/IxSMgLLmA
zha0DArbI/WP3NHRXFlRmZVZU1Ze39Te1Mtj9Pf3D3QNDbaWPKc+27POfS5x
eavlLWpwQAX7dbN6TbwZxTfQM48ZSe8rY+jUoDWuKKm97bVVZWlpqSHP3qZk
lVTVa56rMxrZbxlk97N7WL09rG4Wi9Hd3d3b18vmsAeHOFxhFEL2ZXpba1uK
0qtfhRZnpmYXV76m975vYZOt/PhHJpv4mljXguuGflcP2aDfrhZUWLUrrCoF
Wxho8/h8Dp/PFcbaWkn0VJNc1wC7f5CMN0TZNKq3TXbI299n1r5+Vpqdlvu+
ChVWp6BSa16pxyn8s9UMqtQMBqO6uvrt27c3btzYtGkTAm2AWUASaJ88edLR
0fHQoUMBAQEFBQWfOl1qYpTF0yMd8zzne/4+3/i7+QQx39jcwTMoIY8lINsj
1b+fHmtggNvNYre195B/kn8X/Y433ExXJwQnOFj6zifu7LW8FxQcUMV+3cKp
6VGviQ/wzGNE0nt1rIknE9MrfJ5QlJMaHBJ8wu3F/ae0nBLNc3VG4w4OkP2W
ns52Rkd7W3tbY1tbG6OLwWL39PPZgzyu8KEBl1FdVPXqce6dM6+ePgx/lR2Q
xyBb+ZqJbi6jgkaPdc27buh7Bf12NaHCql1hVSnYQ+T/c7hcNlcYa/NmRodd
cl29Pax+8u+iOzrqrnfVlJAd8qIAt5TwkMjkHFRYnYJKrXmlHqfwz1YzqFIz
mcyamhqyB37z5s3Nmzcj0AaYBWZZoN39Masx5XpZkHWgy5a9m7cuWLR9r5PP
/dic8n5BE0cw8dfbynE4vL7+QbJ9J//kiGZXG+L3C7jMocGm93FPQo8edP1h
gbe9Q/CzuJctnHddvGa2qtOwaNzEMwXcGsFAAS0k0NXSXtjEW7hSH9Jy+gRV
g4LOCb61HR9flMgBVmtlQ2FSWUIALTQg9G7gDUrgswhaevFHsn1vZQ+y+rv5
/W3MpoqPJdlFafHpr6LjoiJChcg/o0ND41+8iE9IiH/zRvgn+XfyN3GJOel5
VUU1HR9bWUzREK4hnR/GxuewuX2Mga7G1vKiDynJ2aGhSY/CIh5EBvlHhT6J
i4pJTHxNexn3MiYs8sXDJxEhT8IePw4NffzoYWBwgG+Q3/V7Prd8r9zx9gx4
8uQVLaeipLW/vmuwe0BxiUS/XXOosAor7NiHX+oV7BfxSQmZ79+UtpY2dLd1
qzw58ycxxBGuv8ztaq2uLE5KTfJ/lpuUVV7V0MwVdPEEo257X2tN+/uU2uT7
mc8Cn90JQIXVKajUKlZqqckUfl0zxBsYGtRC76K37WP7e9qMqNQItAFmn1kW
aPe1lHUURtQlXIgL9KKcv7Jj//XLd2ISciubuAIGTzDxFKTK8flDZMs+MMAl
/+SLhkoOcbqH2PVDrJK3MRF+xy/sWbrD67hPeGx2YQ+vlj3E5Kq6sIimTTyf
KeB9FHDe0R7dd91wmGziD1m63guh5Q4IqrmCTo2+syZT2CcQdDcUJmYHnQ93
MAtwc7x2zc/NPzkk6X1udRuDIyCj7AFWA59R9jEvNvXpzRAvx0vH99nv2W4l
RP65z8rKcdcuRycnx/PnhX+Sfyd/Y3/81iXqy5DXlaklzR/bevgz4X0xMhjp
b6/uqcsrjgqOcnfxtrJy2bBjj8VBC7MTu3efc3ahXPO5ef70mZN79x+y/HX3
hl+3/fqrldWGHbZ2B85ePH47yMXZ4+wfth7GZt6O7gEP458VMzJre8hWXuG5
0G/XHCqswgo79nVO9Qr2bsczx3yeXoz+EJnXWNbE0iTRU44MNDjtgsH6Mlpi
+AWf82YH71+49yo5/0O/oHHMt6+cnra+lpKuKlpe6J0nx5xQYXUKKrWKlVom
YZMo/LpGGGX31GveuxjobeudIZUagTbA7DPLAu2Brkayx9hRHJX/5mVEZNL1
gDfPX5cW1bSzRK2pdsc4Dw20D/V84HekpUZFeZ4MMjO87uYaE0eraCMbRTIl
Ex9AW018l4BfK+AW0R4HjTTxG1wDHtPyuAI6X8DQ6CvrAdGltJUlUMMd1nvM
J85sXn3s/A3751WBuS0FjT3Ck/e3ke0gt/HNu6jrD89uP2E232LR3K8//4wQ
Iv+cSxDz9fTmL1gwf9Uq4Z/k38nffL1oh8X+mycCsh6+rnhX0zn8sphuf7ku
LVqvLh+nmCzdQhDLiDlzCX2CMPziL2bGK7fu3m+7YeVKw7/8Zb7osoez4PPv
/7noz+Nmt6K3/nnc9vt/niCIUz+vPXPazy2pkWzlS1r7FZ4L/fapgAqreB/1
CvZCo0U73c1uZHjFladVdmiS6CnH7SIDDUHf+/SH9zwtdpkR84+ZOwQGJSge
1svvFfDbBNyaosc3gzeYosLqOFTqCfaeVOHXMdrqXfCGeod4M6NSI9AGmH1m
UKAtnNyWPzT+PLeSpzP00nc5ucWxr8tySxpq21hs0QtOWvr6lic6WD+rpbrh
3ZvSl49fPnzmd/35SZeYoCf5Oe+bu0VfQKvQgmmnief2N7M73/U0xD/3vWq3
dpc+sdR6zdGLt6Ni6xh5Hb0N/ZzhV7HUaOoHWfU9jZmdH569enje6/D2zcsM
7A84XKSG+ee2vK7uoncKl1aXfOdckxX65v6ph87mdpaL/vHN52RD+H//v1/+
x19Xff3TgZW/2e0+ePj8ecfDtn9utdywasnyNas3r998yGK/x+nbz8LS3ld0
cZv7eCyOLobanP6u/o7a7vqi0syYhNBb/pePe9jtOmT+66aFRr8t++3X1baW
Vq77D3iddb/hR6VePufqut/GwcJk8+K//fwf//4VQRgsMVpvf37n48zjF29f
2bfn4eolXr9vtT9wbuPpxxcfpScW1rcPCljc0c8j0G8fnyofBTJQYaUVVnox
GhbsxSbrD13eGVJ8O60ut7Zr8omdPgPMj6yaN+0FD8K9jh1esWYRMXfHur1X
qFEJrbzCbn4LW778DA2Igqa22pSIN+cdUGGnDSq1QpOq1GNNrvDrGG31Lpp6
+3oGZkalRqANMPvMpECbbIG5E8xzK3nfkNHW3NDQWlHT1tja3dU7oHYzpwjZ
+PaQH8ONpXk5z55FnKOE3Qp58pgWkljxprC5urVnQNR4q3Au7TTx/YwaJv11
U37Afc9TvxtvmkP8sHz5gSMXggNz6K8qWys6e9X+koHVkN+c618ReSDw6qHd
dvbfrjuy88y92y+y8xp76Aw2o1/44pn0Larq1Jo3d949OnzJfu2KJf+LbAr/
468G/9hwxMIl9JhP5L1nMW/exEc99guiHPc+vNFuq/ma1aZfLzLaZHfa83FC
fG1/YTuHjLUnn8YpRwYjneWpjZkhUVQ318Pb15ssNTf/1WLzgQ073Q+d9PXy
fhYcSnsRm057k/M2Ly+DFk978SDh4ZWbB7fZL/7bGoLY/NPqvS7eRxMrb4TH
PQ+8UXDD3veY3c7fD+r/bLvLmRrwMr+8V9DIFrbystBvH58qHwUyUGGlFVaa
DE0L9pq9p24dTah9WNhe2NI3+cROn+66dw3p90sfH/G1t9i8ZMHnxGdrTLee
uvU07ONgVju3vlf+zg9xRbF2b1dldk0sFRV22qBSKzSpSj3W5Aq/jtFW7+Jd
e39Lb9+MqNQItAFmnxkUaPNFq8nowDy3/eRnsEDQ+CE9OdLztqeZ/f0LAQmv
C4rYglqOcIIRlWmniWc1lzYXhFfEeXif3LdqGdkFnv/dUpvfj/p6Ps97lksv
aGSoPWy+oyy+MtIxy3O+x8mNRrZniS1PN3hnPs6uVzjSm99Vya+L4xbfeHx5
5waThWRT+PVP6yxc7p5IbAkp6ipqEX7xzqrLb864V/HkgPfhVauWfElu872J
+S5KkG8RK6GWXdWli+PYuuuLyGCk7OmJa0csVhp8LTto9kJc+evKDrnpW8Xj
9AoeXgmwMLEniOPGZmc9hfc0oqjsfdlrTtXjRzfObFj9G3mbDM0c3AMS0hkC
spVvl7/b6LePb5IfBaiwCiqstgr25EbYfgptJbSyZ65v3AzdNur/oj+HvNJF
Ky33X3sYUNb/unGwpltxCeD31PFa0lFhpw0qtUKTqtRjqVf4dY22ehe6X6kR
aAPMProbaIufLPR01rdUFVa9pb3PSc3NzHyTmpOS+DolKoYWGpqWmJKVV/62
pruqubuzq5s/0N3LbGlvotdXlZS9LcxNzKOFZuenVdA/dnaQjS+b3dvLZHc3
dzRV1la+Ky1My8rOjE/JDo1/S/5J/l34m7RX8XFRwiktoxNCk3NCsytSK5qq
O3v6hwSDQ3yeaCWR/q6m9pp3tQWJWdGRkXce3T5DjXz8KquwspbDbeztb2V0
dTS3dTO7+9kTPkbX1nfp9Qx6dlN+WEzwnfMuF6ysHB2cb18Pio/IqsqsbKlR
47t08TylHzOf0q7vCvx97qn9v20+fnmRR9qxiA8JZR0K5y4baC3uLn7clnSK
etp6/c9LCGLOguXb/rjw6FpuV0xVX0WnsJnray7qLAipjzvpe9JizTJh337h
CvOdl+7feNcd97G/kqlDgTZ/sIfb0zTYUVGWHhZ19wwZjOyxXvPT8hVz9H/+
p/URG88Qr7jyiIKmkuYeuQVJxTPPVMQ+jHb48+qCr7z37LvpH+5bwoqvrKuo
LeK1vEl4QDm+zWrx53M3bfzzuM9Tv8KuxNq+avkvGXS/384b7OX0tLA7qhrL
Coto6bTQeFpENC06ghYf+jI+5nl8Clmtkt9WFn1sb+rhMtg8tmhWIt5gH6en
nd1Z21T2voSWkRYan/oiPnVkztjkFy9SQ0Ozk2gf3n1oqWcMdPRy+ocH803m
o6C6tY/RO5yZfAEq7JgKq/WCnVDPrurWoZorMcTt47PbeT2172nBoZf2koHG
bz/+p/5//pvwY8fYbOfFAO+3jLjq3kolN26I3cbvKps1FVYVqNQztFIr2Fuz
wq9rtNW70P1KjUAbYPbR4UB75F25lsrMwoSHCX6uobcu+t24dvHqbY9TZ8/t
s3W1svI87n6dGu33uj7hXX1lbT2XVd9WU1iel5yZ8CzS74HvsbuuVt7+l+KS
Uior2YK6LmZrW013Q0Fl/sv0+PvhD7yu37jq4O5j5ehH/kn+Xfgbz+MOh/YI
p7Tc52R1+paVd+zF2PzEymaGcAFLHkfUKLfXlJS9fpEacC0++EFEaGxIRHZy
9oey+pYuXn9rZ0cdvbayoKyhpqGTOeGL4dpp4jn93f2d9d0N7ysK375JJns1
8fGvcjPzK0s+dtS1sZh9g5MeNi/uVBfFUB8etjr23WcO1r/anffb/5x+N7c1
r6lX4WpcrNq3Tel+5Y92X7e3XLX4Z4LQX7z60CHv6JAKdlozp1a0nulAe1lP
eURH+gV/d+v1ht+RTeHfVpht9wq8UsCMrukrZ+pQo08GI+ym/N7K2ITgC2cP
bVxp8DUZjPywbof+xtPbzz3wjsxKq+woa2a19QzwZDs84t5RY3ZCto9b+I41
T73cn0Qnh1SzUxsYHzsa+T3V+dG+/o6/2i367OB2Kzuvuwdjav3z2/Ob5Abf
6n6/neyQ9zYVdlUm5IY/CHG75Grl6Lp9n+u+7a6OVkccD9g4upHVyuVOfEjK
h4LmATqDQ3bLRXu19zaXdlWn5kc8eeZ2xcvK8eIuxwsjc8ae3rXropWVt/O5
F/cjizLp3eUtfR3DvetJfRS87yC75aI0Dr/FiQorV2G1XrDTWkdqt64hAw0u
s5TTkvrqidfp/Wa/6M8hA43/9m//F/mx8+0vaze7+nnQGsNLGKVtiqdCGuL2
DLFbZk2FVQUq9Qyt1Ar21qzw6xpt9S50v1Ij0AaYfXQ30BbP/lqd8zThtpPv
bkNXm3V7tlubbdltuszYZO4XhgSxbtFK6/1XdgeU3H5ZklVUMtheUlMQnx7t
/9TX7eIupz+/32dIbLEz974blJ3FEhS3NtNrClpL47JifR7dPOzhZLZ568Zv
TbYR83eTf5J/F/5m/aJv/z/hVBvE3AXEsh3ElutrvWP8sioahwSMIW6/cLga
q7YgNTXAJ9h+d+jNWxEJGdE1/XltfU29PeQ/dTbXVRQUZcW9KS0obWiecKpz
7TTxQ3w++cPncof/ItB8jL10ntIrnhYmZgSxf7Wl+43ggCr26xZOjZJOdUdF
WmWsV9Z1M48dpkYLTAjC8Of1rqeptKQ2QXG3oHVg+MCVg3Uv+4pvPrxsYyEa
APadsdnvOjkAdbCjggxGGFnXAzx2mBktIJM6R/9nMhgxdEtyfVZMK2kdf3dG
RQE9NjDvun16mH9Sdl5MIzefwWnqJ3OBXZsenOppGWxGuO8x2elKMfQtck2o
pVV1ye+u6/12dkcV2SFvyfKN9HA6bmRhSMw3/Gyu4dzPDOcT+vO/mDPfmKxW
/9xz82RQemxlL9ktb+oRvv/G7qwlO+QtucExF13clluZEfPX6c03HZkzdpme
3jqC2GJgfOmIZ+LTvDayW17PEJWbyXwUkN3ytzXdojSO1C9UWNltp6Bg85s0
WTdxyvB6aslAg10VHHzDznL1YkLG1/9cbXHC50RMdUh+a1GTsnmbecN3fHZU
WFWgUs/QSj2WxoVft2ivd6HrlRqBNsDso7OBNn+gnccq47a/yY6+e/uU4y7j
dYe27T553NXd28/txFHX7RvOmCx0+GPX7hN3rL0LrkYWpuUXk4H2x4KYjBc3
w245uf1p+9v3O/WJTX+YX70ZlJnDEpS2t9U1lDKqU/Jfeod721w+uGjbhh//
ZvAzMddY32jjxj22bl6nDx3ZvdV6nanRou8NjfV+tiRj7eXHb3hEZWYzBkua
G2tr33VWvEp96uN78oDdGuNjNn+eOeV+4ebDG9QHAQ+CQkODQsMinkYmPY3K
TXtbRW9iTM936aLJWvkjP6LJWic5q8yYAw608btLeG2vE6gXjq1fv4iYs3Xt
Dg+/8PBGTjaD1zC6Uz0y+2vTu7i3gU4v7BcdszRa+oM5uZPxthuej7PzugXV
vVxGfz9/oJtRlUp/faMgyMbrwPoV/1hCEF/8sGrvvmvh9z70JjcO0FkTzOsy
Lbii5VR6GWVpVeHeOR47Lmxes/y7RQQx96sl1msP3z78pPh+Rl1B3QTTLPc0
0VvzXldH+5dlJhdVVL9l8ISZMEgenNOUF5l3d1f0/s8vHDTffNhD3+mV/YPi
mKLWQZmRujrbbx/i9g2x2/k9ddXv3rwKvX/Xw/WSg/OpHccPmjk4/L775J5N
rg6mOzeuXr7U5Ku5xoYbTmz1jDiZ1BBc0FBUV0/2/arfJSY+vXn3ot2lI4dO
bbM/sOqw45bDLoePnD9/xG7v3t9Mt/783QbztQd27Hc/4km9/exV0rvqWhav
rbuth1Gq4kfB9biarEommdTBntae5iJUWHGFnbqCPcQY1Km5i/miOzXQXZVb
G0ctumHnf3z7vm3mi4x+WfCd/l/n/LevCGLp4pUWh67uDin1S2t4W9ut/Dgz
vsKqApV6xlbqsbRV+HWE1nsXul6pEWgDzD46G2iLvpJN668KifGnOP7h8P0X
1tutXSnXQ+Kz3ybGPHl1/3zS5Z2+Xu4OFx+t88jyeJRHyy4UBtr5z7MiL0fc
2Hdq587VC63nEBsszSlXgzJyWYLyTkZTa1VvQ+77hGvRV61u/vm5zar/XPjt
XOKzL/76s8Wv9mdcAsM9bt++fOXsLY/9f9psJGNtYu4Cg22HHf2jwqp7X70r
yE0NrYg5/9Djz4NWyxd/9cXyhd+b/WRkbWq5ab3FRgsLKyvzvQ6nTl5/fDmi
+EVOXVlj9/S8HSZq44dG2vfhJn5y66SMyfneOm5r5gA9NMLH9U9Tq88JfQuz
wxcC4pIZvPe9Q62jO9Ujs7/S0x8nee2gmn2+d/mPPyy2JvRPmh4K8Ykupg8I
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
Peu4/pdFBLHB2OyIKNCOLKotKC3uqEgry3lFSxAuARYRGhodGhov+jNCuCRY
aGzSm9R3lQX1PWT7zuyf8I1j3W3i2bUJPUW3gyhkE79tpIl/QMvrFdAHxgTa
A21DrDJe25u4ILcjm3759jPi67989ZfFpnNNDy3f7rTXyZni6Xri6MHdO603
rF9pstRkydcr9OcYk+2gnVPAteC34SnV+XRm+6CwHRxU1thPWRkbi9fXwGnP
7a+NjLp19NCaH/UJQv8/F+n/aKu/MfDgFVpExscunjAY4UzY65cZSTgkikck
M8R2ViRVxzjnXjO4aL9pudkxYv4tc4f4+wlV3aKv74cn7dG9fvvwiDs+oyKx
OuZE7rUlF09bL99/itjob3Y52T+tRnQHuQN84VvA7ZUFpTGPU665PfO/fzss
xS3x490Xj2OfHHoXuPiS08oVq38j5u5atcv3+rPc8h5+E5vfI7wXZL2s6apN
bi0KCKPsP2yyiKx6xktW/3rY2+ZJpXfMmzcpj1X9KPjQ0dAunDx2sKeD7Jaj
wg5X2Gko2DLbTF+FHau/vYpZHt+UcSvq/vUzzpfWbvRw8XwUkZhT09GWEXkv
7Mj6G4uI/YaLf153aM7mR39cS3uWVTf+a7wzs8KqApVaMKMr9VhaL/xSn6JS
T13vQmcrNQJtgNlH00CbbIX53QJuW2tdSXEOLen50/jnYTHPI56rKCJKuPnT
uNcp+fkfGqoYXPITuEf0mchhVLDpsay860GeO8yNhbPjfrFgmfGOk7uvx117
np1YVNXIYjQymY2d3Y1tLEY3u1+4YKaiAVfmrp5BNDLQprMFDNEHaFdVWl2C
V7Gv2WXnPSbbThOGtyxd44NpVcK5SYe6eLxaAbco/THFc4Nwqs9dxmbOokA7
lt5boeVmV0ebeI6oiWcV+QZRnM2Hm/gxeSjB723kt+dyPz5/fOvoBtOlwrF8
n8+du2jZfLMty8w2rDMz3WJmuGyR/tzP54iG9X1BdrUIYvdKSz+yHSxjCxo5
gu4J2/gpK2PjXvsuc5PvRXMy/6K/0c3Q7Y3rszJaSZvm2dtRFl8Z6ZjlOd/D
1sJorRMx39fcISEooVp2dlzd67cPP7rkNuU/zqNuiLYljjsY/vOkcASp1bPy
0JJ22U0Hutu6G8vayt5UlxUWlNW8KWPQEgNe+5sluRGnd3//s+kuhZcs4DEE
HLqAnZce7OlpaUxWPdMFxiY7PA2v550Kjo+LD57sR8EUmMEVdhoKttQ0Vtix
WHX5zRn3Kp4cuE+9tOfqk/luWY7PKuNLhENka9NCU72sgs0IO9PvF5sIB6Ca
u8YH0arGn5h6ZlZYVaBSC2Z0pR5L64Vf6lNU6qnrXehspUagDTD7aBxo9wm4
HYLB+vrSjIyoJ0+uUR54X6Xe8L6pmhvet72v3rlGoQY/TUzIqShoHazp5jHZ
wo9fXm8jpzW3n/487r7z8T9XGHz92bKlf/9l/W9kW/zH0SsulPt+QTFP47KS
86re1TE/dvQx+4RtooIBVwoC7dS6+AvFt0wvH//TZLMLsfS2xan4h8lVwiFD
fCaP+1HAeZf66JLHhhWmBLHT2OykTgbaAwMD3d3dbW1t9fX1lZWV78dFbkBu
Rm5M7kLuOEGypE28i7nJDtlRAWObeA6juo/+qiv/TqDnHnPjv5Ot3f/4ZsGP
v/7xm8u1/Wcvnfbw8PZyPeWwd9cWMzOTxT/+bemX//7zZ4Sx8arTJ66/DK9g
ZTf1N7AmauSnrIyNe+0j8ch/LFj+jz8uWFzLvRRTlV7ROUFSVdD5IbHqxfEc
yg8XDlotX3dMd5r4cfGGp62uzwzJvGr5dCNxbI/R8mPnP7uQtT2iIkL+RT9O
f3dfZz3ZLW9poNc0NJU2MHKSAl75mEUeIJx+//uPq3cTi/3MTyYGJcn3yfks
Aa9RwPnw9tk1362rdn1GbP7ReN1uYZ/cJTQtIS1xsh8FU2AGV9hpKNhS01hh
ZU46SLYZ5OdRXd7LtIAzjw6vOmm/b62919xDT7dcj/OLTispKUi8fylg/wr3
RcSm7+d/+7cthL7nusORd19+aB0SdA0J2Eoer83MCqsKVGrBjK7UUlNW+GVO
8Qkq9dT1LnS2UiPQBph9NA20eT0CTrOAXVmVExd/z/uWvR3lyGE3J6fjqnFy
cj5y+LS93dlLNx+HJL1LaRgo7eS09Qu/heQPdvF6a7mMovyEWwHnrY9YzN1o
8jXZFn+xYNmCpRY/mexea37y8OnAm88yEyo6C5t7WlgjgfboAVdjA+3KlNqX
7kU+JhTHHSa/niJ+uG1xPOHBq2rhhJN8JpdbIxgoSAnxOme5woQgthubHdfJ
QJtsrOvq6kpKSjIzM+Pj40PHRW5AbkZuTO5C7jhBsqRN/Glzkz9l33Mf28T3
t5Qwip41Jp7zc9m49id9sin8q4GhlcO5M8/SfKNTnye9yU6jJb4IDgvwCqDY
OW6zWv23pXOJL375aafN6YfnXzWEF3eWtvRPkE9TVsbGvfaReOR//mDyy77L
f9wrvplcl0OfYPEjVXSWJ1VHn8q9svSinfXy9Sd0p4kfF1c0wLDvI+0h7azF
fSPi6O/LTR0uzKXk7Iuqii6XC9P4nAGyWz7Q3dbL6mCyOttZjOLkgAQvs6CN
xAGzv/9j1W7C0M/cNTGIJt8nH+oTDHUKePXFUb6P9q5xnkvsXWH8q62wT34m
siCp4N1kPwqmwAyusNNQsKWmscLKnLRXMNgiYNML4wKDju10XPKlpfHKhWb7
P/v98vKjN45fv/PsWeANZ1vnNYt2fk4Y/fdv/ue/byDmuJjufHwz8n0NT9A2
JOhVFmjPyAqrClRqwYyu1FJTVvhlTvEJKvXU9S50tlIj0AaYfTQNtLldgsF6
Qd/7kuTHTz2c3czMnDZs2Ldp0xbVbNq0fcMGGzOz3fZnbnlHZETX9Oe1DTb1
Dn/8jrSA9UXPM4MPPT0xn2yLDb4enlh0DkGQn7qGi01O2FFeBBe1pdZ213YJ
vyJWZcBVVwWtNta1yNuQcnibiZmz7GdsP4/BFQ11owV7uloaGxLEFmOzozoZ
aLe1tZFNNo1Ge/r0KfmZ7DoucgNyM3JjchdyxwmSJc1DV3OTPbIzt49t4iVj
1bwPr1q15EvZeWXTm7m1LOGtHOyq7a1NZRQFh1Ps7EwWzyeIZYtWrtt/bUtA
mffrxuyaiZbynMIyNs61j8Qjk5zDdmKS5tvTfpuxfPHT4X77SFmtJlPqYO47
n3AyM7aw95x/Pc8xlh5foSxhg6I5XBlVtICXrmY3DQkb478vXLmHML1j7vEq
KFW+Ty7euCIhIMbBjKwOR82Mt9gL++SuMeW0iqbJfhRMXSbMxAo7DQVbahor
rEwuMMhAQ8DKowV5upoLP7r19b6as2ANscpe/3f7jYfs3dzsD2xcs1H/K+E/
EV/NIdYQhP3KDQFXHxeUcgUNfEG3ksdrM7PCqgKVWjCjK7XM1lNV+KU+RaWe
ut6FzlZqBNoAs48Who5z2oUDit6nZ0U8eubl9eDy5bvXrnmr5tq1m5cv3/by
8gsMjY/LKSc/e6u7uIwB4Yc+n8vmDXRx+5qby2nFyX6vg474ndvmYGO6bvni
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
g9QOCpVRTRWQSwmVCZjyICTQY9nqje6ITayTLymJNPha71CtwKCmGxStdSl4
vIsDBkE2LnVw3I+3i2y9kFJSXJIibo1Mwu93cjD2y/1q6SqH/QEekcW3chtL
O2lssYA9OcmeELG5YoFIIVfO0tNdzdS+1Sb7FnfGJoWfd5qybyccPomMZha6
wiB4fWPopGwdr1kzlJsWc8Z140rjPL1FVla2q2wwu1ZhXLdgNu7C2K2ytbZa
tNA0Ze8rtIxCEI91LnGox1EVBrbaIPqgf6NVnE5k0HA5w91dTeTy3PSS3MzC
3OzcaZKdb3x7enFlVVtb7whNoEEdXPKeVP/Kd3d3clxm6qW8xtotyC6oGpdB
JXdzP33z8qklAzl+DXibkOPO9ptPv3P0ml+9/RaztlPUgn4Fvehj5fmOWZRv
DVohrXaYFNYVi4k4f9hxTyBiF+OCK0kh04ybXS/UapkGTWddWjje1di/190B
c94UtIvo0v4ZFuM8Fv5nEMhvfEbhv414uG3s2YP+Jycexl8/fPOJTVCDX8ZA
SbdxGi2zllgThk3BIJ4bly13NE5SdcKVJJFpv9+8en4KH5zaMK8F+zYzPrB/
Yy4EO3sViNkKFoI2AFgesxC0tVPda1n1qfU3XdLdkLOH7deevbrgWsPe7P7s
1+8JUstFsgkW6uDjI3TGyGjPiKCpnFB2G5NzAjm98x8/bPBAlsc5BZQmlb9u
3/8/e28a1kS+rv3Wt/PpvF7nXGe713a/+2LtXu273ZslbdvNsl22baOIs2GQ
dh5RFAdkUhEVEREJgwoIgiJBBMSAzGOYwiQzYZA5JIQQICSEzPNwKtF2tgEh
ENLP76LTNF2VVFL/u+7nrvzrKRVfo2Ro5N2NqfeiDm4+sQjZ+0/LHY5a+76G
ryJUFYkpmflPrnge37h62aK1a374dedvqIMfuXjnWvCT6PjclPza0iZyy+DE
AFs0IdKTk87IvqVSKY/HGxsbo9PpfX19r/4QdAF0MXRhdBV0xUk26519X7O2
Ovr+l4Of2rec0y+iFHObH8ZhT1pb/oA62f/+7xX/3HXkt2v3Tt8I8vb3Dwv0
uep+6sQBDMZq1T+/W/Ptv65bhFhabva+HFqQ1suvGxYP8SczcO2Nd9kaGZ3e
+fJl9vPn94Kfht2NCQ+LmBrhYQ/C7j68FxyTmFJEqO8lMWVUnnJCMtWg/e8r
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
+7rXqdPnbXc52u06tGuXvb3d0TPOZ28EeD6Iv3bF/8aRM/6WmDAPP1xCYWo7
p4YmQN35s68FNfncAKL+rKg/vVTz6wa/o8f1S/dTAnK6M5oYXcP8mWy03kFD
hJylkdG7iEVpt+/fwpx7cvtxcWlzt1jD+CTTyQVjotEOLpnYhH/4/NIFELWe
EI12sVvTBwm38+MCg2/dOXo6NORhLqGhb1ih4Sg1kzcC/zIg/CkK/70Nm4ZA
DA1tyhbQZ16lSIVjQgMQPgRtADA+IGh/FrWUpRZ0q9hVldnZWK94jEWor09u
PrF3DDUz9Jg8+RPMljVzNSqaRtFGTI5/Y812PrhkYpNCQ1FpODM61SzVvZWx
LkJMmvtOfzPk+t4tl26Fu2SS4xpGSQyB9sXFY6h/KRgVLdmhCTcOX8aY2Zib
LFuyCNGCPpogiNlf/mK2YoXZ5s3aR/R39C/LzI/anI64jKtNKOttoY6/vsjL
sE+Ka6RcBho02O3ZxSGewVZrDiDIWmSxCWKKIBbf/A1juemg4+kzdps2Wfzt
b2a6t/36I1iy8mfz456YyJyDxz3PrPz5MoJcXbf9une0bwkDdecOpvizrwU1
+XwBov78Ol83+L9fb37MDxP+MjC/p6qPPZON1jsKLhoiNKJX1QmPsTYnMIjZ
JWv3uHjC56fsqoQa1ZhGQW1Ljki02wqi1hNvR11zRUF6RkkoriKzrLONyuLr
NDa7VyyB8CdZe1oCMTBmq0pRqoVq5fwLH4I2ABgfRh+0tS1xVeopd8dV6q5y
EvNH+4daKjoLkgsSUqNDM72u5cY/b65/NcLTnTiegvPMjjUrxCOS8RbBUGFm
1F3n7SdMkTX7tl0MeJCdN8hpYguHxPLXl1B9hUXL+HQBo2a8O7U44Vag6+G9
a1e7nHUPiHkR2zBa1s+ljKMb/+5cMbUWX/HkasIVa2db83/89xLUwP7v/+/b
f/+fzct+ObvpN2fHc663bnm4njl+0NZu808btm3Zu3PveZvT/t4PUl9Uverl
KkZESr7cEKO2XMwVs2k8eltnTS4BHxkb4unvfOK89a4936//be1vu7acsbX3
OX028IZfeHRMTMhNH5/TDu42VntXfbfu3/91KYKs/mn9Tpdbx5JrPAMe3HE6
mbDlp8D9B13O3tztnRzwrLqolc6SafiKj79HgJp85oCoP8tURP3uzcxw8K+y
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
bzbqbdxq8ZuRw25zHxffhDtpDSUDM88muJOclTgmR4vs6Ohod3d3Q0NDcXEx
/oPQBdDF0IXRVdAVl3hbr0uzr7nRiYV3xr1bmvmT3czONFrptdjLNrt/00ZL
2D+36Fu7XbuSVhuTV5NdXt1USyjNSU7HBeNCndwPW5t8v1UL+Wb7b8ftfJOu
l41ldM30TPKX+JykXLl4Qi4YJDUXFj+IjHZ2CnV18ffw8Po4Hh4XXV18nZ2u
htxJeVzeUTUm7JkRT/Pf/w31u73G334y2u4YdvRB152K0ebhJR5s9DFm+suH
8i613Nwa5HRwx17v1Tomfw8ItXxVh/oL7PyvfcFQL3hRnlw0KRcMPytMSLxw
3P3nby0NjX/AnF5zKGyHZ5RXxL20tISoi2cumukeX4cY/Od//+0/rJC1l02P
p9zJek6Wyqfn5bzFGm3NCLXKNopMxJLyKJ8az/dc9vxuoz1YRSkK6LxtFOp+
zGjfJeSnuxZeJY/KhhTTPstmJRKyXEisehx8zXKnEYIcMcR4rchGe4VUc9UF
ZMFLqCH4qhulqCX40GgDoHlU0Gi/rEpD6DHJzTxGB/HAGFo4Y3Ui2twLhosH
FjsEiZRTOTJJBFyRH+aOPmJn+OMPxicR03vmgWWJNW+Oyf9ceKAEl++GQQuf
J8bQ1lkxJvfL7ycMjKOvTu3Mbkg+n+qtg9b9Ld+9mGp0LYKgx2H9zUbeTqE5
yZ3TNRQ2hbXEl8bL/BD+Wmmenp5GSy2BQEhNTUWPt34fhC6ALoYujK6CrrjE
23pdmv3MjU4unOv13dL86hqzSJddu37+duFE0HUTEgpHUQFFLAqPUsPsTM4I
dXIy2qyDIHq6xntOh9vieiMraU3kpR7BKWHJRVT53PPuipTUwIv+GIyHlZXj
/v22H2f//iNWVnYYjIPzlejIzPo8Mr9tWjTO+9hG+xPnnl3aq7KLdT5siLm4
Wsfk7wGhlq/qUH+Bnf+1LxjqBZ8CE20i5Jw2QiLWz9xQH90t/uf6tRvNkF3O
2oecbc47+/s7n7Uxs9Fer/hfyPq1iBmCOBtb4W6lEHsk8jGZnL3IqTMNCbUK
N8rLXHxSPD/msmfWAIFS4NcZqR/qctjozU+eL2VKlHeaEJKxfpaKzW1riPFc
kY32CqnmqgvIa+oIvupGKWoJPjTaAGge1TXaw+WJZRfN721BXMz0dh320XIu
OJlAzOqYECqX+POY/XI2YxGfy2FM0qlDz3JjCq7ti9u35tSuLT/pHUd+CN3r
mRNf2s9QPivxzwG0SDnv4+xgWUKBFybyJ8TDcsd+56CtN1t8srpLu4YlcxMT
/YSuitjKRNfYa4fd7Ez37Nj864Yftdd+vw7R/vf3hy0PRzqF1t7P6WsaYPCU
P3bJ+VD+2ofw10ozg8EYHBxsbGzMz89/9OhR+AehC6CLoQujq6ArLvG2ZkmC
kWJOR3RiyGXznXaLfAcuU14qLJ7pJ/TnBNSH7Ar4Q89A50cE+e633U6X7uWV
jIufzUon+YptKOFShRNNvMH0nEh3Z5MtaAn7ZZORsX2oVUxnaAmlnrTUmTLZ
nFxMV1xs9ryuMfNJWnDwo7Cw++HhkR8nPPxOWNjd4ODYBHxxYXM/WpeHWBKm
cJFLx1//7ifMdyp6jX9s3mXkHOn4ZOB+3UQbhbPEW1VMqSqVy8RSmQT9Tyid
Fysef/rGIrODVeTCAGKUUbDr0Z3mF1frvEnvAaGWr+pQf4Gd/7UvGOpXO5uA
0cvsyxqvw+ZFu/qf/MP8ZyNz8+MWjlcs/O873bofEnc/5en9O9fc/f/YfX7z
erP1W9b/v3sQ5KihxR1sUnP7B2dp1pBQq2yjyCQCqZD1qfHksYe4Szbar85o
ux4zMr/8dqMtGpbPtRGSsH4WK7rRVnc1V3lAXvuiwVf5KEUtwYdGGwDNo8JG
uyqx3N/8gSHiZKz7m9mZNZiEg8GVj+sU3x7OvT6N9XI2Yw6DMTZA6mloqX8S
mRe4P8lB69zu3/696TDyn7677Z/ey3k+jh6ClMe3P18C/Sd7sOJh4SXz21sR
99937HO58VNos0dqR0FLD396iD7SQe6ped5aWJWPy4gPvB/k5H3QwmbDj7rI
Wt3/2PHv7102G+HcAiozq8h05UMlP/c5sGWVZvRgOzIy0tHRQSAQsrKyEj4I
XQBdDF0YXQVdcYm3NTsoIBdyiFGJwT7mO48scleXVNn1CMaJ2a3xp3PPfXvB
5Met3xogiIWhRTA2sbaNKxsWzDOV04HK+OPSmXYRNb8gxttl969oCdu80VD/
KNY0vC0wf7hm0XOdf3oxT6mExZ4apfZ0ddfWPquvb2toaPo4DQ3N9fUttbWt
xOekwTHGOE+K1uXF5ild8LsfN9/5A9pr/P3fuwzORdg96r9bPd4ysmSvIVXc
5ob+eKmIL5ZwRDK+RCZ+s9mYJdVQim88izYNdbNTlubV+SSg94BQy1d1qL/A
zr9g4S8X6tfz4Q9VDpdcbYsxTAn549pl98POYR7BCaGP8h6VN2TXNBCaG9o7
Giqy4jNuueOczE6b7NFdj0EPaPrmIQEJdXUsef+cnL7IfBIaEmqVbRSpkCvm
TH5qPGdYQ7NLNtqv7tF2O2Fk7vtGoy1hSgTDcl4b4dFKb7TVXc1VHpDXvmjw
VT5KUUvwodEGQPOortEm1yVWYs1xGOS04QbdLYcQHexet6y4kr7pN8bAL2cz
plNpPQ0d1aklJfdCc4NtlZefGW757iCCOJta46LxxBG5nK68tHThS5AIiUV+
5nf0EbcDBuYugTrYxvOPW7JriJyRztmJETpzZnJOMjkxPNlfPdmSnB/k5L9j
M1o8dJHv1iEWCOJtap0cje988yd/LssqzRwOh0aj9fX1tbS0lJeXZ30QugC6
GLowugq64hJv6/UMsZ7KZ56+d57Sd7ag7ne66xb5xIRTcm6XnFFeEu/rtncb
WsJ+2mCw9VCgPrbRL2uQ0LvEd/Jf0ruz42rpGut9/FXuMnQUIZBLOELRHPof
nS9F2w2h9I1hwOtpcj3sjSzQ0hyBccvHlSgKOW8VjcnfA0ItX9Wh/gI7v5q8
PR9+3BWj67fDzqV03aseahia5Ak4r/5MkBoGCPfbkp2xTkcNN6N7i/62vX6+
cYTyaXkXWz61yPcymhvqz0PMYwnolE+N5zhriLF0o/3qkz9pZOH3dqPNf+NC
6BXbaKu7mqs8IGqi8lGKWoIPjTYAmkc1s46/+U2j1eatW0wQrUNb9ge6Ruak
tQ5V94/1T9CZXDZ9ijIxTKR2ljdXV2RlV9xNqEy+H5t7170qCnP1+N7tP+xG
ELPtewKuxpVXTfF72OJpgfKGHcW3pnS5aKQlP/qus5mdNvKHpbGNzy2Lhz2B
ua2lddWs3mJyX0t731B5H7N9YIQ82MkaqmnDR6V6HQsy+uHQ98Yb/uMPBHEz
3ffwztMO8vzHTfTxaZZVmvl8/szMDFpqSSRSV1fXhx8+iS6ALoYujK6Crvjh
nyxhD4uoFXPd8Uk3vSyM0aqkrY9xCcAV1THn+3nzdJHyU0A/XilDLhntLr6L
9zTz00VsN/2wZePxtRuibN0Kk4oH0frFkc8LlRNkCWb6mP0FtPrbjwLsjhn8
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
qMgjFOOLC/A5OU9T01Me3HwQcf72NQw2LiArv7gHHckMc2XMFxfbK65PU3xz
TqlPqg6xeGSBXDqxY59X4L9Cm1xyBgv7Z17U5ReLruoxOYR6lYWaIiCxlMNj
Fe78aiAV8cTcSQGDNNCSU/rkenzAAcfzjroHfJAd2N1XMmNKe6h86Yx4nq+8
i3xeKpwXsWX8adZII6XxUWe2X6intdHWfypuVNfZrnfI7xCWEJz+vPjZ1Jvz
L30toV4m0Uwfj5T7kfG0c3uSmFlLoVO6ifmNuUFlMYcu22O2bTJAEN3NO86d
v/HkcTO5spvcOzLMnCI9K43PDTl855CWndnWTVttEG23XWcehKc29tI5w2MD
Y8PV9L7UjHBXl11b0J7Q4Ed9jL3/oZia0OLesgEGXSTnvHMrxF+1+oJfOEjv
GxtTcUDUQSacl3BUPEpRZ/Ch0QZA86iu0ZbMMQSMfu5oXUtBTGLQGZ9Der/v
+gUdlq/5ZtPfv9/y46/bDU2MzQ78YeHoauMd5BX79G5RS2HfTBt5YmycImIM
dNekZsRcxDqZOR42Q4fl2tt2m9ud9QgKjU1Lux0WdOucHXbvNveDBw7bu5k4
h/ncz06r70WHlFRa3/RAPqs9MvW+t8Opo9/oGpvYnnINCEbXio0Ji7nudNfF
3NflvJ3zLRPnTH9ccxmRxlMOyD936VippVnKmRePz/P7G5MjIix3HUIQ+217
nK/E+VRMPe6gdlKG57l9wy3JlY/ccJe2u1pp7/jv/28tgqz9z2/X/miydrfT
NgcfR7/AyNjIIP9Lvmfs3awxZ/bbHD94+MAfDnbnLpy9FOQZGhudWlTQ0tc9
xUfrF1u4ki42m5co2w3e7DBxuOJpe/y1RDc7T5OdZlrrd32va7xtpyHGer+9
49lLvn6RkX5Bvn6+jn7u1j7eZ9yu+J8NiLl680l0dEEqrq6yrK9rgD7OVzQa
gpfzQQmVk4HR+4oeZDvvDf4O8bEycbwceSBlILxuooHKlf35kBX5Kh+TQ6hX
WaifszunBMqFVLfzqwHaZfPGn7EGS0pSQgI8bPca/Et3h/E6w+OI0WXjy49v
FnR0M8VUnpStbLQUTQSXKmP2jrRk1jwNSg48ev7g9s0b/qa4HmPt91o6RzYY
3rS7mBOT2/3mE4W+llAvk5g5MEcu+Mh4XorKzy4qow3W1OVGJIccuX58wwGD
//uvv/0dQdb9908Wlo5BPg8q4zLLy6vLyN0l+Q/8Q+x3HduwRv//rP/bf21F
1prr/e5/MTq3qGesuqW2tfJRT961GK/9B37VXocgf//7D//XwG6D3W2HqKKE
WlI/T04TKHrtz/IrrrrgP2zsb3rWrOKAqONXRrts/piKRynqDD402gBoHtU1
2q/K00QfgZh1sxBriw7L9TZoIQus+W6LloWrjnfq+eSG7E7qG7NMUIjDNQnK
CTDNDDevRxf+Rlvb0MbGwd//sI2NjbY2BkEO/Gxk56yYPzO+brR9VDGjhZhF
Erycy9Te3GjTwrUczjo42Jg66OucsrM/Exi3cC0VWKGl+c8iMt2Hj8uy3otF
EJ8tpmdco21TRyKqeht72mSM2vbcazgffWd9xEwbWb/2xXZai2hpIzr6Wvqm
elZWtg62ewz19L7R0kEQnXXf6eha6GC8D/g8uP64KruT1kJh0lgr6Yrxd8wL
6WilVvym6ddw5/SddRAzLWT9GsUvulZLS1tPT9/WVn+Pnr6elr4OslVvw097
DunYYk+EZsVV9HUy5RSe/J0T9TzlFKcjRHw0zlpxXe4F/b2+1+Kv1zIy+rg9
9Ddma13lY3II9WoKdWQDvYn6xuTrKtj51UDAIKFNxGRjzP1A+z0Gil0C+Z/r
kY1myC5ng0sPArKb62mCfqaYwVcMoWX8abSJkNCqOwrvJmHPetvqW+hpf6f1
4tCG7rp6CGL7q+ktrzs1eWQ+2kqM814MvL+eUC/LJ8UzOq+2sjJPMSH5XSf/
45sxOoiuFrJOufutW6+ra3Ya44zzDn6QlHyvvTIm1s/ebtsmHcVGWrNGsaV0
Nm13sPfHxVT3Ps7JyHt4vTrC1v+Y3vaNyuPPmm8QLUNEx0HfKTYgo7WOKUd7
bfrn2VdXX/CD8xuLK7JUHBA1eH34UuEoRZ3Bh0YbAM2jykb75UzFs7Ruckse
MSvyccSlyy4OVpbmlgpWFpb7bJ18TgU/dH/cgKsdaKHMCJQrvBzl0MmTPZXo
sDzrwXX/C6f3WWBOnj3tExh4M+FhcOCNwLPn/C2sQryu3cbloEPr8j76MH1O
8ZJzkyL6M7TuV+XEhAR4WltbnXY+fyUk+E5y8p2Y23dCrt257BZzJ+Z+evnC
tVRgeaX59fMoh6k9Ld21xQ1leUW5meiWyi0qL2t4VttN66HOTLH5Lybl+JTv
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
rZDgQ6MNgOaBRls1XpbmoZLEEjfzGB0kys78Zkwito2TNSxYsjS/a15In+f2
yRi1Nbm5WJ9EjH6Ev19+IWFgWi5ny+VCVfwGQDVYAwRKgV9npH4cjMlXGQg1
eD8ItUaD4IP3++zBh0YbAM0DjbZqvP0duL+F/nkP/0MxNTey2nIa+0hkCmV8
eoLJZShvnhItevOUVHmfEJ8zOTTWUd1TlFKUlBYbke1zOT/xaXvz8wm0Ls8p
XwysTFIRX8Sd4TNozMmRcSqJTO5tKcAVhNgnHtO+eP6o9aVoHWyLe9ZQce+M
ut8pWBKEGihAqL8yEHyg8AWCD402AJoHGm3VePuuLpdtP2As7DbY3ba9mhSa
kFdSWVNH7CYOT/YzxTSuBK3Oi/wctC5z5XImraetOS0t81poevTjpymEx6UD
1c8mhqa4QuUrfYZ7uoBqoHWZO05iDrYMP6smNhZXVmYlh18OOWrisnHtob0W
hmdu6mCb3bNIMCZfDSDUQAFC/ZWB4AOFLxB8aLQB0DzQaKvG2/OUHtP5ZqOO
IaLjsMnqor13eAwu+UkBobCdVE8ToNWZwV9solE+WpflclpfXUUW9i4W4/zw
Bq6kktgpkFPEctZnmJ0UqJbi2+/BFlpjdntJUkF6NA6H9Tt96KjuBn0E2brB
4KdDgTrYRvesweJehrrfKVgShBooQKi/MhB8oPAFgg+NNgCa51Wj7e3t7erm
dvac04P4+Pb2dnW/r9XuxUViAhqxoiU+MPvc3vBzJ5zO+uw+E37uWvzNuNTM
vOLS+vaGPmonXUThSFjCt77Glr14AgifNU4nd1CIpY15WVn3nty9EpeVUtb4
bJAiltB4/CkmizExzZ5l8wVCsXIF+DJ8pRGypznUXnp3dX9zcX1lZl7e44SI
oNDzpy/s3u1+9qJzGP5sev+DpvF2Kkfd7xQsCUINFCDUXxkIPlD4AsFnMplD
Q0Otra1RUVH79++HRhsADfCq0fby9nZ2dXU8e/b+gwdt0Ggv18vayqaRKE1l
nRkPKtOepOGzY1NKU3KriioaGppaiT2kXiqdzBJPz0l54reK6svKTid391bm
1ODCi5MfZeILHmc2VTT19VInWVL+1AxjdJgySOwdI4/NzHIEyhXgS/GVRjzH
4tNH2ZTnY/3tPc+amppqCMX5hU+fZMbGpqfmpVUS8c+mGyhs6ixMgbPyQaiB
AoT6KwPBBwpfIPgzMzODg4Pojw4PD7exsYFGGwAN8KrRvuDl5eTi6nD6TGxc
XGtbm7rfl4aQiIQCLoc7Q2dOT01PTtBoNCqVOjIyOjw8Mjo+NcHk0pXTpwjf
nj7l5bVqFGJNDe52srMD/k50Zkl9HpnfNj03zuOi/2tmYnSA2NlYWN1D7Bmb
oHOUK8A8KiuNVMQX85gCJm12ijpOVWx3dOuj+wC6J4xPMyZYvMk5CUskE0jg
9MWqAaH+ykGov04Q/K/cFwg+g8Ho7++vr6+/devW77//Do02ABpgcHCwqKjo
zp072OAQXz8/N0/P2Hv3KwmEl0eP8fGJiYnZ2VmBQKDud7oqSSVikYCPVmce
h81mzTKZTAZjhk5nTE3RGbPsWZ4Arct8iUz85hMuRdwp7kTnzEBZTertGJ+z
TmaGF+xOXLkUcONOUlTcI9yjRDw+EZ+emZpVnprbUttKGh5nwnfgK5NMIpII
uGh15rFmZmcU2x3d+ug+gO4Jsxzu7JwQrcs88ds7AFjJINRfOQj11wmC/5X7
7MGXSCR8Pp/D4czMzExNTY2NjXV3d9fW1ubm5t68edPR0XHHjh3+/v4EAkGl
vxcAQKXQhrqhoQGPx8c9eHDz1i2/q/4xsbHZ2dlNTU0tLS3t7e3Pnj0jk8lo
r63ud7oqzctkaHWWiIQioUAoEKAH1bm5OR4P/cOb4wsEIolQOo8elt86MHPG
eybaMwbyrycFnjhnvWPz+m92/LAJ85vBQVPL/XstbCwsrK3NT7ld8olICcvs
ymke7aWx4a6ulWleJkWrs+KxIII5vmLTK7Y8Ct0T+EKhQCwRKAdm0nkYk68a
EOqvHIT66wTB/8p99uCj66EtNo1GI5FIXV1d6JC7rKwsIyMjISEBbbQvXrx4
6tSp+/fvt8ElpgCsZtPT093d3QQCITMzMz4+PiwsLCYmJjExMT09HW238/Pz
i4uL0V57YmJC3e/0K8IYqB0sCG6MwAQe0zXYuA5BkDUIooUgOsq/0X+j1m8x
MXONck4lJTRMEqlcdb9lAMCHQKgB+ApB8MFiOBwO2mX39fWhLXZ5eXlWVlZS
UlJsbGzYArm5uf39/ep+pwCAv47NZo+OjqK9dnNzc2VlJRrqkpKSqqoqOKOt
RtzxvvH2LLQ6Z0R7+XuctLa2PmJt7Wht7a78G/03yuli4I2HhWhdruyfJTPg
wn4AVjQINQBfIQg+WMy7Z7RrampKS0tzF2htbUUXUPc7BQD8dUKhEO21p6en
x8bGhoeH+/v70ciPjIzAPdpqJOIy0OrMGKjtbS4jlOTi8fhMPD4Pjy9W/o3+
G1VQXl3TMUikctG6PMuXqPstAwA+BEINwFcIgg8W8+492hQKZWhoqH8BdByO
LqDudwoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHwG
/z9nxofU
    "], {{0, 373}, {1315, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{582.8, Automatic},
  ImageSizeRaw->{1315, 373},
  PlotRange->{{0, 1315}, {0, 373}}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3XlYU9neL/jd3befvv/0W8/TT19fbr33fbzWqbpddajyaJ3yKOWxqkBE
xYHBolTKoZRyRBEFnBBFRBSME6KCRkAUVJRBmQQEg8wgICAgU5B5TiAMgQyk
dwKZIIGQBAyc7+fheCzcw9prr5W1ftlrrzVv5yHL3f87QRAO/5X8w3LHMcMj
R3ac2PBfyP8wOuG4a+f/Qf7F6X8jiL/8nwQh/LsAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4F9ZfbAloT73zJHD
ZLiN/MYypPmTXs8oGe4aXNQspqv3SzGdTm2muIhZBete4iZp+q9lNuWe5vKj
iN1+wp/Tac2a/B4AZKGmAADAJ4FAW/lFzWK6er8Um/rUMktDHBxC1Tr4bAoV
EWhrjs8qjQ5ziG1XZ18E2rOVJqUChk1FzQIAAJhSCLSVX9Qspqv3S7EpTS0z
08fGUE/9g8+mUBGBtmaY+Uk2jsL+vGU0Am0YoWmpgKmrWQAAAJ+IJLpRpQ+s
q4GbNND+VwifVaer90uxKU2tpgefTaEiAm3NZPj5DffnEWiDhKalAqauZgEA
AHwiCLRnMV29X4rpdKA9myDQ1sxUhVQIE2YyBNqaQx4CAMAsg0B7FtPV+6UY
Au1pgkBbMwi0YSwEiZpDHgIAwCyDQHsW09X7pRgC7WmCQFszCLRhLASJmkMe
AgDALKNRoM2kx3jbWhp+oyf6pd63Rpb7fGIqmROetDkzmLLP0ujb4f2Gd6QE
Zzaz1b0ILQbak02bKhGcKtuoe17L4HqBoKc0zM3G4Evhf89bYmnrHUNnKjpv
cxLVyUZ8inkGVraUkIxm7kQ50l6aFEKxtTKSpI1M3TeGRjZO1JiyCe81W9l1
TZxL6pauUUdVOlGeW8bIJuIwUHRedmm4u82SecL//tJAesYJQ0UuszRZdKXi
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
+zrp3Q0FpRmvEx9HBnoFRoXTMotqKtmCpkFhKw8AOgAVFmCWQaUGAACYlfii
H+5Ad0NXQ35raVzKkwDfUxftzewvnw94+qogiyUgW/kOzqdOJgAIocICzDKo
1AAAALqJbKB5AgGnt/Nja0UaPTs0L/l5YvTL0FBaTGxaypvst3l5JRVV9KaO
ph4ug81jc4cU7s7uqmN8zG4qfB5179bpfc5rFv3h6HAzICoHTfxMwe3vYXc2
9TRWNFW/L3+f//ZtdkZK8uuY6PjQ0OREWurbD9lVjIqW3s7ewU+d0n9xqLAg
hAo7i6BSgxAqNQDArEM20OSHNru1MqU47lKSt9Wd0zbH9x2xsnI9cNDLzf2G
H5X6NCYxKb+8oHmAzuCQrfyY3bkCwUA/o6ajOr0+7+nD65f/tDr01ecWv++8
5B2ajiZ+piDbd2ZVfktubH5CaFSov5+f92W3064H9jlaWZ0+du6iX6R3Aj22
sIVs5T91Sv/FocKCECrsLIJKDUKo1AAAsw7Z+rIFAhY9OyjJ25y6hdi7bM4P
c/UJwvCLv5gZr9y6e7/t2au+d2MyYit7yVa+qYcrvztv+Ah9nVVtFbSPWcG3
PNxNjXaSuxuZu3oE0dDEzxQ9jRVk+171/HqM75nLZ+x2796ywXiZ4Rdz5xPE
su+N1+3y3OKbR7by2VWMT53Sf3GosCCECjuLoFKDECo1AEyRgYGB7u7utra2
hoYGOp1eXl5eVVX18ePH+vr6xsbGpqam5uZmJpPJZrM/dUo/tSGOgN8n4HZ1
t9LrS3NL0uIzX0W/jIoIDQ2Nepn0KrMwraSxtL6ztbufI2p9VZhnVNzEpwW9
umh+dx3htOrr9cstvv7p+Pqt7o4u1yb6Lp0v+i6dM8Cq627Mafvw4uG1y1tW
7ZlDGFqYu15GEz9zjP0u/YLTHkeLpTu+++x3s/UbDl9ZdyPvYhw9tRJN/GSg
wsLUQIX9ZFCpYWp8kkrN5XL7+/tZLFZnZ2drayvZCa+tra2uri6XQfbDyQ20
eFIAmGZklF1XV1dSUpKTk/P69euoqKiEhISUlJTs7Ozc3Nz8/PzCwsKamhoy
1v7UKf3UyPad0y4YrK9/n5wV4ffMy/Hq8X1H9my3srLac+TU8asPvZ7lhmdV
F9Uz2KKxaCrMMzrSxFe/Dko8be63jDi7Yem+vUctXCJP+iY8jEqf6O2w4flO
ebyB1gHm+75m2ou7t+zW2eoThtvNXX3QxM8cY98OS3h0/dHZTTd/n3v8wObf
XW4su5J3OpqeXI5++2SgwsLUQIX9ZFCpYWp8kkpNRtlkiE2G0lVVVcXFxWSX
OzU1NTExMUrG27dvyQ20eFIAmGZtbW1klE2j0SIiIvz9/S9fvuzr6xsUFBQW
Fvb8+fOYmJj4+Hgy1m5ubv7UKf3UuF1k+y7oe1+SfO+pxy43s/kbF83V//wz
giA+11+6aONRM7fn55/mvippZIlabhWaVnETnxCU4GDuO5+4snXdOcrdE4kt
IUVdRS0qDyHgMQQcuoCdRwsOcLU8ZEgY2pm73kUTP5N1lMVXRjpmec6/6Wmz
w9N3vmeeYyQ9vgz99slAhYXpggo7TVCpYbpMQ6VmsVhkEP3hwwcyxE5KSoqM
jHz48KGfn99lGWSsXV5ersWTAsA0q6+vz8zMDA0Npd67d+XqVdezbr5+fmSI
PVOfaA/xh3jcIe4glzM4OMjpH+AMcng8vgojyCbCZjZ217xtLYh6G02NuHPh
xhl7l0M7927fsMHMeIOl1YZfd23YePSMV9DT5HelLF5DP7+bMzTRIUea+KqE
oHgH81tkE799vce1e6dT2p+Ust63DaiaMjTxs07nh8TqqOO5lB9uX9qz0+sO
+u1qQIWFaYMKOz1QqWHaTEOlHvtE+9WrV+Hh4YGBgVeuXHF2dt67d+/du3fz
8vK0eFIAmGaVlZUvX768efOmp9el066uDkeP+t25+5pGm6HvaJNRNp/D5g/0
DvT39fT2M7rZPX1kwK3CCLKJdNVV1KXHFj++nvr0XlTY4wcR0cGhwSEPbz8O
8Lx8/NARS6tN+kuP7zt551FCYsNgUSe3pX/C6H6kia9MCIpzML9BNvE7zDx9
AtwzmWEVvaUdKq8igSZ+1mGWJ9XEnCq4utTvsq3NJSr67WpAhYVpgwo7PVCp
YdpMQ6Ue+452SUlJWlpaVFQUGWjv27dv+fLlbm5uNBpNiycFgGn2/v370NDQ
M2fOHDt+3O7wkd37bf2o1Lcz9gu0Ie4gGWXzehm93czOzu7GNhYZa/cPaKGd
ay0pKH4WmORmn3CfGkfLjq7pf9vQUt9ayWXkZQR4Xjcz3kIQR1Zael57GFDW
/7pxsKZ7wuh+pImvSAiKcTC/TjbxNuYU3yDPPFYknV3GUDnNaOJnna4KWm2s
a5G3IfXqoT8pAei3qwEVFqYNKuz0QKWGafNJKnVHR0d5eXlGRsbVq1d/++23
uXPn7t+/Pzo6ekpPCgBTShJoHz9xwv7IkX0HDty9dy8vP/9Tp0tNg8yGno/Z
He/CC19HRIdH+lGfx7zKLa5qIhvMXp5gUIMh5Iza6urUpLfBd9++Sswrrshr
G6zuZHZ2NfJ6K/Mfewf8vtr+M8LV0vLqreCA8v7XTZwalnpN/H3PvO5Ier+O
NfHDc6sO9nV1ttfW1haVNNbUt3V2a56rM9oQn8/jcriDA4MDQv3k/waFrypw
eUM8/hB/SDhPzmBvV09LXWf1+9b6jw0tnTWMwdZebu9EWcasoH2MdX3nbXgH
/XZ1ocKqXWFVKdhD5P/zye1E/z004QBdnSC5Li6Xw+PzhmelHpV0Tm93X2t9
V01JW0NtQysqrG5Bpda8Uo9T+GerGVSpOzs7Kysrs7Ozr127tnHjRgTaALOA
JNA+ceLEEQeHAwft7vn758/YQLunPr8ly786zO7ZZbtTBw+tXX/IxSMgLLmA
zha0DArbI/WP3NHRXFlRmZVZU1Ze39Te1Mtj9Pf3D3QNDbaWPKc+27POfS5x
eavlLWpwQAX7dbN6TbwZxTfQM48ZSe8rY+jUoDWuKKm97bVVZWlpqSHP3qZk
lVTVa56rMxrZbxlk97N7WL09rG4Wi9Hd3d3b18vmsAeHOFxhFEL2ZXpba1uK
0qtfhRZnpmYXV76m975vYZOt/PhHJpv4mljXguuGflcP2aDfrhZUWLUrrCoF
Wxho8/h8Dp/PFcbaWkn0VJNc1wC7f5CMN0TZNKq3TXbI299n1r5+Vpqdlvu+
ChVWp6BSa16pxyn8s9UMqtQMBqO6uvrt27c3btzYtGkTAm2AWUASaJ88edLR
0fHQoUMBAQEFBQWfOl1qYpTF0yMd8zzne/4+3/i7+QQx39jcwTMoIY8lINsj
1b+fHmtggNvNYre195B/kn8X/Y433ExXJwQnOFj6zifu7LW8FxQcUMV+3cKp
6VGviQ/wzGNE0nt1rIknE9MrfJ5QlJMaHBJ8wu3F/ae0nBLNc3VG4w4OkP2W
ns52Rkd7W3tbY1tbG6OLwWL39PPZgzyu8KEBl1FdVPXqce6dM6+ePgx/lR2Q
xyBb+ZqJbi6jgkaPdc27buh7Bf12NaHCql1hVSnYQ+T/c7hcNlcYa/NmRodd
cl29Pax+8u+iOzrqrnfVlJAd8qIAt5TwkMjkHFRYnYJKrXmlHqfwz1YzqFIz
mcyamhqyB37z5s3Nmzcj0AaYBWZZoN39Masx5XpZkHWgy5a9m7cuWLR9r5PP
/dic8n5BE0cw8dfbynE4vL7+QbJ9J//kiGZXG+L3C7jMocGm93FPQo8edP1h
gbe9Q/CzuJctnHddvGa2qtOwaNzEMwXcGsFAAS0k0NXSXtjEW7hSH9Jy+gRV
g4LOCb61HR9flMgBVmtlQ2FSWUIALTQg9G7gDUrgswhaevFHsn1vZQ+y+rv5
/W3MpoqPJdlFafHpr6LjoiJChcg/o0ND41+8iE9IiH/zRvgn+XfyN3GJOel5
VUU1HR9bWUzREK4hnR/GxuewuX2Mga7G1vKiDynJ2aGhSY/CIh5EBvlHhT6J
i4pJTHxNexn3MiYs8sXDJxEhT8IePw4NffzoYWBwgG+Q3/V7Prd8r9zx9gx4
8uQVLaeipLW/vmuwe0BxiUS/XXOosAor7NiHX+oV7BfxSQmZ79+UtpY2dLd1
qzw58ycxxBGuv8ztaq2uLE5KTfJ/lpuUVV7V0MwVdPEEo257X2tN+/uU2uT7
mc8Cn90JQIXVKajUKlZqqckUfl0zxBsYGtRC76K37WP7e9qMqNQItAFmn1kW
aPe1lHUURtQlXIgL9KKcv7Jj//XLd2ISciubuAIGTzDxFKTK8flDZMs+MMAl
/+SLhkoOcbqH2PVDrJK3MRF+xy/sWbrD67hPeGx2YQ+vlj3E5Kq6sIimTTyf
KeB9FHDe0R7dd91wmGziD1m63guh5Q4IqrmCTo2+syZT2CcQdDcUJmYHnQ93
MAtwc7x2zc/NPzkk6X1udRuDIyCj7AFWA59R9jEvNvXpzRAvx0vH99nv2W4l
RP65z8rKcdcuRycnx/PnhX+Sfyd/Y3/81iXqy5DXlaklzR/bevgz4X0xMhjp
b6/uqcsrjgqOcnfxtrJy2bBjj8VBC7MTu3efc3ahXPO5ef70mZN79x+y/HX3
hl+3/fqrldWGHbZ2B85ePH47yMXZ4+wfth7GZt6O7gEP458VMzJre8hWXuG5
0G/XHCqswgo79nVO9Qr2bsczx3yeXoz+EJnXWNbE0iTRU44MNDjtgsH6Mlpi
+AWf82YH71+49yo5/0O/oHHMt6+cnra+lpKuKlpe6J0nx5xQYXUKKrWKlVom
YZMo/LpGGGX31GveuxjobeudIZUagTbA7DPLAu2Brkayx9hRHJX/5mVEZNL1
gDfPX5cW1bSzRK2pdsc4Dw20D/V84HekpUZFeZ4MMjO87uYaE0eraCMbRTIl
Ex9AW018l4BfK+AW0R4HjTTxG1wDHtPyuAI6X8DQ6CvrAdGltJUlUMMd1nvM
J85sXn3s/A3751WBuS0FjT3Ck/e3ke0gt/HNu6jrD89uP2E232LR3K8//4wQ
Iv+cSxDz9fTmL1gwf9Uq4Z/k38nffL1oh8X+mycCsh6+rnhX0zn8sphuf7ku
LVqvLh+nmCzdQhDLiDlzCX2CMPziL2bGK7fu3m+7YeVKw7/8Zb7osoez4PPv
/7noz+Nmt6K3/nnc9vt/niCIUz+vPXPazy2pkWzlS1r7FZ4L/fapgAqreB/1
CvZCo0U73c1uZHjFladVdmiS6CnH7SIDDUHf+/SH9zwtdpkR84+ZOwQGJSge
1svvFfDbBNyaosc3gzeYosLqOFTqCfaeVOHXMdrqXfCGeod4M6NSI9AGmH1m
UKAtnNyWPzT+PLeSpzP00nc5ucWxr8tySxpq21hs0QtOWvr6lic6WD+rpbrh
3ZvSl49fPnzmd/35SZeYoCf5Oe+bu0VfQKvQgmmnief2N7M73/U0xD/3vWq3
dpc+sdR6zdGLt6Ni6xh5Hb0N/ZzhV7HUaOoHWfU9jZmdH569enje6/D2zcsM
7A84XKSG+ee2vK7uoncKl1aXfOdckxX65v6ph87mdpaL/vHN52RD+H//v1/+
x19Xff3TgZW/2e0+ePj8ecfDtn9utdywasnyNas3r998yGK/x+nbz8LS3ld0
cZv7eCyOLobanP6u/o7a7vqi0syYhNBb/pePe9jtOmT+66aFRr8t++3X1baW
Vq77D3iddb/hR6VePufqut/GwcJk8+K//fwf//4VQRgsMVpvf37n48zjF29f
2bfn4eolXr9vtT9wbuPpxxcfpScW1rcPCljc0c8j0G8fnyofBTJQYaUVVnox
GhbsxSbrD13eGVJ8O60ut7Zr8omdPgPMj6yaN+0FD8K9jh1esWYRMXfHur1X
qFEJrbzCbn4LW778DA2Igqa22pSIN+cdUGGnDSq1QpOq1GNNrvDrGG31Lpp6
+3oGZkalRqANMPvMpECbbIG5E8xzK3nfkNHW3NDQWlHT1tja3dU7oHYzpwjZ
+PaQH8ONpXk5z55FnKOE3Qp58pgWkljxprC5urVnQNR4q3Au7TTx/YwaJv11
U37Afc9TvxtvmkP8sHz5gSMXggNz6K8qWys6e9X+koHVkN+c618ReSDw6qHd
dvbfrjuy88y92y+y8xp76Aw2o1/44pn0Larq1Jo3d949OnzJfu2KJf+LbAr/
468G/9hwxMIl9JhP5L1nMW/exEc99guiHPc+vNFuq/ma1aZfLzLaZHfa83FC
fG1/YTuHjLUnn8YpRwYjneWpjZkhUVQ318Pb15ssNTf/1WLzgQ073Q+d9PXy
fhYcSnsRm057k/M2Ly+DFk978SDh4ZWbB7fZL/7bGoLY/NPqvS7eRxMrb4TH
PQ+8UXDD3veY3c7fD+r/bLvLmRrwMr+8V9DIFrbystBvH58qHwUyUGGlFVaa
DE0L9pq9p24dTah9WNhe2NI3+cROn+66dw3p90sfH/G1t9i8ZMHnxGdrTLee
uvU07ONgVju3vlf+zg9xRbF2b1dldk0sFRV22qBSKzSpSj3W5Aq/jtFW7+Jd
e39Lb9+MqNQItAFmnxkUaPNFq8nowDy3/eRnsEDQ+CE9OdLztqeZ/f0LAQmv
C4rYglqOcIIRlWmniWc1lzYXhFfEeXif3LdqGdkFnv/dUpvfj/p6Ps97lksv
aGSoPWy+oyy+MtIxy3O+x8mNRrZniS1PN3hnPs6uVzjSm99Vya+L4xbfeHx5
5waThWRT+PVP6yxc7p5IbAkp6ipqEX7xzqrLb864V/HkgPfhVauWfElu872J
+S5KkG8RK6GWXdWli+PYuuuLyGCk7OmJa0csVhp8LTto9kJc+evKDrnpW8Xj
9AoeXgmwMLEniOPGZmc9hfc0oqjsfdlrTtXjRzfObFj9G3mbDM0c3AMS0hkC
spVvl7/b6LePb5IfBaiwCiqstgr25EbYfgptJbSyZ65v3AzdNur/oj+HvNJF
Ky33X3sYUNb/unGwpltxCeD31PFa0lFhpw0qtUKTqtRjqVf4dY22ehe6X6kR
aAPMProbaIufLPR01rdUFVa9pb3PSc3NzHyTmpOS+DolKoYWGpqWmJKVV/62
pruqubuzq5s/0N3LbGlvotdXlZS9LcxNzKOFZuenVdA/dnaQjS+b3dvLZHc3
dzRV1la+Ky1My8rOjE/JDo1/S/5J/l34m7RX8XFRwiktoxNCk3NCsytSK5qq
O3v6hwSDQ3yeaCWR/q6m9pp3tQWJWdGRkXce3T5DjXz8KquwspbDbeztb2V0
dTS3dTO7+9kTPkbX1nfp9Qx6dlN+WEzwnfMuF6ysHB2cb18Pio/IqsqsbKlR
47t08TylHzOf0q7vCvx97qn9v20+fnmRR9qxiA8JZR0K5y4baC3uLn7clnSK
etp6/c9LCGLOguXb/rjw6FpuV0xVX0WnsJnray7qLAipjzvpe9JizTJh337h
CvOdl+7feNcd97G/kqlDgTZ/sIfb0zTYUVGWHhZ19wwZjOyxXvPT8hVz9H/+
p/URG88Qr7jyiIKmkuYeuQVJxTPPVMQ+jHb48+qCr7z37LvpH+5bwoqvrKuo
LeK1vEl4QDm+zWrx53M3bfzzuM9Tv8KuxNq+avkvGXS/384b7OX0tLA7qhrL
Coto6bTQeFpENC06ghYf+jI+5nl8Clmtkt9WFn1sb+rhMtg8tmhWIt5gH6en
nd1Z21T2voSWkRYan/oiPnVkztjkFy9SQ0Ozk2gf3n1oqWcMdPRy+ocH803m
o6C6tY/RO5yZfAEq7JgKq/WCnVDPrurWoZorMcTt47PbeT2172nBoZf2koHG
bz/+p/5//pvwY8fYbOfFAO+3jLjq3kolN26I3cbvKps1FVYVqNQztFIr2Fuz
wq9rtNW70P1KjUAbYPbR4UB75F25lsrMwoSHCX6uobcu+t24dvHqbY9TZ8/t
s3W1svI87n6dGu33uj7hXX1lbT2XVd9WU1iel5yZ8CzS74HvsbuuVt7+l+KS
Uior2YK6LmZrW013Q0Fl/sv0+PvhD7yu37jq4O5j5ehH/kn+Xfgbz+MOh/YI
p7Tc52R1+paVd+zF2PzEymaGcAFLHkfUKLfXlJS9fpEacC0++EFEaGxIRHZy
9oey+pYuXn9rZ0cdvbayoKyhpqGTOeGL4dpp4jn93f2d9d0N7ysK375JJns1
8fGvcjPzK0s+dtS1sZh9g5MeNi/uVBfFUB8etjr23WcO1r/anffb/5x+N7c1
r6lX4WpcrNq3Tel+5Y92X7e3XLX4Z4LQX7z60CHv6JAKdlozp1a0nulAe1lP
eURH+gV/d+v1ht+RTeHfVpht9wq8UsCMrukrZ+pQo08GI+ym/N7K2ITgC2cP
bVxp8DUZjPywbof+xtPbzz3wjsxKq+woa2a19QzwZDs84t5RY3ZCto9b+I41
T73cn0Qnh1SzUxsYHzsa+T3V+dG+/o6/2i367OB2Kzuvuwdjav3z2/Ob5Abf
6n6/neyQ9zYVdlUm5IY/CHG75Grl6Lp9n+u+7a6OVkccD9g4upHVyuVOfEjK
h4LmATqDQ3bLRXu19zaXdlWn5kc8eeZ2xcvK8eIuxwsjc8ae3rXropWVt/O5
F/cjizLp3eUtfR3DvetJfRS87yC75aI0Dr/FiQorV2G1XrDTWkdqt64hAw0u
s5TTkvrqidfp/Wa/6M8hA43/9m//F/mx8+0vaze7+nnQGsNLGKVtiqdCGuL2
DLFbZk2FVQUq9Qyt1Ar21qzw6xpt9S50v1Ij0AaYfXQ30BbP/lqd8zThtpPv
bkNXm3V7tlubbdltuszYZO4XhgSxbtFK6/1XdgeU3H5ZklVUMtheUlMQnx7t
/9TX7eIupz+/32dIbLEz974blJ3FEhS3NtNrClpL47JifR7dPOzhZLZ568Zv
TbYR83eTf5J/F/5m/aJv/z/hVBvE3AXEsh3ElutrvWP8sioahwSMIW6/cLga
q7YgNTXAJ9h+d+jNWxEJGdE1/XltfU29PeQ/dTbXVRQUZcW9KS0obWiecKpz
7TTxQ3w++cPncof/ItB8jL10ntIrnhYmZgSxf7Wl+43ggCr26xZOjZJOdUdF
WmWsV9Z1M48dpkYLTAjC8Of1rqeptKQ2QXG3oHVg+MCVg3Uv+4pvPrxsYyEa
APadsdnvOjkAdbCjggxGGFnXAzx2mBktIJM6R/9nMhgxdEtyfVZMK2kdf3dG
RQE9NjDvun16mH9Sdl5MIzefwWnqJ3OBXZsenOppGWxGuO8x2elKMfQtck2o
pVV1ye+u6/12dkcV2SFvyfKN9HA6bmRhSMw3/Gyu4dzPDOcT+vO/mDPfmKxW
/9xz82RQemxlL9ktb+oRvv/G7qwlO+QtucExF13clluZEfPX6c03HZkzdpme
3jqC2GJgfOmIZ+LTvDayW17PEJWbyXwUkN3ytzXdojSO1C9UWNltp6Bg85s0
WTdxyvB6aslAg10VHHzDznL1YkLG1/9cbXHC50RMdUh+a1GTsnmbecN3fHZU
WFWgUs/QSj2WxoVft2ivd6HrlRqBNsDso7OBNn+gnccq47a/yY6+e/uU4y7j
dYe27T553NXd28/txFHX7RvOmCx0+GPX7hN3rL0LrkYWpuUXk4H2x4KYjBc3
w245uf1p+9v3O/WJTX+YX70ZlJnDEpS2t9U1lDKqU/Jfeod721w+uGjbhh//
ZvAzMddY32jjxj22bl6nDx3ZvdV6nanRou8NjfV+tiRj7eXHb3hEZWYzBkua
G2tr33VWvEp96uN78oDdGuNjNn+eOeV+4ebDG9QHAQ+CQkODQsMinkYmPY3K
TXtbRW9iTM936aLJWvkjP6LJWic5q8yYAw608btLeG2vE6gXjq1fv4iYs3Xt
Dg+/8PBGTjaD1zC6Uz0y+2vTu7i3gU4v7BcdszRa+oM5uZPxthuej7PzugXV
vVxGfz9/oJtRlUp/faMgyMbrwPoV/1hCEF/8sGrvvmvh9z70JjcO0FkTzOsy
Lbii5VR6GWVpVeHeOR47Lmxes/y7RQQx96sl1msP3z78pPh+Rl1B3QTTLPc0
0VvzXldH+5dlJhdVVL9l8ISZMEgenNOUF5l3d1f0/s8vHDTffNhD3+mV/YPi
mKLWQZmRujrbbx/i9g2x2/k9ddXv3rwKvX/Xw/WSg/OpHccPmjk4/L775J5N
rg6mOzeuXr7U5Ku5xoYbTmz1jDiZ1BBc0FBUV0/2/arfJSY+vXn3ot2lI4dO
bbM/sOqw45bDLoePnD9/xG7v3t9Mt/783QbztQd27Hc/4km9/exV0rvqWhav
rbuth1Gq4kfB9biarEommdTBntae5iJUWHGFnbqCPcQY1Km5i/miOzXQXZVb
G0ctumHnf3z7vm3mi4x+WfCd/l/n/LevCGLp4pUWh67uDin1S2t4W9ut/Dgz
vsKqApV6xlbqsbRV+HWE1nsXul6pEWgDzD46G2iLvpJN668KifGnOP7h8P0X
1tutXSnXQ+Kz3ybGPHl1/3zS5Z2+Xu4OFx+t88jyeJRHyy4UBtr5z7MiL0fc
2Hdq587VC63nEBsszSlXgzJyWYLyTkZTa1VvQ+77hGvRV61u/vm5zar/XPjt
XOKzL/76s8Wv9mdcAsM9bt++fOXsLY/9f9psJGNtYu4Cg22HHf2jwqp7X70r
yE0NrYg5/9Djz4NWyxd/9cXyhd+b/WRkbWq5ab3FRgsLKyvzvQ6nTl5/fDmi
+EVOXVlj9/S8HSZq44dG2vfhJn5y66SMyfneOm5r5gA9NMLH9U9Tq88JfQuz
wxcC4pIZvPe9Q62jO9Ujs7/S0x8nee2gmn2+d/mPPyy2JvRPmh4K8Ykupg8I
mvv7Wb0dXFb9x8zHadSDjw8vtF+7ZMn/+okgjJeucT3qm/S8fjC3k9fYpwvP
xYYXLW2vo4WlnbULMVpw6LtFi+cYEMSyf6w4euBSZNC71pSP3R+ZEyyqMshi
9DTSOz/ktdVVN3cwGvqHOgf5/cInHbyOssSysGOp7os8HazNdp6dY/Fo+6W0
0PS6XlFpGO4N6Gy/neyQ85gfeC3pb56HXDjpsc5oz54d51xd/f0CEkIeh0c9
D6Il3PI7e+jIqtVrPvvC5OethvZ+/wwoOfWyIPFdNqcllfb85oWTu9YtX7xj
2w6nY5e8vGPuBcVGvIh98ybuWeCNm6ftTv9uumfDGvO16wyM1+85eeFWZEp6
M7eknt5U80bFjwLP8Mq0UuGyzqym0ub8cFRYcYWdsoLNGern6VSgzRGt7NTd
kBqV7eEUvnrx7W3mrof37vdw+2Pzb1bf6a8hiPXfr7DY5fWrb8HlhJqMKqaS
4wwNvxE8oyusKlCpZ2ylVng5Win8OkLrvQtdr9QItAFmH50NtDmMMnZ1JOut
Z9BFF3PjIwSx28zKLyD0Lfkxx+qqZIumoEyKeXDm9gvDE29OB2S9Si8gA+3a
vLDsCPfn17cc3bFp6YINBGFmbO7pGZSexxJUdXW3ddaT21S8upJ4aSV1C7F3
GfHDXLnBVHcTs5LfRH/MCiBjbVOjReQ/LTA22+EZcD2P8SA+PjbYXTR4aZHR
AuHw8s8Igtx7vujPz0SDsr4yWL3myA37p1WBmS0F9RMOytJSE69tMkOwTliY
bCUIQ2NLV89gWh5bQOcIGKOfDYzM/lqW4BfusNZjPrH5h++/XfonYXjLzDU+
gFYlvF8D3X0sYc4XRl15cmKlmyGxUf8L/TnG5D01NPNzD3ircM7PT4RsadsF
go8lobeeWpm6EcRGYq4+sYwgtphYelOCs1Wc1VYykpBHGhqSnSG2qyat9rVX
UYAZ5cQukw3OxPzrZg4xAQkVonkABMN5oLP9dplZW702rD5I1i9DM0/3gHTy
Dn7o7esYbCOzriD0VoCVqT1BrNE3/GqjO+GWbhmYEJwcKTuOcfEqS3vvkEcV
A2lNg3WiabdaPyQVR55J8jQ8/bv+z9/Nkd2GVlJcXhiu4keBa0gZrYhMhuxo
Q1RYwTQUbJ0x/JVC24dQaqTVek+CuGb0i6+HW0DWm6sebq5Gv5Al84/vjCx+
9zD0zHKNrKSVdYx/uBldYVWBSj1jK/VYWi78n9pU9S50tlIj0AaYfTQNtIf4
onlyBth93V2dba2N9c2N9U2NDY0qIjckN69vbm1jMFj9PYN8NneIKxpnxWF8
YFe/YL2lBF10NDfeQhDGv6w+edb7eUpFc1FlSX1Vam/185ysV/ejMo8FFD1I
+FBQWi2cDK08qZx2K+vRofP2NkaLfyMIU2NzD8+gVGGgzervYAm/+azLDMy6
uzXc/nNHyy9+/OGvxJzv/7HB7uC1Zw/yWxILS4tKUtvKI4OvH92+6keyITcy
NtsnCrSfpOe9SX5KtvLht467OQknTNtuZbXPyspR9Od24QRqVnbOHhfux5Ht
++tyZk3HBM+GdLiJrxqoi+8tvvXg8smRJt7C1fMhLa9PQB8UMOTHdw9xu4YG
6ob63meGX76222TzXMLwW/2vDTZ+ZnJutf3tc3eeJqfTYuMiwkMDQu5doRzb
f9jChGwHLZasXrfi8EpLv+MXEx8nVytcxVLmHFNVxsbiczp4fZXcrqy0QI/L
5kYbyYv/t7/q/+evc/RPb7Z/4h/zngxG2rmCCZ+9S0cSCh9rDMnOEMusSqlJ
cCvwNfZy2rbC4gQx/4aZQ1xggnBkZJ/u9tuH593h9zcXdBQE1Mfa3754ZI21
I6F/dJXdw+vPi4R3cGCAxWOR0Vz1mxeJ50/4rvzF+c/D284G/eJffOzJ87Co
qw3Jdr7u1mtXryQ++/6XjU6uAS9pTZwSJrdNOKUSv6shvy7bvzj80C3HNZsM
viKr3k+/rN9xlnr+TduT9Jz87KcqfhQEv64tpAvHP/c0fWjKj0SFHa6w01Cw
ZTaavgqrIDf62tgdJT11tIzgW757D9jqG13Y5fggMPh1ZdnTu1dvWa90+5zY
tXjZql9P6h+Osw8siH3XMv5Dz5lZYVWBSi2Y0ZVawV7aLvxSn6JST13vQmcr
NQJtgNlH40BbNBstv7u7o76uqqQ4N7MwNzs/NydXRTl5ws0zC0pK6fTGzpZe
PpPNH140hMMoZ9OjWXlXgjz3mxubEMQXC//5+84TN2/EFDzPKCgoK+hoefeh
qjT1XVVEWl12aXN9Syd/oLunMa+18BE9yc3ntJ3pz9YEYWJsfs4zKIUMtKt7
uZ1s4bs8rUVRJU8dUtwXnd2z4pfVvxL6fxrv8/F8nJbX1FvRUt/SWtTXlhJD
Peu4/pdFBLHB2OyIKNCOLKotKC3uqEgry3lFSxAuARYRGhodGhov+jNCuCRY
aGzSm9R3lQX1PWT7zuyf8I1j3W3i2bUJPUW3gyhkE79tpIl/QMvrFdAHxgTa
A21DrDJe25u4ILcjm3759jPi67989ZfFpnNNDy3f7rTXyZni6Xri6MHdO603
rF9pstRkydcr9OcYk+2gnVPAteC34SnV+XRm+6CwHRxU1thPWRkbi9fXwGnP
7a+NjLp19NCaH/UJQv8/F+n/aKu/MfDgFVpExscunjAY4UzY65cZSTgkikck
M8R2ViRVxzjnXjO4aL9pudkxYv4tc4f4+wlV3aKv74cn7dG9fvvwiDs+oyKx
OuZE7rUlF09bL99/itjob3Y52T+tRnQHuQN84VvA7ZUFpTGPU665PfO/fzss
xS3x490Xj2OfHHoXuPiS08oVq38j5u5atcv3+rPc8h5+E5vfI7wXZL2s6apN
bi0KCKPsP2yyiKx6xktW/3rY2+ZJpXfMmzcpj1X9KPjQ0dAunDx2sKeD7Jaj
wg5X2Gko2DLbTF+FHau/vYpZHt+UcSvq/vUzzpfWbvRw8XwUkZhT09GWEXkv
7Mj6G4uI/YaLf153aM7mR39cS3uWVTf+a7wzs8KqApVaMKMr9VhaL/xSn6JS
T13vQmcrNQJtgNlH00CbbIX53QJuW2tdSXEOLen50/jnYTHPI56rKCJKuPnT
uNcp+fkfGqoYXPITuEf0mchhVLDpsay860GeO8yNhbPjfrFgmfGOk7uvx117
np1YVNXIYjQymY2d3Y1tLEY3u1+4YKaiAVfmrp5BNDLQprMFDNEHaFdVWl2C
V7Gv2WXnPSbbThOGtyxd44NpVcK5SYe6eLxaAbco/THFc4Nwqs9dxmbOokA7
lt5boeVmV0ebeI6oiWcV+QZRnM2Hm/gxeSjB723kt+dyPz5/fOvoBtOlwrF8
n8+du2jZfLMty8w2rDMz3WJmuGyR/tzP54iG9X1BdrUIYvdKSz+yHSxjCxo5
gu4J2/gpK2PjXvsuc5PvRXMy/6K/0c3Q7Y3rszJaSZvm2dtRFl8Z6ZjlOd/D
1sJorRMx39fcISEooVp2dlzd67cPP7rkNuU/zqNuiLYljjsY/vOkcASp1bPy
0JJ22U0Hutu6G8vayt5UlxUWlNW8KWPQEgNe+5sluRGnd3//s+kuhZcs4DEE
HLqAnZce7OlpaUxWPdMFxiY7PA2v550Kjo+LD57sR8EUmMEVdhoKttQ0Vtix
WHX5zRn3Kp4cuE+9tOfqk/luWY7PKuNLhENka9NCU72sgs0IO9PvF5sIB6Ca
u8YH0arGn5h6ZlZYVaBSC2Z0pR5L64Vf6lNU6qnrXehspUagDTD7aBxo9wm4
HYLB+vrSjIyoJ0+uUR54X6Xe8L6pmhvet72v3rlGoQY/TUzIqShoHazp5jHZ
wo9fXm8jpzW3n/487r7z8T9XGHz92bKlf/9l/W9kW/zH0SsulPt+QTFP47KS
86re1TE/dvQx+4RtooIBVwoC7dS6+AvFt0wvH//TZLMLsfS2xan4h8lVwiFD
fCaP+1HAeZf66JLHhhWmBLHT2OykTgbaAwMD3d3dbW1t9fX1lZWV78dFbkBu
Rm5M7kLuOEGypE28i7nJDtlRAWObeA6juo/+qiv/TqDnHnPjv5Ot3f/4ZsGP
v/7xm8u1/Wcvnfbw8PZyPeWwd9cWMzOTxT/+bemX//7zZ4Sx8arTJ66/DK9g
ZTf1N7AmauSnrIyNe+0j8ch/LFj+jz8uWFzLvRRTlV7ROUFSVdD5IbHqxfEc
yg8XDlotX3dMd5r4cfGGp62uzwzJvGr5dCNxbI/R8mPnP7uQtT2iIkL+RT9O
f3dfZz3ZLW9poNc0NJU2MHKSAl75mEUeIJx+//uPq3cTi/3MTyYGJcn3yfks
Aa9RwPnw9tk1362rdn1GbP7ReN1uYZ/cJTQtIS1xsh8FU2AGV9hpKNhS01hh
ZU46SLYZ5OdRXd7LtIAzjw6vOmm/b62919xDT7dcj/OLTispKUi8fylg/wr3
RcSm7+d/+7cthL7nusORd19+aB0SdA0J2Eoer83MCqsKVGrBjK7UUlNW+GVO
8Qkq9dT1LnS2UiPQBph9NA20eT0CTrOAXVmVExd/z/uWvR3lyGE3J6fjqnFy
cj5y+LS93dlLNx+HJL1LaRgo7eS09Qu/heQPdvF6a7mMovyEWwHnrY9YzN1o
8jXZFn+xYNmCpRY/mexea37y8OnAm88yEyo6C5t7WlgjgfboAVdjA+3KlNqX
7kU+JhTHHSa/niJ+uG1xPOHBq2rhhJN8JpdbIxgoSAnxOme5woQgthubHdfJ
QJtsrOvq6kpKSjIzM+Pj40PHRW5AbkZuTO5C7jhBsqRN/Glzkz9l33Mf28T3
t5Qwip41Jp7zc9m49id9sin8q4GhlcO5M8/SfKNTnye9yU6jJb4IDgvwCqDY
OW6zWv23pXOJL375aafN6YfnXzWEF3eWtvRPkE9TVsbGvfaReOR//mDyy77L
f9wrvplcl0OfYPEjVXSWJ1VHn8q9svSinfXy9Sd0p4kfF1c0wLDvI+0h7azF
fSPi6O/LTR0uzKXk7Iuqii6XC9P4nAGyWz7Q3dbL6mCyOttZjOLkgAQvs6CN
xAGzv/9j1W7C0M/cNTGIJt8nH+oTDHUKePXFUb6P9q5xnkvsXWH8q62wT34m
siCp4N1kPwqmwAyusNNQsKWmscLKnLRXMNgiYNML4wKDju10XPKlpfHKhWb7
P/v98vKjN45fv/PsWeANZ1vnNYt2fk4Y/fdv/ue/byDmuJjufHwz8n0NT9A2
JOhVFmjPyAqrClRqwYyu1FJTVvhlTvEJKvXU9S50tlIj0AaYfTQNtLldgsF6
Qd/7kuTHTz2c3czMnDZs2Ldp0xbVbNq0fcMGGzOz3fZnbnlHZETX9Oe1DTb1
Dn/8jrSA9UXPM4MPPT0xn2yLDb4enlh0DkGQn7qGi01O2FFeBBe1pdZ213YJ
vyJWZcBVVwWtNta1yNuQcnibiZmz7GdsP4/BFQ11owV7uloaGxLEFmOzozoZ
aLe1tZFNNo1Ge/r0KfmZ7DoucgNyM3JjchdyxwmSJc1DV3OTPbIzt49t4iVj
1bwPr1q15EvZeWXTm7m1LOGtHOyq7a1NZRQFh1Ps7EwWzyeIZYtWrtt/bUtA
mffrxuyaiZbynMIyNs61j8Qjk5zDdmKS5tvTfpuxfPHT4X77SFmtJlPqYO47
n3AyM7aw95x/Pc8xlh5foSxhg6I5XBlVtICXrmY3DQkb478vXLmHML1j7vEq
KFW+Ty7euCIhIMbBjKwOR82Mt9gL++SuMeW0iqbJfhRMXSbMxAo7DQVbahor
rEwuMMhAQ8DKowV5upoLP7r19b6as2ANscpe/3f7jYfs3dzsD2xcs1H/K+E/
EV/NIdYQhP3KDQFXHxeUcgUNfEG3ksdrM7PCqgKVWjCjK7XM1lNV+KU+RaWe
ut6FzlZqBNoAs48Who5z2oUDit6nZ0U8eubl9eDy5bvXrnmr5tq1m5cv3/by
8gsMjY/LKSc/e6u7uIwB4Yc+n8vmDXRx+5qby2nFyX6vg474ndvmYGO6bvni
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
g9QOCpVRTRWQSwmVCZjyICTQY9nqje6ITayTLymJNPha71CtwKCmGxStdSl4
vIsDBkE2LnVw3I+3i2y9kFJSXJIibo1Mwu93cjD2y/1q6SqH/QEekcW3chtL
O2lssYA9OcmeELG5YoFIIVfO0tNdzdS+1Sb7FnfGJoWfd5qybyccPomMZha6
wiB4fWPopGwdr1kzlJsWc8Z140rjPL1FVla2q2wwu1ZhXLdgNu7C2K2ytbZa
tNA0Ze8rtIxCEI91LnGox1EVBrbaIPqgf6NVnE5k0HA5w91dTeTy3PSS3MzC
3OzcaZKdb3x7enFlVVtb7whNoEEdXPKeVP/Kd3d3clxm6qW8xtotyC6oGpdB
JXdzP33z8qklAzl+DXibkOPO9ptPv3P0ml+9/RaztlPUgn4Fvehj5fmOWZRv
DVohrXaYFNYVi4k4f9hxTyBiF+OCK0kh04ybXS/UapkGTWddWjje1di/190B
c94UtIvo0v4ZFuM8Fv5nEMhvfEbhv414uG3s2YP+Jycexl8/fPOJTVCDX8ZA
SbdxGi2zllgThk3BIJ4bly13NE5SdcKVJJFpv9+8en4KH5zaMK8F+zYzPrB/
Yy4EO3sViNkKFoI2AFgesxC0tVPda1n1qfU3XdLdkLOH7deevbrgWsPe7P7s
1+8JUstFsgkW6uDjI3TGyGjPiKCpnFB2G5NzAjm98x8/bPBAlsc5BZQmlb9u
3/8/e28a1kS+rv3Wt/PpvF7nXGe713a/+2LtXu273ZslbdvNsl22baOIs2GQ
dh5RFAdkUhEVEREJgwoIgiJBBMSAzGOYwiQzYZA5JIQQICSEzPNwKtF2tgEh
ENLP76LTNF2VVFL/u+7nrvzrKRVfo2Ro5N2NqfeiDm4+sQjZ+0/LHY5a+76G
ryJUFYkpmflPrnge37h62aK1a374dedvqIMfuXjnWvCT6PjclPza0iZyy+DE
AFs0IdKTk87IvqVSKY/HGxsbo9PpfX19r/4QdAF0MXRhdBV0xUk26519X7O2
Ovr+l4Of2rec0y+iFHObH8ZhT1pb/oA62f/+7xX/3HXkt2v3Tt8I8vb3Dwv0
uep+6sQBDMZq1T+/W/Ptv65bhFhabva+HFqQ1suvGxYP8SczcO2Nd9kaGZ3e
+fJl9vPn94Kfht2NCQ+LmBrhYQ/C7j68FxyTmFJEqO8lMWVUnnJCMtWg/e8r
NvzjyG2bew1BueTq3vFJNnUKjHcXkbM864N/vH3OfsOOS4Zj39NDbztFKWTI
mQ3TlednZlF+JmhXDhbebo/cGuJ53GrvNWTNA5urhQmlZO08QNWEUjGgkbdU
Pgvyt9u4FUGOWWK8DDJoz6/w50Ag75hD4b/3ojJ0CKLHtcGmgirc9Weum71c
nLa7BJqcTzkQmh+dU9XRQSp6EoQ7vdHPHNmz0uzv3x1ATLE7XDMeFXQz1Rqu
WiP5wldwC1P44NSaBS3Yd+htYL/3EvMgWP1VIAYrWAjaAGB86CFoK3RzkUQD
xATiDZsn65GL+zdsdb9tElzvlE3O6fmgWlPJpaiDS3ljQj57gj/O4nPaS3GE
QEz8buQs5od/bHZELKKtfYriiR/at1qkUY9rlPT27Khnp7ZdMUFObbTcdUZr
39czSCWkFgWnrZkQibu1z83GZLfVMtTBv1mxdsUam1+sHLdbe7l6x0Wk1hB6
x1tHBKN8Q7Rv1IgHBwc7OjpqamoKCwvxfwi6ALoYujC6CrriJJv1zr69ra2O
v3+566f2LR7t4LSlMopuRl/bvf0XU9Tm/me1hb37zeupVVE5lZklFXVVxKKs
xBe4QFyws8ch+y3frTFBvvn1l2MO3gm3iofS2sc7R8WTfE5KgUY+opH0kevz
Cx+HRbo4B7u5+l644Dk1Lly44ubq7eJ8IygiOamkpXxI2jkuHxN//iz2pzni
rz9a/eoUcuRxe0TpYD1lkpsWTYXxnpL+nKsNd9YEOO/bsPOy4dj39NDbTlHJ
uEohbbry/Mwsyk+Ddl85rcCv7b5VsMdRq11XkR8f2HgSnhb3a7vIqiYUCqpG
SipPCrxpu9EKQQ5bYjwNMmjPr/DnQCDvmEPhv/eiQo1sVCOhtObHxV865vHT
t7aWm77HnF60P2TDxXDP0IepqXHhV85c2WZ+bAmy/t/++6//aocsvrb1WHJE
xiuqUjOm1gi/FLQXpPDBqTULWrDv0NvAfu8l5kGw+qtADFawELQBwPjQQ9B+
41z96HHL3TrKDLmAsbRxwZqFNnnkUQp7v3SYkunaPXLIRFyBDybCAnGw/OH7
TSeRrQ+t/YvjKz+0798X7iXgct0xqDlexFgecNHat09uD7F3GH11eltmTeL5
lMtmqIOvXva6HeliBEGP1RarrC47B2clto1V0ng07iQnlmf4IXydfY+NjaF2
TCQSU1JS0OOtzx+CLoAuhi6MroKuOMlmvbNvH2urk+83cP7Uvt/OQwtz3bz5
p2/f7xlbPaKg8bUuKePShLRKTltiWrCzs9UqMwRZa75px+l7B3BdYWWMOupk
t+lUcDUyukb0qqM0OcX/ii8Gc8HOzmnPngNTY8+ew3Z2DhiMo8v1yLD0lzlU
cdOYbFg41aA9zf60k/PWmrEuhywxVwzHvqeHHnfKG11MS55TmUXJ7SXS8nza
wiyCXQ9ZffjJi5UchW7+KjER62NraYEgBywxFw0yaM+v8OdAIO+YQ+G/9ylw
0DCi4TcR47E+1tqRYPqXpYtXbEM2u5jud9l93sXX1+Xs7m27TZdq/xeydDGy
DUFcNtnh7iaTOhWaIZWG94Wv4Bam8MGpNQtasO8tra+B/Y75EKz+KhCDFSwE
bQAwPvQXtCkl8cVXrB+uRly3rd18yMvEJe9kHCmjZUSqW+L34/qbxqcysYDP
HmXR+1uzo/Ju7orZtejU5tU/rj2GfB+882JWbFEPW3c/xd+9VqbrDTnRVxyX
54kJ+xG5YLthj0vAmjsNXhkdRe0UhWhkpIfYXhpdFu8WffOQu8PWHRtW/bz8
B9PF3y1BTP/x3SHbQ2HOwVWPsrrretlC3dNO2jPl6z6Er7NvNpvd19dXW1ub
m5v79OnTe38IugC6GLowugq64iSbNUGWDBTyWyLjg65Zb3T4wnlylW5WoXy8
h9iT5fcyaLPfwbXrzX5AkGW/bHe++jCHMCxvnVCOirX7UCGgS0fqhH0vssI8
XLasRm3unyutNp0ItotqCybQXpIn+xZMJdLIWdoJaa+qa9OfpQYGPg0JeXTv
XtjUuHcvIiTkQWBgdBy+ML++B/Xufq6CI/3C1PF37/249UZtjvjbqs1WLmFO
z3ofVY800fiTbKq27apSo5IrVQr0H6lSLdfeIvWDRSb6yqn5fqRwq0C3Ixut
rxhOi5XpobedolJIlFLudOUp5PULJg3ab7/RdjtqZX3t46Ato2hETcQErI+N
QQft+RX+HAjkHXMo/LcuI2F3cbozhquxOZFuvicPWv9kZW19zMbpuo3vI+e7
j4JiHiU/fxRx08P34Pbzq5ZuW7p66f+7A0GOWNpEYBPqm/+w2/PCFD44tWZB
C3YOBvY75lSweq9ADFawELQBwPjQY9Aujy/xtX5siThvMv9l25lFmLh9gWVJ
1dozjKJ3Z7zfND7ls9lDveTOmoaXz8Jy/PckOJqc2/7LP1YeQv7Ne/uJ5w+z
Xg2jhyDdMfD3l0B/5fWVPsm/an1/DeLx24Zdrrd/DK6/kNKS19ApHutnDbRQ
OytfNeaX5+LSYv0fBThf3meze/kP5shi83/d8I/vXFdZ4dz9ytLLqSzdjSdn
+3T5jOwbPdgODAy0tLQQicSMjIy4PwRdAF0MXRhdBV1xks2a6JNQ8/mk8PhA
L+uNh79w5ZdSVyBJhkmZjbGns899e2nLD2u+XY8gNpY2gdj4qiaBiiJRc3Qt
Q1XiYeV4s4yemxd12XX7z6jNrVphaXEEu/Vek38upfKLX4v8zutepgoujzlI
72zvqKpqffmyqaambmrU1NS/fNlQVdVIekXuG2IPC5Wod3+pl+l77/2Y9cbv
0Rzxn//YvP5cqMPTngcVww0Dk+YIpfZSOPTplTKxXMGXqcQKlfzDIDFBrqQV
3m6N3Brs7qCzb0O5acj00NtOUUoFcv7odOU5zu2fmDRov71G2/24lbX3B0Fb
wVFIKBphE/GpoQft+RX+HAjkvYXnTvjv2mv3l1EIN5qiLJODDt685nHIJeRC
YFzw05ynJTWZlTXE+prmlprSjNi0ux44522nt+wwX4pBD3oW1kF+cdXVXE2P
SMP6Qs+JhSl8cGrNghbsHAzsd8ypYPVegRisYCFoA4Dxob+gTa2OL8Na4zDI
acvl5qv3I2bYne4ZMYTusQ/s8k3jUxad0VnTUpFCIDwMzg48oJtIZrl62T4E
cdlqj4vEkwY0GpZuFtr7L0Emxhf4WEdYIO5711u7+ptha88nNWRWkvgDbRMj
AyzO+KhIMTpCGe2pGG1IzA1w9t2wCjUYc2TZEsQGQS5vtU+MxLd9+MyzxYzs
m8/nMxiM7u7uhoaGkpKSjD8EXQBdDF0YXQVdcZLNetf2+aLu7qWf7WX6yR40
X2a+5AufmJSpEbRr2CWEWG/3netQm/tx+fo1+/0tsLU+GX3ErknO288ln7a8
NjHftHbqs9xVaKUh0Sj4UpkI/YclVqJRQqr8oFR41/v6wgkrG9S+QzHuuTiC
1uyFhltvzx1yIVfCok1XnsPcfvbkQfvtJ3/Sysbn46At/mBepcEG7fkV/hwI
ZJ74uL12zHWrW/dDziW3P6zor+kfFUr4b39GyDW9xEdNiS5Y5yOWq9BxaLFu
p493DLFkTNPO0zC/EPMWpvDBqTULWrBzMLDnCb1XIAYrWAjaAGB86Kfr+Idn
I+1WrVm9BTHZv3qPv1tYVmpjf0XPUM8IiyPgsZi0EQqJ3lZSX1GakVn6IK4s
8VF09gOP8nDMjWM7f/1+O4Js+3WH342YknKmuJMnH5PoLurRnlllaWQDDbmR
D1y2OZgiB2037fa6a/Ok0z+7sai6gttVSO1uaO7uL+nmNPcOUPvauP2VTfjw
FM+jAVbf7/9u0/J/PYgg7lt3PYl43kJVT60ZyPSYkX2LxeLx8XHUjslkcnt7
+x/foBJdAF0MXRhdBV3xj59ZwaPI6KWijtiEO542m1DnMrXAuPrhCqo56h6h
miXTfQrox6tkaxSDHYUP8Be3+ZgjB1Z+v3rFscXLww+45ycU9qEex9eopbpe
OpLxbk5PHuPl/ad+DkfXf2+CIN//YGV5Mnj3w7a7xbSa/lltoDQzlAK6fLRG
TE7JDHc7s2X1UgRZ/refzTddXns61/Nhc079CLpbhJ/ccFMpl8jFExLeCLO3
p5tYX5dc3ExsfdU90sNVDotU/A9vKszpKe7P8Wy8Yx5wYbflgSuIZay1b2l8
OXXer/wyEOT8ERGjZbryZEz0san5/Jbw+KDLr7/c2WhzM/BpOUmooUo1E7pJ
j7qpgL6kcMtA9yMbP2qGppxQSKkaEak8IfCmjbYZ2iFt0I670zSRQxH1GFLQ
nl/hz4FA5gWVlKcQ0GXsV80lsU9DTnkeXHnz+tk78c+iqwcLu5jdo1ypXPL2
Z2KINNz0jJLvc9/r+Na1m9APavU2F/fIvNQBRS1LSRd9frLrwhQ+OLVmQQt2
Dgb2/KD/CsRgBQtBGwCMD/3cR/vD62uOrVv/0ypk0fJv1x7YcibobDQhLLu2
oLmTMsrobKskFT+pSbz+PC4y8GHq2fuV9x4n5yQGd6e53PPYvfmfvyDIUnOr
U2dDUp60c8oHhVSuzvjkExoJVcMnFT0PvHh44/eLkc3btx+6GXWBMPS4vOll
bR6HhCPV5mZUNIYWD2Y3DXb2D0rGacPN+a9eBFeEHLtx6MSv3zkhyNmtux5H
PG+eatfN6TEj+1YoFKgR8/l81JGZTObQH4IugC6GLoyugq74x8+M1tIKZo20
H590/7LtFtRtF6/bccw7JqOEqWznqZmvb/Kh5GrkNI24rf5FcISD1ZElCGbF
P9daeZjuT3MOq8uqG9JdK6dQar/rEHKoL8llUQ240yGnN+00/9siBDFbvWWH
e9jZ1L7HtSPNs9tAaWaopCwlv0fBriY+9ru102Ibgvz8/6xY/rdjJuZhhzzy
Y3P6KELNqEQbJd4HDREiNoU3RGrNyc/yiw2zu5Xg/yK34FUNS9HLV7E/vMqM
1Znd/eJk1c0lNy9utTjlhezD24a+TKylv/bu151fDK/enjtkE1QhtWy68mSM
97D7s/nNd+IDPa0tjyLI1o02/kEJlS0izYDsTdDmaLvIXmm8szrAbY/lb5c+
vr2XfEAjbalMCvK31d7e64il9UXsk+AmXhZF3P2lW9J+JQtY+HMgkHlBzqdL
huv4PS/yUiI8r139GXP8tE94VGbFy0FuN0s4JpQqlPK3PxJ2l6Avm1N/F3f7
JGYDakCLf9h05OTd1Idd4uIhef8X7su7MIUPTq1Z0IKdg4E9P+i/AjFYwULQ
BgDjQw9B+w2fdoxc9M1KE8sTZo5RDiEvonIrmshdFUWJeQ/dUy5bBHg7H/d7
ZIGt9YrNy81+yqkNxfkfxazXTl80Xbd9t3e0bwkjtZ3TwdSdB/59shA+1tt+
5zp0mZVW1ieC46Pa+DnNzS31ePZL/7LCuLDUIkdcR3QZvVE36VHF7VMN5iva
w5ND/OysLiCI41a76PvJjRSFhqnSCGe5HpyRfesPlXhExSEpGPnJ0V5229ei
H93P2+0uRyfnMhTNHNWwrruIRj6mkXRp+BXEeF8f618tEMRi+XqLj+divWkn
y2jLbUj0yrxscdHGdM2yxZ/fXwaCSqhRjWkUVFJyBM5uqwuCbEOWLtX1X7XE
4LA4UhNHg0aJj3aOhDeChghmZz7h7v2gTa4HEIzX9oAH0RUffGK/w2zDtyfZ
l1xGvC+uXefuhbjk2+FIyaQRxe+T/DSGWG/PHVJ2p6AnbbryZLC6WeQMfiM2
PuCiteUxBMFY2WKDE6vbJBqaXMPVVUXsrsK+DI9arJm/q/X6ve6IRaStT2Ei
kawtnNRcpZKmUbRVJwdj7aww2vtoo0E7HtvEz6BIugwpaOuPKQlf/wKZF96O
utiHQTvPhaJjw9qnMJ5I/rA/9u8IqJrRMg0Zhw8/bb/FHP2gllta759stCxo
4YNTL1DBzsHAnh/0X4EYrGAhaAOA8aG/oC1mkSd6ioZfRqWFu1w4smntcpMf
zP+x7OedqIOvP+Rx4rIvNvyef+ANP1/3G5ePXw8K8o7NvprRm1Da3NhYIezL
K0zwv37O3nLV0m2Y7daObuiR0/vRi6TCisaOjvrKwpqMR9Wx3nevnNm3b++3
P1n95nID+7yYQJM09rb3t6Vz6oPz8CFXA0MsT99xu5OEyypF12qszm3ICa+P
dw27fnn/ft9vfwp0vJyZXNSNejdXpZEY0nly/aGWsdXCPiWntgDn74ZZvxxB
bKysPYLjH7TxCVRuP5ujlrIm6HXUpkRSvm+012/H1pqaos71tx9NN50yPfPo
SFBKRCqhrrGuqryoLO8FAY9LjvB/4HPu1pldZw/Z7LLFrLHafuSCr39CAepx
NTQBnTtv7/QzqKVoDYdGCWplVlnAZdxOi4v/3Ljz201LF23btO7MqfOBWBz+
0YvctKIyYl0dsbKUWJpDLMQX5uGzsp6nvEh+fOdx6Pn7NzHYGL+M3MJOtNqh
CFSc15PttXPYtGfXaS8TKoJsntogV49v2OXp//fgOtesvvye8dfe/XpRg623
5wDZeLeQnD1FeTq4P4tPr6KxaB2k3NrsgOKo/ddOYNatXI8g5qs2nDt/+1lS
PbWsg9o1QOEwya1FsdlBhyL2mzhsW7NyzW7E1H3zmcf3Umq7WHzKUO8QpYLV
nZJ2z81182q0xFz/gwXmhO/+qMrgwq7iXjZLpuF/MiP6a1mAwqdJyFxdma1H
gcwDSplQLhiVsMm9DVlFz27F+u11Ou9kvtcL2YDdfj09qqiTLlaOy9Vi3VXk
aqVULeOpxGPcgVpa7dO2TJ/gi/ZWa/5He6G62a9r9/vsxxIDX7wqbGV+2MfJ
GIQPTr2wBJvfx+oeGtLzwJ4PVFK1gq/nCsTQBTuVoK2Q8MUTQ/yRzsG+rpaW
LmJVV2vXEH2ML5z901AAAMwC+gvaChFbwu4RDFY35EXFB5zx2r/2t83/RB18
0Tcr//O71T/8/Kvllk3b9h60cXLbfTnAM/r5g4KG/O7xJurI0DBNxu7tqExJ
i7qCdd7mdGgb6uCm67ZbO5y9EBAcnZp6PyTg7jkH7M51Hvv2HjrhvsUlxOtR
ZurLLrRcpDO6x3pzuc1hKY8uO5468o35pi0HTrn5BaJrRUeFRN1yfuBq7e16
3sHl7haXdF9cfTGJIdR592zbi6Hat5Kvlg+rxT21iaGhtpv3I8iJdTtcrsd4
lTKTWuhtNIpa0E1pSCx76o67+qubnemG//6XxQiy+N++XfzDlsXbndc5ejn5
+IdFhwX4XvU+c8LdHnNmz+5j+w7tPejocO7S2asBF4OjI1MK8hq6O5hi1ON4
UkOakKZW6KKEcIJCopQ+b469Ge/ucHHLxm0mSzd/Z75p3UZLjP2eE05nr3r7
hIX5BHj7eDv5eNh7XT7jft33rF/UjTvPIiPzUnDVZcXd7b2sYbE2REje9HqS
6voGsboLHme67AxchnjZbXG6FrY3ufde9UgNXaD6/UYsGgOut+cAOadXRM2b
ojyvhudmFhQz+iqrs0MTgw7fOrZ87/r/+vtf/xNBlvz3jza2TgFej8ti0ktK
KoqpHYTcx75BJzYfXb7I4v8s/et/rEEWW6/9zfdKZHZB51BFQ1Vj2dPOnJtR
nnv2/my6BEH+8z+//6/1Dssd7juGF8RVkXuEGoZEm7Vn5S0uPOG/4rUxJbqF
9CeQeQBN2cLhVm4fgZAc5HfhwM71fzffsGmJ5THE6tqma0l38lo6OHK6UMnT
nWHRhhEBXcXpGmhIr3wekOh/5Py+X1ct/6v2693F35mYHV5uecfhSlZUdseH
dyYyBuGDUy8swT6p7alrrdfzwJ6Pt4ymbPGQnisQQxfsVII2mrI5lLoRUlp1
QXr8kwyfwIynGQ0vOxlMlXbKBwAAhob+gvZbCxvpJpIy7uRjD6AOvna5CfIe
i5atNrFxM7uccj6xJrON/kEnChqJUhmna5K5zXLVUnThb0xNLXfvdvT1PbR7
925TUwyC7P3JysFF22MztnqweVDb9ULOJUveNCg+YW218v21HM86Ou7e6mhh
dsrhxBn/mPfX0gMGat+/G81YNz4mw34nFkG8Vm894xZ5IGUgtLyrtrNJxa5q
zr6J87JwsUC2mSJLF7/eT4sRE1PEzMLEYutaO7sDjgd2WK5d+42JGYKYLVlm
Zm5jhrm81+vxraTyzDZGA43D4BrSjPFPUEtZqJtr3+mLm7hzFi5myDYTZOki
7RtdbGJiunatxYEDFjvWWqw1sTBD1qxd/uOO/WYHsMeDM2JKu9s4GppQ88kX
9UJdG9QBEj4SZ6+dc3vJYqf3zdhbVey0bkEn64OOrgZbb88B05JnZE5VWVmO
tgvxA2ffY6swZoi5CbJEt5uWLDU333Ya44K7HPg4IfFhc1lUtM8Jh3Ur0QFp
gixahD4gZit/dTzhi4uq6ErKSst5cqsi9IDv0bW/rtAdfxZ9g5hYImaOFs7R
fmmN1RwNmrVZsyPKhSf8sBpWHf2DXs56EMg8IGGT0TAyWhv1yP/EjvXawYb8
ZSmyYhuy2WX91cd+mfUvGZIejpwt1pbiKvEYGkYUjIqW/AcJ2LOXD1jYrDVd
ZvL68IeOmbUIcuDnrXc9IypzqGI0kgwLXxfwxiF8cOqFJNjA3NrC0gw9D+x5
4N1hR48ViKELdipBmz/Siabs3nz/Z/dve7gGWGCwFwIy8BXdFIWGMtu3mQcA
YOboM2i/aWo6weigNuSQMsKSQq9ec3W0s7W21WJnY7vrgLPXqcAnHkk1uKre
Btq4RLfCmwqGRR3tLEMdPOPxLd9Lp3fZYE6ePe3l738n7kmg/23/s+d8beyC
PG/ex2WhLlzSzaKwRNqXFI3KWK2og5dnRQX5XbS3tzvtcv56UGBEYmJE1P2I
oJsR19yjIqIevSh5fy09MDP7fnfPSgq9s6GjqrCmOKcgOx3dU9kFJcU1rVUd
jE76OJMnft24YzpnMeW6G0Xyhiqz6/wvpG1ZFbD76LHjgWvdci7HEHNrGrm8
7o6G1KKkG3E+9rfd7J0d7LUcdrB3crP38HHy8fcOCdadT/b2PuvkYW/vcdLF
wzPIIzAp9FlpWlUn6nFklmBcZAB19pd5d+a8NrUs9jrO3c7P0dpp746d27fu
P3L4lLv7hdsBF70veF50uHzO5tJl14v+oR5hGVHZDSXtDDREsCQa0Yd2phAN
SVj1AlpGEe72zQOHty1ZdXrvhaDonJRufg1DQud/cPmbAdfbemda8ixs6u7o
aOL2VzYTYlMfeAV62Hs62Z88rB2PJ509PW/HBMaVJWWWVlRqv9Euwkc/8LmE
Dkgn+8OH0Qd7j0s+0dEpZYQuRlVjXVN5WldeWEqkt88FJ914Pmvv5GvvEX0j
tuhFXb8BfaM9L8J/0pTXMsJTacRqzese4bMukHnh7TfaxWnRWN9L2v1+wtn+
wm37W3E3kktfNJDRMMIQaO/3rXn/iz8SoTLzcVKYT5C3m4vT68MfOma87e3D
rt3OTSzoev+LP2MRPjj1QhKsx/28lPyCwR5C9osovxt6GdjzwtvDDrUptUw/
FYjhC3YqQZtHJzFqcF0p52P9XI4fcDE1dz1+IS42v6VLqukyrNu0AQCgRZ9B
+01TUwl/bGKoZ6Srrr2muCQvPTkxPikxISHxWXzCc3xOcVZVS2EbnURjM7ii
981IJppAHZxDI3U3EYkF6clPcS9S8Vl5eXll5Xl5hbkvMnITkksLiDXNPc2D
XNSFJ7Rra1RyIergci6Z1ttYXV6Ixydn52YVl5VU1dVWVVVWob8QCmprGho7
KO+vpQdmZt+od8tZGhmd/qq0Nj06NdDjrqeTmy5jnHS76nk3ITC1Ia22v43O
eb/gmRoq3bZJeeQGWn5MW7jzgwsX9+32MVkdcMTzeXx+PV3M6h/q7Gwjkoj4
ygJ8XiZeS3omPqcAX0jMKassffmyrrGusry0NDcH/XwLs/MLi6sLq9pq2ymd
tDEGV4x6nFhuSDPGP+XttWBDHVRSKYmQXJYe/yIhJiY68smTuERtkZTzIjMt
PS05KzU+Ny8nn1hTWNfV0DNEYfK5Mm2IkH9YjEhYr7hd+NHK68/uezke91hq
7nzINSYqvaGVJaPxFdwPSxcDrrf1zrTkSR5mjY0Na7sQk0kd9cVVhfjiHLyu
hsVn5xUVVzZVkaht3ZQBWj+HSe7vaGwoK0KfMQefno4+4AuLyhobO6jkMR6N
MTRM7RzrreuoLy0j5OjGcy4+pxxf2Ehs7u8c4hjQNdrzInyvjPii7iGVhq3L
2rplZ1kg88Lba7QpXY2VxCLtfs/KwxMq8RUkInqwYoyzdXf6ln14KevECHmg
u7mtjlhdWpCf8/rwh46ZUjy+rrSip43Mev9SVmMRPjj1QhLsIY+Ex+lE8lh/
Y0djkX4G9vzw9rAz3EltK9NHBWL4gp1S0KbU0MvudcTuiXDbY2+1d/GSvXYO
98JSa0kiDUlPp6MAAJgB+gzaH6NSylVyiULCl0rEYrFMIFZJZGrFZBfxqRUy
lVSoFHL448xRBoOCVtbDTMY4f1Sk4MpQX/hSSfe6rYVCIRNLBFzBOEvA5QkE
kim+6IyZmX0ruKh3a0SvOkofp/if8MWY7TY3MdXNml1iusZ890WMb+atlIbi
Dsbn+4tOAaWAJh+tlJATE8NDbLd4IMiBTXZhd5PrOhUatOTmGUCdPCe8GSRS
MZ/HYY4xBobpA4MDA+gYGxwcHh4ZH2MJeHyJVDrJ93MCWtVoZSA5ERMecHbL
2QAEk2iLrUyspr1/r5C3GHC9PZfMrzz1h5EJf3YEYqwYq/DBqResYIE/wvAF
O5Wgze0l0vJ82sIsgo9aWK3QNmVfb+3jH0+s5WvQHwAADI25DNpqlVKFejHq
4HKZTK5EbVSmUCtVk9m3UoGugjq4RMDjcjhMJovF4XGEEtS7hWg58MXV1a8d
HH1FuUQkEfAlIrFEIp/ii86YGdm3ZILBozYySdmNOTHpD2+HX3e5dv7YqcN2
dhhLO1t7u10n7HZfvB4Yn1La0slXDolVPPm0345KwlJMdKIOTsxI9L90e/s6
J4eTdzzvZt/N784kMTpG+GL1dM/AL0TeDBKFXCIW8ngc1gSbxWax0DHGZqOO
pw0RIrFM/oXT42+bf7ZXZWQ/CQi/dsTrxo1jt+K3BlT6ZXSVdbPkuianH5VC
C6je1ifzK0/9YWTCn5FAjBWjFz449YIVLPAZFpBgpxK0RcPtLNJzWt61zAjv
G+7XbWyvX8fiXxA7+iSaPoletw4AgK9hToO2WqV1cKVcqUWlUGptVD2p86Br
KRVq1IVlEolYLBQKUR9GizuJQuvdyi+u/7p5pEqlUioVcoVMqpDLFQrlVF90
pszIvrmDvYPVee3JoZUpj7NfJD9Nz0nEJyYlPEjGYUM8z7vZ2u8xXePp5PXw
GaFoSNY2rhid/s1q1QoR6uBKAY3cVEpIjI72vnDNC+tw8fEmt4zrTxryWhio
nQh0Dm7UvBkkSqUcHV1SsVAsEoqEWkQisVgik2pHjVL1hWLvbfPPrGcPr3nf
2mLveswr8kps8f0KWn4nq5clVr53r5C3LKB6W5/Mrzz1h5EJf0YCMVaMXvjg
1AtWsMBnWECCnUrQlgtGRSOt3L6izrri4ryS+ISyovJXHdQxtlzDNqTboQMA
8Jq5DNp/JmZk38wOUntqXImvC+FJTD6xLocqbhwapTP7FJymlzhsKMbyAIK4
bbLF3kvAdYnLGDIq7+vPZ4uZHZz2VEaJb/Qdv+0HbyNm2O3uGdGF3Qy1BnUU
8Z+rgp4eb5t/hmFvbd5/EzHz3eqWcj+/g6LQ3mXjS3e0XED1NjB9QPjGDwjf
iADBGj8LSLBTCdqvOyqg41ahlElkioV/vRUAGDkQtPXDjOybQ+vvryxpTHzU
WFzU1N6rbQc6PjHOZSiFfc3JYbj9W1wWIT62tncjE3E94rJhOZX/9fYt49IF
tBrUwQvTn98MTtp56umN6PKc+oERhXpCpZH8yb6rmhZCFnWsq5xa+ST9ecL1
O8kY9xTfJzV5JDrq3VzdLV8/C9TbRg0I3/gB4RsRIFjjZwEJdmpBW6Wb6i5X
qRRyhWrhX28FAEYOBG39MCP7FrDZI329fbU11K4e+rCuHahYLJZy1TJmR2ZM
6skdfiZIyEHbyJhEXK+kbGRG9q2U8lAHFzM7etqaCYTqmPiSvLK2FvIoU6bi
KdRg33+AeILJGWhntBQ311bnlTfhCB1FLfTuUb5Q591f6t4K9bZRA8I3fkD4
RgQI1vhZQIKdWtB+3dZAqbvAY8pXdgAAME9A0NYPM7JvqVTB40s+7Oj7ZrJQ
PyGR4G4bZYY8PGX7OD4RR5aUjcqpgllohSIV8HijjDFy1xiDzhrnsnS3CJHC
fKQv8/YTY40OjQv4qAELNZNfKwf1tlEDwjd+QPhGBAjW+FlAgp1a0AYAYCEB
QVs/vLHvPkJ8vrt1uBlyT2vfcdimiQyKaFL7lsuVIrHs/Y6+apVYo5hQy4Zf
5T/HXzzn8+OKMBf3xNT8glF5C1c5IpmFm3zIJWLRxDjqR3zOOF8oQr1brPiD
VrHAe58Yd1wgEQt1u3zSGx1N9BKpeT6kUIvou1BvGx8gfOMHhG9EgGCNnwUk
WAjaAGB8QNDWD2/sm0yIL3S3jjRDQh2sQ6KeYJt4GRRxF2eS1pAqlRp17fc7
+qrlPLWEruZ3NOamR3vePrnmaKDn/bS8ulaBkiZRT3xp8tN0UKGvJhFLBTyp
WCSVyaVKNerd4N5/wLtPTCKWKeSyz90i5FNQ+x7I82kJs3h49/xxqLeNDRC+
8QPCNyJAsMbPAhIsBG0AMD4gaOuHN/bdT4gnuFtHmSHhDtZ3ouKxTfwMimRS
+/4UtZSlFnSr2FWV2dlYr3iMRaivT24+sXdMo+FpNFJ9vANAP3B7ibQ8n7Yw
ixiot40QED7weUD4BgkIFvg88yJYCNoAYHxA0NYPH58n97WxOH/Bd39U5e2M
pqzabjKVRhseG+EI2LoLrGRfvMBKqbuWSMwf7R9qqegsSC5ISI0OzfS6lhv/
vLn+1Qjq3SLdiwGGiVImlgnGxWwGZ3RgmE6mUrsa8nB5QSfij5peOX/E/mqk
GbbBI6O/sGt8vrcUmBVA+IAWEP4CAQQLaDEQwULQBgDjA4K2fvj4yi/Xdd9j
bByWO9w/cCMhOC6HUFZZTeogUUZ7OHKGQIE6+BeeB/VugUbDYXQ21aempt8M
fhGZ9DyZmFTUW9E60s8USHWvNAvXfQH6AfVuwTCZ09dAaa0g1RaWlWUk3rsW
dGSL64rF+3faWJ65Y4at98ggQ71tLIDwAS0g/AUCCBbQYiCChaANAMYHBG39
8HEv06Nm36wws0TMHFfaXTlx+V4ULvFZHjG/mfySIUEdnC3+UjNSMerdGg2j
u7o0A/sAi3F5chtHKCO1STQ0uYY7Cx1MAf2iPUPe18CozWwmJOS9iMThsD6n
9x8xX26BIGuWr/9xv78ZttYjo6+wiz3fWwrMCiB8QAsIf4EAggW0GIhgIWgD
gPEBQVs/vJ5IJmGQShti/TPP7bx37rjzWa/tZ+6duxl7JyYlPaew6GVzTTe9
jSWj8RVc6UenulWv7xIi5g6zqC00UlFtTkbGw2cPrsdkJBfXtvbR5AqGUMzk
cNkjY7wJnlgiletWgBPmhoaUN8and7E6KnrqC1+WpefkJMWFBgSfP31p+3aP
s1dcQvBnX/Q8rhtupvPne0uBWQGED2gB4S8QQLCAFgMRLARtADA+IGjrhzf+
y2OQaXXFbWmPy1KfpeIzo5OLkrPLC0prauoaSZ3kLjqLypWPiZRC+UfG+8b9
WdSOrrKsSty9wsSn6fi8pPS60rruLvooVylmjrMHKbQ+UtcQdWh8gi/RrQAn
zg0NuYgrZg3yaK+Gepo7W+vq6iqJhbn5z5+lR0e/SMlJLSPhW8dqaDz6BLTJ
MQ5A+IAWEP4CAQQLaDEQwULQBgDjA4K2XlHIpBIBXzDO4owxx0ZHGAwGnU4f
GBikUAYGh5kjHAFL12JF+nGLlTfz2Wikykrc/UQXR3xEZDrhZQ5V3DQmGhYK
0P81PjLYS2qrza/oJHUOjbD4uhWg14qhoZSJ5UKOhMOYYNKH6dr9ju59dAyg
I2F4jD3CFY6KFFyZSqKArziMChD+nxwQ/sICBPsnx0AEC0EbAIwPCNp6RamQ
yyRi1MGFfB6PO8HhcNjscRaLzWSy2BO8CaEE9W6xQiX/8C6YMgFTMNI23ltc
mXI/yuus8zbLSw7Hr1/1ux2REB7zFPc0Ho+Px79IT8koScluqGokU4Y5cJ7c
MFEpZAqJAHVwIXd8Yly739G9j44BdCRM8AUTIinq3UL5xwMAWOiA8P/kgPAX
FiDYPzkGIlgI2gBgfEDQ1itqlQp1cIVMKpNKpBKJWCwWiURCIfojFIklEplC
qlSjh+6PDt784c6R5rTe3FsJ/sfP2W9YtfSbDd+vxPyyft9W2z07bXbb2Njb
W59yv+oVmhyS3p5VP9jF4MGVX4aJWqVEHVx76xCJSKzd9do9j4KOBLFUKpEr
JLriTamGetuoAOH/yQHhLyxAsH9yDESwELQBwPiAoG2AsHur+vICa0Mx/kfN
169YgiDIIgQxQRAz3SP6O8rS1Vu2uYW7pJDjakZJdMF8bzIAADMFhA8ACwgQ
LDC7QNAGAOMDgrYBIhjuHm7OQB08LdLT98JJe3v7w/b2Tvb2HrpH9HcU5yv+
t5/ko95d1jNBZUvme5MBAJgpIHwAWECAYIHZBYI2ABgfELQNEJmAjTo4u7eq
q76YSMhGd1A6Hp+DxxfqHtHfUfJKKipb+kh0AerdE2LFfG8yAAAzBYQPAAsI
ECwwu0DQBgDjA4I2AAAAAAAAAMwjELQBwPiAoA0AAAAAAAAA8wgEbQAwPiBo
AwAAAAAAAMA8AkEbAIwPCNoAAAAAAAAAMI9A0AYA4wOCNgAAAAAAAADMIxC0
AcD4gKANAAAAAAAAAPMIBG0AMD4gaAMAAAAAAADAPAJBGwCMDwjaAAAAAAAA
ADCPQNAGAOMDgjYAAAAAAAAAzCMQtAHA+ICgDQAAAAAAAADzCARtADA+IGgD
AAAAAAAAwDwCQRsAjA8I2gAAAAAAAAAwj0DQBgDjA4I2AAAAAAAAAMwjELQB
wPiAoA0AAAAAAAAA8wgEbQAwPiBoAwAAAAAAAMA8AkEbAIwPCNoAAAAAAAAA
MI9A0AYA4wOCNgAAAAAAAADMIxC0AcD4gKANAAAAAAAAAPMIBG0AMD4gaAMA
AAAAAADAPAJBGwCMDwjaBola96NSysVyMUfCGxkbpJLbu0hVpJ5OKp05wZZr
BEqNTDXfmwkAwFQBUQPAnxAQPjBVIGgDgPEBQdsg0foy+iMXj4vGKbwhUufL
sqLkjLjAuOw0Yk0btU+iGZZp3RkAgAUCiBoA/oSA8IGpAkEbAIwPCNoGiUr3
o5DyhrhDzczO/PLnuKirAS4Yl5BbuJRiUi1fg7ozWz7fmwkAwFQBUQPAnxAQ
PjBVIGgDgPEBQVs/oMaq1GjkwvEBZm8VpQ7fVJpZlFOAxxNz86rKK+oam5o6
esmUYfawQMGRKCUK9WdXl3AHOQN1w62Z2Y8jvZ2ubDM/4uEegcuuB2teKCjE
Asn4sIDRO9z/qudVc2Nj3cvy0rLcnEI8vrSIWNnYXUfm9I4Kx4Wy+d5SYFJA
1IAWEPWfDBA+oGUOhA9BGwCMDwja+gE1VvRgK2H2lbfnB5WE2T/0dvB0crO3
9zl7LtDXLzw6JiYlt6ikuYc0IqVw5Kg7f7K6QqORijlUdn81vSklITTkuP35
pUts9h8LCsNXgzUvFFBfniA3jzbkNRPw2fjY6OiwEF9vn7NOHvb23pduBkRn
hBEoea2jqDvP95YCkwKiBrSAqP9kgPABLXMgfAjaAGB8QNDWD6hrSjQaPqUu
viTMOuYAcmrt4h9NTBHE4pu/YSw3HXQ8febG3ahHuS/z+oSoOw8LFB+urnz9
DKJx8lgvcaA2MdLfb+v6Y+jq6619/OOJYM0LBQGjF/VlcmZobtT1kOvOjo4H
7CzXWnxjYoYga1da7jiBPRDVhLpzHZkz31sKTAqIGtACov6TAcIHtMyB8CFo
A4DxAUFbi1quUYk0Ci6PSaF3NnRUFdYU5xRkp6OfTHZBSXFNa1UHo5M+zuSJ
5TrXnEJ/0N+tuSq+OMD60Q7kwuZlOzfYLPvFc+dBP49r9yY7B67SnQOXS/mD
PEb9WHdWwr2QA5tPLkYsbKx9QsCaFw6fngO/feGkh82ao8sX7cfstHO9syO8
KSCfUtkHNflsA6IG9AOI2qAB4QP6YQ6ED0EbAIwPCNpaUF+WszQyOv1VaW16
dGqgx11PJ7eTh+3t7U+6XfW8mxCY2pBW299G50h0c8im0B/0jTX3l8UXeVtH
r0Vu2K1xOnXR5lqGVxQhIbt6squ6XvcpVSqlTOnEK9EIMetRpPOOM6aIxWFr
n/tgzQuHT6/qIjwLfXZjT8R+E8+ze/dfC197p8k7h1LaAzX5bAOiBvQDiNqg
AeED+mEOhA9BGwCMDwjaWhRc1Jc1olcdpY9T/E/4Ysx2m5uYLlmEIMgS0zXm
uy9ifDNvpTQUdzD4OsedgiX+bs2EeIK7dZQZcufgjpvBjy4XjSa1cdtGJVPd
MCVHI6doJE3ERJyP7XkLxMLZ2ucRWPNCht1V2JfhUYs1i8A6HMVGmWGbPDIo
hV1Qk882IGpgrgBRGxAgfGCumHXhQ9AGAOMDgjaKZILBozYySdmNOTHpD2+H
X3e5dv7YqcN2dhhLO1t7u10n7HZfvB4Yn1La0slXDolVPLl6sqd8Y81kQnyh
u3Ukas2Hd/rfe+xdznreyX81Jp3qloE1Gx3j3UX92Z4NwT8+CDp5LPAh1OR6
AkQNzBkg6mmjVqmVCrVCppDLZDK5WCqXyZVK1RTmcU8GCB+YM2Zd+BC0AcD4
gKCNwh3sHazOa08OrUx5nP0i+Wl6TiI+MSnhQTIOG+J53s3Wfo/pGk8nr4fP
CEVDsrZxxah40nrgjTX3EeLz3a3DUWs+isHex/nVTLzoFXayp3z3B7Bmo2Oi
p4Sae5V0d010yBmHoBioyfUEiBqYM0DU0wVN2Sq5RCUVSsUigVDM4UkEIjRw
T2Ee92SA8IE5Y9aFD0EbAIwPCNoozA5Se2pcia8L4UlMPrEuhypuHBqlM/sU
nKaXOGwoxvIAgrhtssXeS8B1icsYMipv0nrgjTX3EuJz3a1DUWt2sA6Oisc2
8TMoki7OlD0VrNno4PYSaXk+bWEWMXfPHw/GQU2uJ0DUwJwBop4uaoUMTdlK
IUfImxgf5zHG+GjWFktnYfSD8IE5Y9aFD0EbAIwPCNooHFp/f2VJY+KjxuKi
pvbepjFZ//jEOJehFPY1J4fh9m9xWYT42NrejUzE9YjLhuVU/tdZ8xNsEy+D
IjYwa37dE1Um4o6zaDRaWweDSh8b56HbKFRqZLMwlW9BolaplAq5QiaVSbWI
0X9k2smNCqVaqVKr1Nr+NjIhVzA6ON7/ikkfGBodp3JkTKFCONlHNtFLHMjz
aQmzeAg1uT4BUX+1qKcy+NXov1Xocrr/Vk86+dYgePu+FAq5UqV83XH6o02X
C3kiJp1L7Rgbog0xQdT6QjYxJBioY7ektZal56RlRMdk5hY3tJOHZ+47IPyZ
C/8PBGKsGIjwIWgDgPEBQRtFwGaP9PX21dZQu3row6xhoZIjFoulXLWM2ZEZ
k3pyh58JEnLQNjImEdcrKRv5OmvGBEfFYZsmMiiiLo5BTTZT6DZVyKKRu6qq
KpNSG8trO8h0ikQzKtO6858TtN6QScQSAV8o4PP4fA6PxxOKhBK5RKaWK7QJ
A61BhEzaaFt1fzG+vaayrr2vjCJ8NSpB3fmPnxm1ZmqeDynUIvrueQeoyfUG
iPqrRT2Vwa8N2kqVSq5SKbRZe1Y2Wt+8fV9SiViGZgndx/RRJY0W26xXNbSy
1M66qoZXZBC1nhDQm0drY/tfOKeGOF89d377zvPX/HEvSkkz9x0Q/syF/wcC
MVYMRPgQtAHA+ICgjSKVKnh8yRhLgD6iv+v+pnxtr/2ERIK7bZQZ8vCU7eP4
RBxZUjYqpwq+zppx2CZOBkVoYNaMboxQ+z1AW31lYlLiZd+sJynE+o4mvgZ1
56mfrTcyFDIpWm8IxlkcNmuMNcYYGxvjcDl8iUCsksiUCu3JfgWnv41cnNzw
8HpxSkJacR2uiYO6M3WyncvpJVLyfJpCLaLuQE2uR0DUXy3qqQx+NfpvuUIh
UWiztnJhFONv35dQwBejv+v26Ed7nUvtQIvtNpxveVpSRmk9iFpPcLoKKRke
TVgz7H4zy+VmCGJmae2OjSfM3HdA+DMX/h8IxFgxEOFD0AYA4wOCNopcrhSJ
Zagvo49yXT8WtUqsUUyoZcOv8p/jL57z+XFFmIt7Ymp+wai8hasckUy1fcqM
rXlCo6BqpCRiUpyPrYvWmm18YhKI9SINWaYZn+Rs6x+j0m2klM/sG2ot6SLg
iHgc/lFceHBcajqxun0A9WWmRMYX81TisYnh3oGOuraqwurinPzsdLwW9DEH
jy/MyiokEAorKrSP6O/oX/KL6qubyG1U9gCTP6GbeqU2+OlnKrlEIeJIuQxm
T1t3eWkdHl/y7EX604z42Gz88/zs3KKiMmJBfkHui4yshOfpSc9fJCfj8cnP
EuIScVHx0aGP70dG3XkYhsU9f15MrO/tYIrpXBlP+vkKBWryuQFE/VlRf/rF
1tcN/qzCEkLNq4pOZucQb4w35cbL84Jarr23soLL7O9rL6ksiU1tKKntIQ+N
KDRcpeaj3S5iUlmvymmlT2pS41If4kDUeoI3UMsoD+2K3xd37cCpvQdXmB8+
deH+k7z6HrFmWK6Z/EvmLwPCn6Lw3zEdgRgaaqVULZuFKkU4NsB6RZx34UPQ
BgDjA4I2ikqlRh1ZKlWgjyrdNEi1nKeW0NX8jsbc9GjP2yfXHA30vJ+WV9cq
UNIk6gnFVG8IMlNrVk1olAMaeQvx2RMfO1fUms/b+jxOIjZINf0KzfiMzjWj
WyhC652h1qK6+Ftp7hicr8e9e9G+saVJJa8a+sc4aLUj5kn5QypO10BTXmVK
RFKgR5Cnk8vJw/Za0Ecne3uPEyc8LlzwuHVL+4j+jv7FxTMyKKYgqayvsmNk
YEygWgjXeaFBQ8zqFww2tWcnZvtdC7O3v2Z39KTNORvMZUfHm1euBd+7H3HL
+7rXqdPnbXc52u06tGuXvb3d0TPOZ28EeD6Iv3bF/8aRM/6WmDAPP1xCYWo7
p4YmQN35s68FNfncAKL+rKg/vVTz6wa/o8f1S/dTAnK6M5oYXcP8mWy03kFD
hJylkdG7iEVpt+/fwpx7cvtxcWlzt1jD+CTTyQVjotEOLpnYhH/4/NIFELWe
EI12sVvTBwm38+MCg2/dOXo6NORhLqGhb1ih4Sg1kzcC/zIg/CkK/70Nm4ZA
DA1tyhbQZ16lSIVjQgMQPgRtADA+IGh/FrWUpRZ0q9hVldnZWK94jEWor09u
PrF3DDUz9Jg8+RPMljVzNSqaRtFGTI5/Y812PrhkYpNCQ1FpODM61SzVvZWx
LkJMmvtOfzPk+t4tl26Fu2SS4xpGSQyB9sXFY6h/KRgVLdmhCTcOX8aY2Zib
LFuyCNGCPpogiNlf/mK2YoXZ5s3aR/R39C/LzI/anI64jKtNKOttoY6/vsjL
sE+Ka6RcBho02O3ZxSGewVZrDiDIWmSxCWKKIBbf/A1juemg4+kzdps2Wfzt
b2a6t/36I1iy8mfz456YyJyDxz3PrPz5MoJcXbf9une0bwkDdecOpvizrwU1
+XwBov78Ol83+L9fb37MDxP+MjC/p6qPPZON1jsKLhoiNKJX1QmPsTYnMIjZ
JWv3uHjC56fsqoQa1ZhGQW1Ljki02wqi1hNvR11zRUF6RkkoriKzrLONyuLr
NDa7VyyB8CdZe1oCMTBmq0pRqoVq5fwLH4I2ABgfRh+0tS1xVeopd8dV6q5y
EvNH+4daKjoLkgsSUqNDM72u5cY/b65/NcLTnTiegvPMjjUrxCOS8RbBUGFm
1F3n7SdMkTX7tl0MeJCdN8hpYguHxPLXl1B9hUXL+HQBo2a8O7U44Vag6+G9
a1e7nHUPiHkR2zBa1s+ljKMb/+5cMbUWX/HkasIVa2db83/89xLUwP7v/+/b
f/+fzct+ObvpN2fHc663bnm4njl+0NZu808btm3Zu3PveZvT/t4PUl9Uverl
KkZESr7cEKO2XMwVs2k8eltnTS4BHxkb4unvfOK89a4936//be1vu7acsbX3
OX028IZfeHRMTMhNH5/TDu42VntXfbfu3/91KYKs/mn9Tpdbx5JrPAMe3HE6
mbDlp8D9B13O3tztnRzwrLqolc6SafiKj79HgJp85oCoP8tURP3uzcxw8K+y
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
bzbqbdxq8ZuRw25zHxffhDtpDSUDM88muJOclTgmR4vs6Ohod3d3Q0NDcXEx
/oPQBdDF0IXRVdAVl3hbr0uzr7nRiYV3xr1bmvmT3czONFrptdjLNrt/00ZL
2D+36Fu7XbuSVhuTV5NdXt1USyjNSU7HBeNCndwPW5t8v1UL+Wb7b8ftfJOu
l41ldM30TPKX+JykXLl4Qi4YJDUXFj+IjHZ2CnV18ffw8Po4Hh4XXV18nZ2u
htxJeVzeUTUm7JkRT/Pf/w31u73G334y2u4YdvRB152K0ebhJR5s9DFm+suH
8i613Nwa5HRwx17v1Tomfw8ItXxVh/oL7PyvfcFQL3hRnlw0KRcMPytMSLxw
3P3nby0NjX/AnF5zKGyHZ5RXxL20tISoi2cumukeX4cY/Od//+0/rJC1l02P
p9zJek6Wyqfn5bzFGm3NCLXKNopMxJLyKJ8az/dc9vxuoz1YRSkK6LxtFOp+
zGjfJeSnuxZeJY/KhhTTPstmJRKyXEisehx8zXKnEYIcMcR4rchGe4VUc9UF
ZMFLqCH4qhulqCX40GgDoHlU0Gi/rEpD6DHJzTxGB/HAGFo4Y3Ui2twLhosH
FjsEiZRTOTJJBFyRH+aOPmJn+OMPxicR03vmgWWJNW+Oyf9ceKAEl++GQQuf
J8bQ1lkxJvfL7ycMjKOvTu3Mbkg+n+qtg9b9Ld+9mGp0LYKgx2H9zUbeTqE5
yZ3TNRQ2hbXEl8bL/BD+Wmmenp5GSy2BQEhNTUWPt34fhC6ALoYujK6CrrjE
23pdmv3MjU4unOv13dL86hqzSJddu37+duFE0HUTEgpHUQFFLAqPUsPsTM4I
dXIy2qyDIHq6xntOh9vieiMraU3kpR7BKWHJRVT53PPuipTUwIv+GIyHlZXj
/v22H2f//iNWVnYYjIPzlejIzPo8Mr9tWjTO+9hG+xPnnl3aq7KLdT5siLm4
Wsfk7wGhlq/qUH+Bnf+1LxjqBZ8CE20i5Jw2QiLWz9xQH90t/uf6tRvNkF3O
2oecbc47+/s7n7Uxs9Fer/hfyPq1iBmCOBtb4W6lEHsk8jGZnL3IqTMNCbUK
N8rLXHxSPD/msmfWAIFS4NcZqR/qctjozU+eL2VKlHeaEJKxfpaKzW1riPFc
kY32CqnmqgvIa+oIvupGKWoJPjTaAGge1TXaw+WJZRfN721BXMz0dh320XIu
OJlAzOqYECqX+POY/XI2YxGfy2FM0qlDz3JjCq7ti9u35tSuLT/pHUd+CN3r
mRNf2s9QPivxzwG0SDnv4+xgWUKBFybyJ8TDcsd+56CtN1t8srpLu4YlcxMT
/YSuitjKRNfYa4fd7Ez37Nj864Yftdd+vw7R/vf3hy0PRzqF1t7P6WsaYPCU
P3bJ+VD+2ofw10ozg8EYHBxsbGzMz89/9OhR+AehC6CLoQujq6ArLvG2ZkmC
kWJOR3RiyGXznXaLfAcuU14qLJ7pJ/TnBNSH7Ar4Q89A50cE+e633U6X7uWV
jIufzUon+YptKOFShRNNvMH0nEh3Z5MtaAn7ZZORsX2oVUxnaAmlnrTUmTLZ
nFxMV1xs9ryuMfNJWnDwo7Cw++HhkR8nPPxOWNjd4ODYBHxxYXM/WpeHWBKm
cJFLx1//7ifMdyp6jX9s3mXkHOn4ZOB+3UQbhbPEW1VMqSqVy8RSmQT9Tyid
Fysef/rGIrODVeTCAGKUUbDr0Z3mF1frvEnvAaGWr+pQf4Gd/7UvGOpXO5uA
0cvsyxqvw+ZFu/qf/MP8ZyNz8+MWjlcs/O873bofEnc/5en9O9fc/f/YfX7z
erP1W9b/v3sQ5KihxR1sUnP7B2dp1pBQq2yjyCQCqZD1qfHksYe4Szbar85o
ux4zMr/8dqMtGpbPtRGSsH4WK7rRVnc1V3lAXvuiwVf5KEUtwYdGGwDNo8JG
uyqx3N/8gSHiZKz7m9mZNZiEg8GVj+sU3x7OvT6N9XI2Yw6DMTZA6mloqX8S
mRe4P8lB69zu3/696TDyn7677Z/ey3k+jh6ClMe3P18C/Sd7sOJh4SXz21sR
99937HO58VNos0dqR0FLD396iD7SQe6ped5aWJWPy4gPvB/k5H3QwmbDj7rI
Wt3/2PHv7102G+HcAiozq8h05UMlP/c5sGWVZvRgOzIy0tHRQSAQsrKyEj4I
XQBdDF0YXQVdcYm3NTsoIBdyiFGJwT7mO48scleXVNn1CMaJ2a3xp3PPfXvB
5Met3xogiIWhRTA2sbaNKxsWzDOV04HK+OPSmXYRNb8gxttl969oCdu80VD/
KNY0vC0wf7hm0XOdf3oxT6mExZ4apfZ0ddfWPquvb2toaPo4DQ3N9fUttbWt
xOekwTHGOE+K1uXF5ild8LsfN9/5A9pr/P3fuwzORdg96r9bPd4ysmSvIVXc
5ob+eKmIL5ZwRDK+RCZ+s9mYJdVQim88izYNdbNTlubV+SSg94BQy1d1qL/A
zr9g4S8X6tfz4Q9VDpdcbYsxTAn549pl98POYR7BCaGP8h6VN2TXNBCaG9o7
Giqy4jNuueOczE6b7NFdj0EPaPrmIQEJdXUsef+cnL7IfBIaEmqVbRSpkCvm
TH5qPGdYQ7NLNtqv7tF2O2Fk7vtGoy1hSgTDcl4b4dFKb7TVXc1VHpDXvmjw
VT5KUUvwodEGQPOortEm1yVWYs1xGOS04QbdLYcQHexet6y4kr7pN8bAL2cz
plNpPQ0d1aklJfdCc4NtlZefGW757iCCOJta46LxxBG5nK68tHThS5AIiUV+
5nf0EbcDBuYugTrYxvOPW7JriJyRztmJETpzZnJOMjkxPNlfPdmSnB/k5L9j
M1o8dJHv1iEWCOJtap0cje988yd/LssqzRwOh0aj9fX1tbS0lJeXZ30QugC6
GLowugq64hJv6/UMsZ7KZ56+d57Sd7ag7ne66xb5xIRTcm6XnFFeEu/rtncb
WsJ+2mCw9VCgPrbRL2uQ0LvEd/Jf0ruz42rpGut9/FXuMnQUIZBLOELRHPof
nS9F2w2h9I1hwOtpcj3sjSzQ0hyBccvHlSgKOW8VjcnfA0ItX9Wh/gI7v5q8
PR9+3BWj67fDzqV03aseahia5Ak4r/5MkBoGCPfbkp2xTkcNN6N7i/62vX6+
cYTyaXkXWz61yPcymhvqz0PMYwnolE+N5zhriLF0o/3qkz9pZOH3dqPNf+NC
6BXbaKu7mqs8IGqi8lGKWoIPjTYAmkc1s46/+U2j1eatW0wQrUNb9ge6Ruak
tQ5V94/1T9CZXDZ9ijIxTKR2ljdXV2RlV9xNqEy+H5t7170qCnP1+N7tP+xG
ELPtewKuxpVXTfF72OJpgfKGHcW3pnS5aKQlP/qus5mdNvKHpbGNzy2Lhz2B
ua2lddWs3mJyX0t731B5H7N9YIQ82MkaqmnDR6V6HQsy+uHQ98Yb/uMPBHEz
3ffwztMO8vzHTfTxaZZVmvl8/szMDFpqSSRSV1fXhx8+iS6ALoYujK6Crvjh
nyxhD4uoFXPd8Uk3vSyM0aqkrY9xCcAV1THn+3nzdJHyU0A/XilDLhntLr6L
9zTz00VsN/2wZePxtRuibN0Kk4oH0frFkc8LlRNkCWb6mP0FtPrbjwLsjhn8
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
qMgjFOOLC/A5OU9T01Me3HwQcf72NQw2LiArv7gHHckMc2XMFxfbK65PU3xz
TqlPqg6xeGSBXDqxY59X4L9Cm1xyBgv7Z17U5ReLruoxOYR6lYWaIiCxlMNj
Fe78aiAV8cTcSQGDNNCSU/rkenzAAcfzjroHfJAd2N1XMmNKe6h86Yx4nq+8
i3xeKpwXsWX8adZII6XxUWe2X6intdHWfypuVNfZrnfI7xCWEJz+vPjZ1Jvz
L30toV4m0Uwfj5T7kfG0c3uSmFlLoVO6ifmNuUFlMYcu22O2bTJAEN3NO86d
v/HkcTO5spvcOzLMnCI9K43PDTl855CWndnWTVttEG23XWcehKc29tI5w2MD
Y8PV9L7UjHBXl11b0J7Q4Ed9jL3/oZia0OLesgEGXSTnvHMrxF+1+oJfOEjv
GxtTcUDUQSacl3BUPEpRZ/Ch0QZA86iu0ZbMMQSMfu5oXUtBTGLQGZ9Der/v
+gUdlq/5ZtPfv9/y46/bDU2MzQ78YeHoauMd5BX79G5RS2HfTBt5YmycImIM
dNekZsRcxDqZOR42Q4fl2tt2m9ud9QgKjU1Lux0WdOucHXbvNveDBw7bu5k4
h/ncz06r70WHlFRa3/RAPqs9MvW+t8Opo9/oGpvYnnINCEbXio0Ji7nudNfF
3NflvJ3zLRPnTH9ccxmRxlMOyD936VippVnKmRePz/P7G5MjIix3HUIQ+217
nK/E+VRMPe6gdlKG57l9wy3JlY/ccJe2u1pp7/jv/28tgqz9z2/X/miydrfT
NgcfR7/AyNjIIP9Lvmfs3awxZ/bbHD94+MAfDnbnLpy9FOQZGhudWlTQ0tc9
xUfrF1u4ki42m5co2w3e7DBxuOJpe/y1RDc7T5OdZlrrd32va7xtpyHGer+9
49lLvn6RkX5Bvn6+jn7u1j7eZ9yu+J8NiLl680l0dEEqrq6yrK9rgD7OVzQa
gpfzQQmVk4HR+4oeZDvvDf4O8bEycbwceSBlILxuooHKlf35kBX5Kh+TQ6hX
WaifszunBMqFVLfzqwHaZfPGn7EGS0pSQgI8bPca/Et3h/E6w+OI0WXjy49v
FnR0M8VUnpStbLQUTQSXKmP2jrRk1jwNSg48ev7g9s0b/qa4HmPt91o6RzYY
3rS7mBOT2/3mE4W+llAvk5g5MEcu+Mh4XorKzy4qow3W1OVGJIccuX58wwGD
//uvv/0dQdb9908Wlo5BPg8q4zLLy6vLyN0l+Q/8Q+x3HduwRv//rP/bf21F
1prr/e5/MTq3qGesuqW2tfJRT961GK/9B37VXocgf//7D//XwG6D3W2HqKKE
WlI/T04TKHrtz/IrrrrgP2zsb3rWrOKAqONXRrts/piKRynqDD402gBoHtU1
2q/K00QfgZh1sxBriw7L9TZoIQus+W6LloWrjnfq+eSG7E7qG7NMUIjDNQnK
CTDNDDevRxf+Rlvb0MbGwd//sI2NjbY2BkEO/Gxk56yYPzO+brR9VDGjhZhF
Erycy9Te3GjTwrUczjo42Jg66OucsrM/Exi3cC0VWKGl+c8iMt2Hj8uy3otF
EJ8tpmdco21TRyKqeht72mSM2vbcazgffWd9xEwbWb/2xXZai2hpIzr6Wvqm
elZWtg62ewz19L7R0kEQnXXf6eha6GC8D/g8uP64KruT1kJh0lgr6Yrxd8wL
6WilVvym6ddw5/SddRAzLWT9GsUvulZLS1tPT9/WVn+Pnr6elr4OslVvw097
DunYYk+EZsVV9HUy5RSe/J0T9TzlFKcjRHw0zlpxXe4F/b2+1+Kv1zIy+rg9
9Ddma13lY3II9WoKdWQDvYn6xuTrKtj51UDAIKFNxGRjzP1A+z0Gil0C+Z/r
kY1myC5ng0sPArKb62mCfqaYwVcMoWX8abSJkNCqOwrvJmHPetvqW+hpf6f1
4tCG7rp6CGL7q+ktrzs1eWQ+2kqM814MvL+eUC/LJ8UzOq+2sjJPMSH5XSf/
45sxOoiuFrJOufutW6+ra3Ya44zzDn6QlHyvvTIm1s/ebtsmHcVGWrNGsaV0
Nm13sPfHxVT3Ps7JyHt4vTrC1v+Y3vaNyuPPmm8QLUNEx0HfKTYgo7WOKUd7
bfrn2VdXX/CD8xuLK7JUHBA1eH34UuEoRZ3Bh0YbAM2jykb75UzFs7Ruckse
MSvyccSlyy4OVpbmlgpWFpb7bJ18TgU/dH/cgKsdaKHMCJQrvBzl0MmTPZXo
sDzrwXX/C6f3WWBOnj3tExh4M+FhcOCNwLPn/C2sQryu3cbloEPr8j76MH1O
8ZJzkyL6M7TuV+XEhAR4WltbnXY+fyUk+E5y8p2Y23dCrt257BZzJ+Z+evnC
tVRgeaX59fMoh6k9Ld21xQ1leUW5meiWyi0qL2t4VttN66HOTLH5Lybl+JTv
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
rZDgQ6MNgOaBRls1XpbmoZLEEjfzGB0kys78Zkwito2TNSxYsjS/a15In+f2
yRi1Nbm5WJ9EjH6Ev19+IWFgWi5ny+VCVfwGQDVYAwRKgV9npH4cjMlXGQg1
eD8ItUaD4IP3++zBh0YbAM0DjbZqvP0duL+F/nkP/0MxNTey2nIa+0hkCmV8
eoLJZShvnhItevOUVHmfEJ8zOTTWUd1TlFKUlBYbke1zOT/xaXvz8wm0Ls8p
XwysTFIRX8Sd4TNozMmRcSqJTO5tKcAVhNgnHtO+eP6o9aVoHWyLe9ZQce+M
ut8pWBKEGihAqL8yEHyg8AWCD402AJoHGm3VePuuLpdtP2As7DbY3ba9mhSa
kFdSWVNH7CYOT/YzxTSuBK3Oi/wctC5z5XImraetOS0t81poevTjpymEx6UD
1c8mhqa4QuUrfYZ7uoBqoHWZO05iDrYMP6smNhZXVmYlh18OOWrisnHtob0W
hmdu6mCb3bNIMCZfDSDUQAFC/ZWB4AOFLxB8aLQB0DzQaKvG2/OUHtP5ZqOO
IaLjsMnqor13eAwu+UkBobCdVE8ToNWZwV9solE+WpflclpfXUUW9i4W4/zw
Bq6kktgpkFPEctZnmJ0UqJbi2+/BFlpjdntJUkF6NA6H9Tt96KjuBn0E2brB
4KdDgTrYRvesweJehrrfKVgShBooQKi/MhB8oPAFgg+NNgCa51Wj7e3t7erm
dvac04P4+Pb2dnW/r9XuxUViAhqxoiU+MPvc3vBzJ5zO+uw+E37uWvzNuNTM
vOLS+vaGPmonXUThSFjCt77Glr14AgifNU4nd1CIpY15WVn3nty9EpeVUtb4
bJAiltB4/CkmizExzZ5l8wVCsXIF+DJ8pRGypznUXnp3dX9zcX1lZl7e44SI
oNDzpy/s3u1+9qJzGP5sev+DpvF2Kkfd7xQsCUINFCDUXxkIPlD4AsFnMplD
Q0Otra1RUVH79++HRhsADfCq0fby9nZ2dXU8e/b+gwdt0Ggv18vayqaRKE1l
nRkPKtOepOGzY1NKU3KriioaGppaiT2kXiqdzBJPz0l54reK6svKTid391bm
1ODCi5MfZeILHmc2VTT19VInWVL+1AxjdJgySOwdI4/NzHIEyhXgS/GVRjzH
4tNH2ZTnY/3tPc+amppqCMX5hU+fZMbGpqfmpVUS8c+mGyhs6ixMgbPyQaiB
AoT6KwPBBwpfIPgzMzODg4Pojw4PD7exsYFGGwAN8KrRvuDl5eTi6nD6TGxc
XGtbm7rfl4aQiIQCLoc7Q2dOT01PTtBoNCqVOjIyOjw8Mjo+NcHk0pXTpwjf
nj7l5bVqFGJNDe52srMD/k50Zkl9HpnfNj03zuOi/2tmYnSA2NlYWN1D7Bmb
oHOUK8A8KiuNVMQX85gCJm12ijpOVWx3dOuj+wC6J4xPMyZYvMk5CUskE0jg
9MWqAaH+ykGov04Q/K/cFwg+g8Ho7++vr6+/devW77//Do02ABpgcHCwqKjo
zp072OAQXz8/N0/P2Hv3KwmEl0eP8fGJiYnZ2VmBQKDud7oqSSVikYCPVmce
h81mzTKZTAZjhk5nTE3RGbPsWZ4Arct8iUz85hMuRdwp7kTnzEBZTertGJ+z
TmaGF+xOXLkUcONOUlTcI9yjRDw+EZ+emZpVnprbUttKGh5nwnfgK5NMIpII
uGh15rFmZmcU2x3d+ug+gO4Jsxzu7JwQrcs88ds7AFjJINRfOQj11wmC/5X7
7MGXSCR8Pp/D4czMzExNTY2NjXV3d9fW1ubm5t68edPR0XHHjh3+/v4EAkGl
vxcAQKXQhrqhoQGPx8c9eHDz1i2/q/4xsbHZ2dlNTU0tLS3t7e3Pnj0jk8lo
r63ud7oqzctkaHWWiIQioUAoEKAH1bm5OR4P/cOb4wsEIolQOo8elt86MHPG
eybaMwbyrycFnjhnvWPz+m92/LAJ85vBQVPL/XstbCwsrK3NT7ld8olICcvs
ymke7aWx4a6ulWleJkWrs+KxIII5vmLTK7Y8Ct0T+EKhQCwRKAdm0nkYk68a
EOqvHIT66wTB/8p99uCj66EtNo1GI5FIXV1d6JC7rKwsIyMjISEBbbQvXrx4
6tSp+/fvt8ElpgCsZtPT093d3QQCITMzMz4+PiwsLCYmJjExMT09HW238/Pz
i4uL0V57YmJC3e/0K8IYqB0sCG6MwAQe0zXYuA5BkDUIooUgOsq/0X+j1m8x
MXONck4lJTRMEqlcdb9lAMCHQKgB+ApB8MFiOBwO2mX39fWhLXZ5eXlWVlZS
UlJsbGzYArm5uf39/ep+pwCAv47NZo+OjqK9dnNzc2VlJRrqkpKSqqoqOKOt
RtzxvvH2LLQ6Z0R7+XuctLa2PmJt7Wht7a78G/03yuli4I2HhWhdruyfJTPg
wn4AVjQINQBfIQg+WMy7Z7RrampKS0tzF2htbUUXUPc7BQD8dUKhEO21p6en
x8bGhoeH+/v70ciPjIzAPdpqJOIy0OrMGKjtbS4jlOTi8fhMPD4Pjy9W/o3+
G1VQXl3TMUikctG6PMuXqPstAwA+BEINwFcIgg8W8+492hQKZWhoqH8BdByO
LqDudwoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHwG
/z9nxofU
    "], {{0, 373}, {1315, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{582.8, Automatic},
  ImageSizeRaw->{1315, 373},
  PlotRange->{{0, 1315}, {0, 373}}]], "Output",
 CellChangeTimes->{3.7705853021941805`*^9, 3.7706307545576735`*^9, 
  3.77063107432953*^9, 3.770666082152953*^9, 3.770801118123511*^9, 
  3.7708024897232375`*^9, 3.7708093167968426`*^9, 3.7708321954006553`*^9, 
  3.7708382361328697`*^9, 3.7708422530840282`*^9, 3.7708824468286695`*^9, 
  3.770886467923299*^9, 3.770894537037024*^9, 3.7709343892564163`*^9, 
  3.77093612472643*^9, 3.7710256396541224`*^9, 3.7711592705697923`*^9, 
  3.7716755289775305`*^9, 3.7721372055579014`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "feuerbachTriangle"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"feuerbachTriangle", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "sinA", ",", "sinB", ",", "sinC", ",", "\[IndentingNewLine]", "cosA", 
       ",", "cosB", ",", "cosC", ",", "\[IndentingNewLine]", "cosBmC", ",", 
       "cosCmA", ",", "cosAmB", ",", "\[IndentingNewLine]", "c2haAmB", ",", 
       "c2haBmC", ",", "c2haCmA", ",", "\[IndentingNewLine]", "m"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"b", ",", "a", ",", "c"}], "]"}], ",", 
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"c", ",", "a", ",", "b"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sinA", ",", "sinB", ",", "sinC"}], "}"}], "=", 
       RowBox[{"getSin", "/@", 
        RowBox[{"{", 
         RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cosBmC", "=", 
       RowBox[{"cosDiffAngle", "[", 
        RowBox[{"sinB", ",", "cosB", ",", "sinC", ",", "cosC"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"cosCmA", "=", 
       RowBox[{"cosDiffAngle", "[", 
        RowBox[{"sinC", ",", "cosC", ",", "sinA", ",", "cosA"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"cosAmB", "=", 
       RowBox[{"cosDiffAngle", "[", 
        RowBox[{"sinA", ",", "cosA", ",", "sinB", ",", "cosB"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"c2haAmB", "=", 
       RowBox[{"cos2HalfAngle", "[", "cosAmB", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"c2haBmC", "=", 
       RowBox[{"cos2HalfAngle", "[", "cosBmC", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"c2haCmA", "=", 
       RowBox[{"cos2HalfAngle", "[", "cosCmA", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"m", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"sin2HalfAngle", "[", "cosBmC", "]"}]}], ",", "c2haCmA", 
           ",", "c2haAmB"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"c2haBmC", ",", 
           RowBox[{"-", 
            RowBox[{"sin2HalfAngle", "[", "cosCmA", "]"}]}], ",", "c2haAmB"}],
           "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"c2haBmC", ",", "c2haCmA", ",", 
           RowBox[{"-", 
            RowBox[{"sin2HalfAngle", "[", "cosAmB", "]"}]}]}], "}"}]}], 
        "\[IndentingNewLine]", "}"}]}], ";", 
      RowBox[{"trilinearMatrixToCartesian", "[", 
       RowBox[{"orbit", ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "m"}], "]"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7705384213610287`*^9, 3.770538459562604*^9}, {
  3.7705385802668047`*^9, 3.770538607715052*^9}, {3.7705386522101126`*^9, 
  3.7705387081555357`*^9}, {3.7705388310363216`*^9, 3.7705388627637196`*^9}, {
  3.7705389636195564`*^9, 3.7705390014363427`*^9}, {3.77053914064458*^9, 
  3.7705394449661646`*^9}, {3.770539543885851*^9, 3.77053955164576*^9}, {
  3.7705396959348726`*^9, 3.7705397045030065`*^9}, {3.770539747364662*^9, 
  3.770539764590376*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"o", ",", "s"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"o", "=", 
     RowBox[{
      RowBox[{"orbitNormals", "[", 
       RowBox[{"1.5", ",", ".1"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"s", "=", 
     RowBox[{"RotateLeft", "@", 
      RowBox[{"triLengths", "@", "o"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"feuerbachTriangle", "[", 
     RowBox[{"o", ",", "s"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.770539773561429*^9, 3.770539814917774*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.0483185264592165`"}], ",", 
     RowBox[{"-", "0.3697117935614325`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.11296833165862867`"}], ",", "0.3522870752719159`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2562107773799462`", ",", 
     RowBox[{"-", "0.7403684802218538`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7705398154593277`*^9, 3.770585302224101*^9, 
  3.770630754592585*^9, 3.7706310743604455`*^9, 3.770666082182873*^9, 
  3.770801118156423*^9, 3.770802489750166*^9, 3.7708093168327427`*^9, 
  3.7708321954296064`*^9, 3.770838236164813*^9, 3.7708422531149454`*^9, 
  3.7708824469323926`*^9, 3.7708864679552283`*^9, 3.7708945370709352`*^9, 
  3.7709343892793283`*^9, 3.7709361247503943`*^9, 3.771025639686036*^9, 
  3.7711592706037016`*^9, 3.7716755290064263`*^9, 3.772137205589821*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The first point in the extouch triangle flows on caustic at the exact same \
parametric than P1\
\>", "Subsubsection",
 CellChangeTimes->{{3.770407635899189*^9, 3.770407658808302*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"o", ",", "ett", ",", "ell", ",", 
       RowBox[{"a", "=", "1.5"}], ",", "gr", ",", "ca", ",", "cb"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"o", "=", 
       RowBox[{
        RowBox[{"orbitNormals", "[", 
         RowBox[{"a", ",", "t"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ca", ",", "cb"}], "}"}], "=", 
       RowBox[{"getTriCausticParams", "[", "a", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ett", "=", 
       RowBox[{"extouchTriangle", "[", 
        RowBox[{"o", ",", 
         RowBox[{"RotateLeft", "@", 
          RowBox[{"triLengths", "@", "o"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FaceForm", "@", "None"}], ",", 
          RowBox[{"PointSize", "@", "Medium"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", 
             RowBox[{"{", 
              RowBox[{"Blue", ",", "Thick"}], "}"}]}], ",", 
            RowBox[{"Polygon", "@", "o"}], ",", "Red", ",", 
            RowBox[{"Point", "@", 
             RowBox[{"First", "@", "o"}]}], ",", "Blue", ",", 
            RowBox[{"Circle", "[", 
             RowBox[{
              RowBox[{"First", "@", "o"}], ",", ".05"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", 
             RowBox[{"Darker", "@", "Green"}]}], ",", 
            RowBox[{"Polygon", "@", "ett"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Darker", "@", "Green"}], ",", 
            RowBox[{"Circle", "[", 
             RowBox[{
              RowBox[{"ett", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", ".05"}], "]"}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Red", ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "ca"}], " ", 
                RowBox[{"Cos", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"-", "cb"}], " ", 
                RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], "]"}]}], "}"}]}], 
         "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"plotEll", "[", "a", "]"}], ",", 
          RowBox[{"plotEllb", "[", 
           RowBox[{"ca", ",", "cb", ",", "Brown"}], "]"}], ",", "gr"}], "}"}],
         ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}], ",", 
     RowBox[{"\[Pi]", "/", "360."}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.770406021018656*^9, 3.7704060664740458`*^9}, {
  3.7704061001859164`*^9, 3.7704063056996584`*^9}, {3.7704074506594286`*^9, 
  3.7704074760764074`*^9}, {3.7704075132997227`*^9, 3.770407628036211*^9}, {
  3.7704076675399523`*^9, 3.7704077244518185`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 2 Pi, 0.008726646259971648}}, 
    Typeset`size$$ = {360., {117., 123.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, $CellContext`t$1545$$ =
     0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$1545$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`o$, $CellContext`ett$, $CellContext`ell$, \
$CellContext`a$ = 
         1.5, $CellContext`gr$, $CellContext`ca$, $CellContext`cb$}, \
$CellContext`o$ = Part[
           $CellContext`orbitNormals[$CellContext`a$, $CellContext`t$$], 
           1]; {$CellContext`ca$, $CellContext`cb$} = \
$CellContext`getTriCausticParams[$CellContext`a$]; $CellContext`ett$ = \
$CellContext`extouchTriangle[$CellContext`o$, 
           RotateLeft[
            $CellContext`triLengths[$CellContext`o$]]]; $CellContext`gr$ = 
         Graphics[{
            FaceForm[None], 
            PointSize[Medium], {
             EdgeForm[{Blue, Thick}], 
             Polygon[$CellContext`o$], Red, 
             Point[
              First[$CellContext`o$]], Blue, 
             Circle[
              First[$CellContext`o$], 0.05]}, {
             EdgeForm[
              Darker[Green]], 
             Polygon[$CellContext`ett$]}, {
             Darker[Green], 
             Circle[
              Part[$CellContext`ett$, 1], 0.05]}, {Red, 
             
             Point[{(-$CellContext`ca$) 
               Cos[$CellContext`t$$], (-$CellContext`cb$) 
               Sin[$CellContext`t$$]}]}}]; Show[{
           $CellContext`plotEll[$CellContext`a$], 
           $CellContext`plotEllb[$CellContext`ca$, $CellContext`cb$, 
            Brown], $CellContext`gr$}, AspectRatio -> Automatic, Frame -> 
          True]], "Specifications" :> {{$CellContext`t$$, 0, 2 Pi, 
         0.008726646259971648}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {164., 170.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.770407472424172*^9, 3.7704074764202385`*^9}, {
   3.7704075362257466`*^9, 3.7704075898093696`*^9}, 3.77040762870642*^9, {
   3.770407678992334*^9, 3.770407724913582*^9}, 3.7704173949693832`*^9, 
   3.770453451336059*^9, 3.7704750436443186`*^9, 3.770484366879348*^9, 
   3.770536073746621*^9, 3.7705381578740635`*^9, 3.770585302462493*^9, 
   3.7706307548848*^9, 3.7706310743893642`*^9, 3.770666082431209*^9, 
   3.770801118191303*^9, 3.7708024898877974`*^9, 3.7708093168576756`*^9, 
   3.7708321954615326`*^9, 3.770838236199725*^9, 3.7708422531478577`*^9, 
   3.770882446965309*^9, 3.7708864679911184`*^9, 3.770894537103822*^9, 
   3.770934389304281*^9, 3.7709361247733335`*^9, 3.771025639717922*^9, 
   3.7711592706396055`*^9, 3.7716755290373764`*^9, 3.77213720570749*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Anticomplementary triangle seems like the more stable, more useful to produce \
higher order points.\
\>", "Subsubsection",
 CellChangeTimes->{{3.7671230775431547`*^9, 3.7671231071903973`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "cc", ",", "vs", ",", "sides", ",", "cir", ",", "cirRad", ",", "tt", ",", 
     "ac", ",", "et", ",", "ortTril", ",", "ortCev", ",", "clrs", ",", "ort", 
     ",", "ortAntiCev", ",", "hexyl"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"vs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", "p1"}], "}"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"N", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", ".6"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".7", ",", ".5"}], "}"}]}], "}"}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"sides", "=", 
       RowBox[{"RotateLeft", "@", 
        RowBox[{"triLengths", "@", "vs"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cir", "=", 
       RowBox[{"getCircumcenterTrilin", "[", 
        RowBox[{"vs", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cirRad", "=", 
       RowBox[{"magn", "[", 
        RowBox[{
         RowBox[{"vs", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "cir"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tt", "=", 
       RowBox[{"tangentialTriangle", "[", 
        RowBox[{"vs", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ac", "=", 
       RowBox[{"anticomplementaryTriangle", "[", 
        RowBox[{"vs", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"et", "=", 
       RowBox[{"externaltangentsTriangle", "[", 
        RowBox[{"vs", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"hexyl", "=", 
       RowBox[{"hexylTriangle", "[", 
        RowBox[{"vs", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ortTril", "=", 
       RowBox[{"1", "/", 
        RowBox[{"getTriCosines", "[", "vs", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ort", "=", 
       RowBox[{"trilinearToCartesian", "[", 
        RowBox[{"vs", ",", "sides", ",", "ortTril"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ortCev", "=", 
       RowBox[{"cevianTriangle", "[", 
        RowBox[{"vs", ",", "sides", ",", "ortTril"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ortAntiCev", "=", 
       RowBox[{"antiCevianTriangle", "[", 
        RowBox[{"vs", ",", "sides", ",", "ortTril"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"clrs", "=", 
       RowBox[{"{", 
        RowBox[{
        "Black", ",", "Red", ",", "Green", ",", "Blue", ",", "Purple", ",", 
         "Cyan", ",", "Pink"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Legended", "[", 
       RowBox[{
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "@", "Medium"}], ",", "Black", ",", 
            RowBox[{"FaceForm", "@", "None"}], ",", "\[IndentingNewLine]", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"EdgeForm", "@", "#1"}], ",", "#1", ",", 
                 RowBox[{"Polygon", "@", "#2"}], ",", 
                 RowBox[{"Point", "@", "#2"}]}], "}"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{"clrs", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "vs", ",", "tt", ",", "ac", ",", "et", ",", "ortCev", ",", 
                  "ortAntiCev", ",", "hexyl"}], "}"}]}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Circle", "[", 
               RowBox[{"cir", ",", "cirRad"}], "]"}], ",", 
              RowBox[{"Point", "@", "cir"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Orange", ",", 
              RowBox[{"Point", "@", "ort"}]}], "}"}]}], "}"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}]}], "]"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Thickness", "@", "Large"}], ",", "#"}], "}"}], "]"}], 
            "&"}], "/@", "clrs"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<reference\>\"", ",", "\"\<tangential\>\"", ",", 
            "\"\<anticomplementary\>\"", ",", "\"\<external tangents\>\"", 
            ",", "\"\<ortho cevian = orthic\>\"", ",", 
            "\"\<ortho anticevian\>\"", ",", "\"\<hexyl\>\""}], "}"}]}], 
         "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p1", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}]}], "}"}], ",", "Locator"}], "}"}], 
     ",", 
     RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQzSDaXmki+MaR74tzHYj+dXpSE4i+8vpwJ4jecer/
MhC951/behBdEZqzBUTvWqy9C0SrTRU9CqJVFK6fANE+LkJnQfTt/xOugOhJ
V+fdAIvrVNwC0R4e7PfB4qXKj0D0PPnbn0C03c5uDlMg/fVfPw+IbuWQEQfR
63ueS4HoFYGxMiA6LKJQF0TX/43UB8uvmRYEojUOp4SBaKeSnnQQveMufxmI
5nr63s0MSKctrnEH0fMSV08C0VI9wjNBdMlSvrkgen3edDB94NnzhSB6msS+
dSA65/LXZyBaQZ/5M4hewPTxG4i2DXf8C5Y3VTcxB9ICffvMQPTi1YttQPRC
H84wEP0nIDsJRAdxn0oB0W1b9DNB9IWoxjoQvSW0c8pqIK0o83gmiAYABj6v
qA==
  "]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`p1$$ = {0, 2}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`p1$$], {0, 2}}, Automatic}}, Typeset`size$$ = {
    523., {177., 183.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`p1$$ = {0, 2}}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`vs$1562 = {{-1, 0}, {1, 
          0}, $CellContext`p1$$}; $CellContext`sides$1562 = RotateLeft[
          $CellContext`triLengths[$CellContext`vs$1562]]; \
$CellContext`cir$1562 = \
$CellContext`getCircumcenterTrilin[$CellContext`vs$1562, \
$CellContext`sides$1562]; $CellContext`cirRad$1562 = $CellContext`magn[
         Part[$CellContext`vs$1562, 
            1] - $CellContext`cir$1562]; $CellContext`tt$1562 = \
$CellContext`tangentialTriangle[$CellContext`vs$1562, \
$CellContext`sides$1562]; $CellContext`ac$1562 = \
$CellContext`anticomplementaryTriangle[$CellContext`vs$1562, \
$CellContext`sides$1562]; $CellContext`et$1562 = \
$CellContext`externaltangentsTriangle[$CellContext`vs$1562, \
$CellContext`sides$1562]; $CellContext`hexyl$1562 = \
$CellContext`hexylTriangle[$CellContext`vs$1562, $CellContext`sides$1562]; \
$CellContext`ortTril$1562 = 
        1/$CellContext`getTriCosines[$CellContext`vs$1562]; \
$CellContext`ort$1562 = \
$CellContext`trilinearToCartesian[$CellContext`vs$1562, \
$CellContext`sides$1562, $CellContext`ortTril$1562]; $CellContext`ortCev$1562 = \
$CellContext`cevianTriangle[$CellContext`vs$1562, $CellContext`sides$1562, \
$CellContext`ortTril$1562]; $CellContext`ortAntiCev$1562 = \
$CellContext`antiCevianTriangle[$CellContext`vs$1562, \
$CellContext`sides$1562, $CellContext`ortTril$1562]; $CellContext`clrs$1562 = \
{Black, Red, Green, Blue, Purple, Cyan, Pink}; Legended[
         Graphics[{
           PointSize[Medium], Black, 
           FaceForm[None], 
           MapThread[{
             EdgeForm[#], #, 
             Polygon[#2], 
             
             Point[#2]}& , {$CellContext`clrs$1562, {$CellContext`vs$1562, \
$CellContext`tt$1562, $CellContext`ac$1562, $CellContext`et$1562, \
$CellContext`ortCev$1562, $CellContext`ortAntiCev$1562, \
$CellContext`hexyl$1562}}], {
            Circle[$CellContext`cir$1562, $CellContext`cirRad$1562], 
            Point[$CellContext`cir$1562]}, {Orange, 
            Point[$CellContext`ort$1562]}}, ImageSize -> Medium, Frame -> 
          True, PlotRange -> {{-5, 5}, {-5, 5}}], 
         LineLegend[
          Map[Directive[{
             Thickness[Large], #}]& , $CellContext`clrs$1562], {
          "reference", "tangential", "anticomplementary", "external tangents",
            "ortho cevian = orthic", "ortho anticevian", "hexyl"}]]), 
      "Specifications" :> {{{$CellContext`p1$$, {0, 2}}, Automatic, 
         ControlType -> Locator}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{580., {212., 218.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({
      Attributes[$CellContext`vs$1562] = {Temporary}, 
       Attributes[$CellContext`sides$1562] = {
        Temporary}, $CellContext`triLengths[
         Pattern[$CellContext`vs, 
          Blank[]]] := Map[$CellContext`magn, 
         $CellContext`triSides[$CellContext`vs]], $CellContext`magn[
         Pattern[$CellContext`v, 
          Blank[]]] := Sqrt[
         $CellContext`magn2[$CellContext`v]], $CellContext`magn2[
         Pattern[$CellContext`v, 
          Blank[]]] := 
       Dot[$CellContext`v, $CellContext`v], $CellContext`triSides[
         Pattern[$CellContext`vs, 
          Blank[]]] := MapThread[# - #2& , {$CellContext`vs, 
          RotateLeft[$CellContext`vs]}], 
       Attributes[$CellContext`cir$1562] = {
        Temporary}, $CellContext`getCircumcenterTrilin[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := 
       Module[{$CellContext`a2 = $CellContext`a $CellContext`a, \
$CellContext`b2 = $CellContext`b $CellContext`b, $CellContext`c2 = \
$CellContext`c $CellContext`c}, 
         $CellContext`trilinearToCartesian[$CellContext`orbit, \
{$CellContext`a, $CellContext`b, $CellContext`c}, {$CellContext`a \
($CellContext`b2 + $CellContext`c2 - $CellContext`a2), $CellContext`b \
($CellContext`c2 + $CellContext`a2 - $CellContext`b2), $CellContext`c \
($CellContext`a2 + $CellContext`b2 - $CellContext`c2)}]], \
$CellContext`trilinearToCartesian[{
          Pattern[$CellContext`A, 
           Blank[]], 
          Pattern[$CellContext`B, 
           Blank[]], 
          Pattern[C, 
           Blank[]]}, {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]], 
          Pattern[$CellContext`z, 
           Blank[]]}] := 
       Module[{$CellContext`denom}, $CellContext`denom = 
          Dot[{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`x, $CellContext`y, $CellContext`z}]; ($CellContext`a \
$CellContext`x $CellContext`A + $CellContext`b $CellContext`y $CellContext`B + \
$CellContext`c $CellContext`z C)/$CellContext`denom], 
       Attributes[$CellContext`cirRad$1562] = {Temporary}, 
       Attributes[$CellContext`tt$1562] = {
        Temporary}, $CellContext`tangentialTriangle[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           
           Blank[]]}] := \
$CellContext`trilinearMatrixToCartesian[$CellContext`orbit, {$CellContext`a, \
$CellContext`b, $CellContext`c}, {{-$CellContext`a, $CellContext`b, \
$CellContext`c}, {$CellContext`a, -$CellContext`b, $CellContext`c}, \
{$CellContext`a, $CellContext`b, -$CellContext`c}}], \
$CellContext`trilinearMatrixToCartesian[
         Pattern[$CellContext`orbit, 
          Blank[]], 
         Pattern[$CellContext`sides, 
          Blank[]], 
         Pattern[$CellContext`tryM, 
          Blank[]]] := 
       Map[$CellContext`trilinearToCartesian[$CellContext`orbit, \
$CellContext`sides, #]& , $CellContext`tryM], 
       Attributes[$CellContext`ac$1562] = {
        Temporary}, $CellContext`anticomplementaryTriangle[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           
           Blank[]]}] := \
$CellContext`trilinearMatrixToCartesian[$CellContext`orbit, {$CellContext`a, \
$CellContext`b, $CellContext`c}, {
         1/{-$CellContext`a, $CellContext`b, $CellContext`c}, 
          1/{$CellContext`a, -$CellContext`b, $CellContext`c}, 
          1/{$CellContext`a, $CellContext`b, -$CellContext`c}}], 
       Attributes[$CellContext`et$1562] = {
        Temporary}, $CellContext`externaltangentsTriangle[
         Pattern[$CellContext`orbit, 
          Blank[]], 
         Pattern[$CellContext`sides, 
          Blank[]]] := 
       Module[{$CellContext`x, $CellContext`y, $CellContext`z}, \
{$CellContext`x, $CellContext`y, $CellContext`z} = \
$CellContext`getTriCosines[$CellContext`orbit]; \
$CellContext`trilinearMatrixToCartesian[$CellContext`orbit, \
$CellContext`sides, {{-($CellContext`x + 
              1), $CellContext`x + $CellContext`z, $CellContext`x + \
$CellContext`y}, {$CellContext`y + $CellContext`z, -($CellContext`y + 
              1), $CellContext`y + $CellContext`x}, {$CellContext`z + \
$CellContext`y, $CellContext`z + $CellContext`x, -($CellContext`z + 
              1)}}]], $CellContext`getTriCosines[
         Pattern[$CellContext`tri, 
          Blank[]]] := 
       Module[{$CellContext`u12, $CellContext`u23, $CellContext`u31}, \
$CellContext`u12 = $CellContext`norm[
           Part[$CellContext`tri, 2] - 
            Part[$CellContext`tri, 1]]; $CellContext`u23 = $CellContext`norm[
           Part[$CellContext`tri, 3] - 
            Part[$CellContext`tri, 2]]; $CellContext`u31 = $CellContext`norm[
           Part[$CellContext`tri, 1] - Part[$CellContext`tri, 3]]; {-
           Dot[$CellContext`u12, $CellContext`u31], -
           Dot[$CellContext`u23, $CellContext`u12], -
           Dot[$CellContext`u31, $CellContext`u23]}], $CellContext`norm[
         Pattern[$CellContext`v, 
          Blank[]]] := $CellContext`v/$CellContext`magn[$CellContext`v], 
       Attributes[$CellContext`hexyl$1562] = {
        Temporary}, $CellContext`hexylTriangle[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := 
       Module[{$CellContext`x, $CellContext`y, $CellContext`z, \
$CellContext`diag}, {$CellContext`x, $CellContext`y, $CellContext`z} = {
            $CellContext`lawOfCosines[$CellContext`a, $CellContext`b, \
$CellContext`c], 
            $CellContext`lawOfCosines[$CellContext`b, $CellContext`a, \
$CellContext`c], 
            $CellContext`lawOfCosines[$CellContext`c, $CellContext`a, \
$CellContext`b]}; $CellContext`diag = $CellContext`x + $CellContext`y + \
$CellContext`z + 
           1; $CellContext`trilinearMatrixToCartesian[$CellContext`orbit, \
{$CellContext`a, $CellContext`b, $CellContext`c}, {{$CellContext`diag, \
$CellContext`x + $CellContext`y - $CellContext`z - 
             1, $CellContext`x - $CellContext`y + $CellContext`z - 
             1}, {$CellContext`x + $CellContext`y - $CellContext`z - 
             1, $CellContext`diag, -$CellContext`x + $CellContext`y + \
$CellContext`z - 1}, {$CellContext`x - $CellContext`y + $CellContext`z - 
             1, -$CellContext`x + $CellContext`y + $CellContext`z - 
             1, $CellContext`diag}}]], $CellContext`lawOfCosines[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          
          Blank[]]] := ($CellContext`b^2 + $CellContext`c^2 - \
$CellContext`a^2)/(2. $CellContext`b $CellContext`c), 
       Attributes[$CellContext`ortTril$1562] = {Temporary}, 
       Attributes[$CellContext`ort$1562] = {Temporary}, 
       Attributes[$CellContext`ortCev$1562] = {
        Temporary}, $CellContext`cevianTriangle[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}, {
          Pattern[$CellContext`t1, 
           Blank[]], 
          Pattern[$CellContext`t2, 
           Blank[]], 
          Pattern[$CellContext`t3, 
           
           Blank[]]}] := \
$CellContext`trilinearMatrixToCartesian[$CellContext`orbit, {$CellContext`a, \
$CellContext`b, $CellContext`c}, {{
          0, $CellContext`t2, $CellContext`t3}, {$CellContext`t1, 
           0, $CellContext`t3}, {$CellContext`t1, $CellContext`t2, 0}}], 
       Attributes[$CellContext`ortAntiCev$1562] = {
        Temporary}, $CellContext`antiCevianTriangle[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}, {
          Pattern[$CellContext`t1, 
           Blank[]], 
          Pattern[$CellContext`t2, 
           Blank[]], 
          Pattern[$CellContext`t3, 
           
           Blank[]]}] := \
$CellContext`trilinearMatrixToCartesian[$CellContext`orbit, {$CellContext`a, \
$CellContext`b, $CellContext`c}, {{-$CellContext`t1, $CellContext`t2, \
$CellContext`t3}, {$CellContext`t1, -$CellContext`t2, $CellContext`t3}, \
{$CellContext`t1, $CellContext`t2, -$CellContext`t3}}], 
       Attributes[$CellContext`clrs$1562] = {Temporary}}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.767117892684656*^9, {3.7671179362824306`*^9, 3.7671180092331157`*^9}, {
   3.767118039789013*^9, 3.7671180512842054`*^9}, {3.7671181887946835`*^9, 
   3.767118203095437*^9}, 3.7671185156046333`*^9, {3.7671187520689163`*^9, 
   3.767118769081931*^9}, {3.7671204271716757`*^9, 3.767120444251023*^9}, {
   3.767121077221744*^9, 3.767121097040735*^9}, 3.76712113326484*^9, {
   3.7671211761132326`*^9, 3.76712127078325*^9}, 3.7671218165612698`*^9, {
   3.767121850301524*^9, 3.7671218778798323`*^9}, 3.767122608749346*^9, {
   3.7671227121906853`*^9, 3.7671227301705637`*^9}, 3.7671228204399004`*^9, 
   3.7671228505683312`*^9, 3.767122932619789*^9, 3.7671232733951454`*^9, 
   3.7671242916072893`*^9, 3.7672602748830214`*^9, {3.7673607136886606`*^9, 
   3.7673607221799383`*^9}, 3.767691129839357*^9, 3.767708288120365*^9, 
   3.767732698561364*^9, 3.7678141444150887`*^9, 3.767890277755077*^9, 
   3.7679057375745893`*^9, 3.7681206282248106`*^9, 3.7681699083560514`*^9, 
   3.7691253143235564`*^9, {3.7701324136211386`*^9, 3.770132440342695*^9}, 
   3.770144703333747*^9, 3.770156539971987*^9, 3.77015776701332*^9, 
   3.7703710140028925`*^9, 3.770417395185805*^9, 3.770453451429777*^9, 
   3.7704750437121363`*^9, 3.7704843669391603`*^9, 3.7705360739281254`*^9, 
   3.7705853025053487`*^9, 3.7706307550612993`*^9, 3.770631074434216*^9, 
   3.7706660824720993`*^9, 3.77080111825117*^9, 3.7708024899496336`*^9, 
   3.770809316915493*^9, 3.770832195521347*^9, 3.770838236258566*^9, 
   3.7708422532086945`*^9, 3.7708824470251255`*^9, 3.7708864680559444`*^9, 
   3.7708945371636868`*^9, 3.7709343893421545`*^9, 3.770936124810207*^9, 
   3.771025639777791*^9, 3.7711592707144394`*^9, 3.771675529095188*^9, 
   3.7721372057653513`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQdYFVe3970ak5g35T6+icl7TeJrjC127L3FjlgQVLAXRFGkSZMqIAKK
UkURlCJSpUgVRIrSlCJVioiANAvYu/n+H/O8c7l6IJxzBgZw/Z7HeUbOzJ69
96y15r+m7N1/y96VCt27deum/iUWKzdrzVZT26wj/Rn+M0dHY/uWHlixx7/n
2Ob/r/9FEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEJ8wL1++fPToUV1dXUVFRXFxcS5BEARB
dDxu3ryJi1RpaWltbe3Tp0/5vngSnQDIG2ib/Pz85OTkyMhIX4IgCILoeAQH
B+Midfny5ZycHIgcvi+eRCegrq4O8iY+Pt7Pz8/BwcGQIAiCIDoeFhYW9vb2
rq6uEDmlpaV8XzyJTkBZWVlCQoKHh4eTk5O1tbWJiYm5ubmVldVRgiAIgugw
4CLl5ubm6+ubnJxcXl7O98WT6ATk5+cHBASYmpqamZkdPHgQ8gaGdPz48dME
QRAE0WE4d+5cYGBgREREZmZmdXU13xdPohNw/fr1EydOKCgoqKmpGRoaWllZ
Qd54eHgEEgRBEESHITw8PCYmJjExsaCg4N69e3xfPIlOQEpKio2NjZycnIaG
xrFjx/z8/MLCwi5fvpxGEARBEB2GjIyMnJwcyJvKyspHjx7xffEkOgFXrlyx
sLBYunSplpaWm5sbrAgmVFJSUkkQBEEQHYaqqqra2tp79+5B3rx8+ZLviyfR
CYiLizMyMpo9e7aOjk5ISEhdXR0ZD0EQBEEQnZ1Lly7t379/ypQpWlpaoaGh
kDfPnj17/fo13/UiCIIgCIIQnejoaGgbCQkJDQ2NiIiIly9fQt68e/eO73oR
BEEQBEGITmRkpJqa2rBhw7DEOt/VIQiCIAiCEJ3379+/e/fu7du3UDXq6uqj
Ro3S0NCIioriu14EQRAEQRCiA3nz5s2bV69eRUREQNtISEhoaWlFR0fzXS+C
IAiCIAjRefv2LeTN8+fPw8PDNTU1J0yYoKOjExMTw3e9CIIgCILoKDCPe16/
fv3mzZu3jeAv79+/57teLfHy5ctHjx7V1dWFhITo6urOmTPH2Ng4Li6O73oR
BEEQBNFRgKSBYHj+/PmLFy9evXr1ppEO/jnSkydPamtrb926df78eQMDAykp
KQsLiytXrvBdL4IgCIIgOgqvX7+GvHn06BFkA1agdpibOXzXqyXq6+vv3Llz
48YNHx8fY2NjOTk5GxublJQUvutFEARBEAQ/MA+kXrx4ce/evdLSUoiExMTE
0NDQs2fPxsTE5OTk1NbWQu1gA75r2hKo/M2bN69evYpqHzx4UEFB4cSJE9ev
Xxe5wPfv36NnIO1QcklJCYrC8v79+2+a8OzZs4aGhrq6urt375aVlRUXF1dV
VaGvOsVzvU8QKPaamhqcR5ysyspKrEMYi2PYLRgJ/k4GwC/s2RHKT8lIhEW0
fu7UcG4kRNsBeQPLhB0WFBRcunTJ09PTyspKTU1t7dq1pqamgYGBRUVF1dXV
jx8/5rumLYEaZmVlRUZGurm5WVpaqquru7u74y8iF8i8ugyjhXCKioo6efLk
xYsXCwsLXzbyohGEqTt37qDf0tPTIQtx9IyMDBg88wpTB3+u9wmCQASTwHlM
SEhITU2FmEeAQmgSucAWjAQ20MFve3Z52LMjlJ+SkQiLaP3cqeHcSIi2A5YJ
eVNbWwubPHXqlKamprS09OjRo7/55htJScnDhw9fu3bt1q1bDx484LumLVFR
UZGSkuLv7+/i4mJtbW1oaOjr65ubmytygXBJ9Ay0+tWrVx0dHRUVFbHE+tNG
njSCg2ZnZ8PIL1y4AGXo4OAQHh6en5+PHbtG7OpiIOdCUDp+/LiHh8f58+ex
jtCEYCVygS0YCfNsl8PKE8LCnh2h/JSMRFhE6+dODedGQrQdMD+Iz+rqaigE
Hx8fS0vLjRs3jh07tlevXosWLcJ/O4XCuX37dlxc3JkzZ06cOGFrawthFhIS
gqRJhKLeN8KodORccNWjR4/q6upiBSkJghJCU0NDAxIWuDPyFFdXV2gqAwMD
ZWVlSMTr1693vZyla1BVVYUziKjr7e0NO4GR+Pn5wbyZ57BCTc/6t0bSxUJ6
ZwRn4fHjx8L6KRmJsIjWz50aDo2EaGueP3/+8OHDu3fvpqenh4WFubi47Nq1
a+LEiZ999tn8+fMtLCw6hcIpLi6OiIiws7ND4gBp7eTkFB0djWoLWw4zNjLI
ycmB3jM0NDQ1NT106NCRI0cgmQoKCuCqUDhw58rKyvj4eHSXjo4O8rLVq1ej
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
WoqiwsPD0W9+fn5eXl5YQUvRLrQFrYCHwp07wnMHFna4++TkZMQcZ2dnVDsk
JATVxilgRm3Kzs6G9eIMIsziIoLmMK8FIu1lByTBecT2zFd4iEuzZ8/GxQXN
R+EISn9rPy0YCZIFuEk7dy9XtsFV9/ILuhT1Ed9P285IcElFOOWrn7myFq76
mV/EjIdiGglBtMylS5d0dXUnTZqkqakJ43z69CnUmji3cNmJrhwdHZHmDBky
BHoeBn///n146AfPXtnvJjrI2A6iwX5D15o5aDoI7NhNH4cRdlIbLJs7Kewg
AxDGiEurVq06cuQIQlkrjy6UkXyC3dvREM1P28FIqJ87IEI5rJhGQhAtEx0d
ra2tPW7cuH379kVERDBDMTQ3QHdrQPCpqalBaEJudeDAARkZGWgnxCjmRisz
1Sw7ajf73QSWWOeuWe0K85iy5dlbOhrobahZBH8sP+h5dlKbj08KM6czTmJC
QoKLiwuyLQMDAxMTk0OHDuF0I01r5dGFMpJPp3s7LEL5aXsaCezhk+3nDktr
HJYrIyGIlmHeYB8zZoyGhkZkZOSbN28gb8S5hcs66bVr17y8vA78B2NjY19f
35ycnLeNMIdgv5vAUhxZxS/sY8oWZm/paDA9z0zi80GdWzgpOK2lpaW4vuBU
mpubb926Faf19OnTwo4xIqyRfCLd22ERqs7taSTMBA2fZj93WFrjsFwZCUG0
TFRUlLq6+ogRI7DEOoclV1ZWpqWlBQYGWltb79mzR1JSkpkwjrlH1BHeqCSE
hZ0V0c7OTkVFRUpKytTUNDo6WuQXzMhIuh5kJMTfwrmREERTEBaQ/iBTiIyM
3Ldv39ixY7W0tD6YTERMmJG6mdDk4OCgq6vr6emZmZnJfKpJcakzgtwqNzc3
NjbW39//5MmThw4dCggIuHHjBoKSaDdYyEi6HmQkxN/CuZF0NJ40wnwmdu3a
tcTExIsXL4aEhKSkpJSWlj59+hS6HT1w5cqVq1evJiUlMZO5N1fa00bKyspQ
VKSoYN/bt28/bqQ9u4IXEBlevHiBUwAVDW3TFjM4s7OtwW5Rso+PD84yTi7z
JnMXsOFPkPv37xcVFcET4ZJwTLhnfn4+gpXI2TQZSdeDjIT4Wzg3ko5GTSPp
6ekXLlxwcnIyNzfX1NTcvn27jY0NdF1dXV1qaiosGdLO0tLy8OHD1o00V1pt
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
ONAkZ86cgUSB1DE3N5eXlx8xYsR//dd/jR49evPmzfgjNigqKhJYDv6OuGpj
YwN5gxKcnZ0vXboE3SV2ZxAEIQAmSty/fx/yJjIy0tXV1dra2sDAQFlZ+dSp
U9evX6d7OARBdEAQuCorK2/evBkYGHjw4MH169erqKgcOHAA2ZmFhQWCmJqa
2urVq6dNm9a/f//58+crKSm1LD9aoOl7ONgdMiklJSU2Nhal6erqTp8+HQpn
0KBBUFaqqqpubm5ZWVkCy0HOGBAQYGpqipogwHp7e1+9erW8vFzsziAIQgDM
jLRw2/j4eBcXFx0dHUVFRYQFBAQTE5O4uDh6D4cgiA7IvXv3IG+uXLni7OwM
MbN48WJtbW0vL6/c3NykpKSIiAgfH599+/bNnj3722+/HTFixJIlSzj8dunZ
s2eInBUVFU5OTkuXLu3evfsvv/wyadIkaWnpw4cPowIC90IiefbsWdQT25w5
cyY0NBSVqaqqEr8+BEF8DDNu1a1bt4KCgpD+yMjIzJ07d8yYMf369UM0gAPy
XUGCIAgBIHDl5ORcunTJ29vbzs7OwMAAmgGZGlRHYWFhZmYmZIatre369euH
DBkyYcIERLbly5dzNcIec/cbIgeaauPGjT/99NOAAQNGjRo1ZcoUXV3d6Oho
gXe/MzIykEju3r370KFDnp6eqG1+fn5dXZ349SGILgCcGllATEwMllgXv8AX
L17U19ejqMjISHNz89WrVyMfmTNnDpIR+GkbTQnHeSsIgvjUqKqqgmAIa+RC
IykpKUjWGhoa7t+/X11dXV5efv78eW1tbWibmTNnTp06deLEiVzNdPn27VuI
nGfPniENVFVVhbb5448/Bg4c+O9//3vHjh04Ln7CBh98mZ6Wlubg4ABFZGpq
6uPjk56eXlpa+vDhQ/HrQxBdAOYmJzN+JtbFL5B90xjZxJEjR9auXSsrK7tq
1ao2HU6c81YQBPGpUVlZmZqaCi2B2JWbmwtJ8/GX4NjAzs5u/fr1CxculJCQ
+OWXXxQVFbm9NY2jm5iYzJs3b/To0T///PMXX3yB+Onh4QGhBZHzwYjKSUlJ
hw8flpaWNjIyCggIKCoqQrUfP37MYX0IovOC7APCAJkI5zdYkP7Y2trKy8tv
2rRp+/btbTrYZtu1giCIT4QHDx5AIUDD5OfnV1RUQN48ffr01atXTbdBBHN2
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
EARBdBz+H9HtDtU=
    "], {{0, 148}, {758, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{239., Automatic},
  ImageSizeRaw->{758, 148},
  PlotRange->{{0, 758}, {0, 148}}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQdYFVe3970ak5g35T6+icl7TeJrjC127L3FjlgQVLAXRFGkSZMqIAKK
UkURlCJSpUgVRIrSlCJVioiANAvYu/n+H/O8c7l6IJxzBgZw/Z7HeUbOzJ69
96y15r+m7N1/y96VCt27deum/iUWKzdrzVZT26wj/Rn+M0dHY/uWHlixx7/n
2Ob/r/9FEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEJ8wL1++fPToUV1dXUVFRXFxcS5BEARB
dDxu3ryJi1RpaWltbe3Tp0/5vngSnQDIG2ib/Pz85OTkyMhIX4IgCILoeAQH
B+Midfny5ZycHIgcvi+eRCegrq4O8iY+Pt7Pz8/BwcGQIAiCIDoeFhYW9vb2
rq6uEDmlpaV8XzyJTkBZWVlCQoKHh4eTk5O1tbWJiYm5ubmVldVRgiAIgugw
4CLl5ubm6+ubnJxcXl7O98WT6ATk5+cHBASYmpqamZkdPHgQ8gaGdPz48dME
QRAE0WE4d+5cYGBgREREZmZmdXU13xdPohNw/fr1EydOKCgoqKmpGRoaWllZ
Qd54eHgEEgRBEESHITw8PCYmJjExsaCg4N69e3xfPIlOQEpKio2NjZycnIaG
xrFjx/z8/MLCwi5fvpxGEARBEB2GjIyMnJwcyJvKyspHjx7xffEkOgFXrlyx
sLBYunSplpaWm5sbrAgmVFJSUkkQBEEQHYaqqqra2tp79+5B3rx8+ZLviyfR
CYiLizMyMpo9e7aOjk5ISEhdXR0ZD0EQBEEQnZ1Lly7t379/ypQpWlpaoaGh
kDfPnj17/fo13/UiCIIgCIIQnejoaGgbCQkJDQ2NiIiIly9fQt68e/eO73oR
BEEQBEGITmRkpJqa2rBhw7DEOt/VIQiCIAiCEJ3379+/e/fu7du3UDXq6uqj
Ro3S0NCIioriu14EQRAEQRCiA3nz5s2bV69eRUREQNtISEhoaWlFR0fzXS+C
IAiCIAjRefv2LeTN8+fPw8PDNTU1J0yYoKOjExMTw3e9CIIgCILoKDCPe16/
fv3mzZu3jeAv79+/57teLfHy5ctHjx7V1dWFhITo6urOmTPH2Ng4Li6O73oR
BEEQBNFRgKSBYHj+/PmLFy9evXr1ppEO/jnSkydPamtrb926df78eQMDAykp
KQsLiytXrvBdL4IgCIIgOgqvX7+GvHn06BFkA1agdpibOXzXqyXq6+vv3Llz
48YNHx8fY2NjOTk5GxublJQUvutFEARBEAQ/MA+kXrx4ce/evdLSUoiExMTE
0NDQs2fPxsTE5OTk1NbWQu1gA75r2hKo/M2bN69evYpqHzx4UEFB4cSJE9ev
Xxe5wPfv36NnIO1QcklJCYrC8v79+2+a8OzZs4aGhrq6urt375aVlRUXF1dV
VaGvOsVzvU8QKPaamhqcR5ysyspKrEMYi2PYLRgJ/k4GwC/s2RHKT8lIhEW0
fu7UcG4kRNsBeQPLhB0WFBRcunTJ09PTyspKTU1t7dq1pqamgYGBRUVF1dXV
jx8/5rumLYEaZmVlRUZGurm5WVpaqquru7u74y8iF8i8ugyjhXCKioo6efLk
xYsXCwsLXzbyohGEqTt37qDf0tPTIQtx9IyMDBg88wpTB3+u9wmCQASTwHlM
SEhITU2FmEeAQmgSucAWjAQ20MFve3Z52LMjlJ+SkQiLaP3cqeHcSIi2A5YJ
eVNbWwubPHXqlKamprS09OjRo7/55htJScnDhw9fu3bt1q1bDx484LumLVFR
UZGSkuLv7+/i4mJtbW1oaOjr65ubmytygXBJ9Ay0+tWrVx0dHRUVFbHE+tNG
njSCg2ZnZ8PIL1y4AGXo4OAQHh6en5+PHbtG7OpiIOdCUDp+/LiHh8f58+ex
jtCEYCVygS0YCfNsl8PKE8LCnh2h/JSMRFhE6+dODedGQrQdMD+Iz+rqaigE
Hx8fS0vLjRs3jh07tlevXosWLcJ/O4XCuX37dlxc3JkzZ06cOGFrawthFhIS
gqRJhKLeN8KodORccNWjR4/q6upiBSkJghJCU0NDAxIWuDPyFFdXV2gqAwMD
ZWVlSMTr1693vZyla1BVVYUziKjr7e0NO4GR+Pn5wbyZ57BCTc/6t0bSxUJ6
ZwRn4fHjx8L6KRmJsIjWz50aDo2EaGueP3/+8OHDu3fvpqenh4WFubi47Nq1
a+LEiZ999tn8+fMtLCw6hcIpLi6OiIiws7ND4gBp7eTkFB0djWoLWw4zNjLI
ycmB3jM0NDQ1NT106NCRI0cgmQoKCuCqUDhw58rKyvj4eHSXjo4O8rLVq1ej
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
WoqiwsPD0W9+fn5eXl5YQUvRLrQFrYCHwp07wnMHFna4++TkZMQcZ2dnVDsk
JATVxilgRm3Kzs6G9eIMIsziIoLmMK8FIu1lByTBecT2zFd4iEuzZ8/GxQXN
R+EISn9rPy0YCZIFuEk7dy9XtsFV9/ILuhT1Ed9P285IcElFOOWrn7myFq76
mV/EjIdiGglBtMylS5d0dXUnTZqkqakJ43z69CnUmji3cNmJrhwdHZHmDBky
BHoeBn///n146AfPXtnvJjrI2A6iwX5D15o5aDoI7NhNH4cRdlIbLJs7Kewg
AxDGiEurVq06cuQIQlkrjy6UkXyC3dvREM1P28FIqJ87IEI5rJhGQhAtEx0d
ra2tPW7cuH379kVERDBDMTQ3QHdrQPCpqalBaEJudeDAARkZGWgnxCjmRisz
1Sw7ajf73QSWWOeuWe0K85iy5dlbOhrobahZBH8sP+h5dlKbj08KM6czTmJC
QoKLiwuyLQMDAxMTk0OHDuF0I01r5dGFMpJPp3s7LEL5aXsaCezhk+3nDktr
HJYrIyGIlmHeYB8zZoyGhkZkZOSbN28gb8S5hcs66bVr17y8vA78B2NjY19f
35ycnLeNMIdgv5vAUhxZxS/sY8oWZm/paDA9z0zi80GdWzgpOK2lpaW4vuBU
mpubb926Faf19OnTwo4xIqyRfCLd22ERqs7taSTMBA2fZj93WFrjsFwZCUG0
TFRUlLq6+ogRI7DEOoclV1ZWpqWlBQYGWltb79mzR1JSkpkwjrlH1BHeqCSE
hZ0V0c7OTkVFRUpKytTUNDo6WuQXzMhIuh5kJMTfwrmREERTEBaQ/iBTiIyM
3Ldv39ixY7W0tD6YTERMmJG6mdDk4OCgq6vr6emZmZnJfKpJcakzgtwqNzc3
NjbW39//5MmThw4dCggIuHHjBoKSaDdYyEi6HmQkxN/CuZF0NJ40wnwmdu3a
tcTExIsXL4aEhKSkpJSWlj59+hS6HT1w5cqVq1evJiUlMZO5N1fa00bKyspQ
VKSoYN/bt28/bqQ9u4IXEBlevHiBUwAVDW3TFjM4s7OtwW5Rso+PD84yTi7z
JnMXsOFPkPv37xcVFcET4ZJwTLhnfn4+gpXI2TQZSdeDjIT4Wzg3ko5GTSPp
6ekXLlxwcnIyNzfX1NTcvn27jY0NdF1dXV1qaiosGdLO0tLy8OHD1o00V1pt
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
ONAkZ86cgUSB1DE3N5eXlx8xYsR//dd/jR49evPmzfgjNigqKhJYDv6OuGpj
YwN5gxKcnZ0vXboE3SV2ZxAEIQAmSty/fx/yJjIy0tXV1dra2sDAQFlZ+dSp
U9evX6d7OARBdEAQuCorK2/evBkYGHjw4MH169erqKgcOHAA2ZmFhQWCmJqa
2urVq6dNm9a/f//58+crKSm1LD9aoOl7ONgdMiklJSU2Nhal6erqTp8+HQpn
0KBBUFaqqqpubm5ZWVkCy0HOGBAQYGpqipogwHp7e1+9erW8vFzsziAIQgDM
jLRw2/j4eBcXFx0dHUVFRYQFBAQTE5O4uDh6D4cgiA7IvXv3IG+uXLni7OwM
MbN48WJtbW0vL6/c3NykpKSIiAgfH599+/bNnj3722+/HTFixJIlSzj8dunZ
s2eInBUVFU5OTkuXLu3evfsvv/wyadIkaWnpw4cPowIC90IiefbsWdQT25w5
cyY0NBSVqaqqEr8+BEF8DDNu1a1bt4KCgpD+yMjIzJ07d8yYMf369UM0gAPy
XUGCIAgBIHDl5ORcunTJ29vbzs7OwMAAmgGZGlRHYWFhZmYmZIatre369euH
DBkyYcIERLbly5dzNcIec/cbIgeaauPGjT/99NOAAQNGjRo1ZcoUXV3d6Oho
gXe/MzIykEju3r370KFDnp6eqG1+fn5dXZ349SGILgCcGllATEwMllgXv8AX
L17U19ejqMjISHNz89WrVyMfmTNnDpIR+GkbTQnHeSsIgvjUqKqqgmAIa+RC
IykpKUjWGhoa7t+/X11dXV5efv78eW1tbWibmTNnTp06deLEiVzNdPn27VuI
nGfPniENVFVVhbb5448/Bg4c+O9//3vHjh04Ln7CBh98mZ6Wlubg4ABFZGpq
6uPjk56eXlpa+vDhQ/HrQxBdAOYmJzN+JtbFL5B90xjZxJEjR9auXSsrK7tq
1ao2HU6c81YQBPGpUVlZmZqaCi2B2JWbmwtJ8/GX4NjAzs5u/fr1CxculJCQ
+OWXXxQVFbm9NY2jm5iYzJs3b/To0T///PMXX3yB+Onh4QGhBZHzwYjKSUlJ
hw8flpaWNjIyCggIKCoqQrUfP37MYX0IovOC7APCAJkI5zdYkP7Y2trKy8tv
2rRp+/btbTrYZtu1giCIT4QHDx5AIUDD5OfnV1RUQN48ffr01atXTbdBBHN2
dt65cydUx8yZM4cNG6aqqhoZGclhNa5du+bk5ISYCZHz+++/9+zZc9GiRUeP
HoXoKi8vh85punFCQoKZmRnklp6eXnBw8N27dx8+fPj8+XMO60MQnRf4poqK
ytChQ7Hkyk+ZueTi4uKMjY3nzp27Zs0aZWXlNh2Kqi1aQRDEJwX7lURdXR2E
xIsXLyBvPhjX4saNGx4eHvv27du8efPSpUsnTZq0f//+S5cucVgN6Kvz589D
t8jJyY0cObJ79+4zZszAUQR+mR4bG2tgYDB9+nRtbe3Q0FCB93kI4pPlwoUL
O3bs6Nu3L5ZYF79AdiI5+CP0xh9//LF8+XJNTc1Tp04hDpSWlop/iI/hvBUE
QRAfgxzNz88PuduePXugQObPn29qahofH8/hIe7cucPMM4XEcOLEid26dRs7
dqyioqLAsW6io6MRXSUkJCC6kNwxryLTWBwEwYBkYcOGDd988w2WWBe/QEbh
IPFBaZs2berdu/fChQsNDQ3DwsIyMjLa6DNGzltBEATxMey3S0pKSrt27dq5
cyeEB7cP3+vq6qCj4uLiDhw4MHfu3J49e44YMUJGRkZPT8/b2zsnJ4fdEsGW
UThjxoyBwomKimLkDY3FQXRknj17du/evfLy8uLiYtjz9evXr127lpaWlpqa
mpSUBHl/+fJlrMCt8Cs2e/TokcjH4lwbvHjxoqGhoaam5vTp07Kysih5+vTp
yHdOnTrl5eUVFBQEN7x48SIcMyYmBuGirKzs8ePHz58/F2H2urZrBQtzLpBV
4Vzk5+dnZWXduHED3Z6bm4t1nJfk5OTCwsLmZo0hCKIrAX8/evTo6tWrFRUV
dXV1raysQkJCbt68yeEhnjx5Ul1djYDj4OCwbNmyXr16DRw4cM6cOQhu9vb2
uAowmzEyBrEU2mb06NFYYp2RN6RwiI4MM/DU1atXIyIiINpPnjzp5OTk6OgI
8z5y5MjBgweNjIywgtxB/BEsOdcGkDeoDzTAsWPHlixZ8uWXXyK/kJeXNzU1
NTAw0NbWVlNTgzNqaWnp6OggG0pISKiqqhLz7bi2Uzg4FxA2zLxaAQEB7u7u
np6e586d8/HxYQZaR7gLDQ2liWAI4lOAeb0QekNBQcHS0hLRBpKjuUmjRIOZ
2g/xEEEGkfPbb7/99ddfR40aNXPmTENDQ6S3f/1H3mCJhFFDQwO/YgmFw2E1
CKKNgEKAboF6sbW11dfX37Fjx7Zt2zZv3ozL96pVqxYvXjxr1iys7Ny5E79+
cN9SWDjXBrW1tXl5eXBDxIHZs2f36NEDCcjChQuVlJRkZWXxl+HDh8Mfx44d
O2HChN27d3t4eEAeQOSI84Vj2ykc9pk45CVEmrq6OrQZcjeoNVVVVZwXZHMQ
OcjsODwoQRAdipcvXz569Kiuri4sLAy+j4CGUODq6gp5U1RU9ODBAw6P9e7d
uzdv3kDk4Fh79+4d1sgfjSgrK4eEhDxrQnh4OCISM9oYty88EwS3sA9EcEnF
dR/XU+QINjY2Tk5OWGIdf0HiAOeCwUtJSampqTk4OERGRhYXFwsskHkf5vXr
1/DNmpqa24I4ceLEypUr//GPf2CJdYHbYF+U0Mr5pFhJAN+cPHnyZ599JiEh
AXkGGWBmZrZ//35UmxlNYty4cRs3brSysmp59jpeWoEtKyoq8vPzY2Ji3Nzc
Dh48iPrjRJw5c+bUqVPHjx+3s7PT0dFB/efNm2diYhIfH083hwmiq8IEhIKC
Ah8fHwQxhF8jI6MLFy5UVlZC3nD7dTb7KiOiCmL+ggULJk6cOGjQoB9++GHd
unWenp73GrnfCOoAbYPMEfWJi4vjsBoEwS0wWnjQ1atXIW+MjY03bdqES6eX
lxfShMuXL4eGhvr6+uKqCoOHqUMhwLD9/f1TUlLgegILZAbJhPfBDbOzs+ME
wQwt9eWXXzJXaoHbYF8cQuCImh9z8+bN4OBg6LENGzaMGTOmZ8+eM2fORLWR
eqAJyDggyaBqmF8hSDQ0NFrWaby0AluiYwMCAhwdHQ0NDRUVFdEi9HZGRgbC
DnIrb29vnCM5OTnoNORQ0dHR7/9Da841QRCdiLq6OgTnhIQEFxcXbW3tVatW
HTlypLm5oriCGRhn27Ztc+fO7d+/f7du3ZYsWYKIhCyyvBGEqaCgIH19/cWL
FyMLQ2rZpvUhCHGA3ULenDt3DtdoyJtp06YhWWCmI4FWLy0tzcrKgjbARRym
DtGOza5cuQJFAWkksEDsCGGA7CM/Px/lnBHEnj17Jk+e/Pnnn2OJdYHbYN+8
vLxWjrSQmZmJXVRUVJYuXTp06FCUDK+0sbFhBtFCZZo+O54/fz6yEnV1dXd3
9+Ymz+WlFeyMvWjI+vXrFy1ahHXIJEijqqoqiKVLly5B88jIyPz2229KSkoQ
b/SOH0F0MdgHRgizyM7s7e2PHj0KxzczMzt//jyiRJsenY1Ca9asGT58OBP2
Dxw4ACWTlpaGgAnRhbQLqZasrCw9Kyc6Juw0B6mpqa6uruqNaDTi5uYGwfD2
7Vvm5RbmpiUUzhdffCEpKWlrawsLv3v3bnPfUsExnz59+uDBg+vXr/v6+h4S
BATG6NGje/bsiSXWBW7j4+ODbAIq6/Hjxy9fvmy5OfAya2treByEzaxZs8aN
G7d3714cventXPb9fyiHLVu2QMhB1zX3NlF7tgLHwq9QjJBDiGNr167dvn27
mpqaoaEhdkcNEfHq6+uhRbGO7AkthbxhxmqmezgE0cVggjPiD3JPBwcHBQUF
yAn4e8sP1rmCeeLv6enJDoyDJdbPnj0bHBwcGxsLnePt7Q25tXXr1uPHjyO+
tWl9CEIE4EEPHz6EswQGBmpqas6YMQPmam5uDnEOtVBRUYGrKmQMru8XLlzQ
09ODwvnuu++g6qF/6urqIG+au16zb8dBGjk5OakIAkpp8ODBPXr0wBLrArfB
vnFxcaghM85ny82B3+nr60+dOhXqBToHbbGzs4OfoibMzRN2DAcJCYmlS5cq
Kioywx03lxC1Zysgb9DVhYWFZ86cQTQbMWKEvLw81FFYWBg0TFVVFc4FO7Uo
0rqkpKTQ0FDmJ5I3BNHFYNIrxOeQkBCknJMmTUK+c/78+ZqamtYEQzFhPqq9
cuUKIuTs2bOhcBCR5OTkcHU4ceIEYiaCLfSPhYUFssjTp09DdLVpfQhCBNjR
DxwdHZctW/bVV1+tXLkSaULTmx5lZWWMmN+3bx8UTp8+faAcgoKCWn4ygn1x
LcbFFxkHnGKNICBF+vXr1717dyyxLnCbgwcP4hIPrYX6QKW03BxsqaSk1L9/
//nz5+/evdvW1jY8PLyoqKjpNlA4WlpaY8eOXb58OVKSlseUaM9WIKRA3iBf
MzU1nTt3LgrEGXF1dcXfP77zw/Q8PZwiiC4GOzA7InNWVtbFixcRBCAzkI45
ODggFEPeQPm09eQIiDm4CiAw2tvbI1R+/fXXw4YNW7x4MaphbGwMkYOwiVzs
yJEjLd8GJwgeYUewhBSHtvn55583b97s7e2NCzHED9KEt2/fZmdne3l5wYy3
bNmyaNGi0aNHI6GIiopq+ckIEhCUAHkAbR8YGHhMECgQSuPzzz/HEusCt8G+
GRkZqE8Lz3fg7JANcHzUfOPGjT/++CPqqa+vj33T0tKY8SLYh9oXLlyAChow
YICUlBQzITiCxp07d3hvBfRPcnKyr6+vtrY2FNr333+/YcMGtIgZk/CDgPb+
/yLEKScIogPDfMqEYJWbm+vv7498B1kYkjWIisjISCRBCMuIBh9MWcU5CFPM
Q3MEfwSin376aciQIZMnT2ZEDtI9RE7kwjY2NocOHULCW1BQ0Kb1IQgRYO/P
QA/IyMiMGDFCRUUlNDQUl1Rm6jc4WkJCgqWl5YoVK5YtWyYpKQnxwLw53/K1
lR05CpkIjD9ZEJBVKK1Xr15YYl3gNvn5+VVVVcxXSM05Nfupu7Ozs7S0NNIN
1BPJRXp6emlp6cOHD//6z0NtbAkJAYeFfli6dCkaAnUHjQelx3srioqKwsLC
IIf27NmDogYPHrx7927oMeyCgPbxN+Ykbwii68HmYvHx8RAPy5cvR8rj5uaW
mppaXFzM7eg3rSE8PBwR6ffffx80aNDQoUOHDRuGKiHJheI6fvw4MxhsC5+j
EgSP4KoN+Y3rMoTNmjVrmg5cyeQRuLziIgsLh4CfNm0aRA6H75VxNVZeQ0MD
5E12djZUzYIFC5jnOy4uLk3fFELEgMCor69HrFi5cuVnn322ZMkSOzs76Aqo
l44w4t8HEwcjXeJ84mCCIDom7HPn2tra3NxcBOHTp08bGRlt2rTJ1NT03Llz
CLlIlMrLy+/fv4906fbt2zdv3oSuQBKHRBWx7m8f4osGO0fVxIkToXB++eWX
6dOnr1+/Xk9PDwLMwcEBERXboD5tcXSCEAf2qrpjxw4oHGZkg4SEBDgakoWS
kpLr16/b2NjIysr27dt30qRJq1evhnp3dnZOTEyEJ0Ja/O33TS3AlTZgHlgj
j4AnQrf88MMPzPMd9gXjvxqHO87JyYFgsLa2RtAYM2aMsrKyr68v9u0gszag
Ce7u7urq6ihn0aJF48aNQ+4WHR3ddBvUE+elsrISIa6mpqbll70JgugsQN68
bYR9OGVgYKClpaWqqnr06FEEFoRihGuIHKia9PR0iArkngh6iGmI2Ph7czei
xQTKCiktElskj8OGDfv222+hc+bNm4coqqOjgyQxICCA88kjCIIT0tLSHB0d
N2/eDE2+du1aGRmZw4cPX716FY5269at2NhY5BF79+6dMWMGruDjx4/HxRcS
CH+8ePEiBMOdO3cgckQ+OlfaAFkMquri4qKpqbls2bIhQ4bs2bPng+c7zGCA
FhYWSD3wK9zz2LFjiAwdZ+ZNdjAfeXl5BBB2Prum20DeIL4h5mBj9H9BQQEz
zo/IByUIoiPADp8O6QJ5g2Rz3bp1iL3GxsbIKENDQzMyMiByELFTUlLwX8QK
xGp7e3v8iiwVoaysrKwtKpaXlwfFZWJigvQWCqdbt259+vQZMWLE3Llzd+3a
ZWtrixgF6YWEqy2OThDicOXKlUOHDi1dulRaWlpOTg7XfWjy5ORkOBrSBDiR
uro6fh00aBAMW0JCYvv27dDznp6eQUFByB1wka2trRX56FxpA9YHlZSU0JCp
U6dCxkDzNN2GnZZ3586d+/fvP3LkCCQQJ3NWctUKRDBXV1dlZeU1a9bMnj0b
wURNTQ05WtNtkChB3qDzw8PDY2JiENYgctoodyMIot1gkheoF6Sc27ZtGzNm
DPJK6BxZWdkdO3Zoa2tbWloiVpubmyPH1NHR2b17N8K1gYEBgob4obgFIJzi
4+Pd3d1xxAkTJuBC8N133/36668QOcz1IikpCYH0/v37bXF0ghAHZmhu6Ja1
a9dCyeDCCgFgY2MTFRXl5+cH34EqgBmPHj0aho1rLtzNyMgIWUNYWFhWVhaM
v76+XuSjc6UN4F+QKxAt+/btQ+Lz559/ampq+vj4FBUVQQDA91HVwMBAbAAJ
BCGE+mN7JER3794V+aCct4J90xgiZ8mSJUOHDsVJsbCwYG5EI8ggkkC2YRuc
GpwgBEO6h0MQXYOSkhI4NeQNhMScOXP+9a9/9evXb+DAgYi6Y8eOnTZt2p+N
zJ07F79Onz590qRJ+PuuXbuQh+bn5yP3aaM4gAQK5SOZMjY2njVrFi4EX3zx
BUROnz59ZGRk7O3tEWDLy8vFuZlPEG0EjNPb21tPTw9XZ1hv//79kTjIy8tr
aWnh2nry5El/f391dfXJkyfDsAcMGLBgwQL2ziTzzps4r7cx2uDbb78VUxsg
OKA+kGqGhoZQa5KSknv37kVyER4eDmGDBrq5uSF0IAnCBi4uLjExMRBFkDfi
vGDMeSuYkRVDQkJMTU0ROgYPHjxz5kyIHFVV1f379+OP1tbWaAVkp5eXFzRP
bm4uvYdDEF2Dj+eBaoHu3bv37NkTSmPVqlUeHh6tnA5GNNgvVRF8kHk1rcbi
xYsdHBxu376NQPT06dO2ODpBiENxcXFkZCR0+NatWyUkJOA4//znP5E4TJgw
YceOHfC41NTUgwcPwulgzz///PPEiROlpaUhfi5fvgzLZz4nF/nokB+sNsC6
yOWw91EPHToEbQN5sHPnTn19fRsbG3Nzc+g3NTU1/Be/QvZERERw+2EjV61A
mKqoqIBugbDcuHEjzgJEzpAhQ/744w/ka9CWaJeysjJaAcGG9tLHCwTRZWDT
tAMHDigpKcm0yOrVq9esWSMnJ4esB6GglVP6igYzrjtEjqen5/r16/v06fPd
d9/16tWL+WT11KlTtbW12KCtx1gmCBGorq7OzMyEyIEUV1VVlZKSWrduHfxL
R0cH11l4HMSAv78/RIKkpOSWLVu0tLQOHz4cFBSUl5cHeSNwnJbWA/kEyQFh
gCXWRS6HGbcQno6KnT59Gl6PQAHBExAQ4OPjc/bsWUgCb29v/Ap5k5GRwe2U
Lly1gsmVIHJiYmJwOiBmdu/eDakGqamhoWFsbIx2oXVoBVrawhg+BEF0Oh4+
fAiRc+3atbi4uLCwMN8W8fPz828kKSkJ+R3iMOSNOKG4Bd6+fQuRg+h04cIF
5I/Dhw/v169f7969e/bsuWrVKsgeZmzYNtJXBCEO7KwNycnJuHQ6Ozt7eXmF
hITgInv9+vVbt249ePAgOzsbHgfBA7UALQSfYt5uZXxKnBHnKisrIQkCAwPF
/NgQ3of6wNNRMQg21DClERSLVkDSZGVlMV8eoaVoL1ot8rHarhXsyMzodhQV
Hh4eHByMUIYzghWcEbQLbUErmNvCbTT8BUEQxMdAeiHPmjNnzsiRI/v27fvF
F1+sXbsWAYrmjiE6PsyUjrj6Y/nB/UZ2biYsxRk3pj1BPZET3b17V8yxbvgF
GgYKs5VzchEEQbQdzNAiW7ZsWbBgwYgRI3r37r1582bkxTS4OtHxYeaxhYbB
Eusf/MTMzYTlBz91WJg6Q950ojp/DDM1TMuzWREEQbQDzKAcBw4cgLCZOXPm
r7/+qqioGBoaSvKG6PgwEzAxc1F9MHESOzfTxz91WDpjnT+GfQLewmxWBEEQ
7QD7QYeuru6KFSuGDh2qoqLywYBdBEEQBEEQnQtmwqzY2FhbW1sFBYUpU6bo
6enRxHkEQRAEQXRqHj9+XFVVVVhY6Ovrq6uru2TJEnNz88TERL7rRRAEQRAE
ITpv3rx59erVs2fPEhISjh49um7dOltbW3HGxyAIgiAIguCdd+/evX79GiIn
Ozvbz8/P1NQ0ICAgPz+f73oRBEEQBEGIzvv37yFy3rx5U15enpyc7O/vn5KS
UlFRwXe9CIIgCIIgOICdXwZLmnCTIAiCIIiuATu/DJY0EilBEARBEF0Ddn6Z
tpvQnCAIgiAIgiAIgiAIgiAIgiAIgug4MLMHPnz48OPZAwmCIAiCIDoppHAI
giAIgugyQMw8fvz4/v37xcXFqampkZGRWVlZ1dXVfNeLIAiCIAhCdJgJoYqK
imJiYk6fPm1sbOzn55eXl8d3vQiCIAiCIETn/v37kDfJycmurq4aGho05SVB
EARBdBz+H9HtDtU=
    "], {{0, 148}, {758, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{239., Automatic},
  ImageSizeRaw->{758, 148},
  PlotRange->{{0, 758}, {0, 148}}]], "Output",
 CellChangeTimes->{
  3.7678141444290514`*^9, 3.7678902777690396`*^9, 3.76812062824376*^9, 
   3.7681699083789907`*^9, 3.7691253144372234`*^9, {3.770132413640087*^9, 
   3.7701324403536663`*^9}, 3.770144703347709*^9, 3.770156539993929*^9, 
   3.7701577670262856`*^9, 3.7703710140248*^9, 3.7704173952087436`*^9, 
   3.7704534514497247`*^9, 3.77047504373707*^9, 3.7704843669591064`*^9, 
   3.7705360739480734`*^9, 3.770585302525296*^9, 3.770630755084237*^9, 
   3.7706310744471817`*^9, 3.770666082484068*^9, 3.7708011182721148`*^9, 
   3.7708024899725723`*^9, 3.770809316935466*^9, 3.7708321955413084`*^9, 
   3.7708382362795067`*^9, 3.770842253229639*^9, 3.77088244704506*^9, 
   3.7708864680778866`*^9, 3.770894537183631*^9, 3.7709343894528594`*^9, 
   3.7709361248211775`*^9, 3.771025639798735*^9, 3.771159270740365*^9, 
   3.7716755291151347`*^9, 3.7721372057842965`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getInradius", "[", 
    RowBox[{"{", 
     RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"num1", ",", "num2", ",", "num3", ",", "denom"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"num1", "=", 
       RowBox[{"(", 
        RowBox[{"b", "+", "c", "-", "a"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"num2", "=", 
       RowBox[{"(", 
        RowBox[{"c", "+", "a", "-", "b"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"num3", "=", 
       RowBox[{"(", 
        RowBox[{"a", "+", "b", "-", "c"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"denom", "=", 
       RowBox[{"a", "+", "b", "+", "c"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"num1", "*", "num2", "*", 
         RowBox[{"num3", "/", "denom"}]}], "]"}], "/", "2"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7677335620857472`*^9, 3.767733626381884*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
NFFqKbZZXpiH40aDnYcx44htATlx9E4OjvOmeiUjJTiLTI26TLRwwjCCqTWJ
lFTBEOI9UpynWOLWBAAAAAAAv2dqmVAh4MhG2xqLHjy6eTbosIHTXvudO/0M
d5A9QkoynveOqHGebFQkalHyS3ITQ1ysbbSxdTstjvhFpj7sEpUPy9hT81wG
p5biKgGu5HYUxz8J3B5mih345j8+2/gptt5QZ6+r/c2U0LKezJd9L7n9KhWn
+XEc9cC2wDXYrr/qa1u4Y47pdnFVD+sG5/wkWSXlKSZ7JMOMupwb9y7t8LBZ
c+ygmZ2z32bfHO+U+qfNwzMTj6WjCn4rPlJSmZd+IzieSAy9dC0rs7QdVcgj
clwEnyQDAAAAAID5oQpZPFAjaMvMJV/1Ob5/88Yvd+48cdwz3jueeb+ot66H
P6XGxaJByVilhJ2aFnP5kJX9Wkx3+3aPK/H5hVx5s0DFlc4zwVc1hSuGcUkX
MzMy4YSF80eYxcZPPza0way8TS7eu5xZVc7mtY9NjInGpqe5bU/jM09uJ2lh
+/S/1SF6YWdzdpLrHzUMzzknWT7ZJ+p9zmPef3L7gschS4NPtOz27He6Gh+U
15nCHG4YmZKgdZQilZSLT/UOdL188ZxBpZbTy9va+8Z4ipkKWQ5zkgEAAAAA
wPxko22oQh59TooPOrVj8zYM0zHc4eYdT8sbxZkCfHj2SR8KPkvKpgmbYpPC
AqzNjmMYwcyWFEapaJLibAXOn+9TWQUPl/bgQkZFEolkbUrAMN31huusvDGX
PGIik8ocnl1JPnu3CV4njZzjRojQwQ6bG2085Id5FRGTm6lN3Dk3LBlu4jGT
OXlecd6Hthmao33ebO0WlER7LsTbpPgoTKUAAAAAAADvSP1qZu9k94teWjjz
9r7Qs99/Z74H0yKaHrsRklpZJ8C7JdOTSvXMh839Nf3lt1uSHW54nzTbcRr7
yMXKiXz7CRNVyGPKee8UoZYMqyaY8sHc/NhAj21Wutha/b/ZbToRYXKHGVTU
S++enFlJKcRlQ7i4s/ZxRLTj1sNamPV3pkZnQjZE1bnndRd0zX1zOWFfBaf0
WnuSTfg5662brbE1hO/sSdeo5Y0SvE+BT8JUCgAAAAAA8I5Us5/iSofqnzLu
umSf3uC5f6vB9qOY4UUrn5TbtJZ+GT6mUEnUM+sMN+fUP3TP9f7C+6Ttt7vO
Yabh1oE59+hd/Nl7qSl+dYO2V5SCXtkgXfQyMfWm1xFz23WY9iYTpyNXHgVX
Dj/unGwbl86sJBvDhR34aAUt6fL5PcYb12BGphbbvSL3Pe6KrB6uHpyac8sT
HXmspy41Nz65enLzli2osHexPEGOftLQq8RHVbgIplIAAAAAAIB3pJh99Jyw
m55EC7CONcYcLPW+sPvFbSWUKlwys05FEo1kHUvAHHYbfHHAA3PMIsbVUus4
b34D+XibqCuTV0UiB58jmHyPYcYm1gHBSfQqId4lxcdfTYoQcfCxWrwvixrj
QbQ0wDBsg8mOfcHxpKrRzC5B27hszi1zm6jNycQiL8zv0EYj88OYTgTBLYdM
64QHhQAAAAAAgPfzukhmFScV+FrHGGAntxl8u//CGucn+xNq05gcBT4tEvRO
DtC5rUlFiacjnL5y0MWsLfUNDruuv5B6JK6E/Ky5kzXMGZkUTEnnvLxONFjN
rY7sebzv1sUDllaHsHVHth6NiUiv7ZDgQzLFlFyEy3m8jsquvITqGI+b7g47
dxLXfWG6zcnP/34+qpBrhsScqbmnF3ObqS0pxBJfzP/IZ0ZbD2I6NwhuT38s
kmdfo5ZNCQQjg6OsNu7gwMg4f1ikmpSppcp5PvUGAAAAAABgxusiuaswKc/T
OupL7Mz2zd85Bmj5009QW7JbR1S4anKgjF0Z2pxqneDz1QnLdV+swwyM9EyO
OltdpTjHZkdSS3NpTEZj78DI5Jw3auN1FfTkuTOiNpDcLU13Hsd0L+/wSI8v
eDmqxAUykUzCxUU9Xc9S8i6di7Q0cNtJ3Gl/VteBdCrqcRK9pW1chipk4Tw3
oRhtobZSiXR/LOCYzmaL/ZhOGMHtCZnWMVskTytmn1UtHBkYbKxpo2W21FY3
dbGZY4oegRLVycvQsgAAAAAA4HfrdZHcSUvKcbOO0MFcCKYEF5JOBMMth0Xr
HEdlL7c1pTnVrigI89uNGWnPPARk/Re6Vg5OLrFkn9iHwbEZEbF52TRma/fw
nI/8+MekiFN6RvudMQLFjlSWUsFG5bRKzpsW9eA8RjWZFEkwtcewPV+Y2jmQ
CLGMUFpPOWvu6/V+NNpKbUsjPg/Cghw3bLbch+mQCG6ZZFr7qyJZPrMjyrHu
1pe0jOexpOLMx8+qmvL6pKhOHob7IwMAAAAAgDd5feEeuyLj+TXH+zZaF3ab
WO1z0DpM2u71g29kGpValH4/KvPuyewYo+CTf9nz7R+112Bffb5xs90hq/M3
T4Y+uEqmUXKYpYzenqG5P0nmtmQ3Pzpe5LfOz9HIaPsxTDfE/PS9G/dprZ1N
9ZWlldmZdDKZ4h907eBxFyNLzxO+gRHpqELObBxpHxG9edf5vUVsum9TokHU
ebOdFtZrtfZtsfU7F5xEplWkFj7PL6ZX0IuKcp7mUFPTE+7l55eUN7Lgk2QA
AAAAALAIr28BN9xUWH/fN/e8od8BI3NzkzUbTf/3t3s2WZwiEv3PnfO/ft3v
0SO/Gz47Xbf/ZbcWZvbZX74yJq63CdjlmxTysKKgcbiBPTnEl805J5n7srA5
3bPosq7fYXMjw++xdae/2eF/PigyI4dCjroVfi4wgHA26KBvkDPpsl/MDwnZ
GcVN5SweqpDHRQtceyfmNo63POgv9qBcPnDCwkx7zQa9jdu22J4iuJGOeAZ7
+AaRAvxvhEVFxSbfptCelDQwuoZhTjIAAAAAAFi8cVZ1Fy2yKtY+2MHQ5Aut
mUkV2FoM08YwY10jJye/W+SiougbfmH7jYJ0sN0667V1rDAdF1NnMukxk8HD
e0Q4b56SlttW3pwZWkQi+O0jGG0gYBhhw8b9+w6fIkV4nTvs+P3GncaY8QEj
Dx+/1NiiPlrzGIu7wAfIP1JMcaQjtUJWVl6Uh6+FgTHa3TXr1mrpYjqEdV9a
6hqYEYyNDx07dy4kKSi1Ka2S3TrA11h7AQAAAACAD8DUSOdQYy6qk9Nv+/q7
OdgSCLY2B23tXGyJAR7+8Xce5Zc0N+c/SckK96Wetb7ucuqs6xVbN3JgQklG
dS+qkEekuEg595b5nHZ2TSaqkx+Fh/i5BNtZX3ZxuX79ZsyjjMQ7EdHX3a75
EwOi/B88fFSJKuRGtmCEP/cN335NJZ2QT7JQnczMvZ9yxTvAztbF/ujBY26E
05cPuwa5eQVe8Q+IvJ1IzihFFXJlx9jAuFhj7QUAAAAAAD4ActEEqpPHWdWt
1c+KnqZTyGTKfSrlYQ6FSs8vqa9rZfVyuV1tTW3lBc1ZSeVPs57m0Sk0ZhGz
t43D58lnKuR5bkGBy4TjqE7mtpW3vCgtelqUklSQnVlcUlxWU1f5orSiNOd5
EZVeVdLU3DrI4opQhSySzVNt/4paKUF1smKKM9LV0FxKo6dQch6lUanZ5LSC
lKxnT/KKC4voFTUNjLaZz5BRhSyQwJOqAQAAAADAu1DJ5QqRSMrjSdFPufyn
N6xQKxRqqVQpFCokEplSOee9LN5ArZCrpSKlkCee5PEneKOjPL5AJJbJX13r
916X0qlVaOu4UioXi0R8AW+UN8kXCcRyoRKXqnEFXKUHAAAAAADej1qJyl8p
qpMVMplCpfrpDSumVSq1HBW6UpVCofz5fy3GtEqplktRnYxKWfGUSIAqZAkq
kVXquS73ezvTarTfqE5WyWUysUSEtiyWSeQqVCHL1bgKrtIDAAAAAADvZ1qt
RnWySi5XoZ9q9U9vWIH+a6ZOVijUKtUv/muRW56pkxVypVyukKNyVo5q7Zn3
mN3I+xXJ07N1smqmwlco5DL0BkoFeqvZClkNRTIAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsRtMq
2bRcoJaMTg519rVWN5UXVBQ+zcvOoM5AP59SqQVZGU/zn2bQC6j5T7OyMvKp
VHp+IbOS2dvK5vWPifhi+fs+ehUAAAAAAIDfkpkKeWpAzWvrY+SWpUYnh7pf
8zzpcvwgcQb6eZJIdD968KTryYMB7kTXk0ePHnQlEgNcvRNvJpSklfVUtnFR
nQxFMgAAAAAAWE3UklFUISs5zxuyIx4EHvQi6Njoan2ybg02A/3UwjCdtWu0
tLXWGOtg2lpr167RxjBjbb2zu53JQRQGtaynmc1T4rhypQ8EAAAAAAAATfnx
k+Teykelib73vQhnbHS/+mTdTIm89mOtDRYbTJwt7Bwcju4PcCee3m+929zK
ZKOZxXf21t+77nYmBcVlZFS0dvKVaFnpQwEAAAAAAEAzfpyTzOt63l0Sx7jv
QjpjZfrVelQka234xvB7933Bjy/eTic/SqMXUNPvXovzPxV82PK43VaL78y0
9Uz3nvUPTXlWwJagZaUPBQAAAAAAAA1T8ToVPblSRgSFdNjWdCMqkjeYEPYF
k0lVvMwuUdu4HK0z3lnelRtaFUEIPqxrsnHm0+YvzKwdwpJim4RoWekj+BmZ
TCYQCEZHRwcGBrq6uloAAAAAAD4YqPhBJRAqhFA5hIqila7Lft8kHOZEbeJg
lkush902Az0MW6drfuTUzdTElyL6oKxXMDObQsCuHSyLfUlxuOm8xVzvf6Ei
+fPvrI+E3otiCtCy0kfwMygk+vv7W1tbKysrCwoKqAAAAAAAHwxU/KASCBVC
qBxCRdFK12W/b5Nd5X35oQ3RhGtHzb773BDDdA23eXjH5ucOypkTqmHJzO0r
JMPNE40PBwt8Yn1ttxl+iorkz7YQDoYk3qidRMtKH8HPoFMnFBh0Oj01NTU6
OjoAAAAAAOCDgYofVAKhQgiVQ6goWum67PeN21TQnOxe5KXjZ6Nv9IkphhFM
rUmkpAqGEO+R4jzFzDoKXqe0J1fIiEgiHbb++ZQMtKz0EfzM+Ph4V1dXVVVV
Tk7O/fv3wwEAAAAAPhio+EElECqEUDmEiqKVrst+n6aV+LQUV0+xK9Kfhzre
t9E6s/nrrz6zxbROWzjejcyo75LgQ1KFUCZSyXjjLfSux+E1pMNX91lt0dHF
MK0vzR2cbqQntIrQMu9bqHhomWC3d1bQq6nU4tknlCza6weaFJYymZ0ctkCB
lsUc1uTkZF9fX0NDAzqHyszMTAQAAAAA+GCg4geVQKgQQuUQKoo0Vjd+UGYq
5ElcPdKem5h1dnfoJ2vsP/ta56tDmGHIdt/M+MJ2rhKflIlEIq5C0MPKf1Di
53TPdONpHV3dtfoYZvitla9nzLNsthwt876FogctXWWZeWGXIolEv9knlCza
6weaeF8hJ+TUlnGkaFnMYQmFQg6H097eXltbW1RUlAkAAAAA8MFAxQ8qgVAh
hMohVBRprG78oKinUIWMK1nMlCiynYULhllp6a03dMbsKbaRZZRqNipJpTKe
VNAjHWUw4kn3d5h6YZgNpvUJZohh9iaEyGBydRUPf9NsCykDLdUUUqStqT02
8zItbPFeP9BEz/ysc3gWpU2IlsUclkQimZiYQIHBYrGam5trAQAAAAA+GKj4
QSUQKoRQOYSKIk2VjR+UafnEtJilmqwpTbwaTNhihWFf/L9//ZPeHszu8qbz
Eb637z6jUbMzyWnJtyjxpNveZ0N37/LVNTy16ft95h6W1pHeV/NSi7q6RHjX
/LMtcFk7Wl4WJqf5u18yMXHesuX7LVtMF2fLlh1odROTo04XbkWmV9D6JWhZ
zHEplUoUEujUCcUGl8sdBAAAAAD4YKDiB5VAqBBC5RAqijRVN35Q1OJh1QRT
MZCXHet92spwPYb96U9//r8/N8Esj3y658BOx+8vuhHPHicc2mtpu8P08O5d
LodO+Dt5X71468bNjJik6uySroZu3rgcH59/tgWuGEDLQHN5ZdqD1ODgxKtX
b4WEkBYnJOTG1atRwcGxCSkFeTWdDeNKtCxf6wAAAAAAgA+SSsBWcMqkbRRK
uLOtud7MBIe1azFtbczYeK2BtvaXa411MG0tbO2amf/R1jXc7eQdRM6794xZ
+nK4T4iPSXHRghfSKXlo4Y+y2R2tTVVVDTU1zNpaxuKgFWtqGFVVjKb2nq5h
HkeKL25KMgAAAAAAAO9OOtomaMvkPg+JDzq0ffPXGLbmj598qW37/WbviztO
7LTf9amTKWa+4V//e+3/wLCPvjTa5xQQnVDCzG/sbRycRBWyQI7LVAu9h1qE
FrFgbGxogN3V1cdi9XZ39ywOWpHF6unq6mFzuMN8EU/x+mZ0AAAAAAAALJ2p
gfrh6rtd6acj3W0t9FGRrKX9rd0uz6tBOc9CYnxveG66tRc7+u3/+Pz/24Bh
ppssvS9GZz3rHa4fmewXykSKmQpZqV7oPdRytChkYrFQwB8fn5yYQAtvcdCK
aBkf5/GFoimpXKLCJQvW5AAAAAAAALwfHqu8hxbKiCWQHExNv9DHMJ3NhHNB
5KfPeVJ6OaXkB9siF8zP6iOj9aYY5mhOjAun1rXhOAfH4QGHAAAAAABgNZKh
ZaQlv+GhR4GPru/3hoZ6ZthawncHQ65RSxtFiobm/IYsj4Zw3WuHv/luoxGG
mRpY+XnEFmQNTNVOSDniRV9Ap+ChZayvva2cXk6lFlKp2W//CPJnpeV1HX0s
vgItS9kmAAAAAADgAydAC7uGWnbrCOXAOuftenrf2mHaLpYu5Oic+l65it1f
1199ZzDLKdbDdpvBNxj2kY7Jsf1XksMqR5508tvHF30FnbQHLe2lmVnXLoUS
iZ5E4vG3eJjIaxcuX4vLLqWxpTQ2XLkHAAAAAACWzihaOunxOQE7Ioyxw8Yb
NxofxowjCAE5ZHonDxXQ/F4Ru0TaRKaEOdma6WKoSta3MHWNckxlxVWO1A1M
LfZ9hAy0VCSRSNamBAxDG1r3Fg8Tee0LM2uHsKTYJiFalrJN5iWVSnk83tDQ
UF9fX2dnZwsAAAAAwG9De3s7i8Xq7e0dHR0Vi8UrUimtKrIOtNQ+jYg+u/Ww
NmZl+LUuwUXrUIpDdEV6Tb8IxyXiEdlYg4Kdn3vH5xzRcMMaTFfX6Nt9/qaB
xQGpLUUvR2U4rsDxBa/bwyUdaGkpekS95OlvYX7GYus+i60Wi7N168xibm5x
2vtSeHpRTp8ELcvQNr+GKuSenp76+vrnz5/n5ua+/YQRAAAAAIAlkZWVVVBQ
UFpa2traiurkFamUVhVBFVpoKcHnD5hsXIvp6m/Wtw8wDKD7UluftY7KcVyp
4KvEfSp+Y2VqWMSx7/ZpYVs/19X97tRHuxOP36SnVfYJcFw8WycvQDmEFk57
dU1OWmZUeHJURHxUZNTiREZGRUREhYdHUTJyCuvbGyeUaFmGtvm1oaEhVCHn
5OTcv38/IiLCHwAAAADgtyE0NDQmJubevXuoTu7t7V2RSmlVGc1DCzXem7jD
EMMwLV1zQ6dwe3JbZAmnuvfVvStks/OWR9tp8ZluO0g62D4d7Q06uzGdoB1u
qfG01tHZ/5Yt/E5CtIinuKMjfX2stl5WRzerk7U4nZ2sjg5WWxurd2BkaHKK
p8R5K/TAvfb29idPnlybdX3WjVk3AQAAAABWVFxc3P3799PT06urqwcGBlam
VFpF6tK80RLiamOq/ykqkv/jL99+SvQyDMi58JCRVc/hilR8mUymEqNCuL/6
cXnkqeR9n5w1/1rvb+aY1m793ZdcwzPTqrvLO0e6J0QiNS5606wLKVpkUoGQ
PzY2whkdGeKODI8szvDwyNDQCIczMjrBnxRLF3qjJVRTUxMdHX3o0CF3d/eQ
kJD4+Pi7d+8mJCSQAQAAAABWVEpKSmZmZkFBQWNj4/Dw8MqUSqtI3GlDtDha
fPq3j/8DFcl/+PPG/9h8ROtQ5L4bObeL2prHFP1CBaqTcVw23lHalhVSRrIJ
Omxq/PXX2Brtjw32WRy/djqSFpPbWNoxMqbGx95UuyrQolSiOlkkmhKIpoRT
M8uiCIUzi0AwJRJLJXKlXI3LV6hILiws9PLy+uqrr/bv33/p0iUqlZqWloZO
2TIAAAAAAFZUbm5ucXFxRUVFR0fH2NjYypRKq4ijDoYWUy3sozWz949Yux7T
tsKMXYw87vql1hT1SVGdzBXNPN9ONNw0xkzuy/OK8baxNPwErbtG6wstQwcd
+9iTETTKi+4+Jd63QrMglppKpZLL5RKJJD8/39PTU19f/8SJE7GxsZWVlVVV
VdXV1TUAAAAAACuKyWS2tLSgCpnD4QiFK3MfsNUkzp2IlqCTxNMHZ+9EfNSZ
6HqVGJDo/6D4USULVchsgZIvm/ncVjbJFvSUoTq5IPnaVT8XtO7BkxdO+sW5
R9Lu5DaWLfxJ8u8YqpCnpqZ4PF52dvaFCxcMDAzc3NzS0tL6+/sHBgYGAQAA
AABW2vDwMJfLHRsbQxUyKl1Wunr63asroKKl9Ck1J+PV3UNyqfllVDqzpLGn
ZWBidk6yWqacRmsqpXxUJ4uGm1jNFc+L89C6GU+fPS2uK6hmMTpH2ONTKzhV
eKlJJBJUIaPzssePH58/f37Tpk1+fn4lJSUrvV8AAAAAAACsGFQhd3d319XV
USgUVB7v3r375s2blZWVK71fAAAAAAAArBgOh8NgMLKzs+/evRscHOzi4pKY
mMhkMld6vwAAAAAAAFgx3d3dhYWFP/zww61bt27evEkikTIzM9va2lZ6vwAA
AAAAAFgxra2tqampgYGBYWFht2/fTkpKKi0t7evrW+h1ahxX4rhczJ8YY7PZ
Ta2c3oHRCQFPgYtUK3YXOw2aVqunVQq1QqaQiiUiwZSAx5+cHB+f5HL5k3yx
RKpQzTbB9ErvpwYpRAIxd4Df2zo6yB7kTvTy5FyRUvRev8t5g2RKoZIpPqzm
XR2WM0hWRyb5XXu3NAhB8rZguNFEkACwJOrq6n744Yfjx49funQpMTGxsLCw
qalpZGRkodcpZx+hIhpjs9rKy8uS0+pKq1pZAz1SfESOz95X7/dtJmXJxWqp
QCIYmxwbHOH0sHt7Ozv6mpvZff1jEwKxYrYJVlOXRilrrKWSXZL2srq8toVV
0iNqGZGixPUem5w/SKRKoVTyQTXv6rCsQbIqMsnv2rulQQiStwXDjSaCBIAl
UV5eTiKRduzY4ePjk5KS0traOjAwIBAIFnqdHKUsHOexm2rKKMkUr6An91Lp
Na0MIY4SFzrB/71DJ/UoZSmFowJu31BfG6uN0VTPrHzRUFTU1NCMznz50tlH
yPz+0/M/oJN6lLKayEGlj5Mzi2vIDB5KXOgE/z02OW+QsISyceGH1byrw3IG
yerIJL9r75YGIUjeFgw3mggSADRpenparVarVKqSkpLAwMAtW7Z4eno+fvwY
Vcjj4+NisXie16lnO6tMyO3iNBa108ilVDL1TmJUWGJaBr2iuW/VnNorJZPy
CbZ4sLG1qiA79V5UOCks8s6VmAy/2NJk2sv67lHxbOJeTee9Ym7vWEspu/he
Zdq9tB/IkSTyo0eF9JrOVq5kgC8XyBb/S104SIb4/InRvg+qeVeH5QyS1ZFJ
ftfeLQ1CkLwtGG7eI0gAWBKoQlbOotFoqDzW09M7f/7806dPBQIBqpAVivlO
ztG/o/4q4DQ+q026kulGuBfkHhEeF5RQnFzUUts9umomiSkEw+LBBv7L/Pzk
iIALpyzMTc12nTBxCDNyy/RJqslr5IhQ7l5dWUsxNSoeeclnlTKodx5dOB9s
Soh0v0x+UJDWzKtkT6HEtfgtLRgkk5Mjk/0fVvOuDssZJKsjk/yuvVsahCB5
WzDcvEeQALAkVCoVqpBlMhkqjF1cXP7617+6uroWFBQs9DrUUwU4PtpOi890
20HSwQK/t/C8EuWSxUqsHWFyppZj15eFbLxX0FUyWkWOD3baYaI781jzdbqY
rhNGIFuTSpIqeoWzk+R+/1/0/YRahKvHcGVfU0oMxc7SC8N8jbb5+8UFFXFQ
4kIn+Ive0MJB8iE27+qwjEECVtw79lMIkrf0IeZDjQUJAG/n1TyKV1Mp0E/0
1zlXE4vF4+Pj/f396enpFy5cMDExCQwMpNPpb964XDgwxamcaE8renAl7NzB
fYb65067hcSnJ9SOlHTzeyakS3BAbzStwNUSXCWYHBnqbe5k0pmdzb2ckUm+
CherccV7XAysEA5LhhsFnQWZkb7OWw03YNinHxv8t4WnlnO2YwIjgzkknf3+
SzPfCS3ZUbzlbshwtQAlLnZpRlmw+wNL/Wv2B1zOXNrtlxLysILWODAqxwVK
XLbQ5zaLCZIPsXlXh2UMkuUAsfFG79hPV1mQ/Gh1DDe/ERoKEgDeyquS+NVU
Crlcjn6iP8+5Jo/H6+npYTAYycnJi3/QnnCwfrg2oTPz9L2bZ487u2zY7nrU
/27sk2oGZ6qHJ+VJlv3rIJSylBO4gtPbWE9/lJcYkJj7iF7b2MtW4GPKmcT1
zlRyvnKqXzbRUp5w/SbBbB+G2XxmYn7gimFYlW92Z2HHxKvLKDTTg5fsKN7O
tHI2cYn4rJq+/ISGGNc4z7NH7J21jU4d84lPyK9vE+ED0pnE9WaLCZIPsXlX
h2UMkuUAsfFG79hPV1mQ/Gh1DDe/ERoKEgAW71WFjH6+qpAlEgn6qVLNffY5
PDzMZDLz8vISEhKCg4PPnDmD/lBfX//mtxhvK+jKdK8i6QR77zY5FYjZp9pF
VqZUD7y6O80KdGGVAKUsXNrGfJZDvhjpYuwSfpGc9YzZJMVR4uK/14n36+up
26nkTCKBhGHe+hanXKPsU1mRlSPVAxr9pm8Jj+JdqEUD6rFKZV9qSkygneVu
DNPZTHALItOe83CUuEYXmiy2uCD5cJt3dViWIFl6EBsLeK9+ukqC5EerY7j5
jXnPIAFgQVKplMfjcTic9vb26urqZ8+e0en0ioqK2tpaFos1MTEx56t6enqK
i4tRYRwTE3Pjxg1UJ2dkZLx8+XLu95j5mkmMq/h9lan0iGOJ+7R8nXZ973ld
N7j8QkY7rW1cvVK3OlfxcUU/Lm2pyk6NOBu0V3tvoHNEypMqphjvleOT73ES
Oq0STiuGpiWdVZSICNut6NTeYfP2swF3POkjlFZ+06hGv+lbsqN4N9OysWlh
u2q0/BnluufBXXrrtHbvPnbhVurtRj6NLWbx55kZ9zZB8iE37+qwDEGyHCA2
3ug9++kqCZIfrY7h5jfmHYMEgEVDFXJ3dzeDwcjMzIyKivLw8Lh8+XJkZCSZ
TC4pKent7Z3zVageTk9PR2uiChnVyYmJiai0nm/lmZSlHMMV7KbcOw/OES9s
WOO2d6fzlTinrJ47tVzGkOhVylqJrDWJK/pwaUNpWlLQITfTtabnDgYlUEtr
RXi3DJ94n6wlH5sWdah4Ffnky64E4w0YZm1u43ojKbp1Kn9A2qXZL4GW7Cje
zbRSNC3jTot76nPiEtx3OuuuOXOQeCb0zukc9t36sfqheW4P+DZB8iE37+qw
DEGyHCA23ug9++kqCZIfrY7h5jfmHYMEgEXjcDioQs7Ozg4JCdm/f//f/vY3
CwuLAwcOuLu7JyUlNTQ0zPkq9JL4+PhTp05duXIFldMFBQWNjY3Dw8Nzv8fM
GTQblzZVUMJItmYEDHOysL0cRSGzpCUjit6plftWUsXDFT24lEGjxLrZHtXB
dA5bu0Un0aqEeJcUH3+Pc1C1hKPm1So5WSlxHnbbDDAMM9hB9IinZo3itQKc
I9PcIeBLeBTvvEOzF1JL2RWUMpIthYBdPm52JCDMOLYpgMams/jzvOgtguTD
bt7VYcmDZDlAbLzRe/fTVREk/9ixVTHc/Oa8U5AAsBClUimVSqempvr7+1El
XFJScvv2bWdnZzMzM0tLyx07dtja2oaGhpaVlSkUil9fwVdZWXnjxo1du3b5
+fklJyfX19f39vbyeLw530st46qEzcqxwoK7Vzx2bNfF1u7fdjg47vFjjqKa
pxqUzD07TCERSiY4Ak4bu6O5oY5Bp1e/qKiuq6luYlbXlBWX5j4toFKLntFL
69rLWbz2EdG46O2nH6FTe2UvLmMWJt/xtD3xJfalo41n7IPCGjHOkr/Xqb2C
3y1h0wRNsffCXK3NrDBs/Tdmh89fj89obs9+UZ2bT0M7/5SanUEtpFLLC0tf
MjtG2Hz5mFgpVrz9XLklO4q/f+KiVkgE4olBPvpddLU0NzWUV9dVVpZWv8ip
K6e+qCoqqWsoYA7U944PTopnb1mvnp5NXEOMTMYdh6dO666esf7+XLD2+UKX
+805TVz5XM9Ifasg+bCb97d1Ac679lP17KEsYZAsR/MuYWy8thxpcMm8dz9d
hiD5+67CcLPylm+4AWBBr6YiDw8P9/T0tLS01NTUUCgUf3//vXv3WllZGRoa
fvbZZ+fOncvOzhaLxTKZDNXJP305KqoDAgI2b9584cKF9PT0wcHBiYkJiWTu
mxOqRGwFt1zS8zD9lt9Ry53rMG0bwrmr5LxinqpFNM2Vz/3FF0pZE6waTm1m
2ZPkpLj4gIDI69ci46IjkxMjo6/6XXY+6U4k+ly4FBSXGUrryWwcQYnrrVtB
PYmr+nBFQ/FDsq/daQPM4JSt753k4loZ3q3EJ97jIwcJt2WyhTpU7P+Dv/M2
I3sMs9LfdNrd72Z6YeYPP0ReveCGdv4k8fhBoieRGOp9OT0hu7GMLXo5JkWJ
67dzFK9S1sz3l7yBse4adm1mef6jh5R7oZFxN8ODbl0/HRdKvB7hExB7zz2x
MoHeWd078fe71qNXqcbbnrWlXyi7rEty20s4ErjW5uHBa+XUin7R7E07f3Gc
bxUkH3Lz/rrpVta79tNXx76EQbIczbuEsfHacqTBJfPe/XQZguTvuwrDzcpb
vuEGgAVNTU2hCrmrq6ujo6O9vf3ly5eoHg4PDz9z5sz27ds3bNjwb//2b3v2
7EGVM5/P//VD9PLz811dXbW1tc+ePZuTk/Pm+8Up+J1Sdq6wKSIpzMPaDHVh
Y1PbABKFzpDiPQqcN09yQCf1KGW1ZZEoYd5ujqeMje132tg7HrL3crE/ZGVo
vl5LB8P0vzA1dSARYhkocaET/LduBTUfV7NxZRM9JSnA7pwxZnzWLoCcQmco
8R41znuPk8+pgbqRyjhWqmOU60kL/TMY5qKv5+nqHJhKIQU679uttwHtvBa2
bg2mi2EEPbPLzmEFlCYeSlzsd3hU0JIdxd+vAlfyOa3s2oymLFJy9EVvT1eC
vePuPaYH7D5yJGB2e/WNHVx1XFKdyZWPmQO82ausXx0Dv7ecXRLaRCaEeTmY
2flgOhEEtxwyrfOn6/zorYIEmve34z376dIFyXI07xLGxmvLkQaXjKb66VIG
yWsw3PwGLN9wA8CCfvwkeWhoiMPhDA4OVldXP378OCoqytHR8euvv/7DH/5g
ZWV1/fp1BoPR09PzaioFKpVRwYzKZlRRnz9/Hq3m5eVFo9FQhfzq4SNzvpeC
3yVl5wmbopLCPF9nLZsA0gM6Q4z3yHHez8/xZFOjgqGW0U46g5b6ODYm3CMw
2CvYzzfM3T/ySuj16OgQCvlSwKk9e3W1v8Qw06+3Es+FO1DbY19wavuFcx/q
tHr2emeZVCzgT4xyOQPDnMGZY+YMDw20c9iVnJ68h7dIJy33amPa31uevHrr
4dMeTgWb0zYwNMzhDA1yOAND6EXcUR5PKJmSq6XKaaV6vss+Xn/0wWPRu/MD
626Zhhw1M/3cAp3af6Z3/IDz5TBK4qXQSz5nj7vaWe79eovx//z2E0x3s77T
btdE59SXdysH6weFqjkvvl6Jo5AK2Dx2OacppepZAvV+dFhYWMiN8Cvh0YGR
caRrnhGXd8X56bqcsTW3P6tlFXboypMkesfA7Ecir+75Ockq7aUFMWNNQ88f
+M7GC9OJIrjlJdK6JmcfFvuroW0xQQLN+4/mfePOo70Z5CzS2+38a5rqp0sX
JEvZvEsXGxpu3hUKEg330yUIkuVs59Ux3Cx5tCzncAPAgn6ckyycJRAI+vr6
UD2MKl5/f/8tW7b8y7/8y6ZNm9zd3VNTUysrKwcGBvDZB+2NjY319/ejchqV
x6ampkFBQXQ6/dVD+uZ7PJ+Cz5KyC4RNMUlh3tZm+19nrft0hgjvkf0ya6GU
NVBPbcsNeHjd78IxH3MDzxOOUSGRjx8VVeeWlVRU5zQxUxNDXc98p2+AYdab
rBwvxvo8G3jYNNE8Ms91rK/uCKQWCMYH+lmtzbWVjbU19bWM2lpmbVVxbUV6
7fO7NwNdbDebrMXWmmy2PRt4887z2rSK2uIqtEZtfQ2DUV1fW8lsfdnTw5kY
EaknpTNdfp52fT2JjtvypCnF6dnFjy7a/femTz/GsPUf6+2ycA52puQGJ6cl
PEzMS4mJdjnt9vUWG2zdVm3rzXuu6l0q8kxrLnjJVcw5h2oljoLHfs4qu1ZL
sSOHH3f18TFzvOF09f7NlPzs6rpn9LTy3Gt16U7XA07tsDuzZr2z7amE6Cxm
uwTnKHDh7Mc1E51F3Tk+teH6IS57thAuYDox1m4F92gsAY5LfvWM1MUFCTTv
P5r3jTuP9qamdpFqGLVvsfOvaaqfLl2QLGXzLl1saLh5VyhINNxPlyBIlrOd
V8dws+TRspzDDQDv4FUBzGazY2Njd+zY8c///M8bN260t7cPCQnJzMxsa2tD
6/D5fFQhNzc3p6Sk+Pr62tjYXLt2raKi4s1bns1aNGFTbFKYj7XZgZmsZR1A
SqIzhHiPFOf9PHzRST1KWc8jjIMO22zeeAjDXCzsyFEpTJYSH1Hxp6bZON5E
p4YFEM2MMczelOBBIkcweLk9ok7ePCeL6tnnVypHuf2tzTX0oqzUgqyMnKzs
rKy8rHRK1qNbWZQgD+fdBnraGIZp6xnsdvYIomTdepRFSUdrZOVkZGen52Sl
5pWU1te3D7J4StTl0anxPMf6+krbgTpKZZxtqiPmaorpf4Q2jK3TM9V1JhEo
jJDnzc97OpXKvoaUmAezD5230dL7xNAZs6fYRpZRqtnS2U386qvjFTgKThOl
lmKb5YV5OG402HkYM47YFpATR+/k4DhvqlcyUoKzyNSoy0QLJwwjmFqTSEkV
P/2d/uNm/qdsTLadx3Rird1oSbRu4ewksbmGtgWDBJp3ji4z186jvcnIWqSM
7Ky32PnXNNVPly5IlrJ5ly42NNy8KxQkGu6nSxAky9nOq2O4WfJoWc7hBoB3
IJPJBAIBqpMfPXrk6Oj48ccf6+vro2r56NGjMTExNTU1KpVqeHi4oaGBRqOR
yeQrV644OTnFx8czGIw3b/knWeuitdlhDDMztb5ESir9aYSrZUKFgCMbbWss
evDo5tmgwwZOe+137vQz3EH2CCnJeN47osZ5slGRqEXJL8lNDHGxttHG1u20
OOIXmfqwS1Q+LGNPzTM3Xy3BVRO4YnCgrfJF9qNH4WH3IyPjo25HR8dHR4RG
X/eMDnE8us/08w0zyeXjDZ9v3Xf0dEi07/XosAi0RnRs5O1bN38ID4unpD4r
qOmqH1H08FU86Tz9XS2deaySkttRHP8kcHuYKXbgm//4bOOn2HpDnb2u9jdT
Qst6Ml/2veT2q1Sc5sdx1APbAtdgu/6qr23hjjmm28VVPawbnPvUfhmPQiXl
KSZ7JMOMupwb9y7t8LBZc+ygmZ2z32bfHO+U+qfNwzOzvKSjCn4rPlJSmZd+
IzieSAy9dC0rs7Qd/UJH5Ljo1al9+zPWE8+asC+vniFu2X5h0UPbvEECzfvT
5n3jzt+Mj4qMXpyoyNuRi955jfdTjQfJsjTvUsXG8qbBpQoSjfdTjQcJDDdv
nw+XKlpWZLgB4B2gGhjVyWKxGNXAfn5+JiYmxsbGmzdv3rRp08WLFwsLC5VK
ZXd3d3FxcWJi4u3bt69fv3758uX09PR5H7T3dz/JWn7WZscwzNLUOpiUVPbT
rIVSlnigRtCWmUu+6nN8/+aNX+7ceeK4Z7x3PPN+UW9dD39KjYtFg5KxSgk7
NS3m8iEr+7WY7vbtHlfi8wu58maBijtfJlFNoTSCy7pZtfkFd6NiXJzDXN2D
znt7egZ6up/1dLH3PG1pvfXzTz7+T5S1/uvjT77Zar37tKeDi6ebO1rD0+e8
z/lzfi7OgaG3HlGeNZb0y1rHlVzxPJd/oPdSDOOSLmZmZMIJC+ePMIuNn35s
aINZeZtcvHc5s6qczWsfmxgTjU1Pc9uexmee3E7Swvbpf6tD9MLO5uwk1z9q
GJ57ktgyHoV8sk/U+5zHvP/k9gWPQ5YGn2jZ7dnvdDU+KK8zhTncMDIlQeso
RSopF5/qHeh6+eI5g0otp5e3tfeNod8mSlmvPjOY6Cjqfupbe8MgxHnvlh1e
ix7a5g0SaN6fNu8bd/5c0Pnznotz/ryP66J3XuP9VONBsizNu1SxsbxpcKmC
ROP9VONBAsPN2+fDpYqWFRluAHgfNTU1MTExhw8ftrCw+Pzzz//0pz8dPXr0
8ePHqIRuampCVfHVq1dfPWjv7t27qGbu6el58wZ/krUCrM2Oz/ldCTqpRylr
9DkpPujUjs3bMEzHcIebdzwtbxRnCvBh2dzbMbMlhVEqmqQ4W4Hz57uFDjrX
VnBwaVtrCTX1qm8QgXDebvfJPQfs7R3t99jZ2xnbE3QMdbW01q1BWWvtOi1t
XUNjgv12O/u9e9Aa9gf2HNxtd5RAcHTxiwlPr8xiSWtHFJz57kiv4OHSHlzI
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
GlkSRXPBPdIlB2tbDDtoRfCfdZH8oivy0NAQj8drbW2tq6tLTU0NCgravXv3
1q1bv/32288///z06dM5OTkKhUKtVqM6+dd/jopqtPKLifYyMzP7+/vHxsbQ
mq85GPW4TsrTjrI55bm5t26RfYJig4k3o6MTkhOio28QgyODfCJuJdJzK9vZ
YgNvYqpO/vWf6+V8rbBCybufeSPwkO325dhKB8LpK5T8YrG+VT4p1Mz8XTqq
gkTcWkEdvfxRakpCYlAQ+dpVckIsOTWZHHslMMTjmI+z87mzl4MT6BEMHr1p
GNVCszgvvzuwcVzfh2sbi+9TzjudMMVM3R3P30otrlPjPTpcNIe7mEph63gr
bbD44o8XPbaYu2CY3fpvT/gERmYW0n/8kXzlrDfa+WPOR/Y5+zk7RwSEZCbl
NJXz5e2jKpS+3/5V37U3Ou+98qkMiM72GOcpJ/NseYgJ0XsX4eCljxzu77ta
Qat8Lp8esfZ3h7cEY+OnT9AGhbh/tKeWX0evePLgPvVOBDkhMir4xrUTCRHO
16LPBcXf8UmuSmJ21fSKZnzrFsSHFhLzeqFBSMxkHkICALDo/P5LpYSz9teT
U4KrZemdQ20jPbiumZlGCnKytsAwl+lpqWdZJE9MTKAKubu7u6urq6Ojg8Ph
PH78ODo62sPDY9u2batWrfr3f//3nTt3UqlUiUSCqt/fTaJXUFDg5eX197//
3dPTMzc3V6PR/MF4cb8cjHwItYGqvvxyalTksaMuxhb7rLYe2rXLzdNt1669
W612WBgTjrqHR6WV5Qt0qCUc+v3dni4VP0/WHJ1C8rWf6mBiYeUYRKQyWSqc
p8XFr0guUgEHVUGcbCKVFODt5m5h4bLdwcVtv4u/p8t+O7NNK4yMMWz9Gisr
VyIhnoVqoQrua+6Hz8AgwQ386XOREuR02gKzOOUUREljsnQ4z4CL53A7Y6K/
frgqgZvuFuN1zGb9SQzzXL/Oz8vjUjqVeMlj9451q9DOG2HLl2EmGEZYZx3i
QSqgNotR+uZ/SJNPvd15l/RW8EsimikEkr+rtdM5zDia4J1LYXSJp4ch+N3h
LcHY+GlsBp1E0Mavy2rOJqbGXgjw8yK4uO3YabXX6RM3Aua0a72Fq5exZ7oH
peohu3/Gt25BfGghMa8XGoTETOYhJAAAi4xOKVKLuQpBLasgkUryuLB/wzXi
hduPGBndqmrBSL+Eh1ra0jTSZSdrawzb9529f0RyDFuS36voHn9Nz7af7yQP
Dg4KptXW1tLp9NjY2CNHjnz11Vf/+q//amdnd+3atYaGBh6P96IrBSqVUcGM
ymZUUfv6+q5fvz4gIODp06eoQn4x+chrXnS0Q8rJFpYT6aQAX2d3MyOX3Tae
/mdC4igJYUHBvvuPu1k4BftdvU2vKBjWN0kmh1S/udujlXSr+Pmy5pgUkt/L
rOcQRLzHZClwngYX//augXpiRDrYOtLFZDHSH8bHRfleCvMPCzxP8rlIDo24
FhsbTqVcDnLfuctk5ZcYZvXVZufTUa60jvhngrrnspn3ftIw/by8WqWQSkQj
QkH/kGBg+r0bGuzvEPCrBLz8+zeIx2x3rcRW/mB77MqN+495gkq+gNM/OCQQ
DA4IBP2D6I+EI2KxTDmhMah0kzrDq54ke9nNRsxl9jy5VH/DKvyQtdUXNhhm
9/m6I3s9QkjU5MsRl8+dOuLlZLvrq40W/+ebzzCTDeuP7/BK9khvv1010DAg
0884nsMMR4F2a0AwS292FHM67+Pc0l5GMDveKuLM3u8c/DHjGIJ3fjKje3x6
juF/qIiWXGyopHwxv0LQnFb9NIl2N5ZEIoVfjwqNir1ETiBe9YsO+T4h0MTz
pOMml1NGdqT9oY9SmJ390zcqfz8S75IOifm80CAkFjgkAACLjFrEk/UUj9Td
Lsi8cSUywvl0cNCPtPSKlrYx7YBMLFP1oSK5PI0U5jTV3eLQdw7nr6bcaJx4
0qfqft1AQj/3SZZNk0qlfD6fzWYXFRVdunTJysrqX/7lX7799tszZ86kp6dX
VVX19/fjP0209/z584cPH6Ly2Nra+vLly6WlpYZpr5qe72cT/OqhCnJ36u5E
H9c9FieNlvnuIMRERtKr2PU5qVTKhUCS085bYZHpBVVPRyebZZPD6t8VyVwV
v0DWHJdCCrC33vMy691lsuQ4T/37QghVQf0NNE5e0P1rgWcPn9tk6nfULSac
/PBBUU1eeUllTW4zOz05wuvkd+tNMcz+Wzu3C/Hnnvbfbxa1DL+i08iLEaUM
UulY/3NuW0tdVVNdbUMdq66OXVddXFeZWVd2O/KSp+MGy4+wjyw3OJ66FHmr
rC6jsq64Gq1R11DLYtU01FWx29p5PIFoWG4YV03ljle8VS+72QhbHzWnHX96
4ZMLTn/99m+fYtiKT9d9b+MR5kHNC0vNSLqfnJ8WF+t5wvurjQ7Y8s0r7Tfs
vLLucpFfRktBu1A7Y6+8GY4C7VZt3SzVsure4CjmdN5FXUU9uefqotaHe+7c
SDiLGcfZexfcYXClOK78hwmCl2BsiPll3PKrdVQnStQRr3PnrN2uH79yNzLt
SU5N/VNmRkXe1frM49eC3Lc5nVy2wsPRPSk2m92hxAVaXPa7++pLOiTm80KD
kFjgkAAALDJyAXu0Lrkv25N65+ox8n3j4DKfDE5B28jUv/30nV1lGonoNPXs
9hFrh0DSvbhmRQFfw5W8cW8spVIpEokGBgZ+/PFHAoHwz//8z1988cWePXuI
RCKdTudwOGgdiUSCKuSWlpa0tLQLFy44OTmRSKRnz57N8iXEnAIe3YdFNCbu
Jlit8sSwaEfnXCqtS4XjffU11QnkbDeX3BhyQWlNkRhvkePC394ImM56DFlz
fArpnL313qmsZx9ETGGyZDhPhYt/2yCOdDFRFVQWbRF8wGHD6v0Y5mnjRIlJ
Y3N1+LBeMjHJx/FmJo0U5DzrniqG6RlRdSPC520ttcyi7PSC7Kzc7Jzs7Pzs
TGr2gxvZ1GBfjx2m61ZiGLZynekOD99gavaNB9nUTLRGdm5WTk5mbnZ6fklp
Q0PHAFesQ7ljQvOqe+8vu9n011OrEhzT3TAvK2z9J2jD2PJ1ViYeRAKVFV7W
Usbr0un6GtPi7jnZ+mOYg9G6z8w8MBeqI7mcWsNXTW/i9x0NZjgKtFtZ2bOU
lZP9Bkcxp/P+yxwQ7g6WW85gxvH23owURo9surfhTBXR0ooNQTO1juqY7Y/5
uq023X4As4jeEpSbwOwSoDd8olc5XIJzKbSYEGeb4xhGsLInElMqZ3w3lnZI
zOeFBiGxwCEBAFgkfhoGf6CRUXU3ON3X7rzP0a3eYUan7/4Q9SiWjpqehob6
MlbN4/pnqT+GnDpiuc4Ew2zXmu87cdE7pZicW59d3c3uEvIGJaIJ1czfBv4D
jUYjk8lQnUyj0Y4cOfLpp5+uX78eVcuurq43b96sq6vT6/WDg4ONjY0FBQUU
CiU0NNTd3T0xMZHFYs3ysGS9lQLm1Y5khyj3HZtNdmPYAQvbqODY0vJeybPq
xhp6dl1CNCs/l93W1SzH+erfj6v/q6x3wd76AIZZW9lfJqaU/rqdN6hlWqlA
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
XzFY2QxHce1WVBR5dqKiYq/N+ijmeN7Hu0t780PYMdYRXvu/sz/3mqe0lkxs
yPoqBaVXO1Icok7bb95gjy0jfOdCvEqraFLifdqpO2xvbCmGxE89cOb1QoOQ
WOCQAAAsElMdksdw7fPOmvxHN0kk1wOBJ0+c8vE7cO7yycAQ/+CQ0NDQkCC/
kHPul8/s3bHNfOV/GaEi+T/+30//65tNprvcnb2InhH3r6ZUZJV2tPWNvbiN
PPvRNwcGBl4MB+fv729paflv//Zv3333XVBQEIPBiI+P9/X1RTXz+fPn7927
N9uJ9lAbqNMZtFq9UopaQo2Y21xMfUA6GbzbZP+2r1FLaGRi/f3pS5EPi6pG
1J1S3ZjGYPhp7qhf0453q3rzZeyYlIgA++/2/aaToVI/rtPguGqw4THrtmfO
iVV+ezabbj2EmV2wO5d2k9H6XI2Potc3TK0z1JLbcN8nL2BNwDHHb74/jVlF
2V/KvcPslkwPhaR95TBL2umuelLpyPN+TktbRUXTsypWVU1NTX1NVWFNRUZN
WeKNS777NzisxFY6btjvd+kGpazmYUVNURVao6amqrbqWV1FRT27lds1MCaY
0KOsoXzFE986aa96gClvT06P9D+4yXE5tvJby+MHQx+EVQ097BrnjKmmVlKP
4rJOfKSSkRJyZqfF6mWYuZXNVn/y7ofd5JqhmoGJWR/FM1bV1GHMRlVV7bNZ
H8Ucz/s4t7yv4EpjnO1V70PT6e8Px/taMrEh6sznPvasvf7ZlWMbNm5Epb6n
7VFK7KPGXh0+osflbzHK7hIMiZ+K5Pm90CAkFjgkAACLxE8PFwu66usKsrLj
o1PjohNjon+DdDn6ik90sNuBHVarV049/fHRJ5+ttHKwcPPfeyHm3I2H8enV
BVVdXf2iGbsu/AGpVCoQCDgcTlRUlI2NzT/90z+ZmJgcPXr01q1bqDZ2cXEx
MzPz8fHJzMxE5bRIJFIqla85Gr0etYE6lQr9RL+j/zLCqeDQI8qIBNQSblg1
1Vdkva2jVxw1vU9VNart//1jJC9pxV0qXp6MFZ1C9LW3cvnN4+pKnViHdkPW
w0xhBNnHW2CutuvWOP3uCXSdHp9epzKFQbSPJ2CuO0zX7PXF3LKdE+po9a+5
H/6HR/iOZwfQjHHk3XRxNZESdppg+QM6Ukv7oLAUZrUM71bhYy/uj8gF+Ggd
3pdNi/N1tjVF7+Eqy227wxKJ1SP0bilnTP32h/OOzPG8S7gVfEZEczyBdMbV
2uF1M0csmdgQNtNaUp2L/LHA/avNNx34c82e8KGExE9F8sJcaBASvzKfIQEA
WCR+GqZSPNTT01Rbx8irKMgrys/7jUf38x7G59Iigr1ctn1ljJqS1cZrN7mc
2BORcj4pNzGnmlHV3dQ1NCSamLHrwh94MRYcqpNTUlL27dv38ccfr1+/3tnZ
+fTp0+j/bt261dTU1NfX99GjR2g1mUym0byqKXo5xL18bGSY084tL+e3cwZH
xkb0+EB/S09NanuWf+QZh01ff4aaQZPNDu5Rd5M75EyBulc28xgCOilP01+s
aEu6d93PYZMDhq20JJwOoTx5Jp7snNCOaaaKHG5xSsF5+zhT7NgW02/2nF3m
8WhPUl0GW6DFJ+XS3vF+prAtpSj5RPTxta4mmL3tetMDXivOph9MKKE8beni
DgmGx6WzHg/kFz/NM8u8f+dl1nMMup3KfOt5ZuUDNcIaMu/h7hsX9tra7ceW
H9x8KC46s65TiQ+qtRMaOa4RizuruvOTauJ8I31ct293Xr7GasvxwIt3n6DE
XTuoEEws4DeN7+a8izoLex771V03CT+zY6PLOcwqyT64OKW0d8behksnNoQt
tNY055Lz2MWDn5tv3ocZXyd4P/65Kng5jMeEVDo8MMLlCAf6h8ckQ3L9uPr1
A9W+Tx9YSMgnx6anpV6YCw1CYsoChAQAYJH4acIjpUwsGhoQcLv43C7e1AzS
v+juqO9uL+pqeXj3ms8J669NMGzL11aHfMIDHtbfYnIKm59z+8eGxmQyhWbG
rgt/QKvVojpZKpXm5uaiYvirr74yMzOztLTctGkT+ol+R//Fz88vPz8frYYq
ZL3+Vc36TwP1d7W35OYUR0Y+y8ltaO/iaPEeMX+AXzbadvf29ZPbNq1FzeAX
39kfunrnRqP0SZ/yVdMF6if6dcIqdQ8t9Ya/o80mDPvIfOvBi4n0YqG+VaIR
qhWoEOouTMn3s4/5Eju5dcN3bkFGF5lHaa05bcN6XD/eX86vimhJt086t/ao
7fI1yzFT83WWhzzsrlA94nPItNI8BpvV1Ns/PD7L8UB+tWfjuK4XV7OZqclB
jp4o63k4BCXeY9YqcK4GF73xkNW4uLuAl+/DillF9LG12n4EMwnZ5puZWNA+
osOlarlaKcTlvO6nafmXT5NtTb23O293OWXiSnSPeZjCbOWMqVHilr1uVNL3
6d2c99H2nI7MIxWXl1/2tbU4GoDtojlGP6NW98/4IOrSiY2RVlobzZl5EQs6
bLzBZg9mTCJ4P6IwOqcroqlWA+2dbLh/oKmWw6C31tU0d/PZo1qeVIeKojd+
sXfmAwsJ6aRwer62hbnQICSmLEBIAACWkHc9mcg/evbsGYlEcnJysrCw+Pzz
zz/++OMVK1YYGxuvXbvW39+/sLDwdRt4OcR9b015CTmS4uKSHknOK68pU+Ht
ajFqpHEdi5ZGdHaymv4Gk7A7jEKsFtO75ZyxmW9NG5RDBjFbJ8hPSwhw2mKG
/spsi1NAQlq+QMcWq4eUU4VQFyMl19s+2hjzJFgRPInG0SzvXC6jaww1yMK2
tJZ0p6JgLHAHZj41hD+2Yo2Jnetxz3jKufj7YfFZ0fH5OQx2W8/QGzewejGO
DkfFYlIpQY6nprKefdCt331p+yZ++f7UfZ35Hg+MQHUilqdV8qcewNSIJ+U8
XMyqoRDJhKlvkXeusXJyJRLiWREMXgX3Nf3D58W7Oe+/vAm+ZubeUwMOOFHY
aeyhGbsPLZ3YGGmjcTKcy4KxYLdVG2x3Y8ZEgjedwuh4URFppnZNN9rT1s7I
KosnFtMfPq1uzu9ToaJo6BW9mObFhxYShiGlAV+oCw1CYsoChAQAYAlBRbKe
j2ubK++/ryL5xcx6586d++GHH1Bh/B//8R//9V//9c0339jb21+9erWysvJ1
G0D7oEbtNK8ivzA84MetZmTvUxEJd4JLminPKorq87pa7pPJF2zsnbBln5k4
nDhxg36nXV46oO6Vzrzzk5qxSXm3Xlz9hBLmRbBchWEO1vZnSCkJzbKnfHmP
BBVCKn5lVtlVt7sORmd3WNrtdjU6QNzq/+N5cgaNVpR5N4Z++1hOnHnYsf/e
+c1/rlyGrf1i9Qan/XZnIo9F3LtCYVBz2aWsXt7gW90t1PbiKnYp9c5lR29r
zPq0/eWklNJaGc5V4aK3KJJbc1oeHCkKXB7oZm6+9TBmEr7pxJ3rdxltXc0N
VaVVOXQmhUK9GHx13xFPc1u/o+cvRWeixE1vGu4Ylr/xi717czzvL/+c/+xe
2VWHuw7YucOWTn5hK69Wn37Uld8pmrH70NKJDUlvEZ95vjnZNOaM9XYb+4+M
dm90DDwdlkJhVKYXlj0pZlYyi4pyH+fS0jOT7jx5UlLRxP0Abht+aCGh6pFM
vfULc6FBSExZgJAAACwhegmu4+Pq5spUEtHxvRTJfD6/vLz8/2/vXoOaOtM4
gOdzv/RbZ+oXP3WnY1vWcdbtdFtK7VotaI1iqetdqrXb6iiBSoVSwAhCKHij
xUtRKhgRvAAioggBJEhRESRCsCISuSUEDjnJSU7OJTn7Jk5rl5ZWEEuQ/+9D
JiNjCHn/5zwPIed5jx8/rlAo/P39n3vuuRkzZgQFBT32Rnu8dwwP3V556lLs
hgz/6VEfLVi9JeqdJPWn6Yf3HE0ryd8RFRP+1gehsulL3l6nismuLuvmbg2K
RscIw4JEq5vvdTvu/Kjety/4/ZUy2ScBH4TFZUZrTLm3h3T9pBHi+5rLb+bE
XNjmH7smYP78d5+fOfdvb/3n7cBNISFxCkVcWlpsXl7s7q8+DP9gxrLpsnl/
n/HPOSEvLYn/KCY7Obf20q2+JsNQr8U56s+deqpep8Q21aiP7wr+MkgWtG3x
rh+ya65bpXtja5Jby3VntlckzI4NnR/gv1w2bfO/FsVtU+4vKFFnpX+7V7Ej
Xr5VuTZGuUWVEJtx+GhxgaZZ206Rwj3A+MKlKk+47qT20ZJkbrt4pChsUcrL
sqjg9z/9et+y3Du7tb11D2y/+/GhqZMNu+nWwO3jDzSR6oQ1/w2c98rzr70+
c+G/gzfJI1Qfb98VGaNUxcftTk1PP3jigLrsXGVTw90+H/gAqq9Fgm72zI+f
oAMNkfCYgEgAwBTy84Yjteqn1SRTFNXR0UGaYZVKNXeu589er7766vLlyxMT
E8+ePfsYG+39Zgj/Gy/PnLtEJo+auW5rqGLjPuWq0I0bZwZtlflFzduqTi1q
brZKBlayjFgmHp4Y+9vyMwtDFqlksug3gjaFZ6w61bm/zlzf5XlvZ6C9/m7Z
/h8Prtr1if+7szyT8WSyF2SyV2SyObMDPv889tusiorvdsemrg5Q+smW+b30
it8CmV/Y3C1ZqrONDZTUwUjUGKrfo7U4oQqOlpOfcLEqZ9i2BaNh0mt1hSkV
KnnsSnnAa2Rt5a/NXL0ydJNqX5QidOPymR/Okc1ZExD5VeypgxWdZTpzu8kX
3kD+xROuO/m/ZknqbMzPyAoJCpPJIt9ZFKPMVF7pP62nW/pHGiYwVbLB23pY
43Vre1FpemRM4JuenYaen/bC9NkyP/m0fwTNfnOefM6cdRsUiuRs5anm03WG
li7L6J/0uPPRSEzMgYZIeExIJABgyvh56+q2muKi1ISUkJDDCal5xVdIh9xk
5vtG3PZgFBiGMRqNpE/OzMxcsWLFiy+++N577ykUiiNHjmg0GvLvf/YAgvcK
Y6a3UXMjK7l4a3B65Obw2MTgxKywPQf3HNp/Jid1T/p3ip1Hlkaod2bVnLtu
IOdAMyeNvH8p7x1+SXfXFNfv2nY28PXkZaEfb0jxDz8fdazhQlMf7ZJMfT91
3SolvdCZAzFxEZ8Ey+XBS9YGLw0LDomPjMv8Pu9ipU538dzJor0x+VsXp4Vt
2hqeGByRteNoZUH9fdIFGVmJGcOvF4/WQluUmpsSknLim6Ir1W2k5Bk5aQyf
+7P0tBmuFZLynbc3OTZs19LFCWFhaWl7MvIKfvh+33dpEd/EhcSnxx3Pzasj
hfuWgTZafKooPNG6C/Zu1nzNZii8nJW0c9XaBdNe/3z5tpSDxXmt9NVuxwN6
pB5iqmRDZAe5oXbSFDVeyDmZGB2/NDhs1fq1GyLkmxNCw5URUTsS4+L3H/gh
q6CatEN1d8xdA/bRP+lx56OR6OvSd1wr+qsPNETCY0IiAQBTxsMxcaLFbLij
r63W5uffqK69fcfQbhFIh2wbcduDUeA4jvTJFEUVFhaS3njWrFlr1qxJSUkp
KSm5efNmb2/vnz3Aw+uXOWtvR9f16pYide35gpKLZepybVHllYrqqnqtRlOt
La64cbKsuarRcKeXtvCecyA/YoPv8hY+J91+3VCa2Zy+5cC2yBXL4qe/kbwu
ujDncluPSzJaKdILDbTXt9Rfrjh/Rp2Vpc7JV+eWqPOrLlbevNHSft9kuqtv
1msv6YqyteeLzpdWqcsaKxrv63ssFOfpgsYyFuLRWhj0tTptvrZZq+/sNFO8
p+SN4QGd1gHSJ5v02ttXqyvOV5zMvlRcqKnU1Fy7UXe1ura65EpFftWPlc26
lu52E0MKN+Mchz8cjJ8nWnfWfNuizzfWxOV+G71xwxcvzd6yRpF54Oy1JrOz
0yoMOf9glMqUyIZLcJCmiLf1GO826arLqk6qS/JO5+cXZ52+dLLo8rlSTXlF
Ve21pga95w1D0g7RDl9oGHw0Er30AOmT/+oDDZHwmJBIAACMv5qamqSkpAUL
FkRGRmZnZzc0NHR0dPzpRnu/EHmRZ3nWyrJWG2ulWGs/TZnNpsGeHmqAYhgH
N9orkUWbgTfWsO1qdXpacOAXMtmq+Uv37z1ZrxckUvho7wOJHMczDEtRLLnl
uF8PJfBMrWdZwWrlHQ6nIPjysCAXz7lYRrBS9iHKMkj191MWmrE7R/2KTYix
rbvNoDXWpLSr5enJmwM3J8vk6mBVjbrW8JjLNHWyIblE8nQlgeXsDGOhqX5q
yMLQds4qSKzrD37TnEg+G4lJfaA9gkj48gELAM+o5uZmtVq9ffv2w4cPl5eX
37t3z2Qy2Wwj7Mf6Gy7RJXACORPyLDkbMjxLOxirlbZRFGNjnE5eHO2VyC7W
LAy1ksJXVaje9WXSwoDP1n+6O2pP8d7StnONPS1Gq0OSWEHgyGMzDO/5DuKv
hxK4RdHFkZrIijwv/P+XfI1bFFwcS8o3qXp2G0OTwu0glXvUr9iEGNW6CyzN
DnXZ+lpuawuKjyWlf70ueseO9YnZQck1iYX6yjbzYy7T1MmGZ5q6SyBNkUh+
GLuDIdmwOx2cSNohziWJPhkOn42EUxQE3jlJD7RHEAlfPmAB4BllMBi0Wu2J
Eyc0Gk1raytFzl8MM/JGe8O5XW5yJhQ97Ygg8pzIO3lyDmc5h4MjdYgUotFe
iewW7KTwiTZDe4OmTH3oUOy2r6NV6yOPzA8vjDt2/UJTDyVJNreb9EIix4ne
7/DroQRul8vt3QvVJYrDvuRrvE9VcPGcwHE8R141jvRuY3jFJsSo1p3UvqGO
OmPj6eLcg7GxCYEhivXRGTFHyzOuGC62mu+aHY+5TFMnG5Lb7W2KSJNBGjzy
0pKICDwJi7cdcvnkk/blSDgn7YH2CCLhywcsADyjLBbLgwcPdDod6ZbJfbfb
cxJ6eDuxHKYWSne6p0J5aHfCwtVJMj/VwojCQ2VtPZJEeQcMwWRh62shta+9
VJmuUgauVMr8lEHhpzJKWzoFyeySmNG/N4RsTHaIBAwz7pEAAHhydrvdbDaT
PpnckvuSb3TIBGfpshnqSOG7VJiXkHpC/lmO8nD1+eudfaI05JZYn3iO8FiY
/o7+1sr7V44W5ObE7c6VR5zaeayutLHL7P3UqHP0S4lsTHaIBAwz7pEAAHhy
PM+T3thisZBbct9HOmRCdNKk8DlMLT/pbpaX12apK0qrdU0dJiMvWUTPtSow
Wdgp48C95gc3Lt+4qi2pasgqa7nc1HXHaGW8tW8Mmx4gG5MdIgHDjHskAACm
Ao6hGXMP1akfNHabh6z9rETzEuYATSIOmqZ6enr0emN3t9lqpby7BYzL9oHI
xiSFSMAwTy8SAADPMMHpYOlBUvhslkGr3UFKnl3w0ZFH8Ls4h8M2OEgqoGVw
0OpwMN6dBsZl+jOyMUkhEjDM04sEAMAzzCXwpPBxDM2xDifHO70z533zam74
XSLPkwrooGnW4XCS++M3ygnZmKQQCRjm6UUCAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnm3/A5xBKdU=

    "], {{0, 272}, {951, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{308., Automatic},
  ImageSizeRaw->{951, 272},
  PlotRange->{{0, 951}, {0, 272}}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
NFFqKbZZXpiH40aDnYcx44htATlx9E4OjvOmeiUjJTiLTI26TLRwwjCCqTWJ
lFTBEOI9UpynWOLWBAAAAAAAv2dqmVAh4MhG2xqLHjy6eTbosIHTXvudO/0M
d5A9QkoynveOqHGebFQkalHyS3ITQ1ysbbSxdTstjvhFpj7sEpUPy9hT81wG
p5biKgGu5HYUxz8J3B5mih345j8+2/gptt5QZ6+r/c2U0LKezJd9L7n9KhWn
+XEc9cC2wDXYrr/qa1u4Y47pdnFVD+sG5/wkWSXlKSZ7JMOMupwb9y7t8LBZ
c+ygmZ2z32bfHO+U+qfNwzMTj6WjCn4rPlJSmZd+IzieSAy9dC0rs7QdVcgj
clwEnyQDAAAAAID5oQpZPFAjaMvMJV/1Ob5/88Yvd+48cdwz3jueeb+ot66H
P6XGxaJByVilhJ2aFnP5kJX9Wkx3+3aPK/H5hVx5s0DFlc4zwVc1hSuGcUkX
MzMy4YSF80eYxcZPPza0way8TS7eu5xZVc7mtY9NjInGpqe5bU/jM09uJ2lh
+/S/1SF6YWdzdpLrHzUMzzknWT7ZJ+p9zmPef3L7gschS4NPtOz27He6Gh+U
15nCHG4YmZKgdZQilZSLT/UOdL188ZxBpZbTy9va+8Z4ipkKWQ5zkgEAAAAA
wPxko22oQh59TooPOrVj8zYM0zHc4eYdT8sbxZkCfHj2SR8KPkvKpgmbYpPC
AqzNjmMYwcyWFEapaJLibAXOn+9TWQUPl/bgQkZFEolkbUrAMN31huusvDGX
PGIik8ocnl1JPnu3CV4njZzjRojQwQ6bG2085Id5FRGTm6lN3Dk3LBlu4jGT
OXlecd6Hthmao33ebO0WlER7LsTbpPgoTKUAAAAAAADvSP1qZu9k94teWjjz
9r7Qs99/Z74H0yKaHrsRklpZJ8C7JdOTSvXMh839Nf3lt1uSHW54nzTbcRr7
yMXKiXz7CRNVyGPKee8UoZYMqyaY8sHc/NhAj21Wutha/b/ZbToRYXKHGVTU
S++enFlJKcRlQ7i4s/ZxRLTj1sNamPV3pkZnQjZE1bnndRd0zX1zOWFfBaf0
WnuSTfg5662brbE1hO/sSdeo5Y0SvE+BT8JUCgAAAAAA8I5Us5/iSofqnzLu
umSf3uC5f6vB9qOY4UUrn5TbtJZ+GT6mUEnUM+sMN+fUP3TP9f7C+6Ttt7vO
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
qOmqH1H08FU86Tz9XS2deaySkttRHP8kcHuYKXbgm//4bOOn2HpDnb2u9jdT
Qst6Ml/2veT2q1Sc5sdx1APbAtdgu/6qr23hjjmm28VVPawbnPvUfhmPQiXl
KSZ7JMOMupwb9y7t8LBZc+ygmZ2z32bfHO+U+qfNwzOzvKSjCn4rPlJSmZd+
IzieSAy9dC0rs7Qd/UJH5Ljo1al9+zPWE8+asC+vniFu2X5h0UPbvEECzfvT
5n3jzt+Mj4qMXpyoyNuRi955jfdTjQfJsjTvUsXG8qbBpQoSjfdTjQcJDDdv
nw+XKlpWZLgB4B2gGhjVyWKxGNXAfn5+JiYmxsbGmzdv3rRp08WLFwsLC5VK
ZXd3d3FxcWJi4u3bt69fv3758uX09PR5H7T3dz/JWn7WZscwzNLUOpiUVPbT
rIVSlnigRtCWmUu+6nN8/+aNX+7ceeK4Z7x3PPN+UW9dD39KjYtFg5KxSgk7
NS3m8iEr+7WY7vbtHlfi8wu58maBijtfJlFNoTSCy7pZtfkFd6NiXJzDXN2D
znt7egZ6up/1dLH3PG1pvfXzTz7+T5S1/uvjT77Zar37tKeDi6ebO1rD0+e8
z/lzfi7OgaG3HlGeNZb0y1rHlVzxPJd/oPdSDOOSLmZmZMIJC+ePMIuNn35s
aINZeZtcvHc5s6qczWsfmxgTjU1Pc9uexmee3E7Swvbpf6tD9MLO5uwk1z9q
GJ57ktgyHoV8sk/U+5zHvP/k9gWPQ5YGn2jZ7dnvdDU+KK8zhTncMDIlQeso
RSopF5/qHeh6+eI5g0otp5e3tfeNod8mSlmvPjOY6Cjqfupbe8MgxHnvlh1e
ix7a5g0SaN6fNu8bd/5c0Pnznotz/ryP66J3XuP9VONBsizNu1SxsbxpcKmC
ROP9VONBAsPN2+fDpYqWFRluAHgfNTU1MTExhw8ftrCw+Pzzz//0pz8dPXr0
8ePHqIRuampCVfHVq1dfPWjv7t27qGbu6el58wZ/krUCrM2Oz/ldCTqpRylr
9DkpPujUjs3bMEzHcIebdzwtbxRnCvBh2dzbMbMlhVEqmqQ4W4Hz57uFDjrX
VnBwaVtrCTX1qm8QgXDebvfJPQfs7R3t99jZ2xnbE3QMdbW01q1BWWvtOi1t
XUNjgv12O/u9e9Aa9gf2HNxtd5RAcHTxiwlPr8xiSWtHFJz57kiv4OHSHlzI
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
GlkSRXPBPdIlB2tbDDtoRfCfdZH8oivy0NAQj8drbW2tq6tLTU0NCgravXv3
1q1bv/32288///z06dM5OTkKhUKtVqM6+dd/jopqtPKLifYyMzP7+/vHxsbQ
mq85GPW4TsrTjrI55bm5t26RfYJig4k3o6MTkhOio28QgyODfCJuJdJzK9vZ
YgNvYqpO/vWf6+V8rbBCybufeSPwkO325dhKB8LpK5T8YrG+VT4p1Mz8XTqq
gkTcWkEdvfxRakpCYlAQ+dpVckIsOTWZHHslMMTjmI+z87mzl4MT6BEMHr1p
GNVCszgvvzuwcVzfh2sbi+9TzjudMMVM3R3P30otrlPjPTpcNIe7mEph63gr
bbD44o8XPbaYu2CY3fpvT/gERmYW0n/8kXzlrDfa+WPOR/Y5+zk7RwSEZCbl
NJXz5e2jKpS+3/5V37U3Ou+98qkMiM72GOcpJ/NseYgJ0XsX4eCljxzu77ta
Qat8Lp8esfZ3h7cEY+OnT9AGhbh/tKeWX0evePLgPvVOBDkhMir4xrUTCRHO
16LPBcXf8UmuSmJ21fSKZnzrFsSHFhLzeqFBSMxkHkICALDo/P5LpYSz9teT
U4KrZemdQ20jPbiumZlGCnKytsAwl+lpqWdZJE9MTKAKubu7u6urq6Ojg8Ph
PH78ODo62sPDY9u2batWrfr3f//3nTt3UqlUiUSCqt/fTaJXUFDg5eX197//
3dPTMzc3V6PR/MF4cb8cjHwItYGqvvxyalTksaMuxhb7rLYe2rXLzdNt1669
W612WBgTjrqHR6WV5Qt0qCUc+v3dni4VP0/WHJ1C8rWf6mBiYeUYRKQyWSqc
p8XFr0guUgEHVUGcbCKVFODt5m5h4bLdwcVtv4u/p8t+O7NNK4yMMWz9Gisr
VyIhnoVqoQrua+6Hz8AgwQ386XOREuR02gKzOOUUREljsnQ4z4CL53A7Y6K/
frgqgZvuFuN1zGb9SQzzXL/Oz8vjUjqVeMlj9451q9DOG2HLl2EmGEZYZx3i
QSqgNotR+uZ/SJNPvd15l/RW8EsimikEkr+rtdM5zDia4J1LYXSJp4ch+N3h
LcHY+GlsBp1E0Mavy2rOJqbGXgjw8yK4uO3YabXX6RM3Aua0a72Fq5exZ7oH
peohu3/Gt25BfGghMa8XGoTETOYhJAAAi4xOKVKLuQpBLasgkUryuLB/wzXi
hduPGBndqmrBSL+Eh1ra0jTSZSdrawzb9529f0RyDFuS36voHn9Nz7af7yQP
Dg4KptXW1tLp9NjY2CNHjnz11Vf/+q//amdnd+3atYaGBh6P96IrBSqVUcGM
ymZUUfv6+q5fvz4gIODp06eoQn4x+chrXnS0Q8rJFpYT6aQAX2d3MyOX3Tae
/mdC4igJYUHBvvuPu1k4BftdvU2vKBjWN0kmh1S/udujlXSr+Pmy5pgUkt/L
rOcQRLzHZClwngYX//augXpiRDrYOtLFZDHSH8bHRfleCvMPCzxP8rlIDo24
FhsbTqVcDnLfuctk5ZcYZvXVZufTUa60jvhngrrnspn3ftIw/by8WqWQSkQj
QkH/kGBg+r0bGuzvEPCrBLz8+zeIx2x3rcRW/mB77MqN+495gkq+gNM/OCQQ
DA4IBP2D6I+EI2KxTDmhMah0kzrDq54ke9nNRsxl9jy5VH/DKvyQtdUXNhhm
9/m6I3s9QkjU5MsRl8+dOuLlZLvrq40W/+ebzzCTDeuP7/BK9khvv1010DAg
0884nsMMR4F2a0AwS292FHM67+Pc0l5GMDveKuLM3u8c/DHjGIJ3fjKje3x6
juF/qIiWXGyopHwxv0LQnFb9NIl2N5ZEIoVfjwqNir1ETiBe9YsO+T4h0MTz
pOMml1NGdqT9oY9SmJ390zcqfz8S75IOifm80CAkFjgkAACLjFrEk/UUj9Td
Lsi8cSUywvl0cNCPtPSKlrYx7YBMLFP1oSK5PI0U5jTV3eLQdw7nr6bcaJx4
0qfqft1AQj/3SZZNk0qlfD6fzWYXFRVdunTJysrqX/7lX7799tszZ86kp6dX
VVX19/fjP0209/z584cPH6Ly2Nra+vLly6WlpYZpr5qe72cT/OqhCnJ36u5E
H9c9FieNlvnuIMRERtKr2PU5qVTKhUCS085bYZHpBVVPRyebZZPD6t8VyVwV
v0DWHJdCCrC33vMy691lsuQ4T/37QghVQf0NNE5e0P1rgWcPn9tk6nfULSac
/PBBUU1eeUllTW4zOz05wuvkd+tNMcz+Wzu3C/Hnnvbfbxa1DL+i08iLEaUM
UulY/3NuW0tdVVNdbUMdq66OXVddXFeZWVd2O/KSp+MGy4+wjyw3OJ66FHmr
rC6jsq64Gq1R11DLYtU01FWx29p5PIFoWG4YV03ljle8VS+72QhbHzWnHX96
4ZMLTn/99m+fYtiKT9d9b+MR5kHNC0vNSLqfnJ8WF+t5wvurjQ7Y8s0r7Tfs
vLLucpFfRktBu1A7Y6+8GY4C7VZt3SzVsure4CjmdN5FXUU9uefqotaHe+7c
SDiLGcfZexfcYXClOK78hwmCl2BsiPll3PKrdVQnStQRr3PnrN2uH79yNzLt
SU5N/VNmRkXe1frM49eC3Lc5nVy2wsPRPSk2m92hxAVaXPa7++pLOiTm80KD
kFjgkAAALDJyAXu0Lrkv25N65+ox8n3j4DKfDE5B28jUv/30nV1lGonoNPXs
9hFrh0DSvbhmRQFfw5W8cW8spVIpEokGBgZ+/PFHAoHwz//8z1988cWePXuI
RCKdTudwOGgdiUSCKuSWlpa0tLQLFy44OTmRSKRnz57N8iXEnAIe3YdFNCbu
Jlit8sSwaEfnXCqtS4XjffU11QnkbDeX3BhyQWlNkRhvkePC394ImM56DFlz
fArpnL313qmsZx9ETGGyZDhPhYt/2yCOdDFRFVQWbRF8wGHD6v0Y5mnjRIlJ
Y3N1+LBeMjHJx/FmJo0U5DzrniqG6RlRdSPC520ttcyi7PSC7Kzc7Jzs7Pzs
TGr2gxvZ1GBfjx2m61ZiGLZynekOD99gavaNB9nUTLRGdm5WTk5mbnZ6fklp
Q0PHAFesQ7ljQvOqe+8vu9n011OrEhzT3TAvK2z9J2jD2PJ1ViYeRAKVFV7W
Usbr0un6GtPi7jnZ+mOYg9G6z8w8MBeqI7mcWsNXTW/i9x0NZjgKtFtZ2bOU
lZP9Bkcxp/P+yxwQ7g6WW85gxvH23owURo9surfhTBXR0ooNQTO1juqY7Y/5
uq023X4As4jeEpSbwOwSoDd8olc5XIJzKbSYEGeb4xhGsLInElMqZ3w3lnZI
zOeFBiGxwCEBAFgkfhoGf6CRUXU3ON3X7rzP0a3eYUan7/4Q9SiWjpqehob6
MlbN4/pnqT+GnDpiuc4Ew2zXmu87cdE7pZicW59d3c3uEvIGJaIJ1czfBv4D
jUYjk8lQnUyj0Y4cOfLpp5+uX78eVcuurq43b96sq6vT6/WDg4ONjY0FBQUU
CiU0NNTd3T0xMZHFYs3ysGS9lQLm1Y5khyj3HZtNdmPYAQvbqODY0vJeybPq
xhp6dl1CNCs/l93W1SzH+erfj6v/q6x3wd76AIZZW9lfJqaU/rqdN6hlWqlA
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
XzFY2QxHce1WVBR5dqKiYq/N+ijmeN7Hu0t780PYMdYRXvu/sz/3mqe0lkxs
yPoqBaVXO1Icok7bb95gjy0jfOdCvEqraFLifdqpO2xvbCmGxE89cOb1QoOQ
WOCQAAAsElMdksdw7fPOmvxHN0kk1wOBJ0+c8vE7cO7yycAQ/+CQ0NDQkCC/
kHPul8/s3bHNfOV/GaEi+T/+30//65tNprvcnb2InhH3r6ZUZJV2tPWNvbiN
PPvRNwcGBl4MB+fv729paflv//Zv3333XVBQEIPBiI+P9/X1RTXz+fPn7927
N9uJ9lAbqNMZtFq9UopaQo2Y21xMfUA6GbzbZP+2r1FLaGRi/f3pS5EPi6pG
1J1S3ZjGYPhp7qhf0453q3rzZeyYlIgA++/2/aaToVI/rtPguGqw4THrtmfO
iVV+ezabbj2EmV2wO5d2k9H6XI2Potc3TK0z1JLbcN8nL2BNwDHHb74/jVlF
2V/KvcPslkwPhaR95TBL2umuelLpyPN+TktbRUXTsypWVU1NTX1NVWFNRUZN
WeKNS777NzisxFY6btjvd+kGpazmYUVNURVao6amqrbqWV1FRT27lds1MCaY
0KOsoXzFE986aa96gClvT06P9D+4yXE5tvJby+MHQx+EVQ097BrnjKmmVlKP
4rJOfKSSkRJyZqfF6mWYuZXNVn/y7ofd5JqhmoGJWR/FM1bV1GHMRlVV7bNZ
H8Ucz/s4t7yv4EpjnO1V70PT6e8Px/taMrEh6sznPvasvf7ZlWMbNm5Epb6n
7VFK7KPGXh0+osflbzHK7hIMiZ+K5Pm90CAkFjgkAACLxE8PFwu66usKsrLj
o1PjohNjon+DdDn6ik90sNuBHVarV049/fHRJ5+ttHKwcPPfeyHm3I2H8enV
BVVdXf2iGbsu/AGpVCoQCDgcTlRUlI2NzT/90z+ZmJgcPXr01q1bqDZ2cXEx
MzPz8fHJzMxE5bRIJFIqla85Gr0etYE6lQr9RL+j/zLCqeDQI8qIBNQSblg1
1Vdkva2jVxw1vU9VNart//1jJC9pxV0qXp6MFZ1C9LW3cvnN4+pKnViHdkPW
w0xhBNnHW2CutuvWOP3uCXSdHp9epzKFQbSPJ2CuO0zX7PXF3LKdE+po9a+5
H/6HR/iOZwfQjHHk3XRxNZESdppg+QM6Ukv7oLAUZrUM71bhYy/uj8gF+Ggd
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
43Vre1FpemRM4JuenYaen/bC9NkyP/m0fwTNfnOefM6cdRsUiuRs5anm03WG
li7L6J/0uPPRSEzMgYZIeExIJABgyvh56+q2muKi1ISUkJDDCal5xVdIh9xk
5vtG3PZgFBiGMRqNpE/OzMxcsWLFiy+++N577ykUiiNHjmg0GvLvf/YAgvcK
Y6a3UXMjK7l4a3B65Obw2MTgxKywPQf3HNp/Jid1T/p3ip1Hlkaod2bVnLtu
IOdAMyeNvH8p7x1+SXfXFNfv2nY28PXkZaEfb0jxDz8fdazhQlMf7ZJMfT91
3SolvdCZAzFxEZ8Ey+XBS9YGLw0LDomPjMv8Pu9ipU538dzJor0x+VsXp4Vt
2hqeGByRteNoZUH9fdIFGVmJGcOvF4/WQluUmpsSknLim6Ir1W2k5Bk5aQyf
+7P0tBmuFZLynbc3OTZs19LFCWFhaWl7MvIKfvh+33dpEd/EhcSnxx3Pzasj
hfuWgTZafKooPNG6C/Zu1nzNZii8nJW0c9XaBdNe/3z5tpSDxXmt9NVuxwN6
pB5iqmRDZAe5oXbSFDVeyDmZGB2/NDhs1fq1GyLkmxNCw5URUTsS4+L3H/gh
q6CatEN1d8xdA/bRP+lx56OR6OvSd1wr+qsPNETCY0IiAQBTxsMxcaLFbLij
r63W5uffqK69fcfQbhFIh2wbcduDUeA4jvTJFEUVFhaS3njWrFlr1qxJSUkp
KSm5efNmb2/vnz3Aw+uXOWtvR9f16pYide35gpKLZepybVHllYrqqnqtRlOt
La64cbKsuarRcKeXtvCecyA/YoPv8hY+J91+3VCa2Zy+5cC2yBXL4qe/kbwu
ujDncluPSzJaKdILDbTXt9Rfrjh/Rp2Vpc7JV+eWqPOrLlbevNHSft9kuqtv
1msv6YqyteeLzpdWqcsaKxrv63ssFOfpgsYyFuLRWhj0tTptvrZZq+/sNFO8
p+SN4QGd1gHSJ5v02ttXqyvOV5zMvlRcqKnU1Fy7UXe1ura65EpFftWPlc26
lu52E0MKN+Mchz8cjJ8nWnfWfNuizzfWxOV+G71xwxcvzd6yRpF54Oy1JrOz
0yoMOf9glMqUyIZLcJCmiLf1GO826arLqk6qS/JO5+cXZ52+dLLo8rlSTXlF
Ve21pga95w1D0g7RDl9oGHw0Er30AOmT/+oDDZHwmJBIAACMv5qamqSkpAUL
FkRGRmZnZzc0NHR0dPzpRnu/EHmRZ3nWyrJWG2ulWGs/TZnNpsGeHmqAYhgH
N9orkUWbgTfWsO1qdXpacOAXMtmq+Uv37z1ZrxckUvho7wOJHMczDEtRLLnl
uF8PJfBMrWdZwWrlHQ6nIPjysCAXz7lYRrBS9iHKMkj191MWmrE7R/2KTYix
rbvNoDXWpLSr5enJmwM3J8vk6mBVjbrW8JjLNHWyIblE8nQlgeXsDGOhqX5q
yMLQds4qSKzrD37TnEg+G4lJfaA9gkj48gELAM+o5uZmtVq9ffv2w4cPl5eX
37t3z2Qy2Wwj7Mf6Gy7RJXACORPyLDkbMjxLOxirlbZRFGNjnE5eHO2VyC7W
LAy1ksJXVaje9WXSwoDP1n+6O2pP8d7StnONPS1Gq0OSWEHgyGMzDO/5DuKv
hxK4RdHFkZrIijwv/P+XfI1bFFwcS8o3qXp2G0OTwu0glXvUr9iEGNW6CyzN
DnXZ+lpuawuKjyWlf70ueseO9YnZQck1iYX6yjbzYy7T1MmGZ5q6SyBNkUh+
GLuDIdmwOx2cSNohziWJPhkOn42EUxQE3jlJD7RHEAlfPmAB4BllMBi0Wu2J
Eyc0Gk1raytFzl8MM/JGe8O5XW5yJhQ97Ygg8pzIO3lyDmc5h4MjdYgUotFe
iewW7KTwiTZDe4OmTH3oUOy2r6NV6yOPzA8vjDt2/UJTDyVJNreb9EIix4ne
7/DroQRul8vt3QvVJYrDvuRrvE9VcPGcwHE8R141jvRuY3jFJsSo1p3UvqGO
OmPj6eLcg7GxCYEhivXRGTFHyzOuGC62mu+aHY+5TFMnG5Lb7W2KSJNBGjzy
0pKICDwJi7cdcvnkk/blSDgn7YH2CCLhywcsADyjLBbLgwcPdDod6ZbJfbfb
cxJ6eDuxHKYWSne6p0J5aHfCwtVJMj/VwojCQ2VtPZJEeQcMwWRh62shta+9
VJmuUgauVMr8lEHhpzJKWzoFyeySmNG/N4RsTHaIBAwz7pEAAHhydrvdbDaT
PpnckvuSb3TIBGfpshnqSOG7VJiXkHpC/lmO8nD1+eudfaI05JZYn3iO8FiY
/o7+1sr7V44W5ObE7c6VR5zaeayutLHL7P3UqHP0S4lsTHaIBAwz7pEAAHhy
PM+T3thisZBbct9HOmRCdNKk8DlMLT/pbpaX12apK0qrdU0dJiMvWUTPtSow
Wdgp48C95gc3Lt+4qi2pasgqa7nc1HXHaGW8tW8Mmx4gG5MdIgHDjHskAACm
Ao6hGXMP1akfNHabh6z9rETzEuYATSIOmqZ6enr0emN3t9lqpby7BYzL9oHI
xiSFSMAwTy8SAADPMMHpYOlBUvhslkGr3UFKnl3w0ZFH8Ls4h8M2OEgqoGVw
0OpwMN6dBsZl+jOyMUkhEjDM04sEAMAzzCXwpPBxDM2xDifHO70z533zam74
XSLPkwrooGnW4XCS++M3ygnZmKQQCRjm6UUCAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnm3/A5xBKdU=

    "], {{0, 272}, {951, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{308., Automatic},
  ImageSizeRaw->{951, 272},
  PlotRange->{{0, 951}, {0, 272}}]], "Output",
 CellChangeTimes->{
  3.767814144459478*^9, 3.767890277791979*^9, 3.768120628289637*^9, 
   3.7681699084198475`*^9, 3.7691253144970636`*^9, {3.770132413687959*^9, 
   3.77013244037461*^9}, 3.770144703370648*^9, 3.770156540044793*^9, 
   3.770157767051219*^9, 3.7703710140736685`*^9, 3.770417395257612*^9, 
   3.7704534514965987`*^9, 3.7704750437929306`*^9, 3.7704843670059814`*^9, 
   3.77053607398298*^9, 3.7705853025701756`*^9, 3.7706307551311407`*^9, 
   3.770631074472115*^9, 3.770666082506009*^9, 3.7708011184166994`*^9, 
   3.770802490018448*^9, 3.7708093169753337`*^9, 3.770832195588154*^9, 
   3.770838236324359*^9, 3.770842253274519*^9, 3.770882447090968*^9, 
   3.7708864681267557`*^9, 3.770894537231475*^9, 3.770934389483776*^9, 
   3.7709361248441153`*^9, 3.7710256398456097`*^9, 3.7711592707992077`*^9, 
   3.771675529161045*^9, 3.772137205828185*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getCircumradius", "[", 
    RowBox[{"{", 
     RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", ",", "num", ",", "denom1", ",", "denom2", ",", "denom3"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "+", "b", "+", "c"}], ")"}], "/", "2"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"num", "=", 
       RowBox[{"a", "*", "b", "*", "c"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"denom1", "=", 
       RowBox[{"(", 
        RowBox[{"a", "+", "b", "-", "s"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"denom2", "=", 
       RowBox[{"(", 
        RowBox[{"a", "+", "c", "-", "s"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"denom3", "=", 
       RowBox[{"(", 
        RowBox[{"b", "+", "c", "-", "s"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"num", "/", 
       RowBox[{"(", 
        RowBox[{"4", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"s", "*", "denom1", "*", "denom2", "*", "denom3"}], "]"}]}],
         ")"}]}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7677337295904827`*^9, 3.7677338384057727`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getNinepointCircleRadius", "[", "sides_", "]"}], ":=", 
   RowBox[{
    RowBox[{"getCircumradius", "[", "sides", "]"}], "/", "2"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.770390330966697*^9, 3.7703903698698463`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getTriCosines", "[", "tri_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"u12", ",", "u23", ",", "u31"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"u12", "=", 
       RowBox[{"norm", "[", 
        RowBox[{
         RowBox[{"tri", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"tri", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"u23", "=", 
       RowBox[{"norm", "[", 
        RowBox[{
         RowBox[{"tri", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "-", 
         RowBox[{"tri", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"u31", "=", 
       RowBox[{"norm", "[", 
        RowBox[{
         RowBox[{"tri", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", 
         RowBox[{"tri", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"u12", ".", "u31"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"-", 
         RowBox[{"u23", ".", "u12"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"-", 
         RowBox[{"u31", ".", "u23"}]}]}], "\[IndentingNewLine]", "}"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.766176711318849*^9, 3.766176738605895*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getTriData", "[", "tri_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sides", ",", "perimeter", ",", "inc", ",", "inradius", ",", 
       "circumradius", ",", "cosines", ",", "bisectors"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sides", "=", 
       RowBox[{"RotateLeft", "@", 
        RowBox[{"triLengths", "@", "tri"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"perimeter", "=", 
       RowBox[{"Total", "@", "sides"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"inradius", "=", 
       RowBox[{"getInradius", "[", "sides", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"circumradius", "=", 
       RowBox[{"getCircumradius", "[", "sides", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cosines", "=", 
       RowBox[{"getTriCosines", "[", "tri", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bisectors", "=", 
       RowBox[{"getTriBisectors", "@@", "tri"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<sides\>\"", "\[Rule]", "sides"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<perimeter\>\"", "\[Rule]", "perimeter"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<inradius\>\"", "\[Rule]", "inradius"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<circumradius\>\"", "\[Rule]", "circumradius"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<rOvR\>\"", "\[Rule]", 
         RowBox[{"inradius", "/", "circumradius"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<cosines\>\"", "\[Rule]", "cosines"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<bisectors\>\"", "\[Rule]", "bisectors"}]}], "}"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7677333629160957`*^9, 3.7677335124646764`*^9}, {
  3.7677336325269165`*^9, 3.767733653549277*^9}, {3.767733864909941*^9, 
  3.767733932591189*^9}, {3.767733993610223*^9, 3.7677339960955243`*^9}, {
  3.7677388727152033`*^9, 3.767738876986456*^9}, {3.7677389294266605`*^9, 
  3.7677389446436467`*^9}, {3.767740902050188*^9, 3.7677409031462555`*^9}, {
  3.767906576687069*^9, 3.767906639950316*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getSubtriData", "[", "tri_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sides", ",", "inc", ",", "tps", ",", "incR", ",", "npc", ",", "npcR"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sides", "=", 
       RowBox[{"RotateLeft", "[", 
        RowBox[{"triLengths", "@", "tri"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inc", "=", 
       RowBox[{"getIncenterTrilin", "[", 
        RowBox[{"tri", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "the", " ", "intouchpoints", " ", "of", " ", "this", " ", "guy", " ", 
         "is", " ", "on", " ", "the", " ", "billiard"}], ",", " ", 
        RowBox[{"needs", " ", "to", " ", "draw", " ", "them"}]}], " ", "*)"}],
       "\[IndentingNewLine]", 
      RowBox[{"tps", "=", 
       RowBox[{"intouchTriangle", "[", 
        RowBox[{"tri", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"incR", "=", 
       RowBox[{"getInradius", "[", "sides", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"npc", "=", 
       RowBox[{"getNinepointCenterTrilin", "[", 
        RowBox[{"tri", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"npcR", "=", 
       RowBox[{"getNinepointCircleRadius", "[", "sides", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<tri\>\"", "\[Rule]", "tri"}], ",", 
        RowBox[{"\"\<sides\>\"", "\[Rule]", "sides"}], ",", 
        RowBox[{"\"\<inc\>\"", "\[Rule]", "inc"}], ",", 
        RowBox[{"\"\<incR\>\"", "\[Rule]", "incR"}], ",", 
        RowBox[{"\"\<npc\>\"", "\[Rule]", "npc"}], ",", 
        RowBox[{"\"\<npcR\>\"", "\[Rule]", "npcR"}], ",", 
        RowBox[{"\"\<tps\>\"", "\[Rule]", "tps"}]}], "|>"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.770654765000458*^9, 3.770654951757269*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getAnticomplData"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getAnticomplData", "[", 
    RowBox[{"orbit_", ",", "sides_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"getSubtriData", "@", 
    RowBox[{"anticomplementaryTriangle", "[", 
     RowBox[{"orbit", ",", "sides"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7703928239021015`*^9, 3.7703929304966564`*^9}, {
  3.7703941179290648`*^9, 3.77039411908855*^9}, {3.770395300601123*^9, 
  3.7703953249128675`*^9}, {3.7703953602870073`*^9, 3.7703954141282024`*^9}, {
  3.7706549558057113`*^9, 3.770655020118684*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getMedialData"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getMedialData", "[", 
    RowBox[{"orbit_", ",", "sides_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"getSubtriData", "@", 
    RowBox[{"medialTriangle", "[", 
     RowBox[{"orbit", ",", "sides"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7706550503884506`*^9, 3.770655063316229*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getTriDoubleCosineSum", "[", "tri_", "]"}], ":=", 
   RowBox[{"Total", "[", 
    RowBox[{"cosDoubleAngle", "/@", 
     RowBox[{"getTriCosines", "@", "tri"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7661758644626336`*^9, 3.766175894751554*^9}, {
   3.766175977743787*^9, 3.76617599087983*^9}, {3.766176024302198*^9, 
   3.7661760303021555`*^9}, {3.7661767453907223`*^9, 
   3.7661767596057444`*^9}, {3.7661795690957766`*^9, 3.7661795703264866`*^9}, 
   3.767123204839527*^9, {3.767549304813533*^9, 3.767549305124669*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Major Triangular Centers (Notables)", "Section",
 CellChangeTimes->{{3.7660464796718826`*^9, 3.766046489205515*^9}, {
  3.7670101642367005`*^9, 3.7670101763959494`*^9}, {3.76789056358529*^9, 
  3.767890568553003*^9}}],

Cell[CellGroupData[{

Cell["\<\
Linha de Euler: bari, ortho, circum, 9-pc all lie on a line (but not incenter)\
\>", "Subsubsection",
 CellChangeTimes->{{3.7656420853255863`*^9, 3.765642092335216*^9}, {
  3.7657067541131935`*^9, 3.765706766353731*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
emPpvHNCegIIAciB4QJDqUCYeJpQgUjL1sAqROgGTZsmEYUePYoJkRowh/zG
jU3UbVxJ8KYLsWGS+LHwWVm50PwyBRzytFPTaI2DDw1WMB4oHe356aefuJnj
5uZGS+jatWvRtal5eXmDBw+mgVi3bt3KrQoEKUXExcXRQdqFCxeWgnUXkonp
SoonpouuR/qQ8YEKRJkFZYoKRGpWqnrMhxs8erREFIYMKT5E6uvrkl9XZL2u
ZuFBF3Izib7TeFkg7tD1yyzaX2JyRbmjj4ym1Y33G1/cRhUp0tGe+fPnszIH
uhg///wzvfb777/PypI/2Jidnd2jRw8akfvQoUOsqkCQUge0f3Q+YWpq2rt3
7127dmn7dp6SJqYVrFNNzEgsKhDGC42pQKSA7ghGZibTr59EFCZMUBgiVSwi
kynwu27/I5w9HFBVFyLOMmuqS/5k8OeLuib3rMzczH7/9qN1/Xb2N2Xin8iO
9qxcuVJJc6AhNGrUKHrVmDFjFLeL0tPT27VrB2eWKVNGu2biEIRvaCuofPny
dP6OYmNj87///e/kyZPZ2hD0vzjkTExXzJ+YTlRm/0JSZhIIweBDg01l0lJL
BSI5k+e8aKC0nTtLROH335VYanTsf+QX7enBrxkqwl0XPsYxhwZ/miEyI52+
PPmTWWnZaZ13duYQIlV2tGfbtm0lnp+ZmdmvXz/6wP/yyy/KqE9ycnKTJk1o
C0pBxlsEKdV8+PCBLgI/duxYYmIi9BSgv0DX6VFMTExoDyI1VU0jLVwoNDG9
2KJ13ZfK72tLz0n3f+o/6sgos0VmUoHQn6/fdltb7yDv2I887KhNSGBatpSI
grIhUh8foZnIGHWNcSkDF10AfwtdOS9ryV9n97fMh4jizk1IT2i5uSUNkfoP
+76SbP61//77T8GZ8DzTtdmAF5uotbGxsbVr16YZDO/fv8/WQgTRfnbs2AFP
uKWlpeywalJS0qFDh6B/Ld3XQ7NZUYFISRFwpEUlEl+Qwer8+AmtK98gujB8
X3ET03LJyMmgAkE31RYSCOmyebbExDD16jE0RKrc5Njyyf7ILDQmjvSxL7d6
hYC1LsQ9ZrZ3+JSYyY4JUzQyH5MaU++fejRE6t6QvdwsTE9Pp2GBoXlz5swZ
ueckJCS0bNmS9izWrFnDtorXr187OjrSXvbTp0+52YkgWgu4eni8hw0bJvdb
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
fxHurZ0=
    "], {{0, 420}, {520, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{243., Automatic},
  ImageSizeRaw->{520, 420},
  PlotRange->{{0, 520}, {0, 420}}]], "Text",
 CellChangeTimes->{3.7657020556624365`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getAltBases", "[", 
    RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "sides", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sides", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p2", ",", "p3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"p3", ",", "p1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"closestPerp", "[", 
          RowBox[{"#1", ",", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], ",", "sides"}], 
         "}"}]}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7660540610974607`*^9, 3.7660540912140727`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getIncenter", "[", 
    RowBox[{"p1_", ",", "n1_", ",", "p2_", ",", "n2_"}], "]"}], ":=", 
   RowBox[{"interRays", "[", 
    RowBox[{"p1", ",", "n1", ",", "p2", ",", "n2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "getBaricenter"}], ";", 
  RowBox[{
   RowBox[{"getBaricenter", "[", 
    RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "medians", "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"p1", "+", "p2", "+", "p3"}], ")"}], "/", "3"}], ";"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"medians", "=", 
       RowBox[{"getMedians", "[", 
        RowBox[{"p1", ",", "p2", ",", "p3"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interRays", "[", 
       RowBox[{"p1", ",", 
        RowBox[{
         RowBox[{"medians", "[", 
          RowBox[{"[", "1", "]"}], "]"}], 
         RowBox[{"(*", "23", "*)"}], "-", "p1"}], ",", "p2", ",", 
        RowBox[{
         RowBox[{"medians", "[", 
          RowBox[{"[", "2", "]"}], "]"}], 
         RowBox[{"(*", "31", "*)"}], "-", "p2"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getOrthocenter", "[", 
    RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "altBases", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"altBases", "=", 
       RowBox[{"getAltBases", "[", 
        RowBox[{"p1", ",", "p2", ",", "p3"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interRays", "[", 
       RowBox[{"p1", ",", 
        RowBox[{
         RowBox[{"altBases", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "p1"}], ",", "p2", ",", 
        RowBox[{
         RowBox[{"altBases", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", "p2"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getCircumcenter", "[", 
    RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"medians", ",", "medianPerps"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"medians", "=", 
       RowBox[{"getMedians", "[", 
        RowBox[{"p1", ",", "p2", ",", "p3"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"medianPerps", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"medians", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"norm", "[", 
           RowBox[{"perp", "[", 
            RowBox[{"p2", "-", "p3"}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"medians", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "+", 
          RowBox[{"norm", "[", 
           RowBox[{"perp", "[", 
            RowBox[{"p3", "-", "p1"}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"medians", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "+", 
          RowBox[{"norm", "[", 
           RowBox[{"perp", "[", 
            RowBox[{"p1", "-", "p2"}], "]"}], "]"}]}]}], 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"interRays", "[", 
       RowBox[{
        RowBox[{"medians", "[", 
         RowBox[{"[", "1", "]"}], "]"}], 
        RowBox[{"(*", 
         RowBox[{"2", "+", "3"}], "*)"}], ",", 
        RowBox[{"perp", "[", 
         RowBox[{"p2", "-", "p3"}], "]"}], ",", 
        RowBox[{"medians", "[", 
         RowBox[{"[", "2", "]"}], "]"}], 
        RowBox[{"(*", 
         RowBox[{"3", "+", "1"}], "*)"}], ",", 
        RowBox[{"perp", "[", 
         RowBox[{"p1", "-", "p3"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.765645732949212*^9, 3.7656458278425856`*^9}, {
   3.7656460598341956`*^9, 3.7656461785226216`*^9}, {3.7656462375472527`*^9, 
   3.765646374450745*^9}, {3.765646886738877*^9, 3.7656469020100865`*^9}, {
   3.765646946217825*^9, 3.765647184972618*^9}, {3.765647307276482*^9, 
   3.7656473334690547`*^9}, {3.7656474307388344`*^9, 
   3.7656474311078463`*^9}, {3.7656476691932735`*^9, 
   3.7656476979063077`*^9}, {3.765648173278365*^9, 3.765648209648874*^9}, {
   3.7656485106174583`*^9, 3.7656485730605555`*^9}, {3.765648643050417*^9, 
   3.765648662033888*^9}, {3.7656487095293875`*^9, 3.7656487328347054`*^9}, {
   3.765648777858938*^9, 3.765648809954026*^9}, {3.7656489522607193`*^9, 
   3.765648954481776*^9}, {3.7656493672032304`*^9, 3.765649386929471*^9}, {
   3.765649557667638*^9, 3.7656496136742263`*^9}, {3.765649646627115*^9, 
   3.765649648553991*^9}, {3.7656497800567646`*^9, 3.76564983854659*^9}, {
   3.7657042445302534`*^9, 3.7657043241685085`*^9}, {3.7657045089306192`*^9, 
   3.765704521683323*^9}, {3.7657046032044806`*^9, 3.765704692245428*^9}, 
   3.7658020222587976`*^9, {3.7660541069597783`*^9, 3.7660541236483755`*^9}, {
   3.766435628382712*^9, 3.766435635645294*^9}, {3.7664359370930367`*^9, 
   3.766436037605197*^9}, {3.766436074869693*^9, 3.7664360916961064`*^9}, {
   3.766436217110161*^9, 3.766436220630747*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Nine Point Circle: its center is the circumcenter of the medians, and is \
tangent to incircle (at Feuerbach point) and all 3 excircles\
\>", "Subsubsection",
 CellChangeTimes->{{3.765704696780299*^9, 3.7657047005382447`*^9}, {
  3.765704791155612*^9, 3.765704799395599*^9}, {3.7657076625432034`*^9, 
  3.765707675486966*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
IRcCKde3r7hmws6dJRLLT00mTPTJJ5/E9znjNq2Oe3/mzJk0rYP/O+OJ9yO3
b98ucvasSIEC5na7+OKIbDcAAOA9GzZsMNoOW7ZskZAvq2hRMdogcXnU9vp7
BrkQSJmuXcU1E8bloUgsP6lMWKpUqSQzYaJp06YFnMeDDz6Y5vXo0qWLMd/y
5cvH/dx8nzDvuDqN7af9ttretwAAIOIGDBjgaDPceuutEvLlVKwoRtsjHMtJ
z8iFQPACjdk+bJhEYvnJZULtXybYeQ0aNCjgvPr375/m9Wnbtq0x31tuuUV+
SeyftXp1czs2aBCR7QgAALzjpptucrQXhg8fLiFdxu23i9HmKFEitMuIBuRC
IDj33iuumfCllyQSyw9lJkz08MMPB5zn66+/nqb1On36tLRs2dL1WdW//vor
Yd56j9B/ez72WES2JwAAsO+zzz4z2gpffvmlhGwZzZuL0dag3zt35EIgaf/8
I3LnneKaCd94QyJRw5QpU0KeCZW+S3hn3Lq5zfeCCy6QRYsWpWn9fo/7LWnc
uLEx73t8+2u98kpzuw4eHJHtCgAA7Bocd873bSNUC+UYx+3bi9HGyJUrdPOP
NuRCIDAdu8HteUel47ZHoAbNhBkyZHDNbmXKlEl1Jkx04sQJuf76613nnyVL
loS+RNMw/59//lnq1KljzLt169b/P1/td8Z/+06eHJHtCwAA7Ln55psd7QPt
2zwk89Z+H/zbFtoH+uHDoZl/NCIXAu5++EFc31HOmlVk4UKJRA3JZcLffvst
JHUkNe59njx5ZM+ePWlazu7du+Ov//nPu3Ni/63Hj4vrWEL//W9EtjMAAIg8
HT/Lv23w+eefS5rnPXq0uF7T37Yt7fOOZuRCwKS/G/o+sv93Q+9rrVkjkagh
UpkwUVLj3hcpUiSofk6Tov1NV6hQwZh378R+XH/80dze6oMPIrK9AQBAZA0b
NszRJqhataqkeb5x7SfX9sQnn6R93tGOXAg4bdggUqiQGN+L4sVFNm+WSNSQ
1PuEZcuWDXkmTLRp0ybJli2b63J13Pu0zn/dunVSsmRJY97DEvtz3brV3O5q
+fKIbHcAABA5Oh6Fb3tA+0pP0zznzRPXdsTMmWmbb6wgFwL/T68l5cghxnci
LovJ7t0SiRrmxf2mBcqEms2OHTsW1jo++ugjY7maFRcvXhyS5X4St40vv/xy
Yxnjxo1LmL/ej3X7Tf/ss4hsfwAAEH76HJF/WyBNfRqsXCmSJ48Y7YcXXkj9
PGMNuRBIMHeuuOaRm28WOXhQIlXH8ePHpUqVKsZvpT6DqX+LRA2+497ny5cv
NM/6+5g/f77kzZvXWMfzY2MsWGDuB72Hu3NnxPYDAAAIn5EjRzraAJUrV5ZU
z0+fN3Lr33zo0NTPMxaRC4H/yIwZ4poJ69YVSRxrL4K0j9Dbb7/dSiZMNGDA
AClatGia+5wJ5K233pLMmTMb2XDWrFkJy9NnPvz3x403Svx7iLaPFwAAkCY1
a9Z0nP+13ZGqee3fn9A+8G8z9O2buvnFMnIhYt2ECeKaCZs2Fdu1NWvWTCpV
qiS/W/pOhus9xkSTJ092fV72/fffT1juK6+Y+6VGDZGjR63vGwAAkDrbtm0z
zv0btH+HlM7rxImEa/j+bYWnnkr5vEAuRGwbNUpcM+HDD4v12v4n0vcJI23s
2LHGuUHHTVy6dGnCeg8fbu6fBg1ETp2K6u0CAEC0Gj16tOO8f6Pe70vNvB54
QIw2whNPpG5eIBcidj37rLhmwo4dxXptMWZ4XPbzz4Y6Zsb69esT9sUzz5j7
Sc8FHqgdAACkjO+7Mqpfv36S4vnoc6f+bYPWrVM+H/w/ciFi0ZNPimsm7NlT
rNcWo/r27Wtkw2LFislXX32VsE/atzf3V2rfRQAAAFbs3LnTON+vXbtWUjSf
N98Uo03QokXK5gETuRCxpl07cc2EQ4aI9dpi3JNxed1tvMbzfd/cd5+53/Tc
4IHaAQBA8l588UXHef7666+XFM1DnyXyH4+iUiWRX39N2XxgIhcilrjlCjVm
jFivDfHat29vZMOqVavKgQMHEn7z9bffd9/puSHxeVMAAOBpdevWdZzj+/Tp
I0FPf/iw2fdorlwi69YFPw8ERi5ELPj3X5GGDcU1EyaOmQdPOHfunDz44ING
NqxTp07CWB3626/nAN99qOcIPVd4oH4AAOBu165dxvl99erVEvQ83K7vv/FG
8NMjaeRCRDsda6FmTXHNhLNni/X6YPjzzz+ladOmxrnj7rvvljNnziScA/z3
pZ4rPFA7AABwN27cOMd5vXz58hL09No3Df1ChBe5ENFMx0C/4QYxjvHMmUUW
LBDr9SGgQ4cOSb169Yxs2KpVq4T9pucC//2amv7MAABARNSvX99xTu/Vq5cE
Ne20aWKc85s0CW5aBI9ciGi1Y4dIqVJiHN/584usXCnW60Oy9u7dK7feequR
DTt06JCw//Sc4L9/9dzhgdoBAMD/0z7kMmTI4DifrwymPbZmjUjOnOI415cu
LfLDD8lPi5QhFyIaffqpSOHCYhzbRYuKfPGFWK8PQdu2bZvccMMNRjZ8Rsc0
1HOCnht897GeO/Qc4oHaAQBAgvHjxzvO49rfeLLTHTwoUrGiOM7zF1wgsnhx
8tMi5ciFiDbLlpn9kqgyZUR27RLr9SHFNm7cGBf/ShvZcPDgwQnnBj1H+O5r
PYfoucQDtQMAAPlPw4YNHefwHj16SLLTNW8uRnvupZeSnw6pQy5ENJk/38wI
qkoVkZ9/Fuv1IdWWL18uRYsWNbKhjoMUf47w3+d6LvFA3QAAxLrv4/LGhRde
6Dh/L9Pr+ElN17u3GOf2jh2TngZpQy5EtJg5U4xjWdWuLfLHH2K9PqTZhx9+
KAUKFDCy4WuvvZZwrvDf93pO8UDdAADEsldffdVx3i6jz3AlNc2UKeLanjt9
OunpkDbkQkSDuN8b10yo/ZKcOyfW60PIzJ49W7Jly2Zkw5na34yeM/yPAT23
eKBuAABiVZO49pjvObt79+4S8PPaF03ced5xLr/iCpHt2wNPg9AgFyK9e/55
cc2EDz4o1mtDWLzxxhtGLlRLx41LOHf4Hgd6bqH/WQAArPjpp58kS5YsjvP1
J598Iq6f379fpFw5Mdp0773n/nmEFrkQ6dmAAeKaCZ94QqzXhrB6+eWXjVx4
0UUXyZb+/c3jQc8xeq7xQN0AAMSSyZMnO87V11xzjQT8fNOmYpzDhw8P/HmE
FrkQ6ZU+g+CWCYPp3wpRYeTIkUY2zJs3r3z/2GPmcaHnGg/UDABALGnWrJnj
PN2tWzdx/ewLL4hx7n74YffPIjzIhUiP2rcX10w4aJBYrw0R1b9/fyMbFilS
RI42amQeH3rO8UDNAADEggMHDkj27Nkd5+jFbmMPfv65OXa99iV/7Jj5WYQP
uRDpTcuW4poJafPHrKefftrIhjeVKiUnK1QQxzGi5xw993igZgAAop1/fwAl
S5YU18/eeac4ztcZMtA3gA3kQqQXZ86I3HWXuGbCSZPEen2wqkOHDkY2fFzf
YfA/VvTc44F6AQCIdvfee6/jvNylSxcxPjdypPD8l0eQC5Ee6DF5223imgln
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
detW1K5d26da0GuNeKcPaZfOneHv76dLl459SN2AdaE96/P7WM89x31DRIEl
86Fa25pvv4X2uAzOnz+P+vXrK/cFnTp1clScRESRRPqKNmvWTGl7pU6Td3jS
v1NqRiHfAMb+/ytWrIiu22RuQeuyWbNmjf7vvsYgf8s+pC7BulA1YIC6T0Tf
vu7eL0QUPJ48bWpvFiyA9pgsTp48ierVqyv3Br169XJcrERE4U7qu/Tp05va
WxkT1N96TGrL4cOHw/rOT/qj+rK8XR9SiesSx9iIPKwLzWR8Jrua0HM9aY+N
iCJX/fowtTl+zjccKt9++230mKTWe4RBgwY5Ml4ionBkHeelVq1a0e8BE7NO
qeOsNV6HDh3ire/s+pDGkr6tU6ZMgdSeuvcZBQDrwv9p21bdF+K119y5P4go
dF56CaZ2p0oVaI/Ji6+++grFixdX7g9Gjx7t2JiJiMKFvNsztq3DA/xuQupL
Y60nY9h4+1tvfUi9jXEj8xvJWKi69yElEOvCGNZx4mPNnOm+fUFEobd0KUxt
j8yXqjumOGzZsgV58+ZV7gtel/G6HBAfEVE4Mr4nlNpN/ncwfkf6ohq/PZT3
hnZ/Z9eH1BfSz1TWKXNmsL9pGHF7XXjlClC3rroPhEPmliYiFzh+HEobtH8/
tMcVh9WrVyNTpkzK/cCsWbMcHTcRkRNJrWb8njCx/UbjI/WazDUR+3uTJ09W
fk/eF0ptGFdfUl/IO0npb8qxahzOzXWhzMv8wAPq9idJAqxc6Y59QETOkTo1
TG3R3LnQHlM8li5dihQpUij3AIv4XI2IyC/SDzO2DQ3We0IrqdOMNV9ctaj8
Nxnj1FhLJkRsf9OVvNd2HrfWhfJsvlQpddvTpgU2bYr87Sci56lRA6b2SMbB
0h2TD+bNm2eb+z/66KOwiJ+ISDfjN4Xyfi6Uv238hlDGkfFlGRlnRt4vyvio
iakR5f2ozMOxwIFjcLuSG+vCb74B8uVTtztXLuDLLyN724nIuWS+B2ObVLEi
tMfkozfeeEPJ9ylTpsT69evDZhuIiHSQ/pyx/Ufl3Z2O7/GM3xH6M7dhbPyJ
7W8q3zrqPg4E99WF27cDmTKp21ysGHD4cORuNxE5n/QbsvZp1x2TH8aPH6/k
+mzZsuGzzz4Lq+0gIgol47tCu2/8QkHe/xn7eSZmXdI3VfqbGse1iY+u7SYL
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
kPlyZ80CGjaEXzVi/frAzJnAL7/oPWYJrQs3bQLSpFGXLV0a0d9o6j4uRETh
TnK6sX2VnK87pjC2ZMkS3HvvvUpt+O6773K/EpHj/OKpEVKlSmVqr7766it4
XUZqC2PO4Hzhev36K/D220DjxvCrRpSxyN94AzhzJvTHLyF14YoVMd9RWpeT
8VzPnQv9NhARRSLJ6dbnibpjCnNz585V6sIkSZJ40toK7lsicpR58+aZ2qrS
8u4lrmVkfBNjzuD4y85x6RIwfz7QtCn8qhFr1wamTEH0WC6hiNPfulDGXLWL
W/rUhttYrERETiY53djOSs7XHVMEmDZtmlIbpk2bFhs3buT+JSLHaNWqlamd
Gj58OOJc5sknYcoZzz0X99+THpcvA++8A7RoAdx9N3yuEWvUACZNAn74IXjH
1Z+6UPq92sUp26V7HxMRRRrJ6ca2VnK+7pgixNixY5XaMFeuXPj888+5j4lI
u/Pnz0c/rzK2UTK+cpzLdeoEU854+um4/570u3oVkG8ZWrUCkiWDzzVi1arA
hAnAd98F9hj7WhfKb9vFxXHTiYiCQ3K6sb2VnK87pggydOhQpTYsVqwY9u3b
x/1MRFotWLDA1Dbdd999iHe5Hj1gyhmPPRb/MuQc16/HzPkuz4BTpIDPNWLl
ysDYscCRI4k/3r7UhcOG2cfBeVGIiIJHcrqxzZWcrzumCNO3b1+lNrz//vtx
/Phx7msi0uZJT21gbJeGDBmCeJfr3x+mnCFjYjpgWygBbt0Cli2LeeebOjV8
rhErVABGjwa+/TZhxz6+utCTM21/d8CAhP0eERH5xjrOteR83TFFoOeff16p
DWvVqoWzZ89yfxNRyP3666/KvDo7d+5EvMvK94fGnCFjljhgeygAZGy09u2B
dOngc40YFQWMGAHs3+/7eRBXXdi5s/3vSB2qe/8QEUU6yenGtje+MQcowdq2
bavUho0bN8YlGUPOAfERkXssWrTI1BYVKVIEPi07bhxMOaNSJd+Wo/CyahXw
zDNApkzwuUaUsWxl7qu9e+M+J7zVhdYxjWJNnsxzjIgoFCSnG9tfyfm6Y4pQ
V69eRYsWLZTasHXr1rh58yb3OxGFTJs2bUzt0KBBg+DTslOnQqkFHLA9FERr
18aMO5s1K3yuEUuUAAYPBuzmwrSrCxs0sF/PnDk8v4iIQkVyurENlpyvO6YI
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
KOSkJkuXLp1Sx7Vo0cK2vuvYsaPX82T69Om2y7Rs2dLrMlJHJkmSBJs49xK5
jDyXkXGgpk2bhp9++gmBWm/lypVN198777wTsHXHSfqwGXOKpw3RvY/Jhjz3
s6sFdIwVxLowtOQbjkmTgBo17M8BO3ffHXMtSzsSrPlPiUi/IkVguvYlp+uO
ibR47733cM8999jWdEY9e/b0eo6MGzfOdpkOcYxxO2PGjH//Lm3atPgymOPe
ETlM9+7dTddK7dq1MXnyZK/jOPniq6++Uq7BCxcuJHh9fpFv1Yw5JU+e0Pwu
+W7MGCj3/eLZZ/UcK9aF+pw6BUyZAk/DY39OeCPvEObP5/fDRJHkyhUo17rk
dN1xkTZz5syJsyYcLHMneVnWOvahL3Xk+PHjlb+XPq2Hgj3+HZFD5MqVy+v1
Vr16dUycOBEnTpyAP+scOXKkaT2PPvqoX8snitSf1rzy3/+G7vcpbi+9pB4f
0aePvmPEutAZzpwB3ngDeOgh9XjEpXFj4O23gVB8v0xEwSPjUluv71A9UybH
euCBB2zvUZ955hl4W6Z37962ywwaNMjrMkOHDrVdRt6f6N4HRKGwZcuWeN/P
x5J5ZeQ5ynfynVA8661atapp2fnyXD+U25YvH0x5Zc2a0P4+2evRw3xcYg0Z
ovf4sC50nl9+Ad58E6hfXz02cWnYEHjrLT4LIgpH1u8LJJfrjom0atWqldf7
0nye80PGOLQu06lTJ9u/f+WVV5S/jSXzJNot85I8y3bAfiAKhRs3buCDDz7A
U089ZTsvqDeVKlWKHjP4iIw3aFnnnj17lL8/F+oxpuU7JGNu4Zy4+klffrv7
+PHj9R8b1oXOJuOHz54NNGqkHqe41KsHzJgB/PwzjyVROLDmCY4P4FrXr1/3
NPmN4r0fLVmyJA4cOPDveeKtjpQxNLz91rPPPmu7zBj55sUB+4JIh7///hsy
t0vbtm2RJk0an2vE+++/H6NHj8a3Mm+ZZz1yHRn/u8wlE/LtkTFIjblFxrd0
wD52rcceMx+PWHLPrjs2wbowfMjcJTKOrfRN96dGfPBBQO4LAji2FhEFWNmy
MF23HE/clWROs5o1a9recz7iuZ+z/puMc3j48GGvdeS8efO8nkdPPPGE7TJT
5Lt3B+wLIqeQMYJlvKb06dP7XCNGRUVFv9c3/tvb8t1PqOOXOQuNuSVbttDH
QP+JnlvAWz/AhQudc0xYF4YnOUYLFgDNmgF33aUeQ29kbszJk4FEjK1FRAF2
+zaUa5XzD7vOqVOnUL58eeX+MkWKFFi3bl30+fDcc88p/93bvar0ibP7nZs3
b6Jx48a2y2i5byUKI6tXr4b0186UKZPPNWKsT3SMJSbvFKz5he8JQkv6/lWr
ph4HsXy5s44F68LwJ+MYLloEyHxUSZOqx9Ob6tWBiROB77/n8SbSac8eKNen
5HLdcVHIyJifRYoUUe4js2TJgs8+++zfc+Gff/5BmzZt4rz3NNaRVhcvXowe
e99uuffff992GSKyJ3WePKvJmjWrz7VhiRIloseAkvkrQhZrwYJwdC0SyWR+
ujJlzPtfpE7tzOe/rAsjy19/AUuWAK1bA/feqx5bb6pUAcaNA44d47EnCrU5
c2C6HiWH646JQmbXrl3IkSOHcv9YoEAB7Nu3TzkX/vzzz+i5t+3uOa11pNHp
06dRoUIFZZl7Pbli7dq1tssQkW82bNiArl27Rs/t4muNWKxYMQwYMMB2DKmA
atUKphwTx9jEFED790OpyUX27ECwj3lCsS6MXDduANKP6KmngJQp1ePsTaVK
gIxdd/gwzwOiUPDcS5iuQcnhumOikPj0009tx7UoXbo0vvfSl0PuIb29n2gm
3xbYLCPfIMo9qPXvpS/c9u3bbZchooSJb+5RO4UKFcKLL77o9blOosg4l8Yc
8/DDgf8NMtu5E56G2rzfReHCwMGDzt3/rAvdQb5fkn4DbdvCcxOiHnNvypcH
Ro1y9jlMFO4eeACm684JY1VT0K1YsQJ33XWXcn8oc6N5G8t+48aNSJ06dZz3
l7169TItK/3V7ObrljEx9u7da/s7RJRwEyZMMF1refLkQf78+X2uEeVv+/Tp
g23btiEgMW3eDFOOSZ8+MOsle+vXAylSmPe5KFcOOHnS2fuedaE7rVyJ6HHx
M2RQj783Ml7i8OGATb8mIkoEa59vyeG6Y6KgWrRoke39YL169XBFvhm3Weaj
jz6yXSZVqlTKv8XOPbjZcy6lS5dO+e8yx4Uvc3ITkf8efPBB0/U2c+ZMyL/v
2LEj+p2gvBv0tUaUmrJnz57YnJi8IPf11ns6ji0RHB9+qO5rUaMG8Ouvzt/n
rAtp9Wrg2WeBzJnVc8GbUqWAIUOAr7/muUKUGNJfm22wq8g9ot39X4s45qxc
uHCh1zpS3inY9RGV8Wnuvvtu5d9lbotffvmF5xhREEifbes196PNGPDSH1y+
LSxatKjPNaJ8u9itWzdsTMh4JUWKwJRnZCwKB+yviDJ/vnkfx5J5K69dC4/9
zbqQjGQMu+efj5nfxtca8b77AHk2/eWXPG+I/LV4MUzXk+Ru3TFR0Fj7l8Vq
166d1+M+Y8YM22Uek/mR7/zNli1bot8rxHdfWbduXVy+fNnrbxFR4kyaNMl0
zdWQ90TxLCN9vWWM0vs891O+1ohf+/tc/sknYco1lv7mlEhvvGHev7Eefzy8
9jPrQvJGnkd16wbkzAmfa0S5p+3fH/j8c2iPnygc9OwJ0zUkuVt3TBQUw4YN
s72/k+f/3pYZP3687TLt27dXllmzZg0yZszo9T5SxqSReS507weiSPbwww+b
rrvp06fDn+X37NmDIUOGoFSpUl6vZakf/Y5t2jSYck3Rov6vg+yNHWvet7Ge
eSb89jHrQvKF9GuX+9e8eeFzjShj8/btC+zYAe3xEzlVoUIwXTdTp0J7TBRw
fT1tod39nfQj87aM3BvaLdO9e3evy7Rt29Z2mWoyp7ID9gNRJDt27Jhy7Z04
cQIJXZ/MUzN8+HBERUWZ1jkoIfNMyPeE1vs0mVvPAfstrA0erO7XcH4fy7qQ
/CXjY/XpAxQoAJ9rxHz5gN69ga1boT1+IqeQ+UKt1wrnEI04MuanzAdhvV8c
JWM9e1lGxiK0q+9ix5OxM2LECK/vF+Q7Qxm3Rve+IIpkU6ZMMV13MrZwoNZ9
8ODB6Dbj/vvvx5cJ/W5H5kgw5psZMwIWnytJ7Wd3zyu1ou7YEop1ISWGzLPT
rx+UtiYuuXMDPXoAn34K7fET6TR5MkzXRv780B4TBYXMESjzx8feL06WY+/l
bzt16mRb240ZM8brMv087XB83yOlT58e62X8dAfsD6JI1KBBA9M1N036bjog
rn9Zv1t49FFnxRdOpI+o3T3uq6+G9z5lXUiBsmsXMHAgUKwYfK4Rc+QAunQB
eK9CbiRzCxuvBxnzSXdMFDRr166NvleUOa+9/U3r1q1ta7qpcfQvft5z3tgt
Y/3OSeTOnTs482YTudz333+vXG/Hjx+H7rhMPvkEppxzzz3ArVvOijEcyFgy
dve0MvaM7tgSi3UhBcPu3THv0UuUgM81YpYsQOfOgOfeSXv8RMF28yaQNClM
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
FkIIIYSI4/8BllhqYQ==
      "], {{0, 735}, {902, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    BaseStyle->"ImageGraphics",
    ImageSize->{221., Automatic},
    ImageSizeRaw->{902, 735},
    PlotRange->{{0, 902}, {0, 735}}], "Text"], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Qd4lFXWB3DSg0gRkN5RQUFFUZAPFQsgIq4FcJEmxIbYQREVxYIYQJKw
UnQRcEVQkE7ovS9FpaUSIISE9EzL5E2mZL4z82euI7qAuyFvyv/3zDNMZibJ
nXfeCefce+69LcNef/IF/ypVqowOlasnh79z/6hRw9/tGyhfPPDuW8+HBciN
Ku6rQPyjERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERHpodBD71YQEREREdEVZLVaL/NOIiIiIiIq7woKCoqK
igoLCws85IZ8KTf0bhcREREREZU8BP+aJxFA2I8UQO92ERERERFRyfPt+fe9
rXe7iIiIiIjoikC3f5GH+pKIiIiIiCok9PZbPNSXRERERERU8WD+b35+fqaH
3OD8XyIiIiKiispqtRYWFppMpipeISEhtWrVql+/fosWLdq1a3fnnXd269bt
8ccff+GFF955553JkydPnz59wYIFGzZs+OWXX1JSUsxms91uV9sHWD18v0Q2
Ic+RzAIri6LQSHINeY7c7/st8mS53+FwyG08AQ9pv5+hrO7R7cARUaWHP0o2
m01VUaILRe92ERERXQzW/0lPT3/llVfCwsIGDBjw6KOP9ujR47777rvrrrsk
/m/atKmkA8HBwSpBCAwMlBzBz88PX1arVq1hw4adOnV65JFH5IdIgjBv3ry1
a9fGx8erxUXlWlIMZApyp8VikRuaT0iP2QfyXyf+J5UnyJNxp9y+INqXjECe
KV/ihxAR6QU9FfijhL9UckPvRhEREV2M6lGXMPuCVYAQvRd7yP9uqampcXFx
u3btWr169dy5c6dOnfrBBx88//zz3bt3b9++/bXXXhsaGlrFhyQIAQEB1113
Xe/evSUviIqKWr58+a+//iq/yOFwyA9Htz9+O25LPI/AHuMCaAnqkfBfKu7B
o0gNdD58RFSJyV8tm81mNptdLhf+RnHzRCIiKvvwn5fE0ii5UZE2om5MClY1
PHj+H7cM0DyReXZ2dmxs7JYtW+bPn//pp58OHjy4W7dujRo1UhmBv0dISIgk
Bf379x8/fvyyZcuOHTtmMBgQ7csvwg/H/6pojNzAtW+TuEgpEelO9UiYTCb8
vSouLmZdIhERlXHo+ZfoWq7VEqDqPzXc4zsigH57PGrzwKOI2FGQo3r1URkr
/zMeOnTop59+Cg8PHzJkyF133VWzZk3fkYIaNWq0b99+6NChERER27Zty8vL
Q9++Kg1SUwnkhtPpRGvlv1rW/xCRjjBgKn+RHA6H5vkbZTabOQRARERlHKJo
FcD79lypgF/z/jen8gI1UoDRAc1bw6Oqd/ATcEPifzUhTu6R/x/lFyUkJERH
R3/66acDBgy49dZbq1WrJolAQECAn59fSEhIhw4dRowYMX369P3795s98Fvk
Gr8RwwGs/yEiHaFTQv5AaZ6xUd/hUSIiojJL/v9CNT6iegTwqtsfz1HVPuj5
VxnBBf/f+XbXIxdA0I78Ao9iRACPqh8uDZBIfu/evV9++eXgwYMlHfD395d0
ICgoCPOLu3XrNm7cOMkXsrKyVLaiRiuIiHThdDrz8vIwQ2rnzp2tWrVq3bp1
79699W4XERHRxaC6XtXqqFj9jyWsKAfyrfz3fRp+iFoKA6mBeqZvKqHuUasD
qcV8MA1Bvj03N3f37t1TpkwZMGCA/JeqKoVCQ0Nvu+221157bcmSJadOncKv
ICLShVq1QP4WLVy4EKuidejQQe92ERERlSeqtgdjDZg+kJKS8u2337744ott
2rRR84jlv9pbbrnljTfe2LBhg9lsVnVBWC8UdU2+M4UxZOD7u1S24rsYqW+C
w/EFIroI1QUhf0amTZuG+L9nz576toqIiKh8UQMKaooxZihjvEDul1xgyZIl
L730Urt27fw8sGdZr169IiMjf/nlF4wgILZ3Op3qNrrpMEiB5UYxSIFqIjVC
4TvfWbejQETlgdqjUP5uvPfee/iLNHToUL3bRUREVJ5cEHurLECVG0l4j/9z
XS7XqVOnZs+ePWTIkHr16mH6sFw3btx4xIgRixcvxhpBmrePDsucIhHAYh1/
rGLSfDYXJiK6ODWhSf62PPPMMxidHDt2rN7tIiIiKk9UP7/aSVPNFEbkj3WH
sJWwyWTSPP8Fy429e/dOmDDhnnvuwVbFgYGBV111Vb9+/ebMmXPmzJni4mIs
cKp5FxFSm3VqngThglyAKQARXRIGKDXPX5XevXsj/p86dare7SIiIipPfHvj
1aKjchubFKjVtlG373K5kA6gVl+SAnk0NTV19uzZffv2DQoKkv+LAwICQkJC
7rvvvunTp8fExGie9Yiw3Zjms6jRBfOaNQ4EENGl+K5s1rFjRyxT8MMPP+jd
LiIionJG9aehLB/b/l6wIxjGAhDw4zmqD19tCiaPLlq06Nlnn0V1kJ+fX3Bw
cIcOHcLDwxMTEzGyoIqL1GZnms8cBCKii8DKP5rnj1L9+vWxcPHOnTv1bhcR
EVF5onrdEf+rDnnM4cVUO+y2o8J+g8GAoQFU4eJRRPJYDki+fceOHS+88ELt
2rXVzgJ33333zJkzk5OTkV+gyoiTf4no8mFGEkoQAwMD0f+flJSkd7uIiIjK
E1WNo0JxzTspAEG+WpYTowPypdPpRD0/noB4Hj8EVUP4EonDypUrn3766Ro1
aqgNBXr16jVnzpy8vDy1OhDjfyK6HGqa0tmzZ/EnRbKA3NxcvdtFREREv0GQ
n52dvXjx4t69e1erVg3/a8uNwYMHb9myRS0NqvYgwH/xal9jNTzhu10ydjrm
fgFElQ3+LOzduxdrEderVw9/DYiIiKiM8N3CWG6cPXt22rRpt912m9piuF27
dhMmTIiLi1PbE6vhBkT7aoAAk4jVEzTPjAM9XxsR6UH+GqxevRq1hW3atOHo
IRERUZmCxbo1TyKACB/37Nu376WXXqpTpw6ygODg4D59+mATAUT1Eu0jHVAT
DTTPqkRqhgKWFdL55RFR6cLfk6+//hrxf7du3fRuEREREf2OquGRWF2Cdont
8aVcyz1Go3HBggXdu3fHUL78h96gQYP3338/KSkJaQICfsz4Q/qAlYgw+4D9
/0SVDeL/Tz/9FH80+vXrp3eLiIiI6Hd81/mX206nU8J++R9cwnhMIpZrecLh
w4dHjx5dvXp19OldddVVTz755LZt25AFSJwvz8QmwmoKgNpTgIgqG/lzgaHD
F154gfU/REREZYqq3vfdXxgrBUk8j/VCHR4S5xuNxqioqJtuusnPzy8gIED+
c+/QocPs2bOxrJBkASaTCXVBGBfgvD+iygZ/SZ599lnE/++88w7jfyIiorIG
pfvot8c6P1i+W2J+tXao5q3tR8H/hg0bevbsGRISgv/ia9euPWbMmKSkJJfL
hVxAJQ56vzgiKj1q898nnngCmwxOmjRJ70YRERHR76iuOVTsaJ7yXdxG8Q96
/pEXaJ7OPbkfWwPHx8ePGjWqevXqau+AsLCw48ePa55kQb4Fm4gRUSWh9ijs
3r07ZgzNnDmTdYBERETlnUT+SAHkWtKEs2fPTpgwoUGDBmqloMcee2zfvn1q
USB5GiYUYMnQ4uJiTDEWkiNonpzCbDZzswCi8g5/GeQD3qFDB8z//emnnxj/
ExERlWuI5DFHQPP285s9Zs6ced1116mNAx544IEVK1YUFBS4XC5JE0wmE1YH
woRizZsXyA0sH4SNifV8bUT0v1Hb/7Vu3Rp/BzZs2MDPNRERUbmGdUGxTKgE
9rhHbiCSlyD/hx9+6NSpE/7r9/f3v+uuu+QelA9hBoGaWYAOf8wpkIcwIqDz
yyOi/wE+xZLaX3PNNfgj8Msvv7AOkIiIqALwXTUI639qnh3B1B7BS5Yskcgf
AUBQUJDcXrlyJVYExbwA1SWIH4X9AnR9TUT0v0IKbzQaAwMD8fFPTk7mOmBE
RETlmsPhMJlMmuc/elTySNyu9vnF+p+aJxeQRyUL6Nixo5+HRAKdOnVav349
ggHMKZbnoKAIP439hETlnXyi09LSEPzLBz87O1vvFhEREdH/BB3+6PzHOp/Y
MkAV8Kt9gZ1OJzr5JQu44447UA4k1//3f/8nWYDmXXcUWQD6/zkEQFSu4S/D
0aNHkfJXq1YNE3/0bhcRERH998xms8PhQKkP7kFJD/IC7B2MYF4V+eChxYsX
d+zYUc0O7tmz5969e4uLixH8S7LAzn+i8g4f+a1bt2LUr1GjRljsS+92ERER
0X9PLemJ/9OxyCcK+CWYx1iABPN46IIpvfLQ7NmzmzVrhtjA399/8ODBSUlJ
akFRvV4UEZUIzABasWIFin9uuOEGBv9ERESVDer8zWYzNhST2CA7O3vSpEm1
atXCQED16tXffPPNzMxMiRyQMuAaFURyjfxCRRG+k47VvAMiKgvQIfDDDz8g
/u/YsaPmnRRMRERElYQqCvIN2iURSE1NfeONN6pWrYoFgho0aBAeHo6SIZUI
oHIYowmYXICHNM8whNyPdYeIqIxA//+cOXOQ3d9zzz1c/J+IiKiywf/+iNux
/qcE7S6XCzOF4+LiBgwYgK5CuW7btu2aNWvkOdgvDDOCc3Nz1epAmGsgAYbR
aOR+YURlkHw8o6Ki8Inu3bu35v0jQERERJWHxO0o1EH9D1YHwoZfmCywffv2
Dh06qAXDJWY4cuSIfIvq88fGwdhZQL4Ri4ui0kDvF0dEvyMf0okTJyL+79ev
n8b4n4iIqJLBZsESACBolxvFxcUS2Es8rxb8QS4QERFRr1694OBgCRtq1qw5
ZsyYnJwc1AvJd8lzVO2Q5p2GTERlCkL98ePHI5cfNGgQi/+JiIgqJ0T46M9H
Yb9aJlTzxgwulyslJWXEiBFYGkiChyZNmixevBhDAFgpFKVBviuL6vzCiMgH
Pphvv/02ivqef/55pupERESVjQTtar8AbByGRUHlHgkMsLwPIgSU9Ms9Bw4c
uPvuuyUFQAnBAw88kJCQICmDJAhy7VtLwPifqAySLB79/6NGjcL6XXq3iIiI
iEoPyn407y5gakcAlPGo6iDJEfAE5AJyz+zZs+vWrYuxgODg4M8++wz9/5gO
gIogxv9EZQo+kkOHDkXyPm7cOEz50btdREREVHahKAirAyUnJz/99NNBQUHo
S7ztttu2bdt2wZr/WFYISQEGFCSVYH8jkS7wSXzqqafwmZ0wYQI/jERERHRx
EvZjFEDNDo6Ojm7RogW6E4ODg1966aWMjAyn0+k7WIB9hzGOoPYmJiJdPPTQ
Q6j///LLL1n/Q0RERBdnNpuxyKfcxs5fEjwYDIbXXnutWrVqElQEBgY2atRo
yZIlqCzCngJqfVE1y1jnl0FUWUnAf8899wQEBMindc6cOXo3h4iIiMo67Pkl
YTy290U5EOqHd+/efcsttyCuEM8++2x2djZmBGMswOVyGY1G1A7p/TqIKin5
JHbq1Amf0++//57JOBEREV0c9gjDAqECkbxvPc8HH3zg7+8v0YWfn1/jxo03
bdokz5FMAc93OBxYWVS/V0BUeWGG/s033yzBv3xOly5dqvJ3IiIiov8EVf0S
NqCeB0uGYlav3JOXl7dv37527dqhwFiuX375ZYn/8b2YDqxr84kqO3w8Jf5f
tmwZPsJ6t4iIiIjKLrW2J8J+CebRn280GlHbX1xcLF9KwP/aa69JgBESEiKR
Rtu2bbdv345hAt+5w0RUmlB9J/E/tvBbvnw5O/+JiIjo4hD2o+wH+4WhIgj3
IPJXuwBs3bq1RYsWmA4QFBQ0duxYk8nE4n8iveDz26pVK4zNrV+/Xu8WERER
UUWTnZ09fPjwKl5du3Y9fvw4Rg00TzUythVT+w7r3V6iCk4+ZU2bNkX9z5Yt
W/ihIyIiopKF1T5//PHHunXrIgVo0KDBvHnzNE9XpPb7DQVYF0R0ReGz1rx5
c/T/b9q0Cam33u0iIiKiigPxhtlsjouL69y5M1KAwMDA559/3mAwYGlQedTl
cknwz6nBRFcUCvOaNGmC+H/r1q2M/4mIiKhkSVTvcDjUzN9Ro0YFBQVJ4BEQ
ENCmTZtDhw7JnRL2Sy6geZIFvdtLVPFhME5SgL1793L/XyIiIipZKrTA+v/y
5apVq9Sk4OrVq0+fPt1sNttsNuwmTERXWq1atRD/HzhwgPE/ERERlSy1UpDc
KPKQ2ykpKffffz9mIMp1WFiY3Jmbm8v+f6IrCtU+Ev/joyfxP4t/iIiIqGRJ
SI8VfjTvNsFybbFY5MbYsWMxCiChyC233HL69GnsLEZEVwji/+rVqyP+//nn
nxn/ExERUclCdIFZhwUemndRILnxww8/1K5dG6UIderUWblypc7NJarQsDdH
aGgoUu+jR49iAS6920VEREQVn1rq89ixYzfddJOfh7+//8cff2yxWFA1hFgF
+4sJbBCArYflTqfTyfVCif4LyLjlOjExkfX/REREVDoQ0mNEwGg09uvXT+0R
9re//S03Nxf7CGO+AIoWUDUk90jkL9cmk4lxC9F/ISQkBJ81yb6RZevdIiIi
Iqr4JJhHbI8bck94eHi1atUQltx4442nTp2SFECCfLvdrvr/5bZcS74gEQtu
6/06iMoZ+dTUqFEDQwCHDh3ih4iIiIhKR5GXui3R/sqVK2vXru3vITd27dol
90uCkO+FQQGJ/LFZGPstif4Stf6PWv+T8T8RERGVDone8/LyJPaw2WwS1Wue
bklx9OhR7A4gwUlgYODs2bNRBSRPcLlcTqfTZDLJNZICTBMgosuE+B/9/4L9
/0RERFRqJIyXeB5TABwOh6QA6NWXwD4rK+vee++V4B9ZwOjRo5EgGAwGJAsY
AsC8AL1fB1F54tv/j/X/9W4RERERVRYS80sKIME81h5US4Oizj8vL2/48OFY
ogQzgnNyciTmxxNwLc9n/z/RX4KVeOvXr4/keteuXXq3iIiIiCoL7AiM2gO5
gWIeBCcWiwVze8PDwwMCApAFdOjQ4dSpU9hKDE/DzmJ6vw6i8gSfnWbNmmHf
vc2bN3MQjYiIiPSFxf8lJkGCsHDhwuDgYOxV2rJly8OHDyPyxygAghnNk0Hg
+fhG7iNM9KcQ7Tdv3lw+UJJcb9q0iUk0ERER6QszglGlnJ+fL9d79+5V0xUb
NWq0detWzbN9mDwNuQCWBsK3YFEgdmkS/SmkzPI5wrDa9u3b9W4RERERVXZq
hi+2/UVsf+TIkVatWiEFuOqqq5YtW4bIX/PGMw6HA8kCJgUw/if6U/i8NG3a
NCAgQD5NW7Zs4YeFiIiI9OXbe4+SHswITkxMbNeunUQsWBfoq6++wqwBrBqE
RUExI4D1P0T/CYbJ2rRpg/7/1atX690iIiIiquwkPnG5XJgCjEX+MeG3uLg4
LS2tZ8+eiFvk+r333sNkYXk+Fg7Fl2q/ACL6U+3bt8fnaOnSpaz/JyIiIn1J
qG80GtXWwKjnlxBFAnuHw5GRkdG/f381CvDGG29o3iEDeb48GVuDoTSIiP5I
Pk0333wz5tQj/mcJEBEREekIxfwSwCMLQCSvFvnBQwMHDkT8L8LCwvAcedRk
MiGS4b4ARP+JBPydO3dG/f/8+fP1bg4RERFVdhaLRfPsDqZ5OvaxsKeaFIBJ
wXLjxRdfVKMAffv2xeRfzRPbYAqAri+CqIzCaFqPHj1Q/zNjxgy9W0RERET0
57AikOZJEOS20+l88803/bweffTR3Nzc4uJi9TRMDZb0wWAwaN79glnqTCSf
gj59+qD/PyIiQu/mEBEREf05id6x5j+W+sR0gPHjx6MKKDAwsHv37hkZGRgs
kIckyJHIHxOH1U/guACRfDT69euH/v+JEyey/p+IiIjKJpT9YCKwhPQoE5K4
5fPPP0dPpr+/f7du3c6dO+d0Ok0mk+adL4BnonCI/f9E8ikYNmyYWkSL8T8R
ERGVTdgLzGq1YoUf+dJoNLpcLrvdHhERgVGAoKCg//u//8vKypIEAdU+kghg
KSH5LrPZzDiHSD4XI0eOxEcGK2gRERERlUEo+EEVEJb6xDxf3D916tQqXl27
ds3MzNQ8k4hRDiTXkgjYbDb2/1Mlh5VyR48ejfU/X3zxRb1bRERERPTnJJhH
DK959gXWPBkBSnqE2WzGKEBQUJBc33///Tk5OXInAn6sI8T5v0T4LHzwwQeI
/4cMGcJBMSIiIiqbsCMwohes8CNfSvyPFX6cTqc89NFHH2EIwM/Pr2fPnnI/
in98v4uoMkP/f3h4OOb/Pvnkk4z/iYiIqMxCbz8W9kRhj+YpZtY8U30xKPDp
p58isBEPP/xwXl4e4n81BKDzayDSFeL/adOmYcq8fEb0bhERERHRX4PpAFgd
CBU+Y8eOxYpAolevXpj2K9kB4n+kA5oncVBzhLlfMFUqc+fOxQfkvvvu07xJ
NBEREVG5gDDeYrGgwkeifbvd/vrrr/v5+aHCecCAAUgQ5DnyBOwOoHkSBwwK
YAaB3q+DqJTI2f7999/j09GpUye1uTYRERFRuaBm9VqtVpfLheWA5HrgwIGB
gYEYCHjuuefUdsDyNGwioHnmFOOHcGoAVR7yKVixYkVwcLB8NK6//nrui0dE
RETlC6p6EPabzWbNu1KoBPkPP/ywRDhIAcaPH4/pwJIFaJ4uUPT8Y40g9v9T
JSEfFvkI7Ny5E5+LOnXqcP8vIiIiKl989wVAeT92CpPr3NzcBx98EHUOYsaM
GfJkbBmgnqZ5Mgi9XwRRKUHNW2xsrNoyj+viEhERUfmCjYCdTqfdbkc8LxE+
OvnNZnN6evodd9yBFUElEZgzZ47cL0/GMyXswZqirH+gSgLRfkZGBj4Ucp2V
lYXp80RERETlgprbi+2AUdUjGQHqHOTLxMTEtm3borfz6quvXrFiBWYBqJoH
uc34hyoP1MuFhIRgaCw+Pl7vFhERERH9BVi9BMU8SAHQq6+qmuVGTExM48aN
kQJUrVp13759KBDCo3KD/f9USahlb2vWrIn4f//+/az/JyIiogrAZrOhzh8J
wvbt2yXyR8DTrFkz9Hki7FeLAmnebEL9ENZFUwWj4v9WrVohI167di2nwBAR
EVEFYDabHQ6HmuErAc/ChQtR8CxZwO23356WlqamCWBnYUXzJAI6vwCiK0ZO
+A4dOuDjsGjRIr2bQ0RERFQCVBiPecHypdPpnDx5MmIeue7WrRvux9YA6BRF
IqD9YSCAqCKR8/yBBx7AcNhXX33F+jciIiKqABDYo/5HhTdy48UXX0TYExgY
KLcxccB3OjAjf6rYMF/miSeewAchPDycJzwRERFVDJgCgOVAfVcHxb5g8Mkn
n2CzMECygLEA7otEFQ/Oaon/hw4dKvG/n5/f2LFjOc+FiIiIKgaJ+dUMX6PR
iAV/TCaTwWBo3749dgQIDAxcuHAhyn5wjf5/xP+si6AKRs3/HTVqlJ/Hc889
x/VviYiIqAKwWCxyjSnAWN5EriXyKS4ulocSEhIaNGiAIYAaNWocOHAAz1cp
APv/qaJCb/8XX3yB8//RRx9l/z8RERFVAIj8JYBH8I+qHqFm+65fvz4wMFDi
n6CgoFatWmVnZ2O9UN+NAxgXUcWDSTHz5s1D/H/33XczzyUiIqIKTMX2cmPK
lClYDlSuH3roIbPZjGRBpQCsi6AKBhmxpMNr1qxB/VuzZs24/j8RERFVbBLe
WywWzAgOCwtTKcCbb76JyB87AnBfYKp4UNsm17/88gvWwq1ZsybHuYiIiKgC
czgc6AJFIZDBYLjrrrtUCjB//nx51Ol0SvAvWQA2CCOqSBDtZ2Zm4pyXLCA7
O1vvRhERERFdKSaTCUv9oApagvzTp0+rucDVq1ffv38/uv1Z/08Vj1rqVvLf
0NBQDAEcO3ZM73YRERERXSko+8GKoBL8OxwOi8WyZcsWf3//qlWrSizUunXr
zMxMSROwfYDe7SUqSUhpUQLUqFEjbAGwefNmvdtFREREdAVhU7Di4mKXy4Xh
AAn1J06cqDYFe/zxx51OJ9YL1buxRCUJPf8YAujUqRNO+B9++EHvdhERERFd
KSj+kRt5eXlqUVBs+/vEE0+oiQCTJk2SMMnhcOjdXqISJqc6PgWS5yL+j4iI
0LtRRERERFcQ1vmUKEhCILvdbrFYUBSRkpLSqlUrzIgMDg7es2eP3i0lKmGS
6iL/lXN+2LBh2AJj7NixereLiIiIqLShImLr1q2YBSBatmyZnp6OoQG5xsQB
rB3EuiAqp+QkV9PbP/jgA2S7Q4YMUQ/h9ObMdyIiIqrwsPmvRD4TJkzApsBy
3b9/f8RCWC9UdZzq3Vii/xKCfGS7U6dODQgIkPP8kUce8X2Civ+Z5xIREVHF
pqr9+/TpI0ERBgImT54s92DKpNoajOsCUTnlG/8vXrwY8f+tt96K0xspMON/
IiIiqgwQ80h4L9dnz55t2rSpmghw6NAhhP2YNYmNw/RuL9H/RE7mAwcOoNSt
bt26CPVVdqAx+CciIqKKDrOAbTabxPYSAkVHRwcEBGAtoHbt2knMbzQaUfyv
d0uJ/nvo5EeQn5aWhvg/MDAwKysLQwBqhotKBIiIiIgqJKfTme+BFEAin9df
fx1DAHL9/PPPu1wurJ2uecqB9G4v0X8D8T/q2eS6Ro0aOMN//fVXNTWY8T8R
ERFVBljbR7IAi4cEP3Ldrl07iY6wR+ratWvVxmEsjaByCnVuaguwW265BUMA
S5Ys8S3+Acb/REREVIGhKAJLfcptm81mNpsPHToUFBSEKqDGjRunpqba7XZs
Gax3e4n+G0hdEf/LjV69emGQ6x//+Ida+UdtEKZ3Y4mIiIh0MHHiRHSQhoSE
/O1vf0NchEzhgnoJDgpQ2Ydp7Golq5deegmn91tvvaV5d8dGgRD3uSAiIqLK
SSL8Ll26oEY6MDDw22+/NZlMxcXFmnfLMFRKqy/1bi/RxajYHkt9fvbZZ+j/
HzBgAErgMARW6KV3e4mIiIh0kJSUVL16dYRJtWvXTkhIkADJ5XLl5ORons5/
i8Vit9s5BEDlgpyuiP8l4P/++++R23bq1AlDA3IndgFGVktERERU2aDOZ9q0
adgpSTzxxBNyvwT/kgKozlI1oVLv9hJdArJUnLdbt27Fid2gQQPJYdX+X+qG
3o0lIiIiKm0SFElsb7FY7r///ipec+fORQ8qNgLGkunyNE6ZpDJOTexFkH/y
5Emc0v7+/gaDAX3+KgXQu7FEREREOjCbzU6nU+KiY8eOVa1aVSKl4ODgBg0a
JCcnYxcATAHAwqF6N5bo0tTyPoj2g4KCUAIUGxurwn55CEMAejeWiIiIqLRJ
pGQymRwOh81m+/zzzwMDA9FfOmDAAOwUJo9KpGQ0GuVL1v9QGee7sZfclhO4
devWiP+jo6N9l/1k/T8RERFVTqo7FF/efvvtaiLAokWL5H4UCLFYgsoFifAl
UdU8WwA4nU6z2dyrVy/E/7NmzUJ2gLNaHsIziYiIiCoVzOqVYEkiIrmxd+/e
kJAQxEuNGzfOyMhA/I/Of3aZUtmn5vZik7vXXnsN+eyoUaPkTjmZHQ6HxWJh
SktERESVFiIlg8HgdDolyB8/fjz2AggICBg+fDgqpQWeoHdjiS5Gpaiq1D8i
IgI7XGN7O9+N7Vj/T0RERJUQFvaXcAidovn5+RLnt2nTRq2asm3bNiyczv1S
qexTe9Wp5T3XrVuHvS1atWqldgdWawTp3FwiIiKiUofufTW3F18uXboUwb9c
33XXXSaTCVMAGC9RGYdTVO1bLdeJiYk4mYODg41GIx7iZHYiIiKqtLC3r8T2
ZrMZiYDccDgc/fr1UylAVFQUi/+pXLhgVy85b+V8rlGjBsazjh8/rp6AREC/
lhIRERHpA/U/qnsfi6LIjfj4+Fq1amEiQJ06dZKTk7llEpUvqtq/ffv2SGaX
Ll2KfYFxrXcDiYiIiHQgURCGALAuijCZTEgBpkyZonYEHjJkCAoq9G4v0cWo
qB4RvpzbcqNv375yDgcEBEyYMAELXmnelW+JiIiIKhu1ESpGAdSC//KlJAI3
3XQT1gL19/ffsWMH6yWojMMpqtb/RBbw9ttvI40dMWIE9gVWG4Tp3V4iIiKi
sgKJwNq1a7F2ily3a9dOxUtIENiDSmUQNrNA/I8v58yZg3P4wQcfRMLL4h8i
IiKiC0iMZDKZ5Prxxx9H32lQUFBkZKTqWVWdq6wLorID3fuqkx9Z6rZt2xD/
N2zYEPeoa73bS0RERFSGIEBKTEyUyB8pQKNGjbKysiwWC+YI+D5Tx3YSKb6R
v+bd2y4tLQ0nsGQBubm5mmd4i0MARERERBdQXf2vvvqqmgg8ZswY7AKM/cI0
b8Sld2OJ3P64tg++vPbaazEFeP/+/fn5+Vz8k4iIiOgCEiNJnI9ZwJmZmXXq
1AkJCfH3969WrdqxY8dQQY2wH9GU3u0lOk+t8CPXcqJKlio57P33349p7DNn
zsRSV5rPYkFEREREhFWAJEBCpBQVFaUmAg8cOFDul7wAG4chvtK7vURuKvhH
cqpmqbzyyisYwHrttdfwHG4BQERERORLQiPVsW80GuV227ZtEf8HBQVhLVAh
KQBWWde7vURuvuv/o8IHyelXX32F+P/BBx+UpBVL3TL+JyIiIlJ8p0/ixtKl
S9UsgG7duqkeVAn+GUdR2YHAHnPS5eR0OBxyz/bt21H/06BBA80zaYWT1omI
iIh8SQSFyB9xPtx7770SQUkcFRgYuHjxYnT7y9M4/5fKOIPBEBAQgBQgJSVF
7RGgd7uIiIiIygoJjcxms7qNiQAbN27ELAAJom666SZ0+xcVFbH+n8o4yVVv
vPFGxP9r1qyRjJX1/0RERES+ENKjjzQ/Px97AcidvXr1wiwAsWDBAs0T/6tM
gajM6tu3L07dzz//nJt/EREREV1A1fyoDVU1T2X1/v37UQIkrr/+ekT+7P+n
su/999/HqTt8+HD2/BMRERH9EdZIkdge66UgZLJYLE899RT6UeV61qxZ3P+L
yj7JZH/66SectLfffrtaHYiIiIiIAAukSPBvMplQLCGRP+45dOgQplKKZs2a
GY1Gu92ud3uJLiE+Ph71/1WrVjWbzRwCICIiIvKFAEkCfoPBIDfUYilyQ+4Z
MGBAUFCQhFIhISGRkZHs/6cyTs5hOaVr1aqFvBV7WOvdKCIiIqKyBYU9DocD
i/zbbLZ8D7knNjZWgiiMAjRr1iwvL0/vxhJdDM7bjh07yknr5+f3/fffq5I2
IiIiIroIrAIkeUFYWBhmAUhANWXKFLnf6XRKmmC3241GI8YOWGJNZYectCNH
jsQUgNGjR2s+mwUTERER0X+CzVUlsP/ll1/QlYohAIn8VRWQJAgOh0PzbiJM
pDtU+8ycOVPO2JCQkLvvvpvBPxEREdHlQFEQevv79++P3lS5/uqrrzALWK2s
gqfp3V6i8+TUlaQV9f+1atXKz8/Xu0VERERE5UBhYSEKp+V63759WFA9ICDg
xhtvxOwATBPAkznFksoUs9l89dVXyxkbFBQUExOjd3OIiIiIygGE9BL/I85/
+OGH0aEqicD8+fPlTvT5yxO4KBCVHRi3ktOyS5cugYGBfn5+c+bM4fgUERER
0SVhVi+m98qXGzduVAsB3XbbbU6nE6MAmCPAFIDKCOxkLdevvPJKUFCQnK5y
g1MAiIiIiC4J4b2EUlgRVO7p3LlzFa81a9ago1Wu7XY763+ojMA5KQH/d999
h3O1S5cujP+JiIiILgk9/xJNSfCPFGD58uWqBOjee+/F6IDG+b9UljgcDmxU
ffToUTlXAwMDq1atKiew3u0iIiIiKgdQRyGxk4rz27VrhxRAwqo9e/ag1oKd
q75QEIXdE7CZMmZJI5OS23In9lzGc/Rub0UjRxinpRzw2rVr43Q9ePBgoYc6
Y/F2sG6NiIiISEGkivAVs33lesaMGVhTRa4HDBiAhUAlmmX9j4IDhVDTYDDg
NnZJ0DxZgMlkcrlc+FIOnX4trZjkUKtlqe69917MWPnmm2/UcrVIATRuCkZE
RET0e+ggVV9iLkBOTk69evX8/Pz8/f2vuuqqhIQElFswlFKwLTJu2zzkSFos
FtUvrZ6A9ErXxlZAGLTCgR01ahT6/1988UU1XUXeCwwBqESAiIiIiDRPHIXl
fVC1goBKbo8ZM0bNAh47diyqXPRubBmiokoMBEjMKSmS3IMDJZE/7sHx5KEr
cRLey1FFYc/ChQuxb13Hjh1xp9q0AvE/81YiIiIiRUIjzJpUxRK4JykpKdBD
wqqGDRtKQCsBFeuoFcT/mDEt18gCTCYTFqUvLi7GUZVwNDc3l/3/JU4V9svR
PnHiBGrVQkJCsrOzVWqG0xUpgN7tJSIiIior1OxUVE1gCACLAj322GNqCOC7
775DxYXe7S0r5EChBF2OW1xc3IgRI26//fZatWpJxlS7du2ePXv+85//RNn/
uHHjnnzySb3bW9GofSuQArRo0QIn6ubNm5HDqpMZFUF6t5eIiIiorJAACQXq
gIBWMgKJXffu3evv74+w6sYbb0SNkN7tLSsk+JdDdPbs2aeeekqOT506dR59
9NHRo0e/8847TzzxhCQCfn5+t912W2xs7A033DBs2DC921sxqfL+gQMHYsb6
u++++8dqH+atRERERL4Q80sWYLFYUMSOWcByfccddwQEBCAL2LFjB+MoRY7Y
7t27GzZs2Lhx46ioKIPBoNIoiT8lNZg0aVJISEiTJk1CQ0OnTZumd3srGpyx
WLRKrmfNmoVE9aGHHkJSgHMYz2T9PxEREdElFXl8/fXXfn5+2Ausf//+midZ
cLlcVg/0gatAq0JCMKkqySVFcjqdcnvnzp3Vq1fv1q1bSkqK3I9SE5Uf4fgs
WLAAQalkCnq+hooIeRZSAPny8OHDONR169bNy8vDSrZ4O1j/T0RERHSZJLaX
cLdmzZqBgYESWV1zzTUS62KWK0IvpACaZ70gvRt7pWCGLxb2wXqe8trj4+Pr
1av3yCOPYLYpXj4OiNpMGcMBPXr0kARKIlK9X0cFpGr7Mcm6YcOGSFQPHDig
NgJG4laB81MiIiKikoKSCQmxXnrpJTUL+IsvvlAV19gyGE+u2PMrsbC/vGSn
04khD4n8mzZtmpGRgcj/gp1/0TWNG0899dQtt9zC/ucSh8hfFfbIWyOpFs7S
6dOnYzNrLBDE9f+JiIiILodaXP3AgQMSU2F/1fbt2yPKVTsFqx5vvdt7peCV
Yp0ZzTMmEh0dLYdi3bp1CDLVgcKkac07GoI1/3/88cc1a9ZU4PERvaj4H6uw
yj2ffPIJJqpIzoUzE4fdty6LiIiIiP4TNRdYYqeOHTsi/vfz89u9e7dEuQio
sL9qxa6vRgcyav7lmMiX9913X9euXTXvdAC1gYLmjfnlOfn5+XgI31uB8yMd
+W7sJUd7586dOEWbNGmi3hrNO5JFRERERBeHRWxwY8aMGdhfSYKrgQMHFhcX
q/VC5TkVO/7H5F+8Rgnvz5w5gwoTRJhyKCTUlwgfAwQmk0lyInkaCk6MRiOK
T1AgRCVIFaHJsUXalZ2dHRISghKgEydO+Ib9TAGIiIiILslmsyGmlSgrMzPz
6quvDg4OlsiqevXq586dQ3yLihdEv3q390pRux6gk3/27NmBgYExMTGat7AE
uQ+mCWMvYPT/u1yuC2rUqQSpgSccYejcuTOWq5o7d66quarAySkRERFRyVLB
rYRSYWFh6P+X65kzZ0p861tcUYHrW9QiM1gC6NVXX61du7Yqf8K12mcWy9Hj
mGBkBPOFWf9/JWBUxW63oyBNDvLo0aPlFA0ICHjhhRdw9uI9YgpAREREdEmo
e1eh7J49e1BZIcHVHXfcoXniXlWDoXdjryBE/ljPR2507dq1V69emrf/WfNE
oSryR8057seIAI4hhwBKHM49dZBx8KOjo5Gitm7dGrNXkJlW7FOUiIiIqESg
y1rCJ6fTiSqL66+/HrOARWJiotFoVGuBVuD+f9W9j4L/unXrjho1StX8qK2T
kSAUFxcjEJVHsTOC2qZW55dR4WB5H7X8FGYBpKenh4aGyvkp1/Hx8ar/HxME
iIiIiOgisLeXyWRSG62OGzcOwX9gYKDc1rzr/8hzsDxORYUpAHKdmZkpL3/C
hAmYAS33yA3Un2C4RA4FKqPU7glqdzAqWYj8kVhhCAAbNHTp0gVz1efNm4c3
RS1XRUREREQXgZ5/zRPEYs/f2NhYFFegvkJVxUiaoBbArHjUPFNhNBol93n1
1VclpEThk6o8l2skBUiacGQkNZAv8/Ly2P9c4hD/a96BAAy7iA8//BC7AA8c
OBDvi8b1f4iIiIguAyJYtfoNai06duyI4Equt23bhrirYhe3qCJ/XDdq1Khn
z56SGSEFkMBeon2sg4SVf9ReYPIo1v9EdZDOL6PCQWAvxxb7UKscDbsABAQE
NG/eHHVrPP5ERERElwPl7moJIIS1kZGR6P+XFODll1/WvIGuzm29kjC9V/Ou
MzNs2DB57YcPH0Y/P/r8kSghHZCDhg2/Dh48+Oabb+KHyDN1fREVEIp/ijzU
+kvIuWrUqIFT9Pjx4zhvK/D4FBEREVFJkVBKraAiYa2EVXJ9+vRpFFcHBATU
r18fFRdahV5fRa0zg/Byz549Elj26tULm6NhlgSyJHT+48nr1q275pprunfv
jsm/mAtMJQj1V1j8H6VomjdZe+SRR5ClRkVF4VG9G0tERERUDqglfTAQ4HQ6
EQP37t1bDQFER0drlaC4GgEkMh2bzTZy5Eh5+YMHDzYYDOh8xuKfKJQymUzv
v/9+cHDwQw89lJubq5ap0fk1VDjIqtTgi+92YJMnT8b52bdvX9892oiIiIjo
v/DNN9+ojQAkBsYUy4od32IDLwn1cUMSgf79+8vLb9myZWRk5NGjR41GY05O
zq5duyZMmNCsWbOgoKDPPvsM6ZKaRqH3i6gs5FDv2bPHz6Nu3bro/6/YU1SI
iIiIrqjs7OwqXrVr187Ly3O5XBU4/scMaCz1g2IedCZPmzatYcOG2G1WHZDQ
0NBhw4YlJSWpXYANBoMcH9b/lxqMttSvXx/bVe/cuRNTsPVuFxEREVF5JdHU
Aw88oILe9evXYyUcvdt1pWCDA4kqHQ4HlvTEnrNyv7zwjRs3Tp48efz48eHh
4Rs2bDAajXhIzUjVvBmE3q+jskDB1d///nc5OYODg+V94eRfIiIiov+FRLPT
pk1D/O/v7//qq69iI2C923WloPIHK0yqOb+aJw/C+kioC0KpDzaixTfKnU6n
U749JyenAh+fskaOvxz2iIgIrFLbvXv3ij0+RURERFQKTp8+jeBK1K9fv2LP
b0UYj2J+h8OBRX4w81QCS/Two8JErQKKb8QoAFZPqsDjI2WNHG055idOnMBe
dcHBwdiFQe92EREREZVX6Anv2rWrKnrfsWNHBa5vwQ5TmqdjGctLyss3GAzo
+c/KypInYBM0dW0ymRDzq8V/2P9fmiRlKy4ubt++vZycQUFBP/30E48/ERER
0X8Nof7EiRNV/D927FgUxlRI2ONAgnkU9qPIx+l04gaGAHJzcxHtY48APKRW
DcWXer+OykLyMkT7o0aNCgwMlPNzxIgRejeKiIiIqBxDMBwfH48lQOX6+uuv
17tRVxBm70oAbzQaT5w4kZaWhvVOMSggiQ8mBWONIMBC9Gr+r1YJtkgoO5CI
yY2tW7fKySkpQPPmzZl/EREREf0vEOJ27NgRU4Dl+tdff5U71UQAp9NZHiMu
dO9jPq+q+Zf7d+zY0aNHj+rVq2O847rrrhs3blx2djaierxwlP2wzl93SL7k
7ZB8rU6dOjg/Dx48KG8N9rDGcAyexn0BiIiIiC5JlfqPHj0aUyxFRESE5qmQ
R0iMsAqVMDo29S9B0HhBy+XOjz/+uIoPlJTIC7/pppuOHj2KOn+s9olJwXq/
jspOxfZy+7HHHsMpOnXqVFRk4f3Fo76TtYmIiIjoP8E0WImdduzYoaLiBx98
UKJfLIyv9snVu6V/jQr41bW8on/84x+I+YOCgqr8Qdu2bXNzc+XFqoED9ifr
DmVXyAL+9a9/4Z3q0qWLquPCm6V5h3v0bi8RERFRWYeQSUIpg8FQs2ZN9IdX
q1YtOztb8+6+pHm3YdW5rX8FokE0HtX7ycnJDRs2VNMcQkJCVOQv9/h7vPfe
eyj+ke/Ny8tzOp16v47KDu8j5micPn0a75pcp6enq43qVPxfvk5RIiIiIl0g
QkY/ap8+fSQSRonFypUr5SHstarqZ8pR/2p+fr7D4dA8Lw2VPHPmzFETHFT/
/wUDATfccANGQ+SFl9NZDxUMJqeoNVfvvPNOvIMLFy5UT8D4jpopTEREREQX
gRIXXM+ePRtbLEmI9fzzz2MZHLU9bvmq/1d142oC6QsvvKCyG1wjksRwgLrz
7Nmz8sI1T2bE+h/dYQRKpWPjxo3Dm9WvXz9sBKy6/Vn/Q0RERHSZEOdLeB8X
F4f6H/SE5+bmogtd81mGvbyQl4MFf9RCMWFhYarPH5G/BPx4vSj+QWHJiRMn
MOpR7l5yhaTWoZJ3UN6XPXv24C1r1KhRXl6e5nmj1TP5fhERERFdDqsHYifs
surnIemAWj9HK2/xldq0S12PGTMGQb5a+eeC/n/5Uu6UZEFt9av3i6Dfavux
F7OchHXq1MH5uXv3bt/FP7VyVZ9GREREpC/0ljudzpEjRyIwFlOnTtW89dVY
BUgNB5R9KiZE/7+Ejjt37lRFPiI0NFRN/lVJwQMPPCDfhfoftfyp7w/EukBc
F7TUoOpMbcQm94SFhcmbKOfnW2+9hdEBVfnP+n8iIiKiS0Ioi05UiXuXLVum
guHHH39cIis1QRhrsOjd3suFGh403uVymUwmab+E96j/QQ2JWvxfpTzXXHPN
9u3bsd6pHA3sBazKyzXP4eLQQGlSp5xaCGjNmjU4P2+99VaMT2GIp3yNTxER
ERHpRYW1iKAyMzPVkjjXXnuthM3o8UbQW47mw2KoAiv5oPFOpzMuLq5ly5a+
3f5qRjBqgeRa7pk8ebLZA9MHcHDkUKikAMkFlQJVmYY3Qg6+3FOnTh28iUeP
HkX1GuYIc/8vIiIioktCBTV6uRFrtW/fXnWM//zzz4h1y93iKr7zf9Fpj1zm
/fffVz3/quz/mmuuiYyM/Oijj1R10OOPP56VlSXfJQEnNgKT9EF+IHYH474A
pUlN5VBF/v369UOW+sknn2je+SkX1GsRERER0Z9CTIW+fYRYb775ploeR6Ji
tftqOSr+AbwoeUUOhwM5jsFgaNSokby0+vXrjxkzZsCAASNHjpw+fXp6ejoS
nI0bNzZp0gRZQIsWLXbv3q26nbHapOYZWZCfo/eLqyzU5l8I8uVNNBqNy5cv
RxJ3yy23IOb33QiYiIiIiC4C011VEYXcs2rVKjVPtk+fPhL3qsrqcjTvFcvF
qJgQMeQHH3yAl/bFF1/ghWOMAIE9koWkpKRu3bohAwoNDZ06darKfUwmE1IJ
1pmUGvXuqAndIjs7++qrr8ZUjsTERLVLnZ4NJSIiIionLljQRm4nJydXq1YN
8X/Dhg3z8vLKY88qKv9V6C5xe25ubo0aNQICAq6//nqkA0h51DABvhE3xo4d
i0Vm5CD0798/MzNTbSXGeaalybfsBwMxTqdTbvft2xeVWlOmTFGV/+UoPyUi
IiLSi4RSZrPZbrer9S0lHsYuAIh+jxw5orrHy10Xq1rMU0LEt956C69o9uzZ
alIzEgR5yZIgYIYv7hFr165V80xbtmy5f/9+xKKM/0sZjrkazcF0DHkTMQXg
nnvuUamZ3i0lIiIiKgewuI36EnHUG2+8oeL/iIgItYuWju38q9SYBZKX1NTU
0NDQgIAASW0MBkOhF3r+VRaAV4poU9KBlJSUrl27YpkgiTZnzZqleaqAUCgl
OQW+BT+B809LU0ZGRnBwMEapzp0757tRHRERERFdDkRQiGDnz5+vlscZOHAg
KmTKV3CLgFyt3v/666+j8v9f//qXvBzfJf1R0u9b/4NBEFQQSbLw9ttvq2xo
+PDhco/cr6YPIAvA1rTcF6DUyNF++OGH8b5IiirvBcYF9G4XERERUTng232N
/v+TJ0+iZ1WuW7dujaILvZv512DBH6QA8fHxV111lbyWW2+9FeG65n3VqvNf
1fbj21UWINmB2WxesWJF9erVkRC1adPmyJEjCPjlUUwlwO7JJpNJ1xddicjb
+uWXX2IVoO7du2P4ptwtUUVERERU+nx7wn2XUmzYsCHC3aCgoOTk5PK47g1a
K9fPPfccXouE8SjXUeudap56HpX4aN6DkO+heWc9yHVcXNwdd9yBScGSTcyZ
Mwc7i2GjMeQU5ev4lGty5OW0DPKQFCAtLU3zvndEREREdBEX7K+qpgP06dNH
bZIVHR2NCplyFN+qLv2ff/45NDRUXkvnzp0RpasIX25I9I4bvp3/anaA5q0j
wjfm5OS89NJLyIkkEQgLC9M8swBwcHyLiOhKw+hMjx49cIrOmjUL75Te7SIi
IiIqB3zLYDRPPbzEtJ9++inqf8THH39sNptR8aJ3Yy+XvAS73S5tHjp0KELE
9evXY6FIxOoYAlAL/mg+wx/IHfBMtYgonil3zps3r3r16pgOcPPNNx87dkwV
n7P+v9TgzZozZw7O0vvuu68cnZxEREREOlJ1L75bAMjtDRs2YHKl6NWrl6qZ
0bWxfwFe16FDhzCK0bNnT6fTifELvArMDijw8l0vCD35vvdjNoEkQXKP/Jwj
R45I5B8QECA/uWbNmt99952aAqzzy6408NZkZWWFhobKuxAcHHzixAnW/xAR
ERFdEla5wbqXiGAxQzYtLU0iZ8wCbtCgge8eYeUCQsHHH38c8f/27dvRq6/W
kEfHPm5g6ihCSrnHdy4AJvaqxZHUIjMmk2n48OFqlaSRI0diWVF9X3XlgdEW
ue7fvz82ApgyZYrejSIiIiIqxyQAvvHGGxHcBgQExMbGat7JwmWKquFBd70K
1MWePXtQpfPoo4/a7faS3bcL84LnzZuHbQXkt3Tq1EmOEhIHDDSojEN9i9rE
Vp7A8YL/hRw67Fv3/fffY6BKjr9a9FVltZp3+zC920tERERUDvTr1w+RrVi0
aJGaKVymqKV7JPBzOp3Y7RcV/n369EFkeOjQIYkVVZ1/icC6oPIDDx482KZN
GxylOnXqrFy5UjXAdwOCIg+UCaElGIAoqfZUNnLoUMElrr76aiR6MTExiPbl
2LpcLjV3uxzNWyciIiLSUXh4uKpveffdd8tmJyrWgUG3P7IA+VLCv61bt2Jm
6N///ndE3SaTCdlBiVDdy3KdlZU1cOBA5BqBgYFvvPEGZh+rnmdVUCT3q3VH
UXBVUu2pbNQKrvK2Dho0COuyjhs3TvMcbZXo4ZQog+NWRERERGWNBE7R0dGq
/ueRRx4pm/srqY2J1a5eCPLvvfdeaXnVqlWPHDmCynzMcSip36t6lRHYm83m
r776CoXoomvXromJiZhKoH6pivbVNIQyeDzLC1Xu5XA4Vq9ejcPetm1bPIQ1
rDBGwINMREREdDkkakpKSvL398cU4CZNmpTZenVsTKAqPeTGmjVrEBAOGjQI
q4AiTSjBUFB+mtFoVPMOiouLUQskISjGHerVqydxKdqDQhRMQMCWwZh0XI7W
UyprMCFdLehUp04djL/IW4C6LFQHad5Z23q3l4iIiKgckCCqdu3aCKQloM3J
ySmD9eqqYx/19pqnK75Lly6BgYFXXXXVsWPHEHWj/gd79ZYIVc+PEhRMOJUv
z507169fPxw0acPYsWMRqeJXyzMRi6JAqKQaUzkhwkcWNmLECCz09Prrr7tc
Lkz3UJmX3i0lIiIiKh8kmr377rsR/GMJzTIY/6sYD5UeEl0vX74c4bfEhA4P
RN2qCL9EyI+SH6t5jpLaJgCNkdg+MjJSsg9VC5SSkiIRKWakYicFzduDXVLt
qWwQ1csxlPdXjurGjRtRfNWiRQt5X1CrJo9i7Vb2/xMRERFdEkLZV199VS0B
NG3atDIY/2NbLjUbVGLvdu3aSWuvvvrq06dPa94XgoLwEv/VqpIHAxCqq1+a
tGfPniZNmqgNFDZv3oxnoi79gj3X6K9CQicHE0de3gs52lgFSHIBNb0CNUJl
8LwlIiIiKmsQys6aNUvV/4wcObIMTqVEYI+iegn1586d6+fx9ttvowhE7fCl
Vuy5ouRXqLVGs7KyevTogbqU4ODgDz/8UM2hVnsWyJfSeCQpOOZo7ZVuZ3mn
wns1BeOjjz7CFIABAwYgNVOHugyet0RERERlDSau7tq1Sy0BdO+99+rdqD+B
sn908Mo1luKvUaPGmTNnnE4nYn4sClSy9T8XIb9X8xxArPY5ceLEoKAgzKR+
+OGHMzIyVMe1mpqKsQPMEUaqUgrtLNdU5K+WdYqJiUEJUM2aNVNTU+VdKC4u
xuwA5lNEREREl4T+1czMTFSwSPxft27dMlhHrao7JHieMWMGeoDHjRsnIR/q
glAapMLFK90e1KWbTCbf7YY3b9587bXXYiCgUaNGW7duVXUpEur7bhOg+SwT
SheB81Pt84tMqkePHihX+/rrr+WNwIxv7v9LREREdJkQ7deuXRtl1RK+pqen
692oC6HzH2UzElpLtiKRdnZ2Nh5CX7qqzC+1OBCTglGFgkj13LlzKjqtWrXq
xIkT1ZwFtVOYb0F76bSz/MLwCjr/cQJItP/jjz9iuOquu+7Co2o/aL3bS0RE
RFTWqWUz77zzTpRVSGi9e/duvdt1IbUrQXh4eHBwsLRz8uTJ2OpXLbCPVTqR
BVzp9shBk98uvwsrz6BGHWsTyY0PP/wQowChoaG9e/fOzMxEkqK+F63lEMAl
qcX/5ThjwoXD4ZD89JprrsG5GhcXh7EVzAXWu71EREREZR1Ws5RAdNCgQWoK
wPfff693uy6ELnQJuRs0aIDqGoPBgM5hzAguLi5G73qpFS+puQZyjWU/8/Ly
1D4FmzZtqlu3LmYEN2vWbO/evaj2R+W/XOfm5nJrgMuhxnSw/g+qgF544QVU
rL355pul+aYTERERlXdqWiWWVUFdvdzWu10XQoXPhx9+iNKaqKgoLP/ucDjU
spyYCIBlOUuhSYjnkZjIL5XgX1IAzTPJF8UqKSkp3bp1k9YGBQVJFjBjxgyj
0Sh5Cp55JZYqrXjUsj94u4XkTXLnv//978DAQDlX69evr3nLw9j/T0RERHRJ
qFqRG99++21ISAhSgEGDBundrgtJgCeBH/YpbtasmUSDWPYHIbTanEvzhOWe
3uBLdAgXFP52+TP4CUUF3ssf24PUA+v8a2qmaoFW6H42WmKVy9tvvyNJVRU/
SVv8Bw4akpWTbdUKzPkW9+8tKvT+Ivd3FWrWQs1SqJltuBRYfru47zF6L2Z1
8TwfF/leyeMuc0KBu50XvF73y3S32upz8T04548AXqC6/Cdoz19s1Z811Dun
A7VSqrhLrQEl+eCyZcvwBG4BTERERHRJqnB637596PyX6y5duiCaUvUtpbao
JvIR9avx2zFIMWbMGMxQwKovWE5f8wkvCwuKfC52zzViVOsFFwlr830uFyQC
3m+3awX2/EJ7fpHDWuQ4nwUUnl/PH7flOl+i+QJpod1W6Pl1+RZnUaFcu4pd
+ZbCAqvdanUuXhpdrVa9KkFVq/gFNr++9S9Hj1gkBSiwFtjs8hyHzVWQrxVZ
84uLLI7CXFt+qrPgXLGWXlyQ7crP81yyXdZ0V0GKqyC5uOCsqyDNpWXIpbgg
06llOwty7FqezWqQdKCoMN9WdH6tJHmR0ja5lkYW2rB6krRVXq7VVmSVX1eI
CL+gQJ6mFToKbE6LhNVF+QWaSS5WzWzV8qWR7oNVaJMnWN3frTk0u1OaLGG4
Rdpc4DmY1vMHUOUy8it+S1vcScr5bOJSSdnlk3f/448/Rvz/5JNPlvK8byIi
IqLySy2unpGRIaEUaqrr1q2r+rR9w6pSqK+QlhiNRqfTiZgfhTRms/ncuXN1
6tSRtl1//fV4prfq+4/xv917+UP8X2jx7dm+ZOe/XCTmtRYVSgQtMa4l3xMq
e1dMwmFxTzrWCq2WfLm4f1eBOwLPNxpsBRIDWzWTyWWTmDk/+WT8nbe3c48B
+FcJDa3yz9kzbHYJnPNcBbkuQ3JRRqzh5J7Uw2sS9i44suWfx7Z8dXD1tP0r
pu1dMm33oogdC8O3Lfhk28IPty4Yt/PHT/csnXRwZdSh6H/8sm7Wsc1zEvcs
Tj6wynBiV0HqL668RFd+iis/1WU567JKmpDutEgekekqypVLsZbrsOa6MwWr
odBqtGvnUwCHo7iw0JZvdWc0FotJUgC7XfIFz5vuPoQS5kteYJeLe5hAWm2R
nEGza4X2Ipsn/rf4xv847Cr4943/Lzkoc/kk9UtPT7/qqqswyfrUqVOs/yEi
IiK6HGp/VYljEWCjwD4rK6vQCxMESie4krjOt/8fv1TSgddeew21SQsWLFC5
yR/qPYr+cFHOpwDICBCcu7vm893Xdqvc404ftPN5gSfYL7IUFBnthYaiglyt
AFGx3eawF9q8lTCa1T1CoBXIjyrMt7oHAyRnkWTB6c5KivKNLofFVZjpyo1x
FcS58n4xxK9/fWC3hiFValapImHr3bffMHHMM5NfvCd8yA2Th7b87OkGUc82
nzK0UfiAelHDWkQNbRk5pEXE4OYRg5pEDGrkvgxpHDm0ScTgpnJ/1GD3Q18M
bD5lYIvIodd9GXbTF4NafzGkTeSwm/7x7K1fv9xl0fsPb44YvG/Oq/HrvkjZ
Oy8/cY0r55DLmuDSUlxFGS5bnrRNUgAcB6vJLCG+5ACapDCas1Bzafl2Cdsl
W/IcFvebYrHmmwvc97kv9sJ8p81SZDUVmOVAebKq88ffm4KpciarN/gv4ZVO
sYZqv379cFZMnTqVxT9EREREl0MtXC+3O3TooOL/w4cPo+dfLbxZaiVAap1/
rK4pN5KSkqpVqyat6tixI1IDd0RqsTgcjt9/60Xif5+fX4AClT/G/3jcer5P
u8isFUqE7O4wtxe4S2ukVWb5tdZ8d45QkG+3FTgLzTZLttOS6SrMcWmZTtNZ
l3bOaU0pNiRlHN98eN3XW+a9P//jfjPe7DbhmXafDb/t42Gdn7yzTnNPClCr
SpXmVauMebzl5MHNooY3jhxeL2Jo7X+ENZg6uP7UgQ08YX+TqCGN3ZehDSMH
N5o6uNEXgxpGDZH7G3qeIHc2lsvUgQ0n/72eJAhyQy6Rg5tOG9pcLlFDmn0x
uNmkwa0nPtP2s2HtJ4TdPvnlbt989HT0N+/tWfHl6V+i7dnHXUXnXFq6qzDD
ZTnnMqW6Co2ugiK7JDr5dkeBTQ5LkcUqqYG9yD3xttBdNlRoKdLybZICFJhs
VlOhCfF/oSexshWcT6M8mdT5CQVqkOXi8wX+KpycK1euxOl63XXXYWmgEvsF
RERERBUUJlSiR/1vf/sb6n/EqlWr8Kjv1NpSiP/VTk/ugNOzxn5xcfFzzz2H
Vi1fvlzuwYwA1P+raPNPo31Vl1Lw+3D0Tyt/LhgasBdY3AlCocNe4PDUDXnm
6hba3GUwdptVyy/QDEUF6cUFZ1wFia7svRkH5/+69KO1U4Z+O+q+aWE3RQxp
9cVAdyj+5bCWU55uNGVIy4lDW4c/e+uE5zu/3PfWNnXcKYBcWoRWGTv0nuiv
3tj147v7l487uv6zkzu/PLVj1ukds1N2z03b/13mzwtyjywyHPspL2apIXZp
xs9zzx2anfrvmWf3zTiz58uTOyLjN4YfW/Ppv398e/u3r66ZEbZkylPffdxn
1pj7p4y8c8LwdhOGXOf+vUNbTR7SStogl6nPtI4cfsPkIdeFD2k76/W7l056
etd3b6f9e64rY4fLdMxlPOMyZbnMBqfF5JDsT4605i4Fchc45ZuLrO48qFCT
1MxdAyRvkSf4xyRlZFLucRBP8O+wFOLinkNR4CkkKiy5UQCcIWazuVWrVv4e
69atK6kfTkRERFSBqV59iaaeffZZ7FolWcDMmTMxp1I9QWUBV5RayAV9+9KG
48ePY2Gizp07y/3Yb8tgMKDxfy3+91nSJ7/Q9+Ku+fGE+N7g36q5BwWsRRLY
FlqlKXYJhiUjcBbkOa1Z7ur6/DOWs/sT9i7cOP+9bz54bMKzHT4ZdN2kwa0j
B7WcPrj51AH1ogbVnza4wT+GN1s4ptPKz3ptmv70znkv/rryg7jNkVnHl5/5
edXwx++rE1ClepUqtf2rjBzU/dTh1Skxq1PjotMT1585viotfn1a3MbU2A1n
Y9anHN+QHIPLurOx0anxq84lRp+LX5kauzw1ZllqzJL0mKUZcUsyY5dkxS3J
jV+al7DEEL8kJ2ZR7tH55/Z+eXL9pz8vfH3L9MErJvae/3aXmS+0nTywUcTQ
ZlHDWkwZ0jz8mZaTht/w8ZDWn4e1+/qdhzZ+PSZh07yi03tdhjiX6Yx7XMCa
7czPddnyHRLnW812T6jv7sm3Fqo1i5A0qf5/TQ6V5sh3pwB2iyf4x0SCEuz/
B3n/J0+ejFnhkr2y/p+IiIjokhDko8t9/PjxqKbw9/d/99138ZDm7fYvnX11
Ne+gg1xjkU+1MdmGDRvsdrtE/jYvzbtWj2/876neVxff+N9drY+pwXI739Mv
bSkqche0uGe4WrRCcyFW1PT2YEsEay1yWKz5VnOuezWewjRn2v4Tm2ZsmT7i
ny93njak9eR+Dab+vWHkEAmkW30+9Ibw4TdNe6Xzwk8fXT/ruZ+Xjju7e0b2
4X/lxP6QnbAoM35JRsKyjMTVmSfWp8WuO3NsfXbSnshPXm9cOyC0SpVqflU6
3tRw79ZFZxK3Jh5fdfbU+uQTK08nrjidGH06Yc3phA3JiRvPnNh0JmnrqbiN
8qXcTknYmBy3/kzs2pT4NZIynI1dneq+rEw9vuLs8aXnji+TpCAzdllu7NLs
o4vlkhMjScHy3Ngl6b/OP7N/9oHlH62Z9fx3nz466627P3+2zSeDm04c0jT8
meZfDG31+dNNJz7dYsbIjusihyZviixO3urKT3AZk10FuQ45pPmae10jTbIz
l4T8eMc8h8ue7zliBe6LXS0E9NulRON/ORWRJJ46dSo4OBg7LJw+fbrEfgER
ERFRBYVVdBBNzZ07V9X/PPfcc2rlH8wCVgvdX1HY4xWbPUmrDh48KHGdtKdb
t254gjyKbAXTls8v1PkX4v/fVaefXwL0fPxv8V1+315gdhbkuSfwWk6mx23Z
8uOkr97r93nYnZMGtYkc1HLm4KYzBjaYMbjh18+2/vGdu7dNH5K45uPsg/80
xf6QdXxBTuzSrNiVaTErz8WvORO3Ojl+9amE1afio0/ErJbo/VTM+jNxm1Pj
tybHbtmw6tsONzWTVxjqV6XO1f7/nD7hzIkdJ+KiTyYuP5W41JsCrDsVv14i
/5OxG5ITtpyO3+y5SAqwWS6SBbjHBeLXp8StS41bkxa/Nj3BfTkXG50Ws/pc
7Jr0uLUZcRvOxbnzjrOxa1NjouWh9JiV2fErDHE/5R2dn3Po65MbJ2z9OuyH
jx+MfOGGyc80njK0cWRY8ylDmk/4e5Opz3X4+p2Ht38/PvngMpfhhKswq9ia
IwfHruUXWC1YTNUznqLif/fbgfV/3E8rcG9k4In/L70pw1+Cc0BOkqFDh2LQ
aty4cSX484mIiIgqJDX5V2zevLmKV/fu3X1X/lFjBKXTKklGUG706KOPoiRp
586dmAvg23L39SXif6s70j/PPc2h0GbN14zWgjybzVxUaCmwGt2l7BKeFtk8
ZSrWQkuuy5rpKkx3ZRzO/PcPayKHff1a588GNJ88uOW0YddPGShRccuZL3VY
MenJXfNeTdoSkXPkO4mic4//lBPzk4T9GXFL0uJWpMVFp8WukXg71R2Tr0uJ
XyOXMwlrzsSvk/hfQne5nEqQy+aTcTviD+8a+ESfEEkBqvjJ9Yih/U7GbE9J
2ng6bsXJmGXJ8SvTEjemJW49dXS9pAxn4zenxG06E7vxTKwE/Bs8l3Vp8evx
izy/9HcXzxM2pcZukIu0Ry6SEWTErMmMiZZL9vFVcsn57bIs/ej8hD1R2xeN
XjDlyag37gwPu27SkGZThzT9YnATeeHTRty+fMqgpO1fufJ+dtmTbdYzmmZw
J1LuXQfcR9c9GFNgcVgN9vwcl81YrLnXGnXKW2AtMEuCVeQsqRRAnYpynmzb
tg1L1zZs2BC7v5nNZskTMYucRUFEREREvhAdobAnJiYGwb+EUjfffHOpzfn1
hf2/0Ml/8OBB1CP16dMHmwLInYjosDWAp///wvr/30X+7uDf/U0Fnq2w5KlW
90qeliKbe5crrcBkK/JshiV3WvMc1myXLctlTEze9+PqL1+d9sp9E56+IWJw
y8jBjSMGNZr2TIuFY+7a/c+hZzZ/lvvrnKyjC9NjlqbFrUqNiz7juciNswm/
xfkSeKfGSuC9Kc0deG/wxOfnH3X35yeuO5Ww4WTiphNxm5PidiUd3z/lkw/q
XV1N4v+qVap0ubX17s0/pJ7YmnF6q3zLqWOrU46vy0raceaYe1KAe2qA5yI/
80zsWnd+4b3Ir/C5uO85E7/hTPwmuXa3J+58/H/+ErPOc9mQFrPJc9ksrT2X
tD4lYUVq3E9ZCZLRzD+5bdL2b4Yt+uiBqGEtJj1dX7KAiOfbTHzmhs+eu3VJ
1LATe+a6jLGu/JRi6zm7JcNmyXZoJmeh2X1dZLSazjkKDY4is8mYI++Us9hl
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
isUTqXQ2qtQBH+W/KAICAgICAgKC/3jk+T+m+oMHD87n/zc3N+MeqT+s+Bf4
fzIWyyZTKTEajbQlk9m4lDVa6qjiIqqEuuW2G7JpUQ6zlpVPz6kY8+bMEXMq
Bhnen9bKrG3ntjQ3VDbaNSFa77VVeWm1j8vXqJqVslljjoL2oKOIuwaVCl+g
/WHWHKYtARtKE2riTEGHxrUflILB70Rj5h7e5KKNnF2Px/kt2k9mv/TwbROu
HXtO/97K4HzfYgonzOTjzFOLrrty9Iy7Jvz98SnLFz+/ce1be7ZVuhxb3XSd
YKt2OWp93FYXbUF9B4Q6v1Dj5WqQ5T6DaLmHrXbRJlj6+Grcm0D5xOJhaj3M
Vggftz3o3Onnv6T3WfZsr9r02fKl85559L6Jt98y/ueXjhp0enmfIpTAr6Tx
F5UrK2i9mBo3fMDk2294a+GzFt1HbrYaNfxl9C5O5xF0oGsUdyBz2Gl0saqg
12Szbdm9a9Of/nhNuaJl+pUWPXHvNK99h99WHXKYA3Y14v9d/jzfyvY3FhZZ
4Lt9jCWAEU3W2Ixwo7ycBQRdmNM18voQqw2xhgOC8aBj47Y1Ty2cecH8qSPm
TRm+ZeGd2YO7s3GfFGvpzHbE5HgkFhVjiXQiBcs7bp9IwUtdRD399JNxUWoX
QR9kE4T/ExAQEBAQEPzvIW/vifn/gAED8v6fePxf6nJT/N57lkQ5HkvF4x1S
MiN1JOWsKHb85tc3AgfrfQLlsFUnm/evX3jf/EmjF9xx1lsPnFdf9Wwru+6Q
syrYsLERtbvV+uyaJpcVjeT3MNtBaeo55tld/6tHdFTxlgESG+bQWHHAYVK8
MS1B2tjIGlGKi8Pgc9Yw9Xrg/A1f61aveH3anTcOGdAL6H2/khzPP6FE4f+l
1CXnDp16++9efWbmxo+X7t22xeuoC3LbfHSt22720lbkO2oz+mgTcFRlugHV
DuOa3HzAf/OBanhZVEScq2LgDPAh/ETJ0jG5bXoI5ALEWNx2o7MBqO9WCI+9
1s/AQbd/Zd2wdtXSZx99eOKfbrtg5KhTepfnVUAuiqihA8vvuv36NR/Oqf9G
5eKqXSCUWCvsU2io8gpat6By8uqAt4Zjql96/uGTTyjH13vdRefXf6ncyW5i
/13j/wUj/z8K/w+CoqGRXPIyBo9DFaTVYVoVclTB8xX2VzbyhkbHFmftm28+
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
wSwuz/8VCUD4/1GLLv5vwZkzOOcnN/4PzJ/VwKMBgRbk9aAC3PXwvFA5MEiA
AOr5q/ILVW6uCiSAi6veu0v3u19e3pvKSQCIgaf33fzZ+x5Gqe/OdeYtsBjq
qtIttHjtDvzf/PL/w/9VwP9dfG6oH782qAUAo+qa0TAqugCJSjjzIK9z2baE
ncZG1txiU3/wjz/O/O3ZJ1N4furkxoBfjrWlkqKYzESlNOH/BAQEBAQEBMc7
ZMXPJC5lxFTnHZMrqC62tvbTD+OJSEQSxVRHMpltb0ee/1Iink20dIR3vP3I
RYunnPn2jDGhmmUHGI2Ltlxx6YheZdSJ5VSN/iMvbQ05a4Au+gSjT9jG2Ws9
3K4nH6nopzQFg3j52XuAB3pYs1KJ2d0ltieZNxZEjt3l8lJ6bPDT0+b/pshl
+B/+LP5/gR1Z2a6qAdboZqweZvtDd99RrnQHyLcJe3bWTC+3A56+02GElwR1
HOOMfpuukbH6GwxI03FWt03rYdQhl8HDVBZUIhQutT2zv7prEw5LW0KVC10t
DBRf0J4Xy+i9DiM2mELf2qtaWJVv90dzn7jpoqFlfZVuFPdMruiUU3JCkuVE
TIyiWTClIzaeNcON837qP2ICAgICAgICgu+BJKrrTYhyR1RKX3v9rzD/B4pe
V20UpWg8JUcSKWD9UrxDljJJ8WA2xn82987XJ5355r3n7F/3pOjYDMzt4w/m
l5ZRRcXUHX+5PshtC7K1XofeTauA/7u5Lxn7l3f+bUKfErTb0/pSq995xcNW
KyPAOSefLiJnJJT+OI4uCYCfptOmC7q2+fmdi+Y8e0IZIv+lVFF5cVEv1Nn5
yr27dD7hS4/D5KMNKIOIMYAEaGKrw6zVZzM0u2s9tNbPa910VXcZcs/4Tv7/
/U4blQkEWEuIMaEsJntlwL7pAFf1pW7pPbdfdTKFsoD6FRdts9akkxlJElPp
RN7/EySAKIq4cB6XyRMQEBAQEBAQHB+QU2JC7khnQAUMHja0qKS4SBmq9XoE
KRmPyem4lJETyWw6LbW3ZFON+1Tz5s+8YPaUUZ+/fku0/vPm/So/s+28sQNB
NvTuR+3ZoXbbaprYOn+DIeQ0u1jT/j2G8dde0JUBUrRp3ZtuusZL5zNAfmrW
SuLfjcJ0HU1eAgQFi4+vFmwW3lb34fsLzzilF54CwDF00Cmb1r3rYmr8QrWP
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
+A8fm9hS99UOm8pbq3PTFS8++3eJBP/Gy8/f6XMaPFZj7Qb12FNw2Y9USv11
yiS/Y6OfN7c1+ReHru7d85sv+GHLcOAUQEt+CinAnyx+oQ//gX5Onuyh1wVd
OoE2slstN/7lUjneXSsdM3rsuDFjkV8r5VTXLtSbbzwdEL73cBVuxuB3aP2c
WqDL3LYSXFNkKwtx+iCrC+w/qozkmIf6/vVexuRhTW3+T+QfTxBWBx2V1191
Ntn8K6HEyh+UAWD3p5RKJdVOQUEB6QLa2ScxAAAAAADAbyKeTMQTGbx6uXtn
j0K8yCmRKguKlC3hXalkPBPdmdvtWLP4ntdnDlw8o5+nYklw6zehWtVuYbP1
J+0Jx1NyOXVSvyLOpmGtanpb9eljR+JCDhl1/dXnsttINUXHrj77lm108H/8
BCxjRh9tAv//k0W+8H7/LGBvlX7Hjp1+pjSIu4MaBXsFX7fhonNOIxMBJp47
furUKShzlEkomZS649bL7VaLm6/yOU1OW4nAqhoEk1fcHlLP6/ZWBInRwf8P
ef4X8n8vY8G37N5N6F6ccZgvmTiqCO9txwd1YWExWf+XtO0FxpcA5HK5RCJp
bm6G/v8AAAAAAPxZQP4fTWai8ZiTqRXrnBVSiXLk6BGxeHM6Ec4ltjPGd1+Z
MWrx9IGG129uor9pYDWNrIX5Qf30v+ZKpNiFXp3/mOCwsDb9aaeNIPsiL75g
vMBW+VldI68Piob/X/x/755fWP//E8ZB/F/b4SpA3v/b/scN4lFfWNpdVp2b
rmK2VZ4zfoRSjuv/r7zygiVLXuzZU4FTAAk1dvRJFv1KN2cSeIOH07vtKoHR
iMPC1IK1tGMK0O7/v2OiHPH/Duv/7f6PkoKpN1+uxCeFTCZRkvofiQzlvFKq
A3369GltbYX9vwAAAAAA/JlIJaPRsEpdIo79lSslBdffeF06Hc4ld7fWb33r
oXPmzzjpvYcmhrd9GbKuxqUXdIVts7Z3Lyny/+Gn9GZsNQ66etLFp5Fl0Qsu
OMteV+FltYJtbcCuCtJa0g0+r1t7zZBp/1HbT3/f+i3EUR76/cOqCnFa3GaH
M3h5i4sxW3/WjRzeE/k/Muu77rxVU/7tGWOHKiQUip7dqbeXPuukLeKkYDwz
Dv1WvdPk5zQddo60HV2/7/jpuDOlY/0PSgqWLX66WIZLfySUVCZTyBRt+38R
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
UsRbCIhjJrD22/De3hBr9Nh0Qd7ispVb9B8rxXEYLz17v+CscTNGH2fw2cuD
rPqwvx9ahSLIahqZUmflW/NmjV40a6hbtzAXCaZjqXgiE01m8NRuTCyejOWr
/cnZ/fXXX3fv3h3l9ejUHjVqlNVqJW1+0dPQc/Jjgn/66ae+ffuSTOHBBx9E
j5MMgiwRkOeQIqJO/dACAAAAAOD/Rd4T0G04HB4+fDj66sedfyRSg8HQEo62
xkOuqrdem3PKCzPHTb/8ZOQ/PbsXuOsMIUZc9mfVft4oMLpOFzYIiD8wQpwe
+T/KcIOMQbDrg86KgFNX91NJgTj87sG/3e5iq92MGfk/vkZA450Ch/ctodcX
o54t9W/88JXZpy6eOdi+7vl2/8+2+38siSNClvRJGQ/SdZTaO53OM844gwz8
Kioq+vTTT1tbW9ETkNWT7QCk2qeqqqpr167kKsAzzzxDJgWgVyNbhsmHBlwX
AAAAAIA/NWT9P5vNotvPPvts7+L/KSPw0l8ilcvu5MxvvDp7xAszT5981gnI
f8aMGuxnKupZrc9eTvwf90jvbGGDgPgDo543+Om22b7I/3GGy+k8vHlAryLk
/1OuvUD0f3zkh5x6wVpyuP0fV9lxeNxAiCnZ8fMXr945Fvn/pi/++Uv+T6Qd
2TuxejLzt6mp6Z577lEoFOQ0v/fee0kXILK2nx8QoFaru3TpQp62ZMkS0hYY
PY6eTPYFw74AAAAAAPhTgzwhEolERcaMGUO2CqJbo96QwmSSu4WtJS+/OGPY
8zPPOL0fnn909RXnexlLkNUIdDlukM7qwf8hjrEgI+1w0OjY1rvtGrddhfz/
vDNHFEmps8YNFBwbXLQB5QUBXkyED/P7yft/kF7XYvvmtbnjXp891PL+3w7w
/4To/7GWlhaU1KNbMtKL1PCgO+iU/uKLLwoKCkiaP27cOLvdnmyHFAGiO2Qp
QKlUok8D9HySApAsgHQQ6uzPLQAAAAAAfj/kex99oZeUlFDtjBgxIhbF1/oj
kVgu0YD8f8FdY/89a3xvcf7p3XNuddv0yP/F6Uh4QJKfNXS6sEFA/JFhx/02
kfzj4HCdv8BokP9PueZiJUX17SlxczXI/9Hj6BRA58Jhfz+smqQAAfvaCP3t
wrtPf33OYP3bc37J/4mukz4/pM9nvsgfCTzLsiTZVygUPXv2XLFiBXlaQtws
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
qqqC25dfflmUC546dWpFRUV5efldd92FJ3v06HHkyBHwJ/BgnAvGJyaPUFBQ
UFBQULQ8xHr+LVu2iJqfvXr1Qt0PuAvT/rBq19XVkSVb4P++UDDOl7A73l4y
Y1yfDqT+57Zbrjbr99n1Cg8ndbE5wP9p8p9a+7NT8X8bd+Cqy0YC/79k9AUt
yf8J+edUwP+LuV1VuvWLHhr1zuzh+z59Nu4vBrbfmP83b/0PygWIQwPBS0il
0p49eyYnJ6empg4bNuzQoUM1NTV33nknnElKSrrgggsOHjzYeNQ4Soo11/uh
oKCgoKCg+O3ARby6unrkyJGYrIP1etOmTbhM4zY9Kn/ioJ+f+X+4xKZc+9aM
cX0zmVSGufXmSWb9XgenBP7v0Oc4IQogsoSU/1NrV3Ya/n/luBHA/8de2Bf5
f4vV/8MLOVhZqXHX8aOfvjV7xMqZI37477/igZP4v5+U7jVf8h+ZPHiPWCyG
HcFwUq/XT5o0SSwgXL16NTiNBx54AM+cd955P/74Iyb/a2trwefE4/Fme0MU
FBQUFBQUvxm4jr/99tvA/FG7e9iwYbywOw+0n+j8xOPYCIC5Pkwhkvofvqzk
wFdvzZzQvyPh/zfecBnwf6dBhaIolP9Ta5d2Gv5/2cWDgf9fOW4I1v+7OFUL
6P8I/J+oEpUYdrr2r1o0a8SKmWN02cvjgdJwg/5nhD8L/B9dB3B4PtHJiwPE
gd6/9NJLuI0I/gTIv8vlevDBB7FBoGvXrvv370exUPHpFBQUFBQUFC0MWLit
Vmvnzp1xyYYoID8/H8UAo9EoMH/U7oAlu76+njQL8GShD0bCdXxpdeHON2ZP
GtSF6H9eM/FC4P8uo9rF5gD/dxlkAj+h/J9au7LT8P+LRvQR9H8uAv5v5yRu
g9qlU5zt9wMvQQJtTurVbzWo3loye/iyWRfZ8z6OB0vh193A//lgs/N/lAsG
nxAUgBoCqCEGf+7atatHjx7Y/zt8+PDDhw9PmzYNuwPOP//8ffv28UL4UFdX
12xviIKCgoKCgqIpuPvuuzE7B7dXXHFFbW0tLuJk2q8QBfDCYo2BAPB/kruL
8dFQmZ9TvTbnusHnkflfE8ePAP7vMWpI8b9BCvzfwcoo/6fWzuw0/H/UkJ7A
/2/582UWTg38n/wWzj7/hzcA/N9hkHp1W4pyXl46Z8TSWRd7Dm6MB46Tny0f
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
j1l+LmMItLOEYDAoY1FBQQEGIl3LUwF/XT2BZIEMPjI6iVVQzlzl1LlMBisZ
ssSzljdUbVusY8qXEbth8qfwukLtwDxGKFYs9r/TYziNEqcRdBoBcQHQIjbU
JdYjM5dcWRT05gc9+x3pq9Z89OKbT/1j1EMN3uh+/oRHGr75eIsvX783cemY
wzvnHE3/KkdM5ZSlB3d/nRXqZrs0K3lJRuLizORFB9OWHEpfejB1mWxm2yw5
WJGdtjo7bW1myuqM5FXa8Css6f/1yW2/Tm4fLKZ16K1O2ls6Cx/rLJYRbryl
zbnEE8lIWyo/ZEbaV+YexzgICZ9m7Fou35uzd9X+pMX7EhftSVx4aF/oe8V5
yUpfGXJh5KdNXhLya9JWhMRL09dk7fl2985lWalrDqasytyxJCdxeV6ybMvy
U7/OS1t2KGVRdvLC7JQvsxK/yE9fmPTNlC8nd5/U79LXu50/tut547s3mPx4
6zXTnz60ZW6waHfQk+tzHvYahT75y7jcaal7v1m7fsb7H748dFjvHo/ccH2H
evUbmmn/seVCi9UxWikQZZY/lzPlkevUqXPJJZeItdm3b9/XXntt+vTpYttv
3rxZfHyMAB6LEKhhSeLFcdnSr/6fonadLjp7wrnfRth4ll9jRkbGpk2bFi5c
OG3aNDHvxau66667rrjiivPPPx8dak4uN9CQcv369du3b9+jRw9xxN5++235
S+3YsUPG7WJTTEazYU8wNTXvAkajNVXbunRuhBWwS0pKECOFU2CEWxdpTu9p
mxyrf1CPKemDGRBYG4HJn6x58+aHDh3SP724yZrJjLxlOf7222/Lly9/5513
Pvfccy+99BLy7sQd6Nev3z/+8Q95H3kwxfXDHyIQCFhLGk/ux0EIIb+JmOJi
n+uCnRzY7fZisyQfs4bMAvAIZIhDv48SE41+qBboihUrZDK68cYbb7/99mee
eWbDhg2YZTA6qTgYvj3Ct03+CB634XO5/E6X31Uotr18KTa/wxOUrcgIyoty
0ue2y+Z1u+RLp6fY8DocRQdd7uygP6/Enpy88eNPXu86umfT17rUnvjwuZMf
qftO/2aLJtyd9PWo3B2f5qUszEr66lDa17JlJi3Zn7gUlvz+HUuzk1eKaZ2V
+HV20oqc5DW5KWsPJa0+mLjiUMoK+AWyZSWHFPJNH2G5njx++xpBfnP/9cl7
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
B0hdBTQ=
     "], {{0, 768}, {1024, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{218., Automatic},
   ImageSizeRaw->{1024, 768},
   PlotRange->{{0, 1024}, {0, 768}}]}]], "Text",
 CellChangeTimes->{
  3.7657046782897635`*^9, 3.7657076560725374`*^9, {3.7657197494578285`*^9, 
   3.7657197561987953`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getNinepointcenter", "[", 
    RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "medians", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"medians", "=", 
       RowBox[{"getMedians", "[", 
        RowBox[{"p1", ",", "p2", ",", "p3"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"getCircumcenter", "@@", "medians"}]}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7657047341669097`*^9, 3.765704755293391*^9}, 
   3.765802204573437*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "inRadius0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"inRadius0", "[", 
    RowBox[{"incenter_", ",", "p1_", ",", "p2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ctr", ",", "foot"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"foot", "=", 
       RowBox[{"closestPerp", "[", 
        RowBox[{"incenter", ",", "p1", ",", "p2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"magn", "[", 
       RowBox[{"incenter", "-", "foot"}], "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.765921199908313*^9, 3.765921268107946*^9}, {
   3.7661437745603*^9, 3.7661437753432074`*^9}, 3.766749480455058*^9, {
   3.767905407597924*^9, 3.76790540804473*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"circumRadius0", "[", 
    RowBox[{"circumcenter_", ",", "p1_"}], "]"}], ":=", 
   RowBox[{"magn", "[", 
    RowBox[{"circumcenter", "-", "p1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.766143706839744*^9, 3.766143741727748*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"shoot", " ", "ray", " ", "from", " ", "incenter"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"getFeuerbachpoint", "[", 
     RowBox[{"npc_", ",", "incenter_", ",", "inradius_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "inter", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ray", "[", 
       RowBox[{"incenter", ",", 
        RowBox[{"norm", "[", 
         RowBox[{"incenter", "-", "npc"}], "]"}], ",", "inradius"}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.765920396086056*^9, 3.765920498461627*^9}, {
  3.7659205565901484`*^9, 3.7659205627726126`*^9}, {3.76592059524376*^9, 
  3.765920639757697*^9}, {3.7659207086614256`*^9, 3.765920734197124*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getExcenters", "[", 
    RowBox[{"orbit_", ",", "normals_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"perps", ",", "perpsNeg", ",", "exc"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"perps", "=", 
       RowBox[{"perp", "/@", "normals"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"perpsNeg", "=", 
       RowBox[{"perpNeg", "/@", "normals"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"exc", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"interRays", "[", 
           RowBox[{"#1", ",", "#2", ",", "#3", ",", "#4"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"orbit", ",", "perps", ",", 
           RowBox[{"RotateLeft", "@", "orbit"}], ",", 
           RowBox[{"RotateLeft", "@", "perpsNeg"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "exc"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.765707688664742*^9, 3.765707727912359*^9}, {
  3.7657077730156746`*^9, 3.7657078147932343`*^9}, {3.7657083647133675`*^9, 
  3.7657086023546762`*^9}, {3.766135773631796*^9, 3.7661358384246206`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Gergonne Point:
perspector of ABC and its contact triangle Ta, Tb, Tc\
\>", "Subsubsection",
 CellChangeTimes->{{3.7662395260597963`*^9, 3.7662395583207273`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
JanZ7faDBw96PJ5z585JjpM0V5KtigAAAABeF4VCQcJLLpe7cOGCpJWysjKL
xaIoit517YTiqP7t7e2y7xJUq6urnU5nJBKRvLayCwZFAQAAALBnra+v3717
N51OR6PRw4cPV1RUOByOkZERvevaCfl8frOJbWhoyO/3S16TX6C+vn7zEWzj
4+P0hwQAAACgl7W1tcXFxUQiIfGkrq6uqqqqqalpYmJC77p2QqFQkLyWy+VS
qZTktfb2do/HI3mturpaEqv8IPSHBAAAAKCXTCYzPT3d19cXDAadTqfZbJaJ
ZDKpd107iv6QAAAAAHab5eXlkZGRUCjk9/uPHz9ut9uj0ej8/Lzede2oYn/I
WCwmWdVqtcrvIGHN7XZLfFMUhVH9AQAAAOywa9eu9fT0eL3epqamkydP+ny+
/v7+69ev613Xjir2h7xx40YikdjaztjQ0CC/SSQS2byFTe9KAQAAAOwVc3Nz
kkSsVqvb7Q4EAnu8419xbExFUSSsGQwGo9EokU1+H/ll5LfSu0AAAAAAe8Xl
y5dbW1tNJpPD4Th16pSElNnZ2dXVVb3r0kfxqXMzMzPRaFTymt1ul6RmsVha
Wlp6e3slry0vL6+trUmsk5mfPn2qd8kAAAAAStPFixc9Hs/+/fttNls4HE4m
k0tLSw8ePNC7Ln1I+JIIJkEsk8lIXpPoGgqF3G53TU2NhFnJa5FIZGRkZHFx
UQKdxDqZWe+SAQAAAJSmWCxmt9vLy8stFktHR8fKysr9+/fz+bzedems2B8y
Ho8HAgGz2Sx5TX4iq9Uq8S2RSMhXMoPMpnelAAAAAEpKcUiNgYGB+vr6iooK
m83W29srSe3hw4cbGxuvcmNPnqiyQgmA8v6aNEUV+0MuLCwoihIMBpubm10u
l4S1pqamcDgsH87MzGQyGfpDAgAAAHiFioPVnz9/XmJaZWWlw+EYGhqSz199
7z7JaA8fqvfva++vNgZum2J/SPmV0ul0Mpns7u72+/0S1urq6o4ePep0OqPR
qOQ1+kMCAAAAeIWKj4HeHArSYDC43e54PL4tG8vntaS2sqK9v7YdLIu/ldls
NhqN8otJXlMUhf6QAAAAAF6he/fuzc/Px2Kx06dPHzly5MCBA36//9KlS9uy
sR/9SJ2eVvv61IkJ9e/+Ts1m1UePXpcmtiLJtuPj45LXmpubbTabyWQ6duzY
5viZU1NTN2/elNSWz+dJbQAAAABexq1btyYmJjo6OlpbWxsbGy0Wy9mzZ2dn
Z7dlY6mU2tWlut3q2bPq8LC6sKDevq3ltddKsS1yYGCgra3NbrdLyJW85nQ6
5acbGxuTb7PZLGOzAAAAAHgZ6XRaUZRAIODz+bxer9vt7urqSkmq2g6JhOrz
qUaj2tCghkJqPK7ltWx2W7a1/Yo/neQ1k8lkMBiKj8yWvCaZTu8CAQAAALzG
rl692tnZ6XQ6PR5PS0tLMBgcHh5eWlralo0lk2owqJrNqtOpTfT1ab0iM5lt
2db2W11dnZ2dlbx25swZl8tlNpttNpv8jPIbDg4OXrlyhf6QAAAAAD6xmZkZ
yRo1NTUSN9ra2rq6uiYnJ+/cubMtG5ubUyMR1WrVekIGAtp0PK6NN/J6Wl9f
l7yWTqdHR0fD4bDb7a6vrz906JDJZDpx4oTkNfpDAgAAAPjEEomEz+czGo0N
DQ2hUCgejy8sLGS3qWti8Z41r1frDyl5TVHUdHpbtrWDJJTJ7xaJROx2e1VV
VVlZmeS1YDBIf0gAAAAAL6r4+LDR0dHGxkaDwWCz2aLRqCS127dvP9qmQT8k
l0k6k4zW0qKePKlFtp4e9dq1bdnWDpJsm0qlJK+Fw2GXyyVJzWq1er3e9vb2
/v7+qampzSa2x48f610pAAAAgN1OktrGxobEh8HBQYlp5eXltbW13d3dkikk
qW1s03D6Kytav8dIRG1rU5uatDvXOjvVq1e3ZVs7SH7GzQeLT05O9vT0BINB
SWp2u/3gwYMej+fcuXOS4yTNbVd7JQAAAIASUigUJGLkcrkLFy5IpigrK7NY
LIqibO9WM5l/ec5aKKQ1q1mtWnCbm9veje6g4qj+7e3t8qtKBK6urnY6nZFI
RPLaymt7dx4AAACAHbO+vn737t10Oh2NRg8fPlxRUeFwOEZGRrZ3q/fuqfPz
aiymhsPq8eNqTY165ow6M7O9G91B+Xx+s4ltaGjI7/dLXpPftr6+fvMRbOPj
4/SHBAAAAPDx1tbWFhcXE4mEhIi6urqqqqqmpqaJiYnt3qq6uKg9be3cObWx
UTWZ1NZW9fLl7d3oDioUCpLXcrlcKpWSvNbe3u7xeCSvVVdXSxaWn5r+kAAA
AAA+XiaTmZ6e7uvrCwaDTqfTbDbLRDKZ3N6t5nLabWtzc2pHh3bDmtGojQkp
2a3k0B8SAAAAwCezvLw8MjISCoX8fv/x48ftdns0Gp2fn9/erebzajar5bXz
51WbTa2sVF0udWxsezeqh2J/yFgsJinYarXKLyxhze12S3xTFIVR/QEAAAA8
07Vr13p6erxeb1NT08mTJ30+X39///Xr17d3q4WCltckoXR3q3/8x+pbb6m1
teoHH2zvRvVQ7A9548aNRCKxtQWzoaFBfu1IJLJ5C5velQIAAADYXebm5iQv
WK1Wt9sdCAR2unteX59qNqtvvKG9y3TpKo66qSiKhDWDwWA0GiWyyS8vv/lc
CY2ECQAAAOCVuHz5cmtrq8lkcjgcp06dkigxOzu7urq6Q5v/4AOtTe2tt7T2
te5ura0tn9fa3UpO8Xl2MzMz0WhU8prdbpekZrFYWlpaent7Ja8tLy+vra1J
rJOZnz59qnfJAAAAAPR08eJFj8ezf/9+m80WDoeTyeTS0tKDBw92aPNjY9rd
apWV2p1r589rd7Fls1peKzkSviSCSRDLZDKS1yQUh0Iht9tdU1MjMVnyWiQS
GRkZWVxclEAnsU5m1rtkAAAAAHqKxWJ2u728vNxisXR0dKysrNy/fz+/Y3Ep
kdDGgTQatTEhOzq08SElr5X0aBvF/pDxeDwQCJjNZslr8uNbrVaJb4lEQr6S
GQql2LwIAAAA4CcqDnwxMDBQX19fUVFhs9l6e3slqT18+HBjY2OH6kgm1WBQ
u2HN7VYjETUeVxcW1JJ++lixP+TCwoKiKMFgsLm52eVySVhramoKh8Py4czM
TCaToT8kAAAAsAcVh5Q/f/68xLTKykqHwzE0NCSf72gfvLk5LaNZrarXq4ZC
2hgj09NqJrNDW9dDsT+k/P7pdDqZTHZ3d/v9fglrdXV1R48edTqd0WhU8hr9
IQEAAIA9qPiw5s2hIA0Gg9vtjsfjO11HKqV2dWnNaj6f1sS22bi2x8axLx4F
s9lsNBrlWEheUxSF/pAAAADAHnTv3r35+flYLHb69OkjR44cOHDA7/dfunRp
p+v4+79XJya0u9X++q/VwUE1FlPn56W4nS5DV5Kax8fHJa81NzfbbDaTyXTs
2LHNkTmnpqZu3rwpqS2fz5PaAAAAgL3g1q1bExMTHR0dra2tjY2NFovl7Nmz
s7OzO13Hgwfq0pJ255psWmLawoJ654766NFOl6GrYivnwMBAW1ub3W6X+Cx5
zel0ykEZGxuTb7PZ7M6N+gIAAABAP+l0WlGUQCDg8/m8Xq/b7e7q6kqlUjtd
R6GgPn6sDf9YfMmfe7UJqXhQJK+ZTCaDwVB8ZLbktVxJD5IJAAAAYNPVq1c7
OzudTqfH42lpaQkGg8PDw0tLSztdx5Mn6saGFtCKL/lzrw6psbq6Ojs7K3nt
zJkzLpfLbDbbbDY5QHJ0BgcHr1y5Qn9IAAAAoOTNzMxIIqipqZFQ0NbW1tXV
NTk5eefOnZ2u4+lTLZpJ+ii+5M+9Olj9+vq65LV0Oj06OhoOh91ud319/aFD
h0wm04kTJySv0R8SAAAAKHmJRMLn8xmNxoaGhlAoFI/HFxYWsiX9gLPXiIQy
OSKRSMRut1dVVZWVlUleCwaD9IcEAAAASlXxIV+jo6ONjY0Gg8Fms0WjUUlq
t2/ffrTHRvbYtSQ1p1IpyWvhcNjlcklSs1qtXq+3vb29v79/ampqs4nt8ePH
elcKAAAA4NWQpLaxsSEX+YODgxLTysvLa2tru7u75cpfkpp8pXeB0MgB2nxk
+eTkZE9PTzAYlKRmt9sPHjzo8XjOnTsnOU7SHC2hAAAAQMkoFAoSBHK53IUL
F+TKv6yszGKxKIqid114tuKo/u3t7XK8JFxXV1c7nc5IJCJ5bWWPPT0cAAAA
KGHr6+t3795Np9PRaPTw4cMVFRUOh2NkZETvuvBs+Xx+s4ltaGjI7/dLXpOj
Vl9fv/kItvHxcfpDAgAAAKVhbW1tcXExkUjIpX5dXV1VVVVTU9PExITedeHZ
CoWC5LVcLpdKpSSvtbe3ezweyWvV1dWSsuUg0h8SAAAAKA2ZTGZ6erqvry8Y
DDqdTrPZLBPJZFLvuvAT0B8SAAAAKG3Ly8sjIyOhUMjv9x8/ftxut0ej0fn5
eb3rwk9Q7A8Zi8UkX1utVjl2EtbcbrfEN0VRGNUfAAAAeK1du3atp6fH6/U2
NTWdPHnS5/P19/dfv35d77rwExT7Q964cSORSGxtG21oaJDjGIlENm9h07tS
AAAAAJ/E3NycXNVbrVa32x0IBOhE99opjuepKIqENYPBYDQaJbLJMZWjKcdX
7wIBAAAAfBKXL19ubW01mUwOh+PUqVNywT87O7u6uqp3XXhexSflzczMRKNR
yWt2u12SmsViaWlp6e3tlby2vLy8trYmsU5mfvr0qd4lAwAAAPjJLl686PF4
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
Pp/X63W73V1dXSlGRMQeUDz5Ja+ZTCaDwVB8ZLbkNcl0ehcIAACAPe3q1aud
nZ1Op9Pj8bS0tASDweHh4SWeNYY9YHV1dXZ2VvLamTNnXC6X2Wy22WzyjyD/
BYODg1euXKE/JAAAAHQ0MzMjV6o1NTVysdrW1tbV1TU5OXnnzh296wK23fr6
uuS1dDo9OjoaDofdbnd9ff2hQ4dMJtOJEyckr9EfEgAAADpKJBI+n89oNDY0
NIRCoXg8vrCwIBeoetcF7BwJZXLmRyIRu91eVVVVVlYmeS0YDNIfEgAAADuv
+PCp0dHRxsZGg8Fgs9mi0agktdu3bz969EjvArG9CgU1n9ceVvDggbq2pko6
v3dPXV1VMxlJLmo6raZS6vXr2nPn5M/bt7WvZB6ZU+aXpWTZUuobmM1mU6mU
5LVwOOxyuSSpWa1Wr9fb3t7e398/NTW12cT2+PFjvSsFAABA6ZOktrGxIRef
g4ODEtPKy8tra2u7u7vlilSSmnyld4HYXpK2JHxJEJM4trioLiyo8/Pq7Kw6
Pa3G46qiqF1dan+/Ojys/Tk5qX0l88icm/FNli2lvoHyj7D5aPjJycmenp5g
MChJzW63Hzx40OPxnDt3TnKcpDlanAEAALADCoWCXKDmcrkLFy7IFWlZWZnF
YlHkGh17Qy6nZa65OTWZVBMJLZHFYlpG6+tTIxE1EFDdbtXnU4NB7U8JbvKV
zCNzyvyylCxbkn0Di6P6t7e3y/9FeXl5dXW10+mMRCKS1+QrvQsEAABA6Vtf
X7979246nY5Go4cPH66oqHA4HCMjI3rXhY/YfGp3Pq8+eqT1P8xmf/y6c0dr
5EqlfvzabBqTMHX5snrpkhasJibUixc/EsT6+9XBQW36/ffVCxfUjg713Dk1
HFZDIfXsWW1CopkENIlpEtaamlS/X/vz1Cn19GltHplB5peluru19chqh4a0
CVmzrFP+lG3JFmW7snWpQSqReqQqqW1rqem0FvcyGa135b17u6iDZT6f32xi
Gxoa8vv9ktfkv6O+vn7zEWzj4+Ml3B/y7l3tSMlxHBvT2lIlkstRu3pVO17y
LtPyiXwu38o8ctDlXJLj/sEH2idyuIuv4vlWnEfOhOVl7cjyzHkAAIDnsba2
tri4mEgk5BK0rq6uqqqqqalpQi6ysZvIxe3Dh+r9+/8SzRYWfvySy+bhYa3N
q/iKRrXAJdmqtVULWRK4JG15PFrssttVi0U1m9Xvflc9dEibtlrVhgbV6VQd
DvXIEW26sVE9cUJrU5MFvV5tKVlW1iB/yoTLpc0jc8r8m0sdPaqttrZWW6Gs
WdYpf25dSmqQSqQeqUpq21rqZjvd9PS/5Ljd08GyUChIXsvlcqlUSvJae3u7
x+ORvFZdXe1wOOSfpYT7Q8qxkCMlx1GOtRw7ie1y1Do7teMl7zItn8jn8q3M
IwddziU57nICyCdyuIuv4vlWnEeWGhnRTmM5melhDQAA8BNlMpnp6em+vr5g
MOh0Os1ms0wkk0m968JHSGyRS1yJMBJn5OBIwCm+5BJacpBcGBdfxURmMqkH
DqhGo1pVpe7frxoManm5WlamvvGGum+f+uab2rR8Ip/LPMWXLCgJbusKiy/5
XL7dOrOstrJSW8lbb2krlDUX1ylfyXZlHqlBKtma44oviYRy5b+1PW63dbDc
g/0h5VjIkZLjKEdWjp0cdDlqEszleMm7TMsn8rl8K/PIQZdzSY67nADyydZz
o3i+Feeprlbb27UjKydzKd3qCAAAsE2Wl5dHRkZCoZDf7z9+/Ljdbo9Go/Pz
83rXVfqKwzCurmp9w1KpH984NjamdSrb2lmx2JHs/Hmt/2EopGWcjg4tqZ09
qzVYyIX08eNaY5bXq73LtHzicmktX1sbwmw29Y//+CMta5vpaWuDSPH2tH/9
KvaNLL4229qe2bJW3Lq8y/RmW9uJEx9p6StuLhzWduQ5O1heuqS1/sgvtrSk
NTVms1rv0G1qqSn2h4zFYsFg0Gq1yv+IhDW32y3xTVGUkhnV/5/+SeuAmslo
Z1pjoxa0v/c97TA9s2VNDrHMIEHsi19Uf+qntCz2zjvaSbX13JCVyPl28KD6
7rvqV7+qvv22dm5cuEDLGgAAwPO6du1aT0+P1+ttamo6efKkz+fr7++/fv26
3nWVvuIwjJI7RkY+EoUk2kj22Rqp5KJXIs/WBFRMOpLUJAFt7XbY2qrdWbY1
AckF9l//9b+EvoGBj8TAYntW8bXZsLX1zrLiqxgni6+LF7Vo+cxIJX/Ktf3W
m+Bk4syZf6lZSpWaJVpKwYGAtgtybf+cHSxlcVmV/GLDw1ov0IUF7ZkC2/SU
iWJ/yBs3biQSia1t0A0NDfL/EolENm9h25bN7yBJahJ+p6fV3l7tFJKfuq3t
/2PvbKDaPK88n87udOac7LTD7Om47Xq7OUxbk8kwaapJYrIemnFIGkhTNU2V
bCCOFUpVAcKyojIqoRgbE0ZDiIoRlKhUJQ4QAwaiYDAY7GA+TQgBg2NkTPEH
wQQzLjhAjDEm7/5vRR/jQBy+JcH9HR2OEEJ6P55H5/703PdeGi2zXrOGkyiX
k6x9+cvka7ffLj36qPTSSzeNjfJyGgOws1276Az6+NC5O3iQr1ljGIZhGIaZ
K83NzYg2VSqVwWAwGo2rOLnL1RBlGGE3MJrpSYbe3pRUNt9kRSE+jsTC6amS
IqtwdHTlqnZARaFR0zfD0QhgeumShSVYBgSQuOG/8Dp4Qbwy3mi5rx4TdVNt
NhtkTSaT+fn5QdkwdzBrMI+W9+2Xn54eMjWMHBzSzEw6TTiwn/VJIFIlxQ2/
fqqILEYaxhtGHV4HwxLnF+eLM6wZhmEYhmHmTl1dXWJiolwu12q1ycnJCESb
mpp6e3udvV3OxrHMgMgSP3F/oYyN0YrP9JqNjY1UI7G0lNYssrJuMpfISFo4
W3CyYm4urZeJkh3Ti5A4rhJC5LySKxrY8XPnbtqMpiZaCMPmlZTQps43wfLZ
Z+m+oxyKQ07j42n1x7F0uG/fTQUMT5yg5FIICM7elStLsDuiI2FjY6PVaoWv
aTQamJpSqYyPj8/Ly4OvdXV1DQwMQOvw5MnJySV41xWkr49WzTAyy8roMOI0
Ybh+SoHFeIbN4YxAov/+78mgodU4Wfiv6ThKmGLU4by/9hqdMpxovCbDMAzD
MAwzR44cORIdHe3j46NWq9PT0xsaGjo7Oy8tQk9WCTCrAwfIH/AT9xeKEBZR
szElhTIA4SBhYSRl06s3QD327KEwGBIH9ZhvsiL05OTJG8Xwp5f3F5XwET+v
mEOIwF7cenvpaDgacGNT55tgmZdHhyUn54bZieqUOJLwuOkFDKGukA5I6+Js
+waQLygYRKynpwe+ZrPZzGazwWAICgrSarXwNYvFUlZW1tHRAaGD1k24W57f
wACV4sSRh1u9//5UQc5PtSYQ4xnH39+fVn7Xr59a68RhxyCfDkYajgFG3enT
dCpvvVTHMAzDMAzDzKS0tFSj0Xh6eiqVyszMzO7u7osXL45wpTaYA+LRRWdu
iVRAUbMxKIgqM3h6Sl5etB4xPanPbCYvc51CiK6GKIkJocDxNBpJcnE8pxce
FAUMY2LoeELx4GtQ1yVE5ENWVlYajUaFQgFfw/RRqVTQt+rqavwJTxh3Ype4
BSHycm8x/MR4xuHFML7tNjrsOP444HCxz0oFFf+1AtmqDMMwDMMwqwBRNqGw
sDAsLMzLy0utVufl5cHUhoaGxrhS25EjtGzj40M/cX82xMLB8DCtSsAIurpo
eWt6y+C8PCqygTg2OZmWHhDi6vW0pja9Zogol1FWRosaTm8x5rKIZnMdHXSE
cXhxbFNSbio8GBJCJUqmN/LGwc/JoSfj8FZVkXm3tNC6Ho5zXx8tFc13wVHk
Q7a3t9tsNpPJtGvXLr1eD1mLjY1NT0/Hg42NjT09Pe6VDykq3txi+J0/T0ce
Y3XbNun++0nWNmygSiO3TnEU63HLVweGYRiGYRhmNSEKkmdlZUHTvL29tVpt
cXExHnfHDK6l58ABiv7Xr6efuD8b4pKcCxdIH44dIx3Izb2pZbAwMlG1PimJ
1CwzkzyuuPimQvRwvd7eGymLzKdwHHAcHKgxwn67nYoTNjbeVHgwI4P0zWiU
du6k/gU6HSVJqlR0LnAiYHDQN6uV8ktx5GFtsI/5Xson8iExg+x2e0NDw759
+xISEiBroaGh27Zt0+l0VqsVvuZe+ZCil8Qthl9nJ2Xz4hhu3Uq1+iFr3t60
uIkDDh3GGZkVkRC7fB0WGIZhGIZhVhOi1a+jFKRMJjMYDJWIXxkH+fmUA4lg
FD9xfzZEsTvEqPAFPMtsprWz6S2DvbwoW0xUbkRMm51NT+a+wEuLOBft7XSZ
G3wZXqzR0JHH8cdZmH4u8Dj+iufgmXj+4otkinmkUCj8/Pwwm+BrNpvNTfMh
b0FbGw1gjGS5nNbUMD9ksqkcSL4ejWEYhmEYZqno6+traWkpLS3ds2dPRERE
QEBAQkJCTU2Ns7fLZXjrLcqoW7fuky3PXc/ed+3i4OULI33nxxGOnjxJKzIN
DdLhw7SakJNDKzVpaTe1D4uIoP8ODKRlHeibqNyI59fW0jIc9wVeWsQq5/nz
dHYgDgUFdF5w5HFGtFpaWYNTOCpJRkXRuhvEOSWFVuJwBvHkkhL6r7o6+nfY
97lztH43x45g3d3dFRUV8LVdu3ap1Wq5XL59+3ZHbdX6+vrTp0/D2kZGRlaB
tTU10VDHwXzwQemOO0jWNm2i4wntxXHr63P29jEMwzAMw6wKzp49W1VVlZmZ
mZiYGBkZqVQq09LSmhCKMQ4OHaJERm/v6z9Tj1uzrpzs7mm+2Fo3Ot0CYGEI
/mFkwcFSaOjsFgA7g9M5Kje2t8/bApg5Iq4fvHyZlGG6U1dVUXqqQ6sdZSRn
OrW40i0xkU7ufJ1arFMXFhYmJSVpNJqIiAj4mk6nw7Q6dOgQ/trf378K6vbU
1NDRCwiQ7rlH+upXSdYeeYQyezG2ocl8PRrDMAzDMMySYLfbbTab0WiMi4uL
iYkxGAzZ2dlt3ANJUF1NqXJ+ftcidFd+k/lRVfP7xd0H3xhc4fw6ZgkRTZ9n
ZquuX08nUSaj7D6cxAVnq4ppBV+Ty+UymUy0zIavDbp/ic/KSlJaUXsTsoYj
lpnJQ51hGIZhGGYpOX78+N69e3U6XXR0dHx8vMlkKikp6VxEQzG3ZmblitOv
H+sON529V3HqR4a2cMs7/1FZ8h/tvzf2L2vlCmZZcfQ5n7UOTHAwLa7hbOJU
4uTeug6MqJc48+T29vY2NTXB11JSUvR6vUKhUKvVmGKYX0VFRa2trW6aDykm
yJtvUs0cmNo3viF9/evSunV09OC/PNQZhmEYhmGWkMbGRsSTQUFBCCmTkpKy
s7Nra2vPQzDWJDNrwpfGNVf8xFK1QVUqi9n/b+a9j+ebgxpeCv1gWWvCM8vK
lSvka4vvsODoFzZrhuTw8DB8zW63l5eXp6enGwyGsLCwLVu2yOXyHTt2wNfc
NB9STBAcpWeeoTU1mNo3v0nrkjqddPAgD3WGYRiGYZilpLq6Oi4uzs/PLzw8
3Gw2V1ZWtre396/VhrUzuy0n/7Q9/V+zM79qMK+LS/h704tfsei/UxnxWPey
dltmnIXoBw1xw8m9de9yUfnwFhmSkDLMKYvFotFofH19PTw84Gsmk8lN8yHF
BElNlfz9Kftx3To6LH5+tAqJWcMwDMMwDMMsHtEiqry8PDIyUiaTqdVqq9UK
Uzt37tzltVEgQBSjuHRJOnOGEtuOHqX0RQThe/ZQiQnEn+awjuwnCkp94mwb
E/bfn/jGfabXnz5g/eVpPCc3l5bSYGqdnfQKzCpA9INuaqKTC2FPSaElVI2G
buHhU2UkYWpQdbg8hC4zkzq7vf02KR5GQl/fTYmR/f39bW1t8LX09HS9Xg9T
U6lUMTExqampBQUF9fX1jiW20dFRZ+/6nHBkkDY0SPHx0ubNJGvf+Ib0r/9K
SosD1di4BG8hMi0dJwKzkjtoMwzDMAyz1oCpjY2NIUQsKiqCpnl6eoaEhOzb
tw9xI0xtbG2Ukhdl3hF/VlVRZA5B02qpQkhwMN1BQJ6u67T97EBToOm9ZxKP
/7+EE0/Fte0oaM3pQGR+4gTl0fX0UAR75Yqzd4ZZCkQ/6N5eOrkwBQgIxkZp
Ka215effqCQJkYeyweCUSkqVTEigx0tKKAN2emIkppij6XxtbW1ubq7JZIKp
aTSawMDA6OjojIwMeBxszl3WsnFYoLE4FJGR0gMPkKx9+9vSD35AArt3L7Um
Xzwi07K9nRYuMStrasjXGIZhGIZh1g7j4+MIIwcHB3NychA3enh4KJVKG4Kw
tYRooNzQQOsjiL2haTIZXYmDn7iPR377y+4jL1aei7YMvGj6+Jd/CtARPnK1
zLXHzBRZlYrS/zw9JR8fqoWIXyFx0LpZEyNFVf/U1FTMOE9PT39/f51OZ7FY
4GvdbtJGGpsJgYKWYmcxRyBr3t60rIajgQ8Pu30J3kIcZ8cb8YRjGIZhGGYN
Mjw8fOHCBbvdbrVag4ODvby8tFptWVmZs7drJbh8mb6oR/hXW0tLITk5VC8i
IeGmflt6PZUBRJR4+PfnT6TXDiRnfxSXfPUX0RSkIoJsbnb2TjArzcziM6J9
gyNDEj+jo2lxFo8XFFBKLcbYmTO08Do+jv8d+fDDi5Cy4uLihIQE+BrmXVhY
mKMFW0VFhVvkQ548SbuGvX76aemuu0jW7rtP2raNZgqOyZKsf4nFu/R0SkDl
CccwDMMwzBpkYGCgo6OjuroagWJoaKivr29sbGxVVZWzt2slQEhZU0PhJXQM
Uja9FbKj0B/0DRKH4JOC7boLF0ubPn7DdvXlPde362m9zWSipThmjTGzrQMM
AkZWWkrLskYjpQKq1dJzz9EY0WrJ2jDGMKU6O2kBd3j4GnxtcHCwra0Nvpaa
mhodHQ1f8/f312q1mIZukQ/Z0kJtKaCljz5KRSAhaw8+KO3aRauNcFgcmcUj
fBBzExOTJxzDMAzDMGuQnp6eY8eO5efnm0wmnU6nUChwp2FthERQMETRsyY9
IurGMbipsS+CZ8fFM2YzLZ9w2TtmBvMaUW6dD4l9gTph13x8qIE4ZM3fnypD
zrdp+FzeQi6nwps84RiGYRiGWYN0dXWVlZWZzeaEhISoqCiNRmO1WltaWpy9
XUsPgmRHWbnjx2lBbY7rIDca+zqSJuFrViv9A6JwhOBwN4b5M7dYq8VIs1io
Mkl5uVRfT1r3/vujHR39dnv3W2+VJiW9olKpMPsgawaDAfpms9lcuao/Jkhs
LPUy8PYmWbv9dpo+mFCzNpubF/hfTDVM1YoKmoxBQVS3ZNMmeiMc0kOHlm4f
GIZhGIZhXJ4TJ07k5ubGxMTExsbu3LkzLi6uoKDg5MmTzt6upQfhHyJk2NXe
vZTlOMcrjG409hVB5L59FIJ7etJ/QvkY5s/c4ipInY7Gi0pFgy05mYTu0KFr
LS2jH3wwePz4qSNHqqevboeHh2MmWiwWxyVszt6tWSgro282vLxoHkDW1q2j
Ypj799/UrWBhiC9FMBlx6PCyjz4q3X03vQWm3VtvLd0+MAzDMAzDuDzNzc2I
CVUqlcFgMBqNbpGCtTBEWTmEzf7+c63dNws2G0WQHh70c42VzWTmyMz6oqKn
Nn7i/vTEyMHB8cFBqshqs9kgazKZzM/PD8qGWYn52OySNTXEJIBDQdaW8KsL
kW6M4xMXd6PS5m230eJdfv4SvAXDMAzDMIy7UFdXl5iYKJfLtVptcnIywsWm
pqbe3l5nb9diEetgnZ1UUw6x37591K43JoZkDRFgYCAtDcTHz94V61bgtRBq
cxok89nM7NxnMtF4geBg7DkaamPspaeTfZSVTdTXj7W3j771VuOePVb4mkaj
gakplcr4+Pi8vDz4WldX18DAwPj4+MTExOTUWq8TENMKJgV1uv12MjVvbzLQ
2FhpSeoSnT1Lr4PXx8Q0m+m4bd1KK2uQtSeekLKylmDxjmEYhmEYxl04cuRI
dHS0j4+PWq1OT09vaGjo7Oy8dOmSs7drsYhkKohYWhrFydu306VmiJYRJ8fF
UTEE6FtFBZXyQ0Td1zfnIFAUPuDidMxnAJ3CQBofp2TaM2coMbK6mlaj4CAY
NTExtA4VGkoDEu62c+dkRsZEael4Scl5+JrNZjObzQaDISgoSKvVwtcsFktZ
WVlHR8fo6OjY2NiE80RFTCvshb+/9MUv3lgrTEmhvuGLRxSBhKlBcktLpago
umYNsvb441JGxhJcFscwDMMwDOMulJaWajQaT09PpVKZmZnZ3d198eLFkSWp
5uZURDIVokoImkxGSY+IKv38SNYQM8PRurulhRRvECX/uEcvM2dEi2fYB8Yk
HE0upzEJ2YH1YExaLPjTeHs75UNWVlYajUaFQgFfw8RUqVTQt+rqavwJvjY+
VZ/UCYhpBd/EbIJAbdhAO7KEswET09FrWyQnp6bSIVqOgpMMwzAMwzCuCeI9
GBliv8LCwrCwMC8vL7VanZeXB1MbGhoac7evrUV2VlcXJTROX8XYsYPW1OBr
4eEUUsbFUYGRqioK+fD8hYR8ouQffi5J919mDSBaaWN8lpSQjyQkUHlDjMyw
MLoD/UlKmsjIGMvPH01Pb4+Pf1One2Xbtp1hYXrIWmxsbHp6us1ma2xs7Onp
cVY+5PnzVDsFY3/bNun++0mgvL1pWc1opBlnty/8lYeHqQs2XkFcrYZ3OXaM
jlhGBq2p4b0eeYTKbMIWsRmY7wzDMAzDMKsVmFp/f393d3dWVhY0zdvbW6vV
FhcX43Hn5lktDJGdVVZGlfUR6cHLYGeIhGFq8DVYGyJAxJPwuNZWui5mcJBM
bSFrFKLkH35yyMjMDdFKu6+P0m6bm6W335aKimhYJiZKkZE0VoODJ0NCJlSq
cb3+4s6ddpPp2M6db+j1CZC10NDQbdu26XQ6q9UKX3NWPiS2HKY5/ToymYxW
weCekKzF1CWCqTU10QzNzydNw2HBC546RUcsK4uuVsN7bd5MF/o1NNBmuH+m
NsMwDMMwzGciGvI6SkHKZDKDwVDptuUyZjas9vWlHDNEkoiBEVviT3gCnsYw
LoJIjISeGAw0aDFivb0pMVIup4U2PG42N8fE0AxVKBR+fn6Yp/A1m83mrHxI
kQKMLdywgQRq40bphRdoU48dk3p6Fv7KdjuZmuhGN33C4leFgt4LkxqHhecy
wzAMwzCrnr6+vpaWltLS0j179kRERAQEBCQkJNTU1Dh7u+bEzEWKgwenOlxH
R1OCFgRNraY1NUSVaWm0FoDojtfBGJdCJEZCc2BAcXGUDBkSQmKiUk310Y6K
6g4LqwwKsjz5ZPxjj2176KFn1Op/T0oyw9fq6+tPnz4NaxsZGVkmaxMTbWCA
pg98qrBQ2rWLthBeuX49CdTdd9Mqm8kkvfEGZRfjOb29lNM4R0QllnffpXRH
jYayQ/fuJSNrapJOn76p8iRkTaejY1VbS5mQDMMwDMMwq5WzZ89WVVVlZmYm
JiZGRkYqlcq0tLQmhEfuwMzLfxDohodTRBccTAX5Y2KoNt2+fVMhH4QOIR9M
zd0uxWNWM0KFPvhgqlxkUREJCxxNNJh47rnBp5/ulsubn3jiwI9//Nuf/GTn
li3R8DWdTocJe+jQoe7u7v7+/mWqCCQmWkcH+ZHNRib17LO0YO3pSU3WIGvf
+pb0gx/Q1uJP2Hg8BzNu7q0/RI+DI0foFeRyMtb0dJq5eEe8VHs7FRXB1F63
jmTNUXgEsx6TmmEYhmEYZrVit9ttNpvRaIyLi4uJiTEYDNnZ2W1uUttwLoX1
FnkFDcOsPDOzecVNLu955pm6kJB98LWHHnpGJpOJltnwtcGFVDX9fMREg0hm
Z5NFKpWU9whNu/12qtsPWVu/nqbe9NXAeVUaEd3D8V+YudPzlsUNr4nXn95P
nOuwMgzDMAyzujl+/PjevXt1Ol10dHR8fLzJZCopKel0yW+rZ7asOnqUOjHB
yJKSqBUvYjytlrIfp+dQ4Wl8VQvjXsyskxMVRWP7T0ts//XUU6d++MO6hx/e
t2nTf8pk4U88Ea3V/ucrr7xaWFja0tK+HPmQM1fW0tIo0xg+tWWL9Mwz5FBq
NT0CvcJ8hEPNd2UNkxqfOg0NUm4uFVqBouKl8CI4COKWmUmPQwkfewzHgeY7
5vjx40u4owzDMAzDMK5FY2NjSkpKUFCQXq9PSkrKzs6ura0975LXgYhEKQR1
VVUUECKoQwQ7PekxOZlKxpWWUjV9RHGOsvz4F4ZxI2Z2oBCJkRERHz/55H9t
3Nhz330t9957SCbL2bTp1w8//OIPfxgSE5MEX1uOfMiZ16xBxI4cIZnChhUU
UOmPAwfoEdhWczOJ1XyvWTtzhiY1dAz+9frrUk7Ojfoh4nbwIHmrXE56iCmv
0ZDJ4vgwDMMwDMOsVqqrq+Pi4vz8/MLDw81mc2VlZXt7e79LrkWJRCkEhAjq
DAbSNJmMcrE2bqQv+Rff44lhXJOeHio/AieKiSFb8fSUvLxGvb37ZbLuDRuy
/9f/Cv3yl78DX3vllVeXNR9y+RDlJUXq8syG16JNtrjhVzzIMAzDMAyzypic
nJyYmBgfHy8vL4+MjJTJZGq12mq1wtTOnTt32ZWqJYpVBsdVPDk5lIKVkEBx
XUQEFc0LDKT7ZvO8M68Yxl1wZAnC1xxZghoNRv7VZ5+9rFD0+/pWf/vbv/3y
l/U+PsaQkN/9+tdv5eUdratrdSyxjbr2uvL4OBkZzBK75vgGxmqlTEuY2tDQ
pwsBtbTQX7Hv0DSlki5bS0mRGhudtOkMwzAMwzDLBkxtbGwMgVxRURE0zdPT
MyQkZN++fYjuYGpjrlQtUVy/k59PSVBQMwgaNA1xHZQN4gZ9O3iQgr35Zl4x
jLtw5Qr5Wk+P9P77Ul0dJfru3Xs9KemqwTD6k5+cu+eed7/0pfJvfatg06a9
P/5xWmTk66+++mZlZWVbW5trrpILYGrYwO5u+h7GYqFJvXcvVe/H4/gQ+lSv
7+PH6a+O8pgwNbmcvBVHg2EYhmEYZpUxPj4OUxscHMzJyQkMDPTw8FAqlTab
zdnbNQtiTW33bqrx6OFBqY8KBcV1mZmUEjk4SOmRK94WmGGciRCc8PBPNm26
/qUvTfzt3x7/n/8z5ytfefHf/i0+IuLXFosFvtbt2rVQMXmxgc3NtCxuNn9O
gUeRKglZwyeAnx99e1NdvbJbzDAMwzAMs/wMDw9fuHDBbrdbrdbg4GAvLy+t
VltWVubs7boB/MvxlfvRo/R1OkxNp6PcJ7mcKsIZjRS2VVVRbhieOfNLeIZZ
3WB2QF7ga6+++klk5OSTT17/t38788//fHT9+tfvu2/vj36UGR5u3bPnQHl5
owvmQ4qKJR0dVPESymkykXnNKmviyceO0TM1Gunpp6XNmyVvb7q/fz83T2QY
hmEYZrUxMDDQ0dFRXV2dlpYWGhrq6+sbGxtbBflxGUQsmpZGlR79/cnUEMsh
qMvJkQ4fpr+eOUO5YePjFM5NTjp7ixlmBRHfZkBh3nzzEyibTvfHgIA/eHq+
e9ddb//Lv9g2bXpdpcqHr7lgPqToBXDkiLRnD62UQbt0utllTTwZnwaY/vgc
ePRR6e67qTu2QkGdstvbKVPalS60ZRiGYRiGWRQ9PT3Hjh3Lz883mUw6nU6h
UOBOQ0ODs7frBiLLC1Gcry9lP8rlFKo1N9Of3K3WHcMsF6Jj9d69Ez/72dU7
7xy9447T69Yd/dKX3oCvhYdbXTAfUmxzTg4tlMtkUkDA1LcxM2VNPNlmo9U3
CJqPD/Xgvu02+mSIiblR5J9hGIZhGGZ10NXVVVZWZjabExISoqKiNBqN1Wpt
cYGWRdOvYUlNvankY0KCVFw81TptSbtILRpR0u6jj6SPP+alPmYlEQtPVVWT
qanXwsKuKhQXvve9E3feWf297x1SKN4KD897+eWD+/fXNjW1dnWd/eMfh5y9
yTe2ubaWCjyKYkEwtZoaWiab9clNTdTTzWSi7ttqNVlbbCyVx+SVNYZhGIZh
VhknTpzIzc2NiYmJjY3duXNnXFxcQUHByZMnnb1d5GIVFbSgFhdHX7kjHtu+
nWq+5eRQxlRHBykRxMi1yomIknYXLlBeJl9Ex6wg4pKu7u5P6uomCwsnEhM/
+vnPP3z44e7Nm9u+9726TZvKAwNtv/xlblraa+XlVfA1Z2/yjW0+f1567z1a
GoOjwcXa2mbRLvHk3l4JH1ENDfRRcOAAlYd9+20qj8nXrDEMwzAMs8pobm62
WCwqlcpgMBiNRtdJlBJ9bx3V3mQyupLFZnPtko9iOdBulz74wLW3lVm1iK7x
VVWTv/71NaXy6sMP999556kvfanxzjv3P/zwK0rldvhaU1Ors7eUYRiGYRiG
uRV1dXWJiYlyuVyr1SYnJ9tstqampt4V7yc9OUlfmyPI7OuTTpygKtxZWdJL
L5GshYZK27aRqVmt1PfWpVercNyamkgpy8qoQmVDAxWpvHTJ2ZvFrC0cK1CY
Ke+//0lp6fW0tAm9fuiJJz64++5T991X7eu7/5FHUrdv3//b39bU1Z06dqz3
3Xcvt7Zer62dPHjwk/x8SdyKiijfuLSUBrLdzutWDMMwDMMwK82RI0eio6N9
fHzUanV6enpDQ0NnZ+elFfcLEV62tNC1J3FxUlQU1X6ErMXGSunpJEAwtZ4e
174OrKuLNM1spi3OyKD2b1C2M2ecvVnM2kJ89XHx4iednZNNTddff/3KL385
JJd/+NBDp+6/v/Guuw4FBJSFhZUajQeSk5tefbXntdeu/cd/XN+27ROFQhK3
LVvoKlGNhq4OwwTkK8IYhmEYhmFWmNLSUo1G4+npqVQqMzMzu7u7L168OLLi
ZTtE4tbBg9KvfkV5j3K5FBREsgb1qa52k4xC0axX3G7R2ZdhVorW1uvQse3b
x370o8HvfKfPw6P7W9+q8fHZ9/jjSc8882ZIyAn86bHHrn3rW9dvu00St9tv
p6r4np4kbkYj11pkGIZhGIZZIcbHx2Fkg4ODhYWFYWFhXl5earU6Ly8PpjY0
NDS2UqlOonriqVNkZPn59B2+TkfBYXg49b+2WGipqqPDtbMfBXY7rUAgrt25
k5YGsSd790rHjzt7s5i1ztmzk1VVE/C12NjRrVsHfX37/+//PblxY+2999o2
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
+7I3/+5FnyM/uvvMt79N9Ub+7u+kv/5r6W/+hu6sWyd9/evSN75BF7ht2DDp
7T3x3e9e27Tpw4cfPimX10RGvvfb39qrqs69//7AwMDHzt5jhmEYhmGY1cCJ
Eydyc3NjYmJiY2N37twZFxdXUFBwcikkAqbmuEymuJgukAkMpA5jKhX5WlIS
Fe1fhc3UbkFnp1RSQlEylBWmFhND1w6dOOHszWLWBOKaNczslha6gLLl3esd
LVe720f73mq6vOe1cZ3hkvrFs1ti2n+yK+eJ/VHykz/4gbRxo/TNb0pf/rL0
ta9J//APVNj/3nulf/1XWhmXy68/88x4SMiVJ574L1/fM3fddeL733/vpz9t
3LGjJi+vA77m7D1mGIZhGIZZDTQ3N1ssFpVKZTAYjEYj7ldWVnYvxXKXaKYG
QZHLqR00Yj/42hpNABSJaDgckDUun8c4l8/OTj4eZtm7rfmFF6Sf/ITsbN06
6dvfpjt/cjRqx6ZSSf/+7xMvvTSWljaiUg3ed1//X/3VB1/7Wss//VO5r28W
fK2q6pyzd49hGIZhGGY1UFdXl5iYKJfLtVptcnKyzWZramrq7e1d8AuK2o8d
HbSmBjWJjJS2bKFIT62mNTXEhk1N0iLewT0RiWg4KLm5VNOhqko6c8bZm8W4
EGLuXL4s9fWR39vtNGqam6mK46FDNHfefpuWxhxd4yFbC+fCBZqHeEVMUY1G
Cgigdu2xsZLF8t5/Vv72l92Yrc8+S3a2ebP09NNSRAR9x5CYKKWk0FcO2dmT
RUXXysvHUlKGw8P/6OfXv2nTaZms+a673t66tcFsbqmv7+joON/f/8fx8fGJ
iYnJ1Vk2iGEYhmEYZnk5cuRIdHS0j4+PWq1OT09vaGjo7Oy8dOnSgl9Q1H48
coSyHxHswdTCwmgpKT1dKi+n+BOmNjy8hDvhDohENEisIxGts1NaxHFmVh9i
7pw/T2MEZg+Xys4mOcJU0utpYRo6ZbXSnyBxi2rT19pKtVlF4X68dHy8lJcH
M2zK7U7dPbh1K9lbaCg1rIejvfEGtQqsq5MaG0ke29omOzqud3VNvP322Guv
fRQXd2nr1r5Nm85+7Wunvve9JpXqcFJSYVFRfVvbH0ZHR8fGxiZWZ0MOhmEY
hmGY5aW0tFSj0Xh6eiqVyszMzO7u7osXL46MjCz4BUV2VU4OXafm4UFrajA1
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
vVrMrbBYe2BmZmb6+vqg10pLS7VarVKp3Lt3b7i+8fDw8NmzZ6HalpeXWbUx
DMMwscK5c+cGBgbq6uoqKioKCwvVanVNTc3o6Ki0piIZfuL5DiMq9g0PS7W1
5AUyGGj+Wl4ezdb6xS92en2iF6G2xGNDk/qE1rtyhcyTsVWEn9kgr79+UwVo
tVRV1Oul7uJzc5FeLeZWWKw9MMIr0t7eXllZqdfr8/PzodeMRiMubb29vfjr
/Pz8MnsPGIZhmBghGAx6vV6bzVZWVmaxWEwmU0NDw8T7YYGoSLaTBUZuZ2aG
JmatbRDNJRG2EuGivHCBcpncJjmuEQd1RgYZjBOyH3gMwGJt84hLG/SaUqmU
yWSiZTb02iIPeoZhGCZGOHHiRH19vdFoNJvN5eXldru9o6NrfPwsLmUdHZTJ
Sk2lumS9vRFbQwgIRClQZ4gt8/IogMH6HDhAL+5kP7G4Bdt3cpK2b1cXWU4b
GyndcvgwVZ04fpyKGty7H/nSEiVmgkHK0Bw5Qu/FuMHntLbSTzzHK3gdf8Uy
WBLLMzuOyFO3t1NTvpQUSpfX1ydUP/BYAgef3U5KTa0mcc1i7QGYm5sbHR2F
Xquuri4oKFCpVFqtFpe5969xHcePH2c/JMMwDBMTBAIBXMsyMzNxOausrGxo
aOjuHhwdnUUU19REzsO0NJoyhnA7Uly/fnPyGqL+sjIKYLBWFRUUvRw9SnqN
2RQic1leTls2I4MkscVCwSKieSi4e/cjh/6CEMO+qamhgYLgMitLev552k/4
ied4Ba/jr2y5ixxiBuiBA2SATE2l+zBQ0onUDzyWEFMLodSMRhZrD8LS0hL0
WjAY7OnpcblcJpNJp9NlZWUplcri4mLoNfZDMgzDMDGB3+8vKytTKBR5eXkO
h6O/v9/vnxwZmUe0UFdHcYJCQRLJ74/0inIAs01gC2I7Co9pUhLlXeTyD4qG
37sfuSgvCFH25JP09ocflj72Maoiip94jlfwOv6KZbAklmd2HFFbNXwEsZc4
yhEHpXjwue6BgSjDdc3tduv1erlcnpSUBL1mt9vZD8kwDMNEM6I9TU9PT2Fh
oUwm02q1Ho9ncnJyfHx2dPTayAiV9TAYokisTU9T5TqHg9YHMgLhf1WVNDDA
2YHNcf48ZSgRC0KXISjEZs3JoexL2H2FbY3XEeKH7ZG9vVSLE0H/m29Kb7wh
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
SsowzEHjdru1Wm1ycrJKpWpoaJifn799+/ZGYqxEXi9toCoUUqFm03zik4af
rQ0fd938kZ6cbZBw+AFHPzIME3YeF6rNHCAi7h3NjfbFbG8yUVuj0dPTpZQU
yr+ZmiplZX2WO5g37hIVEQ85NDRksVgUCgX0GgwntVoN+ebxePAjvGGTtyYZ
hjkgxOHZrq6uvLy8lJQUjUbT3t4OpXb37t0HDx5E+gLDwczlza5fflLxr2u2
gmvN/+LpVXVMKq2LP9F/+iPFH3Lz/79yE0c/MgwTfkReEYOBfDuZmeTbGRmJ
9GXFHyKj1MICxUNCHnd2Unw8mt5oJOdadjaFWOTmkq+trIxCJbEoNDVJXV0k
7nBLLl9+6GvjKsnxjoiH9Pv9LpfLarWWl5cXFRVBrJWVldntdrw4MTERDAY5
HpJhmANBpKVtamqCTEtNTdXpdD09PXg9cfz4y3MbH/Td7q2ZH3rVPfK//z++
Z9Wz/027otT/7rjh9z+z/aGbs2MwDBMBfD6qfA2ZplY/LDLS2EiygDlgRK2W
e/fo/Bpm+6tXSbV5vVR3xOWiY2t2O+ULhnYrLqZoVNwSjYbi5LVaktC4MZB4
09MSV0mOd0Q8JGynQCDg9XpbW1vNZjPEWm5ubmFhoV6vdzqd0GscD8kwzIEg
Cj6GUkHKZDKDwTCERSeR+O3S2m/en//o7cmgwXbru9k3/6fk5Wczf6PSf/Iz
x+/cQ5/OskONYZgIgJnYYKBwbIWCnjgc9Ap7+MOKiJCcnKToR4uF1JlcTncl
NZUiJJOTyeUJIc23J1ERFpRCocjIyIAdBb3mcrk4HpJhmANheXl5amrK7Xaf
OXOmoKAgKyvLbDaPJFicze+uzm281Xen3Lb0P0rnv3fs6jczff+Lbvi/1/Ue
H3r/3/wfTd7mYkYJRygsamPjYanc6WlK9HDvXqQv6xGIPDk3b5I3gJ3AcQBu
H24ibmVDg/Tqq3RwNj9fstnYdRMJRIQkbsn4OHnZnE5ysUE863TkXFOpKEFV
XR3n6ExY5ufnBwcHodfKy8s1Go1cLj9+/Hgoq/bY2Nj169eh2jY2Nli1MQyz
N27evDk8PNzQ0FBZWVlcXKxSqerq6nxYcRKJ/xib2Kyquf+j7F//07HZH+S9
n67v/kFd9T8NFP1o/t8sK++9+wkWaizXHMuQQOB+370r3b79ML9DczMdS4Fe
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
YCpoa6O5CrMB5gG5nDwV589z9CMTxQh3m89HuUohyrCAQbKhB2M9y8+n3nzm
DGWM9PspGDLKLYe4YGVlZXp6GnrNbrcXFRVBqanVaqPRaLPZOjs7x8bGQi62
T8IeUMQwzIEDpfbgwQMM5+7ubsi05OTknJyc1tZWjHEotQdRriK2H146doye
2GxSd7f03nvkU4NSu38/0hcqLS09TOZvsdD69txztL41NNDKxnVv94xIfi6+
IhHryjBfjTgP1NtLO0mYq0JVH2HzwsKdmeHoRyaKEfuii4tUVWJ6mg6pDQ3R
ktbSQjEN6Mdvvkkxk4EArXYffxzpK45/YLbBToMiGx0dbWtrs1qtUGparTY7
O7u0tLS+vh46DmouZuKjGIb5cjY3NzHk19bWWlpaMMaTkpJUKpULM3BMsD33
Ix7xPPoiMURBZ6xs2dl0pbDWTp+m5Q56jWdTholvRKY9GLYKRTTPVQyzG4JB
imDp6KDFLNSbOT9keBFZ/W02G6y45OTkzMxMvV7vcDig1+b5YADDxD7379+/
e/fu8vLy22+/XVpa+oMf/KCiosLj8UT6unaG8Kz19tIRfZWKHvE8+s44i4LO
589T1BPstGPHKGbTYqFV7oMPOIcWw8QhojjgjRuU6bylhRIgYaJKT6cUpm1t
UThXMcxuuHOHzhpAr/n9D5XariqvifhgDgLeKxsbGyEXW09Pj9lshl47duxY
Xl5eqATb4OAgx0MyTKyD8bu6unrz5s133333jTfegF5rbW29cuVKpK9rZ4jY
DCwWFy9SSAYe8Tz6lI+w2WZmKOrJaqVoTY2G9thhvOHC2WZjmPhD7NLAmHU4
KPhZq334aLdT8rzom6sYZjfcv096LRh8WNxxt7JLxAdzce29srm5Cb22trY2
PT0NvWaz2WDIQa9lZmbqdDroNY6HZJhY5+OPP15aWgoEAj6f79y5c//+7/+O
J4ucU/7Q2F7QGY94ztFQDBN/iPhnl4tyMMhktD8TqijCmUsZ5rP4YA6e3Dcc
D8kw8cr9+/d/85vfQK/96le/unLlCpTa3NwcXon0dcUt23OiiDwDeOX99zk/
JMPEPCK268YN8qlBqWGAa7VSVhbVp6qr48ylDPNHlpelqSkq5Xb2LH3hyfAw
1XfD8Jibo3wm7HveMSIe0u12W61WtVqt1Woh1gwGA+Sby+XirP4ME6P8/ve/
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
HqaweIeD8kHpdLSg5uRQ2Arm07IycrGFTrS1tHwuQjJOXekicq+np8dsNkOv
wa7Ly8sLlWAbHBxMzHhIcern7NmzaAootZSUFCjZJ598MicnB4buI0unibQk
b7zxxg9/+EPYxn/2Z3/2F3/xF0888cTRo0e7sagwzOFz48aN4eHhhoaGjo4O
6DWPx1NeXv7888+jQ37rW9/68Y9/bDQaOePNYYBpMmTPj43RIrPVhsRSU11N
S4rPR3qN+TJEG6KtTCZyruXm0spcW0thL1iH9444UdbaSot+cjKldHS7d/jb
IlDzMQlQxWGLV16hXP0Qa6mp5Oh5fOJJcV1cOXaHiMycTU0Uabx1VwS229mz
pItZ+TJMTCImxJs3KXs/9NeFC1JPD4my+nqppobm01OnKN8rxnx+Pg3+rRGS
cXpIVUTuTU9PQ6/ZbLbS0lLotczMTJ1OB72WmPGQ4tQPzF2VSnXkyBEoNUi2
tLS0kpISaFi0G97zh8/LdpHwv6qq6oUXXoBtDKUmwiDRvJH6OExCIbLiQK95
vd6tcbnPPPNMKJcp3jDNQUKHxvborFAs3C6zxSc0oqix+NpNOpDHInI1bk/R
uD9EGjPI82eeIbEmUoPyebQDRJw+hDpDU3O8McPEMyLZq99P22uYT00m2mpT
KCjuOSXlcxGS8Z7+leMhtyJO/QgrV5RXs1qt3i85ky5KaRuNxvT0dPzWE088
ERJ6Wq3WveMtXIbZA8Kx+/7773d2dqKjulwudEj05JaWFnTdr3/9608//fQL
L7wQyjEyeTCGL/MItuc90GjIQ7S1OBcn1Hw8c3O0RYqFt6yMmg7LMtZnSKsD
KJH6zjt0P558kvxruBkHV9jM56Mz8ZCAzz8vffObJNa+8x3aAEY3mJriYhf7
ZX2dvNKBAEUU19eTOtPraXBxJh+GiWdE5tyFBZpJh4YocsXppMUVs0B+Pk0B
x47ROoEZAVPD2FgcizURDwlNATMP5hz0BcSawWCAfIPVl1BZ/WH0LiwsbPWR
PfXUUy+++CLaxOl0TqG3/Mn7hna7c+fO4uIiGufChQuNjY2nT59WKpUymQxK
7a//+q+ff/55iN+ampqJiYlIfywmnhGO3dHR0Xfeeae5udnj8dy4cWNzc/Ot
t95Cn0SHRDf+7ne/+/g9B2b/bM8oDo1WWEj7/1AJ5eW0NQiDM8H2wHaHyL5o
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
b3Jwjo5044ePgwPCjR8WA7YCbgKmw3AmoVYP00P7k5VFZ+jlRfanpoY+EkmR
YXzq66lfCa94P8wnLzJYonmsq6P4QzSYuIZ9jlnDr3PixCDkY7xwgfwajnn0
KM1oMEJnamAYhmHuiIi2P36c/FpKClkzNITBwTQ03c+PWsRVqyhjstZWHC4M
qhWOrLS0NDU1NSwsDE7N3d192bJlcrk8Li4OPg5uTh0tBmV7/vz5s2fPtrS0
NDY2qjTgTgrGoECNRbVE7c3Nzd29e/fOnTvff/99S0vLiRMnOjg44E99nyDD
9IPe03La2VHCQBOTWwv+xEp8hA3UyTEMbRJqEQ8p5hQV5YI/QjtWWEiveG+A
J88wDMMwA0TEQ6pU9AQ2NpZCZGDQbG0pDbG5uY6tuMjqHxUVBadmYmJiZWXl
5eUVGxsLxdv8r6zB3d3dcGp4Dxm8f//+Qg14+A+jR3p6elA5RR1Ghdy+fXtE
RIRCoYBHW7t2rY+Pj42NzVNPPXX//fcvWrQoPDy8traWnzAwI4Xe03JGRNBD
ONzpZTLqXHN0pI42b2/qdFMqqQMOTUFSEnXJoVnYu5c66XTLPjWEHD9OUR4J
CRT7l59Ppiwri+IMg4Mpd31AAJ08XvEea7Aen2KbhgYqO/c3MQzDMCMVEQ/Z
0kIRG4WF1BCindNMCa2lFccu330n/cuIqbvYsrKylEol/JqTk5Orqyv82qZN
m1JTU0tKSnbv3p2UlAQ3FxoaGhQUpNAAwhjyGCJZDHbjZJLMsCFqr3oApq+v
r7OzM9yZhYXFSy+9NHv27BdeeGH69Om//e1v7733XrxfvXp1cnIyqvTJIZ6G
nmEGhd7Tch44QMYHt/CMDBq2BgcUHU0D2QIDKbACN34XF/JxuPfD0MnlNPxN
t+xTQ4h6UB781+7dFAmJNsrHR1q+nB4rzp0rvfwyPVbEK95jDdbjU2yTmUlP
InkkF8MwDDNSEfGQnZ0U8t7cTEHwsGBoEQsKyLhpb8W3blWP9BZ9E7W1tfBr
cGRyuRx+zcrKyt7eHpZt48aNeMV7rJk3b97cuXMtNIAwhjyGSBY9cZxMkhk2
RJ8aqp+Li4u5ubmJiYmxsfE9fWFqamptbc2TYjOjA5HJsLiYetyCg+m+bm1N
URVmZpRG0sSEUkpiTT+zTw0+IgyksJDO09aWTmzKFOmee/pYsB6fYhtsie05
RyLDMAwzCtGlFceanBzNnXrHQ86YMWP27Nmvvfba008/PXny5D4FMIQxtuTJ
tRm9IPrU1qxZs2DBAlTFSZMmGRkZ9VlXH3744eeeew5+LSAgICsrq7W1taOj
49Lwx4QxzGAgMhnW19NELpmZFFgREnIzVb6b223550X2qdjYm/N54favHikm
FvWQsdraW0td3c2kHydPUtdeW9utpbOzH7O8iZ61mBh6Xggv9oc/SL/+dd9m
DevxKbbBltgee/WrN1D9FPPKlVsLzhP/5T/+SKYPbWNX163lwgW6hmivxPLD
D/Rd339PC95gwQbYDPviICIm86efBvajMQzDMMy/0NKKe3tTF5tGz5pARJTt
2LHjgw8+WLhw4V/+8pdZs2bBqT3yyCO/+tWv+hTAEMaQxxDJkMoQzJoj3Rhm
qBF9aqh+ZmZmxsbGqJDjx4/vs64+8MAD8GumpqbLly+PiIgoLy9vbGzsGP6Y
MIYZDEQmw/Z2MlMNDXRH37ePLNiePXTXT0uj8IqoqNuyT6lNnKMjNQJoEAID
by1qK5ecfGtJT6eZoHFANCMVFRSUKBZ8o+7jPsWYNbQ/8+dT3xkc2X/8R99m
DevxKbbBltgee2FfHEH3ywJXhcsiFrUjgwuD/0Kr+N13txY40JYWOrhYvvmG
MjQePUoOEW+amqikp0/TRcZB1H18V6/yGDqGYRjm7tDSiufn09AFjTFrAhEP
CRH7ySef+Pj4/O1vf/vzn/88efJkOLUJEyb0KYAhjCGPIZIhlSGYRf+avorO
jCkKCwt9fX21Rz/2ZubMmWvWrElLS0NVbx3+mDCGGWK0ZJ+ysKDYCmNjCq8w
N6cxYmLBp/BxcHBi0XRwcH9oQMSCI+ueWUpkg7S2lkxN+/ZovRdsie01c0jq
wpUr1PSpO8XUCwzamTOULR+NYXMzWTCx1NfTkauqbi3wpOXl1FqWldGbAwco
gT+a0BMn6CC4pD/+eLN/jWEYhmH0xYkTJ4qKihISElxdXZ977jkdBbCIh4R4
hoTWdyGY0YyY+G/nzp0ymUx79GNvnnrqqeXLl4eEhMCvVVRUtDHM6OL06bMt
LWebm9tQu3Nz25KT26Kj25TKNl/fNpmsbenSNiurNhub9rfe+t7B4Yf//d8f
7O3P2dmde/fd86tWnffz6/TxueDl1e3hcfH//u/iBx9c3LDhYnDwj5s2XYqI
uBwefuXDD6+EhfVs3dqTlnY1N/dqVta1jIwbaWnSjh0/ZWZex585OVfz8noK
C6+IJTb22nvvXV+8+MbMmT9NmfKTjmYNW2J77LV27fWtW68WFV3eu/fyF1/Q
AfPze/AVfX47lszMqxkZPWLJzLy8e/elnJyLu3df3LXr4s6dF7OyurOzu3Jz
L+Tmdubmns/NPZeXdy4//4fCwh/27v2+qKi9uLitpKSttLRt3762r79uq65u
O3y47ejRNlzS1ta2U6fOfvfdWX3/yAzDMMzYpby8PCUlZcOGDUuWLPnjH/+o
owAW8ZAQz5DQENKQ09f4+SMzBIiJ/xITE5cuXao9+rE3jz322Pz5893c3DZt
2pSZmalimNFFTY2qulpVWakqLVXl56tQx1NTVYmJqthYVUSEKiREtWGDav36
IwpFg1x+bO3aJh+fb7y9j/v4HF+79oRcftLb+1s3tzNOTu0uLu2uru2enu3u
7h2urudkss533+10crrg4NDl7Hxx5cofPT0vubj02Ntft7WV7OxuODpew59u
bpe9vH58771usTg4XJo/v+fpp68/8siNX/1KV7OGLbE99lqw4Mq771709+/8
4IMLfn5dOCBcJL6iz29fufKyu/vF1au7xOLre97f/welsn3jxvagoPYNG9r/
/ve2sLAzUVGnPvqodevWk//85/GkpG+2bWtKTT22c2dDbu6RL79UYSkqoqWk
RLVvn6q8XPX113RJcWEPHVLV1ur7N2YYhmHGMBkZGSEhIStWrHj11VdhvnQU
wCIeEuIZEhpCGnL6su5D0BlGZ8TEf1FRUVZWVjpWUcFDDz307LPPLly4cPXq
1Vu2bClkmLHHzp1Fn366b8uWAxERFWFhB0NCqpTK6oCAGoWi1sur3tn52Ftv
nRDLm2+2zp9/es6cttmzzz7//PfPPtvx1FPnnnji/B/+cOGhhy498MBVeKsJ
E64bG1956KEfH320Cx9hG7H8/vfY7Mf//M+r2GbcuBs6mjVsie2x13/910V8
3YC/HTsuXPitZnEcHb9ZubIRxfTzOxwYWIOy4wrgOuBq4Jrgyuj7x2EYhmEY
bUC+QsRCykLQQtb2VwlDPENCQ0hDTnMOf2YouHDhwunTpxsaGsLDw+fPn9/f
Kvrggw8+8cQTc+bMefvttzds2JDMMGOPrVu3R0WlhYbu+PvfM5TKnUFBmQEB
u9aty5LLd3t773Fzy3dy+kIs9vZfLlny1V//WmJtXfr66/usrMrmzdtvaVn+
yisHZs6sfPrpQ6amKjOzGnPzqpkzD86eXWlhUfXKK9Uvv3xozpyaOXNqzcyO
/+53Hfff33Pffdd++UtdzRq2HD/+2v33X5069Xtz8+b586stLQ+98godcM4c
HPxgn99uYfH1X/5SjjMUi41NybJlRZrFkckKPDzyUEw/v2wUGWXHFcB1wNXA
NcGV0fePwzAMwzDagHyFiIWUhaCFrO2vEoZ4hoSGkIachqjWt65nRiGdnZ0t
LS0qlSo0NHTevHn9raLq8ZV/+tOfbGxsVq9eHcYwY4+QkA83bgwPCIhYvz7C
3z9SoYj64IOo99+P8vOL9vHZ4uX1kYfHx2Jxdf14xYqtzs7x77wT//bb8Y6O
nzg4fGJvn7B8ecJbbyX+z/8kWVsn//WvSba2n+JPW9ttixd/bmOTaW2dtWhR
9sKFe557rnLq1NYJE3ruvbcfZu0Xv7iB7e+7r+e//7sVLuzNN3PeeCNn0aIc
HNDGJuNvf9ve57fb2f0TJ4YzFIuz89aVK+M0i7NqVeyaNTE+PjFr126Ry6NQ
dlwBXAdcDVwTXBl9/zgMwzAMow3IV4hYSNl+ZdgTQDxDQkNIQ0536p7cmWF0
RswJGBwcbGlp2d8q+sADD/zud7+bNm3a3Llz7e3tfRmGGTxWrVovk/3d0THC
3j7azu6jt96Ke+mlgkcfbRw//sq4cVdhwXQ3a7/85bV77+159NFjL75YgOOI
xcnpQw+PDfouKMMwDMPoB8hXiFhIWQhayNr+KmGIZ0honh2bGTrEnIBbtmxZ
tGjR+PHjx40b94tf/ELHKjp58uSnn376tddeW7FihVKp1HdXNsOMKhIS0j7+
ODM6ek9kZF5EREF4+F43t9pXXz3zyCNXf/vb60ZGupq1++//6cEHrz/yyDXs
iyPgOGKJicn55JN0fReUYRiGYfQD5CtELKQsBC1krY4CGFIZghmyGeIZEhpC
GnKax6wxQ4GYEzApKWnJkiVGRkYTJkxA9dOxrj722GOvvvqqTCb7xz/+sXPn
zlqGYQaPQ4eOVFYerag49vXXTQcOfFNe3hwb2+bq2j179g1T0xu/+Y2u2SB/
/eufTE1/euGFG9gXR8BxxHLw4LHq6jp9F5RhGIZh9APkK0QspCwELWStjgIY
UhmCGbIZ4hkSGkIachqiWt+6nhnNZGZmOjo69jd1v5mZmZ2dXXBwMHZvaGjQ
dyEYZpSzfz9Nrm1rK82aJU2Zouuk2NgS22Mv7IsjMAzDMAyjBvIVIhZSFoIW
slZHASxS90M8Y3d9F4IZE3z11VeBgYGWlpYzZsx4+OGHtcdD3nfffRMnTpw0
aZKVlZVCoUAtraioOHXqlL4LwTCjnLo6KT1dCgyU7Owkc3PJyEiaMEEaN+5O
GfvpU2yDLbE99sK+OALDMAzDMGogXyFiIWUhaCFrIW4hcSF0+xTAIvoRUhmC
GbIZ4hkSWt+FYMYEKpUqOTnZ19d38eLFqH7a4yFRjadOnWpmZubi4pKQkNDQ
0ICq3tXVpe9CMMwo59QpqaJCysyUFAppwQJp0iRp4kRyZH2aNazHp9gGW2J7
7IV9+ZkKwzAMwwggXyFiIWUhaCFrIW4hcSF0+xTAIvoRUhmCGbIZ4hkSWt+F
YMYEra2t5eXlaWlpqHiWlpba4yEnTZqEyqx+nlBcXKzvc2eYsUJ3t3T2rNTc
LCUkSI6OkokJeTEjo77NGtbjU2yDLbE99sK+PPqZYRiGYXoDQauOMYPEhdDV
Hv2IzSCYIZshniGh9X3uzJigo6OjsbERVS4xMVEul9va2s6bN+/555831eDJ
J5+cMWOGubn5okWLZDIZqvTnn39ex2FVDDNcXL4snT9PnmvvXmnzZsnFRVq8
WHr5ZcnMTHrySWn6dMnUlF7xHmuwHp9iG2yJ7bEX9sURGIZhGIb5GRC0kLUQ
t5C4ELqQuxC9kL6aShjCGPIYIhlSGYIZshniGRJa3+fOjAkuXbqEytba2nrw
4MGsrKzY2NiAgABUV2sNlixZ4uDg4OLisnHjxqSkpOLiYlTs9vZ2fZ87w4wV
rl0jt9XdLX3zjVRaKqWlSeHhko8PDUlbsoSsmbU1veI91mA9PsU22BLbYy/s
iyMwDMMwDPMzIGghayFuIXEhdCF3IXohfTWVMIQx5DFEMqQyBDNkM8QzJLS+
z50ZW3R3d589e7a5ubmwsBC1UXPewMDAwLCwMKzER9hA32fKMGOXnh7p4kXp
3DmpspLsWHAw5Q9RKCRfX3rFe6zBenyKbbAlpxNmGIZhGF0QGhiiF9JXUwkL
DQypzLOqMfri8uXL58+fRyVUqVSokJrzBqanp2dnZ2NlbW1tW1ubvs+UYcYu
6i42uLDmZqm8nJKHpKdLqalScjK94j3WYD0+xTbcocYwDMMwOgKJC6ELuQvR
C+mrqYSxEvIYIhlS+TKPK2D0xLVr11D9uru7UVebm5s15w2sq6trbGxUz9J+
ERKQYRg9ceMG+a+eHuo4a22VGhooJ//hw1JtLb3iPdZgPT7FNtgS2zMMwzAM
82+BxFVrYIheSF9NJazWwBDJkMrX+DEowzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMw/TF/wNiZ5x8
    "], {{0, 767}, {1167, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{311.40000000000003`, Automatic},
  ImageSizeRaw->{1167, 767},
  PlotRange->{{0, 1167}, {0, 767}}]], "Input",
 Evaluatable->False]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Get Triangular Center (Notable) Info", "Section",
 CellChangeTimes->{{3.766430377915554*^9, 3.7664303822410145`*^9}, {
  3.7670101572603655`*^9, 3.7670101820130153`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "getTouchPts"}], ";", 
  RowBox[{
   RowBox[{"getTouchPts", "[", 
    RowBox[{"orbit_", ",", "normals_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"inc", ",", "tps"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"inc", "=", 
       RowBox[{"getIncenter", "[", 
        RowBox[{
         RowBox[{"orbit", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"normals", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"orbit", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"normals", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tps", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"closestPerp", "[", 
           RowBox[{"inc", ",", "#1", ",", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"orbit", ",", 
           RowBox[{"RotateLeft", "@", "orbit"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "tps"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.766563800817769*^9, 3.7665638517406206`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getAntiComplement", "[", 
    RowBox[{"p_", ",", "bar_"}], "]"}], ":=", 
   RowBox[{"bar", "-", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"p", "-", "bar"}], ")"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7666191520760126`*^9, 3.7666191761642833`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getNotables"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getNotables", "[", 
    RowBox[{"orbit_", ",", "normals_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "inc", ",", "inradius", ",", "cir", ",", "circumradius", ",", "npc", 
       ",", "exc", ",", "tps", ",", "ort", ",", "medians", ",", "npcradius", 
       ",", "sides", ",", "bar", ",", "feu", ",", "antifeu", ",", "x88", ",", 
       "perimeter"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"inc", "=", 
       RowBox[{"getIncenter", "[", 
        RowBox[{
         RowBox[{"orbit", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"normals", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"orbit", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"normals", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inradius", "=", 
       RowBox[{"inRadius0", "[", 
        RowBox[{"inc", ",", 
         RowBox[{"orbit", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"orbit", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tps", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"closestPerp", "[", 
           RowBox[{"inc", ",", "#1", ",", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"orbit", ",", 
           RowBox[{"RotateLeft", "@", "orbit"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"medians", "=", 
       RowBox[{"getMedians", "@@", "orbit"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cir", "=", 
       RowBox[{"getCircumcenter", "@@", "orbit"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"circumradius", "=", 
       RowBox[{"circumRadius0", "[", 
        RowBox[{"cir", ",", 
         RowBox[{"orbit", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"npc", "=", 
       RowBox[{"getNinepointcenter", "@@", "orbit"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"npcradius", "=", 
       RowBox[{"magn", "[", 
        RowBox[{"npc", "-", 
         RowBox[{"medians", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"exc", "=", 
       RowBox[{"getExcenters", "[", 
        RowBox[{"orbit", ",", "normals"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sides", "=", 
       RowBox[{"RotateLeft", "[", 
        RowBox[{"triLengths", "@", "orbit"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"feu", "=", 
       RowBox[{"getFeuerbachpoint", "[", 
        RowBox[{"npc", ",", "inc", ",", "inradius"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bar", "=", 
       RowBox[{"getBaricenter", "@@", "orbit"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"antifeu", "=", 
       RowBox[{"getAntiComplement", "[", 
        RowBox[{"feu", ",", "bar"}], "]"}]}], ";", 
      RowBox[{"(*", " ", "anticomplement", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"x88", "=", 
       RowBox[{"getX88Trilin", "[", 
        RowBox[{"orbit", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ort", "=", 
       RowBox[{"getOrthocenter", "@@", "orbit"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"perimeter", "=", 
       RowBox[{"Total", "@", "sides"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "we", " ", "think", " ", "this", " ", "is", " ", "constant", " ", 
        "for", " ", "excentral", " ", "triangle"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<inc\>\"", "\[Rule]", "inc"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<bar\>\"", "\[Rule]", "bar"}], ",", 
        RowBox[{"(*", " ", 
         RowBox[{"also", ":", " ", 
          RowBox[{"getCentroid", "[", 
           RowBox[{"orbit", ",", "sides"}], "]"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<ort\>\"", "\[Rule]", "ort"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<cir\>\"", "\[Rule]", "cir"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<npc\>\"", "\[Rule]", "npc"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<exc\>\"", "\[Rule]", "exc"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<ex12\>\"", "\[Rule]", 
         RowBox[{"exc", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<ex23\>\"", "\[Rule]", 
         RowBox[{"exc", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<ex31\>\"", "\[Rule]", 
         RowBox[{"exc", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<feu\>\"", "\[Rule]", "feu"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<antifeu\>\"", "\[Rule]", "antifeu"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<x88\>\"", "\[Rule]", "x88"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"all", " ", "thru", " ", "trilinears"}], ",", " ", 
          RowBox[{
          "each", " ", "computing", " ", "sides", " ", "unnecessarily"}]}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"\"\<mit\>\"", "\[Rule]", 
         RowBox[{"getMittenTrilin", "[", 
          RowBox[{"orbit", ",", "sides"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<sym\>\"", "\[Rule]", 
         RowBox[{"getSimmedianTrilin", "[", 
          RowBox[{"orbit", ",", "sides"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<ger\>\"", "\[Rule]", 
         RowBox[{"getGergonneTrilin", "[", 
          RowBox[{"orbit", ",", "sides"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<nag\>\"", "\[Rule]", 
         RowBox[{"getNagelTrilin", "[", 
          RowBox[{"orbit", ",", "sides"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<spi\>\"", "\[Rule]", 
         RowBox[{"getSpiekerTrilin", "[", 
          RowBox[{"orbit", ",", "sides"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"not", " ", "really", " ", "notables"}], ",", " ", 
          RowBox[{"aux", " ", "info"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"\"\<incRadius\>\"", "\[Rule]", "inradius"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<tps\>\"", "\[Rule]", " ", "tps"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<medians\>\"", "\[Rule]", "medians"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<cirRadius\>\"", "\[Rule]", "circumradius"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<npcRadius\>\"", "\[Rule]", "npcradius"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<sides\>\"", "\[Rule]", "sides"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<perimeter\>\"", "\[Rule]", "perimeter"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<area\>\"", "\[Rule]", 
         RowBox[{"triAreaHeron", "@", "sides"}]}]}], "\[IndentingNewLine]", 
       "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7660472344434967`*^9, 3.7660474074683113`*^9}, {
   3.7660477448698783`*^9, 3.7660477999100127`*^9}, {3.766047883461458*^9, 
   3.7660478836948357`*^9}, {3.7660730123355775`*^9, 3.76607302097548*^9}, {
   3.7661437762487803`*^9, 3.7661438675542316`*^9}, {3.766238776062088*^9, 
   3.7662389310457463`*^9}, {3.766343308545548*^9, 3.7663433550969925`*^9}, {
   3.7663922077269497`*^9, 3.7663922342221127`*^9}, {3.766393055102866*^9, 
   3.766393163726858*^9}, {3.7663935290714455`*^9, 3.7663936007421207`*^9}, {
   3.7663937003352084`*^9, 3.766393712261323*^9}, {3.7663941865424757`*^9, 
   3.766394206774041*^9}, {3.7663944839035835`*^9, 3.766394493437482*^9}, {
   3.7663963986493187`*^9, 3.766396424375952*^9}, {3.766398383127941*^9, 
   3.7663984384702253`*^9}, {3.76639850758346*^9, 3.7663985212864776`*^9}, {
   3.7663985997507*^9, 3.7663986090939164`*^9}, 3.7663988740563126`*^9, {
   3.7664013884883533`*^9, 3.766401398407921*^9}, {3.76643509739882*^9, 
   3.766435105926702*^9}, {3.766435871367896*^9, 3.766435881975399*^9}, {
   3.7664361090317583`*^9, 3.7664361208231635`*^9}, {3.766618992026012*^9, 
   3.766619091121956*^9}, {3.7666191715060625`*^9, 3.7666191890085487`*^9}, {
   3.7666193121374536`*^9, 3.7666193221376877`*^9}, {3.7672656685175357`*^9, 
   3.7672657050928593`*^9}, {3.767346252615325*^9, 3.7673462763752785`*^9}, {
   3.7674495454792657`*^9, 3.767449620560625*^9}, {3.7674513624010243`*^9, 
   3.767451391047745*^9}, 3.767451856403324*^9, {3.7674523250766077`*^9, 
   3.767452325891986*^9}, {3.7674523665011983`*^9, 3.7674523743900127`*^9}, {
   3.7677148277799644`*^9, 3.767714843691434*^9}, {3.767715295627181*^9, 
   3.7677153051157985`*^9}, {3.770386961080806*^9, 3.770387017533681*^9}}],

Cell[CellGroupData[{

Cell["Orthic and orthic of orthic (similar to reference triangle?)", \
"Subsubsection",
 CellChangeTimes->{{3.7672629795919967`*^9, 3.767263003378209*^9}, {
  3.767361837259989*^9, 3.76736184502026*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "getOrthicData"}], ";", 
  RowBox[{
   RowBox[{"getOrthicData", "[", "orbit_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "feet", ",", "inc", ",", "sides", ",", "ort", ",", 
       "\[IndentingNewLine]", "intouch", ",", "intouchSides", ",", "inradius",
        ",", 
       RowBox[{"(*", " ", 
        RowBox[{"intouchInc", " ", "=", " ", "inc"}], " ", "*)"}], 
       "\[IndentingNewLine]", "intouchOrt", ",", "intouchOrtSides", ",", 
       "intouchOrtInc", ",", "\[IndentingNewLine]", "intouchAnticompl", ",", 
       "intouchAnticomplSides", ",", "\[IndentingNewLine]", 
       "intouchAnticomplOrt", ",", "intouchAnticomplOrtSides", ",", 
       "intouchAnticomplOrtInc", ",", "\[IndentingNewLine]", "orthic", ",", 
       "orthicSides", ",", "orthicInc", ",", "\[IndentingNewLine]", 
       "orthicAnticompl", ",", "orthicAnticomplSides", ",", 
       "orthicAnticomplInc"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "orthic", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"feet", "=", 
       RowBox[{"getAltBases", "@@", "orbit"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sides", "=", 
       RowBox[{"RotateLeft", "@", 
        RowBox[{"triLengths", "[", "feet", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inc", "=", 
       RowBox[{"getIncenterTrilin", "[", 
        RowBox[{"feet", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ort", "=", 
       RowBox[{"getOrthocenterTrilin", "[", 
        RowBox[{"feet", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "intouch", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"intouch", "=", 
       RowBox[{"intouchTriangle", "[", 
        RowBox[{"feet", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"intouchSides", "=", 
       RowBox[{"RotateLeft", "[", 
        RowBox[{"triLengths", "@", "intouch"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inradius", "=", 
       RowBox[{"magn", "[", 
        RowBox[{
         RowBox[{"intouch", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "inc"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"intouchOrt", "=", 
       RowBox[{"getAltBases", "@@", "intouch"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"intouchOrtSides", "=", 
       RowBox[{"RotateLeft", "[", 
        RowBox[{"triLengths", "@", "intouchOrt"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"intouchOrtInc", "=", 
       RowBox[{"getIncenterTrilin", "[", 
        RowBox[{"intouchOrt", ",", "intouchOrtSides"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"anticomplement", " ", "of", " ", "intouch"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"intouchAnticompl", "=", 
       RowBox[{"anticomplementaryTriangle", "[", 
        RowBox[{"intouch", ",", "intouchSides"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"intouchAnticomplSides", "=", 
       RowBox[{"RotateLeft", "[", 
        RowBox[{"triLengths", "@", "intouchAnticompl"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"intouchAnticomplOrt", "=", 
       RowBox[{"getAltBases", "@@", "intouchAnticompl"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"intouchAnticomplOrtSides", "=", 
       RowBox[{"RotateLeft", "[", 
        RowBox[{"triLengths", "@", "intouchAnticomplOrt"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"intouchAnticomplOrtInc", "=", 
       RowBox[{"getIncenterTrilin", "[", 
        RowBox[{"intouchAnticomplOrt", ",", "intouchAnticomplOrtSides"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "orthic", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"orthic", "=", 
       RowBox[{"getAltBases", "@@", "feet"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"orthicSides", "=", 
       RowBox[{"RotateLeft", "@", 
        RowBox[{"triLengths", "[", "orthic", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"orthicInc", "=", 
       RowBox[{"getIncenterTrilin", "[", 
        RowBox[{"orthic", ",", "orthicSides"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"orthicAnticompl", "=", 
       RowBox[{"anticomplementaryTriangle", "[", 
        RowBox[{"orthic", ",", "orthicSides"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"orthicAnticomplSides", "=", 
       RowBox[{"RotateLeft", "@", 
        RowBox[{"triLengths", "[", "orthicAnticompl", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"orthicAnticomplInc", "=", 
       RowBox[{"getIncenterTrilin", "[", 
        RowBox[{"orthicAnticompl", ",", "orthicAnticomplSides"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "orthic", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<feet\>\"", "\[Rule]", "feet"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<sides\>\"", "\[Rule]", "sides"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<inc\>\"", "\[Rule]", "inc"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<ort\>\"", "\[Rule]", "ort"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"intouch", " ", "of", " ", "orthic"}], ",", " ", 
          RowBox[{
          "we", " ", "think", " ", "similar", " ", "to", " ", "orbit"}]}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"\"\<intouch\>\"", "\[Rule]", "intouch"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<intouchSides\>\"", "\[Rule]", "intouchSides"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<inradius\>\"", "\[Rule]", "inradius"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"orthic", " ", "of", " ", "intouch"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<intouchOrt\>\"", "\[Rule]", "intouchOrt"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<intouchOrtSides\>\"", "\[Rule]", "intouchOrtSides"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<intouchOrtInc\>\"", "\[Rule]", "intouchOrtInc"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "anticomplement", " ", "of", " ", "intouch", " ", "of", " ", 
           "orthic"}], ",", " ", 
          RowBox[{"upside", " ", "down", " ", 
           RowBox[{"orbit", "?"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"\"\<intouchAnticompl\>\"", "\[Rule]", "intouchAnticompl"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
        "\"\<intouchAnticomplSides\>\"", "\[Rule]", "intouchAnticomplSides"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "\"\<intouchAnticomplInc\>\"", "\[Rule]", "intouchAnticomplInc"}], 
          ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "orthic", " ", "of", " ", "anticomplement", " ", "of", " ", 
          "intouch"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
        "\"\<intouchAnticomplOrt\>\"", "\[Rule]", "intouchAnticompl"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
        "\"\<intouchAnticomplOrtSides\>\"", "\[Rule]", 
         "intouchAnticomplOrtSides"}], ",", "\[IndentingNewLine]", 
        RowBox[{
        "\"\<intouchAnticomplOrtInc\>\"", "\[Rule]", 
         "intouchAnticomplOrtInc"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"orthic", " ", "of", " ", "orthic"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<orthic\>\"", "\[Rule]", "orthic"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<orthicSides\>\"", "\[Rule]", "orthicSides"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<orthicInc\>\"", "\[Rule]", "orthicInc"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"anticomplement", " ", "of", " ", 
          RowBox[{"orthic", "'"}], "s", " ", "orthic"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<orthicAnticompl\>\"", "\[Rule]", "orthicAnticompl"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
         "\"\<orthicAnticomplSides\>\"", "\[Rule]", 
          "orthicAnticomplSides"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
        "\"\<orthicAnticomplInc\>\"", "\[Rule]", "orthicAnticomplInc"}]}], 
       "\[IndentingNewLine]", "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.767262089098427*^9, 3.767262180948486*^9}, {
  3.7672622515089455`*^9, 3.767262266965622*^9}, {3.767262301972987*^9, 
  3.767262456621063*^9}, {3.7672624883490925`*^9, 3.7672624933660145`*^9}, {
  3.767262535855729*^9, 3.7672625825003414`*^9}, {3.767262616101678*^9, 
  3.767262637964734*^9}, {3.7672628841660337`*^9, 3.767262884655724*^9}, {
  3.7672636822458572`*^9, 3.7672640146989803`*^9}, {3.76726407801965*^9, 
  3.7672642977482543`*^9}, {3.767264381821501*^9, 3.7672643929801455`*^9}, {
  3.7672644381413746`*^9, 3.7672645313901644`*^9}, {3.7673618823214655`*^9, 
  3.7673619354024887`*^9}, {3.7673619987139764`*^9, 3.7673620815798025`*^9}, {
  3.767362464305797*^9, 3.7673627008786373`*^9}, {3.7675210305402155`*^9, 
  3.767521086851489*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Excenters and Excircles", "Subsubsection",
 CellChangeTimes->{{3.7660482399458723`*^9, 3.7660482578030624`*^9}, {
  3.7661317419014287`*^9, 3.766131746964007*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "showBisectors"}], ";", 
  RowBox[{
   RowBox[{"showBisectors", "[", "vs_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "bs", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"bs", "=", 
       RowBox[{"getTriBisectors", "@@", "vs"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FaceForm", "[", "None", "]"}], ",", 
          RowBox[{"EdgeForm", "[", "Black", "]"}], ",", "Black", ",", 
          RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Polygon", "[", "vs", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Point", "[", "vs", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Text", "[", 
              RowBox[{"#1", ",", "#2", ",", 
               RowBox[{"{", 
                RowBox[{"1.5", ",", "0"}], "}"}]}], "]"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(P\), \(1\)]\)\>\"", ",", 
                "\"\<\!\(\*SubscriptBox[\(P\), \(2\)]\)\>\"", ",", 
                "\"\<\!\(\*SubscriptBox[\(P\), \(3\)]\)\>\""}], "}"}], ",", 
              "vs"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{"#1", ",", 
                RowBox[{"ray", "[", 
                 RowBox[{"#1", ",", "#2", ",", ".25"}], "]"}]}], "}"}], "]"}],
              "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"vs", ",", "bs"}], "}"}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7659676184256396`*^9, 3.765967797830856*^9}, {
  3.765967856447073*^9, 3.7659680986991434`*^9}, {3.7659682266651325`*^9, 
  3.765968230017141*^9}, {3.765968481394543*^9, 3.7659684818732905`*^9}, {
  3.765968814847141*^9, 3.765968817511533*^9}, {3.766132171223426*^9, 
  3.766132263118238*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "show", " ", "bisectors", " ", "computed", " ", "from", " ", "vertices", 
    " ", "for", " ", "equilateral"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"showBisectors", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", "a", "]"}], ",", 
       RowBox[{"Cos", "[", "a", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], "-", 
        RowBox[{"\[Pi]", "/", "3"}]}], ",", 
       RowBox[{"2", 
        RowBox[{"\[Pi]", "/", "3"}]}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7661322668652177`*^9, 3.7661322781091957`*^9}}],

Cell[BoxData[
 GraphicsBox[
  {GrayLevel[0], PointSize[Medium], EdgeForm[GrayLevel[0]], FaceForm[None], 
   PolygonBox[
    NCache[{{0, 1}, {Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {
      Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {{0, 1}, {
      0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}]], 
   PointBox[NCache[{{0, 1}, {
      Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {
      Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {{0, 1}, {
      0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}]], {
    InsetBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)\"\>", {0, 1}, \
{1.5, 0}], 
    InsetBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(2\\)]\\)\"\>", 
     NCache[{Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {
      0.8660254037844386, -0.5}], {1.5, 0}], 
    InsetBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(3\\)]\\)\"\>", 
     NCache[{Rational[-1, 2] 3^Rational[1, 2], 
       Rational[-1, 2]}, {-0.8660254037844386, -0.5}], {1.5, 0}]}, {
    ArrowBox[{{0, 1}, {0., 0.75}}], 
    ArrowBox[NCache[{{Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {
       0.649519052838329, -0.375}}, {{0.8660254037844386, -0.5}, {
      0.649519052838329, -0.375}}]], 
    ArrowBox[NCache[{{
       Rational[-1, 2] 3^Rational[1, 2], 
        Rational[-1, 
         2]}, {-0.649519052838329, -0.375}}, {{-0.8660254037844386, -0.5}, \
{-0.649519052838329, -0.375}}]]}},
  ImageSize->Small]], "Output",
 CellChangeTimes->{{3.766132242785569*^9, 3.766132264315008*^9}, 
   3.766236306228602*^9, 3.7662364444839616`*^9, 3.766270217247121*^9, 
   3.7663426563257017`*^9, 3.766398528925035*^9, 3.766566053163771*^9, 
   3.766746259607312*^9, 3.7669188544085565`*^9, 3.767009800330284*^9, 
   3.7670099392270803`*^9, 3.767013901942687*^9, 3.7670139997404957`*^9, 
   3.767014100625518*^9, 3.7670323967707677`*^9, 3.7670487978656425`*^9, 
   3.767087965470992*^9, 3.767123273536766*^9, 3.767124291877539*^9, 
   3.767260282500647*^9, 3.7676911302033834`*^9, 3.7677326988506193`*^9, 
   3.7678902780064044`*^9, 3.768120628548971*^9, 3.768169908902584*^9, 
   3.7691253147563987`*^9, 3.770132440631922*^9, 3.77014470355316*^9, 
   3.770156540334526*^9, 3.77015776737236*^9, 3.7703710143599033`*^9, 
   3.7704173955518293`*^9, 3.7704534518307056`*^9, 3.770475044114063*^9, 
   3.7704843673231616`*^9, 3.770536074280186*^9, 3.7705853028105335`*^9, 
   3.770630755424358*^9, 3.7706310747124715`*^9, 3.7706660828760204`*^9, 
   3.770801118715933*^9, 3.7708024903256273`*^9, 3.7708093173742924`*^9, 
   3.770832195893339*^9, 3.770838236635555*^9, 3.7708422535906744`*^9, 
   3.77088244739117*^9, 3.770886468449892*^9, 3.7708945375336943`*^9, 
   3.7709343897171807`*^9, 3.7709361251882243`*^9, 3.771025640146777*^9, 
   3.771159271263937*^9, 3.771675529454257*^9, 3.7721372061154165`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nagel Point", "Subsubsection",
 CellChangeTimes->{{3.7661371992710032`*^9, 3.7661372074561205`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
VPIefjWtr0lRBygrGn4MgrgQkQFgFsQZ58K/aSW3WzwT81AZmzH2uVqS7pta
T02+u6qAXXgDc2WStqiS/1Zf+q+LxxTV+H6qbk1VPTs3f/+jqfsPn80pMNyR
lt8XXBkoGjHuNS8vT2xq36tXL/a5+KaVHpB07KYE0vpa3IYxM8aO/7UqOjcd
bfwQZJCIyHJT8OcdgPIjzjg3F9PeZ3mf2NZWtL46L8coxRyap8rInkmL/Qs8
VMyVCZG3ijZLxszPhba43P1N5TVJ9dkwzbT3B7mvWxMSFq+4x3yCKwOFEAnY
nTt3HnroIWbGPvzwQ7JajVKPeHccfg1t/BD0ACEiA8BcsFNP8jWKOkih6+n6
Qj5y/MALtOMJ2vIIPw2Z2DNDesa9mVZhzJhJo41q7sq2qlL/pzr2jWrbN48e
WPtZeNDJnDyFCYMrAwqE79q1a5eod//vf/8j65sx6d7vbeTHPNr4IahkISID
oIIwG8bOOwW5lBFBWTH8RKNTIqWHUcI5itzN+8quzKPj79Hu3rS5kWH15TpR
2VTmZip9aKam9S7k40LrVfmrVVFLVSlbeqWcmFUQe1ybm6q4d7gyoPNd3333
HXNiLi4up06dIqubMdHGz04ufm3Qxg9BpRIiMgAqSH42fx9x3TGIvbkyI/mp
R9iznET+Ros/S/c20+Vv6dCrtL2TUWWT1zTVOmPmqdYyY+au0npqyNuFNqiF
heP9Zr7t6eTHFLmL8tIMD4C7sgK4MudElCmHDx/OzNijjz4aH89L29Zf+qFr
qpyBNn4IKq0QkQFQEfIyijm5hBo5NPYls2fZ8TpvlhZC0QEUvJLOTqE9/cmn
BQ/KRGhmWAugK2Xq0zOdK9Nt+Xfuc4o9xnM5GZ0rA86CMF0pKSnt2rVjZuz5
558nK66jVCKOw8SL5FVNty8S2vghqDRCRAZA+chNLfV/+qEKbxamq2wyY5YV
R4mXKdyXz/NnxmxTQ928snXKJQBS/79s0tiP1ki2bVd3ujyPEs4rHpAW5Usn
QfiuCxcuVK1alZmxWbNmkfVrlDJabsn2D5E6x9DGD0GlFiIyAMoB/0+/HGUX
ZW52l3edZcdJxiyW4s9Q8N90cgLt6Exerrq4zFDH1HdEi+qPcGXs8z196Pr/
8ZECMgjKHB3hu9asWSO697du3Uq2Y8ZEpTJkDdr4Iag8QkQGQJnIjjdHD4zs
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
uFWDH4MgJxEiMgcA4/ftRqHSNkn9TIuVNxfz19H2ipUikkpOTm7durUyxfrj
jz9IYcb455IfuxWZ/PrC3UO/3TZsPvdjL3M/5vfe7wci4tO0Cit1/PjxiRMn
Nm7cuHBQphwby74zYMCAVatWxcXFyY/HoYIy0TwWHUAeLkaT+dkhwQ4SZsbS
w5B4Q5CzCBGZvYPx+/aitDt8fEHUfvKuqT/5SsXKDQ9RqjQT1caKlcJunTt3
Th73Kjhx4gQZmzHS+7GLd+Nemr/j+e+2v6T3YwPn+n289FBCWjbxVZl58uXD
wsKWLFnSs2fP4oIy+futWrWaNm3ahQsXlA/MQYIy4ceCftcvrlT4saNjKDte
emvDj0GQ0wgRmf2C8ft2JDHp4sJMo2IlO/MeGi41ddtWOCbs1t9//610Ss2a
NYuNjSV9bmZ0eek7h65FDJm3jXeO6fzYrgFf+05ZeTQ9mxuPAindUk60CAgI
GD9+fIMGDfQDyjTKaRiyK3N1dX3uuefc3d2TkpLEdR1iI3ItbzNgnJ/OJ/N7
y8MuXPlRcXE25aRQKpr5IciZhIjMTsH4fXtSqFR7ukc7uynGsEvNYyGr+Ktp
S35MWKaPP/5YWUAcPHgw6XvJiriKlI/5nb07cK4vM2OyH+s/x3e2x+k86cfC
PAkrJV/xzp07P//8s5hmZhKUmTT5t23b9t///veVK1eUj9OegzJhwrV09G1a
rVxc6ULrNBT8F+WmUWqwtY9bCIIqV4jI7A6M37cv8WJlLN3fTp6uujGwXmpp
z8qm3KrZzJ6VYtwrMzm9evVSmrEZM2ZQoRqlEuHH1h8PHvC18GM7RL2y35yt
/916kaRwTKu4F2VQlpub6+/v/84779StW7fkoKxatWrDhw9fv359aqpugYA9
B2XS8o2CbPLvo9g5Sy0tvK1C9zbyYRfIxyDI2YSIzL7A+H27kxgDe/ZTw5nX
24VXqY7zVYo2Eo6JrCk0NLR+/frKPq7NmzdTiWaM9Osr1xy82X/OVrG4Uvgx
9uWy3dflC5jcnfI2b926tWDBgs6dOz8wKOvQocPcuXNv3LghX9cugzLhwJkb
92ktRabysAt2bNSiiB2UnQg/BkHOKERk9kJWDMyYvSmUTyNJvU3b2huKlXzm
p5q395NN+DFhjXbv3i38j1jtWLNmzcDAQCq+TCkj7NbS3df6zdn6st6PDZP8
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
BZYRu+XsCEqz9q8JQZUmRGRmITMKqykdVml3+B43h1/Xh2PCklWjRF4xtIQf
EyYhKyurU6dOSl/xww8/UGWZMdL7sfMhscyGPf+90WbiE5cdSkyv0GbiFcEk
KEtISFi7du2QIUPkQKy4oKxhw4YTJkw4cuSIbMOUSzjN9eB0h8SFf3PT7qnw
Y3xGSg269T/KSZb6x+z4L0ZB6t2gS4cun9p99czeq6fNrTN7L57wTwi7TJnh
Vv9NIahShYisIrA/vxi/78ASW4eHb9OfWOWNCD+UXn3zmzFhM27evFmzZk3l
uNfdu3dTJZox0q+dPHAlYvA3ppuJf/a3eTYTrwgmQdm5c+f++c9/tmzZUhmU
FbkRee/evf/888/79+/L1zVrUKb3Y1d/4AbeQ22YG+yh4hHZ1fm8Xpl+V5K1
D+8yilcPs+6nRF1/vMNj7CmtVq1qFXNTvXo19notW7yAGe38FKx6gJxMiMjK
jTafTxOCGXNg8f9WYujg84ZwzF1Nm+rzEetkfj8mDMbmzZuVdqJ+/fqiylbJ
GwCJfMz3dBGbic8132biFUEEZbKViomJ+euvv/r161e4dimCMvF8Mh555JFJ
kyadOHFCvinzNfnr/VjwSloneTDZj3lK0+rOfc4dvh2O6JfN2GNtWomnVGVu
xIv1xy/zYcYg5xUisnLAx++HWf+1gywn9r7Ijqe7nuShMVSd1qro5mJ+AJi7
jV+YsRkzZqgUDWO9evUSlqPyN8gWfsz76O3Cm4n/n5+ZNxOvCCZB2alTpyZP
nty0aVNxilc6MZOgrG/fvitWrIiOjhZXNHF35UcrrRq470fedXkgZlgAopHa
Dt+W/t5G2dfIC9mMdWzf1tXVpWrVKuxj8XKV68UyrpwSrsLTNvZx2eL/wIxB
Ti1EZGWlIBuxmKMrlPtt9tbY+YR0VtXvjuTfS/rPxczhkAhnBg8erDRjH3/8
MVVujdL4IfFfcBXfTHzrMOXmlXN8l1tgM/GKYGKlIiIili5d+vTTTxcXlMnf
b9GixdSpU8+ePSvflBmCMvGPbfwZ8mktxarGW1j696Gki/Y18kKYseTIa00a
P2z2TEzJrwvnESXCjEHOLkRkpScv0+5qDVCZJXZHuvyNYQCsp5oHZbFH+TFg
vnBMuIjY2NhmzZopM5yVK1eS9cwY6e3Wn7uu9i+0mbibZTYTryDK5nz2rB49
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
Dh48qKurS9LdWfvmm2/Wrl3r6uqamZnJ+67SfXYgx+Hw4cOULCCGeExTU9PD
wwNKfGsIuRyCKTFBfr8sncCY5fXzpPkqtViYojVsUL9cYCwYMuPEDv3hBvXE
UIOQGHlYRkToRQcWhEZGwZQCGHqQf/MGLl6EuXOxkEK+UmBKAExTE/r0gWXL
Ci8FxhYTn8crJr7ddtbhe8F0MfFcOkAWFxfXpEmTfv362dvbl1HaGBvaSkzL
+sfOe4yR3TDeuOSuO3r61lP3O5q7fcrKEZNVSqebJUicmgodOyoUP6pbF6va
kk8FyxMoQ9hjY2Mza9asmjWZMo6qAmXVq1efPn26paUlG/ZhlVSVnsC8DObn
53f8+PFhw4ahTXGbuE6dOq1YscLJySmdU4M+f5nWUjkI33//PcXJmpswYQKU
0kOKkNEhGN8E+f2ydAJj1jcuouZLR0dbMz+rpqWpqa6uUEEDtQBa9Eeq1kGP
jQiEmjdrEv7Bo8xhjPwi255gQf2ziKkPTgizQ4cOZJxCaGGUK1Gg9+/fYymw
xYuhVy/eJEflAMZRosDve/SAhQvh6lXw9uYzQyGkwIhyV4CyYuILjz2ITMwA
GbN5e3uTcZ9SP5XsuCR6tX0ZMvfIPV19q3GccUlcTHM7zhnbc9szMpHpc0s6
Lsk10ofu388PixkYyD8VjGO8QJm/v7+hoWHXrl3ZBkodI5mSQFm3bt127tzJ
1fUCjPYS7mZ5IbizZ8+OGTOmVq1a3AawXbt2S5cutbOzS05OZhcuUwZj95D8
3ho1arDMifbn5s2bIMT/BSsjE+T3y9pF4SnR772eOfq8uOfzXKW/cXd85+M2
eoQu90HMUH8j+iP6SOWKL+55P3fy9XyYkxwIGWU6oTIES6Ck+IutOiIYmzOI
gTGyn5MnT4aqHBbLXwps1aq8UmAFAxiRAps9G86ehdevIStLYctF12IlPOYT
moiYZ4yR3XgZjw3bZvPTKZf4lEzgDAXmPZVSmRX54JANylb0i0jeePnpUAPr
UYrjkmPwuKTV8n9d3fyi2R0uze6W6LhGRODZDexhR6+tW0NCwtek8lpykzK5
dbgIAnKxRJKTm5uTyxBISmrajZs3p/zwA9Gip/D4nTpBMl4hckRWc+bMsbe3
T0xJI+vyGCw4OPjSpUuo9ahfvz6XwVq1arVw4cLbt2/Hx8ezC5cDg3G/C71e
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
xi3L79Chw8KFC2/evJmVlcWupCI07C7aVCAnJyfHyclp+vTpXHHa2rVrT5ky
xd7env1oxf1cZP22trYkOEZyuHL9lilT3r9nW95LaQ3Grio6OtrCwkJfX5+s
Yd68ecDDGG/EePn9iuRawhhmJ0lssO+9OnVqs8OCm4O1rKT9xD/o0vQQkCaG
vnDS1yPX1vI3tbe3g6IHk6KlwHbvxpnEEkuBrViB85gchUlsyqozmTaIVVyN
90yOxrtvRPLjwLjrr97bPw6xuh1w4KrPZvvn/9g8Xnry/m9H7849cHv6rusV
VuN90JorQzZcNxg2jwtjuq37tDkgw4KuJYKxOkNXcGFszJgxzCEghU9T8U4O
toQEaNWKbX6Eb5s2hago/FTVCoupM5ifn9/u3bsNDQ25MoMsg6lLhBkYGPzy
yy+urq5pnDx+xWcwdVMJlAUEBKxfv55bF4esS5culpaWRCWMmPaBMrLy//3v
f+o81rhxY8RX3P7m6iaRSJ48ebJy5crmzZuTjSECRHxkjDelZcfwsykrjmsJ
Y2Qx1ytWbBlDs6ZN4kKeQV60tGyaKZB3dLu4n5xpmaFIUFOXeuuLy3rRQFjg
oNIEYDk5uH7+yBFcS9+hQ7GlwPT0cPX+H3/ILl+WBQWhU4WUdTSo5ktwORCT
TilRxTutWvH+OlL8JNT6rmaN940uJuZFCZAOXYcR61NovGsIphVW8f6IrXi3
vRtw8028+Y7DFCsyhr7cGvVbrA83OFT8srG9MoOD0urtjbgwhi78mSIZ+hOd
18nxZmqqGhbbsUP5bOU3dQZDgHHo0KHBgwfr6empMFihMq0tW7acPXu2g4ND
IieVXxkZTMVUZhZkZmZeunRp0qRJtWopu5nr6+t///33Li4uubm5ZDFtPjhb
q7948WIWayl2GjJF1a1bd+TIkYjK0F718PC4ffs2uhWLxfv37587dy43f0q+
F6JdNmvWLOBhjDds6CQUzcNYxfFiwdjOLWY4lMHkKAf26wWSWC1bTJZ4wyyW
T+NeaHfp2D4nE88ll49jhQIY+vPVK6wjgYadzp2LlgKTCUXIpRSldPRn9+7S
eT9JbWykvn7SYgo34Ir3LNWKd6eSVryra7yXImJ9pMa7eSEV7wnaVLz7+/mi
Mzg5ZZPgWMPZZ5k+4MWStpAaHJa1MH0r0K1FlGPlh+7x4/DJzjVkOkZwMI6a
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
QG+E3m7dOjhzBu7exU0zExM1bmdlIzQ2yZicmXvgqs9ISxeTtY4kHSnvY77R
FXHRhK1uNp6B2XlsXlKrD6WNXJXKAgTxkjNyfz1yx3itoyJf6Ur6qj8PxiVq
pRAfI0eal5dSVYwcBgMGyL+1sjd1ibDQ0NATJ06MHTuWe2pWk8pXpikbN2ow
7bup587bRcenKj8Z3j8gy03CVVgJDyHiMs4hei0Cj3FwtRdGDkRc1kVT1oeA
ylYg9+LREReTBPiNCrjKOrVfW5FbqLqdhb3KVgFsmlDtUj2cKr3aE24OxUlY
tD8jHXE8Leu9xmDahwJoKoEyf39/c3NzttKSWNeuXTdt2oTIXPnl8oEy3go1
Xn6/8jvTqChpw9qVTHBMh/CYnl71DeYrk2L90VkRB9akcTi2hlwSC5BIom3R
4S9377Bo3bI5KVn5Ze6MQjVjGRhL+fPnSYrTCl7/gD5dZXS2rNBLSCI1oCWh
ZWTg4NWTJ3DlCuzYgYNao0bhAFfz5qq9xbVJdKo8pWm+QI0aYGAAffrgkN3y
5XDwIA7ivXiBA3p5GopSiIq7CqGVN6SxeUn0z/V5+Ky9NwaaOhAAw/zDBMSI
Fu4Gu+fvE+URwiLjYRqNDf5wTZOAEtmq2JSsOQdum5jLeQxt1TAL50lb3d5G
Y/D4WB4jX8Ho0cqAGDkAbt7Ez5ZlWEydwd6/f29tbT158uQGDRoUxmAU+tFw
EIyq17D5xKk/WtleiYghDCaFrAA6won23SV7+ifcmYiTceJ2cLFOIdBFiEsV
SzihKq3oRVBIxEl7t2a3QUcJZjYFM5LFWqHKylUyoRrRrlCw1IBq6lE19Lh9
U3DtjkvjvBZDwH6IcoPkl3jegYZvXh3PVITdMjIyLly4MGHChJo1ayq/7nr1
Zs2a5ebmlqcYXvhAGW+qls/L71d6x9nGjDCg4+fPnUFqunR05OkPgzYtly6e
7+ZwxvfZreh3T2OCn4X43n94y+HM8T2zvp/cvFkTsliNGjXQq2ZNn1wojMky
wmU5YYZ9ulBE7pXJrSz65Tsorri6OqRpukJET0VH4zKw69dxSdiqVbg8rH9/
aNcOVwd9ZBhNU6ITeZMmuOBt6FCYPx+2bIGLF+HRIwgKgtTUwrcTyjOMxjJV
YFTq/848Ml6LGzlx85IjLZ0NTR1+PuRx1y9avrGfcL4p4bHwhIwZu2+Q9gdk
ciW6//3uG2Hx6ewyJTFy4Dk5KQNi5HbKFOWzpW3qDBYbG4vOvNOnT2/SpEkh
DEapMJigdv0Wo8d/99+x/cEv3SD9EcScAe/FtJshfcVAhqhGPdJVCHSJlPhR
KHuoUJYm4EHPntfF8SKHluD0Ja7FuvoNXOsH143h9ii4Oxnuz8SVZl5/wPMV
8NIUfDbCm13w9hC8Owmh5yD8Mrx3xOgS7Q5R1yDqKkS6QKQTfjDCAZerhV+C
cDsIPY8ThSFn8ByBoBMQ9C8EHoG3ByFgH/jvxuv0/hu/xcPZ+B1vDsMb4NoD
F/mL22BMstOH89UxMhX9QTQC24dQzbawYBp6/EpLHIG8MwF/9qBjEHMTTxrN
TSjsmFCyGblYYZ95/fr1qlWrOnTowA2U9ezZc+fOnSHo8lN5IPOBMt4Yy+Pl
96uCY3l8dCc/1vyfpeRXr4NlMZStb6tX123etEmL5k3r6dflDg7couI1/1us
LuDPyL3GR/tdb1xXh+LISZ09dRhKpdNNscJoycm4Wvv+fTytcuNGPMVy8GDo
3BkaNSrDRGfduvDFFzj5NX06rF4N//2HYy8+Plg5QRPZlPF8ATbJmJad9+91
P1Ier5KXNDITj9vkauXxNjM3H4qTlyxFI7GvoOjUKduvIVAk8ToyiWD2/ltk
BkFJeIzEJPPzoVcveUCMfKe6ukDmEZTq2U2dwRITEx0cHH788ceWLVsWymDC
ggymp6c3uHudQ6sGvb04Dh5OhLv9QNyAPkXRJynpKU6luibokoNEwac04ZYK
ZV3tCdeN4M4keDgPni0Hnw2YhUJtMTUhxoh/CMmvcDIU/dizo3EBfG4ylgHX
yhOxRqXcEzCrYE9kXMs1qHgyXkNWJKS/gxRfSHyGZ1OijUSYh9gvxBqjoN9W
eGkGTxfjCZg3jHFQS2yAy/vRPlHfFUXlbTXvW3VCQ/cREyI+dB8Aj36BwKO4
YA/tsUKOFVomldCSPCktT32mpKScPXt2+PDh3JG2UaNG8+bN8/DwYDGMD5Tx
huVfeBirEo54TIbuQNI1J9v+fb/hniMQlXFbqFSrpqNbTclpNfT0Jk8Y5SY+
m58WKlNTtyAFY3edjjAxNxGWWhcIqgmpVy+8AIt9lU0yiBCaCtJoGqlyciA8
HLcgdHLCggZLl8L48fg03bo1VK/+sfMFNCU6q1WDli2hZ08YMwYWL4Y9e8DR
EZ4+hbAwyMrS+KFUCK34kIbXoaCXG68i5xy4ZWjqMMrShcSdSF5y6Honk7WO
a895hcSlkyVLlpcsFSNb+zI0EZHYCAvn0QoeM17r+MvhO4kZWDir2DxGjrpT
p1Tr9n/7TfnsR5s6g6Wlpbm6uv78888GBgbqDEapMhhVTUQZfkXtnk357dGD
S9XgCgUXMH3RpympNVU4GxQS6SoMutCfF/TwBEOXbrgI6sEcjCiYsmxUKQsj
liaUioPsGMiKUmjahOFzQUaI1h6q2bVfido6cQ1zBEYytOXZCpkyTfyW9R5S
/XBZXfQ1HIh7exhemcOThTjO5j4Qq2c4tMKF/bYa0qx4h2v3LagUpKGXX24E
br3h/iysxRF7C8/lLCgwgg5qRGXsny+eP1+6dGnbtm2518J9+vQ5ePBgREQE
59DmkexztVxefr/qOM5XYnZKREx19YrVD99P7tDegNJgTZs0Mjbst23jmjfP
bspnbhamM0akzHatnk5xNJG+aNc6PRUH7T/1uKF9ohNZfDz4+YGHB5w8Caam
MGMGDBwIHTqAvn4ZhtEaNoROncDYGE/xs7CAs2fh3j0ICICkJI3bqXWik2Wq
kNh0s3NeiLiGMnnJ0UxecgzOS7ogNptz4DbiNPm6K4AOLpk7edcvesg6J3Zm
5dhNV43MxIuOe2bm4MBdMTaSHANpaVjehHw15BZ9raGh8mc/wtQZLCsr68aN
GwsWLOCmnAiDyWVaBQUYDP3Zrz21ZSb1ehumL3CgwI6S2lD0WXQr0HzSFyrr
mriOnrJvjLW53A3xJMEXK3FpE5bhugXJ3phbiqAsPFM+7AMoheGnos3hCpP7
B+kOLYyxLQZH51SDbEl4DSmvcXgt6iqEnQP/ffByDTyYjSU+nL7EkmhnCwp3
FFKMxynDU3mcy2bojp0+ntDqORV8N0OUK6T5Y2Fb0haWU1YbHxdz4r9/jY2M
Ckykbd4cHV0PHjxQ/mT43OVnaFh+n4exKuXyPCNTop8a7fvsgauj3Yk928zX
rflrvemyDWtXWP+31/P65aggL5DE4PJ+Oo5MsSxsbWF0ejjQYdNGFigYmzh+
FJRKjrJUrFiJzvR0CA6Gx4/h0iXYtg3HUkaMgO7doVkzjbVk2gujaQqj1aoF
bdtCv34weTKWJz18GK5dwwm1qCicayvUVD8RbumEHs7MzT99++24TTgLOUbZ
2AjfIZnKf6+/ScvOA0XD4jLZ4cU3Eh9zfhqGNnLURiWPGZqKV9s8Ji1Ftd1Y
8uVu3aoaFlu7Vvls8U29bXdubq6np+fSpUu58+MKtCtiGIwTcqa+MaDWf0c9
34xO6AyDXaJkcgajtEKvCzXBsR1c64uzik+XgN92XJ0V7Q6JXpAerJpDRMSF
cSu8UlFWWXiYRmDLJKgWy2RRuZyWiDVv4x/iKOLbI/B8JXh+i8Nc4jZY00zl
SzmrkuXk5jcLhs64mU30VTp3gTvj4aU5vL+CmFAqyeMemk8ePfjj9wWtWiob
kQsEgoEDBx47diwmJoY9JvlA2WdjvPx+1XQSIsN8lRMJkFBAr4z1/Ggps5i6
sBhnPaGQG58dcb1TS13mTCQvGNtkuRaXR1QQGCvUSFmRlmE0RESRkZiOECMh
UkK8hKipb19MUIijPjLRWQTjIQJEHIhoEDEhIsPLlzElIlZMTy90M+/4Rs0/
eMtojf3o9Y7jNziPsXQabek8dqPLsPVOCHJWWT8KjJZPNCjHvKQmIzx28cE7
hJGMDKx8loGhqcO2K96gZTNxEjZ8/x4aN1bGxNBtmzZYq6REtXkqDIbuP3r0
aNWqVVwxT3UGE3IYrFtr6p9J1GNLBroQg13G6EWfFUpt1Eq8CqBXDYxe7gNw
rMZnIxYNi70Dqf5MkIcLXfHMKB2hxhuh/ND9IQ/TgGqhTLemGGV5G+nxlOKL
xXLD7Rghkd/xFEuX7mDfHH+DqngmKATPuLBNSJtls/PVwKUHPJwje3eGTnwh
k8ovwaLiUo8cPTagf19uzqJ169aLFi3y8vLiHpN8oKyKGy+/X9WdqOtz9cpY
l6Z/+HuXpoeALPmN+6Ya+CwkYuVe3d3doeJExoplxQqjJSXhDOO9ezjbaGGB
M4/GxjgL2bBhGSY669XDuVRDQ5g5E0xNZadOwR2P1GfeB89gjYh+m2+a7PQw
2nHbaPttk203h2y+ZrjWcdYu96teIcwHQcO8REZXUGE0Uhtm5REwyNRhDGfW
J+Kxw1o2Eydf1p9/qobFjhxRPqvtxqh2q3n69OnatWu//vprbrBClcE46cjO
Lall46h766h8a4bB7PEJmrYRIQaTFYJeeljn6toA3GbIxxKHvGJv40Y/OGiT
zAl2vdcAXfwoXbquDmmh+GyIS9SSlISW+R73Y4p2x9MHXpnjLKTr17hajJvf
1BQ647IZ2+zgNAIzHcR40vs/0oEnIfMNOfbuPX41f+HSps2UgTIdHZGJicmp
U6cSFYqIfH+lqmxSSRHtCHnnnVGUjbm0eTCllHul6tfTDw/DU7OrzsVaseYL
ZGXhKn103SoW47r9xYtxDX/Pnriev1q1Yic6tZsvkEmJwvXqvWvRwatTP4cB
E4+OW2D+4/pFf+yfu+rMwStPSZ9O0ku9wIf66PkCpW4Et45c8xukaF6paCYu
Pn0rAIrmMXK8vXkDNWsWaH7UrRtkZ2v56dTPaC9fvty0aVOfPn3YSS7qDMYt
CfuyGfXHSOq2GZV9RgBiIVwRwXkRfVYgtaZkLHqd18Wz/K71gwezcL/FUFsG
vfxwmCuvCPTig13l62pTGNCDuN15vBLPELAlesF7MfjtxBNUr/UHh9aYu1g2
UxUkUWMzDpjJbEW0uDNW9oi1AzokPDRw3+FTvQcMpajq7PHWvl3b5cuXeXt7
s0csHyirgibNK++Dn/cK7BmhdGYsZD5YMQlriYsUOUp02tIk9VnVTPtEJ1oy
NhbrXdy8ibUvVq/GOhgDBmBNjLp1PzaMJtQYRsvRrw9fd4dhQ6Xz5skbqT94
UJEbqcsUKdQdDt7qzcQvFN1MnAS+Zs5UDYtduqR8VoOp9xHw9fXduXPnwIED
dXR0uGX5irbdqgzWtjE1fwh19R9B+mkRiEWYwc5RtBWeGimzYsIj9k3xqfnJ
AqymFXMLK1Opolckj16V0AsSGvpTrgFCkpvxeI5A9DUIPIZ7Zd4cDo5f4v4I
3KAol83UwYzJZtInKdpGAO49wWeRJPDfm5d3z/1hWsNm7ShKfnDqVa82ZvTI
c7Y2qQrNQz5QVqWMzuGr93nX6Bkh0pxkCNxu0oEU71MExn5jBAQqZY6yVKxY
iU40cgYF4UbqFy9iFdn582HYsCIaqUuRCwRSoVDuAuQCmcLxn0Klsy+Rqayn
YjdSJz0bJFKZqe2TQabicQWbiTt6hUGhPEa2HO1JtgyPkJixsTzoV/jHUmWw
gICAAwcOGBsbV69eXYXBCpXKb9VQMNdYKF4pSj4hAgchrgc7S9GMPIXsfHVw
6oSlQV9bYJnTpOdK+uLRqyo7F89IcpMzlzM9EOLuQOhZeGWKFTZce2AZNG69
mUrQjANmUobKcNDMSR88+gWfG3R0Zc/BPRvW0NNjD8iOX3UwM139xs+X88vg
A2WV3ySZPIzxrsll6aGQHxd3ZWTzWiQwJoexkydPwucMY4VaofMFNPFMXp6y
kfrBg6SRuqx3b2nrNlBXQ38BDfMFZB/TSP3KlfJqpE7WkZkrWfzfPaOCzcSH
rHPy8C2smTghriFDlBhGPvi9e/LtLLCsatvud+/e/fvvvyNGjOA2qdHcrkjQ
rJ5wxkCR3V+iuGN4UiRcZBjsDEVfaipz6wdPfsORkNjbeJKjPPaViAMm3HM0
j16fixcMnWVFKAvPcFrzPSQ8wiVnz5Zi6bPLTeSF/aoTAZRgJjsnpK0x7cN5
CmvTXanrs0vv4PwaY3rqNNFXCGII9SZNnHjF/lJ2Vib3mOcDZZXV8tN4GOO9
cMc5yhjIfHx/sz5WFBcI2DbHz58/Bx7GtDTtwmjyy9rU5OeunmYLd27/drnN
0Fm3egzxbdMlsmHLrFp1ynC+gEojdSsr3Ej9zRvc1V2TlQahkWRlUkbOfJVm
4hbOoze4vAgp2Eyc7DR7e9UE5fTpymcLkwgLCws7derU+PHj9fX1tWAwYcM6
om/7iWwWUVEHGQCzQ65LizvSt8fLXq7HOvCJz/Cplg1/4UmOPH3xznWVtGY4
M22T5DTjIPE5njb7YhXcGIybLp3lghmlAmZSGwHWRTnLXA5gtTpB+EHq8jLh
ghGiL5vJD9mWbTuuNV8fFBjA+XXygbJKaLz8Pu+aPCOEzk6CsD0HfsAnKWYe
GT5ptW3blhQt8JdgJTcOoUklEsISCWk5u676Ddt+c9C2W2Sy5KDtt4dtuzHZ
/PLURcfWLDsUePi0bPcuGdtIvUWLsm2k3qaNvJH6smVl1Eid1OrHpGTNPnBr
MLeZ+HqnydvcAtlm4mQ9ublYBoSilKX7enrgi5M1MlqiwmBRUVE2Njbffvtt
w4YNP8Rg6D+Rfi3R+J7UqV+psL1MOMJBCG6d6bszaP9DsuhbuDsPH/7ivcTO
PWBIvRkGswTckTzCHl6uhVsjwaENLi2zUkwBKAhmUlat7iKJlVFZVgKvTaIt
M4X92lJ42omo1qjx0+zsnXJzchQ/Lr6/UqWyHF5+n3cNjmAsKx4ej53Vt0DB
2NixY6EqzaMsP2OIDA+VElrq8CR02k53w9VXRls4jbV0GsPcjt/gPHSteLCF
y0Zn39AsvKRyYKU1NFJv3/5TN1J/+PBjGqmzzcS/L6yZeHh8Bl4mn2nzhz5m
wbCY7I8/EH7RHDiMi4uzs7ObOXNGs2bNCmEwZdtufBd5zeqCEV2of+dR73Yx
wYfr7eHBRNpnBx3pjkVd8lLkMl/K8FcIT1+8f5yHcYrNohRCvolY4uy9I7yy
AI9xIG6HI2OqqUwlldFnmUuGyyRcJgw7JDr7OzWpB9W8NtWxc9c15ltf+gYp
f2J8oKxSGC+/z3uhnhEmy4qWJT3NvVi/G+6ELBAqYGzdunXA5yg/2lhRVr+I
5D9P3jcyEw+zcBrLkd4aYek8yEy88NjdJ4Gx8tdoM18gJQVPpXzwoEAj9S5d
KnIjdRqzliwwKmXyNrdCmoknZ2JuTUoGAwOyVTKhgBYIaH19iIwiK0tOSnJ0
dJg758dWrVoVymBMy0gBCYKh2+oiyrgDdeAHyn8nBS4t4dEoeGMhjXCiU/zx
jBVVAOPDX7yXkbMJTWYWQG6CHMxS30CkK/hshjsT4UoreSqTGy6zFcgUVIYV
7ewQlQlALMo4Jby+ilo2ghrRU3/+vB8uid2T0xUNPmQIyfhAWYU1Xn6fdw2O
51EmQciBwO1ULT35TH+SpnR1dQUexj7CMIYxI2JyRu5+V5+Rli4max3HKBTp
SYcjhGETt7rZ3gvKYTqoSNUbG5Wskbqzc+k3UtcURtPVlTdSHztW2Ujdy6vQ
RurkYPIOjh+93nHEOjGJDY7f6GJiJv71wM34fJlsg6WUomiRiMbbxmDhoUPp
uZluTuL5P89p19ZAncEowmAiASUQMQyGNQIGGFA7ZlK++5uAx2AI+Bti7KXJ
r+jsBIbBEhjVLx7AeC8X54LZe4UUcCKk+GCROq/fwbU7lvG3UpmSKcRzMLnh
MgchOIlkZ6kn66gdM6gVP/Y8fGDPS79QzsiBkIwPlFUw4+X3edfkuGAsAZ5M
cPhTnqMkZ7e6desGBwcDn6YskbF5SURWLs/CZ+65MdDUgQAY0doay6TnBps7
brz0LDJRMUmqWBezJWukfuoUmJlh/S5DQyz+X69eGYbR1Bupe3pCQACdgGXG
77zPHLzTY9B2pr/A1hujtlzrZ3HVdIc93aghUIj68HtlV6duN6zzx9zvv/yq
vQqDKWVaRUIBZjB5WVifNtTGH+u9PN4fni+FOBvIeCbLjqdzkqXoIM+KUp4E
+cGQ9wrhXDBjUpl5KfjBaHd4vQFujYDLjZUCs/JwmZAbLsPNza+IwFEoOU09
NqdOLml4atvPjx/cTc5QjAbo7C/TfPnG2yc2LL//vryPOt4rnuMq0xg69iE4
66+egKNibPV+z549JRJJhepAXVmMZaqAqJSVVg+N14qHrVfNSxqaOfxy2OPu
m2iyJF1aDSZL1kj98uVP3Ehd2rcvTP/Oa/KcvWN/N527YcHigzNXnh6+5bp7
z9FomTw94b2a1LJ6VOfqrBAmJVRnMNyuSy6k/3VLau2sZk9PTYSA/ZD1COho
WW4ynZ0ozYzmAYz3SuIKMEP3yTTenHhIegZBx7Fuv9OXGMasWGlZkUq4DN9H
VHaJyvyXermJurHrmycu+yMjgpVXaITKgB/Py9V4+X3eC/WMYHQhJvU2g/PU
sG4iipQ9MwVj8+bNAz5HWUxjk4ypWXnH3P1Gb3RBJMbkJV3ZvKTRWvG4zVfP
eLzNypVAoXnJUrfiNlKPilJtpN6vXzEaqWs3X0BaYCUCunb9dy0MHtSqtrqu
oFsNiqqmYDCOVD4OgeG7Sgbr2oJaNcPg4emZksDjkOsNgDM+dGYMbsbKAxjv
ldU54TI8JZPRykgLhEhHePEPbjd/sa5aH3M5lUltBHBBBJcF6M/0Y1T4kfrv
7KclvXXJzkpTjjKYyqQ8lZWP8fL7vBfi6DwVIUsPgaudkw5TrRqyMQcMY0eP
HgUexrQ2Ni+J7PrL97P33TIkeUmiqcUExIaudzJZ62h+/mloXDpZsrTiYSW0
cmqkLhUKaZFIhqNnuD5NJhI+16E26lIDBEoGI3MgSepRzmAihQYmRXVqTv05
vaPnmV9z352DfD+0cZCXRGdESdNDZXIGK/cfF++8l4orpmSS6jJEZQjP4h9C
wD64OwWutJHX/CtLywSEymS2Qkxl5zGzZf1HpV/skH5vSX7sA5k0nzMCECrj
7RMaL7/Pu7qjH3huIv3uLFwSPNkgRBgmkLtAKBQ+efIEeBjTzlimCo5NM7V9
gohrKCcviXhspKULYrO5B27ffB1JlqQrbMPPEjRSf/oUV+x/qJE6LsvnBsQE
1GsRtUWX6qdDCaox80YY+FJhMBGHwb5oSi34rtuN00uzgh1A+g4gBfIS6YxI
Oi1ExitR8F7FnU1ihmFtBCKFl+ILIWfhwWzcwdxalcpktgjJmLjZeRFhNskZ
inbuIX1hKkv0UmIYusOnLz+Z8fL7vKs7+l3nJNAek8GOOjpfnqMk+aDWrVsn
JSUBL/f6IUP7h5BYRk7+qdsBCMCMzJR5ydFMXhJnKje5/nfjTXp2HnlJpdyr
JW2kLv37b3rqVGm/fli1rFUrqF7dT0DtEVKGIqqakrOUDCZg6sG4DGbQWPTz
lF4up/5ODXYFWTjDYAl0egTDYHwikvfPz1lpWaySwfQxR1T27gR4TgP75qpU
hvuVU2CriJuhZ08zkObWC15bQqof55fLB8rK3vKSeRjjvYAzpfsQf58+Xweu
COYZC7gFY8OGDQN+HmWRhkXoFXlJD9+onw7dNjR1GGnpPIZTqD90vZPxWse/
zz4KipELpZZzXrLUTXOiU8qoWHAPoLdeXoeXLxtcp7aegMTBlAwmKMBg8qda
NBD9OKnflRPrEt/dBFkkw2DxdHo4z2C8865wRbgMUxkTK0t+CW+PwJ1JcEkx
DdNGKVnGzMckhEbJme18Tbxw2HnIT2F/1XygrAwtN4GHMd4LOFO6L/NeI7Oi
JOdEPRn1JlbudfXq1cDnKDUby1ThCRmWF58NNnccsg7nJUdvcGH1KxCb/bD3
ptuLCPlLKmxeslQNt4yUSJCzj4QEBf537NjoUSNr69flxsFELIMJBcxRJ9em
aFKHmj6q64XDq2LeugPEYAbLRwwWpmCw8v7h8M57RXS2tCyKkTJOwNMw/ffB
7dFgV68glTHdMBWdypWNmRy/gBd/Q7I358fMz74sA8vh5fd553oYLgdNfyd1
6gjnqeC9wjo12AwRhjEHBwfgYawwY/OS2XmSs3cDx2+5SvKSYwrkJR3R/cNu
vimZTF6y6gXE1Ey9bXdERISVldXESZPq1aunZDBGEawgg8nTkfX1qMmDO5zZ
vfC9jxjocDmDpTEMls6PXbzzrqWHKadhEnGMhEfgtwNuDIGLtQsqYwiZ9KVi
MuZZnL6Ec9Xg1nAIPo21NZQ/bz59WXrGy+/zznVcup8EwVb0GQFcEbqskofF
iNxrrVq1AgMDgU9TFjQZKPOSDwJifj1yZ5CpwwhLZ66A2DALJ+O14r9OPXgT
KY/5V20MU2ew6Ojo8+fPT5s2rXHjxioyrYqWkbgsn2WwOjrU2P4tT2yaGfrM
FvKCMINJEuS5SJ7BeOe95M5SWQxDZbEQ54mFZN0HwvnqiqZLgkLSlySMdqU1
eC2BxCecXzsfKPtoQ0ybFcXDGO9KR7/QnAS4M5FGl0IOonXfUtzq/W7duuXm
5lbWOvOyMZapopOzttg/H4Lzko44L7mxQF7y+93XHZ+GEo2LKpyXVGewhIQE
e3v7H374oUWLFoUyGJMBVzJYDQE19Ov6R9aOC7x/BLJeAyQDnUhnvEcMJk3n
68F45730XClZFitXxoi5Cd5m4NKNI4vBTV8yBWYkUIbYzL0/BB7BmRTl759H
spIaL7/PO9fJrzL2LlyoLbUWgL1gTA+KW70/a9Ys4HOUCsMl6gxU5ebTF+4H
Td52bZCpeLQyL4mVK0zMHUdYOu91fpWUkUteVSUDYuoMlpqa6uzs/NNPP7Vp
00YjgwlJy0hs1SjKqFP1vSuM3tzYDmlPsEarLFmaGcUwGK9NwTvvZemsMkZO
LG66hP4Mt4P7s+BSE3k0zJaTvlQJlF1qCo9+gdjbIFOUg/K5yxIYL7/PO9dJ
jvLJAhm68LkgSv2PatuYyDrJYezAgQPAwxhjrI7rs+CEP/71HGQmHl4wLznc
wtnITLz4v/svwxJVXlJlTJ3BMjMzr1+//ttvv7Vvr7llJJ4kKQ+Fof/6t6e2
/d7Dx3kNxN/EZfnSpPz0yLzkd/kpQXRaMIKx0nUpn+LknXdNLqeyCDyzLzcR
kl6A33a41h/Tl6omRsFAGbq92hP89+Dwmnx0IBplvGlnvPw+70oPw7+jRC+4
1IBmwmLPNuPzJqmpRmdSgUDw4MED+OxhjA1txafl7BS/HLbeebC54xhOXhLd
MTR1mLrD/fKj4HxaCvLGRuW60aVqeKqCVMo9DHJzc+/evbtkyZKOHTuyDIa7
ExVkMFIaRhQqerWiLGY1fGE7C95fIRJhsuw4Oi0U8qIAErFyPiQzt6XtsoTy
/qHxznsFd4UsBin1z4qEKFd4vBAcDNRmX3Kqy84wmU37FvD8f5D2hh0t+Nyl
VsbL7/POOla0SIZny9FvirYRwRXq5IICBWPNmzePi8PzaKoUWBTH2MZGElp6
5XHItJ3XEXSNVhSGkbwkArOh6522O3jHpWaTV1WlvKQKg0kkEsTnK1eu7Nq1
axEMJhSQGBgOhXVvTq2ZSD3Z31X6ygKyvUCWiOWF08OlOGwVDHT8od0bhhgP
GDbYEN2WrpN1Ll44F/Jj+PgY77xr4WGK9GU8Pjuk+sHbQ3B7FJYg01TnT4rN
ztfC4v/x95RjB49kRRsvv8+73MPw5U/KK7jSDP2aaBsBOFC/Di1QMGZiYgKf
8TxKNsnoE57054n7Rmbi4RZO3LzkCEvnQWbihcc8vYLiVF5S2U2FwRCNe3l5
mZqa9ujRg2UwAW5RpM5g8k6SXZpTK0ZT9zfUyb89BWLPQn4I5KXQGdG4Hkwx
BNFpIQDJv8+fTZWlfd2jM9BxPIzxznsxXKkfy2hixN6C56vAuaMcvQoJlCke
vzkUy8ZKshVjB19OpsF4+X3eiWfgkyO8Mseh5nNCmS0lPUf1aV8AxlasWAGf
ZY6SDW0lZeTuc3k90tLFZG2BvCTyQabiSdvczt0Lys2noarkJQmDcT+Jt7f3
hg0bevfuXRSDySVaMYZ91YxaPIy6s4bKudIBAlZB6l3ITaCzE6UZTBv6gmX5
DIwlrVy6QFe3Wo0aeuhWsyOrpiMqYLrV5I9rcrLOwcb9eRjjnfcSeRhn9mUK
pL+DEGvwnAp2DfCJw5oExwoiGUlrunST+e+TZcfIxxG5FAZvHOPl93nHzgi9
pvmD2ADOCqQ2QrCjwvZT9WuRs60cxi5dugSfGYyxeUkEJM7PwmbsuWFo6jCK
k5ccu8l1yDqnweaOmy4/j0zKJK+q7HlJwmDcEKiPj8/27dsHDBjA7QvJMhgj
08qU5csZTNi+qfDXwdS1FVSGVXV4NAoijkJGIJ2TQmfGyNh5W2rHIR8Z4533
yuHyQFkELvLPSYCEJ/DaAgfKrDlTL+W5SyZiZk3JrCipfUvZ87+lqf6KcYUv
J+NYNi+/zzuZRJkMvltIWIw+S8EVyn01PnOxcq81atTw98c/os8nTckyVUBk
yorTD43XioetV89LOsw/csfzjfyKj67MHKbOYG/evNm3b5+xsbGurq4KgwkY
fQoOg2EMa91INM+YcvqLSjlGwbXW8HoRxF6ns+LonCRZ5nv5NbXm4xADkhY1
Y4PRrclAI8O+NWroUcpWllSfb7oPGTxosBFfM8Y775/GOZL+uUygLPAIXDfC
GMbmLtXKyaTnauV7/iiJuaccKmW0jM9dZsfwAj6fvYfhC5z0IHD6ksSZCYxt
/B6fZdnq/U6dOmVn47x/VUi/fcjYJGNqVt6Ra76jN7ggEmOmSbqyeUkjM/H4
zVet77zNypUoXlIp9wxhMG7AMygo6NixY8OGDUMEzmUwRGGFMRjVvJ5gpqHo
0l9U/GF05Ajh7kAI3Esn+9I5ybLsONAcCivEM8KAjv3QjMhEgDS08Fdftmc2
jETnBIGv7gDkYoEyfjYl77x/Ug+TB8rykiA7Ct6LwXM6XKhdUDZWkbtkWl5K
zlDZrkY5b8/k56TLxx2EZJ/Nlb6qIRbN5uX3P3snYTH/vfKMvy3FwJhgYh9d
ilMwNm3aNPgMcpRsXhKZu3fEj/tuDSR5SSYgNnqDPC9pYu647sLTsPgMsmRl
jIepS4SFhoaePHly3LhxdevWLchgokIZrFEdamo/ge2fomjEYBcoENeEB9Po
CCc6M0qWy0yH/1AorFCXpocWLRQmSQ2mM8NTIl93+KItF8ae3XehJbH5Ke94
nTHeeS8PV0y9JBplcXdw16QrLQuWk7ECZQL0oOQ0lWH3VfyDLSnxrIw/vjqs
pBe2JTcZL7/PexjW98sIA9du5PciY34s6TYNvzBoyqQpSctmateuXVDVYYxl
qnexaWtsnpisxSIVbF4S8dhIS2dDU4d5B2/f8okkS9KVrbGROoNFRkaePXt2
ypQpDRo00IbB9GtSE76hTv8uDD8sAjsKu30D+v7PdNRNWU4i5MYrx+SyOWhl
6HDNiUyP8VOBMe+HV0GWwLMW77yXs+NgeCgj5p8MKT64AMalS+HlZOdxoCz/
JBVzoulr+8Vv/bxzFcMpQrLPpySGl9/nXR4WCzjIhsWkNgJ0en11emS1GvUZ
uVcBSVPevXsXqi6MYRVTBqoycvJP3vJHAGZkpsxLkg5HxswjJ276p+fkk5dU
Ig5TZ7DY2NiLFy9+//33TZs2LYTBKFUGq1WdGtWDOv4bFXxACPZCuIxrQujL
LemnK2Txj3B6IidOPgiX8UHLwxjvvFcCZ9UwcH+lEAg6jmUubEVqUhhCjGTn
KMkpKnC3yGXPWBfxhfBYedJBpjahu2oanctX73/ezlSLZQSDcycFjAnoMwJw
a3r28DomR0lOy1Tjxo2jo3GTi6p3qYJ+5bQiL3nbJ2rewduGpg4jLZ3HcAr1
h653MlnruNrmcVBMGlmysuQl1RksKSnJwcFh9uzZLVu2LJTBhAUZTK8aZdKJ
OvgTFbCHgstCcBCiYVNqRdHiDtLXG/BlL+4vHFOyjGTJnIcx3nmvPB6m6K+E
rtdiINIFt7y8qK9SToYzMueZSPsZ6vUm6vCfX23faP7wGTvvElTmFlU1k2Tx
MPZZO5bcT1FMohSRuDF9ggL/FYv++oc9R6M7hoaGlSsQpKWxTBWekLH+4lMT
c8ch63BecrQiL4luB5o6/LDv1jXvCPlLKkNeUp3B0tLSXF1df/nll7Zt26oz
GKXGYDoiyvBLatdsym8nBRcFIMbjJGYwK0rq8jXuQJcWiA8eeWHYJ6075WGM
d94rm3OU/HE52X14tgIcWuFTDxfJbJhysssiOE+93ECZT6v569ypZ86J09Ll
mrFkWKsEQ3BxLT+dh7HP2Inkvh/+RZwVyEsrbYSy87Vl2cEDBg3hwtiff/4J
VStHyeYls3Il1nfejt98leQlx3DzkmvF6P7ha76pWXlAavsr9iCg3jIyOzv7
5s2bCxcu7NChgwqDFWjbrTDEZX3bU5tnUK+2Umg8BAcBGhhlNhR9ipKiMfPG
YHh3Ah85eclApCrKY/oPD2O8815ZnVQyZMfImyu9tgCHNipRMqkNJbMVgr0I
7Cm/LdTy0dRww87/mG3yfRPIjmxVLVDGy+9/zo4l95lOlFbyajH0W5CeosDP
LDIuvVHDepRCXB3dOXfuHFQVGJOBMi953z/m1yN3Bpk5jLB05gqIDbNwQiS2
/PQD/8gUsmRFxjB1BsvLy/P09Pzrr786derEglaBlpFCAdO2W4lhPQ2odVOp
55uYClsHCi4JZOdEtDUlPY0OjOpwZzKE2zNqQknyg6f8ZmGXDMbQqz7o5f+r
5J33z8G55WSp/pqQDBcwXxaBozBkD/X3GKpL2zrjJ88UO7nRkjwy0FWdQBkv
v//ZOrk2SXgIdvXBhomJoeP/rIC+1AxkaR5375NzNzOZTqCrq+vj4wNVomCM
ZaqopKzN9s8Hs3lJRWMjdGto6jBj9w2np2FE46Ii5yVVGAzdf/To0d9//92t
WzcNDCYUCQVCJYMJurWi/p5EPbakaBuGwS5jLSDaRiQlLecu1oX7syHKnZmr
nlDW0yS19BJGxrIiPuhozawCBs9mvPNexh6mDZJhqSU7ITiJoo9SZhOoprWo
tl/22LJtV3hYCHfoq9ynpxxefv9zdTyJMgkezmbCYvJqMXSf9sP6Fdu3baE4
zW6+/PLLzEzc6KfiQokWxiYZc/Pp8/eDJm27NshUPFqZl8QVYiZrHUdYuux1
eZ2UkUteVTEDYuotI589e2Zubt6zZ09OwlFQgMHwfRbC9Dob1PtrQo176wR5
Z1gGQ4OeQGqLk5L4qLhQGx79DHGeTNntJ5omqaWXAMbQS/JT3hXlqcF5ye9A
EgOQLNeGzYrA7ZnK+8PyzntV9w8jmYwg2UUBOIuSTwo3TaPq6VIivQaz58zz
vOvBYlglDpTx8vufp2MFmDiIuQ7n9cBGIA+LWVPg3InOw2LIU7+dwi0YmzJl
ClTyHCWr4/r0Xfzv/3oOMhMPL5iXHG7hZLRWvOTEfZ/wJJWXVBxTZ7BXr15t
2rSpb9++Ak7GUYXBuN0kO3Tu9fuc0bd29My20cf1YPZouMOjHC7SIEyOxkB0
VNz/AWJv4zpb3C7t002T1NKLBWP4T0ls0Mu7Pb/u2q1rx+5dO6Fbde+Obrt0
HNCv19jRQ83/WerueDYvNRiBmTQ97BNPT+Cd98/StUay8xQ4CZNOiFaNo8io
17t378OHDr5/z8rGQiVDMpkUsnj5/c/SMYwlwJ2J3EmU6L4s5Cw6LrIyMzp2
7MieytGdLVu2QKWFMTa0FZeavUP8cth63NR7DCcvOZrJS363093+UUg+ja+w
KlpeUr1lpK+v765duwwNDXV0dNQZjMTEuAzWtv1Xvyxc5nrpSNqd3+CaAY6D
MQyGXGarqBjEeozVwHMaRLszzX8rIoYRLzaMSeNfPXKnimk9unU+/d9eoONk
TPqy3D8177x/Bl4cJHMQBO0TzR8ivw5t1qzpwoW/PXjwgB0nK03uUsrL73+W
jk6vuQkQfkleKqYgMXAfIKXzEaP7+fnq6ZH+y3K515s3b0IlhDG2sRFCLPtH
wQi3EHSNVhSGkbwkAjOEZwjS4lPlU6crTl5SncECAgIOHjxoYmJSvXp1FQYj
1X0qDNaqRbPZc+aKXW4lRfpA8FZwawvWFH0Gl4dhBpNjmIDBMCF4TMQSQOjY
wEnJCophxEsAYz5PrqOdxl5fFG26utXYxf63dIE0L0bKwxjvvH86LxLJmNOW
HMlw+w/q0QbhuG/kP1hEZoYDBxw7diwmJoYMm0Tnp2JdYKsYL7//mXoYjoi6
GzJhMYUA8lkhxNwgsHXhwgVyiieZrwYNGpDwb+W4xFAYm2R8HZ645L/7RmvF
wy2cCuQlLZ0HmYl//9fz6bt4lZeUr6m37X737t3x48dHjhxZq1YtLoMp2hWp
MljTpk2/nz7t4sULcUlZ+PXvj4K4JX0CYxieMC4ncAWG2VBwawRE2GP9H+QV
qTZMk5cMxqpVq0b2T5PGDdf+s9TCbPl602Xr1yyzXLti4S8/zpk1dd7sacOH
DGrWtLFiDwtJ4PH4wa0AyXz9GO+8f1r/MJLJy/sv4964F/4S9GqvzBS0bt1q
0eLFXl5e7EBacQNlvPz+Z+hE5TXwCNv8iNTtg+e36AKCluAuP8uWLaM4BWP9
+vWTVrS8XZHGhraSMnL3Or8eYelsopKX3Og6yFQ8edu1C/eDcvNp8pJy/3zq
Mq3h4eGnT5+eMGGCvr6+NgyGsHnKlClnz1pHvg+XryLqMu3YmT5Jyay5/eCY
dr2kde91Iwi1xbWjZGJ1JRkQSgxj5PqiR7fOQMcCpAAkymv15Z4Msvjo8Fd7
tq6trquLFtbRwVHHr7t3zk8Pk5H3Le/Pzjvvn5lzkCzNH16Zg31TZUMlgmSk
3OIKlWUtOLqgeieDOhQlp7JqOjomJianTp1KTEwkg6J65W35Gy+//9k5UXn1
BXFb5uKCBEmEWEUq5SU6IqS0BB2iRkZGXBhbuHAhVJIcJZuXRLdOT8Nm7L5u
aOowipOXHLvJdcg6XDO22f5FFIkalXdeUp3BoqKibG1tp06d2qhRI20YrG7d
uuPGjTt58mRoaCi7EjrBi741TkaIC9dacDCMtOu92hvencTHQ24iLlDPqExh
n4+Esa6dO+YkvqXTQyWpwayQBetozQA52zasRksiGEO31avr+j29gVbCy8ny
zns5OQfJkrzB6w+4UBcjGVvyasuEyM7hQrJ0mzon/tepb6/ulLA2O062a9d+
+fLl3t7eykGy4gTKePn9z82xnEUiPPpJKWdxXgSnKXjyK2CAkQDTPJq0jWar
a6ysrKAywBjLVP6RKctOPzBeKx5WMC85AuclHX49cue+v7yWgC4/DlNnsPj4
+EuXLs2cObN58+baMFiNGjWGDx9+7NixoKAgdiVodXRGhNRrCZyrIdfylY9U
TJMRgmGu3eDtIXw8YPnWSoZhxD8Sxrp16Zif8g40lOVjQsuPCfa5V6tWTYbH
8CW2x7WLAEl8ppJ33svVw3ByJzsK8pIg7g7cmwXndJmSV4GiwSWDZGjEE4tk
Ll1unvhp9ty5DZu2ZYdNPT290aNH29jYpKamkjGzQgTKcCN1HsY+G0fn3JwE
CL+MQ2HywiEB7oJ0qQk+DBQ5ynv37pG6fQIA6Ez04sULqNgFY2wONSUz77Cb
L0IvRGIkHUnCYsiNzMTjN1+1vvM2O08if0l5/PrUGSwlJcXR0XHevHmtW7cu
lMFUas51dXWNjY3379/v769soSulJWiN0vwMCNgL9s0wYNsqeJtgGJEOc/oK
95TEMziS5YdEuR+WJfIyhTFcq58bFRP8tFXLZhjGmC/C8/plgEQexnjnvQI4
cwmZE4tjC1EucGs0TvRYK689MZJZM49cEcHDMe8en9y+72iPb/pTHPvqq69W
r17t6+vLjqLlGSjD6Qkexj4TD8MzZ9EB7NJZtVos6Cg+GGRyQti7dy/FEUlo
3759WloaVFS5VzYviczNO+KHfTcHkrwkExAbvUGZl7S4+DQ8IYMs+enjYeoM
lpGR4ebm9uuvv7Zr106dwbiRSfapAQMGbN++nTt64Es6SZ58+HjvAFe/UXbd
VVbpMxh2qQGutch4hy/BMiMqL4YRL1sYSw+V5ccE+96vW0ee40B3Qv0egCSW
T1PyzntFcVLjiqcdxULwGbjaC9iqDDLd0laA1XtOodGvOvgsyk146eJ+7/uZ
s/TrKnOXtWrVmjRp0qVLl4iqOZRXoIyoapf7LuX9EzhOUCbD8xUqwmJweyRu
1SjD53OCCjNmzOAWjI0bNw4qaliMZaqgmLR/zj42Xus4dL0yL4l4bKSls6Gp
w7yDHrd9osiS9KediKDeMjInJ8fDw2PRokXoukyFwbgyrVwF1969e2/YsIFb
6sCgnYTRIWEs5TUWB7Nmy8OEBar0bavhfkYJjzCGZUVUhGZGH+9lB2Pokbzk
IIBUx4snmDgknoA5YqiRNJ9Xt+Cd94rnBMlyE/F9/73g1EFluiUaBqUIyU5Q
cLEOhGxHJ4G3wVGWlhZdOiub9iLr3LmzhYVFQEAAO8x+0kAZL7//mTiO6MZB
NNHbVyQo0Z2LdSGNOfZkckbJzc3t0qULNyxjaWkJFa9gTKZIMqZn5/9303/M
RldjM2VecrQiL4nA7OQt/4wcDC2fOC+pwmD5+fkPHjxYvnw52b3EVFtGFmSw
Hj16mJmZPX36lN1sEl7D44NMsebcOHj+PzhfmykPExQoDyNx++sm8N6JEdKP
qRoYRrzsCvgxr0JKZmJgn149dBhGRv8e3LoC0gQ6jb905Z33Cukk1J+bDOmB
8Gqd+nRLdEeGkOwkRYu/gngXNHZm5dD2l+2mTJ5cu7YyUFa3bt3p06c7OTmh
q2YyxH6K/koyKa6CqyqDM+8f8KxIcB+gFBYjCUr/ncyRQIMi9oWuC2rWrElx
5F7d3NygIsEY+k3QirzkrdeRcw/eNjR1GGnpPIZTqD90vZPJWsc1Nk/exaaR
JT9ZXlKFwdCfT548WbNmTffu3YtgMHKfWNeuXf/3v/8hcpNIJOx6lNdoMgWJ
SXMh8DA4tOaMOYo6MVIe5vgFBOyH7EhGOqxCK7iWwMtO2gJh2FUn2/59lC0+
jx/chhaT8tVivPNewR1Pt3yvebolukrVQZeoUiuKvjMDMt+R0dXP18fU1JQ0
nWENjdhbt24tMDeq7AJlMiK/z8NYVXciLOazgZOgFBK9fXxaxwlKGShwy97e
nuLIverr6xO1hAqSpmSZKjQ+fd35p4i4hqzDecnRirwkuh1o6vDjvlvu3hHy
l3ySvKR6mcGLFy8sLCx69erF/roLa9utZDA0FCxZsuTu3bu5ubnsSsjPX7la
NiAW/f/2zgQuqvJ74wOo4JJb5b6Umub+z8x9rVzy12KmlVlpZmWm7atbWpmZ
ZqVmqaWoICoqIOK+o+KGuwgqiIDs+z4zMOf/vvedudwZFlkGmBme5/PIZxhn
7sDcy73fOee85+ylPU+ZFEjklYdtqUf+X/CYJ6/SD7UxDBMuY9PX+vXrvf3G
mElvjp04YeykCfzrO2+Oe+PVl4YM6vt4+7aG3LF9j//rcvKoF1GKJvG2rrJ/
ZRiGi2Gptj//cktetqFo77NOpdtSP+fqz3zRk6SUlORNmzY999xzYvqMUIMG
DSZMmLB//36NRiOfk80fKMvVVPabBpe/2YU4M4piTtDWhkYJSnZ8Jl6Sru95
w+7Z16+//lqlKBhjLCEOvEqv3ufFV9LPkJGt3XA0aNSC3QOkvORIRV5y4GxP
RmV/77uenKEmUdtfzj92/nFFV69eZZ+nevfurQStIsZ2t23b9r333mN/7HL5
KBX49853k/QqmZF0+gO+Bna9SXmY1LaC7dnjr1LMcVIn6tdrVPoRWD4uC4wp
c8EFiu0g0c5i+DOD3N3WxIZdJkrgBWOoGYNh67BiuWXELto/ON/KJqmQg310
3f1EbsQeZeLn0qVLn3/+OTszK88JTzzxxNKlS0NDQ5VnabNdFnn7fZxbbN1i
scmRUXmNxUSC8vIc6RJvlFBjX4cMGaKEscmTJ1Nl5yh1lJeXPB4Q+e7KI/1m
eTw731vZQOzp73cyEvvc+VTgvSTxyHLFsPwMFhAQwP5UBwwYIMdeZAYrsEVY
q1atJk2a5O3tLfe6oUI/c+l4EFvo9hra0VxqW5GvPIydavY+RXe3SpMlo22p
PKxAlyuMybtP3GjdqsXqlb/yjq/pGBcOw9ZjXtsfwq+AGREUsIS2NzXKWm6y
069i22hPfu/p0u/mKHJACQkJzs7O7IKoPKU3atSIXROPHz8un6XNc3FE+32b
t0hQBiw2JLNU+u7rPl0pJ0tOUJKhbUVcXFzz5s1Viur91atXm+14K5VkpopI
SP/R3X/wHENe0jDYiH3tN9Pj9aUHvM+Hit+i/PKS+UdG3rx5c+XKlUOHDlVG
totgsGbNmr3xxhvbt29nb7W8kaLi3jItJ1+lI88rPtwZTimiPMyjFd/L6WG8
j5z1jDQqi8sIY7Vr1Ro0oPeQgX0GD+wzxGB2u3vXTl06dWDbdHSsIXaZWE2p
ksaFkzY6Jy0U+UoYtibz82EoqZMp4QKdnEiu1fJVd9jxT7jbGlHQcsrVsOti
jlYtn4PPnTs3ffr01q1bKz+p9erV66+//oqIiDDPpQXt923bYgVl9GHa2oBc
7PQJSld7nsmK8TW60Btwy8/Pz04hRhTsOKRKgjE5L5mlydnke+vFhXv6G+Ul
eYXYoNlew+bv+mPX1cQ0qc6qfPKS+VuEhYSE/PvvvyNHjlQuwymiVT77PDV2
7Fg3N7eoqCh5I/erPdDpd1BOBl37SV+Jmr9thVttOjuNz7fi3cOsuIlrSV1O
BfzskZqk2ymR165dPLJy+S+ifqxaNX3W8o9Fc/ljUMkPw1Zn3rc/kmctw7aT
zxP5Ptga8gv7B1LcKRIZGa1aPj9HR0evWrWqX79+yvoT9uF66tSpSUlJVMY+
nGi/b8uWZlCm3uItXpUrKBn/n/9UutQb8ZUgDYb6KkWBU6tWrRITE8t6mJVK
ch/XM7diPvjnGMMwk7zkM/N2DpjlOePfE9fuJpg8xVzKz2Dh4eHr169/8cUX
GzRoUBwGYw9jD2ZPCQsLkzdSrPpPee9EHeTnjfzrJcV549BIijrEq/TZvman
mso/6irO5dTagj8+I4zPpsyJYaiWlhIydvQoiceqsT+KBvXrhd88Q5ootH6F
YeuzmMCbHcevj1e+52EKZ0XJh5y1dHWkc59Qdqx0Ks7lw00UVwE/P78PPviA
YZjMYykpKWUtq0b7fRu2mEF56m3TFZTej3MIVyQoZUJgX998802VomBs2LBh
VOHrKOXQVnRy5i8eF4d+z5vnj1TkJUdIecmxi/fvOB2izcklc+cl8zNYVFSU
m5vb2LFjGzVqVBwGq1OnzsiRI9esWRMSEiJvpLhrcHjnCukNz46hsx+Ri4Nh
Dyoi6uwEsqM53fiDL83gfZttvDysQJdT01f2rTB7ipY9QBudEhv4SOsW7CnV
q/Pg2J+L5xElYigSDFur+QkzjF8HY0/SsbGGOUrGa9LXqcjzEQpeazgts1O3
Uc+iiIiIlStXdu3adenSpVT25BHa79uq9aViv0rX8Wr6Mm8Xe3KrSYkX9Vd8
5fVfkkaj6datm7JgbNasWWY4zIotefGjJifX3S94zK/7GHTxdKQiL8nA7Ol5
3ou9LsWm6DvymSsvmZ/B4uPjd+zYMWHCBPlDkKrIkZFOTk5Dhgz566+/goKC
5I2IbRYPaBWF+sHryKO1Yb6k8ZhvhmenJvKVsDwvaZttK4rjch2HJJvzGCV9
8O4EUTzGnjvmxZGAMRi2cov2F1E8SsZOtjsf59fKvOyDYlXU8XH8kZT3MVl5
mVCr1cpORKUX2u/bpEWpWNQh3mxKXyomIZmzioL+lA4qU7gSqHD79u0HHnhA
ZWiHxW7s3LmTKgrG5CTjpTvxH63xHTDL85l5JnlJ7/6zPD9cddw/OM7kKWVR
fgZLTk7etWvXpEmTlBWbRTAYu77379+ffT66fv264tcxXW55v5/D8MiUG3Rs
TAGrsF2kM8OuLnTXncc8M+5VtbykiSsGxhh06XTxf/3+o8pQyd+3V49cDSZU
wrD1Wz9HKYHX8/h/TpvrGNqRKfoFicL+26sNJ+ocwwk712xXRrTft01LpWIp
N3k6coNxqdipt6T9rjVJUJIBtxh6qRTtXuvUqcPwjMo/TSmHthLSspd6X352
vvcgk7zkjz79Z3q+9MveLSdvq7U5pB9sVKYXzc9gGRkZ+/fvf//995XtZfKP
jJT/i33bq1evhQsXXrlyJe93KSmDST+LoVA/i64voi31Cy7U3/wAXfxWX/DA
2+lX9b9cGcY6tG/D9gsjJdEc7JLfHvPCGDswN/z7h6Bu9rV7145aaWQSelzA
sC1Y37Q/kUcwDo3g180CC/uPv0rpd6QTdq782dk8HTjZ+Z9dtQFjNmYxL/Xk
BEVXMamXxc4O/CLOMayAI0cwyaxZs5TV+926ddNoNOXa7lUebJSbq/M6d+fV
3/b3+85DbljBYOy5n3yGzPVi/nn7hcjEDPGssuQl84/tzs7OPnbs2IwZM5Sz
MIoeGdmjR4/vv//e399fudlSTsqQA2KxvryjfhGF+tFHpEL9sKqzXrJoCxhL
ibzWpPHDKoXO++7io4vMGRlL+HXBTDkyNnRQX4ZnSFPCsA05VJ9RyoyioGW8
U1D+wn52z/bGvNOj/tRtvoQRb78fVtnvAGxWi1Kx67+YloptcqSEc0UcP4Ii
hg8frqzef/PNN6k8c5QyUwWEJ32y9uTA2Z5Pz9upzEs+O9+7/0yPKX8fPRmo
bweRUwYOM2EwrVZ76tSpL7/8snPnzkUwmHIVc9euXb/99tszZ84ooasM08oM
FWI5WXR5NrnWuE+hfmYVLdQvyhlhmqTg7ZtWrf1nyfrVS9et+s151W8J4Zcp
O8IEsUoNY2z7RIkvPPesDGNTp7wJGINhGzTPWobya2jSVTr1Dv8grAyRuRk+
Gvu+zs/DZBQiK5Nys3FitymLBFbUAZ7PMikVC/xdOnIKxioR+EpMTGzVqpUy
GbdixQoqHxiT1z4mpatX7L7K0GvQbC+RjhRhMeb+szyf/3n3xmM3M9Va/VNK
BWImIyPZjXPnzs2aNat79+4yZRU9MrJjx46fffbZiRMn5NlklH9kZEkl/wkn
XaK9fQxNoR0KLdRPq7qF+vdxRpjppO+s8Pw53AJhTJ14Syf9l7yCUr+OUlpK
yXCL0xql7fPcwDBM/rvYtW0te0XAGAzbptOCeUVudjyFOJPno4WEyJrQ7f8M
J/MyXyJzMnF6tx2zXcmOn+RrPB1pUip2crx0wBRQKqY/ECTcYogiN40X8vPz
I3PDGF8vaai6330hbPzvB/vNVOQlfxB5Sd7LYv6W82Fx+vmtpYiH5R/bfenS
pR9//LFnz55FMJiyJOyxxx6bNm3akSNHsrKy5I2UlcH074LhLb2xlLdy1Ycx
DQExFOqX0Dkpd5SNwgqMdBUIY9rkYMoM5w9gRCeb3aOOpNwYCe2Sdnmsb1C/
nkrqM8a+PvlEV01qqA4FYzBsy5Y+/KoTKekKnXzLtIosL0T2Bn+wOKWXJUSm
SQOM2Yj5dSGMX7UPDjUtFfNqz/PghZSKCQncWrNmjbJgrFmzZmJejxkLxmSm
uhmV/PVGv4GzvYZ+n5eXHPmTz7D53ozNJq04cuTaPf3PVkLwyV8/f+3atV9/
/bVPnz5K0JJ/zfwtwh599NEpU6bs2bMnLS1N3khxW4TdX4Za/bQQOvKicYWY
od8gCvXLwQU1fW2fERuoSQ5WJ97SJN0WZniWFR8UFXzu6rmD291Wvz72BQfp
OKlWzUElHSonDmwjXRzCYjBs++aF/VKI7Pa/5NFSurba8+CYHCJbp+LDLoPX
Gc7upQ1coP2+jTiUX6/ZAeM3Ka+/qygVc61B8Wfue5AIGJs8ebKyYGzw4MFk
vnWU8iqA1EzN6gMBjLsGzvaU85IjpLzkgFmeDMzWHQ5My+LZwBLlJfMz2I0b
N/7888+BAwc6OjqaMFiBbVpbtmz59ttve3l5iYkD8jtjJgYT74JhL7A/3u2N
pT/takZtBtnu2zeAj69Cob65nX82pZOjY+dO7bt27tClU4cunSV36tC18+Md
O7Rr2rSxPBqYHTCi1ys7dNycV2AWEgxXJUuF/epE3p/T9/VCQ2Qn3uLrMam0
ITK037cN8xBKAu+Rkle0bygVu7HEiAEKBARJDDl69OihhLGvvvqKzJGjlNdL
Mh28HPH2ssP9ZnoMm8/jYHJecuj3OwfN9prpeiY4OkU8sph5yfxju2/durVq
1apnnnmmVq1aSgYrrFV+kyZNXn/9dXd395iYGHkjZmYw6W3Q1+pnx5Lfu/oe
Ym6KJZMbpAEcF7/iC5yzolGob3YLGLt2dr+Tk5PogKFcHptfjMFq1Kghlw4+
3r7t3l2bpF6vOGfCcBWzPkQWR0F/045mhtZDhs/RIkS2ozmvMdOf70t43UT7
fRtw6m3SpPDSI6O6I+nYODddOioKLRUTEtGkO3fu1KtXT6Vo97p9+3YqM4zJ
THUnJnWO29lBhrzkCENecvh8PtjorT8P7b8ULh5ZnLxk/hZhoaGha9euHTVq
VN26dYvDYA899NCYMWNcXFzu3bsnb6QcGEz8uIYPSvd8yKsd3zXKWLdYMund
iSK8+eevdATEysUCxi777S0CwPKLHTNPdO+8ZOGc5LggFO3DcNU1X2gZwvOJ
Ced5T/4CQ2TszpNvU2aEOO+X4BqRGYVyFOt2WjDPZ4V78s4VLnb667ubFBM7
9Ky06raoUjEhgTR79uwR0QARLqhVq1ZgYCCVIU3J23lJVJORrV1/JGjUAp8B
Ul5ypCIvOXC2J7vxz77rKRlq5VOK2KYJg0VERDCgGj169IMPPlgcBmPA+b//
/W/dunV3795VvgPlwmDSj6wPiGnTyP9L2ihV8bkZ9xBjPj2FN+kVFWIIiJWP
OYxposKDzkx++7WJb4yd9Oa4iRPG5vekCePeHv/K5zPe++WHb7e7/nP5zD5e
qE9JlBWB7CQMV3Wza25mJGXFUeAy2ta4kBBZS7rjyluHFZPH2KUH7fet2qJD
Xcwx2vqQhOiG5ZPrpTBLlmjMdX+UEmwzf/58laKsvVOnTmIJYSkQRUd5eclj
1yMn/3Wk30yPZ+cbDTZ6+vudjMS+WO8XdC9ZPLIIDMvPYDExMVu3bn311Vcb
N25cHAarXbv2s88+u2rVKjFQQP7Fy9AirBiSA2IJZ8nnCUPzCuP10Tta8Pox
vmQyAgGxinBmuFETjPtaF0ui7ys+t8IwnC6HyJJ5PfbR0Yq5ddIZfnMNWqui
sx+WoHgM7fet2ux4YCydEsjHm25QLJ9kR8W2pny4IRU3bS1oZNSoUSpFwdhr
r71GpcpRykwVHp/+o/v5wXO8hsyV8pKGwUbsa9+ZHq8vPeDjf1c8trBGEfkZ
LCEhwdPT86233mrRokWBDGYyrsjR0XHQoEHLly8XUT759y1fBtP/9NKPrdPS
tZ9pUy3Tbq6iecWxVyjhgrSOBgGxCrIu7a6yCcZ9LVqQVfqPDcOwZVkMGc+K
oYDF5P6QPkTmVo2f2Pf04E1cpQtAsS4WaL9vvRZXB3YkHBhi1MiCZyqdKO6U
HgOKgwwSBqWkpLRp00alaPf6+++8SWyJYExOMmZpclx9b76wcE//WaZ5yUGz
vYbN37Vs99XEtGwSPcfycVh+BktNTd29e/fkyZMfeeSR/Aymyjcyslq1av36
9Vu8ePG1a9fyjveKYTDpN9CTWOotOjDM0LzC3qh5xdb6dP1XHuvOjERADIZh
2NocSqnBHKL4qf42HRvLT+y8CqWWYdhNsa81aL9vrRaNLBIN0ycNM49cJSYP
3SQdBsUiMTKExS5evCgWl4ngEvvq6+tLxYYxZV7ydFD0+/8cYxhmmpect3PA
LM+P/ztxPUzfOMIEw/KPjMzMzDx06NDUqVMfe+wxEwYrcGQku9GzZ8+ffvrp
0qVLys1WFIOJ1zO8UJi7oaIgX/OK/QMp5jgPiKXfwQoaGIZhq7LUDzYjgmcq
+eduwzk/6E9ybUDXfpQuBCVJKmnRft8aLR0GjMT8PyugkcW1n6TDoLgkRgbc
cnZ2VhaMNW7cOCqKl5wVh2FkpopOyvhlx4WhUvN8ZV5yxA+7+n3nMXbJfo8z
d+SZ4DKI5WcwtVrNUPCTTz7p2LGjzGBFj+3u3r37nDlzzp07J2+kohlM/6o5
+q+XZpuutdE3r3Cii1/zv2K+dgZN9WEYhq3IofoCIU2KUeCL35YuaSkB/L+K
bLFegNB+3/psILGL33ISczXUILlV4ys4zn4gHRX3aWRhIkFBU6dOVRaMDRgw
QDDSfdDDkGTUaHO3ngp+edG+/jM9R+TlJXnnikFzvJ6Z571k5+W4VP1EIRne
TBiM3T59+vQ333zTpUuXIhhMOTKyc+fOX331lZ+fn8l2KprBhAQDZ4TRoVGm
s8zymlf4GJpX4E8PhmHYWixjWGqh+Ue03686Fk1OLs/Rk5jcyGKtio4+L63d
yCkZkBsCU7169VLC2CeffEL3y1HK8yUvhsRNW+07YJYngy5lXpJ9y+78cLXv
hZA4+SnSYErTkZH+/v5z5879v//7P5myih7b/fjjj3/88cfHjx9Xq9XyRswz
MrKUytX/eUYf0k+VVTZ8E80rzrxHqTd5kRhq9WEYhq3GxcAwWXKIrERSJwDG
rMmCxK7+aEpi61S0tx/lZumpoEQMIUWQwsLCGjZsqFK0e928eTMVDmNyaCs+
Neu3nZcZdA2a4zVSmZf80af/TM+XF+3deuq2WpsrvZAufx+Jy5cvL1iw4Kmn
nlImHIsY292uXbsPPvjg4MGDGRkZ8kbKs0VY8SR/Grq+iLfQN0pNSlV82x6i
W2v4iISMcNTqwzAMW4ml8myOYWlUrpeYrFjAmNU4LZjXCrLLPa87sjdq7rq7
J6ml0FPJ52EJ3Dp06JBK0e7Vycnp+vXrVFDBmDzYiH31PHNn3JL9/b7zGP7j
Ljkv+dxPPqKXxcIdF6KSMqSn5Gq0WuWm2MZ/++23fv36ybP/VEWO7W7duvXk
yZN9fHxSUlKUP3klM5iQSE2yzzUn38zXRsxe2jtPUqwvmlfAMAxbjwWGRfJm
3aWIdJVUmdFov28d5iQmDTzKT2K7uuubu5ZiMqkBxhYuXKjEofbt26enp1O+
dq9yQOx6eOLH/50YOMvz6Xk7lXnJZ+d795/p+d7fR/2CosUzNNq82FpgYOCK
FSsGDx7MYM+EwQps09q8efM333zTw8MjPj5e+QNbBINxGfpXJPrTzk7ShKN8
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
kaOUkuM5mXw4qbOikcVGFbk3ppjjfBQXivZhGK4SljAs8x5fUW79zcwh8yo/
g8XGxrq7u48fP75FixZKBmvQoMHzzz+/du3a0NBQ+cFgsCIkAOmVV15RhrNW
rFhBJcckkznjMtqtXLmSDHuB3XB2dhY7y8PDoxSvYm7p9EX7p6fkkZir1MjC
1YFPHc1GIwsYhquCZQxLBYZBSuVnsMTERC8vr4kTJ4qxhrIeeOCBYcOGrVq1
6tatW/KDxXMtIgtmqRJvTkRERMOGDeX+YHXr1r1z5w6VKoEodta0adOUaDdw
4EARFhP/O3XqVLHLgoKCSvcq5pQgsWs/FbB88so8qZEFSAyGYds2MAwqQPkZ
LC0tbc+ePVOmTGnbtq2SwWrVqjV48OBly5bduHFDfrC46IPBiiPxJv/zzz8y
O9nZ2ZVlcrfY4NGjR0UBv+gfW6NGDTEaSeyXPn36sJfr1q1bdjbv6laZEUu5
BfEGFY+DmS6fTECdGAzDNu1Qvi4pM5L3hkLyCJLELspy8EQoKyvr8OHD06ZN
e/zxx5UM5ujo2L9//8WLF1+7dk1+MBisFBJv19NPPy2PPWJv74YNG6i02UPR
soztuI4dO7JtVq9enW2TUdn8+fPFA8LDwxs1asReZfz48aV+FfNIkFjSJdra
oNDlk2hkAcOwbVqBYTY0ZBkqtfIzmEaj8fX1/eyzz7p06aJksGrVqvXq1eun
n366dOmS8ulgsNJJvGnnz583SfiKZaelfkvFrvz666+Vm23RokVycjK7/8CB
A+KeP//8kyoTxqTfLiOcPB/D8kkYhquSBYZFkTYdGAaRIZal/Pb06dPffPNN
t27dlNdxOzu7Hj16zJkzh2GD/GAwWNkl8oMxMTGHDx8+KunIkSOl6Lpf4GYT
EhLY1uTNHjt2LDU1ld2/cOFCUZx24sQJqjQYEy3sNHRwsDR9shqWT8IwXAUc
yg0MgyQJBlNWCvn7+8+dO/fJJ580mU/NqOzrr79mhGYyTwcMVq4q1yKul19+
me3Z5s2blzH+VgYZpk+e+wjLJ2EYrhqWpodkRZM2435nSKjK6fLlywsWLOjd
u3e1atWUDNa5c+dPP/3U19dXrVbLD65SY7srUvJyCfMuPjXZrFarZfekp6eL
8r/BgwdTZa2jFCQWsAjLJ2EYtn2nGTAsBxgG6SWquwMDA5csWTJgwABHR0cl
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
cu9TvG4/DXX7MGxiqW8YkpIQBFW2/h+g+5rN
    "], {{0, 687}, {815, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{298., Automatic},
  ImageSizeRaw->{815, 687},
  PlotRange->{{0, 815}, {0, 687}}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.766137183122208*^9, 3.7661371842741346`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getExtouchPoints", "[", 
    RowBox[{"orbit_", ",", "exc_"}], "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"closestPerp", "[", 
       RowBox[{"#1", ",", "#2", ",", "#3"}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"exc", ",", "orbit", ",", 
       RowBox[{"RotateLeft", "[", "orbit", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.766961538791972*^9, 3.7669615791262903`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getExcircleData"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getExcircleData", "[", 
    RowBox[{"orbit_", ",", "exc_", 
     RowBox[{"(*", 
      RowBox[{"12", ",", "23", ",", "31"}], "*)"}], ",", "npc_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "excFeet", ",", "altLengths", ",", "tps", ",", "radii", ",", "feus", 
       ",", "nagel", ",", "medians", ",", "mitten", ",", "mittenPedals", ",", 
       "\[IndentingNewLine]", "mittenFeet", ",", "sides", ",", "cosABC", ",", 
       "cosSum", ",", "cosProd", ",", "sideProd", ",", "altLengthsProd"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"side", " ", "touch", " ", "points", " ", "to", " ", 
        RowBox[{"sides", ":", " ", "12"}]}], ",", "23", ",", "31"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tps", "=", 
       RowBox[{"getExtouchPoints", "[", 
        RowBox[{"orbit", ",", "exc"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"excFeet", "=", 
       RowBox[{"getAltBases", "@@", "exc"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"altLengths", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"magn", "[", 
           RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"exc", ",", "excFeet"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"radii", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"magn", "[", 
           RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"exc", ",", "tps"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"feus", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ray", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"norm", "[", 
             RowBox[{"npc", "-", "#1"}], "]"}], ",", "#2"}], "]"}], "&"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"exc", ",", "radii"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"nagel", "=", 
         RowBox[{"interRays", "[", 
          RowBox[{
           RowBox[{"orbit", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"tps", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "-", 
            RowBox[{"orbit", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"orbit", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"tps", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "-", 
            RowBox[{"orbit", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{" ", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{"#1", ",", 
                  RowBox[{"ray", "[", 
                   RowBox[{"#1", ",", 
                    RowBox[{"norm", "[", 
                    RowBox[{"#2", "-", "#1"}], "]"}], ",", "10"}], "]"}]}], 
                 "}"}], "]"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{"exc", ",", 
                RowBox[{"RotateRight", "@", "medians"}]}], "}"}]}], "]"}], 
            "}"}], "]"}], ",", 
          RowBox[{"{", "}"}]}], "]"}], ","}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"medians", "=", 
       RowBox[{"getMedians", "@@", "orbit"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mitten", "=", 
       RowBox[{"interRays", "[", 
        RowBox[{
         RowBox[{"exc", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"medians", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "-", 
          RowBox[{"exc", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"exc", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"medians", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", 
          RowBox[{"exc", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mittenPedals", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"closestPerp", "[", 
           RowBox[{"mitten", ",", "#1", ",", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"orbit", ",", 
           RowBox[{"RotateLeft", "@", "orbit"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mittenFeet", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"interRays", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"#2", "-", "#1"}], ",", "#3", ",", 
            RowBox[{"#4", "-", "#3"}]}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"exc", ",", 
           RowBox[{"RotateRight", "@", "medians"}], ",", 
           RowBox[{"RotateLeft", "@", "exc"}], ",", 
           RowBox[{"RotateRight", "@", "exc"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sides", "=", 
       RowBox[{"RotateLeft", "[", 
        RowBox[{"triLengths", "@", "exc"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cosABC", "=", 
       RowBox[{"getTriCosines", "[", "exc", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cosSum", "=", 
       RowBox[{"Total", "[", "cosABC", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cosProd", "=", 
       RowBox[{
        RowBox[{"cosABC", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"cosABC", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{"cosABC", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sideProd", "=", 
       RowBox[{
        RowBox[{"sides", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"sides", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{"sides", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"altLengthsProd", "=", 
       RowBox[{
        RowBox[{"altLengths", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"altLengths", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{"altLengths", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<sides\>\"", "\[Rule]", "sides"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<perimeter\>\"", "\[Rule]", 
         RowBox[{"Total", "[", "sides", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<cosABC\>\"", "\[Rule]", "cosABC"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<excFeet\>\"", "\[Rule]", "excFeet"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<altLengths\>\"", "\[Rule]", "altLengths"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<sumAltLengths\>\"", "\[Rule]", 
         RowBox[{"Total", "@", "altLengths"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<prodAltLengths\>\"", "\[Rule]", "altLengthsProd"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<sumInvAltLengths\>\"", "\[Rule]", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", "#"}], ")"}], "&"}], "/@", "altLengths"}], 
          "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<cosSum\>\"", "\[Rule]", "cosSum"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<cosProd\>\"", "\[Rule]", "cosProd"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<sideProd\>\"", "\[Rule]", "sideProd"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<tps\>\"", "\[Rule]", "tps"}], ",", 
        RowBox[{"(*", " ", "extouchpoints", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"\"\<radii\>\"", "\[Rule]", "radii"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<sumRadiiSqr\>\"", "\[Rule]", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "^", "2"}], "&"}], "/@", "radii"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<sumInvRadiiSqr\>\"", "\[Rule]", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"#", "^", "2"}]}], ")"}], "&"}], "/@", "radii"}], 
          "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<sumRadii\>\"", "\[Rule]", 
         RowBox[{"Total", "@", "radii"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<sumInvRadii\>\"", "\[Rule]", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", "#"}], ")"}], "&"}], "/@", "radii"}], "]"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<feus\>\"", "\[Rule]", "feus"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<mitten\>\"", "\[Rule]", "mitten"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<mittenPedals\>\"", "\[Rule]", "mittenPedals"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<mittenFeet\>\"", "\[Rule]", " ", "mittenFeet"}]}], " ", 
       RowBox[{"(*", " ", 
        RowBox[{"BAD", " ", 
         RowBox[{"choice", ":", " ", 
          RowBox[{
           RowBox[{"intersecao", " ", "do", " ", "segm", " ", "Vi"}], "-", 
           RowBox[{
           "MITTEN", " ", "com", " ", "o", " ", "lado", " ", "oposto", " ", 
            "do", " ", "extriangulo"}]}]}]}], " ", "*)"}], 
       "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0F9IU2EAhvGxCtMWzqlxShpMQ411aGoORJfb0mE6dXNMQrwQ2SKk0Atz
ZiO8MdbMNDVjXpnEooTTCLFRCyVKIwIlt6POFf4BTTeDqaSRSN/7XTz87h9Z
fWOVVSgQCOQk+G1xLv9CfESTXRlQQ1PCRjHULytboDh8cQJyT8KfobH1bABO
9F2ah0N1unITcX9wxgg/7UgemomOY8Iu6Eq+9RgOdweo2XFzi9DmZ0Owt969
BA8ZL3XzrvN4NXH6xhtqn7aUgQZrSgrkat7lwC8DfhUsMx3Rwp95/SUw97rY
AD3P26jNBVcn4SvlyynIZzTxcN/4dAHaXQVrTuIYW/wblhRt7cAHf4cOoGtA
J+3Ej+avCtiQLFTDFsZL7fHZ9VAasRhg6fvp1A9E37PqNNjTLmfhqrNLAe0n
hdw6cXzhNdXHprXHiCOaF6N6F7y5Hq/NIDp0p6jW3rixX8TJ+5VvYQUfenRA
FNll3TDT7Qt+T4hoWhtVy/DM5uwadNv2qEHd1olZosUdpc7w3GnYn6NKh4Ns
zB3oOadogyFlbSfMr7FQzeUdIj/xdsOSFF6T/ciEK4wkC4p2Cy/DQ/XHIqhm
Ys3wnvw89WiZpBYaTIVU77+8DZ7Ipe5RFSPS2HliUzAogtuyaCL803ElCTqi
tly4Mhym/gdGVkB5
  "]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Legacy Colors", "Section",
 CellChangeTimes->{{3.771023808363148*^9, 3.7710238146613646`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ColorData", "[", 
    RowBox[{"\"\<Legacy\>\"", ",", "\"\<ColorRules\>\""}], "]"}], "//", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{"#", ",", "6"}], "]"}], "&"}]}], "//", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"#", ",", 
     RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.771023432102033*^9, 3.771023435329379*^9}, {
   3.7710236001385975`*^9, 3.771023603042837*^9}, 3.7710236732781315`*^9, {
   3.771023723421194*^9, 3.7710237545151367`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"\<\"AliceBlue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.941206, 0.972503, 1.], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6274706666666667, 0.6483353333333334, 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.941206, 0.972503, 1.]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.941206, 0.972503, 1.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.941206, 0.972503, 1.],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"AlizarinCrimson\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.889996, 0.149998, 0.209998], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5933306666666667, 0.09999866666666667, 0.13999866666666666`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.889996, 0.149998, 0.209998]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.889996, 0.149998, 0.209998]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.889996, 0.149998, 0.209998],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Antique\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.980575, 0.92233, 0.844661], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[
            0.6537166666666667, 0.6148866666666667, 0.5631073333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.980575, 0.92233, 0.844661]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.980575, 0.92233, 0.844661]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.980575, 0.92233, 0.844661],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Apricot\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.340007, 0.129994], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.22667133333333334`, 0.08666266666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.340007, 0.129994]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.340007, 0.129994]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.340007, 0.129994],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Aquamarine\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.498001, 1., 0.831401], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3320006666666667, 0.6666666666666667, 0.5542673333333333],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.498001, 1., 0.831401]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.498001, 1., 0.831401]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.498001, 1., 0.831401],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"AureolineYellow\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.659993, 0.140004], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.4399953333333334, 0.093336],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.659993, 0.140004]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.659993, 0.140004]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.659993, 0.140004],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"Azure\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.94174, 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6278266666666668, 0.6666666666666667, 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.94174, 1., 1.]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.94174, 1., 1.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.94174, 1., 1.],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Banana\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.889996, 0.810007, 0.340007], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5933306666666667, 0.5400046666666667, 0.22667133333333334`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.889996, 0.810007, 0.340007]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.889996, 0.810007, 0.340007]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.889996, 0.810007, 0.340007],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Beige\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.640004, 0.580004, 0.5], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.42666933333333334`, 0.3866693333333333, 0.33333333333333337`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.640004, 0.580004, 0.5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.640004, 0.580004, 0.5]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.640004, 0.580004, 0.5],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Bisque\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.898053, 0.771844], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.5987020000000001, 0.5145626666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.898053, 0.771844]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.898053, 0.771844]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.898053, 0.771844],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Black\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 0],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"BlanchedAlmond\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.921598, 0.803903], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.6143986666666668, 0.5359353333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.921598, 0.803903]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.921598, 0.803903]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.921598, 0.803903],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"Blue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0., 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"BlueViolet\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.5412, 0.1686, 0.886303], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.3608, 0.1124, 0.5908686666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.5412, 0.1686, 0.886303]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.5412, 0.1686, 0.886303]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.5412, 0.1686, 0.886303],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Brick\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.610004, 0.400006, 0.119999], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4066693333333333, 0.26667066666666667`, 0.07999933333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.610004, 0.400006, 0.119999]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.610004, 0.400006, 0.119999]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.610004, 0.400006, 0.119999],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Brown\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.6, 0.4, 0.2], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.6, 0.4, 0.2]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.6, 0.4, 0.2]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.6, 0.4, 0.2],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"BrownMadder\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.859996, 0.159993, 0.159993], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.5733306666666667, 0.106662, 0.106662],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.859996, 0.159993, 0.159993]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.859996, 0.159993, 0.159993]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.859996, 0.159993, 0.159993],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"BrownOchre\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.53, 0.260002, 0.119999], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3533333333333334, 0.1733346666666667, 0.07999933333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.53, 0.260002, 0.119999]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.53, 0.260002, 0.119999]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.53, 0.260002, 0.119999],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"Burlywood\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.870602, 0.721595, 0.529405], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5804013333333333, 0.48106333333333334`, 0.3529366666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.870602, 0.721595, 0.529405]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.870602, 0.721595, 0.529405]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.870602, 0.721595, 0.529405],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"BurntSienna\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.539994, 0.209998, 0.059999], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.359996, 0.13999866666666666`, 0.03999933333333333],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.539994, 0.209998, 0.059999]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.539994, 0.209998, 0.059999]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.539994, 0.209998, 0.059999],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"BurntUmber\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.539994, 0.200003, 0.140004], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.359996, 0.13333533333333333`, 0.093336],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.539994, 0.200003, 0.140004]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.539994, 0.200003, 0.140004]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.539994, 0.200003, 0.140004],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"CadetBlue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.372494, 0.619602, 0.627506], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.24832933333333335`, 0.413068, 0.41833733333333334`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.372494, 0.619602, 0.627506]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.372494, 0.619602, 0.627506]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.372494, 0.619602, 0.627506],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"CadmiumLemon\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.889996, 0.009995], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.5933306666666667, 0.006663333333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.889996, 0.009995]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.889996, 0.009995]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.889996, 0.009995],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"CadmiumOrange\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.380001, 0.009995], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.253334, 0.006663333333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.380001, 0.009995]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.380001, 0.009995]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.380001, 0.009995],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"CadmiumYellow\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.599994, 0.069994], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.399996, 0.04666266666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.599994, 0.069994]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.599994, 0.069994]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.599994, 0.069994],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Carrot\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.930006, 0.569994, 0.129994], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.620004, 0.379996, 0.08666266666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.930006, 0.569994, 0.129994]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.930006, 0.569994, 0.129994]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.930006, 0.569994, 0.129994],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Cerulean\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.020005, 0.719993, 0.799997], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.013336666666666667`, 0.47999533333333333`, 0.5333313333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.020005, 0.719993, 0.799997]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.020005, 0.719993, 0.799997]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.020005, 0.719993, 0.799997],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Chartreuse\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.498001, 1., 0.], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.3320006666666667, 0.6666666666666667, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.498001, 1., 0.]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.498001, 1., 0.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.498001, 1., 0.],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Chocolate\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.823496, 0.411802, 0.117603], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5489973333333333, 0.2745346666666667, 0.078402],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.823496, 0.411802, 0.117603]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.823496, 0.411802, 0.117603]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.823496, 0.411802, 0.117603],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"ChromeOxideGreen\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.400006, 0.5, 0.080004], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.26667066666666667`, 0.33333333333333337`, 0.05333600000000001],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.400006, 0.5, 0.080004]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.400006, 0.5, 0.080004]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.400006, 0.5, 0.080004],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"CinnabarGreen\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.380001, 0.700003, 0.159993], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.253334, 0.46666866666666673`, 0.106662],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.380001, 0.700003, 0.159993]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.380001, 0.700003, 0.159993]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.380001, 0.700003, 0.159993],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Cobalt\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.239998, 0.350002, 0.670003], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.15999866666666668`, 0.23333466666666666`, 0.4466686666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.239998, 0.350002, 0.670003]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.239998, 0.350002, 0.670003]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.239998, 0.350002, 0.670003],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"CobaltGreen\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.239998, 0.569994, 0.250008], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.15999866666666668`, 0.379996, 0.16667200000000001`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.239998, 0.569994, 0.250008]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.239998, 0.569994, 0.250008]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.239998, 0.569994, 0.250008],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"ColdGray\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.5, 0.539994, 0.53], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.33333333333333337`, 0.359996, 0.3533333333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.5, 0.539994, 0.53]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.5, 0.539994, 0.53]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.5, 0.539994, 0.53],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Coral\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.498001, 0.3137], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.3320006666666667, 0.20913333333333334`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.498001, 0.3137]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.498001, 0.3137]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.498001, 0.3137],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"CornflowerBlue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.392193, 0.584307, 0.929395], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.261462, 0.38953800000000005`, 0.6195966666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.392193, 0.584307, 0.929395]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.392193, 0.584307, 0.929395]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.392193, 0.584307, 0.929395],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"Cornsilk\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.972503, 0.862697], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.6483353333333334, 0.5751313333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.972503, 0.862697]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.972503, 0.862697]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.972503, 0.862697],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Cyan\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.6666666666666666, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0, 1, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 1],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"CyanWhite\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.878399, 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5855993333333334, 0.6666666666666667, 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.878399, 1., 1.]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.878399, 1., 1.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.878399, 1., 1.],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"DarkGoldenrod\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.721595, 0.525498, 0.043107], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.48106333333333334`, 0.35033200000000003`, 0.028738],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.721595, 0.525498, 0.043107]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.721595, 0.525498, 0.043107]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.721595, 0.525498, 0.043107],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"DarkGreen\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0., 0.392193, 0.], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.261462, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0., 0.392193, 0.]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0., 0.392193, 0.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0., 0.392193, 0.],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"DarkKhaki\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.741203, 0.717597, 0.419599], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4941353333333333, 0.47839800000000005`, 0.2797326666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.741203, 0.717597, 0.419599]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.741203, 0.717597, 0.419599]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.741203, 0.717597, 0.419599],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"DarkOliveGreen\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.333293, 0.419599, 0.184301], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.22219533333333336`, 0.2797326666666667, 0.12286733333333333`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.333293, 0.419599, 0.184301]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.333293, 0.419599, 0.184301]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.333293, 0.419599, 0.184301],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"DarkOrange\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.548997, 0.], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666667, 0.365998, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.548997, 0.]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.548997, 0.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.548997, 0.],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"DarkOrchid\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.599994, 0.196097, 0.799997], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.399996, 0.13073133333333334`, 0.5333313333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.599994, 0.196097, 0.799997]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.599994, 0.196097, 0.799997]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.599994, 0.196097, 0.799997],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"DarkSeaGreen\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.560793, 0.737297, 0.560793], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.373862, 0.4915313333333333, 0.373862],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.560793, 0.737297, 0.560793]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.560793, 0.737297, 0.560793]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.560793, 0.737297, 0.560793],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"DarkSlateBlue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.282403, 0.239204, 0.545106], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.1882686666666667, 0.15946933333333335`, 0.363404],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.282403, 0.239204, 0.545106]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.282403, 0.239204, 0.545106]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.282403, 0.239204, 0.545106],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"DarkSlateGray\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.184301, 0.309793, 0.309793], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.12286733333333333`, 0.20652866666666667`, 0.20652866666666667`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.184301, 0.309793, 0.309793]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.184301, 0.309793, 0.309793]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.184301, 0.309793, 0.309793],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"DarkTurquoise\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0., 0.807794, 0.819605], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.5385293333333334, 0.5464033333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0., 0.807794, 0.819605]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0., 0.807794, 0.819605]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0., 0.807794, 0.819605],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"DarkViolet\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.580401, 0., 0.827494], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.386934, 0., 0.5516626666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.580401, 0., 0.827494]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.580401, 0., 0.827494]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.580401, 0., 0.827494],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"DeepCadmiumRed\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.889996, 0.089999, 0.050005], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5933306666666667, 0.059999333333333335`, 0.03333666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.889996, 0.089999, 0.050005]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.889996, 0.089999, 0.050005]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.889996, 0.089999, 0.050005],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"DeepCobaltViolet\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.569994, 0.129994, 0.619999], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[
            0.379996, 0.08666266666666667, 0.4133326666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.569994, 0.129994, 0.619999]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.569994, 0.129994, 0.619999]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.569994, 0.129994, 0.619999],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"DeepMadderLake\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.889996, 0.179998, 0.189993], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5933306666666667, 0.11999866666666667`, 0.126662],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.889996, 0.179998, 0.189993]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.889996, 0.179998, 0.189993]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.889996, 0.179998, 0.189993],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"DeepNaplesYellow\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.659993, 0.069994], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.4399953333333334, 0.04666266666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.659993, 0.069994]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.659993, 0.069994]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.659993, 0.069994],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"DeepOchre\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.449995, 0.239998, 0.099994], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2999966666666667, 0.15999866666666668`, 0.06666266666666668],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.449995, 0.239998, 0.099994]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.449995, 0.239998, 0.099994]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.449995, 0.239998, 0.099994],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"DeepPink\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.078402, 0.576495], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666667, 0.052268, 0.38433],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.078402, 0.576495]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.078402, 0.576495]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.078402, 0.576495],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"DeepSkyBlue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0., 0.749, 1.], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.49933333333333335`, 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0., 0.749, 1.]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0., 0.749, 1.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0., 0.749, 1.],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"DimGray\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.333333, 0.333333, 0.333333], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.222222, 0.222222, 0.222222],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.333333, 0.333333, 0.333333]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.333333, 0.333333, 0.333333]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.333333, 0.333333, 0.333333],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"DodgerBlue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.117603, 0.564699, 1.], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.078402, 0.37646599999999997`, 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.117603, 0.564699, 1.]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.117603, 0.564699, 1.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.117603, 0.564699, 1.],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Eggshell\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.990005, 0.900006, 0.790002], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6600033333333334, 0.600004, 0.526668],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.990005, 0.900006, 0.790002]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.990005, 0.900006, 0.790002]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.990005, 0.900006, 0.790002],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"EmeraldGreen\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0., 0.790002, 0.340007], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.526668, 0.22667133333333334`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0., 0.790002, 0.340007]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0., 0.790002, 0.340007]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0., 0.790002, 0.340007],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"EnglishRed\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.829997, 0.239998, 0.099994], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5533313333333334, 0.15999866666666668`, 0.06666266666666668],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.829997, 0.239998, 0.099994]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.829997, 0.239998, 0.099994]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.829997, 0.239998, 0.099994],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Firebrick\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.698004, 0.133305, 0.133305], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.46533599999999997`, 0.08887, 0.08887],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.698004, 0.133305, 0.133305]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.698004, 0.133305, 0.133305]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.698004, 0.133305, 0.133305],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Floral\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.980407, 0.941206], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.6536046666666667, 0.6274706666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.980407, 0.941206]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.980407, 0.941206]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.980407, 0.941206],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"ForestGreen\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.133305, 0.545106, 0.133305], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.08887, 0.363404, 0.08887],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.133305, 0.545106, 0.133305]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.133305, 0.545106, 0.133305]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.133305, 0.545106, 0.133305],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Gainsboro\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.862697, 0.862697, 0.862697], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5751313333333334, 0.5751313333333334, 0.5751313333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.862697, 0.862697, 0.862697]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.862697, 0.862697, 0.862697]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.862697, 0.862697, 0.862697],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"GeraniumLake\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.889996, 0.069994, 0.189993], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5933306666666667, 0.04666266666666667, 0.126662],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.889996, 0.069994, 0.189993]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.889996, 0.069994, 0.189993]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.889996, 0.069994, 0.189993],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Ghost\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.972503, 0.972503, 1.], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6483353333333334, 0.6483353333333334, 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.972503, 0.972503, 1.]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.972503, 0.972503, 1.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.972503, 0.972503, 1.],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Gold\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.843104, 0.], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666667, 0.5620693333333333, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.843104, 0.]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.843104, 0.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.843104, 0.],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Goldenrod\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.8549, 0.647099, 0.125507], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5699333333333334, 0.43139933333333336`, 0.08367133333333335],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.8549, 0.647099, 0.125507]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.8549, 0.647099, 0.125507]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.8549, 0.647099, 0.125507],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"GoldOchre\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.780007, 0.47, 0.149998], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5200046666666667, 0.31333333333333335`, 0.09999866666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.780007, 0.47, 0.149998]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.780007, 0.47, 0.149998]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.780007, 0.47, 0.149998],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Gray\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.5, 0.5, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.5, 0.5, 0.5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.5, 0.5, 0.5]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.5, 0.5, 0.5],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"Green\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"GreenishUmber\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.239998, 0.050005], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.15999866666666668`, 0.03333666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.239998, 0.050005]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.239998, 0.050005]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.239998, 0.050005],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"GreenYellow\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.678396, 1., 0.184301], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.452264, 0.6666666666666667, 0.12286733333333333`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.678396, 1., 0.184301]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.678396, 1., 0.184301]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.678396, 1., 0.184301],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Honeydew\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.941206, 1., 0.941206], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6274706666666667, 0.6666666666666667, 0.6274706666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.941206, 1., 0.941206]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.941206, 1., 0.941206]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.941206, 1., 0.941206],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"HotPink\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.411802, 0.705893], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.2745346666666667, 0.47059533333333337`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.411802, 0.705893]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.411802, 0.705893]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.411802, 0.705893],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"IndianRed\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.689993, 0.089999, 0.119999], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4599953333333333, 0.059999333333333335`, 0.07999933333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.689993, 0.089999, 0.119999]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.689993, 0.089999, 0.119999]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.689993, 0.089999, 0.119999],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"Indigo\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.03, 0.179998, 0.329997], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.02, 0.11999866666666667`, 0.219998],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.03, 0.179998, 0.329997]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.03, 0.179998, 0.329997]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.03, 0.179998, 0.329997],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Ivory\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 1., 0.941206], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.6666666666666667, 0.6274706666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 1., 0.941206]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 1., 0.941206]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 1., 0.941206],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"IvoryBlack\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.159993, 0.140004, 0.129994], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.106662, 0.093336, 0.08666266666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.159993, 0.140004, 0.129994]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.159993, 0.140004, 0.129994]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.159993, 0.140004, 0.129994],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Khaki\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.941206, 0.902005, 0.548997], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6274706666666667, 0.6013366666666666, 0.365998],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.941206, 0.902005, 0.548997]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.941206, 0.902005, 0.548997]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.941206, 0.902005, 0.548997],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"LampBlack\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.179998, 0.280007, 0.230003], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.11999866666666667`, 0.18667133333333336`, 0.15333533333333335`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.179998, 0.280007, 0.230003]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.179998, 0.280007, 0.230003]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.179998, 0.280007, 0.230003],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Lavender\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.902005, 0.902005, 0.980407], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6013366666666666, 0.6013366666666666, 0.6536046666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.902005, 0.902005, 0.980407]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.902005, 0.902005, 0.980407]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.902005, 0.902005, 0.980407],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"LavenderBlush\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.941206, 0.960799], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.6274706666666667, 0.6405326666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.941206, 0.960799]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.941206, 0.960799]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.941206, 0.960799],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"LawnGreen\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.486297, 0.988205, 0.], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.324198, 0.6588033333333334, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.486297, 0.988205, 0.]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.486297, 0.988205, 0.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.486297, 0.988205, 0.],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"LemonChiffon\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.980407, 0.803903], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.6536046666666667, 0.5359353333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.980407, 0.803903]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.980407, 0.803903]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.980407, 0.803903],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"LightBeige\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.960799, 0.960799, 0.862697], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6405326666666666, 0.6405326666666666, 0.5751313333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.960799, 0.960799, 0.862697]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.960799, 0.960799, 0.862697]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.960799, 0.960799, 0.862697],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"LightBlue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.678396, 0.847102, 0.902005], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.452264, 0.5647346666666667, 0.6013366666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.678396, 0.847102, 0.902005]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.678396, 0.847102, 0.902005]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.678396, 0.847102, 0.902005],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"LightCadmiumRed\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.009995, 0.050005], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.006663333333333334, 0.03333666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.009995, 0.050005]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.009995, 0.050005]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.009995, 0.050005],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"LightCadmiumYellow\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.689993, 0.059999], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.4599953333333333, 0.03999933333333333],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.689993, 0.059999]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.689993, 0.059999]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.689993, 0.059999],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"LightCoral\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.941206, 0.501999, 0.501999], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6274706666666667, 0.334666, 0.334666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.941206, 0.501999, 0.501999]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.941206, 0.501999, 0.501999]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.941206, 0.501999, 0.501999],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"LightGoldenrod\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.933302, 0.866695, 0.509796], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6222013333333334, 0.5777966666666667, 0.33986400000000005`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.933302, 0.866695, 0.509796]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.933302, 0.866695, 0.509796]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.933302, 0.866695, 0.509796],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"LightGray\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.666666, 0.666666, 0.666666], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.444444, 0.444444, 0.444444],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.666666, 0.666666, 0.666666]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.666666, 0.666666, 0.666666]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.666666, 0.666666, 0.666666],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"LightPink\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.713706, 0.756905], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.475804, 0.5046033333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.713706, 0.756905]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.713706, 0.756905]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.713706, 0.756905],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"LightSalmon\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.627506, 0.478393], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.41833733333333334`, 0.3189286666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.627506, 0.478393]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.627506, 0.478393]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.627506, 0.478393],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"LightSeaGreen\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.125507, 0.698004, 0.666707], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.08367133333333335, 0.46533599999999997`, 0.4444713333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.125507, 0.698004, 0.666707]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.125507, 0.698004, 0.666707]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.125507, 0.698004, 0.666707],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"LightSkyBlue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.529405, 0.807794, 0.980407], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3529366666666667, 0.5385293333333334, 0.6536046666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.529405, 0.807794, 0.980407]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.529405, 0.807794, 0.980407]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.529405, 0.807794, 0.980407],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"LightSlateBlue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.517594, 0.439207, 1.], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3450626666666667, 0.2928046666666667, 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.517594, 0.439207, 1.]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.517594, 0.439207, 1.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.517594, 0.439207, 1.],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"LightSlateGray\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.466704, 0.533296, 0.599994], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.311136, 0.35553066666666666`, 0.399996],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.466704, 0.533296, 0.599994]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.466704, 0.533296, 0.599994]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.466704, 0.533296, 0.599994],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"LightSteelBlue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.690207, 0.768593, 0.870602], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.46013800000000005`, 0.5123953333333333, 0.5804013333333333],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.690207, 0.768593, 0.870602]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.690207, 0.768593, 0.870602]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.690207, 0.768593, 0.870602],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"LightViridian\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.430006, 1., 0.440001], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2866706666666667, 0.6666666666666667, 0.293334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.430006, 1., 0.440001]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.430006, 1., 0.440001]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.430006, 1., 0.440001],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"LightYellow\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 1., 0.878399], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.6666666666666667, 0.5855993333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 1., 0.878399]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 1., 0.878399]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 1., 0.878399],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"LimeGreen\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.196097, 0.803903, 0.196097], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.13073133333333334`, 0.5359353333333334, 0.13073133333333334`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.196097, 0.803903, 0.196097]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.196097, 0.803903, 0.196097]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.196097, 0.803903, 0.196097],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Linen\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.980407, 0.941206, 0.902005], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6536046666666667, 0.6274706666666667, 0.6013366666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.980407, 0.941206, 0.902005]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.980407, 0.941206, 0.902005]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.980407, 0.941206, 0.902005],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Magenta\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 1],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"ManganeseBlue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.009995, 0.659993, 0.619999], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.006663333333333334, 0.4399953333333334, 0.4133326666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.009995, 0.659993, 0.619999]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.009995, 0.659993, 0.619999]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.009995, 0.659993, 0.619999],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Maroon\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.690207, 0.188192, 0.376507], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.46013800000000005`, 0.12546133333333334`, 0.25100466666666665`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.690207, 0.188192, 0.376507]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.690207, 0.188192, 0.376507]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.690207, 0.188192, 0.376507],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"MarsOrange\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.589999, 0.269997, 0.080004], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3933326666666667, 0.179998, 0.05333600000000001],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.589999, 0.269997, 0.080004]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.589999, 0.269997, 0.080004]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.589999, 0.269997, 0.080004],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"MarsYellow\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.889996, 0.440001, 0.099994], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5933306666666667, 0.293334, 0.06666266666666668],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.889996, 0.440001, 0.099994]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.889996, 0.440001, 0.099994]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.889996, 0.440001, 0.099994],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"MediumAquamarine\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.400006, 0.803903, 0.666707], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.26667066666666667`, 0.5359353333333334, 0.4444713333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.400006, 0.803903, 0.666707]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.400006, 0.803903, 0.666707]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.400006, 0.803903, 0.666707],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"MediumBlue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0., 0., 0.803903], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0., 0.5359353333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0., 0., 0.803903]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0., 0., 0.803903]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0., 0., 0.803903],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"MediumOrchid\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.729408, 0.333293, 0.827494], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.486272, 0.22219533333333336`, 0.5516626666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.729408, 0.333293, 0.827494]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.729408, 0.333293, 0.827494]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.729408, 0.333293, 0.827494],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"MediumPurple\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.576495, 0.439207, 0.858806], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.38433, 0.2928046666666667, 0.5725373333333333],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.576495, 0.439207, 0.858806]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.576495, 0.439207, 0.858806]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.576495, 0.439207, 0.858806],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"MediumSeaGreen\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.235298, 0.702002, 0.443098], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.15686533333333336`, 0.4680013333333334, 0.2953986666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.235298, 0.702002, 0.443098]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.235298, 0.702002, 0.443098]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.235298, 0.702002, 0.443098],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"MediumSlateBlue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.482406, 0.407804, 0.933302], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.321604, 0.27186933333333335`, 0.6222013333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.482406, 0.407804, 0.933302]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.482406, 0.407804, 0.933302]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.482406, 0.407804, 0.933302],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"MediumSpringGreen\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0., 0.980407, 0.6039], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.6536046666666667, 0.4026],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0., 0.980407, 0.6039]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0., 0.980407, 0.6039]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0., 0.980407, 0.6039],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"MediumTurquoise\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.282403, 0.819605, 0.799997], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.1882686666666667, 0.5464033333333334, 0.5333313333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.282403, 0.819605, 0.799997]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.282403, 0.819605, 0.799997]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.282403, 0.819605, 0.799997],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"MediumVioletRed\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.780404, 0.0824, 0.521607], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5202693333333334, 0.054933333333333334`, 0.34773800000000005`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.780404, 0.0824, 0.521607]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.780404, 0.0824, 0.521607]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.780404, 0.0824, 0.521607],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Melon\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.889996, 0.659993, 0.410001], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5933306666666667, 0.4399953333333334, 0.273334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.889996, 0.659993, 0.410001]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.889996, 0.659993, 0.410001]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.889996, 0.659993, 0.410001],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"MidnightBlue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.097995, 0.097995, 0.439207], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.06533, 0.06533, 0.2928046666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.097995, 0.097995, 0.439207]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.097995, 0.097995, 0.439207]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.097995, 0.097995, 0.439207],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Mint\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.739998, 0.990005, 0.790002], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.49333200000000005`, 0.6600033333333334, 0.526668],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.739998, 0.990005, 0.790002]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.739998, 0.990005, 0.790002]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.739998, 0.990005, 0.790002],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"MintCream\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.960799, 1., 0.980407], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6405326666666666, 0.6666666666666667, 0.6536046666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.960799, 1., 0.980407]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.960799, 1., 0.980407]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.960799, 1., 0.980407],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"MistyRose\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.894101, 0.882397], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.5960673333333334, 0.5882646666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.894101, 0.882397]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.894101, 0.882397]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.894101, 0.882397],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Moccasin\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.894101, 0.709799], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.5960673333333334, 0.4731993333333333],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.894101, 0.709799]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.894101, 0.709799]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.894101, 0.709799],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Navajo\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.870602, 0.678396], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.5804013333333333, 0.452264],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.870602, 0.678396]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.870602, 0.678396]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.870602, 0.678396],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"Navy\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0., 0., 0.501999], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0., 0.334666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0., 0., 0.501999]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0., 0., 0.501999]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0., 0., 0.501999],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"NavyBlue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0., 0., 0.501999], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0., 0.334666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0., 0., 0.501999]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0., 0., 0.501999]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0., 0., 0.501999],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Oak\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.490005, 0.250008], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.32667, 0.16667200000000001`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.490005, 0.250008]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.490005, 0.250008]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.490005, 0.250008],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"OldLace\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.992203, 0.960799, 0.902005], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6614686666666667, 0.6405326666666666, 0.6013366666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.992203, 0.960799, 0.902005]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.992203, 0.960799, 0.902005]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.992203, 0.960799, 0.902005],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Olive\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.230003, 0.370006, 0.170003], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.15333533333333335`, 0.24667066666666668`, 0.11333533333333333`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.230003, 0.370006, 0.170003]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.230003, 0.370006, 0.170003]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.230003, 0.370006, 0.170003],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"OliveDrab\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.419599, 0.556902, 0.137303], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2797326666666667, 0.37126800000000004`, 0.09153533333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.419599, 0.556902, 0.137303]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.419599, 0.556902, 0.137303]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.419599, 0.556902, 0.137303],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"Orange\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 0.5, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0.5, 0],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"OrangeRed\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.270608, 0.], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666667, 0.18040533333333336`, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.270608, 0.]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.270608, 0.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.270608, 0.],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Orchid\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.8549, 0.439207, 0.839198], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5699333333333334, 0.2928046666666667, 0.5594653333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.8549, 0.439207, 0.839198]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.8549, 0.439207, 0.839198]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.8549, 0.439207, 0.839198],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"PaleGoldenrod\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.933302, 0.909803, 0.666707], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6222013333333334, 0.6065353333333334, 0.4444713333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.933302, 0.909803, 0.666707]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.933302, 0.909803, 0.666707]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.933302, 0.909803, 0.666707],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"PaleGreen\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.596103, 0.984298, 0.596103], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.39740200000000003`, 0.6561986666666667, 0.39740200000000003`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.596103, 0.984298, 0.596103]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.596103, 0.984298, 0.596103]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.596103, 0.984298, 0.596103],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"PaleTurquoise\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.6863, 0.933302, 0.933302], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.45753333333333335`, 0.6222013333333334, 0.6222013333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.6863, 0.933302, 0.933302]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.6863, 0.933302, 0.933302]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.6863, 0.933302, 0.933302],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"PaleVioletRed\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.858806, 0.439207, 0.576495], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5725373333333333, 0.2928046666666667, 0.38433],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.858806, 0.439207, 0.576495]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.858806, 0.439207, 0.576495]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.858806, 0.439207, 0.576495],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"PapayaWhip\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.9373, 0.835307], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.6248666666666667, 0.5568713333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.9373, 0.835307]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.9373, 0.835307]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.9373, 0.835307],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Peach\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.44, 0.26, 0.26], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.29333333333333333`, 0.17333333333333334`, 0.17333333333333334`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.44, 0.26, 0.26]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.44, 0.26, 0.26]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.44, 0.26, 0.26],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"PeachPuff\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.8549, 0.725501], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.5699333333333334, 0.48366733333333334`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.8549, 0.725501]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.8549, 0.725501]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.8549, 0.725501],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Peacock\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.200003, 0.629994, 0.790002], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.13333533333333333`, 0.41999600000000004`, 0.526668],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.200003, 0.629994, 0.790002]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.200003, 0.629994, 0.790002]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.200003, 0.629994, 0.790002],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"PermanentGreen\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.039995, 0.790002, 0.170003], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.026663333333333337`, 0.526668, 0.11333533333333333`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.039995, 0.790002, 0.170003]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.039995, 0.790002, 0.170003]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.039995, 0.790002, 0.170003],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"PermanentRedViolet\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.859996, 0.149998, 0.269997], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5733306666666667, 0.09999866666666667, 0.179998],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.859996, 0.149998, 0.269997]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.859996, 0.149998, 0.269997]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.859996, 0.149998, 0.269997],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Peru\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.803903, 0.521607, 0.247093], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5359353333333334, 0.34773800000000005`, 0.1647286666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.803903, 0.521607, 0.247093]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.803903, 0.521607, 0.247093]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.803903, 0.521607, 0.247093],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Pink\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0.5, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.33333333333333337`, 0.33333333333333337`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 0.5, 0.5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1, 0.5, 0.5]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0.5, 0.5],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Plum\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.866695, 0.627506, 0.866695], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5777966666666667, 0.41833733333333334`, 0.5777966666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.866695, 0.627506, 0.866695]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.866695, 0.627506, 0.866695]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.866695, 0.627506, 0.866695],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"PowderBlue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.690207, 0.878399, 0.902005], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.46013800000000005`, 0.5855993333333334, 0.6013366666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.690207, 0.878399, 0.902005]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.690207, 0.878399, 0.902005]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.690207, 0.878399, 0.902005],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"PrussianBlue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.18, 0.18, 0.31], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.12, 0.12, 0.20666666666666667`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.18, 0.18, 0.31]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.18, 0.18, 0.31]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.18, 0.18, 0.31],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"Purple\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.33333333333333337`, 0., 0.33333333333333337`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.5, 0, 0.5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.5, 0, 0.5]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.5, 0, 0.5],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Raspberry\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.53, 0.149998, 0.340007], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3533333333333334, 0.09999866666666667, 0.22667133333333334`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.53, 0.149998, 0.340007]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.53, 0.149998, 0.340007]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.53, 0.149998, 0.340007],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"RawSienna\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.780007, 0.380001, 0.080004], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5200046666666667, 0.253334, 0.05333600000000001],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.780007, 0.380001, 0.080004]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.780007, 0.380001, 0.080004]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.780007, 0.380001, 0.080004],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"RawUmber\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.449995, 0.290002, 0.069994], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2999966666666667, 0.19333466666666665`, 0.04666266666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.449995, 0.290002, 0.069994]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.449995, 0.290002, 0.069994]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.449995, 0.290002, 0.069994],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Red\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"RoseMadder\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.889996, 0.209998, 0.219993], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5933306666666667, 0.13999866666666666`, 0.14666200000000001`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.889996, 0.209998, 0.219993]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.889996, 0.209998, 0.219993]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.889996, 0.209998, 0.219993],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"RosyBrown\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.737297, 0.560793, 0.560793], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.4915313333333333, 0.373862, 0.373862],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.737297, 0.560793, 0.560793]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.737297, 0.560793, 0.560793]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.737297, 0.560793, 0.560793],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"RoyalBlue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.254906, 0.411802, 0.882397], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.16993733333333336`, 0.2745346666666667, 0.5882646666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.254906, 0.411802, 0.882397]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.254906, 0.411802, 0.882397]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.254906, 0.411802, 0.882397],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"SaddleBrown\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.545106, 0.270608, 0.074496], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.363404, 0.18040533333333336`, 0.04966400000000001],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.545106, 0.270608, 0.074496]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.545106, 0.270608, 0.074496]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.545106, 0.270608, 0.074496],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Salmon\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.980407, 0.501999, 0.447096], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6536046666666667, 0.334666, 0.298064],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.980407, 0.501999, 0.447096]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.980407, 0.501999, 0.447096]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.980407, 0.501999, 0.447096],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"SandyBrown\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.956893, 0.643101, 0.376507], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6379286666666667, 0.42873400000000006`, 0.25100466666666665`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.956893, 0.643101, 0.376507]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.956893, 0.643101, 0.376507]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.956893, 0.643101, 0.376507],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"SapGreen\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.189993, 0.5, 0.080004], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.126662, 0.33333333333333337`, 0.05333600000000001],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.189993, 0.5, 0.080004]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.189993, 0.5, 0.080004]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.189993, 0.5, 0.080004],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"SeaGreen\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.180395, 0.545106, 0.341197], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.12026333333333333`, 0.363404, 0.22746466666666665`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.180395, 0.545106, 0.341197]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.180395, 0.545106, 0.341197]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.180395, 0.545106, 0.341197],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Seashell\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.960799, 0.933302], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.6405326666666666, 0.6222013333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.960799, 0.933302]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.960799, 0.933302]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.960799, 0.933302],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Sepia\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.370006, 0.149998, 0.069994], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.24667066666666668`, 0.09999866666666667, 0.04666266666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.370006, 0.149998, 0.069994]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.370006, 0.149998, 0.069994]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.370006, 0.149998, 0.069994],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Sienna\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.627506, 0.321604, 0.176504], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.41833733333333334`, 0.21440266666666669`, 0.11766933333333333`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.627506, 0.321604, 0.176504]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.627506, 0.321604, 0.176504]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.627506, 0.321604, 0.176504],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"SkyBlue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.529405, 0.807794, 0.921598], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3529366666666667, 0.5385293333333334, 0.6143986666666668],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.529405, 0.807794, 0.921598]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.529405, 0.807794, 0.921598]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.529405, 0.807794, 0.921598],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"SlateBlue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.415693, 0.352901, 0.803903], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2771286666666667, 0.23526733333333336`, 0.5359353333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.415693, 0.352901, 0.803903]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.415693, 0.352901, 0.803903]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.415693, 0.352901, 0.803903],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"SlateGray\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.439207, 0.501999, 0.564699], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2928046666666667, 0.334666, 0.37646599999999997`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.439207, 0.501999, 0.564699]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.439207, 0.501999, 0.564699]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.439207, 0.501999, 0.564699],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Smoke\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.960799, 0.960799, 0.960799], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6405326666666666, 0.6405326666666666, 0.6405326666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.960799, 0.960799, 0.960799]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.960799, 0.960799, 0.960799]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.960799, 0.960799, 0.960799],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Snow\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.980407, 0.980407], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.6536046666666667, 0.6536046666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.980407, 0.980407]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.980407, 0.980407]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.980407, 0.980407],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"SpringGreen\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0., 1., 0.498001], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.6666666666666667, 0.3320006666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0., 1., 0.498001]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0., 1., 0.498001]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0., 1., 0.498001],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"SteelBlue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.274499, 0.509796, 0.705893], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.18299933333333335`, 0.33986400000000005`, 0.47059533333333337`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.274499, 0.509796, 0.705893]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.274499, 0.509796, 0.705893]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.274499, 0.509796, 0.705893],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"TerreVerte\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.219993, 0.370006, 0.059999], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.14666200000000001`, 0.24667066666666668`, 0.03999933333333333],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.219993, 0.370006, 0.059999]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.219993, 0.370006, 0.059999]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.219993, 0.370006, 0.059999],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"Thistle\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.847102, 0.749, 0.847102], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5647346666666667, 0.49933333333333335`, 0.5647346666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.847102, 0.749, 0.847102]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.847102, 0.749, 0.847102]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.847102, 0.749, 0.847102],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Titanium\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.990005, 1., 0.940001], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6600033333333334, 0.6666666666666667, 0.6266673333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.990005, 1., 0.940001]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.990005, 1., 0.940001]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.990005, 1., 0.940001],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Tomato\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1., 0.388195, 0.278405], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666667, 0.2587966666666667, 0.18560333333333334`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1., 0.388195, 0.278405]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.388195, 0.278405]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.388195, 0.278405],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Turquoise\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.250999, 0.878399, 0.815699], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.16733266666666669`, 0.5855993333333334, 0.5437993333333333],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.250999, 0.878399, 0.815699]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.250999, 0.878399, 0.815699]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.250999, 0.878399, 0.815699],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"TurquoiseBlue\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0., 0.780007, 0.550005], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.5200046666666667, 0.36667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0., 0.780007, 0.550005]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0., 0.780007, 0.550005]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0., 0.780007, 0.550005],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Ultramarine\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.069994, 0.039995, 0.559999], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.04666266666666667, 0.026663333333333337`, 0.3733326666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.069994, 0.039995, 0.559999]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.069994, 0.039995, 0.559999]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.069994, 0.039995, 0.559999],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"UltramarineViolet\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.359996, 0.140004, 0.430006], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.23999733333333334`, 0.093336, 0.2866706666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.359996, 0.140004, 0.430006]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.359996, 0.140004, 0.430006]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.359996, 0.140004, 0.430006],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"VanDykeBrown\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.370006, 0.149998, 0.020005], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.24667066666666668`, 0.09999866666666667, 0.013336666666666667`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.370006, 0.149998, 0.020005]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.370006, 0.149998, 0.020005]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.370006, 0.149998, 0.020005],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"VenetianRed\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.829997, 0.099994, 0.119999], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5533313333333334, 0.06666266666666668, 0.07999933333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.829997, 0.099994, 0.119999]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.829997, 0.099994, 0.119999]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.829997, 0.099994, 0.119999],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Violet\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.559999, 0.370006, 0.599994], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3733326666666667, 0.24667066666666668`, 0.399996],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.559999, 0.370006, 0.599994]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.559999, 0.370006, 0.599994]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.559999, 0.370006, 0.599994],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"VioletRed\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.815699, 0.125507, 0.564699], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[
            0.5437993333333333, 0.08367133333333335, 0.37646599999999997`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.815699, 0.125507, 0.564699]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.815699, 0.125507, 0.564699]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.815699, 0.125507, 0.564699],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"WarmGray\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.5, 0.5, 0.410001], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.273334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.5, 0.5, 0.410001]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.5, 0.5, 0.410001]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.5, 0.5, 0.410001],
       Editable->False,
       Selectable->False]}]},
    {
     RowBox[{"\<\"Wheat\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.960799, 0.870602, 0.702002], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6405326666666666, 0.5804013333333333, 0.4680013333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.960799, 0.870602, 0.702002]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.960799, 0.870602, 0.702002]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.960799, 0.870602, 0.702002],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"White\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 1, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 1],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"Yellow\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"YellowBrown\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.86, 0.58, 0.44], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5733333333333334, 0.38666666666666666`, 0.29333333333333333`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.86, 0.58, 0.44]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.86, 0.58, 0.44]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.86, 0.58, 0.44],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"YellowGreen\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.6039, 0.803903, 0.196097], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4026, 0.5359353333333334, 0.13073133333333334`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.6039, 0.803903, 0.196097]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.6039, 0.803903, 0.196097]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.6039, 0.803903, 0.196097],
       Editable->False,
       Selectable->False]}], 
     RowBox[{"\<\"YellowOchre\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.889996, 0.509995, 0.089999], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5933306666666667, 0.33999666666666667`, 0.059999333333333335`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.889996, 0.509995, 0.089999]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.889996, 0.509995, 0.089999]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.889996, 0.509995, 0.089999],
       Editable->False,
       Selectable->False]}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.771023674947672*^9, {3.7710237288347187`*^9, 3.771023755425703*^9}, 
   3.7710256406943417`*^9, 3.771159272046873*^9, 3.771675530176331*^9, 
   3.7721372069741163`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Drawing Notables & Clrs", "Section",
 CellChangeTimes->{{3.7660465135154676`*^9, 3.766046531309363*^9}, {
  3.7661318998438396`*^9, 3.766131908205478*^9}, {3.7681719174738703`*^9, 
  3.7681719431596155`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ptClrs", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<ell\>\"", "\[Rule]", "Black"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<med\>\"", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<bar\>\"", "\[Rule]", "Purple"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<inc\>\"", "\[Rule]", 
      RowBox[{"Darker", "@", "Green"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<ort\>\"", "\[Rule]", "Orange"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<cir\>\"", "\[Rule]", 
      RowBox[{"Lighter", "@", "Purple"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<npc\>\"", "\[Rule]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1.", ",", "0.02", ",", "0.3"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<exc\>\"", "\[Rule]", 
      RowBox[{"Darker", "@", "Green"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<ex12\>\"", "\[Rule]", 
      RowBox[{"Darker", "@", "Green"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<ex23\>\"", "\[Rule]", 
      RowBox[{"Darker", "@", "Green"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<ex31\>\"", "\[Rule]", 
      RowBox[{"Darker", "@", "Green"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<feu\>\"", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "0.5", ",", "0.27"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<antifeu\>\"", "\[Rule]", "Orange"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<anticompl\>\"", "\[Rule]", "Blue"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<steiner\>\"", "\[Rule]", "Pink"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<x88\>\"", "\[Rule]", 
      RowBox[{"Darker", "@", "Cyan"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<dar\>\"", "\[Rule]", " ", 
      RowBox[{"ColorData", "[", 
       RowBox[{"\"\<Legacy\>\"", ",", "\"\<Violet\>\""}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<tab\>\"", "\[Rule]", " ", 
      RowBox[{"ColorData", "[", 
       RowBox[{"\"\<Legacy\>\"", ",", "\"\<UltramarineViolet\>\""}], "]"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<nag\>\"", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<mit\>\"", "\[Rule]", "Red"}], 
     RowBox[{"(*", 
      RowBox[{"Lighter", "@", "Blue"}], "*)"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<sym\>\"", "\[Rule]", "Purple"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<ger\>\"", "\[Rule]", "Pink"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<spi\>\"", "\[Rule]", 
      RowBox[{"Darker", "@", "Cyan"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<nap\>\"", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<hex\>\"", "\[Rule]", "Pink"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "overrides", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\"\<red\>\"", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<green\>\"", "\[Rule]", "Green"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<blue\>\"", "\[Rule]", "Blue"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGBQAmIQPenwUfa3fG8cr2zYJQKiVyh+kQDRHI95pUB01udb
iiB63sJDaiD6X/oPLRA9n2mzNoiWWrzGA0QbvEv2BtFiIowc74C0wJo2MP2A
bf9vbf43jseUWJh0gLQ5X8fcLiD97GztAhA9e779fRC9rGDHAxD9J+g2+24g
LeClygGij0zm3HAZSMd0F28C0VOSGy6B6LL53WA6wfzcqStAesbC0NMgWtN9
ltR1IJ1yfz6YvvdEbO5zIL2jasMCEP3slBqThsAbR5PGfjBdZsvCqwmk+5Qn
C4LoBdcEehyB9KHQ2/0getv6NGknIJ3W8g5Mm7yYZVUr+MbxjMQaGxCt9VrV
eDWQvny6AUw73FOdC6K/hC4G03ULIm7sEHrjuC5xKZi2Kk0+zSD+xnFf5wcw
/WaX5/oiIO336iKYZlhudbgYSPNsdwPTsStcDD4B6R0WIWD6GNPHtcISbxxd
0rnXgejCT23+ckBa5g9DIIg+/GT7pEAgPWeOzmQQnWHMGLUCSB/RLQXT08rm
p4HoPzOXg+lfvU3NIDp889cWEK2lf6cDRO+5XtkJogFVvQSw
  "]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "plotEll"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotEll", "[", 
    RowBox[{"a_", ",", 
     RowBox[{"clr_:", 
      RowBox[{"(", 
       RowBox[{"\"\<ell\>\"", "/.", "ptClrs"}], ")"}]}]}], "]"}], ":=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"N", "[", "a", "]"}], " ", 
        RowBox[{"Cos", "[", "u", "]"}]}], ",", 
       RowBox[{"Sin", "[", "u", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0.0", ",", 
       RowBox[{"2.0", "\[Pi]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", "clr"}], ",", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotEllFill", "[", 
    RowBox[{"a_", ",", "clrFill_", ",", 
     RowBox[{"clr_:", 
      RowBox[{"(", 
       RowBox[{"\"\<ell\>\"", "/.", "ptClrs"}], ")"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"int", ",", "ext"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"int", "=", 
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"r", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"N", "[", "a", "]"}], " ", 
             RowBox[{"Cos", "[", "u", "]"}]}], ",", 
            RowBox[{"Sin", "[", "u", "]"}]}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "0.0", ",", 
           RowBox[{"2.0", "\[Pi]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", "clrFill"}], ",", 
         RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"ext", "=", 
       RowBox[{"plotEll", "[", 
        RowBox[{"a", ",", "clr"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"{", 
        RowBox[{"int", ",", "ext"}], "}"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotEllb", "[", 
    RowBox[{"a_", ",", "b_", ",", 
     RowBox[{"clr_:", 
      RowBox[{"(", 
       RowBox[{"\"\<ell\>\"", "/.", "ptClrs"}], ")"}]}]}], "]"}], ":=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"N", "[", "a", "]"}], " ", 
        RowBox[{"Cos", "[", "u", "]"}]}], ",", 
       RowBox[{
        RowBox[{"N", "[", "b", "]"}], 
        RowBox[{"Sin", "[", "u", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0.0", ",", 
       RowBox[{"2.0", "\[Pi]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", "clr"}], ",", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.765805438346921*^9, 3.765805452178815*^9}, {
   3.7659239734825225`*^9, 3.7659239900008445`*^9}, {3.7659695346167374`*^9, 
   3.765969564159203*^9}, 3.766131157133317*^9, {3.7667405762590165`*^9, 
   3.766740627875462*^9}, {3.770388869766939*^9, 3.7703888844961033`*^9}, {
   3.7703962341463394`*^9, 3.770396244864339*^9}, {3.7703963233138685`*^9, 
   3.770396347585602*^9}, {3.7703963866421824`*^9, 3.770396493667681*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"drawArrow", "[", 
    RowBox[{"p0_", ",", "phat_", ",", "l_"}], "]"}], ":=", 
   RowBox[{"Arrow", "[", 
    RowBox[{"{", 
     RowBox[{"p0", ",", 
      RowBox[{"ray", "[", 
       RowBox[{"p0", ",", "phat", ",", "l"}], "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "drawOrbit"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawOrbit", "[", 
    RowBox[{"orbitData_", ",", 
     RowBox[{"lgt_:", ".25"}], ",", 
     RowBox[{"drawNormals_:", "True"}], ",", 
     RowBox[{"psize_:", "16"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"normals", ",", "orbit", ",", "halfAlpha"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"orbit", "=", 
       RowBox[{"\"\<orbit\>\"", "/.", "orbitData"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"normals", "=", 
       RowBox[{"\"\<normals\>\"", "/.", "orbitData"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"halfAlpha", "=", 
       RowBox[{"\"\<halfAlpha\>\"", "/.", "orbitData"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"PointSize", "[", "Large", "]"}], ",", 
         RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"Point", "@", "orbit"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"FaceForm", "[", 
            RowBox[{"GrayLevel", "[", ".95", "]"}], "]"}], ",", 
           RowBox[{"EdgeForm", "[", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Black"}], "}"}], "]"}], ",", 
           RowBox[{"Polygon", "@", "orbit"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"drawNormals", ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "\[IndentingNewLine]", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"drawArrow", "[", 
                 RowBox[{"#1", ",", "#2", ",", "lgt"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"orbit", ",", "normals"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", "Dashed", ",", "\[IndentingNewLine]", 
             RowBox[{"drawArrow", "[", 
              RowBox[{
               RowBox[{"orbit", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"\"\<nRot\>\"", "/.", "orbitData"}], ",", "lgt"}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"drawArrow", "[", 
              RowBox[{
               RowBox[{"orbit", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"\"\<nRotNeg\>\"", "/.", "orbitData"}], ",", "lgt"}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{"\"\<\[Alpha]\>\"", ",", 
               RowBox[{"ray", "[", 
                RowBox[{
                 RowBox[{"orbit", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "halfAlpha", " ", ",", 
                 RowBox[{"lgt", "*", ".33"}]}], "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"txtSubscript", "[", 
             RowBox[{"\"\<P\>\"", ",", 
              RowBox[{"ToString", "@", "#1"}], ",", "psize", ",", 
              RowBox[{"ray", "[", 
               RowBox[{"#2", ",", 
                RowBox[{"-", "#3"}], ",", 
                RowBox[{"lgt", "*", ".33"}]}], "]"}]}], "]"}], "&"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "orbit", ",", 
             "normals"}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdxVsoQ2EAB/C5DEVYcmkPbrlNTZNR9uRIW2puUwhFQ3FelkzJ/X4rKVHb
C62mpIwxZ2jyMOUuaUWSxCj1eRoaVnz/8/Drl6TVaVr8BQJBIoVzGqt6WsMJ
c9l5PYHltboZrDq08S/4lhaw7VfP4WGuKZ2lz3HL/KavfdEI/dPhysc/pxYl
VoRFlOJ+f70Z+ypl29jyGO3AsiByhZPjyC1WJ9a7sT1ne3KUnrL2ZcTZw0OL
2HW2vIq1SasbOOu83Yo7TA47XlG3ObHNyL5hRcb6B1aFGKY26c+zqdO4TTZR
s0XffDDwN0vv/N7p8SavELNVWdn4afxPicvLnBV4ZOZbg4WSGDPOdfSu4UU/
ziOJIIzhwP2B51lfYyZ9Zz6/BQutol0sfg7ew/oCMVNDV9tFhbj4O02JA6ca
VPiGS36ZpO9dWD24zuMq6oskTJ5bU4xHTdJBWRRhpuVKfrN7wPkZQ5gEi5H/
ldUd4WNpwAnWlsi7vLGECU2o5vdK8+6j4ggz1tn9iP8BiDH0iA==
  "]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "drawOneNotable"}], ";", 
  RowBox[{
   RowBox[{"drawOneNotable", "[", 
    RowBox[{"clr_", ",", "at_", ",", "txt_", ",", 
     RowBox[{"dx_:", "1.5"}], ",", 
     RowBox[{"dy_:", "0"}], ",", 
     RowBox[{"fntSize_:", "12"}]}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"clr", ",", 
     RowBox[{"Point", "@", "at"}], ",", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"txt", ",", "fntSize"}], "]"}], ",", "at", ",", 
       RowBox[{"{", 
        RowBox[{"dx", ",", "dy"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"circOneNotable", "[", 
    RowBox[{"clr_", ",", "at_", ",", "rad_", ",", "txt_", ",", 
     RowBox[{"dx_:", "1.5"}], ",", 
     RowBox[{"dy_:", "0"}], ",", 
     RowBox[{"fntSize_:", "12"}]}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"clr", ",", 
     RowBox[{"Circle", "[", 
      RowBox[{"at", ",", "rad"}], "]"}], ",", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"txt", ",", "fntSize"}], "]"}], ",", "at", ",", 
       RowBox[{"{", 
        RowBox[{"dx", ",", "dy"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "drawNotableLines"}], ";", 
  RowBox[{
   RowBox[{"drawNotableLines", "[", "notables_", "]"}], ":=", 
   RowBox[{"Graphics", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Darker", "[", "Gray", "]"}], ",", "Dashed", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"euler", " ", 
         RowBox[{"line", ":", " ", "cir"}]}], ",", "bar", ",", "npc", ",", 
        "ort"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<cir\>\"", ",", "\"\<ort\>\""}], "}"}], "/.", 
        "notables"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"npc", " ", "to", " ", 
         RowBox[{"feuerbach", ":", " ", "npc"}]}], ",", "inc", ",", "feu"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<npc\>\"", ",", "\"\<feu\>\""}], "}"}], "/.", 
        "notables"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"mittenpunkt", " ", "to", " ", 
         RowBox[{"symmedian", ":", " ", "mit"}]}], ",", "inc", ",", "sym"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<mit\>\"", ",", "\"\<sym\>\""}], "}"}], "/.", 
        "notables"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"gergonne", " ", "to", " ", 
         RowBox[{"mit", ":", " ", "ger"}]}], ",", "bar", ",", "mit"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<mit\>\"", ",", "\"\<ger\>\""}], "}"}], "/.", 
        "notables"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"nagel", " ", 
         RowBox[{"line", ":", " ", "nag"}]}], ",", "bar", ",", "spi", ",", 
        "inc"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<nag\>\"", ",", "\"\<inc\>\""}], "}"}], "/.", 
        "notables"}], "]"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "drawNotables"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawNotables", "[", 
    RowBox[{"notables_", ",", 
     RowBox[{"prefix_:", "\"\<\>\""}]}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"drawOneNotable", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "/.", "ptClrs"}], ")"}], ",", 
          RowBox[{"(", 
           RowBox[{"#", "/.", "notables"}], ")"}], ",", 
          RowBox[{"prefix", "<>", "#"}]}], "]"}], "&"}], "/@", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<inc\>\"", ",", "\"\<bar\>\"", ",", "\"\<ort\>\"", ",", 
         "\"\<cir\>\"", ",", "\"\<npc\>\"", ",", "\"\<feu\>\"", ",", 
         "\"\<ex12\>\"", ",", "\"\<ex23\>\"", ",", "\"\<ex31\>\"", ",", 
         "\"\<sym\>\"", ",", "\"\<mit\>\"", ",", "\"\<ger\>\"", ",", 
         "\"\<nag\>\"", ",", "\"\<spi\>\"", ",", "\"\<antifeu\>\"", ",", 
         "\"\<x88\>\""}], "}"}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawNotablesSingleClr", "[", 
    RowBox[{"notables_", ",", "clr_", ",", 
     RowBox[{"prefix_:", "\"\<\>\""}]}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"drawOneNotable", "[", 
         RowBox[{"clr", ",", 
          RowBox[{"(", 
           RowBox[{"#", "/.", "notables"}], ")"}], ",", 
          RowBox[{"prefix", "<>", "#"}]}], "]"}], "&"}], "/@", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<inc\>\"", ",", "\"\<bar\>\"", ",", "\"\<ort\>\"", ",", 
         "\"\<cir\>\"", ",", "\"\<npc\>\"", ",", "\"\<feu\>\"", ",", 
         "\"\<ex12\>\"", ",", "\"\<ex23\>\"", ",", "\"\<ex31\>\"", ",", 
         "\"\<sym\>\"", ",", "\"\<mit\>\"", ",", "\"\<ger\>\"", ",", 
         "\"\<nag\>\"", ",", "\"\<spi\>\"", ",", "\"\<antifeu\>\"", ",", 
         "\"\<x88\>\""}], "}"}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "circNotables"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"circNotables", "[", 
    RowBox[{"notables_", ",", "rad_", ",", 
     RowBox[{"prefix_:", "\"\<\>\""}]}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"circOneNotable", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "/.", "ptClrs"}], ")"}], ",", 
          RowBox[{"(", 
           RowBox[{"#", "/.", "notables"}], ")"}], ",", "rad", ",", 
          RowBox[{"prefix", "<>", "#"}]}], "]"}], "&"}], "/@", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<inc\>\"", ",", "\"\<bar\>\"", ",", "\"\<ort\>\"", ",", 
         "\"\<cir\>\"", ",", "\"\<npc\>\"", ",", "\"\<feu\>\"", ",", 
         "\"\<ex12\>\"", ",", "\"\<ex23\>\"", ",", "\"\<ex31\>\"", ",", 
         "\"\<sym\>\"", ",", "\"\<mit\>\"", ",", "\"\<ger\>\"", ",", 
         "\"\<nag\>\"", ",", "\"\<spi\>\"", ",", "\"\<antifeu\>\"", ",", 
         "\"\<x88\>\""}], "}"}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "circNotablesSingleClr"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"circNotablesSingleClr", "[", 
    RowBox[{"notables_", ",", "rad_", ",", "clr_", ",", 
     RowBox[{"prefix_:", "\"\<\>\""}]}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"circOneNotable", "[", 
         RowBox[{"clr", ",", 
          RowBox[{"(", 
           RowBox[{"#", "/.", "notables"}], ")"}], ",", "rad", ",", 
          RowBox[{"prefix", "<>", "#"}]}], "]"}], "&"}], "/@", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<inc\>\"", ",", "\"\<bar\>\"", ",", "\"\<ort\>\"", ",", 
         "\"\<cir\>\"", ",", "\"\<npc\>\"", ",", "\"\<feu\>\"", ",", 
         "\"\<ex12\>\"", ",", "\"\<ex23\>\"", ",", "\"\<ex31\>\"", ",", 
         "\"\<sym\>\"", ",", "\"\<mit\>\"", ",", "\"\<ger\>\"", ",", 
         "\"\<nag\>\"", ",", "\"\<spi\>\"", ",", "\"\<antifeu\>\"", ",", 
         "\"\<x88\>\""}], "}"}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "drawSomeNotables"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawSomeNotables", "[", 
    RowBox[{"notables_", ",", "nots_", ",", 
     RowBox[{"prefix_:", "\"\<\>\""}]}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"drawOneNotable", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "/.", "ptClrs"}], ")"}], ",", 
          RowBox[{"(", 
           RowBox[{"#", "/.", "notables"}], ")"}], ",", 
          RowBox[{"prefix", "<>", "#"}]}], "]"}], "&"}], "/@", "nots"}]}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "drawBasicNotables"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawBasicNotables", "[", 
    RowBox[{"notables_", ",", 
     RowBox[{"prefix_:", "\"\<\>\""}]}], "]"}], ":=", 
   RowBox[{"drawSomeNotables", "[", 
    RowBox[{"notables", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<inc\>\"", ",", "\"\<bar\>\"", ",", "\"\<ort\>\"", ",", 
       "\"\<cir\>\"", ",", "\"\<npc\>\"", ",", "\"\<mit\>\"", ",", 
       "\"\<feu\>\"", ",", "\"\<ger\>\""}], "}"}], ",", "prefix"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "drawBasicNotablesSingleClr"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawBasicNotablesSingleClr", "[", 
    RowBox[{"notables_", ",", "clr_", ",", 
     RowBox[{"prefix_:", "\"\<\>\""}]}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"drawOneNotable", "[", 
         RowBox[{"clr", ",", 
          RowBox[{"(", 
           RowBox[{"#", "/.", "notables"}], ")"}], ",", 
          RowBox[{"prefix", "<>", "#"}]}], "]"}], "&"}], "/@", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<inc\>\"", ",", "\"\<bar\>\"", ",", "\"\<ort\>\"", ",", 
         "\"\<cir\>\"", ",", "\"\<npc\>\"", ",", "\"\<mit\>\"", ",", 
         "\"\<feu\>\""}], "}"}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "circBasicNotables"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"circBasicNotables", "[", 
    RowBox[{"notables_", ",", "rad_", ",", 
     RowBox[{"prefix_:", "\"\<\>\""}]}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"circOneNotable", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "/.", "ptClrs"}], ")"}], ",", 
          RowBox[{"(", 
           RowBox[{"#", "/.", "notables"}], ")"}], ",", "rad", ",", 
          RowBox[{"prefix", "<>", "#"}]}], "]"}], "&"}], "/@", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<inc\>\"", ",", "\"\<bar\>\"", ",", "\"\<ort\>\"", ",", 
         "\"\<cir\>\"", ",", "\"\<npc\>\"", ",", "\"\<mit\>\"", ",", 
         "\"\<feu\>\""}], "}"}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "circBasicNotablesSingleClr"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"circBasicNotablesSingleClr", "[", 
    RowBox[{"notables_", ",", "rad_", ",", "clr_", ",", 
     RowBox[{"prefix_:", "\"\<\>\""}]}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"circOneNotable", "[", 
         RowBox[{"clr", ",", 
          RowBox[{"(", 
           RowBox[{"#", "/.", "notables"}], ")"}], ",", "rad", ",", 
          RowBox[{"prefix", "<>", "#"}]}], "]"}], "&"}], "/@", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<inc\>\"", ",", "\"\<bar\>\"", ",", "\"\<ort\>\"", ",", 
         "\"\<cir\>\"", ",", "\"\<npc\>\"", ",", "\"\<mit\>\"", ",", 
         "\"\<feu\>\""}], "}"}]}]}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7660466511030107`*^9, 3.7660466643905106`*^9}, {
   3.766046965358555*^9, 3.7660469819662776`*^9}, {3.76604702723989*^9, 
   3.766047135246889*^9}, {3.7660471670748496`*^9, 3.7660472199100323`*^9}, {
   3.766049229292245*^9, 3.766049259502195*^9}, {3.7660899937274494`*^9, 
   3.766090001241497*^9}, {3.766131162999633*^9, 3.766131195334711*^9}, {
   3.7662536804385314`*^9, 3.766253687119647*^9}, {3.7663942734926467`*^9, 
   3.7663942759790277`*^9}, {3.766394316371236*^9, 3.7663943203319407`*^9}, {
   3.7663948669102106`*^9, 3.7663949229399796`*^9}, {3.7663950044041433`*^9, 
   3.7663950099014177`*^9}, {3.7663961568452177`*^9, 3.766396207685244*^9}, {
   3.7663965244444695`*^9, 3.7663965258123465`*^9}, {3.7663967044940186`*^9, 
   3.766396727085676*^9}, {3.766396771503598*^9, 3.766396776533134*^9}, {
   3.7663968086074038`*^9, 3.766396809509963*^9}, {3.766396845581522*^9, 
   3.7663969125101423`*^9}, {3.7663969454710026`*^9, 3.766396953949351*^9}, {
   3.7663976862388515`*^9, 3.7663977010772395`*^9}, {3.7663999430293384`*^9, 
   3.766399965005109*^9}, {3.766401439967109*^9, 3.7664014410462327`*^9}, {
   3.766432486597267*^9, 3.766432602574684*^9}, {3.766432656581292*^9, 
   3.766432716925228*^9}, {3.766432849580037*^9, 3.7664328497495813`*^9}, {
   3.7664328947632313`*^9, 3.7664329457795024`*^9}, {3.7664330221897287`*^9, 
   3.766433032666749*^9}, 3.7664330831637774`*^9, {3.7664352213713293`*^9, 
   3.7664352441015573`*^9}, {3.766435276963685*^9, 3.7664352778027916`*^9}, {
   3.766435348035322*^9, 3.7664353496031294`*^9}, {3.76643557616568*^9, 
   3.766435577349514*^9}, {3.766435710158119*^9, 3.7664357181337953`*^9}, {
   3.7666192708777676`*^9, 3.766619272757739*^9}, {3.7672657344732466`*^9, 
   3.767265736793042*^9}, {3.7672842932712235`*^9, 3.7672843124389505`*^9}, {
   3.7673471264517107`*^9, 3.7673471425392857`*^9}, {3.767347984045664*^9, 
   3.76734806361126*^9}, {3.767349898946748*^9, 3.7673499337923727`*^9}, {
   3.767352324951561*^9, 3.767352432858961*^9}, {3.767911737579075*^9, 
   3.7679117943941083`*^9}, {3.770633571283404*^9, 3.7706335732661047`*^9}}],

Cell["Formatting", "Text",
 CellChangeTimes->{{3.765707295618081*^9, 3.7657073038969336`*^9}, {
  3.7663965281221952`*^9, 3.766396528913083*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nfn", "[", 
    RowBox[{"v_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"ToString", "@", 
    RowBox[{"NumberForm", "[", 
     RowBox[{"v", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "+", "2"}], ",", "n"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nf", "[", "v_", "]"}], ":=", 
   RowBox[{"ToString", "@", 
    RowBox[{"NumberForm", "[", 
     RowBox[{"v", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nf1", "[", "v_", "]"}], ":=", 
   RowBox[{"ToString", "@", 
    RowBox[{"NumberForm", "[", 
     RowBox[{"v", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nf0", "[", "v_", "]"}], ":=", 
   RowBox[{"ToString", "@", 
    RowBox[{"IntegerPart", "[", "v", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7657066533601804`*^9, 3.765706668193533*^9}, {
  3.7657072593854237`*^9, 3.765707314802787*^9}, {3.7675226251178913`*^9, 
  3.7675226433675165`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Draw Orbits: Parametrize by ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]]]
}], "Section",
 CellChangeTimes->{{3.768171900281029*^9, 3.768171931991502*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "drawSim"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "drawSim"}], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Options", "@", "getOrbitData"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"drNotables", "\[Rule]", "True"}], ",", 
       RowBox[{"drLines", "\[Rule]", "False"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawSim", "[", 
    RowBox[{"a_", ",", "x_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ellPlot", ",", "orbitData", ",", "orbit", ",", "normals", ",", 
       "notables", ",", 
       RowBox[{"lgt", "=", ".5"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ellPlot", "=", 
       RowBox[{"plotEll", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"orbitData", "=", 
       RowBox[{"getOrbitData", "[", 
        RowBox[{
         RowBox[{"N", "[", "a", "]"}], ",", 
         RowBox[{"N", "[", "x", "]"}], ",", " ", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"{", "opts", "}"}], ",", " ", 
           RowBox[{"Options", "@", "getOrbitData"}]}], "]"}]}], "]"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{"N", " ", "for", " ", "speed"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"half", "-", 
        RowBox[{
        "angle", " ", "to", " ", "display", " ", "\[Alpha]", " ", "at", " ", 
         "bisector"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"orbit", "=", 
       RowBox[{"\"\<orbit\>\"", "/.", "orbitData"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"normals", "=", 
       RowBox[{"\"\<normals\>\"", "/.", "orbitData"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"notables", "=", 
       RowBox[{"getNotables", "[", 
        RowBox[{"orbit", ",", "normals"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"ellPlot", ",", "\[IndentingNewLine]", 
          RowBox[{"drawOrbit", "[", 
           RowBox[{"orbitData", ",", "lgt"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drNotables"}], ",", 
            RowBox[{"drawNotables", "[", "notables", "]"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drLines"}], ",", 
            RowBox[{"drawNotableLines", "[", "notables", "]"}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\[IndentingNewLine]", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"AxesStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"RGBColor", "[", 
           RowBox[{".66", ",", ".66", ",", ".66"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"\"\<a=\>\"", "<>", 
            RowBox[{"nf", "@", "a"}], "<>", "\"\<; x=\>\"", "<>", 
            RowBox[{"nf", "@", "x"}]}], ",", "20"}], "]"}]}]}], "]"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.76561459974695*^9, 3.765614634292744*^9}, {
   3.76561472204417*^9, 3.76561473491676*^9}, {3.7656147691167526`*^9, 
   3.765614794797052*^9}, {3.7656148337069387`*^9, 3.7656149875247707`*^9}, {
   3.765615019108938*^9, 3.7656150328358374`*^9}, {3.7656151024279957`*^9, 
   3.765615132476234*^9}, {3.7656152749717417`*^9, 3.765615374460077*^9}, {
   3.765615412108683*^9, 3.765615470836111*^9}, {3.7656155056270375`*^9, 
   3.765615527867008*^9}, 3.765616757435798*^9, {3.7656174092496057`*^9, 
   3.7656179068424406`*^9}, {3.765617953941513*^9, 3.765618081594664*^9}, {
   3.765618131828472*^9, 3.7656181806986313`*^9}, {3.7656182248445663`*^9, 
   3.765618257691923*^9}, {3.765618319901534*^9, 3.76561838646643*^9}, {
   3.7656184679067955`*^9, 3.765618521473173*^9}, {3.765618958139315*^9, 
   3.765619001450119*^9}, {3.7656190564910655`*^9, 3.7656190906654873`*^9}, {
   3.7656191647832136`*^9, 3.7656191772002597`*^9}, {3.765619238923955*^9, 
   3.765619268425161*^9}, {3.7656193015216246`*^9, 3.765619333591451*^9}, {
   3.7656193655230274`*^9, 3.765619435641471*^9}, {3.7656194659205303`*^9, 
   3.765619522993734*^9}, {3.765619568475039*^9, 3.76561957664219*^9}, {
   3.7656205955830193`*^9, 3.765620599925432*^9}, {3.7656208509598417`*^9, 
   3.7656208690489635`*^9}, {3.76562094074438*^9, 3.7656209452003794`*^9}, {
   3.7656210634781094`*^9, 3.7656210865643787`*^9}, {3.765638771566981*^9, 
   3.7656388227581916`*^9}, {3.7656388803607626`*^9, 
   3.7656390607297077`*^9}, {3.765639113239381*^9, 3.765639134143549*^9}, {
   3.765639327990558*^9, 3.765639328222938*^9}, {3.76563936747998*^9, 
   3.7656393685930023`*^9}, {3.76563943755971*^9, 3.7656394457843704`*^9}, {
   3.765639524615861*^9, 3.765639528871448*^9}, {3.7656395596242857`*^9, 
   3.765639578830914*^9}, {3.765639629823112*^9, 3.7656396900548487`*^9}, {
   3.7656411304119606`*^9, 3.765641191383846*^9}, {3.7656412224208503`*^9, 
   3.7656412885888124`*^9}, {3.765641320542889*^9, 3.7656413423646727`*^9}, {
   3.765642172492194*^9, 3.7656422341476917`*^9}, {3.765642266786456*^9, 
   3.7656422795964985`*^9}, {3.7656423780836835`*^9, 3.765642466372679*^9}, {
   3.7656425213547688`*^9, 3.765642528074793*^9}, {3.7656425739779963`*^9, 
   3.7656426223624263`*^9}, {3.7656433175775676`*^9, 
   3.7656433310665927`*^9}, {3.765643374882233*^9, 3.765643531714513*^9}, {
   3.765643634582771*^9, 3.765643704787181*^9}, {3.7656437506096077`*^9, 
   3.7656437587384872`*^9}, {3.765643812591979*^9, 3.7656438592497826`*^9}, {
   3.7656439271860533`*^9, 3.7656439773990126`*^9}, {3.7656441070164576`*^9, 
   3.7656441327539597`*^9}, {3.765644422252539*^9, 3.765644692361556*^9}, {
   3.765644726098343*^9, 3.7656447574596367`*^9}, {3.7656448053215985`*^9, 
   3.7656448313141556`*^9}, {3.765644881349307*^9, 3.765644883796446*^9}, {
   3.765644936938984*^9, 3.765645200207754*^9}, {3.7656452551687546`*^9, 
   3.765645296423128*^9}, {3.7656453640079327`*^9, 3.765645366086502*^9}, {
   3.765645396535184*^9, 3.7656453973824444`*^9}, {3.7656454324118376`*^9, 
   3.765645439681391*^9}, {3.7656454900941467`*^9, 3.7656455489448743`*^9}, {
   3.7656455791576223`*^9, 3.765645626367361*^9}, {3.7656458024420977`*^9, 
   3.765645804384873*^9}, {3.765645838958844*^9, 3.7656458712568703`*^9}, {
   3.765645908168969*^9, 3.7656459095931587`*^9}, {3.765645942248064*^9, 
   3.7656459780170183`*^9}, {3.76564603257658*^9, 3.765646056058031*^9}, {
   3.7656461032915907`*^9, 3.7656461036157207`*^9}, {3.765646186359657*^9, 
   3.7656462139289894`*^9}, {3.7656462554005775`*^9, 3.765646289215159*^9}, {
   3.765646443508125*^9, 3.7656465501673455`*^9}, {3.7656465907679157`*^9, 
   3.7656468478395433`*^9}, {3.765647409567172*^9, 3.7656475716292915`*^9}, {
   3.7656476083620152`*^9, 3.7656476349417048`*^9}, {3.765647713669137*^9, 
   3.7656478286671543`*^9}, {3.7656478594749193`*^9, 
   3.7656479422551966`*^9}, {3.765647989386552*^9, 3.765648018269947*^9}, {
   3.7656480894422855`*^9, 3.765648101418254*^9}, {3.765648231252083*^9, 
   3.765648283423879*^9}, {3.7656483216733847`*^9, 3.765648397047083*^9}, {
   3.765648447529028*^9, 3.765648504241483*^9}, {3.765648673771487*^9, 
   3.765648684387725*^9}, {3.7656487441555667`*^9, 3.765648751461557*^9}, {
   3.7656488323459425`*^9, 3.765648893362425*^9}, {3.7656493995538387`*^9, 
   3.76564940198604*^9}, {3.765649850384921*^9, 3.765649852585123*^9}, {
   3.765649913347189*^9, 3.765649917725937*^9}, {3.765649973409976*^9, 
   3.7656499800904613`*^9}, {3.765650010314607*^9, 3.7656500626333876`*^9}, 
   3.765650470886302*^9, {3.7656505929408817`*^9, 3.765650598455063*^9}, {
   3.7656508837204866`*^9, 3.7656509685341682`*^9}, {3.765705210937769*^9, 
   3.765705246199504*^9}, {3.765705356593935*^9, 3.765705356871205*^9}, {
   3.7657061358874187`*^9, 3.7657061363332214`*^9}, {3.76570658260726*^9, 
   3.765706690190194*^9}, {3.7657087242760468`*^9, 3.7657088032645845`*^9}, 
   3.765802204582441*^9, {3.7659224730723085`*^9, 3.7659225164473333`*^9}, {
   3.765923205851227*^9, 3.765923236158163*^9}, {3.7659240350623913`*^9, 
   3.7659240452042646`*^9}, {3.766047569231161*^9, 3.7660476226296186`*^9}, {
   3.7660476635842714`*^9, 3.76604770051806*^9}, {3.766047832183709*^9, 
   3.766047833504102*^9}, {3.766047901478324*^9, 3.766047905526535*^9}, {
   3.7660479468862677`*^9, 3.766047950925459*^9}, {3.7660481278789115`*^9, 
   3.766048128053005*^9}, {3.76613121523904*^9, 3.7661312155995235`*^9}, {
   3.766394733100895*^9, 3.766394764404207*^9}, {3.7663967885262127`*^9, 
   3.7663967914367504`*^9}, {3.7663968236471653`*^9, 
   3.7663968356849813`*^9}, {3.7663968981735916`*^9, 
   3.7663968983890147`*^9}, {3.7664327770996475`*^9, 3.766432829573174*^9}, {
   3.7664328698378444`*^9, 3.766432879613706*^9}, {3.766432911492505*^9, 
   3.7664329141882987`*^9}, {3.766433049908793*^9, 3.766433099396413*^9}, 
   3.770724546363425*^9, {3.7707245934904785`*^9, 3.7707247037631774`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"drawSim", "[", 
    RowBox[{"a", ",", 
     RowBox[{"clamp", "[", 
      RowBox[{"x1", ",", "a"}], "]"}], ",", 
     RowBox[{"drLines", "\[Rule]", "drLines0"}], ",", 
     RowBox[{"posY", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"!", "negY"}], ")"}]}], ",", 
     RowBox[{"drNotables", "\[Rule]", "drNotables0"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "1.5", ",", "\"\<a/b\>\""}], "}"}], ",", "1.01", ",", 
     "3", ",", ".01", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1", ",", ".5", ",", "\"\<\!\(\*SubscriptBox[\(x\), \(1\)]\)\>\""}], 
      "}"}], ",", 
     RowBox[{"-", "2"}], ",", "2", ",", ".01", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "negY", ",", "False", ",", 
       "\"\<\!\(\*SubscriptBox[\(y\), \(1\)]\)<0\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drNotables0", ",", "True", ",", "\"\<show notables\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drLines0", ",", "False", ",", "\"\<show lines\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.765614736680018*^9, 3.7656147593877516`*^9}, {
   3.765614871659202*^9, 3.765614872386846*^9}, {3.7656180871048937`*^9, 
   3.765618105041131*^9}, {3.765619029494166*^9, 3.7656190337738094`*^9}, 
   3.7656191142613945`*^9, {3.7656489747824693`*^9, 3.7656489777415843`*^9}, {
   3.765649866981166*^9, 3.7656499227575097`*^9}, {3.765650052149435*^9, 
   3.7656500529413157`*^9}, {3.765650346045718*^9, 3.7656503511965833`*^9}, {
   3.765651403860223*^9, 3.7656514057399063`*^9}, {3.7659233060088787`*^9, 
   3.765923306122549*^9}, {3.7664327401700954`*^9, 3.7664327695647917`*^9}, {
   3.7664328191074142`*^9, 3.7664328250903893`*^9}, {3.766432968371685*^9, 
   3.7664329692263985`*^9}, {3.7670488372819023`*^9, 3.767048838432828*^9}, {
   3.7670488704332943`*^9, 3.7670488715303335`*^9}, {3.7670489429702835`*^9, 
   3.7670489710172057`*^9}, {3.7707243468258796`*^9, 3.770724391553056*^9}, {
   3.7707244549206767`*^9, 3.7707245317594824`*^9}, {3.770724659281766*^9, 
   3.770724732616041*^9}, {3.7707248032263365`*^9, 3.770724809368949*^9}, {
   3.7707248727375975`*^9, 3.770724895571561*^9}, {3.770724955792636*^9, 
   3.7707249966380367`*^9}, {3.7707250437550855`*^9, 
   3.7707250816210203`*^9}, {3.770725187266818*^9, 3.770725201443365*^9}, {
   3.770725258771149*^9, 3.770725300706073*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1.5, $CellContext`drLines0$$ = 
    False, $CellContext`drNotables0$$ = True, $CellContext`negY$$ = 
    False, $CellContext`x1$$ = 0.5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 1.5, "a/b"}, 1.01, 3, 0.01}, {{
       Hold[$CellContext`x1$$], 0.5, 
       "\!\(\*SubscriptBox[\(x\), \(1\)]\)"}, -2, 2, 0.01}, {{
       Hold[$CellContext`negY$$], False, 
       "\!\(\*SubscriptBox[\(y\), \(1\)]\)<0"}, {False, True}}, {{
       Hold[$CellContext`drNotables0$$], True, "show notables"}, {
      False, True}}, {{
       Hold[$CellContext`drLines0$$], False, "show lines"}, {False, True}}}, 
    Typeset`size$$ = {576., {169., 174.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`a$1646$$ = 0, $CellContext`x1$1647$$ = 
    0, $CellContext`negY$1648$$ = False, $CellContext`drNotables0$1649$$ = 
    False, $CellContext`drLines0$1650$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1.5, $CellContext`drLines0$$ = 
        False, $CellContext`drNotables0$$ = True, $CellContext`negY$$ = 
        False, $CellContext`x1$$ = 0.5}, "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$1646$$, 0], 
        Hold[$CellContext`x1$$, $CellContext`x1$1647$$, 0], 
        Hold[$CellContext`negY$$, $CellContext`negY$1648$$, False], 
        Hold[$CellContext`drNotables0$$, $CellContext`drNotables0$1649$$, 
         False], 
        Hold[$CellContext`drLines0$$, $CellContext`drLines0$1650$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`drawSim[$CellContext`a$$, 
        $CellContext`clamp[$CellContext`x1$$, $CellContext`a$$], \
$CellContext`drLines -> $CellContext`drLines0$$, $CellContext`posY -> 
        Not[$CellContext`negY$$], $CellContext`drNotables -> \
$CellContext`drNotables0$$], 
      "Specifications" :> {{{$CellContext`a$$, 1.5, "a/b"}, 1.01, 3, 0.01, 
         Appearance -> 
         "Labeled"}, {{$CellContext`x1$$, 0.5, 
          "\!\(\*SubscriptBox[\(x\), \(1\)]\)"}, -2, 2, 0.01, Appearance -> 
         "Labeled"}, {{$CellContext`negY$$, False, 
          "\!\(\*SubscriptBox[\(y\), \(1\)]\)<0"}, {
         False, True}}, {{$CellContext`drNotables0$$, True, 
          "show notables"}, {
         False, True}}, {{$CellContext`drLines0$$, False, "show lines"}, {
         False, True}}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{627., {258., 264.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`drawSim[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`opts, 
          OptionsPattern[]]] := 
       Module[{$CellContext`ellPlot, $CellContext`orbitData, \
$CellContext`orbit, $CellContext`normals, $CellContext`notables, \
$CellContext`lgt = 
          0.5}, $CellContext`ellPlot = $CellContext`plotEll[$CellContext`a]; \
$CellContext`orbitData = $CellContext`getOrbitData[
            N[$CellContext`a], 
            N[$CellContext`x], 
            FilterRules[{$CellContext`opts}, 
             Options[$CellContext`getOrbitData]]]; $CellContext`orbit = 
          ReplaceAll["orbit", $CellContext`orbitData]; $CellContext`normals = 
          ReplaceAll[
           "normals", $CellContext`orbitData]; $CellContext`notables = \
$CellContext`getNotables[$CellContext`orbit, $CellContext`normals]; 
         Show[{$CellContext`ellPlot, 
            $CellContext`drawOrbit[$CellContext`orbitData, $CellContext`lgt], 
            If[
             OptionValue[$CellContext`drNotables], 
             $CellContext`drawNotables[$CellContext`notables], {}], 
            If[
             OptionValue[$CellContext`drLines], 
             $CellContext`drawNotableLines[$CellContext`notables], {}]}, 
           ImageSize -> Large, AspectRatio -> Automatic, 
           PlotRange -> {{-2, 2}, {-1.1, 1.1}}, Frame -> True, AxesStyle -> 
           Directive[
             RGBColor[0.66, 0.66, 0.66]], PlotLabel -> Style[
             StringJoin["a=", 
              $CellContext`nf[$CellContext`a], "; x=", 
              $CellContext`nf[$CellContext`x]], 20]]], 
       Options[$CellContext`drawSim] = {$CellContext`posY -> 
         False, $CellContext`drNotables -> True, $CellContext`drLines -> 
         False}, $CellContext`plotEll[
         Pattern[$CellContext`a, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`clr, 
           Blank[]], 
          GrayLevel[0]]] := 
       ParametricPlot[{N[$CellContext`a] Cos[$CellContext`u], 
          Sin[$CellContext`u]}, {$CellContext`u, 0., 2. Pi}, 
         PlotStyle -> $CellContext`clr, PerformanceGoal -> 
         "Quality"], $CellContext`getOrbitData[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         OptionsPattern[]] := 
       Module[{$CellContext`y, $CellContext`o1, $CellContext`n1, \
$CellContext`ca, $CellContext`sa, $CellContext`sa2, $CellContext`ca2, \
$CellContext`halfAlpha, $CellContext`pos, $CellContext`neg}, $CellContext`y = \
-$CellContext`ellY[$CellContext`a, $CellContext`x]; If[
           
           OptionValue[$CellContext`posY], $CellContext`y = -$CellContext`y]; \
$CellContext`o1 = {$CellContext`x, $CellContext`y}; $CellContext`n1 = \
$CellContext`norm[
            $CellContext`ellGrad[$CellContext`a, $CellContext`x, \
$CellContext`y]]; $CellContext`ca = $CellContext`cosAlpha[$CellContext`a, \
$CellContext`x]; $CellContext`sa = 
          Sqrt[
           1 - $CellContext`ca^2]; $CellContext`pos = \
$CellContext`getReflData[$CellContext`a, $CellContext`o1, $CellContext`n1, \
$CellContext`sa, $CellContext`ca]; $CellContext`neg = \
$CellContext`getReflData[$CellContext`a, $CellContext`o1, $CellContext`n1, \
-$CellContext`sa, $CellContext`ca]; $CellContext`sa2 = 
          Sqrt[(1 - $CellContext`ca)/2]; $CellContext`ca2 = 
          Sqrt[(1 + $CellContext`ca)/
            2]; $CellContext`halfAlpha = $CellContext`rot[$CellContext`n1, \
$CellContext`sa2, $CellContext`ca2]; {
          "ca" -> $CellContext`ca, "sa" -> $CellContext`sa, 
           "halfAlpha" -> $CellContext`halfAlpha, "nRot" -> 
           ReplaceAll["nRot", $CellContext`pos], "interRefl" -> 
           ReplaceAll["interRefl", $CellContext`pos], 
           "orbit" -> {$CellContext`o1, 
             ReplaceAll["inter", $CellContext`pos], 
             ReplaceAll["nextInter", $CellContext`pos]}, 
           "normals" -> {$CellContext`n1, 
             ReplaceAll["interNorm", $CellContext`pos], 
             ReplaceAll["nextInterNorm", $CellContext`pos]}, "nRotNeg" -> 
           ReplaceAll["nRot", $CellContext`neg], "interReflNeg" -> 
           ReplaceAll["interRefl", $CellContext`neg], 
           "orbitNeg" -> {$CellContext`o1, 
             ReplaceAll["inter", $CellContext`neg], 
             ReplaceAll["nextInter", $CellContext`neg]}, 
           "normalsNeg" -> {$CellContext`n1, 
             ReplaceAll["interNorm", $CellContext`neg], 
             ReplaceAll["nextInterNorm", $CellContext`neg]}}], 
       Options[$CellContext`getOrbitData] = {$CellContext`posY -> 
         False}, $CellContext`ellY[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]]] := 
       Sqrt[1 - ($CellContext`x/$CellContext`a)^2], $CellContext`norm[
         Pattern[$CellContext`v, 
          
          Blank[]]] := $CellContext`v/$CellContext`magn[$CellContext`v], \
$CellContext`magn[
         Pattern[$CellContext`v, 
          Blank[]]] := Sqrt[
         $CellContext`magn2[$CellContext`v]], $CellContext`magn2[
         Pattern[$CellContext`v, 
          Blank[]]] := 
       Dot[$CellContext`v, $CellContext`v], $CellContext`ellGrad[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          
          Blank[]]] := -{$CellContext`x, $CellContext`y $CellContext`a^2}, \
$CellContext`cosAlpha[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]]] := 
       Module[{$CellContext`x2, $CellContext`a2, $CellContext`a4, \
$CellContext`c2, $CellContext`denom}, $CellContext`x2 = $CellContext`x^2; \
$CellContext`a2 = $CellContext`a^2; $CellContext`a4 = $CellContext`a2^2; \
$CellContext`c2 = $CellContext`a2 - 1; $CellContext`denom = $CellContext`c2 
           Sqrt[$CellContext`a4 - $CellContext`c2 $CellContext`x2]; \
$CellContext`a2 (
           Sqrt[-$CellContext`a2 - 1 + 
             2 Sqrt[$CellContext`a4 - $CellContext`c2]]/$CellContext`denom)], \
$CellContext`getReflData[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`normal, 
          Blank[]], 
         Pattern[$CellContext`sinAlpha, 
          Blank[]], 
         Pattern[$CellContext`cosAlpha, 
          Blank[]]] := 
       Module[{$CellContext`nRot, $CellContext`inter, $CellContext`interNorm, \
$CellContext`interRefl, $CellContext`nextInter, $CellContext`nextInterNorm}, \
$CellContext`nRot = $CellContext`rot[$CellContext`normal, \
$CellContext`sinAlpha, $CellContext`cosAlpha]; $CellContext`inter = Part[
            $CellContext`ellInterRay[$CellContext`a, $CellContext`p0, \
$CellContext`nRot], 2]; $CellContext`interNorm = $CellContext`norm[
            $CellContext`ellGrad[$CellContext`a, 
             Part[$CellContext`inter, 1], 
             
             Part[$CellContext`inter, 
              2]]]; $CellContext`interRefl = $CellContext`refl[
            $CellContext`norm[$CellContext`p0 - $CellContext`inter], \
$CellContext`interNorm]; $CellContext`nextInter = Part[
            $CellContext`ellInterRay[$CellContext`a, $CellContext`inter, \
$CellContext`interRefl], 2]; $CellContext`nextInterNorm = $CellContext`norm[
            $CellContext`ellGrad[$CellContext`a, 
             Part[$CellContext`nextInter, 1], 
             Part[$CellContext`nextInter, 2]]]; {
          "nRot" -> $CellContext`nRot, "inter" -> $CellContext`inter, 
           "interNorm" -> $CellContext`interNorm, 
           "interRefl" -> $CellContext`interRefl, 
           "nextInter" -> $CellContext`nextInter, 
           "nextInterNorm" -> $CellContext`nextInterNorm}], $CellContext`rot[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`st, 
          Blank[]], 
         Pattern[$CellContext`ct, 
          Blank[]]] := 
       Module[{$CellContext`m}, $CellContext`m = {{$CellContext`ct, \
-$CellContext`st}, {$CellContext`st, $CellContext`ct}}; 
         Dot[$CellContext`m, $CellContext`p]], $CellContext`rot[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := $CellContext`rot[$CellContext`p, 
         Sin[$CellContext`t], 
         Cos[$CellContext`t]], $CellContext`ellInterRay[
         Pattern[$CellContext`a, 
          Blank[]], {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, {
          Pattern[$CellContext`nx, 
           Blank[]], 
          Pattern[$CellContext`ny, 
           Blank[]]}] := 
       Module[{$CellContext`c2, $CellContext`c1, $CellContext`c0, \
$CellContext`ss}, $CellContext`c2 = $CellContext`nx^2 + $CellContext`a^2 \
$CellContext`ny^2; $CellContext`c1 = 
          2 ($CellContext`nx $CellContext`x + $CellContext`a^2 \
$CellContext`ny $CellContext`y); $CellContext`c0 = $CellContext`x^2 + \
$CellContext`a^2 (-1 + $CellContext`y^2); $CellContext`ss = \
$CellContext`quadRoots[$CellContext`c2, $CellContext`c1, $CellContext`c0]; If[
           ListQ[$CellContext`ss], 
           
           Map[$CellContext`ray[{$CellContext`x, $CellContext`y}, \
{$CellContext`nx, $CellContext`ny}, #]& , $CellContext`ss], {{$CellContext`x, \
$CellContext`y}, {$CellContext`x, $CellContext`y}}]], $CellContext`quadRoots[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]]] := 
       Module[{$CellContext`det = $CellContext`b^2 - 
           4 $CellContext`a $CellContext`c, $CellContext`sqrtDet}, 
         If[$CellContext`det < 0, Print[
            StringJoin["quadRoots fail: {a,b,c}=", 
             ToString[{$CellContext`a, $CellContext`b, $CellContext`c}]]]; 
          False, $CellContext`sqrtDet = 
           Sqrt[$CellContext`det]; {-$CellContext`b - $CellContext`sqrtDet, \
-$CellContext`b + $CellContext`sqrtDet}/(2 $CellContext`a)]], $CellContext`ray[
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`phat, 
          Blank[]], 
         Pattern[$CellContext`d, 
          
          Blank[]]] := $CellContext`p0 + $CellContext`phat $CellContext`d, \
$CellContext`refl[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := 
       2 Dot[$CellContext`v, $CellContext`n] \
($CellContext`n/$CellContext`magn2[$CellContext`n]) - $CellContext`v, \
$CellContext`getNotables[
         Pattern[$CellContext`orbit, 
          Blank[]], 
         Pattern[$CellContext`normals, 
          Blank[]]] := 
       Module[{$CellContext`inc, $CellContext`inradius, $CellContext`cir, \
$CellContext`circumradius, $CellContext`npc, $CellContext`exc, \
$CellContext`tps, $CellContext`ort, $CellContext`medians, \
$CellContext`npcradius, $CellContext`sides, $CellContext`bar, \
$CellContext`feu, $CellContext`antifeu, $CellContext`x88, \
$CellContext`perimeter}, $CellContext`inc = $CellContext`getIncenter[
            Part[$CellContext`orbit, 1], 
            Part[$CellContext`normals, 1], 
            Part[$CellContext`orbit, 2], 
            
            Part[$CellContext`normals, 
             2]]; $CellContext`inradius = \
$CellContext`inRadius0[$CellContext`inc, 
            Part[$CellContext`orbit, 1], 
            Part[$CellContext`orbit, 2]]; $CellContext`tps = 
          MapThread[$CellContext`closestPerp[$CellContext`inc, #, #2]& , \
{$CellContext`orbit, 
             RotateLeft[$CellContext`orbit]}]; $CellContext`medians = 
          Apply[$CellContext`getMedians, $CellContext`orbit]; \
$CellContext`cir = 
          Apply[$CellContext`getCircumcenter, $CellContext`orbit]; \
$CellContext`circumradius = $CellContext`circumRadius0[$CellContext`cir, 
            Part[$CellContext`orbit, 1]]; $CellContext`npc = 
          Apply[$CellContext`getNinepointcenter, $CellContext`orbit]; \
$CellContext`npcradius = $CellContext`magn[$CellContext`npc - 
            Part[$CellContext`medians, 
             1]]; $CellContext`exc = \
$CellContext`getExcenters[$CellContext`orbit, $CellContext`normals]; \
$CellContext`sides = RotateLeft[
            $CellContext`triLengths[$CellContext`orbit]]; $CellContext`feu = \
$CellContext`getFeuerbachpoint[$CellContext`npc, $CellContext`inc, \
$CellContext`inradius]; $CellContext`bar = 
          Apply[$CellContext`getBaricenter, $CellContext`orbit]; \
$CellContext`antifeu = $CellContext`getAntiComplement[$CellContext`feu, \
$CellContext`bar]; $CellContext`x88 = \
$CellContext`getX88Trilin[$CellContext`orbit, $CellContext`sides]; \
$CellContext`ort = 
          Apply[$CellContext`getOrthocenter, $CellContext`orbit]; \
$CellContext`perimeter = Total[$CellContext`sides]; {
          "inc" -> $CellContext`inc, "bar" -> $CellContext`bar, 
           "ort" -> $CellContext`ort, "cir" -> $CellContext`cir, 
           "npc" -> $CellContext`npc, "exc" -> $CellContext`exc, "ex12" -> 
           Part[$CellContext`exc, 1], "ex23" -> Part[$CellContext`exc, 2], 
           "ex31" -> Part[$CellContext`exc, 3], "feu" -> $CellContext`feu, 
           "antifeu" -> $CellContext`antifeu, "x88" -> $CellContext`x88, 
           "mit" -> $CellContext`getMittenTrilin[$CellContext`orbit, \
$CellContext`sides], 
           "sym" -> $CellContext`getSimmedianTrilin[$CellContext`orbit, \
$CellContext`sides], 
           "ger" -> $CellContext`getGergonneTrilin[$CellContext`orbit, \
$CellContext`sides], 
           "nag" -> $CellContext`getNagelTrilin[$CellContext`orbit, \
$CellContext`sides], 
           "spi" -> $CellContext`getSpiekerTrilin[$CellContext`orbit, \
$CellContext`sides], "incRadius" -> $CellContext`inradius, 
           "tps" -> $CellContext`tps, "medians" -> $CellContext`medians, 
           "cirRadius" -> $CellContext`circumradius, 
           "npcRadius" -> $CellContext`npcradius, 
           "sides" -> $CellContext`sides, 
           "perimeter" -> $CellContext`perimeter, 
           "area" -> $CellContext`triAreaHeron[$CellContext`sides]}], \
$CellContext`getIncenter[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`n2, 
          
          Blank[]]] := $CellContext`interRays[$CellContext`p1, \
$CellContext`n1, $CellContext`p2, $CellContext`n2], $CellContext`interRays[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`n2, 
          Blank[]]] := 
       Module[{$CellContext`m, $CellContext`b, $CellContext`sols}, \
$CellContext`m = Transpose[{$CellContext`n1, $CellContext`n2}]; If[
           $CellContext`negl[
            
            Det[$CellContext`m]], $CellContext`p1, $CellContext`b = \
$CellContext`p2 - $CellContext`p1; $CellContext`sols = 
            LinearSolve[$CellContext`m, $CellContext`b]; \
$CellContext`ray[$CellContext`p1, $CellContext`n1, 
             Part[$CellContext`sols, 1]]]], $CellContext`negl[
         Pattern[$CellContext`v, 
          Blank[]]] := Abs[$CellContext`v] < 10^(-9), $CellContext`inRadius0[
         Pattern[$CellContext`incenter, 
          Blank[]], 
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]]] := 
       Module[{$CellContext`ctr, $CellContext`foot}, $CellContext`foot = \
$CellContext`closestPerp[$CellContext`incenter, $CellContext`p1, \
$CellContext`p2]; $CellContext`magn[$CellContext`incenter - \
$CellContext`foot]], $CellContext`closestPerp[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`l1, 
          Blank[]], 
         Pattern[$CellContext`l2, 
          Blank[]]] := 
       Module[{$CellContext`dl = $CellContext`l2 - $CellContext`l1, \
$CellContext`s}, $CellContext`s = 
          Dot[$CellContext`p - $CellContext`l1, $CellContext`dl]/
           Dot[$CellContext`dl, $CellContext`dl]; \
$CellContext`ray[$CellContext`l1, $CellContext`dl, $CellContext`s]], \
$CellContext`getMedians[
         Pattern[$CellContext`t1, 
          Blank[]], 
         Pattern[$CellContext`t2, 
          Blank[]], 
         Pattern[$CellContext`t3, 
          
          Blank[]]] := {$CellContext`t2 + $CellContext`t3, $CellContext`t1 + \
$CellContext`t3, $CellContext`t1 + $CellContext`t2}/
        2, $CellContext`getCircumcenter[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`p3, 
          Blank[]]] := 
       Module[{$CellContext`medians, $CellContext`medianPerps}, \
$CellContext`medians = $CellContext`getMedians[$CellContext`p1, \
$CellContext`p2, $CellContext`p3]; $CellContext`medianPerps = {
           Part[$CellContext`medians, 1] + $CellContext`norm[
              $CellContext`perp[$CellContext`p2 - $CellContext`p3]], 
            Part[$CellContext`medians, 2] + $CellContext`norm[
              $CellContext`perp[$CellContext`p3 - $CellContext`p1]], 
            Part[$CellContext`medians, 3] + $CellContext`norm[
              $CellContext`perp[$CellContext`p1 - $CellContext`p2]]}; \
$CellContext`interRays[
           Part[$CellContext`medians, 1], 
           $CellContext`perp[$CellContext`p2 - $CellContext`p3], 
           Part[$CellContext`medians, 2], 
           $CellContext`perp[$CellContext`p1 - $CellContext`p3]]], \
$CellContext`perp[{
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           
           Blank[]]}] := {-$CellContext`y, $CellContext`x}, \
$CellContext`circumRadius0[
         Pattern[$CellContext`circumcenter, 
          Blank[]], 
         Pattern[$CellContext`p1, 
          
          Blank[]]] := $CellContext`magn[$CellContext`circumcenter - \
$CellContext`p1], $CellContext`getNinepointcenter[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`p3, 
          Blank[]]] := 
       Module[{$CellContext`medians}, $CellContext`medians = \
$CellContext`getMedians[$CellContext`p1, $CellContext`p2, $CellContext`p3]; 
         Apply[$CellContext`getCircumcenter, $CellContext`medians]], \
$CellContext`getExcenters[
         Pattern[$CellContext`orbit, 
          Blank[]], 
         Pattern[$CellContext`normals, 
          Blank[]]] := 
       Module[{$CellContext`perps, $CellContext`perpsNeg, $CellContext`exc}, \
$CellContext`perps = 
          Map[$CellContext`perp, $CellContext`normals]; $CellContext`perpsNeg = 
          Map[$CellContext`perpNeg, $CellContext`normals]; $CellContext`exc = 
          MapThread[$CellContext`interRays[#, #2, #3, #4]& , \
{$CellContext`orbit, $CellContext`perps, 
             RotateLeft[$CellContext`orbit], 
             
             RotateLeft[$CellContext`perpsNeg]}]; $CellContext`exc], \
$CellContext`perpNeg[{
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           
           Blank[]]}] := {$CellContext`y, -$CellContext`x}, \
$CellContext`triLengths[
         Pattern[$CellContext`vs, 
          Blank[]]] := Map[$CellContext`magn, 
         $CellContext`triSides[$CellContext`vs]], $CellContext`triSides[
         Pattern[$CellContext`vs, 
          Blank[]]] := MapThread[# - #2& , {$CellContext`vs, 
          RotateLeft[$CellContext`vs]}], $CellContext`getFeuerbachpoint[
         Pattern[$CellContext`npc, 
          Blank[]], 
         Pattern[$CellContext`incenter, 
          Blank[]], 
         Pattern[$CellContext`inradius, 
          Blank[]]] := Module[{$CellContext`inter}, 
         $CellContext`ray[$CellContext`incenter, 
          $CellContext`norm[$CellContext`incenter - $CellContext`npc], \
$CellContext`inradius]], $CellContext`getBaricenter[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`p3, 
          Blank[]]] := 
       Module[{$CellContext`medians}, $CellContext`medians = \
$CellContext`getMedians[$CellContext`p1, $CellContext`p2, $CellContext`p3]; \
$CellContext`interRays[$CellContext`p1, 
           Part[$CellContext`medians, 1] - $CellContext`p1, $CellContext`p2, 
           Part[$CellContext`medians, 
             2] - $CellContext`p2]], $CellContext`getAntiComplement[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`bar, 
          Blank[]]] := $CellContext`bar - 
        2 ($CellContext`p - $CellContext`bar), $CellContext`getX88Trilin[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := $CellContext`trilinearToCartesian[$CellContext`orbit,
          {$CellContext`a, $CellContext`b, $CellContext`c}, 
         1/{$CellContext`b + $CellContext`c - 
          2 $CellContext`a, $CellContext`c + $CellContext`a - 
          2 $CellContext`b, $CellContext`a + $CellContext`b - 
          2 $CellContext`c}], $CellContext`trilinearToCartesian[{
          Pattern[$CellContext`A, 
           Blank[]], 
          Pattern[$CellContext`B, 
           Blank[]], 
          Pattern[C, 
           Blank[]]}, {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]], 
          Pattern[$CellContext`z, 
           Blank[]]}] := 
       Module[{$CellContext`denom}, $CellContext`denom = 
          Dot[{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`x, $CellContext`y, $CellContext`z}]; ($CellContext`a \
$CellContext`x $CellContext`A + $CellContext`b $CellContext`y $CellContext`B + \
$CellContext`c $CellContext`z 
            C)/$CellContext`denom], $CellContext`getOrthocenter[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`p3, 
          Blank[]]] := 
       Module[{$CellContext`altBases}, $CellContext`altBases = \
$CellContext`getAltBases[$CellContext`p1, $CellContext`p2, $CellContext`p3]; \
$CellContext`interRays[$CellContext`p1, 
           Part[$CellContext`altBases, 1] - $CellContext`p1, $CellContext`p2, 
           Part[$CellContext`altBases, 
             2] - $CellContext`p2]], $CellContext`getAltBases[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`p3, 
          Blank[]]] := 
       Module[{$CellContext`sides}, $CellContext`sides = {{$CellContext`p2, \
$CellContext`p3}, {$CellContext`p3, $CellContext`p1}, {$CellContext`p1, \
$CellContext`p2}}; MapThread[$CellContext`closestPerp[#, 
            Part[#2, 1], 
            
            Part[#2, 
             2]]& , {{$CellContext`p1, $CellContext`p2, $CellContext`p3}, \
$CellContext`sides}]], $CellContext`getMittenTrilin[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           
           Blank[]]}] := \
$CellContext`trilinearToCartesian[$CellContext`orbit, {$CellContext`a, \
$CellContext`b, $CellContext`c}, {$CellContext`b + $CellContext`c - \
$CellContext`a, $CellContext`c + $CellContext`a - $CellContext`b, \
$CellContext`a + $CellContext`b - $CellContext`c}], \
$CellContext`getSimmedianTrilin[
         Pattern[$CellContext`orbit, 
          Blank[]], 
         Pattern[$CellContext`sides, 
          
          Blank[]]] := $CellContext`trilinearToCartesian[$CellContext`orbit, \
$CellContext`sides, $CellContext`sides], $CellContext`getGergonneTrilin[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           
           Blank[]]}] := \
$CellContext`trilinearToCartesian[$CellContext`orbit, {$CellContext`a, \
$CellContext`b, $CellContext`c}, {$CellContext`b \
($CellContext`c/($CellContext`b + $CellContext`c - $CellContext`a)), \
$CellContext`c ($CellContext`a/($CellContext`c + $CellContext`a - \
$CellContext`b)), $CellContext`a ($CellContext`b/($CellContext`a + \
$CellContext`b - $CellContext`c))}], $CellContext`getNagelTrilin[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           
           Blank[]]}] := \
$CellContext`trilinearToCartesian[$CellContext`orbit, {$CellContext`a, \
$CellContext`b, $CellContext`c}, {($CellContext`b + $CellContext`c - \
$CellContext`a)/$CellContext`a, ($CellContext`c + $CellContext`a - \
$CellContext`b)/$CellContext`b, ($CellContext`a + $CellContext`b - \
$CellContext`c)/$CellContext`c}], $CellContext`getSpiekerTrilin[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           
           Blank[]]}] := \
$CellContext`trilinearToCartesian[$CellContext`orbit, {$CellContext`a, \
$CellContext`b, $CellContext`c}, {$CellContext`b $CellContext`c \
($CellContext`b + $CellContext`c), $CellContext`c $CellContext`a \
($CellContext`c + $CellContext`a), $CellContext`a $CellContext`b \
($CellContext`a + $CellContext`b)}], $CellContext`triAreaHeron[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := 
       Module[{$CellContext`s}, $CellContext`s = ($CellContext`a + \
$CellContext`b + $CellContext`c)/2; 
         Sqrt[$CellContext`s ($CellContext`s - $CellContext`a) \
($CellContext`s - $CellContext`b) ($CellContext`s - $CellContext`c)]], \
$CellContext`drawOrbit[
         Pattern[$CellContext`orbitData, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`lgt, 
           Blank[]], 0.25], 
         Optional[
          Pattern[$CellContext`drawNormals, 
           Blank[]], True], 
         Optional[
          Pattern[$CellContext`psize, 
           Blank[]], 16]] := 
       Module[{$CellContext`normals, $CellContext`orbit, \
$CellContext`halfAlpha}, $CellContext`orbit = 
          ReplaceAll["orbit", $CellContext`orbitData]; $CellContext`normals = 
          ReplaceAll[
           "normals", $CellContext`orbitData]; $CellContext`halfAlpha = 
          ReplaceAll["halfAlpha", $CellContext`orbitData]; Graphics[{
            PointSize[Large], 
            Arrowheads[Medium], {Black, 
             Point[$CellContext`orbit]}, {
             FaceForm[
              GrayLevel[0.95]], 
             EdgeForm[{Thick, Black}], 
             Polygon[$CellContext`orbit]}, 
            If[$CellContext`drawNormals, {Black, 
              
              MapThread[$CellContext`drawArrow[#, #2, $CellContext`lgt]& , \
{$CellContext`orbit, $CellContext`normals}], Dashed, 
              $CellContext`drawArrow[
               Part[$CellContext`orbit, 1], 
               ReplaceAll["nRot", $CellContext`orbitData], $CellContext`lgt], 
              $CellContext`drawArrow[
               Part[$CellContext`orbit, 1], 
               ReplaceAll[
               "nRotNeg", $CellContext`orbitData], $CellContext`lgt], 
              Text["\[Alpha]", 
               $CellContext`ray[
                
                Part[$CellContext`orbit, 
                 1], $CellContext`halfAlpha, $CellContext`lgt 0.33]]}, {}], 
            MapThread[$CellContext`txtSubscript["P", 
              ToString[#], $CellContext`psize, 
              $CellContext`ray[#2, -#3, $CellContext`lgt 0.33]]& , {{1, 2, 
              3}, $CellContext`orbit, $CellContext`normals}]}]], \
$CellContext`drawArrow[
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`phat, 
          Blank[]], 
         Pattern[$CellContext`l, 
          Blank[]]] := Arrow[{$CellContext`p0, 
          $CellContext`ray[$CellContext`p0, $CellContext`phat, \
$CellContext`l]}], $CellContext`txtSubscript[
         Pattern[$CellContext`txt, 
          Blank[]], 
         Pattern[$CellContext`subscr, 
          Blank[]], 
         Pattern[$CellContext`style, 
          Blank[]], 
         Pattern[$CellContext`where, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`offset, 
           Blank[]], {0, 0}]] := Text[
         Style[
          
          Subscript[$CellContext`txt, $CellContext`subscr], \
$CellContext`style], $CellContext`where, $CellContext`offset], 
       Attributes[Subscript] = {NHoldRest}, $CellContext`drawNotables[
         Pattern[$CellContext`notables, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`prefix, 
           Blank[]], ""]] := Graphics[{
          PointSize[Large], 
          Map[$CellContext`drawOneNotable[
            ReplaceAll[#, $CellContext`ptClrs], 
            ReplaceAll[#, $CellContext`notables], 
            StringJoin[$CellContext`prefix, #]]& , {
           "inc", "bar", "ort", "cir", "npc", "feu", "ex12", "ex23", "ex31", 
            "sym", "mit", "ger", "nag", "spi", "antifeu", 
            "x88"}]}], $CellContext`drawOneNotable[
         Pattern[$CellContext`clr, 
          Blank[]], 
         Pattern[$CellContext`at, 
          Blank[]], 
         Pattern[$CellContext`txt, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`dx, 
           Blank[]], 1.5], 
         Optional[
          Pattern[$CellContext`dy, 
           Blank[]], 0], 
         Optional[
          Pattern[$CellContext`fntSize, 
           Blank[]], 12]] := {$CellContext`clr, 
         Point[$CellContext`at], 
         Text[
          
          Style[$CellContext`txt, $CellContext`fntSize], $CellContext`at, \
{$CellContext`dx, $CellContext`dy}]}, $CellContext`ptClrs = {
        "ell" -> GrayLevel[0], "med" -> RGBColor[1, 0, 0], "bar" -> 
         RGBColor[0.5, 0, 0.5], "inc" -> RGBColor[0, 2/3, 0], "ort" -> 
         RGBColor[1, 0.5, 0], "cir" -> 
         RGBColor[0.6666666666666666, 1/3, 0.6666666666666666], "npc" -> 
         RGBColor[1., 0.02, 0.3], "exc" -> RGBColor[0, 2/3, 0], "ex12" -> 
         RGBColor[0, 2/3, 0], "ex23" -> RGBColor[0, 2/3, 0], "ex31" -> 
         RGBColor[0, 2/3, 0], "feu" -> RGBColor[0.5, 0.5, 0.27], "antifeu" -> 
         RGBColor[1, 0.5, 0], "anticompl" -> RGBColor[0, 0, 1], "steiner" -> 
         RGBColor[1, 0.5, 0.5], "x88" -> RGBColor[0, 2/3, 2/3], "dar" -> 
         RGBColor[0.559999, 0.370006, 0.599994], "tab" -> 
         RGBColor[0.359996, 0.140004, 0.430006], "nag" -> RGBColor[1, 0, 0], 
         "mit" -> RGBColor[1, 0, 0], "sym" -> RGBColor[0.5, 0, 0.5], "ger" -> 
         RGBColor[1, 0.5, 0.5], "spi" -> RGBColor[0, 2/3, 2/3], "nap" -> 
         RGBColor[1, 0, 0], "hex" -> RGBColor[1, 0.5, 0.5], "red" -> 
         RGBColor[1, 0, 0], "green" -> RGBColor[0, 1, 0], "blue" -> 
         RGBColor[0, 0, 1]}, $CellContext`drawNotableLines[
         Pattern[$CellContext`notables, 
          Blank[]]] := Graphics[{
          Darker[Gray], Dashed, 
          Line[
           ReplaceAll[{"cir", "ort"}, $CellContext`notables]], 
          Line[
           ReplaceAll[{"npc", "feu"}, $CellContext`notables]], 
          Line[
           ReplaceAll[{"mit", "sym"}, $CellContext`notables]], 
          Line[
           ReplaceAll[{"mit", "ger"}, $CellContext`notables]], 
          Line[
           
           ReplaceAll[{
            "nag", "inc"}, $CellContext`notables]]}], $CellContext`nf[
         Pattern[$CellContext`v, 
          Blank[]]] := ToString[
         NumberForm[$CellContext`v, {3, 2}]], $CellContext`clamp[
         Pattern[$CellContext`v, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`max, 
           Blank[]], 100]] := 
       If[$CellContext`v > $CellContext`max, $CellContext`max, 
         If[$CellContext`v < -$CellContext`max, -$CellContext`max, \
$CellContext`v]]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7707243922451744`*^9, 3.7707244652181563`*^9, {3.7707245248858232`*^9, 
   3.7707245321723785`*^9}, {3.770724706151766*^9, 3.7707247328384466`*^9}, 
   3.77072481003913*^9, {3.770724863982995*^9, 3.7707248967932816`*^9}, {
   3.7707249734065585`*^9, 3.770724997128692*^9}, {3.770725051325863*^9, 
   3.770725082423875*^9}, 3.7707251671944885`*^9, {3.7707251984343786`*^9, 
   3.770725202127773*^9}, {3.7707252843567667`*^9, 3.77072530171737*^9}, 
   3.7708011190101423`*^9, 3.7708024906946707`*^9, 3.7708093176256237`*^9, 
   3.770832196259388*^9, 3.770838237002575*^9, 3.770842253879901*^9, 
   3.7708824476863813`*^9, 3.7708864687800236`*^9, 3.770894537855834*^9, 
   3.7709343899146247`*^9, 3.770936125376727*^9, 3.771025641051359*^9, 
   3.771159272449789*^9, 3.7716755305303802`*^9, 3.772137207575513*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"CloudDeploy", "[", 
   RowBox[{"%", ",", "\"\<view notables\>\"", ",", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7707243074401608`*^9, 3.770724315623267*^9}, {
  3.770724397178022*^9, 3.7707243983349285`*^9}, {3.7707244732088013`*^9, 
  3.7707244746479883`*^9}, {3.770724749483962*^9, 3.7707247505999784`*^9}, {
  3.7707252123684025`*^9, 3.77072521255194*^9}, {3.770725305648863*^9, 
  3.7707253058323727`*^9}, {3.7707253986423407`*^9, 3.7707253998491445`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Trilinears: X(1)~X(100)", "Section",
 CellChangeTimes->{{3.766664661581194*^9, 3.7666646732055235`*^9}, {
  3.7670072031362944`*^9, 3.767007214049448*^9}, {3.7670368144574113`*^9, 
  3.7670368313292613`*^9}, {3.767260730618619*^9, 3.767260732426783*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getNewCenters"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getNewCenters", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], ",", 
     RowBox[{"singles_:", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eqns", ",", "\[IndentingNewLine]", "cosA", ",", "cosB", ",", "cosC", 
       ",", "sinA", ",", "sinB", ",", "sinC", ",", "\[IndentingNewLine]", 
       "secA", ",", "secB", ",", "secC", ",", "cscA", ",", "cscB", ",", 
       "cscC", ",", "\[IndentingNewLine]", "tanA", ",", "tanB", ",", "tanC", 
       ",", "cotA", ",", "cotB", ",", "cotC", ",", "\[IndentingNewLine]", 
       "cos2A", ",", "cos2B", ",", "cos2C", ",", "sin2A", ",", "sin2B", ",", 
       "sin2C", ",", "\[IndentingNewLine]", "sec2A", ",", "sec2B", ",", 
       "sec2C", ",", "csc2A", ",", "csc2B", ",", "csc2C", ",", 
       "\[IndentingNewLine]", "cos3A", ",", "sin3A", ",", "cos3B", ",", 
       "sin3B", ",", "cos3C", ",", "sin3C", ",", "\[IndentingNewLine]", 
       "sec3A", ",", "sec3B", ",", "sec3C", ",", "csc3A", ",", "csc3B", ",", 
       "csc3C", ",", "\[IndentingNewLine]", 
       RowBox[{"cPi3", "=", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Pi]", "/", "3."}], "]"}]}], ",", 
       RowBox[{"sPi3", "=", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Pi]", "/", "3."}], "]"}]}], ",", 
       RowBox[{"cPi6", "=", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Pi]", "/", "6."}], "]"}]}], ",", 
       RowBox[{"sPi6", "=", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Pi]", "/", "6."}], "]"}]}], ",", "\[IndentingNewLine]", 
       "sinApPi3", ",", "sinBpPi3", ",", "sinCpPi3", ",", "sinAmPi3", ",", 
       "sinBmPi3", ",", "sinCmPi3", ",", "\[IndentingNewLine]", "sinApPi6", 
       ",", "sinBpPi6", ",", "sinCpPi6", ",", "sinAmPi6", ",", "sinBmPi6", 
       ",", "sinCmPi6", ",", "\[IndentingNewLine]", "cscApPi3", ",", 
       "cscBpPi3", ",", "cscCpPi3", ",", "cscAmPi3", ",", "cscBmPi3", ",", 
       "cscCmPi3", ",", "\[IndentingNewLine]", "cscApPi6", ",", "cscBpPi6", 
       ",", "cscCpPi6", ",", "cscAmPi6", ",", "cscBmPi6", ",", "cscCmPi6"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"b", ",", "a", ",", "c"}], "]"}], ",", 
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"c", ",", "a", ",", "b"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sinA", ",", "sinB", ",", "sinC"}], "}"}], "=", 
       RowBox[{"getSin", "/@", 
        RowBox[{"{", 
         RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"secA", ",", "secB", ",", "secC"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cscA", ",", "cscB", ",", "cscC"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"sinA", ",", "sinB", ",", "sinC"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tanA", ",", "tanB", ",", "tanC"}], "}"}], "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"sinA", ",", "sinB", ",", "sinC"}], "}"}], "/", 
        RowBox[{"{", 
         RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cotA", ",", "cotB", ",", "cotC"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"tanA", ",", "tanB", ",", "tanC"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cos2A", ",", "cos2B", ",", "cos2C"}], "}"}], "=", 
       RowBox[{"cosDoubleAngle", "/@", 
        RowBox[{"{", 
         RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sec2A", ",", "sec2B", ",", "sec2C"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"cos2A", ",", "cos2B", ",", "cos2C"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sin2A", ",", "sin2B", ",", "sin2C"}], "}"}], "=", 
       RowBox[{"getSin", "/@", 
        RowBox[{"{", 
         RowBox[{"cos2A", ",", "cos2B", ",", "cos2C"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"csc2A", ",", "csc2B", ",", "csc2C"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"sin2A", ",", "sin2B", ",", "sin2C"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sin3A", ",", "cos3A"}], "}"}], "=", 
       RowBox[{"sinCosTripleAngle", "[", 
        RowBox[{"sinA", ",", "cosA", ",", "sin2A", ",", "cos2A"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sin3B", ",", "cos3B"}], "}"}], "=", 
       RowBox[{"sinCosTripleAngle", "[", 
        RowBox[{"sinB", ",", "cosB", ",", "sin2B", ",", "cos2B"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sin3C", ",", "cos3C"}], "}"}], "=", 
       RowBox[{"sinCosTripleAngle", "[", 
        RowBox[{"sinC", ",", "cosC", ",", "sin2C", ",", "cos2C"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sec3A", ",", "sec3B", ",", "sec3C"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"cos3A", ",", "cos3B", ",", "cos3C"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"csc3A", ",", "csc3B", ",", "csc3C"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"sin3A", ",", "sin3B", ",", "sin3C"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sinApPi3", ",", "sinAmPi3"}], "}"}], "=", 
       RowBox[{"getSinApmB", "[", 
        RowBox[{"sinA", ",", "sPi3", ",", "cosA", ",", "cPi3"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sinBpPi3", ",", "sinBmPi3"}], "}"}], "=", 
       RowBox[{"getSinApmB", "[", 
        RowBox[{"sinB", ",", "sPi3", ",", "cosB", ",", "cPi3"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sinCpPi3", ",", "sinCmPi3"}], "}"}], "=", 
       RowBox[{"getSinApmB", "[", 
        RowBox[{"sinC", ",", "sPi3", ",", "cosC", ",", "cPi3"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sinApPi6", ",", "sinAmPi6"}], "}"}], "=", 
       RowBox[{"getSinApmB", "[", 
        RowBox[{"sinA", ",", "sPi6", ",", "cosA", ",", "cPi6"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sinBpPi6", ",", "sinBmPi6"}], "}"}], "=", 
       RowBox[{"getSinApmB", "[", 
        RowBox[{"sinB", ",", "sPi6", ",", "cosB", ",", "cPi6"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sinCpPi6", ",", "sinCmPi6"}], "}"}], "=", 
       RowBox[{"getSinApmB", "[", 
        RowBox[{"sinC", ",", "sPi6", ",", "cosC", ",", "cPi6"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cscApPi3", ",", "cscBpPi3", ",", "cscCpPi3"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"sinApPi3", ",", "sinBpPi3", ",", "sinCpPi3"}], "}"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cscAmPi3", ",", "cscBmPi3", ",", "cscCmPi3"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"sinAmPi3", ",", "sinBmPi3", ",", "sinCmPi3"}], "}"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cscApPi6", ",", "cscBpPi6", ",", "cscCpPi6"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"sinApPi6", ",", "sinBpPi6", ",", "sinCpPi6"}], "}"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cscAmPi6", ",", "cscBmPi6", ",", "cscCmPi6"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"sinAmPi6", ",", "sinBmPi6", ",", "sinCmPi6"}], "}"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"eqns", "=", 
       RowBox[{"Get", "[", "\"\<data/x0001_0100.m\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Chop", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"trilinearToCartesian", "[", 
            RowBox[{"orbit", ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
             RowBox[{"N", "@", 
              RowBox[{"ReleaseHold", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], "]"}]}], "}"}], 
         "&"}], "/@", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"if", " ", "singles"}], " ", "\[NotEqual]", " ", 
           RowBox[{"{", "}"}]}], ",", " ", 
          RowBox[{
          "use", " ", "the", " ", "list", " ", "to", " ", "only", " ", 
           "evaluate", " ", "requested", " ", "indices"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "singles", "]"}], ">", "0"}], ",", 
          RowBox[{"eqns", "[", 
           RowBox[{"[", "singles", "]"}], "]"}], ",", "eqns"}], "]"}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7665779714978848`*^9, 3.7665780828336935`*^9}, {
   3.7665782050019903`*^9, 3.766578259099848*^9}, {3.7665783299456143`*^9, 
   3.7665785309767227`*^9}, {3.76657859022948*^9, 3.7665787262947845`*^9}, {
   3.7665788269967623`*^9, 3.766578836339048*^9}, {3.76657894430968*^9, 
   3.7665790226504974`*^9}, {3.7665792364463673`*^9, 
   3.7665792599515247`*^9}, {3.766594315312018*^9, 3.7665943194489293`*^9}, {
   3.766607404236101*^9, 3.7666075089197497`*^9}, {3.7666091715415087`*^9, 
   3.7666091739101734`*^9}, 3.766609223904434*^9, {3.7666095192623243`*^9, 
   3.766609521032593*^9}, {3.766609561270995*^9, 3.7666095691349845`*^9}, 
   3.766609635753705*^9, {3.7666096939311557`*^9, 3.7666098448724585`*^9}, {
   3.7666099661235514`*^9, 3.76661008441965*^9}, {3.7666102273943815`*^9, 
   3.766610294196725*^9}, {3.7666103407610917`*^9, 3.766610483810437*^9}, {
   3.766610519602743*^9, 3.766610627384386*^9}, {3.7666107757335634`*^9, 
   3.766610838150076*^9}, {3.7666108974960556`*^9, 3.7666111328795137`*^9}, {
   3.7666111653377333`*^9, 3.766611250855734*^9}, {3.766611284431636*^9, 
   3.7666113389121475`*^9}, {3.766611382005929*^9, 3.7666114445927486`*^9}, {
   3.7666114952483625`*^9, 3.766611694819458*^9}, {3.766611927974598*^9, 
   3.7666119370145683`*^9}, {3.766611969711301*^9, 3.766611982044326*^9}, {
   3.7666127087934775`*^9, 3.7666127146975017`*^9}, {3.7666157361725016`*^9, 
   3.766615740556909*^9}, {3.7666160611024413`*^9, 3.766616069029397*^9}, {
   3.7666165975604615`*^9, 3.7666166316303997`*^9}, {3.766617039249529*^9, 
   3.766617042518789*^9}, {3.7666171058483*^9, 3.766617107909788*^9}, {
   3.766617154041812*^9, 3.766617157538463*^9}, {3.766617405870909*^9, 
   3.766617411423091*^9}, {3.766617506776169*^9, 3.7666175104403725`*^9}, {
   3.7666176705132427`*^9, 3.766617679361104*^9}, {3.7666177856304607`*^9, 
   3.7666177864781675`*^9}, {3.766618459522672*^9, 3.7666184775478296`*^9}, {
   3.7666268400193453`*^9, 3.7666268426264024`*^9}, {3.766676566653376*^9, 
   3.7666766052655954`*^9}, {3.7666773525573406`*^9, 3.76667735440141*^9}, {
   3.7666825059854527`*^9, 3.7666825075073833`*^9}, 3.766682542545766*^9, 
   3.7666828379407234`*^9, 3.7666829368270535`*^9, 3.7666830243805723`*^9, {
   3.7666830727582293`*^9, 3.7666831034232426`*^9}, {3.766683138766748*^9, 
   3.7666834688512783`*^9}, {3.766683512214215*^9, 3.766683524912539*^9}, {
   3.7666836429500237`*^9, 3.766683898765238*^9}, {3.766684648023147*^9, 
   3.7666846528931265`*^9}, 3.766684858004974*^9, {3.766684894837695*^9, 
   3.7666849100583916`*^9}, {3.766684961462989*^9, 3.766684993779695*^9}, {
   3.766685979478453*^9, 3.766686008634529*^9}, {3.7666865345664186`*^9, 
   3.7666865431341414`*^9}, {3.7666889850740967`*^9, 3.766688992847258*^9}, {
   3.766775584272298*^9, 3.766775622294676*^9}, {3.7667758339942193`*^9, 
   3.7667758488797293`*^9}, {3.766788796034089*^9, 3.766788799978543*^9}, {
   3.7667889915159235`*^9, 3.766788994512911*^9}, {3.7667894154795127`*^9, 
   3.766789520328484*^9}, {3.766789608092081*^9, 3.7667896626013937`*^9}, 
   3.766789708908337*^9, {3.7667898620965443`*^9, 3.766789881835886*^9}, {
   3.7667901746216335`*^9, 3.7667901960903807`*^9}, {3.7667902275203495`*^9, 
   3.7667902407064295`*^9}, {3.7667903034795933`*^9, 3.766790473628872*^9}, {
   3.7668285638250847`*^9, 3.7668285930252357`*^9}, {3.766828627928946*^9, 
   3.7668286289163055`*^9}, {3.766828674881161*^9, 3.766828823600153*^9}, {
   3.7668288830082912`*^9, 3.7668288921541905`*^9}, {3.7670102568009477`*^9, 
   3.767010313684351*^9}, {3.767011352395379*^9, 3.7670113534176445`*^9}, {
   3.767011385570632*^9, 3.767011386721553*^9}, {3.7672654158072395`*^9, 
   3.767265428635314*^9}, {3.770380457894966*^9, 3.770380480209306*^9}, {
   3.770484736058006*^9, 3.770484759246998*^9}, {3.7704849927912207`*^9, 
   3.770484993151862*^9}, {3.7712720626245832`*^9, 3.7712720630813913`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"List", "@@@", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Second", "@", "#"}], ")"}], "&"}], "/@", 
      RowBox[{"Get", "[", "\"\<data/x0001_0100.m\>\"", "]"}]}], ")"}], ",", 
    "3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.770486023324442*^9, 3.7704860424613543`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", " ", "c"}], ",", 
      RowBox[{"a", " ", "c"}], ",", 
      RowBox[{"a", " ", "b"}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7704860261698713`*^9, 3.770486042787487*^9}, 
   3.770536074949396*^9, 3.7705853032573395`*^9, 3.7706307562770805`*^9, 
   3.770631075086502*^9, 3.770666083126351*^9, 3.770801119081955*^9, 
   3.7708024907664495`*^9, 3.770809317733307*^9, 3.770832196333192*^9, 
   3.7708382370723886`*^9, 3.770842254029502*^9, 3.7708824477811227`*^9, 
   3.7708864688593245`*^9, 3.7708945379286385`*^9, 3.7709343899665146`*^9, 
   3.7709361254255943`*^9, 3.7710256412119303`*^9, 3.771159272530553*^9, 
   3.771675530594183*^9, 3.7721372076792336`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"centerEqns", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"TraditionalForm", "@", 
      RowBox[{"First", "@", 
       RowBox[{"First", "@", "#"}]}]}], "&"}], "/@", 
    RowBox[{"List", "@@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Second", "@", "#"}], ")"}], "&"}], "/@", 
       RowBox[{"Get", "[", "\"\<data/x0001_0100.m\>\"", "]"}]}], ")"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"centerNames", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<: \>\"", "<>", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "&"}], "/@", 
    RowBox[{"Quiet", "@", 
     RowBox[{"getNewCenters", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"RotateLeft", "@", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", 
          RowBox[{"Sqrt", "[", "2.", "]"}]}], "}"}]}]}], "]"}]}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.770485109349126*^9, 3.7704851317562428`*^9}, {
  3.7704851684372244`*^9, 3.7704852161742754`*^9}, {3.7704854766530232`*^9, 
  3.7704854987961936`*^9}, {3.770485531221538*^9, 3.7704855378687754`*^9}, {
  3.770485578505146*^9, 3.7704856069889174`*^9}, {3.7704859291413956`*^9, 
  3.7704860113903575`*^9}, {3.770486051430357*^9, 3.7704860829423733`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "newCenters"}], ";", 
  RowBox[{
   RowBox[{"newCenters", "[", 
    RowBox[{"a_", ",", "t_", ",", 
     RowBox[{"singles_:", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"orbit", ",", "normals", ",", "sides"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"orbit", ",", "normals"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"orbit", "=", 
       RowBox[{"Reverse", "@", "orbit"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sides", "=", 
       RowBox[{"RotateLeft", "[", 
        RowBox[{"triLengths", "[", "orbit", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"getNewCenters", "[", 
       RowBox[{"orbit", ",", "sides", ",", "singles"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.766578870741023*^9, 3.766578921597373*^9}, {
  3.7665790357025995`*^9, 3.7665791029497433`*^9}, {3.766613953156332*^9, 
  3.766614003171566*^9}, {3.7666140407650814`*^9, 3.766614042725814*^9}, {
  3.7667897189355574`*^9, 3.766789727933124*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "newCentersAnticompl"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newCentersAnticompl", "[", 
    RowBox[{"a_", ",", "t_", ",", 
     RowBox[{"singles_:", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "orbit", ",", "normals", ",", "sides", ",", "act", ",", "sidesAct"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"orbit", ",", "normals"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"orbit", "=", 
       RowBox[{"Reverse", "@", "orbit"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sides", "=", 
       RowBox[{"RotateLeft", "@", 
        RowBox[{"triLengths", "[", "orbit", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"act", "=", 
       RowBox[{"anticomplementaryTriangle", "[", 
        RowBox[{"orbit", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sidesAct", "=", 
       RowBox[{"RotateLeft", "@", 
        RowBox[{"triLengths", "[", "act", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"getNewCenters", "[", 
       RowBox[{"act", ",", "sidesAct", ",", "singles"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7671236424230833`*^9, 3.767123778767564*^9}, {
   3.767123837111144*^9, 3.767123845198513*^9}, 3.7671246248942485`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "newCentersExc"}], ";", 
  RowBox[{
   RowBox[{"newCentersExc", "[", 
    RowBox[{"a_", ",", "t_", ",", 
     RowBox[{"singles_:", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"orbit", ",", "normals", ",", "exc", ",", "sides"}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"orbit", ",", "normals"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"exc", "=", 
       RowBox[{"getExcenters", "[", 
        RowBox[{"orbit", ",", "normals"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sides", "=", 
       RowBox[{"RotateLeft", "@", 
        RowBox[{"triLengths", "[", "exc", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"getNewCenters", "[", 
       RowBox[{"exc", ",", "sides", ",", "singles"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7665909779832335`*^9, 3.766590987831403*^9}, {
   3.766591328455262*^9, 3.7665913521685014`*^9}, {3.766615217237216*^9, 
   3.7666152197485294`*^9}, 3.766616479089192*^9, {3.7667897312632217`*^9, 
   3.766789740069216*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "newCentersOrthic"}], ";", 
  RowBox[{
   RowBox[{"newCentersOrthic", "[", 
    RowBox[{"a_", ",", "t_", ",", 
     RowBox[{"singles_:", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"orbit", ",", "normals", ",", "feet", ",", "sides"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"orbit", ",", "normals"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"feet", "=", 
       RowBox[{"getAltBases", "@@", "orbit"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sides", "=", 
       RowBox[{"RotateLeft", "@", 
        RowBox[{"triLengths", "[", "feet", "]"}]}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"rotate", " ", 
        RowBox[{"left", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"getNewCenters", "[", 
       RowBox[{"feet", ",", "sides", ",", "singles"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7670072522502556`*^9, 3.7670072704754744`*^9}, {
  3.767007446586383*^9, 3.767007487049112*^9}, {3.767007523858145*^9, 
  3.767007544371202*^9}, {3.767007770467066*^9, 3.7670077726030793`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "newCentersMedial"}], ";", 
  RowBox[{
   RowBox[{"newCentersMedial", "[", 
    RowBox[{"a_", ",", "t_", ",", 
     RowBox[{"singles_:", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"orbit", ",", "normals", ",", "meds", ",", "sides"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"orbit", ",", "normals"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"meds", "=", 
       RowBox[{"getMedians", "@@", "orbit"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sides", "=", 
       RowBox[{"RotateLeft", "@", 
        RowBox[{"triLengths", "[", "meds", "]"}]}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"rotate", " ", 
        RowBox[{"left", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"getNewCenters", "[", 
       RowBox[{"meds", ",", "sides", ",", "singles"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7670083747612424`*^9, 3.7670084015384507`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "newCentersIntouch"}], ";", 
  RowBox[{
   RowBox[{"newCentersIntouch", "[", 
    RowBox[{"a_", ",", "t_", ",", 
     RowBox[{"singles_:", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"orbit", ",", "normals", ",", "tps", ",", "sides"}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"orbit", ",", "normals"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tps", "=", 
       RowBox[{"getTouchPts", "[", 
        RowBox[{"orbit", ",", "normals"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sides", "=", 
       RowBox[{"RotateLeft", "@", 
        RowBox[{"triLengths", "[", "tps", "]"}]}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"rotate", " ", 
        RowBox[{"left", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"getNewCenters", "[", 
       RowBox[{"tps", ",", "sides", ",", "singles"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.767012463282937*^9, 3.7670124954999905`*^9}, {
  3.76701269240406*^9, 3.767012696459407*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "newCentersExtouch"}], ";", 
  RowBox[{
   RowBox[{"newCentersExtouch", "[", 
    RowBox[{"a_", ",", "t_", ",", 
     RowBox[{"singles_:", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"orbit", ",", "normals", ",", "exc", ",", "tps", ",", "sides"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"orbit", ",", "normals"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"exc", "=", 
       RowBox[{"getExcenters", "[", 
        RowBox[{"orbit", ",", "normals"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tps", "=", 
       RowBox[{"getExtouchPoints", "[", 
        RowBox[{"orbit", ",", "exc"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sides", "=", 
       RowBox[{"RotateLeft", "@", 
        RowBox[{"triLengths", "[", "tps", "]"}]}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"rotate", " ", 
        RowBox[{"left", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"getNewCenters", "[", 
       RowBox[{"tps", ",", "sides", ",", "singles"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.767012504059095*^9, 3.7670125184316473`*^9}, {
  3.7670125493148413`*^9, 3.767012586059126*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "newCentersExfeuer"}], ";", 
  RowBox[{
   RowBox[{"newCentersExfeuer", "[", 
    RowBox[{"a_", ",", "t_", ",", 
     RowBox[{"singles_:", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "orbit", ",", "normals", ",", "exc", ",", "npc", ",", "excCircleData", 
       ",", "feus", ",", "sides"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"orbit", ",", "normals"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"exc", "=", 
       RowBox[{"getExcenters", "[", 
        RowBox[{"orbit", ",", "normals"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"12", ",", "23", ",", "31"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"npc", "=", 
       RowBox[{"getNinepointcenter", "@@", "orbit"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"excCircleData", "=", 
       RowBox[{"getExcircleData", "[", 
        RowBox[{"orbit", ",", "exc", ",", "npc"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"feus", "=", 
       RowBox[{"(", 
        RowBox[{"\"\<feus\>\"", "/.", "excCircleData"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sides", "=", 
       RowBox[{"RotateLeft", "@", 
        RowBox[{"triLengths", "[", "feus", "]"}]}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"rotate", " ", 
        RowBox[{"left", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"getNewCenters", "[", 
       RowBox[{"feus", ",", "sides", ",", "singles"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7671250383976927`*^9, 3.767125043717946*^9}, {
  3.7671250950047665`*^9, 3.7671251378376656`*^9}, {3.7671253738689485`*^9, 
  3.7671253769895735`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Circumbilliard II (using linear algebra)", "Section",
 CellChangeTimes->{{3.7704225257007627`*^9, 3.7704225284093747`*^9}, {
  3.77042678749117*^9, 3.7704267964995747`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ellExtremum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mx_", ",", "my_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"vx_", ",", "vy_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c1_", ",", "c2_", ",", "c3_", ",", "c4_", ",", "c5_"}], "}"}], 
    ",", "t_"}], "]"}], "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xt", ",", "yt"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xt", "=", 
      RowBox[{"mx", "+", 
       RowBox[{"t", " ", "vx"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"yt", "=", 
      RowBox[{"my", "+", 
       RowBox[{"t", " ", "vy"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{"1", "+", 
        RowBox[{"c1", " ", "xt"}], "+", 
        RowBox[{"c2", " ", "yt"}], "+", 
        RowBox[{"c3", " ", "xt", " ", "yt"}], "+", 
        RowBox[{"c4", " ", 
         RowBox[{"xt", "^", "2"}]}], "+", 
        RowBox[{"c5", " ", 
         RowBox[{"yt", "^", "2"}]}]}], ",", "t"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.770425342690569*^9, 3.770425481036459*^9}, {
  3.770425690574411*^9, 3.7704256911256776`*^9}, {3.7704562101427083`*^9, 
  3.770456210903674*^9}, {3.770481049689789*^9, 3.7704810643057284`*^9}, {
  3.7704811122646027`*^9, 3.7704811124481125`*^9}, {3.7704811786565485`*^9, 
  3.770481184439001*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"c1", " ", "mx"}], "+", 
  RowBox[{"c4", " ", 
   SuperscriptBox["mx", "2"]}], "+", 
  RowBox[{"c2", " ", "my"}], "+", 
  RowBox[{"c3", " ", "mx", " ", "my"}], "+", 
  RowBox[{"c5", " ", 
   SuperscriptBox["my", "2"]}], "+", 
  RowBox[{"t", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"c1", " ", "vx"}], "+", 
     RowBox[{"2", " ", "c4", " ", "mx", " ", "vx"}], "+", 
     RowBox[{"c3", " ", "my", " ", "vx"}], "+", 
     RowBox[{"c2", " ", "vy"}], "+", 
     RowBox[{"c3", " ", "mx", " ", "vy"}], "+", 
     RowBox[{"2", " ", "c5", " ", "my", " ", "vy"}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["t", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"c4", " ", 
      SuperscriptBox["vx", "2"]}], "+", 
     RowBox[{"c3", " ", "vx", " ", "vy"}], "+", 
     RowBox[{"c5", " ", 
      SuperscriptBox["vy", "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.7704254728591633`*^9, 3.77042549544433*^9}, 
   3.7704256916083965`*^9, 3.770453573634735*^9, 3.7704561569635963`*^9, 
   3.7704562140403433`*^9, 3.770474972961536*^9, 3.7704751260459113`*^9, {
   3.770481065769816*^9, 3.7704810763206253`*^9}, {3.7704811132579484`*^9, 
   3.770481132043791*^9}, 3.770481184764161*^9, 3.7705444731833286`*^9, 
   3.7705853863696976`*^9, 3.7706311939129725`*^9, 3.770666162095338*^9, 
   3.7708012004252877`*^9, 3.770802571285428*^9, 3.770809395406296*^9, 
   3.7708322794555264`*^9, 3.7708383261718874`*^9, 3.7708423352986345`*^9, 
   3.7708825289681387`*^9, 3.770886558413744*^9, 3.770894621641775*^9, 
   3.7709344696889553`*^9, 3.7709361255273185`*^9, 3.7710256413565426`*^9, 
   3.771159272718051*^9, 3.771675530733842*^9, 3.772137207819827*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"by", " ", "symmetry"}], ",", " ", 
    RowBox[{"b", "=", 
     RowBox[{"0", " ", "of", " ", "the", " ", "quadratic"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "@", "ellExtremumSym"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ellExtremumSym", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mx_", ",", "my_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"vx_", ",", "vy_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c1_", ",", "c2_", ",", "c3_", ",", "c4_", ",", "c5_"}], 
        "}"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "c", ",", "d", ",", "sqrtd", ",", "sol"}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{
          RowBox[{"c4", " ", 
           SuperscriptBox["vx", "2"]}], "+", 
          RowBox[{"c3", " ", "vx", " ", "vy"}], "+", 
          RowBox[{"c5", " ", 
           SuperscriptBox["vy", "2"]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"b", "=", 
           RowBox[{
            RowBox[{"c1", " ", "vx"}], "+", 
            RowBox[{"2", " ", "c4", " ", "mx", " ", "vx"}], "+", 
            RowBox[{"c3", " ", "my", " ", "vx"}], "+", 
            RowBox[{"c2", " ", "vy"}], "+", 
            RowBox[{"c3", " ", "mx", " ", "vy"}], "+", 
            RowBox[{"2", " ", "c5", " ", "my", " ", "vy"}]}]}], ";"}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"1", "+", 
          RowBox[{"c1", " ", "mx"}], "+", 
          RowBox[{"c4", " ", 
           SuperscriptBox["mx", "2"]}], "+", 
          RowBox[{"c2", " ", "my"}], "+", 
          RowBox[{"c3", " ", "mx", " ", "my"}], "+", 
          RowBox[{"c5", " ", 
           SuperscriptBox["my", "2"]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "b"}], " ", "+", " ", 
            RowBox[{"sqrt", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b2", "-", 
                RowBox[{"4", "ac"}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"2", "a"}], ")"}]}]}]}], ")"}], " ", "=", 
          RowBox[{
           RowBox[{">", " ", 
            RowBox[{"sqrt", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "ac"}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"2", "a"}], ")"}]}]}]}], " ", "=", 
           RowBox[{">", " ", 
            RowBox[{"sqrt", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"-", "ac"}], ")"}], "/", "a"}]}]}]}]}], "*)"}], "  ", 
        "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"-", "c"}], "/", "a"}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"-", "a"}], "*", "c"}], "]"}], "/", "a"}], ";"}], "*)"}], 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"sqrt", 
           RowBox[{"(", 
            RowBox[{"-", "a"}], ")"}], "*", "sqrt", 
           RowBox[{
            RowBox[{"(", "c", ")"}], "/", "a"}]}], " ", "=", 
          RowBox[{">", " ", 
           RowBox[{"sqrt", 
            RowBox[{"(", 
             RowBox[{"c", "/", "a"}], ")"}]}]}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"sol", ",", 
          RowBox[{"-", "sol"}]}], "}"}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.770544285754243*^9, 3.77054437546827*^9}, {
  3.770544568175046*^9, 3.77054470600391*^9}, {3.770544776461471*^9, 
  3.770544781564137*^9}, {3.7705448284606733`*^9, 3.7705448618130054`*^9}, {
  3.7705449082788253`*^9, 3.770544918805518*^9}, {3.770544952966057*^9, 
  3.7705450175878134`*^9}, {3.7705451595178595`*^9, 3.7705452877505827`*^9}, {
  3.770545473065467*^9, 3.770545505968127*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getCircumAny"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getCircumAny", "[", 
    RowBox[{"orbit_", ",", "ctr_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "mtx123", ",", "mtx45", ",", "mtx", ",", "rhs", ",", "ls", ",", "hess", 
       ",", "vals", ",", "vects", ",", "lengths", ",", "lgt1", ",", "lgt2", 
       ",", "vertices"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mtx123", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "*", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], "}"}], "&"}], "/@",
         "orbit"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mtx45", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", 
           RowBox[{"ctr", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"2", 
            RowBox[{"ctr", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", "0"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", 
           RowBox[{"ctr", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "0", ",", 
           RowBox[{"2", 
            RowBox[{"ctr", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mtx", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"mtx123", ",", "mtx45"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rhs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ls", "=", 
       RowBox[{"LinearSolve", "[", 
        RowBox[{"mtx", ",", "rhs"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"hess", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"2", 
            RowBox[{"ls", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], ",", 
           RowBox[{"ls", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ls", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", 
           RowBox[{"2", 
            RowBox[{"ls", "[", 
             RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vals", ",", "vects"}], "}"}], "=", 
       RowBox[{"Eigensystem", "@", "hess"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lgt1", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"First", "@", 
         RowBox[{"ellExtremumSym", "[", 
          RowBox[{"ctr", ",", 
           RowBox[{"vects", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "ls"}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"lgt1", "=", 
         RowBox[{"Abs", "@", 
          RowBox[{"First", "[", 
           RowBox[{"zzz", "/.", 
            RowBox[{"Solve", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ellExtremum", "[", 
                RowBox[{"ctr", ",", 
                 RowBox[{"vects", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "ls", ",", "zzz"}], 
                "]"}], "\[Equal]", "0"}], ",", "zzz"}], "]"}]}], "]"}]}]}], 
        ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"lgt2", "=", 
       RowBox[{"lgt1", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"vals", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "/", 
          RowBox[{"vals", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"lengths", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Abs", "@", 
             RowBox[{"First", "[", 
              RowBox[{"zzz", "/.", 
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ellExtremum2", "[", 
                   RowBox[{"ctr", ",", "#", ",", "ls", ",", "zzz"}], "]"}], 
                  "\[Equal]", "0"}], ",", "zzz"}], "]"}]}], "]"}]}], ")"}], 
           "&"}], "/@", "vects"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"lengths", "=", 
       RowBox[{"{", 
        RowBox[{"lgt1", ",", "lgt2"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"vertices", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"ctr", "+", 
            RowBox[{"#1", "*", "#2"}]}], ")"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"lengths", ",", "vects"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<ctr\>\"", "\[Rule]", "ctr"}], ",", 
        RowBox[{"\"\<coeffs\>\"", "->", 
         RowBox[{"Chop", "@", "ls"}]}], ",", 
        RowBox[{"\"\<vals\>\"", "\[Rule]", 
         RowBox[{"Chop", "@", "vals"}]}], ",", 
        RowBox[{"\"\<axes\>\"", "\[Rule]", 
         RowBox[{"Chop", "@", "vects"}]}], ",", 
        RowBox[{"\"\<lengths\>\"", "\[Rule]", "lengths"}], ",", 
        RowBox[{"\"\<vertices\>\"", "\[Rule]", 
         RowBox[{"Chop", "@", "vertices"}]}]}], "|>"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7704225332338305`*^9, 3.770422765037452*^9}, {
   3.770423009909153*^9, 3.7704230111327524`*^9}, {3.770423105173162*^9, 
   3.770423109205046*^9}, {3.7704232355336275`*^9, 3.7704233367818937`*^9}, {
   3.7704233921830206`*^9, 3.7704234770380154`*^9}, {3.7704238879039197`*^9, 
   3.7704240022241354`*^9}, {3.770424231951419*^9, 3.7704242560552745`*^9}, {
   3.7704246313046255`*^9, 3.770424650897278*^9}, {3.770425512815048*^9, 
   3.7704257137850757`*^9}, {3.7704257961533756`*^9, 3.770425940506523*^9}, {
   3.770426010907665*^9, 3.7704260506806245`*^9}, {3.770426086554165*^9, 
   3.770426088729412*^9}, {3.7704261281763377`*^9, 3.770426143459182*^9}, {
   3.7704262026133833`*^9, 3.7704262071237392`*^9}, {3.7704262843726215`*^9, 
   3.770426296432477*^9}, {3.7704268927613783`*^9, 3.7704268946088943`*^9}, {
   3.7704536982119217`*^9, 3.770453698955906*^9}, {3.770454868431776*^9, 
   3.7704548921274185`*^9}, {3.770454953135376*^9, 3.770454970722378*^9}, {
   3.7704550365519104`*^9, 3.7704550430078435`*^9}, {3.770455134919798*^9, 
   3.7704551659119177`*^9}, {3.7704552542153387`*^9, 
   3.7704552907919736`*^9}, {3.770455335179448*^9, 3.7704553396870375`*^9}, {
   3.7704562513155394`*^9, 3.7704562724506087`*^9}, {3.7704563417218933`*^9, 
   3.7704563468729258`*^9}, {3.7704750158588943`*^9, 
   3.7704750247800674`*^9}, {3.7704751472831545`*^9, 3.770475177443551*^9}, {
   3.770475208442707*^9, 3.7704752357055545`*^9}, {3.770475272727329*^9, 
   3.770475330097615*^9}, {3.770475392022004*^9, 3.7704755081541963`*^9}, {
   3.7704759208158493`*^9, 3.7704759621238422`*^9}, {3.7704760624638014`*^9, 
   3.7704760753545046`*^9}, {3.7704764017731886`*^9, 3.7704764189826097`*^9}, 
   3.77047656102017*^9, {3.7704765910602107`*^9, 3.770476605444275*^9}, {
   3.770477123893408*^9, 3.770477131029277*^9}, {3.770477732751787*^9, 
   3.770477759812875*^9}, {3.770477909357608*^9, 3.7704779112375836`*^9}, {
   3.770478012238154*^9, 3.770478057533531*^9}, {3.770479328744561*^9, 
   3.770479386006714*^9}, {3.7704808664419537`*^9, 3.7704809307142444`*^9}, {
   3.7704809997240286`*^9, 3.7704810110500526`*^9}, 3.7704810909967203`*^9, {
   3.770481191164029*^9, 3.77048121573844*^9}, {3.7705442538044662`*^9, 
   3.770544281687112*^9}, {3.7705443988824377`*^9, 3.7705444033953*^9}, {
   3.7705444807511034`*^9, 3.77054452168629*^9}, {3.770544685511093*^9, 
   3.770544687037983*^9}, {3.7708439978019185`*^9, 3.770844092264557*^9}, {
   3.7708899189107695`*^9, 3.77089000386402*^9}, {3.7708902381236944`*^9, 
   3.7708902403920135`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getCircumMit"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getCircumMit", "[", "orbit_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "ctr", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ctr", "=", 
        RowBox[{"getMittenTrilin", "[", 
         RowBox[{"orbit", ",", 
          RowBox[{"RotateLeft", "@", 
           RowBox[{"triLengths", "@", "orbit"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"getCircumAny", "[", 
        RowBox[{"orbit", ",", "ctr"}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Steiner", " ", "Circumellipse"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "getCircumBar"}], ";", 
  RowBox[{
   RowBox[{"getCircumBar", "[", "orbit_", "]"}], ":=", 
   RowBox[{"getCircumAny", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"getBaricenter", "@@", "orbit"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7708440404713387`*^9, 3.7708440745822654`*^9}, {
  3.7708441192225885`*^9, 3.7708441312065597`*^9}, {3.7708444549275928`*^9, 
  3.7708445045602846`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getCircumMit", "[", 
  RowBox[{
   RowBox[{"orbitNormals", "[", 
    RowBox[{"1.5", ",", 
     RowBox[{"\[Pi]", "/", "3."}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7704227664623766`*^9, 3.7704227776537714`*^9}, {
  3.770423019932039*^9, 3.7704230269815407`*^9}, {3.7708441333258977`*^9, 
  3.770844134173602*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ctr\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.`", ",", 
      RowBox[{"-", "6.245670450542015`*^-16"}]}], "}"}]}], ",", 
   RowBox[{"\<\"coeffs\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", 
      RowBox[{"-", "0.44444444444444425`"}], ",", 
      RowBox[{"-", "0.9999999999999993`"}]}], "}"}]}], ",", 
   RowBox[{"\<\"vals\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.9999999999999987`"}], ",", 
      RowBox[{"-", "0.8888888888888885`"}]}], "}"}]}], ",", 
   RowBox[{"\<\"axes\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.`"}], ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"lengths\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1.0000000000000002`", ",", "1.5`"}], "}"}]}], ",", 
   RowBox[{"\<\"vertices\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0.9999999999999996`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5`"}], ",", "0"}], "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.7704751260887957`*^9, 3.7704751315123024`*^9}, 
   3.7704751810718565`*^9, {3.7704752371726475`*^9, 3.7704752455599337`*^9}, 
   3.770475276907673*^9, {3.7704753099923306`*^9, 3.77047533142794*^9}, 
   3.770475423303406*^9, 3.770475453682333*^9, {3.7704754902094994`*^9, 
   3.7704755094048243`*^9}, {3.770475906193957*^9, 3.7704759654519477`*^9}, 
   3.7704760764166727`*^9, {3.770476408700647*^9, 3.770476420422782*^9}, 
   3.7704765638516026`*^9, 3.770476607433163*^9, 3.770477132144297*^9, {
   3.770477737483143*^9, 3.770477783500957*^9}, 3.7704779121391745`*^9, {
   3.77047801397252*^9, 3.770478059440406*^9}, 3.7704790561417675`*^9, 
   3.7704791293665023`*^9, {3.770479358246792*^9, 3.770479387187061*^9}, 
   3.7704795568267593`*^9, 3.770480932114993*^9, 3.770481012152108*^9, {
   3.770481092328456*^9, 3.7704811171685266`*^9}, 3.7704811505703087`*^9, 
   3.7704812173621025`*^9, {3.7705444905910244`*^9, 3.770544522855137*^9}, 
   3.7705445980505857`*^9, {3.7705446883883743`*^9, 3.770544708009549*^9}, 
   3.770544784461602*^9, 3.77054486618233*^9, 3.770544932053725*^9, 
   3.7705450206667843`*^9, 3.770545289823591*^9, 3.770545507990719*^9, 
   3.7705853864395113`*^9, 3.7706311940037575`*^9, 3.77066616219208*^9, 
   3.770801200509093*^9, 3.77080257136322*^9, 3.7708093954891047`*^9, 
   3.7708322795393305`*^9, 3.7708383262546654`*^9, 3.7708423353764267`*^9, 
   3.7708440952485886`*^9, 3.770844439932665*^9, 3.770882529054907*^9, 
   3.770886558502183*^9, {3.7708899733056808`*^9, 3.77089000558591*^9}, 
   3.7708946217215614`*^9, 3.7709344697507896`*^9, 3.770936125573167*^9, 
   3.771025641427354*^9, 3.771159272801827*^9, 3.771675530807642*^9, 
   3.772137207891635*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "drawCircumAny"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "drawCircumAny"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ctrLab", "\[Rule]", "\"\<M\>\""}], ",", 
     RowBox[{"drTri", "\[Rule]", "False"}], ",", 
     RowBox[{"ps", "\[Rule]", "Black"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawCircumAny", "[", 
    RowBox[{"tri_", ",", "ctr_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cII", ",", "o", ",", "vl", ",", "v", ",", "ul", ",", "u", ",", "mit", 
       ",", "pp", ",", "ax1", ",", "ax2", ",", "gr"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cII", "=", 
       RowBox[{"getCircumAny", "[", 
        RowBox[{"tri", ",", "ctr"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"o", "=", 
       RowBox[{"cII", "[", "\"\<ctr\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"vl", "=", 
       RowBox[{
        RowBox[{"cII", "[", "\"\<lengths\>\"", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{
        RowBox[{"cII", "[", "\"\<axes\>\"", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ul", "=", 
       RowBox[{
        RowBox[{"cII", "[", "\"\<lengths\>\"", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"u", "=", 
       RowBox[{
        RowBox[{"cII", "[", "\"\<axes\>\"", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mit", "=", 
       RowBox[{"cII", "[", "\"\<ctr\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pp", "=", 
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"o", "+", 
          RowBox[{"vl", " ", 
           RowBox[{"Cos", "[", "t", "]"}], "v"}], "+", 
          RowBox[{"ul", " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", "u"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"OptionValue", "@", "ps"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ax1", "=", 
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"o", "+", 
             RowBox[{"vl", " ", "v"}]}], ")"}], "t"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"o", "-", 
             RowBox[{"vl", " ", "v"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", "t"}], ")"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"PlotStyle", "->", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", 
            RowBox[{"OptionValue", "@", "ps"}]}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ax2", "=", 
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"o", "+", 
             RowBox[{"ul", " ", "u"}]}], ")"}], "t"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"o", "-", 
             RowBox[{"ul", " ", "u"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", "t"}], ")"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", 
            RowBox[{"OptionValue", "@", "ps"}]}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"OptionValue", "@", "ps"}], ",", 
          RowBox[{"PointSize", "@", "Large"}], ",", 
          RowBox[{"Point", "@", "mit"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"OptionValue", "@", "ctrLab"}], ",", "16"}], "]"}], ",",
             "mit", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.5"}], ",", 
              RowBox[{"-", "1.5"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drTri"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"FaceForm", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"OptionValue", "@", "ps"}], ",", 
                 RowBox[{"Opacity", "@", ".1"}]}], "}"}]}], ",", 
              RowBox[{"EdgeForm", "@", 
               RowBox[{"OptionValue", "@", "ps"}]}], ",", 
              RowBox[{"Polygon", "@", "tri"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"{", 
        RowBox[{"pp", ",", "ax1", ",", "ax2", ",", "gr"}], "}"}], "]"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.770426244129795*^9, 3.7704264831101723`*^9}, {
   3.770426602846448*^9, 3.7704267203517876`*^9}, 3.770426769328061*^9, {
   3.770427230111012*^9, 3.7704274218504505`*^9}, {3.770427772058241*^9, 
   3.770427805523904*^9}, {3.770453717868391*^9, 3.7704537856545486`*^9}, {
   3.770455533559196*^9, 3.770455542566497*^9}, {3.770456369817514*^9, 
   3.7704563699611588`*^9}, 3.770478883759718*^9, 3.770479231895486*^9, {
   3.7705923789494147`*^9, 3.7705924389411316`*^9}, {3.7705926069409313`*^9, 
   3.7705926680301075`*^9}, {3.77059286555116*^9, 3.770592904382412*^9}, {
   3.770658523758499*^9, 3.7706585246222754`*^9}, {3.7708441362560363`*^9, 
   3.7708441893139515`*^9}, {3.770844220650275*^9, 3.7708442216496043`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "drawCircumMit"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawCircumMit", "[", 
    RowBox[{"tri_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"drawCircumAny", "[", 
    RowBox[{"tri", ",", 
     RowBox[{"getMittenTrilin", "[", 
      RowBox[{"tri", ",", 
       RowBox[{"RotateLeft", "@", 
        RowBox[{"triLengths", "@", "tri"}]}]}], "]"}], ",", 
     RowBox[{"{", "opts", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.770844193965521*^9, 3.7708443200236297`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Steiner", " ", "Circumellipse"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "@", "drawCircumBar"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"drawCircumBar", "[", 
      RowBox[{"tri_", ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
     RowBox[{"drawCircumAny", "[", 
      RowBox[{"tri", ",", 
       RowBox[{"getBaricenter", "@@", "tri"}], ",", 
       RowBox[{"{", "opts", "}"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7708443355506763`*^9, 3.7708443552544756`*^9}, {
  3.770844510081529*^9, 3.7708445145426364`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "drawCircumInc"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawCircumInc", "[", 
    RowBox[{"tri_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"drawCircumAny", "[", 
    RowBox[{"tri", ",", 
     RowBox[{"getIncenterTrilin", "[", 
      RowBox[{"tri", ",", 
       RowBox[{"RotateLeft", "@", 
        RowBox[{"triLengths", "@", "tri"}]}]}], "]"}], ",", 
     RowBox[{"{", "opts", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7708462179128027`*^9, 3.7708462425849724`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tri", ",", "act"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"tri", "=", 
       RowBox[{"{", 
        RowBox[{"P1", ",", "P2", ",", "P3"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"act", "=", 
       RowBox[{"If", "[", 
        RowBox[{"showAnticompl", ",", 
         RowBox[{"anticomplementaryTriangle", "[", 
          RowBox[{"tri", ",", 
           RowBox[{"RotateLeft", "@", 
            RowBox[{"triLengths", "@", "tri"}]}]}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"drawCircumMit", "[", 
           RowBox[{"tri", ",", 
            RowBox[{"drTri", "\[Rule]", "True"}], ",", 
            RowBox[{"ctrLab", "\[Rule]", "\"\<M\>\""}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"drawCircumBar", "[", 
           RowBox[{"tri", ",", 
            RowBox[{"ctrLab", "\[Rule]", "\"\<G\>\""}], ",", 
            RowBox[{"ps", "\[Rule]", "Blue"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"drawCircumInc", "[", 
           RowBox[{"tri", ",", 
            RowBox[{"ctrLab", "\[Rule]", "\"\<G\>\""}], ",", 
            RowBox[{"ps", "\[Rule]", "Green"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"showAnticompl", ",", 
            RowBox[{"drawCircumMit", "[", 
             RowBox[{"act", ",", 
              RowBox[{"drTri", "\[Rule]", "True"}], ",", 
              RowBox[{"ps", "\[Rule]", "Blue"}]}], "]"}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Circumbilliard of N=3 Orbit and\\nits Anticomplementary \
Triangle\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "Medium"}], "}"}]}], "]"}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}]}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"P1", ",", 
         RowBox[{"{", 
          RowBox[{"0.0", ",", "0.001"}], "}"}]}], "}"}], ",", "Locator"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"P2", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", "Locator"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"P3", ",", 
         RowBox[{"{", 
          RowBox[{"1.5", ",", "1.5"}], "}"}]}], "}"}], ",", "Locator"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "showAnticompl", ",", "False", ",", "\"\<anticomplementary\>\""}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.770631263466748*^9, 3.7706313638080125`*^9}, {
  3.770727014307028*^9, 3.770727065525674*^9}, {3.7708442720574303`*^9, 
  3.7708442720634117`*^9}, {3.7708443772019625`*^9, 3.7708444077187543`*^9}, {
  3.7708462536366787`*^9, 3.7708462608549733`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`P1$$ = {0., 0.001}, $CellContext`P2$$ = {1, 
    0}, $CellContext`P3$$ = {1.5, 1.5}, $CellContext`showAnticompl$$ = False, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`P1$$], {0., 0.001}}, Automatic}, {{
       Hold[$CellContext`P2$$], {1, 0}}, Automatic}, {{
       Hold[$CellContext`P3$$], {1.5, 1.5}}, Automatic}, {{
       Hold[$CellContext`showAnticompl$$], False, "anticomplementary"}, {
      True, False}}}, Typeset`size$$ = {360., {195., 200.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`showAnticompl$1815$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`P1$$ = {0., 0.001}, $CellContext`P2$$ = {1,
          0}, $CellContext`P3$$ = {1.5, 1.5}, $CellContext`showAnticompl$$ = 
        False}, "ControllerVariables" :> {
        Hold[$CellContext`showAnticompl$$, $CellContext`showAnticompl$1815$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`tri$1814 = {$CellContext`P1$$, \
$CellContext`P2$$, $CellContext`P3$$}; $CellContext`act$1814 = 
        If[$CellContext`showAnticompl$$, 
          $CellContext`anticomplementaryTriangle[$CellContext`tri$1814, 
           RotateLeft[
            $CellContext`triLengths[$CellContext`tri$1814]]], {}]; Show[{
          $CellContext`drawCircumMit[$CellContext`tri$1814, \
$CellContext`drTri -> True, $CellContext`ctrLab -> "M"], 
          $CellContext`drawCircumBar[$CellContext`tri$1814, \
$CellContext`ctrLab -> "G", $CellContext`ps -> Blue], 
          $CellContext`drawCircumInc[$CellContext`tri$1814, \
$CellContext`ctrLab -> "G", $CellContext`ps -> Green], 
          If[$CellContext`showAnticompl$$, 
           $CellContext`drawCircumMit[$CellContext`act$1814, \
$CellContext`drTri -> True, $CellContext`ps -> Blue], {}]}, PlotLabel -> 
         Style["Circumbilliard of N=3 Orbit and\nits Anticomplementary \
Triangle", {Black, Medium}], Frame -> True, GridLines -> Automatic, 
         PlotRange -> {{-2, 3}, {-2, 3}}]), 
      "Specifications" :> {{{$CellContext`P1$$, {0., 0.001}}, Automatic, 
         ControlType -> Locator}, {{$CellContext`P2$$, {1, 0}}, Automatic, 
         ControlType -> Locator}, {{$CellContext`P3$$, {1.5, 1.5}}, Automatic,
          ControlType -> 
         Locator}, {{$CellContext`showAnticompl$$, False, 
          "anticomplementary"}, {True, False}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{417., {240., 246.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7706312606802254`*^9, 3.770631301090848*^9}, 
   3.770631365096572*^9, 3.7706661622529163`*^9, {3.770727030529172*^9, 
   3.770727065651308*^9}, 3.7708012005629497`*^9, 3.7708025714120903`*^9, 
   3.7708093955409365`*^9, 3.770832279596158*^9, 3.770838326314505*^9, 
   3.7708423354302826`*^9, 3.7708440981119585`*^9, {3.7708442861671953`*^9, 
   3.7708443212399225`*^9}, 3.7708443571993093`*^9, {3.770844391713538*^9, 
   3.7708444081755676`*^9}, 3.7708462612788415`*^9, 3.770882529149654*^9, 
   3.7708865585879564`*^9, 3.770894621803344*^9, 3.7709344698305807`*^9, 
   3.7709361256389923`*^9, 3.7710256415081377`*^9, 3.771159272905558*^9, 
   3.771675530892414*^9, 3.7721372079714556`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"CloudDeploy", "[", 
   RowBox[{"%", ",", "\"\<circumbilliard and anticomplementary\>\"", ",", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7705915451455326`*^9, 3.77059158116769*^9}, {
  3.7706311466144123`*^9, 3.7706311499803815`*^9}, {3.770631209516303*^9, 
  3.7706312145976934`*^9}, {3.770631386860409*^9, 3.7706313987256927`*^9}, {
  3.7707270694222336`*^9, 3.7707270780272627`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Isogonal / Antiorthic Axis (to get X44)", "Section",
 CellChangeTimes->{{3.770739052902193*^9, 3.7707390758735695`*^9}, {
  3.770936128158272*^9, 3.7709361293261375`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getAntiOrthicAxis"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getAntiOrthicAxis", "[", 
    RowBox[{"tri_", ",", "exc_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "inters", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"inters", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"interRays", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"#2", "-", "#1"}], ",", "#3", ",", 
            RowBox[{"#4", "-", "#3"}]}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"tri", ",", 
           RowBox[{"RotateLeft", "@", "tri"}], ",", "exc", ",", 
           RowBox[{"RotateLeft", "@", "exc"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "inters"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7707378990199823`*^9, 3.770738023459613*^9}, {
  3.770739109195547*^9, 3.770739111164284*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "drawAntiOrthicAxis"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawAntiOrthicAxis", "[", 
    RowBox[{"orbit_", ",", "exc_", ",", 
     RowBox[{"showConstrLines_:", "True"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"aoa", ",", "gr"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"aoa", "=", 
       RowBox[{"getAntiOrthicAxis", "[", 
        RowBox[{"orbit", ",", "exc"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FaceForm", "@", "None"}], ",", 
          RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Text", "[", 
                 RowBox[{"#1", ",", "#2", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1.5"}], ",", 
                    RowBox[{"-", "1.5"}]}], "}"}]}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(P\), \(1\)]\)\>\"", ",", 
                   "\"\<\!\(\*SubscriptBox[\(P\), \(2\)]\)\>\"", ",", 
                   "\"\<\!\(\*SubscriptBox[\(P\), \(3\)]\)\>\""}], "}"}], ",",
                  "orbit"}], "}"}]}], "]"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Text", "[", 
                 RowBox[{"#1", ",", "#2", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1.5"}], ",", 
                    RowBox[{"-", "1.5"}]}], "}"}]}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(X\), \(1\)]\)\>\"", ",", 
                   "\"\<\!\(\*SubscriptBox[\(X\), \(2\)]\)\>\"", ",", 
                   "\"\<\!\(\*SubscriptBox[\(X\), \(3\)]\)\>\""}], "}"}], ",",
                  "exc"}], "}"}]}], "]"}], "}"}], ","}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{"Point", "@", "aoa"}], ",", "Thick", ",", 
            RowBox[{"Line", "[", 
             RowBox[{"Part", "[", 
              RowBox[{"aoa", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}]}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"showConstrLines", ",", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Darker", "@", 
                 RowBox[{"Darker", "@", "Green"}]}], ",", "Dashed", ",", 
                RowBox[{"MapThread", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{"#1", ",", "#2"}], "}"}]}], "&"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"exc", ",", "aoa"}], "}"}]}], "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Darker", "@", "Black"}], ",", "Dashed", ",", 
                RowBox[{"MapThread", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{"#1", ",", "#2"}], "}"}]}], "&"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"orbit", ",", "aoa"}], "}"}]}], "]"}]}], "}"}]}], 
             "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}], "}"}], "]"}]}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.770744220261716*^9, 3.7707443626746645`*^9}, {
  3.7707449565571165`*^9, 3.770744956771541*^9}, {3.770744998575801*^9, 
  3.77074499995708*^9}, {3.7707458062973704`*^9, 3.770745809399081*^9}, {
  3.770746035606228*^9, 3.7707460385912533`*^9}, {3.7708972308227053`*^9, 
  3.770897238519134*^9}, {3.770897597255247*^9, 3.770897619719241*^9}, {
  3.7708977098067155`*^9, 3.7708977318238735`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "getAntiorthicAxisFoot"}], ";", 
  RowBox[{
   RowBox[{"getAntiorthicAxisFoot", "[", 
    RowBox[{"a_", ",", "pt_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"o", ",", "s", ",", "exc", ",", "aoa", ",", "oaFoot"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"o", "=", 
       RowBox[{
        RowBox[{"orbitNormals", "[", 
         RowBox[{"a", ",", "t"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{"RotateLeft", "@", 
        RowBox[{"triLengths", "@", "o"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"exc", "=", 
       RowBox[{"excentralTriangle", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"aoa", "=", 
       RowBox[{"getAntiOrthicAxis", "[", 
        RowBox[{"o", ",", "exc"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"oaFoot", "=", 
       RowBox[{"closestPerp", "[", 
        RowBox[{"pt", ",", 
         RowBox[{"First", "@", "aoa"}], ",", 
         RowBox[{"Second", "@", "aoa"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "oaFoot"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7708012960068455`*^9, 3.770801373486461*^9}, {
  3.770804151253446*^9, 3.770804163922619*^9}, {3.770936234168648*^9, 
  3.7709362637708316`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getCircularity", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"getAntiorthicAxisFoot", "[", 
     RowBox[{"1.5", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"toRad", "[", 
       RowBox[{"t", "+", ".00001"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "359", ",", "1"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.770803877896897*^9, 3.7708039083376446`*^9}, {
   3.7708040221146617`*^9, 3.7708041170827675`*^9}, 3.770936262480462*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"n\"\>", "\[Rule]", "360"}], ",", 
   RowBox[{"\<\"ctr\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"min\"\>", "\[Rule]", "3.3620499351813424`"}], ",", 
   RowBox[{"\<\"max\"\>", "\[Rule]", "3.5430749027716693`"}], ",", 
   RowBox[{"\<\"mean\"\>", "\[Rule]", "3.4507825819877342`"}], ",", 
   RowBox[{"\<\"sd\"\>", "\[Rule]", "0.06407592251182345`"}], ",", 
   RowBox[{"\<\"zscore\"\>", "\[Rule]", "0.018568519166140617`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7708039092831173`*^9, 3.7708039836195393`*^9, {3.77080404608943*^9, 
   3.7708041177928686`*^9}, {3.770804159017697*^9, 3.7708041657351427`*^9}, 
   3.77080939585014*^9, 3.770832279912306*^9, 3.7708383266406627`*^9, 
   3.770842335735467*^9, 3.7708825294518456`*^9, 3.770886558918147*^9, 
   3.770894622102557*^9, 3.770897735068175*^9, 3.770934470112794*^9, 
   3.770936125924229*^9, 3.7709362705504255`*^9, 3.771025641804346*^9, 
   3.7711592732256947`*^9, 3.7716755311905885`*^9, 3.7721372082866077`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"oaf", ",", "x44", ",", "x88", ",", "o", ",", "s", ",", 
     RowBox[{"a", "=", "1.5"}], ",", "lab"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"oaf", "=", 
     RowBox[{"Quiet", "@", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"getAntiorthicAxisFoot", "[", 
         RowBox[{"a", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"-", ".0001"}], ",", 
          RowBox[{
           RowBox[{"2", "\[Pi]"}], "-", ".0001"}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"x44", "=", 
     RowBox[{"Quiet", "@", 
      RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"o", "=", 
          RowBox[{
           RowBox[{"orbitNormals", "[", 
            RowBox[{"a", ",", "t"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"s", "=", 
          RowBox[{"RotateLeft", "@", 
           RowBox[{"triLengths", "@", "o"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"getX44Trilin", "[", 
          RowBox[{"o", ",", "s"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"x88", "=", 
     RowBox[{"Quiet", "@", 
      RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"o", "=", 
          RowBox[{
           RowBox[{"orbitNormals", "[", 
            RowBox[{"a", ",", "t"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"s", "=", 
          RowBox[{"RotateLeft", "@", 
           RowBox[{"triLengths", "@", "o"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"getX88Trilin", "[", 
          RowBox[{"o", ",", "s"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Darker", "@", "Green"}]}]}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
    "lab", "=", 
     "\"\<Locus of foot of origin on anti-orthic axis, X(44), and \
X(88)\>\""}], ";", "\[IndentingNewLine]", 
    RowBox[{"Legended", "[", 
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"oaf", ",", "x44", ",", "x88"}], "}"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{"lab", ",", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "Medium"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}], ",", 
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Red", ",", "Blue", ",", 
          RowBox[{"Darker", "@", "Green"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<foot on anti-orthic axis\>\"", ",", "\"\<x44\>\"", ",", 
          "\"\<x88\>\""}], "}"}]}], "]"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.770801378439427*^9, 3.7708017449346232`*^9}, {
   3.7708017786724606`*^9, 3.7708020406010914`*^9}, 3.7709362630170245`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
VSBVm4WNvse59lO60WxJzQI2ZOHaf3qfQFgnqjZ9hC9ZsbANZ6NmsUYnwmnl
by/ZsHBwSu8Oo9EOdEJd3dXYjpDf3z994WAH8mRmX6A4snCP6EGVc81tyBLJ
nfFxZ+GHEoKbRoRa0KnrD5/cDSH6Pvm/Lld9m9GziqqvIIzoE3PfOs/0NqGk
qibj0QiiT3TMYlJCGlH3Kupa6U8s3PLU9eUEsx7tO7ju18jy/zszXlAun/+L
BNZvYoMUFvataCptzKxDKvdrO1x+sLBgV9mftOu16Is/1bg0gzhfy62rpxur
UITwG7+83ywcolRcm6FQhX6P8n79kMv6XxdnHk7V9zXwa7jzpaQiTaiEL4mQ
UHuXEkWpJKSoCBlCCmWeMlaiQogyhQyVoQz7mIcUIWQmMme65uk99/fn++fn
WXfds9faa629zrPP3liVufahXc+bkHVjuJt1NQ1LdjVh/63aiK6rHeBtr6Vh
eYbVEYfiGtABjeyeRz/wumq3xSxo+SfapXD8Onc97i+HqHGFzHoUEvXEloL3
uZNDcRVBtHqkzSdHt2miYYQWTdmi6h+I0znFoPoX/nz2+YE1mVo093Vd8kIr
vg746cq8HqxBt5elstx+4/L0E/OyUdXIcLJu+k0bPr89dMsbxEqkCw7lZnfg
8nciBswv5ahT+aNyaic+noOqp3ysy9CpQ/y+z7tw/yoInd68pxRJ3g0Ls+jG
+ba6R1xLMcp5o2Iu38M6Hy/JKxmEIY5mKeIMzoKjRxSsPYrQLW8t8zh8HYp9
8vSB20g+8nYJeHm8D+c0391PLn1BvMyM4MY+1v4an21kQQ5iOrmfv/IH1/em
vY/f9xk9Xk/uqMUZzrMRPzzJQsmNpXKy/TjfmfE2nfiA5t/qXg1m7edlRx21
K05GVx06NFtZ8j7P9Ieh79BobhbXlgHcXueFd+zfolC6qOhrFdZ+oKnDSa67
zxFxxHnuFouDzUwkRNzRomPb7gcs7mcfYZy+CdLSdfn+d77/TrX1R3V/kI6t
dNxlccXHpDrCK4DBLzZXWNxGWr2RHguydlg3HGSxL1+0fkcCEH4zxLbCGg+5
5sgFWipIsf6zloczVqifJrwjE3Q+IVWbsu4HoMeC7Z8+AnOjQUMKS953Ztum
M9ngZyylNBK3392ibpnUmwv0LNqmduEcq/Ho/aLDV6B15OtoGO4/jGnTP8xd
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
6wgCjQuGhGUdBtbj8vDqxGQG+P/3hf8fRAKCIQ==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        LineBox[CompressedData["
1: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
pD+4cj4ddRkkJtt6CFT6IM180i8dnzkeUMNeAqvZ/juSfywdnwx+MDfrJ7BJ
cFX7GZM0HHN/LmE/RGBujkq9Z28Kdutxq0aMEZjGdfDtMHsSeiUVtQuNE/j2
BoPkl9yveOxr+zYk7ba6R9jmzlc0mSpoL54gcNOdpJHtxV/QdGr3j/gpAv+e
vmSWyPIZ/75YdZFrmsBtOZyFoo8SMbzVyciDtO+BtLivbQkYt/baYW06gRWl
9Ku3UuJR7sBR+i+CPL/K/UGPB7E4qVrwinuGQLn9iTtFB2Lw/B1hFUvSvpNX
fmTqx6Ces+V95lkCk49LzJzQjMbUQgb3w3ME2u3n5w049wlnClmFb5MeuCh+
y78iEnc95/OPJZ28vr5H9XwknvHwT+aeJ3BtnfvnbqMIPGj+etsU5cXGu0q+
4WgpksJ+YIHAM6vztG5zhuN72qtJHdJNTkbOjyPC0Ox1j3c66RV2BWOy30Mx
2yKMRW+RQPNnl13vr/6Ap+ufNjiSvs94T+SFQDAOSy/MfyTdqaDOddYgCDUY
mYJ7SAcp35y9+Os9trx//P3iEoHfC+93ahW/RSmH94sWpJOODfddYX6LEz4R
6zxJu+icqs+/7I8XLwZHpJLW315a77rgi1a/a1V+kS6aMThWo+GL27Z7DbeQ
3l62c/Fq7BvcKRAmtPIfgYrJ4eVs11/jat12GgvpEzZJKgJFr1CS+3LJHtJ1
0XtP3uF/heOT4TNAejftvsfRFS/Ru6f51D2qn68pIn/Tu2d4q1G7xpa043R3
+i9vL8yycvztSpqWU+14yd0T1Z+bzb0lfSlolVKijzuGsLWdCSVdKvnfGd0A
NwzsNJmLovoB2Z/2fIh1RWmFzH+p1PW2evpntjhjuNRjre+kk/6wlT789xTj
w0EsjzST72Hm13xPUTQuqP43db7C1ptpLo6oW+3nX0X6wOFbsbLWDugVcGWp
jnS1qSLTfZo9/k7f0dhCemdNLFxcskF/aQatDtLipxP+Nfo+xosj7927SZsU
rBWUFH6EclenH/eR5rc9pXuvzQp3Kk4fGSQt2zixWuPNQ1S7ezFqmPS1+0w/
8tUf4D7/rwNUf2BjcyBT4jZL/LOyv36CdIo58zfbXAuUiRT2oPoJZ5xiFNUV
zPFAtz4TnfSAqMbn77vvINeYvDlB2jh0X/SaDWboE5wQO0O9n5kVglOrbqGb
gkAB1Z8o/OqimAbzTVRLVcueI/3tw3xkz5HryD56O3CedParP2dt9IwxeGfp
Faq/cdonrrYh0BA9VswtUD4qn2O1ab0B5jy95rFIWvrXK1fGNVcwa/YDA9Uf
Oc9zfS8vuy5G2h40pXzsXqrKJpmL+MnCIp/y3sggPbNn5/HYnrLNVH/lEfv1
Vl2jGuih4EbtH6FYrwSb8F9VTPSvdKTM/1U4xHSjEhqerYihPL12j+MXC1ls
9vctodwZev2A2gYp1Lq5h3oejr4MQ/+4Yk6hUbQptX+DEluEssw+CqLtgNr8
cn+ovtTCsRW82NIYudz/efv9ni0WI2uQo0Bw2bnq6nI7/Zihnj2O2t/Bh2f3
jdud3wcnGrOo5+H4xqrG8HO1APjyMfRT3uSU7cgaKgLdXzc2Ua71udnaw3oG
3p0w+E3ZXvGZX9VbScgftP5O2dZ5Q/+1OWmA9blxlB9Ut664c1wWxvlD3i/3
t+bM9sdKysN4gxm1X4BKVvph7fsUYbDR6hHlrLVx/FWdSvAkZy21n4YbrNPf
ST46By7tHxUpW5eX/fh6TA36zQM5KdML2ghdSw0w21fPSvmo5gXr9GwN2Lvr
yybKvDtEih/NasCk3bENlLlXmj5by6sJRicvUPsnOHf3FVeJhCbU2exc7s/t
EGh+e1BJEw4zOC77o9V82ys5TTB8ZEHtz2A9o0DE7ROa0NfYSu3f4CufBzf2
sWkC5qRT+y8YK1HodKBXA5R+d29dfj9MbgJdsRpwNrt2H+XZiP1pJzdrwG7z
MnXKrd9spC6+UoVu751XKDP25DDoPFYBxZwSav8JWfe3pnaqnIMy21hqfwq5
js35SucoAr9jALV/hQ0xm1tn9BXgPYcutb+F22GLNUGTgzdOv6n9L9QNufkz
ulsGDBwgd/l+mbJ7qClLQ3Dr2uX71yLEUMP3SRJoe9bVU1YrLW67OiwOM8hH
7b/ho+LAmT+PxIBTUZXan8PH5SZzpZMicOmDCbV/h8YJrV3y+kLwZ6sxtb+H
hrevfiizOQbm4UeW+61vmooLveQ+ADMSM9T+C2Zfz2MKZeOGzAtSy/FoMKcV
+qiLCXjJaFt+P6l9ZuI+adltJ48teyj+7kXRz8w407e8340bg377djlyo876
rhnKTzTSBbg+HsDIIw8mKb/gX2VwRE8A3e6/GF6ON7HsYLUrJ3C/tVw35a/h
DzsGNE7ib+3Pfymn6sit7hU5gxW+3dR+KiYUHjv6arUk7lqxhtpvxYiXzunf
OqVwhY9QOuW+Sp3KcykyuIf37fJ4Dfztfy/WWhYbbsV5U9Y0t9jKXqaAiVey
7Cl3J12//eOyEsoLZd+lzLZZLNCgThm7rlprUH6pv83G8akqiurN7V5+P69q
mW4qaOChyjL25etzAQd7uAZey9Vejq9Nh4VWFg5o4G3FouV4Xm3W/freLk1s
4VBZjuc/JhnbtoImxp9nXo5f9QMWChFKmjh5+fjy8edGNgeYJDWR/8Hv5d9/
EenZJ0n+/u7Lo8vn/1Anl7u7WwPDvgdxUF5cdaTZ+6UGrn1WsXd5fI877b+2
RwMZKi5KUVatbVY+16WGx/vOaVG21Isq1tVRxYVHDDcpK2vySHx+eQ453Zmp
fgfkKf2Pt8RNCSPC5qn9bzyjvC2f85QCEuIHoimviC3t3BQpi8kdzT8oZ96U
eThbJI3iuySW+9eN7TY5aUsAqukqL99Pru1MGwvVTmLQjabl+atLVFkxLFsA
5ZveLcdLYlfMkhEjD6qKLS3Hk1rGqrta7xolLGo1lufLPWuLT3Ms7IXh22HL
8bLf2D+vU+sE3Hr3g9qPxN8sr75wmAL415xYfn3HLwwMOX6UBX0V1TvL87Vy
UY7njDKkGKzetXz8DadKxmUN2JOxlLbcT7+55ubv8fMgu8v7BOVT+ZGdwjmX
wL098DWVXxjo+1LSivVAtTPtN5V/Hk0GxHm7GcCdkzMtVL766qC1NqDICB5d
XpNL5TONC3demB+4Dq7dayyofHddwe/N6tibkFX+vpvKj6ZH02M1VExhWKRu
G5U/7R7nNV9gvQNLr/hXUvn1jLVD0dZFc+jRfBA4TvrXlezOMtd78F3eqZ/K
z58HZzdf4rAE3ZdVdUOkZVpHFMN/PADxFUE6/VT+o6tzC1lZwd1DWreo9YDp
6GF2X+lHsG/s3WwbaQ93lSyNvTZA6AkuUf3+BUnnc+Y57ID3SO7RCtJvtb0G
vu5xBIEsU/Fi0tsYFuqiJZyg70mcaw6V7w7n18reeApRh1no6VR8l1Wf/BPg
DEUjNNtE0pc2SB1O/eMC907Lroog/f0z+7cjfG5Q7Jdg9Y70wBq7pncO7lCv
GldgT3q3VVdjtK4XuER/u32Xmr/U0xpWtTwDX+53gVdIt6WV1vy44wO+bfNs
oqSf2Vx0HbjyEspNNu3ioT4f2Zyt82dewar58kMbqHx98z/O1byvYdejz8nV
5PpR7YBacRWjLzBVfWxKJv3RfUl+9UY/2DUVdfU16TO2e5c2sPnDtjN2iXKk
E/7c+PhY6h1sm01m4qK+j1Apck/vRgD8DLwzNUKud+M/b5Zf7fceFM1uKrmR
PjMuaBzJHAwn4n8dP0c6yUi9eu/VD/D+/VPvTaT797p8vZcWAncXf2s4kett
wR8jCufOhoGVAgOzEGnpeEWRpwzh4NYp0d1Krt9/nI7MTSoIh6vri0T3krZg
2t0YeiUCnuw51ZxJrv8X0p/c/SwUCTJnNduVSD9Sm/mpy/wJenZ/XatJ1hMK
S3Hywq1RkLdnzaYRsj4Z8HyaRa+MA8lM8Z0nSUcvXL3R0R4PfI2vv1iR9cwq
daKoYyYBRGUzTpZOEtj+Gn/Oc3+B1F0H7NrI+khTl3fXj4wvULwuqLWLrJ8s
5/gj6NpfwWed3aYMGrkeF5yVlQ9Jgq3WeVnuo+R64JgwvldKBsbeXcrSI2R+
OZV+qG0uGeCy506rQXL+2PeT+btpKtj5n+n72kXOh4adl+2efYO7gSUizWR9
uN5+wxFLrQwwKEzMHWwjx4+pvVU0dyZU13y6mNhEYI2XvbFKaRZIPpfeavCH
zGexKL0U/R2qc7nu0erJ8VzhzW7h/QPkb5jcCqkivUNzLc91BJm9wTNZ5eT4
f73/ndaRHBjDqfWJpeT6226TqERcDvilbrm8gayPteNtJeu+5IKHzCfr86nk
eu7clvkjPfnQ7X7fqe4LWd+t7TimalsAz8/tH90aT9bf34ldIlsLwb5/evZn
GFlva1y9mHL+J8g5ChwSCCKQxdB0u/XcT+gvYWhS9CfHL6PZU92IIkjtYvhq
70mg2aB1f9vqEpDYZJP//Ck5X+YzzH7JKoEbtUmHJWwJ3NUmXr7C+hdcWyd9
wtiMwNCNG9vt50vhTmbU431y5Pzdt2QZKlEB5etaj3qdJufL7cSx/zZXgrvZ
r5N6AuT4tngTb+pQCYY5LbEHOQic2rlPRMq0CgS2ldawbSTXI9IjW6q7qsD/
EPHr3CIdOea+/xMxqAbRCjXBJ210LFbezJRgWAM1a5M2X6ugo9JW3bd1vTXw
7InQc/NsOl7x7uleYV4LQRaBPKUBdFS9ur/ey6MO7ESMnaXO0rGLvtrYrqMB
WmX6P6zmp+PI4wdXyhwaIW3350Y3FtINU9o3ef6Q86mxjVfTNC4yeZ/2vPsX
jvAclxj6MY3HjJp8tu1ogslxqZqSD9O4VV3MbL64CV7dXuL9dnkaN+3WOZAj
0AIb1Dp3hotO4+VsIuP9QAuMxzcbZG+ZRvpN/54fka1w4lzvsdM5U3h1z+2F
ZtZ2uJT4K7lj1RSKSDvZ2UV3QNOB7ffv/JrE3BkG76M7OsF79C7P6ueTiDfP
BFr5dMI1IzOHmo2TqMxcufXuoy6gn54pKy2cQB0xmdB+WhcwXxXwUbWbwOFM
ZcYXJt3AbDEkf691HFVGjjlX6vXA7aCYgkrPcQwVK8zY0dgDRvwOXGKC43gr
1uL3qFYv5Ddk3fpiOYbPn3Bq3jjXB0v+WxWcN4+RdX9Z/9viPti4/3lVoyIN
/f6ttTY/2w9+1rQVUh4jGFT4p3/+1AD45IUcexowjCOxI3qcyQNQcfVWm3zY
EO4oDGVMOzQIgpsvyliHDOKV0ZgHVqGDENIjeWLxzQCGhahwrWIbgrIV2v/K
n/TjpQsxBUsuQ7D348oTQ/p9eOk7Z9H6ySH4ZunPIbCmB5eYaqLSCoYhsjZl
37OSLnRSjNjlvX8E4qSupvu7dOLvI0eVa11HgJXVJ8VLpAPHvhQM8baNwKaP
hj6XsA3D7WOqWYVGwZwv4WHQihasXzHxTdRpFGaFHVzCBf9iak/R7oMloxB5
OoZLQasBNVkjxZ0ZafAp+KWH241aLLkaM9V9lgb1ol5e929XoXdbXPm4NQ0O
XPu1x/r3b5SuPzmv+ZEG10ZKOC/E/sSsyyrK337SoPi/mArJhzk4aH6J708H
Dfq29qmoG6Qg5+omy4dTNIANKlGrxz+g1taJB9pLNPjHte/g+PAb+PTkkKfa
PxoYqv395IBf4YS36F8JggbNcu63UzyzoXe7y+CmXhoYH4lusowpBKNOjlVJ
pTRYEcSvvpHxNxi40u35o2kwKaNz9oVgFdhz5A162dIg95P48YBLtVDi/Pi/
PlkatDHTWe48agAlhl+fb6yjAb8On4H+i7/wIuK57umcUdgf0zRcHdgC5p96
6sIsRiHa2pdjl2o7hJ8+6NfBMQrSAUcPvi7qAPPFzgXljBF4ovprxO9UF1Tl
Ofqc1hyBV91Sz90+dsMSwU1n6R6GjNHLrBWre0EiTYTtjPkwKF1kOD6g1wdR
9PU9fFNDoLOz/UchbQB2PfsXtn1kEOS52oRKDg7Bzk2HZdmNBsn11sMn3DrD
UM3q/CeregASv/nyzvqPwqrwlotz0f1gcorlqmgkDXjrzep9mPpBg5/zH/f5
MehQS//0w7IP2swNam/IjcNxma6oMpFeSLu/7tjg53Go/nuM/1RYD/Dn5NrH
sU2A3rDQXfaNPfAtZkWcUOUE3Ov/9s+itQv0N5xUPrB/EkwLZHQ9Fbrg8Z3S
uNTHk+A+bS+imNwJQUKL57ewTIHwj6WlgmcdcNXD3Xj3pSnYeZzdeGa2HTwi
w3bKvp+CayzfpPJutcPhiniua6zTEK7k/ysxuBX6VT2EI5WmoZ911+iIRwu8
Kfiz3+fJNEw7b8a4R81Q5FIg3NU8Db6K24OCbvwFz1uMbwPW0eHU9K3RU9f/
gHXKlf/cj9FhIVbrxOFbjfBFvEzwtTUdzte+tPZzqocFjjrXybd0EM6eKpX1
r4O5bNf1rGl0YBGvd874UgtrghiIDcN0MFvpnMJDVEOt+6LrztUEtF6Pf8m3
txpO2tta39xBAJ+6oRzzhSo42EcMMkoTsMqJ7sPmVwGzzJVNb7UI2MNyonIn
Vzm0/jn9X54xAb8jLknmJ/6GueP/dSo4EjA+//2cHb0EhFPxaKU3AZ+0tXw1
44rhdVY0q9I7Ak7m9UoqmxWBL88tN/148no8vAFr/iuEK9/jfHamEhBss23x
3nA+yI3oHGP9QcDaSqEm7YY8sPZ6vK79FwFsW9f1/CrNgaj9LLbVlQSEOXdc
Go1ByF4ZwiZUT8BGw0iBhIofsCeeZrmpiQCJGxXppuu/Q+93VrvbbQS4p97Z
ma2VCQzyvZd1uwh46uwWI/71G2x2s/Fv7yVgyxOONQ7c6XDmff5S4zABHA+L
jgQdTwHRKBmeyzQC/JdC1cNrk8Db4/Nbv3ECOsOlVdDtK5gE31/5YpKA95cn
RzwUvkDms98uKtME/DLYt3hIKBFqxotL6+kEGBuK1hATceC/m2ATmCFA/e3v
sKiKGPBaKRN8fY6AHaI25x82R0JGwD8jpXkCfNczwxxjBBjbNMowL5Cf1x4B
IwGtcBBb6o7LJM0vuLhDPSUU5Nx+Z5LrRXAbfvhp/+UPYKlYoFBC+o/JP1YL
u0DIV9EcOr5EHnfS/0r/9Q7+42mYfUY60+jiwBlZfzgy3/aqnnRxHbde8cAb
yHj62IGV6u+k5fKX5b4Ch/U5M7KkQzd9XaXn8AKuswhbmJPm6P5RtLfgGUTQ
egRekd6mGLRNXs0DxK0tDeOpfk4Z1eA9u1yhNXR8bR5pFla1TTuOPoWr90LX
1ZA+VEQfODb7BO5GOxxpJ72VY/dGzs02sNk3+8Ag1c8p5vmt2+8hzBpseE31
Iw4EbHjp8eweKAulDlP9jJ+7XpzgqjUDm7O/o6l+yKYXI8HMOtfhjsg8L9VP
6bc0onP+pD5c+27wheq/NOU05bPcfwES4iWp+h103aTtfRoV4NeTwOV+U+dT
/zKJciF4cThuub/0ecrrAhWNrXhUW265X/RjKeMr+iox3OJ/iHreBba3WGs0
ZGVRLP7oPcrveEsfKAcoY7j+FQnKSukHc29uUUe2z7PbKTedeqeu6KyBG2dv
/68//enOuz4nNDE4fveyZfvD/xiKamL9BvFtlONqfrN0BGugjanRCcoOgW8v
s9moI4OjmO5yP+3tNIuhLBWc7V293G9+YenT3640RawxZkygPLYnebJ2vSwq
bFla7ve/f0NMrjUW0Pa7MlX/wkzfgmq04wm0DdFa7pcN2RjNeDuFBzlD3vz7
3/XSSnIZ10Puvuxpyp+c5osr/I7A+Zjs5X5t9x+3bPROi8G/1jikvFjt0lDk
Kg1GvlHvKKuE65Tx2sjDrh3x1PMQYHFTus/VoAy23PJylLdHsT2YfqQGak1S
y98HYP+6eXpspwb4iIhQz/NgRcSzL4uLGuD6Z/n5BrzM2nsvREkTLsc6UM9b
wfPPok3BuAaMWZ+jvo8Pl7ruVyp0qIOO8Udtyso3RfX6N6nCaf+zzykH9Div
HwtVgC0/Q6nv/8Ma2cCmv9pS0Ey0Uc+TIGZt+JtzWwVg12DVIuVr+tciFeQ5
sdm+qJjySh2rMOWDUnjl1vnlfvCnSdFmOxPVMfzeDPW8GDYudqT8ZdVFOZ3P
a6j+3bf2WY2Ot42QPfLGBPV9FL6ACy/uepggKFy6R/Xf1tzKELe4aY4qpxU5
R6n+1x4x51hPS/w6EWvVQ/WrLs2JMJRaY+D7D9N/SJtJGMZm2tnhgbHGSer7
OL0vljLHqhyxy/F6Sjo1XgeiTH6GO2Pkfwr6IaTDV3o8tUh2Q+Fvc0uOpJ8E
sgy7r/XCwKQi+8tUf+uVI7bxH3xwomsh/Ajp8suDb6TxJa4LZPxL9acaP+0p
vbLqDSaI2sV8Im1uKp0w+8APk0+sbTlHekb0klf91nd4+/OlxXZyvjmr82hD
Zt975DMIVjIgbaagLWg+HIyGKtFpReR8VfqaQ7TrdShOvWxsZSUt9EKv6JdS
OEYEflojRc53VueLmpp2RWCjc8tGZXI+NK3e/Gkt8ydk2m5/68gsASapWT3i
u6PRLUmar4sgoMWwvsJKJRaFF+urbpDzq7bpKlp0YDwa3w2xTZoiwKfo8HwZ
42eMfXw8FifIeKhqrhkr+4LD04LlDKNkvqriYul9k4yzQVnVfEMESPYGT6uz
pGKCZ9yNkT4CtNpjCr5+TEOTL18blLsJeDH64j9PhW/Y2d//WbSdHG9MRXCR
IRO3m/TGRpL5Rlx82DSoPAsnZVxjPcl8VOzj19bw5QfuXorNeELmL88VIbZs
TTl4g8mr+34+AQbGfvM7RnJR2P2E0McsAo5sWGv/hjEffW0z3y0lEeAlN+38
TagAjydb99+PIUBs7EBSnkkhqtnG/Br+QM43m03M+mN+Igs5r198Q45H9iCL
K0QR6towrIt+ROYfjtnXU+m/MONNKO3KLer7RcUjtw//xsK73Bh5icxXt84s
tcWV4VIryz+74+T8mvgjh920ElM+OLZVcZHxpS3MvUOiCsWkTj+VWUPAq05F
858c1Xj/g4v2TAUdPP8LMefqrMETg05J01/p0BWy0JhVWYvNoX9FXV7R4XrE
xPfRwjq8Ofk3I1OBDjmHEwN/5DegTOpkOQs3HfY3FAdz/25EpxbFB3pT02Db
t5c34u8f3HVyt+mON9Nw6ozwaoUNzSgrHHL85JVpWCG/9HLsQAvO0YjO93un
gbf3xboSlVYsCc4bcIiYgmhFqbeNmu1okNYUHHd1CuK3/JReHGrHGJvGt+Zs
UyD6yZR/0q0DPeY/wa77kzB/v9ZYLbcTfxIuOt+3T8KN6u0f9xl0YfZZqdu6
3yeg8M9fIv5fF65R3e28Y2IcBqYPB5tDD/5xSn25znUcpokE15HWHixtrP/4
jGUcUgeqjoTb9+J7R4eDPDvH4LVJqsFSWh9Ouj1+wyNHA9Uj37RfyvUjQ4PJ
p2sKo3Dy1qdiWk0/XnmbmcohNQL+25O9M68OoANH6L0LAsNQZ8LA5dM7gDWn
fOzE2Yfgp5/L4VVmg3jn07ncpYkBqAvyUf82NIgiJwsMl171wfZHZUka7UPI
5l0XUH2+F67v31d8X2sYY9M6E+KYeqDJX4FHNXcY1+tmK4zndQH/5NJDz4Mj
OGv7dhO7eSd0G50pKH82gnMiatvfsnUAx9zzjWV9I2jQ8L6QfrMNhqPKV5wS
H8VZxn1EZGAzvKxmSy97NoqrOPqv3S78A7MzO06r1IzirVRREc/eerAzVt3l
xEpDpQ0r5uVX1MK13QdpYudo2LDjiNESaxUIBaUEnbenYWzofAir3G+I2vQk
/8snGt5Qac0MuPITVAVTO8WKaejAV+Orcy8H3lZEPerroGG5uH7S6fWpsE9f
eW3KJA1912ryfTUKh+vWa+c+LdJQQ+28+WSXCxbsu/W04h8NF47LBbSkx+Px
37OKsnM09DoYdbZgXSay6kTvPDBCQ/HHT/zsyvIwV7PRIaSRhqaP0lbrexRj
HE3y0N/vNNTuvCckebwc1f+vpfOOp/J//3hpGhWhUklSmpJk01X2XqmU0dAk
KVtCROSjJCmRpGRkkxFy2SNZ2XvvceyblH73fb4//z0f93HOPa73+31d53q9
X8eDx3VDEA1bMqUPP+yrwZFVJr+t79Hw8LbRktOf61C+7Lmjzika9jJ5L7he
bEQPmW1JQ4zk689luF5Z1YLTIfNX3CsmMItz2IwrtA1lYlfk3yfvn+gzCR3i
SCey5XsXrZCfQO2S5W9HG7rQ8t5j+8fEOAreqta+srEH48o3GWhEjOPtIgWm
6zf7sD70gt56Ygxf2+wN6PDsx89ldZc+knV73wWP0v0fBrC6Y/PDOvExpO2l
WbenD2HclSvfle+O4vHsz5fF04cxXWTDjUNrRpFpTLz2ZPwI9nF9cux5O4I5
yrEiDo/HsJPvdOfv78MoG8f6rObKOPr88n86oDGMij1neLnFJ5BZjHs9tg3h
TwysZ6mg4arK6IlDC4O4Wb5s+Y/CJKpL3jM65jGId75+zkoNm8SYBe+PazcP
YrKUY6qi5hTu5bH07D88gAHnr/3RCJ3CywdCGBS/9eOJvazcc2NT6Pky+sh+
pX5sLPix3ct5GqdZV19avNaHzK3a7186zWBVEPOe3bE9uJykuIo5awbTm2SO
TYn1YMh9Dl+XuRkcWieica6oG79N3VtquTKL0xLrbA71d+GM2GqRf/6zGNrs
0f7Nrgut/8zwBRXMor9Tu9kuli6s6POyj9gxhx6PhjO5bTrwcDWMasrP4cwu
1x9nottRIPL47jbTORxltTh7v7sNT+qE7GZMnsOC3NNRjkatyHqivFv88DxG
3Ts2OurehMl2z+TfKsyjXICriH9TI+rZy8f5Gs9j0kmupa3HGnGWkZb9xGce
9x7XoPmP1OOZsdsO0WHz+CmVScNGox4Pea+2ikidxw6a14/1X+tQYurAsmnL
PI6YlDOy+dTiWI59juboPG6Myvpy++8vPMwYxq+wRL7e57qBtOUvjGO8tjt4
G4Fv2R9kbb5Rgzk7Rc7wqRKYaFCj/XK4EjfGunk26RGYVFA0b7OiEl1PdKjO
GhOYFpNuq8VdgetujG14dJ/AXVi8xeRWOc59C1P950DgpdS7okavf+DHk95B
q9zI46u2qlWUleGMHRSmviDw0NZp25enSrFs2H/U4g2BMs3TzF8el+BW/tKy
khACw1ZXh2WXFyO4zHRcjyY/X+yok6FpERq9fZTVlU3gpqzl0Osd+ThY1M3B
mkfgtdtmv44p5uOHl8PjK4oIZOE9eWprch4ydy1VnPhJfn5CApmf5mLs+ikx
5yoCNQ/OiNzbkIvitTJjAb8IlP1WutaPDfHY6czDUk0ENhK7LZ9wfEc/qY66
ihYCk1tELt7bnY3iV0TWS7QTuOXGhyMcwlmo5XO3PqybwH2H5lZ1mn3DbOPW
bbNDBPbHDC9s3J+GjfLBKx6OEKj/i2Gw6mYqvvG4zz42SqDCb++QtrivyPne
mdl7gkCi39lKTyUF1TQazTJpBFbR5Ha4vE9GCa57tMZJAqVOvva3XkhCwx3Z
HzumCeT7zeaglJmI1yMZqspmCGSOves0wpuIvdbiXBGzBM56mk8W70jA6S0x
FiLzBDpM/TKr64vFdVdNnAsXyOd7SbdnsD4Kk8YPamsuEjj/eWtCfV8kmvO4
LFSSrLKxT6HtdwRGtaxbSPtN4A5HnpWuUp+RKT9bh2eJwEpNU/vS6+EYvK3G
8xHJV/fw6Ti+/oQvNzyXFfxDvn4xSMyV6SPaCbx55USyo4FmgYdGGL5ZvGFc
TPJfO4lQ/dcfUOfT5XTlvwSmWPuwx91/j29uiw27kTzjtLrTem8IilZ+bcog
2emYvW92dzDmXxZbw7VMYP3VZMu8B2/RLy40X47k8uZ1Xn/PBuLNrd0nzUhe
vapXKF3yDZpsfq2RRHKD3bN3STwBaK84Ll9N8t3Blu1OPK+QOCVdNEayi7J0
QOt+fzzyTpiZh+onZv3XYqPjh2NXs3hEqH797V9rlSxfIIvqKQMVqn/I05wb
I+KLp7jmyu+QbBTdd79stQ8asJuffEhyVPtDtXVu3sinHKPrTbLbraWt0hue
oqoIe8lHqj/Ytk9yl/oTlNJ+dC6O5GtjG15s/+eOntdvDaSR3LrD8HtMzmN8
7FjmjZSewGHksLO3G16U0D1XQvXDiF97T111xa0z1hcrqX6Ufl5BmMIj9Epz
iKyjjv+WqY++5YzKE63nqX6cYFlNx79rD1Ay7L+GXqp/PSfFUupmj1UFnXWU
fueV9My/3q+2WHpO2pjq92nK+naX/LbGmX0iTlQ/8Nynro6RM1a4wB8kRfUL
mfTit5bgffx17PHHGZKfpDF4N8vcwyscBplzVP8/fd2yXLA5Xt014k31I9fp
RkwqtJvisfeaDFS/smmn767UO7fw5uWzSlQ/87L0k1zXbTeQIe2PMdXvpGUa
nR/rNEG2gR4Nqh/qclVpp0T+FfzXrraN6pc2VaTUXnK6hLmB/PkUpx3WVxOP
NsA9pzZrUf1Vl7trzr5dq4+fmU3yKX5WznVj/ys9XN/FT++vszid9X6mrYPu
yQfp+hLh0+O2v63V0S15MZTe7/VItTIMU8Sv0qOldH3Iu5M/s/lOY9fbnXS/
OB7RibuKM2K4z8eB2i+NipZ613zcjmB+bM4yXc/AzlbXnMyBc+8e0vvN8oWb
IyPtmSCReQddb7OHzerPNXN+8H3ZSvdrExDONfn0/DhEm7XR9T3qr9OP6BlI
gA7DDnr/+XvQoQPcYQBXLtvmUGxu5mnFmywLVQ5JX+iffyL1gqOeAnDq27ym
mPs5uMV8U4IN+8+4UXxjcdNCeq8KPNxbTNcfDGiH/AypU4NZKxFDimev1mvo
PNcAZ101Kfr//9Fe6hXSht97K+h6AG+XNg/Dfh0o2LyXrnc5wXlGcd0OXShc
FUjXE1g41/HrS+tCfuP/9DNl+7xO8JP1uE34JzqfrJtdq6CgC35hbOspHhl5
X+d+VBcU1qixUJwme8gzea0u/HgVSH0fglIPnoguPdGBa1xX9lDc0Vp34sMx
HeDdcOkIxR9FWU4p/dSGy+OadP86maA7dtzftECreIjul3f0WfU1uc+aYNW1
nq6nOejkVCrmqAFaFwTo+qKm1n03to+ogmdXmwfFll3PJ/I9VKDp821/iu/U
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
eUntl4XDtcc/6vMCqDkZ0/2VLb1ez8uOiULgah26fpeXZvDsjdBR4L0gS9e3
CiSzJPC/3gVO+/7Q9b5+KxKNT+3pOXlMX5Kuf76d+ODpzsBtmPsuhuoPQWz0
1E5jhoOoUTtF9TNBOUPFrs71OL558pH6Ph6YX5Q9v3lQHOMvKzVS3H/hOftF
Bxm0em9M189WzdQl+kqcxpuuBnS/a03z3tNbfOSQNzcikuLr1sp7/nxVQIe5
91R/EyRjj334+1UJH2x8S/XvwEXo3VKjjwqGpXXR/XgD8x9ZqMioYWywAd2/
eEbpSAztkCYuhS/R9cWhB/7wRdzWQpfPBXS/3pKV+gFLp7UxfVaX2t8MREya
mfR+HewLfUfXZ79q02+sfaKDzReyqX4PXBMkrnb90sG36Tl0/3CHBIk9Pcy6
aMYSTddr+6+o3nnxuC7u6DlI1yfvqv/WlKqii9UVY1Q/B9zFI/lYuXVxs3MD
Xa984NGpa94TOtj6WoPyCwCxZOOJ14k6uDh7ne4nbfVvdYL3eh10khKlX8+r
V2vkZY5qosrV91cpdixN+162oI5L8pfuUWyW8eeaZpwa1t/RcKa4YN2U2bS6
Kn78IkPXtzMYDfJ2NSljmO0aqr8D7JEXmRR0lbBZ3ZF+v7k2GMzqZCrgobV2
X+n3L8hps9RmeZw98ovu13zngy67uIEsPte8RfVXILf+uqT761PYqbSV/nw/
XQmayfaWQdfnSNfHX+Tx38b+SwIzrOWHKb6x8JsncI0oqt72ofvZp653lOve
fxy3Hnel+4/j9lV9W+2OYB8vK92/Xjagku3hk734TPkQPf4mPF9KBK7lwlT+
Jnp8hhQW1XMc+HuSudGE/vpKx1Brl3o+UJXupb9f+1HJ9g89h0Hozgj9805J
sGdrTwoB54wn/Xx+isp8quwTgWtZlfTz9R0VtK4olwDPFQ0N9Pc3tn6i8FEG
OCW+0f3GO28FE37Jp0Bq4Q1d386ZV7/9s5cs/CsMoPv3syVXMJToyAPzUHM4
xSuz1t4zZFGEG0d96fGbdexvX0GaEjAdX+9AsfDB1Xi1ThXaLhwzpfi8YLet
qLw6qMb60f3lL484P+YI0QDN5HaguGK9fZr5Sm1Qspag/56AoPjhQfYn2jAv
lUCfL1509gR8XNIGieUiDooXJQmT5FQdMl+vpuvnn9xpr1RY0AFrlmKqHw8d
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
         "]]}}}}, {PlotLabel -> FormBox[
       StyleBox[
       "\"Locus of foot of origin on anti-orthic axis, X(44), and X(88)\"", {
         GrayLevel[0], Medium}, StripOnInput -> False], TraditionalForm], 
     Frame -> True, GridLines -> Automatic, DisplayFunction -> Identity, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {"ScalingFunctions" -> None}, 
     PlotRange -> {{-3.543074868258296, 
      3.5430732189451497`}, {-3.3620498952033566`, 3.3620493853234894`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.05], 
        Scaled[0.05]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"foot on anti-orthic axis\"", "\"x44\"", "\"x88\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 2/3, 0]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 
                 Rational[2, 3], 0], Editable -> False, Selectable -> 
                False]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.770801851383622*^9, 3.7708019014464893`*^9}, 
   3.7708019925330105`*^9, 3.770802043928171*^9, 3.770802574271449*^9, 
   3.7708093987653522`*^9, 3.7708322835994396`*^9, 3.770838329692477*^9, 
   3.7708423386915674`*^9, 3.770882532394981*^9, 3.770886562319337*^9, 
   3.770894625187333*^9, 3.7708977381349783`*^9, 3.770934473133721*^9, 
   3.7709361288613796`*^9, 3.7709362740839825`*^9, 3.7710256452062826`*^9, 
   3.7711592762755437`*^9, 3.771675534341169*^9, 3.7721372115668426`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Peter Moses' Billiard Points", "Section",
 CellChangeTimes->{{3.770984392194014*^9, 3.7709844192792325`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getMosesTrilinears"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getMosesTrilinears", "[", 
    RowBox[{"tri_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ctrs", ",", "\[IndentingNewLine]", "sinA", ",", "sinB", ",", "sinC", 
       ",", "\[IndentingNewLine]", "cosA", ",", "cosB", ",", "cosC", ",", 
       "\[IndentingNewLine]", "cosA2", ",", "cosB2", ",", "cosC2", ",", 
       RowBox[{"(*", "squared", "*)"}], "\[IndentingNewLine]", "cosA3", ",", 
       "cosB3", ",", "cosC3", ",", 
       RowBox[{"(*", "cubed", "*)"}], "\[IndentingNewLine]", "secA", ",", 
       "secB", ",", "secC", ",", "\[IndentingNewLine]", "a2", ",", "b2", ",", 
       "c2", ",", "a3", ",", "b3", ",", "c3", ",", "a4", ",", "b4", ",", "c4",
        ",", "\[IndentingNewLine]", "cirR", ",", "cir", ",", "ort", ",", 
       "d34"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a2", "=", 
       RowBox[{"a", "*", "a"}]}], ";", 
      RowBox[{"b2", "=", 
       RowBox[{"b", "*", "b"}]}], ";", 
      RowBox[{"c2", "=", 
       RowBox[{"c", "*", "c"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a3", "=", 
       RowBox[{"a2", "*", "a"}]}], ";", 
      RowBox[{"b3", "=", 
       RowBox[{"b2", "*", "b"}]}], ";", 
      RowBox[{"c3", "=", 
       RowBox[{"c2", "*", "c"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a4", "=", 
       RowBox[{"a2", "*", "a2"}]}], ";", 
      RowBox[{"b4", "=", 
       RowBox[{"b2", "*", "b2"}]}], ";", 
      RowBox[{"c4", "=", 
       RowBox[{"c2", "*", "c2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cirR", "=", 
       RowBox[{"getCircumradius", "[", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cir", "=", 
       RowBox[{"getCircumcenter", "@@", "tri"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ort", "=", 
       RowBox[{"getOrthocenter", "@@", "tri"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"d34", "=", 
       RowBox[{"magn", "[", 
        RowBox[{"cir", "-", "ort"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"b", ",", "a", ",", "c"}], "]"}], ",", 
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"c", ",", "a", ",", "b"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sinA", ",", "sinB", ",", "sinC"}], "}"}], "=", 
       RowBox[{"getSin", "/@", 
        RowBox[{"{", 
         RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"secA", ",", "secB", ",", "secC"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cosA2", ",", "cosB2", ",", "cosC2"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "^", "2"}], ")"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cosA3", ",", "cosB3", ",", "cosC3"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "^", "3"}], ")"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ctrs", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<X\>\"", ",", "\"\<name\>\"", ",", "\"\<trilinears\>\""}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"190", ",", "\"\<YFF PARABOLIC POINT\>\"", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"b", " ", 
              RowBox[{"c", "/", 
               RowBox[{"(", 
                RowBox[{"b", "-", "c"}], ")"}]}]}], ",", 
             RowBox[{"c", " ", 
              RowBox[{"a", "/", 
               RowBox[{"(", 
                RowBox[{"c", "-", "a"}], ")"}]}]}], ",", 
             RowBox[{"a", " ", 
              RowBox[{"b", "/", 
               RowBox[{"(", 
                RowBox[{"a", "-", "b"}], ")"}]}]}]}], "}"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"651", ",", "\"\<TRILINEAR POLE OF LINE X(1)X(3)\>\"", ",", 
           RowBox[{"1", "/", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", "-", "c"}], ")"}], 
               RowBox[{"(", 
                RowBox[{"b", "+", "c", "-", "a"}], ")"}]}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"c", "-", "a"}], ")"}], 
               RowBox[{"(", 
                RowBox[{"c", "+", "a", "-", "b"}], ")"}]}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"a", "-", "b"}], ")"}], 
               RowBox[{"(", 
                RowBox[{"a", "+", "b", "-", "c"}], ")"}]}]}], "}"}]}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"653", ",", "\"\<TRILINEAR POLE OF LINE X(1)X(4)\>\"", ",", 
           RowBox[{"1", "/", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"secB", " ", "-", " ", "secC"}], ")"}], ",", 
              RowBox[{"(", 
               RowBox[{"secC", " ", "-", " ", "secA"}], ")"}], ",", 
              RowBox[{"(", 
               RowBox[{"secA", " ", "-", " ", "secB"}], ")"}], ",", 
              RowBox[{"{", "}"}]}], "}"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"655", ",", "\"\<TRILINEAR POLE OF LINE X(1)X(5)\>\"", ",", 
           RowBox[{"1", "/", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"cosA", " ", "cosB"}], "+", 
               RowBox[{"sinA", " ", "sinB"}], "-", 
               RowBox[{"cosC", " ", "cosA"}], "-", 
               RowBox[{"sinA", " ", "sinB"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"cosB", " ", "cosC"}], "+", 
               RowBox[{"sinB", " ", "sinC"}], "-", 
               RowBox[{"cosA", " ", "cosB"}], "-", 
               RowBox[{"sinB", " ", "sinC"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"cosC", " ", "cosA"}], "+", 
               RowBox[{"sinC", " ", "sinA"}], "-", 
               RowBox[{"cosB", " ", "cosC"}], "-", 
               RowBox[{"sinC", " ", "sinA"}]}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"658", ",", "\"\<TRILINEAR POLE OF LINE X(1)X(7)\>\"", ",", 
           RowBox[{"1", "/", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", "cosA"}], ")"}], 
               RowBox[{"(", 
                RowBox[{"cosB", "-", "cosC"}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", "cosB"}], ")"}], 
               RowBox[{"(", 
                RowBox[{"cosC", "-", "cosA"}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", "cosC"}], ")"}], 
               RowBox[{"(", 
                RowBox[{"cosA", "-", "cosB"}], ")"}]}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"660", ",", "\"\<TRILINEAR POLE OF LINE X(1)X(39)\>\"", ",", 
           RowBox[{"1", "/", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"a2", "-", 
                 RowBox[{"b", " ", "c"}]}], ")"}], 
               RowBox[{"(", 
                RowBox[{"b", "-", "c"}], ")"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b2", "-", 
                 RowBox[{"c", " ", "a"}]}], ")"}], 
               RowBox[{"(", 
                RowBox[{"c", "-", "a"}], ")"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"c2", "-", 
                 RowBox[{"a", " ", "b"}]}], ")"}], 
               RowBox[{"(", 
                RowBox[{"a", "-", "b"}], ")"}]}]}], "}"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"662", ",", "\"\<TRILINEAR POLE OF LINE X(1)X(21)\>\"", ",", 
           RowBox[{"1", "/", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"b2", "-", "c2"}], ",", 
              RowBox[{"c2", "-", "a2"}], ",", 
              RowBox[{"a2", "-", "b2"}]}], "}"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "673", ",", "\"\<TRILINEAR POLE OF LINE X(1)X(514)\>\"", ",", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b", " ", "c"}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"b2", "+", "c2", "-", 
                RowBox[{"a", 
                 RowBox[{"(", 
                  RowBox[{"b", "+", "c"}], ")"}]}]}], ")"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"c", " ", "a"}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"c2", "+", "a2", "-", 
                RowBox[{"b", 
                 RowBox[{"(", 
                  RowBox[{"c", "+", "a"}], ")"}]}]}], ")"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"a", " ", "b"}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"a2", "+", "b2", "-", 
                RowBox[{"c", 
                 RowBox[{"(", 
                  RowBox[{"a", "+", "b"}], ")"}]}]}], ")"}]}]}], "}"}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "771", ",", "\"\<ISOGONAL CONJUGATE OF X(770)\>\"", ",", " ", 
           RowBox[{"1", "/", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"cosB3", "-", "cosC3"}], ",", 
              RowBox[{"cosC3", "-", "cosA3"}], ",", 
              RowBox[{"cosA3", "-", "cosB3"}]}], "}"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"799", ",", "\"\<ISOGONAL CONJUGATE OF X(798)\>\"", ",", 
           RowBox[{"1", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "cosA2"}], ")"}], 
               RowBox[{"(", 
                RowBox[{"cosB2", "-", "cosC2"}], ")"}]}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "cosB2"}], ")"}], 
               RowBox[{"(", 
                RowBox[{"cosC2", "-", "cosA2"}], ")"}]}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "cosC2"}], ")"}], 
               RowBox[{"(", 
                RowBox[{"cosA2", "-", "cosB2"}], ")"}]}]}], "}"}]}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"823", ",", "\"\<ISOGONAL CONJUGATE OF X(822)\>\"", ",", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"b2", " ", 
              RowBox[{"c2", "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b2", "-", "c2"}], ")"}], 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"b2", "+", "c2", "-", "a2"}], ")"}], "^", "2"}]}], 
                ")"}]}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"c2", " ", 
              RowBox[{"a2", "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"c2", "-", "a2"}], ")"}], 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"c2", "+", "a2", "-", "b2"}], ")"}], "^", "2"}]}], 
                ")"}]}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"a2", " ", 
              RowBox[{"b2", "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"a2", "-", "b2"}], ")"}], 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"a2", "+", "b2", "-", "c2"}], ")"}], "^", "2"}]}], 
                ")"}]}]}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"897", ",", "\"\<ISOGONAL CONJUGATE OF X(896)\>\"", ",", 
           RowBox[{"1", "/", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"2", "a2"}], "-", "b2", "-", "c2"}], ",", 
              RowBox[{
               RowBox[{"2", " ", "b2"}], "-", "c2", "-", "a2"}], ",", 
              RowBox[{
               RowBox[{"2", "c2"}], "-", "a2", "-", "b2"}]}], "}"}]}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"1156", ",", "\"\<ISOGONAL CONJUGATE OF X(1155)\>\"", ",", 
           RowBox[{"1", "/", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b", "-", "c"}], ")"}], "^", "2"}], " ", "+", " ", 
               RowBox[{"a", 
                RowBox[{"(", 
                 RowBox[{"b", "+", "c", "-", 
                  RowBox[{"2", "a"}]}], ")"}]}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"c", "-", "a"}], ")"}], "^", "2"}], " ", "+", " ", 
               RowBox[{"b", 
                RowBox[{"(", 
                 RowBox[{"c", "+", "a", "-", 
                  RowBox[{"2", "b"}]}], ")"}]}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"a", "-", "b"}], ")"}], "^", "2"}], " ", "+", " ", 
               RowBox[{"c", 
                RowBox[{"(", 
                 RowBox[{"a", "+", "b", "-", 
                  RowBox[{"2", "c"}]}], ")"}]}]}]}], "\[IndentingNewLine]", 
             "}"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"1492", ",", "\"\<COLUMBUS POINT\>\"", ",", 
           RowBox[{"1", "/", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"b3", "-", "c3"}], ",", 
              RowBox[{"c3", "-", "a3"}], ",", 
              RowBox[{"a3", "-", "b3"}]}], "}"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "1821", ",", 
           "\"\<ISOGONAL CONJUGATE OF MIMOSA TRANSFORM OF X(287)\>\"", ",", 
           " ", 
           RowBox[{"1", "/", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"a2", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"a2", " ", "b2"}], "+", 
                 RowBox[{"a2", " ", "c2"}], "-", "b4", "-", "c4"}], ")"}]}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"b2", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"b2", " ", "c2"}], "+", 
                 RowBox[{"b2", " ", "a2"}], "-", "c4", "-", "a4"}], ")"}]}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"c2", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"c2", " ", "a2"}], "+", 
                 RowBox[{"c2", " ", "b2"}], "-", "a4", "-", "b4"}], ")"}]}]}],
              "}"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"2349", ",", "\"\<X(2)-ISOCONJUGATE OF X(1495)\>\"", ",", 
           RowBox[{"1", "/", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b2", "-", "c2"}], ")"}], "^", "2"}], "+", 
               RowBox[{"a2", 
                RowBox[{"(", 
                 RowBox[{"b2", "+", "c2", "-", 
                  RowBox[{"2", "a2"}]}], ")"}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"c2", "-", "a2"}], ")"}], "^", "2"}], "+", 
               RowBox[{"b2", 
                RowBox[{"(", 
                 RowBox[{"c2", "+", "a2", "-", 
                  RowBox[{"2", "b2"}]}], ")"}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"a2", "-", "b2"}], ")"}], "^", "2"}], "+", 
               RowBox[{"c2", 
                RowBox[{"(", 
                 RowBox[{"a2", "+", "b2", "-", 
                  RowBox[{"2", "c2"}]}], ")"}]}]}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"X", 
             RowBox[{"(", "1113", ")"}]}], "=", 
            RowBox[{
             RowBox[{"1", "st", " ", "EULER"}], "-", "LINE", "-", 
             RowBox[{
             "CIRCUMCIRCLE", " ", "INTERSECTION", "\n", "Trilinears", " ", 
              RowBox[{"(", 
               RowBox[{"R", "-", "d"}], ")"}], " ", "cosA"}], " ", "-", " ", 
             RowBox[{"2", "R", " ", "cosB", " ", "cosC"}]}]}], ",", 
           RowBox[{
            RowBox[{"where", " ", "R"}], "=", "circumradius"}], ",", 
           RowBox[{"d", "=", 
            RowBox[{"distance", "|", "OH", "|", 
             RowBox[{"between", " ", "X", 
              RowBox[{"(", "3", ")"}], " ", "and", " ", "X", 
              RowBox[{
               RowBox[{"(", "4", ")"}], ".", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Joe", " ", "Goggins"}], ",", "2002"}], 
                ")"}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"2580", ",", "\"\<X(6)-ISOCONJUGATE OF X(2574)\>\"", ",", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"cirR", "-", "d34"}], ")"}], "cosA"}], "-", 
                RowBox[{"2", "cirR", " ", "cosB", " ", "cosC"}]}], ")"}], "/",
               "a"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"cirR", "-", "d34"}], ")"}], "cosB"}], "-", 
                RowBox[{"2", "cirR", " ", "cosC", " ", "cosA"}]}], ")"}], "/",
               "b"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"cirR", "-", "d34"}], ")"}], "cosC"}], "-", 
                RowBox[{"2", "cirR", " ", "cosA", " ", "cosB"}]}], ")"}], "/",
               "c"}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]",
           "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Trilinears", " ", 
             RowBox[{"(", 
              RowBox[{"1", "/", "a"}], ")"}], "f", 
             RowBox[{"(", 
              RowBox[{"a", ",", "b", ",", "c"}], ")"}]}], ":", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "/", "b"}], ")"}], "f", 
             RowBox[{"(", 
              RowBox[{"b", ",", "c", ",", "a"}], ")"}]}], ":", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "/", "c"}], ")"}], "/", "f"}], 
             RowBox[{"(", 
              RowBox[{"c", ",", "a", ",", "b"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"where", " ", "f", 
             RowBox[{"(", 
              RowBox[{"a", ",", "b", ",", "c"}], ")"}], " ", "is", " ", "as", 
             " ", "at", " ", "X", 
             RowBox[{"(", "1114", ")"}]}], ":", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Trilinears", " ", 
              RowBox[{"(", 
               RowBox[{"R", "+", "d"}], ")"}], " ", "cosA"}], " ", "-", " ", 
             RowBox[{"2", "R", " ", "cosB", " ", "cosC"}]}]}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"2581", ",", "\"\<X(6)-ISOCONJUGATE OF X(2575)\>\"", ",", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"cirR", "+", "d34"}], ")"}], "cosA"}], "-", 
                RowBox[{"2", "cirR", " ", "cosB", " ", "cosC"}]}], ")"}], "/",
               "a"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"cirR", "+", "d34"}], ")"}], "cosB"}], "-", 
                RowBox[{"2", "cirR", " ", "cosC", " ", "cosA"}]}], ")"}], "/",
               "b"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"cirR", "+", "d34"}], ")"}], "cosC"}], "-", 
                RowBox[{"2", "cirR", " ", "cosA", " ", "cosB"}]}], ")"}], "/",
               "c"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"3257", ",", "\"\<ISOGONAL CONJUGATE OF X(1635)\>\"", ",", 
           RowBox[{"1", "/", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", "-", "c"}], ")"}], 
               RowBox[{"(", 
                RowBox[{"b", "+", "c", "-", 
                 RowBox[{"2", "a"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"c", "-", "a"}], ")"}], 
               RowBox[{"(", 
                RowBox[{"c", "+", "a", " ", "-", 
                 RowBox[{"2", "b"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"a", "-", "b"}], ")"}], 
               RowBox[{"(", 
                RowBox[{"a", "+", "b", " ", "-", 
                 RowBox[{"2", "c"}]}], ")"}]}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"Barycentrics", ":", " ", 
           RowBox[{"1", "/", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b", " ", "-", " ", "c"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"ab", " ", "+", " ", "ac", " ", "-", " ", "bc"}], 
               ")"}]}], "]"}]}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "4598", ",", "\"\<TRILINEAR POLE OF THE LINE X(1)X(87)\>\"", ",", 
           RowBox[{"1", "/", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"a", 
               RowBox[{"(", 
                RowBox[{"b", "-", "c"}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"a", " ", "b"}], "+", 
                 RowBox[{"a", " ", "c"}], "-", 
                 RowBox[{"b", " ", "c"}]}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"b", 
               RowBox[{"(", 
                RowBox[{"c", "-", "a"}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"b", " ", "c"}], "+", 
                 RowBox[{"b", " ", "a"}], "-", 
                 RowBox[{"c", " ", "a"}]}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"c", 
               RowBox[{"(", 
                RowBox[{"a", "-", "b"}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"c", " ", "a"}], "+", 
                 RowBox[{"c", " ", "b"}], "-", 
                 RowBox[{"a", " ", "b"}]}], ")"}]}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Barycentrics", ":", " ", 
           RowBox[{"a", "/", 
            RowBox[{"(", 
             RowBox[{"b4", " ", "-", " ", "c4"}], ")"}]}]}], "*)"}], " ", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "4599", ",", "\"\<TRILINEAR POLE OF THE LINE X(1)X(82)\>\"", ",", 
           RowBox[{"1", "/", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"b4", "-", "c4"}], ",", "\[IndentingNewLine]", 
              RowBox[{"c4", "-", "a4"}], ",", "\[IndentingNewLine]", 
              RowBox[{"a4", "-", "b4"}]}], "}"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Barycentrics", ":", " ", 
           RowBox[{"a", "/", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b", " ", "-", " ", "c"}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", "b"}], "+", 
                RowBox[{"2", "c"}], "-", "a"}], ")"}]}], "]"}]}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "4604", ",", "\"\<TRILINEAR POLE OF THE LINE X(1)X(89)\>\"", ",", 
           RowBox[{"1", "/", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", "-", "c"}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", "b"}], "+", 
                 RowBox[{"2", "c"}], "-", "a"}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"c", "-", "a"}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", "c"}], "+", 
                 RowBox[{"2", "a"}], "-", "b"}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"a", "-", "b"}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", "a"}], "+", 
                 RowBox[{"2", "b"}], "-", "c"}], ")"}]}]}], 
             "\[IndentingNewLine]", "}"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Barycentrics", ":", " ", 
           RowBox[{"a", "/", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b", " ", "-", " ", "c"}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", "a"}], " ", "+", " ", "b", " ", "+", " ", "c"}], 
               ")"}]}], "]"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "4606", ",", "\"\<TRILINEAR POLE OF THE LINE X(1)X(210)\>\"", ",", 
           RowBox[{"1", "/", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", "-", "c"}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"3", "a"}], "+", "b", "+", "c"}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"c", "-", "a"}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"3", "b"}], "+", "c", "+", "a"}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"a", "-", "b"}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"3", "c"}], "+", "a", "+", "b"}], ")"}]}]}], 
             "\[IndentingNewLine]", "}"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Barycentrics", ":", " ", 
           RowBox[{"1", "/", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b", " ", "-", " ", "c"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"ab", " ", "+", " ", "ac", " ", "-", " ", 
                RowBox[{"2", "bc"}]}], ")"}]}], "]"}]}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "4607", ",", "\"\<TRILINEAR POLE OF THE LINE X(1)X(190)\>\"", ",", 
           RowBox[{"1", "/", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"a", 
               RowBox[{"(", 
                RowBox[{"b", "-", "c"}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"a", " ", "b"}], "+", 
                 RowBox[{"a", " ", "c"}], "-", 
                 RowBox[{"2", "b", " ", "c"}]}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"b", 
               RowBox[{"(", 
                RowBox[{"c", "-", "a"}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"b", " ", "c"}], "+", 
                 RowBox[{"b", " ", "a"}], "-", 
                 RowBox[{"2", "c", " ", "a"}]}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"c", 
               RowBox[{"(", 
                RowBox[{"a", "-", "b"}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"c", " ", "a"}], "+", 
                 RowBox[{"c", " ", "b"}], "-", 
                 RowBox[{"2", "a", " ", "b"}]}], ")"}]}]}], 
             "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Barycentrics", ":", " ", 
           RowBox[{"1", "/", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b", " ", "-", " ", "c"}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"a", "^", "3"}], " ", "+", " ", 
                RowBox[{"b", "^", "3"}], " ", "+", " ", 
                RowBox[{"c", "^", "3"}], " ", "+", " ", "abc", " ", "+", " ", 
                RowBox[{"2", 
                 RowBox[{"b", "^", "2"}], " ", "c"}], " ", "+", " ", 
                RowBox[{"2", 
                 RowBox[{"bc", "^", "2"}]}]}], ")"}]}], "]"}]}]}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"8052", ",", "\"\<ISOTOMIC CONJUGATE OF X(8045)\>\"", ",", 
           RowBox[{"1", "/", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"a", 
               RowBox[{"(", 
                RowBox[{"b", "-", "c"}], ")"}], 
               RowBox[{"(", 
                RowBox[{"a3", "+", "b3", "+", "c3", " ", "+", " ", 
                 RowBox[{"a", " ", "b", " ", "c"}], " ", "+", " ", 
                 RowBox[{"2", "b2", " ", "c"}], " ", "+", " ", 
                 RowBox[{"2", "b", " ", "c2"}]}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"b", 
               RowBox[{"(", 
                RowBox[{"c", "-", "a"}], ")"}], 
               RowBox[{"(", 
                RowBox[{"b3", "+", "c3", "+", "a3", " ", "+", " ", 
                 RowBox[{"a", " ", "b", " ", "c"}], " ", "+", " ", 
                 RowBox[{"2", "c2", " ", "a"}], " ", "+", " ", 
                 RowBox[{"2", "c", " ", "a2"}]}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"c", 
               RowBox[{"(", 
                RowBox[{"a", "-", "b"}], ")"}], 
               RowBox[{"(", 
                RowBox[{"c3", "+", "a3", "+", "b3", " ", "+", " ", 
                 RowBox[{"a", " ", "b", " ", "c"}], " ", "+", " ", 
                 RowBox[{"2", "a2", " ", "b"}], " ", "+", " ", 
                 RowBox[{"2", "a", " ", "b2"}]}], ")"}]}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Barycentrics", ":", " ", 
           RowBox[{"a", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"a", " ", 
               RowBox[{"b", "^", "2"}]}], " ", "+", " ", 
              RowBox[{"a", " ", 
               RowBox[{"c", "^", "2"}]}], " ", "-", " ", 
              RowBox[{
               RowBox[{"b", "^", "2"}], " ", "c"}], " ", "-", " ", 
              RowBox[{"b", " ", 
               RowBox[{"c", "^", "2"}]}]}], ")"}]}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"20332", ",", "\"\<(name pending)\>\"", ",", 
           RowBox[{"1", "/", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"a", " ", "b2"}], "+", 
               RowBox[{"a", " ", "c2"}], "-", 
               RowBox[{"b2", " ", "c"}], "-", 
               RowBox[{"b", " ", "c2"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"b", " ", "c2"}], "+", 
               RowBox[{"b", " ", "a2"}], "-", 
               RowBox[{"c2", " ", "a"}], "-", 
               RowBox[{"c", " ", "a2"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"c", " ", "a2"}], "+", 
               RowBox[{"c", " ", "b2"}], "-", 
               RowBox[{"a2", " ", "b"}], "-", 
               RowBox[{"a", " ", "b2"}]}]}], "}"}]}]}], "\[IndentingNewLine]",
           "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"not", " ", "working"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "23707", ",", "\"\<ISOGONAL CONJUGATE OF X(2635)\>\"", ",", " ", 
           RowBox[{"1", "/", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"2", " ", "secA"}], "-", "secB", "-", "secC"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"2", " ", "secB"}], "-", "secC", "-", "secA"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"2", " ", "secC"}], "-", "secA", "-", "secB"}]}], 
             "}"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"sin", 
              RowBox[{"(", 
               RowBox[{"A", "-", "B"}], ")"}]}], "+", 
             RowBox[{"sin", 
              RowBox[{"(", 
               RowBox[{"A", "-", "C"}], ")"}]}]}], ")"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "24624", ",", 
           "\"\<(A,B,C,X(2); A',B',C',X(2)) COLLINEATION IMAGE OF X(662), \
WHERE A'B'C' = GEMINI TRIANGLE 2\>\"", ",", 
           RowBox[{"1", "/", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"sinA", " ", "cosB"}], "-", 
               RowBox[{"sinB", " ", "cosA"}], "+", 
               RowBox[{"sinA", " ", "cosC"}], "-", 
               RowBox[{"sinC", " ", "cosA"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"sinB", " ", "cosC"}], "-", 
               RowBox[{"sinC", " ", "cosB"}], "+", 
               RowBox[{"sinB", " ", "cosA"}], "-", 
               RowBox[{"sinA", " ", "cosB"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"sinC", " ", "cosA"}], "-", 
               RowBox[{"sinA", " ", "cosC"}], "+", 
               RowBox[{"sinC", " ", "cosB"}], "-", 
               RowBox[{"sinB", " ", "cosC"}]}]}], "\[IndentingNewLine]", 
             "}"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Barycentrics", ":", " ", 
           RowBox[{"a", " ", 
            RowBox[{"(", 
             RowBox[{"a", " ", "-", " ", "b"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"a", " ", "+", " ", "b", " ", "-", " ", 
              RowBox[{"3", " ", "c"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"a", " ", "-", " ", "c"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"a", " ", "-", " ", 
              RowBox[{"3", " ", "b"}], " ", "+", " ", "c"}], ")"}]}]}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "27834", ",", 
           "\"\<(A,B,C,X(2); A',B',C',X(2)) COLLINEATION IMAGE OF X(190), \
WHERE A'B'C' = GEMINI TRIANGLE 71\>\"", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"a", "-", "b"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"a", "+", "b", "-", 
                RowBox[{"3", "c"}]}], ")"}], 
              RowBox[{"(", 
               RowBox[{"a", "-", "c"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"a", "-", 
                RowBox[{"3", " ", "b"}], "+", "c"}], ")"}]}], " ", ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b", "-", "c"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"b", "+", "c", "-", 
                RowBox[{"3", "a"}]}], ")"}], 
              RowBox[{"(", 
               RowBox[{"b", "-", "a"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"b", "-", 
                RowBox[{"3", " ", "c"}], "+", "a"}], ")"}]}], " ", ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"c", "-", "a"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"c", "+", "a", "-", 
                RowBox[{"3", "b"}]}], ")"}], 
              RowBox[{"(", 
               RowBox[{"c", "-", "b"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"c", "-", 
                RowBox[{"3", " ", "a"}], "+", "b"}], ")"}]}]}], " ", "}"}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Barycentrics", ":", " ", 
           RowBox[{"b", " ", 
            RowBox[{"c", "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"b", "^", "2"}], "-", 
                 RowBox[{"c", "^", "2"}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"a", "^", "2"}], "-", 
                    RowBox[{"b", "^", "2"}], "-", 
                    RowBox[{"c", "^", "2"}]}], ")"}], "^", "2"}], "-", 
                 RowBox[{
                  RowBox[{"b", "^", "2"}], " ", 
                  RowBox[{"c", "^", "2"}]}]}], ")"}]}], ")"}]}]}]}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"32680", ",", "\"\<TRILINEAR PRODUCT X(2)*X(476)\>\"", ",", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"b", " ", 
              RowBox[{
               RowBox[{"c", "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"b2", "-", "c2"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a2", "-", "b2", "-", "c2"}], ")"}], "^", "2"}], 
                    "-", 
                    RowBox[{"b2", " ", "c2"}]}], ")"}]}], ")"}]}], "/", 
               "a"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"c", " ", 
              RowBox[{
               RowBox[{"a", "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"c2", "-", "a2"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"b2", "-", "c2", "-", "a2"}], ")"}], "^", "2"}], 
                    "-", 
                    RowBox[{"c2", " ", "a2"}]}], ")"}]}], ")"}]}], "/", 
               "b"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"a", " ", 
              RowBox[{
               RowBox[{"b", "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"a2", "-", "b2"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"c2", "-", "a2", "-", "b2"}], ")"}], "^", "2"}], 
                    "-", 
                    RowBox[{"a2", " ", "b2"}]}], ")"}]}], ")"}]}], "/", 
               "c"}]}]}], "}"}]}], "}"}]}], "\[IndentingNewLine]", "}"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"trilinearToCartesian", "[", 
           RowBox[{"tri", ",", 
            RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Rest", "@", "ctrs"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "\[Equal]", "3"}], "&"}]}], 
        "]"}]}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdyksowwEAx/G1hBIHzCMJM8+yLKxmlJVGTpok0sLG8mpeQ54bMg6U51aM
cZCL8iYbWYqD1LbmETbiYGXLsIOizf/3P3z7XL5xNVJBLZVCocQRQZvX8Tcb
4eAJ2ZbgOcL1tq0ESOVEcaHiLowHBxumDqB2THYM3f0eMwxh9dmh8nDnGzIX
jMXzhB4Goxp2Fm5I4GJIQRMs4hx1wN+3oH7IWdGvwZxrmQ5WnD5eQn5ZjBEy
RIEWmBlPv4P1P7lW+NJy64UDfqkBKkKx+IEGLRM+0XBFu0vqTxPTYWZ+OxMG
W8vZULhnyINvral8SH8xlcIbm1wImYb3HugX4zsKU3q7JsmvZHgGDo90z8M6
jeACsiubTVCXrriGeWzXK1wIK7PDyCop6b74/APan53fkKX+SlIT6s+WWDDZ
+ZQFzaXhXJhWEsuDm8rlKvi5GtAIM+YkpMvu0HboSKIpoU7lXoTq7V8NnE58
XYPU7PFtKB8y6mDsjvEE3osqXBrCn6kr0n/F7wHA
  "]],

Cell[CellGroupData[{

Cell["Test it", "Subsubsection",
 CellChangeTimes->{{3.770986463721418*^9, 3.770986470393566*^9}, {
  3.7709873273458624`*^9, 3.77098732811381*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"o", ",", "s", ",", "mosesCtrs"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"o", "=", 
     RowBox[{
      RowBox[{"orbitNormals", "[", 
       RowBox[{"1.5", ",", ".1"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"s", "=", 
     RowBox[{"RotateLeft", "@", 
      RowBox[{"triLengths", "@", "o"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"mosesCtrs", "=", 
     RowBox[{"getMosesTrilinears", "[", 
      RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\"\<X(\>\"", "<>", 
        RowBox[{"ToString", "@", "#"}], "<>", "\"\<)\>\""}], ")"}], "&"}], "/@", 
     RowBox[{"First", "/@", "mosesCtrs"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7710075418931465`*^9, 3.7710076115664244`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"X(190)\"\>", ",", "\<\"X(651)\"\>", ",", "\<\"X(655)\"\>", 
   ",", "\<\"X(658)\"\>", ",", "\<\"X(660)\"\>", ",", "\<\"X(662)\"\>", 
   ",", "\<\"X(673)\"\>", ",", "\<\"X(771)\"\>", ",", "\<\"X(799)\"\>", 
   ",", "\<\"X(823)\"\>", ",", "\<\"X(897)\"\>", ",", "\<\"X(1156)\"\>", 
   ",", "\<\"X(1492)\"\>", ",", "\<\"X(1821)\"\>", ",", "\<\"X(2349)\"\>", 
   ",", "\<\"X(2580)\"\>", ",", "\<\"X(2581)\"\>", ",", "\<\"X(3257)\"\>", 
   ",", "\<\"X(4598)\"\>", ",", "\<\"X(4599)\"\>", ",", "\<\"X(4604)\"\>", 
   ",", "\<\"X(4606)\"\>", ",", "\<\"X(4607)\"\>", ",", "\<\"X(8052)\"\>", 
   ",", "\<\"X(20332)\"\>", ",", "\<\"X(23707)\"\>", ",", "\<\"X(24624)\"\>", 
   ",", "\<\"X(27834)\"\>", ",", "\<\"X(32680)\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.771007549010125*^9, {3.7710075796011195`*^9, 3.771007611809774*^9}, 
   3.7710256455703106`*^9, 3.77115927665057*^9, 3.7716755347032013`*^9, 
   3.7721372119098954`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"o", ",", "s", ",", "mosesCtrs"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"o", "=", 
      RowBox[{
       RowBox[{"orbitNormals", "[", 
        RowBox[{"1.5", ",", ".1"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"s", "=", 
      RowBox[{"RotateLeft", "@", 
       RowBox[{"triLengths", "@", "o"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mosesCtrs", "=", 
      RowBox[{"getMosesTrilinears", "[", 
       RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"First", "@", "#2"}]}], "]"}], "&"}], ",", "mosesCtrs"}], 
      "]"}]}]}], "]"}], "//", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"#", ",", 
     RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.770986405545085*^9, 3.770986461138821*^9}, {
  3.770989550639139*^9, 3.7709895519289975`*^9}, {3.7710027794888167`*^9, 
  3.7710027885124817`*^9}, {3.771003397433646*^9, 3.771003469520844*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "190", "\<\"YFF PARABOLIC POINT\"\>", 
     RowBox[{"{", 
      RowBox[{"1.3896664853503646`", ",", 
       RowBox[{"-", "0.3764318202950589`"}]}], "}"}]},
    {"2", "651", "\<\"TRILINEAR POLE OF LINE X(1)X(3)\"\>", 
     RowBox[{"{", 
      RowBox[{"0.12901875855218214`", ",", 
       RowBox[{"-", "0.9962940574262991`"}]}], "}"}]},
    {"3", "655", "\<\"TRILINEAR POLE OF LINE X(1)X(5)\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.7663782063126733`"}], ",", 
       RowBox[{"-", "0.8596289754924558`"}]}], "}"}]},
    {"4", "658", "\<\"TRILINEAR POLE OF LINE X(1)X(7)\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.2496968251255633`"}], ",", 
       RowBox[{"-", "0.9860474398148539`"}]}], "}"}]},
    {"5", "660", "\<\"TRILINEAR POLE OF LINE X(1)X(39)\"\>", 
     RowBox[{"{", 
      RowBox[{"0.11553307158325532`", ",", "0.9970293898199204`"}], "}"}]},
    {"6", "662", "\<\"TRILINEAR POLE OF LINE X(1)X(21)\"\>", 
     RowBox[{"{", 
      RowBox[{"0.9264856185789554`", ",", 
       RowBox[{"-", "0.7864475396974454`"}]}], "}"}]},
    {"7", "673", "\<\"TRILINEAR POLE OF LINE X(1)X(514)\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.3896664853503646`"}], ",", "0.3764318202950579`"}], 
      "}"}]},
    {"8", "771", "\<\"ISOGONAL CONJUGATE OF X(770)\"\>", 
     RowBox[{"{", 
      RowBox[{"1.2987390137297`", ",", 
       RowBox[{"-", "0.5003452027090483`"}]}], "}"}]},
    {"9", "799", "\<\"ISOGONAL CONJUGATE OF X(798)\"\>", 
     RowBox[{"{", 
      RowBox[{"7.134864882642961`", ",", 
       RowBox[{"-", "12.779329864451961`"}]}], "}"}]},
    {"10", "823", "\<\"ISOGONAL CONJUGATE OF X(822)\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.7227578567024343`"}], ",", 
       RowBox[{"-", "0.8762600021492616`"}]}], "}"}]},
    {"11", "897", "\<\"ISOGONAL CONJUGATE OF X(896)\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.4637665111669633`"}], ",", "0.21846698279510776`"}], 
      "}"}]},
    {"12", "1156", "\<\"ISOGONAL CONJUGATE OF X(1155)\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.1259122173462461`"}], ",", "0.6607476165780221`"}], 
      "}"}]},
    {"13", "1492", "\<\"COLUMBUS POINT\"\>", 
     RowBox[{"{", 
      RowBox[{"0.7037773922261453`", ",", 
       RowBox[{"-", "0.8830999395290227`"}]}], "}"}]},
    {"14", "1821", "\<\"ISOGONAL CONJUGATE OF MIMOSA TRANSFORM OF X(287)\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.7802681103266057`"}], ",", "0.8540574209182232`"}], 
      "}"}]},
    {"15", "2349", "\<\"X(2)-ISOCONJUGATE OF X(1495)\"\>", 
     RowBox[{"{", 
      RowBox[{"0.08002959179597553`", ",", "0.9985757111310462`"}], "}"}]},
    {"16", "2580", "\<\"X(6)-ISOCONJUGATE OF X(2574)\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.6672179546583287`"}], ",", 
       RowBox[{"-", "0.8956239788814035`"}]}], "}"}]},
    {"17", "2581", "\<\"X(6)-ISOCONJUGATE OF X(2575)\"\>", 
     RowBox[{"{", 
      RowBox[{"0.9370822862516786`", ",", "0.7808476274161802`"}], "}"}]},
    {"18", "3257", "\<\"ISOGONAL CONJUGATE OF X(1635)\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.38384355394372405`"}], ",", "0.9667043960673463`"}], 
      "}"}]},
    {"19", "4598", "\<\"TRILINEAR POLE OF THE LINE X(1)X(87)\"\>", 
     RowBox[{"{", 
      RowBox[{"1.4982797541255088`", ",", "0.04787844969923164`"}], "}"}]},
    {"20", "4599", "\<\"TRILINEAR POLE OF THE LINE X(1)X(82)\"\>", 
     RowBox[{"{", 
      RowBox[{"0.4807201129871175`", ",", 
       RowBox[{"-", "0.9472552566863094`"}]}], "}"}]},
    {"21", "4604", "\<\"TRILINEAR POLE OF THE LINE X(1)X(89)\"\>", 
     RowBox[{"{", 
      RowBox[{"0.6864885404686053`", ",", 
       RowBox[{"-", "0.8891277832935888`"}]}], "}"}]},
    {"22", "4606", "\<\"TRILINEAR POLE OF THE LINE X(1)X(210)\"\>", 
     RowBox[{"{", 
      RowBox[{"1.2529746646223328`", ",", 
       RowBox[{"-", "0.5497694425098393`"}]}], "}"}]},
    {"23", "4607", "\<\"TRILINEAR POLE OF THE LINE X(1)X(190)\"\>", 
     RowBox[{"{", 
      RowBox[{"0.643039498320732`", ",", "0.9034502270246292`"}], "}"}]},
    {"24", "8052", "\<\"ISOTOMIC CONJUGATE OF X(8045)\"\>", 
     RowBox[{"{", 
      RowBox[{"1.2351663865479916`", ",", 
       RowBox[{"-", "0.5673971752336289`"}]}], "}"}]},
    {"25", "20332", "\<\"(name pending)\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.4573039470059512`"}], ",", 
       RowBox[{"-", "0.23689210487371765`"}]}], "}"}]},
    {"26", "23707", "\<\"ISOGONAL CONJUGATE OF X(2635)\"\>", 
     RowBox[{"{", 
      RowBox[{"0.045898557394548595`", ",", "0.9995317397948782`"}], "}"}]},
    {"27", 
     "24624", "\<\"(A,B,C,X(2); A',B',C',X(2)) COLLINEATION IMAGE OF X(662), \
WHERE A'B'C' = GEMINI TRIANGLE 2\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.2738106501328192`"}], ",", "0.5280599408771713`"}], 
      "}"}]},
    {"28", 
     "27834", "\<\"(A,B,C,X(2); A',B',C',X(2)) COLLINEATION IMAGE OF X(190), \
WHERE A'B'C' = GEMINI TRIANGLE 71\"\>", 
     RowBox[{"{", 
      RowBox[{"1.4139886642213209`", ",", "0.3337571022655744`"}], "}"}]},
    {"29", "32680", "\<\"TRILINEAR PRODUCT X(2)*X(476)\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.482650432242256`"}], ",", "0.15165413248111856`"}], 
      "}"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7710034700750647`*^9, 3.771003750427784*^9, 
  3.7710256455952444`*^9, 3.771159276682485*^9, 3.771675534729141*^9, 
  3.772137211934861*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Main Axis Sim", "Section",
 CellChangeTimes->{{3.770991754708852*^9, 3.7709917589567285`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getIsotomicAxisLow"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getIsotomicAxisLow", "[", 
    RowBox[{"tri_", ",", "sides_", ",", "actData_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "axisPts", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<tri\>\"", "\[Rule]", "tri"}], ",", 
          RowBox[{"\"\<sides\>\"", "\[Rule]", "sides"}], ",", 
          RowBox[{"\"\<inc\>\"", "\[Rule]", "inc"}], ",", 
          RowBox[{"\"\<incR\>\"", "\[Rule]", "incR"}], ",", 
          RowBox[{"\"\<npc\>\"", "\[Rule]", "npc"}], ",", 
          RowBox[{"\"\<npcR\>\"", "\[Rule]", "npcR"}], ",", 
          RowBox[{"\"\<tps\>\"", "\[Rule]", "tps"}]}], "|>"}], "]"}], ";"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"axisPts", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"interRays", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"#2", "-", "#1"}], ",", "#3", ",", 
            RowBox[{"#4", "-", "#3"}]}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"actData", "[", "\"\<tri\>\"", "]"}], ",", 
           RowBox[{"RotateLeft", "@", 
            RowBox[{"actData", "[", "\"\<tri\>\"", "]"}]}], ",", 
           RowBox[{"actData", "[", "\"\<tps\>\"", "]"}], ",", 
           RowBox[{"RotateLeft", "@", 
            RowBox[{"actData", "[", "\"\<tps\>\"", "]"}]}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "axisPts"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7708969374067683`*^9, 3.7708970185656357`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Perp. to orthic (isogonal) axis : X(1)X(3)
Perp. to isotomic axis : X(1)X(7) [gergonne point]\
\>", "Subsubsection",
 CellChangeTimes->{{3.770933606632312*^9, 3.7709336509872828`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"perpAntiorthicAndIsotomic", "[", 
   RowBox[{"a_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "o", ",", "n", ",", "s", ",", "inc", ",", "bar", ",", "cir", ",", "exc", 
      ",", "aoa", ",", "actData", ",", "ita", ",", "ger"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"o", ",", "n"}], "}"}], "=", 
      RowBox[{"orbitNormals", "[", 
       RowBox[{"a", ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"s", "=", 
      RowBox[{"RotateLeft", "@", 
       RowBox[{"triLengths", "@", "o"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"inc", "=", 
      RowBox[{"getIncenter", "[", 
       RowBox[{
        RowBox[{"o", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"n", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"o", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"n", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"bar", "=", 
      RowBox[{"getBaricenter", "@@", "o"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cir", "=", 
      RowBox[{"getCircumcenterTrilin", "[", 
       RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ger", "=", 
      RowBox[{"getGergonneTrilin", "[", 
       RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"exc", "=", 
      RowBox[{"excentralTriangle", "[", 
       RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"isogonal", " ", "/", " ", "anti"}], "-", "orthic"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"aoa", "=", 
      RowBox[{"getAntiOrthicAxis", "[", 
       RowBox[{"o", ",", "exc"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"actData", "=", 
      RowBox[{"getAnticomplData", "[", 
       RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "isotomic", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"ita", "=", 
      RowBox[{"getIsotomicAxisLow", "[", 
       RowBox[{"o", ",", "s", ",", "actData"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "euler", " ", "line", " ", "of", " ", "excentral", " ", "triangle", 
        " ", "is", " ", "perp", " ", "to", " ", "its", " ", "axis"}], ",", 
       " ", 
       RowBox[{
       "but", " ", "this", " ", "line", " ", "goes", " ", "thru", " ", "X", 
        RowBox[{"(", "1", ")"}], " ", "and", " ", "X", 
        RowBox[{"(", "3", ")"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<aoaX1X3\>\"", "\[Rule]", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"inc", "-", "cir"}], ")"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"aoa", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"aoa", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<itaX1X3\>\"", "\[Rule]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"inc", "-", "cir"}], ")"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ita", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"ita", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], ",", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"doesn", "'"}], "t", " ", 
         RowBox[{"work", "!"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<itaX1X7\>\"", "\[Rule]", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"inc", "-", "ger"}], ")"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ita", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"ita", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}]}], 
      RowBox[{"(*", " ", 
       RowBox[{"works", "!"}], " ", "*)"}], "\[IndentingNewLine]", "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.770932963991078*^9, 3.770933088662759*^9}, {
  3.7709332073677454`*^9, 3.770933299496005*^9}, {3.770933400646727*^9, 
  3.7709334245113926`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<aoaX1X3\>\"", ",", "\"\<itaX1X7\>\""}], "}"}], "/.", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"perpAntiorthicAndIsotomic", "[", 
     RowBox[{"1.5", ",", "t"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", ".01", ",", 
      RowBox[{"\[Pi]", "-", ".01"}], ",", 
      RowBox[{"\[Pi]", "/", "10."}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7709330776364765`*^9, 3.7709330959076586`*^9}, {
  3.7709332107157984`*^9, 3.7709332108913317`*^9}, {3.770933315363551*^9, 
  3.7709335956596327`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8.881784197001252`*^-15"}], ",", 
     "6.106226635438361`*^-15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.5543122344752192`*^-15"}], ",", 
     RowBox[{"-", "3.608224830031759`*^-16"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.552713678800501`*^-15", ",", 
     RowBox[{"-", "3.885780586188048`*^-15"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.552713678800501`*^-15", ",", "2.3314683517128287`*^-15"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "9.769962616701378`*^-15"}], ",", 
     "8.215650382226158`*^-15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.2878587085651816`*^-13"}], ",", 
     "1.4210854715202004`*^-13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.552713678800501`*^-15", ",", 
     RowBox[{"-", "6.661338147750939`*^-15"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3322676295501878`*^-15", ",", 
     RowBox[{"-", "2.55351295663786`*^-15"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.3306690738754696`*^-16", ",", "1.0547118733938987`*^-15"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.419486915845482`*^-14"}], ",", 
     "5.750955267558311`*^-14"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7709330962677245`*^9, 3.7709332121718826`*^9, {3.7709333019923134`*^9, 
   3.770933370013624*^9}, {3.7709334393075895`*^9, 3.770933445427363*^9}, {
   3.7709334894860525`*^9, 3.770933494995345*^9}, {3.7709335543154964`*^9, 
   3.7709335968085613`*^9}, 3.770934473293294*^9, 3.770936129009015*^9, 
   3.7710256456620655`*^9, 3.7711592767951856`*^9, 3.7716755348208866`*^9, 
   3.772137212000654*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getIsotomicAxis"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getIsotomicAxis", "[", "tri_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sides", ",", "actData", ",", "x100", ",", "x693", ",", "x693trilin", 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", "actTpsIsotConj", "*)"}], "\[IndentingNewLine]", 
       "actTpsIsogConj", ",", "axisPts", ",", "noise"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sides", "=", 
       RowBox[{"RotateLeft", "@", 
        RowBox[{"triLengths", "@", "tri"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<tri\>\"", "\[Rule]", "tri"}], ",", 
           RowBox[{"\"\<sides\>\"", "\[Rule]", "sides"}], ",", 
           RowBox[{"\"\<inc\>\"", "\[Rule]", "inc"}], ",", 
           RowBox[{"\"\<incR\>\"", "\[Rule]", "incR"}], ",", 
           RowBox[{"\"\<npc\>\"", "\[Rule]", "npc"}], ",", 
           RowBox[{"\"\<npcR\>\"", "\[Rule]", "npcR"}], ",", 
           RowBox[{"\"\<tps\>\"", "\[Rule]", "tps"}]}], "|>"}], "]"}], ";"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"actData", "=", 
       RowBox[{"getAnticomplData", "[", 
        RowBox[{"tri", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x100", "=", 
       RowBox[{"getX100Trilin", "[", 
        RowBox[{"tri", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x693", "=", 
       RowBox[{
        RowBox[{"isotomicConjugate", "[", 
         RowBox[{"x100", ",", "tri"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x693trilin", "=", 
       RowBox[{"getX693Trilin", "[", 
        RowBox[{"tri", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"axisPts", "=", 
       RowBox[{"getIsotomicAxisLow", "[", 
        RowBox[{"tri", ",", "sides", ",", "actData"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"actTpsIsogConj", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"isogonalConjugate", "[", 
          RowBox[{"#", ",", "tri", ",", 
           RowBox[{"getTriBisectors", "@@", "tri"}]}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"actData", "[", "\"\<tps\>\"", "]"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"noise", "=", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "2"}], "]"}], "*", 
          RowBox[{"10", "^", 
           RowBox[{"-", "6"}]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"actTpsIsotConj", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"isotomicConjugate", "[", 
              RowBox[{
               RowBox[{"#", "+", "noise"}], ",", "tri"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"actData", "[", "\"\<tps\>\"", "]"}], ")"}]}]}], ";"}], 
       "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<x100\>\"", "\[Rule]", "x100"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<x693\>\"", "\[Rule]", "x693"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<x693trilin\>\"", "\[Rule]", "x693trilin"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<act\>\"", "\[Rule]", 
         RowBox[{"actData", "[", "\"\<tri\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<actTps\>\"", "\[Rule]", 
         RowBox[{"actData", "[", "\"\<tps\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<actInc\>\"", "\[Rule]", 
         RowBox[{"actData", "[", "\"\<inc\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<actIncR\>\"", "\[Rule]", 
         RowBox[{"actData", "[", "\"\<incR\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<axisPts\>\"", "\[Rule]", "axisPts"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<actTpsIsogConj\>\"", "\[Rule]", "actTpsIsogConj"}]}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"\"\<actTpsIsotConj\>\"", "\[Rule]", "actTpsIsotConj"}]}], 
        "*)"}], "|>"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQvWlxwlwZiTeOalvfrQHRbxyXmcgC6YuOT8F00PHb
LQ5AWvROSDeI7jrysR9EX1s6bT6I9routBlEvzpydAuILqtv2QuiI9TnXwXR
l99oPQHRs9gPg+n6oNuvQPQn9f0fQPTx074sjkDaZc5sThAdsOSvHIi+f7NA
GUTbOSlmuwPpTfbzC0B06c+5fSC6/eXsySA6wrZzBoi+J2Y5E0TH/HR75guk
P18pBdMi/peY/IC0xaNtzCBaUn7lNhC9ZMPa3SD6WNbD/SB6QirDQRDddYjl
BIguWy8OpjdP/iGfBKSjNnBogWipsp2fQPQ9V45vIPpCzaHJmUB60uFdW0C0
WqVdVBbI/put0SAaAJqupr4=
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getIsotomicAxis", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7708120851656313`*^9, 3.7708121128463354`*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"x100\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2.0572539656250766`", ",", "1.2262116026107528`"}], "}"}]}], 
   ",", 
   RowBox[{"\<\"x693\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"7.661337471912626`", ",", "5.596802483147576`"}], "}"}]}], ",", 
   RowBox[{"\<\"x693trilin\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"7.661337471912617`", ",", "5.59680248314757`"}], "}"}]}], ",", 
   RowBox[{"\<\"act\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3.`", ",", "2.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.`", ",", "2.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.`"}], ",", 
        RowBox[{"-", "2.`"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"actTps\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.8176974685673938`", ",", "1.6353949371347876`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"1.8740320488976425`", ",", "0.8740320488976423`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"1.4076408527535997`", ",", "2.`"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"actInc\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1.4076408527535997`", ",", "1.3404232450416846`"}], "}"}]}], 
   ",", 
   RowBox[{"\<\"actIncR\"\>", "\[Rule]", "0.6595767549583152`"}], ",", 
   RowBox[{"\<\"axisPts\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.3118349659180062`", ",", "2.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.2229461854052213`", ",", "2.4458923708104425`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"5.576491222541473`", ",", "4.576491222541473`"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"actTpsIsogConj\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2.0607844466135297`", ",", 
        RowBox[{"-", "0.6869281488711766`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10.907790726715552`"}], ",", 
        RowBox[{"-", "3.969263575571854`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.830688679215848`", ",", 
        RowBox[{"-", "0.49206603764753726`"}]}], "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.7708121019265184`*^9, 3.7708121132054043`*^9}, 
   3.770812255074588*^9, {3.770812290051109*^9, 3.770812295085659*^9}, 
   3.7708124519960465`*^9, 3.770812494689456*^9, 3.770812700811206*^9, 
   3.770813602480215*^9, 3.7708257722060413`*^9, 3.7708258135934353`*^9, {
   3.7708258586303873`*^9, 3.770825885862751*^9}, 3.77082595147211*^9, 
   3.7708322838348093`*^9, 3.7708326515104675`*^9, 3.7708383299059362`*^9, 
   3.770839085005224*^9, 3.770840471289236*^9, 3.7708405878232255`*^9, {
   3.7708406231219287`*^9, 3.770840642096521*^9}, 3.7708423388810616`*^9, 
   3.770882532601433*^9, 3.7708865625297737`*^9, 3.770892468600907*^9, 
   3.7708946254237003`*^9, {3.770895704011528*^9, 3.770895727994528*^9}, 
   3.770895783401675*^9, 3.770897117754819*^9, 3.7708974367708116`*^9, 
   3.770934473593492*^9, 3.7709361291576166`*^9, 3.770936856176159*^9, 
   3.7710256456850033`*^9, 3.7711592768799295`*^9, 3.771675534897681*^9, 
   3.7721372120225945`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"showAntiOrthicAxis", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "showAntiOrthicAxis"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"tIsogonal", "\[Rule]", "0"}], ",", 
     RowBox[{"tIsotomic", "\[Rule]", "0"}], ",", 
     RowBox[{"drSteiner", "\[Rule]", "False"}], ",", 
     RowBox[{"drX1", "\[Rule]", "False"}], ",", 
     RowBox[{"drCircum", "\[Rule]", "False"}], ",", 
     RowBox[{"drAoaConstr", "\[Rule]", "False"}], ",", 
     RowBox[{"drItaConstr", "\[Rule]", "False"}], ",", 
     RowBox[{"drX88", "\[Rule]", "False"}], ",", 
     RowBox[{"drAoaFoot", "\[Rule]", "False"}], ",", 
     RowBox[{"drPerps", "\[Rule]", "False"}], ",", 
     RowBox[{"drDarboux", "\[Rule]", "False"}], ",", 
     RowBox[{"drDarbouxAxis", "\[Rule]", "False"}], ",", 
     RowBox[{"drAntiContact", "\[Rule]", "False"}], ",", 
     RowBox[{"drIsogonalSample", "\[Rule]", "False"}], ",", 
     RowBox[{"drIsotomicSample", "\[Rule]", "False"}], ",", 
     RowBox[{"drIsogLim", "\[Rule]", "False"}], ",", 
     RowBox[{"drIsotLim", "\[Rule]", "False"}], ",", 
     RowBox[{"drPeterMoses1k", "\[Rule]", "False"}], ",", 
     RowBox[{"drPeterMosesAbove1k", "\[Rule]", "False"}], ",", 
     RowBox[{"drPeterMosesAbove4k", "\[Rule]", "False"}], ",", 
     RowBox[{"drAxes", "\[Rule]", "False"}], ",", 
     RowBox[{"pointSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"fontSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"labelDist", "\[Rule]", ".1"}], ",", 
     RowBox[{"maxX", "\[Rule]", "4"}], ",", 
     RowBox[{"maxY", "\[Rule]", "4"}], ",", 
     RowBox[{"drNotables", "\[Rule]", "True"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "showAntiOrthicAxis"}], ";", 
  RowBox[{
   RowBox[{"showAntiOrthicAxis", "[", 
    RowBox[{"a_", ",", "t_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "o", ",", "n", ",", "s", ",", "ell", ",", "exc", ",", 
       "\[IndentingNewLine]", "aoa", " ", 
       RowBox[{"(*", 
        RowBox[{"anti", "-", 
         RowBox[{
          RowBox[{"orthic", "/", "isogonal"}], " ", "axis"}]}], "*)"}], ",", 
       "ita", ",", 
       RowBox[{"(*", 
        RowBox[{"isotomic", " ", "axis"}], "*)"}], "\[IndentingNewLine]", 
       "aoaPerp", ",", "itaPerp", ",", "\[IndentingNewLine]", "cir", ",", 
       "inc", ",", "bar", ",", "ger", ",", "nag", ",", "x44", ",", "x88", ",",
        "x100", ",", "x144", ",", "x142", ",", "x190", ",", 
       "\[IndentingNewLine]", "actData", ",", "\[IndentingNewLine]", 
       "incCircumEll", ",", "incCircumEllVtx", ",", "incCircumEllVtxIsog", 
       ",", "\[IndentingNewLine]", "incHalf", ",", "incHalfCircumEll", ",", 
       "incHalfCircumEllVtx", ",", "incHalfCircumEllVtxIsog", ",", 
       "\[IndentingNewLine]", "barCircumEll", ",", "barCircumEllVtx", ",", 
       "barCircumEllVtxIsog", ",", "\[IndentingNewLine]", "gr", ",", "grAoc", 
       ",", "x44inter", ",", "x88inter", ",", "x88isog", ",", "pEll44", ",", 
       "pEllisog", ",", "aoaFoot", ",", "pAntiorthic", ",", "pIsotomic", ",", 
       "\[IndentingNewLine]", "pInterAxes", ",", "pInterIsog", ",", 
       "pInterIsot", ",", "\[IndentingNewLine]", "mosesCtrs", ",", 
       RowBox[{"circRad", "=", ".1"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ell", "=", 
       RowBox[{"plotEll", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"o", ",", "n"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{"RotateLeft", "@", 
        RowBox[{"triLengths", "@", "o"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"inc", "=", 
       RowBox[{"getIncenter", "[", 
        RowBox[{
         RowBox[{"o", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"n", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"o", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"n", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bar", "=", 
       RowBox[{"getBaricenter", "@@", "o"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cir", "=", 
       RowBox[{"getCircumcenterTrilin", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ger", "=", 
       RowBox[{"getGergonneTrilin", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nag", "=", 
       RowBox[{"getNagelTrilin", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"exc", "=", 
       RowBox[{"excentralTriangle", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"isogonal", " ", "/", " ", "anti"}], "-", "orthic"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"aoa", "=", 
       RowBox[{"getAntiOrthicAxis", "[", 
        RowBox[{"o", ",", "exc"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"actData", "=", 
       RowBox[{"getAnticomplData", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "isotomic", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ita", "=", 
       RowBox[{"getIsotomicAxisLow", "[", 
        RowBox[{"o", ",", "s", ",", "actData"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "euler", " ", "line", " ", "of", " ", "excentral", " ", "triangle", 
         " ", "is", " ", "perp", " ", "to", " ", "its", " ", "axis"}], ",", 
        " ", 
        RowBox[{
        "but", " ", "this", " ", "line", " ", "goes", " ", "thru", " ", "X", 
         RowBox[{"(", "1", ")"}], " ", "and", " ", "X", 
         RowBox[{"(", "3", ")"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"aoaPerp", "=", 
       RowBox[{"interRays", "[", 
        RowBox[{"inc", ",", 
         RowBox[{"inc", "-", "cir"}], ",", 
         RowBox[{"aoa", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"aoa", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "-", 
          RowBox[{"aoa", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"itaPerp", "=", 
       RowBox[{"interRays", "[", 
        RowBox[{"inc", ",", 
         RowBox[{"inc", "-", "ger"}], ",", 
         RowBox[{"ita", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"ita", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "-", 
          RowBox[{"ita", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x144", "=", 
       RowBox[{"getX144Trilin", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x44inter", "=", 
       RowBox[{"interRays", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "inc", ",", 
         RowBox[{"First", "@", "aoa"}], ",", 
         RowBox[{
          RowBox[{"Second", "@", "aoa"}], "-", 
          RowBox[{"First", "@", "aoa"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x44", "=", 
       RowBox[{"getX44Trilin", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x88", "=", 
       RowBox[{"getX88Trilin", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x100", "=", 
       RowBox[{"getX100Trilin", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x190", "=", 
       RowBox[{"getX190Trilin", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x142", "=", 
       RowBox[{"getX142Trilin", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x88isog", "=", 
       RowBox[{"isogonalConjugate", "[", 
        RowBox[{"x44", ",", "o", ",", "n"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pEll44", "=", 
       RowBox[{"inc", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"magn", "@", "x44"}], "/", 
          RowBox[{"magn", "@", "inc"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pEllisog", "=", 
       RowBox[{"isogonalConjugate", "[", 
        RowBox[{"pEll44", ",", "o", ",", "n"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x88inter", "=", 
       RowBox[{"interRays", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "x88", ",", 
         RowBox[{"First", "@", "aoa"}], ",", 
         RowBox[{
          RowBox[{"Second", "@", "aoa"}], "-", 
          RowBox[{"First", "@", "aoa"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"aoaFoot", "=", 
       RowBox[{"closestPerp", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"First", "@", "aoa"}], ",", 
         RowBox[{"Second", "@", "aoa"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pAntiorthic", "=", 
       RowBox[{"ray", "[", 
        RowBox[{"aoaFoot", ",", 
         RowBox[{"norm", "[", 
          RowBox[{"x44", "-", "aoaFoot"}], "]"}], ",", 
         RowBox[{"OptionValue", "@", "tIsogonal"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pIsotomic", "=", 
       RowBox[{"ray", "[", 
        RowBox[{
         RowBox[{"ita", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"norm", "[", 
          RowBox[{
           RowBox[{"ita", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "-", 
           RowBox[{"ita", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"OptionValue", "@", "tIsotomic"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pInterAxes", "=", 
       RowBox[{"interRays", "[", 
        RowBox[{"aoaFoot", ",", 
         RowBox[{"x44", "-", "aoaFoot"}], ",", 
         RowBox[{"ita", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"ita", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "-", 
          RowBox[{"ita", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pInterIsog", "=", 
       RowBox[{"isogonalConjugate", "[", 
        RowBox[{"pInterAxes", ",", "o", ",", "n"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pInterIsot", "=", 
       RowBox[{
        RowBox[{"isotomicConjugate", "[", 
         RowBox[{"pInterAxes", ",", "o"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"incCircumEll", "=", 
       RowBox[{"getCircumAny", "[", 
        RowBox[{"o", ",", "inc"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"incCircumEllVtx", "=", 
       RowBox[{"incCircumEll", "[", "\"\<vertices\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"incCircumEllVtxIsog", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"isogonalConjugate", "[", 
          RowBox[{"#", ",", "o", ",", "n"}], "]"}], "&"}], "/@", 
        "incCircumEllVtx"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"incHalf", "=", 
       RowBox[{"inc", "/", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"incHalfCircumEll", "=", 
       RowBox[{"getCircumAny", "[", 
        RowBox[{"o", ",", "incHalf"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"incHalfCircumEllVtx", "=", 
       RowBox[{"incHalfCircumEll", "[", "\"\<vertices\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"incHalfCircumEllVtxIsog", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"isogonalConjugate", "[", 
          RowBox[{"#", ",", "o", ",", "n"}], "]"}], "&"}], "/@", 
        "incHalfCircumEllVtx"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"barCircumEll", "=", 
       RowBox[{"getCircumAny", "[", 
        RowBox[{"o", ",", "bar"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"barCircumEllVtx", "=", 
       RowBox[{"barCircumEll", "[", "\"\<vertices\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"barCircumEllVtxIsog", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"isogonalConjugate", "[", 
          RowBox[{"#", ",", "o", ",", "n"}], "]"}], "&"}], "/@", 
        "barCircumEllVtx"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mosesCtrs", "=", 
       RowBox[{"getMosesTrilinears", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FaceForm", "@", "None"}], ",", 
          RowBox[{"PointSize", "@", 
           RowBox[{"OptionValue", "@", "pointSize"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"ellLabelPoints", "[", 
            RowBox[{"a", ",", "o", ",", "\"\<P\>\"", ",", "Medium", ",", 
             RowBox[{"1.5", "*", 
              RowBox[{"OptionValue", "@", "labelDist"}]}]}], "]"}], 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{"#1", ",", "#2", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1.5"}], ",", 
                   RowBox[{"-", "1.5"}]}], "}"}]}], "]"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(P\), \(1\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(P\), \(2\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(P\), \(3\)]\)\>\""}], "}"}], ",", 
                "o"}], "}"}]}], "]"}], "*)"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Black"}], "}"}]}], ",", 
            RowBox[{"Polygon", "@", "o"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drAxes"}], ",", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Blue", ",", 
                RowBox[{"Point", "@", "aoa"}], ",", "Thick", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"First", "@", "aoa"}], ",", 
                   RowBox[{"Second", "@", "aoa"}], ",", 
                   RowBox[{"Third", "@", "aoa"}]}], "}"}], "]"}]}], "}"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Red", ",", 
                RowBox[{"Point", "@", "ita"}], ",", "Thick", ",", 
                RowBox[{"Line", "[", "ita", "]"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"Point", "@", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{"\"\<\!\(\*SubscriptBox[\(X\), \(9\)]\)\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drNotables"}], ",", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#1", ",", 
                 RowBox[{"Point", "@", "#2"}], ",", 
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\"\<X\>\"", ",", "#3"}], "]"}], ",", "#2", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.5"}], ",", 
                    RowBox[{"-", "1.5"}]}], "}"}]}], "]"}]}], "}"}], "&"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"Transpose", "@", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\"\<inc\>\"", " ", "/.", "ptClrs"}], ",", "inc", 
                   ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\"\<bar\>\"", "/.", "ptClrs"}], ",", "bar", ",", 
                   "2"}], "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\"\<cir\>\"", "/.", "ptClrs"}], ",", "cir", ",", 
                   "3"}], "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\"\<ger\>\"", "/.", "ptClrs"}], ",", "ger", ",", 
                   "7"}], "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Darker", "@", "Green"}], ",", "nag", ",", "8"}], 
                  "}"}], ",", " ", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                  "he", " ", "is", " ", "the", " ", "incenter", " ", "of", 
                   " ", "the", " ", "anticompl", " ", "triangle"}], " ", 
                  "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\"\<tab\>\"", "/.", "ptClrs"}], ",", "x142", ",", 
                   "142"}], "}"}], ",", " ", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                  "mittenpunkt", " ", "of", " ", "the", " ", "medial", " ", 
                   RowBox[{"triangle", " ", "--"}], " ", "not", " ", 
                   "shown"}], " ", "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\"\<dar\>\"", "/.", "ptClrs"}], ",", "x144", ",", 
                   "144"}], "}"}]}], " ", 
                RowBox[{"(*", " ", 
                 RowBox[{
                 "perspector", " ", "of", " ", "anticompl", " ", "triangle", 
                  " ", "with", " ", "its", " ", "contact", " ", "triangle"}], 
                 " ", "*)"}], "\[IndentingNewLine]", "}"}]}]}], "]"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Red", ",", 
            RowBox[{"PointSize", "@", 
             RowBox[{"OptionValue", "@", "pointSize"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Point", "@", "x100"}], ",", 
            RowBox[{"ellLabelTxt", "[", 
             RowBox[{
             "a", ",", "x100", ",", 
              "\"\<\!\(\*SubscriptBox[\(X\), \(100\)]\)\>\"", ",", 
              RowBox[{"OptionValue", "@", "labelDist"}], ",", 
              RowBox[{"inward", "\[Rule]", "False"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Point", "@", "x190"}], ",", 
            RowBox[{"ellLabelTxt", "[", 
             RowBox[{
             "a", ",", "x190", ",", 
              "\"\<\!\(\*SubscriptBox[\(X\), \(190\)]\)\>\"", ",", 
              RowBox[{"OptionValue", "@", "labelDist"}], ",", 
              RowBox[{"inward", "\[Rule]", "False"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Point", "@", "x88"}], ",", 
            RowBox[{"ellLabelTxt", "[", 
             RowBox[{
             "a", ",", "x88", ",", 
              "\"\<\!\(\*SubscriptBox[\(X\), \(88\)]\)\>\"", ",", 
              RowBox[{"OptionValue", "@", "labelDist"}], ",", 
              RowBox[{"inward", "\[Rule]", "False"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drAntiContact"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Darker", "@", "Green"}], ",", "Thick", ",", 
                RowBox[{"Circle", "[", 
                 RowBox[{"nag", ",", 
                  RowBox[{"actData", "[", "\"\<incR\>\"", "]"}]}], "]"}]}], 
               "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"EdgeForm", "@", 
                 RowBox[{"Darker", "@", "Green"}]}], ",", 
                RowBox[{"Polygon", "@", 
                 RowBox[{"actData", "[", "\"\<tps\>\"", "]"}]}], ",", 
                RowBox[{"Darker", "@", "Green"}], ",", 
                RowBox[{"Point", "@", 
                 RowBox[{"actData", "[", "\"\<tps\>\"", "]"}]}]}], "}"}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"EdgeForm", "@", "Blue"}], ",", 
                RowBox[{"Polygon", "@", 
                 RowBox[{"actData", "[", "\"\<tri\>\"", "]"}]}]}], "}"}]}], 
             "\[IndentingNewLine]", "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drDarbouxAxis"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<dar\>\"", "/.", "ptClrs"}], ",", "Dashed", ",", 
              "Thick", ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{"ger", ",", "x144"}], "}"}], "]"}], ",", 
              RowBox[{"Darker", "@", "Green"}], ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{"x88", ",", "x100"}], "}"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drX88"}], ",", 
            RowBox[{"{", 
             RowBox[{"Magenta", ",", 
              RowBox[{"Point", "@", "x88"}], ",", 
              RowBox[{"Circle", "[", 
               RowBox[{"x88isog", ",", "circRad"}], "]"}], ",", 
              RowBox[{"Text", "[", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(X\), \(88\)]\)\>\"", ",", "x88", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "]"}], ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", "x88inter"}], "}"}], 
               "]"}], ",", 
              RowBox[{"Point", "@", "x88inter"}], ",", "Orange", ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", "pEllisog"}], "}"}], 
               "]"}], ",", 
              RowBox[{"Point", "@", "pEllisog"}], ",", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<T'\>\"", ",", "pEllisog", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1.5"}], ",", 
                  RowBox[{"-", "1.5"}]}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Red", ",", 
                RowBox[{"Point", "@", "x44inter"}], ",", 
                RowBox[{"Circle", "[", 
                 RowBox[{"x44", ",", "circRad"}], "]"}], ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(X\), \(44\)]\)\>\"", ",", "x44", 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1.5"}], ",", 
                    RowBox[{"-", "1.5"}]}], "}"}]}], "]"}], ",", "Dashed", 
                ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "x44inter"}], "}"}], 
                 "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Red", ",", 
                RowBox[{"Point", "@", "pEll44"}], ",", 
                RowBox[{"Text", "[", 
                 RowBox[{"\"\<T\>\"", ",", "pEll44", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1.25"}], ",", 
                    RowBox[{"-", "1.25"}]}], "}"}]}], "]"}]}], "}"}]}], "}"}],
             ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drAoaConstr"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Darker", "@", 
               RowBox[{"Darker", "@", "Green"}]}], ",", "Dashed", ",", 
              RowBox[{"MapThread", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Line", "@", 
                  RowBox[{"{", 
                   RowBox[{"#1", ",", "#2"}], "}"}]}], "&"}], ",", 
                RowBox[{"{", 
                 RowBox[{"exc", ",", "aoa"}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "Black", ",", 
              RowBox[{"MapThread", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Line", "@", 
                  RowBox[{"{", 
                   RowBox[{"#1", ",", "#2"}], "}"}]}], "&"}], ",", 
                RowBox[{"{", 
                 RowBox[{"o", ",", "aoa"}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Darker", "@", "Green"}], ",", 
                RowBox[{"MapThread", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Text", "[", 
                    RowBox[{"#1", ",", "#2", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.5"}], ",", 
                    RowBox[{"-", "1.5"}]}], "}"}]}], "]"}], "&"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(P\), \(1\)]\)'\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(P\), \(2\)]\)'\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(P\), \(3\)]\)'\>\""}], "}"}], 
                    ",", "exc"}], "}"}]}], "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"EdgeForm", "@", 
                 RowBox[{"{", 
                  RowBox[{"Darker", "@", 
                   RowBox[{"Darker", "@", "Green"}]}], "}"}]}], ",", 
                RowBox[{"Polygon", "@", "exc"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drAoaFoot"}], ",", 
            RowBox[{"{", 
             RowBox[{"Blue", ",", 
              RowBox[{"Point", "@", "aoaFoot"}], ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", "aoaFoot"}], "}"}], 
               "]"}], ",", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<foot\>\"", ",", "aoaFoot", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drCircum"}], ",", 
            RowBox[{"{", 
             RowBox[{"Dashed", ",", "Red", ",", 
              RowBox[{"Point", "@", "cir"}], ",", 
              RowBox[{"Circle", "[", 
               RowBox[{"cir", ",", 
                RowBox[{"magn", "[", 
                 RowBox[{"cir", "-", 
                  RowBox[{"o", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drDarboux"}], ",", 
            RowBox[{"{", 
             RowBox[{"Dashed", ",", "Red", ",", 
              RowBox[{"Point", "@", "x144"}], ",", 
              RowBox[{"Text", "[", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(X\), \(144\)]\)\>\"", ",", "x144", 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"MapThread", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Line", "[", 
                  RowBox[{"{", 
                   RowBox[{"#1", ",", "#2"}], "}"}], "]"}], "&"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"actData", "[", "\"\<tri\>\"", "]"}], ",", 
                  RowBox[{"actData", "[", "\"\<tps\>\"", "]"}]}], "}"}]}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drX1"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Darker", "@", "Green"}], ",", 
              RowBox[{"Point", "@", "incCircumEllVtx"}], ",", 
              RowBox[{"Point", "@", "incCircumEllVtxIsog"}], ",", 
              RowBox[{"Line", "@", "incCircumEllVtxIsog"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"incCircumEllVtxIsog", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"ray", "[", 
                  RowBox[{
                   RowBox[{"incCircumEllVtxIsog", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"incCircumEllVtxIsog", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", 
                    RowBox[{"incCircumEllVtxIsog", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", "10"}], "]"}]}], 
                "}"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"incCircumEllVtxIsog", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"ray", "[", 
                  RowBox[{
                   RowBox[{"incCircumEllVtxIsog", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"incCircumEllVtxIsog", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", 
                    RowBox[{"incCircumEllVtxIsog", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "10"}], "]"}]}], 
                "}"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drSteiner"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Darker", "@", "Pink"}], ",", 
              RowBox[{"Point", "@", "barCircumEllVtx"}], ",", 
              RowBox[{"Point", "@", "barCircumEllVtxIsog"}], ",", 
              RowBox[{"Line", "@", "barCircumEllVtxIsog"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"barCircumEllVtxIsog", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"ray", "[", 
                  RowBox[{
                   RowBox[{"barCircumEllVtxIsog", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"barCircumEllVtxIsog", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", 
                    RowBox[{"barCircumEllVtxIsog", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", "10"}], "]"}]}], 
                "}"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"barCircumEllVtxIsog", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"ray", "[", 
                  RowBox[{
                   RowBox[{"barCircumEllVtxIsog", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"barCircumEllVtxIsog", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", 
                    RowBox[{"barCircumEllVtxIsog", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "10"}], "]"}]}], 
                "}"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drIsogonalSample"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Darker", "@", "Cyan"}], ",", 
              RowBox[{"PointSize", "@", "Large"}], ",", 
              RowBox[{"Point", "@", "pAntiorthic"}], ",", 
              RowBox[{"Point", "@", 
               RowBox[{"isogonalConjugate", "[", 
                RowBox[{"pAntiorthic", ",", "o", ",", "n"}], "]"}]}]}], "}"}],
             ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drIsotomicSample"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Lighter", "@", "Red"}], ",", 
              RowBox[{"PointSize", "@", "Large"}], ",", 
              RowBox[{"Point", "@", "pIsotomic"}], ",", 
              RowBox[{"Point", "@", 
               RowBox[{
                RowBox[{"isotomicConjugate", "[", 
                 RowBox[{"pIsotomic", ",", "o"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drIsotLim"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"PointSize", "@", "Large"}], ",", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"ita", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "pInterAxes"}], 
                  "}"}], "]"}], ",", 
                RowBox[{"Point", "@", "pInterAxes"}]}], "}"}], ",", 
              RowBox[{"Lighter", "@", "Red"}], ",", 
              RowBox[{"Point", "@", "pInterIsot"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drIsogLim"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"PointSize", "@", "Large"}], ",", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"aoa", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "pInterAxes"}], 
                  "}"}], "]"}], ",", 
                RowBox[{"Point", "@", "pInterAxes"}]}], "}"}], ",", 
              RowBox[{"Darker", "@", "Cyan"}], ",", 
              RowBox[{"Point", "@", "pInterIsog"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drPerps"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"PointSize", "@", "Large"}], ",", "Dashed", ",", "Blue",
               ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{"cir", ",", "aoaPerp"}], "}"}], "]"}], ",", 
              RowBox[{"Point", "@", "aoaPerp"}], ",", "Red", ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{"ger", ",", "itaPerp"}], "}"}], "]"}], ",", 
              RowBox[{"Point", "@", "itaPerp"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drItaConstr"}], ",", 
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", "isoAxis", "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"isoAxis", "=", 
                RowBox[{"getIsotomicAxis", "[", "o", "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Blue", ",", 
                   RowBox[{"EdgeForm", "@", "Blue"}], ",", 
                   RowBox[{"Polygon", "@", 
                    RowBox[{"isoAxis", "[", "\"\<act\>\"", "]"}]}], ",", 
                   RowBox[{"Point", "@", 
                    RowBox[{"isoAxis", "[", "\"\<act\>\"", "]"}]}], ",", 
                   "Dashed", ",", 
                   RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{"#1", ",", "#2"}], "}"}]}], "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"isoAxis", "[", "\"\<act\>\"", " ", "]"}], ",", 
                    RowBox[{"isoAxis", "[", "\"\<axisPts\>\"", "]"}]}], 
                    "}"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Darker", "@", "Green"}], ",", 
                   RowBox[{"EdgeForm", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Darker", "@", "Green"}], ",", "Dashed"}], 
                    "}"}]}], ",", 
                   RowBox[{"Polygon", "@", 
                    RowBox[{"isoAxis", "[", "\"\<actTps\>\"", "]"}]}], ",", 
                   RowBox[{"Point", "@", 
                    RowBox[{"isoAxis", "[", "\"\<actTps\>\"", "]"}]}], ",", 
                   RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"isoAxis", "[", "\"\<actInc\>\"", "]"}], ",", 
                    RowBox[{"isoAxis", "[", "\"\<actIncR\>\"", "]"}]}], "]"}],
                    ",", "Dashed", ",", 
                   RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{"#1", ",", "#2"}], "}"}]}], "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"isoAxis", "[", "\"\<actTps\>\"", " ", "]"}], ",", 
                    RowBox[{"isoAxis", "[", "\"\<axisPts\>\"", "]"}]}], 
                    "}"}]}], "]"}]}], "}"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drPeterMoses1k"}], ",", 
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", "pmCtrs", "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"pmCtrs", "=", 
                RowBox[{"Select", "[", 
                 RowBox[{"mosesCtrs", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<=", "1000"}], "&"}]}], 
                 "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Point", "[", 
                  RowBox[{"Third", "/@", "pmCtrs"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ellLabelTxt", "[", 
                    RowBox[{"1.5", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\"\<X\>\"", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"OptionValue", "@", "labelDist"}]}], "]"}], "&"}],
                   "/@", "pmCtrs"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drPeterMosesAbove1k"}], ",", 
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", "pmCtrs", "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"pmCtrs", "=", 
                RowBox[{"Select", "[", 
                 RowBox[{"mosesCtrs", ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ">", "1000"}], "&&", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<=", "4000"}]}], ")"}], 
                   "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Red", ",", 
                 RowBox[{"Point", "[", 
                  RowBox[{"Third", "/@", "pmCtrs"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ellLabelTxt", "[", 
                    RowBox[{"1.5", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\"\<X\>\"", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"OptionValue", "@", "labelDist"}]}], "]"}], "&"}],
                   "/@", "pmCtrs"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drPeterMosesAbove4k"}], ",", 
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", "pmCtrs", "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"pmCtrs", "=", 
                RowBox[{"Select", "[", 
                 RowBox[{"mosesCtrs", ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ">", "4000"}], ")"}], 
                   "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Blue", ",", 
                 RowBox[{"Point", "[", 
                  RowBox[{"Third", "/@", "pmCtrs"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ellLabelTxt", "[", 
                    RowBox[{"1.5", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\"\<X\>\"", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"OptionValue", "@", "labelDist"}], ",", 
                    RowBox[{"inward", "\[Rule]", "True"}]}], "]"}], "&"}], "/@",
                   "pmCtrs"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ell", ",", "gr", ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drX1"}], ",", 
            RowBox[{"drawCircumAny", "[", 
             RowBox[{"o", ",", "inc", ",", 
              RowBox[{"ctrLab", "\[Rule]", "\"\<\>\""}], ",", 
              RowBox[{"ps", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Darker", "@", "Green"}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drSteiner"}], ",", 
            RowBox[{"drawCircumAny", "[", 
             RowBox[{"o", ",", "bar", ",", 
              RowBox[{"ctrLab", "\[Rule]", "\"\<\>\""}], ",", 
              RowBox[{"ps", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Darker", "@", "Pink"}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Antiorthic (Isogonal) and Isotomic Axes\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"Large", ",", "Black"}], "}"}]}], "]"}], ")"}]}], ",", 
        RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"OptionValue", "@", "maxX"}]}], ",", 
             RowBox[{"OptionValue", "@", "maxX"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"OptionValue", "@", "maxY"}]}], ",", 
             RowBox[{"OptionValue", "@", "maxY"}]}], "}"}]}], "}"}]}]}], 
       "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7707380279790697`*^9, 3.7707380746686974`*^9}, {
   3.770738239499651*^9, 3.7707382784657145`*^9}, {3.7707383102837067`*^9, 
   3.7707386062270308`*^9}, {3.770738638111094*^9, 3.770738827245993*^9}, {
   3.7707388676929297`*^9, 3.77073893250838*^9}, {3.770739019739658*^9, 
   3.770739038206072*^9}, {3.7707391140915003`*^9, 3.77073925327102*^9}, {
   3.770739315231498*^9, 3.7707394108762045`*^9}, {3.770739453488329*^9, 
   3.770739599125351*^9}, {3.7707397037846966`*^9, 3.7707400803300123`*^9}, {
   3.7707401156521378`*^9, 3.770740242986286*^9}, {3.7707403181873136`*^9, 
   3.770740353842022*^9}, {3.770740420371233*^9, 3.7707404286810246`*^9}, {
   3.770740511227392*^9, 3.770740562937235*^9}, {3.7707405971495523`*^9, 
   3.770740679056693*^9}, {3.770744339161125*^9, 3.7707443531281805`*^9}, {
   3.7707448377151394`*^9, 3.770744920538208*^9}, {3.7707472526452117`*^9, 
   3.770747429379224*^9}, {3.7707474836860895`*^9, 3.7707475860198264`*^9}, {
   3.770747688932625*^9, 3.77074772292601*^9}, {3.7708011426210146`*^9, 
   3.770801276178835*^9}, {3.770803771887697*^9, 3.770803776462471*^9}, {
   3.770886749221259*^9, 3.770886893271497*^9}, {3.7708872044234915`*^9, 
   3.7708872086162605`*^9}, {3.7708872389115653`*^9, 3.770887304935296*^9}, {
   3.7708874715112743`*^9, 3.770887471847869*^9}, {3.770887585993329*^9, 
   3.770887616306382*^9}, {3.7708876754395905`*^9, 3.7708877407035522`*^9}, {
   3.7708886729455223`*^9, 3.7708887115277004`*^9}, {3.770889448144483*^9, 
   3.770889449526842*^9}, {3.770889802925316*^9, 3.770889819028982*^9}, {
   3.7708900479480476`*^9, 3.7708900766497774`*^9}, {3.770890174477461*^9, 
   3.770890191438031*^9}, {3.770890272237424*^9, 3.7708905015799847`*^9}, {
   3.770890543162157*^9, 3.77089054329793*^9}, {3.770890708122534*^9, 
   3.7708907351916313`*^9}, {3.770890791909216*^9, 3.7708908210550933`*^9}, {
   3.770890857920021*^9, 3.7708908757424803`*^9}, {3.7708911102087464`*^9, 
   3.7708912412815876`*^9}, {3.77089197074119*^9, 3.770892116089612*^9}, {
   3.770892202303063*^9, 3.7708922133198133`*^9}, {3.7709308839982777`*^9, 
   3.7709309883672776`*^9}, {3.77093104142946*^9, 3.7709310701005173`*^9}, {
   3.770931104825152*^9, 3.7709311476719265`*^9}, {3.770931282202449*^9, 
   3.770931285009946*^9}, {3.7709313249409046`*^9, 3.770931385564808*^9}, {
   3.770931587628852*^9, 3.7709316870839396`*^9}, {3.7709318223237767`*^9, 
   3.7709318252031107`*^9}, {3.77093186570185*^9, 3.7709318865838943`*^9}, {
   3.7709319181020975`*^9, 3.770931918981776*^9}, {3.7709319644043856`*^9, 
   3.7709320139244976`*^9}, {3.770932073968094*^9, 3.770932105755911*^9}, {
   3.770932202273102*^9, 3.7709324009057283`*^9}, {3.770932515451579*^9, 
   3.7709325171720085`*^9}, {3.7709325919675913`*^9, 
   3.7709329210448523`*^9}, {3.770933674106497*^9, 3.7709338262727404`*^9}, {
   3.770934831048849*^9, 3.770934878760433*^9}, {3.7709349295882006`*^9, 
   3.770934962460351*^9}, {3.7709363258300357`*^9, 3.7709363504187355`*^9}, {
   3.770936399495123*^9, 3.7709364045516167`*^9}, {3.7709364829470835`*^9, 
   3.7709365643108177`*^9}, {3.7709366052374716`*^9, 
   3.7709366091889153`*^9}, {3.7709366982798233`*^9, 
   3.7709367173031797`*^9}, {3.770936773143675*^9, 3.7709367823365774`*^9}, {
   3.7709368786858935`*^9, 3.7709369496615767`*^9}, {3.7709370259830666`*^9, 
   3.7709370545814934`*^9}, {3.770980521657301*^9, 3.7709806418306932`*^9}, {
   3.770980739560301*^9, 3.7709807397121077`*^9}, {3.7709816615902147`*^9, 
   3.7709817081128836`*^9}, {3.7709817796799464`*^9, 
   3.7709818731859455`*^9}, {3.770981905800784*^9, 3.7709819140258007`*^9}, {
   3.7709819528330135`*^9, 3.7709820035624905`*^9}, {3.7709820581593895`*^9, 
   3.770982065590562*^9}, {3.770983147132126*^9, 3.7709831488106365`*^9}, {
   3.7709862024651146`*^9, 3.770986259260929*^9}, {3.770986488778945*^9, 
   3.7709867423170414`*^9}, {3.7709867905155535`*^9, 
   3.7709867916834316`*^9}, {3.7709869429856524`*^9, 3.770987001799591*^9}, {
   3.7709875123324423`*^9, 3.7709875241558485`*^9}, {3.770987588952121*^9, 
   3.77098760910626*^9}, {3.7709876509679008`*^9, 3.770987736055767*^9}, {
   3.7709887580247602`*^9, 3.7709887598159747`*^9}, {3.7709898453784714`*^9, 
   3.7709898573708334`*^9}, {3.770989999235168*^9, 3.770990094952285*^9}, {
   3.7709905488369846`*^9, 3.7709906293551145`*^9}, {3.770990751132276*^9, 
   3.7709907844721746`*^9}, {3.771004092594739*^9, 3.771004110098961*^9}, {
   3.771004704184871*^9, 3.7710047539931*^9}, {3.7710048205275154`*^9, 
   3.7710050367428207`*^9}, {3.771005084022769*^9, 3.771005245703134*^9}, {
   3.771005757100916*^9, 3.771005805927455*^9}, {3.771022704390128*^9, 
   3.7710227137324247`*^9}, {3.771022759879244*^9, 3.7710228433817115`*^9}, {
   3.7710228867677636`*^9, 3.77102288772919*^9}, {3.7710229622192783`*^9, 
   3.7710229749240537`*^9}, {3.771023154527873*^9, 3.771023269010645*^9}, {
   3.7710233177429323`*^9, 3.7710233223406453`*^9}, 3.771023787294917*^9, {
   3.7710238944424334`*^9, 3.771023894896207*^9}, {3.771023944561232*^9, 
   3.7710239532240477`*^9}, {3.7710239848505325`*^9, 
   3.7710240623278227`*^9}, {3.7710241465288267`*^9, 3.7710241489593024`*^9}, 
   3.771024198104469*^9, {3.771024468396634*^9, 3.7710244880624633`*^9}, {
   3.7710245959834447`*^9, 3.7710246375334053`*^9}, {3.7710256967175922`*^9, 
   3.7710256974596395`*^9}, {3.771025757493559*^9, 3.771025862059843*^9}, {
   3.7710259026351957`*^9, 3.771025902898492*^9}, {3.771025938250166*^9, 
   3.7710259891644344`*^9}, {3.7710262285074973`*^9, 3.771026277844289*^9}, {
   3.771026419989731*^9, 3.771026474195294*^9}, {3.77102857300101*^9, 
   3.771028576767044*^9}, {3.7710288420350494`*^9, 3.7710288847843685`*^9}, {
   3.772137491223981*^9, 3.7721376632127438`*^9}, {3.772137707550741*^9, 
   3.7721377510789175`*^9}, {3.7721377934068103`*^9, 3.772137793926423*^9}, {
   3.7721378599439383`*^9, 3.772137883651128*^9}, {3.772137916276928*^9, 
   3.772137943803257*^9}, {3.7721381847240925`*^9, 3.772138194682444*^9}, {
   3.772138260953847*^9, 3.7721382643991184`*^9}, {3.7721383562565975`*^9, 
   3.7721383688369527`*^9}, {3.772138755099211*^9, 3.772138761691743*^9}, {
   3.7721390253557596`*^9, 3.772139233557761*^9}, {3.772139361351761*^9, 
   3.772139394082636*^9}, {3.7721394708294487`*^9, 3.772139525680997*^9}, {
   3.7721395981955214`*^9, 3.772139659074506*^9}, {3.772139907891697*^9, 
   3.7721399436031713`*^9}, {3.77214004334206*^9, 3.7721400742285995`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"showAntiOrthicAxis", "[", 
    RowBox[{"1.5", ",", 
     RowBox[{"toRad", "@", "t"}], ",", 
     RowBox[{"tIsogonal", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"tIsogonal0", "^", "3"}], ")"}]}], ",", 
     RowBox[{"tIsotomic", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"tIsotomic0", "^", "3"}], ")"}]}], ",", 
     RowBox[{"drNotables", "\[Rule]", "drNotables0"}], ",", 
     RowBox[{"maxX", "\[Rule]", "maxX0"}], ",", 
     RowBox[{"maxY", "\[Rule]", "maxY0"}], ",", 
     RowBox[{"drX1", "\[Rule]", "drX10"}], ",", 
     RowBox[{"drSteiner", "\[Rule]", "drSteiner0"}], ",", 
     RowBox[{"drCircum", "\[Rule]", "drCircum0"}], ",", 
     RowBox[{"drAoaConstr", "\[Rule]", "drAoaConstr0"}], ",", 
     RowBox[{"drItaConstr", "\[Rule]", "drItaConstr0"}], ",", 
     RowBox[{"drX88", "\[Rule]", "drX880"}], ",", 
     RowBox[{"drDarboux", "\[Rule]", "drDarboux0"}], ",", 
     RowBox[{"drAntiContact", "\[Rule]", "drAntiContact0"}], ",", 
     RowBox[{"drDarbouxAxis", "\[Rule]", "drDarbouxAxis0"}], ",", 
     RowBox[{"drAoaFoot", "\[Rule]", "drAoaFoot0"}], ",", 
     RowBox[{"drPerps", "\[Rule]", "drPerps0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"drIsogonalSample", "\[Rule]", "drIsog0"}], ",", 
     RowBox[{"drIsotomicSample", "\[Rule]", "drIsot0"}], ",", 
     RowBox[{"drIsogLim", "\[Rule]", "drIsogLim0"}], ",", 
     RowBox[{"drIsotLim", "\[Rule]", "drIsotLim0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"drPeterMoses1k", "\[Rule]", "drPeterMoses1k0"}], ",", 
     RowBox[{"drPeterMosesAbove1k", "\[Rule]", "drPeterMosesAbove1k0"}], ",", 
     RowBox[{"drPeterMosesAbove4k", "\[Rule]", "drPeterMosesAbove4k0"}], ",", 
     RowBox[{"drAxes", "\[Rule]", "drAxes0"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", "25"}], "}"}], ",", 
     RowBox[{"-", "360"}], ",", "360", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tIsotomic0", ",", "1", ",", "\"\<isotomic t\>\""}], "}"}], ",", 
     RowBox[{"-", "10"}], ",", "10", ",", ".01", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tIsogonal0", ",", "1", ",", "\"\<isogonal t\>\""}], "}"}], ",", 
     RowBox[{"-", "10"}], ",", "10", ",", ".01", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"maxX0", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "6", ",", "8", ",", "20", ",", "30"}], 
      "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"maxY0", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "6", ",", "8", ",", "20", ",", "30"}], 
      "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drNotables0", ",", "False", ",", "\"\<notables\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drAxes0", ",", "True", ",", "\"\<Isog+Isot Axes\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drX10", ",", "False", ",", "\"\<Incenter circumell.\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "drSteiner0", ",", "False", ",", 
       "\"\<Steiner (\!\(\*SubscriptBox[\(X\), \(1\)]\)) circumell.\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drCircum0", ",", "False", ",", "\"\<circumcircle\>\""}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "drAoaConstr0", ",", "False", ",", 
       "\"\<isogonal axis construction\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "drItaConstr0", ",", "False", ",", 
       "\"\<isotomic axis construction\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "drX880", ",", "False", ",", 
       "\"\<\!\(\*SubscriptBox[\(X\), \(88\)]\) and \!\(\*SubscriptBox[\(X\), \
\(44\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "drDarboux0", ",", "False", ",", 
       "\"\<Darboux Point = \!\(\*SubscriptBox[\(X\), \(144\)]\)\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drDarbouxAxis0", ",", "False", ",", "\"\<Darboux Axis\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "drAntiContact0", ",", "False", ",", "\"\<Anticompl. Contact\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drPerps0", ",", "False", ",", "\"\<axis perpendiculars\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drAoaFoot0", ",", "False", ",", "\"\<antiorthic foot\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drIsot0", ",", "True", ",", "\"\<isotomic sample\>\""}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drIsog0", ",", "True", ",", "\"\<isogonal sample\>\""}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drIsotLim0", ",", "False", ",", "\"\<isotomic inter\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drIsogLim0", ",", "False", ",", "\"\<isogonal inter\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "drPeterMoses1k0", ",", "False", ",", 
       "\"\<Moses-\!\(\*SubscriptBox[\(X\), \(9\)]\) (to \
\!\(\*SubscriptBox[\(X\), \(1  k\)]\))\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "drPeterMosesAbove1k0", ",", "False", ",", 
       "\"\<Moses-\!\(\*SubscriptBox[\(X\), \(9\)]\) (above \
\!\(\*SubscriptBox[\(X\), \(1  k\)]\))\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "drPeterMosesAbove4k0", ",", "False", ",", 
       "\"\<Moses-\!\(\*SubscriptBox[\(X\), \(9\)]\) (above \
\!\(\*SubscriptBox[\(X\), \(4  k\)]\))\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "\[IndentingNewLine]", 
   ",", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7707382805052643`*^9, 3.7707382861531987`*^9}, {
   3.770738499882759*^9, 3.7707385044733152`*^9}, {3.7707386131156216`*^9, 
   3.770738628586576*^9}, {3.770738909387269*^9, 3.7707389099956713`*^9}, {
   3.770738971517007*^9, 3.770738980149945*^9}, {3.7707406754862347`*^9, 
   3.7707406761344748`*^9}, {3.7707473650391054`*^9, 3.770747372338621*^9}, {
   3.7707475938718133`*^9, 3.7707476366712875`*^9}, 3.7707477432796082`*^9, {
   3.7708866955206003`*^9, 3.770886729360941*^9}, {3.7708867610795636`*^9, 
   3.7708867673199205`*^9}, {3.7708869099829617`*^9, 3.770886913670495*^9}, {
   3.7708871621993127`*^9, 3.7708872007281184`*^9}, {3.7708876243371954`*^9, 
   3.770887625481138*^9}, {3.7708877746653166`*^9, 3.7708877778493214`*^9}, {
   3.770930965730683*^9, 3.7709310269152527`*^9}, {3.7709310760505867`*^9, 
   3.7709310802823095`*^9}, {3.77093115577926*^9, 3.770931167715358*^9}, {
   3.770931215426905*^9, 3.770931223082445*^9}, {3.7709313940591063`*^9, 
   3.7709314917898173`*^9}, {3.7709317031479807`*^9, 
   3.7709317215082307`*^9}, {3.7709317730205674`*^9, 3.770931773092347*^9}, {
   3.770932047093854*^9, 3.770932064796576*^9}, {3.7709321469488616`*^9, 
   3.7709321677244616`*^9}, {3.7709348858405104`*^9, 3.770934922192964*^9}, {
   3.7709349699922223`*^9, 3.770934976944641*^9}, {3.770936413586589*^9, 
   3.770936430698744*^9}, {3.7709366267160735`*^9, 3.7709366329553995`*^9}, {
   3.7709369934206324`*^9, 3.7709370194036493`*^9}, {3.7709806528542347`*^9, 
   3.7709806914777994`*^9}, {3.770980811254475*^9, 3.770980815973863*^9}, {
   3.7709820116877947`*^9, 3.770982052200343*^9}, {3.7709861698539324`*^9, 
   3.770986220219674*^9}, {3.770986815317546*^9, 3.770986824069716*^9}, {
   3.770987531107239*^9, 3.770987579220127*^9}, {3.770987621441267*^9, 
   3.7709876305060625`*^9}, {3.7709906357968698`*^9, 
   3.7709906532376676`*^9}, {3.770990791044611*^9, 3.770990823637105*^9}, {
   3.7709908655840054`*^9, 3.7709908659849205`*^9}, {3.7710041159931784`*^9, 
   3.7710041398394775`*^9}, {3.7710043363233347`*^9, 3.771004432486706*^9}, {
   3.771023288079011*^9, 3.771023313201042*^9}, {3.7710242222978134`*^9, 
   3.771024237321712*^9}, {3.7710258699726725`*^9, 3.7710258925576553`*^9}, {
   3.7710262969811463`*^9, 3.771026297450918*^9}, {3.772137325508396*^9, 
   3.772137343313816*^9}, {3.7721374311654806`*^9, 3.7721374328440237`*^9}, {
   3.7721380010290756`*^9, 3.772138072333121*^9}, {3.7721381216373453`*^9, 
   3.772138144109497*^9}, {3.772138216802348*^9, 3.7721382327561865`*^9}, {
   3.7721386388046894`*^9, 3.7721386390849113`*^9}, {3.7721388050253315`*^9, 
   3.772138814285578*^9}, {3.7721388495176487`*^9, 3.7721388687809167`*^9}, {
   3.7721389267898674`*^9, 3.7721389560879307`*^9}, {3.772139256430626*^9, 
   3.772139299695136*^9}, {3.7721395450941086`*^9, 3.772139547927535*^9}, {
   3.7721396742459564`*^9, 3.7721396765747304`*^9}, {3.7721398021346207`*^9, 
   3.772139853814912*^9}, {3.772140080615527*^9, 3.7721401107694817`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`drAntiContact0$$ = 
    False, $CellContext`drAoaConstr0$$ = False, $CellContext`drAoaFoot0$$ = 
    False, $CellContext`drAxes0$$ = True, $CellContext`drCircum0$$ = 
    False, $CellContext`drDarboux0$$ = False, $CellContext`drDarbouxAxis0$$ = 
    False, $CellContext`drIsog0$$ = True, $CellContext`drIsogLim0$$ = 
    False, $CellContext`drIsot0$$ = True, $CellContext`drIsotLim0$$ = 
    False, $CellContext`drItaConstr0$$ = False, $CellContext`drNotables0$$ = 
    False, $CellContext`drPerps0$$ = False, $CellContext`drPeterMoses1k0$$ = 
    False, $CellContext`drPeterMosesAbove1k0$$ = 
    False, $CellContext`drPeterMosesAbove4k0$$ = 
    False, $CellContext`drSteiner0$$ = False, $CellContext`drX10$$ = 
    False, $CellContext`drX880$$ = False, $CellContext`maxX0$$ = 
    4, $CellContext`maxY0$$ = 2, $CellContext`t$$ = 
    23, $CellContext`tIsogonal0$$ = 10., $CellContext`tIsotomic0$$ = -10., 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`t$$], 25}, -360, 360, 1}, {{
       Hold[$CellContext`tIsotomic0$$], 1, "isotomic t"}, -10, 10, 0.01}, {{
       Hold[$CellContext`tIsogonal0$$], 1, "isogonal t"}, -10, 10, 0.01}, {{
       Hold[$CellContext`maxX0$$], 4}, {2, 4, 6, 8, 20, 30}}, {{
       Hold[$CellContext`maxY0$$], 4}, {2, 4, 6, 8, 20, 30}}, {{
       Hold[$CellContext`drNotables0$$], False, "notables"}, {True, False}}, {{
       Hold[$CellContext`drAxes0$$], True, "Isog+Isot Axes"}, {
      True, False}}, {{
       Hold[$CellContext`drX10$$], False, "Incenter circumell."}, {
      True, False}}, {{
       Hold[$CellContext`drSteiner0$$], False, 
       "Steiner (\!\(\*SubscriptBox[\(X\), \(1\)]\)) circumell."}, {
      True, False}}, {{
       Hold[$CellContext`drCircum0$$], False, "circumcircle"}, {
      True, False}}, {{
       Hold[$CellContext`drAoaConstr0$$], False, 
       "isogonal axis construction"}, {True, False}}, {{
       Hold[$CellContext`drItaConstr0$$], False, 
       "isotomic axis construction"}, {True, False}}, {{
       Hold[$CellContext`drX880$$], False, 
       "\!\(\*SubscriptBox[\(X\), \(88\)]\) and \!\(\*SubscriptBox[\(X\), \
\(44\)]\)"}, {True, False}}, {{
       Hold[$CellContext`drDarboux0$$], False, 
       "Darboux Point = \!\(\*SubscriptBox[\(X\), \(144\)]\)"}, {
      True, False}}, {{
       Hold[$CellContext`drDarbouxAxis0$$], False, "Darboux Axis"}, {
      True, False}}, {{
       Hold[$CellContext`drAntiContact0$$], False, "Anticompl. Contact"}, {
      True, False}}, {{
       Hold[$CellContext`drPerps0$$], False, "axis perpendiculars"}, {
      True, False}}, {{
       Hold[$CellContext`drAoaFoot0$$], False, "antiorthic foot"}, {
      True, False}}, {{
       Hold[$CellContext`drIsot0$$], True, "isotomic sample"}, {
      True, False}}, {{
       Hold[$CellContext`drIsog0$$], True, "isogonal sample"}, {
      True, False}}, {{
       Hold[$CellContext`drIsotLim0$$], False, "isotomic inter"}, {
      True, False}}, {{
       Hold[$CellContext`drIsogLim0$$], False, "isogonal inter"}, {
      True, False}}, {{
       Hold[$CellContext`drPeterMoses1k0$$], False, 
       "Moses-\!\(\*SubscriptBox[\(X\), \(9\)]\) (to \
\!\(\*SubscriptBox[\(X\), \(1  k\)]\))"}, {True, False}}, {{
       Hold[$CellContext`drPeterMosesAbove1k0$$], False, 
       "Moses-\!\(\*SubscriptBox[\(X\), \(9\)]\) (above \
\!\(\*SubscriptBox[\(X\), \(1  k\)]\))"}, {True, False}}, {{
       Hold[$CellContext`drPeterMosesAbove4k0$$], False, 
       "Moses-\!\(\*SubscriptBox[\(X\), \(9\)]\) (above \
\!\(\*SubscriptBox[\(X\), \(4  k\)]\))"}, {True, False}}}, Typeset`size$$ = {
    576., {159., 165.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$778850$$ = 
    0, $CellContext`tIsotomic0$778851$$ = 
    0, $CellContext`tIsogonal0$778852$$ = 0, $CellContext`maxX0$778853$$ = 
    0, $CellContext`maxY0$778854$$ = 0, $CellContext`drNotables0$778855$$ = 
    False, $CellContext`drAxes0$778856$$ = 
    False, $CellContext`drX10$778857$$ = 
    False, $CellContext`drSteiner0$778858$$ = 
    False, $CellContext`drCircum0$778859$$ = 
    False, $CellContext`drAoaConstr0$778860$$ = 
    False, $CellContext`drItaConstr0$778861$$ = 
    False, $CellContext`drX880$778862$$ = 
    False, $CellContext`drDarboux0$778863$$ = 
    False, $CellContext`drDarbouxAxis0$778864$$ = 
    False, $CellContext`drAntiContact0$778865$$ = 
    False, $CellContext`drPerps0$778866$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`drAntiContact0$$ = 
        False, $CellContext`drAoaConstr0$$ = False, $CellContext`drAoaFoot0$$ = 
        False, $CellContext`drAxes0$$ = True, $CellContext`drCircum0$$ = 
        False, $CellContext`drDarboux0$$ = 
        False, $CellContext`drDarbouxAxis0$$ = False, $CellContext`drIsog0$$ = 
        True, $CellContext`drIsogLim0$$ = False, $CellContext`drIsot0$$ = 
        True, $CellContext`drIsotLim0$$ = False, $CellContext`drItaConstr0$$ = 
        False, $CellContext`drNotables0$$ = False, $CellContext`drPerps0$$ = 
        False, $CellContext`drPeterMoses1k0$$ = 
        False, $CellContext`drPeterMosesAbove1k0$$ = 
        False, $CellContext`drPeterMosesAbove4k0$$ = 
        False, $CellContext`drSteiner0$$ = False, $CellContext`drX10$$ = 
        False, $CellContext`drX880$$ = False, $CellContext`maxX0$$ = 
        4, $CellContext`maxY0$$ = 4, $CellContext`t$$ = 
        25, $CellContext`tIsogonal0$$ = 1, $CellContext`tIsotomic0$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$778850$$, 0], 
        Hold[$CellContext`tIsotomic0$$, $CellContext`tIsotomic0$778851$$, 0], 
        Hold[$CellContext`tIsogonal0$$, $CellContext`tIsogonal0$778852$$, 0], 
        Hold[$CellContext`maxX0$$, $CellContext`maxX0$778853$$, 0], 
        Hold[$CellContext`maxY0$$, $CellContext`maxY0$778854$$, 0], 
        Hold[$CellContext`drNotables0$$, $CellContext`drNotables0$778855$$, 
         False], 
        Hold[$CellContext`drAxes0$$, $CellContext`drAxes0$778856$$, False], 
        Hold[$CellContext`drX10$$, $CellContext`drX10$778857$$, False], 
        Hold[$CellContext`drSteiner0$$, $CellContext`drSteiner0$778858$$, 
         False], 
        Hold[$CellContext`drCircum0$$, $CellContext`drCircum0$778859$$, 
         False], 
        Hold[$CellContext`drAoaConstr0$$, $CellContext`drAoaConstr0$778860$$, 
         False], 
        Hold[$CellContext`drItaConstr0$$, $CellContext`drItaConstr0$778861$$, 
         False], 
        Hold[$CellContext`drX880$$, $CellContext`drX880$778862$$, False], 
        Hold[$CellContext`drDarboux0$$, $CellContext`drDarboux0$778863$$, 
         False], 
        Hold[$CellContext`drDarbouxAxis0$$, \
$CellContext`drDarbouxAxis0$778864$$, False], 
        Hold[$CellContext`drAntiContact0$$, \
$CellContext`drAntiContact0$778865$$, False], 
        Hold[$CellContext`drPerps0$$, $CellContext`drPerps0$778866$$, False]},
       "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`showAntiOrthicAxis[1.5, 
        $CellContext`toRad[$CellContext`t$$], $CellContext`tIsogonal -> \
$CellContext`tIsogonal0$$^3, $CellContext`tIsotomic -> \
$CellContext`tIsotomic0$$^3, $CellContext`drNotables -> \
$CellContext`drNotables0$$, $CellContext`maxX -> $CellContext`maxX0$$, \
$CellContext`maxY -> $CellContext`maxY0$$, $CellContext`drX1 -> \
$CellContext`drX10$$, $CellContext`drSteiner -> $CellContext`drSteiner0$$, \
$CellContext`drCircum -> $CellContext`drCircum0$$, $CellContext`drAoaConstr -> \
$CellContext`drAoaConstr0$$, $CellContext`drItaConstr -> \
$CellContext`drItaConstr0$$, $CellContext`drX88 -> $CellContext`drX880$$, \
$CellContext`drDarboux -> $CellContext`drDarboux0$$, \
$CellContext`drAntiContact -> $CellContext`drAntiContact0$$, \
$CellContext`drDarbouxAxis -> $CellContext`drDarbouxAxis0$$, \
$CellContext`drAoaFoot -> $CellContext`drAoaFoot0$$, $CellContext`drPerps -> \
$CellContext`drPerps0$$, $CellContext`drIsogonalSample -> \
$CellContext`drIsog0$$, $CellContext`drIsotomicSample -> \
$CellContext`drIsot0$$, $CellContext`drIsogLim -> $CellContext`drIsogLim0$$, \
$CellContext`drIsotLim -> $CellContext`drIsotLim0$$, \
$CellContext`drPeterMoses1k -> $CellContext`drPeterMoses1k0$$, \
$CellContext`drPeterMosesAbove1k -> $CellContext`drPeterMosesAbove1k0$$, \
$CellContext`drPeterMosesAbove4k -> $CellContext`drPeterMosesAbove4k0$$, \
$CellContext`drAxes -> $CellContext`drAxes0$$], 
      "Specifications" :> {{{$CellContext`t$$, 25}, -360, 360, 1, Appearance -> 
         "Labeled"}, {{$CellContext`tIsotomic0$$, 1, "isotomic t"}, -10, 10, 
         0.01, Appearance -> 
         "Labeled"}, {{$CellContext`tIsogonal0$$, 1, "isogonal t"}, -10, 10, 
         0.01, Appearance -> "Labeled"}, {{$CellContext`maxX0$$, 4}, {2, 4, 6,
          8, 20, 30}}, {{$CellContext`maxY0$$, 4}, {2, 4, 6, 8, 20, 
         30}}, {{$CellContext`drNotables0$$, False, "notables"}, {
         True, False}}, {{$CellContext`drAxes0$$, True, "Isog+Isot Axes"}, {
         True, False}}, {{$CellContext`drX10$$, False, 
          "Incenter circumell."}, {
         True, False}}, {{$CellContext`drSteiner0$$, False, 
          "Steiner (\!\(\*SubscriptBox[\(X\), \(1\)]\)) circumell."}, {
         True, False}}, {{$CellContext`drCircum0$$, False, "circumcircle"}, {
         True, False}}, {{$CellContext`drAoaConstr0$$, False, 
          "isogonal axis construction"}, {
         True, False}}, {{$CellContext`drItaConstr0$$, False, 
          "isotomic axis construction"}, {
         True, False}}, {{$CellContext`drX880$$, False, 
          "\!\(\*SubscriptBox[\(X\), \(88\)]\) and \!\(\*SubscriptBox[\(X\), \
\(44\)]\)"}, {
         True, False}}, {{$CellContext`drDarboux0$$, False, 
          "Darboux Point = \!\(\*SubscriptBox[\(X\), \(144\)]\)"}, {
         True, False}}, {{$CellContext`drDarbouxAxis0$$, False, 
          "Darboux Axis"}, {
         True, False}}, {{$CellContext`drAntiContact0$$, False, 
          "Anticompl. Contact"}, {
         True, False}}, {{$CellContext`drPerps0$$, False, 
          "axis perpendiculars"}, {
         True, False}}, {{$CellContext`drAoaFoot0$$, False, 
          "antiorthic foot"}, {
         True, False}}, {{$CellContext`drIsot0$$, True, "isotomic sample"}, {
         True, False}}, {{$CellContext`drIsog0$$, True, "isogonal sample"}, {
         True, False}}, {{$CellContext`drIsotLim0$$, False, 
          "isotomic inter"}, {
         True, False}}, {{$CellContext`drIsogLim0$$, False, 
          "isogonal inter"}, {
         True, False}}, {{$CellContext`drPeterMoses1k0$$, False, 
          "Moses-\!\(\*SubscriptBox[\(X\), \(9\)]\) (to \
\!\(\*SubscriptBox[\(X\), \(1  k\)]\))"}, {
         True, False}}, {{$CellContext`drPeterMosesAbove1k0$$, False, 
          "Moses-\!\(\*SubscriptBox[\(X\), \(9\)]\) (above \
\!\(\*SubscriptBox[\(X\), \(1  k\)]\))"}, {
         True, False}}, {{$CellContext`drPeterMosesAbove4k0$$, False, 
          "Moses-\!\(\*SubscriptBox[\(X\), \(9\)]\) (above \
\!\(\*SubscriptBox[\(X\), \(4  k\)]\))"}, {True, False}}}, 
      "Options" :> {ControlPlacement -> Left}, "DefaultOptions" :> {}],
     ImageSizeCache->{1031., {274., 280.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7707382865929947`*^9, 3.7707383573483953`*^9}, {
   3.7707384231138234`*^9, 3.770738427996788*^9}, {3.770738460489384*^9, 
   3.7707385125886316`*^9}, {3.770738607851725*^9, 3.7707386548481274`*^9}, 
   3.770738734996832*^9, 3.7707389105093*^9, {3.7707389760359035`*^9, 
   3.7707389805418935`*^9}, 3.77073935648525*^9, 3.770739393578432*^9, 
   3.7707405190750265`*^9, 3.770740683546694*^9, 3.770744564388625*^9, 
   3.770745814189252*^9, 3.770746043632752*^9, {3.770747367804714*^9, 
   3.770747372873169*^9}, {3.7707475893907886`*^9, 3.7707476370791683`*^9}, 
   3.7707477438859887`*^9, 3.7708011062741785`*^9, {3.7708012007933345`*^9, 
   3.7708012203303165`*^9}, 3.7708025743751717`*^9, 3.7708037814521356`*^9, 
   3.770809398876054*^9, 3.7708322837639985`*^9, 3.7708383298390856`*^9, 
   3.7708423388351836`*^9, 3.770882532537599*^9, 3.7708865624679403`*^9, 
   3.7708867316562376`*^9, {3.7708867678724155`*^9, 3.7708867937284164`*^9}, 
   3.7708868340049133`*^9, {3.7708868959067593`*^9, 3.770886914000613*^9}, {
   3.770887314044507*^9, 3.770887341901046*^9}, 3.7708874281260433`*^9, 
   3.770887473135602*^9, {3.7708876184394565`*^9, 3.7708876260187373`*^9}, 
   3.7708876994597855`*^9, 3.7708877782414646`*^9, 3.7708898262581005`*^9, 
   3.770890193360647*^9, 3.7708903629122515`*^9, 3.770890453378336*^9, 
   3.7708905036497307`*^9, 3.770890718907759*^9, {3.770891231923596*^9, 
   3.7708912423803263`*^9}, 3.770894625359868*^9, 3.7708977382955494`*^9, {
   3.7709310281998153`*^9, 3.770931033757934*^9}, {3.770931080883683*^9, 
   3.770931084096549*^9}, {3.7709311524810753`*^9, 3.7709311680334826`*^9}, 
   3.7709312163873105`*^9, 3.770931297830328*^9, {3.7709313594575863`*^9, 
   3.770931492203683*^9}, 3.7709316035468655`*^9, {3.7709317149585123`*^9, 
   3.770931721861271*^9}, 3.770931773556134*^9, 3.770932110134218*^9, {
   3.7709321595044003`*^9, 3.7709321683517847`*^9}, {3.770932389098254*^9, 
   3.770932402754758*^9}, 3.7709328155696516`*^9, 3.770933775213196*^9, 
   3.7709344733920393`*^9, 3.7709345584028425`*^9, {3.7709348593453245`*^9, 
   3.7709349109729223`*^9}, 3.7709349836726613`*^9, {3.770935193441106*^9, 
   3.7709352063127146`*^9}, 3.7709361291077223`*^9, 3.770936285509449*^9, 
   3.770936431042824*^9, {3.7709366113890066`*^9, 3.7709366334530687`*^9}, 
   3.7709367851562347`*^9, {3.770936931053212*^9, 3.7709369526505594`*^9}, 
   3.7709370568610163`*^9, 3.770937090008458*^9, {3.7709806845114174`*^9, 
   3.770980691944553*^9}, 3.770980782435466*^9, 3.770980816305977*^9, 
   3.7709816827327127`*^9, 3.7709817310325284`*^9, 3.7709818808384943`*^9, {
   3.770982052994193*^9, 3.77098206776774*^9}, {3.7709821287945194`*^9, 
   3.770982227790702*^9}, {3.7709831524069977`*^9, 3.7709831687792435`*^9}, 
   3.7709861836490383`*^9, {3.770986216506628*^9, 3.7709862206834335`*^9}, 
   3.7709867476339674`*^9, {3.770986797944745*^9, 3.7709868249742966`*^9}, {
   3.7709869834296885`*^9, 3.770987005413904*^9}, {3.770987581442195*^9, 
   3.7709876311114235`*^9}, 3.7709877417310057`*^9, 3.7709885564528913`*^9, 
   3.7709887327000065`*^9, {3.7709888965479617`*^9, 3.770988923606681*^9}, 
   3.7709892481159368`*^9, 3.770989692471403*^9, 3.7709897547445326`*^9, {
   3.7709900726918836`*^9, 3.770990098175699*^9}, 3.770990515969796*^9, 
   3.770990653639592*^9, {3.770990814014825*^9, 3.770990838466446*^9}, 
   3.770991697544625*^9, 3.770991775510516*^9, 3.7709918825275445`*^9, 
   3.7709920388477316`*^9, 3.770992130240078*^9, 3.7709921656770854`*^9, {
   3.7710041113795366`*^9, 3.7710041403800373`*^9}, {3.7710043650001087`*^9, 
   3.771004384994083*^9}, 3.7710044159108353`*^9, 3.7710047730753016`*^9, 
   3.771004949074957*^9, 3.7710050419411416`*^9, 3.7710052182633*^9, {
   3.77100532778976*^9, 3.7710053400726447`*^9}, 3.7710057879943523`*^9, {
   3.771022816846966*^9, 3.771022846668913*^9}, 3.771023235895268*^9, 
   3.771023272356705*^9, 3.7710237924466853`*^9, 3.771023958406232*^9, {
   3.7710241373334055`*^9, 3.771024153008482*^9}, {3.7710241906384225`*^9, 
   3.771024202438857*^9}, 3.7710242380377693`*^9, 3.771024491063443*^9, 
   3.7710246459524455`*^9, 3.771025646031079*^9, {3.7710258930906715`*^9, 
   3.771025905716964*^9}, {3.7710262813599215`*^9, 3.771026309758997*^9}, 
   3.7710264427812185`*^9, 3.7710264779812074`*^9, 3.7711592770684247`*^9, 
   3.7716755350941563`*^9, 3.7721372121742215`*^9, 3.772137343644902*^9, 
   3.772138072954439*^9, {3.7721381318587465`*^9, 3.7721381446729913`*^9}, 
   3.7721382332558784`*^9, 3.772138268316619*^9, 3.7721386397501335`*^9, 
   3.7721387686605277`*^9, 3.77213881464671*^9, 3.772138869200796*^9, 
   3.7721389564668894`*^9, 3.772139237488228*^9, 3.7721393001608925`*^9, 
   3.7721394275889645`*^9, {3.772139528884407*^9, 3.7721395482846317`*^9}, 
   3.7721396770753956`*^9, {3.77213980499996*^9, 3.7721398542780933`*^9}, 
   3.7721400152321653`*^9, 3.772140111098138*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"DeleteFile", "[", 
   RowBox[{"CloudDeploy", "[", 
    RowBox[{"%", ",", "\"\<antiorthic and isotomic axes\>\"", ",", 
     RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ3ZAQxS4n8cZxwp9DnCB6m8n8GEUg3aV3Lh5Eb1up
lwuiv1jy5YHoE3MDT9oA6Z4V706D6HPalrNqgPS7TJE5INrpEcciEM3TdWsJ
iK5i8L4NopnPV94B0VLzdnwE0ZmcTN9A9PRK/Xu1QFpGsOwhiFa4aGc0GUjX
n4+1BtFajztXgeiKedprQDTjB7sbIHpxzpebIHrfR+77ILrln+MrEF1+5Grc
FCBtWsAQD6KlO65+A9EH2k2/g+iOD/2yM4C0haOHAohWrvc/DKK/va44CqIP
LXc0mg9y9+cIExAtljEzfyVIfcHnQhANAPtAkHA=
  "]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"CloudDeploy", "[", 
   RowBox[{"%", ",", "\"\<antiorthic and isotomic axes\>\"", ",", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.770982250349386*^9, 3.7709822516658974`*^9}, {
  3.770983155951561*^9, 3.7709831758302927`*^9}, {3.770990834265699*^9, 
  3.7709908534893255`*^9}, {3.7709921729546623`*^9, 3.770992179770672*^9}, {
  3.771005335759198*^9, 3.77100534999616*^9}, {3.7710263137044535`*^9, 
  3.771026314878348*^9}, {3.771026400568633*^9, 3.771026402264098*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "showOneMosesFrame"}], ";", 
  RowBox[{
   RowBox[{"showOneMosesFrame", "[", 
    RowBox[{"a_", ",", "tDeg_", ",", 
     RowBox[{"showAntiContact_:", "True"}]}], "]"}], ":=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"showAntiOrthicAxis", "[", 
      RowBox[{"a", ",", 
       RowBox[{
        RowBox[{"toRad", "@", "tDeg"}], "+", ".001"}], ",", "0", ",", "0", 
       ",", 
       RowBox[{"maxX", "\[Rule]", "2"}], " ", ",", 
       RowBox[{"maxY", "\[Rule]", "1.5"}], ",", "\[IndentingNewLine]", 
       RowBox[{"drDarbouxAxis", "\[Rule]", "showAntiContact"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"drAntiContact", "\[Rule]", "showAntiContact"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"drPeterMoses1k", "\[Rule]", "True"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"drPeterMosesAbove1k", "\[Rule]", "True"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"pointSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"labelDist", "\[Rule]", "0.075"}], ",", "\[IndentingNewLine]", 
       RowBox[{"drPeterMosesAbove4k", "\[Rule]", "True"}]}], "]"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{
        "\"\<Points on \!\(\*SubscriptBox[\(X\), \(9\)]\)-Centered \
Circumellipse\\na=\>\"", "<>", 
         RowBox[{"nfn", "[", 
          RowBox[{"a", ",", "2"}], "]"}], "<>", "\"\<,\[Theta]=\>\"", "<>", 
         RowBox[{"nfn", "[", 
          RowBox[{"tDeg", ",", "1"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Large"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.771003914048524*^9, 3.77100395048921*^9}, {
  3.771003998249601*^9, 3.771004077469158*^9}, {3.7710041515053015`*^9, 
  3.771004169769906*^9}, {3.771004448916793*^9, 3.771004461035175*^9}, {
  3.7710044974346275`*^9, 3.7710045096998215`*^9}, {3.7710045418020554`*^9, 
  3.771004588497862*^9}, {3.771004622067148*^9, 3.7710046223623886`*^9}, {
  3.771004779539057*^9, 3.7710047871706543`*^9}, {3.771005048763982*^9, 
  3.7710050547470083`*^9}, {3.771005356459851*^9, 3.7710053779952974`*^9}, {
  3.771005911486214*^9, 3.7710059205559745`*^9}, {3.7710060471680903`*^9, 
  3.7710061046042147`*^9}, {3.771024249982459*^9, 3.7710242540049324`*^9}, {
  3.7710257204073505`*^9, 3.7710257384543705`*^9}, {3.771025909486882*^9, 
  3.771025913431465*^9}, {3.7710260186955166`*^9, 3.771026026983363*^9}, {
  3.771026057982803*^9, 3.7710260961559906`*^9}, {3.7710265047217455`*^9, 
  3.7710265095039363`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"showOneMosesFrame", "[", 
    RowBox[{"1.5", ",", "tDeg", ",", "antiContact"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tDeg", ",", "30"}], "}"}], ",", 
     RowBox[{"-", "360"}], ",", "360", ",", "1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "antiContact", ",", "False", ",", "\"\<Anticompl. Contact\>\""}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7710053801106443`*^9, 3.7710054007315364`*^9}, {
  3.7710054708205647`*^9, 3.771005474694213*^9}, {3.7710260284384804`*^9, 
  3.7710260523269176`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`antiContact$$ = False, $CellContext`tDeg$$ =
     30, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`tDeg$$], 30}, -360, 360, 1}, {{
       Hold[$CellContext`antiContact$$], False, "Anticompl. Contact"}, {
      True, False}}}, Typeset`size$$ = {800., {327., 333.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`tDeg$116408$$ = 0, $CellContext`antiContact$116409$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`antiContact$$ = False, $CellContext`tDeg$$ = 
        30}, "ControllerVariables" :> {
        Hold[$CellContext`tDeg$$, $CellContext`tDeg$116408$$, 0], 
        Hold[$CellContext`antiContact$$, $CellContext`antiContact$116409$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`showOneMosesFrame[
       1.5, $CellContext`tDeg$$, $CellContext`antiContact$$], 
      "Specifications" :> {{{$CellContext`tDeg$$, 30}, -360, 360, 
         1}, {{$CellContext`antiContact$$, False, "Anticompl. Contact"}, {
         True, False}}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{851., {383., 389.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7710054013878107`*^9, 3.771005475038294*^9, {3.771005506577007*^9, 
   3.7710055280675755`*^9}, 3.7710058110448093`*^9, 3.771005855605431*^9, {
   3.7710059134390235`*^9, 3.7710059227700577`*^9}, 3.7710061059356413`*^9, 
   3.7710228927858305`*^9, 3.771023241437451*^9, 3.7710238005171165`*^9, 
   3.7710238698172474`*^9, 3.7710239706664724`*^9, 3.771024650540185*^9, 
   3.771025646075962*^9, {3.7710256844504013`*^9, 3.7710257045497255`*^9}, 
   3.7710260057809973`*^9, {3.7710260530938683`*^9, 3.7710261097356997`*^9}, 
   3.7710261471516795`*^9, {3.7710262488029013`*^9, 3.7710262664866705`*^9}, 
   3.771026408436578*^9, {3.771026481332325*^9, 3.7710265181378627`*^9}, {
   3.771028588367014*^9, 3.7710286121173143`*^9}, {3.77102886354909*^9, 
   3.7710289201368604`*^9}, 3.771159277147244*^9, 3.7716755351460505`*^9, 
   3.772137212575116*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"DeleteFile", "[", "mosesDeploy", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7710058312378745`*^9, 3.7710058465158052`*^9}, {
  3.7710261126438994`*^9, 3.771026113726026*^9}, {3.7710261718945537`*^9, 
  3.771026173447404*^9}, {3.771028599532933*^9, 3.7710286091153336`*^9}, {
  3.7710289142366295`*^9, 3.7710289243466387`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mosesDeploy", "=", 
  RowBox[{"CloudDeploy", "[", 
   RowBox[{
   "%", ",", "\"\<peter moses points on X9-centered circumellipse\>\"", ",", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7710054281705475`*^9, 3.771005448659789*^9}, {
  3.7710054789508657`*^9, 3.771005539203814*^9}, {3.771005827791055*^9, 
  3.771005859898984*^9}, {3.771005934108756*^9, 3.7710059360046883`*^9}, {
  3.7710261150255346`*^9, 3.77102611638194*^9}, {3.7710261758400383`*^9, 
  3.771026177280161*^9}, {3.771028591750971*^9, 3.7710286212020435`*^9}, {
  3.7710289259174347`*^9, 3.771028927241906*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TagBox[
    ButtonBox[
     PaneSelectorBox[{
      False->"\<\"https://www.wolframcloud.com/objects/user-abf31092-d7c1-\
4e49-8701-dc65d547b021/peter moses points on X9-centered circumellipse\"\>", 
      True->
      StyleBox["\<\"https://www.wolframcloud.com/objects/user-abf31092-d7c1-\
4e49-8701-dc65d547b021/peter moses points on X9-centered circumellipse\"\>", 
       "HyperlinkActive"]}, Dynamic[
       CurrentValue["MouseOver"]],
      BaseStyle->{"Hyperlink"},
      FrameMargins->0,
      ImageSize->Automatic],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL[
       "https://www.wolframcloud.com/objects/user-abf31092-d7c1-4e49-8701-\
dc65d547b021/peter moses points on X9-centered circumellipse"], None},
     ButtonNote->
      "https://www.wolframcloud.com/objects/user-abf31092-d7c1-4e49-8701-\
dc65d547b021/peter moses points on X9-centered circumellipse"],
    Annotation[#, 
     "https://www.wolframcloud.com/objects/user-abf31092-d7c1-4e49-8701-\
dc65d547b021/peter moses points on X9-centered circumellipse", 
     "Hyperlink"]& ], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/user-abf31092-d7c1-4e49-8701-\
dc65d547b021/peter moses points on X9-centered circumellipse"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.7710285984285107`*^9, 3.7710286191155834`*^9}, 
   3.7710289306008964`*^9, 3.7711592825647364`*^9, 3.771675540189539*^9, 
   3.772137217630605*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Movie Utils", "Section",
 CellChangeTimes->{{3.7663430978202534`*^9, 3.766343106026805*^9}, {
  3.7706661454966755`*^9, 3.7706661507606297`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "doMovieFrames"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "doMovieFrames"}], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Options", "@", "movieFrame"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"step", "\[Rule]", 
        RowBox[{"toRad", "@", "1."}]}], ",", 
       RowBox[{"offset", "\[Rule]", ".0001"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"doMovieFrames", "[", 
    RowBox[{"a_", ",", "exp_", ",", "lociFn_", ",", 
     RowBox[{"view_:", "\"\<excHalf\>\""}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "loci", ",", "ellPlot", ",", "causticPlot", ",", "excenterLims", ",", 
       "showables"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ellPlot", "=", 
       RowBox[{"plotEllFill", "[", 
        RowBox[{"1.5", ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Blue", ",", 
           RowBox[{"Opacity", "@", ".1"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"causticPlot", "=", 
       RowBox[{"plotEllb", "[", 
        RowBox[{
         RowBox[{"Sequence", "@@", 
          RowBox[{"getTriCausticParams", "[", "a", "]"}]}], ",", 
         RowBox[{"\"\<feu\>\"", "/.", "ptClrs"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"loci", "=", 
         RowBox[{"precompLoci", "[", "a", "]"}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"loci", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"lociFn", "[", "a", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"excenterLims", "=", 
       RowBox[{"excenterMax", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"showables", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"getExpShowables", "[", "exp", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<loci\>\"", ",", "\"\<orbit\>\""}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<a=\>\"", ",", "a", ",", "\"\<,t=\>\"", ",", "0", ",", 
          "\"\<,ellPlot=\>\"", ",", "ellPlot", ",", "\"\<,loci=\>\"", ",", 
          "loci", ",", "\"\<,excL=\>\"", ",", "excenterLims", ",", 
          "\"\<,view=\>\"", ",", "view", ",", "\"\<,opts=\>\"", ",", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"showablesOpt", "\[Rule]", "showables"}]}], "}"}], ",", 
            RowBox[{"Options", "@", "movieFrame"}]}], "]"}]}], "]"}], ";"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"movieFrame", "[", 
         RowBox[{
         "a", ",", "t", ",", "ellPlot", ",", "causticPlot", ",", "loci", ",", 
          "excenterLims", ",", "view", ",", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"showablesOpt", "\[Rule]", "showables"}]}], "}"}], ",", 
            RowBox[{"Options", "@", "movieFrame"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"OptionValue", "@", "offset"}], ",", 
          RowBox[{
           RowBox[{"2.", "\[Pi]"}], "+", 
           RowBox[{"OptionValue", "@", "offset"}]}], ",", 
          RowBox[{"OptionValue", "@", "step"}]}], "}"}]}], "]"}]}]}], "]"}]}],
   ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQbSYVZOwk8MZxU6iANYhOOtnnAKI9XM6C6QD7N8Eg
euOLyaEguuLIgxgQfcnubTyI9tdueM0r+MZRSvrVGxDNJny9/LvYG8dzGgUV
IFpuW8B2EH14Rw2YfsgwOeYHkO5NXZcLostOyHj9BNKiMV5gepZTYC6Ivics
nw+iO9J6q0B0s9iDehBdf5K9B0Sfm98wAUQ31FyYAaI33eOeD6K/bj26GEQX
qDMvBdF1xy+tA9GXGy5sBNFKn7J3guiouuj9IPq6iOExED2zJwZMsx22PAui
+7akXADRGWt2xRWLA93ztjUBRIc++PquFEgXmLO9B9HtAoxfQPQvDVUw7XTB
PGwSkLbL2RwOol+6d8tOBtLu6hPB9Ny5mjd/AGm+3j1gekdC4yZFCWB4a6/Z
BqIBRW/HGw==
  "]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "makeMovie"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"makeMovie", "[", 
    RowBox[{"fname_", ",", "frames_", ",", 
     RowBox[{"repeats_:", "3"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "framesConcat", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"framesConcat", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"frames", ",", "repeats"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Exporting \>\"", "<>", 
        RowBox[{"ToString", "@", 
         RowBox[{"Length", "[", "framesConcat", "]"}]}], "<>", 
        "\"\< frames to \>\"", "<>", "fname"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{"fname", ",", "framesConcat", ",", 
        RowBox[{
        "\"\<VideoEncoding\>\"", "\[Rule]", "\"\<MPEG-4 Video\>\""}]}], "]"}],
       ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.766271613844881*^9, 3.7662716841561766`*^9}, {
   3.7663446405291705`*^9, 3.766344649766699*^9}, {3.766758073869015*^9, 
   3.7667580990567203`*^9}, 3.766758140152355*^9, {3.767711260613128*^9, 
   3.7677112641407976`*^9}, {3.7701376027059927`*^9, 3.770137612058021*^9}, {
   3.7701378140883255`*^9, 3.7701378245134172`*^9}, {3.7701378927472687`*^9, 
   3.77013789592099*^9}, 3.770142813649786*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make Movies", "Section",
 CellChangeTimes->{{3.7710059756114817`*^9, 3.771005978664324*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"imgMoses", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"imgMoses", ",", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "imgs", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"imgs", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"showOneMosesFrame", "[", 
           RowBox[{"1.5", ",", "tDeg"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"tDeg", ",", "0", ",", "360", ",", ".25"}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"makeMovie", "[", 
        RowBox[{"\"\<moses v2.mov\>\"", ",", "imgs", ",", "2"}], "]"}]}]}], 
     "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.771005990883668*^9, 3.7710060369972453`*^9}, {
   3.7710060927472343`*^9, 3.771006139679448*^9}, 3.7710062058772683`*^9, {
   3.7710062684458704`*^9, 3.7710062756734877`*^9}, {3.771006305685714*^9, 
   3.7710063058492765`*^9}, {3.771026207999093*^9, 3.771026208478795*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"imgMosesDarboux", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"imgMosesDarboux", ",", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "imgs", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"imgs", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"showOneMosesFrame", "[", 
           RowBox[{"1.5", ",", "tDeg"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"tDeg", ",", "0", ",", "360", ",", ".125"}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"makeMovie", "[", 
        RowBox[{"\"\<moses v4.mov\>\"", ",", 
         RowBox[{"Join", "[", 
          RowBox[{"imgs", ",", 
           RowBox[{"Reverse", "@", "imgs"}]}], "]"}], ",", "2"}], "]"}]}]}], 
     "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7710261903602304`*^9, 3.771026205975499*^9}, {
  3.771026540809299*^9, 3.77102654097486*^9}, {3.771026829904476*^9, 
  3.7710268305577307`*^9}, {3.7710284862418675`*^9, 3.771028488401099*^9}, {
  3.771028625499551*^9, 3.7710286258895082`*^9}, {3.7710289563491144`*^9, 
  3.771029012219549*^9}}],

Cell[BoxData["\<\"Exporting 11524 frames to moses v4.mov\"\>"], "Print",
 CellChangeTimes->{3.771029053595399*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Isotomic Axis (should contain X(693) =X\[CloseCurlyQuote](100), e os conj. \
isot dos pes dos incirculo do ACT)\
\>", "Section",
 CellChangeTimes->{{3.770739052902193*^9, 3.7707390758735695`*^9}, {
  3.770811335489318*^9, 3.770811390297905*^9}}],

Cell[CellGroupData[{

Cell["\<\
Also: X (100) = trilinear pole of line X(1)X (6) (and PU (28)) (van Aubel \
line of excentral triangle)\
\>", "Subsubsection",
 CellChangeTimes->{{3.7708116663718743`*^9, 3.7708116767630873`*^9}, {
  3.7708962636975613`*^9, 3.770896265082876*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
lBvsxT9dWOIXs8nFeSR3gE09RfF30qRJc+fOpfzVIJ6EItlAXJGHJEQCgpjE
dp9phdoj5XiDGBiD6pbOx37zxHkXwMZW8EOT13u57UXpYhJyha33zDsm6WOQ
MKDJjoULF+61114rVqzAtzcNjlEUj+F8ERz11t+lnExRuSBn2kKBFH22g5hM
iJbXrVuHLzsV4mlna18/rm2FRiZRecsr8YnNo9aZJMqZJOZxas3nK9Cx8frJ
k2FjC3hl2+aKyiUyuoFJGrpbHZP0MUhjF0mSVatWHXLIIfjeLqZyPM9DlUKC
oReZhOiLGIxqnXgedZfpHZRkQi9mUZSRdW/ePn1Q2xbaLsqyTFJXFF20gKA9
OPkNLJ9ENhbiUCv98Zxzkrvvhlpbmgq8OeOy/it0Jwp/i+7ZoW+Bb12KZVT9
U3LlypVHHnnkrFmzSDbgCU6dUcUEcW/9XfpzhSIi5dPYkTW4Qa8AdQaqPCtF
afC+flzbEAWT4EcXM10SBanDuh7lMQ7dhvKuJsrA80vXXLPhh5dB0C7CTis8
dNJ4G1QyLOefSDoy6WPgG5hMk+g9TDlA/Hbs2LFTpkxRdXO2IqHRW3+3sJml
cid9Lc6jHYFMKLNN/STUEl/M4AxS2MRIzhsmiExgbCknsgN6VodYe/lcltDi
YLvSQgGUGaxY8dsvfg5K6yJdwTejsPN69r7yZAvej8KDdpc7JulbFN1o5ClN
BWLKYJx11lnjx4+vVqvFVuJenAEhnVOs3iCoehlaDdKIphEFReOFSy655O67
7yb519ePa9tB5C3utB3YkgkxScotk1DqtevImSTgKYgMmtfffNxn4PVVIMvC
C+IIKCYiJWMZKVI5QTkm6WMU3WjUoV3IA/rphRdeOGbMmHXr1tFp3ou1mw0b
NsyZM2fXXXcdMmTIxRdf/L3vfe/oo4+eOnUqWawMprKvrq9sfpNFPNkq4pUY
TuKLcO655w7u0IZA53t95q7eqtpwZddhXehT8AS0V1f//Jo1t8yG0gbgQd4v
/0ZMhEziR0b9xQyOQ/8CWTvi1wULFuy99974bi/8uyhJSNYEjRY9PQLdz047
7fSBD3yAfn39+vV4Qk2cOJEmkemeSasM6FOsMMmk1uLC95KyQ/hkL7/8cmTU
k08+2XlPNUIwCcJAJfCWPP37//4OlDZDrZQzho1rCm2T51uEdv5p/RX4PqfJ
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
s+bQoUPe4WThwoXmRr/MKSxhC53xWytFi31LX9wk4OMxc3LDDTdMmzbtiiuu
mD59ujmZPXu2dO9S80LGi6dXFZlvmxTvcBHstWFAIp0+mK+jTHFJQk0lcGGd
XfuObbv3Xjg9ACFhNmljJEQbMU6SKeukPVVR+RTyYoCFbLKCl3k927XXXnvl
lVf6EhHf4bt161YfzKh85oXMrzsfn3zbO2H9te/zU2vXrvUyYpiWs27dOvFf
uPSP8zAp1pKX5EVcVjRGdpojr2glJix5c/58ONoL1YDrRKeJ/RBRZtv9kClB
kfz1K/1rrrnGXz5eRsxP70MiJnVozmWFf2leGH2q178DRVhyzz33HHecPHny
qwvT399v7mNOjh079s4773R2dprQbuXKlcvajI6lnR1Lly1fuqRj2ZLFHSsW
d3Qu7Xhkw0MPvHHLrW/edvv6Bx/sWN65dOlSc8/lHZ0rOpe3+vkik8Nyx+LF
izs6OhYtWlRoSIG5oAYGBnyedEqG675U1VeVmLfCv2ofmF111VXm54IFC/bu
3dvT09PV1dXd3d11Ucw9/d327dtnTnbv3t3dZuzrskd3917zp6t7vzm69+3u
/eC9f618bO99C7/48449H+zq2dPV02Xfyb/t+bDVzxeZHMxHvfj879q1y9sq
FmGJ+af5WSqViv2BVl/3k0/h12TEZPv27dMdxTtg2LZtm4/cir2UCfH7RT6b
4yt2/F6KaDNsvbxdBAsuhZtqY26KIRiDU1+vmjnLrG6AEXBOsJQTVbMpY2QK
4C+lwg3gxhtvNFfQ1VdfXQQnM2fOlG7tUxRUTDGEqycxF77P8Jr1SKGi5sQs
UopGYF/1eqHHae5b9NvUhQl/W6GlPQxSGbXIpFZaUYirMFLe+/Di0l//BmFU
r1IRc11PQh5L3epnjEwGftki8oE1R44cmTFjhv9GNl/N119//cGDB71RmHKJ
40t5jV8a/AQ9Ixe+JM+cHz582AjIkiVLent7fT2JV5KLxyQyT4T5aarSyW/R
0th+2DF7RCZUCi1iiMowWh7asuPQ2qehVAGWKJnZItia5JK1+qkik4Dv2iss
Gc0tYRi+8sorK1as2LhxYxAEPtfpB/lNyem3xRhl5WIJn6AReTGebz7yNLcJ
n08hGl5ACtPXVnw/tBZnxSCtVrDEzrfJJAUawmgJTp3ZdPsP4ewwEGFEJqun
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
ZI3x4mZpI3jc6qeMXC78B4MJqac=
    "], {{0, 282}, {366, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageMargins->{{1., 0.}, {0., 0.}},
  ImageSize->{186., Automatic},
  ImageSizeRaw->{366, 282},
  PlotRange->{{0, 366}, {0, 282}}]], "Input",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"CloudDeploy", "[", 
   RowBox[{"%", ",", "\"\<isotomic axis\>\"", ",", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.77074079482428*^9, 3.7707408140933304`*^9}, {
  3.7707476209751844`*^9, 3.770747646443181*^9}, {3.7707477534582167`*^9, 
  3.7707477604445744`*^9}, {3.7708037865505104`*^9, 3.7708038074580746`*^9}, {
  3.77081151207623*^9, 3.770811515435253*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "drawIsotomicAxis"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawIsotomicAxis", "[", 
    RowBox[{"tri_", ",", "sides_", ",", "actData_", ",", 
     RowBox[{"clr_:", 
      RowBox[{"Darker", "@", "Cyan"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "isoAxis", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"isoAxis", "=", 
       RowBox[{"getIsotomicAxisLow", "[", 
        RowBox[{"tri", ",", "sides", ",", "actData"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "@", "Large"}], ",", "clr", ",", 
         RowBox[{"PointSize", "@", "Large"}], ",", 
         RowBox[{"Point", "@", "isoAxis"}], ",", "Thick", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"Part", "[", 
           RowBox[{"isoAxis", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}]}], 
        "}"}]}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.770896857643678*^9, 3.7708969089568233`*^9}, {
  3.7708970256945515`*^9, 3.7708970747088127`*^9}, {3.770897210213227*^9, 
  3.7708972139821634`*^9}, {3.770897343038116*^9, 3.77089737457493*^9}, {
  3.770897467813855*^9, 3.7708974711020956`*^9}, {3.770897514070041*^9, 
  3.770897515029477*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "showIsotomicAxis"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"showIsotomicAxis", "[", 
    RowBox[{"a_", ",", "t_", ",", 
     RowBox[{"maxX_:", "20"}], ",", 
     RowBox[{"maxY_:", "20"}]}], "]"}], ":=", 
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "tri", ",", "bis", ",", "sides", ",", "ell", ",", "isoAxis", ",", 
       "tpsIsogC", ",", "gr", ",", 
       RowBox[{"lgt", "=", ".2"}], ",", "tsamples", ",", "ellSamples", ",", 
       "ellSamplesIsotomConj", ",", "triIsog", ",", "ellSamplesIsogonConj", 
       ",", "x44", ",", "exc", ",", "aoa", ",", "lab", ",", 
       RowBox[{"ellSampleNum", "=", "100"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ell", "=", 
       RowBox[{"plotEll", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tri", ",", "bis"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sides", "=", 
       RowBox[{"RotateLeft", "@", 
        RowBox[{"triLengths", "@", "tri"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"isoAxis", "=", 
       RowBox[{"getIsotomicAxis", "[", "tri", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tpsIsogC", "=", 
       RowBox[{"isoAxis", "[", "\"\<actTpsIsogConj\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ellSamples", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a", " ", 
            RowBox[{"Cos", "@", "#"}]}], ",", 
           RowBox[{"Sin", "@", "#"}]}], "}"}], "&"}], "/@", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.001", ",", 
            RowBox[{
             RowBox[{"2", "\[Pi]"}], "-", ".001"}]}], "}"}], ",", 
          "ellSampleNum"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "external", " ", "calc", " ", "of", " ", "C2", " ", "works", " ", 
         "but", " ", "here", " ", "it", " ", 
         RowBox[{"doesn", "'"}], "t"}], ",", " ", 
        RowBox[{"had", " ", "to", " ", "add", " ", "noise"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"xxx", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00302662`"}], ",", 
           RowBox[{"-", "0.9999979`"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<tps2=\>\"", ",", 
          RowBox[{
           RowBox[{"isoAxis", "[", "\"\<actTps\>\"", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<,isotC2xxx=\>\"", ",", 
          RowBox[{"isotomicConjugate", "[", 
           RowBox[{"xxx", ",", "tri"}], "]"}]}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"ellSamplesIsotomConj", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"isotomicConjugate", "[", 
           RowBox[{"#", ",", "tri"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", "ellSamples"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ellSamplesIsogonConj", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"isogonalConjugate", "[", 
          RowBox[{"#", ",", "tri", ",", "bis"}], "]"}], "&"}], "/@", 
        "ellSamples"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x44", "=", 
       RowBox[{"getX44Trilin", "[", 
        RowBox[{"tri", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"exc", "=", 
       RowBox[{"excentralTriangle", "[", 
        RowBox[{"tri", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"X", 
          RowBox[{"(", "513", ")"}]}], " ", "=", " ", 
         RowBox[{"isog", " ", "conj", " ", "do", " ", "X", 
          RowBox[{"(", "100", ")"}]}]}], ",", " ", 
        RowBox[{
        "lies", " ", "on", " ", "line", " ", "at", " ", "infinity"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"fbarIsogC", "=", 
         RowBox[{"isogonalConjugate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"isoAxis", "[", "\"\<x100\>\"", "]"}], "+", 
            RowBox[{
             RowBox[{"RandomReal", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "2"}], "]"}], 
             "*", 
             RowBox[{"10", "^", 
              RowBox[{"-", "6"}]}]}]}], ",", "tri", ",", "bis"}], "]"}]}], 
        ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FaceForm", "@", "None"}], ",", 
          RowBox[{"PointSize", "@", "Large"}], ",", "Thick", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"EdgeForm", "@", "Black"}], ",", 
            RowBox[{"Polygon", "@", "tri"}], ",", 
            RowBox[{"Point", "@", "tri"}], ",", 
            RowBox[{"ellLabelPoints", "[", 
             RowBox[{
             "a", ",", "tri", ",", "\"\<P\>\"", ",", "16", ",", "lgt"}], 
             "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{"EdgeForm", "@", "Blue"}], ",", 
            RowBox[{"Polygon", "@", 
             RowBox[{"isoAxis", "[", "\"\<act\>\"", "]"}]}], ",", 
            RowBox[{"Point", "@", 
             RowBox[{"isoAxis", "[", "\"\<act\>\"", "]"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Darker", "@", "Green"}], ",", 
            RowBox[{"EdgeForm", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Darker", "@", "Green"}], ",", "Dashed"}], "}"}]}], 
            ",", 
            RowBox[{"Polygon", "@", 
             RowBox[{"isoAxis", "[", "\"\<actTps\>\"", "]"}]}], ",", 
            RowBox[{"Point", "@", 
             RowBox[{"isoAxis", "[", "\"\<actTps\>\"", "]"}]}], ",", 
            RowBox[{"ellLabelPoints", "[", 
             RowBox[{"a", ",", 
              RowBox[{"isoAxis", "[", "\"\<actTps\>\"", "]"}], ",", 
              "\"\<C\>\"", ",", "16", ",", "lgt"}], "]"}], ",", 
            RowBox[{"Circle", "[", 
             RowBox[{
              RowBox[{"isoAxis", "[", "\"\<actInc\>\"", "]"}], ",", 
              RowBox[{"isoAxis", "[", "\"\<actIncR\>\"", "]"}]}], "]"}]}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Red", ",", 
            RowBox[{"Point", "@", 
             RowBox[{"isoAxis", "[", "\"\<x100\>\"", "]"}]}], ",", 
            RowBox[{"ellLabelTxt", "[", 
             RowBox[{"a", ",", 
              RowBox[{"isoAxis", "[", "\"\<x100\>\"", "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"OverBar", "[", "\"\<F\>\"", "]"}], ",", "16"}], 
               "]"}], ",", "lgt"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", 
            RowBox[{"Point", "@", "tpsIsogC"}], ",", 
            RowBox[{"labelPoints", "[", 
             RowBox[{"tpsIsogC", ",", "\"\<C''\>\"", ",", "14", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"-", "1.5"}]}], "}"}]}], "]"}], ",", "Dashed", ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"tpsIsogC", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"tpsIsogC", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Red", ",", 
            RowBox[{"Point", "@", 
             RowBox[{"isoAxis", "[", "\"\<x693\>\"", "]"}]}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(X\), \(693\)]\)\>\"", ",", "16"}], 
               "]"}], ",", 
              RowBox[{"isoAxis", "[", "\"\<x693\>\"", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.5"}], ",", 
                RowBox[{"-", "1.5"}]}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "@", "Small"}], ",", 
            RowBox[{"Darker", "@", "Cyan"}], ",", 
            RowBox[{"Point", "@", "ellSamplesIsotomConj"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "@", "Small"}], ",", 
            RowBox[{"Darker", "@", "Cyan"}], ",", 
            RowBox[{"PointSize", "@", "Large"}], ",", 
            RowBox[{"Point", "@", 
             RowBox[{"isoAxis", "[", "\"\<axisPts\>\"", "]"}]}], ",", "Thick",
             ",", 
            RowBox[{"Line", "[", 
             RowBox[{"Part", "[", 
              RowBox[{
               RowBox[{"isoAxis", "[", "\"\<axisPts\>\"", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}]}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "@", "Small"}], ",", "Orange", ",", 
            RowBox[{"Point", "@", "ellSamplesIsogonConj"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "@", "Large"}], ",", "Orange", ",", 
            RowBox[{"Point", "@", "x44"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(X\), \(44\)]\)\>\"", ",", "16"}], 
               "]"}], ",", "x44", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"-", "1.5"}]}], "}"}]}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "@", "Large"}], ",", "Orange", ",", 
             RowBox[{"Point", "@", "fbarIsogC"}], ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"OverBar", "[", "\"\<F\>\"", "]"}], ",", "16"}], 
                "]"}], ",", "fbarIsogC", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1.5"}], ",", 
                 RowBox[{"-", "1.5"}]}], "}"}]}], "]"}]}], "}"}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Darker", "@", "Green"}], ",", "Dashed"}], "}"}]}], 
            ",", 
            RowBox[{"Polygon", "@", "exc"}]}], "}"}], "*)"}], "}"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"lab", "=", 
       RowBox[{"(", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Isotomic and Isogonal Points\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"Large", ",", "Black"}], "}"}]}], "]"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ell", ",", 
          RowBox[{"drawAntiOrthicAxis", "[", 
           RowBox[{"tri", ",", "exc", ",", "False"}], "]"}], ",", "gr"}], 
         "}"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "lab"}], ",", 
        RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "maxX"}], ",", "maxX"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "maxY"}], ",", "maxY"}], "}"}]}], "}"}]}]}], 
       "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7708121609288692`*^9, 3.77081224044695*^9}, {
   3.770812277794954*^9, 3.770812617102542*^9}, {3.770812706814155*^9, 
   3.770812727984146*^9}, {3.77081281014578*^9, 3.7708129610739594`*^9}, {
   3.7708131632337255`*^9, 3.77081328983492*^9}, {3.7708133688425665`*^9, 
   3.7708134051706724`*^9}, {3.7708134549852133`*^9, 
   3.7708135884594345`*^9}, {3.7708137252580004`*^9, 
   3.7708137455853767`*^9}, {3.7708137832667055`*^9, 3.77081385716162*^9}, {
   3.7708139601937165`*^9, 3.770813960683408*^9}, {3.7708140392750273`*^9, 
   3.77081405485855*^9}, {3.7708141479070234`*^9, 3.7708143333391085`*^9}, {
   3.7708144933632936`*^9, 3.7708145714671125`*^9}, {3.7708147725723867`*^9, 
   3.7708149713088737`*^9}, {3.7708248872179747`*^9, 
   3.7708250601867604`*^9}, {3.7708251502096224`*^9, 
   3.7708251603233995`*^9}, {3.7708252138353577`*^9, 3.77082528174796*^9}, {
   3.7708253279318085`*^9, 3.770825376679942*^9}, {3.7708254928420615`*^9, 
   3.7708254932489786`*^9}, {3.770825618117407*^9, 3.7708257252067127`*^9}, {
   3.770825764371602*^9, 3.770825764507207*^9}, {3.770825979540156*^9, 
   3.7708260078464513`*^9}, {3.770826045702255*^9, 3.770826087757586*^9}, {
   3.7708261599888973`*^9, 3.770826248108384*^9}, {3.7708263256392994`*^9, 
   3.7708263914865985`*^9}, {3.7708327918327465`*^9, 
   3.7708327955518074`*^9}, {3.7708329525905647`*^9, 
   3.7708329994164195`*^9}, {3.7708330315894403`*^9, 
   3.7708330609340153`*^9}, {3.7708358082667165`*^9, 3.770836000907523*^9}, {
   3.7708360385389853`*^9, 3.7708362042017155`*^9}, {3.77083625310699*^9, 
   3.7708364715896344`*^9}, {3.7708365370518208`*^9, 3.770836567435458*^9}, 
   3.7708366116602707`*^9, {3.7708366451480207`*^9, 3.770836645764385*^9}, {
   3.770836723027655*^9, 3.77083676618561*^9}, {3.7708368934232254`*^9, 
   3.7708369036658525`*^9}, {3.770836937915088*^9, 3.7708369388495903`*^9}, {
   3.770838417813004*^9, 3.770838418685646*^9}, {3.7708384539334784`*^9, 
   3.7708386531233225`*^9}, {3.7708388474448423`*^9, 
   3.7708388507330537`*^9}, {3.770839010919196*^9, 3.770839027350283*^9}, {
   3.7708391360070653`*^9, 3.77083917295821*^9}, {3.7708392061786118`*^9, 
   3.7708392426650467`*^9}, 3.7708393135794106`*^9, {3.770839385654892*^9, 
   3.770839429596883*^9}, {3.7708394747483115`*^9, 3.770839516751191*^9}, {
   3.770839593943335*^9, 3.7708396292148657`*^9}, {3.7708396593785114`*^9, 
   3.770839664167712*^9}, {3.770839838838004*^9, 3.7708398644768715`*^9}, {
   3.770840483299142*^9, 3.7708404878998175`*^9}, {3.7708406585015373`*^9, 
   3.7708406689760637`*^9}, {3.7708411216410694`*^9, 3.770841124816645*^9}, {
   3.770842355464078*^9, 3.7708423897411847`*^9}, {3.7708424602667437`*^9, 
   3.7708425483160625`*^9}, {3.7708426338824744`*^9, 
   3.7708426341547475`*^9}, {3.7708429213558793`*^9, 3.770842947671801*^9}, {
   3.7708433670456743`*^9, 3.7708433721260962`*^9}, {3.770895796750606*^9, 
   3.770895805466315*^9}, {3.7708958818452587`*^9, 3.7708959989599175`*^9}, {
   3.7708972475421314`*^9, 3.7708972477346153`*^9}, {3.7708976882974963`*^9, 
   3.7708976890804033`*^9}, {3.7710041925279846`*^9, 3.7710041937995853`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"isotomicConjugate", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", ".00302663"}], ",", 
      RowBox[{"-", ".999998"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.49", ",", 
        RowBox[{"-", ".087"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.34"}], ",", 
        RowBox[{"-", ".45"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", ".79"}], ",", ".85"}], "}"}]}], "}"}]}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7708386913910885`*^9, 3.770838733577867*^9}, {
  3.770839097663946*^9, 3.7708390984883547`*^9}, {3.770839364097723*^9, 
  3.770839371153615*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.5455212354299563`", ",", 
   RowBox[{"-", "2.045219252822908`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7708387360822573`*^9, 3.7708388520879993`*^9, {3.7708390874891105`*^9, 
   3.7708390990059805`*^9}, 3.7708391755921726`*^9, 3.7708392444941587`*^9, {
   3.7708393730266104`*^9, 3.770839388537158*^9}, 3.7708394353136053`*^9, 
   3.7708395522103987`*^9, 3.770839665780402*^9, 3.7708404740069456`*^9, 
   3.770840590286617*^9, {3.7708406260919905`*^9, 3.770840661051214*^9}, 
   3.7708423389279356`*^9, 3.770842391655136*^9, 3.7708425514796057`*^9, 
   3.770842949171626*^9, 3.7708803470507*^9, 3.7708825326493006`*^9, 
   3.770886562604574*^9, 3.7708924686607404`*^9, 3.7708946254944787`*^9, 
   3.7708959079110413`*^9, 3.7708971198601933`*^9, 3.7708974390208344`*^9, 
   3.770897691410878*^9, 3.77093447363641*^9, 3.7709361292074833`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"showIsotomicAxis", "[", 
    RowBox[{"1.5", ",", 
     RowBox[{"toRad", "[", 
      RowBox[{"t", "+", ".0001"}], "]"}], ",", "maxX", ",", "maxY"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "5"}]}], "}"}], ",", 
     RowBox[{"-", "360"}], ",", "360", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"maxX", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "8", ",", "12", ",", "24"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"maxY", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "8", ",", "12", ",", "24"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7708125691360044`*^9, 3.770812577084394*^9}, {
   3.7708127384918494`*^9, 3.7708127779497952`*^9}, {3.7708136139745317`*^9, 
   3.770813649719002*^9}, {3.770813758607607*^9, 3.7708137969262285`*^9}, {
   3.7708139121990986`*^9, 3.7708139688715253`*^9}, {3.7708140104397683`*^9, 
   3.770814010928314*^9}, {3.770814099968285*^9, 3.7708141337837715`*^9}, {
   3.770825502054414*^9, 3.770825522269722*^9}, {3.770836917940674*^9, 
   3.7708369465330577`*^9}, {3.7708384455758133`*^9, 3.770838446962078*^9}, {
   3.770838641300949*^9, 3.7708386426553264`*^9}, 3.770839318936522*^9, 
   3.7708394878014274`*^9, {3.7708406739388022`*^9, 3.770840675858641*^9}, {
   3.7708433810462575`*^9, 3.77084341814223*^9}, {3.770936191888671*^9, 
   3.7709362001446047`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`maxX$$ = 8, $CellContext`maxY$$ = 
    8, $CellContext`t$$ = -4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`t$$], -5}, -360, 360, 1}, {{
       Hold[$CellContext`maxX$$], 8}, {2, 4, 8, 12, 24}}, {{
       Hold[$CellContext`maxY$$], 8}, {2, 4, 8, 12, 24}}}, Typeset`size$$ = {
    304., {3., 9.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$154559$$ = 
    0, $CellContext`maxX$154560$$ = 0, $CellContext`maxY$154561$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`maxX$$ = 8, $CellContext`maxY$$ = 
        8, $CellContext`t$$ = -5}, "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$154559$$, 0], 
        Hold[$CellContext`maxX$$, $CellContext`maxX$154560$$, 0], 
        Hold[$CellContext`maxY$$, $CellContext`maxY$154561$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`showIsotomicAxis[1.5, 
        $CellContext`toRad[$CellContext`t$$ + 
         0.0001], $CellContext`maxX$$, $CellContext`maxY$$], 
      "Specifications" :> {{{$CellContext`t$$, -5}, -360, 360, 1, Appearance -> 
         "Labeled"}, {{$CellContext`maxX$$, 8}, {2, 4, 8, 12, 
         24}}, {{$CellContext`maxY$$, 8}, {2, 4, 8, 12, 24}}}, 
      "Options" :> {ControlPlacement -> Left}, "DefaultOptions" :> {}],
     ImageSizeCache->{650., {54., 60.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.770812577415512*^9, {3.7708126084662333`*^9, 3.7708126183152714`*^9}, {
   3.770812722806947*^9, 3.7708127290441303`*^9}, 3.7708127786020727`*^9, 
   3.770812825380226*^9, {3.7708128562325153`*^9, 3.7708128665032034`*^9}, 
   3.7708134073019485`*^9, 3.770813457932119*^9, 3.770813516478137*^9, {
   3.7708136206037807`*^9, 3.7708136500909123`*^9}, {3.7708137971994715`*^9, 
   3.7708138206977034`*^9}, {3.770813953280981*^9, 3.77081396921062*^9}, 
   3.7708140114329653`*^9, {3.7708141015580673`*^9, 3.77081413425648*^9}, {
   3.770814202009225*^9, 3.770814221248214*^9}, 3.7708149416148343`*^9, 
   3.770825019260271*^9, 3.770825284395189*^9, {3.7708254979065*^9, 
   3.7708255409659543`*^9}, 3.770825731755585*^9, 3.77082595431856*^9, 
   3.770826117842532*^9, {3.770826178637584*^9, 3.770826193070655*^9}, {
   3.770832283900634*^9, 3.7708323044669905`*^9}, 3.77083282991694*^9, {
   3.7708360225821342`*^9, 3.7708360590352106`*^9}, {3.770836133816802*^9, 
   3.7708361409457493`*^9}, {3.7708362091903844`*^9, 
   3.7708362329538765`*^9}, {3.770836282310447*^9, 3.770836314108776*^9}, {
   3.770836458836239*^9, 3.7708364758683333`*^9}, {3.7708365397406416`*^9, 
   3.7708365475180244`*^9}, {3.7708366182130003`*^9, 3.7708366252931213`*^9}, 
   3.770836656646859*^9, {3.770836906995953*^9, 3.770836951327273*^9}, 
   3.7708383299617586`*^9, 3.770838447492694*^9, {3.770838538034424*^9, 
   3.7708385502284417`*^9}, 3.7708386497214413`*^9, {3.7708388400186563`*^9, 
   3.770838852767762*^9}, {3.770839088112444*^9, 3.770839100475023*^9}, 
   3.7708391762723556`*^9, {3.7708392450775995`*^9, 3.7708392499396057`*^9}, 
   3.770839319743337*^9, 3.770839389106666*^9, 3.7708394356907377`*^9, 
   3.770839488101596*^9, 3.770839552886659*^9, 3.7708396358265333`*^9, 
   3.7708396663927655`*^9, 3.770840474969373*^9, 3.770840590929922*^9, {
   3.7708406268313103`*^9, 3.7708406766944075`*^9}, 3.770840735277416*^9, 
   3.7708423389508743`*^9, 3.770842392259492*^9, 3.770842552223261*^9, 
   3.7708429497440968`*^9, {3.770843377370082*^9, 3.7708434187146997`*^9}, 
   3.770880273650241*^9, 3.7708803142986097`*^9, 3.7708803476221924`*^9, {
   3.770881934946997*^9, 3.7708819469130163`*^9}, 3.770882532673237*^9, 
   3.77088656262851*^9, 3.7708924686886654`*^9, 3.77089462551642*^9, 
   3.7708959086370993`*^9, 3.770897120414739*^9, 3.770897439527449*^9, 
   3.770897691957388*^9, 3.7708977539643173`*^9, 3.7709344736593447`*^9, 
   3.770936129232423*^9, {3.770936176010404*^9, 3.770936200557473*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 677},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 92, 1, 70, "Section"],
Cell[675, 25, 366, 8, 31, "Input"],
Cell[1044, 35, 6938, 222, 572, "Input"],
Cell[7985, 259, 744, 27, 26, "DisplayFormula"],
Cell[8732, 288, 714, 23, 72, "Input"],
Cell[9449, 313, 4764, 140, 392, "Input"],
Cell[14216, 455, 439, 12, 52, "Input"],
Cell[CellGroupData[{
Cell[14680, 471, 99, 1, 39, "Subsubsection"],
Cell[14782, 474, 5168, 146, 332, "Input"],
Cell[19953, 622, 1630, 48, 132, "Input"],
Cell[21586, 672, 96, 1, 31, "Input"],
Cell[21685, 675, 1192, 35, 72, "Input"],
Cell[22880, 712, 1421, 33, 232, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24338, 750, 100, 1, 39, "Subsubsection"],
Cell[24441, 753, 19562, 326, 143, "Input",
 Evaluatable->False],
Cell[44006, 1081, 4029, 131, 232, "Input"],
Cell[CellGroupData[{
Cell[48060, 1216, 1705, 46, 92, "Input"],
Cell[49768, 1264, 2545, 48, 70, "Output"]
}, Open  ]],
Cell[52328, 1315, 2924, 74, 226, "Input"],
Cell[55255, 1391, 99, 1, 30, "Text"],
Cell[55357, 1394, 2500, 77, 206, "Input"],
Cell[57860, 1473, 3109, 86, 212, "Input"],
Cell[60972, 1561, 2442, 53, 332, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[63463, 1620, 189, 2, 56, "Section"],
Cell[63655, 1624, 129736, 2135, 232, "Text",
 Evaluatable->False],
Cell[193394, 3761, 1305, 31, 132, "Input"],
Cell[CellGroupData[{
Cell[194724, 3796, 211, 5, 31, "Input"],
Cell[194938, 3803, 671, 13, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195646, 3821, 3156, 77, 172, "Input"],
Cell[198805, 3900, 6696, 133, 347, "Output"]
}, Open  ]],
Cell[205516, 4036, 483, 9, 31, "Input"],
Cell[206002, 4047, 458164, 7521, 199, "Input",
 Evaluatable->False],
Cell[664169, 11570, 1358, 35, 132, "Input"],
Cell[665530, 11607, 377, 8, 31, "Input"],
Cell[665910, 11617, 795, 19, 52, "Input"],
Cell[666708, 11638, 1689, 47, 132, "Input"],
Cell[668400, 11687, 806, 22, 52, "Input"],
Cell[669209, 11711, 717, 19, 52, "Input"],
Cell[669929, 11732, 10620, 260, 692, "Input"],
Cell[CellGroupData[{
Cell[680574, 11996, 4993, 133, 372, "Input"],
Cell[685570, 12131, 5128, 95, 537, "Output"]
}, Open  ]],
Cell[690713, 12229, 569, 10, 31, "Input"],
Cell[CellGroupData[{
Cell[691307, 12243, 5957, 144, 352, "Input"],
Cell[697267, 12389, 15140, 329, 379, "Output"]
}, Open  ]],
Cell[712422, 12721, 573, 10, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[713032, 12736, 108, 1, 70, "Section"],
Cell[713143, 12739, 1042, 27, 112, "Input"],
Cell[CellGroupData[{
Cell[714210, 12770, 276, 7, 31, "Input"],
Cell[714489, 12779, 255, 5, 70, "Output"]
}, Open  ]],
Cell[714759, 12787, 2813, 74, 172, "Input"],
Cell[CellGroupData[{
Cell[717597, 12865, 3291, 91, 292, "Input"],
Cell[720891, 12958, 3325, 62, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[724265, 13026, 105, 1, 56, "Section"],
Cell[CellGroupData[{
Cell[724395, 13031, 203, 2, 39, "Subsubsection"],
Cell[724601, 13035, 78335, 1289, 76, "Input",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[802973, 14329, 123116, 2024, 264, "Subsubsection"],
Cell[926092, 16355, 343, 9, 31, "Input"],
Cell[926438, 16366, 1381, 36, 172, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[927856, 16407, 350, 9, 39, "Subsubsection"],
Cell[928209, 16418, 14898, 249, 73, "Text"],
Cell[943110, 16669, 1463, 37, 152, "Input"],
Cell[CellGroupData[{
Cell[944598, 16710, 185, 4, 31, "Input"],
Cell[944786, 16716, 750, 15, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[945585, 16737, 375, 10, 39, "Subsubsection"],
Cell[945963, 16749, 3258, 79, 242, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[949270, 16834, 157, 2, 56, "Section"],
Cell[949430, 16838, 3193, 75, 312, "Input"],
Cell[952626, 16915, 5054, 125, 592, "Input"],
Cell[CellGroupData[{
Cell[957705, 17044, 448, 9, 31, "Input"],
Cell[958156, 17055, 6203, 139, 70, "Output"]
}, Open  ]],
Cell[964374, 17197, 1068, 30, 112, "Input"],
Cell[965445, 17229, 1484, 40, 132, "Input"],
Cell[966932, 17271, 1527, 44, 192, "Input"],
Cell[968462, 17317, 795, 20, 72, "Input"],
Cell[969260, 17339, 1135, 32, 132, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[970432, 17376, 197, 3, 56, "Section"],
Cell[970632, 17381, 224, 5, 30, "Text"],
Cell[970859, 17388, 27528, 456, 64, "Input",
 Evaluatable->False],
Cell[998390, 17846, 2527, 63, 212, "Input"],
Cell[1000920, 17911, 661, 18, 31, "Input"],
Cell[1001584, 17931, 6280, 174, 352, "Input"],
Cell[1007867, 18107, 1081, 31, 112, "Input"],
Cell[1008951, 18140, 6746, 182, 532, "Input"],
Cell[1015700, 18324, 3143, 80, 252, "Input"],
Cell[CellGroupData[{
Cell[1018868, 18408, 691, 17, 92, "Input"],
Cell[1019562, 18427, 1148, 17, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1020747, 18449, 1539, 43, 132, "Input"],
Cell[1022289, 18494, 2769, 64, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1025095, 18563, 119, 1, 39, "Subsubsection"],
Cell[1025217, 18566, 3976, 119, 152, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1029230, 18690, 236, 3, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[1029491, 18697, 94302, 1550, 93, "Input"],
Cell[1123796, 20249, 94749, 1557, 93, "Output"]
}, Open  ]],
Cell[1218560, 21809, 1701, 46, 132, "Input"],
Cell[1220264, 21857, 1422, 41, 92, "Input"],
Cell[1221689, 21900, 441, 9, 31, "Input"],
Cell[1222133, 21911, 1615, 46, 112, "Input"],
Cell[CellGroupData[{
Cell[1223773, 21961, 865, 23, 112, "Input"],
Cell[1224641, 21986, 939, 17, 31, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1225641, 22010, 171, 2, 70, "Section"],
Cell[1225815, 22014, 385, 10, 31, "Input"],
Cell[1226203, 22026, 138, 1, 30, "Text"],
Cell[1226344, 22029, 30742, 509, 87, "Subsubsection"],
Cell[CellGroupData[{
Cell[1257111, 22542, 9289, 157, 90, "Subsubsection"],
Cell[1266403, 22701, 948, 25, 92, "Input"],
Cell[CellGroupData[{
Cell[1267376, 22730, 31257, 517, 84, "Input"],
Cell[1298636, 23249, 31724, 524, 70, "Output"]
}, Open  ]],
Cell[1330375, 23776, 987, 28, 72, "Input"],
Cell[CellGroupData[{
Cell[1331387, 23808, 604, 18, 52, "Input"],
Cell[1331994, 23828, 822, 19, 70, "Output"]
}, Open  ]],
Cell[1332831, 23850, 1136, 30, 92, "Input"],
Cell[1333970, 23882, 3916, 104, 212, "Input"],
Cell[CellGroupData[{
Cell[1337911, 23990, 48213, 795, 108, "Input"],
Cell[1386127, 24787, 49128, 809, 70, "Output"]
}, Open  ]],
Cell[1435270, 25599, 1980, 51, 152, "Input"],
Cell[1437253, 25652, 3425, 85, 312, "Input"],
Cell[1440681, 25739, 67856, 1117, 97, "Input",
 Evaluatable->False],
Cell[1508540, 26858, 2160, 58, 152, "Input"],
Cell[1510703, 26918, 1536, 43, 72, "Input"],
Cell[CellGroupData[{
Cell[1512264, 26965, 61818, 1018, 157, "Input"],
Cell[1574085, 27985, 62748, 1032, 70, "Output"]
}, Open  ]],
Cell[1636848, 29020, 1837, 54, 92, "Input"],
Cell[CellGroupData[{
Cell[1638710, 29078, 56417, 929, 142, "Input"],
Cell[1695130, 30009, 57024, 938, 70, "Output"]
}, Open  ]],
Cell[1752169, 30950, 1520, 44, 92, "Input"],
Cell[CellGroupData[{
Cell[1753714, 30998, 263, 5, 31, "Input"],
Cell[1753980, 31005, 722, 12, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1754739, 31022, 212, 4, 31, "Input"],
Cell[1754954, 31028, 682, 12, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1755673, 31045, 101090, 1662, 180, "Input"],
Cell[1856766, 32709, 101571, 1669, 70, "Output"]
}, Open  ]],
Cell[1958352, 34381, 3757, 88, 432, "Input"],
Cell[CellGroupData[{
Cell[1962134, 34473, 625, 16, 92, "Input"],
Cell[1962762, 34491, 930, 20, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1963741, 34517, 194, 4, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[1963960, 34525, 3437, 87, 212, "Input"],
Cell[1967400, 34614, 3747, 75, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1971196, 34695, 203, 4, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[1971424, 34703, 6260, 155, 452, "Input"],
Cell[1977687, 34860, 14784, 311, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1992508, 35176, 25149, 417, 62, "Input"],
Cell[2017660, 35595, 26024, 430, 70, "Output"]
}, Open  ]],
Cell[2043699, 36028, 1090, 31, 132, "Input"],
Cell[CellGroupData[{
Cell[2044814, 36063, 54535, 899, 103, "Input"],
Cell[2099352, 36964, 55401, 912, 70, "Output"]
}, Open  ]],
Cell[2154768, 37879, 1330, 37, 152, "Input"],
Cell[2156101, 37918, 268, 7, 31, "Input"],
Cell[2156372, 37927, 1497, 43, 192, "Input"],
Cell[2157872, 37972, 2266, 50, 292, "Input"],
Cell[2160141, 38024, 2005, 47, 192, "Input"],
Cell[2162149, 38073, 655, 13, 72, "Input"],
Cell[2162807, 38088, 434, 10, 72, "Input"],
Cell[2163244, 38100, 577, 11, 31, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2163870, 38117, 223, 3, 56, "Section"],
Cell[CellGroupData[{
Cell[2164118, 38124, 230, 4, 39, "Subsubsection"],
Cell[2164351, 38130, 53793, 887, 210, "Text"],
Cell[2218147, 39019, 1143, 33, 72, "Input"],
Cell[2219293, 39054, 5348, 130, 372, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2224678, 39189, 336, 6, 39, "Subsubsection"],
Cell[2225017, 39197, 255239, 4196, 196, "Text"],
Cell[2480259, 43395, 612, 16, 92, "Input"],
Cell[2480874, 43413, 811, 20, 92, "Input"],
Cell[2481688, 43435, 283, 7, 31, "Input"],
Cell[2481974, 43444, 830, 19, 92, "Input"],
Cell[2482807, 43465, 1203, 28, 112, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2484047, 43498, 172, 4, 67, "Subsubsection"],
Cell[2484222, 43504, 136244, 2238, 220, "Input",
 Evaluatable->False]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2620515, 45748, 176, 2, 56, "Section"],
Cell[2620694, 45752, 1227, 33, 92, "Input"],
Cell[2621924, 45787, 313, 9, 31, "Input"],
Cell[2622240, 45798, 9180, 192, 992, "Input"],
Cell[CellGroupData[{
Cell[2631445, 45994, 203, 3, 39, "Subsubsection"],
Cell[2631651, 45999, 9467, 198, 1292, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2641155, 46202, 169, 2, 39, "Subsubsection"],
Cell[2641327, 46206, 2335, 54, 192, "Input"],
Cell[CellGroupData[{
Cell[2643687, 46264, 734, 20, 52, "Input"],
Cell[2644424, 46286, 2830, 47, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2647303, 46339, 106, 1, 39, "Subsubsection"],
Cell[2647412, 46342, 124810, 2051, 266, "Input",
 Evaluatable->False],
Cell[2772225, 48395, 497, 14, 31, "Input"],
Cell[2772725, 48411, 10836, 264, 912, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2783610, 48681, 100, 1, 56, "Section"],
Cell[CellGroupData[{
Cell[2783735, 48686, 561, 14, 31, "Input"],
Cell[2784299, 48702, 348508, 8887, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3132856, 57595, 214, 3, 56, "Section"],
Cell[3133073, 57600, 3803, 72, 632, "Input"],
Cell[3136879, 57674, 3409, 90, 212, "Input"],
Cell[3140291, 57766, 311, 10, 31, "Input"],
Cell[3140605, 57778, 4440, 103, 392, "Input"],
Cell[3145048, 57883, 14531, 352, 932, "Input"],
Cell[3159582, 58237, 145, 2, 30, "Text"],
Cell[3159730, 58241, 1164, 37, 92, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[3160931, 58283, 201, 6, 56, "Section"],
Cell[3161135, 58291, 9872, 179, 392, "Input"],
Cell[CellGroupData[{
Cell[3171032, 58474, 3175, 72, 172, "Input"],
Cell[3174210, 58548, 36777, 806, 70, "Output"]
}, Open  ]],
Cell[3211002, 59357, 571, 10, 31, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[3211610, 59372, 260, 3, 56, "Section"],
Cell[3211873, 59377, 14387, 309, 932, "Input"],
Cell[CellGroupData[{
Cell[3226285, 59690, 376, 11, 31, "Input"],
Cell[3226664, 59703, 989, 23, 70, "Output"]
}, Open  ]],
Cell[3227668, 59729, 1635, 46, 52, "Input"],
Cell[3229306, 59777, 1274, 31, 132, "Input"],
Cell[3230583, 59810, 1549, 38, 192, "Input"],
Cell[3232135, 59850, 1312, 33, 132, "Input"],
Cell[3233450, 59885, 1347, 32, 132, "Input"],
Cell[3234800, 59919, 1200, 30, 132, "Input"],
Cell[3236003, 59951, 1291, 33, 132, "Input"],
Cell[3237297, 59986, 1453, 36, 152, "Input"],
Cell[3238753, 60024, 1919, 47, 192, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[3240709, 60076, 179, 2, 56, "Section"],
Cell[CellGroupData[{
Cell[3240913, 60082, 1402, 37, 92, "Input"],
Cell[3242318, 60121, 1703, 37, 70, "Output"]
}, Open  ]],
Cell[3244036, 60161, 4192, 112, 199, "Input"],
Cell[3248231, 60275, 8606, 198, 372, "Input"],
Cell[3256840, 60475, 1222, 32, 152, "Input"],
Cell[CellGroupData[{
Cell[3258087, 60511, 387, 9, 31, "Input"],
Cell[3258477, 60522, 2976, 60, 70, "Output"]
}, Open  ]],
Cell[3261468, 60585, 5980, 149, 332, "Input"],
Cell[3267451, 60736, 618, 16, 52, "Input"],
Cell[3268072, 60754, 716, 19, 72, "Input"],
Cell[3268791, 60775, 622, 16, 52, "Input"],
Cell[CellGroupData[{
Cell[3269438, 60795, 3899, 100, 332, "Input"],
Cell[3273340, 60897, 4088, 72, 70, "Output"]
}, Open  ]],
Cell[3277443, 60972, 495, 9, 31, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[3277975, 60986, 177, 2, 56, "Section"],
Cell[3278155, 60990, 991, 25, 92, "Input"],
Cell[3279149, 61017, 4527, 107, 212, "Input"],
Cell[3283679, 61126, 1424, 34, 152, "Input"],
Cell[CellGroupData[{
Cell[3285128, 61164, 555, 14, 31, "Input"],
Cell[3285686, 61180, 1084, 20, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3286807, 61205, 3549, 91, 272, "Input"],
Cell[3290359, 61298, 124086, 2101, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3414494, 63405, 115, 1, 56, "Section"],
Cell[3414612, 63408, 43656, 1066, 3172, "Input"],
Cell[CellGroupData[{
Cell[3458293, 64478, 148, 2, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[3458466, 64484, 926, 24, 112, "Input"],
Cell[3459395, 64510, 973, 15, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3460405, 64530, 1236, 32, 112, "Input"],
Cell[3461644, 64564, 5682, 134, 513, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3467387, 64705, 100, 1, 70, "Section"],
Cell[3467490, 64708, 1749, 42, 132, "Input"],
Cell[CellGroupData[{
Cell[3469264, 64754, 194, 4, 67, "Subsubsection"],
Cell[3469461, 64760, 4322, 110, 372, "Input"],
Cell[CellGroupData[{
Cell[3473808, 64874, 576, 14, 31, "Input"],
Cell[3474387, 64890, 1735, 44, 84, "Output"]
}, Open  ]],
Cell[3476137, 64937, 5012, 118, 512, "Input"],
Cell[CellGroupData[{
Cell[3481174, 65059, 349, 10, 31, "Input"],
Cell[3481526, 65071, 3297, 78, 92, "Output"]
}, Open  ]],
Cell[3484838, 65152, 53390, 1145, 2772, "Input"],
Cell[CellGroupData[{
Cell[3538253, 66301, 11713, 286, 692, "Input"],
Cell[3549969, 66589, 16896, 278, 571, "Output"]
}, Open  ]],
Cell[3566880, 66870, 644, 14, 31, "Input"],
Cell[3567527, 66886, 578, 10, 31, "Input"],
Cell[3568108, 66898, 2621, 52, 192, "Input"],
Cell[CellGroupData[{
Cell[3570754, 66954, 817, 22, 92, "Input"],
Cell[3571574, 66978, 2922, 53, 789, "Output"]
}, Open  ]],
Cell[3574511, 67034, 371, 6, 31, "Input"],
Cell[CellGroupData[{
Cell[3574907, 67044, 659, 11, 31, "Input"],
Cell[3575569, 67057, 1502, 34, 33, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3577132, 67098, 151, 2, 70, "Section"],
Cell[3577286, 67102, 4263, 107, 272, "Input"],
Cell[3581552, 67211, 1487, 33, 132, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3583076, 67249, 98, 1, 70, "Section"],
Cell[3583177, 67252, 1041, 24, 92, "Input"],
Cell[CellGroupData[{
Cell[3584243, 67280, 1187, 28, 92, "Input"],
Cell[3585433, 67310, 114, 1, 23, "Print"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3585596, 67317, 255, 5, 56, "Section"],
Cell[CellGroupData[{
Cell[3585876, 67326, 257, 5, 39, "Subsubsection"],
Cell[3586136, 67333, 34065, 564, 158, "Input",
 Evaluatable->False],
Cell[3620204, 67899, 469, 9, 31, "Input"],
Cell[3620676, 67910, 1404, 33, 92, "Input"],
Cell[3622083, 67945, 15582, 349, 732, "Input"],
Cell[CellGroupData[{
Cell[3637690, 68298, 759, 23, 31, "Input"],
Cell[3638452, 68323, 889, 14, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3639378, 68342, 1783, 41, 72, "Input"],
Cell[3641164, 68385, 4775, 77, 683, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
