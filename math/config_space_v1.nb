(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2034883,      39030]
NotebookOptionsPosition[   2022008,      38636]
NotebookOutlinePosition[   2022352,      38651]
CellTagsIndexPosition[   2022309,      38648]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Utils", "Section",
 CellChangeTimes->{{3.7657196589240246`*^9, 3.765719665743774*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\<C:\\\\Users\\\\drezn\\\\Dropbox\\\\Mathematica\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7657217378447948`*^9, 3.765721737973451*^9}, {
  3.765721775573923*^9, 3.7657218002300367`*^9}, {3.7657221018699837`*^9, 
  3.765722114062396*^9}, {3.7671242620943127`*^9, 3.7671242758445625`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"toDeg", "[", "r_", "]"}], ":=", 
   RowBox[{"180.", "*", 
    RowBox[{"r", "/", "\[Pi]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"toRad", "[", "d_", "]"}], ":=", 
   RowBox[{"\[Pi]", "*", 
    RowBox[{"d", "/", "180."}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"negl", "[", "v_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Abs", "[", "v", "]"}], "<", 
    RowBox[{"10", "^", 
     RowBox[{"-", "9"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"safeDiv", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"num", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"denom", ",", "_Real"}], "}"}]}], "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"negl", "[", "denom", "]"}], ",", "0", ",", 
       RowBox[{"num", "/", "denom"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"magn2", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"v", ",", "_Real", ",", "1"}], "}"}], "}"}], ",", 
     RowBox[{"v", ".", "v"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"magn", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"v", ",", "_Real", ",", "1"}], "}"}], "}"}], ",", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"magn2", "[", "v", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"flipY", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "y"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"flipX", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "x"}], ",", "y"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"perp", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "y"}], ",", "x"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"perpNeg", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "x"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refl", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v", ",", "_Real", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "_Real", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"v", ".", "n"}], ")"}], 
       RowBox[{"n", "/", 
        RowBox[{"magn2", "[", "n", "]"}]}]}], "-", "v"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"norm", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"v", ",", "_Real", ",", "1"}], "}"}], "}"}], ",", 
     RowBox[{"v", "/", 
      RowBox[{"magn", "[", "v", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"clamp", "[", 
     RowBox[{"v_", ",", 
      RowBox[{"max_:", "100"}]}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"v", ">", "max"}], ",", "max", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"v", "<", 
         RowBox[{"-", "max"}]}], ",", 
        RowBox[{"-", "max"}], ",", "v"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"ray", "[", 
      RowBox[{"p0_", ",", "phat_", ",", "d_"}], "]"}], ":=", 
     RowBox[{"p0", "+", 
      RowBox[{"phat", "*", "d"}]}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ray", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p0", ",", "_Real", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"phat", ",", "_Real", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", "_Real"}], "}"}]}], "}"}], ",", 
     RowBox[{"p0", "+", 
      RowBox[{"phat", "*", "d"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "rot"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rot", "[", 
    RowBox[{"p_", ",", "st_", ",", "ct_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "m", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"m", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ct", ",", 
           RowBox[{"-", "st"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"st", ",", "ct"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"m", ".", "p"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rot", "[", 
    RowBox[{"p_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"rot", "[", 
    RowBox[{"p", ",", 
     RowBox[{"Sin", "@", "t"}], ",", 
     RowBox[{"Cos", "@", "t"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getEquilateral", "[", "th_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s", "=", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", 
           RowBox[{"\[Pi]", "/", "3."}]}], "]"}]}], ",", 
        RowBox[{"c", "=", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", 
           RowBox[{"\[Pi]", "/", "3."}]}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rot", "[", 
          RowBox[{"#", ",", "s", ",", "c"}], "]"}], "&"}], ",", 
        RowBox[{"rot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1.", ",", "0."}], "}"}], ",", 
          RowBox[{"Sin", "@", "th"}], ",", 
          RowBox[{"Cos", "@", "th"}]}], "]"}], ",", "2"}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"x0", "+", 
      RowBox[{"nx", "*", "t"}]}], "=", 
     RowBox[{"0", "=", " ", 
      RowBox[{
       RowBox[{">", "t"}], "=", 
       RowBox[{
        RowBox[{"-", "x0"}], "/", "nx"}]}]}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"interY", "[", 
     RowBox[{"p0_", ",", "phat_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"p0", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "/", 
         RowBox[{"phat", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ray", "[", 
        RowBox[{"p0", ",", "phat", ",", "t"}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"y0", "+", 
      RowBox[{"ny", "*", "t"}]}], "=", 
     RowBox[{"0", "=", " ", 
      RowBox[{
       RowBox[{">", "t"}], "=", 
       RowBox[{
        RowBox[{"-", "y0"}], "/", "ny"}]}]}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"interX", "[", 
    RowBox[{"p0_", ",", "phat_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "t", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", "=", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"p0", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "/", 
        RowBox[{"phat", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ray", "[", 
       RowBox[{"p0", ",", "phat", ",", "t"}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzFtI02EYBvCpMMeMKTmVyUxCR2skIgqpCfo3aBFuNYVtuSDdFuFQZDgR
wxWeaIFBzF1MsMMmdlgMUWKTNtl20dQtRko1QzGTvFD/BimBdsC+57t4+fHw
8Lyn9Z2Nt1I5HI6EHDScHz1SC1hmXNpzDIfr07kaIr/LKIDqM0kRdE6mFsCR
jVAZ7f+tlsM/g5IL8OV7SQ1MFOTKaS6dUkK7m43S/djSAmRMTp6WmN/zJRMe
bjYeXieeEluojtofjJ7IixSpYOW14nYY3NunPru32Ae9l1aoNue+E1YXXRmD
4+lHT6A7bHgKt6S3Z+Hfz1HqGmNWGIg7nparkOfnRuHIQU4cRpviP6H05BK1
/avF0kb8NDBE1fbOPoZ7cYkL6k0NN03EVZlLDx8+WB7tJ/qehx1wplX9GoaV
O16ocXdEoMI/HYOJFaN1iKjzZNyF386VT6Rksszb0uxJ+PtE/Stou6+krvuq
NrjEmY/sdxhyLPvPEm9YlQH44ldzBIq72qgyV2evI4tlzGl9VPWjvOQuMRGM
bUK+bV5amM0ydaLCEhhL8uwNQvKvQkjlez0dKqJRfqcbmt1Zb+CHpsA7WKW7
GBgmXi7ZnoP/ATBpDzA=
  "]],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "s"}], " ", 
       RowBox[{"(", 
        RowBox[{"dl", ".", "dl"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"p", "-", "l1"}], ")"}], "dl"}]}], "\[Equal]", "0"}], 
    "\[Implies]", 
    StyleBox[" ",
     FontWeight->"Bold"], 
    StyleBox["s",
     FontWeight->"Bold"]}], 
   StyleBox["=",
    FontWeight->"Bold"], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"p", "-", "l1"}], ")"}], ".", "dl"}], "/", 
     RowBox[{"dl", "^", "2", " "}]}],
    FontWeight->"Bold"]}], "DisplayFormula"]], "DisplayFormula",
 CellChangeTimes->{{3.766046175268909*^9, 3.7660461971803007`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"closestPerp", "[", 
    RowBox[{"p_", ",", "l1_", ",", "l2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dl", "=", 
        RowBox[{"l2", "-", "l1"}]}], ",", "s"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"p", "-", "l1"}], ")"}], ".", "dl"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"dl", ".", "dl"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ray", "[", 
       RowBox[{"l1", ",", "dl", ",", "s"}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"closestDist", "[", 
   RowBox[{"p_", ",", "l1_", ",", "l2_"}], "]"}], ":=", 
  RowBox[{"magn", "[", 
   RowBox[{"p", "-", 
    RowBox[{"closestPerp", "[", 
     RowBox[{"p", ",", "l1", ",", "l2"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7684785056533337`*^9, 3.7684785330943646`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "quadRoots"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"quadRoots", "[", 
    RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"det", "=", 
        RowBox[{
         RowBox[{"b", "^", "2"}], "-", 
         RowBox[{"4", "a", " ", "c"}]}]}], ",", "sqrtDet"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"det", "<", "0"}], ",", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<quadRoots fail: {a,b,c}=\>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "c"}], "}"}]}]}], "]"}], ";", 
        "False"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sqrtDet", "=", 
         RowBox[{"Sqrt", "[", "det", "]"}]}], ";", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "b"}], "-", "sqrtDet"}], ",", 
           RowBox[{
            RowBox[{"-", "b"}], "+", "sqrtDet"}]}], "}"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "a"}], ")"}]}]}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "interRays"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"interRays", "[", 
    RowBox[{"p1_", ",", "n1_", ",", "p2_", ",", "n2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "b", ",", "sols"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"m", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"n1", ",", "n2"}], "}"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"nx1", ",", 
            RowBox[{"-", "nx2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ny1", ",", 
            RowBox[{"-", "ny2"}]}], "}"}]}], "}"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"negl", "[", 
         RowBox[{"Det", "[", "m", "]"}], "]"}], ",", "p1", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"b", "=", 
          RowBox[{"p2", "-", "p1"}]}], ";", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x2", "-", "x1"}], ",", 
              RowBox[{"y2", "-", "y1"}]}], "}"}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"sols", "=", 
          RowBox[{"LinearSolve", "[", 
           RowBox[{"m", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ray", "[", 
          RowBox[{"p1", ",", "n1", ",", 
           RowBox[{"sols", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Second", "[", "l_", "]"}], ":=", 
   RowBox[{"l", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Third", "[", "l_", "]"}], ":=", 
   RowBox[{"l", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Fourth", "[", "l_", "]"}], ":=", 
   RowBox[{"l", "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Fifth", "[", "l_", "]"}], ":=", 
   RowBox[{"l", "[", 
    RowBox[{"[", "5", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sixth", "[", "l_", "]"}], ":=", 
   RowBox[{"l", "[", 
    RowBox[{"[", "6", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Seventh", "[", "l_", "]"}], ":=", 
   RowBox[{"l", "[", 
    RowBox[{"[", "7", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7670147435906525`*^9, 3.7670147496393466`*^9}, {
  3.7679104981995945`*^9, 3.7679105149996314`*^9}, {3.7682316300265183`*^9, 
  3.768231675276226*^9}, {3.7687498501054573`*^9, 3.7687498786811743`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getStats", "[", "vals_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mean", ",", "sd", ",", "z"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mean", "=", 
       RowBox[{"Mean", "@", "vals"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sd", "=", 
       RowBox[{"StandardDeviation", "@", "vals"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"z", "=", 
       RowBox[{"safeDiv", "[", 
        RowBox[{"sd", ",", "mean"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"mean", ",", "sd", ",", "z"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[CellGroupData[{

Cell["Triangles", "Subsubsection",
 CellChangeTimes->{{3.76735539449273*^9, 3.767355402979031*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cosHalfAngle", "[", "cosAngle_", "]"}], ":=", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.", "+", "cosAngle"}], ")"}], "/", "2"}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"careful", ":", " ", 
    RowBox[{"plus", " ", "or", " ", "minus"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sinHalfAngle", "[", "cosAngle_", "]"}], ":=", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.", "-", "cosAngle"}], ")"}], "/", "2"}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"careful", ":", " ", 
    RowBox[{"plus", " ", "or", " ", "minus"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cosDoubleAngle", "[", "cosAngle_", "]"}], ":=", 
    RowBox[{
     RowBox[{"2", "*", "cosAngle", "*", "cosAngle"}], "-", "1."}]}], ";"}], 
  " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"cA", "^", "2"}], "-", 
     RowBox[{"sA", "^", "2"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"cA", "^", "2"}]}], "-", "1"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sinDoubleAngle", "[", "sinAngle_", "]"}], ":=", 
    RowBox[{"2", "*", "sinAngle", "*", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"1.", "-", 
       RowBox[{"sinAngle", "^", "2"}]}], "]"}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"2", " ", "sA", " ", "cA"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"gives", " ", "cos", 
    RowBox[{"(", "A", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lawOfCosines", "[", 
    RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"b", "^", "2"}], "+", 
      RowBox[{"c", "^", "2"}], "-", 
      RowBox[{"a", "^", "2"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2.", "b", " ", "c"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSin", "[", "theCos_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"1.", "-", 
     RowBox[{"theCos", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sinCosTripleAngle", "[", 
    RowBox[{"s_", ",", "c_", ",", "s2_", ",", "c2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s3", ",", "c3"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"c3", "=", 
       RowBox[{
        RowBox[{"c2", " ", "c"}], "-", 
        RowBox[{"s2", " ", "s"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"s3", "=", 
       RowBox[{
        RowBox[{"s2", " ", "c"}], "+", 
        RowBox[{"s", " ", "c2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"s3", ",", "c3"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSinCosApB", "[", 
    RowBox[{"sa_", ",", "sb_", ",", "ca_", ",", "cb_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"sa", " ", "cb"}], " ", "+", " ", 
      RowBox[{"sb", " ", "ca"}]}], " ", ",", 
     RowBox[{
      RowBox[{"ca", " ", "cb"}], " ", "-", " ", 
      RowBox[{"sa", " ", "sb"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSinCosAmB", "[", 
    RowBox[{"sa_", ",", "sb_", ",", "ca_", ",", "cb_"}], "]"}], ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"sa", " ", "cb"}], " ", "-", " ", 
      RowBox[{"sb", " ", "ca"}]}], ",", 
     RowBox[{
      RowBox[{"ca", " ", "cb"}], " ", "+", " ", 
      RowBox[{"sa", " ", "sb"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSinApmB", "[", 
    RowBox[{"sa_", ",", "sb_", ",", "ca_", ",", "cb_"}], "]"}], ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"sa", " ", "cb"}], " ", "+", " ", 
      RowBox[{"sb", " ", "ca"}]}], ",", 
     RowBox[{
      RowBox[{"sa", " ", "cb"}], " ", "-", " ", 
      RowBox[{"sb", " ", "ca"}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.76591906281505*^9, 3.765919078501348*^9}, {
  3.7659191143404655`*^9, 3.7659191992291965`*^9}, {3.76657832275782*^9, 
  3.766578327165077*^9}, {3.7665784325336213`*^9, 3.766578440268614*^9}, {
  3.7665785667815685`*^9, 3.7665785731805363`*^9}, {3.7666098515226717`*^9, 
  3.766609958194751*^9}, {3.766615461807331*^9, 3.766615488571554*^9}, {
  3.7670103269827766`*^9, 3.7670103287340918`*^9}, {3.7671231947036533`*^9, 
  3.7671231951903543`*^9}, {3.7673553660914555`*^9, 3.767355366258979*^9}, {
  3.767549318998588*^9, 3.767549319485285*^9}, {3.7677390008982353`*^9, 
  3.7677391362668514`*^9}, {3.7677391840759*^9, 3.7677392730113115`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getTriBisectors"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getTriBisectors", "[", 
    RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"u12", ",", "u23", ",", "u31"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"u12", "=", 
       RowBox[{"norm", "[", 
        RowBox[{"p2", "-", "p1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"u23", "=", 
       RowBox[{"norm", "[", 
        RowBox[{"p3", "-", "p2"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"u31", "=", 
       RowBox[{"norm", "[", 
        RowBox[{"p1", "-", "p3"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"norm", "[", 
         RowBox[{"u12", "-", "u31"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"norm", "[", 
         RowBox[{"u23", "-", "u12"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"norm", "[", 
         RowBox[{"u31", "-", "u23"}], "]"}]}], "\[IndentingNewLine]", 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ellipse", "Subsubsection",
 CellChangeTimes->{{3.766046228637311*^9, 3.7660462354366193`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ellEqn", "[", 
    RowBox[{"a_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "/", "a"}], ")"}], "^", "2"}], "+", 
    RowBox[{"y", "^", "2"}], "-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellGrad", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "_Real"}], "}"}]}], "}"}], ",", 
      RowBox[{"-", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"y", " ", 
          RowBox[{"a", "^", "2"}]}]}], "}"}]}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "/", "a"}], ")"}], "^", "2"}], "+", 
     RowBox[{"y", "^", "2"}]}], "\[Equal]", "1"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ellY", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "_Real"}], "}"}]}], "}"}], ",", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "/", "a"}], ")"}], "^", "2"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellError", "[", 
    RowBox[{"a_", ",", "b_", ",", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_"}], "}"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "/", "a"}], ")"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y", "/", "b"}], ")"}], "^", "2"}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "eccentricity"}], ";", 
  RowBox[{
   RowBox[{"eccentricity", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", "/", "a"}], ")"}], "^", "2"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"focalDistance", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"a", "^", "2"}], "-", 
     RowBox[{"b", "^", "2"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.76789110133794*^9, 3.7678911078754535`*^9}, {
  3.7680461786418557`*^9, 3.7680462136163073`*^9}, {3.768157660984069*^9, 
  3.768157677071046*^9}, {3.768749240874897*^9, 3.7687492641073327`*^9}, {
  3.7687498125733194`*^9, 3.768749832978261*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ellRayCoeffs", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", ",", "eqn", ",", "sols"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"r", "=", 
      RowBox[{"ray", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nx", ",", "ny"}], "}"}], ",", "s"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"eqn", "=", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"ellEqn", "[", 
         RowBox[{"a", ",", 
          RowBox[{"r", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"r", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"Assumptions", "\[Rule]", 
         RowBox[{
          RowBox[{"a", ">", "0"}], "&&", 
          RowBox[{
           RowBox[{"Abs", "[", "x", "]"}], "<=", "a"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"nx", "^", "2"}], "+", 
             RowBox[{"ny", "^", "2"}]}], "\[Equal]", "1"}], ")"}]}]}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "^", "2"}], " ", 
        RowBox[{"CoefficientList", "[", 
         RowBox[{"eqn", ",", "s"}], "]"}]}], ",", 
       RowBox[{"a", ">", "0"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.765637805842102*^9, 3.7656378633575897`*^9}, {
  3.7656379254694333`*^9, 3.765637929686124*^9}, {3.765637966269289*^9, 
  3.7656379720617642`*^9}, {3.7656380094540954`*^9, 3.7656381704387407`*^9}, {
  3.765638471204547*^9, 3.7656385133662405`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CompiledFunction", "::", "cfta"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\({x, y}\\)\[NoBreak] at position \
\[NoBreak]\\!\\(1\\)\[NoBreak] should be a rank \
\[NoBreak]\\!\\(1\\)\[NoBreak] tensor of \[NoBreak]\\!\\(\\\"machine-size \
real number\\\"\\)\[NoBreak]s. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/CompiledFunction/cfta\\\", ButtonNote -> \
\\\"CompiledFunction::cfta\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7687519894260225`*^9, 3.768759121418233*^9, 
  3.768759356802952*^9, 3.7688560698424273`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["y", "2"]}], ")"}]}]}], ",", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"nx", " ", "x"}], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", "ny", " ", "y"}]}], ")"}]}], ",", 
   RowBox[{
    SuperscriptBox["nx", "2"], "+", 
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["ny", "2"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.765638159037404*^9, 3.765638170868575*^9}, 
   3.765638347636087*^9, {3.7656384853641496`*^9, 3.7656385141930285`*^9}, 
   3.7656385992629375`*^9, 3.7656428422107067`*^9, 3.765701835535811*^9, 
   3.7657018878546796`*^9, 3.7657022337673535`*^9, 3.7657196478775673`*^9, 
   3.765720973837229*^9, 3.765802017763794*^9, 3.766046206161281*^9, 
   3.766089683268818*^9, 3.7661314576958876`*^9, 3.7661320311778345`*^9, 
   3.7662363058805323`*^9, 3.766236444242606*^9, 3.766270216880103*^9, 
   3.766342655962682*^9, 3.7665660528096967`*^9, 3.766746221486204*^9, 
   3.7669188272222834`*^9, 3.7670090450568247`*^9, 3.767009799626189*^9, 
   3.7670099382437115`*^9, 3.7670139015148306`*^9, 3.7670139992996593`*^9, 
   3.7670141001856947`*^9, 3.7670323964346447`*^9, 3.7670486335481772`*^9, 
   3.7670865691274495`*^9, 3.767087965157824*^9, 3.767116413624178*^9, 
   3.7671204108024597`*^9, 3.7671232731258655`*^9, 3.7671242910627184`*^9, 
   3.7671348114370346`*^9, 3.7671352710027823`*^9, 3.767691128437108*^9, 
   3.767732697996874*^9, 3.7678136956629267`*^9, 3.767814143920453*^9, 
   3.767890277192581*^9, 3.7681206272633824`*^9, 3.7681699074564247`*^9, 
   3.768171236497014*^9, 3.7681715523285913`*^9, 3.76817323135832*^9, 
   3.7682038376839323`*^9, 3.7682082003297553`*^9, 3.7682101879124346`*^9, 
   3.768215760039915*^9, 3.768259221215531*^9, 3.7682693220186777`*^9, 
   3.768318987870573*^9, 3.768392643821639*^9, 3.768406454002462*^9, 
   3.768406839421029*^9, 3.768407759194996*^9, 3.7684728666715326`*^9, 
   3.768502192922755*^9, 3.768502800802872*^9, 3.768548405698067*^9, 
   3.768660876130492*^9, 3.768661449588829*^9, 3.76867192305427*^9, 
   3.7687342783361707`*^9, 3.768735286170169*^9, 3.76874939261749*^9, 
   3.7687519895217667`*^9, 3.7687591216715837`*^9, 3.768759357053249*^9, 
   3.7688560698454185`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "/.", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ellEqn", "[", 
          RowBox[{"a", ",", "x", ",", "y"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"ellGrad", "[", 
           RowBox[{"a", ",", "x", ",", "y"}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"px", "-", "x"}], ",", 
            RowBox[{"py", "-", "y"}]}], "}"}]}], "\[Equal]", "0"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"a", ">", "0"}], "&&", 
    RowBox[{"px", "\[Element]", "Reals"}], "&&", 
    RowBox[{"py", "\[Element]", "Reals"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.768752292756564*^9, 3.7687523384482546`*^9}, {
  3.76875256579195*^9, 3.76875277066543*^9}, {3.7687528065539856`*^9, 
  3.7687528176642437`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CompiledFunction", "::", "cfsa"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\(a\\)\[NoBreak] at position \
\[NoBreak]\\!\\(1\\)\[NoBreak] should be a \[NoBreak]\\!\\(\\\"machine-size \
real number\\\"\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/CompiledFunction/cfsa\\\", ButtonNote -> \
\\\"CompiledFunction::cfsa\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7687528181858487`*^9, 3.7687535187994733`*^9, 
  3.7687591217503448`*^9, 3.7687593570881586`*^9, 3.768856069877334*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["px", "2"], "+", 
         RowBox[{"py", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["px", "2"], "+", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["py", "2"]}], ")"}]}]}]], " ", 
          RowBox[{"Abs", "[", "px", "]"}]}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["px", "3"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", "px", " ", 
        SuperscriptBox["py", "2"]}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        SuperscriptBox["a", "2"], " ", "py"}], "-", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["px", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["py", "2"]}], ")"}]}]}]], " ", 
        RowBox[{"Abs", "[", "px", "]"}]}]}], 
      RowBox[{
       SuperscriptBox["px", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["py", "2"]}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["px", "2"], "-", 
         RowBox[{"py", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["px", "2"], "+", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["py", "2"]}], ")"}]}]}]], " ", 
          RowBox[{"Abs", "[", "px", "]"}]}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["px", "3"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", "px", " ", 
        SuperscriptBox["py", "2"]}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        SuperscriptBox["a", "2"], " ", "py"}], "+", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["px", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["py", "2"]}], ")"}]}]}]], " ", 
        RowBox[{"Abs", "[", "px", "]"}]}]}], 
      RowBox[{
       SuperscriptBox["px", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["py", "2"]}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.768752818799241*^9, 3.76875352016183*^9, 
  3.7687591230588455`*^9, 3.768759358442566*^9, 3.7688560713035192`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "ellTangents"}], ";", 
  RowBox[{"ellTangents", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "_Real", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "a2", ",", "px", ",", "py", ",", "px2", ",", "px3", ",", "py2", ",", 
         "numFact", ",", "denomx", ",", "denomy"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"px", ",", "py"}], "}"}], "=", "p"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"a2", "=", 
         RowBox[{"a", "*", "a"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"px2", "=", 
         RowBox[{"px", "*", "px"}]}], ";", 
        RowBox[{"py2", "=", 
         RowBox[{"py", "*", "py"}]}], ";", 
        RowBox[{"px3", "=", 
         RowBox[{"px", "*", "px2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"numFact", "=", 
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{"px2", "+", 
            RowBox[{"a2", 
             RowBox[{"(", 
              RowBox[{"py2", "-", "1"}], ")"}]}]}], "]"}], "*", 
          RowBox[{"Abs", "[", "px", "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"denomx", "=", 
         RowBox[{"px3", "+", 
          RowBox[{"a2", " ", "px", " ", "py2"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"denomy", "=", 
         RowBox[{"px2", "+", 
          RowBox[{"a2", " ", "py2"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"NOTE", ":", " ", 
           RowBox[{
           "the", " ", "first", " ", "one", " ", "is", " ", "Clockwise"}]}], 
          ",", " ", 
          RowBox[{
          "the", " ", "2", "nd", " ", "one", " ", "is", " ", "CCW"}]}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"a2", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"px2", "+", 
                RowBox[{"py", " ", "numFact"}]}], ")"}], "/", "denomx"}]}], 
            ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"a2", " ", "py"}], "-", "numFact"}], ")"}], "/", 
             "denomy"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"a2", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"px2", "-", 
                RowBox[{"py", " ", "numFact"}]}], ")"}], "/", "denomx"}]}], 
            ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"a2", " ", "py"}], "+", "numFact"}], ")"}], "/", 
             "denomy"}]}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}],
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.768752837782468*^9, 3.7687531869850597`*^9}, {
  3.7687535578969126`*^9, 3.7687535640095644`*^9}, {3.7687536301856785`*^9, 
  3.7687537057700453`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ellTangents", "[", 
  RowBox[{"1.5", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7687532184401665`*^9, 3.7687532250159416`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.4810951292061154`", ",", 
     RowBox[{"-", "0.15826450186938465`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7887874368984231`"}], ",", "0.850572194177077`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.768753225269264*^9, 3.7687535665826836`*^9, 
  3.768753657743328*^9, 3.7687591232114377`*^9, 3.76875935852534*^9, 
  3.7688560714680796`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "1.5"}], ",", "tangs", ",", "ell", ",", "gr", ",", 
      RowBox[{"maxX", "=", "3"}], ",", 
      RowBox[{"maxY", "=", "3"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ell", "=", 
      RowBox[{"plotEll", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"tangs", "=", 
         RowBox[{"ellTangents", "[", 
          RowBox[{"a", ",", "ploc"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"gr", "=", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "@", "Medium"}], ",", "Red", ",", 
            RowBox[{"Point", "@", "tangs"}], ",", "Thick", ",", "Blue", ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{"ploc", ",", 
               RowBox[{"tangs", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], ",", 
            RowBox[{"Darker", "@", "Green"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{"ploc", ",", 
               RowBox[{"tangs", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], "}"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ell", ",", "gr"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "maxX"}], ",", "maxX"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "maxY"}], ",", "maxY"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"Frame", "->", "True"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ploc", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", "Locator"}], 
        "}"}]}], "]"}]}]}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.76875319043586*^9, 3.768753424760208*^9}, {
  3.7687536010914183`*^9, 3.768753604073511*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ploc$$ = {2, 2}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`ploc$$], {2, 2}}, Automatic}}, Typeset`size$$ = {
    360., {177., 183.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`ploc$$ = {2, 2}}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`tangs$132469 = \
$CellContext`ellTangents[$CellContext`a$132469, $CellContext`ploc$$]; \
$CellContext`gr$132469 = Graphics[{
           PointSize[Medium], Red, 
           Point[$CellContext`tangs$132469], Thick, Blue, 
           Line[{$CellContext`ploc$$, 
             Part[$CellContext`tangs$132469, 1]}], 
           Darker[Green], 
           Line[{$CellContext`ploc$$, 
             Part[$CellContext`tangs$132469, 2]}]}]; 
       Show[{$CellContext`ell$132469, $CellContext`gr$132469}, 
         PlotRange -> {{-$CellContext`maxX$132469, $CellContext`maxX$132469}, \
{-$CellContext`maxY$132469, $CellContext`maxY$132469}}, Frame -> True]), 
      "Specifications" :> {{{$CellContext`ploc$$, {2, 2}}, Automatic, 
         ControlType -> Locator}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{417., {212., 218.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7687534253166924`*^9, 3.768753567268857*^9, 
  3.768753604421553*^9, 3.768753658257958*^9, 3.7687537084927325`*^9, 
  3.768759123264323*^9, 3.768759358580166*^9, 3.7688560715089703`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "ellInterRay"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellInterRay", "[", 
    RowBox[{"a_", ",", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"nx_", ",", "ny_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c2", ",", "c1", ",", "c0", ",", "ss"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"c2", "=", 
       RowBox[{
        SuperscriptBox["nx", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["ny", "2"]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c1", "=", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nx", " ", "x"}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", "ny", " ", "y"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"c0", "=", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["y", "2"]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ss", "=", 
       RowBox[{"quadRoots", "[", 
        RowBox[{"c2", ",", "c1", ",", "c0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ListQ", "[", "ss", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"ray", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"nx", ",", "ny"}], "}"}], ",", "#"}], "]"}], "&"}], "/@",
          "ss"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}]}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.765616122000228*^9, 3.765616156819413*^9}, {
  3.765616213568821*^9, 3.765616227617854*^9}, {3.7656162693292503`*^9, 
  3.765616466450385*^9}, {3.765616528520337*^9, 3.765616702593474*^9}, {
  3.7656167574178524`*^9, 3.7656168873219366`*^9}, {3.7656169212424374`*^9, 
  3.7656169673621545`*^9}, {3.765617004659359*^9, 3.765617366697528*^9}, {
  3.7656381766132083`*^9, 3.7656383147327538`*^9}, {3.765638356590396*^9, 
  3.7656384325349646`*^9}, {3.7656385177745852`*^9, 3.7656385768219695`*^9}, {
  3.7656524223963385`*^9, 3.7656524643486853`*^9}, {3.7656525462532167`*^9, 
  3.7656525849015355`*^9}, {3.765652713566042*^9, 3.76565271378144*^9}, {
  3.7657018112844925`*^9, 3.765701844859399*^9}, {3.7657020043236523`*^9, 
  3.7657020205650425`*^9}, {3.765964082351487*^9, 3.7659641177966986`*^9}}],

Cell["Used for Proofs", "Text",
 CellChangeTimes->{{3.7659641235538635`*^9, 3.765964127236492*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"quadRootsUnprot", "[", 
    RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"det", "=", 
        RowBox[{
         RowBox[{"b", "^", "2"}], "-", 
         RowBox[{"4", "a", " ", "c"}]}]}], ",", "sqrtDet"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sqrtDet", "=", 
       RowBox[{"Sqrt", "[", "det", "]"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "b"}], "-", "sqrtDet"}], ",", 
         RowBox[{
          RowBox[{"-", "b"}], "+", "sqrtDet"}]}], "}"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "a"}], ")"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Clear", "@", "ellInterRayUnprot"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ellInterRayUnprot", "[", 
      RowBox[{"a_", ",", 
       RowBox[{"{", 
        RowBox[{"x_", ",", "y_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"nx_", ",", "ny_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"c2", ",", "c1", ",", "c0", ",", "ss"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"c2", "=", 
         RowBox[{
          SuperscriptBox["nx", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["ny", "2"]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"c1", "=", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"nx", " ", "x"}], "+", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", "ny", " ", "y"}]}], ")"}]}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"c0", "=", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["y", "2"]}], ")"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ss", "=", 
         RowBox[{"quadRootsUnprot", "[", 
          RowBox[{"c2", ",", "c1", ",", "c0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"ray", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"nx", ",", "ny"}], "}"}], ",", "#"}], "]"}], "&"}], "/@",
          "ss"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.7681733070738*^9, {3.7687485663333664`*^9, 3.768748623133095*^9}, {
   3.7687486598440576`*^9, 3.7687486769872155`*^9}, {3.768749691643999*^9, 
   3.7687497065494633`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"quadRootsUnprotC", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "_Real"}], "}"}]}], "}"}], ",", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"det", "=", 
          RowBox[{
           RowBox[{"b", "^", "2"}], "-", 
           RowBox[{"4", "a", " ", "c"}]}]}], ",", "sqrtDet"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sqrtDet", "=", 
         RowBox[{"Sqrt", "[", "det", "]"}]}], ";", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "b"}], "-", "sqrtDet"}], ",", 
           RowBox[{
            RowBox[{"-", "b"}], "+", "sqrtDet"}]}], "}"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "a"}], ")"}]}]}]}], "]"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "ellInterRayUnprot"}], ";", 
  RowBox[{"ellInterRayUnprot", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "_Real", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "_Real", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "x", ",", "y", ",", "nx", ",", "ny", ",", "a2", ",", "c2", ",", "c1", 
         ",", "c0", ",", "ss"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], "=", "p"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"nx", ",", "ny"}], "}"}], "=", "n"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"a2", "=", 
         RowBox[{"a", "*", "a"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"c2", "=", 
         RowBox[{
          RowBox[{"nx", "^", "2"}], "+", 
          RowBox[{"a2", " ", 
           RowBox[{"ny", "^", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"c1", "=", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"nx", " ", "x"}], "+", 
            RowBox[{"a2", " ", "ny", " ", "y"}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"c0", "=", 
         RowBox[{
          RowBox[{"x", "^", "2"}], "+", 
          RowBox[{"a2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"y", "^", "2"}]}], ")"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ss", "=", 
         RowBox[{"quadRootsUnprotC", "[", 
          RowBox[{"c2", ",", "c1", ",", "c0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"ray", "[", 
           RowBox[{"p", ",", "n", ",", "#"}], "]"}], "&"}], "/@", "ss"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.768748695882679*^9, 3.768748711748415*^9}, {
   3.7687487589468403`*^9, 3.7687488826825466`*^9}, {3.7687489850987062`*^9, 
   3.7687490037877264`*^9}, 3.7687496182512217`*^9, {3.7687497139237413`*^9, 
   3.768749716811019*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "1.5"}], ",", 
      RowBox[{"alpha", "=", ".1"}], ",", "p", ",", "tc", ",", "t0", ",", 
      RowBox[{"n", "=", "10000"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1.5", " ", 
         RowBox[{"Cos", "[", "alpha", "]"}]}], ",", 
        RowBox[{"Sin", "[", "alpha", "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"t0", "=", 
      RowBox[{
       RowBox[{"Timing", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ellInterRayUnprot", "[", 
           RowBox[{"a", ",", "p", ",", 
            RowBox[{"ellGrad", "[", 
             RowBox[{"a", ",", 
              RowBox[{"Sequence", "@@", "p"}]}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tc", "=", 
      RowBox[{
       RowBox[{"Timing", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ellInterRayUnprotC", "[", 
           RowBox[{"a", ",", "p", ",", 
            RowBox[{"ellGrad", "[", 
             RowBox[{"a", ",", 
              RowBox[{"Sequence", "@@", "p"}]}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t0", ",", "tc"}], "}"}]}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7687486256752963`*^9, 3.768748653506012*^9}, {
  3.768749008475191*^9, 3.7687492257543387`*^9}, {3.768749310851083*^9, 
  3.76874933436331*^9}, {3.7687496750025153`*^9, 3.768749680163709*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getInterRefl"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getInterRefl", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"pfrom", ",", "_Real", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"pto", ",", "_Real", ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"norm", ",", "theRefl", ",", "pnext"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"norm", "=", 
          RowBox[{"ellGrad", "[", 
           RowBox[{"a", ",", 
            RowBox[{"pto", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"pto", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"theRefl", "=", 
          RowBox[{"refl", "[", 
           RowBox[{
            RowBox[{"pfrom", "-", "pto"}], ",", "norm"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"pnext", "=", 
          RowBox[{
           RowBox[{"ellInterRayUnprot", "[", 
            RowBox[{"a", ",", "pto", ",", "theRefl"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "pnext"}]}], "]"}]}], "]"}]}], ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.7678099106480856`*^9, 3.767810027358735*^9}, {
  3.767810292190235*^9, 3.7678102935658493`*^9}, {3.768749446281971*^9, 
  3.7687494571299877`*^9}, {3.7687496840662475`*^9, 3.7687496863860583`*^9}, {
  3.7687497296592255`*^9, 3.7687497738099747`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "triSides"}], ";", 
  RowBox[{
   RowBox[{"triSides", "[", "vs_", "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#1", "-", "#2"}], ")"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"vs", ",", 
       RowBox[{"RotateLeft", "@", "vs"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "triLengths"}], ";", 
  RowBox[{
   RowBox[{"triLengths", "[", "vs_", "]"}], ":=", 
   RowBox[{"magn", "/@", 
    RowBox[{"triSides", "[", "vs", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"triPer", "[", "tri_", "]"}], ":=", 
    RowBox[{"Total", "[", 
     RowBox[{"triLengths", "@", "tri"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"a", ",", "b", ",", 
    RowBox[{"c", " ", "are", " ", "side", " ", "lengths"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "@", "triAreaHeron"}], ";", 
   RowBox[{
    RowBox[{"triAreaHeron", "[", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "s", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"s", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "+", "b", "+", "c"}], ")"}], "/", "2"}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{"semi", " ", "perimeter"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"s", "*", 
         RowBox[{"(", 
          RowBox[{"s", "-", "a"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"s", "-", "b"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"s", "-", "c"}], ")"}]}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"order", " ", "by", " ", "oposition", " ", "to", " ", "vertices"}],
    " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getMedians", "[", 
    RowBox[{"t1_", ",", "t2_", ",", "t3_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t2", "+", "t3"}], ",", 
      RowBox[{"t1", "+", "t3"}], ",", 
      RowBox[{"t1", "+", "t2"}]}], "}"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getMediansV", "[", "vs_", "]"}], ":=", 
   RowBox[{".5", 
    RowBox[{"(", 
     RowBox[{"vs", "+", 
      RowBox[{"RotateLeft", "@", "vs"}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7661337620883174`*^9, 3.7661338191733656`*^9}, {
  3.7661338921831665`*^9, 3.7661340674480762`*^9}, {3.7661345241044846`*^9, 
  3.7661345363283467`*^9}, {3.766134687305379*^9, 3.766134690503578*^9}, {
  3.766142401680124*^9, 3.766142450727894*^9}, {3.7661425245618796`*^9, 
  3.7661425732326365`*^9}, {3.766142639994296*^9, 3.7661426616725283`*^9}, {
  3.766142740881012*^9, 3.766142766936796*^9}, {3.7663986552041454`*^9, 
  3.7663986688209686`*^9}, {3.767117410266687*^9, 3.7671174108022556`*^9}, {
  3.7678252008876257`*^9, 3.767825238966894*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Centroids", "Subsubsection",
 CellChangeTimes->{{3.7684051810395603`*^9, 3.7684051864012375`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PerimeterCentroid", "[", "vtx_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sides", ",", "meds", ",", "per", ",", "perCentroid"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sides", "=", 
       RowBox[{"triLengths", "@", "vtx"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"meds", "=", 
       RowBox[{"getMediansV", "@@", "vtx"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"per", "=", 
       RowBox[{"Total", "@", "sides"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"perCentroid", "=", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"meds", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "*", 
           RowBox[{"sides", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "@", "vtx"}]}], "}"}]}], "]"}], "/", "per"}]}], 
      ";", "\[IndentingNewLine]", "perCentroid"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7683842875359526`*^9, 3.768384330605794*^9}, {
  3.7683843693901863`*^9, 3.7683845219997015`*^9}, {3.7683845546308613`*^9, 
  3.7683845573665524`*^9}, {3.768384767137034*^9, 3.768384768431575*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"vtx", " ", "mean"}], ",", " ", "perimeter", ",", " ", "area"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"getCentroids", "[", "vtx_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Mean", "@", "vtx"}], ",", 
      RowBox[{"PerimeterCentroid", "@", "vtx"}], ",", 
      RowBox[{"RegionCentroid", "[", 
       RowBox[{"Polygon", "@", "vtx"}], "]"}]}], "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.768388057511879*^9, 3.76838809541187*^9}, {
  3.7683881370849085`*^9, 3.7683881427248373`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getPolyCosines"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPolyCosines", "[", "poly_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "us", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"us", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"norm", "[", 
           RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"poly", ",", 
           RowBox[{"RotateLeft", "@", "poly"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{"#1", ".", "#2"}]}], ")"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"us", ",", 
          RowBox[{"RotateRight", "@", "us"}]}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7684113347082243`*^9, 3.7684114320050845`*^9}, {
  3.7684140800417213`*^9, 3.7684140814250245`*^9}, {3.768415041155322*^9, 
  3.7684150422533593`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "polySides"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"polySides", "[", "poly_", "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"magn", "[", 
       RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"poly", ",", 
       RowBox[{"RotateLeft", "@", "poly"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7684745669984503`*^9, 3.768474589671419*^9}, {
  3.7684746445278215`*^9, 3.768474647207037*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getCircularity", "[", "locus_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rads", ",", "mean", ",", "sd"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rads", "=", 
       RowBox[{"magn", "/@", "locus"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mean", "=", 
       RowBox[{"Mean", "@", "rads"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sd", "=", 
       RowBox[{"StandardDeviation", "@", "rads"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<min\>\"", "->", 
         RowBox[{"Min", "@", "rads"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<max\>\"", "->", 
         RowBox[{"Max", "@", "rads"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<mean\>\"", "\[Rule]", "mean"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<sd\>\"", "\[Rule]", "sd"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<zscore\>\"", "\[Rule]", 
         RowBox[{"sd", "/", "mean"}]}]}], "\[IndentingNewLine]", "}"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.767011845478818*^9, 3.767012039900096*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"by", " ", "zscore"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getMinCircularity", "[", "loci_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"l", ",", "imin"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"l", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"\"\<zscore\>\"", "/.", 
          RowBox[{"Quiet", "@", 
           RowBox[{"(", 
            RowBox[{"getCircularity", "/@", "loci"}], ")"}]}]}], ",", 
         "NumberQ"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imin", "=", 
       RowBox[{"First", "@", 
        RowBox[{"First", "@", 
         RowBox[{"Position", "[", 
          RowBox[{"l", ",", 
           RowBox[{"Min", "[", "l", "]"}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"[", "imin", "]"}], "]"}], ",", 
        RowBox[{"centerNames", "[", 
         RowBox[{"[", "imin", "]"}], "]"}]}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7685489464890156`*^9, 3.7685489511741047`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Formatting", "Subsubsection",
 CellChangeTimes->{{3.765707295618081*^9, 3.7657073038969336`*^9}, {
  3.7663965281221952`*^9, 3.766396528913083*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nfn", "[", 
    RowBox[{"v_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"ToString", "@", 
    RowBox[{"NumberForm", "[", 
     RowBox[{"v", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "+", "2"}], ",", "n"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nfne", "[", 
    RowBox[{"v_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"ToString", "@", 
    RowBox[{"NumberForm", "[", 
     RowBox[{"v", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "+", "2"}], ",", "n"}], "}"}], ",", 
      RowBox[{"NumberFormat", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{"#1", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"#3", "\[NotEqual]", "\"\<\>\""}], ",", "\"\<*10^\>\"", 
              ",", "\"\<\>\""}], "]"}], ",", "#3"}], "}"}], "]"}], "&"}], 
        ")"}]}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nf", "[", "v_", "]"}], ":=", 
   RowBox[{"ToString", "@", 
    RowBox[{"NumberForm", "[", 
     RowBox[{"v", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nf1", "[", "v_", "]"}], ":=", 
   RowBox[{"ToString", "@", 
    RowBox[{"NumberForm", "[", 
     RowBox[{"v", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nf0", "[", "v_", "]"}], ":=", 
   RowBox[{"ToString", "@", 
    RowBox[{"IntegerPart", "[", "v", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "padn"}], ";", 
  RowBox[{
   RowBox[{"padn", "[", 
    RowBox[{"n_", ",", 
     RowBox[{"pads_:", "3"}]}], "]"}], ":=", 
   RowBox[{"ToString", "@", 
    RowBox[{"NumberForm", "[", 
     RowBox[{"n", ",", 
      RowBox[{"{", 
       RowBox[{"pads", ",", "0"}], "}"}], ",", 
      RowBox[{"NumberPadding", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<0\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
      RowBox[{"NumberPoint", "\[Rule]", "\"\<\>\""}]}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.7657066533601804`*^9, 3.765706668193533*^9}, {
  3.7657072593854237`*^9, 3.765707314802787*^9}, {3.7675226251178913`*^9, 
  3.7675226433675165`*^9}, {3.76848152596416*^9, 3.768481587212007*^9}, {
  3.768481675307603*^9, 3.7684816887972775`*^9}, {3.7686448404724393`*^9, 
  3.7686448407576475`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ellipse Invariants", "Section",
 CellChangeTimes->{{3.7660460012127438`*^9, 3.766046008589987*^9}}],

Cell[CellGroupData[{

Cell["Constant Perimeter (Darboux, 1917)", "Subsubsection",
 CellChangeTimes->{{3.7659623547818885`*^9, 3.765962371013446*^9}, 
   3.765962459082839*^9, {3.7677325634537053`*^9, 3.7677325641328864`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
om5vclX/Mb0gLqPfb+rZr0QeN4WymN9PO4pyheSWB0LKKXzoSV6b9/HymuGm
sn/eP7u9yGo4bLkbXdSuTUaYtfkRN9YMVmraioScfv9Zt5N5rmFl4oO2WEhz
lnfFKLhf/lrWzkl+h6uIPD7dRlNGvJNrgMQkZMwc5jzOaufzD2XmBWweaa3G
GTP1sWuvRRXxeL1CKlNeHJzZhavbiriRrev5LzwuV9j5/j8kV7Mcv+VtYdv2
npJ5f5GFvBRXWbCy7YYnieU8dlZn1SQ9Wj3GRrbxj3F2ntufp9a0aZc6UW12
0MnFzkYy3FXSnU9Ww2zxuXdZhHaaSUVIme9Pzu8h2fjyOCMrtyuxtbx+gaH0
2FMOCtyd2jDyC28nE/jXi7+doAij4N2WQWoSPznEnUdcSs5quPed7zXtdfjo
Je/3DjZRbSwjlzWY6huYVsnrStZlkecXjtLl7J36II+DoUVtD8mZtSUB6zW4
3zeE5AAIIhatKj3owGRdcRExKZUu49YeOwcAAIDviERiZ1//ARBwKIOQEXJx
w4SeurIYjJiSkc2kjWcCvhfXtmVJzV+gpN6b1UumWTG5ms3Kh3G8dqPl7DIx
/dXhGQ6GUhgJJUuP7ffjKzo0akQpecEnZ7uYSLPfiaSh09Ttt0MzK6l8ugND
agoibqx15txHKujbzD8bQ+C5fJnFiPPtxR2SjzofXcWPHh/koshbW8f1UBLH
dDYloyF7HseXtufECVKdH359dV9Nrq0o6HSdeyGOyPNGqqIOjpTBco6O5pCj
Hwvbe3nXDkeIvTi/r25jT/5OI46V7zlklX9eO+dmTPwn34n2nIbkGOn+S0+G
5PD4uULJuWHnVgzEce2mnIX9vIdpQrNo7v+F5KJy3QbNf5LZpmPMSLvnZSWP
5f4K6LPkdlwpr98A5Gz//ZPsOSWiChaTtt+JqxCW0vx/oeR/vLR6hLli508s
clMytF9/43MeDz2lecEi54dfXTOYcx6Ia/Ucuv9TBa+LdiJI4WNvBZFm0whd
twcUtPMUPh+gCLPk84Gx+th/H+FOJCmj4jBpzbM03pZVaBmrIHDjcAMlzpvs
PvV4cAaB12scWhpxZsEILc7edRk56+LXyjbvFMIgZd2f3+zAQ0gOgABi1pRE
31xio4bBYGVVR2wIENrHwgAAAADw90BZNflf7++d6WisICaGUzXvP2PXtdB0
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
uauDEHxutIOhrnKtuFJIrraE5FDn3TP6d+/x3w64bm3qlc6fS0ck0itkW715
h27/6R/rN3jkkl1XXsZ/x7eZ6LapjZ3Vx1441X/feNs3TsVpsvgXp5f0rpZP
aWRVCsnxX8mjUxuSlzdT+uT1ctu2nuiktr358R3UqFFDBAAAAEA1t27dyupL
+CwnjX95afXv9XJ9qK/SNS3t+Pvux6ouLydJCL++qIpySF559UN6kmcNQUh5
fWlKPYN0KXluu7H/eMZ+c8sVeUrQrQ1/OJbMoSPStWkyYvuNABXKaL+aIJdE
PNzQNU+6b2eemgtvhqiakUtjXDf/Vq24oizZuN7odTf8M2Nff5RY98OzulSy
1P/2phrfi0n+eiuuBX+X5vYK4sgnR2d3rWT88VX08zp0m3naR7Xe7oIsKfTR
zkGK7kIauoZWw5xC1Wa45bE+19YPLauoBNcvaNNu8wPVuzpIHq2rZa6vpfRN
Nhm43S0sQa0rgwW5LPDSlLoWOulOQFlNW8/Itn63nQ++3wSK2Gt/n/IFP7aF
KtB76bkXkSqeqOQhzhtHtrRS6raiZ9d8yIEnCeo8sj+D1Ibka0bUNlYuJM9t
XWPcfo94PvqfGCE5AAAAoDpC8jfyGO9zqwZVVRS25S5db/zupxl1LVCQJIRd
mVdeERdoamu23+sjIyTPGoJcHOO6oomxhnKwql144PYHYUnfFq8J0c+Pze9W
uaCeSNe8Yq8/Dz9RsfHuV76KTBLtuqFF4fTfzrpTLwQkqFq/HO+xf0zt0orV
8MwrDlpz7kVsdq7OTHh5Zmn/WkVzaImymkXZzlvvhSV+z3pLWfjjg392LZtL
6VUsKzSffcxTxaxQlhzlcWxstbRtNbUNSnXe+0JtmmzLkwLu7Z7YWDFlo523
dN251yNV/uoIQccG5NFLFzbbTP3nZXRm9Dn6fgRBFua8tH1xfQ11Ssl1jcyr
dRj7j+d3mzCTBJ2Z7lDUXHGOzeE498jTMFVXMo5zPzalq71SRi4yr9Fu5rlX
VDNnLkEcdG/nhFbpFu3QL+HQdYtrbGY8GQV1QUgOAAAAqI6QXEh4eXnFsNom
aV0LDEvX7rvjgcq3jYIkPuT8zKKKTERL22LK1Vgy8iwjCInPdnYppaOpHFMV
c1x2I+BbCoEFcdDtDcMcrU10RbrWjf7YcsUvc1Y4k6fEPd7U2kwn3Zez2MRT
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
e9I75v8KegS5OCbgwcmlvWrnFb1bANnSrt6g9Zf9f/XeVWoekr95E+3+9+Rm
Nnn1tTREBVpN2HvPP/7/bkIFcXzQk7Orx7YsY2WY2ofcskSDQX/uV6uE/C15
7L11LSsU0v30yqZI0/F77wZ86dkONZMY6Hr2wNrFCxbMnztr+pQJ48aOHDao
Z9u65Quba3/63lIXTjUvUqF5tyEjxk6YNG3WvAVvLVy5aedVn08bNwEAkMUE
eUr48wubxrdrVL3pkIXH7r+O+8yFhDwl1v/uvhmdy1gYvP+tM7RuO3aXS/C/
N9iEOhAkkY8PT+5U2aZu19n7b/lEfaaRiiBPDn50/K9e9UrnNHh3WZOzbL2h
a04+Dk7gWQEAWUae8vrayuEtCpnqf3qzpVepzcij7tm94cqb1InKhKCHJ5f+
0bSUlYlOzvxlO4xdffLey9CYj7VVqZ3Qol4/ubr3zy4OBbV0cxWu3G7k1tsk
5NmBOOjcjKr5c2grtVwxqDp+t2ugUkMHabzHofGNyqSWkeeqPWDlRc/oHx7m
yJPDnDf3rVw0R+p+6udrMGm3s0+kolAitU4iKsj7/tkts/rUqViqvOPABUdc
XseI5eIw5y2DG5fJ+a4zeY76ozemdlJ/u5FMHON3d/fMTpXt7VpP2XrLP4Hu
fOpFnhzy6MTioXUK59YTaRnkd2g9afcNX8WAp65MFB/u7377nw2Teje0LV+h
ybClxx+GiGWS+ADn7cMq5k29BdA0NCv5xxHfd7M9glwcH3D/4ATH/LpF6s46
75ecxbXYgjja79auSY52+Qz0jS0qtZ9ywMUvKm2nUt9dbIj3g/Nbp3StmVek
oamVq3DFBp1mHrofmsRhqvYh+Rt59OPD07vXLGymr2Vm3WzCpnNPguPTpvQE
WcrbA/fp5d0LhjQsld9QZGBmVaZmt8lrzjwJVr8Hn2XBN5Z3r1fEWE/px0HX
pGDridvuvFKXnjAqEAKvLxnQwPLTKzRNfSPTvFaFPlHAMk9Oo/Q1D5o6+ewb
zbsaltXvAwCAdOTJ4U+dVgxpW6vRwIUnn4Z/uXhYLo7zv7FlSC2L9z9yWgZG
Nn2WXQ+gwZiakkU+3jmytnXV9rOOPAxNzODGWxLssnNiq7L5DN5fsZlVajv9
wN2A+B/21DcAfEoW5X1568Ru9a2tchnqaOsY5rKyruDgYFfcqpZj//1uX27h
nV0I0qQwjytbZ/SpU65onjzm+R1aDpm1etexi7ddHjx6/Mjl5sV/diyZ3K9J
+QJ65tZVmg2ef8CFhDy7EKLvLG1ayky55YpelX4bbvjEpPUJEAdeX9avciFT
kShH4ZYz97oEJmZJpCyP97u4ekC9isVzGWhomJdpO2bJztPX7t53c3O9d+PM
3k1Lpw5qW7OsbaWavaZuuuIZkRY5iQPv7pjSqUYJEwOdt9cMrSesP3z1ruvd
K8c2TPutun0Zu27Tdt55xUWEGhIk8f4uRxYNa1auSG6jHDkLV287evnek9ed
7z9wc7116dT+NfPG929dx7501Wbd/txx9WXc+xOtXBwfeHfXmBY2+U1S62RK
dpq2/7Lz/fsu109smtLFNke+0k0XnnmlDg29BXlyhPfVbRPbOBQxNzPJU6Xd
2OW7zt689+Dho/u3r5zas2r2sHYOBTW0jHIXta/jOHr5yUehVPu8o/4heeoc
SIjLvum9GpbJb6RboHyzIbO2HLtw+77bw/tvz1QHNi8c3bVu8bxmhrkKla7c
bsife648D1XXap9E/6ubR3WoWzq/mb6OppaRuVWp+t1m/X3rVYxalbxnQB71
3GnjjP6dW6XXrufAETMWLFuezrK/5k4dNbBDuj9s33XAjPXX/LN7E3YAwM9F
kMV5X1o3xrFGyz6rrr9W4b5bkMQF3NrQu+S7lVBEGpq6ua07bXKLzT6z3mpI
kEvFSfHRkRFhIUEBr/19vb083Z88fODqfOvqeacTJ06cPHPx+pPgr69xkaf4
nRhbrUSJjiuv+MWp0DpFkIY5bx3cuJTp+1XydHLa9vjzoFso620ByDqCJNr/
4fkdC8f1/63Tb/3HL9zhdOGfjaM6dPt5QvJUcmlSuM/dY6sm9m1aq4p9mVIl
i5eyq1a/Weu2bZrUtCtbslBJ20p1WnYev9HpUeCv3hEgexFin20bXNbcSCkl
NyzcfulZz8h3P62yBK8jExqWyaMt0sxZa8Cqi55RWRiQSKKen103pmv9avY2
xQrkyW1dsU6zFi0a1a9TqXgp2wpVG/82bvUxF7/Y9A+kyeP97h5YNKBDgwo2
RfIVsi5XvU7DBnUqVqhoX6vnpI2XPMIJH9WWPCXa997RlWN/a+pgV7pIgcKF
ileq1bh586Z1HBwqlChTuU7LPhPXnXoQEC9Pv1G83529c/rXrVK+ZJH85oXt
ajdt2rhO1ZKl7Gu0nLbHLVxt8r13DVXcTqwc07W2g12pksUKlq9et3mr1s1q
V7AualnE2ta+er3mb9/gSdfX8RyiCtkhJH+TmpNHelzcNK1Hq7r2ZUoULFW+
Qp2mLVo2qVvZtmjR4sVt7Bxqtuwxesneq+7Bceq9upI87vX9szvmj+3dtX2H
gRMX7br8NDA2RVCXrxAAAL8oQRz19MS87nWL2XUYv/nS4xcBEfEZhqmy5Iin
x8bVSmukpqOfo/G0yyGk5N9KkMYHPbtxfMvKpX/NmzV10vjRfwzs3b1zm2YN
alcrV8w89WPWzFmi8ogTfl99qZfwfFvfgjmK1h259dydZ76hcWJZhv9E/Iuj
M1rYWaY9DVes0fBt1/1/go4GAH4a4lCX3WPbdPq5QvL35NKkqECPexeP7lgx
a/SANs1TtenQecTslbtO3Hjs//+tdaH+pH4nRlYqnK7lionjlMOPghJlb6Th
9zYMcSiaUyQyLOA4Y69rFpWRK5NEeLtcOLh58ZRBnVq1cHx7ALYbOmXRhoPn
XbzDkz7TalqeFOFz/8KBtbOH9ujcsnnz3waN+WuHk+vLCPVrcYBPCLLk2GDP
u2f3r5s3fnC31DNOy47dBkxdvu3wlQc+n5vhkL+9DfC5d3rXyunD2jVv7tii
5YApy/acfxSifteKqZ2CQjzvntm/Zv74wV1TT6eOrdt2Gzd33e5/Lt/3Ck34
yX4//rtsEpK/I08K93lw5fC2pVN//61j63e/lX3/mLp0y6G3dzyvo5LUOx4H
AABqSx7t6bS4b4XUGzQzy0pN+8xYd+JhSEaFP0JyhOfhcSU/3OxpaOrnKTv5
UqTaXRxnF9JoD6eFvSv93+otChpauW2qT70Q/LWfsNz7QHcbk9SnvPPZ1O70
+4KjrgFx4gxuwIUUr6Ojm9iZps2AmDcYtfaaH40aAaiN5MDbW0e0bNdyyMHH
cdwHQ+0JoTfmtytpZqBUTJ674rCdt/1i4v3OzWtbKb++psiwUs+l5zwixfzY
Asgq2SkkBwAAyAySgLsbRzuapN23aVnYNJ28zz02g9s0aXzYvQ1d9BRbGRrV
WvOQe7tvJI31ub5tZo8a1atXq1rFoZK9XZkSBXIbK91N65gWqz/kiPdXt/VM
uDm3lMnHZ7z1qw3d9zA0MaN/JsZlY5c6JRQLqxTsMH73g1A1aDEJAKmEWK/T
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
K2GVt4Rtlbr1G9SqUauKTYWqtZt0Hjpn25mHAXFimfLqnEJC4EOn9eP7t6tT
2aZwkRI29lVq1K5ZyaFm7Ra/z911wyuS5tXqTJAnR/o6H1s1qV+L+tXsbMuU
qFC1Rv0G9WtWKlPSurht5ZoNWncdOHXl4ZvPw5JYeBUAAAAAAADAL0Ea7ffk
ptPfmxZPHta/b5/evXsPmvrXut2nrj96FZkk/fe+KfLkaP+nN0/tWjlt9LB+
vXsPnzRn/aFLj/zSmndAvQnS5JjA584XDm9ZPmv8729HvHffIcPG/7Vh/8kr
Ls9fRyUTjwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAD4Bf0PoYGTvw==
    "], {{0, 270}, {1975, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{447.26666666666665`, Automatic},
  ImageSizeRaw->{1975, 270},
  PlotRange->{{0, 1975}, {0, 270}}]], "Input",
 Evaluatable->False]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJyM/QnURudd1/1yzoFaVCidPAVkHooWxMMgitMrKqjoUaCKszLZipD0bRPS
pHNo06ZthiYdaJqkTelMmzSdUgoiUwuFtlJKEQdwRBFEXxRfzuG49HzP/Vn3
b+0+SVjnWuvZaz/Xvva+9/D/Xf/5f33GN176tX/v//pRH/VRT3hgm6/9hiv+
xOMf/w1Xft1H989XXHnZt3zj/62dr/y/fNRHfWx//7/9L//yL/9Df+gP/cE/
+Af/wLl92Zd9Wf/+4T/8h9t+6Zd+af/+kT/yR/74qf3RP/pH62/8n/pTf+pP
/+k/3YD2/+Sf/JN/4k/8ifr/2B/7Y1/xFV/xp06to3/mz/yZr/7qr/5zf+7P
tf8Vp/ZVX/VVf/7P//m/cGp/8S/+xf/nuf2lv/SXvu7rvu6v/JW/8lf/6l/V
34kN/sqv/Mp2/vJf/st/62/9rW/5lm/5a3/trzXgG7/xG7/5m7/5r//1v974
v/E3/kY9f/Nv/s1v+IZv+KZv+qa2f/tv/+0Gt9Xz9/7e3/vWb/3Wb//2b3/c
4x73v5/a4x//+CecWjuXXnrpt33btzXg7//9v+9Q20suueRbT61Dl57a5Zdf
ftVVV11xxRVd5B/8g3+gv1Pa6cr1tN/4Tnz8uXWdDrlI/z7xiU+88sorn3pq
V57a05/+9GtO7eqrr37a05725Cc/uUPf+Z3f+exnP/s5z3lO2+c973nXXXfd
9ddff+ONN77sZS971ate1bbO60/tulO74YYbbrrpphe96EUveclLvuu7vuu2
22777u/+7te+9rWvec1rXnVq7dT5yle+sv477rij7atf/eqXv/zlnXLrqb3i
Fa+o8/bbb+/0/u1oPY3vxDe84Q133nnn3Xff/da3vvVtb3tb+29+85vvuuuu
7/me7+loZ7l+237xe07t9a9//ete97q2nVt/+284tXYa086b3vSmN77xjW95
y1u6oKu1rbPrOKvWgPqNecc73vEP/+E/bFuP/m7m7afW/bT9vlNrp/vslHbe
emiucM8997zzne/83lN717ve1fjv//7vb/uuU/uBH/iBto3paL/VIT/Xflj4
0lMDilr7X/zFXzy81NN+lP9HTg1kQkFIAZx2+jeItQ0jf/LUQke0HS5CQRgB
n7ZR+1edWhgBiq/5mq/52q/92qDxtacWNOps24mNaSdoBIS/83f+TjuPfvSj
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
QUaZmjbSdv6Et5iCcqPtLeqUruiijrdMzeJnAnvXP//5z+81PhLL6MdjGQL1
ZUc2pYLKBg1F2xIe5vztMR/1qEeBRq+KhFM34hdyheQ7/Nx9mx3fe9RVWHzU
NW6yIoen0vGGS223Nxytl9hyH8h4++ZLvVziFmgw0iJ7rgrF2Wgf2If+fRO3
zoaYAqjCRbpbukYbRZyU3r1eln/x0qTpxlgpuUsgoNcSnwUm0myTnXj6zqzw
OcQnSvHoReey9pREWMU2Aerz67X0K5XTQUTSp3BEtQwaSitoWMNCxYolvDbK
77tstu2cS9DQs4mF6qbLiCzbJPvB9s9Eqc///M//zM/8zGap1flv/+2/pYaH
iPXIgIu1g5EAKJ4qZbypbr36YmTfrp7EHtFG+XdcjViDXT3NYlF/XQYUSVM9
2gL1m8x2GFUgVl9lG4inXsbWD1yNHoGMquNP69JBE9JXGGxbuNbdxsiXwZIf
v1DbMBErvLTKzWQ3HBEuk47w/5ZLH+SzgfhCR86sVdyTqYr4BD7LHHzdfYsn
nOavucJXzHPKiJx3fOFa3vcZZAsR61ZzJr2eg7Wqj3RXXxjVtOkzlWmpGdRt
2gRD00JwcY05LLj51H/eYICicVssTm0WWq5w4tA1ttIZNUMQvHwcLKbr5StF
9uMmNG7QIKXPTivpia4tNLGPCPD4i6jCRl/sYXWfCR0xjnaA5jNoaHC8dmPX
ijkLx1XKIGX8V3/1V1udFjGqiLTiDsn/AsKfeTX60+5Np9qwwFq7AODujeVB
haLm2du11uXCbsZYttk0SJg65+LXzLOtaV8JO+1Rq2wc5NMvwkJsQkXoNkxl
P9M1woWFbkpD9M9etSpGZiJvF2F4ejHm7DhNuDzgPgKNBa6/7gHG6emYWMUY
zitxLSaKPjKOsHEWFZkfFo9o6Ov3z47RGS6/Hp8Czq/N38eRBxerWHiePMun
A4tQELHo64mMTUCEuA4pfmf7gPUEl9C0cNzVxaV0E5bEGTqgrTPYds0abVDb
ecll7mAQylKpnyCwsBEo2Pw7iD5Tcjvuib7kS77kcz7ncz73cz83dHzxF39x
yIrU//RP/3QNXteJ72wiI+aQIfcjH/kIO9XPX7XATsVIa5ZkxNse8TOUUW2g
XnhMn4aRPsIgel2uuq3eECkdQ1EW2w5mqllImB9d3EHL1685zw4ZLh75yEdq
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
a9D4UzlU33QNVmNep7bJxv8PKJv7Ww==
    "], {{0, 326}, {265, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{167., Automatic},
  ImageSizeRaw->{265, 326},
  PlotRange->{{0, 265}, {0, 326}}], "\[IndentingNewLine]", 
 RowBox[{"Jean", "-", 
  RowBox[{"Gaston", " ", "Darboux", " ", 
   RowBox[{"(", 
    RowBox[{"1842", "-", "1917"}], ")"}]}]}]}], "Subsubsection",
 CellChangeTimes->{{3.76773259557681*^9, 3.7677326796728935`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"deltaA", "[", "a_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"a", "^", "4"}], "-", 
     RowBox[{"a", "^", "2"}], " ", "+", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.767518908992114*^9, 3.7675189314570284`*^9}, {
  3.76751906076943*^9, 3.767519062896768*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "darbouxP", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"darbouxP", "[", 
    RowBox[{"a_", ",", 
     RowBox[{"b_:", "1"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a2", ",", "b2", ",", "delta", ",", "per"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a2", "=", 
       RowBox[{"a", "^", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"b2", "=", 
       RowBox[{"b", "^", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"delta", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"a2", "^", "2"}], "-", 
         RowBox[{"a2", " ", "b2"}], "+", 
         RowBox[{"b2", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"per", "=", 
       RowBox[{"2", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"2", "delta"}], "-", "a2", "-", "b2"}], "]"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a2", "+", "b2", "+", "delta"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"a2", "-", "b2"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      "per"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.765962462231406*^9, 3.7659625984851584`*^9}, 
   3.7674524544003525`*^9, {3.7677323662632604`*^9, 3.7677323737442513`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Exit angle at ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]]],
 " which creates ",
 "tri",
 "angular orbit (Garcia, 2019)"
}], "Subsubsection",
 CellChangeTimes->{{3.7656386401343875`*^9, 3.7656387080664387`*^9}, {
   3.7657020836958857`*^9, 3.765702091623542*^9}, {3.766046026750311*^9, 
   3.7660460355557504`*^9}, 3.768677229139231*^9, 3.768679872445404*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
zmVAEf4/Zr3FQA==
    "], {{0, 128}, {760, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{350.33333333333326`, Automatic},
  ImageSizeRaw->{760, 128},
  PlotRange->{{0, 760}, {0, 128}}]], "Text",
 CellChangeTimes->{3.7657020770149593`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "cosAlpha"}], ";", 
  RowBox[{
   RowBox[{"cosAlpha", "[", 
    RowBox[{"a_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x2", ",", "a2", ",", "a4", ",", "c2", ",", "denom"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x2", "=", 
       RowBox[{"x", "^", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a2", "=", 
       RowBox[{"a", "^", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a4", "=", 
       RowBox[{"a2", "^", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c2", "=", 
       RowBox[{"a2", "-", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"denom", "=", 
       RowBox[{"c2", " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"a4", "-", 
          RowBox[{"c2", " ", "x2"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a2", " ", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"-", "a2"}], "-", "1", "+", 
          RowBox[{"2", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"a4", "-", "c2"}], "]"}]}]}], "]"}], "/", "denom"}]}]}]}],
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7656141896654034`*^9, 3.7656144502193213`*^9}, {
  3.7656386376131325`*^9, 3.765638637892413*^9}, {3.767134928908119*^9, 
  3.7671349313641386`*^9}, {3.767135012220955*^9, 3.767135064963421*^9}, {
  3.7671351340200477`*^9, 3.7671351920041447`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cosAlphaQuad", "[", 
   RowBox[{"a_", ",", "x1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"a", "^", "2"}], "/", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"a", "^", "6"}], "+", 
     RowBox[{"a", "^", "4"}], "-", 
     RowBox[{
      RowBox[{"a", "^", "4"}], "*", 
      RowBox[{"x1", "^", "2"}]}], "+", 
     RowBox[{"x1", "^", "2"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7685943461874733`*^9, 3.768594370122594*^9}, 
   3.7685952077091894`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Can I find an expression for the next orbit point ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "2"], TraditionalForm]]],
 " in terms of \[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote] and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.765964228473589*^9, 3.7659642707689686`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "getP2"}], ";", 
  RowBox[{
   RowBox[{"getP2", "[", 
    RowBox[{"a_", ",", "x1_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "y", ",", "p1", ",", "norm", ",", "ca", ",", "sa", ",", "p2", ",", 
       "normRot", ",", "normRotNeg", ",", "p2Neg"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"y", "=", 
       RowBox[{"-", 
        RowBox[{"ellY", "[", 
         RowBox[{"a", ",", "x1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"{", 
        RowBox[{"x1", ",", "y"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ca", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"cosAlpha", "[", 
          RowBox[{"a", ",", "x1"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{"1", "-", 
             RowBox[{"a", "^", "2"}], "+", 
             RowBox[{"a", "^", "4"}]}], "]"}], "\[Rule]", "d"}], "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           SuperscriptBox["a", "2"], "+", 
           RowBox[{"2", " ", "d"}]}], "\[Rule]", "d2"}], "}"}]}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{"to", " ", "simplify"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"sa", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", 
         RowBox[{"ca", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"norm", "=", 
       RowBox[{"ellGrad", "[", 
        RowBox[{"a", ",", "x1", ",", "y"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"normRot", "=", 
       RowBox[{"rot", "[", 
        RowBox[{"norm", ",", "sa", ",", "ca"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"normRotNeg", "=", 
       RowBox[{"rot", "[", 
        RowBox[{"norm", ",", 
         RowBox[{"-", "sa"}], ",", "ca"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{
        RowBox[{"ellInterRayUnprot", "[", 
         RowBox[{"a", ",", "p1", ",", "normRot"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"get", " ", "2", "nd", " ", "solution"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"p2Neg", "=", 
       RowBox[{
        RowBox[{"ellInterRayUnprot", "[", 
         RowBox[{"a", ",", "p1", ",", "normRotNeg"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"p2", ",", "p2Neg"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7659634120463915`*^9, 3.76596364205964*^9}, {
   3.765963700482627*^9, 3.7659638173399634`*^9}, {3.7659638555896573`*^9, 
   3.765963887923172*^9}, {3.765963996307176*^9, 3.7659639985232496`*^9}, {
   3.765964138244048*^9, 3.7659641836275735`*^9}, {3.7659643384669185`*^9, 
   3.765964361931343*^9}, {3.7659644102840123`*^9, 3.7659644500596237`*^9}, {
   3.7659644850458846`*^9, 3.7659644974532433`*^9}, {3.7659646775200863`*^9, 
   3.765964736216584*^9}, 3.766046272230219*^9, {3.766429544047526*^9, 
   3.7664295470754595`*^9}, {3.7678084322510147`*^9, 3.767808478842349*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["triangular Orbits", "Section",
 CellChangeTimes->{{3.7660460814601183`*^9, 3.7660461045722866`*^9}, {
   3.766046439730899*^9, 3.7660464446997833`*^9}, 3.768677229256912*^9, 
   3.7686798735564356`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "getReflData"}], ";", 
  RowBox[{
   RowBox[{"getReflData", " ", "[", 
    RowBox[{
    "a_", ",", "p0_", ",", "normal_", ",", "sinAlpha_", ",", "cosAlpha_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nRot", ",", "inter", ",", "interNorm", ",", "interRefl", ",", 
       "nextInter", ",", "nextInterNorm"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nRot", "=", 
       RowBox[{"rot", "[", 
        RowBox[{"normal", ",", "sinAlpha", ",", "cosAlpha"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter", "=", 
       RowBox[{
        RowBox[{"ellInterRay", "[", 
         RowBox[{"a", ",", "p0", ",", "nRot"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"interNorm", "=", 
       RowBox[{"norm", "[", 
        RowBox[{"ellGrad", "[", 
         RowBox[{"a", ",", 
          RowBox[{"inter", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"inter", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interRefl", "=", 
       RowBox[{"refl", "[", 
        RowBox[{
         RowBox[{"norm", "[", 
          RowBox[{"p0", "-", "inter"}], "]"}], ",", "interNorm"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"nextInter", "=", 
       RowBox[{
        RowBox[{"ellInterRay", "[", 
         RowBox[{"a", ",", "inter", ",", "interRefl"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nextInterNorm", "=", 
       RowBox[{"norm", "[", 
        RowBox[{"ellGrad", "[", 
         RowBox[{"a", ",", 
          RowBox[{"nextInter", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"nextInter", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"returns", " ", "an", " ", "\"\<object\>\""}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<nRot\>\"", "\[Rule]", "nRot"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<inter\>\"", "\[Rule]", "inter"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<interNorm\>\"", "\[Rule]", "interNorm"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<interRefl\>\"", "\[Rule]", "interRefl"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<nextInter\>\"", "\[Rule]", "nextInter"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<nextInterNorm\>\"", "\[Rule]", "nextInterNorm"}]}], 
       "\[IndentingNewLine]", "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.765617915036533*^9, 3.7656179467847757`*^9}, {
  3.7656186273902903`*^9, 3.765618954168909*^9}, {3.765638719615542*^9, 
  3.7656387563746033`*^9}, {3.765638835590863*^9, 3.7656388657498207`*^9}, {
  3.765639145228895*^9, 3.765639150084904*^9}, {3.7656392395346627`*^9, 
  3.76563925272674*^9}, {3.7656472106279583`*^9, 3.7656472979703765`*^9}, {
  3.7660463387139406`*^9, 3.766046339007156*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "getOrbitData", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"posY", "\[Rule]", "False"}], "}"}]}], ";", 
  RowBox[{"Clear", "@", "getOrbitData"}], ";", 
  RowBox[{
   RowBox[{"getOrbitData", "[", 
    RowBox[{"a_", ",", "x_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "y", ",", "o1", ",", "n1", ",", "ca", ",", "sa", ",", "sa2", ",", "ca2",
        ",", "halfAlpha", ",", "pos", ",", "neg"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"y", "=", 
       RowBox[{"-", 
        RowBox[{"ellY", "[", 
         RowBox[{"a", ",", "x"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "@", "posY"}], ",", 
        RowBox[{"y", "=", 
         RowBox[{"-", "y"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"o1", "=", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"n1", "=", 
       RowBox[{"norm", "[", 
        RowBox[{"ellGrad", "[", 
         RowBox[{"a", ",", "x", ",", "y"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ca", "=", 
       RowBox[{"cosAlpha", "[", 
        RowBox[{"a", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sa", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", 
         RowBox[{"ca", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pos", "=", 
       RowBox[{"getReflData", "[", 
        RowBox[{"a", ",", "o1", ",", "n1", ",", "sa", ",", "ca"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"neg", "=", 
       RowBox[{"getReflData", "[", 
        RowBox[{"a", ",", "o1", ",", "n1", ",", 
         RowBox[{"-", "sa"}], ",", "ca"}], "]"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"orbit", " ", "at"}], " ", "-", "\[Alpha]"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"half", "-", 
        RowBox[{
        "angle", " ", "to", " ", "display", " ", "\[Alpha]", " ", "at", " ", 
         "bisector"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"sa2", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "ca"}], ")"}], "/", "2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ca2", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "ca"}], ")"}], "/", "2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"halfAlpha", "=", 
       RowBox[{"rot", "[", 
        RowBox[{"n1", ",", "sa2", ",", "ca2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<ca\>\"", "\[Rule]", "ca"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<sa\>\"", "\[Rule]", "sa"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<halfAlpha\>\"", "\[Rule]", "halfAlpha"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<nRot\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"\"\<nRot\>\"", "/.", "pos"}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<interRefl\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"\"\<interRefl\>\"", "/.", "pos"}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<orbit\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"o1", ",", 
           RowBox[{"\"\<inter\>\"", "/.", "pos"}], ",", 
           RowBox[{"\"\<nextInter\>\"", "/.", "pos"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<normals\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"n1", ",", 
           RowBox[{"\"\<interNorm\>\"", "/.", "pos"}], ",", 
           RowBox[{"\"\<nextInterNorm\>\"", "/.", "pos"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<nRotNeg\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"\"\<nRot\>\"", "/.", "neg"}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<interReflNeg\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"\"\<interRefl\>\"", "/.", "neg"}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<orbitNeg\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"o1", ",", 
           RowBox[{"\"\<inter\>\"", "/.", "neg"}], ",", 
           RowBox[{"\"\<nextInter\>\"", "/.", "neg"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<normalsNeg\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"n1", ",", 
           RowBox[{"\"\<interNorm\>\"", "/.", "neg"}], ",", 
           RowBox[{"\"\<nextInterNorm\>\"", "/.", "neg"}]}], "}"}]}]}], 
       "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.766131059264862*^9, 3.766131101288623*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"getOrbitData", "[", 
   RowBox[{"2.", ",", "1.", ",", 
    RowBox[{"posY", "\[Rule]", "False"}]}], "]"}], "//", 
  "ColumnForm"}]], "Input",
 CellChangeTimes->{{3.765647347183366*^9, 3.765647357137536*^9}, {
  3.7656474395771904`*^9, 3.7656474423118477`*^9}, {3.7656487616143956`*^9, 
  3.7656487642313943`*^9}, {3.7656496326380577`*^9, 3.765649636926094*^9}, {
  3.7656498421738853`*^9, 3.7656498426366744`*^9}}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"\<\"ca\"\>", "\[Rule]", "0.5498845318951073`"}]},
    {
     RowBox[{"\<\"sa\"\>", "\[Rule]", "0.8352406848223443`"}]},
    {
     RowBox[{"\<\"halfAlpha\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.6999447055028296`"}], ",", "0.7141970381054217`"}], 
       "}"}]}]},
    {
     RowBox[{"\<\"nRot\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.954983821932709`"}], ",", "0.29665788350690403`"}], 
       "}"}]}]},
    {
     RowBox[{"\<\"interRefl\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.999046437670315`", ",", "0.04366022650254692`"}], "}"}]}]},
    {
     RowBox[{"\<\"orbit\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.`", ",", 
          RowBox[{"-", "0.8660254037844386`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.9958221967905105`"}], ",", "0.06460216482111569`"}],
          "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.9431448594673921`", ",", "0.2367425052274368`"}], "}"}]}],
        "}"}]}]},
    {
     RowBox[{"\<\"normals\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.2773500981126146`"}], ",", "0.9607689228305228`"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.9917220718836333`", ",", 
          RowBox[{"-", "0.12840300673595442`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.8989334497264451`"}], ",", 
          RowBox[{"-", "0.43808521198839007`"}]}], "}"}]}], "}"}]}]},
    {
     RowBox[{"\<\"nRotNeg\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.6499627641892748`", ",", "0.7599660552731531`"}], "}"}]}]},
    {
     RowBox[{"\<\"interReflNeg\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.9990464376703146`"}], ",", 
        RowBox[{"-", "0.04366022650254653`"}]}], "}"}]}]},
    {
     RowBox[{"\<\"orbitNeg\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.`", ",", 
          RowBox[{"-", "0.8660254037844386`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.943144859467391`", ",", "0.23674250522743723`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.9958221967905108`"}], ",", "0.06460216482111761`"}],
          "}"}]}], "}"}]}]},
    {
     RowBox[{"\<\"normalsNeg\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.2773500981126146`"}], ",", "0.9607689228305228`"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.8989334497264447`"}], ",", 
          RowBox[{"-", "0.4380852119883909`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.9917220718836329`", ",", 
          RowBox[{"-", "0.12840300673595817`"}]}], "}"}]}], "}"}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{
   "ca" -> 0.5498845318951073, "sa" -> 0.8352406848223443, 
    "halfAlpha" -> {-0.6999447055028296, 0.7141970381054217}, 
    "nRot" -> {-0.954983821932709, 0.29665788350690403`}, 
    "interRefl" -> {0.999046437670315, 0.04366022650254692}, 
    "orbit" -> {{1., -0.8660254037844386}, {-1.9958221967905105`, 
     0.06460216482111569}, {1.9431448594673921`, 0.2367425052274368}}, 
    "normals" -> {{-0.2773500981126146, 0.9607689228305228}, {
     0.9917220718836333, -0.12840300673595442`}, {-0.8989334497264451, \
-0.43808521198839007`}}, 
    "nRotNeg" -> {0.6499627641892748, 0.7599660552731531}, 
    "interReflNeg" -> {-0.9990464376703146, -0.04366022650254653}, 
    "orbitNeg" -> {{1., -0.8660254037844386}, {1.943144859467391, 
     0.23674250522743723`}, {-1.9958221967905108`, 0.06460216482111761}}, 
    "normalsNeg" -> {{-0.2773500981126146, 
     0.9607689228305228}, {-0.8989334497264447, -0.4380852119883909}, {
     0.9917220718836329, -0.12840300673595817`}}}],
  Editable->False]], "Output",
 CellChangeTimes->{{3.7656473525422935`*^9, 3.7656473581458097`*^9}, {
   3.7656474404608293`*^9, 3.765647442720807*^9}, {3.765648757104462*^9, 
   3.7656488111814804`*^9}, 3.7656493923809986`*^9, {3.765649627881259*^9, 
   3.765649654383269*^9}, {3.7656498026112814`*^9, 3.7656498429458404`*^9}, {
   3.765649931211861*^9, 3.765649936107792*^9}, 3.765701888154399*^9, 
   3.76570483595704*^9, 3.765719648342352*^9, 3.7657209765300317`*^9, 
   3.7658020580660195`*^9, 3.7660896835052147`*^9, 3.7661314578175344`*^9, 
   3.7661320312865334`*^9, 3.7662363060560637`*^9, 3.766236444350319*^9, 
   3.7662702170077615`*^9, 3.76634265611827*^9, 3.7665660529273744`*^9, 
   3.766746221709608*^9, 3.7669188274197764`*^9, 3.767009045264269*^9, 
   3.767009799771772*^9, 3.7670099385139885`*^9, 3.767013901708346*^9, 
   3.7670139995001116`*^9, 3.7670141003831654`*^9, 3.7670323965692844`*^9, 
   3.7670487972661743`*^9, 3.7670879652834606`*^9, 3.7671164138346157`*^9, 
   3.7671204118586626`*^9, 3.767123273258511*^9, 3.7671242912073317`*^9, 
   3.767260270582525*^9, 3.7676911286755*^9, 3.767732698118577*^9, 
   3.7678141441029654`*^9, 3.7678902773391895`*^9, 3.768120627475814*^9, 
   3.7681699078224783`*^9, 3.7682038381995497`*^9, 3.7682082004593782`*^9, 
   3.7682101880859632`*^9, 3.7682157601875067`*^9, 3.768259200776157*^9, 
   3.768259231154972*^9, 3.768269322183265*^9, 3.768318988068066*^9, 
   3.7683926440171165`*^9, 3.768406454157076*^9, 3.7684068395875735`*^9, 
   3.76840775940545*^9, 3.76847286687798*^9, 3.7685021931112857`*^9, 
   3.768502801022286*^9, 3.7685484059394217`*^9, 3.76866087638883*^9, 
   3.768661449866088*^9, 3.768662478651184*^9, 3.768662702935737*^9, 
   3.7686704228775897`*^9, 3.7686801758658757`*^9, 3.7686844033035564`*^9, 
   3.768768362091454*^9, 3.7687703681112585`*^9, 3.768855577408063*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "orbitNormals"}], ";", 
  RowBox[{
   RowBox[{"orbitNormals", "[", 
    RowBox[{"a_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ellP", ",", "orbitData"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ellP", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"N", "@", "a"}], " ", "*", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"N", "@", "t"}], "]"}]}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"N", "@", "t"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"orbitData", "=", 
       RowBox[{"getOrbitData", "[", 
        RowBox[{
         RowBox[{"N", "[", "a", "]"}], ",", 
         RowBox[{"ellP", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"posY", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ellP", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ">", "0"}], ")"}]}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<orbit\>\"", "/.", "orbitData"}], ",", 
        RowBox[{"\"\<normals\>\"", "/.", "orbitData"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.765651969948132*^9, 3.7656520793945556`*^9}, {
  3.765652164147605*^9, 3.7656521846265364`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getAlpha", "[", 
    RowBox[{"a_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x1", ",", "ca"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x1", "=", 
       RowBox[{"a", " ", "*", " ", 
        RowBox[{"Cos", "[", "t", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ca", "=", 
       RowBox[{"cosAlpha", "[", 
        RowBox[{"a", ",", 
         RowBox[{"a", " ", 
          RowBox[{"Cos", "[", "t", "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ArcCos", "[", "ca", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7684917816844616`*^9, 3.768491808582265*^9}, {
  3.768491880261013*^9, 3.7684919424374*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getOrbitCosines", "[", 
    RowBox[{"a_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"orbit", ",", "normals"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"orbit", ",", "normals"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"getPolyCosines", "[", "orbit", "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7659143005967426`*^9, 3.7659143335134487`*^9}, {
   3.7659143816178093`*^9, 3.76591443646488*^9}, {3.765914734137042*^9, 
   3.765914894755134*^9}, 3.766175776834915*^9, {3.7671210004349833`*^9, 
   3.767121016314105*^9}, {3.7684114922293606`*^9, 3.7684114939956417`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Major triangular Centers (Notables)", "Section",
 CellChangeTimes->{{3.7660464796718826`*^9, 3.766046489205515*^9}, {
   3.7670101642367005`*^9, 3.7670101763959494`*^9}, {3.76789056358529*^9, 
   3.767890568553003*^9}, 3.768677229371605*^9, 3.768679875636841*^9}],

Cell[CellGroupData[{

Cell["\<\
Linha de Euler: bari, ortho, circum, 9-pc all lie on a line (but not incenter)\
\>", "Subsubsection",
 CellChangeTimes->{{3.7656420853255863`*^9, 3.765642092335216*^9}, {
  3.7657067541131935`*^9, 3.765706766353731*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQdUFFcXx6nSQRBUUEHsYq/YY40aa2yx66exJhpNjKgpoKJiRzT23qJG
VLCLHRUrCmIFVBRUilTp7M53H29dF1iWndmZ3UXv7+zJMbMz790dZu7/1Xud
x/0yYKKejo7Ob8bwnwH/c+v066//mzvQAP6n89xZE8bpwz/26uroGMM55N8M
giAIgiAIgiAI8gUhEonCw8OvXbt2/vz50NDQpKQkTVuEIAiCaIawsLBx48aV
L19eRwYDA4OOHTtu2bIlNzdX0wYiCIIgaiIjI2PKlCn6+voODg6///771atX
nz59GhkZGRwcvG3bti5duujq6rq4uAQFBWnaUgRBEERwYmJimjVrZm5u7u3t
nZWVJfec27dvt23b1sjIaMeOHeq1DkEQBFEraWlpjRo1qlSp0v379xWfmZOT
M378eD09vaNHj6rHNgRBEET9jBo1CnoKDx48UOZkkUjUv39/MzOzqKgooQ1D
EARB1E9wcDC0/9euXav8JcnJyba2tqNHjxbOKgRBEERTgHt3cnLKzs5mddWy
Zcv09fVjY2MFsgpBEATRCCAHVlZWf/zxB9sLQRFAFzZv3iyEVQiCIIimCAsL
09HRuXjxIodrGzduPH78eN5NQhAEQTTIuXPnQBciIiI4XNuvX78ePXrwbhKC
IAiiQfz8/EAXYmJiOFw7bNiwDh068G4SgiAIokFu3boFunDv3j0O137zzTdD
hw7l3SQEQRBEg8TFxenp6W3fvp3thbm5ueXKleMwYY0gCIJoOa1aterVqxfb
q86fPw8djRs3bghhEoIgCKJB1q5dC12GkJAQVld169atRo0aIpFIIKsQBEEQ
TZGVleXs7NypUyflY2j7+vpCZ+HgwYOCGoYgCIJoioCAAAMDg0mTJonF4hJP
vnv3rqmpac+ePZU5GUEQBCmlbNq0SU9Pb9CgQWlpaQpOO3LkiImJCYhIixYt
FJ+JIAiClHb8/PwsLCzs7e03btxYKHEndA1u3rzZp3dvHR2d9u3bGxoawj+6
dOlSXKYGBEEQ5MsgOjp6zJgxurq6+vr6rVu37t+//+DBg7t1+9ahgh0IQS0n
e5p2Yd++fdC5gCNwAmb2RBAE+bKhC1DB7Q8dOrRs2U76+q716w/8c0Ddmz/q
iPZ/Lz1t/fr1NPXz6NGjcaIBQRDkC2bKlCl0sAj+3bo1o6PDLFnCMA92Me46
zCJzJjdTeuaiRYuoNEybNk1z9iIIgiACkpeXV6FCBXD1a9asYWR1IT2BmW9A
pCH8tOz5s2fPptKwcOFCDZmMIAiCCMilS5foIFJ0dDQjqwvAtnZEF05MlT1f
LBZPnDiRSsOqVas0YTKCIAgiID///DN4+DZt2tD/LaAL15YSXVhVhSk4myAS
iYYOHQpX6erqbtu2Te0mIwiCIEIBHr5ixYqyLf8CuhD/hOgCfN4GF7owJyfn
u+++gwv19fUPHz6sXqsRBEEQoQgMDKTN/jdv3tAjBXQB8KlFdOHy/KLXZmRk
dOjQAS4vU6bM2bNn1WUygiAIIiC//PILOHZXV1fpkcK6cOZXogubmsu9PCUl
pWnTplCChYXF7du3hbcXQRAEERCxWFypUiXw6suWLZMeLKwLLy/lDyXpMilv
5BYSFxdXp04dKKRcuXJhYWHCW40gCIIIxY0bN+gg0suXL6UHC+uCKI9ZWo5I
w52NxZXz5s0bJycnKMrBweHFixfCGo0gCIIIxq+//grOvHnzAmNEhXUB8B1B
dGGfojw+z58/p/PX1atXf/v2rTD2IgiCIAIiFourVKkCnnxJAQ2QpwsPDxBd
8DRhsj8qKDAkJMTa2hoKrF+//ocPH4SxGkEQBBGKW7du0b1pkZGRssfl6EJm
MrOgDJGGJ8cUl3njxg0zMzMos2XLlqmpqQJYjSAIgggFDWfRuHHjQsfl6AKw
qwvRBb/xJRZ77tw5IyMjKLlz586ZmZklno8gCIJoA2Kx2NnZGby3p6dnoa/k
60KQN9GFZeUZccnJnX19ffX19aHwvn37YkRuBEGQUsHdu3fpINKzZ88KfSVf
FxJfSDY+v7mpTPk7duzQ1dWF8keOHCkSlSwlCIIgiGaZO3cuOO0GDRoU/Uq+
LgD/1Ce6cOEPJavw9vam0vPTTz+pZiyCIAgiODVr1gSP7eHhUfSrYnXh/Fyi
C+vlSElxzJkzh0qDu7s7d1sRBEEQgXnw4AF1148ePSr6bbG68PqGZCgpUdmd
a2KxePLkybSuFStWqGY1giAIIhR//vknOGoXFxe53xarC2IRs7wi0YWbPsrX
JRKJhg0bRndVb926lavJCIIgiIDUqlULHPXff/8t99tidQE4No7owu5urKrL
ycnp1asXjch96NAh9vYiCIIgAvLw4UM6sBMSEiL3BEW68OQo0YUFhkxmEqtK
MzIyvvnmGxqR+/Tp0yVfgCAIgqgLd3d38M916tQp7gRFupD9kVloTKQh7CDb
elNSUpo3bw5Vm5qaBgYGsr0cQRAEEYh69eqBc/7jj2KXmyrSBWDvd0QXfEdy
qDo+Pt7FxQVqt7KyCg4unAAOQRAEUT+PHz+mg0gK3HIJunBnA9EFLxtGxGUj
c3R0dNWqVcGA8uXLP336lEMJCIIgCI8sWLAAfHKNGjUUnFOCLqTGkBw9IA2v
rnCzITw8nEbkrlKlSlRUFLdCEARBEF5o1KgROGQ3NzcF55SgC8CmZkQXzs7i
bEZoaKiNjQ1YUqtWrffv33MuB0EQBFGFJ0+e0EGkO3fuKDitZF245EF0waeW
KsYEBQWZm5vTgK5JSexWNyEIgiC8sGjRIvDD1apVU3xaybrw9p5k43O8ShME
AQEBNCJ3x44dMSI3giCI+mnatCk44VmzShj/KVkXxGJmZWWiC9eXq2jS0aNH
DQwMwKo+ffrk5OSoWBqCIAiiPBEREXQQKSgoSPGZJesCcHwy0YXtHVQ3bNeu
XTQi94gRIzAiN4IgiNpYunQp+F4nJycxtPYVopQuPD9JdGG+PpMer7ptPj4+
VLOmTp2qemkIgiCIMrRo0QIc78yZM0s8UyldyM1iFlsQaXiwmxfz/vjjDyoN
CjbcIQiCIHwRGRlJve61a9dKPFkpXQAOfE904dBgXiwEQLOokcuWLeOrTARB
EEQuK1asAH9bqVIlZQbwldWF4O1EFxZbMnnZvBgpFovHjRtHI3Jv3ryZlzIR
BEEQubRq1Qr87bRp05Q5WVld+BhL5hdAGiLOqW4hJS8vb+DAgTQi94EDB/gq
FkEQBJElKiqKLvi5ckWpyBXK6gKwtTXRhVNKyY2SZGdnf/vtt2CtoaHhyZMn
eSwZQRAEoaxevRrcrL29vZKrQFnowtXFRBdWO6lmYGFSU1PpLLmJicnVq1f5
LRxBEARp164dqyWgLHQhNkyy8fl9qCoWFiUhIUEakfvevXv8Fo4gCPI1ExMT
o6enBw724sWLSl7CQheANTWILlzx5GxhcYDlzs7OYLmdnd2TJ094Lx9BEOTr
ZO3atTTZQV5enpKXsNOF078QXdjiytlCBURERNjb24P9lStXfvXqlRBVIAiC
fG3QrMqTJk1S/hJ2uhB5nuiChx6T9o6bhYp5+PAhjchds2ZNjMiNIAiiIm/f
vqWDSOfOsVhKyk4X8nKYJWWJNNzbys3IErl16xaNyN2wYcPExESBakEQBPka
WL9+PR2fz81lkXOTnS4A/w0luvBvPw4WKsmFCxeMjY3ht7Ru3frjx4/CVYQg
CPJl07lzZ/ClP/74I6urWOtC6D6iC54mTE46WwuV59ixYzQid7du3bKysoSr
CEEQ5EslNjZWX18fHOnp06dZXchaFzISmfkGRBqeHWdrJCt2795Nh8UGDBig
/DQ6giAIQtm0aRO4UBsbG7b5bljrArCjI9EF/4msKuIAXV4FjB07tsSA4QiC
IIgsNJoE+E+2F3LRhRsriS6ssGeE99Xu7u5UGtzc3ISuC0EQ5IshLi6Ojsaf
OHGC7bVcdOFDhGTjc8wdttVx4LfffqPS4OXlpYbqEARBvgC2bt0KbtPa2ppD
0mQuugCsq0t04eLfbKvjgFgsHj9+PI3IvXHjRjXUiCAIUtrp2bMnuM1Ro0Zx
uJajLpybTXRhQ2MONXIgLy9v8ODB8Bv19PT279+vnkoRBEFKKR8+fDA0NASf
eezYMQ6Xc9SFqEDJUFKSmgJWZGdnd+/enUbk5jBchiAI8vWwc+dO8JaWlpbc
1vlz1AVRHrPUlujC7X84VMqN9PR0Gi3WxMTk8uXLaqsXQRCkdNG7d29wlcOH
D+d2OUddAI6OIbqwpwe3ermRnJzcuHFjqoN3795VZ9UIgiClAvCTRkZG4Cd9
fX25lcBdFx4dJrqw0IjJSuVWNTdiY2Nr164NP9nW1vbx48fqrBpBEET72bNn
D3hIc3PzjIwMbiVw14XsNGahMZGGxxwliTNRUVGOjo7wwytVqvTy5Us1144g
CKLN9O/fH9zjkCFDOJfAXReAPd2JLhxlvZlOdcLCwsqVKwe/vUaNGu/eCRL0
G0EQpNSRkpJC444eOnSIcyEq6cKtdUQXltmRaWi1c/v2bQsLC/j5DRo0+PDh
g/oNQBAE0Tb2798PXtHMzCw9nXtoU5V0Ifk1465LpCHqGmcDVOHixYtUGVu1
apWWlqYRGxAEQbSHgQMHgkuE/6pSiEq6AGxoTHQhQGPBi/z8/GgMkK5du2JE
bgRBvmY+fvxoamoK/vDff/9VpRxVdeHiX0QX1rmoYoOK7N27l0bk7t+/P6uc
RAiCIF8Shw4doju8VBw/UVUXom9LNj4nPFfFDBX5559/aGy90aNHY0RuBEG+
ToYMGUJbyCqWo6ougBNeWYnowo1VKlqiIgsWLKDSMG3aNM1agiAIon6kg0h7
9uxRsShVdQHwn0h0YWcnFS1RnVmzZlFp8PT01LQtCIIgasXX1xe8n7GxcWqq
qnuNedCFZ8eJLsw3ICk+NYpYLP7xxx+pNKxapeH+C4IgiDoZNmwYuL7evXur
XhQPupCTwSwyI9IQqvkI2Hl5eXSETVdXd9u2bZo2B0EQRB1kZGSYm5uD69u5
c6fqpfGgC8D+vkQXDg9T3R7Vyc7Opgkp9PX1Dx8+rGlzEARBBOfYsWPg9MqU
KZOUlKR6afzowr0tRBeWWDF5rBPGCUF6enr79u3pXTp79qymzUEQBBGWUaNG
gceDJjEvpfGjC2nvGQ89Ig0vLvBileokJyc3adIEbpSFhcXt27c1bQ6CIIhQ
ZGVlWVlZgbvja/CcH10ANrckunB6Bg828URcXByNyF2uXLlHjx5p2hwEQRBB
OH78OM1lmZCQwEuBvOnClYVEF7yr8WATf7x+/drJyQnumIODw4sXLzRtDoIg
CP+MHTsWvNy3337LV4G86cL7EMnG5zjtapk/f/68QoUKcNOqV6/+9u1bTZuD
IAjCJ9nZ2WXLlgUXt2nTJr7K5E0XAG9noguBXnyUxScPHjyg961+/frKR+Te
uXMnBuJDEETLOX36NDg3AwOD+Ph4vsrkUxdO/kx0YVtbPsrimevXr5uZmcHd
a9myZYkRpUQi0cSJE+kOEc6B+PQ89HTdda+8usLtcgRBEGUYP348OKsuXbrw
WCafuhBxluiChx5ZnqR9nD17tkyZMnADO3funJmZWdxpeXl5dLAOGDZsWE4O
x5W3Ou468Ln88jJXexEEQUoAGq40c+X69et5LJZPXcjLZhZbEmm4v4OP4vhn
3759NCJ337595XYEMjIyvvvuOyoKs2bNoqFZofvAoS7UBQRBhObcuXN0D+/7
93y2xvnUBeDQYKILBwbwVBz/gKpStz9y5MhCDj85OblDhw70Wy8vySxJampq
p06dFixYwLYi1AUEQYRm0qRJ4K+++eYbfovlWRce7Ca6sMicyS12oEbjLFq0
iDr/n376SXowLi6uadOmcBA6FNIeWUpKCtxwGm3p3r17rGpBXUAQRFByc3Nt
bW3BQa1du5bfknnWhYwPJLAqSEP4aZ5KFITZs2dTafDw8ID/ffPmTZ06dejG
kH379tFzoqOjXVxcqFJs2LCBbRWoCwiCCMqFCxeog3r37h2/JfOsC8D29kQX
Tkzlr0T+EYvFdMURMGfOHLr3zcTE5Pjx4/SEiIgIZ2dnqhTSTKlRUVFnzpxR
sgrUBQRBOPPx48eOHTuuWLHi5cuXxZ0zdepU8FHt2rXjvXb+deHaMqILq6ow
2p1PUyQSDR06VOcTlpaWly9LfHhoaKi9vT1VihMnTtCDISEhFStWBJk4fVqp
rhDqAoIgnIHmqNQ7ubi4uLm5BQYGyp6Ql5dHd+yuXr2a99r514X4p5KNz2+D
+StUEK5cuQJ+vtBEc1BQkLW1NRyxsrKCE+jB+/fvly9fnkbhu3jxojKFoy4g
CMIZaIhCdwDaojoyNGnSxNPT8+nTp0y++6JTn2/evOG9dv51AfCpRXTh8nxe
C+WZs2fP0p1uRkZGNCI3dATOnTtHc1vY2dlJJ5rhID3TwcEhLCxMyfJRFxAE
UR3wOe7u7jQEqJSqVas2atQI/tEaPLgACKILZ38jurCpOa+F8snhw4fpHrea
NWvCbW/WrBkVCNp9qFKlypMnT+iZvr6+VDiqV6/OKvIe6gKCIDxCBaJu3bqy
AlG2bNnp06cHBgaKeR23F0QXwBmSoSRdJoX/Do7qbN++XV9fH24pCC7dDBIX
F0cnFAAnJ6eoqCh65o4dO+iZ9evXZxtzD3UBQRAhAIEYN26cTkGgNQsCERAQ
wDl0jyyC6IIoj1lajkjDnY28lssDq1at0tXVhdvYtm1bacK71atX04OAra0t
Hb6THnR1dVU+2p4U1AUEQQRixowZ4JoaNmzo7e0NrkxWIMCDjRo1yt/fXxWB
EEQXAN+RRBf29eK7XJVwc3Ojt6579+7p6emFDjZr1oxOLoPyTpkyhR7s0qVL
iXH25IK6gCCIEIjF4sqVK4N3Wrp0KT0SEhLy119/0f1WUhwdHRctWsStCqF0
Iewg0QVPEyb7I99FcwHu5LRp0+jtGjx4cHZ2NpO/VPXnn3+mB3v06AFKAbeX
LkaifP/995xDbaMuIAgiBEFBQXQlUtEZz1evXtEeBB3rgG4FtyqE0oWsFGZB
GSINT47xXTQX5s6dS1398OHDaYhU6GTRTNnAkCFDpErRv39/aXcsMTGRc42o
CwiCCMGsWbPAQTVt2lTBOc+ePYPOwt27d7lVIZQuALu6El3wGy9A0ax58OCB
jY2NNERqZmZmv379qP+fMGFCXl4eHAS9kO50o9PNnTp1UhCRWzGoCwiC8A54
sKpVq4J3Wrx4sXC1CKgLN9cQXVhWnhFziVPNO5GRkfQfNEQq9f+///47VYqM
jIxevXrRg15eXkeOHKHS0KdPH24pGFAXEAThndu3b1M39fz5c+FqEVAXkl5J
Nj6/uSlA6RxJSEho0aKF1P/TgykpKTTCtq6u7po1a+jBnTt30jG6ESNGcEjB
gLqAIAjv0HUyjRo1ErQWAXUBWN+A6MKFP4QpnQvHjx/X09MDh79y5Up6JC4u
ju5rMzAw2LVrl+zJ3t7eVEGmTmUdBhB1AUEQ3qHxPDlkhGGFsLpwfh7RBVAH
bWLdunXbtm2j/37z5g3dP2hkZHT06NGiJ8+ZM4dKw59//smqFtQFBEH4JTg4
mLojusdKOITVhTdBkqGkRBYRJNRGeHg4ncExNze/cOGC3HPEYvHkyZPp32LZ
smXKF466gCAIv8ybN08nP/yC0BUJqwtiEbO8ItGFmz7CVMCdt2/fOjo6KhYF
ikgkGjZsGJ192Lx5s5Lloy4gCMIvNWvWBEfk7u4udEXC6gLgN57owu5uglXA
nV9//dXBweHhw4clnpmTk9O7d2+6fvXAgQPKFI66gCAIj4SEhNCBC2VclooI
rgtPjhFdWGDIZCYJVgdH8vLyFORCKkRGRgbN9WxoaHjq1KkSz0ddQBCER/7+
+2/wP3Xr1lVDXYLrQk4642lKpCHsoGB1qImUlJTmzZvDn8bU1PTq1auKT0Zd
QBCER2gKBrYLYLghuC4A+3oRXfAdKWQdaiI+Pp4Gp7KyspIm7pEL6gKCIHwR
FhZGB5EePHighurUoQt3NhJd8LJhRDwEBtc40dHRdBWTnZ2dNH1PUVAXEATh
Cw8PD/A50GVQT3Xq0IXUGJKjB6Th1RUhq1Ef4eHhNI9P5cqVX716Jfcc1AUE
QfiiQYMG4HDmzp2rnurUoQvApuZEF87OErga9REaGmpjY6OTnwmUJn0rBOoC
giC88PjxYzqIpHjsmkfUpAuX5xNd8KklcDVq5ebNm+bm5jRWSdGI3KgLCILw
wsKFC3XyU8yrrUY16cLbYMnG53hht2+rmfPnzxsZGcGfrHXr1h8/FshAhLqA
IAgvNG7cGJzM7Nmz1VajmnRBLGZWVSG6cH25wDWpm6NHjxoYGMBfrVu3brLJ
3VAXEARRnfDwcDqIdOvWLbVVqiZdAE5MIbqwvYPwNambXbt20YjcAwYMoCl+
GNQFBEH4YMmSJeBbqlatSjPFqAf16cLzU0QX5usz6fHCV6ZufHx8qKaPHTuW
/vlQFxAEUR2aBeC3335TZ6Xq04XcLGaxBZGGkD3CV6YB/vzzTyoNc+bMYVAX
EARRmYiICOpVbty4oc561acLwIEBRBcODVFLZRpg5syZ0kxwqAsIgqjIsmXL
wJ84OjqqcxCJUbMu3N9BdGGxJZOXrZb61A387caNG0cjcqMuIAiiIi1btgR/
8ssvv6i5XrXqwsc4Mr8A0hBxTi31aYC8vLyBAweSPgPqAoIgKvDq1Su6oCUw
MFDNVatVF4CtbYgunJqmrvo0QHZ29rfffkt1wetfL02bgyBIqWTlypUgCg4O
DiKRSM1Vq1sXApcQXVjtpK76NENqairVBaNaRpcvY5cBQRDWtGnTBnTh559/
Vn/V6taFuEeSjc/vQ9VVpWaguqDjpGNpaXn37l1Nm4MgSGni9evXdBDp0qVL
6q9d3boA+NQkunDFU41VagCqC/atSNhVW1vbx48fa9oiBEFKDWvWrAHXYW9v
r/5BJEYjunB6BtGFLa5qrFIDUF3Yf30/jchdqVIl5XOGIgjyldO+fXvwG1Om
TNFI7RrQhRcXiC546DFp79RYq7qRrkd6+PAhjchdo0aNd+++5J+MIAgvxMTE
6OnpgdM4f/68RgzQgC6IchkvayIN97aqsVZ1I7tO9datWzQid4MGDT58+KBp
0xAE0WrWrVsH7qJ8+fLSeGtqRgO6ABweRnTh337qrVWtFNq/cOHCBWNjY/hb
t2rVKi0tTbO2IQiizXTs2BF8xYQJEzRlgGZ0IXQ/0QVPEyYnXb0Vq4+i+9r8
/PxoRO6uXbvKRuQG4H/Pnj27ZcsWLy+vtWvXHj16tGiiHwRBvgbevn1LB5HA
J2jKBs3oQmYys8CQSMOz4+qtWH3I3e+8Z88e+hfv379/bm4uHHnx4sWPP/5o
ZWVFAytZW1tT7ShTpkzv3r2vXbumIfMRBNEMGzZsAA9Qrly5nJwcTdmgGV0A
dnYiuuA/Ue0Vq4ni4mDQkUNgzJgx7u7u4P8dHBw8PDzu379POxF5eXmRkZHQ
a2jSpAmcNmjQIBx3QpCvh65du8KLP27cOA3aoDFduLGK6MIKe0a9cQLVhoL4
SCAH8HfX19fX1dWdPXt2oQSgUkQi0bZt28zNzRs1avT+/XuB7UUQRPPExsaC
ZwD/cOrUKQ2aoTFdSIyUbHyOuaP2utWB4rh5jRs3hr/+v//+W2I50I+oWLFi
q1atMjMz+bYRQRDtYvPmzSAKNjY2GhxEYjSoC8A6F6ILF//WRN2Co0AXfH19
4U+/bt06JYsKCgoyNjZWc8ImBEHUT/fu3ekgs2bN0KQuBLgRXdjQWBN1C05x
upCbm1u7du2uXbuyKs3d3d3IyAh3TCPIF8yHDx8MDQ1BF/z9/TVriSZ1Ieqa
ZCgp6ZUmqheW4nTh9OnT8He/desWq9LS0tKsra3//PNP/gxEEES72L59OzgH
KyurQuvY1Y8mdUEsYpZXILpw+x9NVC8sxenC5MmTnZ2dORQ4cuTIBg0a8GEa
giDayHfffQe6AG+6pg3RqC4AR8cSXdjTQ0PVC0hxutCyZUtug4dbtmzR1dXN
zv4yU6AiyFdOYmIiHUQ6evSopm3RtC489iW6sNCIyUrVkAVCUZwuVK5c+Y8/
/uBQIB2AwikGBPki2bVrF7zglpaW2rDyUMO6kJ3GLDQm0gAC8WVRnC7Y29v/
/TeXJVgBAQHw2ISHh/NhHYIg2kWfPn3gBR86dKimDSFoWBeAPT2ILhwdqzkL
BKE4XWjSpMmPP/7IocCdO3fCY5Oe/sVGlEKQr5bk5GQjIyN4wQ8fPqxpWwia
14Xb/xBdWGbHiDQTUVYgitOFESNG1KtXj0OBEydOrFq1Kh+mIQiiXezduxdE
wczMTEsafprXheTXjLsukYaoLypGXHG68N9//8ED8OTJE1al5eTk2Nvbz5gx
gz8DEQTRFr7//ntwC4MHD9a0IRI0rwvAxiZEFwLcNGoEzxSnCxkZGRUrOgwZ
wm4U0cfHR19fPzQ0lD8DEQTRClJTU2lylgMHDmjaFglaoQsX/ya6sM5Fo0bw
THG6EBPDODhs1tXVPX5c2RjjkZGR1tbWY8d+aVMwCIIAIAdaNYjEaIkuxNyR
bHxOeK5RO/hEri5ERDDOznDDRXp6vS0tre7fv19iOfHx8fXq1XN2dk5ISBDM
WARBNMagQYNAFwYMGKBpQz6jFbogFjMrKxNduLFKo3bwSVFdCA1l7O3J3TYx
YQ4eTG7atKm5ubninuO9e/ccHR319fW1ZPUagiD88vHjR1NTU9CFffv2adqW
z2iFLgDHJxFd2NlJ03bwRiFduHmTsbEht9rSkrlyhRyBPuPw4cPheXB1dd2z
Z8+HDx+k12ZmZp48eRJaEbq6uvb29jSPj4eHh0Z+CIIgwkEXohgbG6ematHe
Xm3RhWcniC7MN2AyvpC8xrK6EBDAmJuT+2xnx9y9W+C0c+fONW/eHB4MAwOD
SpUqNWvWrHr16nQSqnLlyps2bcrNzZ0wYQKVhhUrVmjmxyAIIgw//PADvNp9
+/bVtCEF0BZdyMlgFpkRaQjdr2lT+EGqC0eOMEZG5CZXrswUtzo1MjJy/fr1
c+fOnThx4syZM8H/37lzR/wpk11eXt6QIUPg4YHuw9atW9X3GxAEEZKMjAxz
c3N4tXfv3q1pWwqgLboA/NuP6MLhYZq2gx+oLszZcNnAgNzhmjWZVypEE8/O
zu7ZsyfN/nno0CH+zEQQRGMcOXIEXmojI6Pk5GRN21IALdKFe1uJLiyxYvI0
mcCOL6gu6Fa9DLe3USNG9fzM6enp7du3h6eoTJkyp0+f5sNGBEE0yYgRI+CN
7tWrl6YNKYwW6cLHWMZDj0jDiwuaNoUHqC7oOF1u04ZJSuKnTGhUNG3aFB4k
U1PTwMBAfgpFEEQTZGZmWlhYwOu8Y8cOTdtSGC3SBWCLK9GF06U72oNYzEyf
zuj8TXShxaDLHz/yWXhcXFydOnVoUidltj8gCKKd+Pn50e5/El8NR/7QLl24
4kl0wbuapu3gTm4uM3o03NIIHRsdncE6Ac8L73dWndevXzs5OcETVb58+adP
n/JePoIgamD06NHwFvfooY1ZybRLF96HSjY+xz3StClcyMpi+vcn91NHpx9Z
V2qos+7wOiEqev78uZmZGdTg6OgYFRUlRBUIgghHdnZ22bJl4RXesmWLpm2R
g3bpAuDtTHQh0EvTdrAmPZ3p2ZOKAjNlynvSX9DRMbc05320RyQSTZkyRecT
tWrVio2N5bcKBEEE5eTJk3TXknbGt9E6XTg1jejCtraatoMdyclM+/YSUfDK
1zSdX3V0SHNAp1y5co8e8db9yczM7Nu3L1WEESNG0F5DixYttGqzJIIgivnf
//4Hb27Xrl01bYh8tE4XIs4RXfDQY9JUXtmpLqC13qQJuY16esw//0gOksVI
03XKlS8Hf30HB4cXL16oXhE4/44dO9INbl758nP27Fma5qlTp07akBYWQZAS
kQ4ibdy4UdO2yEfrdCEvh1lSlkjD/R2aNkUpoqKY2rXJPTQ0ZPbu/XycrlPd
cXaHjQ0ZUapevfrbt29VqSg+Ph76BVCUnp7ehg0bpMd9fX319fXheJ8+fXJy
voStHwjyZXPmzBk6iAQvtaZtkY/W6QJwaAjRhQNaFHW2OJ4+ZRwdyQ00Nmb8
/Qt8JY2DcfPmTbrVvX79+rLB8VgRHR3t4uJCprINDf/9999C34JMSEeWRCIR
tyoQBFEPNOIZ9PE1bUixaKMuhOwhurDInMnV6oGR4GCmfHlJiNRLlwp/Kxs3
78KFCzQUnqura1paGtuKwsPDq1atCpebmJicOHFC7jmLFy+m0jB16lTWvwRB
EHWRm5tra2sLr+o/0kFn7UMbdSHjAwmsCtIQrr3RHgIDGSsrcutsbZk7d+Sc
UCjO9rFjx6DbCA9Dly5dsrKylK8oJCSkYsWKcKGlpeUVGqG7GGbPnk2l4c8/
/2TzUxAEUR8BAQE00Nl71YPjCIY26gKwvQPRhRNa2vQ9dYoxNSX3rVIl5vFj
+ecUzcuze/duPT09eCT69+8PbQZlKrpx44a1tTVcYmdnd7dQhO4iiMXiiRMn
UmlYtmyZ0r8GQRD1MXnyZHhDnZ2dob/w7t07TZsjHy3VhevLiS6sqsJ8ijWt
PRw8yJQpQ25ajRrMy5fFniY3j+fatWup3x49erS4pJ929uxZugy1SpUqT4qL
0F0QkUg0dOhQumBp8+bNylyCIIjayMvLq1ChAg1/QV2Bi4uLu7v7s2fPNG1a
AbRUFxKeSTY+vw3WtCkFAF+rr0/uWMOGjGKpl6sLwF9//UWfh2nTpim4/PDh
w/TJqVmz5is2EbpzcnJ69epFO6qKk4QiCKJmLl26RJcU/vDDD3SlIgWOtGvX
ztvb+82bN5q2kaClugCsrU104fJ8TdvxmaVLGV1dcrvgpiWWlFauOF0Afv31
V/oweHp6yr1227ZtdOlp48aNOQxCZmRkdOjQgS5eOnXqFNvLEQQRiJ9++gle
zLZtyb5d6N0HBgZOnz69cuXKOjLQHoSSQwQCob26cHYW0YVNzTVthwQ3N8l2
5m7dGGVCpCrQBbFYPG7cOPoMrFq1qtC3K1eu1NXVha/atGnDOdBiSkpKs2bN
aETuq1evcisEQRAeycvLo2tIir71YWFhoAU1a9YsKhA8RktQHu3VhVdX8oeS
dJkUDXesRCJm8mSJKAwcyCi5mEiBLjD5T8igQYPoRMD27dulx93c3Ogj0b17
94+qReiOi4urW7cujch97949VYpCEER1oIVGX3kFg0VUIGrXrl1UIEpcecIj
2qsLojxmqS2Rhjua3Cqek8MMGyYRhXHjwJ8re6FiXWDy98KD86cTAb6+vtCp
pH1MACQDvlXdeHj86MYHOzs7zXZLEQSZPn063cSkzMlUIGjTTkq1atWgEDXk
5NJeXQCOjCK6sE9jSe4yMphevSSiMHMmu7VRJeoCkJSU1LhxY/hzm5mZDRw4
kP7phw0bxmM4i/DwcNp1rVy5Mqv5awRBeAQafpUqVYI3cfny5awupAJBh4Wl
ODs7U4EocVkjN7RaF8IOEV3wNGGyec15phwpKUyHDgVCpLJCGV1gSMy92Fq1
akn/3JMnT+Y9kEVISAjdBFGzZk1t3kqDIF8w169fp4NILxWsbldIcHDwvHnz
ZN0FIFBjT6t1ISuFWVCGSMOTY2quOS6OadZMEiJ17VouJSipCwyJvBdVpUoV
+BPPmTNHIPUPCgqiWyEaNWqUWOJSKgRB+IauQmzenIeFNKGhoS1btoTSmjRp
onppctFqXQB2dyO64DdenXW+fs3UqUNui4EBs2cPx0KU1wWGxN97umbNGo41
KUdAQACNyN26dWsVZ7QRBGEFtPdo228JH65Wuq7Ji8NAhnJouy7c9CG6sKw8
I1ZTmNDnzxknJ0mIVD8/7uWw0gX1cOTIEbotolu3bqxiNCEIogo3b96kwz6R
kZGql0bXNQG8ZHWRi7brQnKUZOPzm5tqqO3+faZCBXJDLCyYixdVKkoLdQHY
uXMn3RwxYMCAPOUXVyEIwoaQkJCNGzd6eHjMmTNn1apV/fv353HYh65rEm4Q
idF+XQDWNyS6cOEPoeu5do0pW5bcjXLlmNu3VS1NO3UB8Pb2po2NsWPHFprO
SEpKOnTo0IoVK9zc3ObPn79582Zc3YogypObm7thwwZnZ2f6ilWoUKFq1ao0
xr6enl79+vVVj4MkXde0aNEiXmyWSynQBVAE0IX1DQSt5MwZSYhUBwcmLIyH
ArVWF4C5c+fS5xYaM/RIaGhonz59aCRwExMTeLDt7OzoObVq1YJeBqb7QRDF
PH/+vEGDBtAfHzhw4JEjR9LT06VfPX78ePHixeDPDQ0NPT09VVleQtc1AVAd
H1bLpxTowpubkqGkRKEG0w4dkoRIrV6d4WvETpt1AZgxYwZ9uuBxBXXQ19cH
LYCeQnh4uPSc1NRU6D707t0bTmvZsuXr1681aDCCaDPXrl2ztrauW7fu/fv3
izsnMzPT3d0dhGPo0KGcR3FnzpwJ72PDhg25WqoUpUAXxCJmeUWiCzd9hCh+
yxZJiNQGDRjVMjAXQMt1Adr/w4YNo7utoZuwfPlyBZvpgoKCQDXKly8fHKxd
4W0RRBuIiIiwtbVt165dcnJyiSdDWwteOnDvHCqCjgYNsrdgwQIOlytPKdAF
wO9Hogu7u/Fe8PLlkhCprVoxXHMvy0fLdYHJj8hdpUoVEAVlYq7Gx8c3bdoU
OsIxMTFqsA1BShHt27eHhhO8I0qev3LlSvDtFy5cYFuRdF3T06dP2V7LitKh
C0/9iC4sMGQyOcYXlYs0RGrXrgz7rMsloP26cPjwYXjAZKP2KSY6Otre3r5P
nz6CWoUgpYsTJ07Ae3T06FHlL4FmP7SyOOxxmzVrFtRVv359theypXToQk4G
42lKpCHsIC/liUTM1KkSUfj+e2VDpLJCy3UhLy+vdu3anTp1YnXVzp074bFU
Q9guBCkt9O/fv1GjRmynkkFH4FVSMBlRFKiChsF0d3dnZyJ7SocuAPt6E13w
Hal6STk5zPDhElEYO5ZFiFRWaLku0LxR8F9WV4GaVKtWbcyYMYLYhCCljYyM
DFNT08WLF7O9MCsry9LScv58FnnH7ty5QweRwnhZMamQUqMLdzcRXfCyYUS5
qhSTkcH07i0RhRkzBEwfreW6MGPGDHt7ew6rT2fPnm1ra4t74hAEePToETjq
K1eucLi2c+fOgwcPVv58mpylbt26HOpiS6nRhdS3JEcPSMMrLn8CSkoK8803
3EOkskLLdaFbt24DBgzgcKGfnx88nNHR0bybhCCljvPnz3PeSjBy5Eia0FNJ
6Ha5v/76i0NdbCk1ugBsbkF04ewsblfHxzPNm5Mfq6vLCByjjqDlulC/fv2f
fvqJw4V3796FhxO6tLybhCClDjoey2110PDhwzt06KDkycHBwXQQKSQkhENd
bClNunB5AdEFn1ocLn3zhoHuFw2RumsX75bJQct1oWHDhlOmTOFw4a1bt+Dh
xMSgCAI8efIEXoeLnIKpffPNNz/88IOSJ8+bNw8qqlOnDoeKOFCadOHdfcnG
53h26hwezlStSn6mkRHDZjWZSmi5Lnz77bf9+/fncCFdR/GWxx2ACFJqycrK
srCw8PDwYHthenq6qZnpPI95Sp5fs2ZNeO9AHdhWxI3SpAvA6qpEF66zSIQH
va6KFclvNDdn2O8j4Y6W68Lvv/9uZ2fHYfp45syZFStWxHBJCEIZMmRI3bp1
2b4RBw4cIMH0ftJru62td5D3u7R3Ck4OCQmhg0hqCzhQynThxFSiC9uVHZS7
cYOxtiY/0MaGuXVLUMsKo+W6cO3aNXjMzpw5w+oqukV6woQJAlmFIKUOOvX8
77//Kn8JtMfq1K1dxkmfegn46M/XpwLxNlVOT/yvv/6CKmrUqMGf1SVQynQh
/DTRhfn6THrJW87PnmXMzCQhUh8+VINxBdByXYDmTcMG9Vq3cmV11YYNG3R1
dXHSGUFk6d69O6sQMR4eHrq6OpfH6/i764xy17Hy0JMKhJ6HpAcRk/q5tNq1
a4MuuLm5CWO+HEqZLuRmMYstiDSElJBf8/BhSYjUatUYPlIksUbLdYF5sOvU
+LLwsCmfPzQiIqJcuXJDhw4V1C4EKXVER0eDLjRt2jQ2NrbEkzdv3gyNK7Jn
OSowf7uubpa7ToC7zvSFJnaepkUF4sLNC3QQSZ3tsVKmC8DBgUQXDg1RcMq2
bZIQqbVrM1FRarOsANqrC/FPmR0d6Qx+1zaGenp6Bw4cKPGi169fQ6OlevXq
CQkJarARQUoX9+/ft7e3d3JyUhAlJi0t7ZdffgEPP2nSpM9xM949YI6MIsHf
3HXy3HUCFxpP/6d++aXlpAKh8w0RBWsH6/AP4cWVzDulTxfu7yQ+bbElk5ct
9/uVKyUhUps0YZRQb6HQRl2AO3bJnfE0yRcF3VVbWuv+ravbEBovun/88UdG
RkZx1507d87Ozs7AwECaxwdBkEJAr6Ft27bgw/v163f06NGieXlAOMzMzNav
Xy/n4tS35N1cUpY22PI89AK3tpl+aEjF5RV1JurotNDR6Uz8ics6F/dL7s8S
VE36ViKlTxfSE8j8Aty9iHNFv5SGSG3XjlEiFLqAaJ0uvL5Bct7Rhb5r67gd
Hk4t7Lm3p+cSTyMjI0dHxxUrVkREREivoHl5evbsCY+6g4MD/BcURPn4qwjy
tQG9AB8fH5r3EAAVsLa21tfXh39bWVlNmDChhDmIrFQmyJtZVUXynoJAbG0T
GOg1/dR0+xX2n3sQnwTiSbxQaXZLny4A29qSm3ZqmuwxkYj56SeJKPTsycho
tWbQIl3I+EA6qjSKyEIj0cW/fz4+mZo35NCQ7Pxu18uXL0ePHm1ubg4PMDzV
8DCbmppSIXB1dfXz88vOzu7evTvN43P48GFN/yQE0VKWL18Or0nFihX37dsH
fQToiUMH4dKlSwryXhUGXskHu5h/6kvVgfGpKQpaHRh5HgSi0spKRQXicdxj
fn9FqdSFQC9yr1Y7SQ/k5jIjR0pE4YcfmGz5I0xqRVt0AR4wmu0OPlvb5L5/
MNJ3JLVtgv+EPFGB/QtZWVkBAQHr1q2bN2+el5fXgQMHZPevQb+4TZs28Mwb
GxuzDcSKIF8JrVq1gndk+vTpPJT1aWJa8v4uK89cchelxwdGBboFuFVfU72o
QNyNuctDvaVUF0Ac6Y16H8qQrKlM374SUZg4Uai42WzRvC4kvWL29ZLcqKXl
QCAyczL67u9LDZt9bjaH5OMJCQn16tWDx97CwuL27dtCWI0gpZeoqCjoYnOO
sCqfd/elE9Pks8ic8Z/IJJBIfWGxYaAFNX1qygpENe9q0K0A7VClzlKpC4BP
TXKLrnimpjKdOklEYfZsAeNms0WTuiDKJV0qmskIPvBQpb1LzUrttLMTtcor
kHsw2ZiYGBrXsVy5co8ePeLRagQp7axevRpeDW4R7EsAmnkBbtKJacZDj3Ql
3gTRL6lA1PKpJSsQVVdXpQLBoQVYWnXhzEy4OQne37ZoIQmRKnTcbLZoTBei
bzEbGkkentVVmecn4VhCekKLzS3oougNdzaoWENERAQ8+XQy+sWLF3wYjSBf
AnQ90tSpU4WqICuFTEyvrPx56mFbW+apv7RBTAWizto6sgLhtNqJrUCUVl14
cTH610oudo/AeD09ZoOqro5/NKALWamkgwkNCZILuwxZ9pZDZt+jU6Jd1rmA
MYYLDPeH7uelqocPH0J/AV6B6tWrYww9BGHy16nq6elxDq/KAnkT00QvcjOl
p1CBoC++9OO4ylFJgSiluhARnuds/QosNzQQsQlMoj7UrQuP/mNWOEgeki2u
zHtJkPaIDxHO3s5giYmnyYlnJ3is8NatWxYWFjQL+YcPH3gsGUFKIz4+PvA6
lC9fXn3ZDCUT05/UYXkF0hrMKPAygkB4BXq13dZWViAqr6wMAhEQGVBo5YmU
0qgLoaGMvT0x28Qg4+TsBZo2Rz7q04Xk15+fjcWWJOGpWDK2Gfo+lCx77q9j
Ptv8igp57orjwoULxsbG8C64urqmpaXxXj6ClCI6dOhA9zKru2I6MT3f4PPE
9KnpZD6iIC8SX3gHeRcSCNultqOOjPJ/6p9bMD9yqdOFoCBJiFQri5yr/2tP
du/maHqvgjzUoQug9YFezCIzyfNwcBAjE4wx6E2QtZe1DtlzoONYzVGZyC0c
8PPzo9t2OnfunJmZWfIFCPIlEhMTQweRzp2Ts99WHSS9zJ+Ytio4MX2z6Ikv
k15SgdB115UKRLml5ahA5OSRfRalSxcCAkgaBTDYzo65F5RGRtHhDjw7rmm7
5CC4LsTcYTY2kTwDqxzJ3JMM0EM0X2QOBlSYUcHM3Awe13r16gkR2uj69et0
Bxzd/p+bm1vyNQjyxfHPP//AK2BnZ6fhV6CkiWlZXiW9KioQNl42IBB1+vrr
6OWUCl3w9SUJ10AUqlRhntD93zs7kx/uP1HDlslDQF3ITiP9RNptnK9PGgnZ
H2W/933sa7TQCGqv6VMT/vSnTp0yNDSEh7Zdu3bpvO4Dv3r1qpWVFd3vT6Vh
1KhRmLIH+QqB/jI8/+PHj9e0IflIJqbrfVaH9Q3ICHOu/B796+TXRQVCx826
yQLSg8guJhKdNrBjhyREaq1aMiFSg1aTn7zCXov2LXxCKF14forxdpb8rTc1
Z94Wzt+04/4O/fkk30fjDY3fp72nB/38/GjMlk6dOvE12nP48OEyZcrQJUkv
Xrxwd3en0vDzzz/zUj6ClBZiY2PpaOrp06c1bYsM4BUjA0qcmJblTcobEIiu
u7rq/m0gFYiyS8rSIaas3Cx1ml8iq1dLQqQ2bsy8fy/zRWKk5PfGaF2mGP51
ISX68594kTnpLYoK91hXB62mig/Sn5SZJPvVnj176Phn3759Ve/qbtu2jb4I
DRo0kK5T/e2336g0cEh3iyCll40bN8Jjb2NjwyIIkjqB1mPRielkRRkIWnwT
r9NoV535vQ3mfxYIU0/T3vt673qw62PBAQqNIA2R2rYtk5RU5GvaV7r4twYs
UwifuiAWERWQbnXc25NJlLObzC3AjVbafU/3dHlz8evWraN+e+TIkaqM9qxa
tYpu9nd1dZVdoSoWi6EfTatYsWIF5/IRpHTRrVs3eObHjh2raUMUIndiOlp+
emPpvHNCegIIAciB4QJDqUCYeJpQgUjL1sAqROgGTZsmEYUePYoJkRowh/zG
jU3UbVxJ8KYLsWGS+LHwWVm50PwyBRzytFPTaI2DDw1WMB4oHe356aefuJnj
5uZGS+jatWvRtal5eXmDBw+mgVi3bt3KrQoEKUXExcXRQdqFCxeWgnUXkonp
SoonpouuR/qQ8YEKRJkFZYoKRGpWqnrMhxs8erREFIYMKT5E6uvrkl9XZL2u
ZuFBF3Izib7TeFkg7tD1yyzaX2JyRbmjj4ym1Y33G1/cRhUp0tGe+fPnszIH
uhg///wzvfb777/PypI/2Jidnd2jRw8akfvQoUOsqkCQUge0f3Q+YWpq2rt3
7127dmn7dp6SJqYVrFNNzEgsKhDGC42pQKSA7ghGZibTr59EFCZMUBgiVSwi
kynwu27/I5w9HFBVFyLOMmuqS/5k8OeLuib3rMzczH7/9qN1/Xb2N2Xin8iO
9qxcuVJJc6AhNGrUKHrVmDFjFLeL0tPT27VrB2eWKVNGu2biEIRvaCuofPny
dP6OYmNj87///e/kyZPZ2hD0vzjkTExXzJ+YTlRm/0JSZhIIweBDg01l0lJL
BSI5k+e8aKC0nTtLROH335VYanTsf+QX7enBrxkqwl0XPsYxhwZ/miEyI52+
PPmTWWnZaZ13duYQIlV2tGfbtm0lnp+ZmdmvXz/6wP/yyy/KqE9ycnKTJk1o
C0pBxlsEKdV8+PCBLgI/duxYYmIi9BSgv0DX6VFMTExoDyI1VU0jLVwoNDG9
2KJ13ZfK72tLz0n3f+o/6sgos0VmUoHQn6/fdltb7yDv2I887KhNSGBatpSI
grIhUh8foZnIGHWNcSkDF10AfwtdOS9ryV9n97fMh4jizk1IT2i5uSUNkfoP
+76SbP61//77T8GZ8DzTtdmAF5uotbGxsbVr16YZDO/fv8/WQgTRfnbs2AFP
uKWlpeywalJS0qFDh6B/Ld3XQ7NZUYFISRFwpEUlEl+Qwer8+AmtK98gujB8
X3ET03LJyMmgAkE31RYSCOmyebbExDD16jE0RKrc5Njyyf7ILDQmjvSxL7d6
hYC1LsQ9ZrZ3+JSYyY4JUzQyH5MaU++fejRE6t6QvdwsTE9Pp2GBoXlz5swZ
ueckJCS0bNmS9izWrFnDtorXr187OjrSXvbTp0+52YkgWgu4eni8hw0bJvdb
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
fxHurZ0=
    "], {{0, 420}, {520, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{243., Automatic},
  ImageSizeRaw->{520, 420},
  PlotRange->{{0, 520}, {0, 420}}]], "Text",
 CellChangeTimes->{3.7657020556624365`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getAltBases", "[", 
    RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "sides", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sides", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p2", ",", "p3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"p3", ",", "p1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"closestPerp", "[", 
          RowBox[{"#1", ",", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], ",", "sides"}], 
         "}"}]}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7660540610974607`*^9, 3.7660540912140727`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getIncenter", "[", 
    RowBox[{"p1_", ",", "n1_", ",", "p2_", ",", "n2_"}], "]"}], ":=", 
   RowBox[{"interRays", "[", 
    RowBox[{"p1", ",", "n1", ",", "p2", ",", "n2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "getBaricenter"}], ";", 
  RowBox[{
   RowBox[{"getBaricenter", "[", 
    RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "medians", "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"p1", "+", "p2", "+", "p3"}], ")"}], "/", "3"}], ";"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"medians", "=", 
       RowBox[{"getMedians", "[", 
        RowBox[{"p1", ",", "p2", ",", "p3"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interRays", "[", 
       RowBox[{"p1", ",", 
        RowBox[{
         RowBox[{"medians", "[", 
          RowBox[{"[", "1", "]"}], "]"}], 
         RowBox[{"(*", "23", "*)"}], "-", "p1"}], ",", "p2", ",", 
        RowBox[{
         RowBox[{"medians", "[", 
          RowBox[{"[", "2", "]"}], "]"}], 
         RowBox[{"(*", "31", "*)"}], "-", "p2"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getOrthocenter", "[", 
    RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "altBases", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"altBases", "=", 
       RowBox[{"getAltBases", "[", 
        RowBox[{"p1", ",", "p2", ",", "p3"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interRays", "[", 
       RowBox[{"p1", ",", 
        RowBox[{
         RowBox[{"altBases", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "p1"}], ",", "p2", ",", 
        RowBox[{
         RowBox[{"altBases", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", "p2"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getCircumcenter", "[", 
    RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"medians", ",", "medianPerps"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"medians", "=", 
       RowBox[{"getMedians", "[", 
        RowBox[{"p1", ",", "p2", ",", "p3"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"medianPerps", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"medians", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"norm", "[", 
           RowBox[{"perp", "[", 
            RowBox[{"p2", "-", "p3"}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"medians", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "+", 
          RowBox[{"norm", "[", 
           RowBox[{"perp", "[", 
            RowBox[{"p3", "-", "p1"}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"medians", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "+", 
          RowBox[{"norm", "[", 
           RowBox[{"perp", "[", 
            RowBox[{"p1", "-", "p2"}], "]"}], "]"}]}]}], 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"interRays", "[", 
       RowBox[{
        RowBox[{"medians", "[", 
         RowBox[{"[", "1", "]"}], "]"}], 
        RowBox[{"(*", 
         RowBox[{"2", "+", "3"}], "*)"}], ",", 
        RowBox[{"perp", "[", 
         RowBox[{"p2", "-", "p3"}], "]"}], ",", 
        RowBox[{"medians", "[", 
         RowBox[{"[", "2", "]"}], "]"}], 
        RowBox[{"(*", 
         RowBox[{"3", "+", "1"}], "*)"}], ",", 
        RowBox[{"perp", "[", 
         RowBox[{"p1", "-", "p3"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.765645732949212*^9, 3.7656458278425856`*^9}, {
   3.7656460598341956`*^9, 3.7656461785226216`*^9}, {3.7656462375472527`*^9, 
   3.765646374450745*^9}, {3.765646886738877*^9, 3.7656469020100865`*^9}, {
   3.765646946217825*^9, 3.765647184972618*^9}, {3.765647307276482*^9, 
   3.7656473334690547`*^9}, {3.7656474307388344`*^9, 
   3.7656474311078463`*^9}, {3.7656476691932735`*^9, 
   3.7656476979063077`*^9}, {3.765648173278365*^9, 3.765648209648874*^9}, {
   3.7656485106174583`*^9, 3.7656485730605555`*^9}, {3.765648643050417*^9, 
   3.765648662033888*^9}, {3.7656487095293875`*^9, 3.7656487328347054`*^9}, {
   3.765648777858938*^9, 3.765648809954026*^9}, {3.7656489522607193`*^9, 
   3.765648954481776*^9}, {3.7656493672032304`*^9, 3.765649386929471*^9}, {
   3.765649557667638*^9, 3.7656496136742263`*^9}, {3.765649646627115*^9, 
   3.765649648553991*^9}, {3.7656497800567646`*^9, 3.76564983854659*^9}, {
   3.7657042445302534`*^9, 3.7657043241685085`*^9}, {3.7657045089306192`*^9, 
   3.765704521683323*^9}, {3.7657046032044806`*^9, 3.765704692245428*^9}, 
   3.7658020222587976`*^9, {3.7660541069597783`*^9, 3.7660541236483755`*^9}, {
   3.766435628382712*^9, 3.766435635645294*^9}, {3.7664359370930367`*^9, 
   3.766436037605197*^9}, {3.766436074869693*^9, 3.7664360916961064`*^9}, {
   3.766436217110161*^9, 3.766436220630747*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Nine Point Circle: its center is the circumcenter of the medians, and is \
tangent to incircle (at Feuerbach point) and all 3 excircles\
\>", "Subsubsection",
 CellChangeTimes->{{3.765704696780299*^9, 3.7657047005382447`*^9}, {
  3.765704791155612*^9, 3.765704799395599*^9}, {3.7657076625432034`*^9, 
  3.765707675486966*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
IRcCKde3r7hmws6dJRLLT00mTPTJJ5/E9znjNq2Oe3/mzJk0rYP/O+OJ9yO3
b98ucvasSIEC5na7+OKIbDcAAOA9GzZsMNoOW7ZskZAvq2hRMdogcXnU9vp7
BrkQSJmuXcU1E8bloUgsP6lMWKpUqSQzYaJp06YFnMeDDz6Y5vXo0qWLMd/y
5cvH/dx8nzDvuDqN7af9ttretwAAIOIGDBjgaDPceuutEvLlVKwoRtsjHMtJ
z8iFQPACjdk+bJhEYvnJZULtXybYeQ0aNCjgvPr375/m9Wnbtq0x31tuuUV+
SeyftXp1czs2aBCR7QgAALzjpptucrQXhg8fLiFdxu23i9HmKFEitMuIBuRC
IDj33iuumfCllyQSyw9lJkz08MMPB5zn66+/nqb1On36tLRs2dL1WdW//vor
Yd56j9B/ez72WES2JwAAsO+zzz4z2gpffvmlhGwZzZuL0dag3zt35EIgaf/8
I3LnneKaCd94QyJRw5QpU0KeCZW+S3hn3Lq5zfeCCy6QRYsWpWn9fo/7LWnc
uLEx73t8+2u98kpzuw4eHJHtCgAA7Bocd873bSNUC+UYx+3bi9HGyJUrdPOP
NuRCIDAdu8HteUel47ZHoAbNhBkyZHDNbmXKlEl1Jkx04sQJuf76613nnyVL
loS+RNMw/59//lnq1KljzLt169b/P1/td8Z/+06eHJHtCwAA7Ln55psd7QPt
2zwk89Z+H/zbFtoH+uHDoZl/NCIXAu5++EFc31HOmlVk4UKJRA3JZcLffvst
JHUkNe59njx5ZM+ePWlazu7du+Ov//nPu3Ni/63Hj4vrWEL//W9EtjMAAIg8
HT/Lv23w+eefS5rnPXq0uF7T37Yt7fOOZuRCwKS/G/o+sv93Q+9rrVkjkagh
UpkwUVLj3hcpUiSofk6Tov1NV6hQwZh378R+XH/80dze6oMPIrK9AQBAZA0b
NszRJqhataqkeb5x7SfX9sQnn6R93tGOXAg4bdggUqiQGN+L4sVFNm+WSNSQ
1PuEZcuWDXkmTLRp0ybJli2b63J13Pu0zn/dunVSsmRJY97DEvtz3brV3O5q
+fKIbHcAABA5Oh6Fb3tA+0pP0zznzRPXdsTMmWmbb6wgFwL/T68l5cghxnci
LovJ7t0SiRrmxf2mBcqEms2OHTsW1jo++ugjY7maFRcvXhyS5X4St40vv/xy
Yxnjxo1LmL/ej3X7Tf/ss4hsfwAAEH76HJF/WyBNfRqsXCmSJ48Y7YcXXkj9
PGMNuRBIMHeuuOaRm28WOXhQIlXH8ePHpUqVKsZvpT6DqX+LRA2+497ny5cv
NM/6+5g/f77kzZvXWMfzY2MsWGDuB72Hu3NnxPYDAAAIn5EjRzraAJUrV5ZU
z0+fN3Lr33zo0NTPMxaRC4H/yIwZ4poJ69YVSRxrL4K0j9Dbb7/dSiZMNGDA
AClatGia+5wJ5K233pLMmTMb2XDWrFkJy9NnPvz3x403Svx7iLaPFwAAkCY1
a9Z0nP+13ZGqee3fn9A+8G8z9O2buvnFMnIhYt2ECeKaCZs2Fdu1NWvWTCpV
qiS/W/pOhus9xkSTJ092fV72/fffT1juK6+Y+6VGDZGjR63vGwAAkDrbtm0z
zv0btH+HlM7rxImEa/j+bYWnnkr5vEAuRGwbNUpcM+HDD4v12v4n0vcJI23s
2LHGuUHHTVy6dGnCeg8fbu6fBg1ETp2K6u0CAEC0Gj16tOO8f6Pe70vNvB54
QIw2whNPpG5eIBcidj37rLhmwo4dxXptMWZ4XPbzz4Y6Zsb69esT9sUzz5j7
Sc8FHqgdAACkjO+7Mqpfv36S4vnoc6f+bYPWrVM+H/w/ciFi0ZNPimsm7NlT
rNcWo/r27Wtkw2LFislXX32VsE/atzf3V2rfRQAAAFbs3LnTON+vXbtWUjSf
N98Uo03QokXK5gETuRCxpl07cc2EQ4aI9dpi3JNxed1tvMbzfd/cd5+53/Tc
4IHaAQBA8l588UXHef7666+XFM1DnyXyH4+iUiWRX39N2XxgIhcilrjlCjVm
jFivDfHat29vZMOqVavKgQMHEn7z9bffd9/puSHxeVMAAOBpdevWdZzj+/Tp
I0FPf/iw2fdorlwi69YFPw8ERi5ELPj3X5GGDcU1EyaOmQdPOHfunDz44ING
NqxTp07CWB3626/nAN99qOcIPVd4oH4AAOBu165dxvl99erVEvQ83K7vv/FG
8NMjaeRCRDsda6FmTXHNhLNni/X6YPjzzz+ladOmxrnj7rvvljNnziScA/z3
pZ4rPFA7AABwN27cOMd5vXz58hL09No3Df1ChBe5ENFMx0C/4QYxjvHMmUUW
LBDr9SGgQ4cOSb169Yxs2KpVq4T9pucC//2amv7MAABARNSvX99xTu/Vq5cE
Ne20aWKc85s0CW5aBI9ciGi1Y4dIqVJiHN/584usXCnW60Oy9u7dK7feequR
DTt06JCw//Sc4L9/9dzhgdoBAMD/0z7kMmTI4DifrwymPbZmjUjOnOI415cu
LfLDD8lPi5QhFyIaffqpSOHCYhzbRYuKfPGFWK8PQdu2bZvccMMNRjZ8Rsc0
1HOCnht897GeO/Qc4oHaAQBAgvHjxzvO49rfeLLTHTwoUrGiOM7zF1wgsnhx
8tMi5ciFiDbLlpn9kqgyZUR27RLr9SHFNm7cGBf/ShvZcPDgwQnnBj1H+O5r
PYfoucQDtQMAAPlPw4YNHefwHj16SLLTNW8uRnvupZeSnw6pQy5ENJk/38wI
qkoVkZ9/Fuv1IdWWL18uRYsWNbKhjoMUf47w3+d6LvFA3QAAxLrv4/LGhRde
6Dh/L9Pr+ElN17u3GOf2jh2TngZpQy5EtJg5U4xjWdWuLfLHH2K9PqTZhx9+
KAUKFDCy4WuvvZZwrvDf93pO8UDdAADEsldffdVx3i6jz3AlNc2UKeLanjt9
OunpkDbkQkSDuN8b10yo/ZKcOyfW60PIzJ49W7Jly2Zkw5na34yeM/yPAT23
eKBuAABiVZO49pjvObt79+4S8PPaF03ced5xLr/iCpHt2wNPg9AgFyK9e/55
cc2EDz4o1mtDWLzxxhtGLlRLx41LOHf4Hgd6bqH/WQAArPjpp58kS5YsjvP1
J598Iq6f379fpFw5Mdp0773n/nmEFrkQ6dmAAeKaCZ94QqzXhrB6+eWXjVx4
0UUXyZb+/c3jQc8xeq7xQN0AAMSSyZMnO87V11xzjQT8fNOmYpzDhw8P/HmE
FrkQ6ZU+g+CWCYPp3wpRYeTIkUY2zJs3r3z/2GPmcaHnGg/UDABALGnWrJnj
PN2tWzdx/ewLL4hx7n74YffPIjzIhUiP2rcX10w4aJBYrw0R1b9/fyMbFilS
RI42amQeH3rO8UDNAADEggMHDkj27Nkd5+jFbmMPfv65OXa99iV/7Jj5WYQP
uRDpTcuW4poJafPHrKefftrIhjeVKiUnK1QQxzGi5xw993igZgAAop1/fwAl
S5YU18/eeac4ztcZMtA3gA3kQqQXZ86I3HWXuGbCSZPEen2wqkOHDkY2fFzf
YfA/VvTc44F6AQCIdvfee6/jvNylSxcxPjdypPD8l0eQC5Ee6DF5223imgln
zRLr9cETHn74YSMbzihWTIxjRs9BHqgXAIBo9csvv0iuXLkc5+SFCxeK43Pr
1olkziyOc7S29zxQf0wiF8LrtB/JSpXEOE4vvFDkgw/Een3wjBMnTkjz5s0d
56AL4+zMl08cx46eg/Rc5IGaAQCIRtOnT3ecj6+++moxPuc/7rC27dasMT+H
yCAXwsu++UakdGkxjtG8eUWWLxfr9cFzjhw5Ig0aNHCci+q63WfWc5EH6gUA
IL3ZvHmzDBw4MJ6OWV+zZs3ztL9R/fdbb73VcS7u1KmTOOYzeLAY5+ahQyWS
6wE/5EJ4lfYP4j9GudJ/o+8QJGHfvn3x5ybf89FIt2yo56Qk5nPs2DGZNm1a
/PmtdevWjvOengf138eOHSt6frS9zgAAhNOKFSviz4V58uQx3tkIxttvvy3n
5xc3r/i+ZXzPyXXqSCTXBy7IhfAi/b3Qe4L+x6beO/z6a7FeHzxv586dUrly
5fPno2xxPvM/nvScpMeaz3SaBTXvVahQIUXnu2LFisVfI13hNz8AANIzPa/5
X2v1V7RoUSlfvnySn9E8qdda5exZkerVxXi/Y/16sb2uMY9cCK/58MOE58v9
j8u4Nr789JNYrw/pxueffy7XXXfd+XNSQ7d7hnpuijtHJebB5K6D1qhRQ3Ln
zp3kZ/Re4vf62+qBbQAAQGroeVHPZ/7nOM1/AwYMSPJZGT0HTp06VRo3bmxe
R407z272PxePGBFwXoggciG8RPsWdWu7a99UjG2KVFi1apUUL178/PnoRZfj
a17z5kYe1Oyn/Zvqee1YEseeXkft2rVr/LVS/3Of3j+0vf4AAKSUZj7/52Y0
46XmmqeeQzVH+l9TnZp4Hq5XL8XzRJiQC+EVOgahWybUMQt17ELb9SHd0n6x
L7nkkoTnWOJs8Tm+Bro8C6NZMDXL0Yyo9xN956fP3iSVKwEA8BI9l/leK9X7
g6F4R0LPhXod1XH9VJ8P+/TTNM8bIUIuhBe8+KK4ZsKWLcV6bYgKc+bMkZw5
c8afh5rGORantV8m1OuZochwev70vX+o7x7SNw0AwOv0XOV7XtTnZkJ9bVOv
vfouQ7Oi7fXG/5ALYdugQeKaCdu3F+u1IaroWEoXXHBB/HmonN8zo6HuL0bP
o77v4Ou1V945BAB4lZ6jfO8T6rXScC1L86fvc6WpfU4HIUYuhE09eohrJuze
XazXhqg0YcIE4/35cN7L02uticvSdzV4phQA4DV6bvJ9nzAS9/D8703yXI0H
kAthyxNPiGsmDOP1KcD3+RW9VhmJe3i+/bFp3262twEAAL703qBv/zKRWq7v
OVnfubC9HWIeuRA2PPSQuGbC0aPFem2IWv7PyETq2qT/M6U8LwMA8Ao9N/r2
vRbp51p8+6IZM2ZMRJcNP+RCRJreL3HLhK++KtZrQ1TzfaYz0ucePe8mvkvB
NVEAgFf4nhttXLfUHJp4ftRrt7xvYRG5EJHyxx8itWuLayacOVOs14eo5n89
1EYNvs/phPN9fgAAguF7btTnWmzV4Xt+5J6hReRCRMKBAyJVqohxrF1wgcj8
+WK9PkQ93+uhoe57NFj+10RtbxMAQGzTDJZ4bpw3b57YrCXx/Kj939jeLjGL
XIhw+/ZbkTJlxDjO4r7/snSpWK8PMSHxvUKb10OV7zVRW/kUAADl2y+a7Vp8
r9/yLKkl5EKE0xdfiOgze/7HWOHCIp9+KtbrQ0zQ/OWV5zd9++VmLF8AgC2a
vWz0QRqIb9+k9M9mCbkQ4bJqlUj+/GIcX6VKiezYIdbrQ8zw7evMC+Mj6fuN
9D8DALDJS9dMlW9O9UI9MYlciHD46CORTJnEOLZuuEFk3z6xXh9iSo0aNc6P
V2i7FuWbU23XAgCITb650CvvNXjp/mVMIhci1GbPFtc+R2vWFDl6VKzXh5iT
mAv1/9uuRfm+Y6h9wdmuBwAQe3z7nPFKLkx8nsYr5+uYQy5EKL3+urhmwoYN
Rf79V6zXh5iU2OeMV84zXjwXAwBii+81Si+8Y6G8dh035pALESpjx4prJrzv
PrFeG2Ja4nlP+zqzXYvy4rM7AIDY4sX+scmFlpELEQpDh4prJmzbVqzXhpjn
tfcVyIUAANt8+//0yrnIa8/3xBxyIdKqZ09xzYRPPinWawPk/8fK9cp5xovX
aAEAscX3GqXtMe0Tee35nphDLkRadOworpnw2WfFem3A/3jtuRT6nQEA2Oa1
cSr0fOilemISuRCppddy3DLhqFFivTbAR2Iu9Mq4EHod1Ev1AABiU+LzNBUq
VBDbtfj2yeaV+5cxh1yI1GjaVFwz4SuviPXaAD9eO9ckvj9Rvnx567UAAGKX
73VKHVfeZi3aBwDXTC0jFyIl/vpLpG5dcc2EM2aI9foAF9r/duK5RseUt1mL
157bAQDELt++Z/S/bdWhmdRrfcTFJHIhgnXokMjNN4trJpw7V6zXByQhcazc
YsWKic06fK/NemW8KABAbNI8lvgsqZ4fbd0z9D032synMY9ciGDs2SNStqwY
x0rOnCJLloj1+oBk+Pb1Yuuc4/tOveZU29sEAADf86ON51g4N3oIuRDJ0Xsa
xYuLcZwUKiSyfr1Yrw8Igu81UX2/z8Y1Ua6HAgC8xv/8GOlnWZo0aeKpPgBi
GrkQSVmzRuTii8U4RkqUENm2TazXB6SA7zXRSL9n6PteoVfGywAAQPm+Z6h9
k0bq2qmeizk3egi5EIEsWiSSNasYx0fFiiKMuYZ0SM9zie8ZRvKenV57TeyD
lLHsgf9j787jbareP4B/k2Se53km4yVDZkqmZEpUMiVlJhkiM2WIDBGRKUqK
yJAhc0qJDJmSRJQvFb9IpvT5nedet+/ee+1z7zn3nnPWPmd//ni/fr+v7t7n
2dN69rP32msRkRMZ+7TUrl0bwf49Yy0q7yt1j4dKYF1I9j78ELbjy9SsCfz6
K7THR5RAUqPF9pcJxdgvkufk2SvHICUiIieTfCXzJxlrw2DValOmTDHVhByH
zSFYF5LVvHmwrQkbNQKuX+e5QWHP+IxS3uMF63sG+ZbeWBPKs1jd205EROSN
8VvD2D6lga7ZOnTo8O/6+b29w7AuJKNp02BbE7ZqxXOCIorxW0Mhzy4DuX5r
39EcOXKwjwwRETme9b2h5LIRI0YgseuVbyiMz0ql/uQ4Mw7DupBivfoqbGvC
Z57h+UARafLkyabaUPrMJPa5qORTyZ/G9caS39O9zURERPGRXGb83jB2fsMF
Cxb4/Yxz5cqV0fnVuC751p99Rx2IdSGJQYPU80CEeMxGolCT55fGPjNC+rj4
m6+kz6jUg8Z3hHZmz57t13qJiIh0keeZ1hwZ+xxV+tls27Yt2o93xiOM/d9S
P0outcuJUm+y/4xDsS6knj3Vc0C8/DLPA3IFqQFlfGxr7pJno5LX5Fmn5LnY
WlHyX2zuk1rQ2C/G+Cz0xRdfRPLkyZX/9u6770L3NhMREflCarjhjRohXRzP
PH0hefZHjmfvbKwL3a1jR/X4i7FjeQ6Q68i7Q7v60B/pUqQw9Rd9++23bf+O
31QQEVG4+LNYMfzoyV3zPZp6pPYxJ8p3ivI9P/uMhgnWhe7VsqV67MUbb/D4
k6tJfShz7RrnOoyzFpR+MXfy5SVPDrSub9q0acoyKTz148aNG5W/JSIicpS5
c2G9V5xTokT0XLxC6j4jee4p/853g2GIdaH7/PUX0KCBetzFggU89kQGktck
v8k42sa8J+8E5d/3vfgilOtIcqhlPWPHjlVqwyxZsuDzzz9X/paIiMgxqlWD
McfJe8M5r70G7XFR4LEudJcLF4Dq1dVjLpYt43En8pd8O58/P0zXkuRQm78d
MmSIUhsWLFiQ/WuIiMiZ3nsP1vvFoR4nTpyA9tgo8FgXusfJk0BUlHq8U6YE
1q/nMSdKqFGjoFxXkktt/rZv375KbVimTBkcP37c9u+JiIi0eeghGHPbBY+2
depAe1wUHKwL3eHgQaBQIfVYZ8sG7NzJ402UGGfOAFmywHRtSS718vddunRR
asOqVavi559/9roMERFRSMn4aJb7xvEeU6dOhfbYKDhYF0Y++X5J6j/rcZY6
8cABHmuiQBgwAMo1FseYo23btlVqw3r16nFOJyIicobGjWHMaX95FPf47rvv
oD02Cg7WhZFtwwYgVSr1GMuYiT/8wONMFChHjwIpUsB0nUlO9fL3V69exWOP
PabUhvJvN2/e9LocERFR0O3fD+u944w7zy+1x0bBw7owci1frh5bIePOnD/P
Y0wUaN26QbneJLd6+fsLFy6gYcOGSm3Yvn17r8sQEREF3fDhsOazih6vv/46
tMdGwcO6MDLJfBN2NaHMT3H1Ko8vUTDs3g3lmpPcGscyMg9GzZo1ldqwe/fu
cS5HREQUNGXKwJjL1t/JTUeOHIH22Ch4WBdGnunT1WMqZB573bERRbr69WG6
7iS3xrPM4cOHUaFCBaU2HDhwYLzLEhERBdSaNbDeQz7nUbduXWiPjYKLdWFk
GTdOPZ6iQwceU6JQeOstKNef5Nh4ltu9ezdKlCih1IajZA4M3dtERETu0akT
jDnsvEcmj4kTJ0J7bBRcrAsjx5Ah6rEUPXvyeBKFym+/AVmzwnQNSo71Ydmt
W7ciX758Sm3IXExERCEh409kzAhjDnvzTi46dOgQtMdHwcW6MDL07q0eRzFo
EI8lUah17QrTdSg51sexntauXYssWbIoteHMmTN9Wp6IiCjBZs2C9V6yrkcd
zmXvDqwLw5/lff+/XnmFx5FIh08/hXI9Sq71cfkPPvgAqVKlUmrDd955x+d1
EBER+c3yjfyuO/ln/Pjx0B4bBR/rwvDWurV6/MTUqTyGRDo98ABM16TkWj+W
nz9/vlIXimXLlvm1HiIiIp/s3Qvr/WS/O7nnwIED0B4fBR/rwvB04wbQqJF6
7MS8eTx+RLq99hqUa1Nyrh/rmDFjhlIXJkuWDOvWrfNrPURERPGyjFNxzaOA
h8ylpD02Cg3WheFHxrWQa9SuJvzgAx47Iic4eRJInhym61Nyrp/rmTBhglIb
ZsqUCTt27PB7XURERF6VLAljzlp8J+e8+uqr0B4bhQbrwvBy6hRQvrx6zOT+
85NPeNyInKRNG5iuU8m5CVjP8OHDldpQxi3ds2dPgtZHRERk8vHHsN5btriT
b7755htoj49Cg3Vh+JDxgYsUUY9XliwA3x0QOc/y5VCuV8m9CVhX//79ldqw
pKfOPHr0aILWR0RE9C+Z59qQqw7fyTPVq1eH9tgodFgXhoddu4AcOdRjVaAA
sG8fjxeRU5UoAdM1K7k3gevq1q2bUhtWrlwZP/30U4LXSURELvfLL0C6dDDm
qlF3csyYMWOgPT4KHdaFzidj3qdJox6n0qWB77/nsSJysqFDYbpuJfdKDk7g
+jp46kprbVi3bl38Jt8d695WIiIKPzNmwHqPGXUnv/B7BZdhXehsK1aox0dU
qQKcO8fjROR08j7fev1KDk7g+q5fv45WrVoptWGzZs1w7dq1BK+XiIhcqm5d
GHPU6jt5pYrca+qOjUKLdaFzyRzWdjVhvXrAlSs8RkThonFjmK5hycGJWN/v
v/+ORx55RKkNn3766UStl4iIXGb3bljvMzvcySkjR46E9vgotFgXOtObb6rH
RbRowWNDFG7mz4dyLUsuTsQ65ZvCOnXqKLVhly5dErVeIiJykUGDYMxNZzzS
3sknX331FbTHR6HFutB5JkxQj4lo147HhSgc/fEHkDs3TNez5OJErvfYsWPR
485Ya8N+/folet1EROQCxYvDmJum3skjlSpVgvbYKPRYFzrLsGHq8RDduvGY
EIWzXr1guqYlFwdgvXv37kXp0qWV2lDmPNS+zURE5Fzbt8N6v1nzTg4ZJvej
uuOj0GNd6BwvvKAeCzFwII8HUbizyb/YuhWBWPeOHTtQsGBBpTYcP358QNZP
REQRaNQoGHPSPkP++OKLL6A9Pgo91oXO0LmzehzE6NE8FkSRomxZmK7vESMQ
qHWvX78e2bNnV2rD6dOnB+w3iIgogljGIX39Tt6oUKECtMdGerAu1O/JJ9Vj
ICZP5nEgiiTWvqS1ayOQ61++fDnSpk2r1IbzZdwb3dtORETOIfPoWu47m9zJ
GUOGDIH2+EgP1oX63LoFZfz6WHPm8BgQRRpP3aZc6z/9hED+xjvvvIO7775b
qQ2XLl0a0N8hIqIwtmQJjLno/zzS3MkXO3fuhPb4SA/WhXpcvBjzrsCuJnz/
fe5/okgkbWuaNDBd70F4lzdr1iylLkyaNCnWrFkT8N8iIqIw1LUrjLnowzu5
oly5ctAeG+nDujD05P2A9N227vdkyQDetxFFNmsfgQ4dEIzfmTRpklIbpk+f
HlsDNNYNERGFscKFYcxF3e/kiUEBmEOJwhjrwtA6cgTWuWKiZcoEbNvG/U4U
6V57DaZrP39+BOu3Ro8erdSGuXPn5lzFRERutmcPrPehJe7kiO0ydrYf65o8
eTKioqIwZcoUT0nxo1/LkgOxLgyd3buBXLnU/Z0vH6KvUd3xEVHwffMNlDbg
888RrN976aWXlNqwePHiOHToUNB+k4iIHOz112HMQfvv5IYyZcrA33WVLVvW
lF+kRlyxYoXf6yGHYF0YGps3A+nSqfu6ZEngu++4v4ncpEQJmNqBAM5XYadn
z55KbVixYkU+2yUicqOGDWHMQePu5IUBAwbAn/VIDrHmFo6BHeZYFwbfxx8D
d9+t7ufKlYGff+a+JnIby/f+gZ6vwk6nTp2U3F2nTh2cP38+6L9NREQO8ccf
sN6PNriTE/z9/lz6kNrVhXzmGMZYFwbXu++q+1fIXKJybeqOj4hCz26+ikuX
EMzfvHXrFp588kklfz/66KP4888/g/rbRETkEKtXw5h7rnnc61GqVCn4uy5r
H1Ih/6Z9GynhWBcGz6xZ6r4VzZoB//zDfUzkVteuAffeC1O7EIL5af7P07Y3
adJEyeNSL2rfJ0REFHw9e8KYe1bcyQP9+vWDP+vx1odU3iFq30ZKONaFwTFx
orpfxdNPc98S0X9Qrx5MbUPHjgjF7/7888+oW7euksufe+65kPw+ERFpZJmf
4vk7OWDTpk3wZz3sQxqhWBcGnowhYVcTdunC/UpEMUI4X4XV999/j6pVqyr5
/IUXXghZDEREFGJHj8J6b1rE47777oO/62ratCn7kEYi1oWB9eKL6v4U/ftz
nxLR/xw+DKWdOHgQofr9/fv3w+7bkCFDhoQsBiIiCqFp02DMOUcS+Ezw0qVL
7EMaqVgXBs7zz6v7Uowcyf1JRCpLf57od4gh/P0vvvgCRYoUUXL7q6++GtI4
iIgoBCzzU7x+p83fsGED/FmPzEPBPqQRinVhYLRpo+5HMWkS9yUR2evWDab2
QsYpDnEMn376KXLlyqXk96lTp4Y8FiIiCpK//4b1HrWe9CMtUgT+rot9SCMY
68LEuX0b8FwftjXhW29xPxKRd2vWQGk3JHeHOI6VK1ciffr0Sp5/++23Qx4L
EREFwSefwJhrbnvc5dGrVy/4sx72IY1wrAsTTvbTgw+q+0+89x73IRHFTZ4r
3XUXTG3H2rXQEct7njYrWbJkSq5/j20ZEVH4s4x/sfZOG79u3Tr4sx72IY1w
rAsT5uxZoFIldd8lTQqsWsX9R0S+adAApjZEcremWObMmaPk+rs8devHH3+s
LSYiIgqAWrVgzDV9PQoUKAB/18M+pBGOdaH/jh0DSpRQ91v69MCWLdx3ROQ7
61ynkrs1xjNlyhQl56dJk8bvua2IiMhBUqWCMdfU9OjRowf8WQf7kLoA60L/
7NkD5Mmj7jP5t927ud+IyD+bN8PUlkju1hyTjEdqzfs5cuSAjF+qOzYiIvKT
zbyFKf8jn7ivgT/r8daHdN++fX6thxyMdaHvtm4FMmRQ95fMByrXnO74iCj8
XLwIpU1xQHvy8ssvK7m/aNGiOHDggPbYiIjID4sWwZhjDnnkyZMHf/s5zpld
H9J8+fL5tQ5yONaFvlm9GrjnHnVfVawInDnD/UVECZc/P0ztiuRw3TF59OnT
R7kHKF++PE6cOOGI+IiIyAe9e8OYYxZ4dO3aFf6sw1sf0t6ybt3bR4HDujB+
S5ao+0jUqQN4rhPt8RFReGveHKa2xUF59rnnnlPuA2rWrIlffvnFMTESEbmR
jAG6bdu2aCNGjPjXggULov8ttn/nP9WqwZhjenj4O54Y+5C6BOvCuM2ere4f
0aQJcOsW9xMRJd6oUTC1L9WrQ3tMd/zzzz9o06aNci/QqFEj/PHHH46Jk4jI
DaQOk9ovKirKtk6zyp8/P9onSYKVhhzTOHNm3LhxA/78bvv27dmH1A1YF3r3
+uvqvhFPPcX9Q0SBI/3UjW1M8uTQHpPBlStX0Lx5c+WeoHXr1rjF52NEREG3
detW1K5d26da0GuNeKcPaZfOneHv76dLl459SN2AdaE96/P7WM89x31DRIEl
86Fa25pvv4X2uAzOnz+P+vXrK/cFnTp1clScRESRRPqKNmvWTGl7pU6Td3jS
v1NqRiHfAMb+/ytWrIiu22RuQeuyWbNmjf7vvsYgf8s+pC7BulA1YIC6T0Tf
vu7eL0QUPJ48bWpvFiyA9pgsTp48ierVqyv3Br169XJcrERE4U7qu/Tp05va
WxkT1N96TGrL4cOHw/rOT/qj+rK8XR9SiesSx9iIPKwLzWR8Jrua0HM9aY+N
iCJX/fowtTl+zjccKt9++230mKTWe4RBgwY5Ml4ionBkHeelVq1a0e8BE7NO
qeOsNV6HDh3ire/s+pDGkr6tU6ZMgdSeuvcZBQDrwv9p21bdF+K119y5P4go
dF56CaZ2p0oVaI/Ji6+++grFixdX7g9Gjx7t2JiJiMKFvNsztq3DA/xuQupL
Y60nY9h4+1tvfUi9jXEj8xvJWKi69yElEOvCGNZx4mPNnOm+fUFEobd0KUxt
j8yXqjumOGzZsgV58+ZV7gtel/G6HBAfEVE4Mr4nlNpN/ncwfkf6ohq/PZT3
hnZ/Z9eH1BfSz1TWKXNmsL9pGHF7XXjlClC3rroPhEPmliYiFzh+HEobtH8/
tMcVh9WrVyNTpkzK/cCsWbMcHTcRkRNJrWb8njCx/UbjI/WazDUR+3uTJ09W
fk/eF0ptGFdfUl/IO0npb8qxahzOzXWhzMv8wAPq9idJAqxc6Y59QETOkTo1
TG3R3LnQHlM8li5dihQpUij3AIv4XI2IyC/SDzO2DQ3We0IrqdOMNV9ctaj8
Nxnj1FhLJkRsf9OVvNd2HrfWhfJsvlQpddvTpgU2bYr87Sci56lRA6b2SMbB
0h2TD+bNm2eb+z/66KOwiJ+ISDfjN4Xyfi6Uv238hlDGkfFlGRlnRt4vyvio
iakR5f2ozMOxwIFjcLuSG+vCb74B8uVTtztXLuDLLyN724nIuWS+B2ObVLEi
tMfkozfeeEPJ9ylTpsT69evDZhuIiHSQ/pyx/Ufl3Z2O7/GM3xH6M7dhbPyJ
7W8q3zrqPg4E99WF27cDmTKp21ysGHD4cORuNxE5n/QbsvZp1x2TH8aPH6/k
+mzZsuGzzz4Lq+0gIgol47tCu2/8QkHe/xn7eSZmXdI3VfqbGse1iY+u7SYL
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
kPlyZ80CGjaEXzVi/frAzJnAL7/oPWYJrQs3bQLSpFGXLV0a0d9o6j4uRETh
TnK6sX2VnK87pjC2ZMkS3HvvvUpt+O6773K/EpHj/OKpEVKlSmVqr7766it4
XUZqC2PO4Hzhev36K/D220DjxvCrRpSxyN94AzhzJvTHLyF14YoVMd9RWpeT
8VzPnQv9NhARRSLJ6dbnibpjCnNz585V6sIkSZJ40toK7lsicpR58+aZ2qrS
8u4lrmVkfBNjzuD4y85x6RIwfz7QtCn8qhFr1wamTEH0WC6hiNPfulDGXLWL
W/rUhttYrERETiY53djOSs7XHVMEmDZtmlIbpk2bFhs3buT+JSLHaNWqlamd
Gj58OOJc5sknYcoZzz0X99+THpcvA++8A7RoAdx9N3yuEWvUACZNAn74IXjH
1Z+6UPq92sUp26V7HxMRRRrJ6ca2VnK+7pgixNixY5XaMFeuXPj888+5j4lI
u/Pnz0c/rzK2UTK+cpzLdeoEU854+um4/570u3oVkG8ZWrUCkiWDzzVi1arA
hAnAd98F9hj7WhfKb9vFxXHTiYiCQ3K6sb2VnK87pggydOhQpTYsVqwY9u3b
x/1MRFotWLDA1Dbdd999iHe5Hj1gyhmPPRb/MuQc16/HzPkuz4BTpIDPNWLl
ysDYscCRI4k/3r7UhcOG2cfBeVGIiIJHcrqxzZWcrzumCNO3b1+lNrz//vtx
/Phx7msi0uZJT21gbJeGDBmCeJfr3x+mnCFjYjpgWygBbt0Cli2LeeebOjV8
rhErVABGjwa+/TZhxz6+utCTM21/d8CAhP0eERH5xjrOteR83TFFoOeff16p
DWvVqoWzZ89yfxNRyP3666/KvDo7d+5EvMvK94fGnCFjljhgeygAZGy09u2B
dOngc40YFQWMGAHs3+/7eRBXXdi5s/3vSB2qe/8QEUU6yenGtje+MQcowdq2
bavUho0bN8YlGUPOAfERkXssWrTI1BYVKVIEPi07bhxMOaNSJd+Wo/CyahXw
zDNApkzwuUaUsWxl7qu9e+M+J7zVhdYxjWJNnsxzjIgoFCSnG9tfyfm6Y4pQ
V69eRYsWLZTasHXr1rh58yb3OxGFTJs2bUzt0KBBg+DTslOnQqkFHLA9FERr
18aMO5s1K3yuEUuUAAYPBuzmwrSrCxs0sF/PnDk8v4iIQkVyurENlpyvO6YI
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
KOSkJkuXLp1Sx7Vo0cK2vuvYsaPX82T69Om2y7Rs2dLrMlJHJkmSBJs49xK5
jDyXkXGgpk2bhp9++gmBWm/lypVN198777wTsHXHSfqwGXOKpw3RvY/Jhjz3
s6sFdIwVxLowtOQbjkmTgBo17M8BO3ffHXMtSzsSrPlPiUi/IkVguvYlp+uO
ibR47733cM8999jWdEY9e/b0eo6MGzfOdpkOcYxxO2PGjH//Lm3atPgymOPe
ETlM9+7dTddK7dq1MXnyZK/jOPniq6++Uq7BCxcuJHh9fpFv1Yw5JU+e0Pwu
+W7MGCj3/eLZZ/UcK9aF+pw6BUyZAk/DY39OeCPvEObP5/fDRJHkyhUo17rk
dN1xkTZz5syJsyYcLHMneVnWOvahL3Xk+PHjlb+XPq2Hgj3+HZFD5MqVy+v1
Vr16dUycOBEnTpyAP+scOXKkaT2PPvqoX8snitSf1rzy3/+G7vcpbi+9pB4f
0aePvmPEutAZzpwB3ngDeOgh9XjEpXFj4O23gVB8v0xEwSPjUluv71A9UybH
euCBB2zvUZ955hl4W6Z37962ywwaNMjrMkOHDrVdRt6f6N4HRKGwZcuWeN/P
x5J5ZeQ5ynfynVA8661atapp2fnyXD+U25YvH0x5Zc2a0P4+2evRw3xcYg0Z
ovf4sC50nl9+Ad58E6hfXz02cWnYEHjrLT4LIgpH1u8LJJfrjom0atWqldf7
0nye80PGOLQu06lTJ9u/f+WVV5S/jSXzJNot85I8y3bAfiAKhRs3buCDDz7A
U089ZTsvqDeVKlWKHjP4iIw3aFnnnj17lL8/F+oxpuU7JGNu4Zy4+klffrv7
+PHj9R8b1oXOJuOHz54NNGqkHqe41KsHzJgB/PwzjyVROLDmCY4P4FrXr1/3
NPmN4r0fLVmyJA4cOPDveeKtjpQxNLz91rPPPmu7zBj55sUB+4JIh7///hsy
t0vbtm2RJk0an2vE+++/H6NHj8a3Mm+ZZz1yHRn/u8wlE/LtkTFIjblFxrd0
wD52rcceMx+PWHLPrjs2wbowfMjcJTKOrfRN96dGfPBBQO4LAji2FhEFWNmy
MF23HE/clWROs5o1a9recz7iuZ+z/puMc3j48GGvdeS8efO8nkdPPPGE7TJT
5Lt3B+wLIqeQMYJlvKb06dP7XCNGRUVFv9c3/tvb8t1PqOOXOQuNuSVbttDH
QP+JnlvAWz/AhQudc0xYF4YnOUYLFgDNmgF33aUeQ29kbszJk4FEjK1FRAF2
+zaUa5XzD7vOqVOnUL58eeX+MkWKFFi3bl30+fDcc88p/93bvar0ibP7nZs3
b6Jx48a2y2i5byUKI6tXr4b0186UKZPPNWKsT3SMJSbvFKz5he8JQkv6/lWr
ph4HsXy5s44F68LwJ+MYLloEyHxUSZOqx9Ob6tWBiROB77/n8SbSac8eKNen
5HLdcVHIyJifRYoUUe4js2TJgs8+++zfc+Gff/5BmzZt4rz3NNaRVhcvXowe
e99uuffff992GSKyJ3WePKvJmjWrz7VhiRIloseAkvkrQhZrwYJwdC0SyWR+
ujJlzPtfpE7tzOe/rAsjy19/AUuWAK1bA/feqx5bb6pUAcaNA44d47EnCrU5
c2C6HiWH646JQmbXrl3IkSOHcv9YoEAB7Nu3TzkX/vzzz+i5t+3uOa11pNHp
06dRoUIFZZl7Pbli7dq1tssQkW82bNiArl27Rs/t4muNWKxYMQwYMMB2DKmA
atUKphwTx9jEFED790OpyUX27ECwj3lCsS6MXDduANKP6KmngJQp1ePsTaVK
gIxdd/gwzwOiUPDcS5iuQcnhumOikPj0009tx7UoXbo0vvfSl0PuIb29n2gm
3xbYLCPfIMo9qPXvpS/c9u3bbZchooSJb+5RO4UKFcKLL77o9blOosg4l8Yc
8/DDgf8NMtu5E56G2rzfReHCwMGDzt3/rAvdQb5fkn4DbdvCcxOiHnNvypcH
Ro1y9jlMFO4eeACm684JY1VT0K1YsQJ33XWXcn8oc6N5G8t+48aNSJ06dZz3
l7169TItK/3V7ObrljEx9u7da/s7RJRwEyZMMF1refLkQf78+X2uEeVv+/Tp
g23btiEgMW3eDFOOSZ8+MOsle+vXAylSmPe5KFcOOHnS2fuedaE7rVyJ6HHx
M2RQj783Ml7i8OGATb8mIkoEa59vyeG6Y6KgWrRoke39YL169XBFvhm3Weaj
jz6yXSZVqlTKv8XOPbjZcy6lS5dO+e8yx4Uvc3ITkf8efPBB0/U2c+ZMyL/v
2LEj+p2gvBv0tUaUmrJnz57YnJi8IPf11ns6ji0RHB9+qO5rUaMG8Ouvzt/n
rAtp9Wrg2WeBzJnVc8GbUqWAIUOAr7/muUKUGNJfm22wq8g9ot39X4s45qxc
uHCh1zpS3inY9RGV8Wnuvvtu5d9lbotffvmF5xhREEifbes196PNGPDSH1y+
LSxatKjPNaJ8u9itWzdsTMh4JUWKwJRnZCwKB+yviDJ/vnkfx5J5K69dC4/9
zbqQjGQMu+efj5nfxtca8b77AHk2/eWXPG+I/LV4MUzXk+Ru3TFR0Fj7l8Vq
166d1+M+Y8YM22Uek/mR7/zNli1bot8rxHdfWbduXVy+fNnrbxFR4kyaNMl0
zdWQ90TxLCN9vWWM0vs891O+1ohf+/tc/sknYco1lv7mlEhvvGHev7Eefzy8
9jPrQvJGnkd16wbkzAmfa0S5p+3fH/j8c2iPnygc9OwJ0zUkuVt3TBQUw4YN
s72/k+f/3pYZP3687TLt27dXllmzZg0yZszo9T5SxqSReS507weiSPbwww+b
rrvp06fDn+X37NmDIUOGoFSpUl6vZakf/Y5t2jSYck3Rov6vg+yNHWvet7Ge
eSb89jHrQvKF9GuX+9e8eeFzjShj8/btC+zYAe3xEzlVoUIwXTdTp0J7TBRw
fT1tod39nfQj87aM3BvaLdO9e3evy7Rt29Z2mWoyp7ID9gNRJDt27Jhy7Z04
cQIJXZ/MUzN8+HBERUWZ1jkoIfNMyPeE1vs0mVvPAfstrA0erO7XcH4fy7qQ
/CXjY/XpAxQoAJ9rxHz5gN69ga1boT1+IqeQ+UKt1wrnEI04MuanzAdhvV8c
JWM9e1lGxiK0q+9ix5OxM2LECK/vF+Q7Qxm3Rve+IIpkU6ZMMV13MrZwoNZ9
8ODB6Dbj/vvvx5cJ/W5H5kgw5psZMwIWnytJ7Wd3zyu1ou7YEop1ISWGzLPT
rx+UtiYuuXMDPXoAn34K7fET6TR5MkzXRv780B4TBYXMESjzx8feL06WY+/l
bzt16mRb240ZM8brMv087XB83yOlT58e62X8dAfsD6JI1KBBA9M1N036bjog
rn9Zv1t49FFnxRdOpI+o3T3uq6+G9z5lXUiBsmsXMHAgUKwYfK4Rc+QAunQB
eK9CbiRzCxuvBxnzSXdMFDRr166NvleUOa+9/U3r1q1ta7qpcfQvft5z3tgt
Y/3OSeTOnTs482YTudz333+vXG/Hjx+H7rhMPvkEppxzzz3ArVvOijEcyFgy
dve0MvaM7tgSi3UhBcPu3THv0UuUgM81YpYsQOfOgOfeSXv8RMF28yaQNClM
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
FkIIIYSI4/8BllhqYQ==
      "], {{0, 735}, {902, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    BaseStyle->"ImageGraphics",
    ImageSize->{221., Automatic},
    ImageSizeRaw->{902, 735},
    PlotRange->{{0, 902}, {0, 735}}], "Text"], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Qd4lFXWB3DSg0gRkN5RQUFFUZAPFQsgIq4FcJEmxIbYQREVxYIYQJKw
UnQRcEVQkE7ovS9FpaUSIISE9EzL5E2mZL4z82euI7qAuyFvyv/3zDNMZibJ
nXfeCefce+69LcNef/IF/ypVqowOlasnh79z/6hRw9/tGyhfPPDuW8+HBciN
Ku6rQPyjERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERHpodBD71YQEREREdEVZLVaL/NOIiIiIiIq7woKCoqK
igoLCws85IZ8KTf0bhcREREREZU8BP+aJxFA2I8UQO92ERERERFRyfPt+fe9
rXe7iIiIiIjoikC3f5GH+pKIiIiIiCok9PZbPNSXRERERERU8WD+b35+fqaH
3OD8XyIiIiKiispqtRYWFppMpipeISEhtWrVql+/fosWLdq1a3fnnXd269bt
8ccff+GFF955553JkydPnz59wYIFGzZs+OWXX1JSUsxms91uV9sHWD18v0Q2
Ic+RzAIri6LQSHINeY7c7/st8mS53+FwyG08AQ9pv5+hrO7R7cARUaWHP0o2
m01VUaILRe92ERERXQzW/0lPT3/llVfCwsIGDBjw6KOP9ujR47777rvrrrsk
/m/atKmkA8HBwSpBCAwMlBzBz88PX1arVq1hw4adOnV65JFH5IdIgjBv3ry1
a9fGx8erxUXlWlIMZApyp8VikRuaT0iP2QfyXyf+J5UnyJNxp9y+INqXjECe
KV/ihxAR6QU9FfijhL9UckPvRhEREV2M6lGXMPuCVYAQvRd7yP9uqampcXFx
u3btWr169dy5c6dOnfrBBx88//zz3bt3b9++/bXXXhsaGlrFhyQIAQEB1113
Xe/evSUviIqKWr58+a+//iq/yOFwyA9Htz9+O25LPI/AHuMCaAnqkfBfKu7B
o0gNdD58RFSJyV8tm81mNptdLhf+RnHzRCIiKvvwn5fE0ii5UZE2om5MClY1
PHj+H7cM0DyReXZ2dmxs7JYtW+bPn//pp58OHjy4W7dujRo1UhmBv0dISIgk
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
RFTWqWUz77zzTpRVSGi9e/duvdt1IbUrQXh4eHBwsLRz8uTJ2OpXLbCPVTqR
BVzp9shBk98uvwsrz6BGHWsTyY0PP/wQowChoaG9e/fOzMxEkqK+F63lEMAl
qcX/5ThjwoXD4ZD89JprrsG5GhcXh7EVzAXWu71EREREZR1Ws5RAdNCgQWoK
wPfff693uy6ELnQJuRs0aIDqGoPBgM5hzAguLi5G73qpFS+puQZyjWU/8/Ly
1D4FmzZtqlu3LmYEN2vWbO/evaj2R+W/XOfm5nJrgMuhxnSw/g+qgF544QVU
rL355pul+aYTERERlXdqWiWWVUFdvdzWu10XQoXPhx9+iNKaqKgoLP/ucDjU
spyYCIBlOUuhSYjnkZjIL5XgX1IAzTPJF8UqKSkp3bp1k9YGBQVJFjBjxgyj
0Sh5Cp55JZYqrXjUsj94u4XkTXLnv//978DAQDlX69evr3nLw9j/T0RERHRJ
qFqRG99++21ISAhSgEGDBundrgtJgCeBH/YpbtasmUSDWPYHIbTanEvzhOWe
3uBLdAgXFP52+TP4CUUF3ssf24PUA+v8a2qmaoFW6H42WmKVy9tvvyNJVRU/
SVv8Bw4akpWTbdUKzPkW9+8tKvT+Ivd3FWrWQs1SqJltuBRYfru47zF6L2Z1
8TwfF/leyeMuc0KBu50XvF73y3S32upz8T04548AXqC6/Cdoz19s1Z811Dun
A7VSqrhLrQEl+eCyZcvwBG4BTERERHRJqnB637596PyX6y5duiCaUvUtpbao
JvIR9avx2zFIMWbMGMxQwKovWE5f8wkvCwuKfC52zzViVOsFFwlr830uFyQC
3m+3awX2/EJ7fpHDWuQ4nwUUnl/PH7flOl+i+QJpod1W6Pl1+RZnUaFcu4pd
+ZbCAqvdanUuXhpdrVa9KkFVq/gFNr++9S9Hj1gkBSiwFtjs8hyHzVWQrxVZ
84uLLI7CXFt+qrPgXLGWXlyQ7crP81yyXdZ0V0GKqyC5uOCsqyDNpWXIpbgg
06llOwty7FqezWqQdKCoMN9WdH6tJHmR0ja5lkYW2rB6krRVXq7VVmSVX1eI
CL+gQJ6mFToKbE6LhNVF+QWaSS5WzWzV8qWR7oNVaJMnWN3frTk0u1OaLGG4
Rdpc4DmY1vMHUOUy8it+S1vcScr5bOJSSdnlk3f/448/Rvz/5JNPlvK8byIi
IqLySy2unpGRIaEUaqrr1q2r+rR9w6pSqK+QlhiNRqfTiZgfhTRms/ncuXN1
6tSRtl1//fV4prfq+4/xv917+UP8X2jx7dm+ZOe/XCTmtRYVSgQtMa4l3xMq
e1dMwmFxTzrWCq2WfLm4f1eBOwLPNxpsBRIDWzWTyWWTmDk/+WT8nbe3c48B
+FcJDa3yz9kzbHYJnPNcBbkuQ3JRRqzh5J7Uw2sS9i44suWfx7Z8dXD1tP0r
pu1dMm33oogdC8O3Lfhk28IPty4Yt/PHT/csnXRwZdSh6H/8sm7Wsc1zEvcs
Tj6wynBiV0HqL668RFd+iis/1WU567JKmpDutEgekekqypVLsZbrsOa6MwWr
odBqtGvnUwCHo7iw0JZvdWc0FotJUgC7XfIFz5vuPoQS5kteYJeLe5hAWm2R
nEGza4X2Ipsn/rf4xv847Cr4943/Lzkoc/kk9UtPT7/qqqswyfrUqVOs/yEi
IiK6HGp/VYljEWCjwD4rK6vQCxMESie4krjOt/8fv1TSgddeew21SQsWLFC5
yR/qPYr+cFHOpwDICBCcu7vm893Xdqvc404ftPN5gSfYL7IUFBnthYaiglyt
AFGx3eawF9q8lTCa1T1CoBXIjyrMt7oHAyRnkWTB6c5KivKNLofFVZjpyo1x
FcS58n4xxK9/fWC3hiFValapImHr3bffMHHMM5NfvCd8yA2Th7b87OkGUc82
nzK0UfiAelHDWkQNbRk5pEXE4OYRg5pEDGrkvgxpHDm0ScTgpnJ/1GD3Q18M
bD5lYIvIodd9GXbTF4NafzGkTeSwm/7x7K1fv9xl0fsPb44YvG/Oq/HrvkjZ
Oy8/cY0r55DLmuDSUlxFGS5bnrRNUgAcB6vJLCG+5ACapDCas1Bzafl2Cdsl
W/IcFvebYrHmmwvc97kv9sJ8p81SZDUVmOVAebKq88ffm4KpciarN/gv4ZVO
sYZqv379cFZMnTqVxT9EREREl0MtXC+3O3TooOL/w4cPo+dfLbxZaiVAap1/
rK4pN5KSkqpVqyat6tixI1IDd0RqsTgcjt9/60Xif5+fX4AClT/G/3jcer5P
u8isFUqE7O4wtxe4S2ukVWb5tdZ8d45QkG+3FTgLzTZLttOS6SrMcWmZTtNZ
l3bOaU0pNiRlHN98eN3XW+a9P//jfjPe7DbhmXafDb/t42Gdn7yzTnNPClCr
SpXmVauMebzl5MHNooY3jhxeL2Jo7X+ENZg6uP7UgQ08YX+TqCGN3ZehDSMH
N5o6uNEXgxpGDZH7G3qeIHc2lsvUgQ0n/72eJAhyQy6Rg5tOG9pcLlFDmn0x
uNmkwa0nPtP2s2HtJ4TdPvnlbt989HT0N+/tWfHl6V+i7dnHXUXnXFq6qzDD
ZTnnMqW6Co2ugiK7JDr5dkeBTQ5LkcUqqYG9yD3xttBdNlRoKdLybZICFJhs
VlOhCfF/oSexshWcT6M8mdT5CQVqkOXi8wX+KpycK1euxOl63XXXYWmgEvsF
RERERBUUJlSiR/1vf/sb6n/EqlWr8Kjv1NpSiP/VTk/ugNOzxn5xcfFzzz2H
Vi1fvlzuwYwA1P+raPNPo31Vl1Lw+3D0Tyt/LhgasBdY3AlCocNe4PDUDXnm
6hba3GUwdptVyy/QDEUF6cUFZ1wFia7svRkH5/+69KO1U4Z+O+q+aWE3RQxp
9cVAdyj+5bCWU55uNGVIy4lDW4c/e+uE5zu/3PfWNnXcKYBcWoRWGTv0nuiv
3tj147v7l487uv6zkzu/PLVj1ukds1N2z03b/13mzwtyjywyHPspL2apIXZp
xs9zzx2anfrvmWf3zTiz58uTOyLjN4YfW/Ppv398e/u3r66ZEbZkylPffdxn
1pj7p4y8c8LwdhOGXOf+vUNbTR7SStogl6nPtI4cfsPkIdeFD2k76/W7l056
etd3b6f9e64rY4fLdMxlPOMyZbnMBqfF5JDsT4605i4Fchc45ZuLrO48qFCT
1MxdAyRvkSf4xyRlZFLucRBP8O+wFOLinkNR4CkkKiy5UQCcIWazuVWrVv4e
69atK6kfTkRERFSBqV59iaaeffZZ7FolWcDMmTMxp1I9QWUBV5RayAV9+9KG
48ePY2Gizp07y/3Yb8tgMKDxfy3+91nSJ7/Q9+Ku+fGE+N7g36q5BwWsRRLY
FlqlKXYJhiUjcBbkOa1Z7ur6/DOWs/sT9i7cOP+9bz54bMKzHT4ZdN2kwa0j
B7WcPrj51AH1ogbVnza4wT+GN1s4ptPKz3ptmv70znkv/rryg7jNkVnHl5/5
edXwx++rE1ClepUqtf2rjBzU/dTh1Skxq1PjotMT1585viotfn1a3MbU2A1n
Y9anHN+QHIPLurOx0anxq84lRp+LX5kauzw1ZllqzJL0mKUZcUsyY5dkxS3J
jV+al7DEEL8kJ2ZR7tH55/Z+eXL9pz8vfH3L9MErJvae/3aXmS+0nTywUcTQ
ZlHDWkwZ0jz8mZaTht/w8ZDWn4e1+/qdhzZ+PSZh07yi03tdhjiX6Yx7XMCa
7czPddnyHRLnW812T6jv7sm3Fqo1i5A0qf5/TQ6V5sh3pwB2iyf4x0SCEuz/
B3n/J0+ejFnhkr2y/p+IiIjokhDko8t9/PjxqKbw9/d/99138ZDm7fYvnX11
Ne+gg1xjkU+1MdmGDRvsdrtE/jYvzbtWj2/876neVxff+N9drY+pwXI739Mv
bSkqche0uGe4WrRCcyFW1PT2YEsEay1yWKz5VnOuezWewjRn2v4Tm2ZsmT7i
ny93njak9eR+Dab+vWHkEAmkW30+9Ibw4TdNe6Xzwk8fXT/ruZ+Xjju7e0b2
4X/lxP6QnbAoM35JRsKyjMTVmSfWp8WuO3NsfXbSnshPXm9cOyC0SpVqflU6
3tRw79ZFZxK3Jh5fdfbU+uQTK08nrjidGH06Yc3phA3JiRvPnNh0JmnrqbiN
8qXcTknYmBy3/kzs2pT4NZIynI1dneq+rEw9vuLs8aXnji+TpCAzdllu7NLs
o4vlkhMjScHy3Ngl6b/OP7N/9oHlH62Z9fx3nz466627P3+2zSeDm04c0jT8
meZfDG31+dNNJz7dYsbIjusihyZviixO3urKT3AZk10FuQ45pPmae10jTbIz
l4T8eMc8h8ue7zliBe6LXS0E9NulRON/ORWRJJ46dSo4OBg7LJw+fbrEfgER
ERFRBYVVdBBNzZ07V9X/PPfcc2rlH8wCVgvdX1HY4xWbPUmrDh48KHGdtKdb
t254gjyKbAXTls8v1PkX4v/fVaefXwL0fPxv8V1+315gdhbkuSfwWk6mx23Z
8uOkr97r93nYnZMGtYkc1HLm4KYzBjaYMbjh18+2/vGdu7dNH5K45uPsg/80
xf6QdXxBTuzSrNiVaTErz8WvORO3Ojl+9amE1afio0/ErJbo/VTM+jNxm1Pj
tybHbtmw6tsONzWTVxjqV6XO1f7/nD7hzIkdJ+KiTyYuP5W41JsCrDsVv14i
/5OxG5ITtpyO3+y5SAqwWS6SBbjHBeLXp8StS41bkxa/Nj3BfTkXG50Ws/pc
7Jr0uLUZcRvOxbnzjrOxa1NjouWh9JiV2fErDHE/5R2dn3Po65MbJ2z9OuyH
jx+MfOGGyc80njK0cWRY8ylDmk/4e5Opz3X4+p2Ht38/PvngMpfhhKswq9ia
IwfHruUXWC1YTNUznqLif/fbgfV/3E8rcG9k4In/L70pw1+Cc0BOkqFDh2LQ
aty4cSX484mIiIgqJDX5V2zevLmKV/fu3X1X/lFjBKXTKklGUG706KOPoiRp
586dmAvg23L39SXif6s70j/PPc2h0GbN14zWgjybzVxUaCmwGt2l7BKeFtk8
ZSrWQkuuy5rpKkx3ZRzO/PcPayKHff1a588GNJ88uOW0YddPGShRccuZL3VY
MenJXfNeTdoSkXPkO4mic4//lBPzk4T9GXFL0uJWpMVFp8WukXg71R2Tr0uJ
XyOXMwlrzsSvk/hfQne5nEqQy+aTcTviD+8a+ESfEEkBqvjJ9Yih/U7GbE9J
2ng6bsXJmGXJ8SvTEjemJW49dXS9pAxn4zenxG06E7vxTKwE/Bs8l3Vp8evx
izy/9HcXzxM2pcZukIu0Ry6SEWTErMmMiZZL9vFVcsn57bIs/ej8hD1R2xeN
XjDlyag37gwPu27SkGZThzT9YnATeeHTRty+fMqgpO1fufJ+dtmTbdYzmmZw
J1LuXQfcR9c9GFNgcVgN9vwcl81YrLnXGnXKW2AtMEuCVeQsqRRAnYpynmzb
tg1L1zZs2BC7v5nNZskTMYucRUFEREREvhAdobAnJiYGwb+EUjfffHOpzfn1
hf2/0Ml/8OBB1CP16dMHmwLInYjosDWAp///wvr/30X+7uDf/U0Fnq2w5KlW
90qeliKbe5crrcBkK/JshiV3WvMc1myXLctlTEze9+PqL1+d9sp9E56+IWJw
y8jBjSMGNZr2TIuFY+7a/c+hZzZ/lvvrnKyjC9NjlqbFrUqNiz7juciNswm/
xfkSeKfGSuC9Kc0deG/wxOfnH3X35yeuO5Ww4WTiphNxm5PidiUd3z/lkw/q
XV1N4v+qVap0ubX17s0/pJ7YmnF6q3zLqWOrU46vy0raceaYe1KAe2qA5yI/
80zsWnd+4b3Ir/C5uO85E7/hTPwmuXa3J+58/H/+ErPOc9mQFrPJc9ksrT2X
tD4lYUVq3E9ZCZLRzD+5bdL2b4Yt+uiBqGEtJj1dX7KAiOfbTHzmhs+eu3VJ
1LATe+a6jLGu/JRi6zm7JcNmyXZoJmeh2X1dZLSazjkKDY4is8mYI++Us9hl
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
isUTqXQ2qtQBH+W/KAICAgICAgKC/3jk+T+m+oMHD87n/zc3N+MeqT+s+Bf4
fzIWyyZTKTEajbQlk9m4lDVa6qjiIqqEuuW2G7JpUQ6zlpVPz6kY8+bMEXMq
Bhnen9bKrG3ntjQ3VDbaNSFa77VVeWm1j8vXqJqVslljjoL2oKOIuwaVCl+g
/WHWHKYtARtKE2riTEGHxrUflILB70Rj5h7e5KKNnF2Px/kt2k9mv/TwbROu
HXtO/97K4HzfYgonzOTjzFOLrrty9Iy7Jvz98SnLFz+/ce1be7ZVuhxb3XSd
YKt2OWp93FYXbUF9B4Q6v1Dj5WqQ5T6DaLmHrXbRJlj6+Grcm0D5xOJhaj3M
Vggftz3o3Onnv6T3WfZsr9r02fKl85559L6Jt98y/ueXjhp0enmfIpTAr6Tx
F5UrK2i9mBo3fMDk2294a+GzFt1HbrYaNfxl9C5O5xF0oGsUdyBz2Gl0saqg
12Szbdm9a9Of/nhNuaJl+pUWPXHvNK99h99WHXKYA3Y14v9d/jzfyvY3FhZZ
4Lt9jCWAEU3W2Ixwo7ycBQRdmNM18voQqw2xhgOC8aBj47Y1Ty2cecH8qSPm
TRm+ZeGd2YO7s3GfFGvpzHbE5HgkFhVjiXQiBcs7bp9IwUtdRD399JNxUWoX
QR9kE4T/ExAQEBAQEPzvIW/vifn/gAED8v6fePxf6nJT/N57lkQ5HkvF4x1S
MiN1JOWsKHb85tc3AgfrfQLlsFUnm/evX3jf/EmjF9xx1lsPnFdf9Wwru+6Q
syrYsLERtbvV+uyaJpcVjeT3MNtBaeo55tld/6tHdFTxlgESG+bQWHHAYVK8
MS1B2tjIGlGKi8Pgc9Yw9Xrg/A1f61aveH3anTcOGdAL6H2/khzPP6FE4f+l
1CXnDp16++9efWbmxo+X7t22xeuoC3LbfHSt22720lbkO2oz+mgTcFRlugHV
DuOa3HzAf/OBanhZVEScq2LgDPAh/ETJ0jG5bXoI5ALEWNx2o7MBqO9WCI+9
1s/AQbd/Zd2wdtXSZx99eOKfbrtg5KhTepfnVUAuiqihA8vvuv36NR/Oqf9G
5eKqXSCUWCvsU2io8gpat6By8uqAt4Zjql96/uGTTyjH13vdRefXf6ncyW5i
/13j/wUj/z8K/w+CoqGRXPIyBo9DFaTVYVoVclTB8xX2VzbyhkbHFmftm28+
fMW8uwYsnDJo9d9vyDbt6Iz5EomDYiouJlGPsJTUKYuZr3fvKy9Dsvbkk/oF
Q43xZEckkSL8n4CAgICAgOB/HMD2Tz311Lz/Z2trKx75/6Hm/yL8Oh6PpuQO
OZaS2zuqjbU4839mxU0HnYbV//j13DsHLZsy4qMnr/XULGoXNgftlT67Kszp
/A5Vk6Ck6KNUdmNPnq/tZp7o8+oeFkB4FoDXoUYAHOoL4GrQuRtMAaYOuLSL
3l5t+PylZx+86pIRfcu6yfMJRYgJDz6jz82/ufK5WTMq17/L22o93Davo8Zj
M8MhwvzWAFPjbjB47aZGZ22QNqMOXLwJKGiI1QVoNHIeYg+3r8EZ7BBBXvHb
5/V4Jf+J11YJv2rk9UBoYT8QuCpZSWEC4WPxOcwQcGgIJD2Y7YJ9q1/YZfva
su6jZS8+fT+c8Bn9ikCz9MF1B8rlnFhOXX/NZc/Nuv/L6o1+53YXY3WxJhen
czFqvxNNfAj2OvUXH48aNLCX4gt01qnl6z6e7xequ5oOfGdC/uFxbPN/jNgl
FW5OI6cLOTRNDu0BWt9Eq8JMZYhTO2lN0G3xNmxprl/z2Su/Av6/sOKctx7+
RYQ1dkS96ZQYl9OReDIuZRJiuiOd/ePNf1JmAKhHH38skUpHxESCtAIjICAg
ICAg+N/DEf0/AaWlpdFoFLdMzVcBfL89y2IiLUYS0aTcmYh1pqId111+Tbky
0r5bv+Ktp65fNO2shXedvuGVCQd2fdDGbgk4VEHO7GUMeHgfFeciE5vcIDDK
+We0eJC/R8FvtzTISQBsXKP4ZMLeTF62LuTaXaNb9+LTD146dlh5Vz4Pyp8p
oYA8//UP4xfPeaZav9bLfunlt6KMHd7qYc1u+C1j8rPWAGMF2u+jTQonN3kd
euxaGaBRrpGSjqIF/g8qAJUVK4FOQ+nPBYHy2JE5jw7T2lzfLtiG1YLSCbIq
LB+CXb0JwpwR76HQbCeX+CRUC7QBTsznRE6hLhA1zHYQNSbV2rmvPv3bX1x6
xollvbpETW+lGPnyS4a/8vz9u7Zv9gl18ENUNcyhDCUXve2bLw03//bnuBK5
b2/qyUcneZhaoNxwP7uTrHoM+P84tL8gOGRtFGI0jYw6TGvDDn0jbQAhAPw/
yFZ6OK2b13s4eBxbWm3/3DD35vlTR8ydPGrhvdcEd6/vjPhSUjSR6ojJGTGR
khJp2157eVFZMVV04ol9nW5XMv1DZrUICAgICAgICI5rdDXeTYiimMmgrkkl
JSV5/g8b4D5K8O0P6JcK/L9daotlpFgim4hnNVvUQDVPoqi7b75o/r0XL5g6
aNHUQdrFtxzYv6bdbfLVVzYir3vUQwob0WNuH3RUB2kLyuFhtE282s98EWQ3
Nwpan02HPwxzei/wZ84IXDEoVLsdwG+tEC4gscK2PdurXn7uoYvOHdK7lMoz
/36l1AWjznz4nr9UfrGc3W/0C8ClzUrvKr1H0Q75JToZpaVXj+CMPXzye/QL
Nn+fMOZtNnPR1U5LuQlHjPy56fP9tjysxcfXutlaP/+l/RvT5x8ueeTev14y
bmB5VxExWhZRV18ydOHsx3Zv/wLUjZsz8rTa57QIrPHvT0/pVU7BY4cHf8P4
i+p3gU6pA3Hh5ywoQ4nXeRiVh6kMCJqAYgfqalAhu1THsbcAUkQH6KMwrWpy
oGIQ5Y6h+xYCLYC6uaF0L2zfBOqpmd5s+ODB1+4aubDinCXTzm+oXJxNhuKx
tnimMy6nZSnTKWfu/MvfikAWlZffe/89yTS2vMqp2ng8DmoXNO8Py3YjICAg
ICAgIDgukK/8BYYPtAcoUHFxMeb/ZWVlmPkXFgh8v53LYiwVRW1ZpY5EInvh
Bef1pqj+FPWPOy+eN3no/Mln1b4/Lcasa2TU/L4qnEIPtFYZ0VVonpLbA+Qf
JdswOp9tc4DeGGQ2hHlViNV66hH/99mrfGyVj1F7GDXwf96mCzq/dCp5Mmv+
uXDCby7r1wex37IS5HhTVkT98sqxrz3/0Fc1m4Eqe7kakAl+pwX53mMLUE6l
BFrPdxB2K8TbfQQqnmfgxgJF8D34P1YQuEnxYct84PFtvFSYPzpJ5dw0uNMZ
Vg1exsDbNXD0oAsN4DsdZma/DrTPq/94/OLzRqEEp1KqXzlSQGedUfSXP129
8fPFfk9tQ8Nmn6+GoU3rP18++KzTyorRBsPO7Fu5boXLUQuywsXovcDAnfqQ
S+e0b4L7HOB0ze5aH41qH0J89bHm/6iag61E7YMR+dcrDwJJMEUC6MO0BlSA
IgG08Dncz1DD57vWP7N85ug3pwxdMPncbR+/kE01x6KHlDdZ6pRlev/+8mJU
217eu5fH541EIvDa4yWQf3j/QQXD8hj9uREQEBAQEBAQ/OQorPyFFWA+2PkH
VEDv3r0LB0J/QAkA8H8pmYgkomI6vXbdZ+XF1IkUdcMYavaUEW/ef/G+Dc+3
smrE6xzaJpcVJerb8ZC7HuW6MLnEfuzzGWJUzYKmxW0Awu9pUIUYE+rVxZpC
ggEIaqPHHHZZ+HqNh62u36V7+pFpQ37Wr19Zl/d+KXXRhQNfffWBr3ZucLFm
lP3CWTy0HgKX6Lpsld+ueEXNhRkjkgCo6UCu9cBh4c91vO1eHj6e//8NPGvA
5jpt5ZddoSk4usL5ldwn7NLZ5dWJhAC6D4zS1IA34rSZoIA6CAt2g4+v/rJm
7Yt/n37RuAGlSjMyUEPwkM8dO+jVVx7d8WWlz7PbYav+snbTb395MZ4iOaGY
mvPyI5zN7BWqAy4rvX9jQNCF3UY4lsehwhUZAYc5xFiPdf8vNMLPgK5BKgwF
r8gxPOWByrpRDwilN7QG38lG3tAuVLLql96+e8SyKWctnjrC9N6T2agnm4jE
Y5GkHJPl9sl3/K2stLi0rNf0e+5NZzqlrs53P6zDBQEBAQEBAQHBcY329nY8
+A8q4KSTTsJNwX6A838eiUQ8mZbbIq3jxo4EYnlGCfVCxZjFD5xnV712oH5j
M1fragA2blLqfDVBwdRFiTH/tyAezqBB4ACzxWvfjPr2ssjSJ8ghWxvkCUPr
g+5qtl7jZqy6ze/++aar8rn9EMMHnfrEQxXbt25yu+octI7nkSUmduOBY6HD
KeWuId5SkGmPmH8+CoxuctnvOEW/K/TdQecsSRWi/i8tseIIHh7d+y84tKbA
3VTTcxsUqNWvXYPLCmAdAnFmB8rYQfKB1qLMf77ObPz0vnv/2n9AL+D/OPr2
oSb+5Uajeo1f2CXYt8966O4+pbn2ZL//zcV7v6r08Nawt9bN6mBveP+g1MJC
TZC2eBv0x7oFGL5A4Pwu3uzOz8KwZhdX7War0XwHo29yaMK0MhsCas6hDdor
2x2fh2rnv/fAqKUVZ86fNNK44vGsFMgmDsGbKMUPeXi6BN7w4tLS3n0Zlpe6
LHAjkUgmk4FlOp0+en9SBAQEBAQEBAT/WcADnvks6HA4nDf/PPPMM/FXuAXA
D0M6nUyIsdUfvAec/GSKuuHiPq8+eHW9eX6TY0MTq29mt/sdW50Og5fXhQS9
36HqGn7vKuYFcotGvCsDvDrEm8J8rZ+tcdWb3XZzUKj28Va3UgO7esXr114x
qpdS8QrLU3pTf/jdFZ+smuekkQcmD3zYaYTwuYDw64Mc2jny22wwKFMMtR6b
FZYFPkL6PNUP0Tj03xHG7kD9iAu6EvwrS6bnHnrEkY9YqE1yCkVRLor7qDJh
QQP/18MSRE1YMOP6CDgQsHcXp/N5jE6nrsFWtXz5P37320tLlc5ifRTvo99d
e9kn7y8T6P3rPv3w9FP64HmT0cNO2bz+HbbBxNuMjd7tAd7K7a9qdFYL+1WN
nCXMmo8p+VemVHKpVh4u92L4GMT8Bd4i8GZU+ctompAvkAYeE67IVpyUtPCC
BWsXrXrkkiWTByyYPGTTkhnZVntWbutMxFOxQ4/cP5Oiiqmi0nvuvR9Pe+Hi
dzIFQEBAQEBAQPBfj0L+D+SHZdk8/x89ejQe+f83WgCLQP4jh1oGn3HqSSAo
SqhXHvwVt2NVwL4eGBpwVNR2iq4JuKwuVuW2VzYJhaY3XVwa57rzyD/f4zAF
nFv9/DalbVatfa9h3muzRgw7NW/jefYZfWc9WLFra6WbBVlh9PJokN+rZPL7
OYPLrs6P8wdYS4CxKoGsNb9lIpobVz8Cz+9B0Xt8gk2Bvs/gNuLz3y0BjhBd
tN+cX+Y7c4EE6GpDkFMBXofW71CjaQLOiOqjeZ2bU7v4Kier8vAmEEd15g0P
3n3nKb2KsW7qW0qNGzNszpyXttYYrrr8gvJixReojHrjpUe93A4vu83jsIAE
cNarQVl4bVUhVvfj8H+cXoUv2a90WFNmBPS4TEOpBc49qUbWiKZCeEvQaWhq
WH9wz4qVj4x9e+aQ2VNGbVx0d/YgnxVbs4mIi6NLSsooqrR37xMaGhpwnlth
tcvR/0sjICAgICAgIPiPAWY7mPbs3r07z/+vuOKKPBHCA6TffyJAlKXotDv/
0lex/bn12pHfWFeFmEo/pwrxyEUz4DAEaI3XVuljq4Cw4Yz6fCZMIQP08qhv
r+BQOxl9yLsNmP8bLz4y6IwTSpVuArAcOeyMRXOe2b9HKzhQ1rqT1oVd1T5a
x+/bEmJMaKQa+QWZwoIV22/CCYQE1FLKTasCgr4wG7+r0XBOgxyR0ufy/Htm
+39HPs93RveujuAjpO8phQpH+/XfXiKq3+Us6lfsRiFCSgMFH6NRsoN0frtR
cVKyhlm4MybQCI3uGhdtrN9T9caLDw45E93MoiKqvBc1cOBp8+e9PuWu208o
o3oXIWH11z+Mp7+xeOy1YWedYsuvaXLq/HTlsfYCxVcdygmrnDRDrRYYxfyH
QUfH5di5kg27sdFZ66GNnK0q7NaHmM8bv37nrUcvXTB52OIp526cMzXbtD8r
Hoy2Rx548NGiYriy4gcffDAajeISePyqkykAAgICAgICgv9u4OF9vFJbW5vn
/+PHj8cbAPMHUpRKpQr5f0LuCimJm6jKCRQKEO3vSLR2JA5+8M7C/ieWn0hR
g3tTuwyfNnIWP6vxsmoPrQ0LZpTT7lA1C6iFlsuu9vImf0EOfI78s2Y3Z3Fz
Zp4x+NxW2qZ545X7hp19QrnibAnLKy8du2LZG25uh4upgS2DbiD/aL4AVfUy
+ibBDCoj6DA0MlagkQFsws9qvbTax6iDvC4g6OB8uvx/tIX8X5EA30HRCzxC
u2qEtYfpl3+F/x++nx4apPs0usTIdybbw+UA1Uc58IwGr8AnuVLinJowIuZP
14Qc1UG7Fe4G3AqPowquPeAyc3Y9b69+a9ELF55/dgkQ/hKqtIgaMWzQvTOm
nn5S33JFAowdfqZJvcbLbvOxZlRlwKCkrG/z/2DB8qjw//zEB35waMCfUTXR
lU20KkSjHhDwbmDzH2USBBmT5iY7eHguqgD9xYH6jz55+tqlFcMX3DVm09xp
2TZnVmrneWdpWZ+ysl5UUUl9gz2RSiekdDyudMFIxFHraohE96tOQEBAQEBA
QPDfgXzbLzzmuWXLlrz/5x//+Md8X7B8CwA5ARuj7YEhxZLJSCoZSabjcjop
yclYLJWQUvBlIpIWG7OiS/fJ/F9fMeoEijqliHrx4ZnN3K4QVwO0PCiovMzm
AF8VEvTYTybEV+NOrz6brpk3+x3qRt6AKzpREy6+1sXV0nbrkkV/Hz60X6/S
nJnnxRcM+fj9OU4Hygl32QyK+b8uwBs99BFI6RGSc/69brY9nH+4Hz4MfpiD
0LEcTj+scCB3B7qEBjLVcbPVby95dsw5p5YXo4mVkmJq+LAREMWoPwAFomvp
/OdR0zHWEnKaUYdlHkkPeFioC4OtymdXNfNGeHyoVOGwOY4uffS9JcBhaqJH
CTbeeU6p5ZsyhJQJAtRCDhUOGMO0KrzzvQ0v3bh04sC37hqhX3x3NspmpNh9
Dz6GpgCKSifcevuhRDomZRNSBmh/KhFLJ6LpBLzPSALE5WRc4f/w1U/6x0pA
QEBAQEBAcBRQaHsIy7Vr1+bH/2+//XbcGkzqNv8E/p+WEsgdJZ4UY0kpz/8l
Uc6m01K0rTMZS4otWTlY9/n8J+/4+Vm9KeD/55zR11O/XdiLkrcVp8rNYReS
AG57ZdiFsu7ddsQ/g5wVtb6lNY28yWPXAJP3chZUw0tvW7/m7YvPH4ZbWZUW
UeePPXPVe7OdbA1frzngrcV5L2HBjBN7cDIMiR8QSEA5azxc3YLZs0YO+1lx
EYXcYKnin/1sQDFVhCsCJv31Bra+mtmvA8HlsqO6bKTpGG2Ly9zEGXwNVY1s
rjgiLzT+Hf7/r4fSOiHH/1FfAAakjVGxCTIe5Kpadq1Y88Tly+4YNH/SyM2L
7s0mAs1hT7++faiiEqq4rHbnN3E5G4lKnalkhwjkPwoq4LDxf8L/CQgICAgI
CP4LgHt+4dx+IPnvv/8+Nv8E3H333fnWwPCV4pEoy2JG4f9iIhlNyLGELCop
QOl4LJkSk2mpNR0PZlPh6k1vvzzj1xPOP+lEijqxhJr38qNum9WPjPcNAU4b
5HVeW1WTYHTXVwVYQ5NgRtSd0aA2vrw+IOhRrS6j5216F1O3e6v2pl9djb19
yilq5JDT3nvzZSXJ3+zlDSGnGdi+s77Kr2S/g2oAOgr7/MmJ9HEacP/hHnoZ
k5O2cPbaebOf6X9G75ISpAJKS6jeZRSeBTh3eP868ybBXudjLCGnFRVZO7Ru
Oxr/B+0WoHVKbXIucj5OeQ/VY3j+uf5rSmswNDvg60oeQ2lm9vUtu5Z/+Oz4
uVPOnTfzUu17j2dFZu4rjxeh9nClV155tSRnZDmVONSalRPA/BMSSFk08q/M
CIgF6W0EBAQEBAQEBMcxcG4/9j+H/y5ZsiTv/z9r1qy8L1BXm2DE/9EUgByT
5HZJjspSTEmTTqaSWdAE2eSBrOjao1/x/PRfPjXxqrOKqL4UNXrIqYID1Zk2
esxBp97ZsNmH+KGxia+BZbPT4neogZ65HZsbPQYPo/ZwetamDXl2MvurH7nn
jlN6Iebft5iClZeeetBl3wZSIuyqdTmq/KAjgHba1EHOGFKmDLBBPa6BJfG9
g9WCLmt2IjLf6K4R7Aa/+0u63vrQ/RP79lFyroqRKShIgPIi6oSyohVLZ7vp
bT6+Gh6u26ELuyzwQ3gQPrtGYf4W3Lu5q273x+D/2Dm2oGRASWrizB7O2OQx
BPavDex6760nrn19ypjZk0du/WhWts025GflvZQS8vXrPk/JyWw6k4zFJIX8
t6eSkRTi/2kRJADh/wQEBAQEBAT/VcA8/5VXXsH9fwGvvfYazvkvcP5B+T+I
7UtRWW7FEqAjLkEA+Zfih7KpRu7LT+fMuHDOtIuuH933JMVVctnCZ9281ecy
sLYNTvumsNPYyFkCNpN7rzboMIQZnadhS7NLHxQ0brrKzeudrNkr7Pzw/YVD
BpyM29EC/5/4p/F7d1S57UbgpT7awO+rauSqQ4xFcbw0AP/HOT+IfBLy/4MD
tzxgIXRuexVqlMablFkY686tG2+68fJSpSigvEQpDVBi6p03N+wxuNnagLMW
VACqX+Cw/kLcu2AWwIjLuo/9VRgL5h1QYP8oN2cUGE3YZw4yG7y73n3r0csX
TBq4ZNrIrze9vPbNZ05SWp5dMnZM9OBBOZaURGQHGk+KbWmpPY2Sf1BhixJE
AhAQEBAQEBAc7yis/4X1hx56KF//++6772IvROz8g8sEgPyjRAg07B/F4/8d
cbEzLmbQSijUoJp979XzpoycXTHuVIrqV0qNG3mGk6lzCyYnqwq5dAFeHQYy
tl/bwtcdELY2cRbFRl4b4JTsEcHsEWr37NLc8ofryotRts8pfUquunCUSf1x
0LUt5LS6bFt8jBrYacBhaOG3BexWIJY47cdtU2PTS1hHzkI/OZc+PgNYeotg
8jvUTYIxyOvhoaBRfd7k4a0urvazNcvOHT0A8f9ilBFUVoQsmC49f9iO2krB
UeOkLWHPVmS+BBKg27Hf2C0B6GPbLNjfXSxszpWT47pgTut3mtyCwckZPIwq
2PBpYPuSFfeeu2jSoEV3X+D/cvWlw09D7Q+KqJXLlyflThFnuMmxSEqMpFD9
Lyhfwv8JCAgICAgI/muAa3uxELjtttvy/H/jxo2SYoeOqwByhcCKL6KS9o+S
ohWPlFg60Z6VWqPuL5c9/PP5U0fMmTJu2q8Hn1yCMkZWr3pDYNHQq0/QC7bN
IcHgs+nCrBUkAKx4bWqgZ02eag5WhDqnY+uSeS8MGnBSqZKP0f+U4tdefJCp
N/p4q4dRw8+DgiYkIILnq9eHHNXA/0OMKcSbcP4PLIH8Q/zkLPq4DeSfH2Is
3gZtgNY1Oy0BTuelUYsE1DpNqPbytazN+vSs6WUlVO/y3BRAr2LqxD7Uqnfm
evid9H6DizUB2VaqfXMJP1gChBwoHej/sDA9CgHHYlVBRqMM+Js9Cv/HzQLg
c2D+Aq0LCqZmTnvQ/rnbMHfJ9HHzJp697N4rNyx/uq/yyg3oP6g9hpLbQN6m
pHZJjsVlKZJMx2Rl2ovwfwICAgICAoLjH3mHT+D5mUzml7/8JfB/XP9rNpvT
6XQkEsFVAFKuUxhi/nEZef4D/+8QYykp2plozh6wrXjmlkVTRsyvGPbFwqk/
K0V5O5dePMLJWj2CwcPp/bwOubIzqOdXmDVD+GhDiLf4OQtvM3q4ur07tTdc
fynuNtWnmPr9ry/9sma9F3FOk+KNrwm7jcBFPQ5ViDU0C9WefVrQEV5HrukV
cqRXUoAanRbi//NDwxjmaz025KLfiKZm1H6HOuw0IMt9weC0qdAEDW8VmOpa
87qrrxheVpyTAL0VX6ZH7rvLSe9w0tVKvr1W6aeg8nPIhwfZ+DtwOcCx5f85
qs/p800BkBcQUxmit4RZNaoWZwygH5tpbWvDhq/X/WPZlLHzJ41e8OCvbrhi
UHkRRRWVvvjqazGU8oP4f1qxAAL+357K4CkAwv8JCAgICAgIjndgYh+LxVIp
lPM8btw45PaoTAEwDBONRiXFIyhXApCUY3I8kUnJ6WxMcUqUY20Z8VA24lr7
xsRFU0fPu/Mc0/J7ptx6WZmSvfPxyrleoJEsGpAHWu6z6QK0LsTqkDEjowFu
5uWsyEye3/neO3POPuvEUiXVf/AZfVYsfRE+dzqMQP6BdgYFE/ao7x49VprA
Hvt60v+1QP45OHOmoNkuCq+tqsVrVUxZzSjPn6/mbMaFcx4//ZSiUmUKAE/Z
XHXZuK2WzfDsvIKVqd8E/L/RrfXZq4ByN7HVfrvpx+D/6NVSmgIrVwH8v4lG
/cKwI2i+MCHsMB6yVW5b/fjcO8fMqzj3+SmXo/7HpcUnn9ovEHRLiSgyuo3G
kmJCymQj6Uw0HksS9k9AQEBAQEDwXwGc2I/Te84880xs/gPLYDCIRQGuAkCb
JuVISoymUVZESu4AapSVI1kppFrxxIJpIxdNGfbhczftVi07pS+yVP/5FcNd
tMVj1/kdaPjXubeqkbM08qYgalCrDToNQCM93DbHvpoZU/7SS0kWguVNv7nk
6+1bQvx2t90YclrdDk2Lr1ZoqMINqpSKzi4zSa4SBeH/Ry9ytJnr0fsYZ9SH
OWOINXgaVCHeEmBN8BSavdt4m373l1uuveZcIM5lCv/vU1p01mn9Vr+7UHDU
BD11QY+Rb9gQEvR+h9pTrwmzx7wuo6tztLGL5xtDtDZMayBACCilATmN46ct
YYe+df8XhqXTF0w+Z+6MC68ed2IRCN9i6r77Z8ALn+3IdsSlVFyOiHIElDL8
KcgxibQAICAgICAgIDjOgWk/zvBvb28vLy/Hyf99+vSJRqMdHR2SMjuQEwhJ
uT2ZEDvT8FVnKp2My9l4s0O7aMG00QvvGvT+4z8P29S33nw1qIfyUmrTuqVB
ztoiVPttuha+Fq04kLGMn1P5OI2XN3E2c9X6Dy4YPQR4Y3kx1bcPNXf24z6+
1qekBgFPA+0AAWxTIZw5L5euTlIaH1+J0ksI/z96ofB/rZvXwlJJ4NF29SM2
+u0ocQtVWzAm0HHAq70N2kYncv50stYX/j6zbyma8SlXVEDvEurheyc59qH2
bX5e52FUYafBa6tsEo59/W+u1kAJxQW0ywjUiI2A8gLHr+galAhUv/7T5347
f8qYR/88/FTQoaVUWd8+++ttrQcjHXImI6VTyc64KKUyUizRRvg/AQEBAQEB
wfEO7PAJ3B4kgM/nyzf/HTx4cGHnX1jG43Hg//FUok2MpNMo8ycrRZr2GxZM
Hbd48lnvP3Jx41crjaoPy/tQwP+vu+YC1BmKNfiAJTJWzz4tEEj4r5dWY4d/
N2dZ8eaLp/UtAsbYr4y6cNwQq2mdk61x2fVBztjotGBX/2Z3tatB5XXou6zd
C/g/0hGE/x/NgBvr4TUeXgVL5Q7nO/YaAw5TmLU2sajsIugwgJrzKTXCblrl
dRq9/NaqL1aOHT74xNKycqoYSYAi6upLR36zs8ov1LhZkABqP6vx0sf6eeW8
hjD/Dzsw+cfK0axUBCAjUHj90HWxmiCj8drUhzhdy1crV826dvaUEb8Zi1ob
UMXUhAk3Zzuz0faYnEgmpZQkJuKJSCKNil9+6j9ZAgICAgICAoJ/Czj5B7h9
Op3eu3dvPvnnkksukRR1ICnkvytBSAQWlEwhC6BMtLkjsHvVUxOWTR25sGJo
g+YVv73qht9eVVRClRZTmk2rwq5ad30VsMQDQl2YNTe5atwOnZs1eHgLazfO
qJiAh4v7FFMP3P03rgFYYrWHNQf5Gi+DOnkBUfSxVX5O1eTUhVAWuh7xf2Qg
o6iAnAQg+f9HNdjcXe2K3BSAMgtgVNi1Eg4D8OomJZsrwGlDLgNfrwq5djTs
Md/559/jQoBSpXHDWaf3+nT1Qj+/DZ5po9sK6u/YX0W3/z9IAOw7iuaSFP7v
4iEQ/0cVzUwlRIBD1SgHHJsD25YvmTHqhYnDftaHKlEaHFRt2pxKZdrbo2kQ
x3IyGgf+jwqDCQgICAgICAiOa+QG9hUhoNVqgfmXlgJ3oyZMmABf4akBvIGy
jhp9peVYVm7LtvHr35i0qGLMvElDtq6+t8mxQVv5dnExGvy/5Q/Xuek65CHD
m4D5e+o1AdbE7a9CfoxC3Z4dqisvG967DFHEn51c9OF7cwRHjZsxB3iz4htv
dtlRsTAQMx+jhnDt39TIK1noXWO5+dJUQv6PegTzKfTK7cXkH8LL6HBjtWan
BWkxm6YRnmyDCh6Ns2FzkNejxyfU8fbqNxc+37sUpQCVK1ZOJ5RQj91/h8tR
66ILyoqPeeQaASM5oFwULm3Ij//DpYVpFfB/H5qY0AYcqlZm0971s2ZPO/+W
nw86gaJO6kWNGDo4hhoBS9l0KiknYlIiCiqY8H8CAgICAgKC4xyY/8NSFMXl
y5fn838eeOABSakLkJRZAJwgFE+IyVSnFD2YbWd3fPz3JRWj5k0cXLl44kHH
+kZn9fW/GAOUD4iTWf2R22YNcNU+GnXjCgkGl10ddNXydsvGdcsH9u+LTSPH
jBhQbVwrOMzAzUKCPgyE316FBpwFvcuu9TImP20JMNZmoRblDtFaFKiEU6MQ
VH0PLUDiaITi0plLnsHD5n4mx/8DvDEg6L0ohwdEmaaRN7S4rPAUArQuzBkV
vaBxsSqfy8TYdKrKVfCU4WUoVaZ4+pZSN/zysm+2q310rfLIjtklgGZRqkvc
vF6h+t3+/z18gZT8f/w6wfYhp7bZa3Tv39Bs26x+d9Zzt1948ekUSIDSEmrJ
osVJ+BMR2xNiJCanxVRnQkr+1H+yBAQEBAQEBAT/LoDbiwlZklPPPf+P0tLS
Igp1d509+/V4PAqEX06i+kcxDjwIdQGWJTEbDzft/Oe8u4YvvWvoPx+7Krzn
nyFWt/ajRWXFVJ8i6o4/XoNoHlvjY5HXup8zAd1y0SYvX/v2oudO6o04YVkR
9YffX+vYb3Wz1V7eEBB0IU7tbdjSyOv9vNbP6+BXfs7ic1i9dkuIQU1+Fc6v
wSwuz/8VCUD4/1GLLv5vwZkzOOcnN/4PzJ/VwKMBgRbk9aAC3PXwvFA5MEiA
AOr5q/ILVW6uCiSAi6veu0v3u19e3pvKSQCIgaf33fzZ+x5Gqe/OdeYtsBjq
qtIttHjtDvzf/PL/w/9VwP9dfG6oH782qAUAo+qa0TAqugCJSjjzIK9z2baE
ncZG1txiU3/wjz/O/O3ZJ1N4furkxoBfjrWlkqKYzESlNOH/BAQEBAQEBMc7
ZMXPJC5lxFTnHZMrqC62tvbTD+OJSEQSxVRHMpltb0ee/1Iink20dIR3vP3I
RYunnPn2jDGhmmUHGI2Ltlxx6YheZdSJ5VSN/iMvbQ05a4Au+gSjT9jG2Ws9
3K4nH6nopzQFg3j52XuAB3pYs1KJ2d0ltieZNxZEjt3l8lJ6bPDT0+b/pshl
+B/+LP5/gR1Z2a6qAdboZqweZvtDd99RrnQHyLcJe3bWTC+3A56+02GElwR1
HOOMfpuukbH6GwxI03FWt03rYdQhl8HDVBZUIhQutT2zv7prEw5LW0KVC10t
DBRf0J4Xy+i9DiM2mELf2qtaWJVv90dzn7jpoqFlfZVuFPdMruiUU3JCkuVE
TIyiWTClIzaeNcON837qP2ICAgICAgICgu+BJKrrTYhyR1RKX3v9rzD/B4pe
V20UpWg8JUcSKWD9UrxDljJJ8WA2xn82987XJ5355r3n7F/3pOjYDMzt4w/m
l5ZRRcXUHX+5PshtC7K1XofeTauA/7u5Lxn7l3f+bUKfErTb0/pSq995xcNW
KyPAOSefLiJnJJT+OI4uCYCfptOmC7q2+fmdi+Y8e0IZIv+lVFF5cVEv1Nn5
yr27dD7hS4/D5KMNKIOIMYAEaGKrw6zVZzM0u2s9tNbPa910VXcZcs/4Tv7/
/U4blQkEWEuIMaEsJntlwL7pAFf1pW7pPbdfdTKFsoD6FRdts9akkxlJElPp
RN7/EySAKIq4cB6XyRMQEBAQEBAQHB+QU2JC7khnQAUMHja0qKS4SBmq9XoE
KRmPyem4lJETyWw6LbW3ZFON+1Tz5s+8YPaUUZ+/fku0/vPm/So/s+28sQNB
NvTuR+3ZoXbbaprYOn+DIeQ0u1jT/j2G8dde0JUBUrRp3ZtuusZL5zNAfmrW
SuLfjcJ0HU1eAgQFi4+vFmwW3lb34fsLzzilF54CwDF00Cmb1r3rYmr8QrWP
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
+A8fm9hS99UOm8pbq3PTFS8++3eJBP/Gy8/f6XMaPFZj7Qb12FNw2Y9USv11
yiS/Y6OfN7c1+ReHru7d85sv+GHLcOAUQEt+CinAnyx+oQ//gX5Onuyh1wVd
OoE2slstN/7lUjneXSsdM3rsuDFjkV8r5VTXLtSbbzwdEL73cBVuxuB3aP2c
WqDL3LYSXFNkKwtx+iCrC+w/qozkmIf6/vVexuRhTW3+T+QfTxBWBx2V1191
Ntn8K6HEyh+UAWD3p5RKJdVOQUEB6QLa2ScxAAAAAADAbyKeTMQTGbx6uXtn
j0K8yCmRKguKlC3hXalkPBPdmdvtWLP4ntdnDlw8o5+nYklw6zehWtVuYbP1
J+0Jx1NyOXVSvyLOpmGtanpb9eljR+JCDhl1/dXnsttINUXHrj77lm108H/8
BCxjRh9tAv//k0W+8H7/LGBvlX7Hjp1+pjSIu4MaBXsFX7fhonNOIxMBJp47
furUKShzlEkomZS649bL7VaLm6/yOU1OW4nAqhoEk1fcHlLP6/ZWBInRwf8P
ef4X8n8vY8G37N5N6F6ccZgvmTiqCO9txwd1YWExWf+XtO0FxpcA5HK5RCJp
bm6G/v8AAAAAAPxZQP4fTWai8ZiTqRXrnBVSiXLk6BGxeHM6Ec4ltjPGd1+Z
MWrx9IGG129uor9pYDWNrIX5Qf30v+ZKpNiFXp3/mOCwsDb9aaeNIPsiL75g
vMBW+VldI68Piob/X/x/755fWP//E8ZB/F/b4SpA3v/b/scN4lFfWNpdVp2b
rmK2VZ4zfoRSjuv/r7zygiVLXuzZU4FTAAk1dvRJFv1KN2cSeIOH07vtKoHR
iMPC1IK1tGMK0O7/v2OiHPH/Duv/7f6PkoKpN1+uxCeFTCZRkvofiQzlvFKq
A3369GltbYX9vwAAAAAA/JlIJaPRsEpdIo79lSslBdffeF06Hc4ld7fWb33r
oXPmzzjpvYcmhrd9GbKuxqUXdIVts7Z3Lyny/+Gn9GZsNQ66etLFp5Fl0Qsu
OMteV+FltYJtbcCuCtJa0g0+r1t7zZBp/1HbT3/f+i3EUR76/cOqCnFa3GaH
M3h5i4sxW3/WjRzeE/k/Muu77rxVU/7tGWOHKiQUip7dqbeXPuukLeKkYDwz
Dv1WvdPk5zQddo60HV2/7/jpuDOlY/0PSgqWLX66WIZLfySUVCZTyBRt+38R
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
UsRbCIhjJrD22/De3hBr9Nh0Qd7ispVb9B8rxXEYLz17v+CscTNGH2fw2cuD
rPqwvx9ahSLIahqZUmflW/NmjV40a6hbtzAXCaZjqXgiE01m8NRuTCyejOWr
/cnZ/fXXX3fv3h3l9ejUHjVqlNVqJW1+0dPQc/Jjgn/66ae+ffuSTOHBBx9E
j5MMgiwRkOeQIqJO/dACAAAAAOD/Rd4T0G04HB4+fDj66sedfyRSg8HQEo62
xkOuqrdem3PKCzPHTb/8ZOQ/PbsXuOsMIUZc9mfVft4oMLpOFzYIiD8wQpwe
+T/KcIOMQbDrg86KgFNX91NJgTj87sG/3e5iq92MGfk/vkZA450Ch/ctodcX
o54t9W/88JXZpy6eOdi+7vl2/8+2+38siSNClvRJGQ/SdZTaO53OM844gwz8
Kioq+vTTT1tbW9ETkNWT7QCk2qeqqqpr167kKsAzzzxDJgWgVyNbhsmHBlwX
AAAAAIA/NWT9P5vNotvPPvts7+L/KSPw0l8ilcvu5MxvvDp7xAszT5981gnI
f8aMGuxnKupZrc9eTvwf90jvbGGDgPgDo543+Om22b7I/3GGy+k8vHlAryLk
/1OuvUD0f3zkh5x6wVpyuP0fV9lxeNxAiCnZ8fMXr945Fvn/pi/++Uv+T6Qd
2TuxejLzt6mp6Z577lEoFOQ0v/fee0kXILK2nx8QoFaru3TpQp62ZMkS0hYY
PY6eTPYFw74AAAAAAPhTgzwhEolERcaMGUO2CqJbo96QwmSSu4WtJS+/OGPY
8zPPOL0fnn909RXnexlLkNUIdDlukM7qwf8hjrEgI+1w0OjY1rvtGrddhfz/
vDNHFEmps8YNFBwbXLQB5QUBXkyED/P7yft/kF7XYvvmtbnjXp891PL+3w7w
/4To/7GWlhaU1KNbMtKL1PCgO+iU/uKLLwoKCkiaP27cOLvdnmyHFAGiO2Qp
QKlUok8D9HySApAsgHQQ6uzPLQAAAAAAfj/kex99oZeUlFDtjBgxIhbF1/oj
kVgu0YD8f8FdY/89a3xvcf7p3XNuddv0yP/F6Uh4QJKfNXS6sEFA/JFhx/02
kfzj4HCdv8BokP9PueZiJUX17SlxczXI/9Hj6BRA58Jhfz+smqQAAfvaCP3t
wrtPf33OYP3bc37J/4mukz4/pM9nvsgfCTzLsiTZVygUPXv2XLFiBXlaQtws
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
qqqC25dfflmUC546dWpFRUV5efldd92FJ3v06HHkyBHwJ/BgnAvGJyaPUFBQ
UFBQULQ8xHr+LVu2iJqfvXr1Qt0PuAvT/rBq19XVkSVb4P++UDDOl7A73l4y
Y1yfDqT+57Zbrjbr99n1Cg8ndbE5wP9p8p9a+7NT8X8bd+Cqy0YC/79k9AUt
yf8J+edUwP+LuV1VuvWLHhr1zuzh+z59Nu4vBrbfmP83b/0PygWIQwPBS0il
0p49eyYnJ6empg4bNuzQoUM1NTV33nknnElKSrrgggsOHjzYeNQ4Soo11/uh
oKCgoKCg+O3ARby6unrkyJGYrIP1etOmTbhM4zY9Kn/ioJ+f+X+4xKZc+9aM
cX0zmVSGufXmSWb9XgenBP7v0Oc4IQogsoSU/1NrV3Ya/n/luBHA/8de2Bf5
f4vV/8MLOVhZqXHX8aOfvjV7xMqZI37477/igZP4v5+U7jVf8h+ZPHiPWCyG
HcFwUq/XT5o0SSwgXL16NTiNBx54AM+cd955P/74Iyb/a2trwefE4/Fme0MU
FBQUFBQUvxm4jr/99tvA/FG7e9iwYbywOw+0n+j8xOPYCIC5Pkwhkvofvqzk
wFdvzZzQvyPh/zfecBnwf6dBhaIolP9Ta5d2Gv5/2cWDgf9fOW4I1v+7OFUL
6P8I/J+oEpUYdrr2r1o0a8SKmWN02cvjgdJwg/5nhD8L/B9dB3B4PtHJiwPE
gd6/9NJLuI0I/gTIv8vlevDBB7FBoGvXrvv370exUPHpFBQUFBQUFC0MWLit
Vmvnzp1xyYYoID8/H8UAo9EoMH/U7oAlu76+njQL8GShD0bCdXxpdeHON2ZP
GtSF6H9eM/FC4P8uo9rF5gD/dxlkAj+h/J9au7LT8P+LRvQR9H8uAv5v5yRu
g9qlU5zt9wMvQQJtTurVbzWo3loye/iyWRfZ8z6OB0vh193A//lgs/N/lAsG
nxAUgBoCqCEGf+7atatHjx7Y/zt8+PDDhw9PmzYNuwPOP//8ffv28UL4UFdX
12xviIKCgoKCgqIpuPvuuzE7B7dXXHFFbW0tLuJk2q8QBfDCYo2BAPB/kruL
8dFQmZ9TvTbnusHnkflfE8ePAP7vMWpI8b9BCvzfwcoo/6fWzuw0/H/UkJ7A
/2/582UWTg38n/wWzj7/hzcA/N9hkHp1W4pyXl46Z8TSWRd7Dm6MB46Tny0f
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
j1l+LmMItLOEYDAoY1FBQQEGIl3LUwF/XT2BZIEMPjI6iVVQzlzl1LlMBisZ
ssSzljdUbVusY8qXEbth8qfwukLtwDxGKFYs9r/TYziNEqcRdBoBcQHQIjbU
JdYjM5dcWRT05gc9+x3pq9Z89OKbT/1j1EMN3uh+/oRHGr75eIsvX783cemY
wzvnHE3/KkdM5ZSlB3d/nRXqZrs0K3lJRuLizORFB9OWHEpfejB1mWxm2yw5
WJGdtjo7bW1myuqM5FXa8Css6f/1yW2/Tm4fLKZ16K1O2ls6Cx/rLJYRbryl
zbnEE8lIWyo/ZEbaV+YexzgICZ9m7Fou35uzd9X+pMX7EhftSVx4aF/oe8V5
yUpfGXJh5KdNXhLya9JWhMRL09dk7fl2985lWalrDqasytyxJCdxeV6ybMvy
U7/OS1t2KGVRdvLC7JQvsxK/yE9fmPTNlC8nd5/U79LXu50/tut547s3mPx4
6zXTnz60ZW6waHfQk+tzHvYahT75y7jcaal7v1m7fsb7H748dFjvHo/ccH2H
evUbmmn/seVCi9UxWikQZZY/lzPlkevUqXPJJZeItdm3b9/XXntt+vTpYttv
3rxZfHyMAB6LEKhhSeLFcdnSr/6fonadLjp7wrnfRth4ll9jRkbGpk2bFi5c
OG3aNDHvxau66667rrjiivPPPx8dak4uN9CQcv369du3b9+jRw9xxN5++235
S+3YsUPG7WJTTEazYU8wNTXvAkajNVXbunRuhBWwS0pKECOFU2CEWxdpTu9p
mxyrf1CPKemDGRBYG4HJn6x58+aHDh3SP724yZrJjLxlOf7222/Lly9/5513
Pvfccy+99BLy7sQd6Nev3z/+8Q95H3kwxfXDHyIQCFhLGk/ux0EIIb+JmOJi
n+uCnRzY7fZisyQfs4bMAvAIZIhDv48SE41+qBboihUrZDK68cYbb7/99mee
eWbDhg2YZTA6qTgYvj3Ct03+CB634XO5/E6X31Uotr18KTa/wxOUrcgIyoty
0ue2y+Z1u+RLp6fY8DocRQdd7uygP6/Enpy88eNPXu86umfT17rUnvjwuZMf
qftO/2aLJtyd9PWo3B2f5qUszEr66lDa17JlJi3Zn7gUlvz+HUuzk1eKaZ2V
+HV20oqc5DW5KWsPJa0+mLjiUMoK+AWyZSWHFPJNH2G5njx++xpBfnP/9cl7
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
B0hdBTQ=
     "], {{0, 768}, {1024, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{218., Automatic},
   ImageSizeRaw->{1024, 768},
   PlotRange->{{0, 1024}, {0, 768}}]}]], "Text",
 CellChangeTimes->{
  3.7657046782897635`*^9, 3.7657076560725374`*^9, {3.7657197494578285`*^9, 
   3.7657197561987953`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getNinepointcenter", "[", 
    RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "medians", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"medians", "=", 
       RowBox[{"getMedians", "[", 
        RowBox[{"p1", ",", "p2", ",", "p3"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"getCircumcenter", "@@", "medians"}]}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7657047341669097`*^9, 3.765704755293391*^9}, 
   3.765802204573437*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"shoot", " ", "ray", " ", "from", " ", "incenter"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"getFeuerbachpoint", "[", 
     RowBox[{"npc_", ",", "incenter_", ",", "inradius_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "inter", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ray", "[", 
       RowBox[{"incenter", ",", 
        RowBox[{"norm", "[", 
         RowBox[{"incenter", "-", "npc"}], "]"}], ",", "inradius"}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.765920396086056*^9, 3.765920498461627*^9}, {
  3.7659205565901484`*^9, 3.7659205627726126`*^9}, {3.76592059524376*^9, 
  3.765920639757697*^9}, {3.7659207086614256`*^9, 3.765920734197124*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getExcenters", "[", 
    RowBox[{"orbit_", ",", "normals_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"perps", ",", "perpsNeg", ",", "exc"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"perps", "=", 
       RowBox[{"perp", "/@", "normals"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"perpsNeg", "=", 
       RowBox[{"perpNeg", "/@", "normals"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"exc", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"interRays", "[", 
           RowBox[{"#1", ",", "#2", ",", "#3", ",", "#4"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"orbit", ",", "perps", ",", 
           RowBox[{"RotateLeft", "@", "orbit"}], ",", 
           RowBox[{"RotateLeft", "@", "perpsNeg"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "exc"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.765707688664742*^9, 3.765707727912359*^9}, {
  3.7657077730156746`*^9, 3.7657078147932343`*^9}, {3.7657083647133675`*^9, 
  3.7657086023546762`*^9}, {3.766135773631796*^9, 3.7661358384246206`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Gergonne Point:
perspector of ABC and its contact triangle Ta, Tb, Tc\
\>", "Subsubsection",
 CellChangeTimes->{{3.7662395260597963`*^9, 3.7662395583207273`*^9}, 
   3.768677229480315*^9, 3.7686798768775225`*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
JanZ7faDBw96PJ5z585JjpM0V5KtigAAAABeF4VCQcJLLpe7cOGCpJWysjKL
xaIoit517YTiqP7t7e2y7xJUq6urnU5nJBKRvLayCwZFAQAAALBnra+v3717
N51OR6PRw4cPV1RUOByOkZERvevaCfl8frOJbWhoyO/3S16TX6C+vn7zEWzj
4+P0hwQAAACgl7W1tcXFxUQiIfGkrq6uqqqqqalpYmJC77p2QqFQkLyWy+VS
qZTktfb2do/HI3mturpaEqv8IPSHBAAAAKCXTCYzPT3d19cXDAadTqfZbJaJ
ZDKpd107iv6QAAAAAHab5eXlkZGRUCjk9/uPHz9ut9uj0ej8/Lzede2oYn/I
WCwmWdVqtcrvIGHN7XZLfFMUhVH9AQAAAOywa9eu9fT0eL3epqamkydP+ny+
/v7+69ev613Xjir2h7xx40YikdjaztjQ0CC/SSQS2byFTe9KAQAAAOwVc3Nz
kkSsVqvb7Q4EAnu8419xbExFUSSsGQwGo9EokU1+H/ll5LfSu0AAAAAAe8Xl
y5dbW1tNJpPD4Th16pSElNnZ2dXVVb3r0kfxqXMzMzPRaFTymt1ul6RmsVha
Wlp6e3slry0vL6+trUmsk5mfPn2qd8kAAAAAStPFixc9Hs/+/fttNls4HE4m
k0tLSw8ePNC7Ln1I+JIIJkEsk8lIXpPoGgqF3G53TU2NhFnJa5FIZGRkZHFx
UQKdxDqZWe+SAQAAAJSmWCxmt9vLy8stFktHR8fKysr9+/fz+bzedems2B8y
Ho8HAgGz2Sx5TX4iq9Uq8S2RSMhXMoPMpnelAAAAAEpKcUiNgYGB+vr6iooK
m83W29srSe3hw4cbGxuvcmNPnqiyQgmA8v6aNEUV+0MuLCwoihIMBpubm10u
l4S1pqamcDgsH87MzGQyGfpDAgAAAHiFioPVnz9/XmJaZWWlw+EYGhqSz199
7z7JaA8fqvfva++vNgZum2J/SPmV0ul0Mpns7u72+/0S1urq6o4ePep0OqPR
qOQ1+kMCAAAAeIWKj4HeHArSYDC43e54PL4tG8vntaS2sqK9v7YdLIu/ldls
NhqN8otJXlMUhf6QAAAAAF6he/fuzc/Px2Kx06dPHzly5MCBA36//9KlS9uy
sR/9SJ2eVvv61IkJ9e/+Ts1m1UePXpcmtiLJtuPj45LXmpubbTabyWQ6duzY
5viZU1NTN2/elNSWz+dJbQAAAABexq1btyYmJjo6OlpbWxsbGy0Wy9mzZ2dn
Z7dlY6mU2tWlut3q2bPq8LC6sKDevq3ltddKsS1yYGCgra3NbrdLyJW85nQ6
5acbGxuTb7PZLGOzAAAAAHgZ6XRaUZRAIODz+bxer9vt7urqSkmq2g6JhOrz
qUaj2tCghkJqPK7ltWx2W7a1/Yo/neQ1k8lkMBiKj8yWvCaZTu8CAQAAALzG
rl692tnZ6XQ6PR5PS0tLMBgcHh5eWlralo0lk2owqJrNqtOpTfT1ab0iM5lt
2db2W11dnZ2dlbx25swZl8tlNpttNpv8jPIbDg4OXrlyhf6QAAAAAD6xmZkZ
yRo1NTUSN9ra2rq6uiYnJ+/cubMtG5ubUyMR1WrVekIGAtp0PK6NN/J6Wl9f
l7yWTqdHR0fD4bDb7a6vrz906JDJZDpx4oTkNfpDAgAAAPjEEomEz+czGo0N
DQ2hUCgejy8sLGS3qWti8Z41r1frDyl5TVHUdHpbtrWDJJTJ7xaJROx2e1VV
VVlZmeS1YDBIf0gAAAAAL6r4+LDR0dHGxkaDwWCz2aLRqCS127dvP9qmQT8k
l0k6k4zW0qKePKlFtp4e9dq1bdnWDpJsm0qlJK+Fw2GXyyVJzWq1er3e9vb2
/v7+qampzSa2x48f610pAAAAgN1OktrGxobEh8HBQYlp5eXltbW13d3dkikk
qW1s03D6Kytav8dIRG1rU5uatDvXOjvVq1e3ZVs7SH7GzQeLT05O9vT0BINB
SWp2u/3gwYMej+fcuXOS4yTNbVd7JQAAAIASUigUJGLkcrkLFy5IpigrK7NY
LIqibO9WM5l/ec5aKKQ1q1mtWnCbm9veje6g4qj+7e3t8qtKBK6urnY6nZFI
RPLaymt7dx4AAACAHbO+vn737t10Oh2NRg8fPlxRUeFwOEZGRrZ3q/fuqfPz
aiymhsPq8eNqTY165ow6M7O9G91B+Xx+s4ltaGjI7/dLXpPftr6+fvMRbOPj
4/SHBAAAAPDx1tbWFhcXE4mEhIi6urqqqqqmpqaJiYnt3qq6uKg9be3cObWx
UTWZ1NZW9fLl7d3oDioUCpLXcrlcKpWSvNbe3u7xeCSvVVdXSxaWn5r+kAAA
AAA+XiaTmZ6e7uvrCwaDTqfTbDbLRDKZ3N6t5nLabWtzc2pHh3bDmtGojQkp
2a3k0B8SAAAAwCezvLw8MjISCoX8fv/x48ftdns0Gp2fn9/erebzajar5bXz
51WbTa2sVF0udWxsezeqh2J/yFgsJinYarXKLyxhze12S3xTFIVR/QEAAAA8
07Vr13p6erxeb1NT08mTJ30+X39///Xr17d3q4WCltckoXR3q3/8x+pbb6m1
teoHH2zvRvVQ7A9548aNRCKxtQWzoaFBfu1IJLJ5C5velQIAAADYXebm5iQv
WK1Wt9sdCAR2unteX59qNqtvvKG9y3TpKo66qSiKhDWDwWA0GiWyyS8vv/lc
CY2ECQAAAOCVuHz5cmtrq8lkcjgcp06dkigxOzu7urq6Q5v/4AOtTe2tt7T2
te5ura0tn9fa3UpO8Xl2MzMz0WhU8prdbpekZrFYWlpaent7Ja8tLy+vra1J
rJOZnz59qnfJAAAAAPR08eJFj8ezf/9+m80WDoeTyeTS0tKDBw92aPNjY9rd
apWV2p1r589rd7Fls1peKzkSviSCSRDLZDKS1yQUh0Iht9tdU1MjMVnyWiQS
GRkZWVxclEAnsU5m1rtkAAAAAHqKxWJ2u728vNxisXR0dKysrNy/fz+/Y3Ep
kdDGgTQatTEhOzq08SElr5X0aBvF/pDxeDwQCJjNZslr8uNbrVaJb4lEQr6S
GQql2LwIAAAA4CcqDnwxMDBQX19fUVFhs9l6e3slqT18+HBjY2OH6kgm1WBQ
u2HN7VYjETUeVxcW1JJ++lixP+TCwoKiKMFgsLm52eVySVhramoKh8Py4czM
TCaToT8kAAAAsAcVh5Q/f/68xLTKykqHwzE0NCSf72gfvLk5LaNZrarXq4ZC
2hgj09NqJrNDW9dDsT+k/P7pdDqZTHZ3d/v9fglrdXV1R48edTqd0WhU8hr9
IQEAAIA9qPiw5s2hIA0Gg9vtjsfjO11HKqV2dWnNaj6f1sS22bi2x8axLx4F
s9lsNBrlWEheUxSF/pAAAADAHnTv3r35+flYLHb69OkjR44cOHDA7/dfunRp
p+v4+79XJya0u9X++q/VwUE1FlPn56W4nS5DV5Kax8fHJa81NzfbbDaTyXTs
2LHNkTmnpqZu3rwpqS2fz5PaAAAAgL3g1q1bExMTHR0dra2tjY2NFovl7Nmz
s7OzO13Hgwfq0pJ255psWmLawoJ654766NFOl6GrYivnwMBAW1ub3W6X+Cx5
zel0ykEZGxuTb7PZ7M6N+gIAAABAP+l0WlGUQCDg8/m8Xq/b7e7q6kqlUjtd
R6GgPn6sDf9YfMmfe7UJqXhQJK+ZTCaDwVB8ZLbktVxJD5IJAAAAYNPVq1c7
OzudTqfH42lpaQkGg8PDw0tLSztdx5Mn6saGFtCKL/lzrw6psbq6Ojs7K3nt
zJkzLpfLbDbbbDY5QHJ0BgcHr1y5Qn9IAAAAoOTNzMxIIqipqZFQ0NbW1tXV
NTk5eefOnZ2u4+lTLZpJ+ii+5M+9Olj9+vq65LV0Oj06OhoOh91ud319/aFD
h0wm04kTJySv0R8SAAAAKHmJRMLn8xmNxoaGhlAoFI/HFxYWsiX9gLPXiIQy
OSKRSMRut1dVVZWVlUleCwaD9IcEAAAASlXxIV+jo6ONjY0Gg8Fms0WjUUlq
t2/ffrTHRvbYtSQ1p1IpyWvhcNjlcklSs1qtXq+3vb29v79/ampqs4nt8ePH
elcKAAAA4NWQpLaxsSEX+YODgxLTysvLa2tru7u75cpfkpp8pXeB0MgB2nxk
+eTkZE9PTzAYlKRmt9sPHjzo8XjOnTsnOU7SHC2hAAAAQMkoFAoSBHK53IUL
F+TKv6yszGKxKIqid114tuKo/u3t7XK8JFxXV1c7nc5IJCJ5bWWPPT0cAAAA
KGHr6+t3795Np9PRaPTw4cMVFRUOh2NkZETvuvBs+Xx+s4ltaGjI7/dLXpOj
Vl9fv/kItvHxcfpDAgAAAKVhbW1tcXExkUjIpX5dXV1VVVVTU9PExITedeHZ
CoWC5LVcLpdKpSSvtbe3ezweyWvV1dWSsuUg0h8SAAAAKA2ZTGZ6erqvry8Y
DDqdTrPZLBPJZFLvuvAT0B8SAAAAKG3Ly8sjIyOhUMjv9x8/ftxut0ej0fn5
eb3rwk9Q7A8Zi8UkX1utVjl2EtbcbrfEN0VRGNUfAAAAeK1du3atp6fH6/U2
NTWdPHnS5/P19/dfv35d77rwExT7Q964cSORSGxtG21oaJDjGIlENm9h07tS
AAAAAJ/E3NycXNVbrVa32x0IBOhE99opjuepKIqENYPBYDQaJbLJMZWjKcdX
7wIBAAAAfBKXL19ubW01mUwOh+PUqVNywT87O7u6uqp3XXhexSflzczMRKNR
yWt2u12SmsViaWlp6e3tlby2vLy8trYmsU5mfvr0qd4lAwAAAPjJLl686PF4
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
Pp/X63W73V1dXSlGRMQeUDz5Ja+ZTCaDwVB8ZLbkNcl0ehcIAACAPe3q1aud
nZ1Op9Pj8bS0tASDweHh4SWeNYY9YHV1dXZ2VvLamTNnXC6X2Wy22WzyjyD/
BYODg1euXKE/JAAAAHQ0MzMjV6o1NTVysdrW1tbV1TU5OXnnzh296wK23fr6
uuS1dDo9OjoaDofdbnd9ff2hQ4dMJtOJEyckr9EfEgAAADpKJBI+n89oNDY0
NIRCoXg8vrCwIBeoetcF7BwJZXLmRyIRu91eVVVVVlYmeS0YDNIfEgAAADuv
+PCp0dHRxsZGg8Fgs9mi0agktdu3bz969EjvArG9CgU1n9ceVvDggbq2pko6
v3dPXV1VMxlJLmo6raZS6vXr2nPn5M/bt7WvZB6ZU+aXpWTZUuobmM1mU6mU
5LVwOOxyuSSpWa1Wr9fb3t7e398/NTW12cT2+PFjvSsFAABA6ZOktrGxIRef
g4ODEtPKy8tra2u7u7vlilSSmnyld4HYXpK2JHxJEJM4trioLiyo8/Pq7Kw6
Pa3G46qiqF1dan+/Ojys/Tk5qX0l88icm/FNli2lvoHyj7D5aPjJycmenp5g
MChJzW63Hzx40OPxnDt3TnKcpDlanAEAALADCoWCXKDmcrkLFy7IFWlZWZnF
YlHkGh17Qy6nZa65OTWZVBMJLZHFYlpG6+tTIxE1EFDdbtXnU4NB7U8JbvKV
zCNzyvyylCxbkn0Di6P6t7e3y/9FeXl5dXW10+mMRCKS1+QrvQsEAABA6Vtf
X7979246nY5Go4cPH66oqHA4HCMjI3rXhY/YfGp3Pq8+eqT1P8xmf/y6c0dr
5EqlfvzabBqTMHX5snrpkhasJibUixc/EsT6+9XBQW36/ffVCxfUjg713Dk1
HFZDIfXsWW1CopkENIlpEtaamlS/X/vz1Cn19GltHplB5peluru19chqh4a0
CVmzrFP+lG3JFmW7snWpQSqReqQqqW1rqem0FvcyGa135b17u6iDZT6f32xi
Gxoa8vv9ktfkv6O+vn7zEWzj4+Ml3B/y7l3tSMlxHBvT2lIlkstRu3pVO17y
LtPyiXwu38o8ctDlXJLj/sEH2idyuIuv4vlWnEfOhOVl7cjyzHkAAIDnsba2
tri4mEgk5BK0rq6uqqqqqalpQi6ysZvIxe3Dh+r9+/8SzRYWfvySy+bhYa3N
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
pwsBtbTQX7Hv0DSlki5bS0mRGhudtOkMwzAMwzDLBkxtbGwMgVxRURE0zdPT
MyQkZN++fYjuYGpjrlQtUVy/k59PSVBQMwgaNA1xHZQN4gZ9O3iQgr35Zl4x
jLtw5Qr5Wk+P9P77Ul0dJfru3Xs9KemqwTD6k5+cu+eed7/0pfJvfatg06a9
P/5xWmTk66+++mZlZWVbW5trrpILYGrYwO5u+h7GYqFJvXcvVe/H4/gQ+lSv
7+PH6a+O8pgwNbmcvBVHg2EYhmEYZpUxPj4OUxscHMzJyQkMDPTw8FAqlTab
zdnbNQtiTW33bqrx6OFBqY8KBcV1mZmUEjk4SOmRK94WmGGciRCc8PBPNm26
/qUvTfzt3x7/n/8z5ytfefHf/i0+IuLXFosFvtbt2rVQMXmxgc3NtCxuNn9O
gUeRKglZwyeAnx99e1NdvbJbzDAMwzAMs/wMDw9fuHDBbrdbrdbg4GAvLy+t
VltWVubs7boB/MvxlfvRo/R1OkxNp6PcJ7mcKsIZjRS2VVVRbhieOfNLeIZZ
3WB2QF7ga6+++klk5OSTT17/t38788//fHT9+tfvu2/vj36UGR5u3bPnQHl5
owvmQ4qKJR0dVPESymkykXnNKmviyceO0TM1Gunpp6XNmyVvb7q/fz83T2QY
hmEYZrUxMDDQ0dFRXV2dlpYWGhrq6+sbGxtbBflxGUQsmpZGlR79/cnUEMsh
qMvJkQ4fpr+eOUO5YePjFM5NTjp7ixlmBRHfZkBh3nzzEyibTvfHgIA/eHq+
e9ddb//Lv9g2bXpdpcqHr7lgPqToBXDkiLRnD62UQbt0utllTTwZnwaY/vgc
ePRR6e67qTu2QkGdstvbKVPalS60ZRiGYRiGWRQ9PT3Hjh3Lz883mUw6nU6h
UOBOQ0ODs7frBiLLC1Gcry9lP8rlFKo1N9Of3K3WHcMsF6Jj9d69Ez/72dU7
7xy9447T69Yd/dKX3oCvhYdbXTAfUmxzTg4tlMtkUkDA1LcxM2VNPNlmo9U3
CJqPD/Xgvu02+mSIiblR5J9hGIZhGGZ10NXVVVZWZjabExISoqKiNBqN1Wpt
cYGWRdOvYUlNvankY0KCVFw81TptSbtILRpR0u6jj6SPP+alPmYlEQtPVVWT
qanXwsKuKhQXvve9E3feWf297x1SKN4KD897+eWD+/fXNjW1dnWd/eMfh5y9
yTe2ubaWCjyKYkEwtZoaWiab9clNTdTTzWSi7ttqNVlbbCyVx+SVNYZhGIZh
VhknTpzIzc2NiYmJjY3duXNnXFxcQUHByZMnnb1d5GIVFbSgFhdHX7kjHtu+
nWq+5eRQxlRHBykRxMi1yomIknYXLlBeJl9Ex6wg4pKu7u5P6uomCwsnEhM/
+vnPP3z44e7Nm9u+9726TZvKAwNtv/xlblraa+XlVfA1Z2/yjW0+f1567z1a
GoOjwcXa2mbRLvHk3l4JH1ENDfRRcOAAlYd9+20qj8nXrDEMwzAMs8pobm62
WCwqlcpgMBiNRtdJlBJ9bx3V3mQyupLFZnPtko9iOdBulz74wLW3lVm1iK7x
VVWTv/71NaXy6sMP999556kvfanxzjv3P/zwK0rldvhaU1Ors7eUYRiGYRiG
uRV1dXWJiYlyuVyr1SYnJ9tstqampt4V7yc9OUlfmyPI7OuTTpygKtxZWdJL
L5GshYZK27aRqVmt1PfWpVercNyamkgpy8qoQmVDAxWpvHTJ2ZvFrC0cK1CY
Ke+//0lp6fW0tAm9fuiJJz64++5T991X7eu7/5FHUrdv3//b39bU1Z06dqz3
3Xcvt7Zer62dPHjwk/x8SdyKiijfuLSUBrLdzutWDMMwDMMwK82RI0eio6N9
fHzUanV6enpDQ0NnZ+elFfcLEV62tNC1J3FxUlQU1X6ErMXGSunpJEAwtZ4e
174OrKuLNM1spi3OyKD2b1C2M2ecvVnM2kJ89XHx4iednZNNTddff/3KL385
JJd/+NBDp+6/v/Guuw4FBJSFhZUajQeSk5tefbXntdeu/cd/XN+27ROFQhK3
LVvoKlGNhq4OwwTkK8IYhmEYhmFWmNLSUo1G4+npqVQqMzMzu7u7L168OLLi
ZTtE4tbBg9KvfkV5j3K5FBREsgb1qa52k4xC0axX3G7R2ZdhVorW1uvQse3b
x370o8HvfKfPw6P7W9+q8fHZ9/jjSc8882ZIyAn86bHHrn3rW9dvu00St9tv
p6r4np4kbkYj11pkGIZhGIZZIcbHx2Fkg4ODhYWFYWFhXl5earU6Ly8PpjY0
NDS2UqlOonriqVNkZPn59B2+TkfBYXg49b+2WGipqqPDtbMfBXY7rUAgrt25
k5YGsSd790rHjzt7s5i1ztmzk1VVE/C12NjRrVsHfX37/+//PblxY+2999o2
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
+7I3/+5FnyM/uvvMt79N9Ub+7u+kv/5r6W/+hu6sWyd9/evSN75BF7ht2DDp
7T3x3e9e27Tpw4cfPimX10RGvvfb39qrqs69//7AwMDHzt5jhmEYhmGY1cCJ
Eydyc3NjYmJiY2N37twZFxdXUFBwcikkAqbmuEymuJgukAkMpA5jKhX5WlIS
Fe1fhc3UbkFnp1RSQlEylBWmFhND1w6dOOHszWLWBOKaNczslha6gLLl3esd
LVe720f73mq6vOe1cZ3hkvrFs1ti2n+yK+eJ/VHykz/4gbRxo/TNb0pf/rL0
ta9J//APVNj/3nulf/1XWhmXy68/88x4SMiVJ574L1/fM3fddeL733/vpz9t
3LGjJi+vA77m7D1mGIZhGIZZDTQ3N1ssFpVKZTAYjEYj7ldWVnYvxXKXaKYG
QZHLqR00Yj/42hpNABSJaDgckDUun8c4l8/OTj4eZtm7rfmFF6Sf/ITsbN06
6dvfpjt/cjRqx6ZSSf/+7xMvvTSWljaiUg3ed1//X/3VB1/7Wss//VO5r28W
fK2q6pyzd49hGIZhGGY1UFdXl5iYKJfLtVptcnKyzWZramrq7e1d8AuK2o8d
HbSmBjWJjJS2bKFIT62mNTXEhk1N0iLewT0RiWg4KLm5VNOhqko6c8bZm8W4
EGLuXL4s9fWR39vtNGqam6mK46FDNHfefpuWxhxd4yFbC+fCBZqHeEVMUY1G
Cgigdu2xsZLF8t5/Vv72l92Yrc8+S3a2ebP09NNSRAR9x5CYKKWk0FcO2dmT
RUXXysvHUlKGw8P/6OfXv2nTaZms+a673t66tcFsbqmv7+joON/f/8fx8fGJ
iYnJ1Vk2iGEYhmEYZnk5cuRIdHS0j4+PWq1OT09vaGjo7Oy8dOnSgl9Q1H48
coSyHxHswdTCwmgpKT1dKi+n+BOmNjy8hDvhDohENEisIxGts1NaxHFmVh9i
7pw/T2MEZg+Xys4mOcJU0utpYRo6ZbXSnyBxi2rT19pKtVlF4X68dHy8lJcH
M2zK7U7dPbh1K9lbaCg1rIejvfEGtQqsq5MaG0ke29omOzqud3VNvP322Guv
fRQXd2nr1r5Nm85+7Wunvve9JpXqcFJSYVFRfVvbH0ZHR8fGxiZWZ0MOhmEY
hmGY5aW0tFSj0Xh6eiqVyszMzO7u7osXL46MjCz4BUV2VU4OXafm4UFrajA1
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
vVrMrbBYe2BmZmb6+vqg10pLS7VarVKp3Lt3b7i+8fDw8NmzZ6HalpeXWbUx
DMMwscK5c+cGBgbq6uoqKioKCwvVanVNTc3o6Ki0piIZfuL5DiMq9g0PS7W1
5AUyGGj+Wl4ezdb6xS92en2iF6G2xGNDk/qE1rtyhcyTsVWEn9kgr79+UwVo
tVRV1Oul7uJzc5FeLeZWWKw9MMIr0t7eXllZqdfr8/PzodeMRiMubb29vfjr
/Pz8MnsPGIZhmBghGAx6vV6bzVZWVmaxWEwmU0NDw8T7YYGoSLaTBUZuZ2aG
JmatbRDNJRG2EuGivHCBcpncJjmuEQd1RgYZjBOyH3gMwGJt84hLG/SaUqmU
yWSiZTb02iIPeoZhGCZGOHHiRH19vdFoNJvN5eXldru9o6NrfPwsLmUdHZTJ
Sk2lumS9vRFbQwgIRClQZ4gt8/IogMH6HDhAL+5kP7G4Bdt3cpK2b1cXWU4b
GyndcvgwVZ04fpyKGty7H/nSEiVmgkHK0Bw5Qu/FuMHntLbSTzzHK3gdf8Uy
WBLLMzuOyFO3t1NTvpQUSpfX1ydUP/BYAgef3U5KTa0mcc1i7QGYm5sbHR2F
Xquuri4oKFCpVFqtFpe5969xHcePH2c/JMMwDBMTBAIBXMsyMzNxOausrGxo
aOjuHhwdnUUU19REzsO0NJoyhnA7Uly/fnPyGqL+sjIKYLBWFRUUvRw9SnqN
2RQic1leTls2I4MkscVCwSKieSi4e/cjh/6CEMO+qamhgYLgMitLev552k/4
ied4Ba/jr2y5ixxiBuiBA2SATE2l+zBQ0onUDzyWEFMLodSMRhZrD8LS0hL0
WjAY7OnpcblcJpNJp9NlZWUplcri4mLoNfZDMgzDMDGB3+8vKytTKBR5eXkO
h6O/v9/vnxwZmUe0UFdHcYJCQRLJ74/0inIAs01gC2I7Co9pUhLlXeTyD4qG
37sfuSgvCFH25JP09ocflj72Maoiip94jlfwOv6KZbAklmd2HFFbNXwEsZc4
yhEHpXjwue6BgSjDdc3tduv1erlcnpSUBL1mt9vZD8kwDMNEM6I9TU9PT2Fh
oUwm02q1Ho9ncnJyfHx2dPTayAiV9TAYokisTU9T5TqHg9YHMgLhf1WVNDDA
2YHNcf48ZSgRC0KXISjEZs3JoexL2H2FbY3XEeKH7ZG9vVSLE0H/m29Kb7wh
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
SsowzEHjdru1Wm1ycrJKpWpoaJifn799+/ZGYqxEXi9toCoUUqFm03zik4af
rQ0fd938kZ6cbZBw+AFHPzIME3YeF6rNHCAi7h3NjfbFbG8yUVuj0dPTpZQU
yr+ZmiplZX2WO5g37hIVEQ85NDRksVgUCgX0GgwntVoN+ebxePAjvGGTtyYZ
hjkgxOHZrq6uvLy8lJQUjUbT3t4OpXb37t0HDx5E+gLDwczlza5fflLxr2u2
gmvN/+LpVXVMKq2LP9F/+iPFH3Lz/79yE0c/MgwTfkReEYOBfDuZmeTbGRmJ
9GXFHyKj1MICxUNCHnd2Unw8mt5oJOdadjaFWOTmkq+trIxCJbEoNDVJXV0k
7nBLLl9+6GvjKsnxjoiH9Pv9LpfLarWWl5cXFRVBrJWVldntdrw4MTERDAY5
HpJhmANBpKVtamqCTEtNTdXpdD09PXg9cfz4y3MbH/Td7q2ZH3rVPfK//z++
Z9Wz/027otT/7rjh9z+z/aGbs2MwDBMBfD6qfA2ZplY/LDLS2EiygDlgRK2W
e/fo/Bpm+6tXSbV5vVR3xOWiY2t2O+ULhnYrLqZoVNwSjYbi5LVaktC4MZB4
09MSV0mOd0Q8JGynQCDg9XpbW1vNZjPEWm5ubmFhoV6vdzqd0GscD8kwzIEg
Cj6GUkHKZDKDwTCERSeR+O3S2m/en//o7cmgwXbru9k3/6fk5Wczf6PSf/Iz
x+/cQ5/OskONYZgIgJnYYKBwbIWCnjgc9Ap7+MOKiJCcnKToR4uF1JlcTncl
NZUiJJOTyeUJIc23J1ERFpRCocjIyIAdBb3mcrk4HpJhmANheXl5amrK7Xaf
OXOmoKAgKyvLbDaPJFicze+uzm281Xen3Lb0P0rnv3fs6jczff+Lbvi/1/Ue
H3r/3/wfTd7mYkYJRygsamPjYanc6WlK9HDvXqQv6xGIPDk3b5I3gJ3AcQBu
H24ibmVDg/Tqq3RwNj9fstnYdRMJRIQkbsn4OHnZnE5ysUE863TkXFOpKEFV
XR3n6ExY5ufnBwcHodfKy8s1Go1cLj9+/Hgoq/bY2Nj169eh2jY2Nli1MQyz
N27evDk8PNzQ0FBZWVlcXKxSqerq6nxYcRKJ/xib2Kyquf+j7F//07HZH+S9
n67v/kFd9T8NFP1o/t8sK++9+wkWaizXHMuQQOB+370r3b79ML9DczMdS4Fe
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
YCpoa6O5CrMB5gG5nDwV589z9CMTxQh3m89HuUohyrCAQbKhB2M9y8+n3nzm
DGWM9PspGDLKLYe4YGVlZXp6GnrNbrcXFRVBqanVaqPRaLPZOjs7x8bGQi62
T8IeUMQwzIEDpfbgwQMM5+7ubsi05OTknJyc1tZWjHEotQdRriK2H146doye
2GxSd7f03nvkU4NSu38/0hcqLS09TOZvsdD69txztL41NNDKxnVv94xIfi6+
IhHryjBfjTgP1NtLO0mYq0JVH2HzwsKdmeHoRyaKEfuii4tUVWJ6mg6pDQ3R
ktbSQjEN6Mdvvkkxk4EArXYffxzpK45/YLbBToMiGx0dbWtrs1qtUGparTY7
O7u0tLS+vh46DmouZuKjGIb5cjY3NzHk19bWWlpaMMaTkpJUKpULM3BMsD33
Ix7xPPoiMURBZ6xs2dl0pbDWTp+m5Q56jWdTholvRKY9GLYKRTTPVQyzG4JB
imDp6KDFLNSbOT9keBFZ/W02G6y45OTkzMxMvV7vcDig1+b5YADDxD7379+/
e/fu8vLy22+/XVpa+oMf/KCiosLj8UT6unaG8Kz19tIRfZWKHvE8+s44i4LO
589T1BPstGPHKGbTYqFV7oMPOIcWw8QhojjgjRuU6bylhRIgYaJKT6cUpm1t
UThXMcxuuHOHzhpAr/n9D5XariqvifhgDgLeKxsbGyEXW09Pj9lshl47duxY
Xl5eqATb4OAgx0MyTKyD8bu6unrz5s133333jTfegF5rbW29cuVKpK9rZ4jY
DCwWFy9SSAYe8Tz6lI+w2WZmKOrJaqVoTY2G9thhvOHC2WZjmPhD7NLAmHU4
KPhZq334aLdT8rzom6sYZjfcv096LRh8WNxxt7JLxAdzce29srm5Cb22trY2
PT0NvWaz2WDIQa9lZmbqdDroNY6HZJhY5+OPP15aWgoEAj6f79y5c//+7/+O
J4ucU/7Q2F7QGY94ztFQDBN/iPhnl4tyMMhktD8TqijCmUsZ5rP4YA6e3Dcc
D8kw8cr9+/d/85vfQK/96le/unLlCpTa3NwcXon0dcUt23OiiDwDeOX99zk/
JMPEPCK268YN8qlBqWGAa7VSVhbVp6qr48ylDPNHlpelqSkq5Xb2LH3hyfAw
1XfD8Jibo3wm7HveMSIe0u12W61WtVqt1Woh1gwGA+Sby+XirP4ME6P8/ve/
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
HqaweIeD8kHpdLSg5uRQ2Arm07IycrGFTrS1tHwuQjJOXekicq+np8dsNkOv
wa7Ly8sLlWAbHBxMzHhIcern7NmzaAootZSUFCjZJ598MicnB4buI0unibQk
b7zxxg9/+EPYxn/2Z3/2F3/xF0888cTRo0e7sagwzOFz48aN4eHhhoaGjo4O
6DWPx1NeXv7888+jQ37rW9/68Y9/bDQaOePNYYBpMmTPj43RIrPVhsRSU11N
S4rPR3qN+TJEG6KtTCZyruXm0spcW0thL1iH9444UdbaSot+cjKldHS7d/jb
IlDzMQlQxWGLV16hXP0Qa6mp5Oh5fOJJcV1cOXaHiMycTU0Uabx1VwS229mz
pItZ+TJMTCImxJs3KXs/9NeFC1JPD4my+nqppobm01OnKN8rxnx+Pg3+rRGS
cXpIVUTuTU9PQ6/ZbLbS0lLotczMTJ1OB72WmPGQ4tQPzF2VSnXkyBEoNUi2
tLS0kpISaFi0G97zh8/LdpHwv6qq6oUXXoBtDKUmwiDRvJH6OExCIbLiQK95
vd6tcbnPPPNMKJcp3jDNQUKHxvborFAs3C6zxSc0oqix+NpNOpDHInI1bk/R
uD9EGjPI82eeIbEmUoPyebQDRJw+hDpDU3O8McPEMyLZq99P22uYT00m2mpT
KCjuOSXlcxGS8Z7+leMhtyJO/QgrV5RXs1qt3i85ky5KaRuNxvT0dPzWE088
ERJ6Wq3WveMtXIbZA8Kx+/7773d2dqKjulwudEj05JaWFnTdr3/9608//fQL
L7wQyjEyeTCGL/MItuc90GjIQ7S1OBcn1Hw8c3O0RYqFt6yMmg7LMtZnSKsD
KJH6zjt0P558kvxruBkHV9jM56Mz8ZCAzz8vffObJNa+8x3aAEY3mJriYhf7
ZX2dvNKBAEUU19eTOtPraXBxJh+GiWdE5tyFBZpJh4YocsXppMUVs0B+Pk0B
x47ROoEZAVPD2FgcizURDwlNATMP5hz0BcSawWCAfIPVl1BZ/WH0LiwsbPWR
PfXUUy+++CLaxOl0TqG3/Mn7hna7c+fO4uIiGufChQuNjY2nT59WKpUymQxK
7a//+q+ff/55iN+ampqJiYlIfywmnhGO3dHR0Xfeeae5udnj8dy4cWNzc/Ot
t95Cn0SHRDf+7ne/+/g9B2b/bM8oDo1WWEj7/1AJ5eW0NQiDM8H2wHaHyL5o
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
b3Jwjo5044ePgwPCjR8WA7YCbgKmw3AmoVYP00P7k5VFZ+jlRfanpoY+EkmR
YXzq66lfCa94P8wnLzJYonmsq6P4QzSYuIZ9jlnDr3PixCDkY7xwgfwajnn0
KM1oMEJnamAYhmHuiIi2P36c/FpKClkzNITBwTQ03c+PWsRVqyhjstZWHC4M
qhWOrLS0NDU1NSwsDE7N3d192bJlcrk8Li4OPg5uTh0tBmV7/vz5s2fPtrS0
NDY2qjTgTgrGoECNRbVE7c3Nzd29e/fOnTvff/99S0vLiRMnOjg44E99nyDD
9IPe03La2VHCQBOTWwv+xEp8hA3UyTEMbRJqEQ8p5hQV5YI/QjtWWEiveG+A
J88wDMMwA0TEQ6pU9AQ2NpZCZGDQbG0pDbG5uY6tuMjqHxUVBadmYmJiZWXl
5eUVGxsLxdv8r6zB3d3dcGp4Dxm8f//+Qg14+A+jR3p6elA5RR1Ghdy+fXtE
RIRCoYBHW7t2rY+Pj42NzVNPPXX//fcvWrQoPDy8traWnzAwI4Xe03JGRNBD
ONzpZTLqXHN0pI42b2/qdFMqqQMOTUFSEnXJoVnYu5c66XTLPjWEHD9OUR4J
CRT7l59Ppiwri+IMg4Mpd31AAJ08XvEea7Aen2KbhgYqO/c3MQzDMCMVEQ/Z
0kIRG4WF1BCindNMCa2lFccu330n/cuIqbvYsrKylEol/JqTk5Orqyv82qZN
m1JTU0tKSnbv3p2UlAQ3FxoaGhQUpNAAwhjyGCJZDHbjZJLMsCFqr3oApq+v
r7OzM9yZhYXFSy+9NHv27BdeeGH69Om//e1v7733XrxfvXp1cnIyqvTJIZ6G
nmEGhd7Tch44QMYHt/CMDBq2BgcUHU0D2QIDKbACN34XF/JxuPfD0MnlNPxN
t+xTQ4h6UB781+7dFAmJNsrHR1q+nB4rzp0rvfwyPVbEK95jDdbjU2yTmUlP
InkkF8MwDDNSEfGQnZ0U8t7cTEHwsGBoEQsKyLhpb8W3blWP9BZ9E7W1tfBr
cGRyuRx+zcrKyt7eHpZt48aNeMV7rJk3b97cuXMtNIAwhjyGSBY9cZxMkhk2
RJ8aqp+Li4u5ubmJiYmxsfE9fWFqamptbc2TYjOjA5HJsLiYetyCg+m+bm1N
URVmZpRG0sSEUkpiTT+zTw0+IgyksJDO09aWTmzKFOmee/pYsB6fYhtsie05
RyLDMAwzCtGlFceanBzNnXrHQ86YMWP27Nmvvfba008/PXny5D4FMIQxtuTJ
tRm9IPrU1qxZs2DBAlTFSZMmGRkZ9VlXH3744eeeew5+LSAgICsrq7W1taOj
49Lwx4QxzGAgMhnW19NELpmZFFgREnIzVb6b223550X2qdjYm/N54favHikm
FvWQsdraW0td3c2kHydPUtdeW9utpbOzH7O8iZ61mBh6Xggv9oc/SL/+dd9m
DevxKbbBltgee/WrN1D9FPPKlVsLzhP/5T/+SKYPbWNX163lwgW6hmivxPLD
D/Rd339PC95gwQbYDPviICIm86efBvajMQzDMMy/0NKKe3tTF5tGz5pARJTt
2LHjgw8+WLhw4V/+8pdZs2bBqT3yyCO/+tWv+hTAEMaQxxDJkMoQzJoj3Rhm
qBF9aqh+ZmZmxsbGqJDjx4/vs64+8MAD8GumpqbLly+PiIgoLy9vbGzsGP6Y
MIYZDEQmw/Z2MlMNDXRH37ePLNiePXTXT0uj8IqoqNuyT6lNnKMjNQJoEAID
by1qK5ecfGtJT6eZoHFANCMVFRSUKBZ8o+7jPsWYNbQ/8+dT3xkc2X/8R99m
DevxKbbBltgee2FfHEH3ywJXhcsiFrUjgwuD/0Kr+N13txY40JYWOrhYvvmG
MjQePUoOEW+amqikp0/TRcZB1H18V6/yGDqGYRjm7tDSiufn09AFjTFrAhEP
CRH7ySef+Pj4/O1vf/vzn/88efJkOLUJEyb0KYAhjCGPIZIhlSGYRf+avorO
jCkKCwt9fX21Rz/2ZubMmWvWrElLS0NVbx3+mDCGGWK0ZJ+ysKDYCmNjCq8w
N6cxYmLBp/BxcHBi0XRwcH9oQMSCI+ueWUpkg7S2lkxN+/ZovRdsie01c0jq
wpUr1PSpO8XUCwzamTOULR+NYXMzWTCx1NfTkauqbi3wpOXl1FqWldGbAwco
gT+a0BMn6CC4pD/+eLN/jWEYhmH0xYkTJ4qKihISElxdXZ977jkdBbCIh4R4
hoTWdyGY0YyY+G/nzp0ymUx79GNvnnrqqeXLl4eEhMCvVVRUtDHM6OL06bMt
LWebm9tQu3Nz25KT26Kj25TKNl/fNpmsbenSNiurNhub9rfe+t7B4Yf//d8f
7O3P2dmde/fd86tWnffz6/TxueDl1e3hcfH//u/iBx9c3LDhYnDwj5s2XYqI
uBwefuXDD6+EhfVs3dqTlnY1N/dqVta1jIwbaWnSjh0/ZWZex585OVfz8noK
C6+IJTb22nvvXV+8+MbMmT9NmfKTjmYNW2J77LV27fWtW68WFV3eu/fyF1/Q
AfPze/AVfX47lszMqxkZPWLJzLy8e/elnJyLu3df3LXr4s6dF7OyurOzu3Jz
L+Tmdubmns/NPZeXdy4//4fCwh/27v2+qKi9uLitpKSttLRt3762r79uq65u
O3y47ejRNlzS1ta2U6fOfvfdWX3/yAzDMMzYpby8PCUlZcOGDUuWLPnjH/+o
owAW8ZAQz5DQENKQ09f4+SMzBIiJ/xITE5cuXao9+rE3jz322Pz5893c3DZt
2pSZmalimNFFTY2qulpVWakqLVXl56tQx1NTVYmJqthYVUSEKiREtWGDav36
IwpFg1x+bO3aJh+fb7y9j/v4HF+79oRcftLb+1s3tzNOTu0uLu2uru2enu3u
7h2urudkss533+10crrg4NDl7Hxx5cofPT0vubj02Ntft7WV7OxuODpew59u
bpe9vH58771usTg4XJo/v+fpp68/8siNX/1KV7OGLbE99lqw4Mq771709+/8
4IMLfn5dOCBcJL6iz29fufKyu/vF1au7xOLre97f/welsn3jxvagoPYNG9r/
/ve2sLAzUVGnPvqodevWk//85/GkpG+2bWtKTT22c2dDbu6RL79UYSkqoqWk
RLVvn6q8XPX113RJcWEPHVLV1ur7N2YYhmHGMBkZGSEhIStWrHj11VdhvnQU
wCIeEuIZEhpCGnL6su5D0BlGZ8TEf1FRUVZWVjpWUcFDDz307LPPLly4cPXq
1Vu2bClkmLHHzp1Fn366b8uWAxERFWFhB0NCqpTK6oCAGoWi1sur3tn52Ftv
nRDLm2+2zp9/es6cttmzzz7//PfPPtvx1FPnnnji/B/+cOGhhy498MBVeKsJ
E64bG1956KEfH320Cx9hG7H8/vfY7Mf//M+r2GbcuBs6mjVsie2x13/910V8
3YC/HTsuXPitZnEcHb9ZubIRxfTzOxwYWIOy4wrgOuBq4Jrgyuj7x2EYhmEY
bUC+QsRCykLQQtb2VwlDPENCQ0hDTnMOf2YouHDhwunTpxsaGsLDw+fPn9/f
Kvrggw8+8cQTc+bMefvttzds2JDMMGOPrVu3R0WlhYbu+PvfM5TKnUFBmQEB
u9aty5LLd3t773Fzy3dy+kIs9vZfLlny1V//WmJtXfr66/usrMrmzdtvaVn+
yisHZs6sfPrpQ6amKjOzGnPzqpkzD86eXWlhUfXKK9Uvv3xozpyaOXNqzcyO
/+53Hfff33Pffdd++UtdzRq2HD/+2v33X5069Xtz8+b586stLQ+98godcM4c
HPxgn99uYfH1X/5SjjMUi41NybJlRZrFkckKPDzyUEw/v2wUGWXHFcB1wNXA
NcGV0fePwzAMwzDagHyFiIWUhaCFrO2vEoZ4hoSGkIachqjWt65nRiGdnZ0t
LS0qlSo0NHTevHn9raLq8ZV/+tOfbGxsVq9eHcYwY4+QkA83bgwPCIhYvz7C
3z9SoYj64IOo99+P8vOL9vHZ4uX1kYfHx2Jxdf14xYqtzs7x77wT//bb8Y6O
nzg4fGJvn7B8ecJbbyX+z/8kWVsn//WvSba2n+JPW9ttixd/bmOTaW2dtWhR
9sKFe557rnLq1NYJE3ruvbcfZu0Xv7iB7e+7r+e//7sVLuzNN3PeeCNn0aIc
HNDGJuNvf9ve57fb2f0TJ4YzFIuz89aVK+M0i7NqVeyaNTE+PjFr126Ry6NQ
dlwBXAdcDVwTXBl9/zgMwzAMow3IV4hYSNl+ZdgTQDxDQkNIQ0536p7cmWF0
RswJGBwcbGlp2d8q+sADD/zud7+bNm3a3Llz7e3tfRmGGTxWrVovk/3d0THC
3j7azu6jt96Ke+mlgkcfbRw//sq4cVdhwXQ3a7/85bV77+159NFjL75YgOOI
xcnpQw+PDfouKMMwDMPoB8hXiFhIWQhayNr+KmGIZ0honh2bGTrEnIBbtmxZ
tGjR+PHjx40b94tf/ELHKjp58uSnn376tddeW7FihVKp1HdXNsOMKhIS0j7+
ODM6ek9kZF5EREF4+F43t9pXXz3zyCNXf/vb60ZGupq1++//6cEHrz/yyDXs
iyPgOGKJicn55JN0fReUYRiGYfQD5CtELKQsBC1krY4CGFIZghmyGeIZEhpC
GnKax6wxQ4GYEzApKWnJkiVGRkYTJkxA9dOxrj722GOvvvqqTCb7xz/+sXPn
zlqGYQaPQ4eOVFYerag49vXXTQcOfFNe3hwb2+bq2j179g1T0xu/+Y2u2SB/
/eufTE1/euGFG9gXR8BxxHLw4LHq6jp9F5RhGIZh9APkK0QspCwELWStjgIY
UhmCGbIZ4hkSGkIachqiWt+6nhnNZGZmOjo69jd1v5mZmZ2dXXBwMHZvaGjQ
dyEYZpSzfz9Nrm1rK82aJU2Zouuk2NgS22Mv7IsjMAzDMAyjBvIVIhZSFoIW
slZHASxS90M8Y3d9F4IZE3z11VeBgYGWlpYzZsx4+OGHtcdD3nfffRMnTpw0
aZKVlZVCoUAtraioOHXqlL4LwTCjnLo6KT1dCgyU7Owkc3PJyEiaMEEaN+5O
GfvpU2yDLbE99sK+OALDMAzDMGogXyFiIWUhaCFrIW4hcSF0+xTAIvoRUhmC
GbIZ4hkSWt+FYMYEKpUqOTnZ19d38eLFqH7a4yFRjadOnWpmZubi4pKQkNDQ
0ICq3tXVpe9CMMwo59QpqaJCysyUFAppwQJp0iRp4kRyZH2aNazHp9gGW2J7
7IV9+ZkKwzAMwwggXyFiIWUhaCFrIW4hcSF0+xTAIvoRUhmCGbIZ4hkSWt+F
YMYEra2t5eXlaWlpqHiWlpba4yEnTZqEyqx+nlBcXKzvc2eYsUJ3t3T2rNTc
LCUkSI6OkokJeTEjo77NGtbjU2yDLbE99sK+PPqZYRiGYXoDQauOMYPEhdDV
Hv2IzSCYIZshniGh9X3uzJigo6OjsbERVS4xMVEul9va2s6bN+/555831eDJ
J5+cMWOGubn5okWLZDIZqvTnn39ex2FVDDNcXL4snT9PnmvvXmnzZsnFRVq8
WHr5ZcnMTHrySWn6dMnUlF7xHmuwHp9iG2yJ7bEX9sURGIZhGIb5GRC0kLUQ
t5C4ELqQuxC9kL6aShjCGPIYIhlSGYIZshniGRJa3+fOjAkuXbqEytba2nrw
4MGsrKzY2NiAgABUV2sNlixZ4uDg4OLisnHjxqSkpOLiYlTs9vZ2fZ87w4wV
rl0jt9XdLX3zjVRaKqWlSeHhko8PDUlbsoSsmbU1veI91mA9PsU22BLbYy/s
iyMwDMMwDPMzIGghayFuIXEhdCF3IXohfTWVMIQx5DFEMqQyBDNkM8QzJLS+
z50ZW3R3d589e7a5ubmwsBC1UXPewMDAwLCwMKzER9hA32fKMGOXnh7p4kXp
3DmpspLsWHAw5Q9RKCRfX3rFe6zBenyKbbAlpxNmGIZhGF0QGhiiF9JXUwkL
DQypzLOqMfri8uXL58+fRyVUqVSokJrzBqanp2dnZ2NlbW1tW1ubvs+UYcYu
6i42uLDmZqm8nJKHpKdLqalScjK94j3WYD0+xTbcocYwDMMwOgKJC6ELuQvR
C+mrqYSxEvIYIhlS+TKPK2D0xLVr11D9uru7UVebm5s15w2sq6trbGxUz9J+
ERKQYRg9ceMG+a+eHuo4a22VGhooJ//hw1JtLb3iPdZgPT7FNtgS2zMMwzAM
82+BxFVrYIheSF9NJazWwBDJkMrX+DEowzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMw/TF/wNiZ5x8
    "], {{0, 767}, {1167, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{311.40000000000003`, Automatic},
  ImageSizeRaw->{1167, 767},
  PlotRange->{{0, 1167}, {0, 767}}]], "Input",
 Evaluatable->False]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Trilinears", "Section",
 CellChangeTimes->{{3.766664661581194*^9, 3.7666646732055235`*^9}, {
   3.7670072031362944`*^9, 3.767007214049448*^9}, {3.767010073676444*^9, 
   3.767010075948375*^9}, 3.768677229584013*^9, 3.76867987833762*^9, 
   3.7686800660645247`*^9}],

Cell["\<\
Trilinears x : y : z convert via triangle vertices A, B, C  and sides a, b, c \
:\
\>", "Text",
 CellChangeTimes->{{3.7663928906096363`*^9, 3.766392920072796*^9}, {
   3.7664995705174584`*^9, 3.766499570837592*^9}, {3.7686772297046905`*^9, 
   3.7686772298034544`*^9}, {3.768679880620513*^9, 3.768679881650757*^9}, 
   3.768680067263319*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
9eloA8B0lOe8hu6dyn/FxEok7rtpPYZ7uTOPpGxlvjJQMvlCZoaFiEczj1yN
TqKYtQmfdjPKZfLdJzy2sRRsPtemPp2Iyob3/cMPPzQD9StvkGnYJA5u4qiJ
g4iMZprZ8FDy4C29rutuVDbHw9a7U4KoZFrIpBES3js3LWTJwR8omZlMmTyE
CzZllW17KUaBgVlrykp+MZuYssqwqtzrBw8eJA6Sb8pks62tLXdfTFkTapiy
/FesuSkrNo4BsErIW3Z8fKzW7eJY5UU+PDx0NUIqjb/927/1Ns43kl5sbW1t
TQ4o53r+/Pnjx4+9prWRdU/9ZXvZWMom8rqxseFWUKWJbPlRWbkdoZ1xr6q5
4HJtX7x4Idfcsz/mOYlddi8EYSaNykG8I8iXOUVVu4+XflW72ABId5TL7Xg+
RbbxGoeZ0QO3azWGue/u0dwOgjLb81AyJsQaKojRCxGyg4ODzc1N909fffWV
91jKETJP58XW5GgmA48cQYTMa/2+9957Zp6764Zke9l4NBqJwornst8X6BbL
j8qqSWXff/9995/2Bsnz8OjRI+9RSQRmvXstN0vqLrlx3hkzg5nh7NQShKyL
UVm5L2HbtfdOyMxMT9NQdF98c69zXrHKuFNPawKZ+JjdQNRwntcAVpCEKZPv
VVP2+eefexvbrsBKvDCdEU3h2bNnmaZMqkTVlJVQs3mUH5VVk8rmm7Je0gvn
mDJx5ZmmzA48LuqOd9SUxWbimHskL6O8YvL01jZl4UMVnsvrZHRbPpgygAWg
xmfkNfeirJWdtplVn5zu3r177om811z+6fXiyXlti9qL4MnGH330kVullDbK
qPyorJpU1iLy7XkKM8bS20xVcNnSrc/Fw5rvw9G5ma2jsPv44OCglYvQhM41
ANR3WW6BOo1XvvnlL3850yuW42Tt0UxVY2ZmPXnyxP4pPzgGMAkiIfap9vRF
3cwlXOVQxavExDF574WcyBNWKcxnn33m1l1WEaSQblS2wOe//KisXMN0VeP1
ARkh88ysOu5xMk2qZrdxj+NVpO+9916ObVG7F9u6DrXpXFRWbbvGchTIxp9/
/vna2lr+K1Y5rN3FNGXfTnEjFZnBDQCLGp/Z2tryJEY2k6cu8UzmmzL3Oc/J
HSce7eOPP3bfOLtxaMouLi5auSxtUX5UVk0qaynclIVLki2ezpkydaR6LLeS
3JeFmTK3r6e0RinA6qE2a2MJJN36PCTHqXmKEHvHrQE0uA1pV4zU8XiltYHL
j8qqufgMsfEk8kO8vaTCD3XB9SbuvX7z5o0n5Tl9cOqY3hIEt1sNADUTSKxj
Xc1ukX7F1F3SmEGG+acA8FBjrfnVl0vm+CIvTKee6Pz8PDar2n3C1VdSCl/7
asyD8qOyh4eHsXuamLHutSLUGIK7jddoCeu6nBBEuFdmX8Bc6VZUVrWxsRsd
qx/STbKDg4PYE6UiD88HH3zgvvKZI3IBLDFTFtOypZgyF9eUqZuV1pwrPypb
z5R5w1bVYB2mrEBmNWXhK59+xVxlzyQ0ZVIplRnBAFgZVPVPNyNfvXqldrhk
hhxjiuChTt/ofdeoxrp+SnMThUdlEzG0dCLxsPXl6YKr1969Vu9vZWef2n1c
QnygQw0ANS1V7E2MjcRIx4u82yTPgFnl0yzzmtNdW2xTGcokNko28RSps93z
qxQ3TJdoD8fG2rlli5WkhMGTLuVHZWNClm7SyJ88MfK295Kqufu6uUMtles6
yV5hIfPnGs+PDkVlVRubWGhGHR5fWUWEE7fl+mxvb+cLGfM9YSaKNWUxLXOr
xJiWlVaZlB+VrWfKwuGyXopX9wZJ2977U2jKKlUJU9Yc1ZTFWpWx5PbpHsbw
NmHKAEqjhpM1e3kTLW2dUHlGN46a7tmJRWXd2v7TTz9Va48SprS7FB6VVfs6
K2/QZKoOoWdxb9De3l7soVKlvDIqW2ZS2Ul3GgAXFxf56j+JzwhOv+xue9JO
6rx5h3wWEzEajcKMtfYpwsnCTISZzXLiIWo6ypwqJX9ButgQBTdwF5uryFjZ
mUj05FY2abxa0Rti5C7Y7f1wecbCk1ZGZdWmSwmXtCtRWTX4k7jRsR789Mvu
tjc+/vhjK2ST6YWSz1IMeSlMlr/w+IlhhwAq7ZqynH69xZiy0iqTwqOyCVOW
lgnVlLkNoVlNWWVUFlPWELV7MW3K1Gcj/bJXmjKjZZgygCWiTv/PefWePXsW
7lg5/85t8MuHtBSqZsdLVhObtlNaDVx4VPbFixfhNcyZdqd2ndupTK7Ehy5V
nZ5TaUtDvSgkcNGJBoDqTNON0tgsqkQb2x14VhnYl9dBLt3XX3/9B3/wB2aX
AlOQQeFIVRM2U9WVZD3UuZY5KdHsWKZKT6eGjzz5i71llcG9BVN4VFbtQsox
3eoUYFt3uXcwfDbUnAmVElCsk+1EVFYdLLSxsZG40TU6PtzASE5gX7aXxs+H
H35oD05IFmZFNWU5K2U0N2U5WhaaMu8N6pwpKzMqq9ZXzU2ZewfD2qktU1bI
HJ9OmDL1ftUzZYmGq3spYtkpLaopY7VKgHmjhmgqs2wZ6tXe6TBdYmOLW7XG
kilVxnsXT+FR2fBuZppuVVCsmXWbPd7R1FmflRdH7T4uIRffpAsNANXJVt5o
NX1ButtUTvTo0SO56dJIyHkTZRs7zIPBRTAragKWTBWoNzjEDdNVzstQay2v
/RwO9FWrzaVTeFRWTQGaufSn2t9n9Mi9O+HRajx7qm6WsDzKpAtR2dhSfekm
ZWw908TLbrL33Lt3L7GUuVcwVviCJqimLNM1qN1D4/E4vZdUaLbhWs+UeXt1
zpSVGZVVLXbOiKn0MhCYsqKoZ8oeP34cPhutmzK3YJgygHkTy0ySaWHsJAiL
vO+VLQd36kTlxjmB39FoNFPVtCxKjsqqE2wzy6kqsjGz6fFFOa27EHVMbyHB
gfIbAOpk7Uq1VeNFlXuZGTE5pfJSqKH+MCtqiCbzQarXvei+SjP1RVq8KkJd
EazAd6HwqKy68FPmYjeJ4Ko7wceTRXXwWGV8tdikspMuRGXVwYSV1zxMt2he
scpRQ5lC5sWKCcnCrMiTFhqr/JpB3bey9nNNWeXGauDXM1yqKStw9lPhUdk5
mTJ72LZMmbqXtGfq//L2WFVTphrhnGmJmDKAYlFbtvnVfo05C+74kJxhIarD
8oon/5QfYrYUJZIPBYZkJ2VHZev5Srtv+BSZBoA7mTQM9YdrGfQyGpDFzvqc
FN8AUOf2yiuTMx9Kbqh9c2UXaXW3VSrUHxqiJrrJ91n1vI/d6+HDh5WnyAn8
yhnFesuLtj5Fjt/iW9YiJUdlY4lGa+9rniLX5IYWVR2dWxlFKTap7KT4qGxs
LaHKhp/8LvGtrpClF82ZiTAkW2CcBwpnKaYsEaYLCQO/4SDY0JQVUrN5lByV
bWjKwqisuU1pk1Kvhzrcq5zr2UVTlnPNzTRhq2Xvvfdei9bJM2V0LwIsAHWO
Qy87i51qhHPyF5maJGcyi9r2VlXJ9AAa5hSgu2mMVa7NzU03w3Y92v11ar9b
poSp/aRGlM/Pzx88eCCf5bffBOOL6s3Sml/+oua3+M2bN/alkEZpUbdYDqiO
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
    "], {{0, 168}, {1842, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{538.2, Automatic},
  ImageSizeRaw->{1842, 168},
  PlotRange->{{0, 1842}, {0, 168}}]], "Input",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "trilinearToCartesian"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"trilinearToCartesian", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"A_", ",", "B_", ",", "C_"}], "}"}], ",", 
     RowBox[{"(*", " ", "vertices", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], ",", 
     RowBox[{"(*", " ", 
      RowBox[{"side", " ", "lengths"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}]}], " ", 
    RowBox[{"(*", " ", "trilinears", " ", "*)"}], "\[IndentingNewLine]", 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"(*", 
       RowBox[{"a", ",", "b", ",", "c", ","}], "*)"}], "denom", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"may", " ", "not", " ", "need"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"magn", "[", 
         RowBox[{"C", "-", "B"}], "]"}]}], ";", 
       RowBox[{"b", "=", 
        RowBox[{"magn", "[", 
         RowBox[{"A", "-", "C"}], "]"}]}], ";", 
       RowBox[{"c", "=", 
        RowBox[{"magn", "[", 
         RowBox[{"B", "-", "A"}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"denom", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c"}], "}"}], ".", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", " ", "x", " ", "A"}], "+", 
         RowBox[{"b", " ", "y", " ", "B"}], "+", 
         RowBox[{"c", " ", "z", " ", "C"}]}], ")"}], "/", "denom"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.766392274332153*^9, 3.7663922814904995`*^9}, {
  3.766392428106147*^9, 3.766392528042677*^9}, {3.7663925915550756`*^9, 
  3.7663927128902264`*^9}, {3.766392936819051*^9, 3.766392999564353*^9}, {
  3.7663932016307125`*^9, 3.7663932823309326`*^9}, {3.7663937775636516`*^9, 
  3.766393784411344*^9}, {3.7663938204298825`*^9, 3.766393858821268*^9}, {
  3.7666147840769415`*^9, 3.7666148537812605`*^9}, {3.7666149627556343`*^9, 
  3.7666149947333703`*^9}, {3.7667526846064796`*^9, 3.7667526876649*^9}, {
  3.7667888094003525`*^9, 3.766788827040985*^9}, {3.7667889040894938`*^9, 
  3.7667889330641994`*^9}, {3.7686772298223753`*^9, 3.768677229830353*^9}, {
  3.768679883075945*^9, 3.768679884491191*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rotateSym", "[", "fabc_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"fabc", ",", 
    RowBox[{"fabc", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[Rule]", "b"}], ",", 
       RowBox[{"b", "\[Rule]", "c"}], ",", 
       RowBox[{"c", "\[Rule]", "a"}]}], "}"}]}], ",", 
    RowBox[{"fabc", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[Rule]", "c"}], ",", 
       RowBox[{"b", "\[Rule]", "a"}], ",", 
       RowBox[{"c", "\[Rule]", "b"}]}], "}"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7665767841381903`*^9, 3.7665768310223866`*^9}, {
  3.7665768637727995`*^9, 3.7665768643971605`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"trilinears", ":", " ", "a", ":", "b", ":", "c"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"getIncenterTrilin", "[", 
      RowBox[{"orbit_", ",", "sides_"}], "]"}], ":=", 
     RowBox[{"trilinearToCartesian", "[", 
      RowBox[{"orbit", ",", "sides", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getCircumcenterTrilin", "[", 
      RowBox[{"orbit_", ",", 
       RowBox[{"{", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a2", "=", 
          RowBox[{"a", "*", "a"}]}], ",", 
         RowBox[{"b2", "=", 
          RowBox[{"b", "*", "b"}]}], ",", 
         RowBox[{"c2", "=", 
          RowBox[{"c", "*", "c"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"trilinearToCartesian", "[", 
        RowBox[{"orbit", ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a", 
            RowBox[{"(", 
             RowBox[{"b2", "+", "c2", "-", "a2"}], ")"}]}], ",", 
           RowBox[{"b", 
            RowBox[{"(", 
             RowBox[{"c2", "+", "a2", "-", "b2"}], ")"}]}], ",", 
           RowBox[{"c", 
            RowBox[{"(", 
             RowBox[{"a2", "+", "b2", "-", "c2"}], ")"}]}]}], "}"}]}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getCircumcenterTrilin2", "[", 
      RowBox[{"orbit_", ",", 
       RowBox[{"{", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"cosA", "=", 
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"a", ",", "b", ",", "c"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cosB", "=", 
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"b", ",", "a", ",", "c"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cosC", "=", 
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"c", ",", "a", ",", "b"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"trilinearToCartesian", "[", 
         RowBox[{"orbit", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}]}], "]"}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getOrthocenterTrilin", "[", 
      RowBox[{"orbit_", ",", "sides_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "cs", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"cs", "=", 
         RowBox[{"getPolyCosines", "[", "orbit", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"trilinearToCartesian", "[", 
         RowBox[{"orbit", ",", "sides", ",", 
          RowBox[{"1", "/", "cs"}]}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.766392237563183*^9, 3.7663922689216175`*^9}, {
   3.766392336546873*^9, 3.766392424889744*^9}, {3.766392491441549*^9, 
   3.766392492570532*^9}, {3.7663927538908052`*^9, 3.766392772209856*^9}, {
   3.7663931705935307`*^9, 3.7663931883536587`*^9}, {3.766393671594722*^9, 
   3.7663937484585457`*^9}, {3.766393867028328*^9, 3.7663938909064875`*^9}, {
   3.7663943995391903`*^9, 3.766394475060255*^9}, {3.7663946177244124`*^9, 
   3.766394619284243*^9}, {3.766396296019594*^9, 3.7663962998853445`*^9}, {
   3.766396377151757*^9, 3.76639639182253*^9}, {3.766398446813922*^9, 
   3.7663985020682063`*^9}, {3.766401283693178*^9, 3.766401383012994*^9}, {
   3.766406907527419*^9, 3.766406958006222*^9}, {3.7664358408356833`*^9, 
   3.7664358633001194`*^9}, {3.76657187003658*^9, 3.766571884331933*^9}, {
   3.766572848916566*^9, 3.7665728493803225`*^9}, {3.766749506071499*^9, 
   3.7667495443345613`*^9}, {3.7667888353926563`*^9, 
   3.7667888906005573`*^9}, {3.7667889513363476`*^9, 
   3.7667889760781975`*^9}, {3.7671169921328325`*^9, 
   3.7671171013269587`*^9}, {3.7671222514026966`*^9, 
   3.7671223195864487`*^9}, {3.767346576503457*^9, 3.767346618680028*^9}, {
   3.767521652548606*^9, 3.767521653531975*^9}, {3.768411550278373*^9, 
   3.7684115513824224`*^9}, 3.7684752908543344`*^9, {3.768476223173477*^9, 
   3.768476232629211*^9}, {3.7684763158997917`*^9, 3.768476489516215*^9}, {
   3.768476809149302*^9, 3.768476812237048*^9}, {3.768677229835369*^9, 
   3.7686772298652887`*^9}, {3.768679885426685*^9, 3.768679892922637*^9}, {
   3.7686800775837173`*^9, 3.768680088231243*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getSymmedian", "[", 
    RowBox[{"orbit_", ",", "sides_"}], "]"}], ":=", 
   RowBox[{"trilinearToCartesian", "[", 
    RowBox[{"orbit", ",", "sides", ",", "sides"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getMitten", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"b", "+", "c", "-", "a"}], ",", 
       RowBox[{"c", "+", "a", "-", "b"}], ",", 
       RowBox[{"a", "+", "b", "-", "c"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getGergonne", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"b", "*", 
        RowBox[{"c", "/", 
         RowBox[{"(", 
          RowBox[{"b", "+", "c", "-", "a"}], ")"}]}]}], ",", 
       RowBox[{"c", "*", 
        RowBox[{"a", "/", 
         RowBox[{"(", 
          RowBox[{"c", "+", "a", "-", "b"}], ")"}]}]}], ",", 
       RowBox[{"a", "*", 
        RowBox[{"b", "/", 
         RowBox[{"(", 
          RowBox[{"a", "+", "b", "-", "c"}], ")"}]}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getNagel", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "+", "c", "-", "a"}], ")"}], "/", "a"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"c", "+", "a", "-", "b"}], ")"}], "/", "b"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "+", "b", "-", "c"}], ")"}], "/", "c"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSpieker", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"b", " ", "c", 
        RowBox[{"(", 
         RowBox[{"b", "+", "c"}], ")"}]}], ",", 
       RowBox[{"c", " ", "a", 
        RowBox[{"(", 
         RowBox[{"c", "+", "a"}], ")"}]}], ",", 
       RowBox[{"a", " ", "b", " ", 
        RowBox[{"(", 
         RowBox[{"a", "+", "b"}], ")"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getCentroid", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"b", " ", "c"}], ",", 
       RowBox[{"c", " ", "a"}], ",", 
       RowBox[{"a", " ", "b"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7686772298702464`*^9, 3.7686772298872285`*^9}, {
  3.7686798945582666`*^9, 3.768679896579831*^9}}],

Cell[CellGroupData[{

Cell["Generate Billiard as Locus", "Subsubsection",
 CellChangeTimes->{{3.7672656202757683`*^9, 3.767265635167061*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getX100trilin", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"1", "/", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"b", "-", "c"}], ",", 
        RowBox[{"c", "-", "a"}], ",", 
        RowBox[{"a", "-", "b"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getX88trilin", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"1", "/", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"b", "+", "c", "-", 
         RowBox[{"2", "a"}]}], ",", 
        RowBox[{"c", "+", "a", "-", 
         RowBox[{"2", "b"}]}], ",", 
        RowBox[{"a", "+", "b", "-", 
         RowBox[{"2", "c"}]}]}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.767265456387086*^9, 3.7672656159214077`*^9}, {
  3.7672658927040424`*^9, 3.7672659049602604`*^9}, {3.768677229891219*^9, 
  3.7686772299011965`*^9}, {3.7686799028520865`*^9, 3.7686799046921673`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Basic Clrs and Drawing", "Section",
 CellChangeTimes->{{3.7660465135154676`*^9, 3.766046531309363*^9}, {
  3.7661318998438396`*^9, 3.766131908205478*^9}, {3.7681719174738703`*^9, 
  3.7681719431596155`*^9}, {3.768680885039075*^9, 3.768680889767431*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ptClrs", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<ell\>\"", "\[Rule]", "Black"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<med\>\"", "\[Rule]", "Black"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<bar\>\"", "\[Rule]", "Purple"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<inc\>\"", "\[Rule]", 
      RowBox[{"Darker", "@", "Green"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<ort\>\"", "\[Rule]", "Orange"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<cir\>\"", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<npc\>\"", "\[Rule]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1.", ",", "0.02", ",", "0.3"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<exc\>\"", "\[Rule]", 
      RowBox[{"Darker", "@", "Green"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<ex12\>\"", "\[Rule]", 
      RowBox[{"Darker", "@", "Green"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<ex23\>\"", "\[Rule]", 
      RowBox[{"Darker", "@", "Green"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<ex31\>\"", "\[Rule]", 
      RowBox[{"Darker", "@", "Green"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<feu\>\"", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "0.5", ",", "0.27"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<antifeu\>\"", "\[Rule]", "Orange"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<x88\>\"", "\[Rule]", "Cyan"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<nag\>\"", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<mit\>\"", "\[Rule]", 
      RowBox[{"Lighter", "@", "Blue"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<sym\>\"", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<ger\>\"", "\[Rule]", "Pink"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<spi\>\"", "\[Rule]", 
      RowBox[{"Darker", "@", "Cyan"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<nap\>\"", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<hex\>\"", "\[Rule]", "Pink"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "overrides", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\"\<red\>\"", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<green\>\"", "\[Rule]", "Green"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<blue\>\"", "\[Rule]", "Blue"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAmIQPenwUfa3fG8cr2zYJQKiVyh+kQDRHI95pUB01udb
iiB63sJDaiD6X/oPLRA9n2mzNoiWWrzGA0QbvEv2BtFiIowc74C0wJo2MP2A
bf9vbf43jseUWJh0gLQ5X8fcLiD97GztAhA9e779fRC9rGDHAxD9J+g2+24g
LeClygGij0zm3HAZSMd0F28C0VOSGy6B6LL53WA6wfzcqStAesbC0NMgWtN9
ltR1IJ1yfz6YvvdEbO5zIL2jasMCEP3slBqThsAbR5PGfjBdZsvCqwmk+5Qn
C4LoBdcEehyB9KHQ2/0getv6NGknIJ3W8g5Mm7yYZVUr+MbxjMQaGxCt9VrV
eDWQvny6AUw73FOdC6K/hC4G03ULIm7sEHrjuC5xKZi249xf6y/8xlFBXrkO
RLesndUMom/ZzgfTQTMWtoPof+2rwDQAQhrGHw==
  "]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "plotEll"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotEll", "[", 
    RowBox[{"a_", ",", 
     RowBox[{"clr_:", 
      RowBox[{"(", 
       RowBox[{"\"\<ell\>\"", "/.", "ptClrs"}], ")"}]}]}], "]"}], ":=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"N", "[", "a", "]"}], " ", 
        RowBox[{"Cos", "[", "u", "]"}]}], ",", 
       RowBox[{"Sin", "[", "u", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0.0", ",", 
       RowBox[{"2.0", "\[Pi]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", "clr"}], ",", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.765805438346921*^9, 3.765805452178815*^9}, {
   3.7659239734825225`*^9, 3.7659239900008445`*^9}, {3.7659695346167374`*^9, 
   3.765969564159203*^9}, 3.766131157133317*^9, {3.7667405762590165`*^9, 
   3.766740627875462*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"drawArrow", "[", 
    RowBox[{"p0_", ",", "phat_", ",", "l_"}], "]"}], ":=", 
   RowBox[{"Arrow", "[", 
    RowBox[{"{", 
     RowBox[{"p0", ",", 
      RowBox[{"ray", "[", 
       RowBox[{"p0", ",", "phat", ",", "l"}], "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "txtSubscript"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"txtSubscript", "[", 
    RowBox[{"txt_", ",", "subscr_", ",", "size_", ",", "where_"}], "]"}], ":=", 
   RowBox[{"Text", "[", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"Subscript", "[", 
        RowBox[{"txt", ",", "subscr"}], "]"}], ",", "size"}], "]"}], ",", 
     "where"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.766141396806887*^9, 3.7661414413194227`*^9}, {
  3.766141471624304*^9, 3.7661415049046497`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Poly Utils", "Section",
 CellChangeTimes->{{3.7684117207504683`*^9, 3.7684117273480253`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "polyVtx"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"polyVtx", "[", 
    RowBox[{"alphaT_", ",", "i_", ",", "fnVtx0_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "p1", ",", "t", ",", "alpha"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"ps", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"a", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"toRad", "[", "#", "]"}], "]"}]}], ",", 
            RowBox[{"Sin", "[", 
             RowBox[{"toRad", "[", "#", "]"}], "]"}]}], "}"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"\"\<ts\>\"", "/.", "alphaT"}], ")"}]}]}], ";"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"\"\<a\>\"", "/.", "alphaT"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"alpha", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\"\<alphas\>\"", "/.", "alphaT"}], ")"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"t", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\"\<tsRad\>\"", "/.", "alphaT"}], ")"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], ",", 
         RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fnVtx0", "[", 
       RowBox[{"a", ",", "p1", ",", "alpha"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7681212074753885`*^9, 3.7681214001535845`*^9}, {
   3.7681217771531363`*^9, 3.768121798866092*^9}, {3.768121914793456*^9, 
   3.7681219157050176`*^9}, {3.768168499125125*^9, 3.768168513693666*^9}, {
   3.768168633645152*^9, 3.7681686393099995`*^9}, 3.768222255004265*^9, {
   3.7682309544035816`*^9, 3.768230954595069*^9}, {3.7684133449767427`*^9, 
   3.7684133468166656`*^9}, {3.7684137479935656`*^9, 
   3.7684137788173985`*^9}, {3.768413865753502*^9, 3.7684138695044513`*^9}, 
   3.7684139549691095`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "polyError"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"polyError", "[", 
    RowBox[{"alphaT_", ",", "i_", ",", "fnVtx0_", ",", "fnErrorP_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "alpha", ",", "poly", ",", "err"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"\"\<a\>\"", "/.", "alphaT"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"alpha", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\"\<alphas\>\"", "/.", "alphaT"}], ")"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"poly", "=", 
       RowBox[{"polyVtx", "[", 
        RowBox[{"alphaT", ",", "i", ",", "fnVtx0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"err", "=", 
       RowBox[{"fnErrorP", "[", 
        RowBox[{"a", ",", 
         RowBox[{"poly", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "alpha"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "->", "a"}], ",", 
        RowBox[{"\"\<poly\>\"", "->", "poly"}], ",", 
        RowBox[{"\"\<error\>\"", "->", "err"}]}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7684701633844967`*^9, 3.7684702426178403`*^9}, {
  3.7684702786156497`*^9, 3.76847039413855*^9}, {3.7684706254034157`*^9, 
  3.76847062561884*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "sumPolyCosines"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sumPolyCosines", "[", 
    RowBox[{"alphaT_", ",", "i_", ",", "fnVtx0_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "poly", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"ps", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"a", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"toRad", "[", "#", "]"}], "]"}]}], ",", 
            RowBox[{"Sin", "[", 
             RowBox[{"toRad", "[", "#", "]"}], "]"}]}], "}"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"\"\<ts\>\"", "/.", "alphaT"}], ")"}]}]}], ";"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"poly", "=", 
       RowBox[{"polyVtx", "[", 
        RowBox[{"alphaT", ",", "i", ",", "fnVtx0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Total", "@", 
       RowBox[{"getPolyCosines", "[", "poly", "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7681212074753885`*^9, 3.7681214001535845`*^9}, {
  3.7681217771531363`*^9, 3.768121798866092*^9}, {3.768121914793456*^9, 
  3.7681219157050176`*^9}, {3.768411597909727*^9, 3.768411657037714*^9}, {
  3.768414052546766*^9, 3.7684140588588715`*^9}, {3.7684141124112277`*^9, 
  3.768414153105515*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "getP2Alpha"}], ";", 
  RowBox[{
   RowBox[{"getP2Alpha", "[", 
    RowBox[{"a_", ",", "p1_", ",", "alpha_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "norm", ",", "ca", ",", "sa", ",", "p2", ",", "normRot", ",", 
       "normRotNeg", ",", "p2Neg"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"y", "=", 
        RowBox[{"-", 
         RowBox[{"ellY", "[", 
          RowBox[{"a", ",", "x1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"p1", "=", 
        RowBox[{"{", 
         RowBox[{"x1", ",", "y"}], "}"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ca", "=", 
       RowBox[{"Cos", "[", "alpha", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sa", "=", 
       RowBox[{"Sin", "[", "alpha", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"norm", "=", 
       RowBox[{"ellGrad", "[", 
        RowBox[{"a", ",", 
         RowBox[{"p1", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"p1", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"normRot", "=", 
       RowBox[{"rot", "[", 
        RowBox[{"norm", ",", "sa", ",", "ca"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"normRotNeg", "=", 
       RowBox[{"rot", "[", 
        RowBox[{"norm", ",", 
         RowBox[{"-", "sa"}], ",", "ca"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{
        RowBox[{"ellInterRayUnprot", "[", 
         RowBox[{"a", ",", "p1", ",", "normRot"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"get", " ", "2", "nd", " ", "solution"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"p2Neg", "=", 
       RowBox[{
        RowBox[{"ellInterRayUnprot", "[", 
         RowBox[{"a", ",", "p1", ",", "normRotNeg"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"p2", ",", "p2Neg"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.767809129535489*^9, 3.7678092405600863`*^9}, {
  3.7678094684158916`*^9, 3.767809496624196*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "plotPolyCos"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "plotPolyCos", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pert", "\[Rule]", ".02"}], ",", 
     RowBox[{"keep", "\[Rule]", "All"}], ",", 
     RowBox[{"cosDiv", "\[Rule]", "2"}], ",", 
     RowBox[{"clrs", "->", 
      RowBox[{"{", 
       RowBox[{
       "Black", ",", "Red", ",", "Green", ",", "Blue", ",", "Cyan", ",", 
        "Magenta", ",", "Orange", ",", "Brown"}], "}"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotPolyCos", "[", 
    RowBox[{"alphaT_", ",", "fnVtx0_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ts", ",", "polys", ",", "cosPoly", ",", "theN", ",", "clrs0", ",", 
       "clrs0k", ",", "plotData", ",", "ticksx", ",", "ticksxGrid", ",", 
       "ticksy", ",", "keep0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"polys", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"polyVtx", "[", 
          RowBox[{"alphaT", ",", "i", ",", "fnVtx0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"\"\<alphas\>\"", "/.", "alphaT"}], "]"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"theN", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"polys", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"clrs0", "=", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"OptionValue", "@", "clrs"}], ",", 
         RowBox[{"1", "+", "theN"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cosPoly", "=", 
       RowBox[{"getPolyCosines", "/@", "polys"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"keep0", "=", 
       RowBox[{"Part", "[", 
        RowBox[{
         RowBox[{"Range", "[", "theN", "]"}], ",", 
         RowBox[{"OptionValue", "@", "keep"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"clrs0k", "=", 
       RowBox[{"Part", "[", 
        RowBox[{"clrs0", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"(", 
             RowBox[{"keep0", "+", "1"}], ")"}]}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ts", "=", 
       RowBox[{"\"\<tsDeg\>\"", "/.", "alphaT"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ticksx", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", 
           RowBox[{
            RowBox[{"Max", "[", "ts", "]"}], "+", "1"}], ",", "30"}], "}"}]}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ticksxGrid", "=", 
       RowBox[{"ticksx", "/.", 
        RowBox[{"{", 
         RowBox[{"180", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"180", ",", 
            RowBox[{"Directive", "[", 
             RowBox[{"Thick", ",", "Black", ",", "Dashed", ",", 
              RowBox[{"Opacity", "@", ".75"}]}], "]"}]}], "}"}]}], "}"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"ticksy", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "1.5"}], ",", "1.5", ",", ".1"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"plotData", "=", 
       RowBox[{"Transpose", "/@", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ts", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Total", "/@", "cosPoly"}], ")"}], "/", 
              RowBox[{"OptionValue", "@", "cosDiv"}]}], "+", 
             RowBox[{"OptionValue", "@", "pert"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Sequence", "@@", 
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"ts", ",", 
                RowBox[{"#1", "+", 
                 RowBox[{"RandomReal", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"OptionValue", "@", "pert"}]}], ",", 
                    RowBox[{"OptionValue", "@", "pert"}]}], "}"}], "]"}]}]}], 
               "}"}], "&"}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Part", "[", 
                 RowBox[{"#", ",", "keep0"}], "]"}], "&"}], "/@", "cosPoly"}],
               "]"}]}], "]"}]}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Legended", "[", 
       RowBox[{
        RowBox[{"ListLinePlot", "[", 
         RowBox[{"plotData", ",", "\[IndentingNewLine]", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", "12"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "clrs0k"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AspectRatio", "\[Rule]", ".25"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "360"}], "}"}], ",", "Automatic"}], "}"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"ticksy", ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"ticksx", ",", "None"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"GridLines", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"ticksxGrid", ",", "ticksy"}], "}"}]}], ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<N=\>\"", "<>", 
              RowBox[{"ToString", "@", "theN"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"16", ",", "Black"}], "}"}]}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "#"}], "}"}], "]"}], "&"}], "/@", 
           "clrs0k"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"#", ",", "16"}], "]"}], "&"}], "/@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<\[CapitalSigma]cos\>\"", "<>", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"OptionValue", "@", "cosDiv"}], "\[NotEqual]", 
                  "1"}], ",", 
                 RowBox[{"\"\</\>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"OptionValue", "@", "cosDiv"}], "]"}]}], ",", 
                 "\"\<\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\"\<cos(\>\"", "<>", "#", "<>", "\"\<)\>\""}], 
                 ")"}], "&"}], "/@", 
               RowBox[{"Part", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\"", ",", 
                   "\"\<D\>\"", ",", "\"\<E\>\"", ",", "\"\<F\>\"", ",", 
                   "\"\<G\>\""}], "}"}], ",", "keep0"}], "]"}]}]}], 
             "}"}]}]}]}], "]"}]}], "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.768233141047119*^9, 3.7682332876085906`*^9}, {
   3.7682333267749357`*^9, 3.768233714551135*^9}, {3.7682337483770885`*^9, 
   3.7682338134158697`*^9}, {3.7682339397133303`*^9, 
   3.7682339446022377`*^9}, {3.7682339746184273`*^9, 
   3.7682340103684077`*^9}, {3.768244318611882*^9, 3.768244321706608*^9}, 
   3.7682450035894675`*^9, {3.7682601723584146`*^9, 3.7682602250320597`*^9}, {
   3.7682602924243164`*^9, 3.768260550856988*^9}, 3.768260598453779*^9, {
   3.7682607293504496`*^9, 3.768260732007351*^9}, {3.7682607775423737`*^9, 
   3.768260789944236*^9}, {3.7682609598556185`*^9, 3.768260980092822*^9}, {
   3.768261354248853*^9, 3.768261354377509*^9}, 3.7682613912579613`*^9, 
   3.7683973971132627`*^9, {3.768414717828379*^9, 3.768414757279173*^9}, {
   3.7684151438119855`*^9, 3.768415144548046*^9}, {3.768415262166272*^9, 
   3.768415389359886*^9}, {3.768415481535135*^9, 3.7684156929112053`*^9}, {
   3.7684157497752857`*^9, 3.768416098790879*^9}, {3.768416131920354*^9, 
   3.7684161993263617`*^9}, {3.768416237505315*^9, 3.7684162689926915`*^9}, {
   3.7684162996896524`*^9, 3.7684163028552227`*^9}, {3.7684163367117558`*^9, 
   3.768416528315194*^9}, {3.768416625056694*^9, 3.7684166678155174`*^9}, {
   3.7684168996824684`*^9, 3.768416921265335*^9}, {3.7684169732414484`*^9, 
   3.768416987202144*^9}, {3.76841763164132*^9, 3.7684177140510015`*^9}, {
   3.768417780269605*^9, 3.768417802306721*^9}, {3.7684179403489428`*^9, 
   3.7684180260293427`*^9}, {3.768418058684089*^9, 3.7684180922918024`*^9}, {
   3.768418125612796*^9, 3.768418190596567*^9}, {3.768418276003973*^9, 
   3.7684182985896177`*^9}, {3.768418374941599*^9, 3.7684184371663303`*^9}, {
   3.7684184709969015`*^9, 3.7684185740374827`*^9}, {3.768418650317033*^9, 
   3.7684186541348004`*^9}, {3.768418702556385*^9, 3.768418710132142*^9}, {
   3.768418776157716*^9, 3.7684189372932105`*^9}, {3.7684191370600214`*^9, 
   3.7684191814546537`*^9}, {3.7684983434865403`*^9, 
   3.7684983607886624`*^9}, {3.7684985813331146`*^9, 3.768498584500823*^9}, {
   3.768498674583189*^9, 3.7684988133888626`*^9}, {3.768498857166295*^9, 
   3.768498882429784*^9}, {3.768677230466652*^9, 3.7686772304726486`*^9}, {
   3.7686799450775566`*^9, 3.7686799459392805`*^9}, {3.7686802214603424`*^9, 
   3.7686802221252775`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Draw Poly", "Section",
 CellChangeTimes->{{3.7684080193189993`*^9, 3.7684080251095233`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "drawPoly"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "drawPoly", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"drNotables", "\[Rule]", "False"}], ",", 
     RowBox[{"drSubtri", "\[Rule]", "False"}], ",", 
     RowBox[{"drLoci", "\[Rule]", "False"}], ",", 
     RowBox[{"drMedians", "\[Rule]", "False"}], ",", 
     RowBox[{"drExcentral", "\[Rule]", "False"}], ",", 
     RowBox[{"drCentroids", "\[Rule]", "False"}], ",", 
     RowBox[{"drCentroidLabels", "\[Rule]", "False"}], ",", 
     RowBox[{"drError", "\[Rule]", "False"}], ",", 
     RowBox[{"drCircs", "\[Rule]", "False"}], ",", 
     RowBox[{"drIncs", "\[Rule]", "False"}], ",", 
     RowBox[{"vtx", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
     RowBox[{"plotAll", "\[Rule]", "False"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawPoly", "[", 
    RowBox[{"polyErr_", ",", "notableLoci_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "poly", ",", "a", ",", "centroids", ",", "centroidNames", ",", "lab", 
       ",", "pnames", ",", "meds", ",", "polyTangs", ",", "polyInters", ",", 
       "polyInterNames", ",", "tri1", ",", "notables", ",", "circs", ",", 
       "incs", ",", "\[IndentingNewLine]", 
       RowBox[{"lgt", "=", ".25"}], ",", 
       RowBox[{"fnt", "=", "14"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"poly", "=", 
       RowBox[{"\"\<poly\>\"", "/.", "polyErr"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"a", "=", 
       RowBox[{"\"\<a\>\"", "/.", "polyErr"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"centroids", "=", 
       RowBox[{"getCentroids", "[", "poly", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"centroidNames", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(G\), \(vtx\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(G\), \(per\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(G\), \(lam\)]\)\>\""}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lab", "=", 
       RowBox[{"\"\<error: \>\"", "<>", 
        RowBox[{"nfn", "[", 
         RowBox[{
          RowBox[{"N", "@", 
           RowBox[{"(", 
            RowBox[{"\"\<error\>\"", "/.", "polyErr"}], ")"}]}], ",", "3"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pnames", "=", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\"", ",", "\"\<D\>\"", 
           ",", "\"\<E\>\"", ",", "\"\<F\>\"", ",", "\"\<G\>\"", ",", 
           "\"\<H\>\"", ",", "\"\<I\>\"", ",", "\"\<J\>\"", ",", 
           "\"\<K\>\""}], "}"}], ",", 
         RowBox[{"Length", "@", "poly"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"meds", "=", 
       RowBox[{"getMediansV", "@", "poly"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"polyTangs", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"perp", "[", 
          RowBox[{"ellGrad", "[", 
           RowBox[{"a", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@", 
        "poly"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"polyInters", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"interRays", "[", 
           RowBox[{"#1", ",", "#2", ",", "#3", ",", "#4"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"poly", ",", "polyTangs", ",", 
           RowBox[{"RotateLeft", "@", "poly"}], ",", 
           RowBox[{"RotateLeft", "@", "polyTangs"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"polyInterNames", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "@", "drExcentral"}], ",", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#1", "<>", "\"\<'\>\"", "<>", "#2", "<>", "\"\<'\>\""}],
              ")"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"pnames", ",", 
             RowBox[{"RotateLeft", "@", "pnames"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"**", "*"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "@", "drCircs"}], ",", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"sides", ",", "tri", ",", "cir"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"circs", "=", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"tri", "=", 
                RowBox[{"Take", "[", 
                 RowBox[{
                  RowBox[{"RotateLeft", "[", 
                   RowBox[{"poly", ",", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", "3"}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"cir", "=", 
                RowBox[{"getCircumcenterTrilin", "[", 
                 RowBox[{"tri", ",", 
                  RowBox[{"RotateLeft", "@", 
                   RowBox[{"triLengths", "@", "tri"}]}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"cir", "=", 
                  RowBox[{"getCircumcenter", "@@", "tri"}]}], ";"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"cir", ",", 
                 RowBox[{"magn", "[", 
                  RowBox[{"cir", "-", 
                   RowBox[{"tri", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}]}], ",", 
              RowBox[{"(*", " ", 
               RowBox[{
               "returns", " ", "circumcenter", " ", "and", " ", 
                "circumradius"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "@", "poly"}]}], "}"}]}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"circs", "=", 
            RowBox[{"Take", "[", 
             RowBox[{"circs", ",", "1"}], "]"}]}], ";"}], "*)"}], 
         "\[IndentingNewLine]", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "@", "drIncs"}], ",", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"sides", ",", "tri", ",", "inc"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"incs", "=", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"tri", "=", 
                RowBox[{"Take", "[", 
                 RowBox[{
                  RowBox[{"RotateLeft", "[", 
                   RowBox[{"poly", ",", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", "3"}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"inc", "=", 
                RowBox[{"getIncenterTrilin", "[", 
                 RowBox[{"tri", ",", 
                  RowBox[{"RotateLeft", "@", 
                   RowBox[{"triLengths", "@", "tri"}]}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"cir", "=", 
                  RowBox[{"getCircumcenter", "@@", "tri"}]}], ";"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"inc", ",", 
                 RowBox[{"closestDist", "[", 
                  RowBox[{"inc", ",", 
                   RowBox[{"tri", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"tri", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}]}], ",", 
              RowBox[{"(*", " ", 
               RowBox[{
               "returns", " ", "circumcenter", " ", "and", " ", 
                "circumradius"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "@", "poly"}]}], "}"}]}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"circs", "=", 
            RowBox[{"Take", "[", 
             RowBox[{"circs", ",", "1"}], "]"}]}], ";"}], "*)"}], 
         "\[IndentingNewLine]", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "@", "drNotables"}], "||", 
         RowBox[{"OptionValue", "@", "drSubtri"}]}], ",", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "normals", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tri1", "=", 
            RowBox[{"Part", "[", 
             RowBox[{"poly", ",", 
              RowBox[{"OptionValue", "@", "vtx"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"normals", "=", 
            RowBox[{"gettriBisectors", "@@", "tri1"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"notables", "=", 
            RowBox[{"getNotables", "[", 
             RowBox[{"tri1", ",", "normals"}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "@", "Large"}], ",", 
          RowBox[{"Point", "@", "poly"}], ",", 
          RowBox[{"FaceForm", "@", "None"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "[", 
             RowBox[{"{", 
              RowBox[{"Black", ",", "Thick"}], "}"}], "]"}], ",", 
            RowBox[{"FaceForm", "@", "Gray"}], ",", 
            RowBox[{"Opacity", "@", ".1"}], ",", 
            RowBox[{"Polygon", "@", "poly"}], ",", "Black", ",", 
            RowBox[{"Point", "@", "poly"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"drawArrow", "[", 
                RowBox[{"#1", ",", 
                 RowBox[{"norm", "[", 
                  RowBox[{"perpNeg", "[", "#2", "]"}], "]"}], ",", "lgt"}], 
                "]"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{"poly", ",", "polyTangs"}], "}"}]}], "]"}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drCentroids"}], ",", 
            RowBox[{"{", 
             RowBox[{"Black", ",", 
              RowBox[{"MapThread", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Point", "@", "#1"}], ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "@", "drCentroidLabels"}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#2", ",", "14"}], "]"}], ",", "#1", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1.5"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], "}"}], "&"}], ",", 
                RowBox[{"{", 
                 RowBox[{"centroids", ",", "centroidNames"}], "}"}]}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drExcentral"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "@", 
               RowBox[{"Darker", "@", "Green"}]}], ",", 
              RowBox[{"Polygon", "@", "polyInters"}], ",", 
              RowBox[{"Darker", "@", "Green"}], ",", 
              RowBox[{"Point", "@", "polyInters"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"MapThread", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "fnt"}], "]"}], ",", "#2", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.25"}], ",", 
                    RowBox[{"-", "1.25"}]}], "}"}]}], "]"}], "&"}], ",", 
                RowBox[{"{", 
                 RowBox[{"polyInterNames", ",", "polyInters"}], "}"}]}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"#1", ",", "fnt"}], "]"}], ",", 
                 RowBox[{"ray", "[", 
                  RowBox[{"#2", ",", 
                   RowBox[{"norm", "[", 
                    RowBox[{"perp", "[", "#3", "]"}], "]"}], ",", 
                   RowBox[{"lgt", "/", "2"}]}], "]"}]}], "]"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{"pnames", ",", "poly", ",", "polyTangs"}], "}"}]}], 
             "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMedians"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Dashed", ",", "Blue", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Line", "[", 
                   RowBox[{"{", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}], "&"}], "/@",
                  "polyInters"}]}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", 
                RowBox[{"Point", "@", "meds"}], ",", 
                RowBox[{"Point", "@", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drCircs"}], ",", 
            RowBox[{"{", 
             RowBox[{"Red", ",", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Circle", "[", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
                 "circs"}]}], "}"}], ",", 
              RowBox[{"Point", "[", 
               RowBox[{"First", "/@", "circs"}], "]"}], ",", 
              RowBox[{"Circle", "[", 
               RowBox[{
                RowBox[{"circs", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", ".05"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drIncs"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Darker", "@", "Green"}], ",", "Dashed", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Circle", "[", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
               "incs"}], ",", 
              RowBox[{"Point", "[", 
               RowBox[{"First", "/@", "incs"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drNotables"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"List", "@@", 
               RowBox[{"drawSomeNotables", "[", 
                RowBox[{"notables", ",", 
                 RowBox[{"First", "@", "notableLoci"}]}], "]"}]}], ",", 
              RowBox[{"EdgeForm", "@", "None"}], ",", 
              RowBox[{"FaceForm", "@", "Red"}], ",", 
              RowBox[{"Opacity", "@", ".1"}], ",", 
              RowBox[{"Polygon", "@", "tri1"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drSubtri"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "@", "None"}], ",", 
              RowBox[{"FaceForm", "@", "Red"}], ",", 
              RowBox[{"Opacity", "@", ".2"}], ",", 
              RowBox[{"Polygon", "@", "tri1"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"plotEll", "[", "a", "]"}], ",", "gr", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drLoci"}], ",", 
            RowBox[{"Second", "@", "notableLoci"}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "@", "drError"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "lab"}], ",", 
          RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "plotAll"}], ",", "All", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "}"}]}], "]"}], 
          ")"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", "Medium"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"AxesStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"{", 
           RowBox[{"Dotted", ",", "Gray"}], "}"}], "]"}]}]}], "]"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7678085017188916`*^9, 3.767808981864741*^9}, {
   3.7678092700242033`*^9, 3.76780931626367*^9}, {3.7678093972558327`*^9, 
   3.767809426535449*^9}, {3.767809529320511*^9, 3.7678095318551626`*^9}, {
   3.7678096307121687`*^9, 3.7678098638010693`*^9}, {3.767810032550907*^9, 
   3.767810117576721*^9}, {3.7678103772874565`*^9, 3.7678104269830894`*^9}, {
   3.7678141158037634`*^9, 3.7678143526114254`*^9}, {3.767814403220812*^9, 
   3.7678144370121965`*^9}, {3.767814502211553*^9, 3.767814549612032*^9}, {
   3.7678146478123045`*^9, 3.767814742237284*^9}, {3.7678147749816265`*^9, 
   3.7678148000205164`*^9}, {3.7678149676659584`*^9, 
   3.7678150626372576`*^9}, {3.767815112957367*^9, 3.767815382005801*^9}, {
   3.7678154202310853`*^9, 3.7678155318960905`*^9}, {3.7678242890347695`*^9, 
   3.7678242902505693`*^9}, {3.7678243553841643`*^9, 3.767824379638403*^9}, {
   3.767824503382744*^9, 3.767824526318766*^9}, {3.7678245735910196`*^9, 
   3.7678245956846266`*^9}, {3.7678246288158355`*^9, 3.767824999635398*^9}, {
   3.7678250668368015`*^9, 3.76782510403531*^9}, {3.76782513646332*^9, 
   3.7678251508787727`*^9}, {3.767825275341873*^9, 3.767825389837963*^9}, {
   3.7678260054409065`*^9, 3.767826054551028*^9}, {3.767826085626747*^9, 
   3.767826124844776*^9}, {3.7678261579573193`*^9, 3.7678261622943687`*^9}, 
   3.76782624065123*^9, {3.76782628688446*^9, 3.7678263943152723`*^9}, {
   3.767889180532549*^9, 3.7678891992594585`*^9}, {3.7678892530469413`*^9, 
   3.7678894404737277`*^9}, {3.7679060266713486`*^9, 3.767906089210452*^9}, {
   3.7679065196522436`*^9, 3.767906565627272*^9}, {3.767906687904908*^9, 
   3.7679068158496885`*^9}, {3.7679068492745705`*^9, 3.767906870384108*^9}, {
   3.76790690294003*^9, 3.7679069700415506`*^9}, {3.7679070782092304`*^9, 
   3.767907079016071*^9}, {3.7679072171795473`*^9, 3.7679072242127075`*^9}, {
   3.767907305877277*^9, 3.7679073522881384`*^9}, {3.7679075451293387`*^9, 
   3.7679075490568333`*^9}, {3.767910664293521*^9, 3.76791069007955*^9}, {
   3.767911467743314*^9, 3.7679115079118757`*^9}, {3.7679118230795336`*^9, 
   3.767911841733638*^9}, {3.7679119511331835`*^9, 3.767911963742428*^9}, {
   3.7681664806016607`*^9, 3.768166657948532*^9}, {3.7681666960992155`*^9, 
   3.7681666992906785`*^9}, {3.768167677776636*^9, 3.7681676972441573`*^9}, {
   3.7681682296758194`*^9, 3.7681682472416086`*^9}, {3.7681687583413577`*^9, 
   3.7681687621392255`*^9}, {3.7682071525983057`*^9, 
   3.7682073152133713`*^9}, {3.768207400990406*^9, 3.7682074561829996`*^9}, {
   3.7682075804510646`*^9, 3.768207582086691*^9}, {3.7682078143570166`*^9, 
   3.7682079183447437`*^9}, {3.7682079698650775`*^9, 3.768207991617919*^9}, {
   3.768209328028623*^9, 3.768209377195245*^9}, {3.7682094487734985`*^9, 
   3.7682094488771925`*^9}, {3.768218139840863*^9, 3.7682181424288654`*^9}, {
   3.768219732640252*^9, 3.7682197363752394`*^9}, {3.768221359328375*^9, 
   3.7682213927840815`*^9}, {3.768221702458665*^9, 3.768221704513177*^9}, {
   3.7682218580174675`*^9, 3.7682219234735312`*^9}, {3.7682219799288874`*^9, 
   3.768221991496563*^9}, {3.768222095614764*^9, 3.7682221001346126`*^9}, {
   3.7682221686485214`*^9, 3.768222190810322*^9}, {3.7682249512694745`*^9, 
   3.7682249526029773`*^9}, {3.768232952606535*^9, 3.768232954300007*^9}, {
   3.7682330002641897`*^9, 3.768233006564642*^9}, {3.7682350554686947`*^9, 
   3.768235067219102*^9}, {3.7683833815092406`*^9, 3.7683834903081193`*^9}, {
   3.7683835254691906`*^9, 3.7683836285887003`*^9}, {3.7683841247540917`*^9, 
   3.768384191818947*^9}, {3.7683848052122965`*^9, 3.768384810444312*^9}, {
   3.768386154198705*^9, 3.768386186687956*^9}, {3.7683862361993065`*^9, 
   3.768386350754469*^9}, {3.768386467112547*^9, 3.768386482007121*^9}, {
   3.76838684503515*^9, 3.7683868585639706`*^9}, {3.768388101100644*^9, 
   3.7683881176029596`*^9}, {3.7683881675784283`*^9, 
   3.7683882241404867`*^9}, {3.7684080335948772`*^9, 
   3.7684081581891146`*^9}, {3.7684081948272147`*^9, 3.768408239122406*^9}, {
   3.7684083991412725`*^9, 3.768408400772914*^9}, {3.7684084522247567`*^9, 
   3.76840856760554*^9}, {3.76840860011724*^9, 3.7684086317515965`*^9}, {
   3.7684093311940517`*^9, 3.7684093712579985`*^9}, {3.7684094372097673`*^9, 
   3.7684094486741343`*^9}, {3.768470481359774*^9, 3.7684705940089626`*^9}, 
   3.768470747680976*^9, {3.7684708346479053`*^9, 3.7684708410557833`*^9}, {
   3.7684741164532843`*^9, 3.7684741383504114`*^9}, {3.768474185075368*^9, 
   3.7684742953957005`*^9}, {3.7684743524847393`*^9, 
   3.7684745570779877`*^9}, {3.768474677211889*^9, 3.7684747917494287`*^9}, {
   3.768474917821692*^9, 3.7684749458302207`*^9}, {3.768475021341651*^9, 
   3.7684750231338906`*^9}, {3.7684750713839335`*^9, 3.768475221272056*^9}, {
   3.7684754888216934`*^9, 3.7684754918067164`*^9}, {3.76847553411207*^9, 
   3.7684755517020006`*^9}, {3.7684760206221266`*^9, 
   3.7684760245037947`*^9}, {3.768476054999016*^9, 3.7684760577187185`*^9}, {
   3.768476096727513*^9, 3.7684761204481*^9}, {3.7684765160243483`*^9, 
   3.768476523416624*^9}, {3.7684765881385784`*^9, 3.768476647730098*^9}, {
   3.7684768345773315`*^9, 3.7684768768653092`*^9}, {3.7684783844196377`*^9, 
   3.7684784502513304`*^9}, {3.7684785788102436`*^9, 3.768478648763686*^9}, {
   3.7684787935969715`*^9, 3.768478811365958*^9}, {3.768478893396134*^9, 
   3.768478893485893*^9}, {3.768478926572177*^9, 3.768478926708811*^9}, {
   3.768478981750832*^9, 3.7684789852764387`*^9}, {3.7684791617395926`*^9, 
   3.7684792041977453`*^9}, {3.768479236646332*^9, 3.7684792444673586`*^9}, {
   3.768479312267826*^9, 3.7684793286556807`*^9}, {3.7685044895283246`*^9, 
   3.768504532488426*^9}, {3.7686356281996346`*^9, 3.768635676648837*^9}, {
   3.7686357183511157`*^9, 3.7686357330957165`*^9}, {3.7686487327467327`*^9, 
   3.7686487694131026`*^9}, {3.768648862584386*^9, 3.7686488711906753`*^9}, {
   3.7686489089928274`*^9, 3.768648916879753*^9}, {3.7686492576092515`*^9, 
   3.7686492612146463`*^9}, {3.7686513361606703`*^9, 
   3.7686513703800106`*^9}, {3.7686514291313305`*^9, 
   3.7686514317064495`*^9}, {3.7686752555179405`*^9, 3.768675257244991*^9}, {
   3.768677230480614*^9, 3.7686772305863323`*^9}, {3.7686799474332857`*^9, 
   3.768680000812162*^9}, {3.7686800625549107`*^9, 3.768680063541303*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "showOnePoly"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"showOnePoly", "[", 
    RowBox[{
    "alphaT_", ",", "i_", ",", "notableLoci_", ",", "fnVtx0_", ",", 
     "fnErrorP_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "polyErr", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"polyErr", "=", 
       RowBox[{"polyError", "[", 
        RowBox[{"alphaT", ",", "i", ",", "fnVtx0", ",", "fnErrorP"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"drawPoly", "[", 
       RowBox[{"polyErr", ",", "notableLoci", ",", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"{", "opts", "}"}], ",", " ", 
          RowBox[{"Options", "[", "drawPoly", "]"}]}], "]"}]}], "]"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.768408690824973*^9, 3.768408722521268*^9}, {
   3.7684088244339533`*^9, 3.768408826377759*^9}, {3.7684088757538977`*^9, 
   3.7684088785374637`*^9}, {3.7684699709064875`*^9, 
   3.7684700125143967`*^9}, {3.76847015055381*^9, 3.7684701511940956`*^9}, {
   3.7684704139466248`*^9, 3.7684704536425285`*^9}, {3.768470633226516*^9, 
   3.7684706336812725`*^9}, {3.7686514022840695`*^9, 3.768651449204373*^9}, 
   3.768674839089263*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getPolyNotableLoci"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPolyNotableLoci", "[", 
    RowBox[{"alphaT_", ",", "fnVtx0_", ",", 
     RowBox[{"vtx_:", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
     RowBox[{"nots_:", 
      RowBox[{"{", 
       RowBox[{"\"\<inc\>\"", ",", "\"\<bar\>\"", ",", "\"\<ort\>\""}], 
       "}"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"polys", ",", "normals", ",", "tris", ",", "notables"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<cir\>\"", ",", "\"\<npc\>\"", ",", "\"\<mit\>\"", ",", 
         "\"\<feu\>\""}], "}"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"polys", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"polyVtx", "[", 
          RowBox[{"alphaT", ",", "i", ",", "fnVtx0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"\"\<alphas\>\"", "/.", "alphaT"}], "]"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"polys", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"polys", ",", 
         RowBox[{"First", "@", "polys"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tris", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Part", "[", 
          RowBox[{"#", ",", "vtx"}], "]"}], "&"}], "/@", "polys"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"normals", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"gettriBisectors", "@@", "#"}], "&"}], "/@", "tris"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"notables", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"getNotables", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"tris", ",", "normals"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"nots", ",", 
        RowBox[{"ListLinePlot", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"nots", "/.", "notables"}], "]"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{"nots", "/.", "ptClrs"}], ")"}]}]}], "]"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.76840957628218*^9, 3.7684096494586415`*^9}, {
   3.7684715811405177`*^9, 3.7684716322196035`*^9}, {3.768636155778983*^9, 
   3.768636175947646*^9}, 3.7686514608929663`*^9, {3.7686772305893235`*^9, 
   3.768677230598301*^9}, {3.768680001659917*^9, 3.7686800045162725`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"makeVtxLabs", "[", "vtxList_", "]"}], ":=", 
   RowBox[{"StringJoin", "/@", 
    RowBox[{"Map", "[", 
     RowBox[{"ToString", ",", "vtxList", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.768640069424514*^9, 3.768640086640294*^9}, {
  3.7686772306003227`*^9, 3.768677230603315*^9}, {3.768680005491641*^9, 
  3.7686800064829893`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "manipulatePolyVtx"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"manipulatePolyVtx", "[", 
    RowBox[{
    "alphaT_", ",", "notableLociList_", ",", "fnVtx0_", ",", "fnErrorP_", ",", 
     RowBox[{"vtxList_:", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}], "}"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vtxLabs", ",", "vtxMatch", ",", "lociMatch"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vtxLabs", "=", 
       RowBox[{"makeVtxLabs", "@", "vtxList"}]}], ";", "\n", 
      RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"vtxMatch", "=", 
          RowBox[{"First", "@", 
           RowBox[{"FirstPosition", "[", 
            RowBox[{"vtxLabs", ",", "tri"}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"lociMatch", "=", 
          RowBox[{"notableLociList", "[", 
           RowBox[{"[", "vtxMatch", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Show", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"showOnePoly", "[", 
            RowBox[{
            "alphaT", ",", "i", ",", "\[IndentingNewLine]", "lociMatch", ",", 
             "fnVtx0", ",", "fnErrorP", ",", "\[IndentingNewLine]", 
             RowBox[{"drNotables", "\[Rule]", "drNotables0"}], ",", 
             RowBox[{"drSubtri", "\[Rule]", "drSubtri0"}], ",", 
             RowBox[{"drLoci", "\[Rule]", "drLoci0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"drExcentral", "\[Rule]", "drExcentral0"}], ",", 
             RowBox[{"drCentroids", "\[Rule]", "drCentroids0"}], ",", 
             RowBox[{"drCentroidLabels", "\[Rule]", "drCentroidLabels0"}], 
             ",", 
             RowBox[{"drCircs", "\[Rule]", "drCircs0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"drIncs", "\[Rule]", "drIncs0"}], ",", 
             RowBox[{"plotAll", "\[Rule]", "plotAll0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"vtx", "\[Rule]", 
              RowBox[{"vtxList", "[", 
               RowBox[{"[", "vtxMatch", "]"}], "]"}]}]}], "]"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", "1"}], "}"}], ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"\"\<alphas\>\"", "/.", "alphaT"}], "]"}], ",", "1", ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"drExcentral0", ",", "False", ",", "\"\<excentral\>\""}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"drSubtri0", ",", "False", ",", "\"\<subtri\>\""}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"drNotables0", ",", "True", ",", "\"\<notables\>\""}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"drLoci0", ",", "True", ",", "\"\<loci\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"drCentroids0", ",", "True", ",", "\"\<centroids\>\""}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "drCentroidLabels0", ",", "False", ",", "\"\<centroidLabels\>\""}],
            "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"drCircs0", ",", "False", ",", "\"\<circs\>\""}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"drIncs0", ",", "False", ",", "\"\<incs\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"tri", ",", 
            RowBox[{"vtxLabs", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "vtxLabs"}], "}"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"plotAll0", ",", "False", ",", "\"\<plotAll\>\""}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
        RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7685569636669025`*^9, 3.768557089597626*^9}, {
  3.7685571254621763`*^9, 3.768557137789694*^9}, {3.768557202870901*^9, 
  3.7685573913348308`*^9}, {3.76855752356099*^9, 3.7685575248804655`*^9}, {
  3.7686358266868753`*^9, 3.768635846244205*^9}, {3.7686359468914175`*^9, 
  3.7686359530443764`*^9}, {3.7686359883192425`*^9, 3.7686359895190363`*^9}, {
  3.7686362355658636`*^9, 3.7686362549184923`*^9}, {3.768636308721697*^9, 
  3.768636322574708*^9}, {3.7686363946700344`*^9, 3.768636395054041*^9}, {
  3.7686401700203915`*^9, 3.7686401759810486`*^9}, {3.7686487846853065`*^9, 
  3.768648803410536*^9}, {3.768651471086728*^9, 3.7686515183673286`*^9}, {
  3.768660979944558*^9, 3.768660983535946*^9}, {3.768677230606278*^9, 
  3.768677230619244*^9}, {3.7686800072449813`*^9, 3.7686800109659996`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "showOneLocusVtx"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "showOneLocusVtx", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"filling", "\[Rule]", "None"}], ",", 
     RowBox[{"fillingStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Opacity", "@", ".1"}], "}"}]}], ",", 
     RowBox[{"plotAll", "\[Rule]", "False"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"showOneLocusVtx", "[", 
    RowBox[{
    "a_", ",", "i_", ",", "lociList_", ",", "vtxList_", ",", "vtx_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "vtxLabs", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vtxLabs", "=", 
       RowBox[{"makeVtxLabs", "@", "vtxList"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"plotEll", "[", "a", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"MapIndexed", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vtx", "\[Equal]", "\"\<all\>\""}], "||", 
                  RowBox[{"vtx", "\[Equal]", "#1"}]}], ",", 
                 RowBox[{"Legended", "[", 
                  RowBox[{
                   RowBox[{"lociList", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"First", "@", "#2"}], ",", "i"}], "]"}], "]"}], 
                   ",", 
                   RowBox[{"vtxLabs", "[", 
                    RowBox[{"[", 
                    RowBox[{"First", "@", "#2"}], "]"}], "]"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], "}"}]}], "]"}], "&"}], ",",
               "vtxLabs"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Filling", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{"OptionValue", "@", "filling"}], ")"}]}], ",", 
            RowBox[{"FillingStyle", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{"OptionValue", "@", "fillingStyle"}], ")"}]}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Blue", ",", "Red", ",", 
               RowBox[{"Darker", "@", "Green"}]}], "}"}]}], "*)"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", "Medium"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "plotAll"}], ",", "All", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "]"}], ")"}]}], ",",
         "\[IndentingNewLine]", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"centerNames", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\<, a/b=\>\"", "<>", 
            RowBox[{"nfn", "[", 
             RowBox[{"a", ",", "2"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "16"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7686391094545693`*^9, 3.7686391649605207`*^9}, {
   3.7686391985688753`*^9, 3.768639199705865*^9}, {3.7686392549865575`*^9, 
   3.768639274400047*^9}, {3.768639345082388*^9, 3.768639346274205*^9}, {
   3.7686394221052647`*^9, 3.7686394278968005`*^9}, {3.768639581753657*^9, 
   3.7686396155613194`*^9}, {3.7686397195708566`*^9, 3.768639736073532*^9}, 
   3.768639818882594*^9, {3.7686401115876317`*^9, 3.768640136387141*^9}, {
   3.7686403607067857`*^9, 3.7686403724681053`*^9}, {3.768640402530776*^9, 
   3.7686404077549477`*^9}, {3.768640438875332*^9, 3.768640447818547*^9}, {
   3.768647859247199*^9, 3.768647887472912*^9}, {3.7686481097944827`*^9, 
   3.768648111065113*^9}, {3.768648211064562*^9, 3.7686482144321733`*^9}, {
   3.7686482698725367`*^9, 3.7686483074418387`*^9}, 3.768651575118684*^9, {
   3.7686516368708153`*^9, 3.7686516878468547`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerically Calculate Exit Angle: \[Alpha]", "Section",
 CellChangeTimes->{{3.7684056758590803`*^9, 3.768405688689765*^9}, {
  3.7684057614925723`*^9, 3.768405769123183*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "gradDescPentErr"}], ";", 
  RowBox[{
   RowBox[{"gradDescPentErr", "[", 
    RowBox[{"a_", ",", "p1_", ",", "alpha0_", ",", 
     RowBox[{"debug_:", "False"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"grad", ",", 
       RowBox[{"dalpha", "=", ".0001"}], ",", "alpha", ",", "alphaSav", ",", 
       RowBox[{"error", "=", "1"}], ",", 
       RowBox[{"maxError", "=", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}], ",", 
       RowBox[{"eps", "=", ".001"}], ",", "it", ",", 
       RowBox[{"itMax", "=", "1000"}], ",", 
       RowBox[{"pentErr", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"alpha", "=", "alpha0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"it", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"error", ">", "maxError"}], "&&", 
         RowBox[{"it", "<", "itMax"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"it", "++"}], ";", "\[IndentingNewLine]", 
         RowBox[{"pentErr", "=", 
          RowBox[{"pentErrorP", "[", 
           RowBox[{"a", ",", "p1", ",", "alpha"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"grad", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"pentErrorP", "[", 
              RowBox[{"a", ",", "p1", ",", 
               RowBox[{"alpha", "+", "dalpha"}]}], "]"}], "-", "pentErr"}], 
            ")"}], "/", "dalpha"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"alphaSav", "=", "alpha"}], ";", "\[IndentingNewLine]", 
         RowBox[{"alpha", "=", 
          RowBox[{"alpha", "-", 
           RowBox[{"eps", " ", "grad"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"error", "=", 
          RowBox[{"Abs", "[", 
           RowBox[{"alpha", "-", "alphaSav"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"debug", "&&", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{"it", ",", "100"}], "]"}], "\[Equal]", "0"}]}], ",", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<it=\>\"", ",", "it", ",", "\"\<, error=\>\"", ",", "error"}],
             "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"it", ",", "error", ",", "alpha", ",", "pentErr"}], "}"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.76821480574231*^9, 3.7682151029347363`*^9}, {
   3.7682157719750395`*^9, 3.768215884593628*^9}, {3.7682159175055885`*^9, 
   3.7682160403058643`*^9}, {3.768216073745514*^9, 3.768216100994133*^9}, {
   3.7682166830991435`*^9, 3.768216737539404*^9}, {3.7682167714910345`*^9, 
   3.768216794107608*^9}, {3.7682169326284103`*^9, 3.768216945403305*^9}, {
   3.7682170220372963`*^9, 3.768217048221696*^9}, {3.7682172508035383`*^9, 
   3.7682172666781473`*^9}, 3.7682173022278023`*^9, {3.7682180082057004`*^9, 
   3.7682180090944448`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getPolyAlphaTOneQuarter"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPolyAlphaTOneQuarter", "[", 
    RowBox[{"errFn_", ",", "a_", ",", "alpha0_", ",", 
     RowBox[{"degStep_:", "10"}], ",", "verbose_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "lastAlpha", ",", "tRad", ",", "min", ",", "tab", ",", "ts", ",", 
       "alphas", ",", "p1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lastAlpha", "=", "alpha0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tab", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"tRad", "=", 
           RowBox[{"toRad", "[", "tDeg", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"p1", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"a", " ", 
              RowBox[{"Cos", "[", "tRad", "]"}]}], ",", 
             RowBox[{"Sin", "[", "tRad", "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"min", "=", 
           RowBox[{"Quiet", "@", 
            RowBox[{"FindMinimum", "[", 
             RowBox[{
              RowBox[{"errFn", "[", 
               RowBox[{"a", ",", "p1", ",", "alpha"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"alpha", ",", "lastAlpha"}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Method", "->", "\"\<PrincipalAxis\>\""}]}], 
             RowBox[{"(*", 
              RowBox[{",", 
               RowBox[{"WorkingPrecision", "\[Rule]", "40"}]}], "*)"}], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"lastAlpha", "=", 
           RowBox[{"(", 
            RowBox[{"alpha", "/.", 
             RowBox[{"min", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"min", "=", 
             RowBox[{"gradDescPentErr", "[", 
              RowBox[{"a", ",", "p1", ",", "lastAlpha"}], "]"}]}], ";"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"lastAlpha", "=", 
             RowBox[{"min", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"verbose", ",", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<t=\>\"", ",", "tDeg", ",", "\"\<; min=\>\"", ",", "min"}], 
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"tDeg", ",", "tRad", ",", "lastAlpha", ",", "min"}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"takes", " ", "advantage", " ", "of", " ", "4"}], "-", 
           RowBox[{"arc", " ", "symmetry"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"tDeg", ",", "0", ",", "90", ",", "degStep"}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "\[Rule]", "a"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<tsDeg\>\"", "\[Rule]", 
         RowBox[{"First", "/@", "tab"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<tsRad\>\"", "\[Rule]", 
         RowBox[{"Second", "/@", "tab"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<alphas\>\"", "\[Rule]", 
         RowBox[{"Third", "/@", "tab"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<mins\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "&"}], "/@", "tab"}], ")"}]}]}], 
       "\[IndentingNewLine]", "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.767810634022298*^9, 3.7678109086695027`*^9}, {
   3.7678109600382833`*^9, 3.7678110385975*^9}, {3.767811074941062*^9, 
   3.767811075148507*^9}, {3.767811116582264*^9, 3.767811122158447*^9}, {
   3.7678116126367917`*^9, 3.767811656589664*^9}, {3.7678117164857693`*^9, 
   3.7678117516612372`*^9}, {3.767811791085672*^9, 3.7678118315483437`*^9}, 
   3.7679086754753895`*^9, {3.7679087635637627`*^9, 3.767908764706705*^9}, {
   3.7679088209791913`*^9, 3.767908931125578*^9}, {3.767908997362411*^9, 
   3.7679090586903744`*^9}, {3.767909095452049*^9, 3.7679091005234814`*^9}, {
   3.7679095288827314`*^9, 3.7679095387623053`*^9}, {3.7679104204119396`*^9, 
   3.767910471697762*^9}, {3.7679105306113405`*^9, 3.7679105326109924`*^9}, {
   3.7681657518967657`*^9, 3.768165754152707*^9}, {3.7681662905617137`*^9, 
   3.768166308007779*^9}, {3.7681678425282297`*^9, 3.768167872127149*^9}, {
   3.7681679934551816`*^9, 3.7681679982942376`*^9}, {3.7681680624640017`*^9, 
   3.7681680645195026`*^9}, {3.7681696114390545`*^9, 
   3.7681696552873993`*^9}, {3.768170261158991*^9, 3.76817026544456*^9}, {
   3.7681702965802784`*^9, 3.768170310372727*^9}, {3.768170360403672*^9, 
   3.768170362452197*^9}, {3.768170471566339*^9, 3.7681704916040916`*^9}, {
   3.7681705787320366`*^9, 3.768170600789129*^9}, {3.768170671995755*^9, 
   3.768170676578498*^9}, {3.7681708287325783`*^9, 3.768170830458993*^9}, {
   3.7681709842999525`*^9, 3.768170984883393*^9}, {3.768171111610115*^9, 
   3.7681711134761343`*^9}, {3.768175150975972*^9, 3.768175157392809*^9}, {
   3.768203868618301*^9, 3.7682039059253926`*^9}, {3.768206734209761*^9, 
   3.768206756660576*^9}, {3.7682068070449457`*^9, 3.768206830025978*^9}, {
   3.76820989540923*^9, 3.7682099144087505`*^9}, {3.7682102525931163`*^9, 
   3.7682102765277977`*^9}, {3.7682103336807737`*^9, 3.768210368329707*^9}, {
   3.768210596839013*^9, 3.7682106274004*^9}, {3.768210997979575*^9, 
   3.7682110022019367`*^9}, {3.768211042497813*^9, 3.768211072241058*^9}, {
   3.76821110876169*^9, 3.768211170617893*^9}, {3.768216163329899*^9, 
   3.768216197070009*^9}, {3.768216236726077*^9, 3.768216269260178*^9}, {
   3.7682163516200857`*^9, 3.7682163981329217`*^9}, {3.768217912390621*^9, 
   3.7682179223811264`*^9}, {3.768218038677452*^9, 3.7682180389968653`*^9}, {
   3.7682180730172815`*^9, 3.768218074577114*^9}, {3.7682466670957603`*^9, 
   3.7682467452807093`*^9}, {3.7682600971324277`*^9, 
   3.7682600983504925`*^9}, {3.768384848158538*^9, 3.768384858345934*^9}, {
   3.7683849382843723`*^9, 3.768384968800858*^9}, {3.768385053331113*^9, 
   3.7683850591381187`*^9}, {3.7683851420196505`*^9, 3.768385147282589*^9}, {
   3.76838833580719*^9, 3.7683883359597826`*^9}, {3.7683892225695333`*^9, 
   3.768389227698832*^9}, {3.7683899725864215`*^9, 3.7683899834353213`*^9}, {
   3.7683904919801197`*^9, 3.7683904921396914`*^9}, {3.7683945966098056`*^9, 
   3.7683946200737295`*^9}, {3.7683946554751596`*^9, 3.7683946926428356`*^9}, 
   3.7683947327952456`*^9, {3.768405303124984*^9, 3.768405346964697*^9}, {
   3.768405382460878*^9, 3.7684053945570397`*^9}, {3.7684055517088175`*^9, 
   3.768405580949684*^9}, {3.7684073762297606`*^9, 3.7684073779381943`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Takes Advantage of 4-arc alpha symmetry (only computes fn from 0 to 90)\
\>", "Subsubsection",
 CellChangeTimes->{{3.768390375105198*^9, 3.7683904004634137`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "doubleList"}], ";", 
  RowBox[{
   RowBox[{"doubleList", "[", "vs_", "]"}], ":=", 
   RowBox[{"Join", "[", 
    RowBox[{"vs", ",", 
     RowBox[{"Rest", "[", 
      RowBox[{"Reverse", "@", "vs"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "quadrupleList"}], ";", 
  RowBox[{
   RowBox[{"quadrupleList", "[", "vs_", "]"}], ":=", 
   RowBox[{"Most", "[", 
    RowBox[{"doubleList", "@", 
     RowBox[{"doubleList", "@", "vs"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.76838933526939*^9, 3.7683893739356394`*^9}, {
  3.7683895896790195`*^9, 3.76838960523246*^9}, {3.7683902703214407`*^9, 
  3.7683902734478273`*^9}, {3.7684065566354685`*^9, 3.7684065658837557`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "quadrupleT"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"quadrupleT", "[", "theT_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"degStep", ",", "radStep"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"degStep", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\"\<tsDeg\>\"", "/.", "theT"}], ")"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\"\<tsDeg\>\"", "/.", "theT"}], ")"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"radStep", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\"\<tsRad\>\"", "/.", "theT"}], ")"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\"\<tsRad\>\"", "/.", "theT"}], ")"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"\"\<a\>\"", "/.", "theT"}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<tsDeg\>\"", "\[Rule]", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{"360", "-", "degStep"}], ",", "degStep"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<tsRad\>\"", "\[Rule]", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"2", "\[Pi]"}], "-", "radStep"}], ",", "radStep"}], 
          "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<alphas\>\"", "\[Rule]", 
         RowBox[{"quadrupleList", "[", 
          RowBox[{"\"\<alphas\>\"", "/.", "theT"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<mins\>\"", "\[Rule]", 
         RowBox[{"quadrupleList", "[", 
          RowBox[{"\"\<mins\>\"", "/.", "theT"}], "]"}]}]}], 
       "\[IndentingNewLine]", "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7683896733130975`*^9, 3.7683897453757877`*^9}, {
   3.7683897903995085`*^9, 3.7683899466248546`*^9}, {3.7683900320728073`*^9, 
   3.768390040146204*^9}, {3.7683901179711027`*^9, 3.7683901194581547`*^9}, 
   3.768406199339865*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getPolyAlphaT"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPolyAlphaT", "[", 
    RowBox[{
    "errFn_", ",", "a_", ",", "startAlpha_", ",", "degStep_", ",", 
     "verbose_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "theT", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "if", " ", "the", " ", "step", " ", "angle", " ", "is", " ", "too", 
        " ", "large"}], ",", " ", 
       RowBox[{"the", " ", "previous", " ", "guess", " ", 
        RowBox[{"won", "'"}], "t", " ", "help"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"theT", "=", 
       RowBox[{"getPolyAlphaTOneQuarter", "[", 
        RowBox[{
        "errFn", ",", "a", ",", "startAlpha", ",", "degStep", ",", 
         "verbose"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"theT", "=", 
       RowBox[{"quadrupleT", "@", "theT"}]}], ";", "\[IndentingNewLine]", 
      "theT"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7683910326421347`*^9, 3.768391096417637*^9}, {
  3.7683911815547905`*^9, 3.7683912137137957`*^9}, {3.7683912475947065`*^9, 
  3.768391254234969*^9}, {3.7683926935567474`*^9, 3.768392698348937*^9}, {
  3.7683946319440107`*^9, 3.7683946648889785`*^9}, {3.768405290970462*^9, 
  3.768405291961811*^9}, {3.7684053531940784`*^9, 3.768405355722324*^9}, {
  3.768405402754622*^9, 3.7684054660664463`*^9}, {3.7684055669790144`*^9, 
  3.7684055713144464`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "calcAlphaT"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"calcAlphaT", "[", 
    RowBox[{"doCalc_", 
     RowBox[{"(*", 
      RowBox[{"False", " ", "for", " ", "load"}], "*)"}], ",", "errFn_", ",", 
     "fname_", ",", "a_", ",", "startAlpha_", ",", "degStep_", ",", 
     RowBox[{"verbose_:", "True"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "theT", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"doCalc", ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "if", " ", "the", " ", "step", " ", "angle", " ", "is", " ", "too", 
          " ", "large"}], ",", " ", 
         RowBox[{"the", " ", "previous", " ", "guess", " ", 
          RowBox[{"won", "'"}], "t", " ", "help"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"theT", "=", 
         RowBox[{"getPolyAlphaT", "[", 
          RowBox[{
          "errFn", ",", "a", ",", "startAlpha", ",", "degStep", ",", 
           "verbose"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<saving: \>\"", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"\"\<alphas\>\"", "/.", "theT"}], "]"}], ",", 
          "\"\< records to\>\"", ",", "fname"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Save", "[", 
         RowBox[{"fname", ",", "theT"}], "]"}], ";", "\[IndentingNewLine]", 
        "theT"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"theT", "=", 
         RowBox[{"Get", "[", "fname", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<loaded: \>\"", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"\"\<alphas\>\"", "/.", "theT"}], "]"}], ",", 
          "\"\< records from\>\"", ",", "fname"}], "]"}], ";", 
        "\[IndentingNewLine]", "theT"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.768393718798751*^9, 3.7683937891987977`*^9}, {
   3.7683946429456425`*^9, 3.7683946478734703`*^9}, {3.7683947052264795`*^9, 
   3.768394719305291*^9}, {3.768405433251132*^9, 3.768405434802985*^9}, {
   3.768405471452056*^9, 3.76840548694765*^9}, 3.7684061734389315`*^9, {
   3.7684069351735706`*^9, 3.768406935991357*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerically Calculate \[Alpha] Using Caustics", "Section",
 CellChangeTimes->{{3.768758357772972*^9, 3.768758379565613*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getOneCosAlphaCaustic"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getOneCosAlphaCaustic", "[", 
    RowBox[{"a_", ",", "p1_", ",", "acaustic_", ",", "bcaustic_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tangs", ",", "n"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tangs", "=", 
       RowBox[{"bcaustic", "*", 
        RowBox[{"ellTangents", "[", 
         RowBox[{
          RowBox[{"acaustic", "/", "bcaustic"}], ",", 
          RowBox[{"p1", "/", "bcaustic"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"n", "=", 
       RowBox[{"norm", "[", 
        RowBox[{"ellGrad", "[", 
         RowBox[{"a", ",", 
          RowBox[{"Sequence", "@@", "p1"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"2", "nd", " ", "tangent", " ", "is", " ", "clockwise"}], ",",
         " ", 
        RowBox[{"but", " ", "it", " ", 
         RowBox[{"doesn", "'"}], "t", " ", "matter", " ", "as", " ", "the", 
         " ", "normal", " ", "is", " ", "bisected"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"n", ".", 
       RowBox[{"norm", "[", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"tangs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", "p1"}], ")"}], "]"}]}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7687560929688873`*^9, 3.7687563671599393`*^9}, {
  3.76875680926236*^9, 3.768756813126589*^9}, {3.76875760460902*^9, 
  3.768757604783599*^9}, {3.7687577436475663`*^9, 3.7687577488796644`*^9}, {
  3.7687588911244254`*^9, 3.7687588911294127`*^9}, {3.7687590019019623`*^9, 
  3.7687590019079456`*^9}}],

Cell[CellGroupData[{

Cell["This may take some time for high-order N-odd nonagon", "Subsubsection",
 CellChangeTimes->{{3.7687624033592362`*^9, 3.7687624346730433`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getAlpha0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getAlpha0", "[", 
    RowBox[{"a_", ",", "errCausticFn_", ",", "x1guess_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "min", ",", "c2", ",", "acaustic", ",", "bcaustic", ",", "p1", ",", 
       "p2", ",", "tangs"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"min", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"FindMinimum", "[", 
         RowBox[{
          RowBox[{"errCausticFn", "[", 
           RowBox[{"a", ",", "x1"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x1", ",", "x1guess"}], "}"}], ",", 
          RowBox[{"Method", "->", "\"\<PrincipalAxis\>\""}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"c2", "=", 
       RowBox[{
        RowBox[{"a", "^", "2"}], "-", "1"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{"b", "=", "1"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"acaustic", "=", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"x1", "/.", 
          RowBox[{"Second", "[", "min", "]"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["a", "caustic"], "^", "2"}], "-", 
         RowBox[{
          SubscriptBox["b", "caustic"], "^", "2"}]}], "\[Equal]", 
        RowBox[{"c", "^", "2"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"bcaustic", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"acaustic", "^", "2"}], "-", "c2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tangs", "=", 
       RowBox[{"bcaustic", "*", 
        RowBox[{"ellTangents", "[", 
         RowBox[{
          RowBox[{"acaustic", "/", "bcaustic"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"a", "/", "bcaustic"}], ",", "0"}], "}"}]}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"{", 
        RowBox[{"a", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{
        RowBox[{"ellInterRayUnprot", "[", 
         RowBox[{"a", ",", "p1", ",", 
          RowBox[{
           RowBox[{"tangs", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", "p1"}]}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "acaustic", ",", "bcaustic", ",", "tangs", ",", "p1", ",", "p2", ",", 
        "min"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7687513354638853`*^9, 3.768751415088258*^9}, {
  3.7687514653209457`*^9, 3.7687517270263243`*^9}, {3.76875374114643*^9, 
  3.768753766217473*^9}, {3.7687538049129863`*^9, 3.768753846435322*^9}, {
  3.7687542669861584`*^9, 3.768754270242422*^9}, {3.768755037193224*^9, 
  3.768755083439983*^9}, {3.768755116736935*^9, 3.7687551556497726`*^9}, {
  3.768755260386112*^9, 3.7687553004758825`*^9}, {3.7687553332639866`*^9, 
  3.7687553382820024`*^9}, {3.7687589583425756`*^9, 3.768758972686311*^9}, {
  3.7687590217503185`*^9, 3.7687590229980097`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getCosAlphasCaustic"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getCosAlphasCaustic", "[", 
    RowBox[{"a_", ",", "acaustic_", ",", "bcaustic_", ",", 
     RowBox[{"step_:", "1"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tDegs", ",", "tRad", ",", "cossa"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tDegs", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "90", ",", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cossa", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"tRad", "=", 
            RowBox[{"toRad", "[", "#", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"getOneCosAlphaCaustic", "[", 
            RowBox[{"a", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"a", " ", 
                RowBox[{"Cos", "[", "tRad", "]"}]}], ",", 
               RowBox[{"Sin", "[", "tRad", "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", "acaustic", ",", "bcaustic"}], "]"}]}], 
          ")"}], "&"}], "/@", "tDegs"}]}], ";", "\[IndentingNewLine]", 
      "cossa"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.76875676302061*^9, 3.768756793020767*^9}, {
   3.768756823613783*^9, 3.768756912702347*^9}, {3.7687569472141123`*^9, 
   3.7687569530059013`*^9}, 3.7687588911413803`*^9, 3.7687590019209385`*^9, {
   3.768759772180296*^9, 3.768759775324885*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getPolyAlphaCausticTOneQuarter"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPolyAlphaCausticTOneQuarter", "[", 
    RowBox[{"errCausticFn_", ",", "a_", ",", 
     RowBox[{"degStep_:", "10"}], ",", "verbose_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "tsDeg", ",", "tsRad", ",", "alphas", ",", "cosAlphas", ",", "acaustic",
        ",", "bcaustic", ",", "min"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tsDeg", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "359", ",", "degStep"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tsRad", "=", 
       RowBox[{"toRad", "/@", "tsDeg"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"acaustic", ",", "bcaustic", ",", "min"}], "}"}], "=", 
       RowBox[{"Part", "[", 
        RowBox[{
         RowBox[{"getAlpha0", "[", 
          RowBox[{"a", ",", "errCausticFn", ",", 
           RowBox[{
            RowBox[{"-", "a"}], "+", ".1"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "6"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cosAlphas", "=", 
       RowBox[{"getCosAlphasCaustic", "[", 
        RowBox[{"a", ",", "acaustic", ",", "bcaustic"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"alphas", "=", 
       RowBox[{"ArcCos", "/@", "cosAlphas"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "\[Rule]", "a"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<tsDeg\>\"", "\[Rule]", "tsDeg"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<tsRad\>\"", "\[Rule]", "tsRad"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<alphas\>\"", "\[Rule]", "alphas"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<min\>\"", "\[Rule]", "min"}]}], "\[IndentingNewLine]", 
       "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.76875839682382*^9, 3.7687584999190655`*^9}, {
  3.7687586879580717`*^9, 3.768758774191992*^9}, {3.768758831742177*^9, 
  3.7687588515025616`*^9}, {3.7687588911533475`*^9, 3.768758891161327*^9}, {
  3.7687590019298863`*^9, 3.768759040262389*^9}, {3.7687596673179426`*^9, 
  3.7687596821013093`*^9}, {3.7687606648214073`*^9, 3.768760665460698*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getPolyAlphaCausticT"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPolyAlphaCausticT", "[", 
    RowBox[{"errCausticFn_", ",", "a_", ",", "degStep_", ",", "verbose_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "theT", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "if", " ", "the", " ", "step", " ", "angle", " ", "is", " ", "too", 
        " ", "large"}], ",", " ", 
       RowBox[{"the", " ", "previous", " ", "guess", " ", 
        RowBox[{"won", "'"}], "t", " ", "help"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"theT", "=", 
       RowBox[{"getPolyAlphaCausticTOneQuarter", "[", 
        RowBox[{"errCausticFn", ",", "a", ",", "degStep", ",", "verbose"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"theT", "=", 
       RowBox[{"quadrupleT", "[", 
        RowBox[{"theT", ",", "False"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "theT"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7683910326421347`*^9, 3.768391096417637*^9}, {
  3.7683911815547905`*^9, 3.7683912137137957`*^9}, {3.7683912475947065`*^9, 
  3.768391254234969*^9}, {3.7683926935567474`*^9, 3.768392698348937*^9}, {
  3.7683946319440107`*^9, 3.7683946648889785`*^9}, {3.768405290970462*^9, 
  3.768405291961811*^9}, {3.7684053531940784`*^9, 3.768405355722324*^9}, {
  3.768405402754622*^9, 3.7684054660664463`*^9}, {3.7684055669790144`*^9, 
  3.7684055713144464`*^9}, {3.7687588105896535`*^9, 3.768758828140806*^9}, {
  3.768758862852766*^9, 3.7687588909668455`*^9}, {3.768759001939893*^9, 
  3.7687590019448795`*^9}, {3.7687590480375977`*^9, 3.7687590509827175`*^9}, {
  3.7687596395170317`*^9, 3.7687596484544363`*^9}, {3.7687597631362557`*^9, 
  3.7687597644689503`*^9}, {3.768759804332377*^9, 3.7687598044769917`*^9}, {
  3.768759857437007*^9, 3.7687598597723036`*^9}, {3.768760669790123*^9, 
  3.768760671564375*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "calcAlphaCausticT"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"calcAlphaCausticT", "[", 
    RowBox[{"doCalc_", 
     RowBox[{"(*", 
      RowBox[{"False", " ", "for", " ", "load"}], "*)"}], ",", 
     "errCausticFn_", ",", "fname_", ",", "a_", ",", "degStep_", ",", 
     RowBox[{"verbose_:", "True"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "theT", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"doCalc", ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "if", " ", "the", " ", "step", " ", "angle", " ", "is", " ", "too", 
          " ", "large"}], ",", " ", 
         RowBox[{"the", " ", "previous", " ", "guess", " ", 
          RowBox[{"won", "'"}], "t", " ", "help"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"theT", "=", 
         RowBox[{"getPolyAlphaCausticT", "[", 
          RowBox[{"errCausticFn", ",", "a", ",", "degStep", ",", "verbose"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<saving: \>\"", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"\"\<alphas\>\"", "/.", "theT"}], "]"}], ",", 
          "\"\< records to\>\"", ",", "fname"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Save", "[", 
         RowBox[{"fname", ",", "theT"}], "]"}], ";", "\[IndentingNewLine]", 
        "theT"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"theT", "=", 
         RowBox[{"Get", "[", "fname", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<loaded: \>\"", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"\"\<alphas\>\"", "/.", "theT"}], "]"}], ",", 
          "\"\< records from\>\"", ",", "fname"}], "]"}], ";", 
        "\[IndentingNewLine]", "theT"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.768393718798751*^9, 3.7683937891987977`*^9}, {
   3.7683946429456425`*^9, 3.7683946478734703`*^9}, {3.7683947052264795`*^9, 
   3.768394719305291*^9}, {3.768405433251132*^9, 3.768405434802985*^9}, {
   3.768405471452056*^9, 3.76840548694765*^9}, 3.7684061734389315`*^9, {
   3.7684069351735706`*^9, 3.768406935991357*^9}, {3.7687589223427515`*^9, 
   3.76875893677422*^9}, {3.7687590019508624`*^9, 3.7687590019568467`*^9}, {
   3.7687590578304043`*^9, 3.7687590599986053`*^9}, {3.7687606813421974`*^9, 
   3.768760683581006*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tri (Simulate AlphaT)", "Section",
 CellChangeTimes->{{3.7684907690349135`*^9, 3.768490785211687*^9}, 
   3.768677230705039*^9, {3.768678676712016*^9, 3.7686786769683447`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "@", "getEllVtx0"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"not", " ", "for", " ", "error", " ", "purposes"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getEllVtx0", "[", 
    RowBox[{"a_", ",", "p1_", ",", "alpha_"}], "]"}], ":=", 
   RowBox[{"{", "p1", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"triErrorP", "[", 
    RowBox[{"a_", ",", "p1_", ",", "alpha_"}], "]"}], ":=", "0"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.768492688646319*^9, 3.7684927146551237`*^9}, {
   3.7685565573465366`*^9, 3.7685565654023294`*^9}, 3.7686772307399206`*^9, 
   3.768678703865383*^9, {3.7686787456668234`*^9, 3.768678752010879*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getEllAlphaT", "[", "a_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tsDeg", ",", "tsRad", ",", "alphas"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tsDeg", "=", 
       RowBox[{
        RowBox[{"Range", "[", "360", "]"}], "-", "1"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tsRad", "=", 
       RowBox[{"toRad", "/@", "tsDeg"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"alphas", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"Length", "@", "tsRad"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "\[Rule]", "a"}], ",", 
        RowBox[{"\"\<tsDeg\>\"", "\[Rule]", "tsDeg"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<tsRad\>\"", "\[Rule]", "tsRad"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<alphas\>\"", "\[Rule]", "alphas"}]}], "}"}]}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.7684927259499435`*^9, 3.768492766462722*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ellAlphaT15", "=", 
   RowBox[{"getEllAlphaT", "[", "1.5", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Save", "[", 
     RowBox[{"\"\<data/ellAlphaT_a15.m\>\"", ",", "ellAlphaT15"}], "]"}], 
    ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.76849288163828*^9, 3.7684928915747285`*^9}, {
  3.768678769004608*^9, 3.7686787703470435`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getTriAlphaT", "[", "a_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tsDeg", ",", "tsRad", ",", "alphas"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tsDeg", "=", 
       RowBox[{
        RowBox[{"Range", "[", "360", "]"}], "-", "1"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tsRad", "=", 
       RowBox[{"toRad", "/@", "tsDeg"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"alphas", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"getAlpha", "[", 
          RowBox[{"a", ",", "#"}], "]"}], "&"}], "/@", "tsRad"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "\[Rule]", "a"}], ",", 
        RowBox[{"\"\<tsDeg\>\"", "\[Rule]", "tsDeg"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<tsRad\>\"", "\[Rule]", "tsRad"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<alphas\>\"", "\[Rule]", "alphas"}]}], "}"}]}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.7684920197149067`*^9, 3.768492034405652*^9}, 
   3.7684921275334225`*^9, {3.768492191726372*^9, 3.768492194966714*^9}, {
   3.768492417573516*^9, 3.7684924181031*^9}, 3.7686772307439404`*^9, 
   3.7686787049308605`*^9, {3.768678771977685*^9, 3.7686787723307414`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"triAlphaT15", "=", 
   RowBox[{"getTriAlphaT", "[", "1.5", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Save", "[", 
     RowBox[{"\"\<data/triAlphaT_a15.m\>\"", ",", "triAlphaT15"}], "]"}], 
    ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7684908843313503`*^9, 3.768490971923222*^9}, {
   3.768491002187352*^9, 3.7684911050122705`*^9}, {3.7684919661580157`*^9, 
   3.768491987239689*^9}, {3.768492030181943*^9, 3.7684920430140944`*^9}, {
   3.7684927333651285`*^9, 3.768492733541657*^9}, 3.7684928330391407`*^9, {
   3.768677230750891*^9, 3.7686772307598953`*^9}, {3.768678694130433*^9, 
   3.768678712913536*^9}, {3.768678776145541*^9, 3.7686787776894245`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "@", "getTriVtx0"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"not", " ", "for", " ", "error", " ", "purposes"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getTriVtx0", "[", 
    RowBox[{"a_", ",", "p1_", ",", "alpha_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p2", ",", "p2Neg", ",", "p3"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p2", ",", "p2Neg"}], "}"}], "=", 
       RowBox[{"getP2Alpha", "[", 
        RowBox[{"a", ",", "p1", ",", "alpha"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p2Neg"}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7684907743158026`*^9, 3.7684908051633744`*^9}, {
  3.768677230764888*^9, 3.768677230768876*^9}, {3.7686787142509346`*^9, 
  3.7686787175391665`*^9}, {3.768678780274497*^9, 3.7686787838337026`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Quadrangle", "Section",
 CellChangeTimes->{{3.7678083142549973`*^9, 3.7678083258456955`*^9}, {
   3.7678256281491065`*^9, 3.767825630221481*^9}, 3.768169140178974*^9, {
   3.768173631205615*^9, 3.768173634333705*^9}, 3.7684830218116136`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "@", "getQuadVtx0"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"not", " ", "for", " ", "error", " ", "purposes"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getQuadVtx0", "[", 
    RowBox[{"a_", ",", "p1_", ",", "alpha_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p2", ",", "p2Neg", ",", "p3"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p2", ",", "p2Neg"}], "}"}], "=", 
       RowBox[{"getP2Alpha", "[", 
        RowBox[{"a", ",", "p1", ",", "alpha"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p3", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p1", ",", "p2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p3", ",", "p2Neg"}], "}"}]}]}], "]"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.7678103358793087`*^9, 3.767810405181562*^9}, {
   3.7679078722354126`*^9, 3.7679078990197716`*^9}, {3.76816594350351*^9, 
   3.7681659458631964`*^9}, 3.7684907596430063`*^9, {3.7687689003430257`*^9, 
   3.7687689006791267`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"doQuadAlphaT15", "=", "True"}], ";", 
  RowBox[{"Clear", "@", "quadAlphaT15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"quadAlphaT15", "=", 
   RowBox[{"calcAlphaT", "[", 
    RowBox[{
    "doQuadAlphaT15", ",", "quadErrorP", ",", "\"\<data/quadAlphaT_a15.m\>\"",
      ",", "1.5", ",", ".794", ",", "1", ",", "False"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7684071525810595`*^9, 3.7684071853724103`*^9}, {
  3.768407254654282*^9, 3.7684073094452147`*^9}, {3.768407393918211*^9, 
  3.7684074191809645`*^9}, {3.768472010562721*^9, 3.7684720451074305`*^9}, {
  3.768472698027819*^9, 3.768472702397235*^9}, {3.768670394778758*^9, 
  3.768670395704261*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "nrnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \[NoBreak]\\!\\(quadErrorP[\\(\\(1.5`, \
\\(\\({1.5`, 0.`}\\)\\), 0.794`\\)\\)]\\)\[NoBreak] is not a real number at \
\[NoBreak]\\!\\({alpha}\\)\[NoBreak] = \[NoBreak]\\!\\({0.794`}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMinimum\\\", ButtonNote -> \
\\\"FindMinimum::nrnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7688555783056703`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "nrnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \[NoBreak]\\!\\(quadErrorP[\\(\\(1.5`, \
\\(\\({1.5`, 0.`}\\)\\), 0.794`\\)\\)]\\)\[NoBreak] is not a real number at \
\[NoBreak]\\!\\({alpha}\\)\[NoBreak] = \[NoBreak]\\!\\({0.794`}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMinimum\\\", ButtonNote -> \
\\\"FindMinimum::nrnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7688555783545103`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "nrnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \[NoBreak]\\!\\(quadErrorP[\\(\\(1.5`, \
\\(\\({1.5`, 0.`}\\)\\), 0.794`\\)\\)]\\)\[NoBreak] is not a real number at \
\[NoBreak]\\!\\({alpha}\\)\[NoBreak] = \[NoBreak]\\!\\({0.794`}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMinimum\\\", ButtonNote -> \
\\\"FindMinimum::nrnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7688555784023757`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMinimum :: nrnum\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.768855578424317*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({alpha, 0.794`}\\)\[NoBreak] is neither a \
list of replacement rules nor a valid dispatch table, and so cannot be used \
for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.768855578446259*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({alpha, 0.794`}\\)\[NoBreak] is neither a \
list of replacement rules nor a valid dispatch table, and so cannot be used \
for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7688555784642105`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({alpha, 0.794`}\\)\[NoBreak] is neither a \
list of replacement rules nor a valid dispatch table, and so cannot be used \
for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7688555784841576`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7688555785021095`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"saving: \"\>", "\[InvisibleSpace]", "360", 
   "\[InvisibleSpace]", "\<\" records to\"\>", 
   "\[InvisibleSpace]", "\<\"data/quadAlphaT_a15.m\"\>"}],
  SequenceForm["saving: ", 360, " records to", "data/quadAlphaT_a15.m"],
  Editable->False]], "Print",
 CellChangeTimes->{3.7686704284137683`*^9, 3.7686802668476744`*^9, 
  3.768684405849719*^9, 3.768768364702442*^9, 3.7687703715291185`*^9, 
  3.768855583708186*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Pentagon", "Section",
 CellChangeTimes->{{3.7678083142549973`*^9, 3.7678083258456955`*^9}, {
  3.7678256281491065`*^9, 3.767825630221481*^9}, {3.7681653304302464`*^9, 
  3.7681653444537373`*^9}, {3.7681736325649796`*^9, 3.7681736332545905`*^9}, {
  3.7684738145160418`*^9, 3.768473816900662*^9}, {3.7684832112995777`*^9, 
  3.7684832127886*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "@", "getPentVtx0"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"not", " ", "for", " ", "error", " ", "purposes"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPentVtx0", "[", 
    RowBox[{"a_", ",", "p1_", ",", "alpha_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p2", ",", "p2Neg", ",", "p3", ",", "p3Neg"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p2", ",", "p2Neg"}], "}"}], "=", 
       RowBox[{"getP2Alpha", "[", 
        RowBox[{"a", ",", "p1", ",", "alpha"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p3", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p1", ",", "p2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p3Neg", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p1", ",", "p2Neg"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p3", ",", "p3Neg", ",", "p2Neg"}], 
       "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7678103358793087`*^9, 3.767810405181562*^9}, {
   3.7679078722354126`*^9, 3.7679078990197716`*^9}, {3.7681653993598757`*^9, 
   3.7681654105998135`*^9}, {3.7681655000495853`*^9, 3.768165563266242*^9}, {
   3.768165605239602*^9, 3.7681656300083237`*^9}, {3.7681657334730434`*^9, 
   3.768165735143572*^9}, {3.7681671177520156`*^9, 3.768167154191574*^9}, {
   3.768167185382122*^9, 3.7681672448813505`*^9}, {3.768167294518952*^9, 
   3.768167295222047*^9}, {3.7681673936061068`*^9, 3.7681674073283978`*^9}, {
   3.7682052423499465`*^9, 3.7682052623465414`*^9}, 3.7682053819673557`*^9, {
   3.76820650635765*^9, 3.7682065469302845`*^9}, {3.7682077217475104`*^9, 
   3.7682077248990865`*^9}, {3.7682109685090237`*^9, 3.7682109698414927`*^9}, 
   3.7682168956516123`*^9, 3.7684900883539715`*^9, {3.768768821191948*^9, 
   3.76876882181501*^9}}],

Cell[CellGroupData[{

Cell["Pentagon Exit Angle Table", "Subsubsection",
 CellChangeTimes->{{3.7683906295855613`*^9, 3.7683906396147614`*^9}, {
  3.7684064097935896`*^9, 3.7684064393546286`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"doPentAlphaT125", "=", "False"}], ";", 
  RowBox[{"Clear", "@", "pentAlphaT125"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pentAlphaT125", "=", 
   RowBox[{"calcAlphaT", "[", 
    RowBox[{"doPentAlphaT125", ",", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", "0"}], "]"}], ",", "\"\<data/pentAlphaT_a125.m\>\"", 
     ",", "1.25", ",", ".86", ",", "10", ",", "False"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQ/XDDKdUlwm8cFWIuqIFot4CmqSC6Z8o6MP1uqcKl
pUBa3NMATEu06hYvA9IsBsGlIFrhlVwViG4W31gDor0kr+1fCaQ1VZ6AabuC
n2dAtIOe8DkQHSZq8hxEl+e4gOmNBlXfQPT1Izm/QPQhyVDGVUD615YUMJ0Q
e18CRM/QeQ2mExd9kwXRB37oKYDoxUF1+iD6DcMEMH3a768VmH9vijWIFlVT
8AfRf9d6gOm0t6sKQXRX6UEwbXamoBpEdxjw14BogzlMgmuAtH/1JDBd6FWn
AKJ39e0H09PMv6hHi7xxnNQXoQGiAaGmlr4=
  "]],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"loaded: \"\>", "\[InvisibleSpace]", "36", 
   "\[InvisibleSpace]", "\<\" records from\"\>", 
   "\[InvisibleSpace]", "\<\"data/pentAlphaT_a125.m\"\>"}],
  SequenceForm["loaded: ", 36, " records from", "data/pentAlphaT_a125.m"],
  Editable->False]], "Print",
 CellChangeTimes->{3.7686627039031878`*^9, 3.7686704287209773`*^9, 
  3.7686802679587026`*^9, 3.768684405978401*^9, 3.7687683649447947`*^9, 
  3.7687703715979347`*^9, 3.7688555849917536`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"doPentAlphaT15", "=", "False"}], ";", 
  RowBox[{"Clear", "@", "pentAlphaT15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pentAlphaT15", "=", 
   RowBox[{"calcAlphaT", "[", 
    RowBox[{"doPentAlphaT15", ",", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", "0"}], "]"}], ",", "\"\<data/pentAlphaT_a15.m\>\"", 
     ",", "1.5", ",", ".794", ",", "1", ",", "True"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7678113953315845`*^9, 3.7678114042597265`*^9}, {
   3.7679089885449963`*^9, 3.7679089889289684`*^9}, {3.767909193450925*^9, 
   3.7679091940014625`*^9}, {3.767909253938138*^9, 3.767909254317151*^9}, {
   3.7679107487695975`*^9, 3.7679107493201017`*^9}, {3.7681663477739725`*^9, 
   3.7681663581982317`*^9}, {3.76826008305112*^9, 3.768260127906517*^9}, {
   3.7683848680321217`*^9, 3.768384868398144*^9}, {3.768385943377247*^9, 
   3.768385943864975*^9}, {3.768388342974012*^9, 3.768388343316126*^9}, {
   3.7683891433988*^9, 3.7683891467897387`*^9}, {3.7683900166254425`*^9, 
   3.7683900169844885`*^9}, {3.768391101585828*^9, 3.7683911255208707`*^9}, {
   3.7683927182926455`*^9, 3.7683927194196644`*^9}, {3.7683927575157795`*^9, 
   3.7683927578758135`*^9}, {3.7683928554839787`*^9, 3.76839285595674*^9}, {
   3.768393805214003*^9, 3.7683938492948723`*^9}, {3.7683974601798115`*^9, 
   3.7683974607004232`*^9}, {3.768398659662657*^9, 3.768398687282852*^9}, {
   3.7683988248722*^9, 3.768398825639151*^9}, {3.768398913743727*^9, 
   3.7683989141187253`*^9}, {3.768405499498117*^9, 3.768405500129431*^9}, {
   3.7684058203792467`*^9, 3.7684058209716663`*^9}, {3.7684059835715313`*^9, 
   3.7684059916349845`*^9}, {3.76840695421167*^9, 3.7684069913165216`*^9}, {
   3.768410084827609*^9, 3.768410140586117*^9}, {3.7684102608504467`*^9, 
   3.76841026136208*^9}, 3.7687688406167574`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"loaded: \"\>", "\[InvisibleSpace]", "360", 
   "\[InvisibleSpace]", "\<\" records from\"\>", 
   "\[InvisibleSpace]", "\<\"data/pentAlphaT_a15.m\"\>"}],
  SequenceForm["loaded: ", 360, " records from", "data/pentAlphaT_a15.m"],
  Editable->False]], "Print",
 CellChangeTimes->{3.768662703920107*^9, 3.768670428794777*^9, 
  3.7686802679696736`*^9, 3.7686844059893813`*^9, 3.768768364956763*^9, 
  3.7687703716089053`*^9, 3.7688555850037217`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"doPentAlphaT20", "=", "False"}], ";", 
  RowBox[{"Clear", "@", "pentAlphaT20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pentAlphaT20", "=", 
   RowBox[{"calcAlphaT", "[", 
    RowBox[{"doPentAlphaT20", ",", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", "0"}], "]"}], ",", "\"\<data/pentAlphaT_a20.m\>\"", 
     ",", "2.0", ",", ".69", ",", "10", ",", "False"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7683930703247433`*^9, 3.7683930819886084`*^9}, {
   3.768393923365975*^9, 3.7683939330779963`*^9}, {3.768394902385249*^9, 
   3.768394903744616*^9}, {3.768397464165162*^9, 3.7683974646927524`*^9}, {
   3.768398735286581*^9, 3.768398736134337*^9}, {3.76839876934258*^9, 
   3.7683987697026176`*^9}, {3.768398805399234*^9, 3.7683988288784947`*^9}, {
   3.768405504986449*^9, 3.7684055053295345`*^9}, {3.7684069826128087`*^9, 
   3.7684070113400173`*^9}, {3.768410315466507*^9, 3.7684103163541627`*^9}, {
   3.768410376418662*^9, 3.768410376905593*^9}, 3.7687688430631847`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"loaded: \"\>", "\[InvisibleSpace]", "36", 
   "\[InvisibleSpace]", "\<\" records from\"\>", 
   "\[InvisibleSpace]", "\<\"data/pentAlphaT_a20.m\"\>"}],
  SequenceForm["loaded: ", 36, " records from", "data/pentAlphaT_a20.m"],
  Editable->False]], "Print",
 CellChangeTimes->{3.7686627039340696`*^9, 3.7686704288376613`*^9, 
  3.7686802679796467`*^9, 3.7686844060083237`*^9, 3.7687683650076265`*^9, 
  3.7687703716218705`*^9, 3.7688555850117006`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"doPentAlphaT30", "=", "False"}], ";", 
  RowBox[{"Clear", "@", "pentAlphaT30"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pentAlphaT30", "=", 
   RowBox[{"calcAlphaT", "[", 
    RowBox[{"doPentAlphaT30", ",", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", "0"}], "]"}], ",", "\"\<data/pentAlphaT_a30.m\>\"", 
     ",", "3.0", ",", ".55", ",", "5", ",", "False"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.768394862495863*^9, 3.7683948671035542`*^9}, {
   3.76839490633669*^9, 3.76839491529578*^9}, {3.7683949473989677`*^9, 
   3.7683949568737144`*^9}, {3.768395040569129*^9, 3.7683950425298834`*^9}, {
   3.76839746707738*^9, 3.7683974675411143`*^9}, {3.768398738279584*^9, 
   3.768398740207432*^9}, {3.768398775030382*^9, 3.768398775487161*^9}, {
   3.7683988090065947`*^9, 3.7683988323033433`*^9}, {3.7684051256166525`*^9, 
   3.7684051258589787`*^9}, {3.7684055072743363`*^9, 
   3.7684055076174192`*^9}, {3.7684069953407974`*^9, 3.7684070147967806`*^9}, 
   3.7684103176417017`*^9, {3.768410390171146*^9, 3.768410390506278*^9}, {
   3.7684104257221823`*^9, 3.768410440738027*^9}, {3.7684104807700863`*^9, 
   3.7684104842428036`*^9}, 3.7687688454159174`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"loaded: \"\>", "\[InvisibleSpace]", "72", 
   "\[InvisibleSpace]", "\<\" records from\"\>", 
   "\[InvisibleSpace]", "\<\"data/pentAlphaT_a30.m\"\>"}],
  SequenceForm["loaded: ", 72, " records from", "data/pentAlphaT_a30.m"],
  Editable->False]], "Print",
 CellChangeTimes->{3.7686627039460373`*^9, 3.768670428877528*^9, 
  3.7686802679906173`*^9, 3.768684406019294*^9, 3.76876836502857*^9, 
  3.7687703716338387`*^9, 3.7688555850206766`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"reportErrorsAlphaT", "[", "alphaT_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "errors", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"errors", "=", 
      RowBox[{"First", "/@", 
       RowBox[{"(", 
        RowBox[{"\"\<mins\>\"", "/.", "alphaT"}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Length", "@", "errors"}], ",", 
       RowBox[{"Mean", "@", "errors"}], ",", 
       RowBox[{"Max", "@", "errors"}], ",", 
       RowBox[{"Min", "@", "errors"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7683890264388103`*^9, 3.768389037734226*^9}, {
  3.7683939574309216`*^9, 3.7683939582152133`*^9}, {3.768394098273862*^9, 
  3.768394124318269*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"reportErrorsAlphaT", "/@", 
   RowBox[{"{", 
    RowBox[{
    "pentAlphaT125", ",", "pentAlphaT15", ",", "pentAlphaT20", ",", 
     "pentAlphaT30"}], "}"}]}], "//", "ColumnForm"}]], "Input",
 CellChangeTimes->{{3.7683886665983763`*^9, 3.768388676317772*^9}, {
  3.768393961102519*^9, 3.76839396307024*^9}, {3.7683940105982428`*^9, 
  3.768394010935343*^9}, {3.768394082390448*^9, 3.7683940922240276`*^9}, {
  3.7683941278628216`*^9, 3.7683941300140486`*^9}, {3.7683953118400326`*^9, 
  3.7683953171438313`*^9}}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
      "36", ",", "3.137533655119195`*^-13", ",", "1.4145063570875227`*^-12", 
       ",", "7.088956984906973`*^-16"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
      "360", ",", "3.2394427044287085`*^-6", ",", "0.0002914713042676967`", 
       ",", "6.075291331119703`*^-16"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
      "36", ",", "3.3975353484893245`*^-13", ",", "2.764206032869145`*^-12", 
       ",", "2.161617874988686`*^-15"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
      "72", ",", "4.057732396754419`*^-7", ",", "5.796718565256541`*^-6", ",",
        "2.054197285296`*^-15"}], "}"}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{{
    36, 3.137533655119195*^-13, 1.4145063570875227`*^-12, 
     7.088956984906973*^-16}, {
    360, 3.2394427044287085`*^-6, 0.0002914713042676967, 
     6.075291331119703*^-16}, {
    36, 3.3975353484893245`*^-13, 2.764206032869145*^-12, 
     2.161617874988686*^-15}, {
    72, 4.057732396754419*^-7, 5.796718565256541*^-6, 2.054197285296*^-15}}],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.7683940930289073`*^9, {3.768394125466201*^9, 3.768394130227479*^9}, 
   3.768394791106613*^9, {3.768395307584377*^9, 3.768395317478965*^9}, 
   3.768397474871341*^9, 3.768405786803966*^9, 3.7684104878541365`*^9, 
   3.7684145200273438`*^9, 3.7684734885060363`*^9, 3.7685484173030567`*^9, 
   3.7686611265477805`*^9, 3.768661467477058*^9, 3.7686624943302574`*^9, 
   3.7686625488146987`*^9, 3.7686627039709706`*^9, 3.7686704289533534`*^9, 
   3.7686802680095663`*^9, 3.7686844060412073`*^9, 3.7687683650525117`*^9, 
   3.7687703716577864`*^9, 3.7688555850326443`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hexagon", "Section",
 CellChangeTimes->{{3.7678083142549973`*^9, 3.7678083258456955`*^9}, {
  3.7678256281491065`*^9, 3.767825630221481*^9}, {3.7681653304302464`*^9, 
  3.7681653444537373`*^9}, {3.7681736325649796`*^9, 3.7681736332545905`*^9}, {
  3.7684738145160418`*^9, 3.768473816900662*^9}, {3.7684797344151425`*^9, 
  3.768479736598308*^9}, {3.7684829533078194`*^9, 3.7684829565799103`*^9}, {
  3.7684832139634533`*^9, 3.768483215476411*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "@", "getHexVtx0"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"not", " ", "for", " ", "error", " ", "purposes"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getHexVtx0", "[", 
    RowBox[{"a_", ",", "p1_", ",", "alpha_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p2", ",", "p2Neg", ",", "p3", ",", "p4", ",", "p3Neg"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p2", ",", "p2Neg"}], "}"}], "=", 
       RowBox[{"getP2Alpha", "[", 
        RowBox[{"a", ",", "p1", ",", "alpha"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p3", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p1", ",", "p2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p4", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p2", ",", "p3"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p3Neg", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p1", ",", "p2Neg"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p3Neg", ",", "p2Neg"}], 
       "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7678103358793087`*^9, 3.767810405181562*^9}, {
   3.7679078722354126`*^9, 3.7679078990197716`*^9}, {3.7681653993598757`*^9, 
   3.7681654105998135`*^9}, {3.7681655000495853`*^9, 3.768165563266242*^9}, {
   3.768165605239602*^9, 3.7681656300083237`*^9}, {3.7681657334730434`*^9, 
   3.768165735143572*^9}, {3.7681671177520156`*^9, 3.768167154191574*^9}, {
   3.768167185382122*^9, 3.7681672448813505`*^9}, {3.768167294518952*^9, 
   3.768167295222047*^9}, {3.7681673936061068`*^9, 3.7681674073283978`*^9}, {
   3.7682052423499465`*^9, 3.7682052623465414`*^9}, 3.7682053819673557`*^9, {
   3.76820650635765*^9, 3.7682065469302845`*^9}, {3.7682077217475104`*^9, 
   3.7682077248990865`*^9}, {3.7682109685090237`*^9, 3.7682109698414927`*^9}, 
   3.7682168956516123`*^9, {3.7684797548984365`*^9, 3.7684797585057974`*^9}, {
   3.7684797888331733`*^9, 3.7684797902879777`*^9}, {3.768479879395035*^9, 
   3.7684798954570355`*^9}, 3.768490110690385*^9, {3.76876885373567*^9, 
   3.768768854014924*^9}}],

Cell[CellGroupData[{

Cell["Hexagon Exit Angle Table", "Subsubsection",
 CellChangeTimes->{{3.7683906295855613`*^9, 3.7683906396147614`*^9}, {
  3.7684064097935896`*^9, 3.7684064393546286`*^9}, {3.768480211455838*^9, 
  3.7684802212317142`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"doHexAlphaT15", "=", "False"}], ";", 
  RowBox[{"Clear", "@", "hexAlphaT15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hexAlphaT15", "=", 
   RowBox[{"calcAlphaT", "[", 
    RowBox[{"doHexAlphaT15", ",", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", "0"}], "]"}], ",", "\"\<data/hexAlphaT_a15.m\>\"", 
     ",", "1.5", ",", ".9273", ",", "1", ",", "True"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7678113953315845`*^9, 3.7678114042597265`*^9}, {
   3.7679089885449963`*^9, 3.7679089889289684`*^9}, {3.767909193450925*^9, 
   3.7679091940014625`*^9}, {3.767909253938138*^9, 3.767909254317151*^9}, {
   3.7679107487695975`*^9, 3.7679107493201017`*^9}, {3.7681663477739725`*^9, 
   3.7681663581982317`*^9}, {3.76826008305112*^9, 3.768260127906517*^9}, {
   3.7683848680321217`*^9, 3.768384868398144*^9}, {3.768385943377247*^9, 
   3.768385943864975*^9}, {3.768388342974012*^9, 3.768388343316126*^9}, {
   3.7683891433988*^9, 3.7683891467897387`*^9}, {3.7683900166254425`*^9, 
   3.7683900169844885`*^9}, {3.768391101585828*^9, 3.7683911255208707`*^9}, {
   3.7683927182926455`*^9, 3.7683927194196644`*^9}, {3.7683927575157795`*^9, 
   3.7683927578758135`*^9}, {3.7683928554839787`*^9, 3.76839285595674*^9}, {
   3.768393805214003*^9, 3.7683938492948723`*^9}, {3.7683974601798115`*^9, 
   3.7683974607004232`*^9}, {3.768398659662657*^9, 3.768398687282852*^9}, {
   3.7683988248722*^9, 3.768398825639151*^9}, {3.768398913743727*^9, 
   3.7683989141187253`*^9}, {3.768405499498117*^9, 3.768405500129431*^9}, {
   3.7684058203792467`*^9, 3.7684058209716663`*^9}, {3.7684059835715313`*^9, 
   3.7684059916349845`*^9}, {3.76840695421167*^9, 3.7684069913165216`*^9}, {
   3.768410084827609*^9, 3.768410140586117*^9}, {3.7684102608504467`*^9, 
   3.76841026136208*^9}, {3.768480131848055*^9, 3.768480185577163*^9}, {
   3.7684803748812556`*^9, 3.7684803753928604`*^9}, 3.7687688664556527`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"loaded: \"\>", "\[InvisibleSpace]", "360", 
   "\[InvisibleSpace]", "\<\" records from\"\>", 
   "\[InvisibleSpace]", "\<\"data/hexAlphaT_a15.m\"\>"}],
  SequenceForm["loaded: ", 360, " records from", "data/hexAlphaT_a15.m"],
  Editable->False]], "Print",
 CellChangeTimes->{3.7685025278509398`*^9, 3.768502810539883*^9, 
  3.768548428511135*^9, 3.768661146870475*^9, 3.7686614823004484`*^9, 
  3.768671953877878*^9, 3.7686785091386495`*^9, 3.768680279445981*^9, 
  3.7686844061369505`*^9, 3.768768365110352*^9, 3.7687688735815687`*^9, 
  3.7687703716986647`*^9, 3.7688555850705423`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Sum of Cosine Graphs", "Section",
 CellChangeTimes->{{3.768662674524683*^9, 3.768662681774308*^9}, {
  3.7686740590996885`*^9, 3.7686740610753975`*^9}, {3.768683374454438*^9, 
  3.768683377446436*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             AbsoluteThickness[1.6], 
             GrayLevel[0]], 
            LineBox[CompressedData["
1:eJxd1sluHFUYhuEDK5ZesGDBooMQQgihZp5CfHBICJmoOJMdO3bFs5PYbo/r
cwl9CXUJzczyXEJfQq1Y9yUghBD6n2yiV+/3n6/+qrJdlzaOFrdfTSntvZLS
P///9+/PS5cXbh3/Nf8vzeZ/Dpzy74Ffy78EnsO/nn8N/Ab+TfyA896C3yb/
Dv7d/Fvg98i/T/6DHPcbwh/CH3Hex/hP8J/iP6P/c/JfkP+S/Ffkv4Yvk/8G
fwU/T1+OvsDpWzycFvALnH81crnK9X2Hh9M1/LX8U/DX6b/O/PfMw+kG/gb7
/YCH0036b+JvMQ+n2/jb3J87nH+H+bv4u/gf8XBqIueG62ni/a4N13cv5vM9
+vAVTovML8a+shjPq3C6H68n3+f64QqnB/TDBa4P6H/IPFzg+pD5R8zD5RH7
49Njnh9cHtMPpyX6l5hfypMwTz4tM7/M88PXZfZ/wvwT+uFKPq0wv8L8Snw/
Kvm0yv2Dyyrv/yrv/9Po81Pmn7I/nNboX+P5w3WN/nX2X4++rHP/yKc2+kHL
eXALF7iDK9zD6Rn9z+jHt3Ah3+ErvsenjegHcN6Iz7fFl414XrfB+0a+x6dN
9t/k9xm+xZdN9idfyffk0xb9cN6K8+0W+5PvyFd8v5X/CP3bMT/Y5ucJ327H
772C7+AK98ynnciDHfbfid+v7Q73fyfu0zFfme+ZT7txfrAb8xlud+mHO7jC
/S7Pfy+eP9jj/d/j/u/x84fv8JXzevJpn/dvn/59+uFCvoMr+Z6+9Jyf/+c8
f3wLF/IdXMn3cHrB/nCGW7jA3Qv2h3s4vaT/JfcfbskXuCNf4R5OB/Qf0I9v
D/i+IN/BFe7hdEj/If1wS77gO3w9jNfbH/L+H9EP5yP6j3j/8R1c4R5Oo9g3
Bw9GMT+E8yh+Hzb4Fh5xfsGP4Q6ejPj9hp/CPX0zfDqOPHfM/vghPuMbuIVH
cDmO78cY38ETuMJTuOd6Z/h0wv7wAB7C+SSe3+BbeAQXeHzC3xP8BK70T/E9
PIPTKfuf8vzxQziTb/AtPIIL82N8dxrvxwRf4SncwzP60hn7n/E9dhbzQ/IZ
38AtPIILPOb8Dp7Alfkp3MMzOJ2z/zn7n7M/PsMN57XMj/CF+THckZ+cx++1
ip8y39M/I58uYn4OHlzEviGc4Yb59iJ+347+938DTkfphA==
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1: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
T1MAnzI+DeBdyq/mAOdnKcD5Vw78n4//C2paVsw=
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 0]], 
            LineBox[CompressedData["
1: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
K/Vx58Xz4fnPqxi3/kd6vjiT8d6ora7GneJ5lYyr7p8ciU+i552aDKVLw+MT
T8XzNQVhTavCT9+l57M+BcOOLph3bDs935GCDh9EfNpnJHlBSsG9FHxYtL2K
zk/BE+5nZwp67Wd+VlJwn/tZTcFyjZ9TsYz7WZ+KhmzmZ6RiDfezlIoh3M9y
KhZzPztTsZb7WUnV+ll93ho/p6FmGfOzPg2PuZ+Rhle5n6U0tOZ+ltNwmvvZ
mQZ37mclDS3cz2oazmj8nI6vuZ/16ajgfsbzOfezlA4j97OcDk8D87MzHcOn
MD8r6Uj5B/Ozmo7BK7mfTbC3Zn7Wm7R+hknrZ8mk9bNswgPuZ6dJ62fFhI+5
n1UT4jR+zkA77md9Br7gfkYG3uF+ljJQx/0sZ6Cc+9mZAQ/uZyVD62c1A9c1
fs7U+lmfqfUzMjGP+1nKhJP7Wc7ET9zPzkzs5X5WMnGT+1nNRKPGz1mwcz/r
s2DifkYWJnI/S1nYy/0sZ+EC97MzC5O4n5Us/Mn9rGZhqsbP2cjnftZnYzj3
M7LxBfezlK31s5wNO/ezM1vrZyUbW7if1ey/+DlH62d9jtbPyEEN97OUgxbu
ZzkHJu5nZw52cz8rOVo/qzl/8bMZo7ifPcxo4n7WmzGV+9nXrPUzzFjH/Www
a/0smbGM+9ls1vpZNmv9nG9GDPez04zt3M+FZiRxPytmrZ8rzVo/q2atnxvN
6K3xswVl3M8eFq2f9Ra8wv3sa4Eb9zMsqOZ+NljQwP0sWTCc+9lsQYuO+Vm2
oA33c74Fx7mfnRbEcD8XWtCR+1mx4HXu50qL1s+qBSe5nxstiNb42ar1s4cV
Hbmf9Vatn32tWj/DiuXczwYrZO5nyYon3M9mK0K4n2Wr1s/5VlzjfnZacZT7
udCq9bNihZ77udKq9bNq1fq50YpHGj/bcJj72cOGd7mf9TZUcz/72jCM+xk2
rZ8NNkRxP0s2SNzPZhscGj/btH7Ot2n97LRp/Vxo0/pZseEq93OlDbu5n1Ub
srifG21aP+vsGMX97GHHJu5nvR1buZ997Wi5zvwMu9bPBjtiuZ8lO1ZzP5vt
SNP42Y5O3M/5duzhfnbacZ77udCOHtzPil3r50q71s+qHV9xPzfasZ37WedA
L+5nDweauJ/1DjzlfvZ1IIj7GQ6c4n42OLCF+1ly4E3uZ7MD7ho/O3CZ+znf
gVruZ6dD6+dCBwZyPysOfMz9XOnAQ+5n1QE993Pj89fnftblopH72SMXodzP
+lxc4H72zcVx7mfkIoX72ZCLQdzPUi5a5jE/m3PxJ/n5f79ATEM=
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1:eJxd1nlYVPUex/HRFrVrSi51cx0Uc01wAQERPuICsjmgsil4hnWYGWB2XMqO
ZriBYpnbLR1BQ1zRkCwyD7lcU9RxBXMbInPBFLW0EDHvw+93n+/Rf3zez3d+
fB+GmfN7uSZlR6W2VigUmlYKxf/+5/8qhfJd0edOBrRUQ4CzMrd5xfyzrBV4
XL32naaOF1m3hVvPY00b519i7YLxUy+eKTl6hXUX7DANt20+d531vxEx5ptW
J1W1rHtASv1pgmP1L6yVyOiQsrDN93Ws+yC53fPBJyp/Ze2G1WL+lpHbbrB+
D7q7fplHcn5jPQBP/YN3ub1/k/UgrGt99OKDKt5D8Ml7s0K3xt1iPRTTQ3bV
rrjA2wORy3Se5YG3WQ9D7pP6A78X8h6ODYOc0xxPeI9A9xrtpkOBd1iPhL8h
Jah5IW9P7A19Mzb/IG8vZC/QiXGPeI+CQfFG9WDXetbe+Gzz8sF7J/H2gXLs
83MLMnn7wlVha+qdz3s0ihsHfdy4lbcfiiLv6S2VvMfgM/NXzb9c5O2P8B03
FhXc5h2AAZ223z7wN28gL9e9rqjN3ZYWgWuvJr9v6cxaMRZt7AX6+J58PhZn
uuU1f9CPzwOB9dXbng3m80BY20/3afTg83HodmrFo7yRfD4OXTqndz7pxefj
X3xedvY5PYrPxyMh1z98C2/FBNSdfVY8k79enAC3JaOz2vOfp5iIyK9ve+3n
+8SJyO1yuk/WED4Pwp+byl/17s/nQfjgc/PCXq58HoyMbOOYgd34PBj3juku
JXbi80mo/v5s/yPt+HwSTgwPH65W8HkIim99GzHqMXs/xRft3to9tJ6/v6EI
y3/t/sbrfB6Kr82Xld7n+DwMw45trO56lM/DoN33pNR3P5+Hw9zDdrW4hM/D
sb2s1YDE9Xwegc818U0JS/k8Apvs1fri2Xw+GT5XrKN8NXw+GVG9go53jeZz
FSb7xwT5jGMNFSo6dF5c5M5fr0JWToBySnfWkgqP38gTJr7Oz0ei9dgTsXMb
2Ocbkfh28qVL9y+xFiMRt8YnZ9OPrKVILN5tXJy/jX8fohCkHjBoz0p+Pgon
3u8Q0G4WPx+FMYZVhk8T+PkoPC3JcZ/0/+/fFCzu6Vo28D1+fgqWinXN7u34
+Slw4O2amHr2/ZWmwG9tJ8cXVfz7PBUfzuoa0LiDNabCOrTdBF0ea3EqSj7y
+emOlp+fCvX9P2abg/n5aQg71bPquRs/Pw0L9u1sXKLg56dhfpehr7e/zJ43
0jSELhlQ9lEZf/5Ew+/syuXX8lgjGmtDhte5prAWo7G9fcdDgb78fDSC2lW3
8u3Iz8cgdFOMp6KOPe8Qg0urm8ry97EWY9Dzo5nrfs5lLcXA4VdfcS2aPx9j
MSxnbfnKfvx8LDrNPVZ35yF7voqxaJ4zPrH2B9ZSLMZXpLfSL+HP3zh0vD43
Y34Ua8QhYeLkP97pxs/H4Zhvhx/7OdnzW4pDdp6m3L6ZP8/jscu3w5x56awR
j6KLyz8oG8BajMebc7c+HnWL3QdSPNzmdfn92RZ+P0zHLxm1I56qWWM6zJN1
JrcerMXpiPN8bUDWeXa/SNPR0V2zp2opv29mYMLm5oiRAawxA1/q3Yase8Du
J3EGuu+xpd/fxFqaAUWTqsdgFb+/EnB38ZpMNLH7DQnIPvhgZd+vWIsJ6Ht6
fe2xcNZSAoqLHtxwe+Rk5xPR6uof2iGrWSMRR/pc/vS8F2sxEbc6/1Xdbxu7
T6VEDC//uFNF7TV2fiaqiip9o7uwxkzsuDxw+G9jr7LzM+E1OnbddC27n6WZ
UNVGdCvJv8zOC4h+N/e7Q9t/bmmlgCvHzZ5Fh9n9DgHHwwKEwJqalhYErD+o
XrPxt2r28wU4jjZ7HbjPfGAXsHr/yV6Fjy6wfQKy/GcFxj8839JOAXMGq4Oe
1J9j+9VYEHzBY6WTeUOpxuEP93cPcpxh+9Xo9c35N1DhYPvVuNu2/dKYcafZ
fjXK/x6Rv6gN84tdjS/L9ixfe+g426/G8ym7dg6adYztV2Ped4dc/+p3lO1P
wvWNQ2uqTx5i+5Pg/q9+IZKhku1Pgn/Z1b6f9/6B7U/CWe2FpbrYb9n+JKzu
3TT6wvIytj8Jm5Waa8+W7Wb7k3ClMOj4w9Zfsf1JWLt76sj2Xdex/ckQDvg+
HZQwm+1PhmPYuoob/osPtuxPhqYqurnRe0NLC8mYYbs5K/xecUuLyejm59n2
m9GlLW1PRmFDvmvE1LKWlpJxMe9OuNF7f0s7k9HHa5Cp7FpFSytScCcw6tcN
fgdbWpmCZwcLV0zsW8n2p+DdkNKj/835ke1PQcx3Jz8tWnWI7U9Bv4qTFU7j
YbY/BT57dau2v36E7U+BZ7eUVyZNYu1MwY36ezlvubNWpKL/BUuXOTvYeWUq
vr7pNdBzH/v5SEWRe4na5sf3p8JaEzZC6ymx/an44YuQsrr+7Pexp2Lew7vB
af/hv38qLIWlmrZZJWx/KlQuLl0z9ixj+9NQs2Dua6/O/oK9/2lQ/v1m8uG7
e9nfPw3C9aHDkn46yP7+aajVv9WhawX7/Ihp2E39bE/DKepnKQ0PqZ+daXhb
5ud0hFA/K9NRRv2MdLmfhXS5n8V0WKif7elIpH6W0rGG+tmZDq3Mzxr8Sf2s
1Mj9DI3cz4JG7mdRg2nUz3YNFlE/SxrYqZ+dmpf8nIEA6mdlhtzPyEAm9bOQ
gWzqZzEDq6if7RnoRf0sZaAv9bMz4yU/a+V+VmrlfoYWYdTPglbuZ1GLpdTP
dq3cz5JW7men9iU/6+R+VurkfoYOPaifBR06Uz+LOuyifrbr5H6WdHI/O3Uv
+Vkv97NSL/cz9HI/C3rMpX4W9dBQP9v1qKd+lvS4SP3s1KNK5udMlFA/KzOx
lfoZmQinfhYyUUb9LGZiBPWzPRN66mcpEybqZ2cmdsr8nCX3szILdupnZMGb
+lnIkvtZzEIk9bM9Cweon6UsZFI/O7Ne8nM2XqF+VmbL/YxsxFM/C9lyP4vZ
cj/bs1FF/Sxlw4/62ZmNRpmfDVhE/exiwDLqZ6VB7mcPg9zPMMj9rDLARv0s
GFBM/WwwyP0sGhBK/VxgkPvZbsDH1M+lBgRTP0sGuZ8dBrmfnQa5nxsMCJH5
2Ygw6mcXo9zPSiOU1M8eRpyhfoYR7tTPKiNcqJ8FI55TPxuMmED9LBrxFvVz
gREC9bPdKPdzqREG6mfJiB3Uzw4jCqmfnUa0p35uML7kZxNqqZ9dTMihflaa
EEP97GFCB+pnmDCe+lllQiH1s2BCT+pngwmtqZ9Fk9zPBSa5n+0muFI/l5qw
lfpZMuEV6meHSe5npwn3qJ8bTPCW+dmMw9TPLmZspn5WmuV+9jAjgvoZZkRR
P6vMOE/9LJhRRf1sMGODzM9mnKJ+LjBjMfWz3QwD9XOpGSL1s2TGQupnhxln
qZ+dZvSgfm4w4w71s8KCIupnFwvWUT8rLWikfvawIJf6GRbcpH5WWRBK/SxY
4E39bLCgSuZnCzZQPxdYYKF+tluQR/1capH7WbLATv3ssEBF/ex88foTxM8N
L/ZTPyuscj+7WDGH+llpxVHqZw8ryj2Jn2HFPepnlRXPqZ8FK1ypnw1WmGV+
tqI39XOBFaOon+0vmvq51IrfqZ8lK3yonx1WrKF+dlqxhfq5wYpPqJ8VNiyl
fnaxIYL6WWlD0ybiZw8bCqifYUPNfOJnlQ3B1M+CDfupnw02VDI//wNZDzf+

             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 360}, {-0.16629898706033128`, 0.8901924969879454}},
          DisplayFunction -> Identity, AspectRatio -> 0.25, 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 12, 
         FrameTicks -> {{{{-1.5, 
              FormBox[
               RowBox[{"-", "1.5`"}], TraditionalForm]}, {-1.4, 
              FormBox[
               RowBox[{"-", "1.4`"}], TraditionalForm]}, {-1.3, 
              FormBox[
               RowBox[{"-", "1.3`"}], TraditionalForm]}, {-1.2, 
              FormBox[
               RowBox[{"-", "1.2`"}], TraditionalForm]}, {-1.1, 
              FormBox[
               RowBox[{"-", "1.1`"}], TraditionalForm]}, {-1., 
              FormBox[
               RowBox[{"-", "1.`"}], TraditionalForm]}, {-0.8999999999999999, 
              FormBox[
               RowBox[{"-", "0.8999999999999999`"}], 
               TraditionalForm]}, {-0.7999999999999999, 
              FormBox[
               RowBox[{"-", "0.7999999999999999`"}], TraditionalForm]}, {-0.7, 
              FormBox[
               RowBox[{"-", "0.7`"}], TraditionalForm]}, {-0.6, 
              FormBox[
               RowBox[{"-", "0.6`"}], TraditionalForm]}, {-0.5, 
              FormBox[
               RowBox[{"-", "0.5`"}], TraditionalForm]}, {-0.3999999999999999, 
              FormBox[
               RowBox[{"-", "0.3999999999999999`"}], 
               TraditionalForm]}, {-0.2999999999999998, 
              FormBox[
               RowBox[{"-", "0.2999999999999998`"}], 
               TraditionalForm]}, {-0.19999999999999996`, 
              FormBox[
               RowBox[{"-", "0.19999999999999996`"}], 
               TraditionalForm]}, {-0.09999999999999987, 
              FormBox[
               RowBox[{"-", "0.09999999999999987`"}], TraditionalForm]}, {0., 
              FormBox["0.`", TraditionalForm]}, {0.10000000000000009`, 
              FormBox["0.10000000000000009`", TraditionalForm]}, {
             0.20000000000000018`, 
              FormBox["0.20000000000000018`", TraditionalForm]}, {
             0.30000000000000004`, 
              FormBox["0.30000000000000004`", TraditionalForm]}, {
             0.40000000000000013`, 
              FormBox["0.40000000000000013`", TraditionalForm]}, {0.5, 
              FormBox["0.5`", TraditionalForm]}, {0.6000000000000001, 
              FormBox["0.6000000000000001`", TraditionalForm]}, {
             0.7000000000000002, 
              FormBox["0.7000000000000002`", TraditionalForm]}, {
             0.8000000000000003, 
              FormBox["0.8000000000000003`", TraditionalForm]}, {
             0.9000000000000004, 
              FormBox["0.9000000000000004`", TraditionalForm]}, {1., 
              FormBox["1.`", TraditionalForm]}, {1.1, 
              FormBox["1.1`", TraditionalForm]}, {1.2000000000000002`, 
              FormBox["1.2000000000000002`", TraditionalForm]}, {
             1.3000000000000003`, 
              FormBox["1.3000000000000003`", TraditionalForm]}, {
             1.4000000000000004`, 
              FormBox["1.4000000000000004`", TraditionalForm]}, {1.5, 
              FormBox["1.5`", TraditionalForm]}}, None}, {{{0, 
              FormBox["0", TraditionalForm]}, {30, 
              FormBox["30", TraditionalForm]}, {60, 
              FormBox["60", TraditionalForm]}, {90, 
              FormBox["90", TraditionalForm]}, {120, 
              FormBox["120", TraditionalForm]}, {150, 
              FormBox["150", TraditionalForm]}, {180, 
              FormBox["180", TraditionalForm]}, {210, 
              FormBox["210", TraditionalForm]}, {240, 
              FormBox["240", TraditionalForm]}, {270, 
              FormBox["270", TraditionalForm]}, {300, 
              FormBox["300", TraditionalForm]}, {330, 
              FormBox["330", TraditionalForm]}, {360, 
              FormBox["360", TraditionalForm]}}, None}}, 
         GridLines -> {{0, 30, 60, 90, 120, 150, {180, 
             Directive[
              Thickness[Large], 
              GrayLevel[0], 
              Dashing[{Small, Small}], 
              Opacity[0.75]]}, 210, 240, 270, 300, 330, 
            360}, {-1.5, -1.4, -1.3, -1.2, -1.1, -1., -0.8999999999999999, \
-0.7999999999999999, -0.7, -0.6, -0.5, -0.3999999999999999, \
-0.2999999999999998, -0.19999999999999996`, -0.09999999999999987, 0., 
           0.10000000000000009`, 0.20000000000000018`, 0.30000000000000004`, 
           0.40000000000000013`, 0.5, 0.6000000000000001, 0.7000000000000002, 
           0.8000000000000003, 0.9000000000000004, 1., 1.1, 
           1.2000000000000002`, 1.3000000000000003`, 1.4000000000000004`, 
           1.5}}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 800, Method -> {}, PlotLabel -> 
         FormBox[
           StyleBox["\"N=3\"", {16, 
             GrayLevel[0]}, StripOnInput -> False], TraditionalForm], 
         PlotRange -> {{0, 360}, {-0.16629898706033128`, 0.8901924969879454}},
          PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           StyleBox["\"\[CapitalSigma]cos/2\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(A)\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(B)\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(C)\"", 16, StripOnInput -> False]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], "GrayLevel[0]"]
                    , Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             GrayLevel[0]], 
            LineBox[CompressedData["
1:eJxdnXFMXOW67sdTb4+9sr314OkpR/TQTTe77LK7qVQsFttVaafQTltg6MAU
SgcGBgYGmGGGicTGYOolbSSmBtPIlRhMDbGRmHrH2yvXxoypIZI912AwjRMb
g6mZ2EhMDaZXIvHcbtbea/H8+k8zGfjxvO/7fO/3rbW+tdaW1r7a9n9yOBwb
H3I4/vb/P/69/vh//6Hmw1f2/Y+xv/2b3rcte+3n2X2dvzM/7yr527/5fZ3/
vPb79L7P/vOl1c8mbWHfuf/30pqfv7Xvw7/zOwJ/+5fZ9478vdv7zv398/9N
/e3f4r5/6DF5d/DzP1k8k79kfTZ//2fr982/d9f63uT9su8r4S1bfJP3q/W9
yVuB/t/Acxj69+3PJv8+Q3//n4yv5O+tM94R3v3g3W9o/P/F+Ex46w3Nxz8b
qu8B8B4wNP4Nhubrv1p8k/cgeFngZUHf76zPJu8h6PtvFt/kbTTOyc9vtH7f
5NufV3+95GFD/fow8vcv4P0LePZnU0+2pcfkZYP3iJUvk/eI9fdN3iOI719R
/39F/jbBD5ugbxP0/Rv0/ZsVn8nbDN5mQ/27GfXMQf5yEO+/o37/bv2+yft3
+PdR6HsU8eYif7nwTy70PQY/PQa/PA6/Pg7e48jff0Dff0BfnvXZ9Fcexlce
8pWHv5eHemyBX7egPlsQ3xb4aYuVL5P3e/B+D32/B+/38NPvUd985Ccf+vLB
y4c++7PJ2wr/bzWeE95W8LZC31bo+wP0/QH6/oB6/AG8P4BXAH0F8HcBxmsB
eAWo7x/B+yP0/RG8P2L8/BF+3mbxTd426NsG/26D/7bBz4XIXyH0FaL/F1p/
3+QVgvcn8P4EfX9Cff8EfX9CPbYjf9vRr7cj3u3w33bje+EVoX8UoT8UQV8R
4i1Cff9s8U3en5G/P6O+9s+bvD8jfzsQ7w7o2wHeDvhvB3h/Qbx/gb6/IH9/
Ae8v4BVrfnKK0Q+L1b+uYvy9YuUNFcNfxdq/EsWoJ3iZYoyPnZqfnJ3Qt1Pj
c+005kTfTugDbwy8BHipncYV0bcTfn7C+numvieg7wkdD64nkL8njKTosz+b
+p6w/r6pz/7e1PeExpt5AvpKUN8S+KcE+Sux+Ka+EuSvxJgQfSXaHxIlGP8l
qG+JxuvYBX27MF52IX+7rL9v6tsFfbtQX/AS4KV2QR94jie1HjlPQt+T0Pck
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
9M24sf61v1/lzYOXBm/BjfnXrfsZF1GPJTf8B56jDuu/OpwPrFNedp36JacO
/Q+8gjqNt6gOx391Wt8y8Iw69bOzDv2vTuvrrjMqN6/1Xx3Wf3XwH3ihOviv
TvM3WKfjY6gO/gNvBPGO1ml9x6BvArzJOl0PTYGXqFM/TyN/yTr1y0wd+h/y
Nw996Trt9wt1On9kwFsEbwn6lusw/55A/zuhvKwTGm/2CfVLzgn0P/AKThjf
r7y0xn8ncPx8QvWVndB4DfCc0Oc6of3UDZ73BPx3Aus/8EInNH9R8AYR7xD0
DYM3gvyNnlA/jyHeiRM6Pibv/X7uWv/d+/3ctf67l9/ctf47YTywdr5MnjA2
P7bWfyeMhsfW+u+Esfuxtf47YXQ+ttZ/9mfTf/f0rOVl7uVzLW/R/t70n/3Z
9J/92fSfx5rfTf95dD7P8hi/rOVle4zN4j/7503/eaz53/Sfx6iU/ucxGsR/
9vem/zxGp/jPo/dTOD3aD1z296b/PDj+8GD+9WD954H/POqXKHiDHhz/euA/
j84fIx6dP0Y9WP+BN+HB9TDEO+XR8ZGw82X6D/lLIn8z9vem/+z8m/6z62f6
z/7e9B/qm/FY60HTf/Zn03/wyzL84qg3vhL/2Z9N/9Wrn7PrLb+b/qs3Plvr
57x6a7yY/qs3zq3lFdXreCuxP5v+sz+b/qs3fsld6796a7yb/rM/m/6rt/qF
6b96453ctf6rx/mXeq1vqB7+q8f8W4/+B95wPfpfvfbnUfDG6tH/6tH/wJuC
vkQ91n/Ql4S+mXoc/4I3X6/nf9P38r+y5v7ahXodH5l6XW8s1uv8tlSP+Rfx
Ohow/zZg/m3Q/GU34Pi3AfMveAXgFTVovCUNmH8bdL40wHM24PwseG7wvNDn
Ay/QAP+BFwVvELyhBl1fDYM3At4o8jfWAP81wH8NWt+pBuPc5rX+A2+6Aeu/
BvXLDHgp6JsHL416LCB/GfAWG+A/8JaRP4cX/vPCf17Vl+3F+T8v/OfF8a9X
9RV5df4o8cJ/Xhx/QJ/Tq+PXBX1u8Lzg+cALeOE/r463KHiDiHfIq34ZRv5G
wBsFb8yL4w/om4S+KcSbAG/aq+v7JPTNgJeCvnmvHl+mEe8C9GUQ7yJ4S15d
byyD5zipfll/Ev47Cf+d1PVBzklrPWf676S1XjD9Z/+86T/wSk7CfydVn3FS
+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
en/gargvxK33C/5/+KE3IA==
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1:eJxcnXd4VMXfxREQQUF6kxZ6h9A7ObRAIJDe22Y32exmK4YqRUClSQcRkI4E
UUCKIp3Qe++IEBEREBUBRaS9993vufO7q//45CE5mZ2c/dy7d2bOqWn2RGYW
LFCgQKm3CxT4///r/42adK1f5sFLQQvm//9/W4OWWY7dCVNfHwkaN/nIlhLa
161b/f9/54JSX4wJW3JA//crQdvNpb8urH0tavlBpTruv9Jlv/79PwUNLTU4
NWTfpaAs6///dzvo/o0BhRrt1X/+blD7LzqPvp53KejE8f//735Q/w8bnLfu
1vUeBH3zYNmb+3bq3/9nUOU2N+o/2q7rPwqq0nhnyydb9Z9/HLTm1a6Wp77T
f9/fQdG/lQgc8a2u909Qzp/DWj3bqOs9Ddrz3qDgsPW63rOgpmXfyRm6Vtd7
HvRuwQb7c77U9V4G/flrgV49V+l6BfBt5lev3V2hf38B/Dz5TBHzUl3/NZSY
kJf+9UL95wsC1WwBZ+bpv68Qvq2fGHFojq5XGGPLHi00a4auVxiRMVN6t5ii
670O05XyTVdO0PWKYLZrxIHfxul6b+D7ugNrvTVa1yuKwdtDYl8M0/WKYsrt
v3L25+h6xTBmY6HpJreu9yYKnVi0/YxN13sLdU5NfruSRdcrjv7jmixqlaLr
FceT6u+PqhOn65XAw/GVDt4L1/Xexo3h9aeN76vrlUTagXd/e9JD1yuFOZ74
51276N9fCjV/OH4uqa2uXwpvPEyYOqD5pSDfj7cqjdlNq/eo2ED/faVRee+x
kpsDdL0yKLxq1duNK+t6ZVB/1cSkIaV1vTI4a79YZl4xfTxlMWPoxIgZr+l6
ZTGtY902aU8vUq8cnP/mfV/4z4vUK4fV555bxt65SL1y2P/l67+dv3GReuWx
oMrsua8uXqReedyy3B7z2kldrwIuhhw5fnW/rlcBXV5N+ezj7bpeBbxeoFjJ
cht1vYpo/tv8kEFf6HoVcd4S4F6zWNerhBGnXy3ZMUfXq4Q3g6oVWjlZ16sE
T73r2zPH6HqV8X6L+n+8HKzrVUbpwkl7vQ5d7x2Meh6ftN2k672DDx6OyL8e
o+u9gzcfzhv2fV9drwoWPXrRd0OQrlcF3WZ63ze11vWqYtaWJl3vNtD1quJG
wk9f96um61VFRrmtLyaU1vWq4eGNnhGLX9f1quHgpmnnpz29QL3q2NLo7Y0J
v12gXnVUqru63Kv8C9SrjmtZG+u/f/4C9WrgSIc7Fa4eukC9Gvjyxbtvl9qu
6wUg59hPHWuuu0B/BaBokVZHSizT9QOw/o9dty/M1n8+AB917rtn+Hj99wXg
0vJ/xz8dpuvVxN/2OGuMQ9eribV/9542NUXXq4necWWaLQ/T9Wpi/PGEwbO7
6Xo1YY+sNie9la5XC0frbd5WvK6uVwuvBlys/EkFXa8WSlWdcPPfN3S9Wtiz
tn5w16fnqVcL2wc5hqTdO0+92hizKX5l6vfnOT+1YX4Z/Hrn4+epVxtttv9w
+MmO89SrjQJLytSetVbXq40VTRr0fmuxrlcHCS3W2CzTdL06mNhtyPYFo3W9
OrjXOjdng1vXq4Oc5csPrErV9epgSFLF26MG6Hp1UeSXR8Vad9X16qLVC7v1
aFNdry7cr90P7FZN16uLxqMbL5lXXNeriw5LKv5y+tk56tVDytrvu967d456
9WCZ9MO1W1fOUa8eztTf8STv8Dnq1cNXxQccHP3dOerVQ6vDS96vnqvr1ccb
OQ8Tl87R9eqjXZNt0wt/oOvVxzufLozpN1DXq4/xCZ5bg9J0vfq49VnbQWP7
63oN8MfE2l0GdtL1GqDeqVlDezbU9Rogt9Zbyc8q6HoN8EFep9pzC+t6DfDd
w39fL//wLPUaIvOTnl2G3ThLvYZYvah9wbzjZ6nXEJWXVZ52f+tZ6jXE56n9
3nmZe5Z62s+HROQ/nq3rNcKkcicqnxmj6zVCV4wqMNul6zXCzS86neyYqOs1
gr3i8x2Hg3W9Rjh+7miRLq10vcZY0v7Yz5/W0PUaY2qftnOuvKXrNYYnOCG0
4D9nqNcYh/rP6VPm1hnqNcao3+P3FTt9hnpN8PJIgyd3tp+hXhPEtJxTff2q
M9RrgrBj7Qelzdb1mqBos7yWT0brek2QNe36nKHZul5TTDVHXMiP0fWaokqJ
681addP1muKNSeHX3E10vaYwV3qv0pyKul5TNP+refUVBXW9ZhhRuG+Dhb+d
pl4z9J+ybOD7l09Trxk2/VqyTf99p6nXDKYY19rX152mXjN0mTq9/Op5p6nX
HCtW9fmi3Qe6XnNEHc9cusGl6zWH59na9hXjdb3m+OV8/le27rpec/S2fNs6
t4muF4hzdy6XOF2B3185EAlf/zbwdoHT5E0gzJvLtjt34ZT8fGggGo11Tt60
+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
Z3sc/M4Ty9cHjMmaUtrct8pun1wOUOneJ88unk7YLa8XKJAYdt/80LbbpzcF
KP7WjjEVR767W14/ELO/bN7NkcN2+/RygVuNwupMGzFa9DYBJ8eWj32z8zjR
ywNGfztkY/sOH4nece3rIQ2/DWszUfSuALM/7fIoNPBj0bsNnL57r2izRtNE
7xEQvmNf6LCZM0SvQDek/r6rfkiJWaJXvBv2b6rpnjhxtuhV7gZ7w/rPWxf6
RPTqdYPrwUcb+o+aK3qtuqFgO8fAM39/KnrohvO7B9fa7ZkveqHd4L25fl35
OwtEL6Ebao2fXuh82kLRs3bD6Hd+Kf304iLOXzc4p9w78UH/JZy/bnh7/qxP
t6Yv5fx1w75rHStZqi7j/HVD8sTCd3ZeXMb564bYz7+ccGTGcs5fN7TvMnn4
R31XcP66Yd6ZJd3+LPQ5568bgvd8mFl85+ecv27Yu9XpvDh4JeevGwrUqn1j
QLNczl83nBpftM/g27mcv+4YWqBUq5DFqzh/3TF16Y6mR2O+4Px1R9jl6oee
FF/N+euOj344M/3MvtWcv+6YWf5p5bj3vuT8dUf8e12eTgj8ivPXHY5XR/da
bn/F+esO6z/9S9z7bA3nrztujX7gfSdiLeevO2Zcipvw+PV1nL/uGHZx2a9D
t63j/HVHUrC54+furzl/3YF6pyd2Lr2e89cdzl/sRZ9lr+f8dcdY50Dn1P3r
OX/a7xtbcvyjahs4f9rXrpr1mw7dwPnrji3L29XqeHoD5687egya0/edhhs5
f90x51ijQSfGbuT89cDBKwtzoq5u5Pz1QNVTHauvabmJ89cDU6a91vfS5E2c
vx4Iz5h/4vzNTbuFPz1QfXv0mM87fsP564Gr55p1DJ71DeevB+6NOHpu691v
OH89sHm/t94rfMv564EvdpQsXmHet6KX0wMBDTqkvfz9W85fD7zTseaz73pt
5vz1wJ0Bi7Z3X7iZ86eNf1WtUYsfbub89UB03QNVj/X5TvQ29cD6wm2HHV78
HeevB+Yt3Oua+/g7zl8PDKsSda113y2cP02vl33FiiVbOH/a121rrLj5eIvo
PeqBJjXq7fgzZCvnryfaFjtw6vTirZy/nmg279Lu9x9t5fz1RNeTx90ve2/j
/PXE+pMrd4cu3Mb564mAlY8/yX6wjfPXE+eLfX8hrud2zl9PrGlULKPcvO2c
v57a5+EddZf+up3z1xMPI3cVeNZ1B+evJ3q+bfm+zqwdnL+eeP7BxIXVft7B
+euJ08/nNP653U7OX0/s/2ewd8TknZy/njj4YnFU/rWdnL+eGG0ruqts812c
v55o0KXZ/PJjd3H+eqLov2+f+vnsLs5fT4Q7GvX9sM5uzp/2+seM+evB4N2c
v544GzBjR+NDuzl/vXC34Fe93imex/nrheGH6676qHUe568XRpxr+fRSch7n
rxduH5jUsvRHeZy/Xph8vXrfFmvzOH+9AHutdu0vUC+0FyY1LfBn3RfUS+iF
vjdSPf/W2cP564Ul02t8+W3oHs5fL8ysnjI/btAezl8vlFzraJP/2R7OXy+4
S10eErZvD+evF6b2yopdeY96ub0w++fyJ34svZfz1wu7FlQ8X7jDXs5fLyTO
vZjxtmkv568Xqr7xaNjL8Xs5f70QOqP7mxfW7uX89cKWPafKzDpPvUe90HHG
lSltnlGvQDDiTp19d3fNfZy/YOz7Mn138z77OH/B+KZmmmu8ex/nLxg3x14c
um/OPs5fMKreKnz19rZ9nL9gJK6On/4gn3qhwSj4j3d2fpH9nL9grOxY7ebm
Jvs5f8F4fUny0JzI/Zy/YBSfmxJWYdh+zl8wBkePsi5ZtJ/zF4wh0b23vr2P
evOD0ffSoJ4Zd6iXG4xc2/3CS0sc4PwFo5J5z5M9LQ9w/oIR7Wn1ztG4A5y/
YCwou86+ZeQBzl8wrM0P/zRl2QHOXzCaT+gxvvdB6j0Kxvq+xcPu3KNegd6o
uah9Z0/Jg5y/3vi+WtHQa60Ocv56Y+67P41sHn+Q89cbzc4knbCNPMj5643X
Pm7UeeLSg5y/3jg2L/Dw1P3UC+2Nj+sP8Q6/Q72E3lhTt1HrfsUPcf56o/qZ
ZWUKBR7i/PVGSnD8W8uiDnH+eiOm1O/V6g49xPnrjcpbGvSdvuAQ5683KsY9
nH5jJ/Vye+Ne/YQ/yv9IvU29Ma3ydFvLwoc5f73x0nz3Wev6hzl/vXG5Qv7q
an0Pc/56Y/6WEjn3nYc5f73x9tlm8cumH+b89cbiSTUTO2+kXoE+aNnx5+E7
z1OveB+sL7ZgS50n1KvcByfHjan4buUjnL8+OND06acrOx3h/PXBokYfdtqd
coTz1wf3juUV2v3+Ec5fH9Ro6Xr4+bIjnL8+SLmTWWzgPupZ+yB3zMq+tX+m
Xk4frGzZc8v2Ikc5f31QcPjQ6I4NjnL++qDBhpk1l4Qc5fz1Qantr9W6l32U
86eNd35kfJUpRzl/fVC6fONDLddSL68PjiT2Hxh4knrHtfEtn5tQ7g/qXemD
oqdejrte8hjnrw9aVZj3YFrgMc5fH9xeNm1l3YhjnL8Q/NquwcrlA49x/kIQ
dmPfw9dnHeP8hWDihCszwzZSr14I4tc//ej9s9RrFYKvSp84+8lD6iEEjXqV
GzmrzHHOXwjmeVZ9NLjlcc5fCNr8OvhR18jjnL8QPHn40ZHfBx7n/IUgasDj
tz6aeZzzF4LBLx7tem0D9aaEYO7tE7czTlNvfgg+/iB/wro/qJcbguQZS3Kv
v32C8xeCkdtm9/6r6QnOXwhehiV6Hoae4PyFYOODz2tddJzg/IXg964drEsn
n+D8heDVjAddI1ZT71EIin/+3YY7h6hXoC9sA6bts96mXvG+CG09Yfixwic5
f31RdMShyxVqn+T89cXw0eNv9+l2kvPXF+bxJb5ITzvJ+euLCqO+q5U+6iTn
ry++Wvkgqfdn1Evoix1RbRPKbaWetS88KyoEHL5IvZy++K1F4GbzY+qN6Ysq
l1rUvFX6FOevL95Ou2oNbX6K89cX13r+M+Wz0FOcP+31uOzzz9hPcf76ou5P
78z6ffwpzl9fXJhVdNTDFdQ7rr2eN7qYfsij3pW++KvBmW5f/0C9231R5+mv
9W3/Uu9RX8xqmF78w7dOc/764XF0v6mHKp/m/PWDNePa/Jf1T3P++iH3SPc2
Ddue5vz1Q1PLJnPvnqc5f/1wIdleNyGSeuiHo6Vyx6SaqBfaD3Xvrh8a56Ze
Qj+07XapRM+R1LP2w0e9ncF1JlMvpx/u3Thc559PqTemH55+1G/N7pXUm9IP
W5vH57+3iXrz+2FyYPz+hnuol9sPYVW3JR0/Sb1N/fD6V3+uNl+jXl4/2BcO
3Xj/LvWOa69n4ZFh2U+od6UfrtXNLnCt8BnOXz98ac8P7VbmDOevHzq02JK+
oMYZzl8ohu8f2/2XJmc4f6FodOrMw/odz3D+QvFmcLchyb2pVy8UVfu7Tn8Y
Tb1WoehW7UnhZenUQyjO3fug4gY39UJD8cuxHW99O4J6CaHotGTAz2smUs+q
ff3o7qp5n1AvJxSBv3WPG7acemNCsT2w9JN+X1NvSiiWHSr5cdkd1Jsfirxi
LyqcOky93FAU/2jB4tEXqLcpFJm319StdZN6eaHY/+Ozr7f+Tj3tA/rwKpHd
ej2j3pVQlCw96of9b5zl/Gn6BftPbF/uLOcvFI+uzem1NOAs568/StVqVPl5
k7Ocv/6wnr9VJLTDWc5ff+SYlpSZ0Yt69fojYUJbHI6gXqv+SAmZNPtxCvXQ
Hy9ODytVPpt6of2xPeXOtoZDqJfQH1833zm35TjqWftj97vXVzWfRr2c/hjY
qM3DgAXUG9Mfe6qtGV4kl3pT+qPfvubd8zdQb35/rGm6LmzdTurlar/vSYVc
7xHqbeqP91okhdS/QL28/rgR6upyNp96x/uj0Fvdxg+8T70r/dHDfqz+6//o
89cff0wrWG9qoXOcv/5Yve2HD4uVPMf5G4CvAmP6vPfOOc7fAGQ2MA+6Ufcc
528A7mx7WbxDi3OcvwEYeqZuhQmdqddqAI6UPTf7SG/qYQAaXyo4uUAU9UIH
oHKJjc8bp1IvYQD2tLz+Rz879awDUAwfZZkGUS9nAJp/ujLL/j71xmjjedzl
sXUy9aYMwNaU/qUTPqHe/AF4o+y5vUFLqZc7ADVGnyxe5SvqbRqA3rWDHt37
lnp5AzBhZp33vs6j3vEBGBI1eqXtGPWuDED5/H7DK1yk3u0B+O7jKU+35Ovz
NwApw4Mahf+qz1+Y9u+Wktf+0ucvDGXinqxJLnCe8xeGCWWeFjn75nnOXxiq
TbbW7Fz+POcvDFNLdSnwWY3znL8wZA0cvur3huc5f2F4/6eKVdq1pl5CGAo/
K5s2qCv1rGFIWWgbmtuHejlhWPJ7SduJSOqNCcOKAYXa3E2m3pQwHOjW6eZT
K/XmhyHC/nXOKy/1csPgGhz729P3qLcpDL9Xqhd190Pq5YVh8/Myq09Mo97x
MDTbVOpR7jzqXQnDJ2tKtxm8nHq3w7Cq0Rs57ddQ71EYjrX+cf2Db6lXIByx
U6Y9XLSb318kHI+WPu+EI9QvHo66H1WceenseXn+UDYc228e+ctyTZ/fcDz5
47nr55+pFxCO2hnzXiT9oc93OCY4x31x6B/qNQnH82VL3m1Q8AKf34Rj/Yuz
aaPfuiB6HcJx9+SLnCPlLvDvEQ7L+lcbi1W/IHrB4bgxanNAUP0L/PuEo3Tf
l3n2QOpFhSMnesOnkzpQLyEcDV+t+mJxd+qZwhF+YMuTL/pRzxqO+4FbJn4R
TT1nOCafGZa2KIV6OeH4qOWx9ydYqTc8HHlnRv1m9VBvTDgqV0hZ02kY9caH
o39wq7zXx1JvSjiKjTnc5MAk6s0Ox7J1N/8aPot688MRPa5XjTqfUW9pOFxZ
G9fsW0G93HDsH3VnWfwa6q0Jx7npnxf86RvqbQrHkjeXnTXvpN7WcBT865Py
lw9QLy8ci35pf6r7SeodDMeGwl0KrbhIvePa6/kj8tt/rlPvXDjOHmhwt8cv
1Luijbd89vIP/6BefjimXNp9a9sT6t0ORzPr6U23X1HvfjjGDQkqW7ToRT6v
0sZXal2RGqUuit7TcJScuG1m40oX6b8I7BxUYEvTgIv0XwSmf1VpVN0GF+m/
CDRuN/9WmUDqlY1Ay4jyD/9qR73KEXiUWG31ySDqBUQg/2LXEot6U69eBMzp
hWulh1GvSQTGfPnXvXfiqNcqArfdnzqOplKvQwTmDnSs8lipB+3nBz9Y9qab
esERGNx2eepng6kXGoEqGU/za46iXlQERi5wNFn8IfUSIvBxsqNnqSnUM0Xg
QAlbk2GzqWeNgP3+iV8uLKCeMwKOt4q813A59XIisDZ0yO13V1NveATKJo0N
3LieemMi0Gzl+KRfvqPe+Ah0jruZXWY39aZE4OuY39JbHaTe7Aj81e5Fj74n
qDc/Apu7Z5SLO0+9pRHYZx54MeF76uVGYFF979TIm9RbE4Fxu77o3O0u9TZF
4Nn9tF/qPqDe1ggUKH5pRoEn1MuLwMuCoZ3PvKDewQic6v70/qeFL9F/Ebie
Vz43+q1L9F8EEh6ez36jzCX6LwKfHLJ2XV/pEv0XgVqrntQOq3GJ/ovAcPv6
6rfqUu9+BCpFb27haUK9RxEILd/Y9KAl9Z5GYM7uJmuzOlCvQCRGHLhQ5UIQ
9YpE4vfHnb9uH0y94pEIyhmcPSuUemUj8cOWaeE3I6lXORLNps7JaJBAvYBI
TCk4fXVGGvXqReLvgeNqfZpJvSaRGDfUc3a3g3qtIvHm75E7rg+kXodILP21
7k+PhlIPkRiy84eQV6OoFxyJ2FuORwU+pF5oJNaV2nXzn0nUi4pEzRq73vll
OvUSInGzXOTiY59QzxSJH6ske3M/o541Eovf3zZ76DLqOSPx3urebwWtol5O
JAZWu3rl+RrqDY/EnCE9C27YSL0xkfjLEjMhaQv1xmuvZ+Ulx/Od1JsSiW1F
Zm2cvY96syNR3NQ7teYR6s2PRKXpmweuPEm9pdr8Dl7wR43z1MuNRPsnq6/O
uEK9NZG4/ejTNv9cp96mSMztXbZQ7C3qbY3E9QMHe315l3p5kfiwXUKBv36n
3sFIzIhztWn7WPdfJMafXvaL66nuv0i832Fm5YUvdf9F4kDXEzfzCl2m/yLR
Yr+9yrWil+k/zR9/Dvv+txKX6b9IfL3/g7p/l7lM/0Wixled7z6ueJn+i8Tb
SZFh96pSr0AUhle7F3yxJvWKRGHpjFFnt9SjXvEoDG4w7vHMxtQrG4UBTexf
pwdSr3IURnyz5PUGbagXEIWTq6Y9vdWBevWiMGjrgqnzulKvSRSOWuvs797j
Mu9/onDv8YQlP/WmXocoXHdXqzUilHqIQtEV7QcUi6BecBTG1mxYb1oM9UKj
MLdDxzXFEqkXFYWHTzbeHJFKvYQo7K1z8dgtM/VMUUjvdtPeM4t61iisH196
9wIH9ZxRKPzT/BO/eKiXE4VO/6z5tPEg6g2PwqvKw2pYh1FvTBTy+9XJ+nQk
9cZHYULQRe/uMdSbEoUbkeu6Xv+QerOjMHTa4bOPJlJvfhS+W9G5eYGp1Fsa
hRq/VostNJN6uVHYah4R8mIO9dZEoe+atLd+n0e9TVEoVfzMogsLqbc1CpMa
7C/4zVLq5UWhRM2IzpM+p95B7fVttYTGfEG941E4sPZB60prqHcuCt3i7jw5
8zX1rkTh/dy2n47bpPsvCjXr7CvX6Dvdf5reH953D2/T/ReFS9uqb0zZRb1H
2us7mXvh7h7df9rfu9CN684Duv+i4d0/79Ttw7r/orG/2LLVccd1/0Xjk6Q8
9+5T1CsbjUkntwVUP6f7Lxr3Cobvybmo+y8aE2t3isy7ovsvGo5bLS8U+kH3
XzROjb3br2u+7r9o7NpVfIvnJ91/0ai42xEw77buv2j8/UvSyO/u6v6Lxq03
Vpw9cV/3XzRy/7xW5/s/dP9FI2jg62tvPNT9F43q9rH7rv6l+0/7/f3fLnvi
H91/0biQdypj8zPdf9Hov7rftrkvdf9Fo3PMjFLu167Qf9F41bL+u50LX6H/
otHW/uf3r71xhf6LxuetzWG7il2h/6Lxou+dEwOLX6H/orH7ym/xVUtSb340
LB9d/nNnaeotjcYMW7EFseWolxuN5mV/iLxdgXprorF+0lfVXJWptykajXse
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
iv7cnyb+S8Vu7l8T/6XiXe5vE/+lIs+4/y0qFWu5P078l4qd3D8n/kvFK+6v
E/+lIon778R/qYg37s/LScUw7t8T/6Wq/X3iv1SU5P4/8V+q2h8o/tN+v3H/
4OxUtb9Q/JeKIdx/KP5LxT7uTxT/pSKb+xfFf6ko4be/MRU7uP9R/JeKz7k/
UvyXqvZPiv9S1f5K8V+q//7Lc6loz/2Z4r9UtX9T/Jeq9neK/1LRg/s/xX+p
qGHcH/ooVe0fFf+lqv2l4r80tf9U/JeG9tyfKv5Lwyrj/tWyaWp/q/gvTe1/
Ff+lqf2x4r80tX9W/Jfmv7+2VRqmcf+t+C8NW7g/V/yXhn+4f1f8l6b294r/
0vCBcf9vVJraHyz+S0Mt7h8W/6Wp/cXivzSc5/5j8V8amhj3J+ek4XPuXxb/
pSGd+5vFf2lq/7P4Lw0zuT9a/JeGRsb907PT1P5q8V8aRnD/tfgvDee4P1v8
l4Y63L8t/kuD1W9/dxoucP+3+C8Npbk/XPyXhsrcPy7+S8Ov3F8u/tP0jPvP
z6VhJ/eni//S1P518V+a2t8u/ktT+9/Ff2n+++MfpaEU98+L/9LQi/vrxX8m
tf/eZ4dCJrzO/fniRxMKzpT9+76fL2ZS+/vFnya1/98nV0r7/nA5H+DTK2vC
KJ4f8OlVMKnzBeJfkzp/4NOrasIcnk8QP5vU+QWfXm2TOt8g/jap8w8+vYYm
tOP5CPG7CQt5fsKnF2hCfZ6v8Om1MqnzFz69tibE8XyGvB9MeJ/nN3x6nU3q
fIe8P0zq/IdProdJnQ+R94sJjXl+xKcXos0vz5fI+8ekzp/49MJNOMDzKT69
KJM6v+LTizXhDM+3yPvLpM6/+PSSTep8jPx5TXg+TM7P+PQsJizh+Rp5/5nw
Nc/f+PTsJnU+R96PJgTw/I5Pz2vCzzzf49PLMeEznv/x6Q0xqfNB8n41qfND
Pr2RJnW+SN6/JnX+yKf3gUmdT5L3s/b6eH7JpzdJ8wfPN8n724RrPP/k05th
UuejfHqzTZjJ81M+vbkm3OT5Knn/m1Ce5698egtN6nyW8MCEWJ7f8umt0L7m
+S7hgzY/PP/l01ttUufDhBcmTOP5MZ/eeu3vx/NlPr1NJnX+zKe32aTOpwlP
TFjA82s+vR0mXOL5NuGLNn6ef/Pp7TOp83HCGxMa8fycT++ISZ2vE/5o883z
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
m3//YBEbVhr7B4vZ8JGxf7C4zb9/sJQNduPn87I2//7BCjb1+V74p+kb+wer
2pBl7B8MsPk/P6htQw9j/2A9G3409g82tMFl7B9sYvPvHwy0/ad/0Kaefwj/
bP79gx1s/v2DnW0YbuwfhA0vjM9fetgQZewfDLb59w+G2NTzHeGfzb9/MFwb
j/H5UJTNv38w1oZixv7BBJt//2CyDU2N/YMmm3//oMWGCL/+QRu+MfYP2m3+
/YNOm3//oNeGZcbnazk2RBv7B4fY1PM54Z/Nv39wpA19jP2DY2z/ef5nU88H
hX829fxQ+GdDMz5fFP7Z0NfYPzjDpvoHhX829fxS+GfDRT7fFP7ZYOPzT+Gf
DeuM/YNLbap/UPin+ZXPV4V/NvzF56/CP82PfD4r/LP59w+ut6G+8fnuJpt6
/iv8s2Emnw8L/2wox+fHwj+bf/9gng0wPn/eZ0NhPp8W/tmwgs+vhX821T8o
/LNhjLF/8LQNtYzPx8/ZcIfPz4V/NtU/KPyzwcnn78I/m3//YL4Ng4zP73+y
qf5B4Z9NPf8X/tlwg+sDwj9tvMb+wQc2//WFRzaEcP1B+GfDbq5PCP9smMv1
C+Gf9v7x6x+0Y4ff+ocdiVwfEf7ZVf+g8M+OQ1xfEf7ZMcTYP1jKrvoHhX92
XOT6jfDPrvoHhX92mLn+I/yz+/cPBtgx0rh+VNuu+geFf3a4uP4k/LOjMten
hH92vGbsHwy042/j+lYrO0Zw/Uv4Z0co18eEf3a1fib8s2OLsX8Q2u8zrr/1
sKMY1+eEf3bc5vqd8M+u+geFf3b//sFwOyYb1wej7PiR64fCPzu2cX1R+GdX
64/CP7t//6DJjpbG9UuLHWe5vin8s6v+QeGfHY25Pir8s2O0sX/Qa0eUcX01
x676B4V/dtU/KPyzI4nrt8I/O/KN/YNj7P9Z/7VjI9eHhX92hHP9WPhnR2Gu
Lwv/tK+N/YMz7P7r07PtyOD6tfDPrvoHhX92tOb6t/DPjuvG/sGldtU/KPyz
4zTX14V/drX+Lvyzow/X54V/dgQa+wfXa/4xru9v0l4/1/+Ff9p8c3+A8E/7
e3P/gPDPjr7G/sE8OyYa9x/ss2M59ycI/+xYyv0Lwj87dnF/g/BP+9rYP3ja
rvoHhX923OT+CeGfHdncXyH8097f3H8h/LP79w/m2zGL+zeEf9r7j/s7hH/a
/HD/h/DPrvoHhX92tDf2Dz7Qvp/7S4R/diRz/4nwz676B4V/dtzi/hXhn+YP
v/7BbMzl/hfhX7bqHxT+Zav+QeGf9v3cXyP8y0assX+wVLbanyP8y0Yd7t8R
/mWjCvf3CP+ysYj7f4R/2f79gwHZaMr9Q8K/bKzm/iLhXzYyuf9I+Jet+geF
f9mYZOwfDMzGU+5vEv5loyH3Pwn/slX/oPAvG+9y/5TwLxuRxv5BZKMV918J
/7JV/6DwLxu/cv+W8C8b73F/l/AvG25j/2B4NgZyf5jwL1v1Dwr/sjGF+8uE
f9lYz/1nwr9sVDX2D5qyVf+g8E/7e3F/m/AvG525/034l636B4V/2f79g95s
bOP+OuFfNsZx/53wLxvduD9P+JeN4ty/J/zLRqqxf3BMNvZy/5/wLxvVuT9Q
+Jet+geFf9l4wP2Fwr9s2LYY+gdnZKNcEdmfKPzLVv2Dwr9sVLog+xuFf9kY
kyr7H4V/2TDdMfQPLs1W/YPCv2zMeFP2Vwr/sjF9n+y/FP5lY1Zj2Z8p/Mv2
7x9cr33N/Z3CP2083P8p/MtW/YPCv2zVPyj8y0a2sX8wT3u/cv+p8C8bl7g/
VfiXrfoHhX/ZAPe3Cv+yUcHYP3g6G8u4P1b4l636B4V/2Qjk/lrhnzYf3H8r
/MvGIGP/YH42inD/rvAvG0e5v1f4l40+3P8r/MtGNPcHC/+y/fsHH2Sr/kHh
Xza6c/+x8E/7e3N/svAvG29x/7LwL/s//YMOfMT9z8I/B2Zyf7Twz6H6B4V/
DtU/KPxzYKSxf7CUA3Hcny380/6d+7eFfw7VPyj8c+A6938L/xwYZewfDHBg
IPePC/8cqn9Q+OdAMPefC/8cGMH96cI/B8Yb+wcDHap/UPjnQD73vwv/HNjP
/fHCPwd6cf+88M/h3z8IB45z/73wz4FS3J8v/HOo/kHhn0P1Dwr/HP79g+Ha
+Hg+QPjnUOcHhH8O1T8o/HOo/kHhnwN1jP2DJofqHxT+OVT/oPDPgV08/yD8
cyCR5yOEfw7//kGvAwt5vkL451D9g8I/h+ofFP45cJnnN4R/DtQz9g+Ocaj+
QeGfA615PkT450BLnh8R/jnU+RLhn8O/f3CGAxd5PkX458AOnl8R/jkwjedb
hH8OPOb5F+GfA6HG/sGlDvzL8zPCPweu8nyN8M+h+geFfw7VPyj8c/j3D653
qP5B4Z9D9Q8K/xzoy/NBwj8HevL8kPDP4d8/mOdQ/YPCP+338XyS8M+BwTy/
JPxz4EeebxL+Ofz7B0870J3no4R/DnzM81PCPwdCeL5K+OdQ/YPCPwemGvsH
8x0ow/Nbwj8HbDzfJfxzqP5B4Z8Ds3g+TPjnwDZj/+ADhzpfJvxzqP5B4Z8D
0TyfJvxzYC3Prwn/HOjk1z/oVP2Dwj8n9vN8nPDPic08Pyf8c+Jnnq8T/jn9
+wdLOVX/oPDPiZdP5Pye8M+pzvcJ/7R/Xyzn/4R/ThQz9g8GOFX/oPDPiVE8
Xyj8c6IPzx8K/5zqfKLwz4nKxv7BQCdieb5R+OfEZzz/KPxzIoXnI4V/TjTg
+UnhnxPfGvsH4VT9g8I/p+ofFP458SnPbwr/nGjE853CPyf+mWzoHwx3qv5B
4Z9T9Q8K/5z4gudLhX9O1T8o/HP69w+atL8vz68K/7S/F8+3Cv+cqMTzr8I/
p+ofFP45McXYP+h1oqBFztcK/5zI5/lb4Z9T9Q8K/5wox/O7wj8nVhv7B8c4
Ecjzv8I/pzofLPxz4hDPDwv/nDjO88XCPyeWGfsHZzhV/6Dwz6nOLwv/nIjn
+WbhnxNf8fyz8E8bn7F/cKlT9Q8K/7S/H89XC/+0+eP5a+GfE+d4Plv450QZ
Y//geu318Hy38M+Jajz/LfxzogjPhwv/nKp/UPjnxF1j/2CeE3/w/Lnwz4kY
nk8X/jnxAc+vC/+ciOb5duGfE2uM/YOnnWjM8/HCP6fqHxT+OdGS5+uFf068
4Pl74Z8TEcb+wXwnhvH8vvDPidk83y/8c2Iyz/8L/5zIZD6A8M/p3z/4wIln
7B8U/jlV/oDwz4mHzCcQ/jlVfoHwz4kSfv2DLriYfyD8c6n+QeGfS/UPCv9c
GMx8BeGfCxnG/sFSLlRiPoPwz4VNzG8Q/rlU/6DwzwUb8x+Efy7//sEAl+of
FP65UIT5EsI/F64Y8ycaulQ+hfDP5d8/GOjCVeZbCP9cGM38C+GfC/8Y8zE6
uFT/oPDP5d8/CBeeMH9D+OeCmfkcwj8XvjDmd4S4VP+g8M/l3z8Y7lL5IMI/
l8oPEf65/pMv4sJ45o8I/1y4a+wfNLlUfonwz4VtzDcR/rkwxZh/YnchnPko
wj+Xf/+g16XyVYR/LpW/Ivxz4boxn2W4C6uZ3yL8c6GTsX9wjEvlvwj/tL8X
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
yP4pn94cL/qzn0qu917VX+XTm6f9PPut5PrvVf1XPr3PvKofS+4HvBjA/iyf
3mIvvjb2Dy71qv4tn94y7XrCfi6f3gov2rG/y6f3uRcn2e8l9w9e//7BL7wY
xH4wuZ/wqv5Bn95XXlxlv5jcX3gRx/4xn946r3//4Hrt/cH+Mp/eBq/qN/Pp
bfKq/jOf3jde1T8o9yOaH4z9g1u8ql9N7k+8eMz+NZ/edm087GeT+xXt78H+
Np/eLi+Sjf2DeV7V/+bT2+PFVPbD+fT2eVV/nE9vv1f1y8n9jXb9MfYPHvaq
fjq53/Gq/jqf3jEvwtlvJ/c/2vWK/Xc+vZNeXDf2D572qv48n94ZzT/s1/Pp
nfOq/j2f3nkvKrKfT+6XvIgy9g9e9uIW+/3k/smr+gd9et97Vf+g3E95VX+g
T+//ujr/KKzPsoyzSQ4dCTM8BxWP6LBwLceSHBbplVFi0okpGRvIaDJjjtz7
/Bw6zG1xGttYQ6WJp5V4ImW2GVucidsqMLSl5KiDGyVtTHGhI8MjG9Qou3uv
69y7v/7JAZ73fb8/nu/n+zz3fX0eG7lfkHw1wjPyD47He2KEFfr78Xjfeu7/
j8c7MnL/IPnruc8fj3d05P5B8tjI/Ynj8Z4auV+RfDbCpfr94/G+Z9dD9A8e
/5Hj930bX8d3PN4PRvh9Hf/xeCdG+A2dH/LcyP2R4/FOjdwvSb4buX9yPN6z
xm+6Psh7z10/4/H+d4RbBv7BhGXx+jsj4d26Psl/yf2Z5L/kfk3yXxr6Bycl
XBvvjxck/FD3D/kvuX+Q/JewUvcf+S/hSPQPTk14fbx/z0l+f5P/kvtHyX8J
j2t+IP8lvDf6B6cnfCDOLy9NKJp/yH8JD2t+Iv8lvEHzF/kv+fxG/kt4RZz/
XpVwt+ZH8l9yfyv5L2G95lfyX8LN0T84O7l/kPyXcLvmb/Jfcr8s+S+5f5b8
l4b+wTl2POPz48LkflvyX3L/IPkv4TE9n8h/aegfnJfcr0v+S+4fJP8lfz6S
/xJu0POT/JdwOvoHkYbP31+y863nM/kv+fOb/Jdwpp7v5L809A8uTO4fJP/Z
eOIH8l9y/yD5Lzl/kP8SFkf/4OKEn438cnFy/yD5Lzn/kP+S+5nJfwkXRv/g
0uT+QfJfwuXiL/JfwgPiM/KfHS/xG/kvOd+R/5L7p8l/Cf8jPiT/JfcPkv+S
8yX5Lzl/kv8S9kc+vTLhXPEr+S8535L/EraJf8l/CU9E/+Ao4UTk55TwEvE1
+c9+r/ib/JfcD07+S0P/4NqEGyPffyDhO+J/8l/CBr0fkP8Stuj9gfyX8MXo
H7wu4f3x/eP6hKf0fkL+S/7+Qv5L7h8k/yX3r5P/kvsHyX/J35/Ifwm/rPcr
8l/CQ3r/Iv+loX9wUxq+v33k/+cLvt+R/5L7B8l/yf305L/k/nryX3L/IPkv
+fsn+S+h6v2U/Gfzgd5fyX8JfxD9g1vtfMf3308l9w+S/5K/P5P/kvsHyX8J
fxX9g9vteRDfz+9M7h8k/yX3D5L/kvsHyX8J10f/4I40XD+4J+GQ1hfIf3b9
aP2B/JfwJa1PkP8SWvQP7rLnV1zf+II977T+Qf5L7h8k/yX3D5L/kq+vkP/s
eRTXX/YkTNH6DPnPrqe4frPX5het75D/Et4S/YMP2Xyj9SHyn/0erR+R/xLW
xvWlfQk3af2J/JeG/sH9ydevyH/2fNX6FvkvYXNc/zqQ8KTWx8h/CRdF/+BB
O/5aXyP/2Xyg9TfyX8KPx/W5Qwl7tH5H/rPnXfQPHk6+/kf+S+4fJP8lXB3X
D48kXKP1RfJf8vVH8p/9Pq1Pkv+S+wfJfwmvieubxxL+Uuuf5D/jo+gfPJ7Q
tX5K/kv4lNZXyX/J/YPkv+Trs+S/hJPRP3jK5j+t75L/EuZo/Zf8l/BvcX34
dPL1Y/JfwvcG/sGMrvVn8l/GZq1Pk/8y3h7XrydmX98m/9n/j/7BSdn9g+S/
7P5B8l/GJXF9fXLG41p/J/9lX58n/2Wc+Tyu35P/Mn54Ntf3yX8Zz8b1/2kZ
12t/gPyX8SfRPzg94++0v0D+y7hf+w/kv4wfxP2JGRn3av+C/JfxxugfnJnx
M9r/IP/Z8dH+CPkvu3+Q/JdxtfZXyH8ZV0b/4OyMvdqfIf9l3KL9G/JfxtrB
/k52/yD5LyNH/+CcjMu1f0T+y7hd+0vkv4wn4/7T3IwbtD9F/stYFf2D8zIO
a3+L/JdxUvtf5L+MC+L+2Pzs+2fkv4zbon8QGX+t/TfyX7b3K+7Pkf/ycP9u
Qfb9PfJfxoXRP7gw+/4g+S9jq/YPyX8Z/xz3Fxdl338k/2XfnyT/Zd+/JP9l
THia+5vkv+z+QfJfxte1P0r+y/hS9A8uzb6/Sv7LWKL9V/JfHu7PLs94ofZv
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
x4Lq/kHyX8XPR//gwoo/Uj4I+a96fgj5r2JlzBdZZOdH+SPkv4rHo39wccUU
5ZeQ/yreonwT8l8d5p8ssX+vfBTynx2v6B9cWnFA+Srkv4pJyl8h/1X3D5L/
Km5Qfgv5r+K+6B9cWXGx8l/IfxW/qHwY8p8d/5gfs6p6vgz5r3r+DPmvYqfy
ach/FZ9Qfg35r+KZ80K+zZqK+5V/Q/6rmB39g6OKBcuYn0P+s8/7LvN1yH8V
110V8ndqxS7l85D/KuZsC/7BtRUTle9D/quA8n/IfxUT7g35QOvs85UfRP6r
WD3wD1Z7f2L+EPnP5i/lE5H/Kp4f84vWV/cPkv8qVkT/4Ibq+Ujkv4qXKT+J
/FeH+UobK7ryl8h/FTn6BzdVHFN+E/nPjv/7me9E/qv4XMx/2lzxaeVDkf8q
tkb/4Bb7/sqXIv9VLFP+FPnP7p+YT3VHxdPKryL/VXw9+ge3VsxV/hX5r+Kd
ysci/1Usj/lZ22x+Vb4W+a8O/YPbK76tfC7yn80nyu8i/1WkmO91V8X1yv8i
/1X8efQP7qh4qfLDyH8VlyhfjPxX8Wcxf2ynzTfKJyP/2feL/sFd9jxUvhn5
z+YT5Z+R/+x4x3y0B+38Kj+N/GfzUfQP7q74rPLXyH/2PFM+G/nPng8xv21v
xbuU70b+q1gc/YMP2flQPhz5z65/5ceR/+x5FfPl9lW8Tvlz5L869A/ur9ii
/Dryn12fyrcj/1V8M+bfHahYo3w88l8d+gcP2vNW+XrkP+MJ5e+R/+z+j/l8
h6r7B8l/FfdG/+Dhio8q/4/8Z/Ot8gHJfxW7Y37gkYp1yhck/1Ucif7Bo/Z8
UT4h+a/ifOUXkv/seMZ8w2M2Pyn/kPxn10f0Dx63+Ur5ieQ/O17KVyT/1WH+
4gn7/spnJP/Z9RX9g6cqtinfkfxXcZbyH8l/Nl/FfMjTFe9QfiT5r3q+JPmv
4ZvKnyT/NRxVPiX5r+GSmF85seFlyrck/zU8Fv2DkxreoXxM8l/z/EzyX8Ps
mK85ueEPlb9J/ms4EP2DUxsuUH4n+a/hXOV7kv8a3hrzP6c17FY+KPmvDf2D
0xtuUr4o+a/hSeWPkv/aMJ90hh0P5ZeS/xp+LPoHZzbMUP4p+a9hp/JRyX8N
vxXzU2c1z1cl/zXPXyX/NZxUPiv5zz5P+a3kv4bpg3zX5v5B8l/D16J/cE5z
/yD5r3m+LPmvuX+Q/NfwH8qnJf+1oX9wXnP/IPmv4Wrl35L/Gr4c83Hn2+9R
fi75rw39g2j4G+Xvkv8aXqh8XvJfc/8g+c/+vfJ9yX8Nvxr9gwsblikfmPzX
sFH5weS/hm/FfOFFDfcof5j81/CS6B9c3FCUX0z+a9infGPyX8PvxPzjJc39
g+S/NvQPLm2YpXxl8l/D9cpfJv813BbzmZc3bFV+M/mvYVL0D65sWKD8Z/Jf
w0TlQ5P/Gl4c86NX2XjKlyb/taF/cHXDa5VPTf6z61/51eQ/my9ivvWa5v5B
8l/DtugfHDX3D5L/mudrk//aMH+7Nvyr8rnJf23oH1zbcIPyvcl/Nt8o/5v8
13BezAdf17BS+eHkP5vPBv7B5vnj5L+GX1E+Ofmv4amYX77ernflm5P/muef
k/+a+wfJf83z08l/Db8d89U3NvcPkv+a57OT/5rnt5P/bD5Uvjv5z+7fmP++
ueEs5cOT/9rQP7il4Vbly5P/Gt6n/HnyX8MLYj79HQ2LlV9P/mtD/+DW5vn3
5L/m/kHyX8M/xPz8bXY/KV+f/GfXe/QPbm+ez0/+a3hY+f3kv4YrY77/XTa/
K/+f/Nfw5ugf3NGwQf4A8p/9XvkFyH9t6B/Y2dxPQP5r7i8g/zVcIb8B+a+5
f5D814Z+hAeb+xPIf/b8iv7B3Q3fl3+B/NfcP0j+a7gx+hv22vmU34H819z/
QP5rOFN+CPKfXS/yR5D/GnZEv8S+hq/IP0H+a7g8+gf3N6yQv4L81/AG+S3I
f/Y8j/6LA839g+S/hrnRP3iwuV+D/Nfcv0H+a+4fJP8193eQ/5r7Pch/DZfK
/0H+a+4HIf/Z9fmnwR9ypOEi+UXIf839I+S/5n4S8l/D/fKXkP+ML6Lf5Fhz
/wn5rw39g8eb+1PIfw3vlV+F/GefF/0rJ+x5Jj8L+a/h7ugfPNXwX/K7kP8a
HpX/hfzX3D9I/mv4vPwx5L+Gs6N/cELHSP4Z8l93/yD5r+Pvo79mYnf/IPmv
Y3r0D07q7h8k/3X3D5L/Op6Jfp3JHVfIv0P+s/Gjf3Bqx2b5e8h/3f0+5L8+
9P9M65gsPxD5r2N99A9O7/iQ/ELkv+7+IfKf/X30E83o7i8i/9n40T84s7v/
iPzX8Yj8SOS/jguiP2lWxxnyK5H/Ot4c/YOzOw7Iz0T+6+5vIv91fGLgd+r4
svxP5L+OO6N/cE53/yD5r2OT/FLkv47bon9qbsc/yU9F/us4P/oH53X3D5L/
uvuvyH8dH4t+rPnd/YPkv45XR/8gOm6Xf4v817FCfi7yX8c3or9rQcfT8nuR
/zpORv/gwo5flx+M/NfdH0b+6zgz+sUWdfePkf86bo7+wcUdTf4y8l/Ho/Kb
kf+6+wfJfx2XyY9G/utYEv2DS7v7B8l/HffKv0b+60M/23K73uRvI/9197uR
/zruk/+N/NfdP0j+66jRH7equ3+Q/NexJ/oHV9u/l5+O/NfxLvnryH996Ldb
090/SP7reHn0D466+/PIf3Z+5Ncj/3W8Mfr3asd35ecj/3V8MPoH13ZMkd+P
/NfdP0j+63h39AOu6+4PHP/c3+v4pPyC/we0pFtz
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 0]], 
            LineBox[CompressedData["
1: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
fogKfFE/ZCzHK/PDqGDva4MncbxyP/S6lKo/ZjrHq/BD78GPmo6ew/G++6HV
xi8TVQs5no4/rpcuHeW3lOPV9EfFdYNfFqs4Xn1/7HzeqV3DdRxP1x8OQ+uV
3NvE8fT90SbWrueuBI5n4I83z3p2lO7meEb+aDTB6kSzfRzP1B9Hdma/ST9U
xK9//NEhucul6BSO198f+vvODPp6guPBH/0iiyfMO8PxnP0xNeyCd90sjufh
j/4figvn5XA8f3+Y9/Cp/+0Sxwv1x6iSMZ8l10T+ab4eOz0+86bIP3886nvw
hV6xyD9/9Glq+VV+l+PF+sN3t0vWngci//xR5tjU7fETkX8avE9nV+i+EPnn
j3jlyI1W5SL//KH+4hwT9p7jxfsDhyW/Rn4S+eeP1Xa3QqZ+E/nnj7s1js2Y
8Uvkn6a/P5rETtIp5vzzx4zMzxZDqhfz6zN/JG1WXfCtXcz5548FnjNMe9Uv
5vzzR9TYeqoajYs5//xRatV2/A1djnfVH6nSvVGrW3C8An+kD0ww9GrN8Ur8
8SDzTeafdhzvoT/yYifZJHbgeGWa1zPOaLOjEccr90ftSQV3S7pxvAp/dM4N
+6vszvG+++Oe5araL3txPJ0AtOo96LvMguPVDIB3ql9BQV+OVz8AYxxHr7ey
4ni6Acj5MsR9ow3H0w/A1qF/X72z43gGASjKeznF2onjGQVgzo2Hf2a4cjzT
AKw7unbcqUEczzwA0y1OPnrtxfH6B2CEV/mAZn4cDwEoafJ4rXkgx3MOgF3h
gDduIRzPIwDVJ62yDQ7neP4BaPTug0F4FMcLDcDyyevvB0k5nkTzei4re7gp
OJ4qAK4rx83sreZ4wwIQWc2jqOkQjhcbgHGHLQe8GsbxJgUgovTKprSRHG9m
AF5K19SYPobjzQ9A0rQakwaM43hxAfj6dPHXNxM4XnwA+uUsn71+MsfbEACT
85NaD5jG8RIC0OH73vM3Z3C8xACYfp06VTZb5F8AUrPcXV7OFfkXgJ35qs7q
BSL/AmDTyKBl6SKRfwFwupNp4Bon8i8AITrLsX+ZyL8AbFhTOrHGSpF/ARgf
m305KF7kXwAqTi7vu22NyL8AjP08OvP+OpF/AVhgsFHVfKPIvwDs29HbxGGz
yL8AfPeWNorZKvIvAANiXJrNTRD5F4jRa6tYrdsh8i8Qjd/vmbt9l8i/QLT5
7PlxR6LIv0BEyJ9M35Qk8i8QR5rs7rtkn8i/QPzuGd9izAGRf4GI6WVaw/uQ
yL9AvG771afzEZF/gVDHRRz4kCzyLxBBRSW9j6WI/AuEVcG+VyOPifwLxOrp
OZcMT4j8C0T/VolFl9NE/gWi1vLuTYeeEvkXiJ/d+k2rekbkXyBMNm1pufKs
yL9A+H3u9UwvQ+RfIKocynwSnynyLxA7zDo2r31O5F8gZqqrT449L/IvENv2
mOkWZYv8C8THctWjnrki/wJxbVX4s5kXRP4FYkTAufaXLor8C0RDT7eVtS+L
/AvE+j5tLGyviPwLxI2eCwuGXRX5p+m3k+n7lXki/wLRfdc450PXRP4FYoxn
1eKs6yL/ArFrhWLH1XyRf5r+tDbee+2GyL9AmH29+/rCTZF/gTgb92dIWoHI
v0AYJjTpknBL5F8gWvmtMJhRKPIvEEYGH4IDi0T+afCe7M7rUCzyLxBJ+a1n
Py8W+RcIvUmnx+28LfIvCC8vvkgKKhH5F4TwWtXaVLkj8i8IfsWK6zvuiPwL
gkkfxXmruyL/gmAx1e/blbsi/4IwOGLqCP9SkX9B0Hnazehmqci/ILydvLW9
6z2Rf0Go/aRl+LF7Iv+CENGv4Lb+fZF/QXjyvuqGcfdF/gUhofT2pov3Rf4F
YXznWY+aPhD5F4TNXh2HBDwQ+RcEheVjy6UPRP4FYWrjUsezD0T+aeofZbzu
6QORf0Ews3lsWu2hyL8gvDqrW1P/oci/IJxYcrmD0UORf0F4sKXBHOOHIv+C
YH/nvPDvxL8geA+pJvw88S8I1UNyBHziXxDsav1Z+1SsLyEIzS23/KsvMQi1
vi0V6if+BSE28/jgAPH1pgShQcj3h03F13syCNaPewv9If4FoWap1Xpt/3KD
MKbNi2J9sX9Xg9D3Vs2wY+L7UaDhw1JZO1fx/SgJwqweWZ3Y+0f8C0LapyfD
tO9vWRCOTVrwhb3/xL8gdEuWZzF+EP+CUPWlSR7jD/EvCHUvL9Nn/CL+BaMw
uE/iP/4Fo/z9hTGMn8S/YNTwfjr9uchn3WC8m9/lcgeRz/rB8KvTLYDxn/gX
jKAdU9poPx9GwTCffLAD+/wQ/4Jxo5mrin2+iH/BMPTPL2OfP+JfMBqPyd3J
Pp/Ev2DMrJe4Wfv5ddZ8rVeWzz7fxL9grHj+zZZ9/ol/wTA283jJ9IH4FwwL
G7urTD+If8FwNRltrtUXVTDki0l/iH/BGLGb9In4F4wz30i/iH/BaDBYLegb
8S8YRla9K+lfMIp0awj6SPwLRrNvpJ/Ev2A4vc0Q9JX4F4zl9qS/xL9gRH7Z
/E+fE4PxJ76voN/Ev2A8rk36TvwLRvGu3YL+E/+C8aEV/X0g/gVDd3alvx+5
mn7k/jZjf1+If8EY/W7Mfvb3h/gXjPk9qgp/n4h/wfBtVr3I65DIv2DUmRSn
p/37VhaMUR/W92F//4h/wZD0uzWN/X0k/gXDMdpL+PtJ/NPgj08S/r4S/0IQ
M6Bqpb+/Ifho7Cr8fSb+heBGb5nw95v4F4KURHPh7zvxLwS/nTcJf/+JfyFI
tY39d31gFIKAbiuF6wfiXwii6+QK1xfEvxD4+d8Xrj+IfyHQd14qXJ8Q/0JQ
YJbx7/rFOQSjJ7UTrm+IfyGI9VIK1z/EvxAc9XcTro+IfyFw2TpFuH4i/oXA
9HjSv+srVQg+r50oXH8R/0KQf2SZcH1G/AtBnZeLhOs34l8IDDdVF67viH8h
uL9hdaXrP00/e9L1IfEvBPvb0fUj8S8EHU68LmDXl8S/ELQc8Xsau/4k/oVg
0KpiE+31aaKmn35f7rLrV+JfCDJvH/obFiXyLwTP/fOs2fUv8U/T78HqV+z6
mPin+Xpu1dXa6+fcEPwpqtqPXV8T/0Lg/JGuv4l/IYhct064Pif+hWDo/UfC
9TvxLwTPqr3+d31fFoJvV3Res+t/4l8ItsweJtwfEP9CkPNrjHD/QPwLwayN
AcL9BfEvFH+cPSvdf4Ti4uTVwv0J8S+UzZMK9y/Ev1AkGRYJ9zfEv1As8O0m
3P8Q/0LxY+7Uf/dHRqHoXPuDcP9E/AvFmDM7hfsr4l8oWugfFO6/iH+h8Opu
KNyfEf9Cobu90b/7N+dQVDsxR7i/I/6Fok51mXD/R/wLBaw/CPeHxL9QvF3c
QLh/JP6FoteBI//uL1WhaPjnunD/SfwLxeTZEcL9KfFP8/MP7YX7V+Kf5vfH
DBXub4l/obBtdKrS/W8orkxsKNwfE/80X390EO6fiX+huDrJTLi/Jv6FwurU
XuH+m/gXihpNp/y7P08MxbdVI4X7d+Kf5vVV9xTu74l/oXB9eku4/yf+haLr
0GzhfID4FwqzuFv/zg9yNb//60nhfIH4Fwrrdp2F8wfiXygKe50TzieIf6E4
0Km/cH5B/AvFwdTu/843ykKxSW4rnH8Q/zTv5/Q6wvkI8S8Ubm07CucnxL9Q
NOrWXjhfIf6FoU5YXKXzlzA8t/osnM8Q/8LQrNdD4fyG+BcGu2c3a7PzHeJf
GJL87p1h5z/EvzCs8332I1g8HzIKQ6MVkZns/Ij4F4av0zcK50vEvzDsOHVK
OH8i/oXB+PYa4XyK+BeGvbYr/51fOYch27nhKHa+RfwLQ7nZEOH8i/gXhqh+
f4TzMeKfBm9++xrs/Iz4p6nPtn0r7fmaKgxT57gL52/EvzBkjXglnM8R/8Lg
0N7xHju/I/6F4fHx9cL5HvEvDE2iOh/9d/4XhgcuHbuz80HiXxgUqReE80Pi
XxhOf3Low84XiX9hGDA8Rzh/JP6FodXGcf/OJxPDENNksnB+SfwLw9EFn4Tz
TeJfGEJvVm3Izj+Jf2GILU8XzkeJf2Ew+W4zTnt+mhuGBS5rhPNV4l8YXgTl
C+evxL8wzCv5IZzPEv809Z9s7cXOb4l/YVC17lOoPd8tC4Of3G0FO/8l/oUh
ua/vVHY+TPzT9G++01p2fkz80+AvaHWXnS8T/8Ix71xmpfPncDRt2rmEnU8T
/8IRt6dXHDu/Jv6F437jS8L5NvEvHG2s8oXzb+JfOI5P6OSjPR83CsfPmQlD
2Pk58S8cXtNbr2Pn68S/cHyuPfgmO38n/oVjda9QfXY+T/wLx44ZaTHa83vn
cMzX8TnLzveJf+Fws38mnP8T/8IxNnLAYPZ8gPgXjuxvDU6x5wfEv3AEeLWu
pn2+oAqHgVkrO/b8gfinqa9Jxij2fIL4F47iKqeXsecXxD9NvWdPr2PPN4h/
4XA6NHThv+cf4ah4MzqSPR8h/oVjnM8YXfb8hPgXjknqBnvY8xXiXzhuLXjY
jD1/If6FI+r6vFDt85nEcOibrB7Nnt8Q/zT9idgWyp7vEP/C0UunX0P2/If4
F463q14vYc+HiH+a3zfR8br2+VFuOBRVLt9iz5eIf5rXO1pnA3v+RPwLx6ga
g1uy51PEP02/f8zyZs+viH/hOBOfO0D7fKssHE0MDxex51/Ev3BcrZHcnj0f
I/6FY2uGTVP2/Iz4F45P5Rf2sedrxL8ItA04+ezf87cIuLyamsGezxH/IhB1
Z5IFe35H/IvQ3J83s2PP94h/EcDBQ4/Y8z/iXwSaW+xpqn0+aBSB4qFh+ez5
IfEvAmY/DFuw54vEvwgElQU8Yc8fiX8RyNvuYsaeTxL/ImDTyOO39vmlcwQe
LE52YM83iX8RSPqYrfOgK8fzj8C7g/m92PNR4l8E4o61yWfPT4l/ETi4+e0d
7fNVVQSmrF/kyZ6/Ev8iYLGoRyf2fJb4F4FhVduEs+e3xL8IPPRf9pY93yX+
ReDTyow7/57/RmDUtuet2fNh4l8EOlhaH2LPj4l/EWhU/n4pe75M/IuA2rnv
Cfb8mfgXgZdpNkba59OJEXieYlHMnl8T/yJQ9aBjLnu+TfzT1Ndt/Tv2/Jv4
F4HbuUHe7Pk48S8C150SH2mfn+dGYGf8vh3s+TrxLwLut+YtY8/fiX8RaD08
ZDt7Pk/80/SjkV0xe35P/IvA8swIU+3z/TLN63uZu5k9/yf+RaBb+IZObD6A
+Kd5v6PLM9j8APEvAnMyioaw+QLiXyTO3xhu+G/+IBLZc3IesPkE4l8ktivf
b9fOL+hGouPxv3I230D8i8Td4dU6sPkH4l8knrrXvc3mI4h/kYi7ZzibzU8Q
/yJRtCqojXa+wjwSeVkpO9j8BfEvEp5pDk3YfAbxLxJLchop2PwG8S8SV1wN
1rH5DuJfJHBmaqJ2/sM/EkHnTZax+RDiXyQe9DF3Z/MjxL9InOq9vojNlxD/
ImHbIbonmz8h/kXC8PoSH+18SmwkDgw37MPmV4h/kTDf36GUzbcQ/yJx8PRK
Gzb/QvyLxDP1qFA2H0P8i4R+m8yu2vmZeM3Pf56VxOZriH+RGJl//BabvyH+
RWJGaPReNp9D/IvELP2pHdj8DvEvEhfmNbD+N98TCcdGzT6y+R/iXyT0eq8A
mw8i/mnw587uyOaHiH+R6J77ei2bLyL+afA+XF2rnT8qiESxe5f2bD6J+BcJ
75G/TNj8EvFP8/Nqr5Nsvon4F4ldx9qfZ/NPxD9N/wbHOmnnoyo0r8fU05rN
TxH/IlERnLyTzVcR/6KwpOruCWz+ivgXBU/dHqlsPov4F4VFfv6B2vkt3Sik
TG0TzOa7iH9RuOC36hib/yL+RSHnYPowNh9G/ItC5IoDE9n8GPEvCrv7xxRq
58vMo7Cn79/pbP6M+BeFTZNnjmbzacS/KCSrfyWx+TXiXxRGl881ZPNtxL8o
HFjVvVg7/+Yfherx9XLZfBzxLwqDX1m+YvNzxD9NvcNybNl8HfEvChvv3DrH
5u+If1Go92nmSO18Xqzm6+Uv7Nj8HvEvCkv3m/Zh833EvygELhzlyub/iH9R
aH+yZCybDyT+ReGE1YoT2vnB+Cj8XJpen80XEv80/35+5Sg2f0j8i8K6zf0f
sPlE4l8Uhm56EcDmF4l/URo+38r7N98YhXlDLJzZ/CPxLwp97zieYvORxL8o
qO85GLH5SeJfFHq2iZ3P5iuJf1GwW9qiWDt/WRCFc/oVXdl8JvEvCh3KL41j
85vEvyjYjPNbyuY7iX9RePi1dwyb/yT+ReGai/5f7XxoRRTW/j7lzuZHiX9R
eJtY6MDmS4l/0TD+3eMJmz8l/kWjt94aQzafSvyLht+m+1+186u60bj161UU
m28l/kVjSNIObzb/SvyLxr6BX8+x+VjiXzQW5zxJZvOzxL9oBLwc1lw7X2se
jZHG28vY/C3xLxq/W25ox+ZziX/R6LR0wnE2v0v8i4b+o8F72Hwv8S8atbol
vdLO//pHo/2IcZPYfDDxLxrDX7b3ZPPDxL9oXBhYJZrNFxP/ojHs2PQkNn9M
/IvG3al1Omrnk2OjMfFBu4tsfpn4F42q811Xsvlm4l805KltJrL5Z+JfNEYs
sBnP5qOJf9GItoiap52fjo9GhGv/bWy+mvgXjRYvN55l89fEv2jsbRZxh81n
E/+i4fNU/o7NbxP/NP2/uufLv/nuaGQ/NnnF5r+Jf9EwaV0tm82HE/+icXKl
93Q2P078i8baq/a6bL6c+BeNeX/bTtPOnxdEI8G/93E2n078i8Yhk0dpbH6d
+BeN+sM2z2Dz7cS/aHzMKqvO5t+Jf9Fo9MrfQTsfX6F5f38utGTz88S/aCw8
ZF3E5uuJfxJs3dPXgM3fC3SoJsG2rICGbD6f+CjBldBZm9j8vvDzdSTI23D2
HJvvJ35K8CG7zQw2/y/ANZag97ycK2w/QMDTleB7v4872f6AgKcngYvdh6rF
z/j+gb4E17w7P2X7BwJeGwm6pNVwYPsJxGcJYtLbtWb7CwJeRwkOv2wSw/Yb
iN8SpPqv7cz2HwS8bhIM/D3Rm+1HEN8leNduyyO2PyHg9ZKg1oxfxWy/QsAz
l6D2+T092P6FgNdHgqe5uY/YfgZ9HiS4/2H9G7a/IeBZS/B+yTgvtt9Bnw8J
gvWu6mxy5XgOEmRv71SlXVeO5yzByC4GHmx/RMBzk+De44n32X4JfX4k2Li3
6jG2fyLg+UhwyWX/VbafIuD5S/CtZHIHtr8i4AVJ4NZtdQrbb6HPlwTta1tO
Y/svAl6EBBcOH5/K9mPo7dX0q+2yw2x/RsCTS1A62kOX7dfQ54/1f9tutn8j
4A3WvD5rXwXbz6HPowS3qrp7sv0dAW+UBD0aLY9i+z0CXqzm/b7tsJbt/wh4
4yVoNHDfR7YfRJ9XCQzLO4xh+0MC3lQJNuV012X7RfT5laCB/ZBbbP9IwJsj
wbzidalsP4k+zxLMiF57lO0vCXiLNP2dqcpj+030+ZbgSzPj6mz/ScBbIcHY
VZ2C2H6UgBeveX3jT59j+1MC3lrN7zs83o3tV9HnX/P6alR5xfavBLzNEujF
dd3F9rNIDzR8qPlgAtvfEvB2SnAsaoCS7XeRPmjerzrjhrH9LwFvrwQrpr9d
yvbDSC8kmJ9gcpntjwl4RyRo0bvYkO2XCXgpEkx2OreG7Z8JeMclWHDoqRHb
TyM9kcB7bGQR218T8M5o+u8cu5vtt5G+SDD77eo1bP9NwDsvQdrF0CS2H0d6
I8FQy9kP2P6cgHdJ8/1Nvlmz/TrSHwkselw/x/bvBLx8CTwuOMWy/TwBr0CC
v7+yfdj+noBXJEFzj0eRbL+P9EkCSZ3wLWz/T8ArleDy3XZN2X4g6ZWGr/2c
M9j+oID3RILF91oksf1C0i8JGvrVzmf7hwLeSwn+SE8NYPuJpGcShG3++5rt
Lwp47yVwLbj9nO03CngVEjhuGd+b7T8KeF8kuFvQP5/tR5LeafrVIjWH7U8K
eL80/fFKasH2K0n/pFgYoreW7V+S/kmRJK91me1nkv5JUa4qLmT7m6R/Ukw8
m5DN9jtJ/zT/PvXZdrb/SfonxZ8FKyax/VDSPymGrfsSzPZHSf+k+OVV7Mb2
S0n/pBjrERXB9k9J/6SoPrDTFrafSvonRcO3PVux/VXSP83Pq74+YvutpH9S
JPyWVItwOcP1T4rDo7KXsv1Y0j8p3KqUr2D7s6R/Upgtbd6W7deS/kkRcLDC
nu3fkv5JYVFwSJft55L+SfEgpiyB7e+S/kmx9l3yL7bfS/onRZfOO/qz/V/S
Pym+dTo3hO0Hk/5J0XXZ+p1sf5j0T4onSV2/sf1i0j8pasdVTGX7x6R/Uhxz
/+7M9pNJ/6RopX9qKNtfJv2TotHEvlVuLD7B9U/zfig+t2X7z6R/UpyY8/M2
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
f16BGmPbJDF/fNI/zev5tbI7888n/VOgg8cKM+avT/qnQOcruycx/33SPwUK
A8dc0frzFyjguSOpnPn3k/4pkL+70U7m70/6p8CZP3NSmf8/6Z9GHyK/l7F8
ANI/BXZWTNEJFPMDnijgXWp2geULkP4pUGdlRJXZVjyP4KXm8xASNo7lE5D+
KTD05J6XLL+A9E9T79uHnbT5BhWa1xd+/g3LPyD9U2BmzZ71WD4C6Z8CsgZd
HVl+AumfAvsMbkezfAXSPyXq/lneWZu/UE0Jn/KLESyfgfRPiSr9jPJYfgPp
nxI7ksfbsHwH0j8l3EyPT2T5D6R/Siz63dBRmw+hq0St6XdjWH4E6Z8Sdxfv
OczyJUj/lPhas/cjlj9B+qfEvagRuSyfgvRPiTt153fV5ld0VKKl7p18lm9B
+qfEnvjqi1j+BemfEk9xpxXLxyD9U+Lt66E+LD+D9E+JdrVrf/qXr6GEQU/r
fJa/QfqnxN/EosMsn4P0T4nwsueRLL+D9E+JFq2yd7N8D9I/peb6pLq/Nv/D
QQmH04vMWD4I6Z8Sm09OacDyQ0j/NP0u8khh+SKkf0r8iDv1juWPkP4p0a3r
9eXafBJ/JYbaPZGw/BLSPyUuOmzrxfJNSP+UCCn/dZXln5D+KRFz2bW6/n6O
J1HCOL3jbpafQvqnxJXxc6ezfBXSPyXU79KiWf4K6Z8S216pW7J8FtI/JWyG
r5rI8ltI/5Ro1XeND8t3If1TwsvKeDTLfyH9U6Ks+ZD9LB+G9E+JXrPy8ll+
DOmfEr4Xe6SwfBnSPyU+9LvSieXPkP4pMXmV4zeWT0P6p+n32B06UWJ+zSIl
el70b8LybUj/lGjSo9cfln9D+qfEXOmkTSwfh/RPCeuE0rMsP4f0T4mk+mMH
/MvX0fCx4cUylr9D+qdEytH89Syfh/RP8/5V+2rE8ntI/5TYq9SLYfk+pH+a
+sqnmWvzf/YqoXPwg4TlA5H+KaHf9MBFlh9E+qfELaNoB5YvRPqnBJ5Y7mP5
Q6R/ms9DbGGRNp/opBLnp0ftZPlFpH9KjFWMeMXyjUj/lDgx3WAByz8i/VOi
Q3ijQJaPRPqnxKuPgb20+UmXlFDdX/GZ5SuR/mnw5j2YxfKXSP+UiPZ4dpTl
M5H+KTHuzGUVy28i/VNCstdmqjbfqUTzfvpNuMnyn0j/lGg6w9yN5UOR/ml+
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
/UH6r9CJ9gfpv0IvSv3B9bH/9gfpv0Kn2x+k/wp9y/4g/VfoJfYH6b/4/dQf
3BDX0/4g/Rf9Yn+Q/iuU2R+k/wqttT9I/xU6IvUHNxZ6iv1B+q9Q3/4g/RfX
w/4g/VfoaPuD9F+hJvUHNxV6jv1B+q/Q2fYH6b+i8wfpv0LvsD9I/8XrS/3B
zYWOtT9I/8X3s/1B+q/QVfYH6b94PuwP0n+F3jrlD5aatT9I/5Xazv4g/Vfq
3fYH6b9S/2t/kP4r9YTUH5xbdv4g/Vd2/iD9V2qJ/UH6r9SWW+MP0n+lPpb6
g/Pi1/YH6b9Sy+0P0n+lFtsfpP9KnWB/kP4r9a3UH5xf6lD7g/RfqR3tD9J/
cZ79Qfov3q/9Qfqv1F9Sf3BBqVfYH6T/Sv3K/iD9V6q2P0j/lZ0/SP+V0/7g
zqWW2h+k/0o91f4g/VfqvfYH6b9S+9sfpP9K/Tr1BxeWquwP0n9l5w/Sf6WO
sj9I/8X1tT9I/8W/l/qDi+J62h+k/0ptYX+Q/is7f5D+K7XS/iD9V+r21B9U
qQX2B+m/UgfYH6T/Sg3sD9J/pS60P0j/ldop9QcXl9rW/iD9V+pn9gfpv1K7
2x+k/8rOH6T/4vWn/uCSUgfaH6T/St1sf5D+K/Uh+4P0X6kN9gfpv7ieqT94
dKnr7A/Sf6VOtj9I/5VaZH+Q/is1tD9I/5W6L/UHl5Z6yP4g/Vdqxv4g/Vfq
KfYH6b9Sj7Y/SP+V+s/UH5wp9VP7g/RfqTvsD9J/pebZH6T/4vXZH6T/St2W
+oN5qa/YH6T/Sp1vf5D+K3WY/UH6r9TT7A/Sf6VekPqDy0p92v4g/Rfvz/4g
/Vd2/iD9V+pf7A/Sf6V6qT+4PO5n+4P0X6kr7Q/Sf6U+Yn+Q/iv1TPuD9F+p
dak/uKLUz+0P0n+lPmx/kP4rdan9Qfqv1A/sD9J/pY5I/cHZuF72B+m/UjfZ
H6T/4nmxP0j/lTrI/iD9F59n6g+eW+oL9gfpv9gv+4P0X6nn2B+k/+L62B+k
/+L3U39wZalV9gfpv9g/+4P0X1wv+4P0X6ld7Q/Sf6WK1B9cVeq/7Q/Sf6VO
tT9I/5WdP0j/lTrO/iD9F3uZ+oOr4/60P0j/ldrD/iD9V+o79gfpv1Lftz9I
/5V6beoPrik7f5D+K3WJ/UH6r9Sz7A/Sf6VOsz9I/8X1Sf3BtfH52h+k/2KP
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
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1: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
1h8wOju+rIjwSrvjz7ZtR3/cKeL19YBbZSvXoflFvL4emLc4Y+uFfUW8vh5I
yaxYp+WaIl5fDxStf5odOYPjaXrA9keNV/MHc7z4HtjXvuKV7UEcb00PZP9x
Sj3Yn+Ol98D+Kl3T0k05XmEP5Dt/aZpcV6qvB3pcneVY8cMlXl9PJE9vXiH5
5CVeX09MXDriXrv/LvH6emLQuD9e89SXeH09cS3oT86l3pd4fT3hbSRP/l6N
48X3RItlFwbVKLnI6+uJvPdb5v7ceZHX1xO2J77ork68yOvrCRP3pVOXe17k
9fVE2uWH1r1aXOT1WaLga8PKOa8v8PosoatqEGCec4HzxxLtvFovm7H4Aq/P
ElvmbTbPjb7A67OEPDB05dOuF3h9lkhZlG1d9quQ12cJ1+sf4l9cKCS8dEsk
G2XfPbuhkNdniTMPZmQtH1rI67OEo43vTKf+hby+Xnj9+tyWh4Ycr2kv3Hbu
O3fgnQJeXy+c3zJr9Z3UAl5fLwxtbebQb1IBr68XMmwc3s72KOD19cKgmTOr
5jQt4PX1QsXYPv978Pw8r68X4g87tP546Dyvrxd2n29a9n7OeV5fLzi8PHv1
bvB5Xp8VvP3fmh9pf57XZ4UaNbIUM8vO8fqsYL/l9R3bk+d4fVZYgusVSped
4/VZoZ0u2Hpa7DlenxWefbv2qLrFOV6fFeSmfgNn/jzL67OCjc6127vzZ3l9
Vqgw59xqrzVneX1WuLhuaI312rO8vt6o0DHwyV2rs7y+3rjWrM2i+pU5nmVv
tP9eWdn3yhleX29c+bz/fHDSGV5fb8xuJGuvHnaG19cbc2ILinS2Z3h9vXG0
mmV3ec0zvL7eWLwnLNnnZj6vrzc2rZg2p0dKPq+vN9zuD+5Xc3Q+r88a/V/K
W5XY5/P6rLF/VodlG+vm8/qs8d7328uIu6d5fcLjxhsX1Uk9zeuzRkLLgMtH
xp/m9Vlj2paiBtEup3l91tjb1f/AV+PTvD5rOFWZW3nxwzxenzXStyWpm+3L
4/VZo2Mf126bJ+fx+vqgYb2NWW088nh9fTC9p4NsfeM8Xl8fVLzuPr7e01O8
vj748NUxYvqBU7y+PrB6bx39etopXl8fdDXYdiPA+xSvrw9WfJne6mCzU7y+
PmhfbLvA+PlJXl8fpCuyhgw7eJLX1wdxn4Kb5884yeuzQf0aD1808zvJ67PB
2D/JXYa2PMnrs0HHG2GWOS9P8PpssOplr8Bah0/w+mwgP3DvTujsE7w+Gzxe
OKrNloATvD4bfJg9feSbVid4fTbY1L1eS+s3ubw+G8wbuS4uPiuX12cDZXSd
vHNzc3l9fbG4QWGUcXAur68vfmzdtTC6bS6vry8u3nvWz//+cV5fX/RuW5D7
YsJxXl9f5G+TD5jd4Divry8q9vzk2X7fMV5fX+QdzJx2xv0Yr68v1q/ZHDX8
SQ6vry+WRXqvbTEth9cn4Hm3zbrUNIfX1w//u/jGe35GNq+vH36OUZW6+2bz
+vrhfZu2xvVfHuX19YOP6S7Fo1lHeX39kK3TKo62Osrr64dZq3Zv3JCVxevr
h+uRGcnzg7N4ff1gtHrz12nvj/D6hPffOc1s+sIjvL5+CDnskLPY9AivzxaN
Kpztm3LiMK/PFn17XO9YEHWY12eL7ydb1vj15RCvzxZrlTYK24RDvD5bJEfs
PTjf4hCvzxZGP1/Penouk9dni48m/n5+6kxeny26r2676rxBJq/PFrbHV94I
Wn+Q12eLiWUFS95ZH+T19Uea2dU+64ozeH39URif6hc2PIPX1x8Nbvb361gr
g9fXHy2Ga9Kqb0/n9fXH3lnvn/90SOf19cfNSqtHVL5/gNfXH8u71MxpNekA
r68/slxLHXwbH+D19cecmGNjEtL38/r6o/7/Gp997buf1zcAq/OHpEa+TuP1
DUDWf12WPZiXxusbgNelh59O6pDG6xuABen3e0XN2sfrG4DLr5yt3+Xs5fUJ
eBX6pu7/sofXNwDVDjpqt/bYw+sbgIHp9+zODt7N6xuA3NjJ1UxSUnl9A3Bz
/ewlKQ928frsMDo5aoui+S5enx0uX4+pHxiyk9dnh0kHS7eNX76D12eHVune
plcLt/P67FDV8m24pvp2Xp8dHk7pUKW7Uwqvzw5ts4Jf9ojfxuuzw7jvz84N
yd7K67PD1wE+iodft/D67DBjQZURy6y28PqAzt9X7Zk4KpmebwhY399YnLRv
M68XyH2Ut7rSmyR6vSnQyPzs/i2dk/j5DdC99bfkSpc32nE49Ilf59/fewP/
PIBNrZkXPp1bR3jhQNUPZSMsXNfyzwfYLx++4nneasKLA9a/Ozyrg+Mq/nmF
10eWJJaeWEl4iwBN1Q4Nutr/xz8/sHmrndP33BWElyK8f8s2g33tl/PzJcBi
Ya8VkbOWEl4uIDNJt+o6dxHvD6A8dr9no4XzCa8EWLBo1/+aLJvD+wWE5Ny+
Z504k/DKgHv2LX3GbIjn/bNHVNUa3bd7TuL9s0fioD6NdsWM4f2zx6jww0ff
PRvG+2eP7pssjTo3VvL+2aOo3VP77ubevH/2SItKfzj7g/1x6p894keX3Gpo
JztO/bPH+uPKGdV/DT5O/ROev+32xCa3445T/+yRtNNqsOPBCcepf/Z4HzT0
vcHiaYS3yB62ab8nmu6fQXhrhPqOeGUtXzub8FLs8eiNoU3ujHmEl26PTpPT
DdIGLiS8XHvMUvRsE+u7hPAKhccXj7v5dM0ywisR/u4aVTqh1grCK7VH7oO7
BYMmJxBemT16HcvZcOj1f4Rn4ICJXx7GxUYlEp6hA2z3+Q2UF6wivKYOiDjT
eX22zRrCM3XAkp0pXUdsX0t4lg7o26GWw6QG6wkPDvDruMvgbvwG3j8HPFh/
O+G/1xt5/xxQVn/yf0Vdknj/HHD4p9lXg4dJvH8OCCxaX+f2ys28fw54K/s4
KsYjmffPAecmHDux4Hcy758DKtlVXxN7YAvvnwPWrnRdfUe9lffPAfMXKmQV
mm7j/XPA8cO7Ei4UbOP9c8DAlFvXMDWF988BFW2NCyO6b+f9c8C31iUtmj/a
zvvngFnt64+YnrCD988RyakVhy922sn754hLDTzzBnzayfvniAmmT5uv3LaL
988R08e3abcsOPU46Y/w+IOt87pV2c3754hP99U/R2Xs5v1zxPC6u7pFKPfw
/jlidkKla0/q7eX9c8Tp+T5J9XP3El6cI16M2+vyeOg+3j9HHHjkbJdaO433
zxEGK8/+sVKl8f45Ijch6MTyrDTeP0fUzP0lO2a0n/DSHdE9ZEz2Uc1+3j9H
eO2pfmB+9n7eP0f8/ripdaf6B3j/HLHjdfazRO0B3j9H3Eqf8Oxa9gHCK3PE
54lzDZ7WS+f9c0KQR9cGeZp03j8n+OW7VI47ms7754Tu7x3SP9TN4P1zQvvX
bStDlcH754RheeNvRR/O4P1zQmIPTTNPw4O8f05YK1+3o5rsIO+fE84eCx6U
kH6Q988Jy7JinN9WzeT9c8KoVTVbN4nI5P1zgm0v64dGezJ5/5zQ4JbHiJt/
Mnn/nOBV3fLgsIBDvH9OmOWsXF289RDvn1D/m+KK1b4c4v1zQlqlCvequx/m
/XNCWLUXxiVrD/P+OWFJXq2l414f5v0T6jcb2PdJ/yO8f064bhJfodXSI7x/
zpgc5V3U8cER3j9n7HXySPjdPYv3zxk4Oth6y/Qs3j9nDKvcZlfDK1m8f844
uSGgJLjtUd4/Z2w1kacrRx3l/XPGsobtO9qdPMr754zCl8/bPa+XzfvnjOq5
I9fEyLN5/5xRP/h/45LTsnn/nHHxVZO09D/ZvH/O+GjxrecKnxzeP2cENG71
sf+GHN4/Z3y/MfN+5qsc3j+hvrwlb37aHOP9c4YpGtQ1mneM988ZM7YHWb+/
doz3zxnH8CN8Q7vjvH/OyO3ScnDjkcd5/4TnB/SJjTl2nPfPBZO6rml4pEou
758LTl/sojAzz+X9c4F9ra5G8QG5vH8umNJjR7Oc8bm8fy7oGHFr8oONubx/
Lsh42qPnyzyO5+WCpd+9e996yfHCXaCr9HtWmtEJ3j8X7Otq32xo7xO8fy5Y
99L5Y92oE7x/LpAPG1hjzfQTvH8uCLC0jqq+/QTvnwv2T9Q9iy7keCkuuH/p
8fY1HzheugtmL8pee7TRSd4/4fNE9cw51e8k759Q/8k0wwOyk7x/LsjfeHHO
nNknef9csCrT28x+10nePxfc7dPs48OLHM/AFVfcPO7ryjieoSsazWn57lrj
U7x/rqiW+LOVme0p3j9XrN47foRCdor3zxVbW3venz7rFO+fK6Y+DRo8d8cp
3j9XzDHbaBxXyPHCXdH1dvANp/ccT+OKVX0uH/xpnMf754oBMQv3rrXO4/1z
Rf/r7U+YRObx/rliQWflm3lT83j/XPE9rrtlyeY83j9X3H+9dkXd0xwv3RVp
s67WMn/O8XJdcWtkz00WtU7z/rnC7Iy5d2OL07x/rmhdPaZRqd9p3j9XBByb
8WNt3GneP1c0NZrwyyrxNO+fGz6HouWhwxzP0A1jsr9GmtzmeE3dsOfMo6zB
vzieqRsqV4ztt6lVPu+fG/wXvrl32D6f988NzTK7bj+szOf9c0NR8t2VG2fn
8/65QXanZPeg7fm8f26o+qnF2xbnOF6cG162Ox558CXHixfqe/zpi6XhGd4/
NzisMD69uusZ3j83NK879/RjnzO8f24IiL79o8GIM7x/bujpdGiQ+fIzvH9u
qPfxToPOBzheoRsObDD7VbuY45W4wbHLStObZRyv1A3ml3r8N6/BWd4/N1xL
7+Leyuos7587zmw867Y++CzvnzsKErWJf8ac5f1zR4tF8VbuiWd5/9xR49cW
swmZHM/SHcnJE8cuvc7x4A6TRqdbLfrM8bzcYT450mx4o3O8f+4osui6qk/v
c7x/7ug6EEOfB5/j/XPHwo/7900dc473zx0GBRmKH/+d4/1zx5KbyxfEZHC8
Ne6QrdzeZUcxx0txR9ucgR43P3K8dHd0+SV79bbeed4/dwgn/8avu5/n/XNH
nN/4/Eu+53n/3BG/rW7NtcPO8/65w/TbuUcei8/z/rljcvX/gh+lcjwDD9Tb
NVQrO8/xDD2wZvrAlqefc7ymHhiZsXuyUbUC3j8PTNw4bIFDhwLePw/MmfvV
M9KxgPfPAwvDt+VHyAt4/zxwOfThH0wr4P3zQPw14Xhv4HgaDzi/M8w7kcXx
4jxw2t4sIuomx4v3gMG2rqfvfuJ4izxQ+uRmTRfjQt4/DyyZ/K37yu6FvH8e
2Ow3tH+BdyHvnwdODm7T+/mgQt4/DyCrXpvXcwt5/zygPeNW+cZWjlfigesT
7z/dcYLjlXpg6vWfBfJ7HK/MA64Hr2VX+MHxDDzhuWD3sXmNL/D+ecK79eUb
ny0v8P55IjgyqY6X3wXeP098+DJz4LwhF3j/PHHV++Pb1HkXeP88YVpv2LbM
rRzPyxN+jeYk7MjleOGemGF87fj0OxxP44mv6go9HL5yvDhP+F/LfvPC+CLv
nye0YXk/x3e7yPvniQ2376veeVzk/fNEnSqPzL01F3n/PHHn5/bIFdMv8v55
4lvPpl+Pred4uZ7YZtqxRvEhjlfoiXcWF1ZevMLxSjxh5mi0bf8bjlfqie2n
fvefXP0S758n4hzTtBbtLvH+eWFbgLPZ2f6XeP+8YO32bL572CXePy88q312
2YFRl3j/vDDyVRvnSos5nqUXTgVY7+23neNBeP3ugOLIExzPywuV2ucfVd7m
eOFe2DLu1bDATxxP44WbD+tNXFmtiPfPCxE7B5uNaVDE++cFo8y+59zaFPH+
eUFRr2+0kUUR758XVMadXhT0LeL980JVj/wRk1w5XroXKitKvpgEcbxcLwTU
NZuRKeN4wgW68edpxg5DOV6JFz4lpO47MYHjlXqhk9nkCKs5HK/MC8835zXe
sILjGXhjd3zEq68bOZ6hN/aeaVjilsrxmnoj7HHRk0WHOJ6pNwr/09U/fYrj
WXrD6c5R9YdLHA/eaPMk9VG9OxzPyxufXjVfbPqc44V7Y4/lB123/3E8jTf6
Pqs/0dzgMu+fNyrUHJTX0vAy7583DJUPPSs1ucz7541bOnWDu+0u8/55w8ji
SZvUbpd5/4R6vb3HD+3H8dK9ceT68ubtXTlerjea2W6teymA4xV6Y9KA8WHD
YjheiTeCblf8XmEQxyv1Rp5N36/zx3C8Mm+MXt0wtOp0jmfgg1H9Fjcbt4jj
GfpgQMRalzurOF5TH1yubX3fagvHM/XBcLuY5zP3cjxLH6Qn1tLkH+F48MF5
Xb+oX3kcz8sHQdtfXuxUxPHCfeBwqdFJt9scT+ODFTdzbKJLpf75IKrDPRvN
B6l/Pjg3cmy+8qfUPx+cPDX7cXC1K7x/PvCLrLXStv4V3j8fNEmuer9xyyu8
fz5waTHu9LOOV3j/fFASFuW1u+cV3j+hvkcHx6n7c7wSHxzuNtPT2I3jlQqv
X3mq4GAAxyvzwS2rsT+9ojmegS+c/rfm4U0txzP0xS5V12nhozheU1/8zLEo
uTiZ45n6wrtwXVmfuRzP0hdhj0ZeWbWc48EX8wr2THi1juN5+WLRMc83likc
L9wXh3xde4xM43gaX/RVrnPfksXx4nxh0dqh7/k8jhfvC9njXtVKL3K8Rb4w
6jkk4/NNqX++iNpz3/nnI6l/vthYZc7xz6+l/vki8U1Qh9LPUv98cam2/aTz
BsW8f7548rX/6S01i3n/fHHfZEC1UQ2Kef98Mf1ET2crk2LeP190f15r5puO
xbx/fmgWdDhvbQ/+/Kp+uDK6Q53+/Ti+oR+uRdkprzoV0/qDsR9+Hnx/RubD
36+pHzwy2+JRKMdr7YcWDXMuhck5nqkfNv/ZNjFvEMcz98PqOiedOozmeJZ+
cOr3vx6TpnA8Gz9sudrSJX8Ox4MflowxmV11Gcdz8cOKb8Uf+63heF5+mBLX
LEGTzPEC/ZDUtnDgnFSOF+4H44EnJq7L4HgyPxScKDq3LYfjafxwOvNixLZ8
jjfED+k3FvdYe4njxfkhdd89/1k3Od4EP8zKXnpc+ZDjxfuhunro1D4vOd4c
P1R+b7+iYhnHW+SHXxOv/T7xg+Ml+MHiw5szYytf5cffD48r+n5oXfsq4SX5
wb5F1tTchlc5H/zwO+ptXLDJVcLb7YedS3dcvW96la8v+aFTmy1bY7txvCPC
8WiS+OyqNcfLFfpR23qzHThevh/6trO5tsmN4xX6Yd9Pr7mf/DhesR/eZbY+
inCOV+KHTQ9iR0+Xc7wHQj9HpWceGsjxSv1w8fSJ2Y9HcrzXfjizzOJp5Ykc
r8wPH26tvdl8Bsf75oeSL1uVnRZwPAN/hE57Pr/zCo5X1R9dXH77tF3L8Qz9
YRw6ObNuMscz9seoV59OfdzJ8Zr6I0/1Y2LBfo7X2h+dnZvdX3OE45n6o43Z
3bLoExzP3B/rcguyG5/jeJb+6HB2UP8zRRzPxh/nK9pOGHKT48EfLpbH4qo9
4Hgu/ljecGj31c84npc/WoefOGDyjuMF+uPTmu6/137meOH+eB/RtVHt3xxP
5o/hf0x/j65yjfPPH8dOzz9yxfAa558/tuUe8zRtcI3zzx91r3Q5PLz5Nc4/
f5Rstay4r+01zj9/DN5u1fWJGceb44/SKkts6/bgeIuEv7eutOzeh+MlCPjN
kxu62nG8Nf7I3FulNNCF4yX5445H3R0h3hwvxR+Hp9WM9Q3ieLuF/k60qzMg
kuOl++PXn4+H2yo43hF/vBioUfzScbxcf0RtulH74nCOl++PdvWmH/tvLMcr
9Edixppx/lM4XrE/Hv4Osq08i+OV+KPHg0d19yzgeA/8YXl8+CfP5Ryv1B8W
o9u/f7CK4732x1In00pDNnK8Mn8cvJfY481WjvfNHybB/01VpXI8gwBUb2bz
5vJ+jlc1ALN/rIu3OszxDANQbFLUb+kxjmccAP+fT9rcz+N4TQMQHVlq1aGA
47UOQB+fOxPllzmeaQBudi0oS7jB8cwDEJOYviX7LsezDMBUxYrFtx9zPJsA
OO6QZbx/wfEQgBcZxs1/vuN4LgGoW2ND3q9PHM8rAObBL9M//eB4gQEoHfP0
1eMK1zn/AoARo4efrXad8y8AvYZNsN9S+zrnXwB6Hr2iGm18nfMvADtyI+70
a3qd8y8A2orPd30z4XgTArCpuXfxnvYcLz4AnY6GhYV15nhzArAg6Zrtt24c
b1EAtq9eMHOZFcdLCMDYiX27mfTjeGsC8KfdVodkcLykANiNm5HbwoXjpQSg
ceii1MWeHG93AEy2jq76yY/jpQegSd+XxQEhHO9IAJa/XtVoeyTHyw2A5az2
lz/IOF6+0L/snlUtNRyvUHj+APnhQYM5XnEA3iZ7vFw9guOVBCCt2ZCVOWM4
3oMAnP2dcfHmRI5XGoABK0YsfTmN470OgGqh2a2PszheWQB2N7945MN8jvdN
6N+8x62eLeF4BoFYVW1S4+IEjlc1ED9719lycDXHMwzEnQX1Ty/ZwPGMA7HF
49u0mGSO1zQQcUu6XW+/neO1DsSA/ibnH6ZyPNNAmNfsHLMyjeOZB2LhqPT/
7A5e5+c/gVh6tNGIB0c4nk0gWr5P/TjuGMdDIC7eyzepeorjuQRiZONDnxec
4XhegYh/cWZy1UKOFxiIbDnSxxdJ/AtECzfl+odXJf4FopXJ8L72JRL/ApHY
YuPSVXcl/gXifA/TjU8ecry4QGT96aPrVCrxLxAVb1V6r3gp8S8QzfL2Wf/3
VuJfIAqGy+2zP0r8C8TTvjZ1b3/meAnC8y0Ct7z/LvEvEJu/5//5+Vvin/D4
t+2mBpVucP4FYnLHKs2+V73B+ReIzI4vbr+seYOfnwXidP+IYVfq3OD8E/q/
SV6cVv8G518gYPbWcE4jjpcvHI9Ag5YBzTheYSCG31pUpaEJxysOxJdGs85e
bMPxSoR+fLusndaB4z0IxOxaMU9NzTheaSCqDq7leNqc470OxK2CwzMiunO8
skC4jkFKqSXH+xaIaRi/b6A1xzMIwshVPZIe9+V4VYOwMc5mYtAAjmcYhLyo
MLtse45nHISx2oAPzZw5XtMgvLN8tnyEG8drHYQaby63zfHkeKZBuOFybpuB
L8czD4JmyrQW/QI4nmUQ/heYPG9IMMezCcLthsnP/wvjeAhCwZMVThmRHM8l
CGsCHq49H8PxvIIw087szQ05xwsMwq7kkiZ3VBwvPAjnv/xeeEPL8WRBqO20
5/a5QRxPE4TUt6u6pg/leEOCsLfMcWbCCI4XF4Su39s8HBTH8SYI/Rl92MFm
LMeLD8Ik1xm7f4/neHOCcGXfx1ZHJ3G8RUHorRy/cdhUjpcQhMZLp5g1nc7x
1gSh5k3tyayZHC8pCBvCVg8KnCPxLwhHkga3ezxP4l8Q7mbYvB24UOJfEH4a
hhQ+WyzxLwh9/qt7PGqZxD/heG1PO3N2hcS/IMgbTnvWZaXEP+F41TnZas4q
iX9BuBy0a+SNNRL/gpBfcey9Vusl/gVhztYwbexGiX9BWNxreu3EJIl/QRjR
rNmVU8kS/4Jg29k98/lWiX9BOLOl29HK2yX+BaN1z5cPG++U+BeM9y+XdWmb
KvEvGG+8rde02yPxLxhdElPNWuyT+BcM74+jHtXaL/EvGF0rx5z8eEDiXzCO
//GXF2VI/AuGVWTSj22ZEv+CYaB5GTLqsMS/YEzo73DXKkviXzA8vyYuf39U
4l8wOn/bPyI5R+JfMAa+WDHF87jEv2B0PNDsyKtciX/BcEjq0H7mSYl/wbij
XHi8Xp7Ev2Bcr9tq0arTEv+CsarpvgUNzkj8C4Z9v5rZ885K/AtG07uvWv/v
nMS/YMya2zQrpEDiXzDGWfnOSyuU+BeMfg5OiypclPgXDKeBqfnulyT+BWPv
6Z595hdJ/AuGT9Hbe8cvS/wLhlugZcqbKxL/grHv6tYT9a9K/AtG2evjjbpd
k/gXjPFKkxSH6xL/ghGxMGCE9w2Jf8HY3PDlGN+bEv+CMcpo2CG3Eol/wud7
prCyuSXxLxjr5G7vW9+W+BeM0K1rnv+5LfEvGM7dL5hcvyPxLxidHgUlbLkr
8S8Y2R83uOjuSfwTPs9nI5v29yX+hSD1Tr3BN+5L/AvBg/d/7kx/IPEvBMYl
VkvbPZT4F4LAxBozsh9K/AvBoFmFB70eSfwLwZnwgs5XH0n8C4F5R5+HAY8l
/oWgStjqkrOPJf6FYNX+58a9n0j8C4E6cMKytU8k/oXgc+Y0389PJP6FYNM+
c3/3pxL/QpA8aPfKhKcS/0JwaZhpy2tPJf6FIHt9zrPapRL/QrDCYtmn/qUS
/0JQeuiQi7pU4l8Iijq4355ZKvEvBNWOB6WvKZX4F4KAdqUXUyS8+BDYeVW2
SJXw5oTg2r074uPEvxDcbTdAfD3xLwSWbduI+MS/EEzqO1F8f+JfCBaY2vyt
LyUEt765ifUT/0KwtM2yFtekz5seAnfV+/8SpM97RKjnkYsf6w/xLwRTGg7x
0fcvPwR3LlsuZf0l/oWgvvPQ+qz/xL8QHPr86AY7PsS/ECw+G3GfHT/iXwi0
n1d20h/f0hBMbeSfzo4/8S8EUU2dpmVLfCkLQSePtovaSXz5FoL1PmtLGL+I
f6FQdQzR/uVfKNp3/9GL8ZP4F4qtrTo7MP4S/0JRWm3aEsZv4p/weMjypoz/
xL9Q9LlW9kj//TANxbsdvV6y7w/xLxR1Au9asO8X8S9U4N+oNPb9I/6FIuP3
6GHs+0n8C8XKy7E6/ffXRXi+ya4N7PtN/AuFh3V+bfb9J/6FIrSgzWGmD8Q/
4f1atF3P9IP4F4q1lhX/6osmFMuaWYr6Q/wLhW8J6RPxLxRWl0i/iH+haPSQ
9I34F4oVgc3K6V8ohhS8FvWR+BeK7d61RP0k/oVipNFeUV+Jf6FIbWIi6i/x
LxSV4xf81eeUULwqai/qN/EvFPu+NhX1nfgXihaupP/Ev1D4DaffB+JfKAbM
K/f7kR+KCW3r32G/L8S/UDxZtT2Y/f4Q/0Jx7a33d/b7RPwLxeT4Lq3Z7xfx
LxTmjcpy9b9vpcLxWGHwkP3+Ef9C8bSmVSf2+0j8E17/gH4/iX+hSN66XPx9
Jf6FYVuDV+V+f8NwPK27+PtM/AtDhNJD/P0m/oVBOb25+PtO/AtD/YIZ4u8/
8S8MsUMi/p4fmIbhwq9x4vkD8S8M92ftFs8viH9hqD4mTzz/IP6FwS19snh+
QvwLQ5WYvX/PX1zCEK+qLZ7fEP/C4PA1UDz/If6FoXm2tXh+RPwLQ8fTA8Xz
J+JfGMLXJf49v9KEwamvRjz/Iv6FoVL9yeL5GfEvDD+rjRPP34h/YTgw7oN4
fkf8C0O65fRy539hiJ5zSDw/JP6FIaUnnT8S/8Lw3Pj3NHZ+SfwLQ8vgHp3Z
+SfxLwxHYjrd1J+fpoRhaU7MPHb+SvwLg/p7nVe3VRL/wrCqWfgLdv5L/BOO
185fiez8mPgXhuzdG6E/f84Pw47opCfs/Jr4J3ze8C3i+TfxLwyNDseL5+fE
vzDsP3xePH8n/oVhwqriv+f3pWEY0+SFeP5P/AvDprlB4vUB8S8MjbMixOsH
4l8Y9tW1Fa8viH/hOBTXq9z1Rzh2xEwSr0+If+H4eN1RvH4h/oVj16hs8fqG
+BeOuWF1xesf4l84EuwVf6+PTMNRNuG6eP1E/AtHrcfzxOsr4l84mv5vuXj9
RfwLR//sKuL1GfEvHLMfl/29fnMJx4LdWvH6jvgXjrrvA8XrP+JfuHB+8Ui8
PiT+haON8Z+m7PqR+BeOpIrJf68vNeG42faEeP1J/AvH7jHe4vUp8S8c+5It
xetX4l84xn2NFK9viX/hmD5sV7nr33CUpvx+x66PiX/hePnOUrx+Jv6Fo55L
G/H6mvgXjr3Ba8Trb+JfOIomD/p7fZ4SDusLMeL1O/EvHH9q24rX98Q/4fjl
nBKv/4l/4YhpkC6uDxD/wmFX5dTf9YN84fNih7i+QPwLh8LaWFx/IP6Fo0ez
NHF9gvgXDtU9U3H9gvgXjtsDmv9d3ygNh/cxc3H9g/gXjrE7P4vrI8S/cAxv
aiSunxD/wtH4cy1xfYX4FwGjr+PLrb9EoE3qQ3F9hvgXgVMjCsX1G+JfBD7u
Nz3F1neIfxHYv3XXOLb+Q/yLQPKzzpn69SHTCPwMaz6ZrR8R/yJQ8mmQuL5E
/ItA54pzxfUn4l8E2n+PFteniH8RwvEK/rt+5RKBuf0uiutbxL8INGxlepWt
fxH/IvCkY6a4Pkb8i0CjGcXi+hnxLwLv/S/9XV/TRCAw87O4/kb8i0C3whXi
+hzxLwKK/c/F9TviXwRy59r0Z+t7xL8IXB93stz6XwR2Z2SL64PEvwiMmhqd
ytYPiX9CvabXxfVF4p/w+Y2C1Gz9kfgXgbTDBg769cmUCJQerDCCrV8S/yLQ
N3v8a7a+SfyLQP/NMzPY+ifxLwK3Ym1Ps/VR4l8EBjQ/8nf9ND8CCW0ND7L1
VeKf0N9PjkvY+ivxLwLNnQdvZeuzxL8IrP85739s/Zb4J3weJE3Sr++WRmDw
6LTebP2X+BeBFnYH27L1YeJfBCyWpNiy9WPiXwRarh0/na0vE/8iUf9l87d/
158jcTRsyjS2Pk38i8TmxnN6svVr4l8kxmQ0r8zWt4l/kRjWovUHtv5N/IvE
y6SRn/Xr46aR6PfzpRFbPyf+ReJ8sLI/W18n/kXiusve8Wz9nfgXiff31h1n
6/PEv0gk7vhaR79+7xKJHnsXK9n6PvEvEments5i6//Ev0gU94yry+4PEP8i
UXOkk4zdPyD+RWJjnO9O/f0FTSRktb2esfsPxL9ILNj7thG7P0H8i4ThoOe9
2P0L4l8kmv4o7c/ubxD/IuFy/j+Lv/c/IpH+cXUldn+E+BeJF66rjrD7J8S/
SIyI7O7N7q8Q/yLRZkaFo+z+C/EvEjdLtv7R359JicRc3/2N2f0b4l8kTmzN
+sPu7xD/InFxjH8Gu/9D/ItEhl2lnuz+EPEvEjU0EWP094/yIzHE5t5Edn+J
+BcJ3a/6duz+E/EvEh3fTTjG7k8R/yIx1HP5J3b/ivgXCY/gqw/097dKhf5H
HZ3M7n8R/yLR6vTR0+z+GPFP4EMtt8Ps/hnxLxJrLl3yY/fXiH9RGH79+MK/
99+isKThDDW7P0f8i8LDQ1Nusft3xL8obO7Q+Bm7v0f8i8KRmmlz2f0/4l8U
7GO3H9bfHzSNwtWh4WPZ/UPiXxR+3G6Vw+4vEv+iYLDffz67/0j8i0L3GMcb
7P4k8S8KPvkuW/T3L12isMw59QW7v0n8i0LakZwUdv+T+BeFlgvOXmf3R4l/
Udi4z3gsu39K/IvCgJwn8fr7q5oo9Hk+tYzdfyX+RWGPUbvz7P4s8S8KXc/X
rXDyh3T/NwrRqun/sfu7xL8opJTtj/97/1f4O6LkBLs/TPyLQu+ArkHs/jHx
LwpucQ8t2f1l4l8Uftl1jGb3n4l/UajW1aJQf386JQpbd7Wbwu5fE/+iMMbC
cgi7v038i8KC/nNWsvvfxL8orB7j9IndHyf+RaHBqoS5+vvn+VHotXSVG7u/
TvwT3n/6qF7s/jvxT6j/qpMruz9P/ItCpz5dp7D798S/KOw44HZFf3+/NApF
qQcc2P1/4l8USj/NOs/2BxD/ojCu5Iaa7R8g/kUhufVJI7a/gPgXDcM24Wf+
7j+IxqizabPZ/gTiXzTup9x21e9fMI5G9R8va4xqIO0/iMbUnLdn2P4H4l80
HHZ/msL2RxD/ojErtHYntn+C+BcNR3OHk/r9FZbRWDJ9kxvbf0H8i0atbd0O
sf0ZxL9ofH76owbbv0H8i0bcFsP+bH8H8S8ae0MHeun3fwRGo2ZKk15sfwjx
Lxp9ta3fs/0jxD/h8x6aPZntLyH+ReOKgfc1tv+E+BeNznUmftbvT4mLhp+x
0R22f4X4F41xOfVmsP0txL9oJGL6E7b/hfgXjUFq2R+2P4b4J9SzOu2ifv9M
QjSiPo3yYftriH/RWBqxYyLbf0P8i0afOH9ftj+H+BcN1dlhZ9n+HeJfNGSX
DB793d8TjWrfqq1m+3+If9GIOTGrlO0PIv5FY+6xcefY/iHiXzQi0x7asv1F
xL9odFx+yla//6g4Gsu2mpxm+5OIf0K98/53me1fIv4J9Tq5xrL9TcQ/ob9R
TQey/U/Ev2gcuDv0lX5/VFk0Lsa5PWL7p4h/wvEau8ed7a8i/sXA7dfmlmz/
FfEvBgvfdolg+7OIfzG4VD/gh37/lnEMwk1b/GL7u4h/MWjxckUk2/9F/ItB
Pevc+mx/GPEvBnl195mw/WPEvxg4pw+epN9fZhmDJfsqdWD7z4h/MUj/3+zG
bH8a8S8Gpc8q+rL9a8S/GKwYu+gM299G/IvBkM69p+j3vwXGoJltwyFsfxzx
LwZDd2AZ2z9H/IuBq+Plp2x/HfEvBlUvPNSx/XfEvxgUVlnaUL8/Ly4Gw059
ecb27xH/YnC1Sv87bH8f8S8GO2vNeMv2/xH/YpCke92M7Q8k/sVgcrOt0fr9
gwkxeLOx+ADbX0j8i0FGjR2N2P5D4l8MZjXzn832JxL/YmAQVOEH279I/ItB
xfpv4/7ubxQ+f5Lva7b/kfgXg20BchnbH0n8i8H5tfJCtn+S+Cd83jYrzNn+
SuKf8HluW0/R778sjkEl395j2P5M4l8M7ubUPcn2bxL/YpDzbG0J299J/BP6
WXdqBtv/SfyLgVV1rad+f2iZcDwH1VrF9o8S/2KwKq/TMra/lPgXi1cXZ3Vj
+0+Jf7GYv+nNULY/lfgXi9T7Nk76/avGsQj/45bK9rcS/2LRbUil9Wz/K/Ev
FstPR9Rl+2OJf7EY18DjN9s/S/yLhWHF63L9/lrLWAysW9uS7b8l/sViS2G1
wWx/LvEvFgX1XlSc0I3jucTiXZ97ZWx/L/EvFi1DWlnr9/8GxkI36t1ptj+Y
+BeLHfnr17D9w8S/WOR9ik9l+4uJf7HY5V7hE9t/TPyLRfbbJcP1+5PjYhHU
fXsDtn+Z+BcLk0PFd9n+ZuJfLArzd+Wx/c/Ev1i0mHzpJNsfTfyLRQfDj5f1
+6cTYvG7UtErtr+a+BeLjvN71WT7r4l/sTiw5qsp259N/ItFhk8lW7Z/m/gX
i6stPBz/7u+Oxcwml3uz/d/EP6H+3qlGbH848S8WbRO+n2f7x4l/sViT/j6W
7S8n/sXiVsHFc/r958WxeFC5tGKdDXy/eolwvE+sqmI/je9HfxCLVU+DC9n+
duKf0D+TLf5s/zvxLxYWZsbL9Pvjy2Jh0MJzBts/T/wT+LWvQju2v574J0OF
eX+GsP33Ih0qydA5vlUk259PfJTB9pPPc7Z/X3x9DRl2GC2py/b3Ez9luNjw
fQHb/y/CGckwbu+6Jmw+QMQzluFtn4L3bH5AxGskg1mjC75svoD4K8PVL5V6
sPkDEa+FDO49ni1l8wnEZxm2Va2kY/MLIl47Ge7+/prB5huI3zJstYwfxeYf
RDwz4fnb1OvZfATxXYZRixdZsPkJEa+78P7737Zn8xUinqUMdpnrJ7H5CxGv
twwrxh+zYPMZ9H2QwTE2oS+b3xDxbGXwPDBqHZvvoO+HDGc/Fniz+Q8RzlGG
6B4dfdh8CH1fBHxthzVsfkTEc5ch51J8FzZfQt8fGQahdsU6xXw+xU8G+9mH
m7L5FBEvUIbbWQuGs/kVES9Eht67UgwajuDzKuEy7OngcZ7Nv4h4UTKM1lw8
x+Zj6PDK8Gngjp9sfkbEU8rQ3G+gjM3X0PdPBmQf+8jmb0S8gTJ8tIzbz+Zz
6Pso9CN+2Fo2vyPijZDhTN3MVDbfI+LFCZ8ndOhjNv8j4o2VYZP1dTs2H0Tf
VxmSov2Ps/khEW+yDFV2xcjYfBF9f2WwXLmhDZs/EvFmytB95YUKvRP5vNEc
GZbMvPiHzS+JePNleFF1czM230TfbxkufNX4s/knEW+ZDMcvKbew+SgRL0GG
79V/1WXzUyJeosDX5VmJbL6Kvv8yrOzlas3mr0S89TK4VBz5gc1nkR7I0DDX
7DSb3xLxtsjQIWTuATbfRfogw4O+eUfY/JeIt1OGxCd2t9l8GOmFwO/e0xqz
+TERL02GO2Xmw9l8mYiXLkMli2aP2fyZiJcpw9PDA0az+TTSE6HedUfasfk1
ES9bhpuzL39k822kLzLMtf/0iM2/iXinZGjaOfsTm48jvRH4m1RqzubnRLxz
MtyIj1nA5utIf4Tnb7A2YvN3Il6RDOnd03LZfJ6IVyzDlcgeG9n8noh3XQb5
Ot9UNt9H+iRDfaeCl2z+T8S7I8OJn8ti2Xwg6ZUMk/tmGbL5QRHvsQz3ji7+
xOYLSb+E72e1+JZs/lDEeyFDvxeW89h8IumZDH7vJ9qw+UUR773Qn7fBVmy+
UcQrkyF80qdpbP5RxPssg+/wrJZsPpL0Tvh+DuptzOYnRbyfwuPB5mo2X0n6
J0f6g2VN2Pwl6Z8cpS0bqdl8JumfHH11L0aw+U3SPzlG/TgYy+Y7Sf/kCHjz
y5bNf5L+yTGs9e4GbD6U9E+OFd4Ny9j8KOmfHIlNvj1h86Wkf3L0bjXzC5s/
Jf2TI62OVx82n0r6J4dbRsRBNr9K+ifHxsYdprD5VtI/OcYuWb6Rzb+S/skx
/saXTmw+lvRPjueWbc3Z/Czpnxy66T6H2Xwt6Z8cTcK73WPzt6R/Ap75m71s
Ppf0T/hb3dGWze+S/smxaPanVWy+l/RPeNzj+VU2/0v6J0fGpZpV2Xww6Z8c
mozHA9j8MOmf8DjGJrD5YtI/OY4tdGzC5o9J/4T+7vB8xOaTSf/kqFlQpxqb
Xyb9k2Pv6CXr2Xwz6Z8chsk+R9j8M+mfHMu+hoxm89Gkf3J0/mD5lM1Pk/7J
Mcfwazs2X036J0dmxf7ubP6a9E8Op0/th7H5bNI/OQ5vjtzN5rdJ/4R6VjU2
YfPdpH/C5x/U/B6b/yb9k6PB+8xqbD6c9E+OpGFnM9n8OOmfwKc7OdXYfDnp
nxwRDRIbs/lz0j85njR6VInNp5P+CcfHLv8lm18n/ZMjfvaPl2y+nfRPOL6H
itqx+XfSPzkMsrscZPPxpH/C57m44Dibnyf9k8M8t4qKzdeT/skxtZ9vHpu/
J/2Tw6NSZsXeqjSuf3Jc6W3qwOb3Sf/kMOsa7MXm+0n/5Niw8PY2Nv9P+ifH
mjbjbjF/ANI/OY4OrGzF/ANI/+RY7La9QlzGbq5/cuxffWEx8x8g/ZNjYG6P
TsyfgPRPjl+425r5F5D+ybHTscs55m9A+ifHf90L4pj/AemfcDzsT41m/gik
f3JYNItrw/wTSP/kaBuYWMT8FUj/hOebuN5i/gukf3LsKTZYzfwZSP+E7+eS
ZBXzbyD9kyPu5Mj1zN+B9E/ga0mLDcz/gfRPjst5OaeZPwTpn8DPpDtjmX8E
6Z/QT5dR9Zm/BOmfHMPfvfzB/CdI/wR+n+y0mvlTkP4J3+ffhuuYfwXpnxxr
G2ZUY/4WpH9y3Gn31o35X5D+yVHRTtmL+WOQ/smRMv5EcrbNGq5/coRUOzmc
+WuQ/ilQf7zFROa/QfqnwMTXT7cwfw7SPwWSnB5dZv4dpH8KPHHr/5r5e5D+
KSB7ZnWP+X+Q/gmPrx5kzvxBSP8UaIQdtZh/COmf8H6Oxx2ZvwjpnwIttufk
Mf8R0j8FlvTvNpv5k5D+KeC1z7dyhcXTuP4p0N5z3VTmb0L6p0CTpfmLmf8J
6Z/w/LZu25k/CumfAkXRRb+ZfwrpnwIj3F8MnfPBnuufAg+GOh/pZu5tR/qn
wDy8eWvWWGlH+qeAJtN3HfNvIf1TwLniyKrM34X0T4Fv63e3Zv4vpH8KVFyz
xYX5w5D+KZC8e+UN5h9D+qfA/Zar3jB/GdI/BbTVfndh/jOkfwo8s6jYjfnT
kP4pkD0ufSHzryH9UwC1vmqZvw3pnwJDV3W1Z/43pH8KdJhvVo/545D+KdDn
d1kC888h/VPAsP+L6cxfh/RPgbXNDy5l/jukfwpsdfcZxvx5SP8UGJ334Tzz
7yH9U0DX2cSX+fuQ/img8luaxPx/SP+E/lxen8b8gUj/FDB4mLyK+QeR/ikQ
VGHOFeYvRPqnwDDDebuZ/xDpn8CHiN/DmD8R6Z/w+jW+cuZfRPqnwIvUD2f1
/kaLFGi2XPuC+R+R/imQ4mFXmfkjkf4p0Cu/ruifRPqnwOTbYzswfyXSPwX+
59j4r//SegVy1ifWY/5MpH8KuI1al8z8m0j/hOPtVrCY+TuR/inwM/tsVeb/
RPqnQJ3/evz1h9qtwKA36zXMP4r0T4GOujW7mL8U6Z8CtiGpvZn/FOmf8Pwv
HqI/FemfAgHykX/9q7IVeF9cupT5W5H+KVAzs7Pof0X6p8Cs+JtnmD8W6Z9Q
/+jpon8W6Z/wfbyWWs5fS3j/lleymf8W6Z/wfXFViP5cpH8Cn2vkiP5dpH8K
9GxrJfp7kf4p8HtHnb/+X3eEfkRPFf3BSP+E71fFnaJ/GOmfAqaHk0V/MdI/
gX+xw0T/MdI/BZZV/pWo9yd7LTzu2lX0LyP9U6D3lfOivxnpn3D8ixaL/mek
f8L765qJ/mikfwq89TD465/2U4GNXbNEfzXSPyXGq/aI/mukf0okjjET/dlI
/5RISteK/m2kf0p8frjgr7+boRKLSjaK/m+kf0rY9l8t+sOR/ikR1TlI9I8j
/VPi/NdVor8c6Z8Sx74b/fWfa6FEa/cg0Z+O9E/AW3FP9K8j/VPC74ux6G9H
+ifgPbAT/e9I/5To8+G/v/545krc+rQihfnnkf4pMavIdCTz16P1H+H9S8vk
zH+P9E+JnxbnHjF/PtI/AS8vKkrv32erRL2fHdYxfz/SPyVsshYPZv5/Ip6j
EtZ7ml9h/oCkf0pkHf4Wz/wDSf+UGLP7tJneX9BLCXPN8inMf5D0T4np7x6Z
M39CWk9S4uHOjGfMv5D0T4m648ZEM39D0j8lFr6o3l/vfxilxMXxZ3oxf0TS
PyVysqZ+ZP6JIp5SCe+kke2YvyLpnxJlh8JGM/9F0j8ljo9SLNf7Mw5RYs9I
S1Pm30j6p0S7q6V3mb8jrU8pMWFRHSXzfyT9U6Lm0fRY5g9J+ifg1wydoveP
nKzEhoYfVMxfkvRPCeWFj8eY/6SIN1OJu6XOlsyfkvRP4JuP90DmX0n6p4RB
0tNqen/LRUpEblIfZP6XpH9K3Dm+sTHzx6T1LiXst98tZv6ZpH9CvUdfLmH+
mqR/Ssw5WPON3n9zvfC31Z/lzJ+T9E+J7YpqbZh/p4i3RYm8+Q9smb8n6Z8S
n87kz2X+n6R/SpRkjNmi9wfdrcToRmY9mH8o6Z/AlzUbLjN/UVo/U6Lqknod
mP8o6Z+Al+pcwPxJSf+U+HZ7yl//0mwlTladIfqbkv4pcfn5RtH/VMQ7pcSk
NymiPyrpnxK9jcpE/1TSP+Hvk8py/qpK1LguF/1XSf+U6Dj6vujPSutxSjyr
Gy76t5L+KfE/Lfm7kv4p8d/CV3/9X+8oUfjwiOgPS/qnRCWrD6J/rIj3WIkR
74tEf1nSP+H78rqT6D9L+qfE24cRf/1pXwv6MSRS9K8l/VPCH+mivy2t7ymR
Jo8X/W9J/5S4HzNO9Mcl/VOiX8KTv/65P5VIGLlH9Ncl/VOhW5H/Vua/K+JV
UuGg3RvRn5f0T4W6mj5HmX8v6Z8KcfIF9/T+voYq7Ol2azrz/yX9E57fMrcP
8wem9WoVsmzGJTL/YNI/FSKu3evK/IVJ/1S4ajB5ud5/uIUKukaTApk/Memf
Cufd9ldh/sUiXjsVxvXZaMP8jUn/VFixdGg88z8m/VMhLPnrIL0/srkKb5ue
nc/8k0n/VFBtbjiU+SuT/qnQYv2Frcx/mfRPBfuHy3KZPzPpnwqfJ2f66v2b
bVWYOdH7IfN3Jv1TIWm/SWXm/0z6p4LJhr0uzB+a9E+FLms3NWf+0aR/Ktx8
9ny/3l/aS4UtcxvsYf7TpH8qZKueFjN/atI/FYr/GLxh/tWkfwLe0PfHmL81
6Z8KCUFtjPT+11EqxH4qTWH+2KR/KoR0neTO/LNJ/1RQzPiTw/y1Sf9U2Npt
6nnmv036p0Ki1ateen/uISoEDOlwivl3k/6psH7tl77M35v0T4UqS5oqmP83
6Z/wuHWP38wfnPRPBfPzxVf1/uGTVWhyZ04q8xcn/VNh4aITrsx/nPRPhZxd
b4Yxf3LSPxXcHuhKmX856Z8Ko+/NjmP+5qR/KqxZsvg28z8n/ROOv1PuY70/
eoJQT1mIP/NPJ/1T4aRu1gvmr076p0LbmWNHMv910j8VhsWF7mX+7KR/KnT/
4aPW+7dvEfD2zYxk/u6kfyrI7VqEMP930j8VmmahGfOHJ/1TYdKt5kOZfzzp
nwoTA+8Y6/3l01UoMsksZv7zpH8qjLj0eCTzpyf9U8H5yfZ05l9P+qfCcxOf
GOZvT/qnQultc2u9//0pFR4NSalUO4b73+ercGpM5/nMP5/0T/i8ntaLmb8+
6Z8KfQIjrzH/fdI/FQJ1vTvq/fmLBT4OmOTG/PtJ/wS+nHv/m/n7k/4JerAt
zoj5/5P+Ccd3+hcHlg9A+qfCzgXzovT5AY+F19/xasfyBUj/hH69nR3N8gdI
/1Q4VmnFZZZPQPqnQoPkN84sv4D0Tzg+Faym6/MNylRYPauDB8s/IP1TYbLF
Ji3LRyD9E45f85Qklp9A+if8/U2ZzfIVSP/UqD3LbIY+f6GSGnEGI46wfAbS
PzWuHr5lxvIbSP/UmDWpzzqW70D6p8byprOvsfwH0j81IkpfJunzIYzVGNUn
7zTLjyD9U+PWy/WGLF+C9E8N73uWA1j+BOmfGk5TJrdj+RSkf2q86J80W59f
0U6NQFMDC5ZvQfqnhs6vdynLvyD9U2PBsMbjWT4G6Z8ayb4Ze1h+BumfGrXU
kf5/8zXU8HNZ25Xlb5D+CZ/P2q42y+cg/VPDYk/EUZbfQfqnRqcrqLTRkOd/
QI1ztRam6fM/HNXImdp0KcsHIf1Twy6hwWCWH0L6p8aZ8W+NWL4I6Z8aX3eq
vFn+COmfGhOGTX+jzycJVEMVs+EYyy8h/RPwH8mWsHwT0j81ijNPd2b5J6R/
atTTNVGwfBTSPzUeXf1W0Sid4ynV2L1Ldoflq5D+CfU8WpvD8ldI/9ToNsB3
LMtnIf1T4/XxqddZfgvpn/D5TefsZfkupH9qDFe0usTyX0j/1DCrq6zB8mFI
/4R+Pz1nwfJjSP/UuNLVoh7LlyH9U2OD1YUZLH+G9E+NmCy3EJZPQ/qnRkH4
jhh9fs18Ndr9ihjO8m1I/4R6HPpEsfwb0j81Rj+e/o3l45D+qTG55dPmLD+H
9E94vN7k1X/zddRQml5yYvk7pH9qfNNc/8zyeUj/1Nh49/sslt9D+qdG+JvG
+Szfh/RPjZk7Ji/X5//sVMO1/ZtjLB+I9E+Niee2mLL8INI/NR4nB2xm+UKk
f2rs396+OssfIv1T436l4730+URH1FgR5VBhYB2eZ5StRqX6Xm4s34j0T+DH
lC9PWP4R6Z/Axy73D7B8JNI/NVo1Mlmiz086J3y/rvoFsnwl0j81Xl1IvM/y
l0j/1GiiTTBi+Uykf2r86DQ8j+U3kf6p0fXZzRJ9vlOJGqcfVO3O8p9I/9TY
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
sn9dzd8ef5D96076g1Nxfe6EP8j+dXXN9/AH2b9u6w+yf93WH2T/ujrgLYk/
uLars6bhD7J/Xd13DP4g+9dt/UH2ryt9GX+Q/Yv758WJP7i+q+X2B9m/busP
sn9dbXML/iD719X6i/EH2b+uVk0l/uCGrnZZhD/I/nX1wNX4g+xfV3+9Dn+Q
/YvXZxP+IPvXnfQHN3Vbf5D96+riU/AH2b+4P16DP8j+xfV/P/4g+9f9//zB
nmbZH2T/etrK/iD712v9Qfav1/qD7F9PT++S+IMzevrYbPxB9q+nV52HP8j+
9Vp/kP3r6T1/wx9k/3o6OPUHZ/X0iQ/hD7J/vdYfZP962tf+IPvX0+fOwR9k
/3o6JvUH5/Raf5D96+nMS/AH2b+eTt0Hf5D96+k5O+EPsn+9SX9QvdYfZP/i
+98Wf5D967X+IPvXa/1B9q+nF6b+4IKeDrI/yP7F59sfZP96rT/I/vW0+efx
B9m/nm5J/cFFPS2zP8j+9Vp/kP3r6af2B9m/+Hm+hz/I/vUm/cEsPrY/yP71
Wn+Q/evpJvuD7F9P26/GH2T/ero99QeX9lp/kP3r6Rz7g+xfT2P7g+xfr/UH
2b/epD+4PD62P8j+xftlf5D96+ke+4PsX08H2h9k/3pae07iD67sqW9/kP2L
r29/kP3rtf4g+9fTPPuD7F9P6x5N/MGpXusPsn+91h9k/+Jj+4PsX0+X2h9k
/3qT/uDaXusPsn89HWF/kP3rabH9Qfavp5PsD7J/vUl/cH38PPYH2b84z/4g
+9fTHfYH2b9e6w+yf71Jf3BDTzMfxR9k/+L6sj/I/vVaf5D96+kh+4PsX08r
U39wU0/37o8/yP71Wn+Q/Yufx/4g+xfX+6vxB9m/nlZN+IP91h9k//o63/4g
+9fX4fYH2b++LrU/yP71J/3BGf3WH2T/+vqa/UH2r6/32x9k//paY3+Q/evr
s6k/OKvf+oPsX18L7A+yf3190f4g+9dv/UH2r68i9Qfn9DXP/iD719dB9gfZ
v75usT/I/vV1ov1B9q+v36X+oPqtP8j+9Vt/kP3ra0v7g+xfXx37g+xffP+p
P7ig3/qD7F9fZ9sfZP/66tsfZP/6rT/I/vUn/cFFfR1mf5D962tkf5D96+t+
+4PsX7/1B9m/eL9TfzDr6zb7g+xfX9vbH2T/+q0/yP719Rb7g+xfXy9K/cGl
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
rbM/2Jz3wkyZ/cHmvBdl+rj9wea8bbLWH2RvM+2Y+oMzM21rf5D9zXSm/cHm
vJdmrT/IHmdaa3+wOW+HTE//KvEHZ2Xa3v5gc95O8fn2B5vzXpbpv+wPNuft
kukl9gfZ72zSH5ydaQf7g+x5puPtDzbn7ZbpSvuD7Hum2+wPNue9JpNSf3BO
pnn2B5vz9sz0KvuDzXl7ZerZH2zO2zvTk/YHeR5kujX1B+dm+pz9QZ4PmTa3
P9gct0+me+0P8rzI9C77g8158zJ9IvUHlbX+YHPemzNdbH+wOe+t8f7bH2zO
OyD+vv1Bni/ZpD84P9N0+4M8bzLdZX+wOe/QrPUHef7E+2N/sDnvsEwPpP7g
gqz1B5vz3pnpXPuDzXmHx/Vnf7A5718zTdkf5HkV70/qDy7MtIX9QZ5fma6y
P9ic94FMl9sf5HmWaTf7g815R8b1kvqDi+L6sD/YnPehrPUHm/OOyrSX/cHm
vKMzzbQ/yPMv01apP7gk0wr7gzwPM11nf7A5r5fpHvuDPB/j/d8Sf7A5bxhf
L/UHs6z1B5vz8kxL7A8255WZnm1/sDmvyvQr+4M8TzPdnPqDx2ZaZn+Q52vc
v/YHm/OOy/Qx+4M8b7PWH2zOOz7TDak/uDRr/cHmvBOy1h9szjsxa/3B5rxP
Z3ql/UGez5kOSP3BZVnrD/K8znSj/cHmvJMz7W1/kOd3pufZH2zOOy3TCak/
uDzTwfYHm/NOz/Qa+4PNeWfGHtofbM47K9Ns+4M87+PzU39wRdyf9gd5/sf1
Yn+wOe/8rPUH6YHYE/uDzXkXxN6l/uDK2AP7g815F2atP9icd1FcD/YHm/Mu
zrS//UH6IdO3U39wVaa32h+kJzK90/5gc97Xs9YfpC+y1h9szrsqU5X6g1OZ
jrQ/2Jx3daav2h9szrsm9sT+YHPe6kz/bH+QHonXI/UH12T6oP1B+iTef/uD
zXnXZdrF/iC9kulb9geb827I9PbUH1wbe25/sDnvxkz32R9szrs504vtDzbn
fT/Te+0P0jex36k/uC5r/UF6J9Mb7A825/04rjf7g/RPpjPsDzbn3Z5pceoP
ro99tT/YnPeTTJfYH2zO+1mmr9gfbM67I/bS/iC9FPud+oN3ZjrF/iD9lOn3
9geb8+7OWn+Qnoo9tz/YnHdvpsNSf3BDptfbH2zOuz/Tz+wPNuf9Jmv9wea8
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
B+m/SivtD9J/la61P0j/VTppA/4g/Vfpoc1Sf7DSgfYH6b9Kt70Pf5D+q/Qf
5+IP0n+xh1fgD9J/cX7qDy6rtPeh+IP0X6XP2x+k/yo9Yn+Q/qv0a/uD9F+l
i1J/cHmlx3P8Qfqv0scOxh+k/ypd9V38QfovXm/7g/Rf3F+pP7ii0hb2B+m/
SmvejT9I/1X64eOHPPPvU32p0kL7g/Rfpe3vSPzBlZW2sT9I/1X6gf1B+q/S
XfYH6b9KW9kfpP/iekn9wVXxvLA/SP/F9z8df5D+i/txp9c98+97XRHX/2X4
g/RfpcOOTPzBqUqb7A/Sf5W++W38Qfov7i/7g/Rf7Lf9Qfov7rfUH1wT37/9
Qfqv0pvsD9J/cb91tnvm30e7/v+uB/xB+i/2IvUH18Ze2x+k/+J5bH+Q/qvi
v9ePeebfb/t+pU/ZH6T/Kk2l/uC6uN7sD9J/la6wP0j/xc9vf5D+i/vF/iD9
F/swP/EH18f1Yn+Q/ovnkf1B+q/StPv3f+bfv7ujUmZ/kP6L+/fxxB+8s2r9
Qfov7nf7g/Rf7I/9Qfqv0nT7g/RfpT88mfiDG+L5Yn+Q/ot9sD9I/0VP2B+k
/+L1tD9I/1V6VuoPboz72f4g/VfpXvuD9F+lGfYH6b9KF9ofpP8q/TL1BzdV
utH+IP1X6Sj7g/RfpbvtD9J/lb5mf5D+q3Rd6g8+UWlb+4P0X6V97A/Sf5Ve
YX+Q/qv0gufjD9J/8f2l/uBmtTr2B+m/WrfZH6T/at1vf5D+q3XTV/AH6b9a
u6f+4PQ6/nsVf5D+q3W4/UH6r9YZ9gfpv1qfsz9I/9VamvqDM+rWH6T/an3X
/iD9V+vn9gfpv1oP2x+k/2qdlvqDM2t9wP4g/VfrqVPxB+m/Wn+wP0j/1Zp+
D/4g/Vfr9tQfnFXrs/YH6b/4evYH6b9aB9kfpP9qHWZ/kP6rNTf1B2fXepX9
Qfqv1m/tD9J/tbZakv77rvH17A/Sf7X+kvqDc2pNsz9I/9U60/4g/VfrHfYH
6b9aj9kfpP/i9Ur9wbm19rM/SP/VOt3+IP1X6277g/RfrSPtD9J/tW5I/UHV
Osb+IP1X6zz7g/RfrS3sD9J/td5lf5D+q7Uq9Qfn19q4Pf4g/VfrPvuD9F+t
T9kfpP9q3Wl/kP6L7zf1BxfUutn+IP1Xq7I/SP/VOsf+IP1X69X2B+m/Wjts
l/iDC2sN7Q/Sf7V2sT9I/9Xa3v4g/VfrAfuD9F+tIvUHF8Xrb3+Q/qv15y/h
D9J/tQ6xP0j/xXn2B+m/Wtel/uCSWlfaH6T/av3U/iD9V2sP+4P0X1x/9gfp
v7jeU38wq7XY/iD9F/e3/UH6L76e/UH6r9YK+4P0X635qT94bOyH/UH6r9bT
p+IP0n916w/Sf7X2tj9I/8XrO+EP1jrb/iD9V+tG+4P0X6159gfpv1ofsT9I
/9U6N/UHl8X1aX+Q/qt1sv1B+q/Wj+wP0n+1Xmt/kP6rNU79weVxfdgfpP9i
L+0P0n/x+tofpP/ifrE/SP/Fvqf+4Ipan7Y/SP/Vusv+IP1X65P2B+m/2Cf7
g/Rf7GvqD66sdY/9Qfqvbv1B+q/WN+0P0n+19rE/SP/Fx6k/uCruP/uD9F+t
q+wP0n+1LrE/SP/VrT9I/8X9lvqDU7W+bH+Q/qt1uf1B+q/WP9sfpP9q/cD+
IP1Xa+vUH1wT95/9Qfqv/r9/T7rxB+m/WsfaH6T/au1lf5D+q7Vn6g+urfVP
9gfpv1oftT9I/8Xzzf4g/Rd/bn+Q/ov7IfUH18We2x+k/2rl9gfpv9hn+4P0
X62j7Q/Sf7UWpP7g+loP2h+k/+J8+4P0X62R/UH6L64v+4P0Xz3pD95Z6+9H
4w/Sf7Xeb3+Q/oufz/4g/RfXh/1B+q/Wzqk/uKHW9fYH6b9a19gfpP9qvdH+
IP0Xzx/7g/Rfrc0vT/zBjfF8sD9I/9U6yv4g/Vfr3+0P0n+1fmx/kP6L6yX1
BzdFP9kfpP9qXWZ/kP6rdav9Qfqv1r72B+m/6JHUH3wi+sD+IP1Xq2d/kP6r
taP9Qfovfj77g/RfrVtSf3CzsS6wP0j/jbXY/iD9N9bd9gfpv7FeaX+Q/htr
VuoPTh8rsz9I/411vP1B+m+s3P4g/Rd/3/4g/TfWc49J/MEZ49YfpP/G+pD9
QfpvrJPsD9J/Y+1rf5D+G0/6gzPH+rX9QfpvrG/bH6T/xvqd/UH6b6wv2x+k
/8b6ywsTf3DWWB+0P0j/jVt/kP4bazv7g/TfWPPtD9J/40l/cPZYL7E/SP+N
tfmu+IP031ivtz9I/411s/1B+m+sS1N/cM5Yu9ofpP/Gqu0P0n9jbW1/kP4b
69lH4A/Sf3E9pP7g3LH2tD9I/431uP1B+m+s++wP0n9jvdP+IP0X10PqD2qs
vewP0n9jPWx/kP4b61r7g/TfWNvaH6T/xhqk/uD8sf5kf5D+G7f+IP031mn2
B+m/sTr2B+m/sW5I/cEFY03ZH6T/xlpuf5D+G+su+4P031hz7Q/Sf2OtTP3B
hWP17Q/Sf2N9yv4g/TfWfvYH6b+xXmp/kP6L9zv1BxeNJfuD9N9YT9kfpP/G
+pH9Qfov7mf7g/TfWLen/uCSsT5jf5D+i69vf5D+G7f+IP031tD+IP031u6p
P5iNtcr+IP031g/tD9J/Y/3K/iD9N9Ya+4P031hPp/7gsWO9z/4g/TfWE/YH
6b+x3mF/kP6L78f+YPPjHh/vp/3B/wedM8DG
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 1]], 
            LineBox[CompressedData["
1:eJxcnXVYVFsXxu1ExbgqtqioWCgYWLwCAhLSXTNMYrdyRcUu7O7GThRssQEL
REFMLETFRL2235y91gH87j/38QHeWbPmnd+c2Wfv9TaNGOqlKVWiRAnjqiVK
SP+X/7N1aOO/9VbWmdWrpP+O2Si/rIydX/jvFJvpG245uBr+bWUp/Zdh03B/
5eQHGfLPs20+5dStYWf4N6nl2NTPdGgZfVP+/ac284Zn6GalZ53RaaX/cm3O
KK8YRabJf//SZkOPOzMb3sg6c+2q9F++jVX7pw+2XZP13tuMOzS+Vqmr8u9/
sEkwutOxU6qsX2DTsebtnl2S5b//ZDP23eeeVS/Jj/fFJuaOqvvx87LeV5te
yW96dT8r632zaWpewXP+aVnvh82caVcnJJyQ9X7a3Kz/7fqho7Leb5vXC967
Tz0i65XA6JHHjFodkn+/BOo+/FV90z5ZvyTMv1Ya/HaX/PelYDE5rY3xdvnx
SsPIIyek3BZZrwxmXB9cLX29rFcGXwa7eQ9bLeuVRa86n7o9WybrlcOvpWPS
2y6S9crj0X+z2jvHynoV8ObzhIieM2W9CjC2d4gpPUXWq4i1r4au2RAt61XC
6yUtko3HynqV0SKzXX3/4bKeESaMfbVzxEBZzwjz9/rPUWlkvSoo7V85o3W4
rFcVuy2s1lwMkPWqoX3ZVd+7eMl6xniStaLiRBf5942xsFKLx6vtZX1jTJuY
unper6wz4s8tq0NxIM7Dr4v8eNVx8cbAhp/by3o1MCk9rMGAlrJeDbyZ4Bd5
pLGsVwP3oo43yaoj11MTI1ymhN+oJuvVxNQgK7v15WW9WgjJf/bS7k8m69VC
t/qdRyR9yWS9WpiT4vmj5ttM1vsHFRd93Nr7eSbr/QPF3oAFuJ/JerWR+cTt
nkmGrFcbKmWzXakpsl5tlN1yoKF3kqxXB/UdvQLiE2S9Oniblxf9eo+sVxdb
C7L2/dgs69XFiOFlajxbKevVxYusjNSt82U9EwxPM//da5qsZ4I9vwam74+S
9erhyMkxA74PkfXqocGzbe8aqmW9eng48frMeoGyXn38O6130Hs3Wa8+jOaf
mL/BVtZrgKhZk91adZX1GsBK1efMnDayXgM8O9m4yuXGsl5D5MbGKx7UlPUa
IielzLNr5WW9RvCsOvfsyh+3Wa8RunVv27z3u9us1wiDa/ToevrJbdZrDL8H
o81MMm+zXmN8/VWmkXvKbdZrgvqxUc6Kk7fZX01w+9WVO677Zf0mWBUS9KXW
Zvnvm+D6shdpR5fKj9cEFm6rlnebKes1RUDql9FLo2S9prg54sW6qwNlvabo
63uw1+NQWa8pNPH/TbvpLus1xbHZx7Zs7CPrmcKqjkeqi6WsZ4rfysGtbzWX
9UzR8mS9j9a1ZT1TTHRI9J1QXtYzxa8RX6av/3qL9Zqh5/SHh9e9vMX9aYba
NS/XGn/3Fus1w7Kp/ne6XLnFes2gmze9U/qJW6zXDJcOL/Fz3iPrNcfZ5Grj
Nq+V9ZojPDw9NTtW1muO+l5fp7yPlvWaI8v69a3cQbJecxx56fv5ZIis1wL3
X7U0Gekq67WA/3+LR1fsKeu1wO1RFRHTRtZrgbR3Pfdl1ZP1WiBqeYMv1SrJ
ema4Hp/h1vpbBuuZoXKb5NfN8jJYzwz1C1aWK5GVwXpm+Hdxg9unLmawnhme
rwmfH3o4g/VaIt98S+SjzbJeS+QqgtfbLZL1WuL703bqOZNkvZa4GvL+Y/xg
Wa8lNn2Jm5IULOu1wqeHU1wO9JP1WqHj5ZzpU7vKeq0wSus4oHsLWa8Vzv3U
dLxdQ9ZrhZpZNWr5lJD1WiP1Vj+XxDc3Wa81Pr0xN/5z9ybrtYb7ia9r2iTf
ZL3WqPundqteR26yXmus7lDxreXmm6xnDqPSw1saL5D1zPH9p1HVm+NlPXNY
/Uq4F6WX9cxx/0ZEanlfWc8cXkkNakX3kfXaYEzbCgWZ7WS9NphYL2xT3Xqy
Xhv8mzYwsE85Wa8NFIMX+Xp+TGe9NjgzDWlOD9NZry0anfheulVqOuu1RW+t
R5t3R9JZry382j2KWb8pnfXa4v0eD5su82S9tnBtELgpYZys1w4Bn488bqyW
9drh5rq2PUa4y3rt4FNrdt7e7rJeOwxav7Z5RgtZrx1io3qaPzGW9dqj+XxY
3fuRxnrt8bbFlAmnc9NYrz3KbLmL2PQ01muPcz1Mj9mfTGO99ghLbN80Ly6N
9TpgR7ub8WMWyXodsDUle/f78bJeB9ydb2Tvp5X1OmBzE/PE7R6yXgfsi31p
87y7rGeB+XW/1q3Wgn/fxAJu1b9Gt6iWxryxwK+ef1w9P96gv3e1wMX2HTZ2
vHSDH88CGYmj9PmrbpBejAV6hW+rN2XwDX58C3TuMLpNAW6QXrwFDo4bVQ21
WO+qBdqsrtIj8sV10ss1/Pz6FNOhx69zfR2xv0S+tde861xfR9hvs/pcQ3Gd
6+sI3RqT5IOdrnN9HbGyRkuzDmVZT9sRqjEJU+ZmXeP6OsJKme9xeec1rq8j
9MsSSj8df43r64gv31OqPHK7xvV1RNbWjY9PNL7G9XVE6QdjP0R9uMr1dUKC
Vf/9Juevcn2dEL32ceyapVe5vk4YP3Xvjz+aq1xfJxh9zxvk2PUq19cJJR9O
8xxRgfViOuFBJfN6k7OvcH2doF3cteuoXVe4vk64/zWpruv4K1xfJzz/N7Z9
RdcrXF8nDPOvnre7wRWuzxIhTccctnqTyvVZ4sk/C0ptPZXK/rFERPR9fJ+X
yvVZYl2F2Q+6hqVyfZaY7qh3CG2fyvVZIrfq57wBv1O4PkuU/uLeSXk9hfTi
LZF9s9cCrE/h+ixRAmaDKg5J4fosEd2iRueTvVK4Piu8ctnlG1iF9UysYF7Q
2frx/WSuzwpzh61y9tmTzPVZITTD59Oh8clcnxX2LZiy8ZdzMtdnhYL2mUet
6iVzfVYYWWFNXMDLy1yfFbx+H7oZefQy12cF+z7LtulnXub6rNCrgdtMX7/L
XF9nXLsw7pFFi8tcX2fYtXb650fBJa6vM04+Gb/g8LlLXF9npJZSHw5ddInr
6wzXco9efgm/xPV1hsmFgGUx7S9xfZ3xPSKl/o+fF7m+zsjyPvxYe+Ui19cZ
Zj4tXS6susj1dca4McdO1NRf5Pq64FP7Oct9u1zk+rpgoQ6955RhPcsuMFtd
8Z9DNy9wfV3Q+N3K6GsbL3B9XaBUmWXeH3KB6+uCsZ8GT8npeYHr64Lv1/c9
vlPpAtfXBdmzdnlfunOe6+uCK0Fbu+6MO8/1dUGCWpE/edR5rq8rlJ9M0zxs
z3N9XVE3Yz9qG5/n+rqi26p+a24+OMf1dcW8cgd7zth9juvriqqK5pM7Rp3j
+rriXUbYhVsO57i+rmj6ZIVyWK1zXF9XPLoyJb7Mk7NcX1ccLNO/1uL9Z7m+
rqixb/ODuhPOcn3doK21Vb/K+SzX1w2Jnd5VqVX3LNfXDYu6r24x+3kS19cN
rqZW5b8dSuL6usG964WK6pgkrq8bBiSkTE11S+L6uuGprseVtvWTuL5u+D25
6sDa6We4vm6I+Kd5h6sDz3B93WBef8jc8eXOcH3WiItZ0LLFptNcnzWMf9Xe
ldLjNNdnjbuTJh6NzDzF9Vkj6KD5f2WHn+L6rJEwZkDFDZVPcX3WGDdhzKLO
cSe5PmuszBpmkYqTXJ81pqxSzwi9d4LrszbU27fT+9EnuD5rmB94lz7F+ATX
1x36gJalau8+zvV1x/W5K8N29T3O9XVH7ZJZk5FzjOvrjtS80LLZ/x7j+rrj
bcqCyaP+Ocb1dceciIR5NQ8c5fq6Y+uKUkkJzke5vu6wGJpyNux5ItfXHQ/z
R/+pHJPI9XWH1WaXxmfqJXJ9PTDxXZ34cUcSuL4eqDdggYu1RwLX1wP/fnQb
V/L1Ea6vB7zuZ15On36E6+uBh0bLLu9qcoTr64HMTvdKzztxmOvrgdT/npaP
8jvM9fXAx143Q4d+iOf6emCA6uD8YbHxXF8PmC4YbTqhZTzX1xNlSvzcsOzc
Ia6vJ34qK887HnqI6+uJ9hY+Q/K/HuT6eqJn3eGX2yw9yPX1RAPli3pRHQ5y
fT1hpmj56lbqAa6vJ5xexx6x0R7g+noi9k74z2MlD3B9PeH9Z0fUrO77ub6e
0Eyqm3dq+D6urxcm12/b85+de7m+Xjhf/eHABTl7uL5eaGlabmC7unu4vl6I
uhLU5r37bq6vF+bNHbH2zsxdXF8vbLO+uPvFmZ1cXy8M9N5r3+jrDq6vF14M
i/SYYLGD6+uFlRsaJpSN3M719cKBF7eCjm6K4/p6Y/KlKU2X393G9fVGxtEy
rzfU3Mb19cbptGbLM123cn294eK0/E/3GVu4vt6Y0qFkqetnNnN9vXGs5vfR
C79t4vp643x8hU5TLTdxfb1hcnpHpe2DN3J9vTG/zYqt39w3cH29ccDm8KFK
F9dxfTawajb4/pTua7k+G4yLiz6uOrCa67NBq6QVj/eZreL6bOAcMvyJZt0K
rs8GmX1O95tTaznXZ4P7paw3NoxdyvXZoOqbbQOallnC9dmgVLOs1iuiF3F9
NijnqzxS4vUCrs8GTYwD808+iOX6gIS3p55o0mfT7xsBOV0///v74gyuF4iI
3blg9omp9PdmwJMFGQUVD8Xw9Q1woN3052W8x59hOYTccN742m40Px8gaYtr
kzWDh5BeIGD1zqOnwj+Cnx+Q1jPB9GKtfqQ30vDvQ/8sXtvM0YaeL7By0q/F
D28qbYReLLDwV90du+4MtqHnDxyyDF3S5M0oG6EXBww2X/Tfldf/2tD1ElAQ
e8im9agY0ksCrq+tttZ/+FTSuwq4FZxaP2TwDNLLBuJGXLs/UD+b9HKBK89G
f3SNiCW9AsDRt8rUasELSK9EH/RqO2ltQOtFpGfUB0aNHz1ZsXUx6Zn0wYhN
j4fZN15KemZ90Mynl1noqmWkZ9kHe8Mb5+bUWEF66IN6s81WGBhKeq59kNw6
rFmLMqtJL7APRjazHvd0/BrS0/bB17zYGRUK1pLeyD4Ii4i1XRK5nvvXB555
57ZMebSB+9cHDZbNvDlg10buXx9klHfffFG9ifvXB+tvf+yT3mgz968PrlZK
s5x3ZzP3rw+8zJ7++LpoC/evD55Pv9i4lstW7l8fnMzaZfaw9DbuXx98nBy2
yu/kNu5fH9jU6FNqwqg47p8t7Nf3fePRdjv3zxbbur17kf50O/fPFru9+0/+
s3oH988Wb5v87pftuZP7Z4uLFU1vhVXYxf2zxcrSqvgFp3dx/2zRtNyb6IGj
dnP/bNFeMejyh9Z7uH+2QNvKbUwf7eH+2WLAwSF9fi7Zy/2zxf0zh7dNctrH
/bPF2ebDP+3+uY/7Z4sppXZfiTmwn/tni7uNBz//3fEA988WQ0aN6Ldo7gHu
ny16uVRV/ffsAPfPFgfyGpbp2Psg988W7kkd//RacZD7Z3i+LWJbNnp/kPtn
izklm3imOx3i/tmh7PQFHv6bDnH/7LDnkfmP/d8Ocf/s8PPTW7N7nvHcPzvk
G0/bdWdnvA3xxw4B63qG7ih5mPtnB/39mnWcAw9z/+wwZtWeA6cOHOb+2SEz
17106QpHuH92OJDxOs8k/AjpjbRDjmmNnqUSjnD/7LCv/H9ZJ4wSuH928Hk4
dKWDKoH7Z4ejLz4Ebj6WwP2zQ4Wyi75dr5ZIevF2sBjx2+eqJpH7Z4eqM2c6
rz6RyP2zw4VhtY51q36U+2eHHZ/MYrZrj3L/7HC8bfak3BNHSa/ADr+d76/8
bHyM+2ePqwFj99zSHOP+2cPh2/S1U48f4/7ZY1z7sS6lqh3n/tnjUAPXtR6q
49w/ezS/vnzEkMTj3D973P0+7lBw5RPcP3tsTt+MuuEnuH/2SDvpWWrroRPc
P3vUa+/+4HfZk9w/e/jo3iW2CjzJ/bPHcUfjqKZ7TnL/7AGTuhVe/j7J/bPH
2qBPrpM8T3H/7LF0cV2LZ1tOcf/s4dpgwuo6X05x/+wR9mvdaBOn09w/e+TF
R+1+ueo0988e7ysvNJv1+jT3zx4LP+Wkf+p5hvtnD2ff1ys7zD/D/euLfS92
67o9OsP964vN5fovK183ifvXFzk+AS8CkcT96wufyXuaLNEncf/6wjq1d7f4
hUncv76oHW3T4vjRJO5fX/iG1nu0PYf1AvuiXLMxodEVznL/+iL6geXKrhZn
uX990X3wkJnZ/me5f33x7GNUs4hJZ7l/fVHS/qk6Pe4s968vXEOH2re8znpx
fVH/Tr0Tqs+sF98XJ8JMzs1ocI771xfjTG97LbQ7x/3ri/Jeb7UxA85x//pC
sbD7V79F57h/fXFx8IUStY6e4/71RYdHqf8mPmS9Eg4oSExS9Cl7nvvnAPPm
rnsPtjnP/XOAnalDcAWv89w/B9wucVzTd9x57p8Dttx5dlm//jz3zwHWlTpP
GHGB9Vwd0PFkv8kRr1gv0AG7Az/e6GZ8gfvngJLG7TWfO1/g/jlgrUebXiuD
L3D/DHrujj5NJ1/g/jkgdGaV7QvjLnD/HHDFumun3CusF+eA3x92fWz6gfXi
HeBYKfq5Xe2L3D8HvGn3qrxrj4vcPwfMz1H4d1dc5P45ILbU2PSq0y9y/xxw
IeDtyJSdF7l/DlhfI77ngOusV8IR/t73Wn/4yHpGjjhxPM46rM4l7p8jRr6d
MOBgj0vcP0fkN/94/FX4Je6fI/bsO9m60rRL3D9HBE4/faTajkvcP0fMu/0n
9McV1gt0xMd5+5tee8d6Wkdk5ZuWmF7zMvfPEWWq3f5q2vUy98/w+BO1lbcH
Xeb+OSLg4tqu1Sde5v45wv6XcoJy02Xun6Ph8+nC/RUXWC/eEY8efPY9/IL1
khzxbI/Ly4RKydw/R2hzeq3Y0C6Z++cIj59axRCPZO6fI2rNmdq32chk7p8j
Kh4Y7nh6WTL3zwkRKRY6m6OsZ+SEwz9ztsXdZT0TJ7jfOlfm00/WM3PCvTtd
prdsnML9c4Kz+alWffqkcP+ccKT+5/dQpXD/nND72tpHZtNTuH9O8E5d+OVj
XAr3zwm9tl3pui2Z9UY6YfIyzbZer1gvxgljai/tc7JyKvfPCTWm76zatF0q
988Jbc/Vqjaofyr3zwmL0hR91w1N5f454dNYq8OHF6Zy/5zwItcz7NBB1rvq
hM4+yx2W32S9bCds3fptqKKA9XKdsNJo/gPjWle4f07YmTBp8XarK9y/fsjS
11rc3PcK968f2prvfjRz9BXuXz/8enViYvqyK9y/fnjROmtEyQTWs+yHzxu2
namTyXow/H7uC32tL6zn2g+lmo8Z8d8/V7l//fDzgE1OUuer3L9+mJPinDDM
9yr3rx8KrA5/LTf6KvevH84V7Ns9delV7l8/2OdPzciNZ71V/XBh5aJRFhms
F9cP4Udclig+sl58P8S/6241tvo17l8/ZC77GTzK4hr3rx/MnGyrBbhf4/71
w7cd6V6mQ65x//phV9VpbTJir3H/+iG7i8P6AbtZr4QzPvxX50BeCusZOWPw
l8patzzWM3FGsr/jxZXlrnP/nFFvXMmM1ObXuX/O6LFh6tKntte5f84wfHpW
e6q4zv1zxpyyoU4pE69z/5zR+966vsvXsp7WGVP8ooycj7PeSGdsrjl/87Ms
1otxhsnrOVW0n1kv1hnqne29r9e4wf1zxvMUx6iGFje4f84I6nh4urfbDe6f
M8JeKSYOG3CD++eMkU/6RY6aeYP75wzzrVGu4VtZL9sZRnUrtu94lvVyDf9G
41qvHrBegTPu/fe+zJzvrFfCBfUDFVNnVU7j/rmgbcN3C86YpHH/XODc3bvN
q5Zp3D8X1FxwNqBClzTunwsGOo6uX88+jfvngrBT+8c09mI9VxcMCj46uK6C
9QJdkBV9v3TZIayndYGnx9Cez8ez3kgX3D6WUu/YbNaLccEbK+fNMStYL9YF
tY/6ZPbYxnqrXOC93Ov4q0OsF+eCj6pDnvOSWC/eBXWzX2xodp31klww6sjA
HXvvsd5VF5zbemJIm5esl+2C16ZBX9Z+Yb1cF5RVXLctVSad++eChy22+gdX
T+f+uWLzyYHddjRK5/654p+0Y3l5bdK5f6547NNyUEPrdO6fK/yGel7q68B6
lq6ICcj+rvRmPbgiwV5dZYSC9Vxd0d55Tckxg1kv0BU3HdvcG/wv62ldUfHq
hXWBM1lvpCv6/6zvZr2U9WJcMT86L99oE+vFuuK37/OYW3tZb5Urej9OM1p4
nPXiDF+49wxaanOZ9eJd8VY1of7TDNZLcoX9ydRt/+awnuEL+orAxl3LvWG9
bFekHXPKmP6N9XJdYd2wzsRvZW9y/1xReVhoD2WNm9w/N5h0/lD1VKOb3D83
bB6y66dRm5vcPzcEzFZV8Ox6k/vnBn+Hb51n27GepRuM45xnH3FnPbjh981u
5TKDWc/VDY+Nth94pWO9QDekLfk3tmAk62nd8H7J6nXvJ7HeSDckGL9/8Xgu
68W4oVO6ZujlFawX64ZmrnldN21hvVVuUC7V9B26n/Xi3LDc/tqajidYL94N
lQYb2+RdYr0kNyRPamq55CbrXXXDo16fxnd6yHrZbsjbOqHhpZesl+sGr/vx
9ft/lvvnho2m8/9NLZHB/euP/ifL9O5hlMH9649rOcYDNtbJ4P71R4ede0p9
N83g/vWH8Z+blZ3aZ3D/+uPV7Emz51izHvojdMO+SWftWc+1P55bhH7Md2e9
wP44cGLWc6Ng1tP2x92uHUKballvZH/sKO8eaj6c9WL6w/JF7suW0awX2x+H
738uV28m663qj4hW44+WWMx6cf1xx3JMqftrWS++P2Km5ubt3s56Sf0xLO7K
0GGHWO9qf3Rp2WJN61Osl90fFSZ8HJJ1mfVy+8P5Z6d3UTdZr6A/SiY/b1z9
gdw/d1w9V7Hsuhdy/9wxaPK6zQ0/yv1zx5ruG34u/in3zx1HjhvV+VXuFvfP
HVqfp5+Dq9/i/rnDNqPxuv31b3H/3OE05LTx1xa3uH/uOHTsuE9ni1vcP3d8
WVVtsK476410h0mXxND59qwX4462r3eZ7+rPerHu0Pd+mnU8gPVWucMh3T8y
KYL14txx3/vPk+ODWC/eHZ5RN5x2jWG9JHcEvTq5fn4M6111R7T1iTzdHNbL
dseFzJPmXZayXq7h98vE67+tY70Cd8SkzIs7uJ31SnjgyIseeWEH+ffLeUB3
fVfHkidY38gDIQsvzVh54RatP9T0wICsqNfNr/PjmXjgZPZeVVwW6zXxwN3+
zgUNHrOemQfOqTqvn/WK9dp6YN9Bb/3LAtaz9MCpjrN8bX6xnrUH/ut0OHJO
udv8enhglkfijtRqt0nPwQM3NENrlzC5za+PB+5NP5pgbnqb9Lw9UOn9oHnO
bW7z6+WB6eU068OtWE/hgdH2Y99E9mI9rQcOWo6bGOnAeoM8YKfu7hvmznoj
PVBdOX+0UwDrRXkAO2yftlSyXowHZm9stvlnJOvN8MCthT+OXBrBerEeOLR8
semM8ay3xANr1+173X0a663ywG3fmv88j2W9jR4Y32bK5mnLWC/OA9N6H19h
sp719nggPHDc1y1xrBfvgbYvxyQ32896xzyw59PgyqsSWS/JAyNr1bxYOon1
Lnmg7ECTb6pk1rvqgXVrOu4+lsZ6GR5Qn6/4qEw262V74Pcwt5V9H7Nejgeu
r912d/xL1sv1wJRNR3du/8B6+R4ob2VeMeUb6xV4YEzImp+PSmaS3jcPdB+y
a2Z+xUz2nyd0JQv2vq2eyf7zxPZXVUbmmmSy/zyRarXobkbTTPafJ9QmxnkJ
rVnPxBPHv9XbsKAj6zXxhHWATekwa9Yz80SL9PJ1TfuwXltPXK/1M+eeE+tZ
eiL20UblXA/Ws/bEyk9j11kEsB48saR2iZVXwlnPwRMTSh7xCdGxnqsnfqir
ZT0Zwnrennh0f5pp+BjWC/TE8PyZ3dMnsJ7CE0e+zDS1ns56Wk/U7/7hwfJY
1hvkiX9T2g57tYT1Rnri7IyN9y3XsF6UJ8402G82cjPrxXji7bdEzx07WW+G
J9Y611FmHGC9WMPzL2gR8CmR9ZZ44tsc6+6Vz7DeKsPz99taqe4l1tvoif22
R67Wu8Z6cZ6o+yhxas1brLfHE5MDPnUqdY/14j1RbfT+B7mPWe+YQT/WfObZ
PNZL8sTHmVs6LX7Hepc8cTfT52nAF9a76onKQ0ev/ecX62V4YszFbsrk0lns
P08MSr1uNbxSFvvPE1ueqeoZV89i/3liWH6Tf7bVyWL/eeKflm1aWTTKYv95
4oPtVr+DzVnvmydGeu3a0qoN65XwQoVk/xrLO7JeOS+sHn5+27eurGfkhWmj
Sii9e7NeTS+8d2rkuMWe9Uy84JTQKvilM+s18cLT6y03tvBkPTMvrHjd2CTA
n/XaeiF2R/WUmFDWs/SCT863QxtUrGfthWo707MPR7IevPDCfT6ShrKegxfG
+TZ9dXY067l6wXzAuOxj41nP2wtDBkyovmMy6wV64XBw7WWxM1lP4YWZuhY6
3TzW03ohOnvWnG5LWG+QF27Uq1+qxCrWG+mFkP2H0k6tZ70ow+N1Mv02fCvr
xXjBz6vbxAa7WG+GF8rdOBNxaj/rxXrBcvSknT5HWG+JF07V7+775DjrrfLC
jo379Nok1tvohZznK3JzLrJenBc6Xd+T7nmF9fZ4wb77xrbH0lgv3gvzyzb9
XjuT9Y55Ibn03Z4D77FekhcCfw3/70gO613yQuTeuW3/e856V70w+PTFh+1f
s16GFxpePm4c+l72nxeaz9n+efJn2X+GeuutbLfuu+w/L8P3kx/5+/7I/vPC
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
fHOk8ztCb5gCu8x2f5DO9wi9kQp4lxneWjr/I/TGKDB5Sp44H0TvVwWi+o8o
K50fEnrRCjg4zY+TzhfR+1eBmS/uifNHQm+q4fXZVM9JOp9E72cFXDzMHaTz
S0JvtgLPV1ZWSueb6P2twCOfHHH+SegtVGDE99fifJTQW6LAy7JL/aTzU0Jv
uaFfasUD6XwVvf8VKJHzQ5y/EnprDY8/y6qbdD6LeKBAfLOf4vyW0NuiwMcV
+m/S+S7igwLKkMPi/JfQ26lAzvPeptL5MOKFAhXqzguTzo8JvQMKJB3ulyCd
LxN68QocvtbXXDp/JvQSFEjsHHVCOp9GPFHA8VOpgdL5NaF30uD/xNbdpfNt
xBcF7J1DzKXzb0LvvAK9ynXqJZ2PI94o0M514Cjp/JzQSzH04+sHcb6O+GPw
6/1scf5O6KUp8KKTsoJ0Pk/oZShQp/4HcX5P6GUqUL9GowLpfB/xSYGWg3aI
839C774Cq25Ei/OBxCsFbh44LM4PCr2nCsReXy7OFxK/FFi5b4U4fyj0Xhre
jw2C0qTzicQzg37cfnF+Uei9V6B541XifKPQK1AgvIFjsnT+Ueh9MfhvbD2t
dD6SeKfAuBtbxflJofdTgemGj0fpfCXxT4m3D+orpfOXxD8lZjo2Hy+dzyT+
KTG3QYOS0vlN4p8SY2cvFOc7iX9KTFxlq5POfxL/lDhxsqW3dD6U+KfEL/cB
4vwo8U+JBc0HiPOlxD8lGlY8Jc6fEv+UGObdQSOdTyX+KREw4II4v0r8U8LI
M1GcbyX+KWHRabw4/0r8U+JO/glxPpb4p0SZTWHi/CzxT4nYXlPE+VrinxKr
q8aI87fEPyUOu+aL87nEPyXe7V4uzu8S/5TY8maOON9L/FNi1CNTvXT+l/in
RO6k8FXS+WDinxK3grxuSueHiX9K6BN/i/PFxD8lyu17Ls4fE/+UcHAvP0Y6
n0z8U+LS9afi/DLxT4mEfdHifDPxT4mTr3zdpPPPxD8lvrQYK85HE/+UqHBv
kDg/TfxTYv3sfkel89XEPyW6vYwT56+Jf4Z/19suzmcT/5SYdfezOL9N/FNi
49EUcb6b+KfEgX7Pxflv4p8Sz8JXivPhxD8lftqeFefHiX9KaF9cE+fLiX9K
lDA/Jc6fE/+UOFShySrpfDrxTwnk1IuRzq8T/5SIiNOK8+3EPyVWmnuJ8+/E
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
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 360}, {-0.3977466560106103, 0.39687713911745565`}},
          DisplayFunction -> Identity, AspectRatio -> 0.25, 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 12, 
         FrameTicks -> {{{{-1.5, 
              FormBox[
               RowBox[{"-", "1.5`"}], TraditionalForm]}, {-1.4, 
              FormBox[
               RowBox[{"-", "1.4`"}], TraditionalForm]}, {-1.3, 
              FormBox[
               RowBox[{"-", "1.3`"}], TraditionalForm]}, {-1.2, 
              FormBox[
               RowBox[{"-", "1.2`"}], TraditionalForm]}, {-1.1, 
              FormBox[
               RowBox[{"-", "1.1`"}], TraditionalForm]}, {-1., 
              FormBox[
               RowBox[{"-", "1.`"}], TraditionalForm]}, {-0.8999999999999999, 
              FormBox[
               RowBox[{"-", "0.8999999999999999`"}], 
               TraditionalForm]}, {-0.7999999999999999, 
              FormBox[
               RowBox[{"-", "0.7999999999999999`"}], TraditionalForm]}, {-0.7, 
              FormBox[
               RowBox[{"-", "0.7`"}], TraditionalForm]}, {-0.6, 
              FormBox[
               RowBox[{"-", "0.6`"}], TraditionalForm]}, {-0.5, 
              FormBox[
               RowBox[{"-", "0.5`"}], TraditionalForm]}, {-0.3999999999999999, 
              FormBox[
               RowBox[{"-", "0.3999999999999999`"}], 
               TraditionalForm]}, {-0.2999999999999998, 
              FormBox[
               RowBox[{"-", "0.2999999999999998`"}], 
               TraditionalForm]}, {-0.19999999999999996`, 
              FormBox[
               RowBox[{"-", "0.19999999999999996`"}], 
               TraditionalForm]}, {-0.09999999999999987, 
              FormBox[
               RowBox[{"-", "0.09999999999999987`"}], TraditionalForm]}, {0., 
              FormBox["0.`", TraditionalForm]}, {0.10000000000000009`, 
              FormBox["0.10000000000000009`", TraditionalForm]}, {
             0.20000000000000018`, 
              FormBox["0.20000000000000018`", TraditionalForm]}, {
             0.30000000000000004`, 
              FormBox["0.30000000000000004`", TraditionalForm]}, {
             0.40000000000000013`, 
              FormBox["0.40000000000000013`", TraditionalForm]}, {0.5, 
              FormBox["0.5`", TraditionalForm]}, {0.6000000000000001, 
              FormBox["0.6000000000000001`", TraditionalForm]}, {
             0.7000000000000002, 
              FormBox["0.7000000000000002`", TraditionalForm]}, {
             0.8000000000000003, 
              FormBox["0.8000000000000003`", TraditionalForm]}, {
             0.9000000000000004, 
              FormBox["0.9000000000000004`", TraditionalForm]}, {1., 
              FormBox["1.`", TraditionalForm]}, {1.1, 
              FormBox["1.1`", TraditionalForm]}, {1.2000000000000002`, 
              FormBox["1.2000000000000002`", TraditionalForm]}, {
             1.3000000000000003`, 
              FormBox["1.3000000000000003`", TraditionalForm]}, {
             1.4000000000000004`, 
              FormBox["1.4000000000000004`", TraditionalForm]}, {1.5, 
              FormBox["1.5`", TraditionalForm]}}, None}, {{{0, 
              FormBox["0", TraditionalForm]}, {30, 
              FormBox["30", TraditionalForm]}, {60, 
              FormBox["60", TraditionalForm]}, {90, 
              FormBox["90", TraditionalForm]}, {120, 
              FormBox["120", TraditionalForm]}, {150, 
              FormBox["150", TraditionalForm]}, {180, 
              FormBox["180", TraditionalForm]}, {210, 
              FormBox["210", TraditionalForm]}, {240, 
              FormBox["240", TraditionalForm]}, {270, 
              FormBox["270", TraditionalForm]}, {300, 
              FormBox["300", TraditionalForm]}, {330, 
              FormBox["330", TraditionalForm]}, {360, 
              FormBox["360", TraditionalForm]}}, None}}, 
         GridLines -> {{0, 30, 60, 90, 120, 150, {180, 
             Directive[
              Thickness[Large], 
              GrayLevel[0], 
              Dashing[{Small, Small}], 
              Opacity[0.75]]}, 210, 240, 270, 300, 330, 
            360}, {-1.5, -1.4, -1.3, -1.2, -1.1, -1., -0.8999999999999999, \
-0.7999999999999999, -0.7, -0.6, -0.5, -0.3999999999999999, \
-0.2999999999999998, -0.19999999999999996`, -0.09999999999999987, 0., 
           0.10000000000000009`, 0.20000000000000018`, 0.30000000000000004`, 
           0.40000000000000013`, 0.5, 0.6000000000000001, 0.7000000000000002, 
           0.8000000000000003, 0.9000000000000004, 1., 1.1, 
           1.2000000000000002`, 1.3000000000000003`, 1.4000000000000004`, 
           1.5}}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 800, Method -> {}, PlotLabel -> 
         FormBox[
           StyleBox["\"N=4\"", {16, 
             GrayLevel[0]}, StripOnInput -> False], TraditionalForm], 
         PlotRange -> {{0, 360}, {-0.3977466560106103, 0.39687713911745565`}},
          PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           StyleBox["\"\[CapitalSigma]cos/2\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(A)\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(B)\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(C)\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(D)\"", 16, StripOnInput -> False]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             GrayLevel[0]], 
            LineBox[CompressedData["
1:eJxdl8mLXFUUxm+iiGDEWgiOyDOIiIiUU5zNiTHzYPWQpOd+3emhOp2qeu9V
da0fbly4KYLRxAGef4DQa8lwI4KSwVSEOGPeQhBEoVa6FRHJ/X61KX5899xz
h3Pv/d7D863hxY3OufoG5/79//8XDV/ccqP32/n/aLD13FDIzn4Rvt1Ur9hX
wndbX/he+0P4QTsvHNnnwpvR/yPgR8GPob/HwU+An0R8FfwU2j8N/Rnws+Dn
wFvQ3/PQXzAv/CLavwT9ZcS/Av1VxL8G3op4U87BbpvG59uQ73XEg9126NsR
/4adFR3sdiD/DvS/E/pO6LuQf5fdKvW+G/purNce9L8H/e+1X38feeemvhfx
+zC/fdD363rk++2i6AfssugH7JroB6EftG9Ff9O+Fx3savZDyFazn6R9Tdv7
mt0p6zdkt4RsQ+Y7YfyQrpcfso9PhvHDdvbTMH7YOnddDeKH7eTb/SB+2Bbu
uRbEj1jnrYBtxE6fCTgfsb8/C9iP2PRaGD+q47NRu3pfkC8ftU82BePxozZ3
/UoQf8hOn7gcxB+y+1uXgvhDur8e7A5rPdhhO3EhXL/D9tCpoH8P3R3B+I+g
nqD7Izo+N2YfyvjHbDacXz6G+Y/p+rhx5B+3qXB983H7S9Z/3N4P98dNYP8m
bDnc33wC+z+h9eEm7YzUz6R9FNZXPon1n9T6dFN6H9iUbQo5n7LvJH5Kz4eb
th9l/tM4b2A/bdclfsYuSfyMfSPxM3ZF4mfw3s7q/GwW99Us9h+6i/X+imLs
JziOcZ+Bi1jvA4/4EuzmdDzRHPKDY3AOLuaw39BL5HPz2j6ax3kEx+B8HvOf
x3qjfQndHVWOjiL/UR1fDD0HF+jPg0uwW0B+sIHjBeSHXoD9go6/XMD7voj8
YFvE+kPPF+0LyQ/dL6r/LBfhT5f0PEVLyL9kNyQ/9HzJNof1XkD3iC+hu2X7
UvIv21XJv2x/Sv5l5F9W/1xA9+AS7Op2QfLXMf866q+O8w8u6rpfHlzW7Yzk
X9H4aAX1D45XMP8VHV+B9h5cIt4dQ/0d0/EY9BicH9P5FNA9uAS7Vdw/q1h/
cAzOV7H+0P0q5g/dHcf9exz5wfFx2yDvI/QC/XnoJXTXwPvTQP4G9r8Bf9NA
/Tf0PPuGfS35G/q+uqa+v1FT/bM11R/HTbzvTX3/i6b9LPnRvmzaHeKfW3Zb
yFFL/Ym1dH/jFvxNS/1z0bJ26I98y94N/VPZsiXxz4m1Q/9VSdQ/R4n652pi
k6G/s0Tvj1pi/dAfxon6xySBv0zsg9B/9hJ7IPSnRaL1sA72idZHP1F/XCYW
hf55kFhP/HOq8RVwBK6m6p8t1fHXUv0+iFPMP8X3Rar13EvVPxeprv96aqfC
/fGp7l8/1f0tU3sv3P9BqvXhMjsX1k8l0/qKMl3vaob6zNQ/1zL1z3Gm5ynJ
8H2Z6fnpZXreikz993qm/tlnen77mb7vZabfx4MM/rmt9Vtp4z5uY/5ga+v9
VYMet7V+Eug59F7bNoqfQPt1tPfQ++ASPAC7jnKlg/cYXEV76+h4auAY7RNw
jv574AL9rSPed3S/+mhfggeId2uY/xrOP/Qq2MC1NdzX0BP0n0PvgYs1nd86
4j3a98EleLAG/9XV97PSxfy76p+rXfjTrp6nWhf131X/m9zU/wHutaGv
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1: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
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 0]], 
            LineBox[CompressedData["
1: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
PPdzUBa2cT9rsvAV97MhC+PIz/8Bh+zAig==
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1: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
fhYsWMb9rLMgkfz8P6Prr7g=
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 1]], 
            LineBox[CompressedData["
1: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
p06Bafm0M1ufyc/TFERK3U/u8aMWUhCausSwR0/PXzEFnQVD+75L6XntSEH/
FSc/3XBYft6noNH35ZPf1tP7wJkCXcT0Ta+1p1bpEewz/6i+H71P1Hq0vuzf
agmR30d6eJWuXfY0ld5Xgh649GnXyk/k95sefbifHXpc5X6W9Mjmfna+2E/h
51RYuZ/VqbjP/YxUtBxjfhZS4cL9LKaigvvZkYrR3M9SKiZxPztTcUPh5zR0
rmN+VqehZR3zM9LwgPtZSMMr3M9iGoq5nx1pSj9LaSjhfnamwabwswGR3M9q
A7pwP8Og9LNgwMJ45mfRoPSzw4Bc7mfJAD/uZ6cBZVO4n9NxhvtZnY7qu8zP
SIcf97OQrvSzmA4v7mdHutLPUjqWPmN+dr6Yz+V+zkDeRuZndQZucT8jA0bu
ZyEDuRnMz2KG0s+ODAzjfpYylH52ZmCbws9GHOR+VhuVfoZR6WfBiFjuZ9GI
HO5nh1HpZ8mIttzPTiMyFX7ORDz3szoTN7mfkfnifcH8LGSimPtZzMQbuczP
jkyc436WMtGP+9mZiUMKP2fh39zP6iy0KWd+RhaauZ+FLKWfxSw85n52ZOFD
7mcpCzu5n51ZCFD4ORs9uJ/V2TjN/Yxs7ON+FrLRmftZzMYN7mdHttLPUjZ8
uZ+d2X/zs0npZzcT1nM/q01o5H72NSGN+xkm+HA/a0yI434WTEo/m0wo434W
TbjD/ZxvQhP3s8MET+7n3SZs5H6WTFjN/Vxpwn3uZ6cJV7mfG0w4ovCzGWO5
n93MiOJ+VpsxgPvZ14x3uJ9hRgz3s8aMftzPghkJ3M8mM1ormJ9FM5zcz/lm
eHI/O8xKP+82I4/7WTIr/VxpxkDuZ6cZS7mfG8wwKfxsgcT97GbBZu5ntQU1
3M++FnhzP8Oi9LPGAjv3s2BBGvezyaL0s2jBIe7nfAv+y/3ssCCR+3m3BZu4
nyULgrifKy1KPzstGMf93GD5m5+tqON+drNCy/2stuIH7mdfK4K4n2GFkftZ
Y8VA7mfBqvSzyYpjCj9bsZL7Od8Kb+5nhxWPuJ93W3GT+1myIob7udKKu9zP
TivA/dxgVfpZZUNf7mc3G17iflbbkMD97GtT+hk2qLmfNTZM5n4WbHDnfjbZ
MEfhZxte537Ot8HM/eywoZr7ebdN6WfJhlru50obIrifnTbUcD832DCC+1ll
xyzuZzc7RnI/q+1YyP3sa8dK7mfYlX7W2BHF/SzY0Xqa+dlkR4jCz3b0437O
t8OT+9lhhxf382475nM/S3alnyvtSON+dtoxnvu5wY447mdVDjpxP7vloAf3
szpH6WffHORwPyMHAdzPmhzc534WcuDD/WzKgZr8/D/HH+SF
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 1]], 
            LineBox[CompressedData["
1:eJxd1ntUVOUaBvBRSj26SEoPIRWMYqjhBcG7oo+QgAo6AoKCwma432eYGQxE
3IWgeEUpO6VyNirlFVFMEW+jmDe8oGJ2yMuYWoaZA2IWHPNwlu9e693xD+tZ
734YZu9vf9+vrzYjKK6zSqVK7KRS/f+3/LP+8s/D7g+9e/xVsk4aX5o1c55W
ziqUzzg04vBaOXfDNrvWC0+PyNkOF1v6V7+4J+fe+MTdv/f1Lj9SdsDShAqv
nPfl/C5utu0ubJ4kZzXWXX350DtUzv0Qnde1KjtRzv3huqqv59YsObvit323
tddEOQ9E/ZSrJY5L5fwBLkWEOK8pkvNgSJjp6L9MzkNhffTQNjJfzu4YtXT9
N005ch6OzY6/nuyWIWcP/CT6fn0tSs6eCM7xjkkIlPMIOHheibCMlvNIXEyT
RkQ4y3kUPLrl7Gm1kfNoGK96FJ97IN+vMQjYWrPk91NyHgur5227f5XJeRym
pwYuOr9QzuOhsS46tz1YzhPw1fRu0qxBcvbCknDXwFv/tVCeiFHOnQ8mXJLz
JFzvsyqsR6mcgVst0ugfUyiLwPFSj0evj5Hnk+HflLh6TWd5PhkbO98qHPb5
HZp7w73hcHSaK2WxI08J69St6jbNfRD+xpNjQ7woiz7Y2hL3R49vb9H8Q/zc
0Mfu8jTK4oeY3NM9bfOlmzSfguZDPrmVGsriFATWJVT2u/IDzX3RaUHmkr4a
yqIvSn8vym242EhzP/zy9uMB2mmURT+sn/20n/Xb/9DcHyf3+PTZAsqiP5K+
H3e2tOZ7mk9FfveiTl1GUBanYmfSi91tu27QfBrMXectVLtSFqeh7N3ZRT1L
v6P5dPj1DO6TYU9ZnI4Jh7580Lj6Os0D0Ldg8kJdV8piAPL+8i4JEBtoHoi/
3txov+LPazQPxHuDS/r5GSirZkC92812w+OrNJ+Bbh/VJkmJlFUz4f3Z97a6
+1doPhNHi5/9s180ZZUGc4adbLp4u/5VhgbLykf5Lp9PWdTgB4fb+saay6+y
WYN918dGORy9RP1Z+Dh6YPPzExepPwvDHzevKzt3gfqzcKZ0f9GEhjrqz8Jq
/12qJ3fPUz8Id0/17n275Rz1g9DjA82dIV0pi0GIVvfO7+R8lvpBODzfMmbh
uDPUD0auW3LEkbmnqR+M72y7Gx7kfkv9YBwP8/e233qK+sFoOTDgatrlWuqH
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
WXAjP/8PixrOfQ==
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 360}, {-0.7364347192045355, 0}}, DisplayFunction -> 
         Identity, AspectRatio -> 0.25, Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 12, 
         FrameTicks -> {{{{-1.5, 
              FormBox[
               RowBox[{"-", "1.5`"}], TraditionalForm]}, {-1.4, 
              FormBox[
               RowBox[{"-", "1.4`"}], TraditionalForm]}, {-1.3, 
              FormBox[
               RowBox[{"-", "1.3`"}], TraditionalForm]}, {-1.2, 
              FormBox[
               RowBox[{"-", "1.2`"}], TraditionalForm]}, {-1.1, 
              FormBox[
               RowBox[{"-", "1.1`"}], TraditionalForm]}, {-1., 
              FormBox[
               RowBox[{"-", "1.`"}], TraditionalForm]}, {-0.8999999999999999, 
              FormBox[
               RowBox[{"-", "0.8999999999999999`"}], 
               TraditionalForm]}, {-0.7999999999999999, 
              FormBox[
               RowBox[{"-", "0.7999999999999999`"}], TraditionalForm]}, {-0.7, 
              FormBox[
               RowBox[{"-", "0.7`"}], TraditionalForm]}, {-0.6, 
              FormBox[
               RowBox[{"-", "0.6`"}], TraditionalForm]}, {-0.5, 
              FormBox[
               RowBox[{"-", "0.5`"}], TraditionalForm]}, {-0.3999999999999999, 
              FormBox[
               RowBox[{"-", "0.3999999999999999`"}], 
               TraditionalForm]}, {-0.2999999999999998, 
              FormBox[
               RowBox[{"-", "0.2999999999999998`"}], 
               TraditionalForm]}, {-0.19999999999999996`, 
              FormBox[
               RowBox[{"-", "0.19999999999999996`"}], 
               TraditionalForm]}, {-0.09999999999999987, 
              FormBox[
               RowBox[{"-", "0.09999999999999987`"}], TraditionalForm]}, {0., 
              FormBox["0.`", TraditionalForm]}, {0.10000000000000009`, 
              FormBox["0.10000000000000009`", TraditionalForm]}, {
             0.20000000000000018`, 
              FormBox["0.20000000000000018`", TraditionalForm]}, {
             0.30000000000000004`, 
              FormBox["0.30000000000000004`", TraditionalForm]}, {
             0.40000000000000013`, 
              FormBox["0.40000000000000013`", TraditionalForm]}, {0.5, 
              FormBox["0.5`", TraditionalForm]}, {0.6000000000000001, 
              FormBox["0.6000000000000001`", TraditionalForm]}, {
             0.7000000000000002, 
              FormBox["0.7000000000000002`", TraditionalForm]}, {
             0.8000000000000003, 
              FormBox["0.8000000000000003`", TraditionalForm]}, {
             0.9000000000000004, 
              FormBox["0.9000000000000004`", TraditionalForm]}, {1., 
              FormBox["1.`", TraditionalForm]}, {1.1, 
              FormBox["1.1`", TraditionalForm]}, {1.2000000000000002`, 
              FormBox["1.2000000000000002`", TraditionalForm]}, {
             1.3000000000000003`, 
              FormBox["1.3000000000000003`", TraditionalForm]}, {
             1.4000000000000004`, 
              FormBox["1.4000000000000004`", TraditionalForm]}, {1.5, 
              FormBox["1.5`", TraditionalForm]}}, None}, {{{0, 
              FormBox["0", TraditionalForm]}, {30, 
              FormBox["30", TraditionalForm]}, {60, 
              FormBox["60", TraditionalForm]}, {90, 
              FormBox["90", TraditionalForm]}, {120, 
              FormBox["120", TraditionalForm]}, {150, 
              FormBox["150", TraditionalForm]}, {180, 
              FormBox["180", TraditionalForm]}, {210, 
              FormBox["210", TraditionalForm]}, {240, 
              FormBox["240", TraditionalForm]}, {270, 
              FormBox["270", TraditionalForm]}, {300, 
              FormBox["300", TraditionalForm]}, {330, 
              FormBox["330", TraditionalForm]}, {360, 
              FormBox["360", TraditionalForm]}}, None}}, 
         GridLines -> {{0, 30, 60, 90, 120, 150, {180, 
             Directive[
              Thickness[Large], 
              GrayLevel[0], 
              Dashing[{Small, Small}], 
              Opacity[0.75]]}, 210, 240, 270, 300, 330, 
            360}, {-1.5, -1.4, -1.3, -1.2, -1.1, -1., -0.8999999999999999, \
-0.7999999999999999, -0.7, -0.6, -0.5, -0.3999999999999999, \
-0.2999999999999998, -0.19999999999999996`, -0.09999999999999987, 0., 
           0.10000000000000009`, 0.20000000000000018`, 0.30000000000000004`, 
           0.40000000000000013`, 0.5, 0.6000000000000001, 0.7000000000000002, 
           0.8000000000000003, 0.9000000000000004, 1., 1.1, 
           1.2000000000000002`, 1.3000000000000003`, 1.4000000000000004`, 
           1.5}}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 800, Method -> {}, PlotLabel -> 
         FormBox[
           StyleBox["\"N=5\"", {16, 
             GrayLevel[0]}, StripOnInput -> False], TraditionalForm], 
         PlotRange -> {{0, 360}, {-0.7364347192045355, 0}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           StyleBox["\"\[CapitalSigma]cos/2\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(A)\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(B)\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(C)\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(D)\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(E)\"", 16, StripOnInput -> False]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}]}], "]"}]& ), Editable -> True], TraditionalForm], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.005555555555555556], 
             AbsoluteThickness[1.6], 
             GrayLevel[0]], 
            LineBox[CompressedData["
1:eJxdmDtsXEUUhicBiWAgckGBeOnaIIjAIPNOgJA/IeRts3FiDIkdz+5632vv
2vfuFkiRpoB+K6oQXYkOmoXCEaHI8Gx4LSExCQLpIgoe1dICBSBAmv9PE336
z5kzZ87M3l8eK7RmSpuNMdVNxvzz////tl56o71z5KcL/9Jw16WNkA1Gvgl5
C64nHhX9ZvxM+bdgfRDy7Xj565AjnKf4cXxOfDf+IL4HE8Tb8DvxfdhM+5mQ
/T0oPCn8EG4kfhg3ED+CEar3qOQ/hvdJfxxfED8h8duFd0i9J/Ha5ZCfwp20
3tOSvxN14mdw5krIuyQeOH01YAfUKH43psN4t1vy92AsjHd7sED5z3K8EzZ7
+bzdXtGfk3xhs0/0fdhK+n6cJn0/WqQfwDrpB2T9gzwPdxDjpB/CNtIPYYL0
w3iA9MP4k/Qj/J7cEak/Jf1Nyf2YFn0a20l/XnRhk2OGsBP2wuao5As7YX9U
fj9meP6YkfwZ7tcLm2PMEHbHpL6wOS77F3bC/rjUn5X8Wak/y/160c0Lki/s
hL2wmZP+5+Q+zUm+sHlR6gs7YS9sXpJ8YSfshc0JyRd2J+T8RDcnWYewO8n3
y4tu5qX+vOSL7udlfgtSf0HmvyD5C3iHfr9PyfxOSf/CXuLNoux/EZXwe+EW
8WVYzy/iItW3uBpyZPFjyLC8vhV2FteE8alFQvUsiiFnf8fT/vPYEnKUl37y
3K/Ny3yEU8n3eZ5/lscr9D0t4HLIUUHqF/BRuH9bwDk63wI+C/1TWpDfqwI+
CeOzAj6g8y9yvaiIM1S/iO+p/6LcL8lPRfdF3Eb9C5slPr9oCRHVX5LzX5L5
C6fCXvKzJZ63KeFaql/CW3T/SnxfbAm/hror4Vu6fyWcD+fhSzh7Maxfwm90
/mU5f2GU+XxsGRtUv4ybaP5lkH/2sl5WlvdbkfoV/EL9V9g/2wr7Z1fBu9R/
hf2mr7B/ziq4n/qvsn+OqthE/Vf5/diqvL+qzF/ivehZVfxzTd5/DZ76r3E/
tib3TzgV9jX2z1kNEdWvy/nX0aD+63g99LNW4l2d/XNaZ//s65ii/iXfNDAe
xkcNzIeMhty/hrz/Bp932pD+hTNh0+T1oib7ZzTZP9sm2lS/iXNUvyn1Zf2s
ibuo/jLupfrL7J+xzP7ZLrN/dssyf2EvnAmbFel/BTuovuh2ReYveiq6F85W
xH+0eH5RS/xAS+bfkvoSn4ruhTNh02YeFY7avP6k6Gjz/nKiW8lvi+6Ee8Kp
5PdF96IPRM+Eh8JmVfoXjlalf9GxKv1LvJX4tuhO9J5wKuv3V+X3VeIHwpnw
UNisSf9r4gfWpH/RIZyT9axwW9ZzoveEU+H+Gt6m75vUHwhnkj8UNrH0H7N/
jmL+e9RkjK/o+xSzf87F+IG+VzHvpy31XMz+uRcjpu95zP65H/Pft3zM38+B
1Muk3lB0kzCPCkcJ508meDU8HyTYCDkn8TbBx+H+2wnWyT8n+DT0Tz3JTxP2
z/0EH9L8E3n/Cc5S/wm+o/5lfdPh9zTakfffwR3Ufwe30v2X+FwHY9S/6O2O
3H/hnsSnsr9+B9fR/DvsnwcdvEl+T/Rhh/2l6bJ/Hu3ivXAeUZf982SX/TO6
0r+wFW53ceW//L8Ak7obXQ==
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.005555555555555556], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1: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
Gs6/Sg2aTT7+H1je5So=
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.005555555555555556], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 0]], 
            LineBox[CompressedData["
1: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
8/8AEbDWmQ==
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.005555555555555556], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1: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
gb91Z+8zWYcnke8W9w5jbdfhj5X+t2o38fdfCkrH6UpuX2KtToH73Izfp/dj
71ukIGuL+GVlJGvh5bzl0ccjPuXv4xT0pH62pkDhZzkFu6mf7Sl/83Oq0s/q
VMjUz0hV+llIxR3qZykVzdTP1lSln+VUpZ/tqX/zcxqSqZ/VaUo/Iw2HqJ+F
NKWfpTRoqJ+taUo/y2noQf1sT0Ozws/p6EH9rE7HAepnpCv9LKRjCvWzlK70
szUdoH6W09FE/Wx/2Qo/ZyCO+lmdgZ3Uz8jAOepnIUPpZykD7tTP1gyln+UM
zKR+tmfAqvBzJvKpn9WZ8KZ+RibcqZ+FTJygfpYylX62ZsKJ+lnOVPrZnok7
Cj9noYL6WZ2l9DOylH4WspR+lrJQSv1szVL6Wc5CI/WzPQtNCj9nI5n6WZ2t
9DOycZj6WchW+lnKRij1szUbNupnOVvpZ3s2Nin8rMcd6me1Xuln6JV+FvRK
P0t6+FE/W/Vwp36W9Uo/2/V4oPBzDsZSP6tzoKV+Rg7eoX4WcjCD+lnKQQP1
szUH31E/yzl4k/rZnoMShZ9F1FE/u4j4gvpZLaKe+tlTRAL1M0S8Rv2sEfGc
+lkQEUD9LIrYRf0siRhL/ZwvYjX1s1VEJ+rnChFR1M+yiG7UzzZR6We7CGfq
5zYROoWfDbBRP7sYsJD6WW1AIfWzpwFfUT/DgM+onzUG+FE/CwZEUj+LBjhQ
P0sGvKB+zjfAQP1sNeAX6ucKAxxPED/LBmRSP9sMyKd+thvgRv3cZoBZ4Wcj
3KifXYw4Qf2sNsJM/expxG7qZxjxDfWzxohU6mfBiHrqZ9EIPfWzZEQa9XO+
EXnUz1YjXqd+rjDCmfpZNqKM+tlmxCXqZ7sRPtTPbUZ8qfCzCf7Uzy4mDKB+
VpswmfrZ04RD1M8wYTD1s8aEFupnwYTF1M+iCcMVfn55PernfBPuPSV+tprg
Q/1cYcID6mfZhGnUzzYTaqmf7SZUUT+3mfAt9bPKjIfUzy5m6Kmf1WZspn72
NGM79TPMWE79rDFDTf0smLGH+lk0Y7/Cz2Y0Uj/nmxFE/Ww1o5r6ucKMAupn
2Ywt1M82M3Kpn+1mlFM/t5kRTf2ssqCG+tnFgmzqZ7UFr1A/e1rgTf0MC1qo
nzUWDKR+Fiy4Tv0sWlCl8LMFr1E/51vwmPrZasFB6ucKC/ypn+WX+9TPNgue
Uz/bLUo/t728PvWzKhejqZ9dcrGY+lmdi/vUz5656KB+Ri5KqJ81uRhK/Szk
wkj9LOb+5ef/Asd83b0=
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.005555555555555556], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 1]], 
            LineBox[CompressedData["
1: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
w13qE/h4P4s+DON84+P9o/qwlPpI8/F+1n28r0wS7+dwifeZIPF+Nku87yBh
B/VfooRK6kNRQgb1oyTxflYk3p8lEvpRn6oSrlC/VkhIpb7VJJyg/q2V8CH1
sS6hN/Vzi4TFnJ/9OErXh/uRQX+/4Of9bPajP3198POvP9HP+1n0t3n//jaf
L/woo8+vxI8Z9Pmqfsynz7/Cj7N0f7RfXg/dv1o/v7+6H73p/rf4sYLzs4w9
9PyEy4im50uQeT+bZf7zHWS8Rc9vooxwer5FGTfo+ZdkHOU+X8q8n0tk3s+q
jHp6/ypk3s+aDJne31oZ2+n91mXsp/e/RcYqzs8BVND+ER5AF+pnIYC71M/m
AKqonxFAZ+rnxADvZzGADbT/SQHc4/wcQMdxpH+WBBCkflYDkKmfKwL4lvZn
LYBrtH/XBnCJ9nc9gDG0/7cEMJH7/0oQQ+j8CA9iG50vQhDb6fwxB7GL+hlB
3s+JQTyh800Mog/1sxTEfc7PQfSifi4J4gydr2oQ06mfK4J4l/pZC6I9nd+1
QYyiftaDGEn93BKEl/v/WggXqB/CQ3BSXwghbKJ+Noewm/oZIcyjfkkMwUL9
LIaQTP0jheDg/BxCGfVTSQjtqa/UEN6g/qoIoSP1mRZCMfVzbQgXqZ/1EATq
55YQaqifTUUoo34OL0IJ9bNQhAbqZ3MRTlE/o4j3a2IRiqhvxSK8Sv0rFf3f
z/8BB9f1GQ==
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.005555555555555556], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 1]], 
            LineBox[CompressedData["
1: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
M8y4Qv0cYUYP9bNgRgv1s9aMb5mf/wfPw9+q
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.005555555555555556], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0.5, 0]], 
            LineBox[CompressedData["
1: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
+tmU9aef/wsbJ+0K
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 360}, {-0.7200000000000696, 0}}, DisplayFunction -> 
         Identity, AspectRatio -> 0.25, Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 12, 
         FrameTicks -> {{{{-1.5, 
              FormBox[
               RowBox[{"-", "1.5`"}], TraditionalForm]}, {-1.4, 
              FormBox[
               RowBox[{"-", "1.4`"}], TraditionalForm]}, {-1.3, 
              FormBox[
               RowBox[{"-", "1.3`"}], TraditionalForm]}, {-1.2, 
              FormBox[
               RowBox[{"-", "1.2`"}], TraditionalForm]}, {-1.1, 
              FormBox[
               RowBox[{"-", "1.1`"}], TraditionalForm]}, {-1., 
              FormBox[
               RowBox[{"-", "1.`"}], TraditionalForm]}, {-0.8999999999999999, 
              FormBox[
               RowBox[{"-", "0.8999999999999999`"}], 
               TraditionalForm]}, {-0.7999999999999999, 
              FormBox[
               RowBox[{"-", "0.7999999999999999`"}], TraditionalForm]}, {-0.7, 
              FormBox[
               RowBox[{"-", "0.7`"}], TraditionalForm]}, {-0.6, 
              FormBox[
               RowBox[{"-", "0.6`"}], TraditionalForm]}, {-0.5, 
              FormBox[
               RowBox[{"-", "0.5`"}], TraditionalForm]}, {-0.3999999999999999, 
              FormBox[
               RowBox[{"-", "0.3999999999999999`"}], 
               TraditionalForm]}, {-0.2999999999999998, 
              FormBox[
               RowBox[{"-", "0.2999999999999998`"}], 
               TraditionalForm]}, {-0.19999999999999996`, 
              FormBox[
               RowBox[{"-", "0.19999999999999996`"}], 
               TraditionalForm]}, {-0.09999999999999987, 
              FormBox[
               RowBox[{"-", "0.09999999999999987`"}], TraditionalForm]}, {0., 
              FormBox["0.`", TraditionalForm]}, {0.10000000000000009`, 
              FormBox["0.10000000000000009`", TraditionalForm]}, {
             0.20000000000000018`, 
              FormBox["0.20000000000000018`", TraditionalForm]}, {
             0.30000000000000004`, 
              FormBox["0.30000000000000004`", TraditionalForm]}, {
             0.40000000000000013`, 
              FormBox["0.40000000000000013`", TraditionalForm]}, {0.5, 
              FormBox["0.5`", TraditionalForm]}, {0.6000000000000001, 
              FormBox["0.6000000000000001`", TraditionalForm]}, {
             0.7000000000000002, 
              FormBox["0.7000000000000002`", TraditionalForm]}, {
             0.8000000000000003, 
              FormBox["0.8000000000000003`", TraditionalForm]}, {
             0.9000000000000004, 
              FormBox["0.9000000000000004`", TraditionalForm]}, {1., 
              FormBox["1.`", TraditionalForm]}, {1.1, 
              FormBox["1.1`", TraditionalForm]}, {1.2000000000000002`, 
              FormBox["1.2000000000000002`", TraditionalForm]}, {
             1.3000000000000003`, 
              FormBox["1.3000000000000003`", TraditionalForm]}, {
             1.4000000000000004`, 
              FormBox["1.4000000000000004`", TraditionalForm]}, {1.5, 
              FormBox["1.5`", TraditionalForm]}}, None}, {{{0, 
              FormBox["0", TraditionalForm]}, {30, 
              FormBox["30", TraditionalForm]}, {60, 
              FormBox["60", TraditionalForm]}, {90, 
              FormBox["90", TraditionalForm]}, {120, 
              FormBox["120", TraditionalForm]}, {150, 
              FormBox["150", TraditionalForm]}, {180, 
              FormBox["180", TraditionalForm]}, {210, 
              FormBox["210", TraditionalForm]}, {240, 
              FormBox["240", TraditionalForm]}, {270, 
              FormBox["270", TraditionalForm]}, {300, 
              FormBox["300", TraditionalForm]}, {330, 
              FormBox["330", TraditionalForm]}, {360, 
              FormBox["360", TraditionalForm]}}, None}}, 
         GridLines -> {{0, 30, 60, 90, 120, 150, {180, 
             Directive[
              Thickness[Large], 
              GrayLevel[0], 
              Dashing[{Small, Small}], 
              Opacity[0.75]]}, 210, 240, 270, 300, 330, 
            360}, {-1.5, -1.4, -1.3, -1.2, -1.1, -1., -0.8999999999999999, \
-0.7999999999999999, -0.7, -0.6, -0.5, -0.3999999999999999, \
-0.2999999999999998, -0.19999999999999996`, -0.09999999999999987, 0., 
           0.10000000000000009`, 0.20000000000000018`, 0.30000000000000004`, 
           0.40000000000000013`, 0.5, 0.6000000000000001, 0.7000000000000002, 
           0.8000000000000003, 0.9000000000000004, 1., 1.1, 
           1.2000000000000002`, 1.3000000000000003`, 1.4000000000000004`, 
           1.5}}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 800, Method -> {}, PlotLabel -> 
         FormBox[
           StyleBox["\"N=6\"", {16, 
             GrayLevel[0]}, StripOnInput -> False], TraditionalForm], 
         PlotRange -> {{0, 360}, {-0.7200000000000696, 0}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           StyleBox["\"\[CapitalSigma]cos/4\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(A)\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(B)\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(C)\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(D)\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(E)\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(F)\"", 16, StripOnInput -> False]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                   ",", #7}], "}"}]}], "]"}]& ), Editable -> True], 
         TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.005555555555555556], 
             AbsoluteThickness[1.6], 
             GrayLevel[0]], 
            LineBox[CompressedData["
1:eJxdmGuoFGUYx8cUUZLa6lB9EBlDRCti7W6d9O81L0fdc/bcr7N79r5nd2dm
ZzbFLiOWUUYtEVFoMpKYFsR2Ifpg9Zp9toX6oAUxUlBhyIp+CUUqonz+r1/k
z3OeeeZ93+d9/r/ZxelaX/YGwzAKswzjn///+7f5wt7XFs47/9W/qrO692Wp
Dcw7KvU8HFFSx9D+QeouXLws9Z3YePPzQi/E98ulNuGsl/ounJ6Uegl27pR6
Kc43pV6Gg+9JfTfmn5D6XnQH8n3uQ4J0HEXSKxCQvh9vkH4Ax0k/iBOkH0Kb
9MOISD+CC6QfxRXSKzF7j9SPYT7px7GAdLemn8Bc0qtwjZ6/WqsPnJU6AL6h
+Bp8QPE1eIXia1Gl+Fr0UHwd7qH4Oiyg+Hp0npPx9TgjtbEBpyi+AR9RfCPe
pfhGHKT4k3iT4po2NuEtim/S8jfjEMU34wjFt+A4xbegXJHxrfhsp4xvBX6S
/dmDn88tfv96vEdb3za06PnbsGy/jG/Hh/tkfDtuovPfgXC3jO/ALPk+RgK/
PSU0Elj4jPz7BHpeElolcOkdmd+L+AmZ3wv1i8zvxdk7xHpVL24bkOvvg3dA
aPQh9bvQQR+Odb8g8vvQfF1oI4k/fxUaSexeuU/kJ/H0XqFVEsHXQhv9WHJJ
aPRj960vivx+dC0SWvWju0toYwCzL8v8ARS/kPUHkHRk/QEcukXWH8Ssw/L9
B7G3P9e8nj+Iax9/K/IHEci4MaTlD+GgfH4wpNUfQkG+nzGMufT+w7y+YBi3
0/qHeX+MESyl/Rvh/Q1GtP0f4fMxRnGFzm+UzzcY1c5/FJbsD2NM658xdMn+
Csa0/hvDSdmfxjhWUP+O46Ls72Ac26n/x7FI3g9jQrs/EzDovk/w/VMTiNH9
nOT7i0kslfc7mOR5oDRtTOGcnB+Y4vkSTOFz+T5qSptPFs8v0+L5Bovnn2Xh
AM0ji+dnaPF8VVo8srT5muJ6ZorXhxROUv0U+0OQYv8IU+wvKsX+E6U0f0qz
f5lp7JcaafZ7K41T5Gdp9s8wzf6q0uy/URpz6PyncaPU5jT7ObS4Nc35wTTz
Qzit1Z9m/oimNT7JML+YGV4vMsw/Vob5KMgwP4UZJKl+hvkrymh8lmV+M7PM
d8hil+Q/K8t8GGRhS34Ms/hO8qXKMn9GWY1Pc8yvZg5HJd8ix/xr5ZCUfBzk
QPwc5kD8rLT8SHu+kcdpqp/HJfl+yPP7W3leX5Bnfg7zaMv9UXk05P5FefxB
/FzQ9r/A54MCn59VQC+dfwEFOv8C94cqcP9EBY2fi/iS+q/I/Yki969V5P4O
ilr/F/l+qCLzc1TU+KjE980sMT+jhKtUv6TVL+FHql9iflYlXm9U0vi5jBla
f5nnE8o8v6wyz7egrM2/Ms9HVWZ+jsrMk8aMNn9neD5jhue5NaPx8gzepvpa
vppBSPW1ekYFx6h+hf0JFXwq/cuqaP5WYf8LK7w+VcEnVL/C/mpU0ZL+a1a5
P1Bl/7aqzM9Blf0/rDIfqCrzQ1RlvjBqzM9mjfkENZyR/GLVmJ+DGhqSf8Ia
87OqMT9FNbxK/Gwzf8Vs7JJ8Ztp4VvJb3Ga+g838l/g7X/KhZTM/2jZWEV/a
mCP5s2kzP4c282vLZr5VNvNv28YeyceRjauSnzta3HA4P+bw802H68cdfj84
zP8Jh/nZcrT1O7w/gcPfH02H9zd0eP9bDp+Pcvj82g7zc+Tw+Xcc7g/DZX6O
udxfpsv8HHe1/nS5fxMufx9aLve/7fL9CFy+P00Xs+X9Cl0clvev5fL9VC7z
c9vl7+PI5XnQcTV+rvP3d6zO88Ws8/yJ17X5VGd+TtR5vll15me7rvFznedp
s87zNtR0S8tXdRyVul3n9UV15udOXft9xWP/iHnsL6aH5VLHPc2fPPavhMf8
bHnsf7bH/hh47J9Nj/019Nh/Wx77s/KYj9se90fksf93PI2/feaHmM/1TZ/5
I+5rfOIzPyd87XvBZ/6xfY2ffeRo/T7zVegzf7V85jPlM7+1febnyGf+6/ja
76sN5udYg/nSbGCT5M94g/kZDebXRIN/H7YamCv51278z89/AdEM59M=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.005555555555555556], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1:eJxdmH1wFPUZx1egJULAS6oIbUc2yoAjASIvBkTkC8g7gcsbeQ+b5O5yl9zl
9l4xUGQNI5bSQlASBQRXTIHOFAyQECovbqrC2DpMeGuYYnULgTDWOiGgjARs
6XR/M8+z+Sfzneeeu939Pb/v97O/lPJglrufJEnehyTpf//Fn+vixJyWo//4
6P+qZ+bdbbtH/+K40BKa5TsNi04JnYCvtx99Z1Kn0A74k8KBE98K/SiGXmv9
y6eJX1p6OL7o+tnalGeF/iWaVvXvfadIaBlXfEl/u7dR6Cfh+OCJb35sF3oU
cHBUZ+F9oUej+Tcf9/15xleWfhrf9l3yXKsT+hkoCWuP+D8XOhU3zG2aNMS0
9Hg0qOlFTVOETsOO0peP3V4h9LPYteCD4CcbhZ6IhDGzd18/KvQkLErLnjCh
W+jJKDqWfzM87J+WnoJjjRjw63lCP4d9k+/+OHel0OlISVz91Pp9Qk9F7Wnt
taf+LvQ0PHr+V0/3Db5i6ecxePPkx76ZIfR0JA37U2VnUOgXsKzdt1x/T+gZ
qOt3cmLqeaFfxL+ONLrKB1y19Ewc2npRSZ0iNPBGy60dMbelNSC3ZH7t2AZR
n4WW7p3pMz4R9VnQG9ov7+gV9dk4NS424nm5y6rPxqq9yvTEDEtLc/DM7qJB
CbWiPgc5Y6Mto5pE/SWsbuvXUnhG1F+Ct/KRtvfviPpcnPkCr98dec2qz8VD
j9f1Fs63tDQP50esa2kPiPo8jHh1Qlnqm6I+Hze3jHduaxP1+Rj/19oNAy+L
+gJ0FiYdjt8X9QVYm3L2P9efuG7VF8Lb5xpZMNPS2kLsOpM34UypqC+Cf95z
++evEfVFWNf3oe/0dlFfjNab0pplbaK+GIfX7J9+5ZyoL0HJnXcD6/4t6ksw
ZMofpIkDu616Bu7+MGfD7ZGW1jLwyP6mg5+ni/pSnGvfu/LEUlFfigEZe659
5hL1Zfhu7aXE72pFfRk+S14ozd4k6k4c6l3Ucfg9S8OJxHue9Rkt4vNOHKtv
S0k+ZWnDidT4vjcHdIr+TMySkk+M6Rb9mbg8Zm/1K9+L/kwktB/IG/yTG1Z/
JhoapCfPJltaysK01plZ50ZaGllwnV2cm5RqaS0LrXevrq5PF/1ZaNwU+yFz
tujPRldD8tW8JaI/G0ewcXxTrujPxqgtew5OLRX92Zj2+3jK4x7Rn4OvfJ8m
zQqI/hxMvNB4uy0i+nNQnXhyxJpa0Z+DHTPXHdjyiujPRWNy/onv60R/Lvbc
fHvc/vWiPxebWws+bt0g+nNxIfOFkUm/Ff3LEV3pPPnR70T/cmi7zt5v3yT6
l6P/lXEPD98s+pejjtalPFt/Hv9+LQ/17Pfz+PVJ+XiLXX8+vz8tH352//n8
+UgFMNnzK8BU+ny1AtvzL+DrIxXa1q8Qb9H11QrRwta/EG46H1IRprL5KcJW
Ol9aER5m81fE51Mqts1vMZ9vrRgfsvkvxhC6P6QSHGT7p4TvL62E7z+jxLY/
S/n+RSmG0v2tlaKP7n+j1OYPK1BM/QMr0Er9RVuBI9R/jBVYz/xJ4f4lK9hJ
/Q0K9z9FwRrqj5rC/VNXMI76q6Ggl/qvqeDnzJ/LcIH6t1zG/R1l3P+VMp4P
WhlW0fzQy3i+GGU8f8wyWz6V4zTNL7mc5xvKef4p5cih+aiV8/zUy9FM89Uo
5/lrlkNj+VzB81uugIPmOyqQSPNfqcAwygdaBV6m/KBXcL4wKrCX8odZgeOM
T1wooPwiu5BB+QYuDKT8o7igUz7SXJyfdBe2Ur4yXJy/TBfyGZ+5Ob/Jbhyi
fAc3XqT8p7iRSPlQc6OL8qPuxj7Kl4ab86fphoPxqQc1lF9lD25QvoUHByj/
Kh5I2wkfax74KT/rHgygdcPD+dn0oIvxcyWq2O9XYhC9PlTy61cq+f1plQ/8
l95/Jedno5I/P7MSLYyfvehlz9+LYro+8KKbrp/iRSNdX82LbWz9vZyfDS9+
SufH9Nr42YdCNn8+Pp/wcX5WfHy+NR/nZ92Hx+j+MHx8/5g+Gz9Xwcn2XxXf
n6jC13T/KlWcn7Uq2/6v4vxsPPg89Q+zysbP1Zyf5WruT6jGWOpfSjX3N62a
87Nezf3RqOb+aVbb+NnP+Vn2c36Gn/Oz4kcq9XfNj0vM//2cnw0/zw/Tz/NF
CsDH8ifA+RkBzs9KAG0s3wKcn/UAhtJ8NAI8P82AjZ9rcIHmr1yD/jSfUYNb
NL+VGlu+13B+1ms4Pxs1OE75wayx8XOQ84cc5HyCIOdnJWjjmyDnZz3I+dkI
4jDlJzNo42eV85dDRRvlM1nl/Jamcr6DyvnPqXI+VFTUUH5UVexkfKly/qxX
OZ/qKjZRfm1WcZHyraFy/u1QOT+bKufnHltdCiFO+x0hnKffL4f476eFsJde
H0L8+p0hzs9KiL8/qCFMYu8XIXxJn199iL+f6CGMps+/OcT52QjhKl2/jhBf
XzPE+bknxOdDCvP5cYTxBp0vOcz5OS1sm88wn19nmM+3Eubzr4YxmL1fhvn+
qQ/z/aWHOT83hzk/G2HOzx1hvr/NMH9/7glzf5Ai3D8cERyh/iJHuP+kRfAa
86cIqqh/OSN4l/qbEoGP+p8a4f6oRbh/1kf4+YQewS3qv80RDKf+bES4f3dE
uL+bEe7/PQ+ul52vRHl+OKLIpvkiR3n+pEVt+RTl+eWMYhfNNyXK80+N2vg5
yvOzPoqDNF/1KM/f5ihepflsRDk/d0SRTPPdjGIQzf+eKOdnKcb5wRHDKMoX
cozzc1qMn+8hxvnZGeN8o8T4+aEaw07GzzHOz/Uxfj6pxzh/NcdQSvnMiKGH
8ltHjJ+PmjF+ftoT4/wsxfn5qyOOPZQv5Tjnz7S4jU/j/PzXGcd1yrdKHH+k
/KvGcc86X/4vynTkVg==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.005555555555555556], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 0]], 
            LineBox[CompressedData["
1:eJxd1ntQ1PUax/GFsMisQFGsU82KSl44tpoi3j8oAZLgchUQ5Md1WZbLXgkY
5GyoCEqKSo54qT1SXrAaAtT0IPxKMy0rSiNF1FXBPAwWmSZjVscz/Z6Z55v/
OO95eHwY/O2P15i0gqhMV5VKle2iUv3/b/pj9Y3XfnO6p/2vGlig9dncqt1K
rcKDbTsH96dSu2PKmvgz9ydTe6B/49kR6XevK+2FCdvnbnRrox6NwUULD7hW
UD+HgPgTC8vDqdVwD7iVuN+L2geVx251vXXxmtLjYN3TiHW7qX3Rvfq/0Vv0
1BPg73vj/FUN9SRENNiDdg1eVdoP782vMPfL1FMwzVmVcreKWoM9tU0/dEdT
T0Xj8y3rTr5APQ0+4eP9z/U5lX4Z1zaVj/L9iHo65rbMLOiqoJ6Bshc7i59c
Ru0P17WWJRcmUM/E+v5hGw4MXlE6AL9/+dNTU+upZ+H9NPdT+kjq2Zg3vLfz
tUeo52DX7OnfFR25rPRcdBYF3VpjoZ6H5aYvfm2eSj0fx659vH3EnUtKL0BR
3MSVHx6lBlojdhi2rlHaDqx03bzxsxiaB2JSZn598ASaByIEsROHq2i+EOXV
XvXju7uV+UJs0SR+XtyqtGoRTozcdcrt3zRfhOgdmvyjVTQPwjM6j+zqQpoH
QRr+mDVHR/NXEDK0d/PCJJq/girPDQEusTQPxvwnmos3RdI8GOcm/mPmJWpV
CG6FGIK/pK+3h6DwpYxti5NpHgrPx+uSZmXTPBTfT9rjs4q+H9ViVMz6dXBY
Jc0Xo9d7QlXrTpqHoW7f5GmvtdA8DOd2TVT7fE3zV+Htn5+2u5/mr6LNQ/9n
9zD6+S1Bwl7/F1tfop/vEtztz9s1Mpbm4Qgsife+XErzcPzYdffe3T00j0Bw
c4XborM0j0DekCfDD7jQ//9S7F8VPWPkNKXtS3Fx/aVSXQbNtXjJfOqVqm1K
Q4vivoPPpn1FX69Fc/vZXy4MUZ4/WYvTJ0fMuTCfnsdIvNH67tehxUojEhvX
H3cfflBpeyQMYVcOv3Cb9iPRv0n9pt9o+jxEodXXc2TnTKURhdI39/3LJV5p
exSye1oOv1OktByF6uLOywfraD8aHzUsiJ38H9qPxubdS4781k370ejbcO/G
83/SfjRuf+h3r3IMfb5jkOVwWTA9SGnEYEPDtxHeOqXtMaj1XfzzxHVKyzFw
Gx4+KeN92o/Fr0E9M9o6aD8WrgEuazV3aD8WYZMXnWz2Vt5PciyKluzvwBx6
X8XhfsTsQx0rlEYcwj5p/DipXGl7HOLnHF9y+V3aj8O4A4Ejlp6m/WX4Q15w
al8/7S9DY+Lclb1PK+9T+zJoL4WE/zlNaXkZYq55rhmIpfdtPO5fNWxrLlIa
8bjR1aRetIP247GnefrFumO0Hw+3ik17m67QfgIafhpdUemi/D5AAoZZxm4d
NVZpewLKruq84oOUlhPQc2hJQmgm/f5IROmCGd9fW0P7iTga/fnosXtoP/Hh
+2d+u9tJ2k/E1upq+6pe2l+OKXObxu9w61X2l+NHv+uVIWOVti+H2uvwltWB
SsvLUVmvnReRorQqCe9ErKx0lNJ+ElYHf/n6a3W0n4TsZ+rnfX2Q9pMQmjS7
s/4b2k+G6/F39D/3034yjg495t3y2A1lPxklzz6tujlGaTkZN4+3LKiao7Rq
BVprfX/aEqM0VuDUDJXaLY/2V6Bs/OGu71bT/gq03Qx5bshO2k/BhuWeho1N
tJ+Cy8OnOA2naD8FX33j8+SOS7SfgnxHraf3bdqXUPaeT/XFIT/81WoJ28f3
qnpGKw0JfqubOidPVlqSsPWIFPPBXKXtEmI+efStrHClHRL+KApoWpqstCzB
NzFQl5GrtFOCa3Ja9tslSqtSkdPn/fJva+l+Ktxc8r3MtXQ/FUHtet8/3qb7
qYjrqgmva6D7qZjrWuc/r4Xup2LU92Ex11vpfioOXXv30uoTdD8V0uOxZ579
gu6nofqpNRd3ddD9NGweM3Xto9/R/TT09Pz2RPh5up+GKS4f6PRddD8NJ4YV
JkZfpPtpuB3prnelltMQdqT9St4Fuv/w3z96vbO6k+6no2/HrIC4b+l+Om4s
ffykfIbup0PzWfvY45/S/XR8npTgjD5G99PR0NdWrm+m++mQz83fdn8v3U/H
1pbQT3/fTvfTMfD7G+f11XQ/A+MO1ztnlNL9DJT9EhCUkEP3M+De19f9RRzd
z8AddZNXRSDdz8Anz50b8vokup+B6vhpuw550v0MhP7zaNuYe8rz5sxAXPJO
Q1sXPX+ZGPeIa19Vq9LqTHRWpd4qp+cbmWi0h7bvL1FaysSN22t1qmX0fGdC
O8v77LqpSjsy0eZzYjBiKD3vmahJbr8fc1X5fDoz0W0ZFrT3EH1+sxDR3O2I
Wqe0OgvrhvRqs5Lo85yFoS0dw+/4KS1lwWv9UxM8HtD7KQuF3M+OLAh+lrNE
PzuzoBH8rMMA97NaB1/uZ+hwn/tZ0mE297NdBxX3s0OHCu5nWYci7menDucF
P2dDw/2szkYU9zOysY/7WcqGP/ezPRsN3M+ObNHPcjb8uJ+d2X/zsx6zuZ/V
etHP0It+lvR4nfvZrhf97NDjMPezrMeL3M9OPd4W/JwDJ/ezOgcm7mfk4DT3
s5Qj+tmeg8Pcz44c0c9yDmZyPztzYBD8bEAZ97PagDru54dffZb7WTJgGfez
3SD62WFAAvezbBD97DRgleDnXPhzP6tzRT8jV/SzlIsS7md7LtTcz45c0c9y
Lsq5n525+FHwcx7e4H5W5+Fb7mfkYQT3s5SHo9zP9jxEcj878nCT+1nOw2Lu
Z2ce7gp+zkcI97M6Hyncz8hHG/ezlC/62Z6PydzPjnyYuZ/lfBzjfnbm4zPB
zwUo5n5WF2AL9zMKsJ77WSoQ/WwvgMz97ChAGfezXIAc7mdnwd/8bMQh7mcP
I2q5n9VG9HM/a4y4w/0Mo+hnrRGV3M+SEdu5n41GuHM/240Y5H6uMT58nzE/
O4wI5X5uNKKE+1k24gH3c4cREdzPTiNWcD8PGKEW/GwS/exhEv2sNiGO+1lj
gpb7GSY84H7WmtDD/SyZsI/72WjCo9zPdpPo5xoThnI/O0yinxtNop/lh3Pu
5w4TWrifnSb4cT8PmLBN8LNZ9LOHGX3cz2qz6GeNWfQzzNjN/aw1i36WzMji
fjaaEcT9bDfDjfu5xoxW7meHGUXcz41m0c+yGTL3c4dZ9LPTjBLu5wHz3/xs
QQ33s4cF3dzPagvOcD9rLMjlfoYFpdzPWovoZ8ki+tlowTbBzxZouZ9rLFAV
Mz87LKKfGx/OuZ9lC7K4nzsscOV+dloQzP08YEES97PKKvrZwyr6WW1FC/ez
xir6GVbRz1orarmfJavoZ6MVfoKfrWjjfq6x4g73s8Mq+rnRihruZ9kq+rnD
KvrZacUU7ucBq+hnlQ37uJ89bKKf1TbRzxob+rifYRP9rLWhnPtZsmEo97PR
hkHBzw/vcT/X2FDD/eywIZj7udGGeO5n2QZf7ucOG85xPzttop8HbLjG/awq
RBT3s0eh6Gd1ITZwP2sKcZn7GYWin7WFqOR+lgpFPxsLMUrx8/8AZ5rZTQ==

             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.005555555555555556], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1: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
Qm/WyjTESd/5NoawRhp09xe5ixrWQhp2nql28V7E2poGmZ9tabhO/Sylyf1s
T3vCz+lYTv2sTMdg6mek4yz1s5COLOpnazrqqZ9t6XhI/Syl4xb1sz0df12k
fs7AKOpnZQaSqJ+Rge3Uz0IGVNTP1gy5n20Zcj9LGXiF+tme8YSfM3GD+lmZ
iZPUz8iU+1nIRAj1szVT7mdbJryon6VMiNTP9kyUyPychdnUz8osJFI/IwvP
Uz8LWXI/W7OwnfrZliX3s5SFBdTP9ix4yPycLfezMhuDqZ+RjX7Uz0I2Kqif
rdlyP9uyMZX6WcqW+9me/YSfc/Aj9bMyR+5n5Mj9LORgJPWzNQe7qJ9tOXI/
Szk4S/1sz0G0zM967KN+VurlfoYe5dTPgh6nqZ+tetyjfrbpMY76WdJjJfWz
XY9CmZ9zMZz6WZmLeupn5GIm9bOQK/ezNRce1M+2XCRQP0u5KKV+tudirMzP
eThP/azMw2TqZ+TBm/pZyJP72ZoHHfWzLQ/bqJ+lPNRTP9vzsFbmZxGXqZ8d
RSykflaKcKF+VoloDSZ+hgh36me1iBLqZ0GEmvpZFOFB/WwV4Uz9XCyilvrZ
JmIp9XOliD3Uz5KIROrnOhFt1M92Eb0biZ9bRTTL/GxAPfWzo0HuZ6UBjtTP
KgOWUT/DgFbqZ7UBMdTPggGx1M+iAU3vED9bDbhD/VxsQC31s82Au9TPlQZE
UT9LBgjUz3UGTKF+thvQTP3cakBHEPWzEZXUz45GVFE/K43YTv2sMmIZ9TOM
cj+rjdhJ/SwYMZ/6WTRCoH62Pv551M/FRhRSP9uMiKJ+rjRiAPWzZMSr1M91
RuylfrY/vlM/txohyfxswkHqZ0cTnKmflSZMp35WmTCN+hkmHKB+VpswkvpZ
MMGH+lk04Y7MzyY8XE/8XGyS+9lmkvu50oQh1M+SCUupn+tM2Ev9bDfhE+rn
VhOSqZ8VZqynfnY0I476WWnGdepnlRlTqZ9hxlnqZ7UZntTPghl11M+i+Qk/
m+FK/VxslvvZZoYH9XOlGUbqZ8mMGOrnOjNiqZ/tj/fUz61mLKF+Vliwh/rZ
0YIPqJ+VFrxE/ayyoBf1MyxyP6stuEX9LFjgRv0sWhAq87MFzdTPxRbUUz/b
LLhH/VxpgYr6WbLI/VxnkfvZbpH7udWCS9TPinxcpn52zMef1M/KfFyiflbl
Ywb1M/JxjvpZnY9I6mchH1rqZzG/x8//Az/53/g=
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.005555555555555556], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 1]], 
            LineBox[CompressedData["
1:eJxd1nlUVHUfx/GhzCUCEddKPCMaB80F9zX8KMauIsgOctkHGIZZyd3JNbEU
FJMQbcoNzYgUl6cn8ar4qLggaaL5qFOomGlO4g7lY+f5fc/53viH8z7f+XK5
c++599U7JS88/RWVSqVxUqn+/k0/Re/0m1Lo//Oh/5djQqtTUGPLXGoV3iqK
dSvZTd0e4e815Q29Q+2G9h7Ny0s8fxHdBbqgJSiJp+6BFzs/j1Sto+6JqB2L
DtvOUqtR8lWUR0j7RtGecC76/fEPE6n7Ys7jD99ynUvtBe+gQ3UX9lB7I3Wr
o8Mrd6n74+6A0JWmPjdED8DODSdaOsRRD8IS/88elq+m9oH5Zl/VqBrqIdCe
VhVtfEI9FJXVro4T/W6KHoaH43L7lMdRD0etX27dgALqETi7/pR7yAHqkfBo
iU96doN6FB43+4b5uN0SPRqFr9sW3BlDPQbde1+N7JtCPRZ7L15quvIR9TgE
Dn/7iFsF9XhcHOhfc7Se+j3UlwQ8fdxM7Ysb60u0X3dpEj0B+hVH3X4bRg0M
SIssrpou2gos8pwa2FFH84k4HN/1VacVNJ8IZ7+7bQu/pPkkdD16+s6R72g+
CaXdNi211dPcD5tqv7gyuInmfsgLeuoyq4Xmk9FgezPU6npbzCdjYLPH8Wlq
0ar3kVVRue2eD83fx8iOBS8k0Nwfvvkhpyqn0twfHZaU/dwYT/MAeO/SPFBp
aB6A+zd7fehqonkgjg1usLvPp3kgRlf7DemyjOZBGHs2MqHHKpoHYei71i7v
rKN5MFrnLz4/YQPNg3E+uupyro3mIehwf+PAqi00D8HY2scbupfTPBReoVNz
SnfSPBQbfGddDdhF8yno9I5moMfXNJ+CvZX71qqpVVMRp6s9Fkmft07F3YX+
k2X6e6ppkE3pCal0POs0JHyc2m/SVpqHwXPn83VJX4hGGPoN+S2xuow+H4a9
91Z1TF4vWg7DvA9NLsFFtD8dy+Ofr55bQPvTMW1b67Yni2h/On58Yhgnz6H9
6fiusUenBgPth0N9WX3iPbo+CMfj5xeuPUqk/XBc/ylgjyqC9sPRf6RqaVIA
7Ueg3ml7fudxtB+Bwgn7V3sMov0IfDrWp3oB3U9yBHzuB18a5U77M/Bi4bBN
Qa/S/gxs3X/831XNdL/OgLw7vnZ2o2h5BnrdWhr+2Q90/0bizKnmM50Pi0Yk
dpQE7vi1gvYjsdLQzv/tMtqPxPwdBa3lH9F+FGq3dui11kz7Ubil+uD25STa
j8I9vz9q5wfT/sv5Is/GBcNpPxq1G/tvv+pB+9FoXzXKt7Qt7Ufj1JVbznt/
F88DORra8GTdoIv0fIhBzNKjdW0PikYMbnR9Xu67WbQ1Bv5tDi+5SM8fOQZ1
Q46/UpdL+7G4Ynz6k3c47cfiTJrDfmME7ccizrekXZs3aT8Wu07+kba8hZ6H
cehe0Wmk/qpoxGGUR0jjoWrR1jhcurmqzazPRctxMNe9SC9dSPvx0P118I1+
SbQfj9UP74zz8qX9eJR+1DS7uCftx+Pe/dPr8p/T8z0Bnpt7f13XIBoJmP5J
7ZDNVaKtCei/eLTjYaFoOQE3ltV3Paml/UTsPlY8qm8g7Seiaf2TGGd6/1gT
ceyNZw8W/yneT3Ii5n+raVnbQO+rmaifmnB34reiMRMPJtedKi4QbZ2JmsrM
YcWptD8TmwKCYgLH034SXI/899meLrSfhKZ35zQ9uCver9Yk7Bt/2+XPGtFy
El4b9PCDxjJ6/0rYHWq68q1ZtFrCKlPGAXOoaEiovjRdGtNXtCTh9SiPP11a
xfvfKsHsHrHe6YJom4TyY0fe7rtLtCzh+doUadkS0XYJ8/YFeo9NJD8kI0Re
5xU+UrQ6Gb/d6qP6paNoJGPtxNMhf/1qF8dPRucvOxZ9XyPamgy97t7kYTbR
tmT4P/qmZvY80XIyhnqZppbHirYnw3WR95OGUaJVKTD+6/JGz+6i1SnoefLH
/e/fvy6OnwLbunE3mnaLllJQ/tqwtNTZoq0p0PnOOeGYJNqWAnmNe8TJjqLl
FJS53N7tZb8mjv9yf3i7/ZOqRKtSkbd32LOoj0WrU1EfVb+wTCMaqQj7eER0
SJBoKRWz12/2LB0k2pqKy/rMrQd7iLalIrPi+8m324mWU3FhW+7ioNar4vip
OFwUP8vlsWhVGpxfz5qY8Ei0Og2dJ640xz4XjTRs03Yq6vMaHT8NvnFzTOe7
0vHTcP9T49m5A+j4adgx4+xX3vT/ymnQeMx/ei2Hzj8NrdorvcqK6fzTocrZ
Vhl5lM4/He6p472fPaHzT0fwwl0Hc4bS95+Oik5XowqM9P2n44Nffl7T7wB9
/+nYf8n7WYETXf90pG/Z61rQj65/OtqeeWOLI4Kufwb07isvf2al65+Be1cD
tyR+IxoZmLKmxbuTne6/DCSXney93J3u/wys4H62ZeAB97OcofSzPQPRCj9n
Kv2szoSR+xmZaOV+ljIRzP1szYSN+9mWCVfuZzkTC7mf7ZkYrPCzBhruZ7UG
t7mfocFX3M+SBsu4n60azOd+tmmUfpY1+Ib72a5Bi8LPWTjD/azOwkXuZ2Qp
/Sxl4SH3szVL6WdbFrpxP8tZOMD9bM/CZIWfs9HA/azOVvoZ2bjF/SxlK/1s
zcZg7mdbttLPcjZk7md7Ntoo/Jyj9LM6B8Xcz8jBBu5nKefl/cH8bM1R+tmW
g3e5n+UcpZ/tORih8LMWftzPaq3Sz9Aq/Sxp8Tv3s1ULmfvZplX6WdYq/WzX
YrjCz7lQLWB+VueigfsZuXDhfpZyMZr72ZoLb+5nWy5KuZ/lXLhzP9tzsU/h
Zx1mcj+rdUo/Q4dD3M+STulnqw5q7mebDv25n2Ud9nA/23VYqPBzHgq4n9V5
mML9jDyc536W8pR+tuYp/WzLU/pZzkMT97M97x9+1iv97KbHSu5ntR4l3M8+
eozhfoYerdzPYXps536W9Kjmftbr0ZP72arHWe7nwpf73M82PT7hfq7UYy73
s6zHce7nc3rYuZ/tejRxPzv0//CzAae5n90M6MD9rDaghvvZx4Ac7mcYEMH9
HGaAg/tZMsCP+1lvwCXuZ6sB17mfCw04wf1sMyj9XGlABfezbEA37udzBgRy
P9sNuMb97DBgnsLPRmi5n92MWMv9rDaikPvZx4hm7mcY0Zf7OcyIcO5nyYhB
3M96Ixzcz1YjqrifC42wcz/bjPgP93OlEbO4n2UjZO7nc0a0cj/bjajlfnYY
8YXCzya8yv3sZsJ17me1CdXczz4mOHM/w4Qj3M9hJnzK/SyZIHM/601oieR+
NiGf+7nQhO3czzYTnIqZnytNWMn9LJuQy/18zoQH3M92E1ZzPztM6Mb9rDLD
wv3sZkYw97PaDC/uZx8zOnE/www993OYGX24nyUzDnA/6804ovCzGcXcz4Vm
/MD9bDNjG/dzpRml3M+yGUbu53NmnON+tpuRyP3sMCON+1llwX7uZzcLVnA/
qy04xv3sY0G7NczPsEDF/RxmQVvuZ8mCT7if9RakK/xswRPu50ILirmfbRbE
cD9XWvCI+1m2wJn7+ZwF3bmf7RZM4n52WPAl97MqH2ncz275OMD9rM6HjvvZ
Jx8u3M/IRwL3c1g+bnI/S/nw437W5yNF+Pl/AZL8OQ==
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.005555555555555556], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 1]], 
            LineBox[CompressedData["
1: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
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.005555555555555556], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0.5, 0]], 
            LineBox[CompressedData["
1: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
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.005555555555555556], 
             AbsoluteThickness[1.6], 
             RGBColor[0.6, 0.4, 0.2]], 
            LineBox[CompressedData["
1:eJxV1nlYVPUex/ERydIHZCxAKy8e01yuSWhIhNtHAQUXVkF2DjDDzjArGgqM
XkTNJcolQ72MaBJuTVqGQjqZIZoaapoLyHEXNRsvJoim1/vc36/ne/iH5/18
+c5w5izzGpiaH6F2UCgUmd0Uiv/95j9lQY8fNTjfOPj/sk8csvOrky+BtwIe
53T72rS8X8HGoWUd8RbeSiSdLZoadJK3K/5Ys/POhi7e/WApETdNe/sm6/44
FaCuDAjhLUAVX/uh2cT7LXS4Du/9qIL3YPxU1aauPMB7CNq2O6yeK/EeBu+3
N5eXKG6x/ieyS8a/+o0H73cQFxqv7juWtye2FJ7x3xHF2wunJ5h2FGh4j0IP
/8i6eYt4j8YbTsv/9UMF7/ew2u3inZBdvL3hcyFg8Qgb7zFwEN4tSW7i7YOa
c2057Zd5v48zj1on2O/y9kWdkzg8uYP3B2gu7ioL7nabtR8C2sRjtT15j0Wn
blvuXiXvcXj6/cXL0915j8eW5tKihW/wnoDES2JZ2j94T8TLxhqXTg/ewDnP
vt2CB7A2AxMGhfZO/ns+CY96bNw9uT+fT8JW/9Mjn/bj88nY5DVk4SpXPp8M
/YhHeqULn/uj0XFqaeErfO6P4Y/vdp1X8HkAwgb7tYzuZMdvDkDm01EPV97n
n0cgYq70OtF+jc8D4T7IpS7jPJ9PwTynfRfsP/P5FLiVdHdZc4DPp2Lc/KvO
cVY+nwrl+gsxgZv4PAgZ16sDEj7h8yDUXOr2ZLOZz4MxcWtk0cB8Pg/Gzqll
1RcS+Hwayk/+OPpUMJ9Pw8JDY2qdfPh8Oq61/7infCCfT8cD71/KUpz4fAaq
inb3WfSIXc/mGTjVq+1QVyu/vmfik6kxC35u5POZuDh7U8NjK5+H4PTeI2uW
ruPzEDy5EXWzuITPQ7F8nHVri5rPQ/HLO0kHaqbzeRjcbwQqb3mxRhhiiy/N
/9yN/30YiscGXD/8mN3PtjB8nqkZltfC7+9wfKP1eHetjTXCsf6nB9f8N7M2
h8PLJ8avcBHfD8ezkNJ3x2fw/Qj4J0UeLw/i+xHYtmvk0A+H8/0I+C1uVXf1
5PsROG7KOdjvznW2H4kVKeeKzh9ljUg8Ov/78/E1rM2RWNW9Z93MJaxtkRDW
HB7nlMH3Z+Fgn/3vFAfy/Vlw/3J0yJeD+P4s1J09u+Djbnx/FjqeRh7xbb3G
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
sdTPKED33cTPYQVyP4sF6EP9rC2AyPz8X243Amk=
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, AxesOrigin -> {0, -0.42143043601367236`}, 
         PlotRange -> {{0, 360}, {-0.8447402308366317, -0.4415880452909561}}, 
         DisplayFunction -> Identity, AspectRatio -> 0.25, 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, -0.42143043601367236`}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 12, 
         FrameTicks -> {{{{-1.5, 
              FormBox[
               RowBox[{"-", "1.5`"}], TraditionalForm]}, {-1.4, 
              FormBox[
               RowBox[{"-", "1.4`"}], TraditionalForm]}, {-1.3, 
              FormBox[
               RowBox[{"-", "1.3`"}], TraditionalForm]}, {-1.2, 
              FormBox[
               RowBox[{"-", "1.2`"}], TraditionalForm]}, {-1.1, 
              FormBox[
               RowBox[{"-", "1.1`"}], TraditionalForm]}, {-1., 
              FormBox[
               RowBox[{"-", "1.`"}], TraditionalForm]}, {-0.8999999999999999, 
              FormBox[
               RowBox[{"-", "0.8999999999999999`"}], 
               TraditionalForm]}, {-0.7999999999999999, 
              FormBox[
               RowBox[{"-", "0.7999999999999999`"}], TraditionalForm]}, {-0.7, 
              FormBox[
               RowBox[{"-", "0.7`"}], TraditionalForm]}, {-0.6, 
              FormBox[
               RowBox[{"-", "0.6`"}], TraditionalForm]}, {-0.5, 
              FormBox[
               RowBox[{"-", "0.5`"}], TraditionalForm]}, {-0.3999999999999999, 
              FormBox[
               RowBox[{"-", "0.3999999999999999`"}], 
               TraditionalForm]}, {-0.2999999999999998, 
              FormBox[
               RowBox[{"-", "0.2999999999999998`"}], 
               TraditionalForm]}, {-0.19999999999999996`, 
              FormBox[
               RowBox[{"-", "0.19999999999999996`"}], 
               TraditionalForm]}, {-0.09999999999999987, 
              FormBox[
               RowBox[{"-", "0.09999999999999987`"}], TraditionalForm]}, {0., 
              FormBox["0.`", TraditionalForm]}, {0.10000000000000009`, 
              FormBox["0.10000000000000009`", TraditionalForm]}, {
             0.20000000000000018`, 
              FormBox["0.20000000000000018`", TraditionalForm]}, {
             0.30000000000000004`, 
              FormBox["0.30000000000000004`", TraditionalForm]}, {
             0.40000000000000013`, 
              FormBox["0.40000000000000013`", TraditionalForm]}, {0.5, 
              FormBox["0.5`", TraditionalForm]}, {0.6000000000000001, 
              FormBox["0.6000000000000001`", TraditionalForm]}, {
             0.7000000000000002, 
              FormBox["0.7000000000000002`", TraditionalForm]}, {
             0.8000000000000003, 
              FormBox["0.8000000000000003`", TraditionalForm]}, {
             0.9000000000000004, 
              FormBox["0.9000000000000004`", TraditionalForm]}, {1., 
              FormBox["1.`", TraditionalForm]}, {1.1, 
              FormBox["1.1`", TraditionalForm]}, {1.2000000000000002`, 
              FormBox["1.2000000000000002`", TraditionalForm]}, {
             1.3000000000000003`, 
              FormBox["1.3000000000000003`", TraditionalForm]}, {
             1.4000000000000004`, 
              FormBox["1.4000000000000004`", TraditionalForm]}, {1.5, 
              FormBox["1.5`", TraditionalForm]}}, None}, {{{0, 
              FormBox["0", TraditionalForm]}, {30, 
              FormBox["30", TraditionalForm]}, {60, 
              FormBox["60", TraditionalForm]}, {90, 
              FormBox["90", TraditionalForm]}, {120, 
              FormBox["120", TraditionalForm]}, {150, 
              FormBox["150", TraditionalForm]}, {180, 
              FormBox["180", TraditionalForm]}, {210, 
              FormBox["210", TraditionalForm]}, {240, 
              FormBox["240", TraditionalForm]}, {270, 
              FormBox["270", TraditionalForm]}, {300, 
              FormBox["300", TraditionalForm]}, {330, 
              FormBox["330", TraditionalForm]}, {360, 
              FormBox["360", TraditionalForm]}}, None}}, 
         GridLines -> {{0, 30, 60, 90, 120, 150, {180, 
             Directive[
              Thickness[Large], 
              GrayLevel[0], 
              Dashing[{Small, Small}], 
              Opacity[0.75]]}, 210, 240, 270, 300, 330, 
            360}, {-1.5, -1.4, -1.3, -1.2, -1.1, -1., -0.8999999999999999, \
-0.7999999999999999, -0.7, -0.6, -0.5, -0.3999999999999999, \
-0.2999999999999998, -0.19999999999999996`, -0.09999999999999987, 0., 
           0.10000000000000009`, 0.20000000000000018`, 0.30000000000000004`, 
           0.40000000000000013`, 0.5, 0.6000000000000001, 0.7000000000000002, 
           0.8000000000000003, 0.9000000000000004, 1., 1.1, 
           1.2000000000000002`, 1.3000000000000003`, 1.4000000000000004`, 
           1.5}}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 800, Method -> {}, PlotLabel -> 
         FormBox[
           StyleBox["\"N=7\"", {16, 
             GrayLevel[0]}, StripOnInput -> False], TraditionalForm], 
         PlotRange -> {{0, 360}, {-0.8447402308366317, -0.4415880452909561}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           StyleBox["\"\[CapitalSigma]cos/5\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(A)\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(B)\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(C)\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(D)\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(E)\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(F)\"", 16, StripOnInput -> False], 
           StyleBox["\"cos(G)\"", 16, StripOnInput -> False]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0.6, 0.4, 0.2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                   ",", #7, ",", #8}], "}"}]}], "]"}]& ), Editable -> True], 
         TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 Editable->False,
 CellChangeTimes->{
  3.7684985387478695`*^9, {3.7684985965995393`*^9, 3.768498610830542*^9}, {
   3.7684989231530294`*^9, 3.768498944886955*^9}, {3.7684989781191545`*^9, 
   3.768498999535556*^9}, 3.768499218497393*^9, {3.7684992574255304`*^9, 
   3.7684992655032825`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Plot C1, C2, C3", "Section",
 CellChangeTimes->{{3.7686833832778397`*^9, 3.7686833905673447`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getMaxVtx", "[", "n_", "]"}], ":=", 
   RowBox[{"Switch", "[", 
    RowBox[{
    "n", ",", "\[IndentingNewLine]", "3", ",", "1", ",", 
     "\[IndentingNewLine]", "  ", "4", ",", "2", ",", "\[IndentingNewLine]", 
     "5", ",", "3", ",", "\[IndentingNewLine]", "  ", "6", ",", "2", ",", 
     "\[IndentingNewLine]", "7", ",", "4", ",", "\[IndentingNewLine]", "  ", 
     "8", ",", "6", ",", "\[IndentingNewLine]", "9", ",", "5"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7688575290978193`*^9, 3.7688575411884937`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"vtxList0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "7"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.768857544349038*^9, 3.7688575667806273`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "getPolyCos"}], ";", 
  RowBox[{
   RowBox[{"getPolyCos", "[", 
    RowBox[{"alphaT_", ",", "fnVtx0_", ",", 
     RowBox[{"vtxList_:", "vtxList0"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "polys", ",", "coss", ",", "cosSum", ",", "poly0", ",", "n", ",", 
       "inter", ",", "intAngSum", ",", "maxVtx"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"polys", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"polyVtx", "[", 
          RowBox[{"alphaT", ",", "i", ",", "fnVtx0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"\"\<alphas\>\"", "/.", "alphaT"}], "]"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"poly0", "=", 
       RowBox[{"First", "@", "polys"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"n", "=", 
       RowBox[{"Length", "@", "poly0"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"coss", "=", 
       RowBox[{"getPolyCosines", "/@", "polys"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cosSum", "=", 
       RowBox[{"Total", "[", 
        RowBox[{"First", "@", "coss"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"intAngSum", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "-", "2"}], ")"}], "\[Pi]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"maxVtx", "=", 
       RowBox[{"getMaxVtx", "[", "n", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Part", "[", 
           RowBox[{"#", ",", 
            RowBox[{"vtxList", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "&"}], "/@", "coss"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "maxVtx"}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdy1sogwEABeDZg6S0WUK0UK615m8ZZXNZaRbJrM3UotmlLZPZUKjJwtSU
W1YilwclS5sHJSNKLnlVa2USeaC1X9SWtTT+8z+cvs6pU6KzKoxMBoPBpQLV
w6/h8pyoJBhRfMPQ2Q+zgjIqDKTDvmA4E76albmQ4Fi5ML/shlaQQ/bCHUm/
Fr6b9wyQT9pNcMMmssPAmm8Eak2lM/TP+TwHP1vIGA97yX0cEnkfNXzK2jdL
HRzTmxrgo4TdDCsXZ5XQdU2ooNt1FId3af4krI+Pp2AkJPqDV/4DQTWlt8gr
gS/FQik07B7TTjcVtNO9bZlW1tEoh3Iy0QWzk0YzHNz22ODQ4ZQDPqgUTjhe
d9tKUCa6z2XwMSsyAD9jUgsM8djzcFS1QCs+0azA300dre/plKWhvJko5MCv
raVOuJoyK2CGuEoNL1jrPZDH8hlclJcyvRFqnfuT0O0hHPAfRfPHrA==
  "]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getSubtriPer"}], ";", 
  RowBox[{
   RowBox[{"getSubtriPer", "[", 
    RowBox[{"alphaT_", ",", "fnVtx0_", ",", 
     RowBox[{"vtxList_:", "vtxList0"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "polys", ",", "coss", ",", "cosSum", ",", "poly0", ",", "n", ",", 
       "inter", ",", "intAngSum", ",", "maxVtx"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"polys", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"polyVtx", "[", 
          RowBox[{"alphaT", ",", "i", ",", "fnVtx0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"\"\<alphas\>\"", "/.", "alphaT"}], "]"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"poly0", "=", 
       RowBox[{"First", "@", "polys"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"n", "=", 
       RowBox[{"Length", "@", "poly0"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxVtx", "=", 
       RowBox[{"maxVtx", "=", 
        RowBox[{"getMaxVtx", "[", "n", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"getStats", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"triPer", "[", 
            RowBox[{"Part", "[", 
             RowBox[{"#", ",", 
              RowBox[{"vtxList", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@", 
          "polys"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "maxVtx"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "getSubtriArea"}], ";", 
  RowBox[{
   RowBox[{"getSubtriArea", "[", 
    RowBox[{"alphaT_", ",", "fnVtx0_", ",", 
     RowBox[{"vtxList_:", "vtxList0"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "polys", ",", "coss", ",", "cosSum", ",", "poly0", ",", "n", ",", 
       "inter", ",", "intAngSum", ",", "maxVtx"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"polys", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"polyVtx", "[", 
          RowBox[{"alphaT", ",", "i", ",", "fnVtx0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"\"\<alphas\>\"", "/.", "alphaT"}], "]"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"poly0", "=", 
       RowBox[{"First", "@", "polys"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"n", "=", 
       RowBox[{"Length", "@", "poly0"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxVtx", "=", 
       RowBox[{"maxVtx", "=", 
        RowBox[{"getMaxVtx", "[", "n", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"getStats", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Area", "[", 
            RowBox[{"Polygon", "[", 
             RowBox[{"Part", "[", 
              RowBox[{"#", ",", 
               RowBox[{"vtxList", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "]"}], "]"}], "&"}], 
          "/@", "polys"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "maxVtx"}], "}"}]}], "]"}]}]}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.768855700703354*^9, 3.768855701904125*^9}, {
  3.7688557336073604`*^9, 3.76885587863962*^9}, {3.768855936295402*^9, 
  3.7688559644411297`*^9}, {3.768856119975492*^9, 3.768856156014374*^9}, {
  3.7688571579987698`*^9, 3.7688571611902056`*^9}, {3.7688573687034407`*^9, 
  3.7688573754623666`*^9}, {3.76885747478251*^9, 3.7688575208059635`*^9}, {
  3.768857583184105*^9, 3.768857619783146*^9}, {3.768857689973585*^9, 
  3.7688576920300856`*^9}, {3.768857744431944*^9, 3.768857770876857*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "plotCS"}], ";", 
  RowBox[{
   RowBox[{"plotCS", "[", 
    RowBox[{"alphaT_", ",", "fnVtx0_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cs", ",", "poly", ",", "coss", ",", "n", ",", 
       RowBox[{"clrs", "=", 
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"Darker", "@", "Green"}], ",", "Blue", ",", "Magenta", ",", 
          "Cyan", ",", "Orange"}], "}"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"coss", "=", 
       RowBox[{"getPolyCos", "[", 
        RowBox[{"alphaT", ",", "fnVtx0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "coss", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"cs", "=", 
          RowBox[{"Graphics3D", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Thick", ",", 
              RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
              RowBox[{"MapThread", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#1", ",", 
                   RowBox[{"Line", "[", 
                    RowBox[{"coss", "[", 
                    RowBox[{"[", "#2", "]"}], "]"}], "]"}], ",", 
                   RowBox[{"Point", "[", 
                    RowBox[{
                    RowBox[{"coss", "[", 
                    RowBox[{"[", "#2", "]"}], "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}], "&"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Take", "[", 
                   RowBox[{"clrs", ",", "n"}], "]"}], ",", 
                  RowBox[{"Range", "[", "n", "]"}]}], "}"}]}], "]"}]}], "}"}],
             ",", "\[IndentingNewLine]", 
            RowBox[{"SphericalRegion", "\[Rule]", "True"}], ",", " ", 
            RowBox[{"Axes", "\[Rule]", "True"}], ",", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"{", 
                   RowBox[{"Black", ",", "14"}], "}"}]}], "]"}], "&"}], "/@", 
               RowBox[{"{", 
                RowBox[{"\"\<c1\>\"", ",", "\"\<c2\>\"", ",", "\"\<c3\>\""}], 
                "}"}]}], ")"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"poly", "=", 
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"showOnePoly", "[", 
             RowBox[{"alphaT", ",", "i", ",", 
              RowBox[{"{", "}"}], ",", "fnVtx0", ",", 
              RowBox[{"Function", "[", 
               RowBox[{"x", ",", "0"}], "]"}], ",", 
              RowBox[{"drSubhex", "\[Rule]", "True"}], ",", 
              RowBox[{"plotAll", "\[Rule]", "False"}], ",", 
              RowBox[{"vtx", "->", 
               RowBox[{"{", 
                RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], "]"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Grid", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"poly", ",", "cs"}], "}"}], "}"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"First", "@", "coss"}], "]"}], ",", "1", ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
        RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.768676092949232*^9, 3.7686761941009855`*^9}, {
   3.768676831708679*^9, 3.7686768414616137`*^9}, {3.7686770897097297`*^9, 
   3.768677090477645*^9}, 3.768677230774861*^9, {3.768679466324131*^9, 
   3.7686796422772045`*^9}, {3.768680603787766*^9, 3.7686806175640364`*^9}, {
   3.7686806480624723`*^9, 3.7686806487266965`*^9}, {3.7686809701714*^9, 
   3.7686809722747736`*^9}, {3.7686810372758265`*^9, 
   3.7686811125508394`*^9}, {3.768681195828126*^9, 3.7686812295629077`*^9}, {
   3.7686815186837406`*^9, 3.768681519699025*^9}, {3.7686830933618207`*^9, 
   3.7686830953784275`*^9}, {3.768683496857564*^9, 3.768683512713788*^9}, 
   3.768768623321903*^9, {3.7688573962701125`*^9, 3.7688573979655857`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "plotCSgr"}], ";", 
  RowBox[{
   RowBox[{"plotCSgr", "[", 
    RowBox[{"alphaT_", ",", "fnVtx0_", ",", 
     RowBox[{"lab_:", "\"\<\>\""}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cs", ",", "poly", ",", "coss", ",", "n", ",", 
       RowBox[{"clrs", "=", 
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"Darker", "@", "Green"}], ",", "Blue", ",", "Magenta", ",", 
          "Cyan"}], "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"coss", "=", 
       RowBox[{"getPolyCos", "[", 
        RowBox[{"alphaT", ",", "fnVtx0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "coss", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cs", "=", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Thick", ",", 
           RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"#1", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"coss", "[", 
                  RowBox[{"[", "#2", "]"}], "]"}], "]"}], ",", 
                RowBox[{"Point", "[", 
                 RowBox[{
                  RowBox[{"coss", "[", 
                   RowBox[{"[", "#2", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Take", "[", 
                RowBox[{"clrs", ",", "n"}], "]"}], ",", 
               RowBox[{"Range", "[", "n", "]"}]}], "}"}]}], "]"}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"SphericalRegion", "\[Rule]", "True"}], ",", 
         RowBox[{"Axes", "\[Rule]", "True"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"Black", ",", "14"}], "}"}]}], "]"}], "&"}], "/@", 
            RowBox[{"{", 
             RowBox[{"\"\<c1\>\"", ",", "\"\<c2\>\"", ",", "\"\<c3\>\""}], 
             "}"}]}], ")"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "cs"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7686832227538705`*^9, 3.768683254953638*^9}, {
  3.7686834486170015`*^9, 3.7686834904566813`*^9}, {3.768683558129233*^9, 
  3.768683558712673*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Config Tri", "Section",
 CellChangeTimes->{{3.7684907690349135`*^9, 3.768490785211687*^9}, 
   3.7686772308666105`*^9, {3.7686780466884847`*^9, 3.7686780482097287`*^9}, {
   3.768680342471429*^9, 3.7686803499923143`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotCS", "[", 
  RowBox[{"triAlphaT15", ",", "getTriVtx0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7686767374509277`*^9, 3.768676743482767*^9}, {
  3.768677230926453*^9, 3.768677230927435*^9}, {3.7686780010904517`*^9, 
  3.768678001940149*^9}, {3.7686781001304903`*^9, 3.768678103402738*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 360, 1}}, Typeset`size$$ = {
    729., {175., 181.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`i$7661$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$7661$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`cs$4056 = Graphics3D[{Thick, 
           PointSize[Large], 
           MapThread[{#, 
             Line[
              Part[$CellContext`coss$4056, #2]], 
             Point[
              Part[
               Part[$CellContext`coss$4056, #2], $CellContext`i$$]]}& , {
             Take[$CellContext`clrs$4056, $CellContext`n$4056], 
             Range[$CellContext`n$4056]}]}, SphericalRegion -> True, Axes -> 
          True, AxesLabel -> Map[Style[#, {Black, 14}]& , {"c1", "c2", "c3"}],
           ImageSize -> Medium]; $CellContext`poly$4056 = Show[
          $CellContext`showOnePoly[{"a" -> 1.5, "tsDeg" -> CompressedData["
1:eJwV0wV3EAQUBeAxumPAqDFGx4iNZgNGd23UaBaUUkqKiNKN0h0GKBh0KCgY
oDQoGHQJUkoJKCjf3jnfvT/gnheWMDh2UKqAgIB+KeFSKpDUpCEt6UhPBjKS
icxkISvZyE4OcpKLIHKTh7wEk4/8FKAghQihMKEUIYyiFKM4JShJKUpThrKU
I5zyVKAilYggkspUoSrVqE4NalKLKKKpTR3qEkM96tOAhjSiMU1oSjOa04KW
tKI1bWhLO2KJoz0d6EgnOhNPF7rSje70oCe96E0CiSSRTB/6pmxEfwbwEi8z
kEEMZghDeYVXGcZwRjCSUYzmNcbwOmN5g3G8yVuMZwITmcRkpjCVaUxnBjOZ
xWzm8DbvMJd5zGcBC1nEYpawlGUsZwUrWcVq1vAu7/E+H7CWdXzIR6xnAx/z
CZ/yGRvZxGa2sJVtbGcHO9nF53zBbvbwJV+xl318zTd8y3fs5wDf8wMHOcRh
jnCUYxznBCf5kZ84xWl+5hd+5TfOcJZznOcCF7nEZa5wlWv8znVu8Ac3ucVt
7nCXP/mLe9znAQ95xN885glP+Yd/ecZz/uN/Up4/FYGkJg1pSUd6MpCRTGQm
C1nJRnZykJNcBJGbPOQlmHzkpwAFKUQIhQmlCGEUpRjFKUFJSlGaMpSlHOGU
pwIVqUQEkVSmClWpRnVqUJNaRBFNbepQlxjqUZ8GNKQRjWlCU5rRnBa0pBWt
aUNb2hFLHO3pQEc60Zl4utCVbnSnBz3pRW8SSCSJZPrQlxeua5bx
             "], "tsRad" -> CompressedData["
1:eJwtlHdYk+caxhNCIAlJyPqSiBawVtEqR9FqwfXeKnoq2KNCcRxBjyLiBGsR
3OJC3KK1iqsq1ioOXFAHqFgFrAVUUFFa1gFlqRD2Pte53id/JFeS73u/57nH
r+e8UJ8gsUgkWvj/N3p5nPA5M6EwhvHP0+xl1dq6iqx4+n6NRXu+9zJPT6Lf
77AvDmqO351wn/5PZUU1x8MHdn9E16WxgUfcnMQHM+j6P9h6lpb+QpFJ92Wz
BT+4uvukPqP7nzNleoRyRMcLOieX3XR4WNTL4yWd94rNClEmKle+pnPzmOTh
tB0NV9/Q+W/ZBeF0QEF1Pj3nbzZlUZVbet8Cel4hW1fgIJkxuIieW8Qmy7Bs
0pRien4x6zU46DVCSmiOEtY4a+eYobv/S/OUsj+2JVzsF19Kc5Wxkwm5gmNG
Gc33jn3/pmWj7t07mvM9Gy9xqrSxLqd5y5nZ1fO7tp4VNHcFq5626N4nVknz
V7IHkXv7lgZU0R5V7ED8jQN5a6tpnw9sQW5e+5+xH2ivj2x4Z8eC1N8+0n6f
mKpvr+eJLz/RnjWspu/Zz16urqF9a9jblCSfbFkt7V3LHvk82f7kcC3tX8uu
vM9P/r2PhXSwsCPrPtamJFpIDwvbrBW73PKsI13q2NJzev/rOXWkTz3zG9En
5tK8etKpnrFn7mnnautJrwbWL8i77VRkA+nWwHStAYOO2TeSfo2sfe/yoEMn
G0nHRvau15aj+1ybSM8m9uzWoewdyU2kazO7/e15663ezaRvM4srueOx4W0z
6dzC9kRkhqxa1EJ6t7AIZVHciuYW0r2VzT1tyVu6vZX0b2Vew6TqYGMb+dDG
hj41jZv7Sxv50cYc//PlqllftZMv7UzeMPKy3+/t5E8Hs+yYXDLZp4N86mD5
jvNMXsUd5FcnS7sRNslzeSf51skSvtm+aXRXJ/nXxY78HZvkvreLfOxiYz1e
rYxVi8D9FCFpy5z9xmkicF9F6J9VHn/whAjcXxFOmVc81pSJwH0WQwhsK9wz
QAzutxg7Lm9tVYSJwX0Xo6tJJUTfFYP7L8YPYw8PlEqswHNghYrdzl6bvazA
82CFgNcX5nfFWIHnwgoveg7ZuO6NFXg+rPDPpcmxLc4S8JxIkJw0/mb4Qgl4
XiRwE2dn1SVIwHMjwTnvGRXLmyTg+bFG95+KJR9HW4PnyBr7ihY7LomyBs+T
NaT9693LM63Bc2WN1SvX+wYJUvB8SfHxvk1Iib8UPGdSBCr2R885KwXPmxR5
33WL+6tKCp47G3z785mUmUNswPNng4cV/fNerbEBz6ENhn2VaPF9aAOeRxtc
2jBa9VxuC55LWzg/SXf511Rb8Hza4pB+6tinR2zBc2oLxey3/t8U2YLnVYaN
5wMjHrvIwHMrQ72lOmZsqAw8vzIsGhV+6X6SDDzHMhRs70ob2SkDz7McPi+i
i2+Pl4PnWo70Hrr2YXvk4PmWY1TwMePNXDl4zuW4fu0LN7ceCvC8K9Cn/bL3
lUAFeO4VODbh6wX9LyrA86+AJuZB5HmLArwHdojKn3is93A78D7YobV3TuKZ
TXbgvbBD6HL/Z05P7MD7YYfSO2WVxzVK8J4oMUMaKnWYoQTvixKZk5udDv+s
BO+NEuOObhpueK8E748Kt0oVfjH/UIH3SIUBA38MVYerwPukwunVn+3claIC
75UKwqNzZ2VSNXi/1NipHnR/2yQ1eM/UEM28/cbqRzV439RYGTe2fmO+Grx3
alR8eKru+NwevH/2mO3u12/NYnvwHtojZ3PBuKZr9uB9tMfEzODZYS324L3U
oHDXquRVzhrqpwbd3FImfu2poZ5q4PtK/LohWEN91WDv2gnzb+7SUG81yHDe
VbsiQUP91UCSlr3BLUdDPdZg1BKDsqZRQ33WYpVmZuwVBy31WovriSf6LBut
pX5rUf3vkhv952mp51q4iFzGVG7TUt+1mPfLkqzzF7TUey2Oe12dFZyppf5r
8epTfXnvWi1xQAftIY/wUoOOeKCD9/ANkjh3HXFBh6jCh/vn+uuIDzo82Grr
6BypI07o0NZv0sWCOB3xQoeh2fvdT6TriBs6hIa9fDyrSkf80CG+m4Ovg72e
OKJH2b3ZRXmD9cQTPZzmxy07PE1PXNFjpry81W+Nnviix8ErA6INJ/XEGT2y
fL8XclL1xBs95C2JZ2LK9MQdPcadbB04RW4g/hiwfhxLUbsaiEMG3Crf4pU5
xUA8MsCyJ+P1rjADcckA1yGqIK8jBuKTAcF5Uy2yZANxyoAz63/amF5oIF4Z
8Nfn+cooiUDcEmDMcDrq6SIQvwRMXTbfReItEMcE7NZduJkaIhDPBKT99mFM
5AGBuCZAFDA4e3SSQHwTMMIqwr/jjUCcE7Dy17sVdzsE4p0RCZNEEWt6Gol7
RlTWelp7jDcS/4zofXhHTNNCI3HQiDkjsxyTdhuJh0bEFusuhV01EheNyI2a
7jEk10h8NMJ+wPG02iYjcdKEic+LfK92NxEvTdgS3rs4hJmImybc6744xDXQ
RPw0ofnBlbaqKBNx1ITBC+qi4+NNxFMTltm5GxdlmYirJpy/ui7OxWIivppR
4pc66J1gJs6a0aNNeu+sh5l4a8b0U17egQFm4q4ZB8bvy+u5yUz8NePPypyg
orNm4rAZNvvNdSczzMRjM8YMDYgMqDYTl81Y+/a0qoemG/4HwK/7GA==
             "], "alphas" -> CompressedData["
1:eJzt1n1M1HUcB/DLCZmADY1BPFxwDHZAJngaIA9vSJIhYEGwHQ9uap3DzTSp
TUCHz8DJeDAPl0EjEEhtK6fmGUw9sKjD4BBRiILjnrnfz1zIThAq6o/vZ223
2ZWu9U//3Ha7u9/v9/183u/XLmDLzkzZUwKBoOCPlzWjTuazqj5M3Vnh5THS
h6F76lsdQRpk1sbbTE0ahH09ffLnoH5Eueq0frX9yDF6FR50u4mnO9+pcWq4
iQ/kiQcrogcQmnjOOGsYwCGxv6Lg5C30F0l9FkgHod7r3OUvvI3a998uSeZu
Q9MhvRLQcQfJKrX4QM0Q2opOleRuHUZffN2Grvjv8W2adNzqOYK7nm4zPpMj
CAwXPdeu/gFypWw4uulHCKeudYl2j0L2wF3kmjqGqpnzKfW+WphKk+YO8FpM
6tftv5o3Dlv+pd0hqnEsPxMrt4p0CDlzI4o7pEPhYvEeb4MOGxPCs7Yn6LHJ
64t9g/V6nC9XBK636aFMnpF3pxmgyb2uT2o2YFVFvkuXzYAUcUB+bLIRnK+x
5MIJI1ozJiPERiNeS38htWGFCZs0ZTuWFptQ2XJ4YbXKhMbIi97LnM2IW/Nh
aluKGaF5V0+nVZqxX/GwzeWGGatzv3K1LrJgz1yWnkuyYOP8ljc991mgiim4
/57Sgtb7MW6L71kwvcvyyqhoAk6KE6G27AnIveV50vIJSOLvytyUE9Dbjnzn
bZqAdpfffJm7FZUe1dnSWCtyx991qZNZgfbNsWurrKguPj5ecMEK3ZUlPS7D
VoiNwc0Rc1bEbMuxaH05CJ8p5n3iOPzUKxzg8jgMuufUZBRz6H75mDmrjsPl
w03bHn7OQQKPorVqDt8cr4qP1HEoq1h3aXiaQ/hRZUuYG4/u06n1kgAejbbl
01MSHoEDwbqdr/LIyCxPP5vNY73I/5fWt3hsb0kskhXy0Mde9+JLebwx+6wg
+iiPy4JI3wwFD3nab8GrP+Ixf+xBq7mFR19QDbf1Ux5LFoYsVZ7j8fxLYufh
izwU7Qv29ih5SJal26q/5PHZbNe1oPY/39Pn9H36PV2Prk/3o/vT89Dz0fPS
89N56Hx0Xjo/zYPmQ/Oi+dE8ab40b5q/D9sH7Yf2ZWD7o33Gsf3Svmn/lAcT
y8cqlhfKD+WJ8vUJyxvlj/JI+aS8Un4pzwks35R3yj/14XXWjybWFzPrD/WJ
+tXL+kb9oz5SP6mv1F/qM/V7jvWd+k8ekA+bmRdhzA/yhHwhb8ifMeYR+URe
kV/NzDPyjbwj/6KYh+QjeUl+kqeBzFfylvwlj5/U58bH9DmTnbeDnX/sH/pM
8z7C5j/K9mFj+/mV7UvymD73/ks+l7J8r2R5L7HzuZP1g/oyx/qzyIHP+v/Y
54j/ff5Ln3sc+Dxk57PwET7r7HyGnc9VbP+UB8qHxIHP9H+g085nyudKO59f
tPO5+RE+Uz8+duCzxoHP+ayvOxz4TP0ftfNZZudzgwOf1U/os9/f9DnMgc+/
A4XSuRw=
             "]}, $CellContext`i$$, {}, $CellContext`getTriVtx0, 
           Function[$CellContext`x, 0], $CellContext`drSubhex -> 
           True, $CellContext`plotAll -> 
           False, $CellContext`vtx -> {1, 2, 3}], ImageSize -> Medium]; 
       Grid[{{$CellContext`poly$4056, $CellContext`cs$4056}}]), 
      "Specifications" :> {{$CellContext`i$$, 1, 360, 1, Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{780., {222., 228.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({
      Attributes[$CellContext`cs$4056] = {Temporary}, 
       Attributes[$CellContext`coss$4056] = {
        Temporary}, $CellContext`coss$4056 = CompressedData["
1:eJylmXtUjvnaxytJKJNCR0YYE01EKqdcSUaM8844xxRT2yFhGIco51NIRpLQ
ppJCqZRdcT/yDAnRcUI6H57TJE1mkpi3dz3f613LvVbLu/b+Y6ZZ1qO5n/v+
Xd/r8/3clp7r5q7spKGhodn+j0/7v/73v8OKPQ7MW64iC2OnvK825f7fz5xp
TWc3LlKR3cAw25olD0i/b87xn/PzSU94EFTspiLjwf3GBe6X0CC70tjq5cU0
YUzzP8KsVSRZaR7raZtCc7Z0P3Yg/zlJNC4VVWupKDu8JOjOvUjakGDqdcL4
FZXrv53SnKukyLgo1eZfdgm/16V3+tawgnIKjnr1ClZSYvapskd1MUKtYkGO
89ZKCqQenue+VVLmvvJO2fOThflGq3u4ClXUd3r5s7dNCmoe7rRucs2/BY3M
zjO211RTgt0xCj6loAWuQZYOXwtCa2pk8wRFDbnmh+bJhylo2tYBdDn8rmAz
bLhvbH4trSvMyTgoyGnmiESdH43uCVrhZfZjIuto0odjN1unyOlxv4Y3cd2k
QohKvjlsXj0tFV6vLMiWUZK9zzyXo1LBNtH7wsq39fSuzqwwzkVGL7xeVWy9
LBUsCk17WeyW0eArg6vMU+up+X3N+tIVUqHpr1lxnT7KyFsxsSRrYD3laE85
0/PZPUE2Wv/jkNVy0t65q/P4oDoy1J7iV9iUJfSNPrr/h0dyet6wb9uAxlpK
PTkkqqXormBfsqufa38FFZQ5VvaYXUtRXS3W/rxLIiTt01vluFpBPcvLN4Ze
raHxxa4XNN7dFor66hhsuKYgLa2mXtN0asj/oYVNn7PpwtR31/tryhQ0qLj7
wZtLq2lF/1e6Bc2pgo6t/tQn5ko6Ka185JFcRSV7AksTDJKFLtfjL1yYqqSy
riN/+bVLFWWfn7V/ROM1Yehc2+avNijJwWlqlefiSmqMeNxg4B0tpDVERvx5
Skl2tx3SY69XUKCppWLX0DPCrWvGv568qSSz9TuaNLXa/zxi8eD6Sf7ChNjH
3/nmKSkqIM4xKr6MAqW6MQce7aexfx+3l8mVlPWysk3h/ooCPQ+77Rt4noZa
uj34/m8lKSTL3HdrlJKbv6f78MOxVLPwwGxtQxX5184eppPwgrR2TBx1rusN
EoTpSSMGqKiqpXes9g/PaXpQ110b82/SwFF58ca2KtpwpSXgY58SCvyt6mnX
iHTalKT9Z/04Fd1dvvisd14xtfRX+th5CXR+xkj73MkqOjt36tnLwUUUdTd+
zXHDLPLJtnnQOENFGw9d2242r5Acv7/ZGrNOSr9N2bpxvbuKkoxLx/T8soAq
/aa5Pnhwn/TS2zR9F6oofMqOgPyGPPqpm/2zd6YP6cb2EZkaS1W0RH/GrLPS
Z2S+evQN75WPKF6iW+q8TEXL5n/0pIlPqXNiesL3V57QpP6zlC7t87z0XWVG
H50nNEUIuTq49ik121X0Nm3/8+YfpvyqXZJD3xmaRHytl0fbAi/4FXio6Mz7
g4cnpWVTU8n7q8Ms8ynD4ZVD4BIVHbsd6qQRdZ+iL5lkbRlRQLLlR/62br/O
Gxvky5ecl1Ls/qiSsvGF1DfLT1nZ/r06Gfet9o3JosgzGQUTJxVR0KwFT+Jn
qeiy+07ryZkSumPUM/GQazEZTeo9I2SqirT+NXVYtnCbWi1dsqOcfyONvkY6
51xUdPGN4vGJAemUYxZtdcCxhPZt1r+YP7b9evo6ORRGplLL5d1vhgx5Tr6r
fmocPVJFuZtOH/Ubm0xag9PuH+79gjwrGloLrVQkM82z3l6WQHt+evhdfNsL
mhC62Di+n4p0V+kMMdx5hfzHh8QHl72kCa8u/XXHSEUHJftsR/7jEnmFnh06
KaOUqsdeTjPSVZHttVFnUtLDKd9h7b0nIa9omuUOefx7JWk4LvZtXXeM3nzU
fuy0soyyN02MPNSgJInjOOe5P/nR0p4PLl0cWU6aXme2Xq9QknPGF0veLtkm
9Fo37p/678upW45xjHm+kmYbLNo7ri5YWPrMf7Hbsgpy8bzUmJelJNuiy4Yj
8sKFiMOhdpF3KuibPm3SvCQlBRf94Zz2zUVhwpyT18PMK2n0zK325heVdOvb
VdEDJTHCv/3Hx43fXEnPDhlrXG/PU4O1v/92YGC8oLP25KLTuZUkfyQLObRT
Sdna072Ozk8Q9jqMcUgZVEV1ypYvrq1W0pZ+s218r98Qwq801ZzfUkVzM1Nm
Gy9QUqNe5RT98GQh2cPE1iunijp/VSm7P0lJvfYlr3vre1MYZXa/Wc+smo7e
shmSPqw9x5t2um22SRNezIk0jvWupjMNayxfm7Tn+J1xK14V3RKiS7tuc06u
ptkftl300mq/zmGDtTf7pAuvq2IaK9uqqdH1JfVWKmiNxLjyYG2G0P2D3rgw
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
        "], 
       Attributes[$CellContext`clrs$4056] = {
        Temporary}, $CellContext`clrs$4056 = {
         RGBColor[1, 0, 0], 
         RGBColor[0, 2/3, 0], 
         RGBColor[0, 0, 1], 
         RGBColor[1, 0, 1], 
         RGBColor[0, 1, 1]}, 
       Attributes[$CellContext`n$4056] = {Temporary}, $CellContext`n$4056 = 1,
        Attributes[$CellContext`poly$4056] = {
        Temporary}, $CellContext`showOnePoly[
         Pattern[$CellContext`alphaT, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`notableLoci, 
          Blank[]], 
         Pattern[$CellContext`fnVtx0, 
          Blank[]], 
         Pattern[$CellContext`fnErrorP, 
          Blank[]], 
         Pattern[$CellContext`opts, 
          OptionsPattern[]]] := 
       Module[{$CellContext`polyErr}, $CellContext`polyErr = \
$CellContext`polyError[$CellContext`alphaT, $CellContext`i, \
$CellContext`fnVtx0, $CellContext`fnErrorP]; \
$CellContext`drawPoly[$CellContext`polyErr, $CellContext`notableLoci, 
           FilterRules[{$CellContext`opts}, 
            Options[$CellContext`drawPoly]]]], $CellContext`polyError[
         Pattern[$CellContext`alphaT, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`fnVtx0, 
          Blank[]], 
         Pattern[$CellContext`fnErrorP, 
          Blank[]]] := 
       Module[{$CellContext`a, $CellContext`alpha, $CellContext`poly, \
$CellContext`err}, $CellContext`a = 
          ReplaceAll["a", $CellContext`alphaT]; $CellContext`alpha = Part[
            ReplaceAll[
            "alphas", $CellContext`alphaT], $CellContext`i]; \
$CellContext`poly = $CellContext`polyVtx[$CellContext`alphaT, $CellContext`i, \
$CellContext`fnVtx0]; $CellContext`err = $CellContext`fnErrorP[$CellContext`a, 
            Part[$CellContext`poly, 1], $CellContext`alpha]; {
          "a" -> $CellContext`a, "poly" -> $CellContext`poly, 
           "error" -> $CellContext`err}], $CellContext`polyVtx[
         Pattern[$CellContext`alphaT, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`fnVtx0, 
          Blank[]]] := 
       Module[{$CellContext`a, $CellContext`p1, $CellContext`t, \
$CellContext`alpha}, $CellContext`a = 
          ReplaceAll["a", $CellContext`alphaT]; $CellContext`alpha = Part[
            ReplaceAll[
            "alphas", $CellContext`alphaT], $CellContext`i]; $CellContext`t = 
          Part[
            ReplaceAll[
            "tsRad", $CellContext`alphaT], $CellContext`i]; $CellContext`p1 = \
{$CellContext`a Cos[$CellContext`t], 
            
            Sin[$CellContext`t]}; $CellContext`fnVtx0[$CellContext`a, \
$CellContext`p1, $CellContext`alpha]], $CellContext`drawPoly[
         Pattern[$CellContext`polyErr$, 
          Blank[]], 
         Pattern[$CellContext`notableLoci$, 
          Blank[]], 
         OptionsPattern[]] := 
       Module[{$CellContext`poly$, $CellContext`a$, $CellContext`centroids$, \
$CellContext`centroidNames$, $CellContext`lab$, $CellContext`pnames$, \
$CellContext`meds$, $CellContext`polyTangs$, $CellContext`polyInters$, \
$CellContext`polyInterNames$, $CellContext`tri1$, $CellContext`notables$, \
$CellContext`circs$, $CellContext`incs$, $CellContext`lgt$ = 
          0.25, $CellContext`fnt$ = 14}, $CellContext`poly$ = 
          ReplaceAll["poly", $CellContext`polyErr$]; $CellContext`a$ = 
          ReplaceAll[
           "a", $CellContext`polyErr$]; $CellContext`centroids$ = \
$CellContext`getCentroids[$CellContext`poly$]; $CellContext`centroidNames$ = {
           "\!\(\*SubscriptBox[\(G\), \(vtx\)]\)", 
            "\!\(\*SubscriptBox[\(G\), \(per\)]\)", 
            "\!\(\*SubscriptBox[\(G\), \(lam\)]\)"}; $CellContext`lab$ = 
          StringJoin["error: ", 
            $CellContext`nfn[
             N[
              ReplaceAll["error", $CellContext`polyErr$]], 
             3]]; $CellContext`pnames$ = 
          Take[{"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K"}, 
            
            Length[$CellContext`poly$]]; $CellContext`meds$ = \
$CellContext`getMediansV[$CellContext`poly$]; $CellContext`polyTangs$ = 
          Map[$CellContext`perp[
             $CellContext`ellGrad[$CellContext`a$, 
              Part[#, 1], 
              Part[#, 2]]]& , $CellContext`poly$]; $CellContext`polyInters$ = 
          MapThread[$CellContext`interRays[#, #2, #3, #4]& , \
{$CellContext`poly$, $CellContext`polyTangs$, 
             RotateLeft[$CellContext`poly$], 
             
             RotateLeft[$CellContext`polyTangs$]}]; \
$CellContext`polyInterNames$ = If[
            OptionValue[$CellContext`drExcentral], 
            MapThread[StringJoin[#, "'", #2, "'"]& , {$CellContext`pnames$, 
              RotateLeft[$CellContext`pnames$]}], {}]; If[
           OptionValue[$CellContext`drCircs], 
           
           Module[{$CellContext`sides$, $CellContext`tri$, \
$CellContext`cir$}, $CellContext`circs$ = Table[$CellContext`tri$ = Take[
                  RotateLeft[$CellContext`poly$, $CellContext`i$$ - 1], 
                  3]; $CellContext`cir$ = \
$CellContext`getCircumcenterTrilin[$CellContext`tri$, 
                  RotateLeft[
                   $CellContext`triLengths[$CellContext`tri$]]]; \
{$CellContext`cir$, 
                 $CellContext`magn[$CellContext`cir$ - 
                  Part[$CellContext`tri$, 1]]}, {$CellContext`i$$, 
                Length[$CellContext`poly$]}]; Null]]; If[
           OptionValue[$CellContext`drIncs], 
           
           Module[{$CellContext`sides$, $CellContext`tri$, \
$CellContext`inc$}, $CellContext`incs$ = Table[$CellContext`tri$ = Take[
                  RotateLeft[$CellContext`poly$, $CellContext`i$$ - 1], 
                  3]; $CellContext`inc$ = \
$CellContext`getIncenterTrilin[$CellContext`tri$, 
                  RotateLeft[
                   $CellContext`triLengths[$CellContext`tri$]]]; \
{$CellContext`inc$, 
                 $CellContext`closestDist[$CellContext`inc$, 
                  Part[$CellContext`tri$, 1], 
                  Part[$CellContext`tri$, 2]]}, {$CellContext`i$$, 
                Length[$CellContext`poly$]}]; Null]]; If[
           Or[
            OptionValue[$CellContext`drNotables], 
            OptionValue[$CellContext`drSubtri]], 
           
           Module[{$CellContext`normals$}, $CellContext`tri1$ = 
             Part[$CellContext`poly$, 
               OptionValue[$CellContext`vtx]]; $CellContext`normals$ = 
             Apply[$CellContext`gettriBisectors, $CellContext`tri1$]; \
$CellContext`notables$ = $CellContext`getNotables[$CellContext`tri1$, \
$CellContext`normals$]; Null]]; $CellContext`gr = Graphics[{
             PointSize[Large], 
             Point[$CellContext`poly$], 
             FaceForm[None], {
              EdgeForm[{Black, Thick}], 
              FaceForm[Gray], 
              Opacity[0.1], 
              Polygon[$CellContext`poly$], Black, 
              Point[$CellContext`poly$]}, {Black, 
              Arrowheads[Medium], 
              MapThread[$CellContext`drawArrow[#, 
                $CellContext`norm[
                 $CellContext`perpNeg[#2]], $CellContext`lgt$]& , \
{$CellContext`poly$, $CellContext`polyTangs$}]}, 
             If[
              OptionValue[$CellContext`drCentroids], {Black, 
               MapThread[{
                 Point[#], 
                 If[
                  OptionValue[$CellContext`drCentroidLabels], 
                  Text[
                   Style[#2, 14], #, {
                   0, -1.5}], {}]}& , {$CellContext`centroids$, \
$CellContext`centroidNames$}]}, {}], 
             If[
              OptionValue[$CellContext`drExcentral], {
               EdgeForm[
                Darker[Green]], 
               Polygon[$CellContext`polyInters$], 
               Darker[Green], 
               Point[$CellContext`polyInters$], 
               MapThread[Text[
                 
                 Style[#, $CellContext`fnt$], #2, {-1.25, -1.25}]& , \
{$CellContext`polyInterNames$, $CellContext`polyInters$}]}, {}], {Black, 
              MapThread[Text[
                Style[#, $CellContext`fnt$], 
                $CellContext`ray[#2, 
                 $CellContext`norm[
                  $CellContext`perp[#3]], $CellContext`lgt$/
                 2]]& , {$CellContext`pnames$, $CellContext`poly$, \
$CellContext`polyTangs$}]}, 
             If[
              OptionValue[$CellContext`drMedians], {{Dashed, Blue, 
                Map[Line[{#, {0, 0}}]& , $CellContext`polyInters$]}, {Blue, 
                Point[$CellContext`meds$], 
                Point[{0, 0}]}}, {}], 
             If[
              OptionValue[$CellContext`drCircs], {Red, {Dashed, 
                Map[Circle[
                  Part[#, 1], 
                  Part[#, 2]]& , $CellContext`circs$]}, 
               Point[
                Map[First, $CellContext`circs$]], 
               Circle[
                Part[$CellContext`circs$, 1, 1], 0.05]}, {}], 
             If[
              OptionValue[$CellContext`drIncs], {
               Darker[Green], Dashed, 
               Map[Circle[
                 Part[#, 1], 
                 Part[#, 2]]& , $CellContext`incs$], 
               Point[
                Map[First, $CellContext`incs$]]}, {}], 
             If[
              OptionValue[$CellContext`drNotables], {
               Apply[List, 
                $CellContext`drawSomeNotables[$CellContext`notables$, 
                 First[$CellContext`notableLoci$]]], 
               EdgeForm[None], 
               FaceForm[Red], 
               Opacity[0.1], 
               Polygon[$CellContext`tri1$]}, {}], 
             If[
              OptionValue[$CellContext`drSubtri], {
               EdgeForm[None], 
               FaceForm[Red], 
               Opacity[0.2], 
               Polygon[$CellContext`tri1$]}, {}]}]; Show[{
            $CellContext`plotEll[$CellContext`a$], $CellContext`gr, 
            If[
             OptionValue[$CellContext`drLoci], 
             $CellContext`Second[$CellContext`notableLoci$], {}]}, 
           If[
            OptionValue[$CellContext`drError], 
            PlotLabel -> $CellContext`lab$, {}], PlotRange -> If[
             OptionValue[$CellContext`plotAll], All, {{-2, 2}, {-1.5, 1.5}}], 
           Frame -> True, FrameStyle -> Medium, AxesStyle -> 
           Directive[{Dotted, Gray}]]], 
       Options[$CellContext`drawPoly] = {$CellContext`drNotables -> 
         False, $CellContext`drSubtri -> False, $CellContext`drLoci -> 
         False, $CellContext`drMedians -> False, $CellContext`drExcentral -> 
         False, $CellContext`drCentroids -> 
         False, $CellContext`drCentroidLabels -> False, $CellContext`drError -> 
         False, $CellContext`drCircs -> False, $CellContext`drIncs -> 
         False, $CellContext`vtx -> {1, 2, 3}, $CellContext`plotAll -> 
         False}, $CellContext`getCentroids[
         Pattern[$CellContext`vtx, 
          Blank[]]] := {
         Mean[$CellContext`vtx], 
         $CellContext`PerimeterCentroid[$CellContext`vtx], 
         RegionCentroid[
          Polygon[$CellContext`vtx]]}, $CellContext`PerimeterCentroid[
         Pattern[$CellContext`vtx$, 
          Blank[]]] := 
       Module[{$CellContext`sides$, $CellContext`meds$, $CellContext`per$, \
$CellContext`perCentroid$}, $CellContext`sides$ = \
$CellContext`triLengths[$CellContext`vtx$]; $CellContext`meds$ = 
          Apply[$CellContext`getMediansV, $CellContext`vtx$]; \
$CellContext`per$ = Total[$CellContext`sides$]; $CellContext`perCentroid$ = 
          Sum[
            Part[$CellContext`meds$, $CellContext`i$$] 
             Part[$CellContext`sides$, $CellContext`i$$], {$CellContext`i$$, 
              
              Length[$CellContext`vtx$]}]/$CellContext`per$; \
$CellContext`perCentroid$], $CellContext`triLengths[
         Pattern[$CellContext`vs, 
          Blank[]]] := Map[$CellContext`magn, 
         $CellContext`triSides[$CellContext`vs]], $CellContext`magn[
         Pattern[$CellContext`v, 
          Blank[]]] := Sqrt[
         $CellContext`magn2[$CellContext`v]], $CellContext`magn2[
         Pattern[$CellContext`v, 
          Blank[]]] := 
       Dot[$CellContext`v, $CellContext`v], $CellContext`triSides[
         Pattern[$CellContext`vs, 
          Blank[]]] := MapThread[# - #2& , {$CellContext`vs, 
          RotateLeft[$CellContext`vs]}], $CellContext`getMediansV[
         Pattern[$CellContext`vs, 
          Blank[]]] := 
       0.5 ($CellContext`vs + RotateLeft[$CellContext`vs]), $CellContext`nfn[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := ToString[
         NumberForm[$CellContext`v, {$CellContext`n + 
           2, $CellContext`n}]], $CellContext`perp[{
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           
           Blank[]]}] := {-$CellContext`y, $CellContext`x}, \
$CellContext`ellGrad[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          
          Blank[]]] := -{$CellContext`x, $CellContext`y $CellContext`a^2}, \
$CellContext`interRays[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`n2, 
          Blank[]]] := 
       Module[{$CellContext`m, $CellContext`b, $CellContext`sols}, \
$CellContext`m = Transpose[{$CellContext`n1, $CellContext`n2}]; If[
           $CellContext`negl[
            
            Det[$CellContext`m]], $CellContext`p1, $CellContext`b = \
$CellContext`p2 - $CellContext`p1; $CellContext`sols = 
            LinearSolve[$CellContext`m, $CellContext`b]; \
$CellContext`ray[$CellContext`p1, $CellContext`n1, 
             Part[$CellContext`sols, 1]]]], $CellContext`negl[
         Pattern[$CellContext`v, 
          Blank[]]] := Abs[$CellContext`v] < 10^(-9), $CellContext`ray[
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`phat, 
          Blank[]], 
         Pattern[$CellContext`d, 
          
          Blank[]]] := $CellContext`p0 + $CellContext`phat $CellContext`d, \
$CellContext`getCircumcenterTrilin[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := 
       Module[{$CellContext`a2 = $CellContext`a $CellContext`a, \
$CellContext`b2 = $CellContext`b $CellContext`b, $CellContext`c2 = \
$CellContext`c $CellContext`c}, 
         $CellContext`trilinearToCartesian[$CellContext`orbit, \
{$CellContext`a, $CellContext`b, $CellContext`c}, {$CellContext`a \
($CellContext`b2 + $CellContext`c2 - $CellContext`a2), $CellContext`b \
($CellContext`c2 + $CellContext`a2 - $CellContext`b2), $CellContext`c \
($CellContext`a2 + $CellContext`b2 - $CellContext`c2)}]], \
$CellContext`trilinearToCartesian[{
          Pattern[$CellContext`A, 
           Blank[]], 
          Pattern[$CellContext`B, 
           Blank[]], 
          Pattern[C, 
           Blank[]]}, {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]], 
          Pattern[$CellContext`z, 
           Blank[]]}] := 
       Module[{$CellContext`denom}, $CellContext`denom = 
          Dot[{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`x, $CellContext`y, $CellContext`z}]; ($CellContext`a \
$CellContext`x $CellContext`A + $CellContext`b $CellContext`y $CellContext`B + \
$CellContext`c $CellContext`z 
            C)/$CellContext`denom], $CellContext`getIncenterTrilin[
         Pattern[$CellContext`orbit, 
          Blank[]], 
         Pattern[$CellContext`sides, 
          
          Blank[]]] := $CellContext`trilinearToCartesian[$CellContext`orbit, \
$CellContext`sides, {1, 1, 1}], $CellContext`closestDist[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`l1, 
          Blank[]], 
         Pattern[$CellContext`l2, 
          
          Blank[]]] := $CellContext`magn[$CellContext`p - \
$CellContext`closestPerp[$CellContext`p, $CellContext`l1, $CellContext`l2]], \
$CellContext`closestPerp[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`l1, 
          Blank[]], 
         Pattern[$CellContext`l2, 
          Blank[]]] := 
       Module[{$CellContext`dl = $CellContext`l2 - $CellContext`l1, \
$CellContext`s}, $CellContext`s = 
          Dot[$CellContext`p - $CellContext`l1, $CellContext`dl]/
           Dot[$CellContext`dl, $CellContext`dl]; \
$CellContext`ray[$CellContext`l1, $CellContext`dl, $CellContext`s]], \
$CellContext`gettriBisectors[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`p3, 
          Blank[]]] := 
       Module[{$CellContext`u12, $CellContext`u23, $CellContext`u31}, \
$CellContext`u12 = $CellContext`norm[$CellContext`p2 - $CellContext`p1]; \
$CellContext`u23 = $CellContext`norm[$CellContext`p3 - $CellContext`p2]; \
$CellContext`u31 = $CellContext`norm[$CellContext`p1 - $CellContext`p3]; {
           $CellContext`norm[$CellContext`u12 - $CellContext`u31], 
           $CellContext`norm[$CellContext`u23 - $CellContext`u12], 
           $CellContext`norm[$CellContext`u31 - $CellContext`u23]}], \
$CellContext`norm[
         Pattern[$CellContext`v, 
          
          Blank[]]] := $CellContext`v/$CellContext`magn[$CellContext`v], \
$CellContext`drawArrow[
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`phat, 
          Blank[]], 
         Pattern[$CellContext`l, 
          Blank[]]] := Arrow[{$CellContext`p0, 
          $CellContext`ray[$CellContext`p0, $CellContext`phat, \
$CellContext`l]}], $CellContext`perpNeg[{
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           
           Blank[]]}] := {$CellContext`y, -$CellContext`x}, \
$CellContext`plotEll[
         Pattern[$CellContext`a, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`clr, 
           Blank[]], 
          GrayLevel[0]]] := 
       ParametricPlot[{N[$CellContext`a] Cos[$CellContext`u], 
          Sin[$CellContext`u]}, {$CellContext`u, 0., 2. Pi}, 
         PlotStyle -> $CellContext`clr, PerformanceGoal -> 
         "Quality"], $CellContext`Second[
         Pattern[$CellContext`l, 
          Blank[]]] := Part[$CellContext`l, 2], $CellContext`getTriVtx0[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`alpha, 
          Blank[]]] := 
       Module[{$CellContext`p2, $CellContext`p2Neg, $CellContext`p3}, \
{$CellContext`p2, $CellContext`p2Neg} = \
$CellContext`getP2Alpha[$CellContext`a, $CellContext`p1, $CellContext`alpha]; \
{$CellContext`p1, $CellContext`p2, $CellContext`p2Neg}], \
$CellContext`getP2Alpha[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`alpha, 
          Blank[]]] := 
       Module[{$CellContext`norm, $CellContext`ca, $CellContext`sa, \
$CellContext`p2, $CellContext`normRot, $CellContext`normRotNeg, \
$CellContext`p2Neg}, $CellContext`ca = 
          Cos[$CellContext`alpha]; $CellContext`sa = 
          Sin[$CellContext`alpha]; $CellContext`norm = \
$CellContext`ellGrad[$CellContext`a, 
            Part[$CellContext`p1, 1], 
            
            Part[$CellContext`p1, 
             2]]; $CellContext`normRot = $CellContext`rot[$CellContext`norm, \
$CellContext`sa, $CellContext`ca]; $CellContext`normRotNeg = \
$CellContext`rot[$CellContext`norm, -$CellContext`sa, $CellContext`ca]; \
$CellContext`p2 = Part[
            $CellContext`ellInterRayUnprot[$CellContext`a, $CellContext`p1, \
$CellContext`normRot], 2]; $CellContext`p2Neg = Part[
            $CellContext`ellInterRayUnprot[$CellContext`a, $CellContext`p1, \
$CellContext`normRotNeg], 
            2]; {$CellContext`p2, $CellContext`p2Neg}], $CellContext`rot[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`st, 
          Blank[]], 
         Pattern[$CellContext`ct, 
          Blank[]]] := 
       Module[{$CellContext`m}, $CellContext`m = {{$CellContext`ct, \
-$CellContext`st}, {$CellContext`st, $CellContext`ct}}; 
         Dot[$CellContext`m, $CellContext`p]], $CellContext`rot[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := $CellContext`rot[$CellContext`p, 
         Sin[$CellContext`t], 
         Cos[$CellContext`t]], $CellContext`ellInterRayUnprot[
         Pattern[$CellContext`a, 
          Blank[]], {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, {
          Pattern[$CellContext`nx, 
           Blank[]], 
          Pattern[$CellContext`ny, 
           Blank[]]}] := 
       Module[{$CellContext`c2, $CellContext`c1, $CellContext`c0, \
$CellContext`ss}, $CellContext`c2 = $CellContext`nx^2 + $CellContext`a^2 \
$CellContext`ny^2; $CellContext`c1 = 
          2 ($CellContext`nx $CellContext`x + $CellContext`a^2 \
$CellContext`ny $CellContext`y); $CellContext`c0 = $CellContext`x^2 + \
$CellContext`a^2 (-1 + $CellContext`y^2); $CellContext`ss = \
$CellContext`quadRootsUnprot[$CellContext`c2, $CellContext`c1, \
$CellContext`c0]; 
         Map[$CellContext`ray[{$CellContext`x, $CellContext`y}, \
{$CellContext`nx, $CellContext`ny}, #]& , $CellContext`ss]], \
$CellContext`quadRootsUnprot[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]]] := 
       Module[{$CellContext`det = $CellContext`b^2 - 
           4 $CellContext`a $CellContext`c, $CellContext`sqrtDet}, \
$CellContext`sqrtDet = 
          Sqrt[$CellContext`det]; {-$CellContext`b - $CellContext`sqrtDet, \
-$CellContext`b + $CellContext`sqrtDet}/(2 $CellContext`a)]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.768676802105847*^9, {3.7686768531304374`*^9, 3.7686768703244553`*^9}, 
   3.768677041361*^9, 3.7686770931465073`*^9, {3.7686779959501677`*^9, 
   3.7686780174835796`*^9}, 3.768678103809621*^9, 3.768679354274951*^9, 
   3.768679439246518*^9, 3.7686803643808346`*^9, 3.768680400420452*^9, 
   3.7686804356223097`*^9, 3.7686806238701715`*^9, 3.7686809257920866`*^9, {
   3.7686810771213517`*^9, 3.768681134786375*^9}, 3.76868123261674*^9, {
   3.7686814008641405`*^9, 3.7686814072201414`*^9}, {3.7686815217964163`*^9, 
   3.7686815458168273`*^9}, 3.7686833983754635`*^9, {3.768683505629734*^9, 
   3.768683515747241*^9}, 3.768684408136603*^9, {3.768768385490847*^9, 
   3.7687683968145633`*^9}, 3.7687703719041166`*^9, 3.768855585499406*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Config Quad", "Section",
 CellChangeTimes->{{3.768676506467497*^9, 3.768676510233408*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getQuadVtx"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getQuadVtx", "[", 
    RowBox[{"a_", ",", "p1_", ",", "alpha_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p2", ",", "p2Neg", ",", "p3", ",", "p3Neg"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p2", ",", "p2Neg"}], "}"}], "=", 
       RowBox[{"getP2Alpha", "[", 
        RowBox[{"a", ",", "p1", ",", "alpha"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p3", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p1", ",", "p2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p3Neg", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p1", ",", "p2Neg"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"p2", ",", "p2Neg", ",", "p3", ",", "p3Neg"}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "@", "getQuadVtx0"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"not", " ", "for", " ", "error", " ", "purposes"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getQuadVtx0", "[", 
    RowBox[{"a_", ",", "p1_", ",", "alpha_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p2", ",", "p2Neg", ",", "p3"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p2", ",", "p2Neg"}], "}"}], "=", 
       RowBox[{"getP2Alpha", "[", 
        RowBox[{"a", ",", "p1", ",", "alpha"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p3", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p1", ",", "p2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p3", ",", "p2Neg"}], "}"}]}]}], "]"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.7678103358793087`*^9, 3.767810405181562*^9}, {
   3.7679078722354126`*^9, 3.7679078990197716`*^9}, {3.76816594350351*^9, 
   3.7681659458631964`*^9}, 3.7684907596430063`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "quadAlphaT15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"quadAlphaT15", "=", 
   RowBox[{"calcAlphaT", "[", 
    RowBox[{"False", ",", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", "0"}], "]"}], ",", "\"\<data/quadAlphaT_a15.m\>\"", 
     ",", "1.5", ",", ".794", ",", "1", ",", "False"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7684071525810595`*^9, 3.7684071853724103`*^9}, {
  3.768407254654282*^9, 3.7684073094452147`*^9}, {3.768407393918211*^9, 
  3.7684074191809645`*^9}, {3.768472010562721*^9, 3.7684720451074305`*^9}, {
  3.768472698027819*^9, 3.768472702397235*^9}, {3.76885620722372*^9, 
  3.7688562142529206`*^9}, {3.7688566663260665`*^9, 3.7688566694048033`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"loaded: \"\>", "\[InvisibleSpace]", "360", 
   "\[InvisibleSpace]", "\<\" records from\"\>", 
   "\[InvisibleSpace]", "\<\"data/quadAlphaT_a15.m\"\>"}],
  SequenceForm["loaded: ", 360, " records from", "data/quadAlphaT_a15.m"],
  Editable->False]], "Print",
 CellChangeTimes->{3.768856270003604*^9, 3.768856670192724*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotCS", "[", 
  RowBox[{"quadAlphaT15", ",", "getQuadVtx0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7686765716840863`*^9, 3.7686765761950235`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 360, 1}}, Typeset`size$$ = {
    729., {183.5, 189.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`i$13746$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$13746$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`cs$9063 = Graphics3D[{Thick, 
           PointSize[Large], 
           MapThread[{#, 
             Line[
              Part[$CellContext`coss$9063, #2]], 
             Point[
              Part[
               Part[$CellContext`coss$9063, #2], $CellContext`i$$]]}& , {
             Take[$CellContext`clrs$9063, $CellContext`n$9063], 
             Range[$CellContext`n$9063]}]}, SphericalRegion -> True, Axes -> 
          True, AxesLabel -> Map[Style[#, {Black, 14}]& , {"c1", "c2", "c3"}],
           ImageSize -> Medium]; $CellContext`poly$9063 = Show[
          $CellContext`showOnePoly[{"a" -> 1.5, "tsDeg" -> CompressedData["
1:eJwV0wV3EAQUBeAxumPAqDFGx4iNZgNGd23UaBaUUkqKiNKN0h0GKBh0KCgY
oDQoGHQJUkoJKCjf3jnfvT/gnheWMDh2UKqAgIB+KeFSKpDUpCEt6UhPBjKS
icxkISvZyE4OcpKLIHKTh7wEk4/8FKAghQihMKEUIYyiFKM4JShJKUpThrKU
I5zyVKAilYggkspUoSrVqE4NalKLKKKpTR3qEkM96tOAhjSiMU1oSjOa04KW
tKI1bWhLO2KJoz0d6EgnOhNPF7rSje70oCe96E0CiSSRTB/6pmxEfwbwEi8z
kEEMZghDeYVXGcZwRjCSUYzmNcbwOmN5g3G8yVuMZwITmcRkpjCVaUxnBjOZ
xWzm8DbvMJd5zGcBC1nEYpawlGUsZwUrWcVq1vAu7/E+H7CWdXzIR6xnAx/z
CZ/yGRvZxGa2sJVtbGcHO9nF53zBbvbwJV+xl318zTd8y3fs5wDf8wMHOcRh
jnCUYxznBCf5kZ84xWl+5hd+5TfOcJZznOcCF7nEZa5wlWv8znVu8Ac3ucVt
7nCXP/mLe9znAQ95xN885glP+Yd/ecZz/uN/Up4/FYGkJg1pSUd6MpCRTGQm
C1nJRnZykJNcBJGbPOQlmHzkpwAFKUQIhQmlCGEUpRjFKUFJSlGaMpSlHOGU
pwIVqUQEkVSmClWpRnVqUJNaRBFNbepQlxjqUZ8GNKQRjWlCU5rRnBa0pBWt
aUNb2hFLHO3pQEc60Zl4utCVbnSnBz3pRW8SSCSJZPrQlxeua5bx
             "], "tsRad" -> CompressedData["
1:eJwtlHlczPkfx+doappmprm+MyO2so740ZJjFdbnhfhR9ofaHD/FjyTHKmtT
7rJuuVosuRZZS64s5SpkqaytUBLtpvqFLsdM9/17/B6f9/wx85iZ7/fzfb9f
x7P7vHC/ELFIJFr4/zd6eR3zOzX+dRzjnydZQfWa2sqcRPp+hW31fudjnp5C
v99iPfdpjt4ef5f+T2cln45GDuj6gK7LYF8c8nAR78ui6/9g61hG5jNFNt2X
y0K+d/f0S39C9z9lqswo5Yj2Z3ROPrvmdL+kh9dzOq+AzQpTJitXvKBzC5nk
/rTt9Ukv6fxX7JxwMqi4poie8zebsqjaI7NPMT3vNVtb7CSdMaiEnlvCJsux
dNKUUnp+KesxKOQFwspojjLWMGvH6KE7/0vzlLM/Nl8+3zexnOZ6w45dzhec
s97QfG/Zdy+bo3Vv39Kc79g4qUuVrU0FzVvBzO7e37R2r6S5K1nNtEV3PrIq
mr+K3Y3Z3ac8qJr2qGb7Eq/+WLimhvZ5zxbkF7b9Gf+e9vrAhne0L0i//oH2
+8jUfXo8TX7+kfb8xCx9Tn/2fNUn2vcTe5WW4pcrt9DeFvbA79HWRwcttL+F
XXpXlPp7byvpYGWH1n6wpCVbSQ8r26AVu93wriVdatmSM/rA3/JqSZ86FjCi
d9yFeXWkUx1jTzwzzljqSK961jfEt/VETD3pVs90LUEDjzg2kH4NrG33spAD
xxtIxwb2tsfGw3vcG0nPRvbkxoHc7amNpGsTu/n1WZtNvk2kbxNLKLvltf5V
E+nczHZFZYetXNRMejezKGVJwvKmZtK9hc09aS38dmsL6d/CfL6UqUONreRD
Kxvy2DR27i+t5Ecrc/7PP1bOGtJGvrQxef3IiwG/t5E/7cy6fXLZZL928qmd
FTnPM/mUtpNfHezh1YhJ3ss6yLcOdnnC1g2jOjvIv04W/3d8iufuTvKxk432
KlgRrxaB+ylCysY5e43TROC+itAvpyJx3zERuL8inDAvf6h5IwL3WQwhuPX1
rv5icL/F2HFxU4siQgzuuxidjSph220xuP9ifD/m4ACZVAKeAwkqdrr6/OAj
Ac+DBEEvzs3vjJOA50KCZ90HR699KQHPhwT//DY1vtlVCp4TKVJTxl2LXCgF
z4sUHuLcnNrLUvDcSHHGd0blskYpeH5s0PWnUumHUTbgObLBnpLFzku22IDn
yQY2/eo8K7JtwHNlg1Ur1vmHCDLwfMnw4a5tWFmgDDxnMgQr9m6bc1oGnjcZ
Cr/pkvBXtQw8d7b4+udTaTMH24Lnzxb3K/sVFqy2Bc+hLYYNSbb637cFz6Mt
zq8fpXpqbweeSzu4Psp0+9dUO/B82uGAfuqYx4fswHNqB8XsV4ETSuzA8ypH
9NngqIducvDcylFnrYkbEy4Hz68ci76KvHA3RQ6eYzmKt3ZmjOyQg+fZHv7P
tpXeHGcPnmt7ZHbTtX25yx483/YYGXrEeC3fHjzn9rhypaeHRzcFeN4V6N12
0fdSsAI89wocGT9sQb/zCvD8K6CJuxdz1qoA74EDNhdNPNJruAN4HxzQ0isv
+dQGB/BeOCB8WeATl0cO4P1wQPmtN1VHNUrwnigxQxYuc5qhBO+LEtmTm1wO
/qwE740SYw5vGG54pwTvjwrXyxUBcV+owHukQv8B+8PVkSrwPqlwctVnO2LT
VOC9UsH44MxpuUwN3i81YtUD726epAbvmRqimTdfSvarwfumRkTCmLroIjV4
79SofP9Y3f65I3j/HDHbM6Dv6sWO4D10RN4PxWMbrziC99ERE7JDZ0c0O4L3
UoPi2JWpK1011E8NunikTRzmraGeauBfIH5RH6qhvmqwe834+ddiNdRbDbJc
Yy3LL2uovxpIM3LXe+RpqMcafLXEoPzUoKE+a7FSMzP+kpOWeq3Fb8nHei8d
paV+a1Hz77Kr/eZpqedauIncRldt1lLftZj7y5Kcs+e01HstjvokzQrN1lL/
tSj4WFfRy6IlDuigPeAVWW7QEQ908B2+XprgqSMu6LDl9f29cwN1xAcd7m2y
c3aN0REndGjpO+l8cYKOeKHD0Ny9nscydcQNHcIjnj+cVa0jfuiQ2MXJ38lR
TxzRo/zO7JLCQXriiR4u8xOWHpymJ67oMdO+oiVgtZ74osf+S/23GY7riTN6
5Ph/J+Sl64k3esibk0/FvdETd/QYe7xlwBR7A/HHgHVjWZra3UAcMuBGxUaf
7CkG4pEB1l1ZL2IjDMQlA9wHq0J8DhmITwaEFk61ylMNxCkDTq37KTrztYF4
ZcBfnxcpt0gF4pYAY5bLYW83gfglYOrS+W5SX4E4JiBWd+5aephAPBOQcf39
6JgfBeKaAFHQoNxRKQLxTcAISVRg+0uBOCdgxa+3K2+3C8Q7I5ImiaJWdzcS
94yosnjbeI0zEv+M6Hlwe1zjQiNx0Ig5I3OcU3YaiYdGxJfqLkQkGYmLRuRv
me41ON9IfDRC3f9ohqXRSJw0YeLTEv+kribipQkbI3uVhjETcdOEO10Xh7kH
m4ifJjTdu9RavcVEHDVh0ILabYmJJuKpCUsdPI2LckzEVRN+TVqb4GY1EV/N
KAtIH/hWMBNnzejWKrtz2stMvDVj+gkf3+AgM3HXjLhxewq7bzATf834syov
pOS0mThshu1ec+3xLDPx2AwMDYoJqjETl81Y8+qkqpumC/4HDy/69Q==
             "], "alphas" -> CompressedData["
1:eJztlP9P1HUcx++UYAPUTVknhnB33ALRHB7CitiedxKuZDmiMrwZwUEQUVwI
LO120OAk08IF2Oam1mEGZiiaUomASavFkDG1BDqx3fevn0+S5RmMq1+e61/o
B375bJ99Pp/35/V6fnko9IbCV6USieS1fy+yL/Nv+SZsUEedL9PesKF+6+uX
NNM27Ph0UGp12tDYn5e88KcN9+OK1Qei7ch5ty1xV7Idmuc7k5/R2KH/+Oq4
vNSOzDMDHb377Kg6+OaV/l47Rr/+HOFJOzZlfXv06SgHbk6XjBU+7kCpSaK6
Xe1AuWXwsW6LA5/k7YyvnXJg1dkOw/xKJ55UehtjtzuxXFE3VHHAib6rVxJu
/OiEOz4mJyHSBeULhmMr8lzoTApfNpldMD3XKs/+3oWN4Tu6RyLciFzf9dBc
rhu3V4+ev9jixuTpioG0ETcs7aUXcpZ4IGnVZUxoPHhCm2cda/SgaH/ZnoTL
HkRuqcw8HfJgRUezrnKzFzKlkKY1eBH1wcBI2ikvtnz4XUhm82LZg5B6Id6H
yqUpBTcLfMi986ClvdWHic6+bPWAD7OKDfd6BR9KLk68JFX44U71DacW+hGr
T2pSNPvR89fwUW+fH44Lr4w2zfhhWDtXYI8OYIcwJY3LCmBjaLtqZUkAP0xK
qmb2B3B/tNC6ty+A3V/kTzt/CUB+2LxUNR/A+7JlGVnyIDreyGhIzA2ibrk8
PFMeRNEJaco7+4Kob1tfPPtZEGvK61O3jQRhuZYfb/4tiK6TVde65oO4VzPl
6JEJOHVGJj2ySYCv+4/hhm0Cfj9u/EarF2Aam307vEfA39bVTefaBKS3X4Lu
hIAlX5nXzPcLUEWsevnITwIKDmZqNv8qQGmtcI37BTR21eiq5wR0x2xoi4kW
ERln3nlOJmJr4lt7i1UilIfWHYpLF7HOaEj6OVuEf8j+keUpEalyU7rxWRHm
otiUshdFLDx6vVm3S0RoSKXW60VoFckRxkoR5YkNPSerRdTeffisrUaEcW7w
PXWtiLXjd1sO7xZxK7/5ekzdf/d8zvf5Pc/j+fwf/895OB/n5fzch/txX+5P
PagP9aJ+1JP6Um/qTz/oD/2if/ST/tJv+s88MB/MC/PDPDFfzBvzxzwyn8wr
88s8M9/MO/PPPrAf7Av7wz6xX+wb+8c+sp/sK/vLPrPf7Dv7Tx6QD+QF+UGe
kC/kDflDHpFP5BX5RZ6Rb+Qd+Uceko/kJflJnpKv5C35Sx4v8nmRz4t8XuTz
Ip//n3z+BxTBnAM=
             "], 
            "mins" -> {{
              8.310800345984085*^-17, {$CellContext`alpha -> 
                0.5880026059143145}}, {
              4.1316688635787193`*^-16, {$CellContext`alpha -> 
                0.5882880160499779}}, {
              2.874636360932126*^-15, {$CellContext`alpha -> 
                0.5891421929283767}}, {
              4.7112898697454875`*^-15, {$CellContext`alpha -> 
                0.5905590089796628}}, {
              3.3411482297643588`*^-15, {$CellContext`alpha -> 
                0.5925284089004916}}, {
              1.6964459188366706`*^-16, {$CellContext`alpha -> 
                0.5950366004696254}}, {
              5.339037091637457*^-16, {$CellContext`alpha -> 
                0.5980663868722398}}, {
              1.2896958546571488`*^-15, {$CellContext`alpha -> 
                0.6015973753843369}}, {
              7.196159901361773*^-16, {$CellContext`alpha -> 
                0.6056064642222732}}, {
              1.8264758555435622`*^-13, {$CellContext`alpha -> 
                0.6100681195652614}}, {
              7.691163034749304*^-21, {$CellContext`alpha -> 
                0.6149553068502033}}, {
              3.501334937527062*^-20, {$CellContext`alpha -> 
                0.6202388995350188}}, {
              7.095300016848851*^-20, {$CellContext`alpha -> 
                0.6258891163831263}}, {
              9.479567416201315*^-20, {$CellContext`alpha -> 
                0.6318754188312945}}, {
              3.7111041200996575`*^-15, {$CellContext`alpha -> 
                0.6381669715082517}}, {
              1.2770550940273927`*^-15, {$CellContext`alpha -> 
                0.6447330373166946}}, {
              4.2541083115657495`*^-16, {$CellContext`alpha -> 
                0.6515431876270447}}, {
              1.5883477821533728`*^-16, {$CellContext`alpha -> 
                0.6585676364170204}}, {
              7.973141390839333*^-17, {$CellContext`alpha -> 
                0.6657774428104583}}, {
              5.190536571260792*^-17, {$CellContext`alpha -> 
                0.6731446952553897}}, {
              2.980308169587997*^-17, {$CellContext`alpha -> 
                0.6806426583844623}}, {
              5.084967977341629*^-18, {$CellContext`alpha -> 
                0.6882458851549104}}, {
              1.018471860334005*^-17, {$CellContext`alpha -> 
                0.695930297365184}}, {
              1.1779720184831278`*^-16, {$CellContext`alpha -> 
                0.7036732379283301}}, {
              3.883695105260305*^-16, {$CellContext`alpha -> 
                0.7114534983871149}}, {
              7.56815491921161*^-16, {$CellContext`alpha -> 
                0.7192513251211261}}, {
              9.337914933933004*^-16, {$CellContext`alpha -> 
                0.7270484075573627}}, {
              5.486078352095916*^-16, {$CellContext`alpha -> 
                0.7348278514844214}}, {
              1.9322296455739302`*^-13, {$CellContext`alpha -> 
                0.7425740871598192}}, {
              2.8369718656026346`*^-15, {$CellContext`alpha -> 
                0.7502730868405544}}, {
              2.090910658886352*^-14, {$CellContext`alpha -> 
                0.7579117777824536}}, {
              1.3803418337548845`*^-19, {$CellContext`alpha -> 
                0.7654785444411011}}, {
              5.51273441783322*^-19, {$CellContext`alpha -> 
                0.7729627944320425}}, {
              6.311608004823292*^-17, {$CellContext`alpha -> 
                0.7803550761255458}}, {
              7.974380181778478*^-17, {$CellContext`alpha -> 
                0.7876469390654125}}, {
              9.356740573541533*^-17, {$CellContext`alpha -> 
                0.7948308790665263}}, {
              1.0187310383898143`*^-16, {$CellContext`alpha -> 
                0.8019002745535325}}, {
              1.0245435259180879`*^-16, {$CellContext`alpha -> 
                0.8088493212239103}}, {
              9.423698910502682*^-17, {$CellContext`alpha -> 
                0.815672969394457}}, {
              7.777288604300088*^-17, {$CellContext`alpha -> 
                0.82236686377301}}, {
              5.54708823188193*^-17, {$CellContext`alpha -> 
                0.8289272859246711}}, {
              3.1480251389454276`*^-17, {$CellContext`alpha -> 
                0.8353510996136269}}, {
              5.5450986005968596`*^-14, {$CellContext`alpha -> 
                0.8416356820098925}}, {
              1.5742746923586075`*^-19, {$CellContext`alpha -> 
                0.8477789607183404}}, {
              4.757659218523799*^-18, {$CellContext`alpha -> 
                0.8537791965802882}}, {
              2.7684391413881282`*^-17, {$CellContext`alpha -> 
                0.859635113035496}}, {
              7.061158546608911*^-17, {$CellContext`alpha -> 
                0.8653457700272229}}, {
              1.3179462136534263`*^-16, {$CellContext`alpha -> 
                0.8709105446447691}}, {
              3.4065368706578852`*^-22, {$CellContext`alpha -> 
                0.876329095998626}}, {
              6.716883948442307*^-22, {$CellContext`alpha -> 
                0.8816013370664659}}, {
              1.1282016841889525`*^-21, {$CellContext`alpha -> 
                0.8867274006986514}}, {
              1.6495982686661998`*^-21, {$CellContext`alpha -> 
                0.8917076159330228}}, {
              2.113593696802763*^-21, {$CellContext`alpha -> 
                0.8965424826804725}}, {
              2.347002486849098*^-21, {$CellContext`alpha -> 
                0.9012326491914122}}, {
              2.1826273803424108`*^-21, {$CellContext`alpha -> 
                0.9057788914402956}}, {
              1.5496146888085387`*^-21, {$CellContext`alpha -> 
                0.9101820942967019}}, {
              6.2353070824105*^-22, {$CellContext`alpha -> 
                0.9144432343558883}}, {
              4.4331563535632164`*^-24, {$CellContext`alpha -> 
                0.9185633643068755}}, {
              5.913791024840629*^-17, {$CellContext`alpha -> 
                0.9225435983508801}}, {
              4.103363781830186*^-18, {$CellContext`alpha -> 
                0.9263851012478441}}, {
              2.0701096450335697`*^-17, {$CellContext`alpha -> 
                0.9300890722398691}}, {
              1.4323462635301766`*^-16, {$CellContext`alpha -> 
                0.9336567396225527}}, {
              1.0711499960482266`*^-20, {$CellContext`alpha -> 
                0.9370893489805676}}, {
              1.0484025347271401`*^-19, {$CellContext`alpha -> 
                0.9403881520952084}}, {
              1.458489825408322*^-19, {$CellContext`alpha -> 
                0.9435544034326614}}, {
              1.9132406077064914`*^-19, {$CellContext`alpha -> 
                0.9465893506105634}}, {
              2.39055875468529*^-19, {$CellContext`alpha -> 
                0.9494942286664507}}, {
              2.864305864712593*^-19, {$CellContext`alpha -> 
                0.9522702543967082}}, {
              3.30638756526782*^-19, {$CellContext`alpha -> 
                0.9549186212888394}}, {
              3.6891585544338336`*^-19, {$CellContext`alpha -> 
                0.9574404949858657}}, {
              3.9874333863866553`*^-19, {$CellContext`alpha -> 
                0.9598370092331552}}, {
              4.1813045349222833`*^-19, {$CellContext`alpha -> 
                0.9621092622620648}}, {
              4.2573572687257797`*^-19, {$CellContext`alpha -> 
                0.9642583135686014}}, {
              4.2099682136553974`*^-19, {$CellContext`alpha -> 
                0.9662851810488784}}, {
              4.0424046102160845`*^-19, {$CellContext`alpha -> 
                0.9681908384564648}}, {
              3.7658698185854744`*^-19, {$CellContext`alpha -> 
                0.9699762131498247}}, {
              3.3992853580334424`*^-19, {$CellContext`alpha -> 
                0.9716421841009157}}, {
              2.966919511263878*^-19, {$CellContext`alpha -> 
                0.9731895801387018}}, {
              2.496689609325581*^-19, {$CellContext`alpha -> 
                0.9746191784038027}}, {
              2.0179637934632314`*^-19, {$CellContext`alpha -> 
                0.9759317029928286}}, {
              1.55795674679173*^-19, {$CellContext`alpha -> 
                0.9771278237730859}}, {
              1.1405888313607938`*^-19, {$CellContext`alpha -> 
                0.9782081553503348}}, {
              7.836079676554319*^-20, {$CellContext`alpha -> 
                0.9791732561741502}}, {
              4.976190911055686*^-20, {$CellContext`alpha -> 
                0.980023627767167}}, {
              2.8545228878217815`*^-20, {$CellContext`alpha -> 
                0.9807597140661235}}, {
              1.424438780282961*^-20, {$CellContext`alpha -> 
                0.9813819008641432}}, {
              5.777953563658473*^-21, {$CellContext`alpha -> 
                0.9818905153451394}}, {
              1.6480237193307624`*^-21, {$CellContext`alpha -> 
                0.9822858257025883}}, {
              5.834875098378718*^-16, {$CellContext`alpha -> 
                0.9825680400098088}}, {
              3.097733896706883*^-20, {$CellContext`alpha -> 
                0.9827373101274507}}, {
              5.0210744738960745`*^-21, {$CellContext`alpha -> 
                0.9827937232497516}}, {
              3.097733896706883*^-20, {$CellContext`alpha -> 
                0.9827373101274507}}, {
              5.834875098378718*^-16, {$CellContext`alpha -> 
                0.9825680400098088}}, {
              1.6480237193307624`*^-21, {$CellContext`alpha -> 
                0.9822858257025883}}, {
              5.777953563658473*^-21, {$CellContext`alpha -> 
                0.9818905153451394}}, {
              1.424438780282961*^-20, {$CellContext`alpha -> 
                0.9813819008641432}}, {
              2.8545228878217815`*^-20, {$CellContext`alpha -> 
                0.9807597140661235}}, {
              4.976190911055686*^-20, {$CellContext`alpha -> 
                0.980023627767167}}, {
              7.836079676554319*^-20, {$CellContext`alpha -> 
                0.9791732561741502}}, {
              1.1405888313607938`*^-19, {$CellContext`alpha -> 
                0.9782081553503348}}, {
              1.55795674679173*^-19, {$CellContext`alpha -> 
                0.9771278237730859}}, {
              2.0179637934632314`*^-19, {$CellContext`alpha -> 
                0.9759317029928286}}, {
              2.496689609325581*^-19, {$CellContext`alpha -> 
                0.9746191784038027}}, {
              2.966919511263878*^-19, {$CellContext`alpha -> 
                0.9731895801387018}}, {
              3.3992853580334424`*^-19, {$CellContext`alpha -> 
                0.9716421841009157}}, {
              3.7658698185854744`*^-19, {$CellContext`alpha -> 
                0.9699762131498247}}, {
              4.0424046102160845`*^-19, {$CellContext`alpha -> 
                0.9681908384564648}}, {
              4.2099682136553974`*^-19, {$CellContext`alpha -> 
                0.9662851810488784}}, {
              4.2573572687257797`*^-19, {$CellContext`alpha -> 
                0.9642583135686014}}, {
              4.1813045349222833`*^-19, {$CellContext`alpha -> 
                0.9621092622620648}}, {
              3.9874333863866553`*^-19, {$CellContext`alpha -> 
                0.9598370092331552}}, {
              3.6891585544338336`*^-19, {$CellContext`alpha -> 
                0.9574404949858657}}, {
              3.30638756526782*^-19, {$CellContext`alpha -> 
                0.9549186212888394}}, {
              2.864305864712593*^-19, {$CellContext`alpha -> 
                0.9522702543967082}}, {
              2.39055875468529*^-19, {$CellContext`alpha -> 
                0.9494942286664507}}, {
              1.9132406077064914`*^-19, {$CellContext`alpha -> 
                0.9465893506105634}}, {
              1.458489825408322*^-19, {$CellContext`alpha -> 
                0.9435544034326614}}, {
              1.0484025347271401`*^-19, {$CellContext`alpha -> 
                0.9403881520952084}}, {
              1.0711499960482266`*^-20, {$CellContext`alpha -> 
                0.9370893489805676}}, {
              1.4323462635301766`*^-16, {$CellContext`alpha -> 
                0.9336567396225527}}, {
              2.0701096450335697`*^-17, {$CellContext`alpha -> 
                0.9300890722398691}}, {
              4.103363781830186*^-18, {$CellContext`alpha -> 
                0.9263851012478441}}, {
              5.913791024840629*^-17, {$CellContext`alpha -> 
                0.9225435983508801}}, {
              4.4331563535632164`*^-24, {$CellContext`alpha -> 
                0.9185633643068755}}, {
              6.2353070824105*^-22, {$CellContext`alpha -> 
                0.9144432343558883}}, {
              1.5496146888085387`*^-21, {$CellContext`alpha -> 
                0.9101820942967019}}, {
              2.1826273803424108`*^-21, {$CellContext`alpha -> 
                0.9057788914402956}}, {
              2.347002486849098*^-21, {$CellContext`alpha -> 
                0.9012326491914122}}, {
              2.113593696802763*^-21, {$CellContext`alpha -> 
                0.8965424826804725}}, {
              1.6495982686661998`*^-21, {$CellContext`alpha -> 
                0.8917076159330228}}, {
              1.1282016841889525`*^-21, {$CellContext`alpha -> 
                0.8867274006986514}}, {
              6.716883948442307*^-22, {$CellContext`alpha -> 
                0.8816013370664659}}, {
              3.4065368706578852`*^-22, {$CellContext`alpha -> 
                0.876329095998626}}, {
              1.3179462136534263`*^-16, {$CellContext`alpha -> 
                0.8709105446447691}}, {
              7.061158546608911*^-17, {$CellContext`alpha -> 
                0.8653457700272229}}, {
              2.7684391413881282`*^-17, {$CellContext`alpha -> 
                0.859635113035496}}, {
              4.757659218523799*^-18, {$CellContext`alpha -> 
                0.8537791965802882}}, {
              1.5742746923586075`*^-19, {$CellContext`alpha -> 
                0.8477789607183404}}, {
              5.5450986005968596`*^-14, {$CellContext`alpha -> 
                0.8416356820098925}}, {
              3.1480251389454276`*^-17, {$CellContext`alpha -> 
                0.8353510996136269}}, {
              5.54708823188193*^-17, {$CellContext`alpha -> 
                0.8289272859246711}}, {
              7.777288604300088*^-17, {$CellContext`alpha -> 
                0.82236686377301}}, {
              9.423698910502682*^-17, {$CellContext`alpha -> 
                0.815672969394457}}, {
              1.0245435259180879`*^-16, {$CellContext`alpha -> 
                0.8088493212239103}}, {
              1.0187310383898143`*^-16, {$CellContext`alpha -> 
                0.8019002745535325}}, {
              9.356740573541533*^-17, {$CellContext`alpha -> 
                0.7948308790665263}}, {
              7.974380181778478*^-17, {$CellContext`alpha -> 
                0.7876469390654125}}, {
              6.311608004823292*^-17, {$CellContext`alpha -> 
                0.7803550761255458}}, {
              5.51273441783322*^-19, {$CellContext`alpha -> 
                0.7729627944320425}}, {
              1.3803418337548845`*^-19, {$CellContext`alpha -> 
                0.7654785444411011}}, {
              2.090910658886352*^-14, {$CellContext`alpha -> 
                0.7579117777824536}}, {
              2.8369718656026346`*^-15, {$CellContext`alpha -> 
                0.7502730868405544}}, {
              1.9322296455739302`*^-13, {$CellContext`alpha -> 
                0.7425740871598192}}, {
              5.486078352095916*^-16, {$CellContext`alpha -> 
                0.7348278514844214}}, {
              9.337914933933004*^-16, {$CellContext`alpha -> 
                0.7270484075573627}}, {
              7.56815491921161*^-16, {$CellContext`alpha -> 
                0.7192513251211261}}, {
              3.883695105260305*^-16, {$CellContext`alpha -> 
                0.7114534983871149}}, {
              1.1779720184831278`*^-16, {$CellContext`alpha -> 
                0.7036732379283301}}, {
              1.018471860334005*^-17, {$CellContext`alpha -> 
                0.695930297365184}}, {
              5.084967977341629*^-18, {$CellContext`alpha -> 
                0.6882458851549104}}, {
              2.980308169587997*^-17, {$CellContext`alpha -> 
                0.6806426583844623}}, {
              5.190536571260792*^-17, {$CellContext`alpha -> 
                0.6731446952553897}}, {
              7.973141390839333*^-17, {$CellContext`alpha -> 
                0.6657774428104583}}, {
              1.5883477821533728`*^-16, {$CellContext`alpha -> 
                0.6585676364170204}}, {
              4.2541083115657495`*^-16, {$CellContext`alpha -> 
                0.6515431876270447}}, {
              1.2770550940273927`*^-15, {$CellContext`alpha -> 
                0.6447330373166946}}, {
              3.7111041200996575`*^-15, {$CellContext`alpha -> 
                0.6381669715082517}}, {
              9.479567416201315*^-20, {$CellContext`alpha -> 
                0.6318754188312945}}, {
              7.095300016848851*^-20, {$CellContext`alpha -> 
                0.6258891163831263}}, {
              3.501334937527062*^-20, {$CellContext`alpha -> 
                0.6202388995350188}}, {
              7.691163034749304*^-21, {$CellContext`alpha -> 
                0.6149553068502033}}, {
              1.8264758555435622`*^-13, {$CellContext`alpha -> 
                0.6100681195652614}}, {
              7.196159901361773*^-16, {$CellContext`alpha -> 
                0.6056064642222732}}, {
              1.2896958546571488`*^-15, {$CellContext`alpha -> 
                0.6015973753843369}}, {
              5.339037091637457*^-16, {$CellContext`alpha -> 
                0.5980663868722398}}, {
              1.6964459188366706`*^-16, {$CellContext`alpha -> 
                0.5950366004696254}}, {
              3.3411482297643588`*^-15, {$CellContext`alpha -> 
                0.5925284089004916}}, {
              4.7112898697454875`*^-15, {$CellContext`alpha -> 
                0.5905590089796628}}, {
              2.874636360932126*^-15, {$CellContext`alpha -> 
                0.5891421929283767}}, {
              4.1316688635787193`*^-16, {$CellContext`alpha -> 
                0.5882880160499779}}, {
              8.310800345984085*^-17, {$CellContext`alpha -> 
                0.5880026059143145}}, {
              4.1316688635787193`*^-16, {$CellContext`alpha -> 
                0.5882880160499779}}, {
              2.874636360932126*^-15, {$CellContext`alpha -> 
                0.5891421929283767}}, {
              4.7112898697454875`*^-15, {$CellContext`alpha -> 
                0.5905590089796628}}, {
              3.3411482297643588`*^-15, {$CellContext`alpha -> 
                0.5925284089004916}}, {
              1.6964459188366706`*^-16, {$CellContext`alpha -> 
                0.5950366004696254}}, {
              5.339037091637457*^-16, {$CellContext`alpha -> 
                0.5980663868722398}}, {
              1.2896958546571488`*^-15, {$CellContext`alpha -> 
                0.6015973753843369}}, {
              7.196159901361773*^-16, {$CellContext`alpha -> 
                0.6056064642222732}}, {
              1.8264758555435622`*^-13, {$CellContext`alpha -> 
                0.6100681195652614}}, {
              7.691163034749304*^-21, {$CellContext`alpha -> 
                0.6149553068502033}}, {
              3.501334937527062*^-20, {$CellContext`alpha -> 
                0.6202388995350188}}, {
              7.095300016848851*^-20, {$CellContext`alpha -> 
                0.6258891163831263}}, {
              9.479567416201315*^-20, {$CellContext`alpha -> 
                0.6318754188312945}}, {
              3.7111041200996575`*^-15, {$CellContext`alpha -> 
                0.6381669715082517}}, {
              1.2770550940273927`*^-15, {$CellContext`alpha -> 
                0.6447330373166946}}, {
              4.2541083115657495`*^-16, {$CellContext`alpha -> 
                0.6515431876270447}}, {
              1.5883477821533728`*^-16, {$CellContext`alpha -> 
                0.6585676364170204}}, {
              7.973141390839333*^-17, {$CellContext`alpha -> 
                0.6657774428104583}}, {
              5.190536571260792*^-17, {$CellContext`alpha -> 
                0.6731446952553897}}, {
              2.980308169587997*^-17, {$CellContext`alpha -> 
                0.6806426583844623}}, {
              5.084967977341629*^-18, {$CellContext`alpha -> 
                0.6882458851549104}}, {
              1.018471860334005*^-17, {$CellContext`alpha -> 
                0.695930297365184}}, {
              1.1779720184831278`*^-16, {$CellContext`alpha -> 
                0.7036732379283301}}, {
              3.883695105260305*^-16, {$CellContext`alpha -> 
                0.7114534983871149}}, {
              7.56815491921161*^-16, {$CellContext`alpha -> 
                0.7192513251211261}}, {
              9.337914933933004*^-16, {$CellContext`alpha -> 
                0.7270484075573627}}, {
              5.486078352095916*^-16, {$CellContext`alpha -> 
                0.7348278514844214}}, {
              1.9322296455739302`*^-13, {$CellContext`alpha -> 
                0.7425740871598192}}, {
              2.8369718656026346`*^-15, {$CellContext`alpha -> 
                0.7502730868405544}}, {
              2.090910658886352*^-14, {$CellContext`alpha -> 
                0.7579117777824536}}, {
              1.3803418337548845`*^-19, {$CellContext`alpha -> 
                0.7654785444411011}}, {
              5.51273441783322*^-19, {$CellContext`alpha -> 
                0.7729627944320425}}, {
              6.311608004823292*^-17, {$CellContext`alpha -> 
                0.7803550761255458}}, {
              7.974380181778478*^-17, {$CellContext`alpha -> 
                0.7876469390654125}}, {
              9.356740573541533*^-17, {$CellContext`alpha -> 
                0.7948308790665263}}, {
              1.0187310383898143`*^-16, {$CellContext`alpha -> 
                0.8019002745535325}}, {
              1.0245435259180879`*^-16, {$CellContext`alpha -> 
                0.8088493212239103}}, {
              9.423698910502682*^-17, {$CellContext`alpha -> 
                0.815672969394457}}, {
              7.777288604300088*^-17, {$CellContext`alpha -> 
                0.82236686377301}}, {
              5.54708823188193*^-17, {$CellContext`alpha -> 
                0.8289272859246711}}, {
              3.1480251389454276`*^-17, {$CellContext`alpha -> 
                0.8353510996136269}}, {
              5.5450986005968596`*^-14, {$CellContext`alpha -> 
                0.8416356820098925}}, {
              1.5742746923586075`*^-19, {$CellContext`alpha -> 
                0.8477789607183404}}, {
              4.757659218523799*^-18, {$CellContext`alpha -> 
                0.8537791965802882}}, {
              2.7684391413881282`*^-17, {$CellContext`alpha -> 
                0.859635113035496}}, {
              7.061158546608911*^-17, {$CellContext`alpha -> 
                0.8653457700272229}}, {
              1.3179462136534263`*^-16, {$CellContext`alpha -> 
                0.8709105446447691}}, {
              3.4065368706578852`*^-22, {$CellContext`alpha -> 
                0.876329095998626}}, {
              6.716883948442307*^-22, {$CellContext`alpha -> 
                0.8816013370664659}}, {
              1.1282016841889525`*^-21, {$CellContext`alpha -> 
                0.8867274006986514}}, {
              1.6495982686661998`*^-21, {$CellContext`alpha -> 
                0.8917076159330228}}, {
              2.113593696802763*^-21, {$CellContext`alpha -> 
                0.8965424826804725}}, {
              2.347002486849098*^-21, {$CellContext`alpha -> 
                0.9012326491914122}}, {
              2.1826273803424108`*^-21, {$CellContext`alpha -> 
                0.9057788914402956}}, {
              1.5496146888085387`*^-21, {$CellContext`alpha -> 
                0.9101820942967019}}, {
              6.2353070824105*^-22, {$CellContext`alpha -> 
                0.9144432343558883}}, {
              4.4331563535632164`*^-24, {$CellContext`alpha -> 
                0.9185633643068755}}, {
              5.913791024840629*^-17, {$CellContext`alpha -> 
                0.9225435983508801}}, {
              4.103363781830186*^-18, {$CellContext`alpha -> 
                0.9263851012478441}}, {
              2.0701096450335697`*^-17, {$CellContext`alpha -> 
                0.9300890722398691}}, {
              1.4323462635301766`*^-16, {$CellContext`alpha -> 
                0.9336567396225527}}, {
              1.0711499960482266`*^-20, {$CellContext`alpha -> 
                0.9370893489805676}}, {
              1.0484025347271401`*^-19, {$CellContext`alpha -> 
                0.9403881520952084}}, {
              1.458489825408322*^-19, {$CellContext`alpha -> 
                0.9435544034326614}}, {
              1.9132406077064914`*^-19, {$CellContext`alpha -> 
                0.9465893506105634}}, {
              2.39055875468529*^-19, {$CellContext`alpha -> 
                0.9494942286664507}}, {
              2.864305864712593*^-19, {$CellContext`alpha -> 
                0.9522702543967082}}, {
              3.30638756526782*^-19, {$CellContext`alpha -> 
                0.9549186212888394}}, {
              3.6891585544338336`*^-19, {$CellContext`alpha -> 
                0.9574404949858657}}, {
              3.9874333863866553`*^-19, {$CellContext`alpha -> 
                0.9598370092331552}}, {
              4.1813045349222833`*^-19, {$CellContext`alpha -> 
                0.9621092622620648}}, {
              4.2573572687257797`*^-19, {$CellContext`alpha -> 
                0.9642583135686014}}, {
              4.2099682136553974`*^-19, {$CellContext`alpha -> 
                0.9662851810488784}}, {
              4.0424046102160845`*^-19, {$CellContext`alpha -> 
                0.9681908384564648}}, {
              3.7658698185854744`*^-19, {$CellContext`alpha -> 
                0.9699762131498247}}, {
              3.3992853580334424`*^-19, {$CellContext`alpha -> 
                0.9716421841009157}}, {
              2.966919511263878*^-19, {$CellContext`alpha -> 
                0.9731895801387018}}, {
              2.496689609325581*^-19, {$CellContext`alpha -> 
                0.9746191784038027}}, {
              2.0179637934632314`*^-19, {$CellContext`alpha -> 
                0.9759317029928286}}, {
              1.55795674679173*^-19, {$CellContext`alpha -> 
                0.9771278237730859}}, {
              1.1405888313607938`*^-19, {$CellContext`alpha -> 
                0.9782081553503348}}, {
              7.836079676554319*^-20, {$CellContext`alpha -> 
                0.9791732561741502}}, {
              4.976190911055686*^-20, {$CellContext`alpha -> 
                0.980023627767167}}, {
              2.8545228878217815`*^-20, {$CellContext`alpha -> 
                0.9807597140661235}}, {
              1.424438780282961*^-20, {$CellContext`alpha -> 
                0.9813819008641432}}, {
              5.777953563658473*^-21, {$CellContext`alpha -> 
                0.9818905153451394}}, {
              1.6480237193307624`*^-21, {$CellContext`alpha -> 
                0.9822858257025883}}, {
              5.834875098378718*^-16, {$CellContext`alpha -> 
                0.9825680400098088}}, {
              3.097733896706883*^-20, {$CellContext`alpha -> 
                0.9827373101274507}}, {
              5.0210744738960745`*^-21, {$CellContext`alpha -> 
                0.9827937232497516}}, {
              3.097733896706883*^-20, {$CellContext`alpha -> 
                0.9827373101274507}}, {
              5.834875098378718*^-16, {$CellContext`alpha -> 
                0.9825680400098088}}, {
              1.6480237193307624`*^-21, {$CellContext`alpha -> 
                0.9822858257025883}}, {
              5.777953563658473*^-21, {$CellContext`alpha -> 
                0.9818905153451394}}, {
              1.424438780282961*^-20, {$CellContext`alpha -> 
                0.9813819008641432}}, {
              2.8545228878217815`*^-20, {$CellContext`alpha -> 
                0.9807597140661235}}, {
              4.976190911055686*^-20, {$CellContext`alpha -> 
                0.980023627767167}}, {
              7.836079676554319*^-20, {$CellContext`alpha -> 
                0.9791732561741502}}, {
              1.1405888313607938`*^-19, {$CellContext`alpha -> 
                0.9782081553503348}}, {
              1.55795674679173*^-19, {$CellContext`alpha -> 
                0.9771278237730859}}, {
              2.0179637934632314`*^-19, {$CellContext`alpha -> 
                0.9759317029928286}}, {
              2.496689609325581*^-19, {$CellContext`alpha -> 
                0.9746191784038027}}, {
              2.966919511263878*^-19, {$CellContext`alpha -> 
                0.9731895801387018}}, {
              3.3992853580334424`*^-19, {$CellContext`alpha -> 
                0.9716421841009157}}, {
              3.7658698185854744`*^-19, {$CellContext`alpha -> 
                0.9699762131498247}}, {
              4.0424046102160845`*^-19, {$CellContext`alpha -> 
                0.9681908384564648}}, {
              4.2099682136553974`*^-19, {$CellContext`alpha -> 
                0.9662851810488784}}, {
              4.2573572687257797`*^-19, {$CellContext`alpha -> 
                0.9642583135686014}}, {
              4.1813045349222833`*^-19, {$CellContext`alpha -> 
                0.9621092622620648}}, {
              3.9874333863866553`*^-19, {$CellContext`alpha -> 
                0.9598370092331552}}, {
              3.6891585544338336`*^-19, {$CellContext`alpha -> 
                0.9574404949858657}}, {
              3.30638756526782*^-19, {$CellContext`alpha -> 
                0.9549186212888394}}, {
              2.864305864712593*^-19, {$CellContext`alpha -> 
                0.9522702543967082}}, {
              2.39055875468529*^-19, {$CellContext`alpha -> 
                0.9494942286664507}}, {
              1.9132406077064914`*^-19, {$CellContext`alpha -> 
                0.9465893506105634}}, {
              1.458489825408322*^-19, {$CellContext`alpha -> 
                0.9435544034326614}}, {
              1.0484025347271401`*^-19, {$CellContext`alpha -> 
                0.9403881520952084}}, {
              1.0711499960482266`*^-20, {$CellContext`alpha -> 
                0.9370893489805676}}, {
              1.4323462635301766`*^-16, {$CellContext`alpha -> 
                0.9336567396225527}}, {
              2.0701096450335697`*^-17, {$CellContext`alpha -> 
                0.9300890722398691}}, {
              4.103363781830186*^-18, {$CellContext`alpha -> 
                0.9263851012478441}}, {
              5.913791024840629*^-17, {$CellContext`alpha -> 
                0.9225435983508801}}, {
              4.4331563535632164`*^-24, {$CellContext`alpha -> 
                0.9185633643068755}}, {
              6.2353070824105*^-22, {$CellContext`alpha -> 
                0.9144432343558883}}, {
              1.5496146888085387`*^-21, {$CellContext`alpha -> 
                0.9101820942967019}}, {
              2.1826273803424108`*^-21, {$CellContext`alpha -> 
                0.9057788914402956}}, {
              2.347002486849098*^-21, {$CellContext`alpha -> 
                0.9012326491914122}}, {
              2.113593696802763*^-21, {$CellContext`alpha -> 
                0.8965424826804725}}, {
              1.6495982686661998`*^-21, {$CellContext`alpha -> 
                0.8917076159330228}}, {
              1.1282016841889525`*^-21, {$CellContext`alpha -> 
                0.8867274006986514}}, {
              6.716883948442307*^-22, {$CellContext`alpha -> 
                0.8816013370664659}}, {
              3.4065368706578852`*^-22, {$CellContext`alpha -> 
                0.876329095998626}}, {
              1.3179462136534263`*^-16, {$CellContext`alpha -> 
                0.8709105446447691}}, {
              7.061158546608911*^-17, {$CellContext`alpha -> 
                0.8653457700272229}}, {
              2.7684391413881282`*^-17, {$CellContext`alpha -> 
                0.859635113035496}}, {
              4.757659218523799*^-18, {$CellContext`alpha -> 
                0.8537791965802882}}, {
              1.5742746923586075`*^-19, {$CellContext`alpha -> 
                0.8477789607183404}}, {
              5.5450986005968596`*^-14, {$CellContext`alpha -> 
                0.8416356820098925}}, {
              3.1480251389454276`*^-17, {$CellContext`alpha -> 
                0.8353510996136269}}, {
              5.54708823188193*^-17, {$CellContext`alpha -> 
                0.8289272859246711}}, {
              7.777288604300088*^-17, {$CellContext`alpha -> 
                0.82236686377301}}, {
              9.423698910502682*^-17, {$CellContext`alpha -> 
                0.815672969394457}}, {
              1.0245435259180879`*^-16, {$CellContext`alpha -> 
                0.8088493212239103}}, {
              1.0187310383898143`*^-16, {$CellContext`alpha -> 
                0.8019002745535325}}, {
              9.356740573541533*^-17, {$CellContext`alpha -> 
                0.7948308790665263}}, {
              7.974380181778478*^-17, {$CellContext`alpha -> 
                0.7876469390654125}}, {
              6.311608004823292*^-17, {$CellContext`alpha -> 
                0.7803550761255458}}, {
              5.51273441783322*^-19, {$CellContext`alpha -> 
                0.7729627944320425}}, {
              1.3803418337548845`*^-19, {$CellContext`alpha -> 
                0.7654785444411011}}, {
              2.090910658886352*^-14, {$CellContext`alpha -> 
                0.7579117777824536}}, {
              2.8369718656026346`*^-15, {$CellContext`alpha -> 
                0.7502730868405544}}, {
              1.9322296455739302`*^-13, {$CellContext`alpha -> 
                0.7425740871598192}}, {
              5.486078352095916*^-16, {$CellContext`alpha -> 
                0.7348278514844214}}, {
              9.337914933933004*^-16, {$CellContext`alpha -> 
                0.7270484075573627}}, {
              7.56815491921161*^-16, {$CellContext`alpha -> 
                0.7192513251211261}}, {
              3.883695105260305*^-16, {$CellContext`alpha -> 
                0.7114534983871149}}, {
              1.1779720184831278`*^-16, {$CellContext`alpha -> 
                0.7036732379283301}}, {
              1.018471860334005*^-17, {$CellContext`alpha -> 
                0.695930297365184}}, {
              5.084967977341629*^-18, {$CellContext`alpha -> 
                0.6882458851549104}}, {
              2.980308169587997*^-17, {$CellContext`alpha -> 
                0.6806426583844623}}, {
              5.190536571260792*^-17, {$CellContext`alpha -> 
                0.6731446952553897}}, {
              7.973141390839333*^-17, {$CellContext`alpha -> 
                0.6657774428104583}}, {
              1.5883477821533728`*^-16, {$CellContext`alpha -> 
                0.6585676364170204}}, {
              4.2541083115657495`*^-16, {$CellContext`alpha -> 
                0.6515431876270447}}, {
              1.2770550940273927`*^-15, {$CellContext`alpha -> 
                0.6447330373166946}}, {
              3.7111041200996575`*^-15, {$CellContext`alpha -> 
                0.6381669715082517}}, {
              9.479567416201315*^-20, {$CellContext`alpha -> 
                0.6318754188312945}}, {
              7.095300016848851*^-20, {$CellContext`alpha -> 
                0.6258891163831263}}, {
              3.501334937527062*^-20, {$CellContext`alpha -> 
                0.6202388995350188}}, {
              7.691163034749304*^-21, {$CellContext`alpha -> 
                0.6149553068502033}}, {
              1.8264758555435622`*^-13, {$CellContext`alpha -> 
                0.6100681195652614}}, {
              7.196159901361773*^-16, {$CellContext`alpha -> 
                0.6056064642222732}}, {
              1.2896958546571488`*^-15, {$CellContext`alpha -> 
                0.6015973753843369}}, {
              5.339037091637457*^-16, {$CellContext`alpha -> 
                0.5980663868722398}}, {
              1.6964459188366706`*^-16, {$CellContext`alpha -> 
                0.5950366004696254}}, {
              3.3411482297643588`*^-15, {$CellContext`alpha -> 
                0.5925284089004916}}, {
              4.7112898697454875`*^-15, {$CellContext`alpha -> 
                0.5905590089796628}}, {
              2.874636360932126*^-15, {$CellContext`alpha -> 
                0.5891421929283767}}, {
              4.1316688635787193`*^-16, {$CellContext`alpha -> 
                0.5882880160499779}}}}, $CellContext`i$$, {}, \
$CellContext`getQuadVtx0, 
           Function[$CellContext`x, 0], $CellContext`drSubhex -> 
           True, $CellContext`plotAll -> 
           False, $CellContext`vtx -> {1, 2, 3}], ImageSize -> Medium]; 
       Grid[{{$CellContext`poly$9063, $CellContext`cs$9063}}]), 
      "Specifications" :> {{$CellContext`i$$, 1, 360, 1, Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{780., {231., 237.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({
      Attributes[$CellContext`cs$9063] = {Temporary}, 
       Attributes[$CellContext`coss$9063] = {
        Temporary}, $CellContext`coss$9063 = CompressedData["
1:eJydmnlUzun7x2swGMRkjxhL1uzrGNxkG0uWSRESSRNFZC2jyZJlkIak7Guo
GBIZ5CZpUbK0U5Zs2WWsw/D7XPfn/Zlz5jrnN+Z8/5jznvc5nc7T8zyf+76u
l1c9F68fJpYwMTH5QvvP3dTEhP6/vt/jjOWbc0Vzh8NXtZSr1w0uoO6Y0ueX
+8G5YtiI8mFaylVP3m2hPvykg3eFeblic9lJoVrK1paD9lLvPs/xTL2hueJu
9YfPtZQfjvqVqq/1uEeXpk6okiuOTrmxTkvZdLbDHupWrgNmNE3OEf0Gx07W
UiaPS3CjXiY5otEtjxyxs59vBy1lfmXfrtQrnvWRFUxyxIxrN7K0lB3vHrpJ
vcHSJmf6BGSLnMFTL2spZ1p75VGv86RPtbYfskTkqG4WbT5kydQLQZtaaz2k
puP7pROzRPibiZQyfLqn6o3KZV8yi88Uz2OfU8rADh9VT2nbIn2deaZoV+0H
StnklKvqZTbE7ns1IkOElrxFKdvmv1L9oOuQrRXWXhG/POvkr6V0Kz4+jXrx
ky4JpxMuizKRi6K1lK4TMvZR7zi6zo6XTy4J382tQrWU7a9MXkt92soROwIr
XhLulbw3aSkT8w+GUd+zrOXRO8PTxe0alQ5oKdt3nRhB/cqhhr9/8ksT7ucT
o7WUz4+XOEi9TjnPkQ23nhd+I07YaSl7nDs/jPoKl5gb748mixXmVwq0lCsm
V6UUoasc136TnCgC1xav01I2qXo3hHpxZFFyrcwEkfOD32UtZTv/yZnUx2bu
dnLNjxfxG694ailfnw6aTn3UsAtLnApPi+i/pm7UUpZM7budeo8z5o8j0+NE
7/UnakSlx8nL7Uo21FIErOy/3izvd/HNmz3HtJQ+mWVOU393ZufEFveOiIxX
hV80v3dELt0ZvLqZ1qf4nLj0zdtDomhuwDItpYl3r/nUSywxaXe2XpRwftE1
5ky9KHnTaUCAlmLtO9dJU1x3CY9KXu5ayvN1HClFZq/Ioq/mhIkmcQ/vaCkP
Vj5CKU61+MX37Z7Fot600tZaSktv0Yx6+UxP6y88vaWvZ408LYVDbccc6uGX
j/3abNha2ayjn9RSmNutiqPu7Lz6TsO722R4xIv3WooeEzv9Sf23Lh8225nu
ldu6vY3RUjhVXh1Nvf6I6hsXvj8g9/vHHNRSfGt/fj/1nLT62VYPomX5wIQb
WopxQa2vU2/s3SCqu81RuWpn3RgthdO29dHUD4tFviuW/S47XPLw11K06VDv
Z+qV7pvkbT9xUr5POJK248RJUSOx7a9aytOrhW3La1I6t84dpKWY8/IPSvlq
/0HX2TPOyLa1wiZoKVwjH1LKSmZjHB2excsQiwQHLcVfdsEjqPv2qdi60fgE
OTT2z+ZaijcXRrSgPmlYpHl+8jn5bax1BS3FxGeWFalf3RDtMbNRkozPiqEU
GaYqpX+ee99in2QZ/dyDUiyPm6x66XFd1zueTZFzh/egFBknuqtuM7jpoWNf
pMqk0i0phaeZteodEwqPWHZOkzsrFFEKp8S7qn8st7PyxgkXZF7gXkpRsk64
6rPy6lXoG5AuH9VqTCkG/t5Q9bRq3w7suPmitPftRilaeH+n+tKf8k/E21+S
uwoKKIV5J5UyKHbGtMa5l2S1LJXiZaLeH1ul/5pjf1nG3Pdaq6XIrrd7DfVd
c7//41b6Zbmh+7UXWgq3/Eqq/xk79Ix9ryuys3PveC3FpT2pqic8XeZpc/iK
bJhRyktL0f1J0hTq2SZnl8XWyZCxvsmU4q/j51T3mm9/ICEgQ6Yuc6MULsVO
qls4Z3r4FGVIM5ciSvGo93XVZw/paH23b6Yc18CWUowJ6am6d+QCq+rbM2XP
mhsphfwuUPVOO7//vs6bTOng6kopQsc6qH4k6G3rsv2z5Pqh1dpoKWJ/KE0p
J3dJt7gXop3LoU8oxf3cAtUDpvbLjL+ZJUuaulMKp+MjVP/K5klMVKNsWXe9
2REthSz9UfWQUvbBB92zZWH4bErhZuam+rQ9neOvhmfLKbVHUYovjvdX/Zsz
yz91vJUtm6+JoBSmOzeo/uil69xL1XPkvf2LKcUsj1mq2yy4cOrQgByZEvOI
UrjbFai+t0qtxDs+OfLQ2E6U4km5ZqqnPip1w3t3jmzzsi6l+JBVWfXTjUWM
64Ucab/bgVLszB2o+iKzgH7xxTnySnIYpagyPkj1q6saPltjnisjnDtSihpu
LVU3fXjVrqBVrvzu7ANK4d7xtuof/yjntad/rky+Wp1S3DhgrnrcIpvlr51z
5dchAynFlph+qud2fdH5oneu3H7wLaWY9+6V6msKvMd3WJgrJ5nOoRRZA2ap
Xvhzy7bWgbnyx+OtKcWEK61UL7rq2PBoSK5sab62qZaip8n8xtRrO+z/Imtj
rpyyYCelqDxmj+qBCVtyac44dm4Dpag7ZJPqdfDzVkP1n8+urv/8ffz+n4qT
1O9PaZWofr/xehbk668nylTl368/00F//cWn9defh783fOQ79feG3XqtuvH+
fDo8SL0/QaK/6sb7uS24pno/x1eqqvqnB/r7f6f7Y/X+O+64p3oePq+UM9+q
z+tuhXaqL8Tn26ztFvX53p8WonoCvg9Bbcao70PZWXaqp+H7U/VYI/X9OVfT
UvVwfN8+uQn1ffvlyw6q98b382PJV+r72br0Q9WN73MDsVp9n++mLVK9Lr7/
G+yOqu9/n1D1HMipeF7cX7ip5+WVxWjVw/B8LfZYrJ6v0rvnqm48j1EWlup5
tP31a0q5AM+vV7k56vl9XeShuiee95kPP6jnfYX9C9UP43yYvstKnQ8LZC11
PrTHeTJh+gx1ntxwnKz6NJw/zdbtU+dPjst21WfhvApLGKXOq+rL7VSvgfNt
UOFLdb4l7H2q+lSchwV7pqvzMHemp+rG+bmyfZo6P4/8el71JJy3Pz5Inkbn
7dDLZpTyI87nvqffqPP5TudoSrkb57l58lJ1nv9iHU4pn+D8r3X2eDCd/wM2
9qf8+74Y/kS/L5bd1fsS3C8ny9xQ98uWA9dVN+4j02E91X207Lseqk/H/ZWV
11zdX9mhzVQvWV6/7/yj9qv7bq17lOrG/ZhU84m6H52fPVK9B+7T5/vaqvs0
MqKN6sb9GzW4t7p/7y/spfp83Ncpdb3Ufb1g2VTVjfs9slWsut8nJB9VfTLm
gdjUnqVpHnBo3aYMdT/MD9/G+jWm+aHVl1ZNqFfEvBEzO9+O5g2XA92HU3+N
+eT5lFEuNJ9sWuFP+fc8k+g1Ts0zqYOmqHmmNOYfr4bfPdqpzT9FJ25e1PLv
eSmwaNZSmpdkuRtLqDfDfGX35ek4mq8q9zej/HseCzrz8yOax2w2pTykboX5
7VxDm1Sa3zoM+yOF+i7Me/N8f7xM857FRrtL1AdgPqy/tUxNK20+tKjQq4aW
MhLzZNwvm97SPLnSX76hbsyfh/c9OFhCmz+HX6tPKW9iXl3w9lnKG21ebdjT
ivLv+bbWqm43ab71jbCiFNswD6e86vYjzcM+zdpT/j0/X3QLzJfa/Dxn7pIk
LYWrMW//PLI1zdtjHvdtTv0j5vOebrH1mmjz+YtZc5801vpizPN1vna6SfP8
jOATt6m3x/xvseH9IJr/+ya3/IHmf2NfqFuu5mHaFzrHXT5CfQz2iwF7subT
ftGsirk/dWMfmb30+lXaR/o06J1PfRP2lx6HD4XS/uJT2DiM+irsO9uG3b5G
+06TNksoRU3sR6vm1BhC+1GXU3UGU8/GPuVx8GQU7VPbM4dFUjf2r8zFMeG0
f1mZJO+iPgX7mt1kp/W0r7luKlxHvTP2u+gB1YNov+u4f/Yq6sY+eHTss120
D47qUnIbdWN/3Le1eBLtjzYhj8ZR/xL75uDVH9S+WVC5bAT1JOynfgfc1X76
fY+ZqjfAPltl5ye1z77qX+YydWP/vT5X7b2yYeI01ethXy5/espebU+W9ql5
w2hfrof9um7V+zm0X694ua2AegXs4/u2riugfbyH/Y671I39veGL89/S/l5u
XkehOvb9h9f2udO+X9DSdyJ1CT6Q3K3rZuID5+s+jaRu8ISbPZe8IZ4Q8FVo
WeIJ9uAPc364sZH4wwEXrwjqI8ErXj6OUbziUvz4rdTrgm80AN9YCr4xCj8/
FHxjEfiG8fu3gW+0At/oiddzB3zDJFbnG6fx+mPBNzqCbzTG39sHfCMFfKMs
3p994BvXwDe+xvv5E/hGV/CNunj/L4NvTAXfsMTnFQG+kQG+sRaf727wjV3g
G8b34QX4xgrGN9qDb1gyvhEGvtGd8Q1/8A1/8I0/GN8Yz/iGN/hGn8/wjb14
vu6Db/QD38j8DN/YAr5RkfGNIPAN/8/wjSc4T66Cb9j8R75xjPGNjjjfboXo
fMO0vc43VuA8NAPfmAG+YRqvn59jwTeiwDem4rwt6aPzjT+n63zjY4B+PqcW
63xj0mf4RhHOfxfwjVFV/p1v7MnQ75ebk3S+sbCWzje24D560E7nG5fAN7xx
f+WDb6S56nxjL+67t111vtG0is432uN+LAm+0Rd8Iw33aYf/yDcO4r6uAL5h
+x/5xiTwjcHgG8WYHwT4xuD/kW8Y80wZ8I0V4BsFmH/OgG/kfYZvVMR8NQd8
4xL4Rl/MYxHgG47gG10wv+0B3xgOvmFa/p98oyr4xhTMh1fBN5zBNy5hnhwC
vlEDfGMF5s8d4Bv1GN+wAN/4AL7xFPNtOPhGJuMbW8A3XMA3PmB+7ga+kQK+
kYh5uwn4RmfGN86Cb3z8j3yjJPjGHfCNOdgXnMA3xoNvzMR+0QV8Ix58w9hH
bME31oNvxGB/2QC+8Rv4hgf2HQm+cQt8wx/7UVXwDVvGN1qCb/wOvrEe+9dt
8A0nxjdmgW+YML5hA77x545/8o1b4BszwTeM/TEZfGMa+MY+7JvHwTeegW8k
Yz9tC77xhvGNkeAb2xjfKATfqAS+kYV9+ST4RjXwDWO/tmF84y/s46ngG9fB
N05gf3+1Tucbm8E3jH1/E/iGP+MbzuAbV8A37oAn2IFvuIBvPAB/qA2+0Rl8
w+AVbuAblcA31oJvnADfaAC+UQ8/3w58Ixd8w+AnAeAbyeAbd/F6FjK+EYzX
L8E3HoFvGDxnM/jGJvAN4/0pG/NPvvEJ72cI+IYT+IbBlwrBN8aCb2Ti8zoB
vnEDfGMxPt+a4BvXwDeM78Ma8I1K4BsGH7ME3zgLvmHwtHI/6nxjGfhGD3w/
S5XS+UYbxjdagW88ZHxjC/iGDfjGDDwvnuAbr8E3jOdrAfhGWfCN8ngeD4Jv
DAPfWIjn1wV84yn4hsEzp4BvLAbfOPL/8A2Dl7qDb9wB35iD86cD+MYN8A0f
nFfB4BvVwDcsGN84Db7hifPwPPhGEvhGLs7P5eAbx8A3zuG89QLf+AF8w+DP
g8E3noJvGOd5FfCNleAbD3H+VwXf6AO+EYj7Yjz4xibwjQDcL1HgGyHgG+m4
j6qBb6wF35iK+6vyVZ1vlAjT+UZp3He7wDfiwDe64X5cCb7RBnzDuE8zwDdW
gW+Y4f6NA9/4wPhGPvhGCPjGLdzvJ8A35oBveGAe2AC+0RV842fMD5bgG9XB
N8wxb0SBb4wB33iJ+cR6qs438sE3zmGeyQffuAW+URnzjwv4xi3wjQOYl/LB
N0zK63zDGvPVPPCNduAbuZjHTOJ1vnEMfMOY35zBN1KG6nzD+Pes5eAbTcA3
RmA+bAu+0Rt8Iw3z5K6VOt8os1DnG7mYPy126XzjZJbON2q01OfV9Dc638jq
ofONEr31+fbtCp1vPN2r843tmIdXg290Y3zjxESdb7Sfo/ONaZi3K/nrfGMZ
+Ibx74/9wDc+gG8sxTz/vJLON0aAb9hg/t8RpvONxCSdb4zGvjAAfMMFfGMc
9oux4Bt24BsvsY84gm9YM77RDnxjCvhGEPadMeAbOa11vlEb+9Fh8A0P8A3j
34tngG/sBd/Ygf3rMvhGE8Y3OoFv2DC+cRR8oxP4xgvsgyngG16Mb0SBb3QH
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
/Y0g8A3ub7QF3/g/ukGl/g==
        "], 
       Attributes[$CellContext`clrs$9063] = {
        Temporary}, $CellContext`clrs$9063 = {
         RGBColor[1, 0, 0], 
         RGBColor[0, 2/3, 0], 
         RGBColor[0, 0, 1], 
         RGBColor[1, 0, 1], 
         RGBColor[0, 1, 1]}, 
       Attributes[$CellContext`n$9063] = {Temporary}, $CellContext`n$9063 = 2,
        Attributes[$CellContext`poly$9063] = {
        Temporary}, $CellContext`showOnePoly[
         Pattern[$CellContext`alphaT, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`notableLoci, 
          Blank[]], 
         Pattern[$CellContext`fnVtx0, 
          Blank[]], 
         Pattern[$CellContext`fnErrorP, 
          Blank[]], 
         Pattern[$CellContext`opts, 
          OptionsPattern[]]] := 
       Module[{$CellContext`polyErr}, $CellContext`polyErr = \
$CellContext`polyError[$CellContext`alphaT, $CellContext`i, \
$CellContext`fnVtx0, $CellContext`fnErrorP]; \
$CellContext`drawPoly[$CellContext`polyErr, $CellContext`notableLoci, 
           FilterRules[{$CellContext`opts}, 
            Options[$CellContext`drawPoly]]]], $CellContext`polyError[
         Pattern[$CellContext`alphaT, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`fnVtx0, 
          Blank[]], 
         Pattern[$CellContext`fnErrorP, 
          Blank[]]] := 
       Module[{$CellContext`a, $CellContext`alpha, $CellContext`poly, \
$CellContext`err}, $CellContext`a = 
          ReplaceAll["a", $CellContext`alphaT]; $CellContext`alpha = Part[
            ReplaceAll[
            "alphas", $CellContext`alphaT], $CellContext`i]; \
$CellContext`poly = $CellContext`polyVtx[$CellContext`alphaT, $CellContext`i, \
$CellContext`fnVtx0]; $CellContext`err = $CellContext`fnErrorP[$CellContext`a, 
            Part[$CellContext`poly, 1], $CellContext`alpha]; {
          "a" -> $CellContext`a, "poly" -> $CellContext`poly, 
           "error" -> $CellContext`err}], $CellContext`polyVtx[
         Pattern[$CellContext`alphaT, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`fnVtx0, 
          Blank[]]] := 
       Module[{$CellContext`a, $CellContext`p1, $CellContext`t, \
$CellContext`alpha}, $CellContext`a = 
          ReplaceAll["a", $CellContext`alphaT]; $CellContext`alpha = Part[
            ReplaceAll[
            "alphas", $CellContext`alphaT], $CellContext`i]; $CellContext`t = 
          Part[
            ReplaceAll[
            "tsRad", $CellContext`alphaT], $CellContext`i]; $CellContext`p1 = \
{$CellContext`a Cos[$CellContext`t], 
            
            Sin[$CellContext`t]}; $CellContext`fnVtx0[$CellContext`a, \
$CellContext`p1, $CellContext`alpha]], $CellContext`drawPoly[
         Pattern[$CellContext`polyErr$, 
          Blank[]], 
         Pattern[$CellContext`notableLoci$, 
          Blank[]], 
         OptionsPattern[]] := 
       Module[{$CellContext`poly$, $CellContext`a$, $CellContext`centroids$, \
$CellContext`centroidNames$, $CellContext`lab$, $CellContext`pnames$, \
$CellContext`meds$, $CellContext`polyTangs$, $CellContext`polyInters$, \
$CellContext`polyInterNames$, $CellContext`tri1$, $CellContext`notables$, \
$CellContext`circs$, $CellContext`incs$, $CellContext`lgt$ = 
          0.25, $CellContext`fnt$ = 14}, $CellContext`poly$ = 
          ReplaceAll["poly", $CellContext`polyErr$]; $CellContext`a$ = 
          ReplaceAll[
           "a", $CellContext`polyErr$]; $CellContext`centroids$ = \
$CellContext`getCentroids[$CellContext`poly$]; $CellContext`centroidNames$ = {
           "\!\(\*SubscriptBox[\(G\), \(vtx\)]\)", 
            "\!\(\*SubscriptBox[\(G\), \(per\)]\)", 
            "\!\(\*SubscriptBox[\(G\), \(lam\)]\)"}; $CellContext`lab$ = 
          StringJoin["error: ", 
            $CellContext`nfn[
             N[
              ReplaceAll["error", $CellContext`polyErr$]], 
             3]]; $CellContext`pnames$ = 
          Take[{"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K"}, 
            
            Length[$CellContext`poly$]]; $CellContext`meds$ = \
$CellContext`getMediansV[$CellContext`poly$]; $CellContext`polyTangs$ = 
          Map[$CellContext`perp[
             $CellContext`ellGrad[$CellContext`a$, 
              Part[#, 1], 
              Part[#, 2]]]& , $CellContext`poly$]; $CellContext`polyInters$ = 
          MapThread[$CellContext`interRays[#, #2, #3, #4]& , \
{$CellContext`poly$, $CellContext`polyTangs$, 
             RotateLeft[$CellContext`poly$], 
             
             RotateLeft[$CellContext`polyTangs$]}]; \
$CellContext`polyInterNames$ = If[
            OptionValue[$CellContext`drExcentral], 
            MapThread[StringJoin[#, "'", #2, "'"]& , {$CellContext`pnames$, 
              RotateLeft[$CellContext`pnames$]}], {}]; If[
           OptionValue[$CellContext`drCircs], 
           
           Module[{$CellContext`sides$, $CellContext`tri$, \
$CellContext`cir$}, $CellContext`circs$ = Table[$CellContext`tri$ = Take[
                  RotateLeft[$CellContext`poly$, $CellContext`i$$ - 1], 
                  3]; $CellContext`cir$ = \
$CellContext`getCircumcenterTrilin[$CellContext`tri$, 
                  RotateLeft[
                   $CellContext`triLengths[$CellContext`tri$]]]; \
{$CellContext`cir$, 
                 $CellContext`magn[$CellContext`cir$ - 
                  Part[$CellContext`tri$, 1]]}, {$CellContext`i$$, 
                Length[$CellContext`poly$]}]; Null]]; If[
           OptionValue[$CellContext`drIncs], 
           
           Module[{$CellContext`sides$, $CellContext`tri$, \
$CellContext`inc$}, $CellContext`incs$ = Table[$CellContext`tri$ = Take[
                  RotateLeft[$CellContext`poly$, $CellContext`i$$ - 1], 
                  3]; $CellContext`inc$ = \
$CellContext`getIncenterTrilin[$CellContext`tri$, 
                  RotateLeft[
                   $CellContext`triLengths[$CellContext`tri$]]]; \
{$CellContext`inc$, 
                 $CellContext`closestDist[$CellContext`inc$, 
                  Part[$CellContext`tri$, 1], 
                  Part[$CellContext`tri$, 2]]}, {$CellContext`i$$, 
                Length[$CellContext`poly$]}]; Null]]; If[
           Or[
            OptionValue[$CellContext`drNotables], 
            OptionValue[$CellContext`drSubtri]], 
           
           Module[{$CellContext`normals$}, $CellContext`tri1$ = 
             Part[$CellContext`poly$, 
               OptionValue[$CellContext`vtx]]; $CellContext`normals$ = 
             Apply[$CellContext`gettriBisectors, $CellContext`tri1$]; \
$CellContext`notables$ = $CellContext`getNotables[$CellContext`tri1$, \
$CellContext`normals$]; Null]]; $CellContext`gr = Graphics[{
             PointSize[Large], 
             Point[$CellContext`poly$], 
             FaceForm[None], {
              EdgeForm[{Black, Thick}], 
              FaceForm[Gray], 
              Opacity[0.1], 
              Polygon[$CellContext`poly$], Black, 
              Point[$CellContext`poly$]}, {Black, 
              Arrowheads[Medium], 
              MapThread[$CellContext`drawArrow[#, 
                $CellContext`norm[
                 $CellContext`perpNeg[#2]], $CellContext`lgt$]& , \
{$CellContext`poly$, $CellContext`polyTangs$}]}, 
             If[
              OptionValue[$CellContext`drCentroids], {Black, 
               MapThread[{
                 Point[#], 
                 If[
                  OptionValue[$CellContext`drCentroidLabels], 
                  Text[
                   Style[#2, 14], #, {
                   0, -1.5}], {}]}& , {$CellContext`centroids$, \
$CellContext`centroidNames$}]}, {}], 
             If[
              OptionValue[$CellContext`drExcentral], {
               EdgeForm[
                Darker[Green]], 
               Polygon[$CellContext`polyInters$], 
               Darker[Green], 
               Point[$CellContext`polyInters$], 
               MapThread[Text[
                 
                 Style[#, $CellContext`fnt$], #2, {-1.25, -1.25}]& , \
{$CellContext`polyInterNames$, $CellContext`polyInters$}]}, {}], {Black, 
              MapThread[Text[
                Style[#, $CellContext`fnt$], 
                $CellContext`ray[#2, 
                 $CellContext`norm[
                  $CellContext`perp[#3]], $CellContext`lgt$/
                 2]]& , {$CellContext`pnames$, $CellContext`poly$, \
$CellContext`polyTangs$}]}, 
             If[
              OptionValue[$CellContext`drMedians], {{Dashed, Blue, 
                Map[Line[{#, {0, 0}}]& , $CellContext`polyInters$]}, {Blue, 
                Point[$CellContext`meds$], 
                Point[{0, 0}]}}, {}], 
             If[
              OptionValue[$CellContext`drCircs], {Red, {Dashed, 
                Map[Circle[
                  Part[#, 1], 
                  Part[#, 2]]& , $CellContext`circs$]}, 
               Point[
                Map[First, $CellContext`circs$]], 
               Circle[
                Part[$CellContext`circs$, 1, 1], 0.05]}, {}], 
             If[
              OptionValue[$CellContext`drIncs], {
               Darker[Green], Dashed, 
               Map[Circle[
                 Part[#, 1], 
                 Part[#, 2]]& , $CellContext`incs$], 
               Point[
                Map[First, $CellContext`incs$]]}, {}], 
             If[
              OptionValue[$CellContext`drNotables], {
               Apply[List, 
                $CellContext`drawSomeNotables[$CellContext`notables$, 
                 First[$CellContext`notableLoci$]]], 
               EdgeForm[None], 
               FaceForm[Red], 
               Opacity[0.1], 
               Polygon[$CellContext`tri1$]}, {}], 
             If[
              OptionValue[$CellContext`drSubtri], {
               EdgeForm[None], 
               FaceForm[Red], 
               Opacity[0.2], 
               Polygon[$CellContext`tri1$]}, {}]}]; Show[{
            $CellContext`plotEll[$CellContext`a$], $CellContext`gr, 
            If[
             OptionValue[$CellContext`drLoci], 
             $CellContext`Second[$CellContext`notableLoci$], {}]}, 
           If[
            OptionValue[$CellContext`drError], 
            PlotLabel -> $CellContext`lab$, {}], PlotRange -> If[
             OptionValue[$CellContext`plotAll], All, {{-2, 2}, {-1.5, 1.5}}], 
           Frame -> True, FrameStyle -> Medium, AxesStyle -> 
           Directive[{Dotted, Gray}]]], 
       Options[$CellContext`drawPoly] = {$CellContext`drNotables -> 
         False, $CellContext`drSubtri -> False, $CellContext`drLoci -> 
         False, $CellContext`drMedians -> False, $CellContext`drExcentral -> 
         False, $CellContext`drCentroids -> 
         False, $CellContext`drCentroidLabels -> False, $CellContext`drError -> 
         False, $CellContext`drCircs -> False, $CellContext`drIncs -> 
         False, $CellContext`vtx -> {1, 2, 3}, $CellContext`plotAll -> 
         False}, $CellContext`getCentroids[
         Pattern[$CellContext`vtx, 
          Blank[]]] := {
         Mean[$CellContext`vtx], 
         $CellContext`PerimeterCentroid[$CellContext`vtx], 
         RegionCentroid[
          Polygon[$CellContext`vtx]]}, $CellContext`PerimeterCentroid[
         Pattern[$CellContext`vtx$, 
          Blank[]]] := 
       Module[{$CellContext`sides$, $CellContext`meds$, $CellContext`per$, \
$CellContext`perCentroid$}, $CellContext`sides$ = \
$CellContext`triLengths[$CellContext`vtx$]; $CellContext`meds$ = 
          Apply[$CellContext`getMediansV, $CellContext`vtx$]; \
$CellContext`per$ = Total[$CellContext`sides$]; $CellContext`perCentroid$ = 
          Sum[Part[$CellContext`meds$, $CellContext`i$$] 
             Part[$CellContext`sides$, $CellContext`i$$], {$CellContext`i$$, 
              
              Length[$CellContext`vtx$]}]/$CellContext`per$; \
$CellContext`perCentroid$], $CellContext`triLengths[
         Pattern[$CellContext`vs, 
          Blank[]]] := Map[$CellContext`magn, 
         $CellContext`triSides[$CellContext`vs]], $CellContext`magn[
         Pattern[$CellContext`v, 
          Blank[]]] := Sqrt[
         $CellContext`magn2[$CellContext`v]], $CellContext`magn2[
         Pattern[$CellContext`v, 
          Blank[]]] := 
       Dot[$CellContext`v, $CellContext`v], $CellContext`triSides[
         Pattern[$CellContext`vs, 
          Blank[]]] := MapThread[# - #2& , {$CellContext`vs, 
          RotateLeft[$CellContext`vs]}], $CellContext`getMediansV[
         Pattern[$CellContext`vs, 
          Blank[]]] := 
       0.5 ($CellContext`vs + RotateLeft[$CellContext`vs]), $CellContext`nfn[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := ToString[
         NumberForm[$CellContext`v, {$CellContext`n + 
           2, $CellContext`n}]], $CellContext`perp[{
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           
           Blank[]]}] := {-$CellContext`y, $CellContext`x}, \
$CellContext`ellGrad[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          
          Blank[]]] := -{$CellContext`x, $CellContext`y $CellContext`a^2}, \
$CellContext`interRays[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`n2, 
          Blank[]]] := 
       Module[{$CellContext`m, $CellContext`b, $CellContext`sols}, \
$CellContext`m = Transpose[{$CellContext`n1, $CellContext`n2}]; If[
           $CellContext`negl[
            
            Det[$CellContext`m]], $CellContext`p1, $CellContext`b = \
$CellContext`p2 - $CellContext`p1; $CellContext`sols = 
            LinearSolve[$CellContext`m, $CellContext`b]; \
$CellContext`ray[$CellContext`p1, $CellContext`n1, 
             Part[$CellContext`sols, 1]]]], $CellContext`negl[
         Pattern[$CellContext`v, 
          Blank[]]] := Abs[$CellContext`v] < 10^(-9), $CellContext`ray[
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`phat, 
          Blank[]], 
         Pattern[$CellContext`d, 
          
          Blank[]]] := $CellContext`p0 + $CellContext`phat $CellContext`d, \
$CellContext`getCircumcenterTrilin[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := 
       Module[{$CellContext`a2 = $CellContext`a $CellContext`a, \
$CellContext`b2 = $CellContext`b $CellContext`b, $CellContext`c2 = \
$CellContext`c $CellContext`c}, 
         $CellContext`trilinearToCartesian[$CellContext`orbit, \
{$CellContext`a, $CellContext`b, $CellContext`c}, {$CellContext`a \
($CellContext`b2 + $CellContext`c2 - $CellContext`a2), $CellContext`b \
($CellContext`c2 + $CellContext`a2 - $CellContext`b2), $CellContext`c \
($CellContext`a2 + $CellContext`b2 - $CellContext`c2)}]], \
$CellContext`trilinearToCartesian[{
          Pattern[$CellContext`A, 
           Blank[]], 
          Pattern[$CellContext`B, 
           Blank[]], 
          Pattern[C, 
           Blank[]]}, {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]], 
          Pattern[$CellContext`z, 
           Blank[]]}] := 
       Module[{$CellContext`denom}, $CellContext`denom = 
          Dot[{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`x, $CellContext`y, $CellContext`z}]; ($CellContext`a \
$CellContext`x $CellContext`A + $CellContext`b $CellContext`y $CellContext`B + \
$CellContext`c $CellContext`z 
            C)/$CellContext`denom], $CellContext`getIncenterTrilin[
         Pattern[$CellContext`orbit, 
          Blank[]], 
         Pattern[$CellContext`sides, 
          
          Blank[]]] := $CellContext`trilinearToCartesian[$CellContext`orbit, \
$CellContext`sides, {1, 1, 1}], $CellContext`closestDist[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`l1, 
          Blank[]], 
         Pattern[$CellContext`l2, 
          
          Blank[]]] := $CellContext`magn[$CellContext`p - \
$CellContext`closestPerp[$CellContext`p, $CellContext`l1, $CellContext`l2]], \
$CellContext`closestPerp[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`l1, 
          Blank[]], 
         Pattern[$CellContext`l2, 
          Blank[]]] := 
       Module[{$CellContext`dl = $CellContext`l2 - $CellContext`l1, \
$CellContext`s}, $CellContext`s = 
          Dot[$CellContext`p - $CellContext`l1, $CellContext`dl]/
           Dot[$CellContext`dl, $CellContext`dl]; \
$CellContext`ray[$CellContext`l1, $CellContext`dl, $CellContext`s]], \
$CellContext`gettriBisectors[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`p3, 
          Blank[]]] := 
       Module[{$CellContext`u12, $CellContext`u23, $CellContext`u31}, \
$CellContext`u12 = $CellContext`norm[$CellContext`p2 - $CellContext`p1]; \
$CellContext`u23 = $CellContext`norm[$CellContext`p3 - $CellContext`p2]; \
$CellContext`u31 = $CellContext`norm[$CellContext`p1 - $CellContext`p3]; {
           $CellContext`norm[$CellContext`u12 - $CellContext`u31], 
           $CellContext`norm[$CellContext`u23 - $CellContext`u12], 
           $CellContext`norm[$CellContext`u31 - $CellContext`u23]}], \
$CellContext`norm[
         Pattern[$CellContext`v, 
          
          Blank[]]] := $CellContext`v/$CellContext`magn[$CellContext`v], \
$CellContext`drawArrow[
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`phat, 
          Blank[]], 
         Pattern[$CellContext`l, 
          Blank[]]] := Arrow[{$CellContext`p0, 
          $CellContext`ray[$CellContext`p0, $CellContext`phat, \
$CellContext`l]}], $CellContext`perpNeg[{
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           
           Blank[]]}] := {$CellContext`y, -$CellContext`x}, \
$CellContext`plotEll[
         Pattern[$CellContext`a, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`clr, 
           Blank[]], 
          GrayLevel[0]]] := 
       ParametricPlot[{N[$CellContext`a] Cos[$CellContext`u], 
          Sin[$CellContext`u]}, {$CellContext`u, 0., 2. Pi}, 
         PlotStyle -> $CellContext`clr, PerformanceGoal -> 
         "Quality"], $CellContext`Second[
         Pattern[$CellContext`l, 
          Blank[]]] := Part[$CellContext`l, 2], $CellContext`getQuadVtx0[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`alpha, 
          Blank[]]] := 
       Module[{$CellContext`p2, $CellContext`p2Neg, $CellContext`p3}, \
{$CellContext`p2, $CellContext`p2Neg} = \
$CellContext`getP2Alpha[$CellContext`a, $CellContext`p1, $CellContext`alpha]; \
$CellContext`p3 = $CellContext`getInterRefl[$CellContext`a, $CellContext`p1, \
$CellContext`p2]; {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p2Neg}], $CellContext`getP2Alpha[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`alpha, 
          Blank[]]] := 
       Module[{$CellContext`norm, $CellContext`ca, $CellContext`sa, \
$CellContext`p2, $CellContext`normRot, $CellContext`normRotNeg, \
$CellContext`p2Neg}, $CellContext`ca = 
          Cos[$CellContext`alpha]; $CellContext`sa = 
          Sin[$CellContext`alpha]; $CellContext`norm = \
$CellContext`ellGrad[$CellContext`a, 
            Part[$CellContext`p1, 1], 
            
            Part[$CellContext`p1, 
             2]]; $CellContext`normRot = $CellContext`rot[$CellContext`norm, \
$CellContext`sa, $CellContext`ca]; $CellContext`normRotNeg = \
$CellContext`rot[$CellContext`norm, -$CellContext`sa, $CellContext`ca]; \
$CellContext`p2 = Part[
            $CellContext`ellInterRayUnprot[$CellContext`a, $CellContext`p1, \
$CellContext`normRot], 2]; $CellContext`p2Neg = Part[
            $CellContext`ellInterRayUnprot[$CellContext`a, $CellContext`p1, \
$CellContext`normRotNeg], 
            2]; {$CellContext`p2, $CellContext`p2Neg}], $CellContext`rot[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`st, 
          Blank[]], 
         Pattern[$CellContext`ct, 
          Blank[]]] := 
       Module[{$CellContext`m}, $CellContext`m = {{$CellContext`ct, \
-$CellContext`st}, {$CellContext`st, $CellContext`ct}}; 
         Dot[$CellContext`m, $CellContext`p]], $CellContext`rot[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := $CellContext`rot[$CellContext`p, 
         Sin[$CellContext`t], 
         Cos[$CellContext`t]], $CellContext`ellInterRayUnprot[
         Pattern[$CellContext`a, 
          Blank[]], {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, {
          Pattern[$CellContext`nx, 
           Blank[]], 
          Pattern[$CellContext`ny, 
           Blank[]]}] := 
       Module[{$CellContext`c2, $CellContext`c1, $CellContext`c0, \
$CellContext`ss}, $CellContext`c2 = $CellContext`nx^2 + $CellContext`a^2 \
$CellContext`ny^2; $CellContext`c1 = 
          2 ($CellContext`nx $CellContext`x + $CellContext`a^2 \
$CellContext`ny $CellContext`y); $CellContext`c0 = $CellContext`x^2 + \
$CellContext`a^2 (-1 + $CellContext`y^2); $CellContext`ss = \
$CellContext`quadRootsUnprot[$CellContext`c2, $CellContext`c1, \
$CellContext`c0]; 
         Map[$CellContext`ray[{$CellContext`x, $CellContext`y}, \
{$CellContext`nx, $CellContext`ny}, #]& , $CellContext`ss]], \
$CellContext`quadRootsUnprot[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]]] := 
       Module[{$CellContext`det = $CellContext`b^2 - 
           4 $CellContext`a $CellContext`c, $CellContext`sqrtDet}, \
$CellContext`sqrtDet = 
          Sqrt[$CellContext`det]; {-$CellContext`b - $CellContext`sqrtDet, \
-$CellContext`b + $CellContext`sqrtDet}/(
          2 $CellContext`a)], $CellContext`getInterRefl[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`pfrom, 
          Blank[]], 
         Pattern[$CellContext`pto, 
          Blank[]]] := 
       Module[{$CellContext`norm, $CellContext`theRefl, $CellContext`pnext}, \
$CellContext`norm = $CellContext`ellGrad[$CellContext`a, 
            Part[$CellContext`pto, 1], 
            
            Part[$CellContext`pto, 
             2]]; $CellContext`theRefl = $CellContext`refl[$CellContext`pfrom - \
$CellContext`pto, $CellContext`norm]; $CellContext`pnext = Part[
            $CellContext`ellInterRayUnprot[$CellContext`a, $CellContext`pto, \
$CellContext`theRefl], 2]; $CellContext`pnext], $CellContext`refl[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := 
       2 Dot[$CellContext`v, $CellContext`n] \
($CellContext`n/$CellContext`magn2[$CellContext`n]) - $CellContext`v}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7686765772820845`*^9, 3.768677096816692*^9, 3.768680935371468*^9, {
   3.7686811203799057`*^9, 3.7686811392065535`*^9}, 3.7686812362580023`*^9, 
   3.768681550686803*^9, 3.7686834049045734`*^9, 3.7686844131103015`*^9, 
   3.7687683996090894`*^9, 3.768770374863204*^9, 3.768855587847118*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Config Pent", "Section",
 CellChangeTimes->{{3.7686626720851746`*^9, 3.7686626724851055`*^9}, {
  3.768676030801821*^9, 3.7686760545229263`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotCS", "[", 
  RowBox[{"pentAlphaT15", ",", "getPentVtx0"}], "]"}]], "Input",
 CellChangeTimes->{{3.768677167138955*^9, 3.768677170867076*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 360, 1}}, Typeset`size$$ = {
    729., {174.5, 180.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`i$19526$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$19526$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`cs$13763 = Graphics3D[{Thick, 
           PointSize[Large], 
           MapThread[{#, 
             Line[
              Part[$CellContext`coss$13763, #2]], 
             Point[
              Part[
               Part[$CellContext`coss$13763, #2], $CellContext`i$$]]}& , {
             Take[$CellContext`clrs$13763, $CellContext`n$13763], 
             Range[$CellContext`n$13763]}]}, SphericalRegion -> True, Axes -> 
          True, AxesLabel -> Map[Style[#, {Black, 14}]& , {"c1", "c2", "c3"}],
           ImageSize -> Medium]; $CellContext`poly$13763 = Show[
          $CellContext`showOnePoly[{"a" -> 1.5, "tsDeg" -> CompressedData["
1:eJwV0wV3EAQUBeAxumPAqDFGx4iNZgNGd23UaBaUUkqKiNKN0h0GKBh0KCgY
oDQoGHQJUkoJKCjf3jnfvT/gnheWMDh2UKqAgIB+KeFSKpDUpCEt6UhPBjKS
icxkISvZyE4OcpKLIHKTh7wEk4/8FKAghQihMKEUIYyiFKM4JShJKUpThrKU
I5zyVKAilYggkspUoSrVqE4NalKLKKKpTR3qEkM96tOAhjSiMU1oSjOa04KW
tKI1bWhLO2KJoz0d6EgnOhNPF7rSje70oCe96E0CiSSRTB/6pmxEfwbwEi8z
kEEMZghDeYVXGcZwRjCSUYzmNcbwOmN5g3G8yVuMZwITmcRkpjCVaUxnBjOZ
xWzm8DbvMJd5zGcBC1nEYpawlGUsZwUrWcVq1vAu7/E+H7CWdXzIR6xnAx/z
CZ/yGRvZxGa2sJVtbGcHO9nF53zBbvbwJV+xl318zTd8y3fs5wDf8wMHOcRh
jnCUYxznBCf5kZ84xWl+5hd+5TfOcJZznOcCF7nEZa5wlWv8znVu8Ac3ucVt
7nCXP/mLe9znAQ95xN885glP+Yd/ecZz/uN/Up4/FYGkJg1pSUd6MpCRTGQm
C1nJRnZykJNcBJGbPOQlmHzkpwAFKUQIhQmlCGEUpRjFKUFJSlGaMpSlHOGU
pwIVqUQEkVSmClWpRnVqUJNaRBFNbepQlxjqUZ8GNKQRjWlCU5rRnBa0pBWt
aUNb2hFLHO3pQEc60Zl4utCVbnSnBz3pRW8SSCSJZPrQlxeua5bx
             "], "tsRad" -> CompressedData["
1:eJwtlHlczPkfx+doappmprm+MyO2so740ZJjFdbnhfhR9ofaHD/FjyTHKmtT
7rJuuVosuRZZS64s5SpkqaytUBLtpvqFLsdM9/17/B6f9/wx85iZ7/fzfb9f
x7P7vHC/ELFIJFr4/zd6eR3zOzX+dRzjnydZQfWa2sqcRPp+hW31fudjnp5C
v99iPfdpjt4ef5f+T2cln45GDuj6gK7LYF8c8nAR78ui6/9g61hG5jNFNt2X
y0K+d/f0S39C9z9lqswo5Yj2Z3ROPrvmdL+kh9dzOq+AzQpTJitXvKBzC5nk
/rTt9Ukv6fxX7JxwMqi4poie8zebsqjaI7NPMT3vNVtb7CSdMaiEnlvCJsux
dNKUUnp+KesxKOQFwspojjLWMGvH6KE7/0vzlLM/Nl8+3zexnOZ6w45dzhec
s97QfG/Zdy+bo3Vv39Kc79g4qUuVrU0FzVvBzO7e37R2r6S5K1nNtEV3PrIq
mr+K3Y3Z3ac8qJr2qGb7Eq/+WLimhvZ5zxbkF7b9Gf+e9vrAhne0L0i//oH2
+8jUfXo8TX7+kfb8xCx9Tn/2fNUn2vcTe5WW4pcrt9DeFvbA79HWRwcttL+F
XXpXlPp7byvpYGWH1n6wpCVbSQ8r26AVu93wriVdatmSM/rA3/JqSZ86FjCi
d9yFeXWkUx1jTzwzzljqSK961jfEt/VETD3pVs90LUEDjzg2kH4NrG33spAD
xxtIxwb2tsfGw3vcG0nPRvbkxoHc7amNpGsTu/n1WZtNvk2kbxNLKLvltf5V
E+nczHZFZYetXNRMejezKGVJwvKmZtK9hc09aS38dmsL6d/CfL6UqUONreRD
Kxvy2DR27i+t5Ecrc/7PP1bOGtJGvrQxef3IiwG/t5E/7cy6fXLZZL928qmd
FTnPM/mUtpNfHezh1YhJ3ss6yLcOdnnC1g2jOjvIv04W/3d8iufuTvKxk432
KlgRrxaB+ylCysY5e43TROC+itAvpyJx3zERuL8inDAvf6h5IwL3WQwhuPX1
rv5icL/F2HFxU4siQgzuuxidjSph220xuP9ifD/m4ACZVAKeAwkqdrr6/OAj
Ac+DBEEvzs3vjJOA50KCZ90HR699KQHPhwT//DY1vtlVCp4TKVJTxl2LXCgF
z4sUHuLcnNrLUvDcSHHGd0blskYpeH5s0PWnUumHUTbgObLBnpLFzku22IDn
yQY2/eo8K7JtwHNlg1Ur1vmHCDLwfMnw4a5tWFmgDDxnMgQr9m6bc1oGnjcZ
Cr/pkvBXtQw8d7b4+udTaTMH24Lnzxb3K/sVFqy2Bc+hLYYNSbb637cFz6Mt
zq8fpXpqbweeSzu4Psp0+9dUO/B82uGAfuqYx4fswHNqB8XsV4ETSuzA8ypH
9NngqIducvDcylFnrYkbEy4Hz68ci76KvHA3RQ6eYzmKt3ZmjOyQg+fZHv7P
tpXeHGcPnmt7ZHbTtX25yx483/YYGXrEeC3fHjzn9rhypaeHRzcFeN4V6N12
0fdSsAI89wocGT9sQb/zCvD8K6CJuxdz1qoA74EDNhdNPNJruAN4HxzQ0isv
+dQGB/BeOCB8WeATl0cO4P1wQPmtN1VHNUrwnigxQxYuc5qhBO+LEtmTm1wO
/qwE740SYw5vGG54pwTvjwrXyxUBcV+owHukQv8B+8PVkSrwPqlwctVnO2LT
VOC9UsH44MxpuUwN3i81YtUD726epAbvmRqimTdfSvarwfumRkTCmLroIjV4
79SofP9Y3f65I3j/HDHbM6Dv6sWO4D10RN4PxWMbrziC99ERE7JDZ0c0O4L3
UoPi2JWpK1011E8NunikTRzmraGeauBfIH5RH6qhvmqwe834+ddiNdRbDbJc
Yy3LL2uovxpIM3LXe+RpqMcafLXEoPzUoKE+a7FSMzP+kpOWeq3Fb8nHei8d
paV+a1Hz77Kr/eZpqedauIncRldt1lLftZj7y5Kcs+e01HstjvokzQrN1lL/
tSj4WFfRy6IlDuigPeAVWW7QEQ908B2+XprgqSMu6LDl9f29cwN1xAcd7m2y
c3aN0REndGjpO+l8cYKOeKHD0Ny9nscydcQNHcIjnj+cVa0jfuiQ2MXJ38lR
TxzRo/zO7JLCQXriiR4u8xOWHpymJ67oMdO+oiVgtZ74osf+S/23GY7riTN6
5Ph/J+Sl64k3esibk0/FvdETd/QYe7xlwBR7A/HHgHVjWZra3UAcMuBGxUaf
7CkG4pEB1l1ZL2IjDMQlA9wHq0J8DhmITwaEFk61ylMNxCkDTq37KTrztYF4
ZcBfnxcpt0gF4pYAY5bLYW83gfglYOrS+W5SX4E4JiBWd+5aephAPBOQcf39
6JgfBeKaAFHQoNxRKQLxTcAISVRg+0uBOCdgxa+3K2+3C8Q7I5ImiaJWdzcS
94yosnjbeI0zEv+M6Hlwe1zjQiNx0Ig5I3OcU3YaiYdGxJfqLkQkGYmLRuRv
me41ON9IfDRC3f9ohqXRSJw0YeLTEv+kribipQkbI3uVhjETcdOEO10Xh7kH
m4ifJjTdu9RavcVEHDVh0ILabYmJJuKpCUsdPI2LckzEVRN+TVqb4GY1EV/N
KAtIH/hWMBNnzejWKrtz2stMvDVj+gkf3+AgM3HXjLhxewq7bzATf834syov
pOS0mThshu1ec+3xLDPx2AwMDYoJqjETl81Y8+qkqpumC/4HDy/69Q==
             "], "alphas" -> CompressedData["
1:eJztlP9P1HUcxzFuirrFVh21gWwg3DBUsg4htHsmtJNuqAhygkVJgV4cdciX
dYshWoQIIrsB1uY5zu+2MCmWGjqXcJTR+jIhm0xL5VI+n/v2eTsmR/Oy++W5
/oV+uF8+22efz/v9fr2fXx4Jb1kKKuZERESYQo/clJNitEJCbv/Y+4XbJURX
ff2DbJYQ8bZueVuthOGra/drdkoYnWzt7W+XMHvdFa+2S9B0GJ956YyEA/rt
WY+PSIj66vbz5psShk6ve0IbkJDd+c2AXi0jc6pc06SVccQw9+nzRTJGDfaV
P1pl3L8QtNsOySh/7rNk17CM7oGjIwfdMlTtLddtT7kRn5FidujcGCjueu/I
O244+lc/qO1xYyqq9437l92ICnTueOhzozh5eHdNnAedNQubVho8mDP9d+RS
qweBO/tKM0948PPF1o7scQ+WH8/LfeExL67IJ33TaV7cTd/WXFvqxeL8hGP2
Ni+ulU5Wv3nOi8COmJa+SS8+TVpxtz7ah7zPP5z6IssHU0adJq/Ch+lX95py
On0Yqyztaj/vQ2vJWHfcbR+2Whwb/VF+/LTH2BVM86Nx87yZNUY/fjvYc+Nc
gx+JniHjaw4/Hiap4pY4/fhAn2iNv+eHLaeo165SYNLG/LlKreCaIXFLVbIC
14aMw8vSFaj+iVvT+ooCT0vml2WFCh5Fa03jZQqq9Kcv/W5RcLHMP2NuVPBH
odpia1Mw5HB25X4S+u/b1Hu2owqOn8Xsu2cUBA5rt90cVFCOZeO3RkLrLYuE
9dfQufNvVJ+YULCibuvCSpeCur6UBqdXQVO3s+HsAwVLez668vIjBdUZ2bHl
8wQm6gpSE6IF5ovmPmuMQOwU1psXCewNXh6cXSxwZ332gaRnBTS6xp2eNIHk
LXMXFKQLnJpxfl+UJdDR0aQL6ASuptV4XswR2BXr0seuFSjcoB60GwQ+Xl1/
6tI6gT3Bycrd+aH9FqzK/6tAoCUy9ZC8KbT+9Sf32YwCt5JceRObBb5rDqpG
igWWGBN/2VgiUB9purCr5L93fuf/XM/9uD/P4/mch/NxXs7P+/B+vC/vTz2o
D/WiftST+lJv6k8/6A/9on/0k/7Sb/rPPDAfzAvzwzwxX8wb88c8Mp/MK/PL
PDPfzDvzzz6wH+wL+8M+sV/sG/vHPrKf7Cv7yz6z3+w7+08ekA/kBflBnpAv
5A35Qx6RT+QV+UWekW/kHflHHpKP5CX5SZ6Sr+Qt+Useh/kc5nOYz2E+h/n8
/+Tzv+7Axf0=
             "], 
            "mins" -> {{
              3.0619247885148935`*^-12, {$CellContext`alpha -> 
                0.7936758727821678}}, {
              9.86075010678845*^-16, {$CellContext`alpha -> 
                0.7938630428666409}}, {
              1.0154362399645146`*^-12, {$CellContext`alpha -> 
                0.7944234790442141}}, {
              1.1145430237265545`*^-15, {$CellContext`alpha -> 
                0.795353975600932}}, {
              2.660959894361206*^-13, {$CellContext`alpha -> 
                0.7966492442052061}}, {
              5.111892495891943*^-13, {$CellContext`alpha -> 
                0.7983019939339269}}, {
              1.3128306378803996`*^-12, {$CellContext`alpha -> 
                0.8003030398747902}}, {
              2.3103911863283375`*^-15, {$CellContext`alpha -> 
                0.802641437087378}}, {
              1.2878177734316357`*^-13, {$CellContext`alpha -> 
                0.8053046360675633}}, {
              1.1930691158607366`*^-15, {$CellContext`alpha -> 
                0.8082786554128356}}, {
              7.521818257352412*^-15, {$CellContext`alpha -> 
                0.8115482671250265}}, {
              5.91505163247052*^-15, {$CellContext`alpha -> 
                0.8150971899271797}}, {
              6.443103066015781*^-15, {$CellContext`alpha -> 
                0.8189082860838033}}, {
              6.025189058141965*^-15, {$CellContext`alpha -> 
                0.8229637574862247}}, {
              2.0497950023830324`*^-15, {$CellContext`alpha -> 
                0.8272453371631283}}, {
              5.0011889035650736`*^-15, {$CellContext`alpha -> 
                0.8317344728692417}}, {
              1.245619658229212*^-15, {$CellContext`alpha -> 
                0.836412499958453}}, {
              3.75038857349146*^-15, {$CellContext`alpha -> 
                0.8412608013292009}}, {
              1.2259103795016917`*^-15, {$CellContext`alpha -> 
                0.8462609528108662}}, {
              3.559480810690913*^-15, {$CellContext`alpha -> 
                0.8513948529159483}}, {
              3.219646771412954*^-15, {$CellContext`alpha -> 
                0.8566448363951821}}, {
              3.317414456229917*^-15, {$CellContext`alpha -> 
                0.8619937714879775}}, {
              1.5700924586837751`*^-15, {$CellContext`alpha -> 
                0.8674251411505596}}, {
              1.6214484493323624`*^-15, {$CellContext`alpha -> 
                0.8729231088652805}}, {
              7.157724829773552*^-15, {$CellContext`alpha -> 
                0.8784725698871325}}, {
              7.881494916253989*^-16, {$CellContext`alpha -> 
                0.8840591889707684}}, {
              1.8323056099383797`*^-15, {$CellContext`alpha -> 
                0.8896694257488208}}, {
              6.884574232139713*^-15, {$CellContext`alpha -> 
                0.8952905490069432}}, {
              6.075291331119703*^-16, {$CellContext`alpha -> 
                0.9009106411303038}}, {
              4.9476293158182046`*^-15, {$CellContext`alpha -> 
                0.9065185939881866}}, {
              5.0440730726801614`*^-15, {$CellContext`alpha -> 
                0.9121040974854049}}, {
              8.151239741930301*^-15, {$CellContext`alpha -> 
                0.9176576219485326}}, {
              2.268360457819033*^-15, {$CellContext`alpha -> 
                0.9231703954378684}}, {
              1.5692785955416137`*^-15, {$CellContext`alpha -> 
                0.9286343769880954}}, {
              8.224197755830413*^-15, {$CellContext`alpha -> 
                0.9340422266864712}}, {
              7.612637464285288*^-15, {$CellContext`alpha -> 
                0.9393872734009561}}, {
              1.4502019305749402`*^-15, {$CellContext`alpha -> 
                0.944663480874945}}, {
              3.0758395731211447`*^-15, {$CellContext`alpha -> 
                0.9498654128126249}}, {
              1.0926803095464698`*^-14, {$CellContext`alpha -> 
                0.9549881974911032}}, {
              4.601088988326982*^-15, {$CellContext`alpha -> 
                0.9600274923535274}}, {
              1.9328029818980794`*^-15, {$CellContext`alpha -> 
                0.9649794489621835}}, {
              5.0106692497111664`*^-15, {$CellContext`alpha -> 
                0.9698406786223863}}, {
              8.766115322605685*^-15, {$CellContext`alpha -> 
                0.9746082189269544}}, {
              4.581876576235187*^-15, {$CellContext`alpha -> 
                0.9792795014170533}}, {
              2.469825594179667*^-15, {$CellContext`alpha -> 
                0.9838523205079307}}, {
              1.0083892088339728`*^-15, {$CellContext`alpha -> 
                0.9883248037871264}}, {
              2.8109150006019707`*^-15, {$CellContext`alpha -> 
                0.9926953837577055}}, {
              9.711555976488586*^-12, {$CellContext`alpha -> 
                0.9969627710690496}}, {
              3.774758283725532*^-15, {$CellContext`alpha -> 
                1.0011259292552703`}}, {
              6.281091505388907*^-15, {$CellContext`alpha -> 
                1.0051840509725256`}}, {
              1.1197050790828438`*^-14, {$CellContext`alpha -> 
                1.0091365357263178`}}, {
              7.398872255632945*^-15, {$CellContext`alpha -> 
                1.012982969045873}}, {
              0.0002914713042676967, {$CellContext`alpha -> 
                1.0167315047727934`}}, {
              1.0951730326127063`*^-14, {$CellContext`alpha -> 
                1.020356838482651}}, {
              9.203828365776893*^-15, {$CellContext`alpha -> 
                1.023884207767878}}, {
              6.044330782777089*^-14, {$CellContext`alpha -> 
                1.0273053596796684`}}, {
              1.0435129918933457`*^-13, {$CellContext`alpha -> 
                1.0306205449070225`}}, {
              5.766230984444476*^-13, {$CellContext`alpha -> 
                1.0338301028434596`}}, {
              7.650993560151124*^-13, {$CellContext`alpha -> 
                1.0369344494047685`}}, {
              9.368125792283964*^-13, {$CellContext`alpha -> 
                1.0399340658296408`}}, {
              5.412472789157499*^-13, {$CellContext`alpha -> 
                1.0428294883999254`}}, {
              8.893847518413567*^-13, {$CellContext`alpha -> 
                1.0456212990194427`}}, {
              9.131687402339984*^-13, {$CellContext`alpha -> 
                1.0483101165918578`}}, {
              8.932207732556677*^-13, {$CellContext`alpha -> 
                1.0508965891412698`}}, {
              8.552196745834638*^-13, {$CellContext`alpha -> 
                1.053381386620993}}, {
              8.120458834149342*^-13, {$CellContext`alpha -> 
                1.055765194359321}}, {
              6.85618052100427*^-13, {$CellContext`alpha -> 
                1.0580487070936018`}}, {
              2.001252863228811*^-12, {$CellContext`alpha -> 
                1.060232623546909}}, {
              1.7155097017818477`*^-12, {$CellContext`alpha -> 
                1.06231764150409}}, {
              2.1075482362230692`*^-10, {$CellContext`alpha -> 
                1.0643044533530563`}}, {
              3.2128902556871846`*^-15, {$CellContext`alpha -> 
                1.0661937420148235`}}, {
              3.7664226804860415`*^-10, {$CellContext`alpha -> 
                1.0679861773524542`}}, {
              4.923616545561348*^-10, {$CellContext`alpha -> 
                1.069682412779463}}, {
              6.282039583012313*^-9, {$CellContext`alpha -> 
                1.0712830825067121`}}, {
              7.977985694394529*^-9, {$CellContext`alpha -> 
                1.0727887982838458`}}, {
              8.454858567121301*^-9, {$CellContext`alpha -> 
                1.0742001477227716`}}, {
              8.744333512601482*^-9, {$CellContext`alpha -> 
                1.075517691764284}}, {
              8.806028269269643*^-9, {$CellContext`alpha -> 
                1.076741962765917}}, {
              8.607224548233971*^-9, {$CellContext`alpha -> 
                1.0778734628046067`}}, {
              8.127575094912373*^-9, {$CellContext`alpha -> 
                1.0789126621411822`}}, {
              1.5613639703944914`*^-14, {$CellContext`alpha -> 
                1.0798599976712637`}}, {
              6.3609034790124845`*^-9, {$CellContext`alpha -> 
                1.0807158726574542`}}, {
              5.1300692603359435`*^-9, {$CellContext`alpha -> 
                1.0814806537999015`}}, {
              3.763950740347386*^-9, {$CellContext`alpha -> 
                1.0821546721852842`}}, {
              2.38759983086993*^-9, {$CellContext`alpha -> 
                1.0827382215508625`}}, {
              1.1704336424842374`*^-9, {$CellContext`alpha -> 
                1.0832315577865486`}}, {
              8.955032625983201*^-15, {$CellContext`alpha -> 
                1.083634898348268}}, {
              4.874937653936333*^-15, {$CellContext`alpha -> 
                1.083948421817972}}, {
              5.138200548160309*^-15, {$CellContext`alpha -> 
                1.084172267430675}}, {
              4.4973786298209046`*^-10, {$CellContext`alpha -> 
                1.0843065348793834`}}, {
              2.340317622286307*^-9, {$CellContext`alpha -> 
                1.0843512840803815`}}, {
              4.4973786298209046`*^-10, {$CellContext`alpha -> 
                1.0843065348793834`}}, {
              5.138200548160309*^-15, {$CellContext`alpha -> 
                1.084172267430675}}, {
              4.874937653936333*^-15, {$CellContext`alpha -> 
                1.083948421817972}}, {
              8.955032625983201*^-15, {$CellContext`alpha -> 
                1.083634898348268}}, {
              1.1704336424842374`*^-9, {$CellContext`alpha -> 
                1.0832315577865486`}}, {
              2.38759983086993*^-9, {$CellContext`alpha -> 
                1.0827382215508625`}}, {
              3.763950740347386*^-9, {$CellContext`alpha -> 
                1.0821546721852842`}}, {
              5.1300692603359435`*^-9, {$CellContext`alpha -> 
                1.0814806537999015`}}, {
              6.3609034790124845`*^-9, {$CellContext`alpha -> 
                1.0807158726574542`}}, {
              1.5613639703944914`*^-14, {$CellContext`alpha -> 
                1.0798599976712637`}}, {
              8.127575094912373*^-9, {$CellContext`alpha -> 
                1.0789126621411822`}}, {
              8.607224548233971*^-9, {$CellContext`alpha -> 
                1.0778734628046067`}}, {
              8.806028269269643*^-9, {$CellContext`alpha -> 
                1.076741962765917}}, {
              8.744333512601482*^-9, {$CellContext`alpha -> 
                1.075517691764284}}, {
              8.454858567121301*^-9, {$CellContext`alpha -> 
                1.0742001477227716`}}, {
              7.977985694394529*^-9, {$CellContext`alpha -> 
                1.0727887982838458`}}, {
              6.282039583012313*^-9, {$CellContext`alpha -> 
                1.0712830825067121`}}, {
              4.923616545561348*^-10, {$CellContext`alpha -> 
                1.069682412779463}}, {
              3.7664226804860415`*^-10, {$CellContext`alpha -> 
                1.0679861773524542`}}, {
              3.2128902556871846`*^-15, {$CellContext`alpha -> 
                1.0661937420148235`}}, {
              2.1075482362230692`*^-10, {$CellContext`alpha -> 
                1.0643044533530563`}}, {
              1.7155097017818477`*^-12, {$CellContext`alpha -> 
                1.06231764150409}}, {
              2.001252863228811*^-12, {$CellContext`alpha -> 
                1.060232623546909}}, {
              6.85618052100427*^-13, {$CellContext`alpha -> 
                1.0580487070936018`}}, {
              8.120458834149342*^-13, {$CellContext`alpha -> 
                1.055765194359321}}, {
              8.552196745834638*^-13, {$CellContext`alpha -> 
                1.053381386620993}}, {
              8.932207732556677*^-13, {$CellContext`alpha -> 
                1.0508965891412698`}}, {
              9.131687402339984*^-13, {$CellContext`alpha -> 
                1.0483101165918578`}}, {
              8.893847518413567*^-13, {$CellContext`alpha -> 
                1.0456212990194427`}}, {
              5.412472789157499*^-13, {$CellContext`alpha -> 
                1.0428294883999254`}}, {
              9.368125792283964*^-13, {$CellContext`alpha -> 
                1.0399340658296408`}}, {
              7.650993560151124*^-13, {$CellContext`alpha -> 
                1.0369344494047685`}}, {
              5.766230984444476*^-13, {$CellContext`alpha -> 
                1.0338301028434596`}}, {
              1.0435129918933457`*^-13, {$CellContext`alpha -> 
                1.0306205449070225`}}, {
              6.044330782777089*^-14, {$CellContext`alpha -> 
                1.0273053596796684`}}, {
              9.203828365776893*^-15, {$CellContext`alpha -> 
                1.023884207767878}}, {
              1.0951730326127063`*^-14, {$CellContext`alpha -> 
                1.020356838482651}}, {
              0.0002914713042676967, {$CellContext`alpha -> 
                1.0167315047727934`}}, {
              7.398872255632945*^-15, {$CellContext`alpha -> 
                1.012982969045873}}, {
              1.1197050790828438`*^-14, {$CellContext`alpha -> 
                1.0091365357263178`}}, {
              6.281091505388907*^-15, {$CellContext`alpha -> 
                1.0051840509725256`}}, {
              3.774758283725532*^-15, {$CellContext`alpha -> 
                1.0011259292552703`}}, {
              9.711555976488586*^-12, {$CellContext`alpha -> 
                0.9969627710690496}}, {
              2.8109150006019707`*^-15, {$CellContext`alpha -> 
                0.9926953837577055}}, {
              1.0083892088339728`*^-15, {$CellContext`alpha -> 
                0.9883248037871264}}, {
              2.469825594179667*^-15, {$CellContext`alpha -> 
                0.9838523205079307}}, {
              4.581876576235187*^-15, {$CellContext`alpha -> 
                0.9792795014170533}}, {
              8.766115322605685*^-15, {$CellContext`alpha -> 
                0.9746082189269544}}, {
              5.0106692497111664`*^-15, {$CellContext`alpha -> 
                0.9698406786223863}}, {
              1.9328029818980794`*^-15, {$CellContext`alpha -> 
                0.9649794489621835}}, {
              4.601088988326982*^-15, {$CellContext`alpha -> 
                0.9600274923535274}}, {
              1.0926803095464698`*^-14, {$CellContext`alpha -> 
                0.9549881974911032}}, {
              3.0758395731211447`*^-15, {$CellContext`alpha -> 
                0.9498654128126249}}, {
              1.4502019305749402`*^-15, {$CellContext`alpha -> 
                0.944663480874945}}, {
              7.612637464285288*^-15, {$CellContext`alpha -> 
                0.9393872734009561}}, {
              8.224197755830413*^-15, {$CellContext`alpha -> 
                0.9340422266864712}}, {
              1.5692785955416137`*^-15, {$CellContext`alpha -> 
                0.9286343769880954}}, {
              2.268360457819033*^-15, {$CellContext`alpha -> 
                0.9231703954378684}}, {
              8.151239741930301*^-15, {$CellContext`alpha -> 
                0.9176576219485326}}, {
              5.0440730726801614`*^-15, {$CellContext`alpha -> 
                0.9121040974854049}}, {
              4.9476293158182046`*^-15, {$CellContext`alpha -> 
                0.9065185939881866}}, {
              6.075291331119703*^-16, {$CellContext`alpha -> 
                0.9009106411303038}}, {
              6.884574232139713*^-15, {$CellContext`alpha -> 
                0.8952905490069432}}, {
              1.8323056099383797`*^-15, {$CellContext`alpha -> 
                0.8896694257488208}}, {
              7.881494916253989*^-16, {$CellContext`alpha -> 
                0.8840591889707684}}, {
              7.157724829773552*^-15, {$CellContext`alpha -> 
                0.8784725698871325}}, {
              1.6214484493323624`*^-15, {$CellContext`alpha -> 
                0.8729231088652805}}, {
              1.5700924586837751`*^-15, {$CellContext`alpha -> 
                0.8674251411505596}}, {
              3.317414456229917*^-15, {$CellContext`alpha -> 
                0.8619937714879775}}, {
              3.219646771412954*^-15, {$CellContext`alpha -> 
                0.8566448363951821}}, {
              3.559480810690913*^-15, {$CellContext`alpha -> 
                0.8513948529159483}}, {
              1.2259103795016917`*^-15, {$CellContext`alpha -> 
                0.8462609528108662}}, {
              3.75038857349146*^-15, {$CellContext`alpha -> 
                0.8412608013292009}}, {
              1.245619658229212*^-15, {$CellContext`alpha -> 
                0.836412499958453}}, {
              5.0011889035650736`*^-15, {$CellContext`alpha -> 
                0.8317344728692417}}, {
              2.0497950023830324`*^-15, {$CellContext`alpha -> 
                0.8272453371631283}}, {
              6.025189058141965*^-15, {$CellContext`alpha -> 
                0.8229637574862247}}, {
              6.443103066015781*^-15, {$CellContext`alpha -> 
                0.8189082860838033}}, {
              5.91505163247052*^-15, {$CellContext`alpha -> 
                0.8150971899271797}}, {
              7.521818257352412*^-15, {$CellContext`alpha -> 
                0.8115482671250265}}, {
              1.1930691158607366`*^-15, {$CellContext`alpha -> 
                0.8082786554128356}}, {
              1.2878177734316357`*^-13, {$CellContext`alpha -> 
                0.8053046360675633}}, {
              2.3103911863283375`*^-15, {$CellContext`alpha -> 
                0.802641437087378}}, {
              1.3128306378803996`*^-12, {$CellContext`alpha -> 
                0.8003030398747902}}, {
              5.111892495891943*^-13, {$CellContext`alpha -> 
                0.7983019939339269}}, {
              2.660959894361206*^-13, {$CellContext`alpha -> 
                0.7966492442052061}}, {
              1.1145430237265545`*^-15, {$CellContext`alpha -> 
                0.795353975600932}}, {
              1.0154362399645146`*^-12, {$CellContext`alpha -> 
                0.7944234790442141}}, {
              9.86075010678845*^-16, {$CellContext`alpha -> 
                0.7938630428666409}}, {
              3.0619247885148935`*^-12, {$CellContext`alpha -> 
                0.7936758727821678}}, {
              9.86075010678845*^-16, {$CellContext`alpha -> 
                0.7938630428666409}}, {
              1.0154362399645146`*^-12, {$CellContext`alpha -> 
                0.7944234790442141}}, {
              1.1145430237265545`*^-15, {$CellContext`alpha -> 
                0.795353975600932}}, {
              2.660959894361206*^-13, {$CellContext`alpha -> 
                0.7966492442052061}}, {
              5.111892495891943*^-13, {$CellContext`alpha -> 
                0.7983019939339269}}, {
              1.3128306378803996`*^-12, {$CellContext`alpha -> 
                0.8003030398747902}}, {
              2.3103911863283375`*^-15, {$CellContext`alpha -> 
                0.802641437087378}}, {
              1.2878177734316357`*^-13, {$CellContext`alpha -> 
                0.8053046360675633}}, {
              1.1930691158607366`*^-15, {$CellContext`alpha -> 
                0.8082786554128356}}, {
              7.521818257352412*^-15, {$CellContext`alpha -> 
                0.8115482671250265}}, {
              5.91505163247052*^-15, {$CellContext`alpha -> 
                0.8150971899271797}}, {
              6.443103066015781*^-15, {$CellContext`alpha -> 
                0.8189082860838033}}, {
              6.025189058141965*^-15, {$CellContext`alpha -> 
                0.8229637574862247}}, {
              2.0497950023830324`*^-15, {$CellContext`alpha -> 
                0.8272453371631283}}, {
              5.0011889035650736`*^-15, {$CellContext`alpha -> 
                0.8317344728692417}}, {
              1.245619658229212*^-15, {$CellContext`alpha -> 
                0.836412499958453}}, {
              3.75038857349146*^-15, {$CellContext`alpha -> 
                0.8412608013292009}}, {
              1.2259103795016917`*^-15, {$CellContext`alpha -> 
                0.8462609528108662}}, {
              3.559480810690913*^-15, {$CellContext`alpha -> 
                0.8513948529159483}}, {
              3.219646771412954*^-15, {$CellContext`alpha -> 
                0.8566448363951821}}, {
              3.317414456229917*^-15, {$CellContext`alpha -> 
                0.8619937714879775}}, {
              1.5700924586837751`*^-15, {$CellContext`alpha -> 
                0.8674251411505596}}, {
              1.6214484493323624`*^-15, {$CellContext`alpha -> 
                0.8729231088652805}}, {
              7.157724829773552*^-15, {$CellContext`alpha -> 
                0.8784725698871325}}, {
              7.881494916253989*^-16, {$CellContext`alpha -> 
                0.8840591889707684}}, {
              1.8323056099383797`*^-15, {$CellContext`alpha -> 
                0.8896694257488208}}, {
              6.884574232139713*^-15, {$CellContext`alpha -> 
                0.8952905490069432}}, {
              6.075291331119703*^-16, {$CellContext`alpha -> 
                0.9009106411303038}}, {
              4.9476293158182046`*^-15, {$CellContext`alpha -> 
                0.9065185939881866}}, {
              5.0440730726801614`*^-15, {$CellContext`alpha -> 
                0.9121040974854049}}, {
              8.151239741930301*^-15, {$CellContext`alpha -> 
                0.9176576219485326}}, {
              2.268360457819033*^-15, {$CellContext`alpha -> 
                0.9231703954378684}}, {
              1.5692785955416137`*^-15, {$CellContext`alpha -> 
                0.9286343769880954}}, {
              8.224197755830413*^-15, {$CellContext`alpha -> 
                0.9340422266864712}}, {
              7.612637464285288*^-15, {$CellContext`alpha -> 
                0.9393872734009561}}, {
              1.4502019305749402`*^-15, {$CellContext`alpha -> 
                0.944663480874945}}, {
              3.0758395731211447`*^-15, {$CellContext`alpha -> 
                0.9498654128126249}}, {
              1.0926803095464698`*^-14, {$CellContext`alpha -> 
                0.9549881974911032}}, {
              4.601088988326982*^-15, {$CellContext`alpha -> 
                0.9600274923535274}}, {
              1.9328029818980794`*^-15, {$CellContext`alpha -> 
                0.9649794489621835}}, {
              5.0106692497111664`*^-15, {$CellContext`alpha -> 
                0.9698406786223863}}, {
              8.766115322605685*^-15, {$CellContext`alpha -> 
                0.9746082189269544}}, {
              4.581876576235187*^-15, {$CellContext`alpha -> 
                0.9792795014170533}}, {
              2.469825594179667*^-15, {$CellContext`alpha -> 
                0.9838523205079307}}, {
              1.0083892088339728`*^-15, {$CellContext`alpha -> 
                0.9883248037871264}}, {
              2.8109150006019707`*^-15, {$CellContext`alpha -> 
                0.9926953837577055}}, {
              9.711555976488586*^-12, {$CellContext`alpha -> 
                0.9969627710690496}}, {
              3.774758283725532*^-15, {$CellContext`alpha -> 
                1.0011259292552703`}}, {
              6.281091505388907*^-15, {$CellContext`alpha -> 
                1.0051840509725256`}}, {
              1.1197050790828438`*^-14, {$CellContext`alpha -> 
                1.0091365357263178`}}, {
              7.398872255632945*^-15, {$CellContext`alpha -> 
                1.012982969045873}}, {
              0.0002914713042676967, {$CellContext`alpha -> 
                1.0167315047727934`}}, {
              1.0951730326127063`*^-14, {$CellContext`alpha -> 
                1.020356838482651}}, {
              9.203828365776893*^-15, {$CellContext`alpha -> 
                1.023884207767878}}, {
              6.044330782777089*^-14, {$CellContext`alpha -> 
                1.0273053596796684`}}, {
              1.0435129918933457`*^-13, {$CellContext`alpha -> 
                1.0306205449070225`}}, {
              5.766230984444476*^-13, {$CellContext`alpha -> 
                1.0338301028434596`}}, {
              7.650993560151124*^-13, {$CellContext`alpha -> 
                1.0369344494047685`}}, {
              9.368125792283964*^-13, {$CellContext`alpha -> 
                1.0399340658296408`}}, {
              5.412472789157499*^-13, {$CellContext`alpha -> 
                1.0428294883999254`}}, {
              8.893847518413567*^-13, {$CellContext`alpha -> 
                1.0456212990194427`}}, {
              9.131687402339984*^-13, {$CellContext`alpha -> 
                1.0483101165918578`}}, {
              8.932207732556677*^-13, {$CellContext`alpha -> 
                1.0508965891412698`}}, {
              8.552196745834638*^-13, {$CellContext`alpha -> 
                1.053381386620993}}, {
              8.120458834149342*^-13, {$CellContext`alpha -> 
                1.055765194359321}}, {
              6.85618052100427*^-13, {$CellContext`alpha -> 
                1.0580487070936018`}}, {
              2.001252863228811*^-12, {$CellContext`alpha -> 
                1.060232623546909}}, {
              1.7155097017818477`*^-12, {$CellContext`alpha -> 
                1.06231764150409}}, {
              2.1075482362230692`*^-10, {$CellContext`alpha -> 
                1.0643044533530563`}}, {
              3.2128902556871846`*^-15, {$CellContext`alpha -> 
                1.0661937420148235`}}, {
              3.7664226804860415`*^-10, {$CellContext`alpha -> 
                1.0679861773524542`}}, {
              4.923616545561348*^-10, {$CellContext`alpha -> 
                1.069682412779463}}, {
              6.282039583012313*^-9, {$CellContext`alpha -> 
                1.0712830825067121`}}, {
              7.977985694394529*^-9, {$CellContext`alpha -> 
                1.0727887982838458`}}, {
              8.454858567121301*^-9, {$CellContext`alpha -> 
                1.0742001477227716`}}, {
              8.744333512601482*^-9, {$CellContext`alpha -> 
                1.075517691764284}}, {
              8.806028269269643*^-9, {$CellContext`alpha -> 
                1.076741962765917}}, {
              8.607224548233971*^-9, {$CellContext`alpha -> 
                1.0778734628046067`}}, {
              8.127575094912373*^-9, {$CellContext`alpha -> 
                1.0789126621411822`}}, {
              1.5613639703944914`*^-14, {$CellContext`alpha -> 
                1.0798599976712637`}}, {
              6.3609034790124845`*^-9, {$CellContext`alpha -> 
                1.0807158726574542`}}, {
              5.1300692603359435`*^-9, {$CellContext`alpha -> 
                1.0814806537999015`}}, {
              3.763950740347386*^-9, {$CellContext`alpha -> 
                1.0821546721852842`}}, {
              2.38759983086993*^-9, {$CellContext`alpha -> 
                1.0827382215508625`}}, {
              1.1704336424842374`*^-9, {$CellContext`alpha -> 
                1.0832315577865486`}}, {
              8.955032625983201*^-15, {$CellContext`alpha -> 
                1.083634898348268}}, {
              4.874937653936333*^-15, {$CellContext`alpha -> 
                1.083948421817972}}, {
              5.138200548160309*^-15, {$CellContext`alpha -> 
                1.084172267430675}}, {
              4.4973786298209046`*^-10, {$CellContext`alpha -> 
                1.0843065348793834`}}, {
              2.340317622286307*^-9, {$CellContext`alpha -> 
                1.0843512840803815`}}, {
              4.4973786298209046`*^-10, {$CellContext`alpha -> 
                1.0843065348793834`}}, {
              5.138200548160309*^-15, {$CellContext`alpha -> 
                1.084172267430675}}, {
              4.874937653936333*^-15, {$CellContext`alpha -> 
                1.083948421817972}}, {
              8.955032625983201*^-15, {$CellContext`alpha -> 
                1.083634898348268}}, {
              1.1704336424842374`*^-9, {$CellContext`alpha -> 
                1.0832315577865486`}}, {
              2.38759983086993*^-9, {$CellContext`alpha -> 
                1.0827382215508625`}}, {
              3.763950740347386*^-9, {$CellContext`alpha -> 
                1.0821546721852842`}}, {
              5.1300692603359435`*^-9, {$CellContext`alpha -> 
                1.0814806537999015`}}, {
              6.3609034790124845`*^-9, {$CellContext`alpha -> 
                1.0807158726574542`}}, {
              1.5613639703944914`*^-14, {$CellContext`alpha -> 
                1.0798599976712637`}}, {
              8.127575094912373*^-9, {$CellContext`alpha -> 
                1.0789126621411822`}}, {
              8.607224548233971*^-9, {$CellContext`alpha -> 
                1.0778734628046067`}}, {
              8.806028269269643*^-9, {$CellContext`alpha -> 
                1.076741962765917}}, {
              8.744333512601482*^-9, {$CellContext`alpha -> 
                1.075517691764284}}, {
              8.454858567121301*^-9, {$CellContext`alpha -> 
                1.0742001477227716`}}, {
              7.977985694394529*^-9, {$CellContext`alpha -> 
                1.0727887982838458`}}, {
              6.282039583012313*^-9, {$CellContext`alpha -> 
                1.0712830825067121`}}, {
              4.923616545561348*^-10, {$CellContext`alpha -> 
                1.069682412779463}}, {
              3.7664226804860415`*^-10, {$CellContext`alpha -> 
                1.0679861773524542`}}, {
              3.2128902556871846`*^-15, {$CellContext`alpha -> 
                1.0661937420148235`}}, {
              2.1075482362230692`*^-10, {$CellContext`alpha -> 
                1.0643044533530563`}}, {
              1.7155097017818477`*^-12, {$CellContext`alpha -> 
                1.06231764150409}}, {
              2.001252863228811*^-12, {$CellContext`alpha -> 
                1.060232623546909}}, {
              6.85618052100427*^-13, {$CellContext`alpha -> 
                1.0580487070936018`}}, {
              8.120458834149342*^-13, {$CellContext`alpha -> 
                1.055765194359321}}, {
              8.552196745834638*^-13, {$CellContext`alpha -> 
                1.053381386620993}}, {
              8.932207732556677*^-13, {$CellContext`alpha -> 
                1.0508965891412698`}}, {
              9.131687402339984*^-13, {$CellContext`alpha -> 
                1.0483101165918578`}}, {
              8.893847518413567*^-13, {$CellContext`alpha -> 
                1.0456212990194427`}}, {
              5.412472789157499*^-13, {$CellContext`alpha -> 
                1.0428294883999254`}}, {
              9.368125792283964*^-13, {$CellContext`alpha -> 
                1.0399340658296408`}}, {
              7.650993560151124*^-13, {$CellContext`alpha -> 
                1.0369344494047685`}}, {
              5.766230984444476*^-13, {$CellContext`alpha -> 
                1.0338301028434596`}}, {
              1.0435129918933457`*^-13, {$CellContext`alpha -> 
                1.0306205449070225`}}, {
              6.044330782777089*^-14, {$CellContext`alpha -> 
                1.0273053596796684`}}, {
              9.203828365776893*^-15, {$CellContext`alpha -> 
                1.023884207767878}}, {
              1.0951730326127063`*^-14, {$CellContext`alpha -> 
                1.020356838482651}}, {
              0.0002914713042676967, {$CellContext`alpha -> 
                1.0167315047727934`}}, {
              7.398872255632945*^-15, {$CellContext`alpha -> 
                1.012982969045873}}, {
              1.1197050790828438`*^-14, {$CellContext`alpha -> 
                1.0091365357263178`}}, {
              6.281091505388907*^-15, {$CellContext`alpha -> 
                1.0051840509725256`}}, {
              3.774758283725532*^-15, {$CellContext`alpha -> 
                1.0011259292552703`}}, {
              9.711555976488586*^-12, {$CellContext`alpha -> 
                0.9969627710690496}}, {
              2.8109150006019707`*^-15, {$CellContext`alpha -> 
                0.9926953837577055}}, {
              1.0083892088339728`*^-15, {$CellContext`alpha -> 
                0.9883248037871264}}, {
              2.469825594179667*^-15, {$CellContext`alpha -> 
                0.9838523205079307}}, {
              4.581876576235187*^-15, {$CellContext`alpha -> 
                0.9792795014170533}}, {
              8.766115322605685*^-15, {$CellContext`alpha -> 
                0.9746082189269544}}, {
              5.0106692497111664`*^-15, {$CellContext`alpha -> 
                0.9698406786223863}}, {
              1.9328029818980794`*^-15, {$CellContext`alpha -> 
                0.9649794489621835}}, {
              4.601088988326982*^-15, {$CellContext`alpha -> 
                0.9600274923535274}}, {
              1.0926803095464698`*^-14, {$CellContext`alpha -> 
                0.9549881974911032}}, {
              3.0758395731211447`*^-15, {$CellContext`alpha -> 
                0.9498654128126249}}, {
              1.4502019305749402`*^-15, {$CellContext`alpha -> 
                0.944663480874945}}, {
              7.612637464285288*^-15, {$CellContext`alpha -> 
                0.9393872734009561}}, {
              8.224197755830413*^-15, {$CellContext`alpha -> 
                0.9340422266864712}}, {
              1.5692785955416137`*^-15, {$CellContext`alpha -> 
                0.9286343769880954}}, {
              2.268360457819033*^-15, {$CellContext`alpha -> 
                0.9231703954378684}}, {
              8.151239741930301*^-15, {$CellContext`alpha -> 
                0.9176576219485326}}, {
              5.0440730726801614`*^-15, {$CellContext`alpha -> 
                0.9121040974854049}}, {
              4.9476293158182046`*^-15, {$CellContext`alpha -> 
                0.9065185939881866}}, {
              6.075291331119703*^-16, {$CellContext`alpha -> 
                0.9009106411303038}}, {
              6.884574232139713*^-15, {$CellContext`alpha -> 
                0.8952905490069432}}, {
              1.8323056099383797`*^-15, {$CellContext`alpha -> 
                0.8896694257488208}}, {
              7.881494916253989*^-16, {$CellContext`alpha -> 
                0.8840591889707684}}, {
              7.157724829773552*^-15, {$CellContext`alpha -> 
                0.8784725698871325}}, {
              1.6214484493323624`*^-15, {$CellContext`alpha -> 
                0.8729231088652805}}, {
              1.5700924586837751`*^-15, {$CellContext`alpha -> 
                0.8674251411505596}}, {
              3.317414456229917*^-15, {$CellContext`alpha -> 
                0.8619937714879775}}, {
              3.219646771412954*^-15, {$CellContext`alpha -> 
                0.8566448363951821}}, {
              3.559480810690913*^-15, {$CellContext`alpha -> 
                0.8513948529159483}}, {
              1.2259103795016917`*^-15, {$CellContext`alpha -> 
                0.8462609528108662}}, {
              3.75038857349146*^-15, {$CellContext`alpha -> 
                0.8412608013292009}}, {
              1.245619658229212*^-15, {$CellContext`alpha -> 
                0.836412499958453}}, {
              5.0011889035650736`*^-15, {$CellContext`alpha -> 
                0.8317344728692417}}, {
              2.0497950023830324`*^-15, {$CellContext`alpha -> 
                0.8272453371631283}}, {
              6.025189058141965*^-15, {$CellContext`alpha -> 
                0.8229637574862247}}, {
              6.443103066015781*^-15, {$CellContext`alpha -> 
                0.8189082860838033}}, {
              5.91505163247052*^-15, {$CellContext`alpha -> 
                0.8150971899271797}}, {
              7.521818257352412*^-15, {$CellContext`alpha -> 
                0.8115482671250265}}, {
              1.1930691158607366`*^-15, {$CellContext`alpha -> 
                0.8082786554128356}}, {
              1.2878177734316357`*^-13, {$CellContext`alpha -> 
                0.8053046360675633}}, {
              2.3103911863283375`*^-15, {$CellContext`alpha -> 
                0.802641437087378}}, {
              1.3128306378803996`*^-12, {$CellContext`alpha -> 
                0.8003030398747902}}, {
              5.111892495891943*^-13, {$CellContext`alpha -> 
                0.7983019939339269}}, {
              2.660959894361206*^-13, {$CellContext`alpha -> 
                0.7966492442052061}}, {
              1.1145430237265545`*^-15, {$CellContext`alpha -> 
                0.795353975600932}}, {
              1.0154362399645146`*^-12, {$CellContext`alpha -> 
                0.7944234790442141}}, {
              9.86075010678845*^-16, {$CellContext`alpha -> 
                0.7938630428666409}}}}, $CellContext`i$$, {}, \
$CellContext`getPentVtx0, 
           Function[$CellContext`x, 0], $CellContext`drSubhex -> 
           True, $CellContext`plotAll -> 
           False, $CellContext`vtx -> {1, 2, 3}], ImageSize -> Medium]; 
       Grid[{{$CellContext`poly$13763, $CellContext`cs$13763}}]), 
      "Specifications" :> {{$CellContext`i$$, 1, 360, 1, Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{780., {222., 228.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({
      Attributes[$CellContext`cs$13763] = {Temporary}, 
       Attributes[$CellContext`coss$13763] = {
        Temporary}, $CellContext`coss$13763 = CompressedData["
1:eJydnHdQlVf3trFjScREI8aG3VgJUeyKxhgLKiq2xEKs2CJGjSUWLFFiBStR
VIwNOygqgrpQAQEVaUoR4RxsxIo12L/zzXPfzLhmfHV+f2Qyw5CTwzn72Xut
a137rjZsYu+RhaysrP7/P+4FjH97W3v5Bj/xliYLHLvsCzBJ6OwTa+/ZXRSX
hz9uTuzrIzGTp2U0mGSSL5ZdXWeTFScurSet2fjHKqkrAQVPNjXJo6B554N7
xot/gySHIcPXSOlHrxs+upclZ99WbFLfPkHsoiaU6VlivXjct7tgNTpLnlYa
l1fFJlE8lmb7rBq/QYbf+6vG07RMcew4KD3mQaLkXtk4vOufm+VutSmRVTtl
Smi1x28mnE8S094Vtfrs2ipHKnYtbd57TZ4u3n+q/45k8dpXwPzKbbsUHjlo
8aaS1yTXpUebrD8uS911P726Pm6XfJuz7+szIzPkywFTtozpcUVCrLsm/3d2
j/SzS253JvSqNAh692ZMpRSxDarSIHXEAZnxLKpQ+ZJXpeNip4LDbqaI9fC9
3k9qBsnlyEtF2vZPl8wed5pkB6RK8FiPgHrNDsuw3W7uIVvSxLlHw8JLRqXJ
rMFFJ6wfdUTiguacKH4zVXK+aO9VrEq6BAR2LhoceEwazXG/f7ROqjzaZFW6
/KV0qbQ7PerpF6Gypf35b39wT5Hnk6ymz59xVTrHb7xxcckJuVPYrViLXVek
mn/sWLvKGeLcrl9kSDmRUD/7NuVuXpakE+KRdDxDBp+2GeOXGi7jp3xh81N1
y99fd/Urr57XpNfTAjcmNjwjN+JqD1o4NFlqX17m1jzzmhQYWDG8rtdZ8Y+b
cLPUpiRxXXD6knlkppinvF237XaEtAwMCxl9NVGG3nHrvvxWprRvsKp4TNco
WVFs/45CFRPF+ftqh7q4ZUmNkLkpKwLPyeaINQldBiVIdBE5Wj8pS5zOPzma
Vz5GjpRIGLZpS7wEzItYtLOqSXpU9c619YyV+n1eLDoae0k6HSwSNbK3SYIn
1IywyTkv6/rXfnr45zg5urXMdzfmmWR2UMuNNj0vSuPOuxskPb4gXQOXn/zu
gEmmHYv6fEBwnBy+X/SXXd7n5ccrv/00OsUk1VsGZW8oGS9e9x48Oto0Vr6v
v+zEqjcmuW8OXb8gLF5uxOTs/SM7WtK3zy0Xa2eWyantvvQbkyDhAaMrDl9/
TubUv5tZrb1ZfjvaquXWcoli1az9szjXKLnzY8m9B4aY5ZfEp9v6SaLsWR+8
slzFSJnZ2PX1whlmsfVb5rxoVJKsrDPBff6dsxJYx63GcR+zDPUu2MGqZLLY
D3cM7nf2jCw9vLb60F1mKdpjVPcN+5Il9qtRz2J2nJYac+6uWxJqlimp4X83
7nZZcp+4riuxKlwujHbc0eO8WaadK/6T/63L4nSjWsnZNiJjfX+/ezLNLN0+
d56YMOeKJAct21aszElZ9sM/U+/cNEtz88PS+75MEZOL6+LsWmFSYPC0Izcf
msV17VOPyjtSJHjak5yGPY9LQLGcWeH/mSVn7KlJX32XKlaXL8qbZcek187w
l0vemOX4ty+6Lj2ZKh4HS5h/yjoip1vbH3ctkC1tNz5ymtwxTVIrFi/VsVOw
/Ghza1ODQtly9tzegdHn0sR9yqh/D5w+JEPGeN61s/zc8eLNrxb/mC42Gddf
efUKklXPbDq2s7zOu7vVmhw4my45JZYXmXT3oLxyn79vjeX/m/3glHvb1lcl
9fNHG1oO2i/fVAn2bphnlk0dqjZqGXRVXHraFqjxbI84LKweXe6RWS4Mivlr
R/UM6dxium/ykQBZX+bthgE5ZkmYXPl+hHeG2PfIDj3lv1OShh0smH7NLG1d
Nh0wv8wQl6qLvv5y/3bZXuXeYttEs7S4/r13+C/XxGbkyb/isv+Retd91++O
MMuMDT/frhd5TaJ7NHI51HarRJdb3uLkEbPUTC6V8E2tTLFr9cMVH88t0v16
kbaDdpgld2fCu6h5meJ/sukWhzg/cRw3wXrlarPs2eO5qdTVTPF+edyl58gN
snefw9rBnmZJPlnKvsi3WWI3roLVvY6+UrHIyrmXxpml8I5Yz7AFludpcYug
4uPXyd7/vit2r69ZovZ8vqil5TkLbBc1bFfaGilV41q50LZmOXRu5q6o0iYJ
TK/w8syy1RK79WxHp9pmKVBu/fShTUwSfqFHmZ8WrpJhJ3PNC0uZ5WTv7q0n
9DdJbuHw3WPFR2o9+/XZ8kcmWdat1/hn001i51478klrH3GLHdDpl8uWc2C9
18Q3viaJnzP09rNX3hI3JnJo4RCTvP6j0Zolxyyvk3V+/mTLz7P2r14762+T
NB7sV+KfZJOYmpfuNamlj6RMK1v80gyT/GO129Q51yRW59tveH7MR1b5rdpv
NdAkfl6L3ywoYRaXsMAxn01eJR33XXD+qplJmrRxrDKghlm8E+YePzN2tZRx
qbW0bFmT/LC4WWJMS7P4B2cvqr15jfQOLZ76LitLej9/Pv2ai+V78JjwoFup
dbK7UKG9x9dmyeTFF9uuH2kWt29KWXcJXi+vfOrUH9olS0bdXFjx1XSz2PT3
Ld1s7d/iuMkmJu9lpuyOrxZfaqlZnEoMbOVwYKMsKdM8acWeTOnm0uXmpY2W
9/NV5raBbzdJv7iZs78ZkClZZ7N2/7jXLO7lp68a3cFfrlh75MQXypT1Pyd9
O+245XXm3tzws/9WebziTN3l+6/J6cu3XX+JMsuApmH9/Gy3yYE3fXuO6ntN
XDfsPmBtWY/2486NObVnu1w+ZTV+xKsMed69gN/EDLOEbxvSs3+/nWIf5L1p
5ZYMyfq+TWtfy3MfMKS255uvA+RNn8elc9tnyLY+hycuvG+WkFHVGnfO2y2t
8vYUW5F9Vf7YNjOl6VOzeFbNaXjp/l555fz09qR5V6Vmk88u739hltTJBaLr
vdovX4edbbG9ylW5XrHokvuW57J1+baXXpQOlLrXVx1qGGo5D+8kpjyzypa6
Zt+25oZBUmXxlVblXdMlZMjmoecKZsu934tUtO1/SFYvm/1izL00uRVRf/4w
y35wI6la2Nilh2VnStVejRek5f++1QSPrjtigyWhSPHHHrZp+a9f9kZ62Oqy
R8U9rEh6832pko334/nZV3sLjDkmHjfvDPFpmyo18P4D6/3cJfRciFjd/7fJ
n5dSZCb+3ga/vOjkZR8q51acmlp1aIpsx+fjtrh4aNNtYXI282DAuPtX5Bo+
z2Vf7rFeVvWkrL/rHTN15hV5gc9/+7Kx8X12nBIXe1+XrkWvSG98Xwvvtxhd
7+twse9dquVz78v53++IymfM9W6Fy6s7TqUXf31ZfLEefvtzWLMVR09Lx6ER
OSW2JUsm1k/12gt2OS49I8mLX8/zrpcszlhv7TM6phYZcVZmPo9rWicoSQKw
Pl+92B6e4RQht0qGlMpyTBJ3rOe2DSpu3lgtUlb42UZEhyXmr/8LD3rkVCsa
JQWLXrzyrF1i/vOyJG9Jxx4PouToibKLpp9NsNRBxvPVb3XPGW/TzklImE/2
8E4J4oDnMe+r2yNLx0TLzanXEs9Hx+c/v44THj4YFBYjs64NrxbZNV624nnf
G9Yg73RgrAw8fbXQed9L0gj7w7vGw/vZ7j4vxfY8a754Y5y8wn5Sd/uUiObb
L4i5++gGDzZdlDLYf/retk15ufWiNGlRoNm3/hfy96tZFQIeNfknTmIvd05a
8M95OYX9rVJDaXli+yXZGdU3qOKOWCmI/fDWf6s6H3KNlxyrS7H2ATH5++ec
11OdrFLjZVOLctPe7I3O3287Zbn52VvqnA17feaestQ9RbE/dywb066+OUF6
+FRtcvholCRiPx+x2r5vyqhEGdd44dzKpyLz9/8mM1p0qXg/UeLSbr9qfy4i
/7wIHWmKzJicJIvWtinmnnhWquN86Xkvc7/VqyQJHLwoJS3rjPyO82i6XXPb
cfOTZfyhKytuPDwtzXB+Lfg9t9u74pdl64yCPVMLnpZ2OO+yFjwO2+JzWVa4
X3C2rhCefz6+/vXF/sAKV8Tv4cUZw4edyj9Pr8VvMC3xvyIdo051eOJ/Iv/8
lUm1m6yrkyKzSkZGZt8IFRPO603tUl82OpAiI54UOVjT4Xj++f72K3O375qk
isl53Teefx2T5qgHkk549/U8nioXZjh2OHv3iJxB/VB/7pKfHrdJk1LdWrw8
MzBYWqPeuDi4zsERp9MkYlum68/Jh/LrE6fM0seCvk+31DvnB08cFJRfz/zl
UOT6oYh0Ce/VtGfizYPSF/VPo2rmA04dr4pTo+vzJn+7P79emv37xS0OZ65K
dKWHrQ9t2iNdUV+VbX2sw9C2GWLbxv/h0gYB+fWYaWCh+n4hGeL72FyvpGmH
TEf9tmTqskcn7a+J/8qkCj+GbhNr1Hvj9z39znfnNUu9EJ8w7ORWcUN9OKbV
wDVvKmSKZ+9Yy8reIuVRTyaPmXlcllh+XvQLh7zlfvn15/lWE3sezMsUt+J/
Frq57e/8evXY9oLF/YZnibe9b8GJldfn17fPnbO2up7PEqtlPzezf7dG7qEe
9rh41SOpvKUuyFq+Mbr76vz6OTnRJb5xZ5N4Xoq8m/rZKpmJervm51NH7fjd
UheYFu18/b2PzEF93vFdv+MVtll+nt6y9tmn3nIE9fy9bReyJ100iU1owtld
NX3EGfX/nap+61Y9M4lH1XGPrFN98vuFFbcb1HOraJb48WXbVflytVRBf3Gj
f/HNpyz1TXyTpe3uW+od9iNfLJq322eo5fyP6tK5jf16SUX/Eh0WHX1itlms
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
YY3QnQ==
        "], 
       Attributes[$CellContext`clrs$13763] = {
        Temporary}, $CellContext`clrs$13763 = {
         RGBColor[1, 0, 0], 
         RGBColor[0, 2/3, 0], 
         RGBColor[0, 0, 1], 
         RGBColor[1, 0, 1], 
         RGBColor[0, 1, 1]}, 
       Attributes[$CellContext`n$13763] = {Temporary}, $CellContext`n$13763 = 
       3, Attributes[$CellContext`poly$13763] = {
        Temporary}, $CellContext`showOnePoly[
         Pattern[$CellContext`alphaT, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`notableLoci, 
          Blank[]], 
         Pattern[$CellContext`fnVtx0, 
          Blank[]], 
         Pattern[$CellContext`fnErrorP, 
          Blank[]], 
         Pattern[$CellContext`opts, 
          OptionsPattern[]]] := 
       Module[{$CellContext`polyErr}, $CellContext`polyErr = \
$CellContext`polyError[$CellContext`alphaT, $CellContext`i, \
$CellContext`fnVtx0, $CellContext`fnErrorP]; \
$CellContext`drawPoly[$CellContext`polyErr, $CellContext`notableLoci, 
           FilterRules[{$CellContext`opts}, 
            Options[$CellContext`drawPoly]]]], $CellContext`polyError[
         Pattern[$CellContext`alphaT, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`fnVtx0, 
          Blank[]], 
         Pattern[$CellContext`fnErrorP, 
          Blank[]]] := 
       Module[{$CellContext`a, $CellContext`alpha, $CellContext`poly, \
$CellContext`err}, $CellContext`a = 
          ReplaceAll["a", $CellContext`alphaT]; $CellContext`alpha = Part[
            ReplaceAll[
            "alphas", $CellContext`alphaT], $CellContext`i]; \
$CellContext`poly = $CellContext`polyVtx[$CellContext`alphaT, $CellContext`i, \
$CellContext`fnVtx0]; $CellContext`err = $CellContext`fnErrorP[$CellContext`a, 
            Part[$CellContext`poly, 1], $CellContext`alpha]; {
          "a" -> $CellContext`a, "poly" -> $CellContext`poly, 
           "error" -> $CellContext`err}], $CellContext`polyVtx[
         Pattern[$CellContext`alphaT, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`fnVtx0, 
          Blank[]]] := 
       Module[{$CellContext`a, $CellContext`p1, $CellContext`t, \
$CellContext`alpha}, $CellContext`a = 
          ReplaceAll["a", $CellContext`alphaT]; $CellContext`alpha = Part[
            ReplaceAll[
            "alphas", $CellContext`alphaT], $CellContext`i]; $CellContext`t = 
          Part[
            ReplaceAll[
            "tsRad", $CellContext`alphaT], $CellContext`i]; $CellContext`p1 = \
{$CellContext`a Cos[$CellContext`t], 
            
            Sin[$CellContext`t]}; $CellContext`fnVtx0[$CellContext`a, \
$CellContext`p1, $CellContext`alpha]], $CellContext`drawPoly[
         Pattern[$CellContext`polyErr$, 
          Blank[]], 
         Pattern[$CellContext`notableLoci$, 
          Blank[]], 
         OptionsPattern[]] := 
       Module[{$CellContext`poly$, $CellContext`a$, $CellContext`centroids$, \
$CellContext`centroidNames$, $CellContext`lab$, $CellContext`pnames$, \
$CellContext`meds$, $CellContext`polyTangs$, $CellContext`polyInters$, \
$CellContext`polyInterNames$, $CellContext`tri1$, $CellContext`notables$, \
$CellContext`circs$, $CellContext`incs$, $CellContext`lgt$ = 
          0.25, $CellContext`fnt$ = 14}, $CellContext`poly$ = 
          ReplaceAll["poly", $CellContext`polyErr$]; $CellContext`a$ = 
          ReplaceAll[
           "a", $CellContext`polyErr$]; $CellContext`centroids$ = \
$CellContext`getCentroids[$CellContext`poly$]; $CellContext`centroidNames$ = {
           "\!\(\*SubscriptBox[\(G\), \(vtx\)]\)", 
            "\!\(\*SubscriptBox[\(G\), \(per\)]\)", 
            "\!\(\*SubscriptBox[\(G\), \(lam\)]\)"}; $CellContext`lab$ = 
          StringJoin["error: ", 
            $CellContext`nfn[
             N[
              ReplaceAll["error", $CellContext`polyErr$]], 
             3]]; $CellContext`pnames$ = 
          Take[{"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K"}, 
            
            Length[$CellContext`poly$]]; $CellContext`meds$ = \
$CellContext`getMediansV[$CellContext`poly$]; $CellContext`polyTangs$ = 
          Map[$CellContext`perp[
             $CellContext`ellGrad[$CellContext`a$, 
              Part[#, 1], 
              Part[#, 2]]]& , $CellContext`poly$]; $CellContext`polyInters$ = 
          MapThread[$CellContext`interRays[#, #2, #3, #4]& , \
{$CellContext`poly$, $CellContext`polyTangs$, 
             RotateLeft[$CellContext`poly$], 
             
             RotateLeft[$CellContext`polyTangs$]}]; \
$CellContext`polyInterNames$ = If[
            OptionValue[$CellContext`drExcentral], 
            MapThread[StringJoin[#, "'", #2, "'"]& , {$CellContext`pnames$, 
              RotateLeft[$CellContext`pnames$]}], {}]; If[
           OptionValue[$CellContext`drCircs], 
           
           Module[{$CellContext`sides$, $CellContext`tri$, \
$CellContext`cir$}, $CellContext`circs$ = Table[$CellContext`tri$ = Take[
                  RotateLeft[$CellContext`poly$, $CellContext`i$$ - 1], 
                  3]; $CellContext`cir$ = \
$CellContext`getCircumcenterTrilin[$CellContext`tri$, 
                  RotateLeft[
                   $CellContext`triLengths[$CellContext`tri$]]]; \
{$CellContext`cir$, 
                 $CellContext`magn[$CellContext`cir$ - 
                  Part[$CellContext`tri$, 1]]}, {$CellContext`i$$, 
                Length[$CellContext`poly$]}]; Null]]; If[
           OptionValue[$CellContext`drIncs], 
           
           Module[{$CellContext`sides$, $CellContext`tri$, \
$CellContext`inc$}, $CellContext`incs$ = Table[$CellContext`tri$ = Take[
                  RotateLeft[$CellContext`poly$, $CellContext`i$$ - 1], 
                  3]; $CellContext`inc$ = \
$CellContext`getIncenterTrilin[$CellContext`tri$, 
                  RotateLeft[
                   $CellContext`triLengths[$CellContext`tri$]]]; \
{$CellContext`inc$, 
                 $CellContext`closestDist[$CellContext`inc$, 
                  Part[$CellContext`tri$, 1], 
                  Part[$CellContext`tri$, 2]]}, {$CellContext`i$$, 
                Length[$CellContext`poly$]}]; Null]]; If[
           Or[
            OptionValue[$CellContext`drNotables], 
            OptionValue[$CellContext`drSubtri]], 
           
           Module[{$CellContext`normals$}, $CellContext`tri1$ = 
             Part[$CellContext`poly$, 
               OptionValue[$CellContext`vtx]]; $CellContext`normals$ = 
             Apply[$CellContext`gettriBisectors, $CellContext`tri1$]; \
$CellContext`notables$ = $CellContext`getNotables[$CellContext`tri1$, \
$CellContext`normals$]; Null]]; $CellContext`gr = Graphics[{
             PointSize[Large], 
             Point[$CellContext`poly$], 
             FaceForm[None], {
              EdgeForm[{Black, Thick}], 
              FaceForm[Gray], 
              Opacity[0.1], 
              Polygon[$CellContext`poly$], Black, 
              Point[$CellContext`poly$]}, {Black, 
              Arrowheads[Medium], 
              MapThread[$CellContext`drawArrow[#, 
                $CellContext`norm[
                 $CellContext`perpNeg[#2]], $CellContext`lgt$]& , \
{$CellContext`poly$, $CellContext`polyTangs$}]}, 
             If[
              OptionValue[$CellContext`drCentroids], {Black, 
               MapThread[{
                 Point[#], 
                 If[
                  OptionValue[$CellContext`drCentroidLabels], 
                  Text[
                   Style[#2, 14], #, {
                   0, -1.5}], {}]}& , {$CellContext`centroids$, \
$CellContext`centroidNames$}]}, {}], 
             If[
              OptionValue[$CellContext`drExcentral], {
               EdgeForm[
                Darker[Green]], 
               Polygon[$CellContext`polyInters$], 
               Darker[Green], 
               Point[$CellContext`polyInters$], 
               MapThread[Text[
                 
                 Style[#, $CellContext`fnt$], #2, {-1.25, -1.25}]& , \
{$CellContext`polyInterNames$, $CellContext`polyInters$}]}, {}], {Black, 
              MapThread[Text[
                Style[#, $CellContext`fnt$], 
                $CellContext`ray[#2, 
                 $CellContext`norm[
                  $CellContext`perp[#3]], $CellContext`lgt$/
                 2]]& , {$CellContext`pnames$, $CellContext`poly$, \
$CellContext`polyTangs$}]}, 
             If[
              OptionValue[$CellContext`drMedians], {{Dashed, Blue, 
                Map[Line[{#, {0, 0}}]& , $CellContext`polyInters$]}, {Blue, 
                Point[$CellContext`meds$], 
                Point[{0, 0}]}}, {}], 
             If[
              OptionValue[$CellContext`drCircs], {Red, {Dashed, 
                Map[Circle[
                  Part[#, 1], 
                  Part[#, 2]]& , $CellContext`circs$]}, 
               Point[
                Map[First, $CellContext`circs$]], 
               Circle[
                Part[$CellContext`circs$, 1, 1], 0.05]}, {}], 
             If[
              OptionValue[$CellContext`drIncs], {
               Darker[Green], Dashed, 
               Map[Circle[
                 Part[#, 1], 
                 Part[#, 2]]& , $CellContext`incs$], 
               Point[
                Map[First, $CellContext`incs$]]}, {}], 
             If[
              OptionValue[$CellContext`drNotables], {
               Apply[List, 
                $CellContext`drawSomeNotables[$CellContext`notables$, 
                 First[$CellContext`notableLoci$]]], 
               EdgeForm[None], 
               FaceForm[Red], 
               Opacity[0.1], 
               Polygon[$CellContext`tri1$]}, {}], 
             If[
              OptionValue[$CellContext`drSubtri], {
               EdgeForm[None], 
               FaceForm[Red], 
               Opacity[0.2], 
               Polygon[$CellContext`tri1$]}, {}]}]; Show[{
            $CellContext`plotEll[$CellContext`a$], $CellContext`gr, 
            If[
             OptionValue[$CellContext`drLoci], 
             $CellContext`Second[$CellContext`notableLoci$], {}]}, 
           If[
            OptionValue[$CellContext`drError], 
            PlotLabel -> $CellContext`lab$, {}], PlotRange -> If[
             OptionValue[$CellContext`plotAll], All, {{-2, 2}, {-1.5, 1.5}}], 
           Frame -> True, FrameStyle -> Medium, AxesStyle -> 
           Directive[{Dotted, Gray}]]], 
       Options[$CellContext`drawPoly] = {$CellContext`drNotables -> 
         False, $CellContext`drSubtri -> False, $CellContext`drLoci -> 
         False, $CellContext`drMedians -> False, $CellContext`drExcentral -> 
         False, $CellContext`drCentroids -> 
         False, $CellContext`drCentroidLabels -> False, $CellContext`drError -> 
         False, $CellContext`drCircs -> False, $CellContext`drIncs -> 
         False, $CellContext`vtx -> {1, 2, 3}, $CellContext`plotAll -> 
         False}, $CellContext`getCentroids[
         Pattern[$CellContext`vtx, 
          Blank[]]] := {
         Mean[$CellContext`vtx], 
         $CellContext`PerimeterCentroid[$CellContext`vtx], 
         RegionCentroid[
          Polygon[$CellContext`vtx]]}, $CellContext`PerimeterCentroid[
         Pattern[$CellContext`vtx$, 
          Blank[]]] := 
       Module[{$CellContext`sides$, $CellContext`meds$, $CellContext`per$, \
$CellContext`perCentroid$}, $CellContext`sides$ = \
$CellContext`triLengths[$CellContext`vtx$]; $CellContext`meds$ = 
          Apply[$CellContext`getMediansV, $CellContext`vtx$]; \
$CellContext`per$ = Total[$CellContext`sides$]; $CellContext`perCentroid$ = 
          Sum[Part[$CellContext`meds$, $CellContext`i$$] 
             Part[$CellContext`sides$, $CellContext`i$$], {$CellContext`i$$, 
              
              Length[$CellContext`vtx$]}]/$CellContext`per$; \
$CellContext`perCentroid$], $CellContext`triLengths[
         Pattern[$CellContext`vs, 
          Blank[]]] := Map[$CellContext`magn, 
         $CellContext`triSides[$CellContext`vs]], $CellContext`magn[
         Pattern[$CellContext`v, 
          Blank[]]] := Sqrt[
         $CellContext`magn2[$CellContext`v]], $CellContext`magn2[
         Pattern[$CellContext`v, 
          Blank[]]] := 
       Dot[$CellContext`v, $CellContext`v], $CellContext`triSides[
         Pattern[$CellContext`vs, 
          Blank[]]] := MapThread[# - #2& , {$CellContext`vs, 
          RotateLeft[$CellContext`vs]}], $CellContext`getMediansV[
         Pattern[$CellContext`vs, 
          Blank[]]] := 
       0.5 ($CellContext`vs + RotateLeft[$CellContext`vs]), $CellContext`nfn[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := ToString[
         NumberForm[$CellContext`v, {$CellContext`n + 
           2, $CellContext`n}]], $CellContext`perp[{
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           
           Blank[]]}] := {-$CellContext`y, $CellContext`x}, \
$CellContext`ellGrad[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          
          Blank[]]] := -{$CellContext`x, $CellContext`y $CellContext`a^2}, \
$CellContext`interRays[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`n2, 
          Blank[]]] := 
       Module[{$CellContext`m, $CellContext`b, $CellContext`sols}, \
$CellContext`m = Transpose[{$CellContext`n1, $CellContext`n2}]; If[
           $CellContext`negl[
            
            Det[$CellContext`m]], $CellContext`p1, $CellContext`b = \
$CellContext`p2 - $CellContext`p1; $CellContext`sols = 
            LinearSolve[$CellContext`m, $CellContext`b]; \
$CellContext`ray[$CellContext`p1, $CellContext`n1, 
             Part[$CellContext`sols, 1]]]], $CellContext`negl[
         Pattern[$CellContext`v, 
          Blank[]]] := Abs[$CellContext`v] < 10^(-9), $CellContext`ray[
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`phat, 
          Blank[]], 
         Pattern[$CellContext`d, 
          
          Blank[]]] := $CellContext`p0 + $CellContext`phat $CellContext`d, \
$CellContext`getCircumcenterTrilin[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := 
       Module[{$CellContext`a2 = $CellContext`a $CellContext`a, \
$CellContext`b2 = $CellContext`b $CellContext`b, $CellContext`c2 = \
$CellContext`c $CellContext`c}, 
         $CellContext`trilinearToCartesian[$CellContext`orbit, \
{$CellContext`a, $CellContext`b, $CellContext`c}, {$CellContext`a \
($CellContext`b2 + $CellContext`c2 - $CellContext`a2), $CellContext`b \
($CellContext`c2 + $CellContext`a2 - $CellContext`b2), $CellContext`c \
($CellContext`a2 + $CellContext`b2 - $CellContext`c2)}]], \
$CellContext`trilinearToCartesian[{
          Pattern[$CellContext`A, 
           Blank[]], 
          Pattern[$CellContext`B, 
           Blank[]], 
          Pattern[C, 
           Blank[]]}, {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]], 
          Pattern[$CellContext`z, 
           Blank[]]}] := 
       Module[{$CellContext`denom}, $CellContext`denom = 
          Dot[{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`x, $CellContext`y, $CellContext`z}]; ($CellContext`a \
$CellContext`x $CellContext`A + $CellContext`b $CellContext`y $CellContext`B + \
$CellContext`c $CellContext`z 
            C)/$CellContext`denom], $CellContext`getIncenterTrilin[
         Pattern[$CellContext`orbit, 
          Blank[]], 
         Pattern[$CellContext`sides, 
          
          Blank[]]] := $CellContext`trilinearToCartesian[$CellContext`orbit, \
$CellContext`sides, {1, 1, 1}], $CellContext`closestDist[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`l1, 
          Blank[]], 
         Pattern[$CellContext`l2, 
          
          Blank[]]] := $CellContext`magn[$CellContext`p - \
$CellContext`closestPerp[$CellContext`p, $CellContext`l1, $CellContext`l2]], \
$CellContext`closestPerp[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`l1, 
          Blank[]], 
         Pattern[$CellContext`l2, 
          Blank[]]] := 
       Module[{$CellContext`dl = $CellContext`l2 - $CellContext`l1, \
$CellContext`s}, $CellContext`s = 
          Dot[$CellContext`p - $CellContext`l1, $CellContext`dl]/
           Dot[$CellContext`dl, $CellContext`dl]; \
$CellContext`ray[$CellContext`l1, $CellContext`dl, $CellContext`s]], \
$CellContext`gettriBisectors[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`p3, 
          Blank[]]] := 
       Module[{$CellContext`u12, $CellContext`u23, $CellContext`u31}, \
$CellContext`u12 = $CellContext`norm[$CellContext`p2 - $CellContext`p1]; \
$CellContext`u23 = $CellContext`norm[$CellContext`p3 - $CellContext`p2]; \
$CellContext`u31 = $CellContext`norm[$CellContext`p1 - $CellContext`p3]; {
           $CellContext`norm[$CellContext`u12 - $CellContext`u31], 
           $CellContext`norm[$CellContext`u23 - $CellContext`u12], 
           $CellContext`norm[$CellContext`u31 - $CellContext`u23]}], \
$CellContext`norm[
         Pattern[$CellContext`v, 
          
          Blank[]]] := $CellContext`v/$CellContext`magn[$CellContext`v], \
$CellContext`drawArrow[
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`phat, 
          Blank[]], 
         Pattern[$CellContext`l, 
          Blank[]]] := Arrow[{$CellContext`p0, 
          $CellContext`ray[$CellContext`p0, $CellContext`phat, \
$CellContext`l]}], $CellContext`perpNeg[{
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           
           Blank[]]}] := {$CellContext`y, -$CellContext`x}, \
$CellContext`plotEll[
         Pattern[$CellContext`a, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`clr, 
           Blank[]], 
          GrayLevel[0]]] := 
       ParametricPlot[{N[$CellContext`a] Cos[$CellContext`u], 
          Sin[$CellContext`u]}, {$CellContext`u, 0., 2. Pi}, 
         PlotStyle -> $CellContext`clr, PerformanceGoal -> 
         "Quality"], $CellContext`Second[
         Pattern[$CellContext`l, 
          Blank[]]] := Part[$CellContext`l, 2], $CellContext`getPentVtx0[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`alpha, 
          Blank[]]] := 
       Module[{$CellContext`p2, $CellContext`p2Neg, $CellContext`p3, \
$CellContext`p3Neg}, {$CellContext`p2, $CellContext`p2Neg} = \
$CellContext`getP2Alpha[$CellContext`a, $CellContext`p1, $CellContext`alpha]; \
$CellContext`p3 = $CellContext`getInterRefl[$CellContext`a, $CellContext`p1, \
$CellContext`p2]; $CellContext`p3Neg = \
$CellContext`getInterRefl[$CellContext`a, $CellContext`p1, \
$CellContext`p2Neg]; {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p3Neg, $CellContext`p2Neg}], $CellContext`getP2Alpha[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`alpha, 
          Blank[]]] := 
       Module[{$CellContext`norm, $CellContext`ca, $CellContext`sa, \
$CellContext`p2, $CellContext`normRot, $CellContext`normRotNeg, \
$CellContext`p2Neg}, $CellContext`ca = 
          Cos[$CellContext`alpha]; $CellContext`sa = 
          Sin[$CellContext`alpha]; $CellContext`norm = \
$CellContext`ellGrad[$CellContext`a, 
            Part[$CellContext`p1, 1], 
            Part[$CellContext`p1, 
             2]]; $CellContext`normRot = $CellContext`rot[$CellContext`norm, \
$CellContext`sa, $CellContext`ca]; $CellContext`normRotNeg = \
$CellContext`rot[$CellContext`norm, -$CellContext`sa, $CellContext`ca]; \
$CellContext`p2 = Part[
            $CellContext`ellInterRayUnprot[$CellContext`a, $CellContext`p1, \
$CellContext`normRot], 2]; $CellContext`p2Neg = Part[
            $CellContext`ellInterRayUnprot[$CellContext`a, $CellContext`p1, \
$CellContext`normRotNeg], 
            2]; {$CellContext`p2, $CellContext`p2Neg}], $CellContext`rot[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`st, 
          Blank[]], 
         Pattern[$CellContext`ct, 
          Blank[]]] := 
       Module[{$CellContext`m}, $CellContext`m = {{$CellContext`ct, \
-$CellContext`st}, {$CellContext`st, $CellContext`ct}}; 
         Dot[$CellContext`m, $CellContext`p]], $CellContext`rot[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := $CellContext`rot[$CellContext`p, 
         Sin[$CellContext`t], 
         Cos[$CellContext`t]], $CellContext`ellInterRayUnprot[
         Pattern[$CellContext`a, 
          Blank[]], {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, {
          Pattern[$CellContext`nx, 
           Blank[]], 
          Pattern[$CellContext`ny, 
           Blank[]]}] := 
       Module[{$CellContext`c2, $CellContext`c1, $CellContext`c0, \
$CellContext`ss}, $CellContext`c2 = $CellContext`nx^2 + $CellContext`a^2 \
$CellContext`ny^2; $CellContext`c1 = 
          2 ($CellContext`nx $CellContext`x + $CellContext`a^2 \
$CellContext`ny $CellContext`y); $CellContext`c0 = $CellContext`x^2 + \
$CellContext`a^2 (-1 + $CellContext`y^2); $CellContext`ss = \
$CellContext`quadRootsUnprot[$CellContext`c2, $CellContext`c1, \
$CellContext`c0]; 
         Map[$CellContext`ray[{$CellContext`x, $CellContext`y}, \
{$CellContext`nx, $CellContext`ny}, #]& , $CellContext`ss]], \
$CellContext`quadRootsUnprot[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]]] := 
       Module[{$CellContext`det = $CellContext`b^2 - 
           4 $CellContext`a $CellContext`c, $CellContext`sqrtDet}, \
$CellContext`sqrtDet = 
          Sqrt[$CellContext`det]; {-$CellContext`b - $CellContext`sqrtDet, \
-$CellContext`b + $CellContext`sqrtDet}/(
          2 $CellContext`a)], $CellContext`getInterRefl[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`pfrom, 
          Blank[]], 
         Pattern[$CellContext`pto, 
          Blank[]]] := 
       Module[{$CellContext`norm, $CellContext`theRefl, $CellContext`pnext}, \
$CellContext`norm = $CellContext`ellGrad[$CellContext`a, 
            Part[$CellContext`pto, 1], 
            
            Part[$CellContext`pto, 
             2]]; $CellContext`theRefl = $CellContext`refl[$CellContext`pfrom - \
$CellContext`pto, $CellContext`norm]; $CellContext`pnext = Part[
            $CellContext`ellInterRayUnprot[$CellContext`a, $CellContext`pto, \
$CellContext`theRefl], 2]; $CellContext`pnext], $CellContext`refl[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := 
       2 Dot[$CellContext`v, $CellContext`n] \
($CellContext`n/$CellContext`magn2[$CellContext`n]) - $CellContext`v}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.768662870922098*^9, {3.768662959642329*^9, 3.768662976001588*^9}, 
   3.7686630530588913`*^9, 3.7686631001499863`*^9, {3.7686631305777073`*^9, 
   3.7686632230363636`*^9}, {3.7686632902578354`*^9, 3.7686632935360746`*^9}, 
   3.7686704375624895`*^9, {3.7686708599255085`*^9, 3.768670875312358*^9}, 
   3.7686709125858755`*^9, {3.7686709485217705`*^9, 3.7686709943202868`*^9}, 
   3.768674419462819*^9, 3.768677171325816*^9, 3.7686809388880625`*^9, 
   3.7686812493978615`*^9, 3.768681556200059*^9, 3.768683407754942*^9, 
   3.7686844177917814`*^9, 3.7687683999421988`*^9, 3.7687703751365047`*^9, 
   3.7688555880595493`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"CloudDeploy", "[", 
   RowBox[{
    RowBox[{"plotCSgr", "[", 
     RowBox[{"pentAlphaT15", ",", "getPentVtx0"}], "]"}], ",", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.768683544255337*^9, 3.768683551800168*^9}, {
  3.7686835890405655`*^9, 3.7686836029752984`*^9}, {3.7686844537538223`*^9, 
  3.7686844556956625`*^9}, {3.768770997913848*^9, 3.768771008405817*^9}, {
  3.768855598081746*^9, 3.768855599582756*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Config Hex", "Section",
 CellChangeTimes->{{3.7686760392103615`*^9, 3.7686760495472326`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotCS", "[", 
  RowBox[{"hexAlphaT15", ",", "getHexVtx0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7686762104591117`*^9, 3.7686762202594852`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 195, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 360, 1}}, Typeset`size$$ = {
    729., {166.5, 172.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`i$35168$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$35168$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`cs$28325 = Graphics3D[{Thick, 
           PointSize[Large], 
           MapThread[{#, 
             Line[
              Part[$CellContext`coss$28325, #2]], 
             Point[
              Part[
               Part[$CellContext`coss$28325, #2], $CellContext`i$$]]}& , {
             Take[$CellContext`clrs$28325, $CellContext`n$28325], 
             Range[$CellContext`n$28325]}]}, SphericalRegion -> True, Axes -> 
          True, AxesLabel -> Map[Style[#, {Black, 14}]& , {"c1", "c2", "c3"}],
           ImageSize -> Medium]; $CellContext`poly$28325 = Show[
          $CellContext`showOnePoly[{"a" -> 1.5, "tsDeg" -> CompressedData["
1:eJwV0wV3EAQUBeAxumPAqDFGx4iNZgNGd23UaBaUUkqKiNKN0h0GKBh0KCgY
oDQoGHQJUkoJKCjf3jnfvT/gnheWMDh2UKqAgIB+KeFSKpDUpCEt6UhPBjKS
icxkISvZyE4OcpKLIHKTh7wEk4/8FKAghQihMKEUIYyiFKM4JShJKUpThrKU
I5zyVKAilYggkspUoSrVqE4NalKLKKKpTR3qEkM96tOAhjSiMU1oSjOa04KW
tKI1bWhLO2KJoz0d6EgnOhNPF7rSje70oCe96E0CiSSRTB/6pmxEfwbwEi8z
kEEMZghDeYVXGcZwRjCSUYzmNcbwOmN5g3G8yVuMZwITmcRkpjCVaUxnBjOZ
xWzm8DbvMJd5zGcBC1nEYpawlGUsZwUrWcVq1vAu7/E+H7CWdXzIR6xnAx/z
CZ/yGRvZxGa2sJVtbGcHO9nF53zBbvbwJV+xl318zTd8y3fs5wDf8wMHOcRh
jnCUYxznBCf5kZ84xWl+5hd+5TfOcJZznOcCF7nEZa5wlWv8znVu8Ac3ucVt
7nCXP/mLe9znAQ95xN885glP+Yd/ecZz/uN/Up4/FYGkJg1pSUd6MpCRTGQm
C1nJRnZykJNcBJGbPOQlmHzkpwAFKUQIhQmlCGEUpRjFKUFJSlGaMpSlHOGU
pwIVqUQEkVSmClWpRnVqUJNaRBFNbepQlxjqUZ8GNKQRjWlCU5rRnBa0pBWt
aUNb2hFLHO3pQEc60Zl4utCVbnSnBz3pRW8SSCSJZPrQlxeua5bx
             "], "tsRad" -> CompressedData["
1:eJwtlHlczPkfx+doappmprm+MyO2so740ZJjFdbnhfhR9ofaHD/FjyTHKmtT
7rJuuVosuRZZS64s5SpkqaytUBLtpvqFLsdM9/17/B6f9/wx85iZ7/fzfb9f
x7P7vHC/ELFIJFr4/zd6eR3zOzX+dRzjnydZQfWa2sqcRPp+hW31fudjnp5C
v99iPfdpjt4ef5f+T2cln45GDuj6gK7LYF8c8nAR78ui6/9g61hG5jNFNt2X
y0K+d/f0S39C9z9lqswo5Yj2Z3ROPrvmdL+kh9dzOq+AzQpTJitXvKBzC5nk
/rTt9Ukv6fxX7JxwMqi4poie8zebsqjaI7NPMT3vNVtb7CSdMaiEnlvCJsux
dNKUUnp+KesxKOQFwspojjLWMGvH6KE7/0vzlLM/Nl8+3zexnOZ6w45dzhec
s97QfG/Zdy+bo3Vv39Kc79g4qUuVrU0FzVvBzO7e37R2r6S5K1nNtEV3PrIq
mr+K3Y3Z3ac8qJr2qGb7Eq/+WLimhvZ5zxbkF7b9Gf+e9vrAhne0L0i//oH2
+8jUfXo8TX7+kfb8xCx9Tn/2fNUn2vcTe5WW4pcrt9DeFvbA79HWRwcttL+F
XXpXlPp7byvpYGWH1n6wpCVbSQ8r26AVu93wriVdatmSM/rA3/JqSZ86FjCi
d9yFeXWkUx1jTzwzzljqSK961jfEt/VETD3pVs90LUEDjzg2kH4NrG33spAD
xxtIxwb2tsfGw3vcG0nPRvbkxoHc7amNpGsTu/n1WZtNvk2kbxNLKLvltf5V
E+nczHZFZYetXNRMejezKGVJwvKmZtK9hc09aS38dmsL6d/CfL6UqUONreRD
Kxvy2DR27i+t5Ecrc/7PP1bOGtJGvrQxef3IiwG/t5E/7cy6fXLZZL928qmd
FTnPM/mUtpNfHezh1YhJ3ss6yLcOdnnC1g2jOjvIv04W/3d8iufuTvKxk432
KlgRrxaB+ylCysY5e43TROC+itAvpyJx3zERuL8inDAvf6h5IwL3WQwhuPX1
rv5icL/F2HFxU4siQgzuuxidjSph220xuP9ifD/m4ACZVAKeAwkqdrr6/OAj
Ac+DBEEvzs3vjJOA50KCZ90HR699KQHPhwT//DY1vtlVCp4TKVJTxl2LXCgF
z4sUHuLcnNrLUvDcSHHGd0blskYpeH5s0PWnUumHUTbgObLBnpLFzku22IDn
yQY2/eo8K7JtwHNlg1Ur1vmHCDLwfMnw4a5tWFmgDDxnMgQr9m6bc1oGnjcZ
Cr/pkvBXtQw8d7b4+udTaTMH24Lnzxb3K/sVFqy2Bc+hLYYNSbb637cFz6Mt
zq8fpXpqbweeSzu4Psp0+9dUO/B82uGAfuqYx4fswHNqB8XsV4ETSuzA8ypH
9NngqIducvDcylFnrYkbEy4Hz68ci76KvHA3RQ6eYzmKt3ZmjOyQg+fZHv7P
tpXeHGcPnmt7ZHbTtX25yx483/YYGXrEeC3fHjzn9rhypaeHRzcFeN4V6N12
0fdSsAI89wocGT9sQb/zCvD8K6CJuxdz1qoA74EDNhdNPNJruAN4HxzQ0isv
+dQGB/BeOCB8WeATl0cO4P1wQPmtN1VHNUrwnigxQxYuc5qhBO+LEtmTm1wO
/qwE740SYw5vGG54pwTvjwrXyxUBcV+owHukQv8B+8PVkSrwPqlwctVnO2LT
VOC9UsH44MxpuUwN3i81YtUD726epAbvmRqimTdfSvarwfumRkTCmLroIjV4
79SofP9Y3f65I3j/HDHbM6Dv6sWO4D10RN4PxWMbrziC99ERE7JDZ0c0O4L3
UoPi2JWpK1011E8NunikTRzmraGeauBfIH5RH6qhvmqwe834+ddiNdRbDbJc
Yy3LL2uovxpIM3LXe+RpqMcafLXEoPzUoKE+a7FSMzP+kpOWeq3Fb8nHei8d
paV+a1Hz77Kr/eZpqedauIncRldt1lLftZj7y5Kcs+e01HstjvokzQrN1lL/
tSj4WFfRy6IlDuigPeAVWW7QEQ908B2+XprgqSMu6LDl9f29cwN1xAcd7m2y
c3aN0REndGjpO+l8cYKOeKHD0Ny9nscydcQNHcIjnj+cVa0jfuiQ2MXJ38lR
TxzRo/zO7JLCQXriiR4u8xOWHpymJ67oMdO+oiVgtZ74osf+S/23GY7riTN6
5Ph/J+Sl64k3esibk0/FvdETd/QYe7xlwBR7A/HHgHVjWZra3UAcMuBGxUaf
7CkG4pEB1l1ZL2IjDMQlA9wHq0J8DhmITwaEFk61ylMNxCkDTq37KTrztYF4
ZcBfnxcpt0gF4pYAY5bLYW83gfglYOrS+W5SX4E4JiBWd+5aephAPBOQcf39
6JgfBeKaAFHQoNxRKQLxTcAISVRg+0uBOCdgxa+3K2+3C8Q7I5ImiaJWdzcS
94yosnjbeI0zEv+M6Hlwe1zjQiNx0Ig5I3OcU3YaiYdGxJfqLkQkGYmLRuRv
me41ON9IfDRC3f9ohqXRSJw0YeLTEv+kribipQkbI3uVhjETcdOEO10Xh7kH
m4ifJjTdu9RavcVEHDVh0ILabYmJJuKpCUsdPI2LckzEVRN+TVqb4GY1EV/N
KAtIH/hWMBNnzejWKrtz2stMvDVj+gkf3+AgM3HXjLhxewq7bzATf834syov
pOS0mThshu1ec+3xLDPx2AwMDYoJqjETl81Y8+qkqpumC/4HDy/69Q==
             "], "alphas" -> CompressedData["
1:eJztlP9P1HUcx8/iSwpugekCImowL1LZSnIJ455a4IgTK74UOFaEMLURmCEn
roJdeilQh4hDRcWuhC4gx/mt0LqMafPADI2Jym4NEJH5+dzn/TaRzWN1vzzX
v9AP98vns88+n8/7/Xo/vzyeLSrPKpml0+k2+C5P5hkD13cqcD0R/XZjl4Jd
+ddOh3crWDPvj/LRUwpuWOpOeH9WYNmo9GZfVJC0Tz/75qCCtY3mDPOYgovf
XXUvu6/g8IHMO6PBKnIrDQc2P6VCmbpqcr2owuhoaBjIUPGLe8FIabGK1lXz
dtZUq1gUUBuktahIWf1n7eEfVTxn64gvH1LhGl+zIG1aRV15yNCjER6Unhk0
WZM82HIlzN5f4MFt7ezdI9UePCjL0d+zeXBk95t2+wUPamzG412THpw3WKoq
gjU4ddkBX0doyBswHRtapOGScc7vIQYNpvMfZCa+oeFGy8LA14o0pCQ53K9W
aNg3mGWNsmjIeFDW1teswXGqZE+mXUPvwdSplh4Nv115eqK7z/d/wZfTtcMa
chLi9bGKBv26ieHKGQ3Nu5tumecKTKfmbkyNFkiajBn/YbHAkr0D8e5kgVsr
glY7MgQOzS3+dmm+QKst6nrheoHUvR3dL28R+KdzYnmPWUBzGe1jVoGX8nYU
nT4osH9drucFu0CPrt2bfVIgOEB5K/qcQMLNn8a/6BdwznR0Hb0m8NHKvN7i
Ed+6hjNZfXcFIv+yNV+fEqhOfG/YqpMIbrGb1NkS7R/ud90Pl6j8+I6hLUqi
KictTRcn8emqC9kBiyVC9dYxx1KJ+U5LRWiyxNamBHPYKxLFYk/9r+kSM0vy
w595XeLxdwcbns+VSOtM/2xkrYTp+9ii9EKJ5Ztuf1VQIpFyb+uJmPclGrYd
C2wsk9iUOOA9vlliYVzbwx2VEiv657/z2DaJ2O2Xq5I/kZjV7j0UUyPhdT8M
P2mWmDMaF+ndLhEZ1qT8bZF4pHDG2brTN98yy1nvLgnnuaNBoXUSn5tDei75
7gWllydX1ksoVRHfbKj/75nv+T3/53pcn/txf87D+Tgv5+d5eD6el+enHtSH
elE/6kl9qTf1px/0h37RP/pJf+k3/WcemA/mhflhnpgv5o35Yx6ZT+aV+WWe
mW/mnflnH9gP9oX9YZ/YL/aN/WMf2U/2lf1ln9lv9p39Jw/IB/KC/CBPyBfy
hvwhj8gn8or8Is/IN/KO/CMPyUfykvwkT8lX8pb8JY/9fPbz2c9nP5/9fP5/
8vlfkebvPQ==
             "], 
            "mins" -> {{
              1.3585166021366315`*^-18, {$CellContext`alpha -> 
                0.9272952178387213}}, {
              3.414020410049461*^-20, {$CellContext`alpha -> 
                0.9274379445493193}}, {
              1.3085879316166886`*^-19, {$CellContext`alpha -> 
                0.9278653708122856}}, {
              1.996973792492225*^-19, {$CellContext`alpha -> 
                0.9285752471774715}}, {
              2.138033619383917*^-19, {$CellContext`alpha -> 
                0.9295638586301849}}, {
              1.847656188058788*^-19, {$CellContext`alpha -> 
                0.9308260752398361}}, {
              1.3585985980373282`*^-19, {$CellContext`alpha -> 
                0.9323554209520417}}, {
              8.68457479501902*^-20, {$CellContext`alpha -> 
                0.9341441588663415}}, {
              4.853849192597922*^-20, {$CellContext`alpha -> 
                0.9361833908163472}}, {
              2.3601669836707394`*^-20, {$CellContext`alpha -> 
                0.9384631687833751}}, {
              9.832982761185002*^-21, {$CellContext`alpha -> 
                0.9409726154878607}}, {
              5.657978538533599*^-15, {$CellContext`alpha -> 
                0.9437000599279749}}, {
              2.7254824385264297`*^-15, {$CellContext`alpha -> 
                0.9466331313647712}}, {
              1.0713210831498656`*^-15, {$CellContext`alpha -> 
                0.9497589507872917}}, {
              3.1293240963474616`*^-16, {$CellContext`alpha -> 
                0.9530642183037407}}, {
              5.473833608487006*^-17, {$CellContext`alpha -> 
                0.9565353515355403}}, {
              9.128415783988434*^-19, {$CellContext`alpha -> 
                0.9601586066731965}}, {
              5.287727048315845*^-21, {$CellContext`alpha -> 
                0.9639201940418092}}, {
              3.0449918331923907`*^-18, {$CellContext`alpha -> 
                0.9678063808161934}}, {
              2.2654064599268118`*^-17, {$CellContext`alpha -> 
                0.9718035907385326}}, {
              6.768116457200937*^-17, {$CellContext`alpha -> 
                0.9758984890485016}}, {
              1.3369693189701838`*^-16, {$CellContext`alpha -> 
                0.9800780584469765}}, {
              2.0930903085215074`*^-16, {$CellContext`alpha -> 
                0.9843296645917946}}, {
              5.393403766599404*^-12, {$CellContext`alpha -> 
                0.9886413353119384}}, {
              2.036087656661674*^-12, {$CellContext`alpha -> 
                0.993000822735258}}, {
              8.046328921819408*^-13, {$CellContext`alpha -> 
                0.9973972799171662}}, {
              6.279241889264698*^-13, {$CellContext`alpha -> 
                1.001820063309354}}, {
              2.41441040686189*^-15, {$CellContext`alpha -> 
                1.0062589806475868`}}, {
              4.436018777265001*^-14, {$CellContext`alpha -> 
                1.0107046941967237`}}, {
              2.824559168130716*^-12, {$CellContext`alpha -> 
                1.0151479767271099`}}, {
              1.9578102963800148`*^-12, {$CellContext`alpha -> 
                1.0195811295091894`}}, {
              1.110462576122169*^-12, {$CellContext`alpha -> 
                1.023995418663381}}, {
              4.268372760535658*^-11, {$CellContext`alpha -> 
                1.0283850382871969`}}, {
              2.623821897681483*^-14, {$CellContext`alpha -> 
                1.032741126878454}}, {
              3.748617440617671*^-21, {$CellContext`alpha -> 
                1.0370594502741874`}}, {
              9.270711077945414*^-22, {$CellContext`alpha -> 
                1.0413337476451656`}}, {
              2.7747434951117717`*^-20, {$CellContext`alpha -> 
                1.0455588931888975`}}, {
              1.2611278490322854`*^-19, {$CellContext`alpha -> 
                1.049730211944892}}, {
              3.6435704663424153`*^-19, {$CellContext`alpha -> 
                1.053843470499286}}, {
              8.4431453951885685`*^-19, {$CellContext`alpha -> 
                1.0578948526116578`}}, {
              1.7071096098231198`*^-18, {$CellContext`alpha -> 
                1.061880934639882}}, {
              3.1368614672835256`*^-18, {$CellContext`alpha -> 
                1.0657986610395704`}}, {
              2.3235936817149675`*^-22, {$CellContext`alpha -> 
                1.0696453203748302`}}, {
              3.37773991299661*^-22, {$CellContext`alpha -> 
                1.073418520855411}}, {
              4.758108789259682*^-22, {$CellContext`alpha -> 
                1.0771161683599744`}}, {
              6.506103382250098*^-22, {$CellContext`alpha -> 
                1.0807364434913833`}}, {
              8.654737515674457*^-22, {$CellContext`alpha -> 
                1.0842777803198722`}}, {
              1.120925821797167*^-21, {$CellContext`alpha -> 
                1.0877388458995154`}}, {
              1.416231554254204*^-21, {$CellContext`alpha -> 
                1.0911185207599639`}}, {
              1.7470139619959396`*^-21, {$CellContext`alpha -> 
                1.0944158804002766`}}, {
              2.106261107201416*^-21, {$CellContext`alpha -> 
                1.0976301777961304`}}, {
              2.4850103163987755`*^-21, {$CellContext`alpha -> 
                1.1007608269187703`}}, {
              2.870417792655572*^-21, {$CellContext`alpha -> 
                1.1038073872534595`}}, {
              3.2499486951679675`*^-21, {$CellContext`alpha -> 
                1.106769549296628}}, {
              3.607970282834387*^-21, {$CellContext`alpha -> 
                1.1096471210041743`}}, {
              3.930573858635457*^-21, {$CellContext`alpha -> 
                1.1124400151581528`}}, {
              4.2032014897234544`*^-21, {$CellContext`alpha -> 
                1.11514823761523}}, {
              4.415400163209721*^-21, {$CellContext`alpha -> 
                1.1177718763975377`}}, {
              4.557822095524406*^-21, {$CellContext`alpha -> 
                1.1203110915848027`}}, {
              4.623946298440047*^-21, {$CellContext`alpha -> 
                1.1227661059656442`}}, {
              4.612576534060154*^-21, {$CellContext`alpha -> 
                1.1251371964056316`}}, {
              4.5237474162207416`*^-21, {$CellContext`alpha -> 
                1.1274246858899362`}}, {
              4.363276974466547*^-21, {$CellContext`alpha -> 
                1.1296289361990632`}}, {
              4.1384530842528805`*^-21, {$CellContext`alpha -> 
                1.131750341177193}}, {
              3.8601777693195735`*^-21, {$CellContext`alpha -> 
                1.1337893205539145`}}, {
              3.540328406203491*^-21, {$CellContext`alpha -> 
                1.1357463142816466`}}, {
              3.1923158803376456`*^-21, {$CellContext`alpha -> 
                1.1376217773526518`}}, {
              2.8287838793810137`*^-21, {$CellContext`alpha -> 
                1.13941617506129}}, {
              2.4619807003729802`*^-21, {$CellContext`alpha -> 
                1.1411299786789453`}}, {
              2.1041995085517924`*^-21, {$CellContext`alpha -> 
                1.1427636615108776`}}, {
              1.7644181697625772`*^-21, {$CellContext`alpha -> 
                1.144317695306085}}, {
              1.4504933402465788`*^-21, {$CellContext`alpha -> 
                1.1457925469930537`}}, {
              1.1678456862559078`*^-21, {$CellContext`alpha -> 
                1.1471886757160672`}}, {
              9.196939470497668*^-22, {$CellContext`alpha -> 
                1.1485065301484647`}}, {
              2.547552196727878*^-16, {$CellContext`alpha -> 
                1.149746544301719}}, {
              2.2191757185358835`*^-16, {$CellContext`alpha -> 
                1.1509091424661186`}}, {
              1.8982849294168065`*^-16, {$CellContext`alpha -> 
                1.1519947263801988`}}, {
              1.591899299748405*^-16, {$CellContext`alpha -> 
                1.153003680770123}}, {
              1.305961780475445*^-16, {$CellContext`alpha -> 
                1.1539363698996197`}}, {
              1.0451996429053309`*^-16, {$CellContext`alpha -> 
                1.1547931361390198`}}, {
              8.130442749046114*^-17, {$CellContext`alpha -> 
                1.1555742986895516`}}, {
              6.116119800618283*^-17, {$CellContext`alpha -> 
                1.1562801524509612`}}, {
              4.4174581835469415`*^-17, {$CellContext`alpha -> 
                1.1569109670217008`}}, {
              3.031113813622687*^-17, {$CellContext`alpha -> 
                1.1574669858220568`}}, {
              1.943332722868347*^-17, {$CellContext`alpha -> 
                1.1579484253316594`}}, {
              1.1316483447009812`*^-17, {$CellContext`alpha -> 
                1.1583554744338476`}}, {
              5.668190340280574*^-18, {$CellContext`alpha -> 
                1.1586882938603393`}}, {
              2.14854956112541*^-18, {$CellContext`alpha -> 
                1.1589470157306179`}}, {
              3.9044445196971277`*^-19, {$CellContext`alpha -> 
                1.1591317431813495`}}, {
              6.039234782597402*^-17, {$CellContext`alpha -> 
                1.1592425510669022`}}, {
              2.841659133314621*^-18, {$CellContext`alpha -> 
                1.1592794809472438`}}, {
              6.039234782597402*^-17, {$CellContext`alpha -> 
                1.1592425510669022`}}, {
              3.9044445196971277`*^-19, {$CellContext`alpha -> 
                1.1591317431813495`}}, {
              2.14854956112541*^-18, {$CellContext`alpha -> 
                1.1589470157306179`}}, {
              5.668190340280574*^-18, {$CellContext`alpha -> 
                1.1586882938603393`}}, {
              1.1316483447009812`*^-17, {$CellContext`alpha -> 
                1.1583554744338476`}}, {
              1.943332722868347*^-17, {$CellContext`alpha -> 
                1.1579484253316594`}}, {
              3.031113813622687*^-17, {$CellContext`alpha -> 
                1.1574669858220568`}}, {
              4.4174581835469415`*^-17, {$CellContext`alpha -> 
                1.1569109670217008`}}, {
              6.116119800618283*^-17, {$CellContext`alpha -> 
                1.1562801524509612`}}, {
              8.130442749046114*^-17, {$CellContext`alpha -> 
                1.1555742986895516`}}, {
              1.0451996429053309`*^-16, {$CellContext`alpha -> 
                1.1547931361390198`}}, {
              1.305961780475445*^-16, {$CellContext`alpha -> 
                1.1539363698996197`}}, {
              1.591899299748405*^-16, {$CellContext`alpha -> 
                1.153003680770123}}, {
              1.8982849294168065`*^-16, {$CellContext`alpha -> 
                1.1519947263801988`}}, {
              2.2191757185358835`*^-16, {$CellContext`alpha -> 
                1.1509091424661186`}}, {
              2.547552196727878*^-16, {$CellContext`alpha -> 
                1.149746544301719}}, {
              9.196939470497668*^-22, {$CellContext`alpha -> 
                1.1485065301484647`}}, {
              1.1678456862559078`*^-21, {$CellContext`alpha -> 
                1.1471886757160672`}}, {
              1.4504933402465788`*^-21, {$CellContext`alpha -> 
                1.1457925469930537`}}, {
              1.7644181697625772`*^-21, {$CellContext`alpha -> 
                1.144317695306085}}, {
              2.1041995085517924`*^-21, {$CellContext`alpha -> 
                1.1427636615108776`}}, {
              2.4619807003729802`*^-21, {$CellContext`alpha -> 
                1.1411299786789453`}}, {
              2.8287838793810137`*^-21, {$CellContext`alpha -> 
                1.13941617506129}}, {
              3.1923158803376456`*^-21, {$CellContext`alpha -> 
                1.1376217773526518`}}, {
              3.540328406203491*^-21, {$CellContext`alpha -> 
                1.1357463142816466`}}, {
              3.8601777693195735`*^-21, {$CellContext`alpha -> 
                1.1337893205539145`}}, {
              4.1384530842528805`*^-21, {$CellContext`alpha -> 
                1.131750341177193}}, {
              4.363276974466547*^-21, {$CellContext`alpha -> 
                1.1296289361990632`}}, {
              4.5237474162207416`*^-21, {$CellContext`alpha -> 
                1.1274246858899362`}}, {
              4.612576534060154*^-21, {$CellContext`alpha -> 
                1.1251371964056316`}}, {
              4.623946298440047*^-21, {$CellContext`alpha -> 
                1.1227661059656442`}}, {
              4.557822095524406*^-21, {$CellContext`alpha -> 
                1.1203110915848027`}}, {
              4.415400163209721*^-21, {$CellContext`alpha -> 
                1.1177718763975377`}}, {
              4.2032014897234544`*^-21, {$CellContext`alpha -> 
                1.11514823761523}}, {
              3.930573858635457*^-21, {$CellContext`alpha -> 
                1.1124400151581528`}}, {
              3.607970282834387*^-21, {$CellContext`alpha -> 
                1.1096471210041743`}}, {
              3.2499486951679675`*^-21, {$CellContext`alpha -> 
                1.106769549296628}}, {
              2.870417792655572*^-21, {$CellContext`alpha -> 
                1.1038073872534595`}}, {
              2.4850103163987755`*^-21, {$CellContext`alpha -> 
                1.1007608269187703`}}, {
              2.106261107201416*^-21, {$CellContext`alpha -> 
                1.0976301777961304`}}, {
              1.7470139619959396`*^-21, {$CellContext`alpha -> 
                1.0944158804002766`}}, {
              1.416231554254204*^-21, {$CellContext`alpha -> 
                1.0911185207599639`}}, {
              1.120925821797167*^-21, {$CellContext`alpha -> 
                1.0877388458995154`}}, {
              8.654737515674457*^-22, {$CellContext`alpha -> 
                1.0842777803198722`}}, {
              6.506103382250098*^-22, {$CellContext`alpha -> 
                1.0807364434913833`}}, {
              4.758108789259682*^-22, {$CellContext`alpha -> 
                1.0771161683599744`}}, {
              3.37773991299661*^-22, {$CellContext`alpha -> 
                1.073418520855411}}, {
              2.3235936817149675`*^-22, {$CellContext`alpha -> 
                1.0696453203748302`}}, {
              3.1368614672835256`*^-18, {$CellContext`alpha -> 
                1.0657986610395704`}}, {
              1.7071096098231198`*^-18, {$CellContext`alpha -> 
                1.061880934639882}}, {
              8.4431453951885685`*^-19, {$CellContext`alpha -> 
                1.0578948526116578`}}, {
              3.6435704663424153`*^-19, {$CellContext`alpha -> 
                1.053843470499286}}, {
              1.2611278490322854`*^-19, {$CellContext`alpha -> 
                1.049730211944892}}, {
              2.7747434951117717`*^-20, {$CellContext`alpha -> 
                1.0455588931888975`}}, {
              9.270711077945414*^-22, {$CellContext`alpha -> 
                1.0413337476451656`}}, {
              3.748617440617671*^-21, {$CellContext`alpha -> 
                1.0370594502741874`}}, {
              2.623821897681483*^-14, {$CellContext`alpha -> 
                1.032741126878454}}, {
              4.268372760535658*^-11, {$CellContext`alpha -> 
                1.0283850382871969`}}, {
              1.110462576122169*^-12, {$CellContext`alpha -> 
                1.023995418663381}}, {
              1.9578102963800148`*^-12, {$CellContext`alpha -> 
                1.0195811295091894`}}, {
              2.824559168130716*^-12, {$CellContext`alpha -> 
                1.0151479767271099`}}, {
              4.436018777265001*^-14, {$CellContext`alpha -> 
                1.0107046941967237`}}, {
              2.41441040686189*^-15, {$CellContext`alpha -> 
                1.0062589806475868`}}, {
              6.279241889264698*^-13, {$CellContext`alpha -> 
                1.001820063309354}}, {
              8.046328921819408*^-13, {$CellContext`alpha -> 
                0.9973972799171662}}, {
              2.036087656661674*^-12, {$CellContext`alpha -> 
                0.993000822735258}}, {
              5.393403766599404*^-12, {$CellContext`alpha -> 
                0.9886413353119384}}, {
              2.0930903085215074`*^-16, {$CellContext`alpha -> 
                0.9843296645917946}}, {
              1.3369693189701838`*^-16, {$CellContext`alpha -> 
                0.9800780584469765}}, {
              6.768116457200937*^-17, {$CellContext`alpha -> 
                0.9758984890485016}}, {
              2.2654064599268118`*^-17, {$CellContext`alpha -> 
                0.9718035907385326}}, {
              3.0449918331923907`*^-18, {$CellContext`alpha -> 
                0.9678063808161934}}, {
              5.287727048315845*^-21, {$CellContext`alpha -> 
                0.9639201940418092}}, {
              9.128415783988434*^-19, {$CellContext`alpha -> 
                0.9601586066731965}}, {
              5.473833608487006*^-17, {$CellContext`alpha -> 
                0.9565353515355403}}, {
              3.1293240963474616`*^-16, {$CellContext`alpha -> 
                0.9530642183037407}}, {
              1.0713210831498656`*^-15, {$CellContext`alpha -> 
                0.9497589507872917}}, {
              2.7254824385264297`*^-15, {$CellContext`alpha -> 
                0.9466331313647712}}, {
              5.657978538533599*^-15, {$CellContext`alpha -> 
                0.9437000599279749}}, {
              9.832982761185002*^-21, {$CellContext`alpha -> 
                0.9409726154878607}}, {
              2.3601669836707394`*^-20, {$CellContext`alpha -> 
                0.9384631687833751}}, {
              4.853849192597922*^-20, {$CellContext`alpha -> 
                0.9361833908163472}}, {
              8.68457479501902*^-20, {$CellContext`alpha -> 
                0.9341441588663415}}, {
              1.3585985980373282`*^-19, {$CellContext`alpha -> 
                0.9323554209520417}}, {
              1.847656188058788*^-19, {$CellContext`alpha -> 
                0.9308260752398361}}, {
              2.138033619383917*^-19, {$CellContext`alpha -> 
                0.9295638586301849}}, {
              1.996973792492225*^-19, {$CellContext`alpha -> 
                0.9285752471774715}}, {
              1.3085879316166886`*^-19, {$CellContext`alpha -> 
                0.9278653708122856}}, {
              3.414020410049461*^-20, {$CellContext`alpha -> 
                0.9274379445493193}}, {
              1.3585166021366315`*^-18, {$CellContext`alpha -> 
                0.9272952178387213}}, {
              3.414020410049461*^-20, {$CellContext`alpha -> 
                0.9274379445493193}}, {
              1.3085879316166886`*^-19, {$CellContext`alpha -> 
                0.9278653708122856}}, {
              1.996973792492225*^-19, {$CellContext`alpha -> 
                0.9285752471774715}}, {
              2.138033619383917*^-19, {$CellContext`alpha -> 
                0.9295638586301849}}, {
              1.847656188058788*^-19, {$CellContext`alpha -> 
                0.9308260752398361}}, {
              1.3585985980373282`*^-19, {$CellContext`alpha -> 
                0.9323554209520417}}, {
              8.68457479501902*^-20, {$CellContext`alpha -> 
                0.9341441588663415}}, {
              4.853849192597922*^-20, {$CellContext`alpha -> 
                0.9361833908163472}}, {
              2.3601669836707394`*^-20, {$CellContext`alpha -> 
                0.9384631687833751}}, {
              9.832982761185002*^-21, {$CellContext`alpha -> 
                0.9409726154878607}}, {
              5.657978538533599*^-15, {$CellContext`alpha -> 
                0.9437000599279749}}, {
              2.7254824385264297`*^-15, {$CellContext`alpha -> 
                0.9466331313647712}}, {
              1.0713210831498656`*^-15, {$CellContext`alpha -> 
                0.9497589507872917}}, {
              3.1293240963474616`*^-16, {$CellContext`alpha -> 
                0.9530642183037407}}, {
              5.473833608487006*^-17, {$CellContext`alpha -> 
                0.9565353515355403}}, {
              9.128415783988434*^-19, {$CellContext`alpha -> 
                0.9601586066731965}}, {
              5.287727048315845*^-21, {$CellContext`alpha -> 
                0.9639201940418092}}, {
              3.0449918331923907`*^-18, {$CellContext`alpha -> 
                0.9678063808161934}}, {
              2.2654064599268118`*^-17, {$CellContext`alpha -> 
                0.9718035907385326}}, {
              6.768116457200937*^-17, {$CellContext`alpha -> 
                0.9758984890485016}}, {
              1.3369693189701838`*^-16, {$CellContext`alpha -> 
                0.9800780584469765}}, {
              2.0930903085215074`*^-16, {$CellContext`alpha -> 
                0.9843296645917946}}, {
              5.393403766599404*^-12, {$CellContext`alpha -> 
                0.9886413353119384}}, {
              2.036087656661674*^-12, {$CellContext`alpha -> 
                0.993000822735258}}, {
              8.046328921819408*^-13, {$CellContext`alpha -> 
                0.9973972799171662}}, {
              6.279241889264698*^-13, {$CellContext`alpha -> 
                1.001820063309354}}, {
              2.41441040686189*^-15, {$CellContext`alpha -> 
                1.0062589806475868`}}, {
              4.436018777265001*^-14, {$CellContext`alpha -> 
                1.0107046941967237`}}, {
              2.824559168130716*^-12, {$CellContext`alpha -> 
                1.0151479767271099`}}, {
              1.9578102963800148`*^-12, {$CellContext`alpha -> 
                1.0195811295091894`}}, {
              1.110462576122169*^-12, {$CellContext`alpha -> 
                1.023995418663381}}, {
              4.268372760535658*^-11, {$CellContext`alpha -> 
                1.0283850382871969`}}, {
              2.623821897681483*^-14, {$CellContext`alpha -> 
                1.032741126878454}}, {
              3.748617440617671*^-21, {$CellContext`alpha -> 
                1.0370594502741874`}}, {
              9.270711077945414*^-22, {$CellContext`alpha -> 
                1.0413337476451656`}}, {
              2.7747434951117717`*^-20, {$CellContext`alpha -> 
                1.0455588931888975`}}, {
              1.2611278490322854`*^-19, {$CellContext`alpha -> 
                1.049730211944892}}, {
              3.6435704663424153`*^-19, {$CellContext`alpha -> 
                1.053843470499286}}, {
              8.4431453951885685`*^-19, {$CellContext`alpha -> 
                1.0578948526116578`}}, {
              1.7071096098231198`*^-18, {$CellContext`alpha -> 
                1.061880934639882}}, {
              3.1368614672835256`*^-18, {$CellContext`alpha -> 
                1.0657986610395704`}}, {
              2.3235936817149675`*^-22, {$CellContext`alpha -> 
                1.0696453203748302`}}, {
              3.37773991299661*^-22, {$CellContext`alpha -> 
                1.073418520855411}}, {
              4.758108789259682*^-22, {$CellContext`alpha -> 
                1.0771161683599744`}}, {
              6.506103382250098*^-22, {$CellContext`alpha -> 
                1.0807364434913833`}}, {
              8.654737515674457*^-22, {$CellContext`alpha -> 
                1.0842777803198722`}}, {
              1.120925821797167*^-21, {$CellContext`alpha -> 
                1.0877388458995154`}}, {
              1.416231554254204*^-21, {$CellContext`alpha -> 
                1.0911185207599639`}}, {
              1.7470139619959396`*^-21, {$CellContext`alpha -> 
                1.0944158804002766`}}, {
              2.106261107201416*^-21, {$CellContext`alpha -> 
                1.0976301777961304`}}, {
              2.4850103163987755`*^-21, {$CellContext`alpha -> 
                1.1007608269187703`}}, {
              2.870417792655572*^-21, {$CellContext`alpha -> 
                1.1038073872534595`}}, {
              3.2499486951679675`*^-21, {$CellContext`alpha -> 
                1.106769549296628}}, {
              3.607970282834387*^-21, {$CellContext`alpha -> 
                1.1096471210041743`}}, {
              3.930573858635457*^-21, {$CellContext`alpha -> 
                1.1124400151581528`}}, {
              4.2032014897234544`*^-21, {$CellContext`alpha -> 
                1.11514823761523}}, {
              4.415400163209721*^-21, {$CellContext`alpha -> 
                1.1177718763975377`}}, {
              4.557822095524406*^-21, {$CellContext`alpha -> 
                1.1203110915848027`}}, {
              4.623946298440047*^-21, {$CellContext`alpha -> 
                1.1227661059656442`}}, {
              4.612576534060154*^-21, {$CellContext`alpha -> 
                1.1251371964056316`}}, {
              4.5237474162207416`*^-21, {$CellContext`alpha -> 
                1.1274246858899362`}}, {
              4.363276974466547*^-21, {$CellContext`alpha -> 
                1.1296289361990632`}}, {
              4.1384530842528805`*^-21, {$CellContext`alpha -> 
                1.131750341177193}}, {
              3.8601777693195735`*^-21, {$CellContext`alpha -> 
                1.1337893205539145`}}, {
              3.540328406203491*^-21, {$CellContext`alpha -> 
                1.1357463142816466`}}, {
              3.1923158803376456`*^-21, {$CellContext`alpha -> 
                1.1376217773526518`}}, {
              2.8287838793810137`*^-21, {$CellContext`alpha -> 
                1.13941617506129}}, {
              2.4619807003729802`*^-21, {$CellContext`alpha -> 
                1.1411299786789453`}}, {
              2.1041995085517924`*^-21, {$CellContext`alpha -> 
                1.1427636615108776`}}, {
              1.7644181697625772`*^-21, {$CellContext`alpha -> 
                1.144317695306085}}, {
              1.4504933402465788`*^-21, {$CellContext`alpha -> 
                1.1457925469930537`}}, {
              1.1678456862559078`*^-21, {$CellContext`alpha -> 
                1.1471886757160672`}}, {
              9.196939470497668*^-22, {$CellContext`alpha -> 
                1.1485065301484647`}}, {
              2.547552196727878*^-16, {$CellContext`alpha -> 
                1.149746544301719}}, {
              2.2191757185358835`*^-16, {$CellContext`alpha -> 
                1.1509091424661186`}}, {
              1.8982849294168065`*^-16, {$CellContext`alpha -> 
                1.1519947263801988`}}, {
              1.591899299748405*^-16, {$CellContext`alpha -> 
                1.153003680770123}}, {
              1.305961780475445*^-16, {$CellContext`alpha -> 
                1.1539363698996197`}}, {
              1.0451996429053309`*^-16, {$CellContext`alpha -> 
                1.1547931361390198`}}, {
              8.130442749046114*^-17, {$CellContext`alpha -> 
                1.1555742986895516`}}, {
              6.116119800618283*^-17, {$CellContext`alpha -> 
                1.1562801524509612`}}, {
              4.4174581835469415`*^-17, {$CellContext`alpha -> 
                1.1569109670217008`}}, {
              3.031113813622687*^-17, {$CellContext`alpha -> 
                1.1574669858220568`}}, {
              1.943332722868347*^-17, {$CellContext`alpha -> 
                1.1579484253316594`}}, {
              1.1316483447009812`*^-17, {$CellContext`alpha -> 
                1.1583554744338476`}}, {
              5.668190340280574*^-18, {$CellContext`alpha -> 
                1.1586882938603393`}}, {
              2.14854956112541*^-18, {$CellContext`alpha -> 
                1.1589470157306179`}}, {
              3.9044445196971277`*^-19, {$CellContext`alpha -> 
                1.1591317431813495`}}, {
              6.039234782597402*^-17, {$CellContext`alpha -> 
                1.1592425510669022`}}, {
              2.841659133314621*^-18, {$CellContext`alpha -> 
                1.1592794809472438`}}, {
              6.039234782597402*^-17, {$CellContext`alpha -> 
                1.1592425510669022`}}, {
              3.9044445196971277`*^-19, {$CellContext`alpha -> 
                1.1591317431813495`}}, {
              2.14854956112541*^-18, {$CellContext`alpha -> 
                1.1589470157306179`}}, {
              5.668190340280574*^-18, {$CellContext`alpha -> 
                1.1586882938603393`}}, {
              1.1316483447009812`*^-17, {$CellContext`alpha -> 
                1.1583554744338476`}}, {
              1.943332722868347*^-17, {$CellContext`alpha -> 
                1.1579484253316594`}}, {
              3.031113813622687*^-17, {$CellContext`alpha -> 
                1.1574669858220568`}}, {
              4.4174581835469415`*^-17, {$CellContext`alpha -> 
                1.1569109670217008`}}, {
              6.116119800618283*^-17, {$CellContext`alpha -> 
                1.1562801524509612`}}, {
              8.130442749046114*^-17, {$CellContext`alpha -> 
                1.1555742986895516`}}, {
              1.0451996429053309`*^-16, {$CellContext`alpha -> 
                1.1547931361390198`}}, {
              1.305961780475445*^-16, {$CellContext`alpha -> 
                1.1539363698996197`}}, {
              1.591899299748405*^-16, {$CellContext`alpha -> 
                1.153003680770123}}, {
              1.8982849294168065`*^-16, {$CellContext`alpha -> 
                1.1519947263801988`}}, {
              2.2191757185358835`*^-16, {$CellContext`alpha -> 
                1.1509091424661186`}}, {
              2.547552196727878*^-16, {$CellContext`alpha -> 
                1.149746544301719}}, {
              9.196939470497668*^-22, {$CellContext`alpha -> 
                1.1485065301484647`}}, {
              1.1678456862559078`*^-21, {$CellContext`alpha -> 
                1.1471886757160672`}}, {
              1.4504933402465788`*^-21, {$CellContext`alpha -> 
                1.1457925469930537`}}, {
              1.7644181697625772`*^-21, {$CellContext`alpha -> 
                1.144317695306085}}, {
              2.1041995085517924`*^-21, {$CellContext`alpha -> 
                1.1427636615108776`}}, {
              2.4619807003729802`*^-21, {$CellContext`alpha -> 
                1.1411299786789453`}}, {
              2.8287838793810137`*^-21, {$CellContext`alpha -> 
                1.13941617506129}}, {
              3.1923158803376456`*^-21, {$CellContext`alpha -> 
                1.1376217773526518`}}, {
              3.540328406203491*^-21, {$CellContext`alpha -> 
                1.1357463142816466`}}, {
              3.8601777693195735`*^-21, {$CellContext`alpha -> 
                1.1337893205539145`}}, {
              4.1384530842528805`*^-21, {$CellContext`alpha -> 
                1.131750341177193}}, {
              4.363276974466547*^-21, {$CellContext`alpha -> 
                1.1296289361990632`}}, {
              4.5237474162207416`*^-21, {$CellContext`alpha -> 
                1.1274246858899362`}}, {
              4.612576534060154*^-21, {$CellContext`alpha -> 
                1.1251371964056316`}}, {
              4.623946298440047*^-21, {$CellContext`alpha -> 
                1.1227661059656442`}}, {
              4.557822095524406*^-21, {$CellContext`alpha -> 
                1.1203110915848027`}}, {
              4.415400163209721*^-21, {$CellContext`alpha -> 
                1.1177718763975377`}}, {
              4.2032014897234544`*^-21, {$CellContext`alpha -> 
                1.11514823761523}}, {
              3.930573858635457*^-21, {$CellContext`alpha -> 
                1.1124400151581528`}}, {
              3.607970282834387*^-21, {$CellContext`alpha -> 
                1.1096471210041743`}}, {
              3.2499486951679675`*^-21, {$CellContext`alpha -> 
                1.106769549296628}}, {
              2.870417792655572*^-21, {$CellContext`alpha -> 
                1.1038073872534595`}}, {
              2.4850103163987755`*^-21, {$CellContext`alpha -> 
                1.1007608269187703`}}, {
              2.106261107201416*^-21, {$CellContext`alpha -> 
                1.0976301777961304`}}, {
              1.7470139619959396`*^-21, {$CellContext`alpha -> 
                1.0944158804002766`}}, {
              1.416231554254204*^-21, {$CellContext`alpha -> 
                1.0911185207599639`}}, {
              1.120925821797167*^-21, {$CellContext`alpha -> 
                1.0877388458995154`}}, {
              8.654737515674457*^-22, {$CellContext`alpha -> 
                1.0842777803198722`}}, {
              6.506103382250098*^-22, {$CellContext`alpha -> 
                1.0807364434913833`}}, {
              4.758108789259682*^-22, {$CellContext`alpha -> 
                1.0771161683599744`}}, {
              3.37773991299661*^-22, {$CellContext`alpha -> 
                1.073418520855411}}, {
              2.3235936817149675`*^-22, {$CellContext`alpha -> 
                1.0696453203748302`}}, {
              3.1368614672835256`*^-18, {$CellContext`alpha -> 
                1.0657986610395704`}}, {
              1.7071096098231198`*^-18, {$CellContext`alpha -> 
                1.061880934639882}}, {
              8.4431453951885685`*^-19, {$CellContext`alpha -> 
                1.0578948526116578`}}, {
              3.6435704663424153`*^-19, {$CellContext`alpha -> 
                1.053843470499286}}, {
              1.2611278490322854`*^-19, {$CellContext`alpha -> 
                1.049730211944892}}, {
              2.7747434951117717`*^-20, {$CellContext`alpha -> 
                1.0455588931888975`}}, {
              9.270711077945414*^-22, {$CellContext`alpha -> 
                1.0413337476451656`}}, {
              3.748617440617671*^-21, {$CellContext`alpha -> 
                1.0370594502741874`}}, {
              2.623821897681483*^-14, {$CellContext`alpha -> 
                1.032741126878454}}, {
              4.268372760535658*^-11, {$CellContext`alpha -> 
                1.0283850382871969`}}, {
              1.110462576122169*^-12, {$CellContext`alpha -> 
                1.023995418663381}}, {
              1.9578102963800148`*^-12, {$CellContext`alpha -> 
                1.0195811295091894`}}, {
              2.824559168130716*^-12, {$CellContext`alpha -> 
                1.0151479767271099`}}, {
              4.436018777265001*^-14, {$CellContext`alpha -> 
                1.0107046941967237`}}, {
              2.41441040686189*^-15, {$CellContext`alpha -> 
                1.0062589806475868`}}, {
              6.279241889264698*^-13, {$CellContext`alpha -> 
                1.001820063309354}}, {
              8.046328921819408*^-13, {$CellContext`alpha -> 
                0.9973972799171662}}, {
              2.036087656661674*^-12, {$CellContext`alpha -> 
                0.993000822735258}}, {
              5.393403766599404*^-12, {$CellContext`alpha -> 
                0.9886413353119384}}, {
              2.0930903085215074`*^-16, {$CellContext`alpha -> 
                0.9843296645917946}}, {
              1.3369693189701838`*^-16, {$CellContext`alpha -> 
                0.9800780584469765}}, {
              6.768116457200937*^-17, {$CellContext`alpha -> 
                0.9758984890485016}}, {
              2.2654064599268118`*^-17, {$CellContext`alpha -> 
                0.9718035907385326}}, {
              3.0449918331923907`*^-18, {$CellContext`alpha -> 
                0.9678063808161934}}, {
              5.287727048315845*^-21, {$CellContext`alpha -> 
                0.9639201940418092}}, {
              9.128415783988434*^-19, {$CellContext`alpha -> 
                0.9601586066731965}}, {
              5.473833608487006*^-17, {$CellContext`alpha -> 
                0.9565353515355403}}, {
              3.1293240963474616`*^-16, {$CellContext`alpha -> 
                0.9530642183037407}}, {
              1.0713210831498656`*^-15, {$CellContext`alpha -> 
                0.9497589507872917}}, {
              2.7254824385264297`*^-15, {$CellContext`alpha -> 
                0.9466331313647712}}, {
              5.657978538533599*^-15, {$CellContext`alpha -> 
                0.9437000599279749}}, {
              9.832982761185002*^-21, {$CellContext`alpha -> 
                0.9409726154878607}}, {
              2.3601669836707394`*^-20, {$CellContext`alpha -> 
                0.9384631687833751}}, {
              4.853849192597922*^-20, {$CellContext`alpha -> 
                0.9361833908163472}}, {
              8.68457479501902*^-20, {$CellContext`alpha -> 
                0.9341441588663415}}, {
              1.3585985980373282`*^-19, {$CellContext`alpha -> 
                0.9323554209520417}}, {
              1.847656188058788*^-19, {$CellContext`alpha -> 
                0.9308260752398361}}, {
              2.138033619383917*^-19, {$CellContext`alpha -> 
                0.9295638586301849}}, {
              1.996973792492225*^-19, {$CellContext`alpha -> 
                0.9285752471774715}}, {
              1.3085879316166886`*^-19, {$CellContext`alpha -> 
                0.9278653708122856}}, {
              3.414020410049461*^-20, {$CellContext`alpha -> 
                0.9274379445493193}}}}, $CellContext`i$$, {}, \
$CellContext`getHexVtx0, 
           Function[$CellContext`x, 0], $CellContext`drSubhex -> 
           True, $CellContext`plotAll -> 
           False, $CellContext`vtx -> {1, 2, 3}], ImageSize -> Medium]; 
       Grid[{{$CellContext`poly$28325, $CellContext`cs$28325}}]), 
      "Specifications" :> {{$CellContext`i$$, 1, 360, 1, Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{780., {214., 220.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({
      Attributes[$CellContext`cs$28325] = {Temporary}, 
       Attributes[$CellContext`coss$28325] = {
        Temporary}, $CellContext`coss$28325 = CompressedData["
1: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
IHzDAvmGMeEbCcg3fAnfSEa+oUz4hhj5xjHkG404rwORb9gSvrEK+YYn8o2Z
uA9MQ76hj3wjCPeH68g3tiHf4PuGCfKNjy/lfCMa95MI5BuayDcOEr7xMUHO
N4YSvmGNfKMC96Uk5BveyDf4fvXdWM43NhO+8QH5RgryDb6/NSLfaPoJ37BE
vrEd98NuyDf2Er6xCPmGPeEbfyHf6IF84w7uq87IN3IJ39iKfMOB8I3WyDeG
Id/oifuzCfINQL5xBPftZuQbrZBvPP0J3+D/XqmIfEMF+YYD7v/+yDe2EL4h
Qr7RHfmGEvYLb+QbanVyvvEc+0gZ8o2uyDfssL+0XivnG7HIN2qw7yQi3+iC
fIP3o1TkGw2Eb1xFvmGGfOMm9q8ryDeWI99YgX1tLfINI+QbY7DfPUe+UYF8
g/dBD+Qb55FvKCiEs/7YC/lGHfIN/u/pR5BvJCDf6I/9tB/hG7zPOiPfGIh8
Qxn7byzyjTzkG1cI33iAfIP363jCN7pjH299Vc43viHf+Af7+3nkGy3IN0YS
vrEB+YY/8oGZyDeWEr6xBPlGM+EbB37CNyqQb2xEvkH9jVmem38XMvU3tjzo
yzL1N4baPU8XMvU3/rljyTL1N5T7BrBM/Q21OA+Wqb+h8kPqLmTqb3jtfztc
yNTfeNfGiGXqb3g2tFQLmfobafv6sUz9DWVpR3chU3/jTK3FUiFTfyO6+Lii
kKm/MdfMaIqQqb8hKn71TsjU30gxuM0y5RvfDWJZpv5G+MzrJ4VM/Y2DLf6v
hUz9DbXTVj2ETP2NLkltxEKmfMOtRHWfkKm/sbt2pWeLLFO+Mbdc7WmdLFN/
426P6vX+skz9jd7rF3jYyDL1N7S3ls0SMvU3VtuauQqZ+huX4k+0tZRl6m9U
Db8boS/LlG8cmFf56rssU39j80SDx+tkmfKN6/Y23ZfLMvU39tpfYZn6Gw7e
fVmm/sbBhs0sU3/jYltnlqm/oeiyhmXqb+TnT2WZ8o3l4U4sU3/DP3IWy5Rv
LLguz9TfOKGximXqb5hrOrJM+YaPzniWKd+Y4FzBMvU39sd1ZZn6Gw+Calim
fEOcepRl6m+UlzawTP0N3doMlqm/ceBiDsvU38i5vphl6m8oXqxkmfobPULL
Wab+Rv9nq1im/obk4DCWqb9hkHiEZepvTP6azTL1N77MeMAy9Te6Ht3PMvU3
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
7m9sIXyD+xvPCd/g/oYI+cb/AX9klkc=
        "], 
       Attributes[$CellContext`clrs$28325] = {
        Temporary}, $CellContext`clrs$28325 = {
         RGBColor[1, 0, 0], 
         RGBColor[0, 2/3, 0], 
         RGBColor[0, 0, 1], 
         RGBColor[1, 0, 1], 
         RGBColor[0, 1, 1]}, 
       Attributes[$CellContext`n$28325] = {Temporary}, $CellContext`n$28325 = 
       2, Attributes[$CellContext`poly$28325] = {
        Temporary}, $CellContext`showOnePoly[
         Pattern[$CellContext`alphaT, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`notableLoci, 
          Blank[]], 
         Pattern[$CellContext`fnVtx0, 
          Blank[]], 
         Pattern[$CellContext`fnErrorP, 
          Blank[]], 
         Pattern[$CellContext`opts, 
          OptionsPattern[]]] := 
       Module[{$CellContext`polyErr}, $CellContext`polyErr = \
$CellContext`polyError[$CellContext`alphaT, $CellContext`i, \
$CellContext`fnVtx0, $CellContext`fnErrorP]; \
$CellContext`drawPoly[$CellContext`polyErr, $CellContext`notableLoci, 
           FilterRules[{$CellContext`opts}, 
            Options[$CellContext`drawPoly]]]], $CellContext`polyError[
         Pattern[$CellContext`alphaT, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`fnVtx0, 
          Blank[]], 
         Pattern[$CellContext`fnErrorP, 
          Blank[]]] := 
       Module[{$CellContext`a, $CellContext`alpha, $CellContext`poly, \
$CellContext`err}, $CellContext`a = 
          ReplaceAll["a", $CellContext`alphaT]; $CellContext`alpha = Part[
            ReplaceAll[
            "alphas", $CellContext`alphaT], $CellContext`i]; \
$CellContext`poly = $CellContext`polyVtx[$CellContext`alphaT, $CellContext`i, \
$CellContext`fnVtx0]; $CellContext`err = $CellContext`fnErrorP[$CellContext`a, 
            Part[$CellContext`poly, 1], $CellContext`alpha]; {
          "a" -> $CellContext`a, "poly" -> $CellContext`poly, 
           "error" -> $CellContext`err}], $CellContext`polyVtx[
         Pattern[$CellContext`alphaT, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`fnVtx0, 
          Blank[]]] := 
       Module[{$CellContext`a, $CellContext`p1, $CellContext`t, \
$CellContext`alpha}, $CellContext`a = 
          ReplaceAll["a", $CellContext`alphaT]; $CellContext`alpha = Part[
            ReplaceAll[
            "alphas", $CellContext`alphaT], $CellContext`i]; $CellContext`t = 
          Part[
            ReplaceAll[
            "tsRad", $CellContext`alphaT], $CellContext`i]; $CellContext`p1 = \
{$CellContext`a Cos[$CellContext`t], 
            
            Sin[$CellContext`t]}; $CellContext`fnVtx0[$CellContext`a, \
$CellContext`p1, $CellContext`alpha]], $CellContext`drawPoly[
         Pattern[$CellContext`polyErr$, 
          Blank[]], 
         Pattern[$CellContext`notableLoci$, 
          Blank[]], 
         OptionsPattern[]] := 
       Module[{$CellContext`poly$, $CellContext`a$, $CellContext`centroids$, \
$CellContext`centroidNames$, $CellContext`lab$, $CellContext`pnames$, \
$CellContext`meds$, $CellContext`polyTangs$, $CellContext`polyInters$, \
$CellContext`polyInterNames$, $CellContext`tri1$, $CellContext`notables$, \
$CellContext`circs$, $CellContext`incs$, $CellContext`lgt$ = 
          0.25, $CellContext`fnt$ = 14}, $CellContext`poly$ = 
          ReplaceAll["poly", $CellContext`polyErr$]; $CellContext`a$ = 
          ReplaceAll[
           "a", $CellContext`polyErr$]; $CellContext`centroids$ = \
$CellContext`getCentroids[$CellContext`poly$]; $CellContext`centroidNames$ = {
           "\!\(\*SubscriptBox[\(G\), \(vtx\)]\)", 
            "\!\(\*SubscriptBox[\(G\), \(per\)]\)", 
            "\!\(\*SubscriptBox[\(G\), \(lam\)]\)"}; $CellContext`lab$ = 
          StringJoin["error: ", 
            $CellContext`nfn[
             N[
              ReplaceAll["error", $CellContext`polyErr$]], 
             3]]; $CellContext`pnames$ = 
          Take[{"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K"}, 
            
            Length[$CellContext`poly$]]; $CellContext`meds$ = \
$CellContext`getMediansV[$CellContext`poly$]; $CellContext`polyTangs$ = 
          Map[$CellContext`perp[
             $CellContext`ellGrad[$CellContext`a$, 
              Part[#, 1], 
              Part[#, 2]]]& , $CellContext`poly$]; $CellContext`polyInters$ = 
          MapThread[$CellContext`interRays[#, #2, #3, #4]& , \
{$CellContext`poly$, $CellContext`polyTangs$, 
             RotateLeft[$CellContext`poly$], 
             
             RotateLeft[$CellContext`polyTangs$]}]; \
$CellContext`polyInterNames$ = If[
            OptionValue[$CellContext`drExcentral], 
            MapThread[StringJoin[#, "'", #2, "'"]& , {$CellContext`pnames$, 
              RotateLeft[$CellContext`pnames$]}], {}]; If[
           OptionValue[$CellContext`drCircs], 
           
           Module[{$CellContext`sides$, $CellContext`tri$, \
$CellContext`cir$}, $CellContext`circs$ = Table[$CellContext`tri$ = Take[
                  RotateLeft[$CellContext`poly$, FE`i$$26 - 1], 
                  3]; $CellContext`cir$ = \
$CellContext`getCircumcenterTrilin[$CellContext`tri$, 
                  RotateLeft[
                   $CellContext`triLengths[$CellContext`tri$]]]; \
{$CellContext`cir$, 
                 $CellContext`magn[$CellContext`cir$ - 
                  Part[$CellContext`tri$, 1]]}, {FE`i$$26, 
                Length[$CellContext`poly$]}]; Null]]; If[
           OptionValue[$CellContext`drIncs], 
           
           Module[{$CellContext`sides$, $CellContext`tri$, \
$CellContext`inc$}, $CellContext`incs$ = Table[$CellContext`tri$ = Take[
                  RotateLeft[$CellContext`poly$, FE`i$$26 - 1], 
                  3]; $CellContext`inc$ = \
$CellContext`getIncenterTrilin[$CellContext`tri$, 
                  RotateLeft[
                   $CellContext`triLengths[$CellContext`tri$]]]; \
{$CellContext`inc$, 
                 $CellContext`closestDist[$CellContext`inc$, 
                  Part[$CellContext`tri$, 1], 
                  Part[$CellContext`tri$, 2]]}, {FE`i$$26, 
                Length[$CellContext`poly$]}]; Null]]; If[
           Or[
            OptionValue[$CellContext`drNotables], 
            OptionValue[$CellContext`drSubtri]], 
           
           Module[{$CellContext`normals$}, $CellContext`tri1$ = 
             Part[$CellContext`poly$, 
               OptionValue[$CellContext`vtx]]; $CellContext`normals$ = 
             Apply[$CellContext`gettriBisectors, $CellContext`tri1$]; \
$CellContext`notables$ = $CellContext`getNotables[$CellContext`tri1$, \
$CellContext`normals$]; Null]]; $CellContext`gr = Graphics[{
             PointSize[Large], 
             Point[$CellContext`poly$], 
             FaceForm[None], {
              EdgeForm[{Black, Thick}], 
              FaceForm[Gray], 
              Opacity[0.1], 
              Polygon[$CellContext`poly$], Black, 
              Point[$CellContext`poly$]}, {Black, 
              Arrowheads[Medium], 
              MapThread[$CellContext`drawArrow[#, 
                $CellContext`norm[
                 $CellContext`perpNeg[#2]], $CellContext`lgt$]& , \
{$CellContext`poly$, $CellContext`polyTangs$}]}, 
             If[
              OptionValue[$CellContext`drCentroids], {Black, 
               MapThread[{
                 Point[#], 
                 If[
                  OptionValue[$CellContext`drCentroidLabels], 
                  Text[
                   Style[#2, 14], #, {
                   0, -1.5}], {}]}& , {$CellContext`centroids$, \
$CellContext`centroidNames$}]}, {}], 
             If[
              OptionValue[$CellContext`drExcentral], {
               EdgeForm[
                Darker[Green]], 
               Polygon[$CellContext`polyInters$], 
               Darker[Green], 
               Point[$CellContext`polyInters$], 
               MapThread[Text[
                 
                 Style[#, $CellContext`fnt$], #2, {-1.25, -1.25}]& , \
{$CellContext`polyInterNames$, $CellContext`polyInters$}]}, {}], {Black, 
              MapThread[Text[
                Style[#, $CellContext`fnt$], 
                $CellContext`ray[#2, 
                 $CellContext`norm[
                  $CellContext`perp[#3]], $CellContext`lgt$/
                 2]]& , {$CellContext`pnames$, $CellContext`poly$, \
$CellContext`polyTangs$}]}, 
             If[
              OptionValue[$CellContext`drMedians], {{Dashed, Blue, 
                Map[Line[{#, {0, 0}}]& , $CellContext`polyInters$]}, {Blue, 
                Point[$CellContext`meds$], 
                Point[{0, 0}]}}, {}], 
             If[
              OptionValue[$CellContext`drCircs], {Red, {Dashed, 
                Map[Circle[
                  Part[#, 1], 
                  Part[#, 2]]& , $CellContext`circs$]}, 
               Point[
                Map[First, $CellContext`circs$]], 
               Circle[
                Part[$CellContext`circs$, 1, 1], 0.05]}, {}], 
             If[
              OptionValue[$CellContext`drIncs], {
               Darker[Green], Dashed, 
               Map[Circle[
                 Part[#, 1], 
                 Part[#, 2]]& , $CellContext`incs$], 
               Point[
                Map[First, $CellContext`incs$]]}, {}], 
             If[
              OptionValue[$CellContext`drNotables], {
               Apply[List, 
                $CellContext`drawSomeNotables[$CellContext`notables$, 
                 First[$CellContext`notableLoci$]]], 
               EdgeForm[None], 
               FaceForm[Red], 
               Opacity[0.1], 
               Polygon[$CellContext`tri1$]}, {}], 
             If[
              OptionValue[$CellContext`drSubtri], {
               EdgeForm[None], 
               FaceForm[Red], 
               Opacity[0.2], 
               Polygon[$CellContext`tri1$]}, {}]}]; Show[{
            $CellContext`plotEll[$CellContext`a$], $CellContext`gr, 
            If[
             OptionValue[$CellContext`drLoci], 
             $CellContext`Second[$CellContext`notableLoci$], {}]}, 
           If[
            OptionValue[$CellContext`drError], 
            PlotLabel -> $CellContext`lab$, {}], PlotRange -> If[
             OptionValue[$CellContext`plotAll], All, {{-2, 2}, {-1.5, 1.5}}], 
           Frame -> True, FrameStyle -> Medium, AxesStyle -> 
           Directive[{Dotted, Gray}]]], 
       Options[$CellContext`drawPoly] = {$CellContext`drNotables -> 
         False, $CellContext`drSubtri -> False, $CellContext`drLoci -> 
         False, $CellContext`drMedians -> False, $CellContext`drExcentral -> 
         False, $CellContext`drCentroids -> 
         False, $CellContext`drCentroidLabels -> False, $CellContext`drError -> 
         False, $CellContext`drCircs -> False, $CellContext`drIncs -> 
         False, $CellContext`vtx -> {1, 2, 3}, $CellContext`plotAll -> False},
        Attributes[$CellContext`polyErr$] = {Temporary}, 
       Attributes[$CellContext`notableLoci$] = {Temporary}, 
       Attributes[$CellContext`poly$] = {Temporary}, 
       Attributes[$CellContext`a$] = {Temporary}, 
       Attributes[$CellContext`centroids$] = {Temporary}, 
       Attributes[$CellContext`centroidNames$] = {Temporary}, 
       Attributes[$CellContext`lab$] = {Temporary}, 
       Attributes[$CellContext`pnames$] = {Temporary}, 
       Attributes[$CellContext`meds$] = {Temporary}, 
       Attributes[$CellContext`polyTangs$] = {Temporary}, 
       Attributes[$CellContext`polyInters$] = {Temporary}, 
       Attributes[$CellContext`polyInterNames$] = {Temporary}, 
       Attributes[$CellContext`tri1$] = {Temporary}, 
       Attributes[$CellContext`notables$] = {Temporary}, 
       Attributes[$CellContext`circs$] = {Temporary}, 
       Attributes[$CellContext`incs$] = {Temporary}, 
       Attributes[$CellContext`lgt$] = {Temporary}, 
       Attributes[$CellContext`fnt$] = {Temporary}, $CellContext`getCentroids[
         Pattern[$CellContext`vtx, 
          Blank[]]] := {
         Mean[$CellContext`vtx], 
         $CellContext`PerimeterCentroid[$CellContext`vtx], 
         RegionCentroid[
          Polygon[$CellContext`vtx]]}, $CellContext`PerimeterCentroid[
         Pattern[$CellContext`vtx$, 
          Blank[]]] := 
       Module[{$CellContext`sides$, $CellContext`meds$, $CellContext`per$, \
$CellContext`perCentroid$}, $CellContext`sides$ = \
$CellContext`triLengths[$CellContext`vtx$]; $CellContext`meds$ = 
          Apply[$CellContext`getMediansV, $CellContext`vtx$]; \
$CellContext`per$ = Total[$CellContext`sides$]; $CellContext`perCentroid$ = 
          Sum[Part[$CellContext`meds$, FE`i$$26] 
             Part[$CellContext`sides$, FE`i$$26], {FE`i$$26, 
              
              Length[$CellContext`vtx$]}]/$CellContext`per$; \
$CellContext`perCentroid$], Attributes[$CellContext`vtx$] = {Temporary}, 
       Attributes[$CellContext`sides$] = {Temporary}, 
       Attributes[$CellContext`per$] = {Temporary}, 
       Attributes[$CellContext`perCentroid$] = {
        Temporary}, $CellContext`triLengths[
         Pattern[$CellContext`vs, 
          Blank[]]] := Map[$CellContext`magn, 
         $CellContext`triSides[$CellContext`vs]], $CellContext`magn[
         Pattern[$CellContext`v, 
          Blank[]]] := Sqrt[
         $CellContext`magn2[$CellContext`v]], $CellContext`magn2[
         Pattern[$CellContext`v, 
          Blank[]]] := 
       Dot[$CellContext`v, $CellContext`v], $CellContext`triSides[
         Pattern[$CellContext`vs, 
          Blank[]]] := MapThread[# - #2& , {$CellContext`vs, 
          RotateLeft[$CellContext`vs]}], $CellContext`getMediansV[
         Pattern[$CellContext`vs, 
          Blank[]]] := 0.5 ($CellContext`vs + RotateLeft[$CellContext`vs]), 
       FE`i$$26 = 1, $CellContext`nfn[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := ToString[
         NumberForm[$CellContext`v, {$CellContext`n + 
           2, $CellContext`n}]], $CellContext`perp[{
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           
           Blank[]]}] := {-$CellContext`y, $CellContext`x}, \
$CellContext`ellGrad[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          
          Blank[]]] := -{$CellContext`x, $CellContext`y $CellContext`a^2}, \
$CellContext`interRays[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`n2, 
          Blank[]]] := 
       Module[{$CellContext`m, $CellContext`b, $CellContext`sols}, \
$CellContext`m = Transpose[{$CellContext`n1, $CellContext`n2}]; If[
           $CellContext`negl[
            
            Det[$CellContext`m]], $CellContext`p1, $CellContext`b = \
$CellContext`p2 - $CellContext`p1; $CellContext`sols = 
            LinearSolve[$CellContext`m, $CellContext`b]; \
$CellContext`ray[$CellContext`p1, $CellContext`n1, 
             Part[$CellContext`sols, 1]]]], $CellContext`negl[
         Pattern[$CellContext`v, 
          Blank[]]] := Abs[$CellContext`v] < 10^(-9), $CellContext`ray[
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`phat, 
          Blank[]], 
         Pattern[$CellContext`d, 
          Blank[]]] := $CellContext`p0 + $CellContext`phat $CellContext`d, 
       Attributes[$CellContext`tri$] = {Temporary}, 
       Attributes[$CellContext`cir$] = {
        Temporary}, $CellContext`getCircumcenterTrilin[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := 
       Module[{$CellContext`a2 = $CellContext`a $CellContext`a, \
$CellContext`b2 = $CellContext`b $CellContext`b, $CellContext`c2 = \
$CellContext`c $CellContext`c}, 
         $CellContext`trilinearToCartesian[$CellContext`orbit, \
{$CellContext`a, $CellContext`b, $CellContext`c}, {$CellContext`a \
($CellContext`b2 + $CellContext`c2 - $CellContext`a2), $CellContext`b \
($CellContext`c2 + $CellContext`a2 - $CellContext`b2), $CellContext`c \
($CellContext`a2 + $CellContext`b2 - $CellContext`c2)}]], \
$CellContext`trilinearToCartesian[{
          Pattern[$CellContext`A, 
           Blank[]], 
          Pattern[$CellContext`B, 
           Blank[]], 
          Pattern[C, 
           Blank[]]}, {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]], 
          Pattern[$CellContext`z, 
           Blank[]]}] := 
       Module[{$CellContext`denom}, $CellContext`denom = 
          Dot[{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`x, $CellContext`y, $CellContext`z}]; ($CellContext`a \
$CellContext`x $CellContext`A + $CellContext`b $CellContext`y $CellContext`B + \
$CellContext`c $CellContext`z C)/$CellContext`denom], 
       Attributes[$CellContext`inc$] = {
        Temporary}, $CellContext`getIncenterTrilin[
         Pattern[$CellContext`orbit, 
          Blank[]], 
         Pattern[$CellContext`sides, 
          
          Blank[]]] := $CellContext`trilinearToCartesian[$CellContext`orbit, \
$CellContext`sides, {1, 1, 1}], $CellContext`closestDist[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`l1, 
          Blank[]], 
         Pattern[$CellContext`l2, 
          
          Blank[]]] := $CellContext`magn[$CellContext`p - \
$CellContext`closestPerp[$CellContext`p, $CellContext`l1, $CellContext`l2]], \
$CellContext`closestPerp[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`l1, 
          Blank[]], 
         Pattern[$CellContext`l2, 
          Blank[]]] := 
       Module[{$CellContext`dl = $CellContext`l2 - $CellContext`l1, \
$CellContext`s}, $CellContext`s = 
          Dot[$CellContext`p - $CellContext`l1, $CellContext`dl]/
           Dot[$CellContext`dl, $CellContext`dl]; \
$CellContext`ray[$CellContext`l1, $CellContext`dl, $CellContext`s]], 
       Attributes[$CellContext`normals$] = {
        Temporary}, $CellContext`gettriBisectors[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`p3, 
          Blank[]]] := 
       Module[{$CellContext`u12, $CellContext`u23, $CellContext`u31}, \
$CellContext`u12 = $CellContext`norm[$CellContext`p2 - $CellContext`p1]; \
$CellContext`u23 = $CellContext`norm[$CellContext`p3 - $CellContext`p2]; \
$CellContext`u31 = $CellContext`norm[$CellContext`p1 - $CellContext`p3]; {
           $CellContext`norm[$CellContext`u12 - $CellContext`u31], 
           $CellContext`norm[$CellContext`u23 - $CellContext`u12], 
           $CellContext`norm[$CellContext`u31 - $CellContext`u23]}], \
$CellContext`norm[
         Pattern[$CellContext`v, 
          
          Blank[]]] := $CellContext`v/$CellContext`magn[$CellContext`v], \
$CellContext`gr = Graphics[{
          PointSize[Large], 
          
          Point[{{1.5, 0.}, {
           0.5979478304998469, -0.9171110176346703}, {-1.3260005019843664`, \
-0.4674862653893144}, {-1.3260005019843664`, 0.4674862653893144}, {
           0.5979478304998469, 0.9171110176346703}}], 
          FaceForm[None], {
           EdgeForm[{
             GrayLevel[0], 
             Thickness[Large]}], 
           FaceForm[
            GrayLevel[0.5]], 
           Opacity[0.1], 
           
           Polygon[{{1.5, 0.}, {
            0.5979478304998469, -0.9171110176346703}, {-1.3260005019843664`, \
-0.4674862653893144}, {-1.3260005019843664`, 0.4674862653893144}, {
            0.5979478304998469, 0.9171110176346703}}], 
           GrayLevel[0], 
           
           Point[{{1.5, 0.}, {
            0.5979478304998469, -0.9171110176346703}, {-1.3260005019843664`, \
-0.4674862653893144}, {-1.3260005019843664`, 0.4674862653893144}, {
            0.5979478304998469, 0.9171110176346703}}]}, {
           GrayLevel[0], 
           Arrowheads[Medium], {
            Arrow[{{1.5, 0.}, {1.25, 0.}}], 
            
            Arrow[{{0.5979478304998469, -0.9171110176346703}, {
             0.5283668584520659, -0.6769891978662745}}], 
            
            Arrow[{{-1.3260005019843664`, -0.4674862653893144}, \
{-1.1301396405275244`, -0.3121204939034955}}], 
            
            Arrow[{{-1.3260005019843664`, 
             0.4674862653893144}, {-1.1301396405275244`, 
             0.3121204939034955}}], 
            
            Arrow[{{0.5979478304998469, 0.9171110176346703}, {
             0.5283668584520659, 0.6769891978662745}}]}}, {}, {}, {
           GrayLevel[0], {
            Text[
             Style["A", 14], {1.625, 0.}], 
            Text[
             Style["B", 14], {0.6327383165237374, -1.0371719275188682`}], 
            Text[
             Style["C", 14], {-1.4239309327127874`, -0.5451691511322239}], 
            Text[
             Style["D", 14], {-1.4239309327127874`, 0.5451691511322239}], 
            Text[
             Style["E", 14], {0.6327383165237374, 
             1.0371719275188682`}]}}, {}, {}, {}, {}, {}}], \
$CellContext`drawArrow[
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`phat, 
          Blank[]], 
         Pattern[$CellContext`l, 
          Blank[]]] := Arrow[{$CellContext`p0, 
          $CellContext`ray[$CellContext`p0, $CellContext`phat, \
$CellContext`l]}], $CellContext`perpNeg[{
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           
           Blank[]]}] := {$CellContext`y, -$CellContext`x}, \
$CellContext`plotEll[
         Pattern[$CellContext`a, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`clr, 
           Blank[]], 
          GrayLevel[0]]] := 
       ParametricPlot[{N[$CellContext`a] Cos[$CellContext`u], 
          Sin[$CellContext`u]}, {$CellContext`u, 0., 2. Pi}, 
         PlotStyle -> $CellContext`clr, PerformanceGoal -> 
         "Quality"], $CellContext`Second[
         Pattern[$CellContext`l, 
          Blank[]]] := Part[$CellContext`l, 2], $CellContext`getHexVtx0[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`alpha, 
          Blank[]]] := 
       Module[{$CellContext`p2, $CellContext`p2Neg, $CellContext`p3, \
$CellContext`p4, $CellContext`p3Neg}, {$CellContext`p2, $CellContext`p2Neg} = \
$CellContext`getP2Alpha[$CellContext`a, $CellContext`p1, $CellContext`alpha]; \
$CellContext`p3 = $CellContext`getInterRefl[$CellContext`a, $CellContext`p1, \
$CellContext`p2]; $CellContext`p4 = $CellContext`getInterRefl[$CellContext`a, \
$CellContext`p2, $CellContext`p3]; $CellContext`p3Neg = \
$CellContext`getInterRefl[$CellContext`a, $CellContext`p1, \
$CellContext`p2Neg]; {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p3Neg, $CellContext`p2Neg}], \
$CellContext`getP2Alpha[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`alpha, 
          Blank[]]] := 
       Module[{$CellContext`norm, $CellContext`ca, $CellContext`sa, \
$CellContext`p2, $CellContext`normRot, $CellContext`normRotNeg, \
$CellContext`p2Neg}, $CellContext`ca = 
          Cos[$CellContext`alpha]; $CellContext`sa = 
          Sin[$CellContext`alpha]; $CellContext`norm = \
$CellContext`ellGrad[$CellContext`a, 
            Part[$CellContext`p1, 1], 
            
            Part[$CellContext`p1, 
             
             2]]; $CellContext`normRot = $CellContext`rot[$CellContext`norm, \
$CellContext`sa, $CellContext`ca]; $CellContext`normRotNeg = \
$CellContext`rot[$CellContext`norm, -$CellContext`sa, $CellContext`ca]; \
$CellContext`p2 = Part[
            $CellContext`ellInterRayUnprot[$CellContext`a, $CellContext`p1, \
$CellContext`normRot], 2]; $CellContext`p2Neg = Part[
            $CellContext`ellInterRayUnprot[$CellContext`a, $CellContext`p1, \
$CellContext`normRotNeg], 
            2]; {$CellContext`p2, $CellContext`p2Neg}], $CellContext`rot[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`st, 
          Blank[]], 
         Pattern[$CellContext`ct, 
          Blank[]]] := 
       Module[{$CellContext`m}, $CellContext`m = {{$CellContext`ct, \
-$CellContext`st}, {$CellContext`st, $CellContext`ct}}; 
         Dot[$CellContext`m, $CellContext`p]], $CellContext`rot[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := $CellContext`rot[$CellContext`p, 
         Sin[$CellContext`t], 
         Cos[$CellContext`t]], $CellContext`ellInterRayUnprot[
         Pattern[$CellContext`a, 
          Blank[]], {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, {
          Pattern[$CellContext`nx, 
           Blank[]], 
          Pattern[$CellContext`ny, 
           Blank[]]}] := 
       Module[{$CellContext`c2, $CellContext`c1, $CellContext`c0, \
$CellContext`ss}, $CellContext`c2 = $CellContext`nx^2 + $CellContext`a^2 \
$CellContext`ny^2; $CellContext`c1 = 
          2 ($CellContext`nx $CellContext`x + $CellContext`a^2 \
$CellContext`ny $CellContext`y); $CellContext`c0 = $CellContext`x^2 + \
$CellContext`a^2 (-1 + $CellContext`y^2); $CellContext`ss = \
$CellContext`quadRootsUnprot[$CellContext`c2, $CellContext`c1, \
$CellContext`c0]; 
         Map[$CellContext`ray[{$CellContext`x, $CellContext`y}, \
{$CellContext`nx, $CellContext`ny}, #]& , $CellContext`ss]], \
$CellContext`quadRootsUnprot[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]]] := 
       Module[{$CellContext`det = $CellContext`b^2 - 
           4 $CellContext`a $CellContext`c, $CellContext`sqrtDet}, \
$CellContext`sqrtDet = 
          Sqrt[$CellContext`det]; {-$CellContext`b - $CellContext`sqrtDet, \
-$CellContext`b + $CellContext`sqrtDet}/(
          2 $CellContext`a)], $CellContext`getInterRefl[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`pfrom, 
          Blank[]], 
         Pattern[$CellContext`pto, 
          Blank[]]] := 
       Module[{$CellContext`norm, $CellContext`theRefl, $CellContext`pnext}, \
$CellContext`norm = $CellContext`ellGrad[$CellContext`a, 
            Part[$CellContext`pto, 1], 
            
            Part[$CellContext`pto, 
             2]]; $CellContext`theRefl = $CellContext`refl[$CellContext`pfrom - \
$CellContext`pto, $CellContext`norm]; $CellContext`pnext = Part[
            $CellContext`ellInterRayUnprot[$CellContext`a, $CellContext`pto, \
$CellContext`theRefl], 2]; $CellContext`pnext], $CellContext`refl[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := 
       2 Dot[$CellContext`v, $CellContext`n] \
($CellContext`n/$CellContext`magn2[$CellContext`n]) - $CellContext`v}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7686762210604153`*^9, 3.768677151882728*^9, 
  3.7686781218852797`*^9, 3.7686785224021482`*^9, 3.7686812568304873`*^9, 
  3.7686815717674265`*^9, 3.768681618632347*^9, 3.7686834128117585`*^9, 
  3.7686844213552513`*^9, 3.768768400341132*^9, 3.768770375487532*^9, 
  3.7688555941143866`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"plotCSgr", "[", 
      RowBox[{"hexAlphaT15", ",", "getHexVtx0"}], "]"}], ",", 
     RowBox[{"plotCSgr", "[", 
      RowBox[{"triAlphaT15", ",", "getTriVtx0"}], "]"}]}], "}"}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"100", ",", "100", ",", "100"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.768684631373925*^9, 3.7686846525113926`*^9}, 
   3.7686846893437963`*^9, {3.7686847250387535`*^9, 3.7686848283595123`*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {PointSize[Large], Thickness[Large], 
    {RGBColor[1, 0, 0], Line3DBox[CompressedData["
1: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
AdkzzD5663aG7CHLHuFe2ob7qy9Ogeytgr+Fe4zZd9a9WWTPGcwT7j1mP770
HiB7MeSGcE8y+7Sgo4rsUflDwr3K7F/+yXlk7wZmLiF7+APu63AR4Z5euU24
t5n9vjVoKdnrPgdVyZ5fiXnAZIUwB6h/HEJyAZMf7ndKkdzg//wMyRHFmDcM
LIU5Q6RoP8kdTD45e1CYS2YV7yA5hckzF+5NJDlGqiCc5JrZmH/OZAlzj3df
LclBTF56bfmM5KS9ia/96dzUg/lKRD+W5KrwI7okZzF57NNBI5LD3lrOIbnM
GfNbT7UIyW3NbkEkxzF5r4hnTHKerbU8yX2RmA9lHDtJLoxQUiU5MR7zpPNP
L5IjN5ucJLmSyZ8ZWz1I7pQ7Lk1y6EPMqxsrDcLonJrr2nuDzq1Mvg02UNOy
FuTaaM1Evokg57ZiHpaq4VvTOVhpYbHTEUEuZvKzwcQLn+jc/PJURLWLIEcz
efujnv4GOmePPHRzf4Igd+dhPi9ZY3WAzuXaL57/Ted0S8zzIrnWJMePvBuv
Qud6B8z/+16lz6Nz/1Hv3fl0D3DDvlCis/YD3RPES9Ptbgp6w+BqYb/YvVpn
A90rBrtPHD0v6BlMH+kYpt9J95ApVqPtOgS9xBH7y+BWb9JbTj+emEn3mDbs
O8V7g0nPmZ6f0UT3nrnYj4pzxCfQvYizvecq3ZOYPpXRcI30KM3GsTp0r7qN
/StNJ5H0rrUmu0gP2459zbdH2NOcp8qQ3qaB/a5gfDTpdd+U/yE9TyRK2Ad9
1fRIDzxt8+Iy3QuZ/jgpc0cW3Ru7lDfp0D0yGvtm0pBkW7pnliR/NKR7pwL2
0ylLPGzoXgrzDfrpnhqIfdbN8YY73WOV3s5wonutGPbfa+1nSO/lpE0gPfgG
9uWHr76Snvzor2LSmznYrx8odJJefbk8m/Rspo//zLAhPfy9xrD3dC/PxP5+
ffYM0tv7C2aTHq+MfV/0YQXp+VtbVUjvD0UfMK+6QVxgS+Eq4gTF6AkbFukT
R/gy0Ya4AuMP8S5ixB2c622JQzBeQek4EafY9qOUuMUo9A159I1RLN+QZflG
GP5+I/SNxegbr1i+8QF9I/wXvrEA3+8P9I0Ilm8YoG+I9Qp9Qxo/T7Ff+MZB
9I0B9I3r+LyK0DeK0TfE8fn+RN+4j76xm+Ubfegb0/D8ZKFvzETfiP6Nb/yB
vuGOviGK59mB5RuL8Pwr/0ffuIf3Sxt9oxN9Qwfv4xb0jVb0DSW8vw7oGwno
G+1433eibyT+xjdycJ74oW+0/8Y33HFeTUffcEPfYOabD/pGLPqGKc5DXZZv
MPOzC31DE30jAeetB/qGLss3DP6jb2ji/D/xH32jGveLGvoGB30jFvfRCvSN
G+gbEbi/LrJ8wwb3XQP6hi76xkbcj5L6Qt8IR9/wwn16EX1D4je+0Yn7ej36
Ru1vfOME5oEW9I1glm8ooG+8+n/6BpNn5qNvxKNvVGD+OY2+8eg/+sYR9I1W
lm8Yom9EoG+oY36zRd/oYPlGMvpGP/oGkw/no294o29IYp4cQN84h77hi/nz
EvrGTvSNQiavsnyDybePWb6xGfPwT32hb4ihbzD5+Tj6xhv0DSZv30bfUGb5
Rhr6RtVvfGME5v9x6BshLN/IRd/go2+Mxn6Rg74xmeUbiugbsSzfOIK+oYa+
8Q77zgf0DUDf6MB+tAp9oxx9g+lTmegbC1i+IbFJ6Btt6Bs52Nd2oG/cRN/w
w34Xir6hhr5hjn2wGn1jJ8s3vNE3/NE3RrN8Ix19g+mniugbBegbM7HPJqBv
uKJvMP33PvqGLvoGH/tyPfpGDss3bFm+wcM+vgV9oxZ9g+nvk9A37qJvhGPf
l0Xf2I6+0YE+MAJ9Yw76BuMJfegbSugbjD8sRN/Yib7BeEUx+kYwyzeM0Tem
oW8sxJ83QN/IRt+Iwt+/DH1DG30jHl/PU/SNRvSNNnz9Mugb1egbzPv1Qt8w
YvlGMvqGO8s3vm0W+sZdlm9cRd9IZvmGEfpGOss3jqFvzEPfmIXnIQx9Yz/6
BuNjIheFvtHC8g199I0q9I2JLN94jL7BnOdx6BthLN+Q0hP6Rgz6BnNfetA3
2tA35uH9SkDfmIu+wXhjFvoGB32Dub8b0TeCWb4hh75RyvKNZvSNwb/+r2/c
R9+YjL7BzJ+j6BsbWb5Rjb5x4he+YcXyjZHoGy9YvqGGviGFvsF48lf0jU70
DcafU9E3TNA3GK9WQ99Y+AvfKEXfYPbFNfSNcPQNZr+Eo2/sRd9g9lEx+oY5
+sZW3F/v0TfyWb5hjr6hx/KNfPSNMJZvFKNvSLJ8g4e+kYS+0Yf7Ogp9w47l
G5vRNwLQN8wwDyxH39BA34jG/HALfSMYfYPJG/roG18Khb5xDvNJAvrGNPSN
Eyzf+JIv9I05LN+wQd9ox7xUhL4Rgr7B5KufekLf2MXyjc/oGyXoG0x+60Pf
6P+Fb1iib+zFfDgOfeMwyzfWo284sHzjb/SN8egbDzCvuqJv1LJ8Iwh9w5Hl
G0PRN+aib0zA/KyPvgHoG6cwbw+gbwxB33j2C99g/l4pir4hhb7hiPk/An1j
N8s3OOgbMugbYtgvQtA3ZHuEvvEC+0gr+sZY9I112F+GbhP6Rhr6Rhf2nQL0
jTHoG0w/KkXf+MDyjZvoG4boG3exf2Wgb3igb2zCvrYNfUMHfUMT+90L9I12
9A2mD/qjb1xB3xAROUb640T0jR70Debv6afQN/LRN+Sxn05l+QbTZ13RN2ag
b0hi/01D36hD38hg+cYT9A2mX2ezfEMG+/jQm0Lf+IG+cQf7+xX0jU/oG+os
3/BF34hAHzBD39jI8g0n9I0Blm8c/4VvtKNv+KFv/A/d8DaM
      "]], 
     Point3DBox[{-0.27999999968724937`, -0.5999999998986456, \
-0.5999999996669781}]}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], Line3DBox[CompressedData["
1:eJyd2XlUjWv7wPFdxnKOoUg6SUU4SiIlOc1JFCkhSSWFEk3EISmFTJVOpqSB
o8KJDi+pI1cDSkLtpt1oT09zFMqsdz931/Ou9XvWa3nX7y/ra7X2yt77ue/r
+lDz8HPwkuZwOFulOJwhkj9/dvZQOdRZAcqLNXR1dUWwLGjXFLoTBqx2SfdU
wMS6Mq3WD0LYnadM+sC+CdVBXyvAMmXZ0t33hTDT6VEV3aXxN30eyXPh8uLF
Z6VChXD7nh3pUFXB7zXzuOC01tQ63UgIMsrhpGcrPan43ZkLH8xVj5z4LACF
7EDSf2fO3hZ8jAtGPGULXrYAZAcoH7oVpUbMjirkwpBNX17fDhRA8MkXWnRX
qXlw3aUrIWre7d9stATQM8yQ9E2OXFfG0kp42F1c8FTMh6De/k66hwZqf+Cc
q4R3aeOveibyofL4ZNJBUuEJ0t2V0JA+z9FqFR9kqJ986FaPrw03s66C+1Ky
3akyfLjUbbOR7sMKLhOWX62CkBBNQ4cDLyGJf0GK7i8DMcv/HlMNcs/n6f/S
2QwrzAwt6P528PO793urYW3b0MtSa5uBy3/aQ7eBhs7Dqx3VML26Y8SWoiYo
17tL2tch2d/OtQaS9ir2X9Npgm96V0nfNCxNCqyugVm2TVtnJTdC7NKsZLr1
7VWfJtnVgr+N5iKTMY0Q1x/2jG6t3FXjPMpqwcmmPMMkvAEUUldOoLszNb5p
uQ0P/PNthPv76mFs6TAR3ev9gyPfP+VBZOPqW0t868FbIH+c7iL55H2fltdB
4D8Vjq1UHRzp3hLUL2kpO45Wb3kdtIbErk3yqIMVrQpFryTtft67PdyxHiau
lDqTKeRB7oROvzBJu4bOzl7Nq4edLQZqdpt5oOS3JtBR0rbRFguUXBpAP+Ca
fnZ3Lcza07KM7qI6t+zIlw3wbqrnQYXfa2HbajMvus/8WXDY1qMRVr5ue3F6
ZC1cy7k43E7SimZuF/XEjWBcHFPmmlgDHVq58bqSbjvjaPvVswmmPRyhfmJ+
DZyyb3/6TdLzhtfV7RY3QWKOlbVFRTXs+k2vYIek73rkNWzyaIadraYlJwKr
IcvZcbynpOtzbhlcbm4G1a6xckcVq+GYcybpkw2T7sisewm/HT/71byoClz2
KZMOrdzisLPiJVx5pivzOLAK4np3kXbUtx8vnMqHl9WaHKUZVZAx3J2026lV
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
sU2S79frC6SZeaz/iPnluf1imGrkR9oV57dXPI6W4mjJOTctijQz75WKLAU5
0yh4YeNPOhznw/EuHcWjDCXPsfoh0jE4T7p+25IovUJynhpPIc3Mn5m+nuVx
7pLztyaddC7OqxtrTEOzAiiIKm6xpedVZr7da6qtbx9OQdrMBZ1ekm7BeVi2
Tmy/KYYCbruuHser6T/zs+mk1P6XFyjIMlqYO1fSzLz9zthk/V3Jeaf88K+F
9pIuxPm8fNXKww03KZgw5NIUuu1wnucU2M83lZyzZn+1OtPtjPP/wafXdGrv
UyCMct+5StIeuC+UG67pPSU537k2+1YfkPTAisH9YvcKw/UekvugwtxbtlvS
zD7SPsykY6Hk78VWM+68lbQL7i8Dvt5rZSSvc8bFOYbuVtx3yvbvlS+S3AcR
zc4tdP+K+1FZ/oiJTncoCFqUPJFuZp/KbErvzZGc+1FJZc/pvoX711XD0wH1
qRT0ftZIoXsH7mv+rzwKr8dTcLo3k7Qu7nclEyJjVA9RsH/IG9KciMF90F/b
WFMriIKRpmNf083sj0o3/bILXSkwTLUyoTsS983zQxIc65ZI7o2y659sJa2K
+6nyIk+HzdoUXCtpWEN3MO6zHi7XN22Uo2Dczv71dEvj/pvedqG86K0Y1NQm
kb6O+3Lu0495UVwxnEvrIfsyF/fre6oddpk3xHCnci5pZh//lunwWidKDJb5
j8g+fhP394wZU/dPcBNDr3kD2d81cd+Xyq0+5KYrhoVjtpIOQR+wqb3urzBM
8voPdpMuQ09Yv8DkqmWVCPaWWpNm/CHGTbrwfYoIyg8XEH9gvIIy3BBtuk0E
zx/8Qno0+oYK+sYilm8ooG/sQt8Ixdc3R99QQt94yvKNv9E3DrB8YxT6xjz8
935F3xi4+399wxR94+u3Qd+Qx/dTGn3DkeUbR9A3hg4f9I0M/LxK0Td80DdG
4Of7DX3jGvrGbpZvyKJvqOH3Jxt9Ixd9I5LlG4ks3/gZfWMz+oYUfp+d0TdK
0DcW4PdfE32D+wPfuIPPlwHLNwzxedyGvhGDvjELn19n9I0vKYO+0YbP+070
Dekf+EY+nicB6BuRP/CNTXheqaNvPEDfYM43H/QNVfQNazwPf0PfmI6+wZyf
XegbXugb8XjeeqJvpLF8wxR9o+cHvjEfz/849I3gH/gGD+8XbfSNg+gbJ/A+
skLfcEPfCMP76xL6xjn0DQe875rQN/5E39iI96OMyaBvfNk46Btb8D69hL7B
/4FvdOB9vQ59I/wHvhGH84AAfSOR5Ruq6Bsr/5++wcwzc9E34tA3qnH+OYe+
kfs/+sbx7/iGGfrGLPSNOTi/OaJvRLN8IwF9owZ9g5kP56JvDEHfkMF5so/l
G/44f15G35iBvvGEmVfRNyj0DWa+vY++MRd9YyvOw99MBn3DCH2DmZ9PoW/0
o28w8/Yt9I1RLN+4+j/6xiic/+XQNzJYvlGAvqGOvjEG94t89I0HLN/QQN/Q
YfnGcfQNZ/SNTtx3etE3fNE32nE/Wo6+IUDfYPapm+gbrizfGLl50Dd46Bv5
uK/5oW80om8E4H4XwvING9wHeegbB1m+4Y2+4Yu+MYblG7roG8x+qoG+EYy+
MQ332XiWbzD77130DS76hhj35cbv+IYj+saf6Bsi3Me3oW/w0DeY/V0JfaMf
feMA7vsK6BuP0Tfa0QdGoW8Yo28wnvAGfYOzb9A3GH/QQ9+4gb7BeEXZd3zD
En3DBX1DD3/eFH3jMfpGBL6+BfpGMfpGDP4+D9A3bqFvtOLvPx59Qx99g/n3
bkHfCGH5RgL6xguWb3za+t99I+07vmGOvpHE8o1Y9I0V6BvT8fsQir5Rjr7B
+Bjn0n/3DROWb0xi+UYE+gbzfZZD37jC8g1Z40HfOIO+wTwvr9A3EtA3dPD5
ikffeI2+wXhjNvqGMfoG8/xu/I5vKH7HN/joG29YvnEXfcMXfYM5f06ib6Sx
fIOHvkF9xzdOsHzjJ/SNcpZvaKNvUOgbjCd/RN/IQ99g/DkFfaMLfYPxam30
DcXv+MZi9A3mvkhH39BD32DulwPoG3fRN5j7qAx9QxN9wxfvrx70jXaWb9ig
bySwfKMYfeMcyzfK0Df6WL4hQt/4A33jDd7XEegb2Szf2Iq+0YO+sRTngcXo
G07oG5E4P2Shb7ShbzDzhgnLN5JwPolH31BE34hj+YYa+sZMlm+I0TfacF4q
Rd9Yib7BzFffjAd9o57lG+/RN9TRN5j57Q36htl3fKMCfWM/zody6BuNLN9Y
h75hxfKNv9A3QtE37uG86o6+sZflG3vQN0pZvjEUfaMefWMizs8m6BvP0TfO
4rzdh76hiL5RxPKNsegbzP9XSqFvWKNvuOD8H4a+8YXlG1z0jTz0DWncL/ah
b9xD33iE+0gL+sZX9A0n3F+Gbh/0jSj0jS7cd0rQN9LQN5j9qAJ9YynLN26g
b2xF3/gX7l+Z6BuN6BubcV/bjr5RiL4xH/e7R+gbCegbzD4YiL7RYTLoGxxO
LNkfJ6FvWKNvMP+ffhZ94zj6hgrup5PRNy6hbzD7rDv6hgr6hgzuv1fRN35C
38hk+cZx9A1mv85B3wD0jfG4jw+9Megbeugbt3F/v4K+wbEY9I05LN8wQ98I
Qx9Yir5RwvKNDegbu1m+cQp94xHLN9rQN7joG/8GOTNh0A==
      "]], 
     Point3DBox[{-0.27999999968724937`, -0.5999999998986456, \
-0.2800000006880522}]}}, 
   {PointSize[Large], Thickness[Large], 
    {RGBColor[1, 0, 0], Line3DBox[CompressedData["
1:eJylmXtUjfn+x3dJQpnkkogpjEFTciu3fJIaMe4n45aYYnJcEoZxiXInIRlJ
QockhdLVqXi27ElCdJ2Q7pd9m6TJTBJzWmu/P7+1PGu1/NY5f7WWtcuzn+f7
eX9e79dj7r5h/iptiUSyWksi6dD2M6TI7dCCFWoyNbbL/WpLzv/9zJ7ReG7z
EjWNHhRiXe36gAz6Z5/4OS+P9IUHAUXOajIeMmCi30EpDR5dElW1oogmj2/6
R4iFmqSr+kW5WyfSvG1djx/Ke05SyeXCKm01ZYUWB9y9H06bYk08Thq/ojKD
t9OaclQUHh2h3vrLHuH32tQO3xqVU3b+MY+egSqKyzpd+qg2UqhRLsq2315B
ftTN/fy3Kko/UNYha2GCsLDH2m6OQiX1n1n27G2jkppG2G1wqv63IEnvOGtn
dRXFjj5OgaeVtMgxwNzma0FoSQ5vmqysJse84FyFlZJmbB9IV0PvCZZWI7yi
8mpoQ0F22mFBQbNHxun+2OO+oB1aOnZ8eC1N/XA8qWWagh4PqH8T3UUmBKkV
W0MW1NEy4fWq/Cw5xY9dvcDhmEywjvO8uOptHb2r7VsQ7SCnFx6vyrdflQmm
BSY9TffKaci1IZX9kuuo6X31xpKVMqHxrznRHT7KyVM5pThjUB1l60w72/3Z
fUE+zuDjsLUK0tm9p+OkgFoy0pnmXdCYIfS/cuzgD48U9Lz+wI6BDTWUfGpY
RHPhPWFs8Z4BjmZKyi+1reg2t4YiOpuu/3mPVIg/oL/Gdq2SupeVbQ6+Xk2T
ihwvSt7dEQr76xpuuqEkbe3GnjN0q8nnoall73OpwvR3N8205EoaXNT1cNKy
Klpp9kovvylZ0LU2mP6kn4pOySoeuSVUUvE+v5JYwwSh082Yixenq6i086hf
fu1USVkX5hwc2XBDGD7fuumrTSqysZte6b60ghrCHtcbel4RUurDw/48raLR
d2xSo26Wk5+JuXLP8LPC7RvGv55KUlHfjbsatbTb/j1s6ZC6qT7C5KjH33nl
qijCN9o2IqaU/GR6kYceHaQJf58YK1eoKONlRavS5RX5ufs7Hxh0gYabOz/4
/m8VKaXLXfZKSsjZx91lhH8UVS8+NFfHSE0+NXOtdGNfkPauKWPOd75FgjAz
fuRANVU294rS+eE5zQzovGdzXhINGpMbY2ytpk3Xmn0/9i4mv98qn3YOS6Ut
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
      "]], 
     Point3DBox[{0.8867595333055815, 0.23795006481866998`, 
      0.23795006481866998`}]}}},
  Axes->True,
  AxesLabel->{
    FormBox[
     StyleBox["\"c1\"", {
       GrayLevel[0], 14}, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox["\"c2\"", {
       GrayLevel[0], 14}, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox["\"c3\"", {
       GrayLevel[0], 14}, StripOnInput -> False], TraditionalForm]},
  ImageSize->Large,
  SphericalRegion->True,
  ViewPoint->{100, 100, 100},
  ViewVertical->{-0.47719300132485676`, 0.443989342175112, 
   0.7584025661830032}]], "Output",
 CellChangeTimes->{{3.768684762389228*^9, 3.7686848292461357`*^9}, 
   3.7687684005785275`*^9, 3.7688555943308105`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"CloudDeploy", "[", 
   RowBox[{"plotCSgr", "[", 
    RowBox[{"hexAlphaT15", ",", "getHexVtx0"}], "]"}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7686844922947817`*^9, 3.7686844994316626`*^9}, {
  3.768770450895276*^9, 3.7687704552546473`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Heptagon", "Section",
 CellChangeTimes->{{3.7678083142549973`*^9, 3.7678083258456955`*^9}, {
  3.7678256281491065`*^9, 3.767825630221481*^9}, {3.7681653304302464`*^9, 
  3.7681653444537373`*^9}, {3.7681736325649796`*^9, 3.7681736332545905`*^9}, {
  3.7684738145160418`*^9, 3.768473816900662*^9}, {3.7684797344151425`*^9, 
  3.768479736598308*^9}, {3.7684818374903917`*^9, 3.768481840682859*^9}, {
  3.7684843927180047`*^9, 3.7684843945760403`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "@", "getHeptVtx0"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"not", " ", "for", " ", "error", " ", "purposes"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getHeptVtx0", "[", 
    RowBox[{"a_", ",", "p1_", ",", "alpha_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "p2", ",", "p3", ",", "p4", ",", "p2Neg", ",", "p3Neg", ",", "p4Neg"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p2", ",", "p2Neg"}], "}"}], "=", 
       RowBox[{"getP2Alpha", "[", 
        RowBox[{"a", ",", "p1", ",", "alpha"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p3", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p1", ",", "p2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p4", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p2", ",", "p3"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p3Neg", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p1", ",", "p2Neg"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p4Neg", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p2Neg", ",", "p3Neg"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p4Neg", ",", "p3Neg", ",",
         "p2Neg"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7678103358793087`*^9, 3.767810405181562*^9}, {
   3.7679078722354126`*^9, 3.7679078990197716`*^9}, {3.7681653993598757`*^9, 
   3.7681654105998135`*^9}, {3.7681655000495853`*^9, 3.768165563266242*^9}, {
   3.768165605239602*^9, 3.7681656300083237`*^9}, {3.7681657334730434`*^9, 
   3.768165735143572*^9}, {3.7681671177520156`*^9, 3.768167154191574*^9}, {
   3.768167185382122*^9, 3.7681672448813505`*^9}, {3.768167294518952*^9, 
   3.768167295222047*^9}, {3.7681673936061068`*^9, 3.7681674073283978`*^9}, {
   3.7682052423499465`*^9, 3.7682052623465414`*^9}, 3.7682053819673557`*^9, {
   3.76820650635765*^9, 3.7682065469302845`*^9}, {3.7682077217475104`*^9, 
   3.7682077248990865`*^9}, {3.7682109685090237`*^9, 3.7682109698414927`*^9}, 
   3.7682168956516123`*^9, {3.7684797548984365`*^9, 3.7684797585057974`*^9}, {
   3.7684797888331733`*^9, 3.7684797902879777`*^9}, {3.768479879395035*^9, 
   3.7684798954570355`*^9}, {3.768481862572934*^9, 3.768481876155466*^9}, {
   3.768481945693869*^9, 3.768482008461872*^9}, {3.7684821110766783`*^9, 
   3.768482123877599*^9}, {3.7684821624066715`*^9, 3.76848216557463*^9}, {
   3.768482467525262*^9, 3.7684824785348415`*^9}, 3.768493141263812*^9, {
   3.768768722415994*^9, 3.768768723168003*^9}}],

Cell[CellGroupData[{

Cell["Heptagon Exit Angle Table", "Subsubsection",
 CellChangeTimes->{{3.7683906295855613`*^9, 3.7683906396147614`*^9}, {
  3.7684064097935896`*^9, 3.7684064393546286`*^9}, {3.768480211455838*^9, 
  3.7684802212317142`*^9}, {3.768481844594421*^9, 3.7684818462100897`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "heptAlphaT15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"heptAlphaT15", "=", 
   RowBox[{"calcAlphaCausticT", "[", 
    RowBox[{"False", 
     RowBox[{"(*", 
      RowBox[{"False", " ", "for", " ", "load"}], "*)"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", "0"}], "]"}], ",", 
     "\"\<data/heptAlphaCausticT_a15.m\>\"", ",", "1.5", ",", "1"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7687687432545414`*^9, 3.7687687547986507`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"loaded: \"\>", "\[InvisibleSpace]", "360", 
   "\[InvisibleSpace]", "\<\" records from\"\>", 
   "\[InvisibleSpace]", "\<\"data/heptAlphaCausticT_a15.m\"\>"}],
  SequenceForm[
  "loaded: ", 360, " records from", "data/heptAlphaCausticT_a15.m"],
  Editable->False]], "Print",
 CellChangeTimes->{3.7687687554917727`*^9, 3.7687703826274695`*^9, 
  3.7688555943796473`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotCS", "[", 
  RowBox[{"heptAlphaT15", ",", "getHeptVtx0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7686816850160294`*^9, 3.7686816876729245`*^9}, {
  3.768683152854807*^9, 3.7686831544385705`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 360, 1}}, Typeset`size$$ = {
    729., {172.5, 178.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`i$53557$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$53557$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`cs$45634 = Graphics3D[{Thick, 
           PointSize[Large], 
           MapThread[{#, 
             Line[
              Part[$CellContext`coss$45634, #2]], 
             Point[
              Part[
               Part[$CellContext`coss$45634, #2], $CellContext`i$$]]}& , {
             Take[$CellContext`clrs$45634, $CellContext`n$45634], 
             Range[$CellContext`n$45634]}]}, SphericalRegion -> True, Axes -> 
          True, AxesLabel -> Map[Style[#, {Black, 14}]& , {"c1", "c2", "c3"}],
           ImageSize -> Medium]; $CellContext`poly$45634 = Show[
          $CellContext`showOnePoly[{"a" -> 1.5, "tsDeg" -> CompressedData["
1:eJwV0wV3EAQUBeAxumPAqDFGx4iNZgNGd23UaBaUUkqKiNKN0h0GKBh0KCgY
oDQoGHQJUkoJKCjf3jnfvT/gnheWMDh2UKqAgIB+KeFSKpDUpCEt6UhPBjKS
icxkISvZyE4OcpKLIHKTh7wEk4/8FKAghQihMKEUIYyiFKM4JShJKUpThrKU
I5zyVKAilYggkspUoSrVqE4NalKLKKKpTR3qEkM96tOAhjSiMU1oSjOa04KW
tKI1bWhLO2KJoz0d6EgnOhNPF7rSje70oCe96E0CiSSRTB/6pmxEfwbwEi8z
kEEMZghDeYVXGcZwRjCSUYzmNcbwOmN5g3G8yVuMZwITmcRkpjCVaUxnBjOZ
xWzm8DbvMJd5zGcBC1nEYpawlGUsZwUrWcVq1vAu7/E+H7CWdXzIR6xnAx/z
CZ/yGRvZxGa2sJVtbGcHO9nF53zBbvbwJV+xl318zTd8y3fs5wDf8wMHOcRh
jnCUYxznBCf5kZ84xWl+5hd+5TfOcJZznOcCF7nEZa5wlWv8znVu8Ac3ucVt
7nCXP/mLe9znAQ95xN885glP+Yd/ecZz/uN/Up4/FYGkJg1pSUd6MpCRTGQm
C1nJRnZykJNcBJGbPOQlmHzkpwAFKUQIhQmlCGEUpRjFKUFJSlGaMpSlHOGU
pwIVqUQEkVSmClWpRnVqUJNaRBFNbepQlxjqUZ8GNKQRjWlCU5rRnBa0pBWt
aUNb2hFLHO3pQEc60Zl4utCVbnSnBz3pRW8SSCSJZPrQlxeua5bx
             "], "tsRad" -> CompressedData["
1:eJwtlHlczPkfx+doappmprm+MyO2so740ZJjFdbnhfhR9ofaHD/FjyTHKmtT
7rJuuVosuRZZS64s5SpkqaytUBLtpvqFLsdM9/17/B6f9/wx85iZ7/fzfb9f
x7P7vHC/ELFIJFr4/zd6eR3zOzX+dRzjnydZQfWa2sqcRPp+hW31fudjnp5C
v99iPfdpjt4ef5f+T2cln45GDuj6gK7LYF8c8nAR78ui6/9g61hG5jNFNt2X
y0K+d/f0S39C9z9lqswo5Yj2Z3ROPrvmdL+kh9dzOq+AzQpTJitXvKBzC5nk
/rTt9Ukv6fxX7JxwMqi4poie8zebsqjaI7NPMT3vNVtb7CSdMaiEnlvCJsux
dNKUUnp+KesxKOQFwspojjLWMGvH6KE7/0vzlLM/Nl8+3zexnOZ6w45dzhec
s97QfG/Zdy+bo3Vv39Kc79g4qUuVrU0FzVvBzO7e37R2r6S5K1nNtEV3PrIq
mr+K3Y3Z3ac8qJr2qGb7Eq/+WLimhvZ5zxbkF7b9Gf+e9vrAhne0L0i//oH2
+8jUfXo8TX7+kfb8xCx9Tn/2fNUn2vcTe5WW4pcrt9DeFvbA79HWRwcttL+F
XXpXlPp7byvpYGWH1n6wpCVbSQ8r26AVu93wriVdatmSM/rA3/JqSZ86FjCi
d9yFeXWkUx1jTzwzzljqSK961jfEt/VETD3pVs90LUEDjzg2kH4NrG33spAD
xxtIxwb2tsfGw3vcG0nPRvbkxoHc7amNpGsTu/n1WZtNvk2kbxNLKLvltf5V
E+nczHZFZYetXNRMejezKGVJwvKmZtK9hc09aS38dmsL6d/CfL6UqUONreRD
Kxvy2DR27i+t5Ecrc/7PP1bOGtJGvrQxef3IiwG/t5E/7cy6fXLZZL928qmd
FTnPM/mUtpNfHezh1YhJ3ss6yLcOdnnC1g2jOjvIv04W/3d8iufuTvKxk432
KlgRrxaB+ylCysY5e43TROC+itAvpyJx3zERuL8inDAvf6h5IwL3WQwhuPX1
rv5icL/F2HFxU4siQgzuuxidjSph220xuP9ifD/m4ACZVAKeAwkqdrr6/OAj
Ac+DBEEvzs3vjJOA50KCZ90HR699KQHPhwT//DY1vtlVCp4TKVJTxl2LXCgF
z4sUHuLcnNrLUvDcSHHGd0blskYpeH5s0PWnUumHUTbgObLBnpLFzku22IDn
yQY2/eo8K7JtwHNlg1Ur1vmHCDLwfMnw4a5tWFmgDDxnMgQr9m6bc1oGnjcZ
Cr/pkvBXtQw8d7b4+udTaTMH24Lnzxb3K/sVFqy2Bc+hLYYNSbb637cFz6Mt
zq8fpXpqbweeSzu4Psp0+9dUO/B82uGAfuqYx4fswHNqB8XsV4ETSuzA8ypH
9NngqIducvDcylFnrYkbEy4Hz68ci76KvHA3RQ6eYzmKt3ZmjOyQg+fZHv7P
tpXeHGcPnmt7ZHbTtX25yx483/YYGXrEeC3fHjzn9rhypaeHRzcFeN4V6N12
0fdSsAI89wocGT9sQb/zCvD8K6CJuxdz1qoA74EDNhdNPNJruAN4HxzQ0isv
+dQGB/BeOCB8WeATl0cO4P1wQPmtN1VHNUrwnigxQxYuc5qhBO+LEtmTm1wO
/qwE740SYw5vGG54pwTvjwrXyxUBcV+owHukQv8B+8PVkSrwPqlwctVnO2LT
VOC9UsH44MxpuUwN3i81YtUD726epAbvmRqimTdfSvarwfumRkTCmLroIjV4
79SofP9Y3f65I3j/HDHbM6Dv6sWO4D10RN4PxWMbrziC99ERE7JDZ0c0O4L3
UoPi2JWpK1011E8NunikTRzmraGeauBfIH5RH6qhvmqwe834+ddiNdRbDbJc
Yy3LL2uovxpIM3LXe+RpqMcafLXEoPzUoKE+a7FSMzP+kpOWeq3Fb8nHei8d
paV+a1Hz77Kr/eZpqedauIncRldt1lLftZj7y5Kcs+e01HstjvokzQrN1lL/
tSj4WFfRy6IlDuigPeAVWW7QEQ908B2+XprgqSMu6LDl9f29cwN1xAcd7m2y
c3aN0REndGjpO+l8cYKOeKHD0Ny9nscydcQNHcIjnj+cVa0jfuiQ2MXJ38lR
TxzRo/zO7JLCQXriiR4u8xOWHpymJ67oMdO+oiVgtZ74osf+S/23GY7riTN6
5Ph/J+Sl64k3esibk0/FvdETd/QYe7xlwBR7A/HHgHVjWZra3UAcMuBGxUaf
7CkG4pEB1l1ZL2IjDMQlA9wHq0J8DhmITwaEFk61ylMNxCkDTq37KTrztYF4
ZcBfnxcpt0gF4pYAY5bLYW83gfglYOrS+W5SX4E4JiBWd+5aephAPBOQcf39
6JgfBeKaAFHQoNxRKQLxTcAISVRg+0uBOCdgxa+3K2+3C8Q7I5ImiaJWdzcS
94yosnjbeI0zEv+M6Hlwe1zjQiNx0Ig5I3OcU3YaiYdGxJfqLkQkGYmLRuRv
me41ON9IfDRC3f9ohqXRSJw0YeLTEv+kribipQkbI3uVhjETcdOEO10Xh7kH
m4ifJjTdu9RavcVEHDVh0ILabYmJJuKpCUsdPI2LckzEVRN+TVqb4GY1EV/N
KAtIH/hWMBNnzejWKrtz2stMvDVj+gkf3+AgM3HXjLhxewq7bzATf834syov
pOS0mThshu1ec+3xLDPx2AwMDYoJqjETl81Y8+qkqpumC/4HDy/69Q==
             "], "alphas" -> CompressedData["
1:eJztlP9P1HUcx6/jZBjFpuESd6CYGh0cmZIiCU8GC5aMkhtfumCkmSTeIZA4
4DJngjazoQVu1oWZK+MyjYB0ah19Y23GdF0IhnYHJpGL7P15v7nLDEf3y3P9
C/1wv3ze++z9/nzer9fz9Xw+4p+rtmy8S6fTbQo+nm1wxaeUCFxreKLkZHDN
0fdYjVaBs3bnU9tLBZ7eaUj8vlyg4Mi6bsMGgamlxa0PbBJwH/VVxm8R+HWg
2BuoEzinmzzl3C7QVJWuhe8W+PSW70pyi0D42AuPzDwkMCe6aPm+owKmNff2
uU4IRPau2mM9IzDXYppo6RNYu2PcmuERqBs7vqLMJ3A6v0X/84TAovaUys9u
C3SsrrcMR2hokzdE5v0aOjfnXfAu1rDEOH7JlaLB5L9Tdihbw+OJBQ+9Z9Gg
H/xz27n1GqI+sQW8NRp2HXZeDtupoee7+/oW7tfwfr/Dm3JYw5X5v/QuP6Gh
tjPfEfO5hoqExjdGzmtIbYq71fSThqzZZyKnxzUMLfPvzw9oeDvW67IZJLo2
jgwXzZY4qO/5J2KBhMGUsXKXWaLI0zCjN03C7bAt+SJXYqA/o91RKPHw4IvH
/eskRvzp/UlVEtkJMZ1xjcFzMS+nnm+WOFXg2Zp8QEJcPvjWGqdEpr8rPO6Y
xJO/z0rr6JQoNJf+8NtZiVcm/tjt+zZ43hVhev2CxMfGhcduDklUtdUEwkcl
oi62J1y6IbHD/IHVKiXS5g13t96WaK6LrmrWK+h/1PUl3q3wV8ObYa/NUghc
b6t/d65Ch3hmm32+wop9e4u0xQqV5qmtyUkKH63+KnnRMoUoV9KYZ6WCzzQd
SEsP7juPfFOWpZB5x+ZKzQ2uvsgZF/MUpq6OLV2wVqFmTltzUqGCe4+tcLJE
4aQlSqsvVbgZNvPD0+UKedON7u71CpPlXzvszyvsfRXzrlUoDAzdMxhdqbD5
ev+owaZg/LLR1mVXKB59zBm7ReFqVm5rTrXCS3Z3tblG4e9YZ44nuFZseOfB
R2sVssdXGYtr/3vnPs/ze/6P/+d9vJ/1sD7Wy/rZD/tjv+yfelAf6kX9qCf1
pd7Un/PgfDgvzo/z5Hw5b86ffqA/6Bf6h36iv+g3+o9+pD/pV/qXfqa/6Xf6
n3lgPpgX5od5Yr6YN+aPeWQ+mVfml3lmvpl35p88IB/IC/KDPCFfyBvyhzwi
n8gr8os8I9/IO/KPPCQfyUvykzwlX8lb8pc8DvE5xOcQn0N8DvH5/8nnfwGV
0c+t
             "], "mins" -> 
            "mins"}, $CellContext`i$$, {}, $CellContext`getHeptVtx0, 
           Function[$CellContext`x, 0], $CellContext`drSubhex -> 
           True, $CellContext`plotAll -> 
           False, $CellContext`vtx -> {1, 2, 3}], ImageSize -> Medium]; 
       Grid[{{$CellContext`poly$45634, $CellContext`cs$45634}}]), 
      "Specifications" :> {{$CellContext`i$$, 1, 360, 1, Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{780., {220., 226.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({
      Attributes[$CellContext`cs$45634] = {Temporary}, 
       Attributes[$CellContext`coss$45634] = {
        Temporary}, $CellContext`coss$45634 = CompressedData["
1:eJytnXVQVmu7hw1029gFGwMMTGy2AYqNHWBgK25FLEQsNhYoKmKggoGFuW0U
FVQecSsgdgvst2O9FiIqtp51xvvHme9ew+CZc/74Zr5hHDe8rPXE9VzPZZ0J
Mwd7Fy1UqJCV/L8phQsV+u//3+mo6/Q6VVXCYcpwjVsTk+iZa/782iiJxKl7
XUNrqET5f071ufLRKNr6hziVy5WE8VTW8XP2KvGptG6lzVWjeBQYU8mzmEVU
PLw7bndrlbBTX/XyDTeKoDOPI5IrWkTw0q4rGvVViYMqn5iHw4yiaMLAxLF2
FtH4xlRDSx+VmKQvXCugtlE4Z/04UbehRXQOjYkMD1eJhCDnDv4Wg+g8b9+K
Ck4W0dBrSqlS8SqxelrW/bcnDGJNau1BzdvKX+/aPWvqM5XwfdvvRc15BjHg
rvuPxe0tYmGgjZVvLbW4/WjltPIuBjGu8eJBJTpZxKxYY1bKSLVIOrXi3hcr
g/CIbpl6S/76tR5dKjltV4uc3G9Gq5t6cV5zLuJxR4v42t06aLBWLRz7dfAZ
EqEXTbOnBDvKf395q6m30h01osjR6o/LeelFyhGvL7faWETHpseqzZinEWGa
EVZj7PXiYskrmTeaW0Sh+A0341I1YrtnzJvJL3Vi34tyfzWWf95e50f1OFJO
Kx6uqrSw/1md+NP/TfR7+fN59GHS54XttcLNeszvzkt14siIlsNbVbaIMv+k
NIn+Uyuswmpc795PJ0pcn18l6zeL2Lv4YLxps1aUcbtyOLKmTriP/xDc/LMk
JscuXOR4TSvm3vynSN9nWlFvyrcNhV9IIsCzebjLe63oPPtE2cXxWjEtY5LX
jAxJ1C8ZF/q1nk7k7NymdV+jFXccHzRekiqJv30KH+s4TCf23lzklTJGK+ZM
vuzXJU4Sl/reL5cRqhNLLnewLdVaK/rWa5d4cbcksjtvPXUqQSf0B6suqF9a
K/pvcYn7uloSvmk2O/fKP392jYOFveTPY5VGU7GMvyReO0zLXmunF8VfbSw0
KkgjHDPP7XnvJX8/qWa150C92FnNtcZUZ404eaa481U3SQx3K35Bv1QvpJxx
9pG5ahG9pPmZZQ0lcXv13y+rn9aLT++yU3LPq8XRhG2fOpSVxNGZcRa9QS/e
js/+e9NitRi04vWrz9lmsa3WbvsmlQ3i04KPWxe4q8WxiKiAtAdmUff95UL6
rgbxtfXyxL9rqEXA1tUBcXFmYR5pSnzrZxAX3d/cd3ylEhcmdb2ZvMUsbux9
MmHwHoNw7/vniPdXVaJM6KcBJeeZxeY9I3dn3zaIG19jH5TYoxKlTr+/t9LT
LJy8ql658sUgHCos+zJqqUokH7au0a+NWSQv0K9PbGAUzbr2+Sx5q8SQU711
EyuZRUDlW+0zBxtFXPL43dH9VWJzhRUZj7NN4vzBZu0r/GUUC6onbZvZQSXS
iww5ePKWSTT2su408oBRPDnS6mC/JirhVjgt88thkyjyuErZU7eNIi1tVXK9
OiqRVm7J1yshJtHUtun8CrlGsbbaQV+j/N4PfBH8V/nxJvGhdbH2821N4taw
jsf95XEi7czMpKwOJpGRuMqs72ISkXvL+16Wv/7y0rzqU6qaRGqhCY8GTDaJ
Ngmpi07WVInMs1FiRbZRrF+4slziKvm/M7je7SZ1VWLA8iTN0DSj2Dfyc7um
R02i4eL4jbZNVSK8b9m1/8YYhf/SLcHR8s+RGVJnxGT552oWWjy5gfxzTkr7
bZ91lkm4fElpni2PK3Fpb/06exrFhJrpp4PLmsWVM30u7xqvEs88m3k7NTcK
G5vIFt8bm8WeVTumjlygElZTl3kWLmEU41Z8e/VXb7MIWysNK7ZJJbx6b7Vc
1BrEq+EOhYtPNotPXadvCzmlEhXbTd/nG28Qov4eEbXULFYuHt3u8j2VmNEh
5VONjQbx8Lf1J513mIVPj0edtr1TiQm5yS63fQxint28YIv8vOS42jz+KD8/
k3z9T2yUnyeH5R/KHLktP3eF2g1M6qIWT596TZ9laxBR41zaLDebxaBiP5zS
p8njUGCrxbPey+NQa8cvc76Zhd+c853qR6nFtWFr7m6/rRdW88pPXVJJEntT
JqwIT1YL9aEVLb4c1IsnvZusPyK/B3dDUmd8lN+LZRV2eUbK70m258rlHztK
orLG96y7PG4dqjH76Xx53LIO8h/iM1AS1b/7LvYdrREt7m9odaiN/N9dF1jS
aqL83vv7DO0eoRGtOk1PbVpefn8M8ftS5fd1zLuNTS+laUTJGk0zK7zQicnO
UVUvhEgiqo5ve3VheXzafjBiVLJOpGe+dlVvlkS/cnFWVWtpxfutHt+q7NWJ
LVfnZLXeL4ldHbrs+dxRK4pvG/BbjyCdeJzsk5F0WhKNrlz/uMRLK1baDQp+
N1InXE8c3bcySRKpN3Ja7FyoFXWikho5OuvEo43/Pgy9LYnfrNNP9dymFZXa
X9n0oopOhDXKeJIij2cLNBNt5yRoxfq3rp27vtMK3/WTvvcwS+Kgz/ihVTO1
ompiiXXtHmjFtSbPFpV4Iwk7N79FDb5qRU9vQ/KdWK0YVHmhd7kvktA8S32z
43ed+KQ7VKFShFaMXi6dHGllEeUuJnlMd9WJSkPH/FXCXyvsQj+2el3GIgKr
DFu+brxOjNnZ/+tZD/nz6Ctibsnjd2vvuRGfl+vE7K11ves5a0Xt5GKbPthY
hO3Ulpn7D+jEoNRcv5E2WpH59k7AjLoWMWbz8+eh13UiV5OxOv67Rkwv+mZ7
q/+eJ0f3XLtdHkcXps5L8pbHUfd6p5x6NbUI64dOyY+s9SL374leyfLvLeH7
UtdjLeT5VnP0XvNWejHqvN9baZxG9P4kTkyU56vkL8fq7vXUC+3LHa8eN9cI
oxTU3dfZIopNfjC+3kK9sLikB+wqpBGV48btSZHnvVGutr6x0XpxuaM+uN8D
tShRfG7nAHmeTGqwbpBbkjx+u+gevTyoFktyagfOl+fV9eufDLlt1IuWbb+9
Dg1Si971y62+LX/94at044ASBhFbN61202H/8+d7XHPdf7mxQfjnbg40tlCL
4vT3z1jwdULNAQahubdOFV9OLSrS97Ny441qw+Tx2K5Lsv6cPB6b6fvv2PCw
NGuzQYQ6fMqy3Fbl/bzFP3SrNeG8Qdg+7dBgWKwq7/MxbJjVsl6mQWTUnDS7
TJRK9KLPc1XJVQlnvhmEr4ObX8UlqrzP36P/v/6l5XXLkoE71/jJ65gM+n19
WFSqi4ObUVyJ/ZjeZphK1KHfb4XGE2t9nmgUzU3FW3r3UOU9DwMeuDQPDTGK
Q8Ne/l7SWZX3/JxrO/TYdXn8LjPVMcNRHr9H0fO2IbFkTnyKUUyN7DT4jjyO
9qfns2XMlZlDLUbRuton28K28nxCz/PBQw1ObSphEv/8sXB+cjWVmEbPf0DT
acMCGppEZdsH3evL4/dael+O/xFa/X1Pk4hpO9Sqgfzn8X7Ztgy8VOZPk7gX
Mf/mbXlcd6H3MTx5Ye14ef7I3T3L3V6eT/D+Vj5k0zg3xiR+3Ot13rGRKu99
b7lq6UORZBLvIw8/MbdR/c/4YFhQq6LGJG6ENXsxpptK/EnjyZKcTdWffTGJ
OTZDTmz2UIkcGn/ih7Z52Lm6WbTyezs4fKpKnKXxalXsFt8qrc3iYZXxM/vI
v6+yNL6Vf5L2Y8IAs7j9e+lCd7aq8sbDQluPHqvnYxYuTxJG1Dyryhs/N31O
2Twi2Cz0UyfXafZIJYrReHvoWdtHn6PNIr30DrdSH1R54/Npa7/gYufM4t8R
q0zHbNQiksZzH6cqcXPvmEXIrphJ1bqqRV0a/1P3bJnZUzKLuzYfunSbrs6b
L5yXvTkZ8F2eH6442LbYJs8PNL9ET3Wb8qOyJNotrhaTfl2dNx+dnO/pr2ok
iZGxi8Kcv6rFS5q/fB402VOmsySezywW2rOFRoyh+W7ZdZ/9oUMlkfM6otWP
KZq8+bFvi39q9ZsiifMX3KyHxWjy5tMN1wZt8lgkiTW9Fs3urtXkzb9FzryY
Gr1WEpO+rb2ksZbXgzRfX8+dLNXaJYmIj6aQf520efN7iYgMp6cnJNHklLtX
xSHavPVAVd+MbklCElVnzc5cEKAVKbR++FE89tMj+bkrXf9HTqnt2rz1xpKJ
ez+XV0livc/Wpxcva0UurU9+5DS45vtcErW1I0uskLR565moi/0PGOR9y/1S
ia6jrHWiMK1/+kk252cWsYiRSRUXtpbnEayX7jlV0ZQqaxHthke8KjJBJ87S
+uraoOyU41UtIn5J85IXwnR567Hf3841Da1lEduX2c8ZcF6Xt34LPLh/Rm59
i9im8ysRa9SJFrTe6z6q0egweVxxuDha9aCCXmyh9WFxtZOvdSuLqPqbxWW/
q17cpPVknPeZavPbyfuNcaviqszQ560/vXcN25Eoj3927jYlK8vjsT2tVw2d
DB8y5PGyi2/NHuHyPgbrW7Mu5PlVeXzNiux3dfZXvThG6+EA7duPc+SvP7U3
NDvSxJC3fh7RNHSmpoNFnOhfMbz+aEPeevtHn9WTv8vj66Rv7oPvrDWIhrQ+
PxsuUlJaW8Tl1p/HrU80iGxaz2e8m+nRUt7/rHIw1R362iCm0/q/b2CJ063l
cdR3SbVNVvI4+pb2C1XCQ2Zekz/P4u6jPNYMNIpE2l/EVrxbIbOKRbhXainu
LTHm7UdG/dW2gW8p+XPoWS/38klj3v5lx7yGQ2d+k9+LTv6F3LRGMY/2Ozkh
w/7MzJJE7LP0fztZm4Q37Y8cLg+feVAtjwcfh26L7mQSe2g/tbdP5v20m5JY
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
I+juqp3aKL3C3+g95NX8Kff1Cn/j7Oau0TGlDQp/49mF9kN8uhkU/kbgEdvw
yECDgm8kjatVvuQZg8LfGD6h79Jdzw0Kf6PnrVMLXeSfm/sbr8NSV9wcalTw
je6l6ldvFWpU+Bs6x6PzxiQYFf7G2S0LjnR6YVT4G5HBmmFXapoU/oYue9t2
bS+Tgm9M0y62hM81KfwNXa0T6dd2mxR8Y9rSoSWWpJkU/saqVrc18Tkmhb/h
ZP9j9mz5eef+xoiDM/secDEr/A3HIlf6j5hgVvgb7z2My8Lk9Qj3N2pVGPjB
bb9ZwTfOZ67bvuSq0t+49NaplrteyTcmRLV6sO+70t/I2Ptj7ZYaksLfsAl5
vKFeK0nhb6i9Y+cO7yMp/I2p5xeWbztBUvgbYa6zJ1+bJyn8jfjIs1Fl5fGS
84223688riKvL7i/EZF0fJDppKTgG5MW1GuxXF6ncn8jOVSzKveupPA3ZvgH
efTQSAq+0eD74WkLXkoKvjHnfL/ALR8lhb/R4dzTUvuKWhT+xoxKE30OyesL
zjf+rbEr4bC8vuD+ho1dkOmYnUXBN2wLzYlOqGdR+Bs3FrmMetTYovA37nZt
NaGovM/h/kZWoi6ut7wv4v7G9je2DsfkeZ77G0Xi+nRuKa8LuL/R68HnSSp5
3cH9jXYf95+JldcX3N+I3n285ln569zfuDRwQd8X8t/D/Q17r7/TPOT/Lvc3
vkwP1H+Uv0/ON16/aHziifxzcX9j+iM/m/fy58D9Df+jFQxD5HUZ9zdWDJ+w
KbeBReFvxG/M2aCpY1H4G6X+ta9cQd7vcX+j8LQ7jdZWsij8jTMZLxM9SlsU
/sbsi+03+crrU+5v2M61uD+Qnzfubzyq0mX8Gnldw/0NXdVhbbYYJIW/EVHl
VPH3TySFv9FA9+HDoRuSwt+YPehA+dOJksLfyAq+4FL5lKTwN6LdZw2/tVdS
+Buvo7J/10RICn/jdYWaHdyDJYW/EXOic29r+ffB/Y2rNz7fbSb//ri/0ezO
+z6HB0kKvlH32cP6i10lhb/h393mn5NNJIW/ca+P/QIXedzj/sax5Q7bGhaT
FP5GxO3efjOzzQp/w+VcunulTLPC31hz0M+38jWzwt/INo+qM+e4WeFvqAa+
O9c80qzwN+ZeaRzivtis8DeWuTeR/pHfc+5vnGpZsdeOfmaFv2Eullb7YSuz
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
cH8D/Q3ub6C/wf0N9De4v4H+BvyN/wK8yc9o
        "], 
       Attributes[$CellContext`clrs$45634] = {
        Temporary}, $CellContext`clrs$45634 = {
         RGBColor[1, 0, 0], 
         RGBColor[0, 2/3, 0], 
         RGBColor[0, 0, 1], 
         RGBColor[1, 0, 1], 
         RGBColor[0, 1, 1]}, 
       Attributes[$CellContext`n$45634] = {Temporary}, $CellContext`n$45634 = 
       4, Attributes[$CellContext`poly$45634] = {
        Temporary}, $CellContext`showOnePoly[
         Pattern[$CellContext`alphaT, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`notableLoci, 
          Blank[]], 
         Pattern[$CellContext`fnVtx0, 
          Blank[]], 
         Pattern[$CellContext`fnErrorP, 
          Blank[]], 
         Pattern[$CellContext`opts, 
          OptionsPattern[]]] := 
       Module[{$CellContext`polyErr}, $CellContext`polyErr = \
$CellContext`polyError[$CellContext`alphaT, $CellContext`i, \
$CellContext`fnVtx0, $CellContext`fnErrorP]; \
$CellContext`drawPoly[$CellContext`polyErr, $CellContext`notableLoci, 
           FilterRules[{$CellContext`opts}, 
            Options[$CellContext`drawPoly]]]], $CellContext`polyError[
         Pattern[$CellContext`alphaT, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`fnVtx0, 
          Blank[]], 
         Pattern[$CellContext`fnErrorP, 
          Blank[]]] := 
       Module[{$CellContext`a, $CellContext`alpha, $CellContext`poly, \
$CellContext`err}, $CellContext`a = 
          ReplaceAll["a", $CellContext`alphaT]; $CellContext`alpha = Part[
            ReplaceAll[
            "alphas", $CellContext`alphaT], $CellContext`i]; \
$CellContext`poly = $CellContext`polyVtx[$CellContext`alphaT, $CellContext`i, \
$CellContext`fnVtx0]; $CellContext`err = $CellContext`fnErrorP[$CellContext`a, 
            Part[$CellContext`poly, 1], $CellContext`alpha]; {
          "a" -> $CellContext`a, "poly" -> $CellContext`poly, 
           "error" -> $CellContext`err}], $CellContext`polyVtx[
         Pattern[$CellContext`alphaT, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`fnVtx0, 
          Blank[]]] := 
       Module[{$CellContext`a, $CellContext`p1, $CellContext`t, \
$CellContext`alpha}, $CellContext`a = 
          ReplaceAll["a", $CellContext`alphaT]; $CellContext`alpha = Part[
            ReplaceAll[
            "alphas", $CellContext`alphaT], $CellContext`i]; $CellContext`t = 
          Part[
            ReplaceAll[
            "tsRad", $CellContext`alphaT], $CellContext`i]; $CellContext`p1 = \
{$CellContext`a Cos[$CellContext`t], 
            
            Sin[$CellContext`t]}; $CellContext`fnVtx0[$CellContext`a, \
$CellContext`p1, $CellContext`alpha]], $CellContext`drawPoly[
         Pattern[$CellContext`polyErr$, 
          Blank[]], 
         Pattern[$CellContext`notableLoci$, 
          Blank[]], 
         OptionsPattern[]] := 
       Module[{$CellContext`poly$, $CellContext`a$, $CellContext`centroids$, \
$CellContext`centroidNames$, $CellContext`lab$, $CellContext`pnames$, \
$CellContext`meds$, $CellContext`polyTangs$, $CellContext`polyInters$, \
$CellContext`polyInterNames$, $CellContext`tri1$, $CellContext`notables$, \
$CellContext`circs$, $CellContext`incs$, $CellContext`lgt$ = 
          0.25, $CellContext`fnt$ = 14}, $CellContext`poly$ = 
          ReplaceAll["poly", $CellContext`polyErr$]; $CellContext`a$ = 
          ReplaceAll[
           "a", $CellContext`polyErr$]; $CellContext`centroids$ = \
$CellContext`getCentroids[$CellContext`poly$]; $CellContext`centroidNames$ = {
           "\!\(\*SubscriptBox[\(G\), \(vtx\)]\)", 
            "\!\(\*SubscriptBox[\(G\), \(per\)]\)", 
            "\!\(\*SubscriptBox[\(G\), \(lam\)]\)"}; $CellContext`lab$ = 
          StringJoin["error: ", 
            $CellContext`nfn[
             N[
              ReplaceAll["error", $CellContext`polyErr$]], 
             3]]; $CellContext`pnames$ = 
          Take[{"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K"}, 
            
            Length[$CellContext`poly$]]; $CellContext`meds$ = \
$CellContext`getMediansV[$CellContext`poly$]; $CellContext`polyTangs$ = 
          Map[$CellContext`perp[
             $CellContext`ellGrad[$CellContext`a$, 
              Part[#, 1], 
              Part[#, 2]]]& , $CellContext`poly$]; $CellContext`polyInters$ = 
          MapThread[$CellContext`interRays[#, #2, #3, #4]& , \
{$CellContext`poly$, $CellContext`polyTangs$, 
             RotateLeft[$CellContext`poly$], 
             
             RotateLeft[$CellContext`polyTangs$]}]; \
$CellContext`polyInterNames$ = If[
            OptionValue[$CellContext`drExcentral], 
            MapThread[StringJoin[#, "'", #2, "'"]& , {$CellContext`pnames$, 
              RotateLeft[$CellContext`pnames$]}], {}]; If[
           OptionValue[$CellContext`drCircs], 
           
           Module[{$CellContext`sides$, $CellContext`tri$, \
$CellContext`cir$}, $CellContext`circs$ = Table[$CellContext`tri$ = Take[
                  RotateLeft[$CellContext`poly$, FE`i$$26 - 1], 
                  3]; $CellContext`cir$ = \
$CellContext`getCircumcenterTrilin[$CellContext`tri$, 
                  RotateLeft[
                   $CellContext`triLengths[$CellContext`tri$]]]; \
{$CellContext`cir$, 
                 $CellContext`magn[$CellContext`cir$ - 
                  Part[$CellContext`tri$, 1]]}, {FE`i$$26, 
                Length[$CellContext`poly$]}]; Null]]; If[
           OptionValue[$CellContext`drIncs], 
           
           Module[{$CellContext`sides$, $CellContext`tri$, \
$CellContext`inc$}, $CellContext`incs$ = Table[$CellContext`tri$ = Take[
                  RotateLeft[$CellContext`poly$, FE`i$$26 - 1], 
                  3]; $CellContext`inc$ = \
$CellContext`getIncenterTrilin[$CellContext`tri$, 
                  RotateLeft[
                   $CellContext`triLengths[$CellContext`tri$]]]; \
{$CellContext`inc$, 
                 $CellContext`closestDist[$CellContext`inc$, 
                  Part[$CellContext`tri$, 1], 
                  Part[$CellContext`tri$, 2]]}, {FE`i$$26, 
                Length[$CellContext`poly$]}]; Null]]; If[
           Or[
            OptionValue[$CellContext`drNotables], 
            OptionValue[$CellContext`drSubtri]], 
           
           Module[{$CellContext`normals$}, $CellContext`tri1$ = 
             Part[$CellContext`poly$, 
               OptionValue[$CellContext`vtx]]; $CellContext`normals$ = 
             Apply[$CellContext`gettriBisectors, $CellContext`tri1$]; \
$CellContext`notables$ = $CellContext`getNotables[$CellContext`tri1$, \
$CellContext`normals$]; Null]]; $CellContext`gr = Graphics[{
             PointSize[Large], 
             Point[$CellContext`poly$], 
             FaceForm[None], {
              EdgeForm[{Black, Thick}], 
              FaceForm[Gray], 
              Opacity[0.1], 
              Polygon[$CellContext`poly$], Black, 
              Point[$CellContext`poly$]}, {Black, 
              Arrowheads[Medium], 
              MapThread[$CellContext`drawArrow[#, 
                $CellContext`norm[
                 $CellContext`perpNeg[#2]], $CellContext`lgt$]& , \
{$CellContext`poly$, $CellContext`polyTangs$}]}, 
             If[
              OptionValue[$CellContext`drCentroids], {Black, 
               MapThread[{
                 Point[#], 
                 If[
                  OptionValue[$CellContext`drCentroidLabels], 
                  Text[
                   Style[#2, 14], #, {
                   0, -1.5}], {}]}& , {$CellContext`centroids$, \
$CellContext`centroidNames$}]}, {}], 
             If[
              OptionValue[$CellContext`drExcentral], {
               EdgeForm[
                Darker[Green]], 
               Polygon[$CellContext`polyInters$], 
               Darker[Green], 
               Point[$CellContext`polyInters$], 
               MapThread[Text[
                 
                 Style[#, $CellContext`fnt$], #2, {-1.25, -1.25}]& , \
{$CellContext`polyInterNames$, $CellContext`polyInters$}]}, {}], {Black, 
              MapThread[Text[
                Style[#, $CellContext`fnt$], 
                $CellContext`ray[#2, 
                 $CellContext`norm[
                  $CellContext`perp[#3]], $CellContext`lgt$/
                 2]]& , {$CellContext`pnames$, $CellContext`poly$, \
$CellContext`polyTangs$}]}, 
             If[
              OptionValue[$CellContext`drMedians], {{Dashed, Blue, 
                Map[Line[{#, {0, 0}}]& , $CellContext`polyInters$]}, {Blue, 
                Point[$CellContext`meds$], 
                Point[{0, 0}]}}, {}], 
             If[
              OptionValue[$CellContext`drCircs], {Red, {Dashed, 
                Map[Circle[
                  Part[#, 1], 
                  Part[#, 2]]& , $CellContext`circs$]}, 
               Point[
                Map[First, $CellContext`circs$]], 
               Circle[
                Part[$CellContext`circs$, 1, 1], 0.05]}, {}], 
             If[
              OptionValue[$CellContext`drIncs], {
               Darker[Green], Dashed, 
               Map[Circle[
                 Part[#, 1], 
                 Part[#, 2]]& , $CellContext`incs$], 
               Point[
                Map[First, $CellContext`incs$]]}, {}], 
             If[
              OptionValue[$CellContext`drNotables], {
               Apply[List, 
                $CellContext`drawSomeNotables[$CellContext`notables$, 
                 First[$CellContext`notableLoci$]]], 
               EdgeForm[None], 
               FaceForm[Red], 
               Opacity[0.1], 
               Polygon[$CellContext`tri1$]}, {}], 
             If[
              OptionValue[$CellContext`drSubtri], {
               EdgeForm[None], 
               FaceForm[Red], 
               Opacity[0.2], 
               Polygon[$CellContext`tri1$]}, {}]}]; Show[{
            $CellContext`plotEll[$CellContext`a$], $CellContext`gr, 
            If[
             OptionValue[$CellContext`drLoci], 
             $CellContext`Second[$CellContext`notableLoci$], {}]}, 
           If[
            OptionValue[$CellContext`drError], 
            PlotLabel -> $CellContext`lab$, {}], PlotRange -> If[
             OptionValue[$CellContext`plotAll], All, {{-2, 2}, {-1.5, 1.5}}], 
           Frame -> True, FrameStyle -> Medium, AxesStyle -> 
           Directive[{Dotted, Gray}]]], 
       Options[$CellContext`drawPoly] = {$CellContext`drNotables -> 
         False, $CellContext`drSubtri -> False, $CellContext`drLoci -> 
         False, $CellContext`drMedians -> False, $CellContext`drExcentral -> 
         False, $CellContext`drCentroids -> 
         False, $CellContext`drCentroidLabels -> False, $CellContext`drError -> 
         False, $CellContext`drCircs -> False, $CellContext`drIncs -> 
         False, $CellContext`vtx -> {1, 2, 3}, $CellContext`plotAll -> False},
        Attributes[$CellContext`polyErr$] = {Temporary}, 
       Attributes[$CellContext`notableLoci$] = {Temporary}, 
       Attributes[$CellContext`poly$] = {Temporary}, 
       Attributes[$CellContext`a$] = {Temporary}, 
       Attributes[$CellContext`centroids$] = {Temporary}, 
       Attributes[$CellContext`centroidNames$] = {Temporary}, 
       Attributes[$CellContext`lab$] = {Temporary}, 
       Attributes[$CellContext`pnames$] = {Temporary}, 
       Attributes[$CellContext`meds$] = {Temporary}, 
       Attributes[$CellContext`polyTangs$] = {Temporary}, 
       Attributes[$CellContext`polyInters$] = {Temporary}, 
       Attributes[$CellContext`polyInterNames$] = {Temporary}, 
       Attributes[$CellContext`tri1$] = {Temporary}, 
       Attributes[$CellContext`notables$] = {Temporary}, 
       Attributes[$CellContext`circs$] = {Temporary}, 
       Attributes[$CellContext`incs$] = {Temporary}, 
       Attributes[$CellContext`lgt$] = {Temporary}, 
       Attributes[$CellContext`fnt$] = {Temporary}, $CellContext`getCentroids[
         Pattern[$CellContext`vtx, 
          Blank[]]] := {
         Mean[$CellContext`vtx], 
         $CellContext`PerimeterCentroid[$CellContext`vtx], 
         RegionCentroid[
          Polygon[$CellContext`vtx]]}, $CellContext`PerimeterCentroid[
         Pattern[$CellContext`vtx$, 
          Blank[]]] := 
       Module[{$CellContext`sides$, $CellContext`meds$, $CellContext`per$, \
$CellContext`perCentroid$}, $CellContext`sides$ = \
$CellContext`triLengths[$CellContext`vtx$]; $CellContext`meds$ = 
          Apply[$CellContext`getMediansV, $CellContext`vtx$]; \
$CellContext`per$ = Total[$CellContext`sides$]; $CellContext`perCentroid$ = 
          Sum[Part[$CellContext`meds$, FE`i$$26] 
             Part[$CellContext`sides$, FE`i$$26], {FE`i$$26, 
              
              Length[$CellContext`vtx$]}]/$CellContext`per$; \
$CellContext`perCentroid$], Attributes[$CellContext`vtx$] = {Temporary}, 
       Attributes[$CellContext`sides$] = {Temporary}, 
       Attributes[$CellContext`per$] = {Temporary}, 
       Attributes[$CellContext`perCentroid$] = {
        Temporary}, $CellContext`triLengths[
         Pattern[$CellContext`vs, 
          Blank[]]] := Map[$CellContext`magn, 
         $CellContext`triSides[$CellContext`vs]], $CellContext`magn[
         Pattern[$CellContext`v, 
          Blank[]]] := Sqrt[
         $CellContext`magn2[$CellContext`v]], $CellContext`magn2[
         Pattern[$CellContext`v, 
          Blank[]]] := 
       Dot[$CellContext`v, $CellContext`v], $CellContext`triSides[
         Pattern[$CellContext`vs, 
          Blank[]]] := MapThread[# - #2& , {$CellContext`vs, 
          RotateLeft[$CellContext`vs]}], $CellContext`getMediansV[
         Pattern[$CellContext`vs, 
          Blank[]]] := 0.5 ($CellContext`vs + RotateLeft[$CellContext`vs]), 
       FE`i$$26 = 1, $CellContext`nfn[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := ToString[
         NumberForm[$CellContext`v, {$CellContext`n + 
           2, $CellContext`n}]], $CellContext`perp[{
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           
           Blank[]]}] := {-$CellContext`y, $CellContext`x}, \
$CellContext`ellGrad[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          
          Blank[]]] := -{$CellContext`x, $CellContext`y $CellContext`a^2}, \
$CellContext`interRays[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`n2, 
          Blank[]]] := 
       Module[{$CellContext`m, $CellContext`b, $CellContext`sols}, \
$CellContext`m = Transpose[{$CellContext`n1, $CellContext`n2}]; If[
           $CellContext`negl[
            
            Det[$CellContext`m]], $CellContext`p1, $CellContext`b = \
$CellContext`p2 - $CellContext`p1; $CellContext`sols = 
            LinearSolve[$CellContext`m, $CellContext`b]; \
$CellContext`ray[$CellContext`p1, $CellContext`n1, 
             Part[$CellContext`sols, 1]]]], $CellContext`negl[
         Pattern[$CellContext`v, 
          Blank[]]] := Abs[$CellContext`v] < 10^(-9), $CellContext`ray[
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`phat, 
          Blank[]], 
         Pattern[$CellContext`d, 
          Blank[]]] := $CellContext`p0 + $CellContext`phat $CellContext`d, 
       Attributes[$CellContext`tri$] = {Temporary}, 
       Attributes[$CellContext`cir$] = {
        Temporary}, $CellContext`getCircumcenterTrilin[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := 
       Module[{$CellContext`a2 = $CellContext`a $CellContext`a, \
$CellContext`b2 = $CellContext`b $CellContext`b, $CellContext`c2 = \
$CellContext`c $CellContext`c}, 
         $CellContext`trilinearToCartesian[$CellContext`orbit, \
{$CellContext`a, $CellContext`b, $CellContext`c}, {$CellContext`a \
($CellContext`b2 + $CellContext`c2 - $CellContext`a2), $CellContext`b \
($CellContext`c2 + $CellContext`a2 - $CellContext`b2), $CellContext`c \
($CellContext`a2 + $CellContext`b2 - $CellContext`c2)}]], \
$CellContext`trilinearToCartesian[{
          Pattern[$CellContext`A, 
           Blank[]], 
          Pattern[$CellContext`B, 
           Blank[]], 
          Pattern[C, 
           Blank[]]}, {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]], 
          Pattern[$CellContext`z, 
           Blank[]]}] := 
       Module[{$CellContext`denom}, $CellContext`denom = 
          Dot[{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`x, $CellContext`y, $CellContext`z}]; ($CellContext`a \
$CellContext`x $CellContext`A + $CellContext`b $CellContext`y $CellContext`B + \
$CellContext`c $CellContext`z C)/$CellContext`denom], 
       Attributes[$CellContext`inc$] = {
        Temporary}, $CellContext`getIncenterTrilin[
         Pattern[$CellContext`orbit, 
          Blank[]], 
         Pattern[$CellContext`sides, 
          
          Blank[]]] := $CellContext`trilinearToCartesian[$CellContext`orbit, \
$CellContext`sides, {1, 1, 1}], $CellContext`closestDist[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`l1, 
          Blank[]], 
         Pattern[$CellContext`l2, 
          
          Blank[]]] := $CellContext`magn[$CellContext`p - \
$CellContext`closestPerp[$CellContext`p, $CellContext`l1, $CellContext`l2]], \
$CellContext`closestPerp[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`l1, 
          Blank[]], 
         Pattern[$CellContext`l2, 
          Blank[]]] := 
       Module[{$CellContext`dl = $CellContext`l2 - $CellContext`l1, \
$CellContext`s}, $CellContext`s = 
          Dot[$CellContext`p - $CellContext`l1, $CellContext`dl]/
           Dot[$CellContext`dl, $CellContext`dl]; \
$CellContext`ray[$CellContext`l1, $CellContext`dl, $CellContext`s]], 
       Attributes[$CellContext`normals$] = {
        Temporary}, $CellContext`gettriBisectors[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`p3, 
          Blank[]]] := 
       Module[{$CellContext`u12, $CellContext`u23, $CellContext`u31}, \
$CellContext`u12 = $CellContext`norm[$CellContext`p2 - $CellContext`p1]; \
$CellContext`u23 = $CellContext`norm[$CellContext`p3 - $CellContext`p2]; \
$CellContext`u31 = $CellContext`norm[$CellContext`p1 - $CellContext`p3]; {
           $CellContext`norm[$CellContext`u12 - $CellContext`u31], 
           $CellContext`norm[$CellContext`u23 - $CellContext`u12], 
           $CellContext`norm[$CellContext`u31 - $CellContext`u23]}], \
$CellContext`norm[
         Pattern[$CellContext`v, 
          
          Blank[]]] := $CellContext`v/$CellContext`magn[$CellContext`v], \
$CellContext`gr = Graphics[{
          PointSize[Large], 
          
          Point[{{1.5, 0.}, {
           0.5979478304998469, -0.9171110176346703}, {-1.3260005019843664`, \
-0.4674862653893144}, {-1.3260005019843664`, 0.4674862653893144}, {
           0.5979478304998469, 0.9171110176346703}}], 
          FaceForm[None], {
           EdgeForm[{
             GrayLevel[0], 
             Thickness[Large]}], 
           FaceForm[
            GrayLevel[0.5]], 
           Opacity[0.1], 
           
           Polygon[{{1.5, 0.}, {
            0.5979478304998469, -0.9171110176346703}, {-1.3260005019843664`, \
-0.4674862653893144}, {-1.3260005019843664`, 0.4674862653893144}, {
            0.5979478304998469, 0.9171110176346703}}], 
           GrayLevel[0], 
           
           Point[{{1.5, 0.}, {
            0.5979478304998469, -0.9171110176346703}, {-1.3260005019843664`, \
-0.4674862653893144}, {-1.3260005019843664`, 0.4674862653893144}, {
            0.5979478304998469, 0.9171110176346703}}]}, {
           GrayLevel[0], 
           Arrowheads[Medium], {
            Arrow[{{1.5, 0.}, {1.25, 0.}}], 
            
            Arrow[{{0.5979478304998469, -0.9171110176346703}, {
             0.5283668584520659, -0.6769891978662745}}], 
            
            Arrow[{{-1.3260005019843664`, -0.4674862653893144}, \
{-1.1301396405275244`, -0.3121204939034955}}], 
            
            Arrow[{{-1.3260005019843664`, 
             0.4674862653893144}, {-1.1301396405275244`, 
             0.3121204939034955}}], 
            
            Arrow[{{0.5979478304998469, 0.9171110176346703}, {
             0.5283668584520659, 0.6769891978662745}}]}}, {}, {}, {
           GrayLevel[0], {
            Text[
             Style["A", 14], {1.625, 0.}], 
            Text[
             Style["B", 14], {0.6327383165237374, -1.0371719275188682`}], 
            Text[
             Style["C", 14], {-1.4239309327127874`, -0.5451691511322239}], 
            Text[
             Style["D", 14], {-1.4239309327127874`, 0.5451691511322239}], 
            Text[
             Style["E", 14], {0.6327383165237374, 
             1.0371719275188682`}]}}, {}, {}, {}, {}, {}}], \
$CellContext`drawArrow[
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`phat, 
          Blank[]], 
         Pattern[$CellContext`l, 
          Blank[]]] := Arrow[{$CellContext`p0, 
          $CellContext`ray[$CellContext`p0, $CellContext`phat, \
$CellContext`l]}], $CellContext`perpNeg[{
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           
           Blank[]]}] := {$CellContext`y, -$CellContext`x}, \
$CellContext`plotEll[
         Pattern[$CellContext`a, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`clr, 
           Blank[]], 
          GrayLevel[0]]] := 
       ParametricPlot[{N[$CellContext`a] Cos[$CellContext`u], 
          Sin[$CellContext`u]}, {$CellContext`u, 0., 2. Pi}, 
         PlotStyle -> $CellContext`clr, PerformanceGoal -> 
         "Quality"], $CellContext`Second[
         Pattern[$CellContext`l, 
          Blank[]]] := Part[$CellContext`l, 2], $CellContext`getHeptVtx0[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`alpha, 
          Blank[]]] := 
       Module[{$CellContext`p2, $CellContext`p3, $CellContext`p4, \
$CellContext`p2Neg, $CellContext`p3Neg, $CellContext`p4Neg}, \
{$CellContext`p2, $CellContext`p2Neg} = \
$CellContext`getP2Alpha[$CellContext`a, $CellContext`p1, $CellContext`alpha]; \
$CellContext`p3 = $CellContext`getInterRefl[$CellContext`a, $CellContext`p1, \
$CellContext`p2]; $CellContext`p4 = $CellContext`getInterRefl[$CellContext`a, \
$CellContext`p2, $CellContext`p3]; $CellContext`p3Neg = \
$CellContext`getInterRefl[$CellContext`a, $CellContext`p1, \
$CellContext`p2Neg]; $CellContext`p4Neg = \
$CellContext`getInterRefl[$CellContext`a, $CellContext`p2Neg, \
$CellContext`p3Neg]; {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p4Neg, $CellContext`p3Neg, \
$CellContext`p2Neg}], $CellContext`getP2Alpha[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`alpha, 
          Blank[]]] := 
       Module[{$CellContext`norm, $CellContext`ca, $CellContext`sa, \
$CellContext`p2, $CellContext`normRot, $CellContext`normRotNeg, \
$CellContext`p2Neg}, $CellContext`ca = 
          Cos[$CellContext`alpha]; $CellContext`sa = 
          Sin[$CellContext`alpha]; $CellContext`norm = \
$CellContext`ellGrad[$CellContext`a, 
            Part[$CellContext`p1, 1], 
            
            Part[$CellContext`p1, 
             2]]; $CellContext`normRot = $CellContext`rot[$CellContext`norm, \
$CellContext`sa, $CellContext`ca]; $CellContext`normRotNeg = \
$CellContext`rot[$CellContext`norm, -$CellContext`sa, $CellContext`ca]; \
$CellContext`p2 = Part[
            $CellContext`ellInterRayUnprot[$CellContext`a, $CellContext`p1, \
$CellContext`normRot], 2]; $CellContext`p2Neg = Part[
            $CellContext`ellInterRayUnprot[$CellContext`a, $CellContext`p1, \
$CellContext`normRotNeg], 
            2]; {$CellContext`p2, $CellContext`p2Neg}], $CellContext`rot[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`st, 
          Blank[]], 
         Pattern[$CellContext`ct, 
          Blank[]]] := 
       Module[{$CellContext`m}, $CellContext`m = {{$CellContext`ct, \
-$CellContext`st}, {$CellContext`st, $CellContext`ct}}; 
         Dot[$CellContext`m, $CellContext`p]], $CellContext`rot[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := $CellContext`rot[$CellContext`p, 
         Sin[$CellContext`t], 
         Cos[$CellContext`t]], $CellContext`ellInterRayUnprot[
         Pattern[$CellContext`a, 
          Blank[]], {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, {
          Pattern[$CellContext`nx, 
           Blank[]], 
          Pattern[$CellContext`ny, 
           Blank[]]}] := 
       Module[{$CellContext`c2, $CellContext`c1, $CellContext`c0, \
$CellContext`ss}, $CellContext`c2 = $CellContext`nx^2 + $CellContext`a^2 \
$CellContext`ny^2; $CellContext`c1 = 
          2 ($CellContext`nx $CellContext`x + $CellContext`a^2 \
$CellContext`ny $CellContext`y); $CellContext`c0 = $CellContext`x^2 + \
$CellContext`a^2 (-1 + $CellContext`y^2); $CellContext`ss = \
$CellContext`quadRootsUnprot[$CellContext`c2, $CellContext`c1, \
$CellContext`c0]; 
         Map[$CellContext`ray[{$CellContext`x, $CellContext`y}, \
{$CellContext`nx, $CellContext`ny}, #]& , $CellContext`ss]], \
$CellContext`quadRootsUnprot[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]]] := 
       Module[{$CellContext`det = $CellContext`b^2 - 
           4 $CellContext`a $CellContext`c, $CellContext`sqrtDet}, \
$CellContext`sqrtDet = 
          Sqrt[$CellContext`det]; {-$CellContext`b - $CellContext`sqrtDet, \
-$CellContext`b + $CellContext`sqrtDet}/(
          2 $CellContext`a)], $CellContext`getInterRefl[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`pfrom, 
          Blank[]], 
         Pattern[$CellContext`pto, 
          Blank[]]] := 
       Module[{$CellContext`norm, $CellContext`theRefl, $CellContext`pnext}, \
$CellContext`norm = $CellContext`ellGrad[$CellContext`a, 
            Part[$CellContext`pto, 1], 
            
            Part[$CellContext`pto, 
             2]]; $CellContext`theRefl = $CellContext`refl[$CellContext`pfrom - \
$CellContext`pto, $CellContext`norm]; $CellContext`pnext = Part[
            $CellContext`ellInterRayUnprot[$CellContext`a, $CellContext`pto, \
$CellContext`theRefl], 2]; $CellContext`pnext], $CellContext`refl[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := 
       2 Dot[$CellContext`v, $CellContext`n] \
($CellContext`n/$CellContext`magn2[$CellContext`n]) - $CellContext`v}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.768681688735083*^9, 3.7686830080070906`*^9, 
  3.76868310455292*^9, 3.768683418830662*^9, 3.7686844264466352`*^9, 
  3.768768413917252*^9, 3.7687687611037874`*^9, 3.7687703828598433`*^9, 
  3.768855594638982*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"CloudDeploy", "[", 
   RowBox[{"plotCSgr", "[", 
    RowBox[{"heptAlphaT15", ",", "getHeptVtx0"}], "]"}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7686830102162123`*^9, 3.7686830134475408`*^9}, {
  3.7686831588647346`*^9, 3.7686831596157255`*^9}, {3.7686832654073315`*^9, 
  3.768683265479169*^9}, {3.7686844432187805`*^9, 3.768684444576151*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Octagon", "Section",
 CellChangeTimes->{{3.7687689730784163`*^9, 3.768768980061741*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "@", "getOctVtx0"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"not", " ", "for", " ", "error", " ", "purposes"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getOctVtx0", "[", 
    RowBox[{"a_", ",", "p1_", ",", "alpha_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "p2", ",", "p2Neg", ",", "p3", ",", "p4", ",", "p5", ",", "p3Neg", ",", 
       "p4Neg"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p2", ",", "p2Neg"}], "}"}], "=", 
       RowBox[{"getP2Alpha", "[", 
        RowBox[{"a", ",", "p1", ",", "alpha"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p3", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p1", ",", "p2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p4", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p2", ",", "p3"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p5", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p3", ",", "p4"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p3Neg", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p1", ",", "p2Neg"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p4Neg", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p2Neg", ",", "p3Neg"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p4Neg", ",", 
        "p3Neg", ",", "p2Neg"}], "}"}]}]}], "]"}]}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"doOctAlphaT15", "=", "False"}], ";", 
  RowBox[{"Clear", "@", "octAlphaT15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"octAlphaT15", "=", 
   RowBox[{"calcAlphaT", "[", 
    RowBox[{"doOctAlphaT15", ",", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", "0"}], "]"}], ",", "\"\<data/octAlphaT_a15.m\>\"", 
     ",", "1.5", ",", ".9273", ",", "1", ",", "True"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.768768998918311*^9, 3.768769020158203*^9}, {
  3.768769062182412*^9, 3.768769081342821*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"loaded: \"\>", "\[InvisibleSpace]", "360", 
   "\[InvisibleSpace]", "\<\" records from\"\>", 
   "\[InvisibleSpace]", "\<\"data/octAlphaT_a15.m\"\>"}],
  SequenceForm["loaded: ", 360, " records from", "data/octAlphaT_a15.m"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.768769010590563*^9, 3.7687690217199993`*^9}, 
   3.7687690844026384`*^9, 3.7687703869399624`*^9, 3.7688555947337008`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotCS", "[", 
  RowBox[{"octAlphaT15", ",", "getOctVtx0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7687691047023497`*^9, 3.7687691090544944`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 360, 1}}, Typeset`size$$ = {
    729., {176.5, 182.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`i$590124$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$590124$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`cs$587960 = Graphics3D[{Thick, 
           PointSize[Large], 
           MapThread[{#, 
             Line[
              Part[$CellContext`coss$587960, #2]], 
             Point[
              Part[
               Part[$CellContext`coss$587960, #2], $CellContext`i$$]]}& , {
             Take[$CellContext`clrs$587960, $CellContext`n$587960], 
             Range[$CellContext`n$587960]}]}, SphericalRegion -> True, Axes -> 
          True, AxesLabel -> Map[Style[#, {Black, 14}]& , {"c1", "c2", "c3"}],
           ImageSize -> Medium]; $CellContext`poly$587960 = Show[
          $CellContext`showOnePoly[{"a" -> 1.5, "tsDeg" -> CompressedData["
1:eJwV0wV3EAQUBeAxumPAqDFGx4iNZgNGd23UaBaUUkqKiNKN0h0GKBh0KCgY
oDQoGHQJUkoJKCjf3jnfvT/gnheWMDh2UKqAgIB+KeFSKpDUpCEt6UhPBjKS
icxkISvZyE4OcpKLIHKTh7wEk4/8FKAghQihMKEUIYyiFKM4JShJKUpThrKU
I5zyVKAilYggkspUoSrVqE4NalKLKKKpTR3qEkM96tOAhjSiMU1oSjOa04KW
tKI1bWhLO2KJoz0d6EgnOhNPF7rSje70oCe96E0CiSSRTB/6pmxEfwbwEi8z
kEEMZghDeYVXGcZwRjCSUYzmNcbwOmN5g3G8yVuMZwITmcRkpjCVaUxnBjOZ
xWzm8DbvMJd5zGcBC1nEYpawlGUsZwUrWcVq1vAu7/E+H7CWdXzIR6xnAx/z
CZ/yGRvZxGa2sJVtbGcHO9nF53zBbvbwJV+xl318zTd8y3fs5wDf8wMHOcRh
jnCUYxznBCf5kZ84xWl+5hd+5TfOcJZznOcCF7nEZa5wlWv8znVu8Ac3ucVt
7nCXP/mLe9znAQ95xN885glP+Yd/ecZz/uN/Up4/FYGkJg1pSUd6MpCRTGQm
C1nJRnZykJNcBJGbPOQlmHzkpwAFKUQIhQmlCGEUpRjFKUFJSlGaMpSlHOGU
pwIVqUQEkVSmClWpRnVqUJNaRBFNbepQlxjqUZ8GNKQRjWlCU5rRnBa0pBWt
aUNb2hFLHO3pQEc60Zl4utCVbnSnBz3pRW8SSCSJZPrQlxeua5bx
             "], "tsRad" -> CompressedData["
1:eJwtlHlczPkfx+doappmprm+MyO2so740ZJjFdbnhfhR9ofaHD/FjyTHKmtT
7rJuuVosuRZZS64s5SpkqaytUBLtpvqFLsdM9/17/B6f9/wx85iZ7/fzfb9f
x7P7vHC/ELFIJFr4/zd6eR3zOzX+dRzjnydZQfWa2sqcRPp+hW31fudjnp5C
v99iPfdpjt4ef5f+T2cln45GDuj6gK7LYF8c8nAR78ui6/9g61hG5jNFNt2X
y0K+d/f0S39C9z9lqswo5Yj2Z3ROPrvmdL+kh9dzOq+AzQpTJitXvKBzC5nk
/rTt9Ukv6fxX7JxwMqi4poie8zebsqjaI7NPMT3vNVtb7CSdMaiEnlvCJsux
dNKUUnp+KesxKOQFwspojjLWMGvH6KE7/0vzlLM/Nl8+3zexnOZ6w45dzhec
s97QfG/Zdy+bo3Vv39Kc79g4qUuVrU0FzVvBzO7e37R2r6S5K1nNtEV3PrIq
mr+K3Y3Z3ac8qJr2qGb7Eq/+WLimhvZ5zxbkF7b9Gf+e9vrAhne0L0i//oH2
+8jUfXo8TX7+kfb8xCx9Tn/2fNUn2vcTe5WW4pcrt9DeFvbA79HWRwcttL+F
XXpXlPp7byvpYGWH1n6wpCVbSQ8r26AVu93wriVdatmSM/rA3/JqSZ86FjCi
d9yFeXWkUx1jTzwzzljqSK961jfEt/VETD3pVs90LUEDjzg2kH4NrG33spAD
xxtIxwb2tsfGw3vcG0nPRvbkxoHc7amNpGsTu/n1WZtNvk2kbxNLKLvltf5V
E+nczHZFZYetXNRMejezKGVJwvKmZtK9hc09aS38dmsL6d/CfL6UqUONreRD
Kxvy2DR27i+t5Ecrc/7PP1bOGtJGvrQxef3IiwG/t5E/7cy6fXLZZL928qmd
FTnPM/mUtpNfHezh1YhJ3ss6yLcOdnnC1g2jOjvIv04W/3d8iufuTvKxk432
KlgRrxaB+ylCysY5e43TROC+itAvpyJx3zERuL8inDAvf6h5IwL3WQwhuPX1
rv5icL/F2HFxU4siQgzuuxidjSph220xuP9ifD/m4ACZVAKeAwkqdrr6/OAj
Ac+DBEEvzs3vjJOA50KCZ90HR699KQHPhwT//DY1vtlVCp4TKVJTxl2LXCgF
z4sUHuLcnNrLUvDcSHHGd0blskYpeH5s0PWnUumHUTbgObLBnpLFzku22IDn
yQY2/eo8K7JtwHNlg1Ur1vmHCDLwfMnw4a5tWFmgDDxnMgQr9m6bc1oGnjcZ
Cr/pkvBXtQw8d7b4+udTaTMH24Lnzxb3K/sVFqy2Bc+hLYYNSbb637cFz6Mt
zq8fpXpqbweeSzu4Psp0+9dUO/B82uGAfuqYx4fswHNqB8XsV4ETSuzA8ypH
9NngqIducvDcylFnrYkbEy4Hz68ci76KvHA3RQ6eYzmKt3ZmjOyQg+fZHv7P
tpXeHGcPnmt7ZHbTtX25yx483/YYGXrEeC3fHjzn9rhypaeHRzcFeN4V6N12
0fdSsAI89wocGT9sQb/zCvD8K6CJuxdz1qoA74EDNhdNPNJruAN4HxzQ0isv
+dQGB/BeOCB8WeATl0cO4P1wQPmtN1VHNUrwnigxQxYuc5qhBO+LEtmTm1wO
/qwE740SYw5vGG54pwTvjwrXyxUBcV+owHukQv8B+8PVkSrwPqlwctVnO2LT
VOC9UsH44MxpuUwN3i81YtUD726epAbvmRqimTdfSvarwfumRkTCmLroIjV4
79SofP9Y3f65I3j/HDHbM6Dv6sWO4D10RN4PxWMbrziC99ERE7JDZ0c0O4L3
UoPi2JWpK1011E8NunikTRzmraGeauBfIH5RH6qhvmqwe834+ddiNdRbDbJc
Yy3LL2uovxpIM3LXe+RpqMcafLXEoPzUoKE+a7FSMzP+kpOWeq3Fb8nHei8d
paV+a1Hz77Kr/eZpqedauIncRldt1lLftZj7y5Kcs+e01HstjvokzQrN1lL/
tSj4WFfRy6IlDuigPeAVWW7QEQ908B2+XprgqSMu6LDl9f29cwN1xAcd7m2y
c3aN0REndGjpO+l8cYKOeKHD0Ny9nscydcQNHcIjnj+cVa0jfuiQ2MXJ38lR
TxzRo/zO7JLCQXriiR4u8xOWHpymJ67oMdO+oiVgtZ74osf+S/23GY7riTN6
5Ph/J+Sl64k3esibk0/FvdETd/QYe7xlwBR7A/HHgHVjWZra3UAcMuBGxUaf
7CkG4pEB1l1ZL2IjDMQlA9wHq0J8DhmITwaEFk61ylMNxCkDTq37KTrztYF4
ZcBfnxcpt0gF4pYAY5bLYW83gfglYOrS+W5SX4E4JiBWd+5aephAPBOQcf39
6JgfBeKaAFHQoNxRKQLxTcAISVRg+0uBOCdgxa+3K2+3C8Q7I5ImiaJWdzcS
94yosnjbeI0zEv+M6Hlwe1zjQiNx0Ig5I3OcU3YaiYdGxJfqLkQkGYmLRuRv
me41ON9IfDRC3f9ohqXRSJw0YeLTEv+kribipQkbI3uVhjETcdOEO10Xh7kH
m4ifJjTdu9RavcVEHDVh0ILabYmJJuKpCUsdPI2LckzEVRN+TVqb4GY1EV/N
KAtIH/hWMBNnzejWKrtz2stMvDVj+gkf3+AgM3HXjLhxewq7bzATf834syov
pOS0mThshu1ec+3xLDPx2AwMDYoJqjETl81Y8+qkqpumC/4HDy/69Q==
             "], "alphas" -> CompressedData["
1:eJztlP9P1HUcx+9OCpMihDEyyySUMFP0cHhdB89SXFOhUJbd/EI7kpBFWZG3
MIiZVuBxiJOQ01YmBqLQbiLza2CwhF0o6DGKaBEcgrVWvd/vj+u2ILpfnutf
6If75fPaZ5/P+/369nw+YnN2bszV63S6HYFHQp5p/6pdAqb2ZOupQJzhup46
Yhe47+SG1lvvCFTf/tnY+q7A3Y6PktNLBb45uHlj/V4By3TGk21lAvevLOh1
Vgq8XB1hCf9YYENM29TKTwSGyuOnDScE/I47Ta80CVi33gnb3CrQUpPQ620T
2Bda/JqnW0C5vkpe4RXIOFeVF/pT4PyxBRbzLwLbe0v0nZrAmcHEhbU6ibti
31ztvleirrE4yTBHIv+5pyM/WChhS8pev8wosfrEgWN/p0pcKi5JHF4v4euP
t3utEoWh8oUbuRIvZn8YffOtwLkxp623VOLcktL0zgqJ2pLKjJMuiX73WGpR
vYRj0LRleYtE2ukJc0+7RJjn8741PRIFw125R76XUDHlNVfHJL57dSCj60+J
8lHz167JQJ5b9QVPzVS4ed4cfipKocP64HHfPIWoNVnZ44sUdluGvnSvUGjf
17z8GSjceDSspWatQmbmyCJ3lsL1/dazFdsUPut2Vi/OUzjbbF9S8YbC1RAx
3Vyk0Jk21VD1voJtb9wPSQ6F93x62+FDCo+nz5h76ajChCHF/2mdghbp+mvV
aQVd3PaEhjMKk9a36769oPBEmsHpvqIQvS4rclOXQsiVbTsuX1MYuKfM4/Mq
WGbvKeoZVPDuWnbRPqxgHr/cPzqm8EBcQ9TsXxWM8Hfo/1A42LEnsVUpNOUv
rV/sD+RNzynMnVS4/Xz+aI5Og98jLQtCNOwudHkaQzU8dsTep2Zp+GKivcoQ
Hoh9r68biNCQGSZMO6M0LH1p5NC1aA1GU3eliNHQXOizDs3RYPpNe8gxV4N3
U4xe/7AGZ4QrPmWehryyHxvxiAbLVMrxmfM1PJv1T2xtIM7vMyb/Hoi2wxfG
Z8X+987v/J/neR/vZz7mZz2sj/WyfvbD/tgv++c8OB/Oi/PjPDlfzpvz5z64
H+6L++M+uV/um/unHqgP6oX6oZ6oL+qN+qMeqU/qlfqlnqlv6p36px/oD/qF
/qGf6C/6jf6jH+lP+pX+pZ/pb/qd/icPyAfygvwgT8gX8ob8IY/IJ/KK/CLP
yDfyjvwjD8lH8pL8JE/JV/KW/CWPg3wO8jnI5yCfg3z+f/L5X8qM0jU=
             "], 
            "mins" -> {{
              1.0746369828526115`*^-18, {$CellContext`alpha -> 
                1.091127910540715}}, {
              6.411285020762707*^-19, {$CellContext`alpha -> 
                1.0912269063810083`}}, {
              5.244618916724748*^-18, {$CellContext`alpha -> 
                1.0915234044455822`}}, {
              1.2791837059883136`*^-17, {$CellContext`alpha -> 
                1.0920159418842588`}}, {
              2.1252085528205483`*^-17, {$CellContext`alpha -> 
                1.092702101463634}}, {
              2.872006155302248*^-17, {$CellContext`alpha -> 
                1.0935785417611341`}}, {
              3.378308098781551*^-17, {$CellContext`alpha -> 
                1.0946410386032863`}}, {
              3.572340890912347*^-17, {$CellContext`alpha -> 
                1.09588453659667}}, {
              3.453555684604021*^-17, {$CellContext`alpha -> 
                1.0973032095384416`}}, {
              3.0788180672017106`*^-17, {$CellContext`alpha -> 
                1.098890528324113}}, {
              2.5392927729625892`*^-17, {$CellContext`alpha -> 
                1.1006393348520371`}}, {
              1.9352945601687468`*^-17, {$CellContext`alpha -> 
                1.1025419203584679`}}, {
              1.355152464353952*^-17, {$CellContext`alpha -> 
                1.1045901066033803`}}, {
              8.61715432401974*^-18, {$CellContext`alpha -> 
                1.1067753283621382`}}, {
              4.873271492797969*^-18, {$CellContext`alpha -> 
                1.1090887157564964`}}, {
              2.361534302127346*^-18, {$CellContext`alpha -> 
                1.1115211750734213`}}, {
              9.126328548188112*^-19, {$CellContext`alpha -> 
                1.1140634668641922`}}, {
              2.385140877418204*^-19, {$CellContext`alpha -> 
                1.1167062802810108`}}, {
              2.3805215815933498`*^-20, {$CellContext`alpha -> 
                1.1194403027857514`}}, {
              1.1891512025055057`*^-21, {$CellContext`alpha -> 
                1.1222562845477677`}}, {
              4.964956703475688*^-21, {$CellContext`alpha -> 
                1.1251450970281494`}}, {
              2.487256915565544*^-21, {$CellContext`alpha -> 
                1.1280977854203809`}}, {
              1.068785512160652*^-19, {$CellContext`alpha -> 
                1.1311056147775183`}}, {
              5.756335752455846*^-19, {$CellContext`alpha -> 
                1.134160109800087}}, {
              1.7992480715568617`*^-18, {$CellContext`alpha -> 
                1.1372530883847605`}}, {
              4.2827198964076825`*^-18, {$CellContext`alpha -> 
                1.1403766891401268`}}, {
              8.621483124848369*^-18, {$CellContext`alpha -> 
                1.1435233931622821`}}, {
              1.547241748257313*^-17, {$CellContext`alpha -> 
                1.146686040430091}}, {
              2.5519853917901203`*^-17, {$CellContext`alpha -> 
                1.1498578412287912`}}, {
              3.943758532094245*^-17, {$CellContext`alpha -> 
                1.1530323830428608`}}, {
              5.784709521821993*^-17, {$CellContext`alpha -> 
                1.1562036333764587`}}, {
              8.127465984699156*^-17, {$CellContext`alpha -> 
                1.1593659389644537`}}, {
              1.1010865193027193`*^-16, {$CellContext`alpha -> 
                1.1625140218310204`}}, {
              1.4456127353313538`*^-16, {$CellContext`alpha -> 
                1.1656429726381718`}}, {
              1.8463792225477582`*^-16, {$CellContext`alpha -> 
                1.1687482417451942`}}, {
              2.3011518302333314`*^-16, {$CellContext`alpha -> 
                1.171825628373612}}, {
              2.8053283788404443`*^-16, {$CellContext`alpha -> 
                1.1748712682425573`}}, {
              3.3519829520146927`*^-16, {$CellContext`alpha -> 
                1.177881620007578}}, {
              3.9320587104381196`*^-16, {$CellContext`alpha -> 
                1.180853450803167}}, {
              4.534684409181828*^-16, {$CellContext`alpha -> 
                1.1837838211565577`}}, {
              5.147595035404811*^-16, {$CellContext`alpha -> 
                1.1866700695083259`}}, {
              5.757651385151813*^-16, {$CellContext`alpha -> 
                1.1895097965446808`}}, {
              6.351375141457119*^-16, {$CellContext`alpha -> 
                1.1923008495173701`}}, {
              6.915522696586612*^-16, {$CellContext`alpha -> 
                1.1950413067002477`}}, {
              7.4376088658166*^-16, {$CellContext`alpha -> 
                1.1977294621067969`}}, {
              7.906400548944168*^-16, {$CellContext`alpha -> 
                1.2003638105705066`}}, {
              8.312294439594159*^-16, {$CellContext`alpha -> 
                1.202943033269818}}, {
              8.647638880122092*^-16, {$CellContext`alpha -> 
                1.2054659837614745`}}, {
              8.906907585127804*^-16, {$CellContext`alpha -> 
                1.207931674570336}}, {
              9.08679334065523*^-16, {$CellContext`alpha -> 
                1.2103392643700093`}}, {
              9.186185362603451*^-16, {$CellContext`alpha -> 
                1.2126880457767937`}}, {
              9.206064260687346*^-16, {$CellContext`alpha -> 
                1.2149774337693602`}}, {
              9.149303063366846*^-16, {$CellContext`alpha -> 
                1.2172069547380473`}}, {
              9.020437269258632*^-16, {$CellContext`alpha -> 
                1.2193762361605855`}}, {
              8.82536703812118*^-16, {$CellContext`alpha -> 
                1.2214849968952068`}}, {
              8.571050588993031*^-16, {$CellContext`alpha -> 
                1.2235330380774196`}}, {
              8.265194947642825*^-16, {$CellContext`alpha -> 
                1.2255202346029912`}}, {
              7.915947920561351*^-16, {$CellContext`alpha -> 
                1.227446527176818}}, {
              5.130637164377629*^-22, {$CellContext`alpha -> 
                1.229311911754107}}, {
              5.023439294894284*^-22, {$CellContext`alpha -> 
                1.2311164453296328`}}, {
              4.877593340461882*^-22, {$CellContext`alpha -> 
                1.2328602204266295`}}, {
              4.697782570196436*^-22, {$CellContext`alpha -> 
                1.2345433719785985`}}, {
              4.487490636899938*^-22, {$CellContext`alpha -> 
                1.2361660686334563`}}, {
              4.254473066366351*^-22, {$CellContext`alpha -> 
                1.2377285076909184`}}, {
              4.002803747639498*^-22, {$CellContext`alpha -> 
                1.239230910433084}}, {
              3.7399144806254865`*^-22, {$CellContext`alpha -> 
                1.2406735178238497`}}, {
              3.4697956909818035`*^-22, {$CellContext`alpha -> 
                1.242056586553521}}, {
              3.1973280986354538`*^-22, {$CellContext`alpha -> 
                1.243380385405898}}, {
              2.927507217599516*^-22, {$CellContext`alpha -> 
                1.2446451919260593`}}, {
              2.6628381555945006`*^-22, {$CellContext`alpha -> 
                1.2458512893681015`}}, {
              2.406433464256094*^-22, {$CellContext`alpha -> 
                1.2469989639031704`}}, {
              2.1608467158955956`*^-22, {$CellContext`alpha -> 
                1.2480885020691899`}}, {
              1.9273456208114213`*^-22, {$CellContext`alpha -> 
                1.2491201884448004`}}, {
              1.708726662647632*^-22, {$CellContext`alpha -> 
                1.2500943035311085`}}, {
              1.5035980903455182`*^-22, {$CellContext`alpha -> 
                1.2510111218259095`}}, {
              1.3138204031587234`*^-22, {$CellContext`alpha -> 
                1.25187091007612}}, {
              1.1389375646963182`*^-22, {$CellContext`alpha -> 
                1.2526739256951573`}}, {
              9.792384703664176*^-23, {$CellContext`alpha -> 
                1.253420415333019}}, {
              8.334201907440832*^-23, {$CellContext`alpha -> 
                1.2541106135877638`}}, {
              7.022413085196567*^-23, {$CellContext`alpha -> 
                1.2547447418480324`}}, {
              5.837787660036326*^-23, {$CellContext`alpha -> 
                1.2553230072571284`}}, {
              4.780121867108288*^-23, {$CellContext`alpha -> 
                1.2558456017900537`}}, {
              3.841589534314221*^-23, {$CellContext`alpha -> 
                1.2563127014356994`}}, {
              3.0141643670998176`*^-23, {$CellContext`alpha -> 
                1.2567244654772036`}}, {
              2.2947684661778432`*^-23, {$CellContext`alpha -> 
                1.2570810358642361`}}, {
              1.675854890788239*^-23, {$CellContext`alpha -> 
                1.257382536671716}}, {
              1.1541506806856628`*^-23, {$CellContext`alpha -> 
                1.257629073640169}}, {
              7.292095016825401*^-24, {$CellContext`alpha -> 
                1.2578207337936211`}}, {
              3.999201270217728*^-24, {$CellContext`alpha -> 
                1.2579575851315938`}}, {
              1.6564500209310037`*^-24, {$CellContext`alpha -> 
                1.258039676392407}}, {
              3.168374314530663*^-25, {$CellContext`alpha -> 
                1.258067036885642}}, {
              1.6564500209310037`*^-24, {$CellContext`alpha -> 
                1.258039676392407}}, {
              3.999201270217728*^-24, {$CellContext`alpha -> 
                1.2579575851315938`}}, {
              7.292095016825401*^-24, {$CellContext`alpha -> 
                1.2578207337936211`}}, {
              1.1541506806856628`*^-23, {$CellContext`alpha -> 
                1.257629073640169}}, {
              1.675854890788239*^-23, {$CellContext`alpha -> 
                1.257382536671716}}, {
              2.2947684661778432`*^-23, {$CellContext`alpha -> 
                1.2570810358642361`}}, {
              3.0141643670998176`*^-23, {$CellContext`alpha -> 
                1.2567244654772036`}}, {
              3.841589534314221*^-23, {$CellContext`alpha -> 
                1.2563127014356994`}}, {
              4.780121867108288*^-23, {$CellContext`alpha -> 
                1.2558456017900537`}}, {
              5.837787660036326*^-23, {$CellContext`alpha -> 
                1.2553230072571284`}}, {
              7.022413085196567*^-23, {$CellContext`alpha -> 
                1.2547447418480324`}}, {
              8.334201907440832*^-23, {$CellContext`alpha -> 
                1.2541106135877638`}}, {
              9.792384703664176*^-23, {$CellContext`alpha -> 
                1.253420415333019}}, {
              1.1389375646963182`*^-22, {$CellContext`alpha -> 
                1.2526739256951573`}}, {
              1.3138204031587234`*^-22, {$CellContext`alpha -> 
                1.25187091007612}}, {
              1.5035980903455182`*^-22, {$CellContext`alpha -> 
                1.2510111218259095`}}, {
              1.708726662647632*^-22, {$CellContext`alpha -> 
                1.2500943035311085`}}, {
              1.9273456208114213`*^-22, {$CellContext`alpha -> 
                1.2491201884448004`}}, {
              2.1608467158955956`*^-22, {$CellContext`alpha -> 
                1.2480885020691899`}}, {
              2.406433464256094*^-22, {$CellContext`alpha -> 
                1.2469989639031704`}}, {
              2.6628381555945006`*^-22, {$CellContext`alpha -> 
                1.2458512893681015`}}, {
              2.927507217599516*^-22, {$CellContext`alpha -> 
                1.2446451919260593`}}, {
              3.1973280986354538`*^-22, {$CellContext`alpha -> 
                1.243380385405898}}, {
              3.4697956909818035`*^-22, {$CellContext`alpha -> 
                1.242056586553521}}, {
              3.7399144806254865`*^-22, {$CellContext`alpha -> 
                1.2406735178238497`}}, {
              4.002803747639498*^-22, {$CellContext`alpha -> 
                1.239230910433084}}, {
              4.254473066366351*^-22, {$CellContext`alpha -> 
                1.2377285076909184`}}, {
              4.487490636899938*^-22, {$CellContext`alpha -> 
                1.2361660686334563`}}, {
              4.697782570196436*^-22, {$CellContext`alpha -> 
                1.2345433719785985`}}, {
              4.877593340461882*^-22, {$CellContext`alpha -> 
                1.2328602204266295`}}, {
              5.023439294894284*^-22, {$CellContext`alpha -> 
                1.2311164453296328`}}, {
              5.130637164377629*^-22, {$CellContext`alpha -> 
                1.229311911754107}}, {
              7.915947920561351*^-16, {$CellContext`alpha -> 
                1.227446527176818}}, {
              8.265194947642825*^-16, {$CellContext`alpha -> 
                1.2255202346029912`}}, {
              8.571050588993031*^-16, {$CellContext`alpha -> 
                1.2235330380774196`}}, {
              8.82536703812118*^-16, {$CellContext`alpha -> 
                1.2214849968952068`}}, {
              9.020437269258632*^-16, {$CellContext`alpha -> 
                1.2193762361605855`}}, {
              9.149303063366846*^-16, {$CellContext`alpha -> 
                1.2172069547380473`}}, {
              9.206064260687346*^-16, {$CellContext`alpha -> 
                1.2149774337693602`}}, {
              9.186185362603451*^-16, {$CellContext`alpha -> 
                1.2126880457767937`}}, {
              9.08679334065523*^-16, {$CellContext`alpha -> 
                1.2103392643700093`}}, {
              8.906907585127804*^-16, {$CellContext`alpha -> 
                1.207931674570336}}, {
              8.647638880122092*^-16, {$CellContext`alpha -> 
                1.2054659837614745`}}, {
              8.312294439594159*^-16, {$CellContext`alpha -> 
                1.202943033269818}}, {
              7.906400548944168*^-16, {$CellContext`alpha -> 
                1.2003638105705066`}}, {
              7.4376088658166*^-16, {$CellContext`alpha -> 
                1.1977294621067969`}}, {
              6.915522696586612*^-16, {$CellContext`alpha -> 
                1.1950413067002477`}}, {
              6.351375141457119*^-16, {$CellContext`alpha -> 
                1.1923008495173701`}}, {
              5.757651385151813*^-16, {$CellContext`alpha -> 
                1.1895097965446808`}}, {
              5.147595035404811*^-16, {$CellContext`alpha -> 
                1.1866700695083259`}}, {
              4.534684409181828*^-16, {$CellContext`alpha -> 
                1.1837838211565577`}}, {
              3.9320587104381196`*^-16, {$CellContext`alpha -> 
                1.180853450803167}}, {
              3.3519829520146927`*^-16, {$CellContext`alpha -> 
                1.177881620007578}}, {
              2.8053283788404443`*^-16, {$CellContext`alpha -> 
                1.1748712682425573`}}, {
              2.3011518302333314`*^-16, {$CellContext`alpha -> 
                1.171825628373612}}, {
              1.8463792225477582`*^-16, {$CellContext`alpha -> 
                1.1687482417451942`}}, {
              1.4456127353313538`*^-16, {$CellContext`alpha -> 
                1.1656429726381718`}}, {
              1.1010865193027193`*^-16, {$CellContext`alpha -> 
                1.1625140218310204`}}, {
              8.127465984699156*^-17, {$CellContext`alpha -> 
                1.1593659389644537`}}, {
              5.784709521821993*^-17, {$CellContext`alpha -> 
                1.1562036333764587`}}, {
              3.943758532094245*^-17, {$CellContext`alpha -> 
                1.1530323830428608`}}, {
              2.5519853917901203`*^-17, {$CellContext`alpha -> 
                1.1498578412287912`}}, {
              1.547241748257313*^-17, {$CellContext`alpha -> 
                1.146686040430091}}, {
              8.621483124848369*^-18, {$CellContext`alpha -> 
                1.1435233931622821`}}, {
              4.2827198964076825`*^-18, {$CellContext`alpha -> 
                1.1403766891401268`}}, {
              1.7992480715568617`*^-18, {$CellContext`alpha -> 
                1.1372530883847605`}}, {
              5.756335752455846*^-19, {$CellContext`alpha -> 
                1.134160109800087}}, {
              1.068785512160652*^-19, {$CellContext`alpha -> 
                1.1311056147775183`}}, {
              2.487256915565544*^-21, {$CellContext`alpha -> 
                1.1280977854203809`}}, {
              4.964956703475688*^-21, {$CellContext`alpha -> 
                1.1251450970281494`}}, {
              1.1891512025055057`*^-21, {$CellContext`alpha -> 
                1.1222562845477677`}}, {
              2.3805215815933498`*^-20, {$CellContext`alpha -> 
                1.1194403027857514`}}, {
              2.385140877418204*^-19, {$CellContext`alpha -> 
                1.1167062802810108`}}, {
              9.126328548188112*^-19, {$CellContext`alpha -> 
                1.1140634668641922`}}, {
              2.361534302127346*^-18, {$CellContext`alpha -> 
                1.1115211750734213`}}, {
              4.873271492797969*^-18, {$CellContext`alpha -> 
                1.1090887157564964`}}, {
              8.61715432401974*^-18, {$CellContext`alpha -> 
                1.1067753283621382`}}, {
              1.355152464353952*^-17, {$CellContext`alpha -> 
                1.1045901066033803`}}, {
              1.9352945601687468`*^-17, {$CellContext`alpha -> 
                1.1025419203584679`}}, {
              2.5392927729625892`*^-17, {$CellContext`alpha -> 
                1.1006393348520371`}}, {
              3.0788180672017106`*^-17, {$CellContext`alpha -> 
                1.098890528324113}}, {
              3.453555684604021*^-17, {$CellContext`alpha -> 
                1.0973032095384416`}}, {
              3.572340890912347*^-17, {$CellContext`alpha -> 
                1.09588453659667}}, {
              3.378308098781551*^-17, {$CellContext`alpha -> 
                1.0946410386032863`}}, {
              2.872006155302248*^-17, {$CellContext`alpha -> 
                1.0935785417611341`}}, {
              2.1252085528205483`*^-17, {$CellContext`alpha -> 
                1.092702101463634}}, {
              1.2791837059883136`*^-17, {$CellContext`alpha -> 
                1.0920159418842588`}}, {
              5.244618916724748*^-18, {$CellContext`alpha -> 
                1.0915234044455822`}}, {
              6.411285020762707*^-19, {$CellContext`alpha -> 
                1.0912269063810083`}}, {
              1.0746369828526115`*^-18, {$CellContext`alpha -> 
                1.091127910540715}}, {
              6.411285020762707*^-19, {$CellContext`alpha -> 
                1.0912269063810083`}}, {
              5.244618916724748*^-18, {$CellContext`alpha -> 
                1.0915234044455822`}}, {
              1.2791837059883136`*^-17, {$CellContext`alpha -> 
                1.0920159418842588`}}, {
              2.1252085528205483`*^-17, {$CellContext`alpha -> 
                1.092702101463634}}, {
              2.872006155302248*^-17, {$CellContext`alpha -> 
                1.0935785417611341`}}, {
              3.378308098781551*^-17, {$CellContext`alpha -> 
                1.0946410386032863`}}, {
              3.572340890912347*^-17, {$CellContext`alpha -> 
                1.09588453659667}}, {
              3.453555684604021*^-17, {$CellContext`alpha -> 
                1.0973032095384416`}}, {
              3.0788180672017106`*^-17, {$CellContext`alpha -> 
                1.098890528324113}}, {
              2.5392927729625892`*^-17, {$CellContext`alpha -> 
                1.1006393348520371`}}, {
              1.9352945601687468`*^-17, {$CellContext`alpha -> 
                1.1025419203584679`}}, {
              1.355152464353952*^-17, {$CellContext`alpha -> 
                1.1045901066033803`}}, {
              8.61715432401974*^-18, {$CellContext`alpha -> 
                1.1067753283621382`}}, {
              4.873271492797969*^-18, {$CellContext`alpha -> 
                1.1090887157564964`}}, {
              2.361534302127346*^-18, {$CellContext`alpha -> 
                1.1115211750734213`}}, {
              9.126328548188112*^-19, {$CellContext`alpha -> 
                1.1140634668641922`}}, {
              2.385140877418204*^-19, {$CellContext`alpha -> 
                1.1167062802810108`}}, {
              2.3805215815933498`*^-20, {$CellContext`alpha -> 
                1.1194403027857514`}}, {
              1.1891512025055057`*^-21, {$CellContext`alpha -> 
                1.1222562845477677`}}, {
              4.964956703475688*^-21, {$CellContext`alpha -> 
                1.1251450970281494`}}, {
              2.487256915565544*^-21, {$CellContext`alpha -> 
                1.1280977854203809`}}, {
              1.068785512160652*^-19, {$CellContext`alpha -> 
                1.1311056147775183`}}, {
              5.756335752455846*^-19, {$CellContext`alpha -> 
                1.134160109800087}}, {
              1.7992480715568617`*^-18, {$CellContext`alpha -> 
                1.1372530883847605`}}, {
              4.2827198964076825`*^-18, {$CellContext`alpha -> 
                1.1403766891401268`}}, {
              8.621483124848369*^-18, {$CellContext`alpha -> 
                1.1435233931622821`}}, {
              1.547241748257313*^-17, {$CellContext`alpha -> 
                1.146686040430091}}, {
              2.5519853917901203`*^-17, {$CellContext`alpha -> 
                1.1498578412287912`}}, {
              3.943758532094245*^-17, {$CellContext`alpha -> 
                1.1530323830428608`}}, {
              5.784709521821993*^-17, {$CellContext`alpha -> 
                1.1562036333764587`}}, {
              8.127465984699156*^-17, {$CellContext`alpha -> 
                1.1593659389644537`}}, {
              1.1010865193027193`*^-16, {$CellContext`alpha -> 
                1.1625140218310204`}}, {
              1.4456127353313538`*^-16, {$CellContext`alpha -> 
                1.1656429726381718`}}, {
              1.8463792225477582`*^-16, {$CellContext`alpha -> 
                1.1687482417451942`}}, {
              2.3011518302333314`*^-16, {$CellContext`alpha -> 
                1.171825628373612}}, {
              2.8053283788404443`*^-16, {$CellContext`alpha -> 
                1.1748712682425573`}}, {
              3.3519829520146927`*^-16, {$CellContext`alpha -> 
                1.177881620007578}}, {
              3.9320587104381196`*^-16, {$CellContext`alpha -> 
                1.180853450803167}}, {
              4.534684409181828*^-16, {$CellContext`alpha -> 
                1.1837838211565577`}}, {
              5.147595035404811*^-16, {$CellContext`alpha -> 
                1.1866700695083259`}}, {
              5.757651385151813*^-16, {$CellContext`alpha -> 
                1.1895097965446808`}}, {
              6.351375141457119*^-16, {$CellContext`alpha -> 
                1.1923008495173701`}}, {
              6.915522696586612*^-16, {$CellContext`alpha -> 
                1.1950413067002477`}}, {
              7.4376088658166*^-16, {$CellContext`alpha -> 
                1.1977294621067969`}}, {
              7.906400548944168*^-16, {$CellContext`alpha -> 
                1.2003638105705066`}}, {
              8.312294439594159*^-16, {$CellContext`alpha -> 
                1.202943033269818}}, {
              8.647638880122092*^-16, {$CellContext`alpha -> 
                1.2054659837614745`}}, {
              8.906907585127804*^-16, {$CellContext`alpha -> 
                1.207931674570336}}, {
              9.08679334065523*^-16, {$CellContext`alpha -> 
                1.2103392643700093`}}, {
              9.186185362603451*^-16, {$CellContext`alpha -> 
                1.2126880457767937`}}, {
              9.206064260687346*^-16, {$CellContext`alpha -> 
                1.2149774337693602`}}, {
              9.149303063366846*^-16, {$CellContext`alpha -> 
                1.2172069547380473`}}, {
              9.020437269258632*^-16, {$CellContext`alpha -> 
                1.2193762361605855`}}, {
              8.82536703812118*^-16, {$CellContext`alpha -> 
                1.2214849968952068`}}, {
              8.571050588993031*^-16, {$CellContext`alpha -> 
                1.2235330380774196`}}, {
              8.265194947642825*^-16, {$CellContext`alpha -> 
                1.2255202346029912`}}, {
              7.915947920561351*^-16, {$CellContext`alpha -> 
                1.227446527176818}}, {
              5.130637164377629*^-22, {$CellContext`alpha -> 
                1.229311911754107}}, {
              5.023439294894284*^-22, {$CellContext`alpha -> 
                1.2311164453296328`}}, {
              4.877593340461882*^-22, {$CellContext`alpha -> 
                1.2328602204266295`}}, {
              4.697782570196436*^-22, {$CellContext`alpha -> 
                1.2345433719785985`}}, {
              4.487490636899938*^-22, {$CellContext`alpha -> 
                1.2361660686334563`}}, {
              4.254473066366351*^-22, {$CellContext`alpha -> 
                1.2377285076909184`}}, {
              4.002803747639498*^-22, {$CellContext`alpha -> 
                1.239230910433084}}, {
              3.7399144806254865`*^-22, {$CellContext`alpha -> 
                1.2406735178238497`}}, {
              3.4697956909818035`*^-22, {$CellContext`alpha -> 
                1.242056586553521}}, {
              3.1973280986354538`*^-22, {$CellContext`alpha -> 
                1.243380385405898}}, {
              2.927507217599516*^-22, {$CellContext`alpha -> 
                1.2446451919260593`}}, {
              2.6628381555945006`*^-22, {$CellContext`alpha -> 
                1.2458512893681015`}}, {
              2.406433464256094*^-22, {$CellContext`alpha -> 
                1.2469989639031704`}}, {
              2.1608467158955956`*^-22, {$CellContext`alpha -> 
                1.2480885020691899`}}, {
              1.9273456208114213`*^-22, {$CellContext`alpha -> 
                1.2491201884448004`}}, {
              1.708726662647632*^-22, {$CellContext`alpha -> 
                1.2500943035311085`}}, {
              1.5035980903455182`*^-22, {$CellContext`alpha -> 
                1.2510111218259095`}}, {
              1.3138204031587234`*^-22, {$CellContext`alpha -> 
                1.25187091007612}}, {
              1.1389375646963182`*^-22, {$CellContext`alpha -> 
                1.2526739256951573`}}, {
              9.792384703664176*^-23, {$CellContext`alpha -> 
                1.253420415333019}}, {
              8.334201907440832*^-23, {$CellContext`alpha -> 
                1.2541106135877638`}}, {
              7.022413085196567*^-23, {$CellContext`alpha -> 
                1.2547447418480324`}}, {
              5.837787660036326*^-23, {$CellContext`alpha -> 
                1.2553230072571284`}}, {
              4.780121867108288*^-23, {$CellContext`alpha -> 
                1.2558456017900537`}}, {
              3.841589534314221*^-23, {$CellContext`alpha -> 
                1.2563127014356994`}}, {
              3.0141643670998176`*^-23, {$CellContext`alpha -> 
                1.2567244654772036`}}, {
              2.2947684661778432`*^-23, {$CellContext`alpha -> 
                1.2570810358642361`}}, {
              1.675854890788239*^-23, {$CellContext`alpha -> 
                1.257382536671716}}, {
              1.1541506806856628`*^-23, {$CellContext`alpha -> 
                1.257629073640169}}, {
              7.292095016825401*^-24, {$CellContext`alpha -> 
                1.2578207337936211`}}, {
              3.999201270217728*^-24, {$CellContext`alpha -> 
                1.2579575851315938`}}, {
              1.6564500209310037`*^-24, {$CellContext`alpha -> 
                1.258039676392407}}, {
              3.168374314530663*^-25, {$CellContext`alpha -> 
                1.258067036885642}}, {
              1.6564500209310037`*^-24, {$CellContext`alpha -> 
                1.258039676392407}}, {
              3.999201270217728*^-24, {$CellContext`alpha -> 
                1.2579575851315938`}}, {
              7.292095016825401*^-24, {$CellContext`alpha -> 
                1.2578207337936211`}}, {
              1.1541506806856628`*^-23, {$CellContext`alpha -> 
                1.257629073640169}}, {
              1.675854890788239*^-23, {$CellContext`alpha -> 
                1.257382536671716}}, {
              2.2947684661778432`*^-23, {$CellContext`alpha -> 
                1.2570810358642361`}}, {
              3.0141643670998176`*^-23, {$CellContext`alpha -> 
                1.2567244654772036`}}, {
              3.841589534314221*^-23, {$CellContext`alpha -> 
                1.2563127014356994`}}, {
              4.780121867108288*^-23, {$CellContext`alpha -> 
                1.2558456017900537`}}, {
              5.837787660036326*^-23, {$CellContext`alpha -> 
                1.2553230072571284`}}, {
              7.022413085196567*^-23, {$CellContext`alpha -> 
                1.2547447418480324`}}, {
              8.334201907440832*^-23, {$CellContext`alpha -> 
                1.2541106135877638`}}, {
              9.792384703664176*^-23, {$CellContext`alpha -> 
                1.253420415333019}}, {
              1.1389375646963182`*^-22, {$CellContext`alpha -> 
                1.2526739256951573`}}, {
              1.3138204031587234`*^-22, {$CellContext`alpha -> 
                1.25187091007612}}, {
              1.5035980903455182`*^-22, {$CellContext`alpha -> 
                1.2510111218259095`}}, {
              1.708726662647632*^-22, {$CellContext`alpha -> 
                1.2500943035311085`}}, {
              1.9273456208114213`*^-22, {$CellContext`alpha -> 
                1.2491201884448004`}}, {
              2.1608467158955956`*^-22, {$CellContext`alpha -> 
                1.2480885020691899`}}, {
              2.406433464256094*^-22, {$CellContext`alpha -> 
                1.2469989639031704`}}, {
              2.6628381555945006`*^-22, {$CellContext`alpha -> 
                1.2458512893681015`}}, {
              2.927507217599516*^-22, {$CellContext`alpha -> 
                1.2446451919260593`}}, {
              3.1973280986354538`*^-22, {$CellContext`alpha -> 
                1.243380385405898}}, {
              3.4697956909818035`*^-22, {$CellContext`alpha -> 
                1.242056586553521}}, {
              3.7399144806254865`*^-22, {$CellContext`alpha -> 
                1.2406735178238497`}}, {
              4.002803747639498*^-22, {$CellContext`alpha -> 
                1.239230910433084}}, {
              4.254473066366351*^-22, {$CellContext`alpha -> 
                1.2377285076909184`}}, {
              4.487490636899938*^-22, {$CellContext`alpha -> 
                1.2361660686334563`}}, {
              4.697782570196436*^-22, {$CellContext`alpha -> 
                1.2345433719785985`}}, {
              4.877593340461882*^-22, {$CellContext`alpha -> 
                1.2328602204266295`}}, {
              5.023439294894284*^-22, {$CellContext`alpha -> 
                1.2311164453296328`}}, {
              5.130637164377629*^-22, {$CellContext`alpha -> 
                1.229311911754107}}, {
              7.915947920561351*^-16, {$CellContext`alpha -> 
                1.227446527176818}}, {
              8.265194947642825*^-16, {$CellContext`alpha -> 
                1.2255202346029912`}}, {
              8.571050588993031*^-16, {$CellContext`alpha -> 
                1.2235330380774196`}}, {
              8.82536703812118*^-16, {$CellContext`alpha -> 
                1.2214849968952068`}}, {
              9.020437269258632*^-16, {$CellContext`alpha -> 
                1.2193762361605855`}}, {
              9.149303063366846*^-16, {$CellContext`alpha -> 
                1.2172069547380473`}}, {
              9.206064260687346*^-16, {$CellContext`alpha -> 
                1.2149774337693602`}}, {
              9.186185362603451*^-16, {$CellContext`alpha -> 
                1.2126880457767937`}}, {
              9.08679334065523*^-16, {$CellContext`alpha -> 
                1.2103392643700093`}}, {
              8.906907585127804*^-16, {$CellContext`alpha -> 
                1.207931674570336}}, {
              8.647638880122092*^-16, {$CellContext`alpha -> 
                1.2054659837614745`}}, {
              8.312294439594159*^-16, {$CellContext`alpha -> 
                1.202943033269818}}, {
              7.906400548944168*^-16, {$CellContext`alpha -> 
                1.2003638105705066`}}, {
              7.4376088658166*^-16, {$CellContext`alpha -> 
                1.1977294621067969`}}, {
              6.915522696586612*^-16, {$CellContext`alpha -> 
                1.1950413067002477`}}, {
              6.351375141457119*^-16, {$CellContext`alpha -> 
                1.1923008495173701`}}, {
              5.757651385151813*^-16, {$CellContext`alpha -> 
                1.1895097965446808`}}, {
              5.147595035404811*^-16, {$CellContext`alpha -> 
                1.1866700695083259`}}, {
              4.534684409181828*^-16, {$CellContext`alpha -> 
                1.1837838211565577`}}, {
              3.9320587104381196`*^-16, {$CellContext`alpha -> 
                1.180853450803167}}, {
              3.3519829520146927`*^-16, {$CellContext`alpha -> 
                1.177881620007578}}, {
              2.8053283788404443`*^-16, {$CellContext`alpha -> 
                1.1748712682425573`}}, {
              2.3011518302333314`*^-16, {$CellContext`alpha -> 
                1.171825628373612}}, {
              1.8463792225477582`*^-16, {$CellContext`alpha -> 
                1.1687482417451942`}}, {
              1.4456127353313538`*^-16, {$CellContext`alpha -> 
                1.1656429726381718`}}, {
              1.1010865193027193`*^-16, {$CellContext`alpha -> 
                1.1625140218310204`}}, {
              8.127465984699156*^-17, {$CellContext`alpha -> 
                1.1593659389644537`}}, {
              5.784709521821993*^-17, {$CellContext`alpha -> 
                1.1562036333764587`}}, {
              3.943758532094245*^-17, {$CellContext`alpha -> 
                1.1530323830428608`}}, {
              2.5519853917901203`*^-17, {$CellContext`alpha -> 
                1.1498578412287912`}}, {
              1.547241748257313*^-17, {$CellContext`alpha -> 
                1.146686040430091}}, {
              8.621483124848369*^-18, {$CellContext`alpha -> 
                1.1435233931622821`}}, {
              4.2827198964076825`*^-18, {$CellContext`alpha -> 
                1.1403766891401268`}}, {
              1.7992480715568617`*^-18, {$CellContext`alpha -> 
                1.1372530883847605`}}, {
              5.756335752455846*^-19, {$CellContext`alpha -> 
                1.134160109800087}}, {
              1.068785512160652*^-19, {$CellContext`alpha -> 
                1.1311056147775183`}}, {
              2.487256915565544*^-21, {$CellContext`alpha -> 
                1.1280977854203809`}}, {
              4.964956703475688*^-21, {$CellContext`alpha -> 
                1.1251450970281494`}}, {
              1.1891512025055057`*^-21, {$CellContext`alpha -> 
                1.1222562845477677`}}, {
              2.3805215815933498`*^-20, {$CellContext`alpha -> 
                1.1194403027857514`}}, {
              2.385140877418204*^-19, {$CellContext`alpha -> 
                1.1167062802810108`}}, {
              9.126328548188112*^-19, {$CellContext`alpha -> 
                1.1140634668641922`}}, {
              2.361534302127346*^-18, {$CellContext`alpha -> 
                1.1115211750734213`}}, {
              4.873271492797969*^-18, {$CellContext`alpha -> 
                1.1090887157564964`}}, {
              8.61715432401974*^-18, {$CellContext`alpha -> 
                1.1067753283621382`}}, {
              1.355152464353952*^-17, {$CellContext`alpha -> 
                1.1045901066033803`}}, {
              1.9352945601687468`*^-17, {$CellContext`alpha -> 
                1.1025419203584679`}}, {
              2.5392927729625892`*^-17, {$CellContext`alpha -> 
                1.1006393348520371`}}, {
              3.0788180672017106`*^-17, {$CellContext`alpha -> 
                1.098890528324113}}, {
              3.453555684604021*^-17, {$CellContext`alpha -> 
                1.0973032095384416`}}, {
              3.572340890912347*^-17, {$CellContext`alpha -> 
                1.09588453659667}}, {
              3.378308098781551*^-17, {$CellContext`alpha -> 
                1.0946410386032863`}}, {
              2.872006155302248*^-17, {$CellContext`alpha -> 
                1.0935785417611341`}}, {
              2.1252085528205483`*^-17, {$CellContext`alpha -> 
                1.092702101463634}}, {
              1.2791837059883136`*^-17, {$CellContext`alpha -> 
                1.0920159418842588`}}, {
              5.244618916724748*^-18, {$CellContext`alpha -> 
                1.0915234044455822`}}, {
              6.411285020762707*^-19, {$CellContext`alpha -> 
                1.0912269063810083`}}}}, $CellContext`i$$, {}, \
$CellContext`getOctVtx0, 
           Function[$CellContext`x, 0], $CellContext`drSubhex -> 
           True, $CellContext`plotAll -> 
           False, $CellContext`vtx -> {1, 2, 3}], ImageSize -> Medium]; 
       Grid[{{$CellContext`poly$587960, $CellContext`cs$587960}}]), 
      "Specifications" :> {{$CellContext`i$$, 1, 360, 1, Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{780., {224., 230.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({
      Attributes[$CellContext`cs$587960] = {Temporary}, 
       Attributes[$CellContext`coss$587960] = {
        Temporary}, $CellContext`coss$587960 = CompressedData["
1:eJylnWWUVde2rXECBNcAwaWQYMFJcA8QIAR3dwtO4RIguLtDcAIULhMLFqTQ
4NTZpRsLTgWpvL3m6j3tvX5vteLe9+O0ceZpnKTYtdZcc3z7W31kb9+nYae4
sWLFSuD7T9fYsWI5/73NsQ4r9rf2mKhq+bfHPxtmOvV/mbTkc6/pPXfTvKRt
PWbNkrQZLywLM7/mSl5k0jOvaXzcMyZhR48JSx339Gf9w0z94C9DRz71Gk/y
9RNXdfeYwy1Tz7lWLcx8dvVChkyPvCZPtYKvL//kMSN+XLez7hdhZkbTYj+0
DvOapk1G9/lllMdc+ebmqNmPQ02J3UP21g7ymrddfkx/eJrHtJ32RdXjJtR8
U7tInOCbXnOqeb4zDZd7TLw88z5+mB1q5h394uf8gV5zvmbVFiV2eMySFVOy
d+gcahb3HF0o9ymv2dHq+cvapzymxPnlLdOWDTUVX2bv/+cB389/Ln/Dwfc8
Jlen7xoWTxZqdtzc0Kz6Nq+5/vJBvqVvPObbJTNbBnlCTMfSZtDglV6TbMk7
/0Upg82qY/HqltkXYsL6maC+s7zGv22jN3ULBRtTo16R1tNDTNfUiYqUGeM1
P2eMqLKgTrA5teFDml6dQsy3+2MN/bOP18z7Y3vvhj2DzdclFtwY+22Iyfru
WPUfWnlN4UIXC7WcFmxWZ5n/5EC6EJP89JR5AbW8JmexP8vO2h5sbi65VrXw
82ATGhJ+Pm4Jrxl2ofKsi1eCzcYnwWkizweb/I037a+V1WveH6x38PmbYHMi
0ejfC2wKNn4btv484zOvaZjk/Ge3MoWYZ1kqXb8/Kdi8yzP44P1nEabmwSkn
O1QKMaXyjj2ds1uwGfP37gKVbkaY3Tert+vfJcRUqvRjhiTfBZvG6ba8O3ok
wkz+Os+KsGkhZlnZKiXX+P7e7YJ/ntF1bYT5OOj9xjUBISbyjf+YyNTBpnru
PTMqT44wu1atLjL9TogZ2C51/bTvPSbtpq9vNusVYYotCh44NU6o2VLz8JvY
IR6T7nrooP31I8yM1M1bTMwXaibt3nj95EWPCfTEWtvz6wgTtPdp5071Q83s
FTe7tj/oMd52Yw+OTBth9uwbcCLN4FDTIKh/i3sbPabmx99Lvn8Tbho9iv3t
mGWhpv/ApctKLvaYrN+VXf/kT9//Xnx+mUUnQs3WZxX9e031mIrhZTe32xdu
Th1ava2ON9TkeND2wKjRHnN8S5oX7ReGm7JD3qWelizMpOnbZ3O3QR4Tq3fp
gh8Hh5sEv21pVPfrMDO+QrN6eXp7zK1UKxN/0yTcPMxZ8ciYJmFmT78/u27v
4jGvpnYrXaBkuLnR4sDTrMPDzP3QQ6s/tveYxEs2/XgjTbhp2/vqsSzLw0yW
oNcrP/PdZxXvjnpR82WYyZ9j87eDjoaZskEfsp723ZfNKzebMv1ymKldvNao
rJ4wc6/8rKSF23jMypETRu3cHmaePs77a5q44WbFTxNWlWjnMQ8Xfkx3dFqY
ufpV1O/1c4ab/P7jBl7y3a/3B/UbcLxHmEkQ8erspcrhZv3mrUuedfOYNwHz
5p+sFWbeDu3Rc3q7cDOucKKAqX095s61nT9czhtmgoM6Z5syKtx0vLgu1oIh
HrO9+8DGL+OHmaAnR2MfWxpuul8dPiTOWI8puCoqY4mQUHPpZJ7fi+4PNwtO
f7x5zPc5v8xS/PHK46Fm8oVnG+5cCzeb5rXZc3qhx6xPWe8/FVeFmtH3bnU+
8le4WZtg4ZQE6z3mUPCqO1lGh5qVWxfkuZ0owiypkOtE3wCP2RPx6/iqbUJN
naU/9CucM8KUzrTgQuQJjzmVoWydg+VDzeBSsfKYchGmxNN/csy65jHZzyTq
MjVLqMkff2LvKT9EmJ6zSjQsGOYx9bLVvnA0KsSM6nl09+zuEWbe0NSJDkd6
zBexp5Vp9yDEfOhZefmt0REmoPzezCU/DzYVr13KO+io7758eevvtvMjTNbv
L8ycki3YtDq7+1rC1SEmdqwzx/JvjjAh694v21oi2Cx/8PibLONDzINRa5KX
MRFmae2he2f77qOH6Q9mPtY5xMy/tT/N9CsR5kyrzr981T7YLBzz4snbWiFm
0rljmQuGRpjyz8Mz9B8abJ7lPPD07FchJn3g+OFp30aY84/GLGw0K9jcm5Mj
fflUIcav+sGZdXz398nSyWed3RhsLpfJlK3F22DTacDwY1czeM2AVqOv/348
2DTJ+nBM3nvBZmdIjQFb/bzmXsnVE8vfDTZL4/cfsPFEsEl1f1zSu6W8Zmrf
Xmny+faPhAWn/xXm2z+OL672uF11r0kz2lt+eIoQ812dMZtDZwebf6qO7FKp
kdfkrr01XYECISag3cDsm4cHm9cV+v7h3863X75O8LFQ9RDjDUk09ZtOwebM
/p5N0vX2miJnrq4Z0S7ENCz7NHz598Fm6/vL5VIM85rUrVMkTTYixPyae+Kr
G2WDzbZ2VRf2nOA1Idf9pvy5MMQULTi/uDdPsLnTKPOwr2Z6TfmsKQ5e9u03
fuGvn97y7Tcnk8e702ix12R9lmvaq8AQk6B19cJbYwebua2OrghZ4/vzfR+W
Kf0kxCRbvOlU52ceUzs864L7W7xmW+7F1eYlCjVZDo2ukzjIY1bETjq06m6v
OVxm7oh4eULNgDdfZF0S6Lvvqx8JTX/Yay7s3/lmZOVQcyi0T8fMxz1m0Pw4
nZqf9Jp8KccniWodagJuX088y3edVhu2rlPSP7xmyZy+zYcPDzWNjq09+/5X
j7mcxPtNscu+z3PexRPPFoSaA12DsrdZ6jEDXqfKc+6G1wR8HdGlaUCoWRj/
euvDs3z33zeJK9+443tObny9dktgqHkfsnl+hkm++/tm3AVNfM/JfVuTpY3w
PTcPNH6zqb/vOfp5zW9SfB/iNd8USjs1fqIwU/7FV7UuDPbto7MPjTgc7vV9
HkvSxsodZor1yvcoXz+P6dgs39w1D71me/CpF1cqhplUDSb8ObmHx2w+sPhx
7Cdek+twsYVDW4aZzS//yf60s8e0Sekf75bvOZ847+XNfw0OMyULntncpIPH
FNve/9t8vnPBsJMX4xSdE2Z6NDyS87RvP+sXXvveC9//Pj9q8Ioy28LM2QK/
JvjWt28VCn5ozxd+Q7Pb80ahUfXt+YN/PqRVmkmzgsNMw4Luny+Of/61EyN/
vfXRt381cv/5/HkOlu+2/Xb6cDOqsPvz8Oe/Xn9Hx1lFw03Ov92fn3/fpdUT
bX1XO9w0aOb+ffn5FJrxcWrqjuHm+BD380mCz/PDkn9y3/IPN3NiF7Kfpxef
/8LygwJqzgs33bq7nz9/X5Fdrk5rs9W3j350f1/98fsdmGl7lky/h5sBOd3f
L6+Hn5uERwy5G26GTHWvhxq4fuZuODlm0MtwM/iRe/0MxvX2xec5Z6ZMHGG2
JLlhrzden3nM8nM1skWYZFn62utzOa7n+5NOvk5XMsJMLZnRXs91cf3XSljN
4/9dhKkfb4y9/nm/7BqRv8fgthHmxkP3fuH9VW5pigHxBkaYdXvd++s27seQ
na3Cs/ue94G13tj7cQvu30GH/QMuLI0wXy50798tuN+9u9JfjP9bhPEudu93
7g8Pf27gd+Z4hPmwz90fXmE/+bPMP3tSXff983smtvtJFPafWP0e9AgO850D
Xrj7z1HsV+kTBhYvHRlh0oS5+1Vq7G/xomK9S5bIa1JcdPc37oeRbXIt7fSF
1/TZ7u6H3D+Tzl/8okw+r6kS6O6febDffn9l8dnJpX3//ufufpsB+/Psb5oE
NazhO2/Vz2n358nYz+tvzhw++0ff+TXE3c8XYP9PdrHXiBodvGZmtZd2/+fz
ovit8cV69/Wd564MzOY8L/h8eXZxz9B4I7xmgv+Ris7zJSWeR83WJt6bcLLv
77dk0U3neRSF51eyt3O+HjjXa9ZfPFrAeX7xedd8fPiXtVf4zsenJ3zrPO/4
fHywK8ekcRt9+3f6aped5+NQPE8Lj33ZKcsu33WXN3YP53nK52+OU6unpD/k
NfVi+9V3nr98Xn9dLeevPXzX6Un/iZOc5zWf77vm+dVMf95rbrTq8cB5vvM8
UK9HrWvprvqu03sfQpzzQCDOD/5Li07pfMtrJr48/pdzfniA80alyIiRcR54
zej5XbM4540QnE++Cym+NCzYa4JS7mnmnE94nnm7O9OKZBFek6DOqcbOeeYz
nH8OXZyVbpCvP7m8b8gi5/zD89LU3c3aZ/DtKyf7Zh/snJee4Hz1YXf2nc/+
8pocG4d84ZyveB5rEPkw3jvf/vT52HNjnPMYz29tp572K+zb51Zd7TLVOb+1
wXkvbEzUgSm+P9++ftNXznmP58Px99f7JfT981v8XbeJcz7keXJuovPblz/2
7X9jb5VxzpM8f2ZIX6Tdd16vaRt8P4lz/uR51e+r4zkShnpNpgc1v3LOqzzf
jo37n51/+D63ss//tufbxjgPL/Ubt2W273Pe9nOkPQ/z/Hy0SNupP17xPU+S
XbPnZ563L+QrtTfpOa/pGVihlHPevofz+cPR348JOOo14ysH2fP5dJznG95p
UKrKHq/562x1e54vjvN/khTz/XZt8vV7a9MPds7/7BfKN4qz6+Myr0mX5Ufb
L3xAfzFz/rz6mX37zbST52x/wX4ke+Cu9Z/5+q5Dr2fbfoT9y4kp1Rcc8t1H
BZf8ZvsX9jsZ7x3+oVgb3326co/td35AfzTZ/02/jnWcfnKQ7Y8+op8q4xcr
bj3f/X6nkttPDUf/lWBcwOaHOXz7Rtwttv/KhX5t8YDYpuTnvufDnce2X2N/
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
bfdR9Tfqx29u9131N5bVmGj3aeUbwd9ttvu6+hsNjyfaZTm38I22t732uaH+
xj+BjexzRv2Ng8cf2eeS+htNuhr7HFN/I2pB0oPOc0/9jbdB5+xzUv2NyIpB
9rmqfKPpvgT2Oaz+xo0fCtrntvKNqanr2+e8+hvJHpxY7pwL1N943OP3JfZ7
EuEbeZa1tecO5Rspu86Y7JxT1N8otGfqVedco/5GxcQNajjnIOUbfYOKrHfO
TepvXL4xb7JzzlJ/o9X68x2dc5n6G2+veSY65zj1N95enpHZOfepv3E1KHcx
55yo/salKz/vds6V6m+EZco+xDmHKt/4rcb9Is65Vf2Nbf3cc676G/Nqu+di
9TcS3mxsz9Hqbwzr7p671d8YUsA9pyvfqPQypz3Xq79xaobbB6i/8WDBJds3
qL/RJbbbZ6i/MehclO1L1N+o8IXbx6i/Mbm62/eov3G7gdsnqb8xrJbbV6m/
MaGE24epvxE3o9u3qb+R4teqts9Tf6NLQbcvVH/jaGe3j1R/I+2+HLbvVH+j
eDO3T1V/I35St69VvvH5jW22D1Z/435et29WfyNePLfPVn+jYBe3L1d/o1Fb
t49Xf+PVl27fr/7G9EIuJ1B/wy+nyxXU38ix3eUQyjd61Xe5hfobxX9yq/ob
95+5/z/1N+Jsd/896m/cTOT+XOpvFF3o/j3U34ja4/691d/wy+d+TupvxH2R
xn6u6m8EdHN/D+pvTGnl/t7U38gYFG5/z+pvbC3jXhfqb4wq4l5H6m80XT/O
XnfKN9rVcK9T9TeemTn2ulZ/Y9PaRfY+UH+jToTX3jfqb+xs595n6m/MmJLc
3pfqb8ws597H6m+sPpLc3vfqb9TK5e4T6m/0quvuK+pvrFmxxe5D6m+MvBph
9y31N54f72n3OfU3sk1eZfdF9TcO/zbK7qPqb2Sfnszuu+pvtK7q7tPqbySr
5+7ryjeemk72OaD+xt2flwc4zw31N/KcL7HEec6ovzHuZrbpznNJ/Y1Ug/0y
Os8x9TcudVufwHnuqb+x9eGT753npPobj18HZXOeq+pvZF645g/nOaz+RqOu
rY85z231N4b9FHuy85xXf+Nd8b8DnHOB+htPrp/+0zlHqL8R+efAwc65Q/2N
ZEsv/jPfd05Rf2Pcw9a7nHON+hu1r31lz0Hqb+SIym/PTepvzN1f356z1N8o
W9vfnsvU37jVIW425xyn/kaVVqlXOec+9TdanXtsz4nqb2wumbabc65Uf2PI
xJX2HKr+xuQsh+y5Vf2N+qW223Ou+hsl1k+z52L1N4IOh9hztPobrUcF2HO3
+hsln6bsZs/p4m/0XHfLnuvV30jeIdj2AepvjD9e2PYN6m+UrD7T9hnqb2xY
Wc/2Jco3VjdvbvsY9TcSvHb7HvU3zr6sYPsk9Tc2/DTK9lXqb4xeEmb7MPU3
Lnx7z/Zt6m8Uqvyr7fPU36ieeZftC9XfeJold1qnj1R/Y9XA8bbvVH+jSrxa
tk9Vf6N2e4/ta9XfKPPlRtsHq79x82b8Vk7frP5GrO5vbZ+t/saRinGjnL5c
/Y16T8fZPl79jdOTy4x2+n71NxJXiLScQP2NZ1ENLVdQfyP7jwUsh1B/wzMy
p+UW6m+0Fb5Bf2Mo+Ib6GxXBN9Tf6A6+of6G8g36G37gG+pvLAPfUH+jBviG
+htB4Bvqb7wD31B/46LwDfobKcA31N+oAb6h/obyDfobu8A31N84LHyD/kZI
DHxD/Y0VwjfobzwQvkF/Yx/4hvobMfEN9TdWfSLfoL8RAL6h/sYT8A31N6YK
36C/MU34Bv2NxsI36G8sj4FvqL9R/xP5xvRo+Ab9jX3gG+pvNBe+QX8jzkKX
b6i/EQm+of7Gm0/kG/Q3/oyBb6i/Qb6h/kbI/5JvqL9RDHxD/Y3KMfAN9Tcu
gW+ov0G+of7Ga+Eb9DcihW/Q37gkfIP+xh/gG+pvBEfDN7YL36C/sUX4Bv2N
+cI36G/EA99Qf2MI+Ib6G/4x8A31N06Ab6i/cR98Q/2NruAb6m/0Ad9Qf6MK
+Ib6G+OEb9DfuAG+of4G+Yb6GxPBN9TfIN9QfyOp8A36G52Fb/zrbwjfKCp8
Q/2NkuAb6m8k+ES+QX8jDHxD/Y2E4BvqbxQA31B/o57wDfobL8E31N+YC76h
/kZW8A31N3LGwDfU3ygNvqH+xm3wDfU3Ire5/x71N+4K36C/URx8Q/0N8g31
N/KDb6i/ER98Q/2NPeAb6m9MBN9QfyOr8A36GzuFb9DfGAS+of5Gsxj4hvob
HvAN9Td2CN+gv9EQfEP9jbXgG+pvzATfUH9jNviG+htrhG/Q36gDvqH+xk/g
G+pvLAbfUH9jPPiG+huPwTfU38gPvqH+xgnwDfU3soFvqL/RFnxD/Y2U0fCN
CPAN9Tc84BvqbxQA31B/Yzz4hvob6YRv0N+4LXyD/sY+8A31N16Db6i/kQZ8
Q/0N8g31N0aCb6i/8Q/4hvob98A31N94L3yD/kZs8A31N4aBb6i/oXyD/kZm
8A31N6aDb6i/Qb6h/sZ/wDfU36gIvqH+RnPwDfU3toBvqL/RH3xD/Y3x4Bvq
b9QG31B/ozj4hvobHuEb9Dc6gG+ov0G+of7GIOEb9DeSgW+ovzENfEP9jbLg
G+pvRMc3NoFvqL/x7JXb9/wXfwN8Q/2NteAb6m8MB99Qf+Os8A36G1+Cb6i/
0VD4Bv2Nl8I33grfUH+jovAN+hvVhW/Q3ygBvqH+BvmG+htR3Vy+of7GPvAN
9TfKCd+gv3EOfEP9jUTgG+pvRAnfoL+RQfiGn/AN+hvM3ei1MZVdk28wd2Pp
kp52TX+DuRtzO31t1/Q3mLuRKPOCCc6aPz/fS/nh6JWXzpp/X+ZuXHv9opez
5ufD3I2v425O66z5eTJ34860waecNf0N5m7Mr7W8mbOmv8H3Uorm6vLCWdPf
YO5G6aln6jtr8g2+l1L8xVY/Z00+xtyNWqU+DnfWvN6Yu3G4+9TXzprXJ3M3
Ttb4wa55PTN3I3+lWnbN65+5G9PTzLBr8g2+l3Kk8l67pr/B91KKBJa2a96P
zN2I+6K+XfP+Ze7GzvGBdk2eydyNIgt/tmvuD3wvZceQYnZNXsrcjeZN3i53
1tx/+F5KuaYb7Zp8g7kbv8XNbdf0N5i7se9GMbvmfsjcjaP5+zR31tw/mbvR
svGJTs6a+y1zN9rXiHvcWZNvMHfj1eJq5Zw1+QbfSzny2S+lnDX5Nt9Lebeg
2hZnTb7B91IO5aiV0lmTbzB3Y9L9dQ2cNfkGczdWDg0+4KzJ55m7kaXbZ4+c
NZ93zN0os/nCYWdN/s/cjS0hP5Rx1vy+gO+lzFuzZpiz5vOX76UEPSu12lnz
ec3cjYAWZ446az7f+V5Kh14jTzprft/B91LWxj/Q2VnT32DuxpBfRmd01uQb
fC/FP/uW90d9a/INvpfin/vhEWfN72uYu5Etx5zVzprf7zB344+/27V11uQb
fC/lTavPszlrfn/E3I3I2Qe7O2v6G8zdCHzfLquz5vmNuRsJQ8O7OGue95i7
0bSP33ZnTb7B3I0ltfYscNbkG8zdCEzQ5qWz5vdrzN34qWaHg86afIO5G6nm
N0vkrMk3mLsRZ+o+u+Z5mO+ljBh51K55fmbuRsTEcXZNf4O5G/FiH7Brfv/I
3I1+xYfZNfkG30t5tam6XdPfYO7GhM1j7Zr+BnM3ivStatf0N5i7kTPnCLtm
P8LcjcF5+9g1+xfmbhTc3MOu2e8wd6P920C7Zn/E3I30XavYNfspvpdSuXMm
u+b3y8zd6FQwrl2zX2PuxuQJxq7pbzB343BGd81+kLkbayt+btfsH5m7sXDm
Ybtmv8ncjQ2PY9s1/Q3mbmS4u9au2c8yd6P40Ai7Jt/geyn+vd01+QZzN345
lsiu2V8zd6NqN3fNfpy5G/lDytk1/QTmblwu667JN5i70TepuyYfYO5GnOHu
mr4Eczeq3x9u1+QPzN2IO9ldk2/wvZTlF901/Q3mbpS96a7555m7kQ1/nvyE
uRtjf3bX/HmYu1H+jvvz8Odn7sajge6af1/mbvwe313z82HuxudF3DV5EXM3
/rjufp70N5i7caqxu+bvi7kbXTe5vy/6G8zdyN/QXfN6YO5Gribu9UC+wdyN
Xbvc64f+BnM3Oh52rzden3wv5UUz9/qkv8Hcjbhx3OuZ/gZzN9ZdzWLXvF+Y
u9GthHu/8P5i7sa+K3HsmryRuRtr47j3I/0N5m6keVfZrv/1N/BeytaR7v3O
/YG5GwPyuvsDeSlzN1Yt7G3X5KvM3Xg5yd+uyWOZu/HHuSp2TX7L3I0k78fY
NfdD5m5s+KuaXXP/ZO7Ghd5D7Zr+BnM3phbdb9f0N5i70WvbWLumv8HcjYvL
jF2TbzB3o/zavXbN5wVzN4omfRDPWfP5wtyNYr8e2OOs6W8wdyOwy9Snzpr+
Bt9LmTHwyGxnzecdczdO3kyxyVnz+cjcjQYr9rR31vQ3mLtxZduXGZ01n7/M
3cjXvUcnZ83nNXM3Orzcm9FZ8/nO3I1436Zs4ax5HmDuRo1y9ZY5a/obzN3I
/uP+/c6a/gZzN5YuW/DGOW+QbzB3Y2zzmWmdNc8zzN3YePN1O2dNf4O5G8+H
PjHOmucl5m58U6rfIWdNf4O5GwV7Z1vurHkeY+7Gi12Bg5w1z2/M3Ug28mwJ
Z01/g7kb+3ZNP+CseT5k7kbPjekinDXPk8zd6D6/wj5nzfMn30tJ3Pz77501
z6vM3UjQqXxyZ83zLXM3bkSN2+Ss6W/wvZRCUclKOmuen/leyszfEpd11jxv
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
+hvkG+pvkG+ov8H8DfU3mL+h/gbzN9TfYP6G+hvM31B/g/kb6m8wf0P9DeZv
qL/B/A31N8g31N9g/ob6G8zfUH/jjfANzd9Qf4N8Q/0N8g31N5i/of4G+Yb6
G8zfUH+D+RvqbzB/Q/0N5m+ov8H8DfU3mL+h/gbzN9TfYP6G+hvM31B/g/kb
6m8wf0P9DeZvqL/B/A31N5i/of4G+Yb6G8zfUH+D+Rvqb5BvqL/B/A31N5i/
of4G8zfU32D+hvobzN9Qf4P5G+pvMH9D/Q3mb6i/wfwN9TeORcM3mL+h/gb5
hvobzN9QfyOp8A3N31B/g/kb6m+Qb6i/Qb6h/gbzN9TfYP6G+hvM31B/g/kb
6m8wf0P9DeZvqL/B/A31N5i/of4G8zfU32D+hvobzN9Qf4P5G+pvkG+ov8H8
DfU3mL+h/gbzN9TfYP6G+hv9hG9o/ob6G8zfUH/DT/iG+hv1C8T/b+en5C8X
+YVT1d/46vKWU05Vf+PurUmznar+Rt8JT3Y4Vf2NPa/fj3Sq+hstP+ao4lT1
N7aVmPHBqepvTKk3OptT1d/oPmdxC6eqv/FgY+MGTlV/o0bZXS2cqv5G131V
6zhV/Y3Mw7cXdqr6GxXOjbZV/Y3HR7+1Vf2NdL1a2qp841KcPbaqv7E97Jat
6m/80XKsrepvjEpS3Vb1N76fMtJW5RsH9n5jq/obsSt9ZqvyjWqJUtqq/kZQ
pi7fO1X9jf3Tjr52qvobK29/d82p6m+kWv1ZF6eqvzFgTdZmTlV/I1ui3Yud
qnwjZVDAEKeqv9FrfLY9TlW+seq7nuudqv7GlroTazpV/Y2xI/K1d6r6G8Wu
51/iVPU3er8estCp6m/M/2tmOqeqvxFyrXhcpyrfyPekzHynqr/x1ed1uzlV
+caZBnOmO1X9jVnL06x3qvobsaoGP3fyu5RvbPH83dWpyjcOZbhwxqnqb+xf
OnudU9XfWLCr8lCnKt9Yv6nFDqeqv7GvUL+DTlV/I37KOSmcqv5G+UYLKzhV
/Y0iNVq+OeSr6m+sSfUhkVPV33jWP+dIp6q/8WDg4F9sFb5RMG6hdU5VfyPj
zPa2qr/xOHeIrepvbM070lb1N5qNTmKr+htpd/vbqnyj8erltqq/MfllN1vV
31j+ZZit6m+8iLfJVvU3ul6Ka6v6G49PBNqq/sY2/6RuFX9jRoY8tqq/cXxi
UlvV30g5Ioet6m/syRFhq/obAR8X2Kr+RplSs21Vf6PO3d9sVX8jS9Oxtqq/
MTuqt63qb+TPecFW5RttQ8JsVX/j/PBXtqq/UXJVUlvV3/iyspuHqf5G2VmL
bVV/Y0pJt6q/cbiQW9XfeLEn0Fb1Nxr1d6vyjYrn3Kr+xsT2//38lCP53ar+
RruBblV/w+9GV1vV3/h48Tdb1d9ouOUzW9Xf+PreB5dziL+R8GqUrepvFGsz
0Fb1Nw71v2Kr+hv3Urj5sepvJCgdZqv6G9sHnLBV/Y1KJ7PbqnwjVsdltqq/
8SLjCVvV36j/cxVb1d9o+tjPVvU32r9LZqv6G2Nit7RV/Y25H4fZqv7GibC0
tqq/cXHb97aqv/FD44+2qr8xavw9W9Xf6Jv6oq3qb6SI/8/fTlV/Y3mHHLaq
v9F74UJb1d8Yf32hrepv3Kv8o63qbwTuyWir8o2M/+lhq/obyw51y+dU9Tcm
VF/f16nqb+z6Kuk2p6q/cTHzzvxOVX+jzZl8aZ2q/sa9wbNGOVX9jdV/zW/l
VPU3wnePHetU9Teu5qmxwqnqb4xrsqCiU9Xf6Ngh0QWnqr/R4Kea45yq/kaH
eS2GOFX9jUWtEs53qvobeSo3WORU9Te+PFgwpVPV3/i7TYtWTlV/Y/2UKVud
qv7G658OxHr3f82/o7/xofKHXE5Vf6Nyvvl7nar+xpuWy3M7Vf2NBJOybrVV
/I1x6e60dqr6G8uXmWxOVX+jTasCO5yq/kbiiWk2O1X9jeudi/3iVPU3RgdV
2eNU9Tc61Zo52qnqb3grHy3pVPU3pv1WwFb1N0KC9u10qvob60I726r+hvc/
i2xVvhE2vZyt6m/8WfKQyznE35h8JtJW9TeaV41tq/obnRdvt1X9jRUpXxxx
qvobZs4yW9Xf6PLsF1vV35gwd5+t6m9M++N9gFPV35h//3lbp6q/MTH15GRO
VX8jTfuVSZ2q/sapdSltVX/DpBrU1qnqb1w9/uiIU9Xf8JbKZqv6G6PmhHV0
qvobxZZsTOFU9Te+93xhq/obT9bNsFX9jfV3d9uq/kZD4Rv0NwqBb6i/Qb6h
/sZ98A31N5Rv0N/YCb6h/kZT8A31N7aDb6i/sRR8Q/2NHuAb6m8ECt+gv1EN
fEP9jZ/AN9TfUL5Bf+N78A31N5Rv0N9IGgPfUH9jlfAN+hunhW/Q3xgDvqH+
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
twtU
        "], 
       Attributes[$CellContext`clrs$587960] = {
        Temporary}, $CellContext`clrs$587960 = {
         RGBColor[1, 0, 0], 
         RGBColor[0, 2/3, 0], 
         RGBColor[0, 0, 1], 
         RGBColor[1, 0, 1], 
         RGBColor[0, 1, 1], 
         RGBColor[1, 0.5, 0]}, 
       Attributes[$CellContext`n$587960] = {Temporary}, $CellContext`n$587960 = 
       6, Attributes[$CellContext`poly$587960] = {
        Temporary}, $CellContext`showOnePoly[
         Pattern[$CellContext`alphaT, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`notableLoci, 
          Blank[]], 
         Pattern[$CellContext`fnVtx0, 
          Blank[]], 
         Pattern[$CellContext`fnErrorP, 
          Blank[]], 
         Pattern[$CellContext`opts, 
          OptionsPattern[]]] := 
       Module[{$CellContext`polyErr}, $CellContext`polyErr = \
$CellContext`polyError[$CellContext`alphaT, $CellContext`i, \
$CellContext`fnVtx0, $CellContext`fnErrorP]; \
$CellContext`drawPoly[$CellContext`polyErr, $CellContext`notableLoci, 
           FilterRules[{$CellContext`opts}, 
            Options[$CellContext`drawPoly]]]], $CellContext`polyError[
         Pattern[$CellContext`alphaT, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`fnVtx0, 
          Blank[]], 
         Pattern[$CellContext`fnErrorP, 
          Blank[]]] := 
       Module[{$CellContext`a, $CellContext`alpha, $CellContext`poly, \
$CellContext`err}, $CellContext`a = 
          ReplaceAll["a", $CellContext`alphaT]; $CellContext`alpha = Part[
            ReplaceAll[
            "alphas", $CellContext`alphaT], $CellContext`i]; \
$CellContext`poly = $CellContext`polyVtx[$CellContext`alphaT, $CellContext`i, \
$CellContext`fnVtx0]; $CellContext`err = $CellContext`fnErrorP[$CellContext`a, 
            Part[$CellContext`poly, 1], $CellContext`alpha]; {
          "a" -> $CellContext`a, "poly" -> $CellContext`poly, 
           "error" -> $CellContext`err}], $CellContext`polyVtx[
         Pattern[$CellContext`alphaT, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`fnVtx0, 
          Blank[]]] := 
       Module[{$CellContext`a, $CellContext`p1, $CellContext`t, \
$CellContext`alpha}, $CellContext`a = 
          ReplaceAll["a", $CellContext`alphaT]; $CellContext`alpha = Part[
            ReplaceAll[
            "alphas", $CellContext`alphaT], $CellContext`i]; $CellContext`t = 
          Part[
            ReplaceAll[
            "tsRad", $CellContext`alphaT], $CellContext`i]; $CellContext`p1 = \
{$CellContext`a Cos[$CellContext`t], 
            
            Sin[$CellContext`t]}; $CellContext`fnVtx0[$CellContext`a, \
$CellContext`p1, $CellContext`alpha]], $CellContext`drawPoly[
         Pattern[$CellContext`polyErr$, 
          Blank[]], 
         Pattern[$CellContext`notableLoci$, 
          Blank[]], 
         OptionsPattern[]] := 
       Module[{$CellContext`poly$, $CellContext`a$, $CellContext`centroids$, \
$CellContext`centroidNames$, $CellContext`lab$, $CellContext`pnames$, \
$CellContext`meds$, $CellContext`polyTangs$, $CellContext`polyInters$, \
$CellContext`polyInterNames$, $CellContext`tri1$, $CellContext`notables$, \
$CellContext`circs$, $CellContext`incs$, $CellContext`lgt$ = 
          0.25, $CellContext`fnt$ = 14}, $CellContext`poly$ = 
          ReplaceAll["poly", $CellContext`polyErr$]; $CellContext`a$ = 
          ReplaceAll[
           "a", $CellContext`polyErr$]; $CellContext`centroids$ = \
$CellContext`getCentroids[$CellContext`poly$]; $CellContext`centroidNames$ = {
           "\!\(\*SubscriptBox[\(G\), \(vtx\)]\)", 
            "\!\(\*SubscriptBox[\(G\), \(per\)]\)", 
            "\!\(\*SubscriptBox[\(G\), \(lam\)]\)"}; $CellContext`lab$ = 
          StringJoin["error: ", 
            $CellContext`nfn[
             N[
              ReplaceAll["error", $CellContext`polyErr$]], 
             3]]; $CellContext`pnames$ = 
          Take[{"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K"}, 
            
            Length[$CellContext`poly$]]; $CellContext`meds$ = \
$CellContext`getMediansV[$CellContext`poly$]; $CellContext`polyTangs$ = 
          Map[$CellContext`perp[
             $CellContext`ellGrad[$CellContext`a$, 
              Part[#, 1], 
              Part[#, 2]]]& , $CellContext`poly$]; $CellContext`polyInters$ = 
          MapThread[$CellContext`interRays[#, #2, #3, #4]& , \
{$CellContext`poly$, $CellContext`polyTangs$, 
             RotateLeft[$CellContext`poly$], 
             
             RotateLeft[$CellContext`polyTangs$]}]; \
$CellContext`polyInterNames$ = If[
            OptionValue[$CellContext`drExcentral], 
            MapThread[StringJoin[#, "'", #2, "'"]& , {$CellContext`pnames$, 
              RotateLeft[$CellContext`pnames$]}], {}]; If[
           OptionValue[$CellContext`drCircs], 
           
           Module[{$CellContext`sides$, $CellContext`tri$, \
$CellContext`cir$}, $CellContext`circs$ = Table[$CellContext`tri$ = Take[
                  RotateLeft[$CellContext`poly$, FE`i$$353 - 1], 
                  3]; $CellContext`cir$ = \
$CellContext`getCircumcenterTrilin[$CellContext`tri$, 
                  RotateLeft[
                   $CellContext`triLengths[$CellContext`tri$]]]; \
{$CellContext`cir$, 
                 $CellContext`magn[$CellContext`cir$ - 
                  Part[$CellContext`tri$, 1]]}, {FE`i$$353, 
                Length[$CellContext`poly$]}]; Null]]; If[
           OptionValue[$CellContext`drIncs], 
           
           Module[{$CellContext`sides$, $CellContext`tri$, \
$CellContext`inc$}, $CellContext`incs$ = Table[$CellContext`tri$ = Take[
                  RotateLeft[$CellContext`poly$, FE`i$$353 - 1], 
                  3]; $CellContext`inc$ = \
$CellContext`getIncenterTrilin[$CellContext`tri$, 
                  RotateLeft[
                   $CellContext`triLengths[$CellContext`tri$]]]; \
{$CellContext`inc$, 
                 $CellContext`closestDist[$CellContext`inc$, 
                  Part[$CellContext`tri$, 1], 
                  Part[$CellContext`tri$, 2]]}, {FE`i$$353, 
                Length[$CellContext`poly$]}]; Null]]; If[
           Or[
            OptionValue[$CellContext`drNotables], 
            OptionValue[$CellContext`drSubtri]], 
           
           Module[{$CellContext`normals$}, $CellContext`tri1$ = 
             Part[$CellContext`poly$, 
               OptionValue[$CellContext`vtx]]; $CellContext`normals$ = 
             Apply[$CellContext`getTriBisectors, $CellContext`tri1$]; \
$CellContext`notables$ = $CellContext`getNotables[$CellContext`tri1$, \
$CellContext`normals$]; Null]]; $CellContext`gr = Graphics[{
             PointSize[Large], 
             Point[$CellContext`poly$], 
             FaceForm[None], {
              EdgeForm[{Black, Thick}], 
              FaceForm[Gray], 
              Opacity[0.1], 
              Polygon[$CellContext`poly$], Black, 
              Point[$CellContext`poly$]}, {Black, 
              Arrowheads[Medium], 
              MapThread[$CellContext`drawArrow[#, 
                $CellContext`norm[
                 $CellContext`perpNeg[#2]], $CellContext`lgt$]& , \
{$CellContext`poly$, $CellContext`polyTangs$}]}, 
             If[
              OptionValue[$CellContext`drCentroids], {Black, 
               MapThread[{
                 Point[#], 
                 If[
                  OptionValue[$CellContext`drCentroidLabels], 
                  Text[
                   Style[#2, 14], #, {
                   
                   0, -1.5}], {}]}& , {$CellContext`centroids$, \
$CellContext`centroidNames$}]}, {}], 
             If[
              OptionValue[$CellContext`drExcentral], {
               EdgeForm[
                Darker[Green]], 
               Polygon[$CellContext`polyInters$], 
               Darker[Green], 
               Point[$CellContext`polyInters$], 
               MapThread[Text[
                 
                 Style[#, $CellContext`fnt$], #2, {-1.25, -1.25}]& , \
{$CellContext`polyInterNames$, $CellContext`polyInters$}]}, {}], {Black, 
              MapThread[Text[
                Style[#, $CellContext`fnt$], 
                $CellContext`ray[#2, 
                 $CellContext`norm[
                  $CellContext`perp[#3]], $CellContext`lgt$/
                 2]]& , {$CellContext`pnames$, $CellContext`poly$, \
$CellContext`polyTangs$}]}, 
             If[
              OptionValue[$CellContext`drMedians], {{Dashed, Blue, 
                Map[Line[{#, {0, 0}}]& , $CellContext`polyInters$]}, {Blue, 
                Point[$CellContext`meds$], 
                Point[{0, 0}]}}, {}], 
             If[
              OptionValue[$CellContext`drCircs], {Red, {Dashed, 
                Map[Circle[
                  Part[#, 1], 
                  Part[#, 2]]& , $CellContext`circs$]}, 
               Point[
                Map[First, $CellContext`circs$]], 
               Circle[
                Part[$CellContext`circs$, 1, 1], 0.05]}, {}], 
             If[
              OptionValue[$CellContext`drIncs], {
               Darker[Green], Dashed, 
               Map[Circle[
                 Part[#, 1], 
                 Part[#, 2]]& , $CellContext`incs$], 
               Point[
                Map[First, $CellContext`incs$]]}, {}], 
             If[
              OptionValue[$CellContext`drNotables], {
               Apply[List, 
                $CellContext`drawSomeNotables[$CellContext`notables$, 
                 First[$CellContext`notableLoci$]]], 
               EdgeForm[None], 
               FaceForm[Red], 
               Opacity[0.1], 
               Polygon[$CellContext`tri1$]}, {}], 
             If[
              OptionValue[$CellContext`drSubtri], {
               EdgeForm[None], 
               FaceForm[Red], 
               Opacity[0.2], 
               Polygon[$CellContext`tri1$]}, {}]}]; Show[{
            $CellContext`plotEll[$CellContext`a$], $CellContext`gr, 
            If[
             OptionValue[$CellContext`drLoci], 
             $CellContext`Second[$CellContext`notableLoci$], {}]}, 
           If[
            OptionValue[$CellContext`drError], 
            PlotLabel -> $CellContext`lab$, {}], PlotRange -> If[
             OptionValue[$CellContext`plotAll], All, {{-2, 2}, {-1, 1}}], 
           Frame -> True, FrameStyle -> Medium, AxesStyle -> 
           Directive[{Dotted, Gray}]]], 
       Options[$CellContext`drawPoly] = {$CellContext`drNotables -> 
         False, $CellContext`drSubtri -> False, $CellContext`drLoci -> 
         False, $CellContext`drMedians -> False, $CellContext`drExcentral -> 
         False, $CellContext`drCentroids -> 
         False, $CellContext`drCentroidLabels -> False, $CellContext`drError -> 
         False, $CellContext`drCircs -> False, $CellContext`drIncs -> 
         False, $CellContext`vtx -> {1, 2, 3}, $CellContext`plotAll -> False},
        Attributes[$CellContext`polyErr$] = {Temporary}, 
       Attributes[$CellContext`notableLoci$] = {Temporary}, 
       Attributes[$CellContext`poly$] = {Temporary}, 
       Attributes[$CellContext`a$] = {Temporary}, 
       Attributes[$CellContext`centroids$] = {Temporary}, 
       Attributes[$CellContext`centroidNames$] = {Temporary}, 
       Attributes[$CellContext`lab$] = {Temporary}, 
       Attributes[$CellContext`pnames$] = {Temporary}, 
       Attributes[$CellContext`meds$] = {Temporary}, 
       Attributes[$CellContext`polyTangs$] = {Temporary}, 
       Attributes[$CellContext`polyInters$] = {Temporary}, 
       Attributes[$CellContext`polyInterNames$] = {Temporary}, 
       Attributes[$CellContext`tri1$] = {Temporary}, 
       Attributes[$CellContext`notables$] = {Temporary}, 
       Attributes[$CellContext`circs$] = {Temporary}, 
       Attributes[$CellContext`incs$] = {Temporary}, 
       Attributes[$CellContext`lgt$] = {Temporary}, 
       Attributes[$CellContext`fnt$] = {Temporary}, $CellContext`getCentroids[
         Pattern[$CellContext`vtx, 
          Blank[]]] := {
         Mean[$CellContext`vtx], 
         $CellContext`PerimeterCentroid[$CellContext`vtx], 
         RegionCentroid[
          Polygon[$CellContext`vtx]]}, $CellContext`PerimeterCentroid[
         Pattern[$CellContext`vtx$, 
          Blank[]]] := 
       Module[{$CellContext`sides$, $CellContext`meds$, $CellContext`per$, \
$CellContext`perCentroid$}, $CellContext`sides$ = \
$CellContext`triLengths[$CellContext`vtx$]; $CellContext`meds$ = 
          Apply[$CellContext`getMediansV, $CellContext`vtx$]; \
$CellContext`per$ = Total[$CellContext`sides$]; $CellContext`perCentroid$ = 
          Sum[Part[$CellContext`meds$, FE`i$$353] 
             Part[$CellContext`sides$, FE`i$$353], {FE`i$$353, 
              
              Length[$CellContext`vtx$]}]/$CellContext`per$; \
$CellContext`perCentroid$], Attributes[$CellContext`vtx$] = {Temporary}, 
       Attributes[$CellContext`sides$] = {Temporary}, 
       Attributes[$CellContext`per$] = {Temporary}, 
       Attributes[$CellContext`perCentroid$] = {
        Temporary}, $CellContext`triLengths[
         Pattern[$CellContext`vs, 
          Blank[]]] := Map[$CellContext`magn, 
         $CellContext`triSides[$CellContext`vs]], $CellContext`magn = 
       CompiledFunction[{10, 10., 5468}, {{
           Blank[Real], 1}}, {{3, 1, 0}, {3, 0, 0}}, {{12, {2, 0, 0}}}, {0, 1,
          2, 0, 2}, {{47, $CellContext`magn2, 3, 1, 0, 3, 0, 1}, {40, 57, 3, 
          0, 1, 3, 0, 0}, {1}}, 
         Function[{$CellContext`v}, 
          Sqrt[
           $CellContext`magn2[$CellContext`v]]], Evaluate], $CellContext`magn[
         Pattern[$CellContext`v, 
          Blank[]]] := Sqrt[
         $CellContext`magn2[$CellContext`v]], $CellContext`magn2 = 
       CompiledFunction[{10, 10., 5468}, {{
           Blank[Real], 1}}, {{3, 1, 0}, {3, 0, 0}}, {{12, {2, 0, 0}}}, {0, 1,
          1, 0, 1}, {{42, "DotVV", 3, 1, 0, 3, 1, 0, 2, 0, 0, 3, 0, 0}, {1}}, 
         Function[{$CellContext`v}, 
          Dot[$CellContext`v, $CellContext`v]], Evaluate], $CellContext`magn2[
         Pattern[$CellContext`v, 
          Blank[]]] := 
       Dot[$CellContext`v, $CellContext`v], $CellContext`triSides[
         Pattern[$CellContext`vs, 
          Blank[]]] := MapThread[# - #2& , {$CellContext`vs, 
          RotateLeft[$CellContext`vs]}], $CellContext`getMediansV[
         Pattern[$CellContext`vs, 
          Blank[]]] := 0.5 ($CellContext`vs + RotateLeft[$CellContext`vs]), 
       FE`i$$353 = 188, $CellContext`nfn[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := ToString[
         NumberForm[$CellContext`v, {$CellContext`n + 
           2, $CellContext`n}]], $CellContext`perp[{
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           
           Blank[]]}] := {-$CellContext`y, $CellContext`x}, \
$CellContext`ellGrad = CompiledFunction[{10, 10., 5468}, {
          Blank[Real], 
          Blank[Real], 
          Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 1, 1}}, {}, {0, 
         0, 5, 0, 
         2}, {{40, 56, 3, 0, 0, 3, 0, 3}, {16, 2, 3, 4}, {34, 1, 2, 1, 4, 3, 
          0}, {40, 43, 3, 1, 0, 3, 1, 1}, {1}}, 
         Function[{$CellContext`a, $CellContext`x, $CellContext`y}, \
-{$CellContext`x, $CellContext`y $CellContext`a^2}], 
         Evaluate], $CellContext`ellGrad[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          
          Blank[]]] := -{$CellContext`x, $CellContext`y $CellContext`a^2}, \
$CellContext`interRays[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`n2, 
          Blank[]]] := 
       Module[{$CellContext`m, $CellContext`b, $CellContext`sols}, \
$CellContext`m = Transpose[{$CellContext`n1, $CellContext`n2}]; If[
           $CellContext`negl[
            
            Det[$CellContext`m]], $CellContext`p1, $CellContext`b = \
$CellContext`p2 - $CellContext`p1; $CellContext`sols = 
            LinearSolve[$CellContext`m, $CellContext`b]; \
$CellContext`ray[$CellContext`p1, $CellContext`n1, 
             Part[$CellContext`sols, 1]]]], $CellContext`negl[
         Pattern[$CellContext`v, 
          Blank[]]] := Abs[$CellContext`v] < 10^(-9), $CellContext`ray = 
       CompiledFunction[{10, 10., 5468}, {{
           Blank[Real], 1}, {
           Blank[Real], 1}, 
          Blank[Real]}, {{3, 1, 0}, {3, 1, 1}, {3, 0, 0}, {3, 1, 3}}, {}, {0, 
         0, 1, 0, 
         4}, {{41, 259, 3, 0, 0, 3, 1, 1, 3, 1, 2}, {44, 0, 2, 3}, {1}}, 
         Function[{$CellContext`p0, $CellContext`phat, $CellContext`d}, \
$CellContext`p0 + $CellContext`phat $CellContext`d], 
         Evaluate], $CellContext`ray[
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`phat, 
          Blank[]], 
         Pattern[$CellContext`d, 
          Blank[]]] := $CellContext`p0 + $CellContext`phat $CellContext`d, 
       Attributes[$CellContext`tri$] = {Temporary}, 
       Attributes[$CellContext`cir$] = {
        Temporary}, $CellContext`getCircumcenterTrilin[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := 
       Module[{$CellContext`a2 = $CellContext`a $CellContext`a, \
$CellContext`b2 = $CellContext`b $CellContext`b, $CellContext`c2 = \
$CellContext`c $CellContext`c}, 
         $CellContext`trilinearToCartesian[$CellContext`orbit, \
{$CellContext`a, $CellContext`b, $CellContext`c}, {$CellContext`a \
($CellContext`b2 + $CellContext`c2 - $CellContext`a2), $CellContext`b \
($CellContext`c2 + $CellContext`a2 - $CellContext`b2), $CellContext`c \
($CellContext`a2 + $CellContext`b2 - $CellContext`c2)}]], \
$CellContext`trilinearToCartesian[{
          Pattern[$CellContext`A, 
           Blank[]], 
          Pattern[$CellContext`B, 
           Blank[]], 
          Pattern[C, 
           Blank[]]}, {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]], 
          Pattern[$CellContext`z, 
           Blank[]]}] := 
       Module[{$CellContext`denom}, $CellContext`denom = 
          Dot[{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`x, $CellContext`y, $CellContext`z}]; (($CellContext`a \
$CellContext`x) $CellContext`A + ($CellContext`b $CellContext`y) \
$CellContext`B + ($CellContext`c $CellContext`z) C)/$CellContext`denom], 
       Attributes[$CellContext`inc$] = {
        Temporary}, $CellContext`getIncenterTrilin[
         Pattern[$CellContext`orbit, 
          Blank[]], 
         Pattern[$CellContext`sides, 
          
          Blank[]]] := $CellContext`trilinearToCartesian[$CellContext`orbit, \
$CellContext`sides, {1, 1, 1}], $CellContext`closestDist[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`l1, 
          Blank[]], 
         Pattern[$CellContext`l2, 
          
          Blank[]]] := $CellContext`magn[$CellContext`p - \
$CellContext`closestPerp[$CellContext`p, $CellContext`l1, $CellContext`l2]], \
$CellContext`closestPerp[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`l1, 
          Blank[]], 
         Pattern[$CellContext`l2, 
          Blank[]]] := 
       Module[{$CellContext`dl = $CellContext`l2 - $CellContext`l1, \
$CellContext`s}, $CellContext`s = 
          Dot[$CellContext`p - $CellContext`l1, $CellContext`dl]/
           Dot[$CellContext`dl, $CellContext`dl]; \
$CellContext`ray[$CellContext`l1, $CellContext`dl, $CellContext`s]], 
       Attributes[$CellContext`normals$] = {
        Temporary}, $CellContext`getTriBisectors[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`p3, 
          Blank[]]] := 
       Module[{$CellContext`u12, $CellContext`u23, $CellContext`u31}, \
$CellContext`u12 = $CellContext`norm[$CellContext`p2 - $CellContext`p1]; \
$CellContext`u23 = $CellContext`norm[$CellContext`p3 - $CellContext`p2]; \
$CellContext`u31 = $CellContext`norm[$CellContext`p1 - $CellContext`p3]; {
           $CellContext`norm[$CellContext`u12 - $CellContext`u31], 
           $CellContext`norm[$CellContext`u23 - $CellContext`u12], 
           $CellContext`norm[$CellContext`u31 - $CellContext`u23]}], \
$CellContext`norm = CompiledFunction[{10, 10., 5468}, {{
           Blank[Real], 1}}, {{3, 1, 0}, {3, 1, 1}}, {}, {0, 0, 2, 0, 
         2}, {{47, $CellContext`magn, 3, 1, 0, 3, 0, 1}, {40, 60, 3, 0, 1, 3, 
          0, 0}, {41, 259, 3, 0, 0, 3, 1, 0, 3, 1, 1}, {1}}, 
         Function[{$CellContext`v}, \
$CellContext`v/$CellContext`magn[$CellContext`v]], 
         Evaluate], $CellContext`norm[
         Pattern[$CellContext`v, 
          
          Blank[]]] := $CellContext`v/$CellContext`magn[$CellContext`v], \
$CellContext`getNotables[
         Pattern[$CellContext`orbit, 
          Blank[]], 
         Pattern[$CellContext`normals, 
          Blank[]]] := 
       Module[{$CellContext`inc, $CellContext`inradius, $CellContext`cir, \
$CellContext`circumradius, $CellContext`npc, $CellContext`exc, \
$CellContext`tps, $CellContext`ort, $CellContext`medians, \
$CellContext`npcradius, $CellContext`sides, $CellContext`bar, \
$CellContext`feu, $CellContext`antifeu, $CellContext`x88, \
$CellContext`perimeter}, $CellContext`inc = $CellContext`getIncenter[
            Part[$CellContext`orbit, 1], 
            Part[$CellContext`normals, 1], 
            Part[$CellContext`orbit, 2], 
            
            Part[$CellContext`normals, 
             2]]; $CellContext`inradius = \
$CellContext`closestDist[$CellContext`inc, 
            Part[$CellContext`orbit, 1], 
            Part[$CellContext`orbit, 2]]; $CellContext`tps = 
          MapThread[$CellContext`closestPerp[$CellContext`inc, #, #2]& , \
{$CellContext`orbit, 
             RotateLeft[$CellContext`orbit]}]; $CellContext`medians = 
          Apply[$CellContext`getMedians, $CellContext`orbit]; \
$CellContext`cir = 
          Apply[$CellContext`getCircumcenter, $CellContext`orbit]; \
$CellContext`circumradius = $CellContext`magn[$CellContext`cir - 
            Part[$CellContext`orbit, 1]]; $CellContext`npc = 
          Apply[$CellContext`getNinepointcenter, $CellContext`orbit]; \
$CellContext`npcradius = $CellContext`magn[$CellContext`npc - 
            Part[$CellContext`medians, 
             1]]; $CellContext`exc = \
$CellContext`getExcenters[$CellContext`orbit, $CellContext`normals]; \
$CellContext`sides = RotateLeft[
            $CellContext`triLengths[$CellContext`orbit]]; $CellContext`feu = \
$CellContext`getFeuerbachpoint[$CellContext`npc, $CellContext`inc, \
$CellContext`inradius]; $CellContext`bar = 
          Apply[$CellContext`getBaricenter, $CellContext`orbit]; \
$CellContext`antifeu = $CellContext`getAntiComplement[$CellContext`feu, \
$CellContext`bar]; $CellContext`x88 = \
$CellContext`getX88Trilin[$CellContext`orbit, $CellContext`sides]; \
$CellContext`ort = 
          Apply[$CellContext`getOrthocenter, $CellContext`orbit]; \
$CellContext`perimeter = Total[$CellContext`sides]; {
          "inc" -> $CellContext`inc, "bar" -> $CellContext`bar, 
           "ort" -> $CellContext`ort, "cir" -> $CellContext`cir, 
           "npc" -> $CellContext`npc, "exc" -> $CellContext`exc, "ex12" -> 
           Part[$CellContext`exc, 1], "ex23" -> Part[$CellContext`exc, 2], 
           "ex31" -> Part[$CellContext`exc, 3], "feu" -> $CellContext`feu, 
           "antifeu" -> $CellContext`antifeu, "x88" -> $CellContext`x88, 
           "mit" -> $CellContext`getMitten[$CellContext`orbit, \
$CellContext`sides], 
           "sym" -> $CellContext`getSymmedian[$CellContext`orbit, \
$CellContext`sides], 
           "ger" -> $CellContext`getGergonne[$CellContext`orbit, \
$CellContext`sides], 
           "nag" -> $CellContext`getNagel[$CellContext`orbit, \
$CellContext`sides], 
           "spi" -> $CellContext`getSpieker[$CellContext`orbit, \
$CellContext`sides], "incRadius" -> $CellContext`inradius, 
           "tps" -> $CellContext`tps, "medians" -> $CellContext`medians, 
           "cirRadius" -> $CellContext`circumradius, 
           "npcRadius" -> $CellContext`npcradius, 
           "sides" -> $CellContext`sides, 
           "perimeter" -> $CellContext`perimeter, 
           "area" -> $CellContext`triAreaHeron[$CellContext`sides]}], \
$CellContext`getIncenter[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`n2, 
          
          Blank[]]] := $CellContext`interRays[$CellContext`p1, \
$CellContext`n1, $CellContext`p2, $CellContext`n2], $CellContext`getMedians[
         Pattern[$CellContext`t1, 
          Blank[]], 
         Pattern[$CellContext`t2, 
          Blank[]], 
         Pattern[$CellContext`t3, 
          
          Blank[]]] := {$CellContext`t2 + $CellContext`t3, $CellContext`t1 + \
$CellContext`t3, $CellContext`t1 + $CellContext`t2}/
        2, $CellContext`getCircumcenter[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`p3, 
          Blank[]]] := 
       Module[{$CellContext`medians, $CellContext`medianPerps}, \
$CellContext`medians = $CellContext`getMedians[$CellContext`p1, \
$CellContext`p2, $CellContext`p3]; $CellContext`medianPerps = {
           Part[$CellContext`medians, 1] + $CellContext`norm[
              $CellContext`perp[$CellContext`p2 - $CellContext`p3]], 
            Part[$CellContext`medians, 2] + $CellContext`norm[
              $CellContext`perp[$CellContext`p3 - $CellContext`p1]], 
            Part[$CellContext`medians, 3] + $CellContext`norm[
              $CellContext`perp[$CellContext`p1 - $CellContext`p2]]}; \
$CellContext`interRays[
           Part[$CellContext`medians, 1], 
           $CellContext`perp[$CellContext`p2 - $CellContext`p3], 
           Part[$CellContext`medians, 2], 
           $CellContext`perp[$CellContext`p1 - $CellContext`p3]]], \
$CellContext`getNinepointcenter[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`p3, 
          Blank[]]] := 
       Module[{$CellContext`medians}, $CellContext`medians = \
$CellContext`getMedians[$CellContext`p1, $CellContext`p2, $CellContext`p3]; 
         Apply[$CellContext`getCircumcenter, $CellContext`medians]], \
$CellContext`getExcenters[
         Pattern[$CellContext`orbit, 
          Blank[]], 
         Pattern[$CellContext`normals, 
          Blank[]]] := 
       Module[{$CellContext`perps, $CellContext`perpsNeg, $CellContext`exc}, \
$CellContext`perps = 
          Map[$CellContext`perp, $CellContext`normals]; $CellContext`perpsNeg = 
          Map[$CellContext`perpNeg, $CellContext`normals]; $CellContext`exc = 
          MapThread[$CellContext`interRays[#, #2, #3, #4]& , \
{$CellContext`orbit, $CellContext`perps, 
             RotateLeft[$CellContext`orbit], 
             
             RotateLeft[$CellContext`perpsNeg]}]; $CellContext`exc], \
$CellContext`perpNeg[{
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           
           Blank[]]}] := {$CellContext`y, -$CellContext`x}, \
$CellContext`getFeuerbachpoint[
         Pattern[$CellContext`npc, 
          Blank[]], 
         Pattern[$CellContext`incenter, 
          Blank[]], 
         Pattern[$CellContext`inradius, 
          Blank[]]] := Module[{$CellContext`inter}, 
         $CellContext`ray[$CellContext`incenter, 
          $CellContext`norm[$CellContext`incenter - $CellContext`npc], \
$CellContext`inradius]], $CellContext`getBaricenter[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`p3, 
          Blank[]]] := 
       Module[{$CellContext`medians}, $CellContext`medians = \
$CellContext`getMedians[$CellContext`p1, $CellContext`p2, $CellContext`p3]; \
$CellContext`interRays[$CellContext`p1, 
           Part[$CellContext`medians, 1] - $CellContext`p1, $CellContext`p2, 
           Part[$CellContext`medians, 
             2] - $CellContext`p2]], $CellContext`getAntiComplement[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`bar, 
          Blank[]]] := $CellContext`bar - 
        2 ($CellContext`p - $CellContext`bar), $CellContext`getX88Trilin[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           
           Blank[]]}] := \
$CellContext`trilinearToCartesian[$CellContext`orbit, {$CellContext`a, \
$CellContext`b, $CellContext`c}, 
         1/{$CellContext`b + $CellContext`c - 
          2 $CellContext`a, $CellContext`c + $CellContext`a - 
          2 $CellContext`b, $CellContext`a + $CellContext`b - 
          2 $CellContext`c}], $CellContext`getOrthocenter[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`p3, 
          Blank[]]] := 
       Module[{$CellContext`altBases}, $CellContext`altBases = \
$CellContext`getAltBases[$CellContext`p1, $CellContext`p2, $CellContext`p3]; \
$CellContext`interRays[$CellContext`p1, 
           Part[$CellContext`altBases, 1] - $CellContext`p1, $CellContext`p2, 
           Part[$CellContext`altBases, 
             2] - $CellContext`p2]], $CellContext`getAltBases[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`p3, 
          Blank[]]] := 
       Module[{$CellContext`sides}, $CellContext`sides = {{$CellContext`p2, \
$CellContext`p3}, {$CellContext`p3, $CellContext`p1}, {$CellContext`p1, \
$CellContext`p2}}; MapThread[$CellContext`closestPerp[#, 
            Part[#2, 1], 
            
            Part[#2, 
             2]]& , {{$CellContext`p1, $CellContext`p2, $CellContext`p3}, \
$CellContext`sides}]], $CellContext`getMitten[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           
           Blank[]]}] := \
$CellContext`trilinearToCartesian[$CellContext`orbit, {$CellContext`a, \
$CellContext`b, $CellContext`c}, {$CellContext`b + $CellContext`c - \
$CellContext`a, $CellContext`c + $CellContext`a - $CellContext`b, \
$CellContext`a + $CellContext`b - $CellContext`c}], $CellContext`getSymmedian[
         Pattern[$CellContext`orbit, 
          Blank[]], 
         Pattern[$CellContext`sides, 
          
          Blank[]]] := $CellContext`trilinearToCartesian[$CellContext`orbit, \
$CellContext`sides, $CellContext`sides], $CellContext`getGergonne[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           
           Blank[]]}] := \
$CellContext`trilinearToCartesian[$CellContext`orbit, {$CellContext`a, \
$CellContext`b, $CellContext`c}, {$CellContext`b \
($CellContext`c/($CellContext`b + $CellContext`c - $CellContext`a)), \
$CellContext`c ($CellContext`a/($CellContext`c + $CellContext`a - \
$CellContext`b)), $CellContext`a ($CellContext`b/($CellContext`a + \
$CellContext`b - $CellContext`c))}], $CellContext`getNagel[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           
           Blank[]]}] := \
$CellContext`trilinearToCartesian[$CellContext`orbit, {$CellContext`a, \
$CellContext`b, $CellContext`c}, {($CellContext`b + $CellContext`c - \
$CellContext`a)/$CellContext`a, ($CellContext`c + $CellContext`a - \
$CellContext`b)/$CellContext`b, ($CellContext`a + $CellContext`b - \
$CellContext`c)/$CellContext`c}], $CellContext`getSpieker[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           
           Blank[]]}] := \
$CellContext`trilinearToCartesian[$CellContext`orbit, {$CellContext`a, \
$CellContext`b, $CellContext`c}, {($CellContext`b $CellContext`c) \
($CellContext`b + $CellContext`c), ($CellContext`c $CellContext`a) \
($CellContext`c + $CellContext`a), ($CellContext`a $CellContext`b) \
($CellContext`a + $CellContext`b)}], $CellContext`triAreaHeron[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := 
       Module[{$CellContext`s}, $CellContext`s = ($CellContext`a + \
$CellContext`b + $CellContext`c)/2; 
         Sqrt[(($CellContext`s ($CellContext`s - $CellContext`a)) \
($CellContext`s - $CellContext`b)) ($CellContext`s - $CellContext`c)]], \
$CellContext`gr = Graphics[{
          PointSize[Large], 
          
          Point[{{1.5, 0.}, {1.1779369312262902`, -0.6191264764177169}, {
           5.183236062578089*^-10, -1.}, {-1.1779369307202803`, \
-0.6191264768455941}, {-1.5, -4.295727107361813*^-10}, {-1.1779369307202803`, 
           0.6191264768455941}, {5.183236062578089*^-10, 1.}, {
           1.1779369312262902`, 0.6191264764177169}}], 
          FaceForm[None], {
           EdgeForm[{
             GrayLevel[0], 
             Thickness[Large]}], 
           FaceForm[
            GrayLevel[0.5]], 
           Opacity[0.1], 
           
           Polygon[{{1.5, 0.}, {1.1779369312262902`, -0.6191264764177169}, {
            5.183236062578089*^-10, -1.}, {-1.1779369307202803`, \
-0.6191264768455941}, {-1.5, -4.295727107361813*^-10}, {-1.1779369307202803`, 
            0.6191264768455941}, {5.183236062578089*^-10, 1.}, {
            1.1779369312262902`, 0.6191264764177169}}], 
           GrayLevel[0], 
           
           Point[{{1.5, 0.}, {1.1779369312262902`, -0.6191264764177169}, {
            5.183236062578089*^-10, -1.}, {-1.1779369307202803`, \
-0.6191264768455941}, {-1.5, -4.295727107361813*^-10}, {-1.1779369307202803`, 
            0.6191264768455941}, {5.183236062578089*^-10, 1.}, {
            1.1779369312262902`, 0.6191264764177169}}]}, {
           GrayLevel[0], 
           Arrowheads[Medium], {
            Arrow[{{1.5, 0.}, {1.25, 0.}}], 
            
            Arrow[{{1.1779369312262902`, -0.6191264764177169}, {
             1.0165140404457165`, -0.4282268946160719}}], 
            
            Arrow[{{5.183236062578089*^-10, -1.}, {
             4.6073209445138574`*^-10, -0.75}}], 
            
            Arrow[{{-1.1779369307202803`, -0.6191264768455941}, \
{-1.0165140400451873`, -0.4282268949547555}}], 
            
            Arrow[{{-1.5, -4.295727107361813*^-10}, {-1.25, \
-2.684829442101133*^-10}}], 
            
            Arrow[{{-1.1779369307202803`, 
             0.6191264768455941}, {-1.0165140400451873`, 
             0.4282268949547555}}], 
            
            Arrow[{{5.183236062578089*^-10, 1.}, {4.6073209445138574`*^-10, 
             0.75}}], 
            
            Arrow[{{1.1779369312262902`, 0.6191264764177169}, {
             1.0165140404457165`, 0.4282268946160719}}]}}, {}, {}, {
           GrayLevel[0], {
            Text[
             Style["A", 14], {1.625, 0.}], 
            Text[
             Style["B", 14], {1.258648376616577, -0.7145762673185394}], 
            Text[
             Style["C", 14], {5.471193621610205*^-10, -1.125}], 
            Text[
             Style["D", 14], {-1.2586483760578269`, -0.7145762677910134}], 
            Text[
             Style["E", 14], {-1.625, -5.101175939992153*^-10}], 
            Text[
             Style["F", 14], {-1.2586483760578269`, 0.7145762677910134}], 
            Text[
             Style["G", 14], {5.471193621610205*^-10, 1.125}], 
            Text[
             Style["H", 14], {1.258648376616577, 
             0.7145762673185394}]}}, {}, {}, {}, {}, {}}], \
$CellContext`drawArrow[
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`phat, 
          Blank[]], 
         Pattern[$CellContext`l, 
          Blank[]]] := Arrow[{$CellContext`p0, 
          $CellContext`ray[$CellContext`p0, $CellContext`phat, \
$CellContext`l]}], $CellContext`drawSomeNotables[
         Pattern[$CellContext`notables, 
          Blank[]], 
         Pattern[$CellContext`nots, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`prefix, 
           Blank[]], ""]] := Graphics[{
          PointSize[Large], 
          Map[$CellContext`drawOneNotable[
            ReplaceAll[#, $CellContext`ptClrs], 
            ReplaceAll[#, $CellContext`notables], 
            
            StringJoin[$CellContext`prefix, #]]& , $CellContext`nots]}], \
$CellContext`drawOneNotable[
         Pattern[$CellContext`clr, 
          Blank[]], 
         Pattern[$CellContext`at, 
          Blank[]], 
         Pattern[$CellContext`txt, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`dx, 
           Blank[]], 1.5], 
         Optional[
          Pattern[$CellContext`dy, 
           Blank[]], 0], 
         Optional[
          Pattern[$CellContext`fntSize, 
           Blank[]], 12]] := {$CellContext`clr, 
         Point[$CellContext`at], 
         Text[
          
          Style[$CellContext`txt, $CellContext`fntSize], $CellContext`at, \
{$CellContext`dx, $CellContext`dy}]}, $CellContext`ptClrs = {
        "ell" -> GrayLevel[0], "med" -> GrayLevel[0], "bar" -> 
         RGBColor[0.5, 0, 0.5], "inc" -> RGBColor[0, 2/3, 0], "ort" -> 
         RGBColor[1, 0.5, 0], "cir" -> RGBColor[1, 0, 0], "npc" -> 
         RGBColor[1., 0.02, 0.3], "exc" -> RGBColor[0, 2/3, 0], "ex12" -> 
         RGBColor[0, 2/3, 0], "ex23" -> RGBColor[0, 2/3, 0], "ex31" -> 
         RGBColor[0, 2/3, 0], "feu" -> RGBColor[0.5, 0.5, 0.27], "antifeu" -> 
         RGBColor[1, 0.5, 0], "x88" -> RGBColor[0, 1, 1], "nag" -> 
         RGBColor[1, 0, 0], "mit" -> RGBColor[1/3, 1/3, 1], "sym" -> 
         RGBColor[1, 0, 0], "ger" -> RGBColor[1, 0.5, 0.5], "spi" -> 
         RGBColor[0, 2/3, 2/3], "nap" -> RGBColor[1, 0, 0], "hex" -> 
         RGBColor[1, 0.5, 0.5], "red" -> RGBColor[1, 0, 0], "green" -> 
         RGBColor[0, 1, 0], "blue" -> RGBColor[0, 0, 1]}, $CellContext`plotEll[
         Pattern[$CellContext`a, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`clr, 
           Blank[]], 
          GrayLevel[0]]] := ParametricPlot[
         N[{$CellContext`a Cos[$CellContext`u], 
           Sin[$CellContext`u]}], {$CellContext`u, 0., 2. Pi}, 
         PlotStyle -> $CellContext`clr, PerformanceGoal -> 
         "Quality"], $CellContext`Second[
         Pattern[$CellContext`l, 
          Blank[]]] := Part[$CellContext`l, 2], $CellContext`getOctVtx0[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`alpha, 
          Blank[]]] := 
       Module[{$CellContext`p2, $CellContext`p2Neg, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p3Neg, $CellContext`p4Neg}, \
{$CellContext`p2, $CellContext`p2Neg} = \
$CellContext`getP2Alpha[$CellContext`a, $CellContext`p1, $CellContext`alpha]; \
$CellContext`p3 = $CellContext`getInterRefl[$CellContext`a, $CellContext`p1, \
$CellContext`p2]; $CellContext`p4 = $CellContext`getInterRefl[$CellContext`a, \
$CellContext`p2, $CellContext`p3]; $CellContext`p5 = \
$CellContext`getInterRefl[$CellContext`a, $CellContext`p3, $CellContext`p4]; \
$CellContext`p3Neg = $CellContext`getInterRefl[$CellContext`a, \
$CellContext`p1, $CellContext`p2Neg]; $CellContext`p4Neg = \
$CellContext`getInterRefl[$CellContext`a, $CellContext`p2Neg, \
$CellContext`p3Neg]; {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p4Neg, $CellContext`p3Neg, \
$CellContext`p2Neg}], $CellContext`getP2Alpha[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`alpha, 
          Blank[]]] := 
       Module[{$CellContext`norm, $CellContext`ca, $CellContext`sa, \
$CellContext`p2, $CellContext`normRot, $CellContext`normRotNeg, \
$CellContext`p2Neg}, $CellContext`ca = 
          Cos[$CellContext`alpha]; $CellContext`sa = 
          Sin[$CellContext`alpha]; $CellContext`norm = \
$CellContext`ellGrad[$CellContext`a, 
            Part[$CellContext`p1, 1], 
            
            Part[$CellContext`p1, 
             2]]; $CellContext`normRot = $CellContext`rot[$CellContext`norm, \
$CellContext`sa, $CellContext`ca]; $CellContext`normRotNeg = \
$CellContext`rot[$CellContext`norm, -$CellContext`sa, $CellContext`ca]; \
$CellContext`p2 = Part[
            $CellContext`ellInterRayUnprot[$CellContext`a, $CellContext`p1, \
$CellContext`normRot], 2]; $CellContext`p2Neg = Part[
            $CellContext`ellInterRayUnprot[$CellContext`a, $CellContext`p1, \
$CellContext`normRotNeg], 
            2]; {$CellContext`p2, $CellContext`p2Neg}], $CellContext`rot[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`st, 
          Blank[]], 
         Pattern[$CellContext`ct, 
          Blank[]]] := 
       Module[{$CellContext`m}, $CellContext`m = {{$CellContext`ct, \
-$CellContext`st}, {$CellContext`st, $CellContext`ct}}; 
         Dot[$CellContext`m, $CellContext`p]], $CellContext`rot[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := $CellContext`rot[$CellContext`p, 
         Sin[$CellContext`t], 
         Cos[$CellContext`t]], $CellContext`ellInterRayUnprot = 
       CompiledFunction[{10, 10., 5468}, {
          Blank[Real], {
           Blank[Real], 1}, {
           Blank[Real], 1}}, {{3, 0, 0}, {3, 1, 0}, {3, 1, 1}, {3, 2, 
         6}}, {{0, {2, 0, 8}}, {2, {2, 0, 1}}, {-1, {2, 0, 3}}, {
          1, {2, 0, 2}}}, {1, 9, 11, 0, 
         9}, {{42, "CopyTensor", 3, 1, 0, 3, 1, 2}, {33, 2, 0}, {24, 0, 1, 
          0}, {32, 0, 0}, {2, 0, 3}, {49}, {3, 1}, {37, 2, 2, 3, 1}, {37, 2, 
          1, 3, 2}, {42, "CopyTensor", 3, 1, 1, 3, 1, 2}, {33, 2, 0}, {24, 0, 
          1, 0}, {32, 0, 0}, {2, 0, 3}, {49}, {3, 1}, {37, 2, 2, 3, 3}, {37, 
          2, 1, 3, 4}, {16, 0, 0, 5}, {40, 56, 3, 0, 3, 3, 0, 6}, {40, 56, 3, 
          0, 4, 3, 0, 7}, {16, 5, 7, 8}, {13, 6, 8, 6}, {16, 3, 1, 8}, {16, 5,
           4, 2, 7}, {13, 8, 7, 8}, {10, 1, 7}, {16, 7, 8, 7}, {40, 56, 3, 0, 
          1, 3, 0, 8}, {40, 56, 3, 0, 2, 3, 0, 9}, {10, 3, 10}, {13, 10, 9, 
          10}, {16, 5, 10, 9}, {13, 8, 9, 8}, {
          47, $CellContext`quadRootsUnprotC, 3, 0, 6, 3, 0, 7, 3, 0, 8, 3, 1, 
           3}, {33, 3, 5}, {6, 3, 7}, {35, 5, 7, 3, 6}, {6, 8, 6}, {3, 4}, {
          37, 3, 6, 3, 9}, {
          47, $CellContext`ray, 3, 1, 0, 3, 1, 1, 3, 0, 9, 3, 1, 5}, {36, 7, 
          5, 0, 6}, {4, 6, 5, -3}, {1}}, 
         Function[{$CellContext`a, $CellContext`p, $CellContext`n}, 
          
          Module[{$CellContext`x, $CellContext`y, $CellContext`nx, \
$CellContext`ny, $CellContext`a2, $CellContext`c2, $CellContext`c1, \
$CellContext`c0, $CellContext`ss}, {$CellContext`x, $CellContext`y} = \
$CellContext`p; {$CellContext`nx, $CellContext`ny} = $CellContext`n; \
$CellContext`a2 = $CellContext`a $CellContext`a; $CellContext`c2 = \
$CellContext`nx^2 + $CellContext`a2 $CellContext`ny^2; $CellContext`c1 = 
            2 ($CellContext`nx $CellContext`x + ($CellContext`a2 \
$CellContext`ny) $CellContext`y); $CellContext`c0 = $CellContext`x^2 + \
$CellContext`a2 (-1 + $CellContext`y^2); $CellContext`ss = \
$CellContext`quadRootsUnprotC[$CellContext`c2, $CellContext`c1, \
$CellContext`c0]; 
           Map[$CellContext`ray[$CellContext`p, $CellContext`n, #]& , \
$CellContext`ss]]], Evaluate], $CellContext`quadRootsUnprotC = 
       CompiledFunction[{10, 10., 5468}, {
          Blank[Real], 
          Blank[Real], 
          Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 1, 
         1}}, {{4, {2, 0, 0}}, {2, {2, 0, 1}}}, {0, 2, 8, 0, 
         2}, {{40, 56, 3, 0, 1, 3, 0, 3}, {10, 0, 4}, {16, 4, 0, 2, 4}, {19, 
          4, 5}, {13, 3, 5, 3}, {40, 57, 3, 0, 3, 3, 0, 5}, {19, 1, 4}, {19, 
          5, 6}, {13, 4, 6, 7}, {13, 4, 5, 6}, {34, 1, 2, 7, 6, 3, 0}, {10, 1,
           7}, {16, 7, 0, 7}, {40, 60, 3, 0, 7, 3, 0, 6}, {41, 259, 3, 0, 6, 
          3, 1, 0, 3, 1, 1}, {1}}, 
         Function[{$CellContext`a, $CellContext`b, $CellContext`c}, 
          Block[{Compile`$16}, 
           
           Module[{$CellContext`det = $CellContext`b^2 - (
               4 $CellContext`a) $CellContext`c, $CellContext`sqrtDet}, \
$CellContext`sqrtDet = Sqrt[$CellContext`det]; (
             Compile`$16 = -$CellContext`b; {
               Compile`$16 - $CellContext`sqrtDet, 
                Compile`$16 + $CellContext`sqrtDet}/(2 $CellContext`a))]]], 
         Evaluate], 
       Attributes[Compile`$16] = {Temporary}, $CellContext`getInterRefl = 
       CompiledFunction[{10, 10., 5468}, {
          Blank[Real], {
           Blank[Real], 1}, {
           Blank[Real], 1}}, {{3, 0, 0}, {3, 1, 0}, {3, 1, 1}, {3, 1, 
         3}}, {{2, {2, 0, 1}}, {1, {2, 0, 0}}}, {0, 2, 6, 0, 
         6}, {{38, 1, 0, 0, 0, 3}, {38, 1, 0, 1, 0, 2}, {
          47, $CellContext`ellGrad, 3, 0, 0, 3, 0, 3, 3, 0, 2, 3, 1, 2}, {40, 
          43, 3, 1, 1, 3, 1, 4}, {44, 0, 4, 5}, {
          47, $CellContext`refl, 3, 1, 5, 3, 1, 2, 3, 1, 4}, {
          47, $CellContext`ellInterRayUnprot, 3, 0, 0, 3, 1, 1, 3, 1, 4, 3, 2,
            5}, {38, 5, 0, 1, 1, 3}, {1}}, 
         Function[{$CellContext`a, $CellContext`pfrom, $CellContext`pto}, 
          
          Module[{$CellContext`norm, $CellContext`theRefl, \
$CellContext`pnext}, $CellContext`norm = $CellContext`ellGrad[$CellContext`a, 
              Part[$CellContext`pto, 1], 
              
              Part[$CellContext`pto, 
               2]]; $CellContext`theRefl = \
$CellContext`refl[$CellContext`pfrom - $CellContext`pto, $CellContext`norm]; \
$CellContext`pnext = Part[
              $CellContext`ellInterRayUnprot[$CellContext`a, \
$CellContext`pto, $CellContext`theRefl], 2]; $CellContext`pnext]], 
         Evaluate], $CellContext`refl = CompiledFunction[{10, 10., 5468}, {{
           Blank[Real], 1}, {
           Blank[Real], 1}}, {{3, 1, 0}, {3, 1, 1}, {3, 1, 
         3}}, {{2, {2, 0, 0}}, {12, {2, 0, 1}}}, {0, 2, 3, 0, 
         4}, {{42, "DotVV", 3, 1, 0, 3, 1, 1, 2, 0, 1, 3, 0, 0}, {
          47, $CellContext`magn2, 3, 1, 1, 3, 0, 2}, {40, 60, 3, 0, 2, 3, 0, 
          1}, {41, 259, 3, 0, 1, 3, 1, 1, 3, 1, 2}, {41, 259, 2, 0, 0, 3, 0, 
          0, 3, 0, 1}, {41, 259, 3, 0, 1, 3, 1, 2, 3, 1, 3}, {40, 43, 3, 1, 0,
           3, 1, 2}, {44, 3, 2, 3}, {1}}, 
         Function[{$CellContext`v, $CellContext`n}, (2 
            
            Dot[$CellContext`v, $CellContext`n]) \
($CellContext`n/$CellContext`magn2[$CellContext`n]) - $CellContext`v], 
         Evaluate], $CellContext`refl[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := 
       2 Dot[$CellContext`v, $CellContext`n] \
($CellContext`n/$CellContext`magn2[$CellContext`n]) - $CellContext`v}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.768769110272235*^9, 3.7687691961096473`*^9, 
  3.768769226771821*^9, 3.768770387948266*^9, 3.7688555950448966`*^9, 
  3.7688574066094627`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"plotCSgr", "[", 
      RowBox[{"octAlphaT15", ",", "getOctVtx0"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"plotCSgr", "[", 
      RowBox[{"hexAlphaT15", ",", "getHexVtx0"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"plotCSgr", "[", 
      RowBox[{"triAlphaT15", ",", "getTriVtx0"}], "]"}]}], "}"}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1000", ",", "1000", ",", "1000"}], "}"}]}], ",", 
   RowBox[{"SphericalRegion", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.768684631373925*^9, 3.7686846525113926`*^9}, 
   3.7686846893437963`*^9, {3.7686847250387535`*^9, 3.7686848283595123`*^9}, {
   3.7687695137442493`*^9, 3.7687695347500715`*^9}, {3.7687697213583307`*^9, 
   3.768769754878128*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {PointSize[Large], Thickness[Large], 
    {RGBColor[1, 0, 0], Line3DBox[CompressedData["
1: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
dZJ91Iv7S/XL6Wm7zrBwrTzfWLK/+H236hD9i1Myl4+fHraR7Dt+P7Zkjgk/
eJOb39pzKyX7cTfu08kHOrx0MrlzN17eR7JP+f07pvhShHYuCwvlDV0k+5ff
19Pm6l/34c5pUfCRcMm+5vd7Zoyhg3YpC7VrfVok+53PAwt9HKuHVnHntKmb
kuSBCswPwUlTIrzrWTjSUfhekh9aMG/M6mL2K7SwEBq7WUeSNyjMJ/MpsyQx
yULr4LsrJfmEzzNfskcmqzIs9HMuXibJM/0x/+SWRw0N4PpJ5f2gs5L8w+el
yOyV64dxc6XIVy9QkpfeYr7qztbLaH/PwpibQcMl+YrPY4u72hS/cfNp0IHn
YZI8xuc3j8inhpO5OXexalOkJL+5Y94Th/U+jOB+fr3Lik+SvMfnw0PN1wyV
uNdf/XXBckk+5PPkGeXS9PNvuPl3oN5Skif5/DlM29RzPsuCB9k8UJI/+bxq
OKlwjJKIhZEtDpMkeZXPtwf6/JPxF/fcrD58lebbZZiHkwwPpkZzz/n20S5p
Hubzc76pR+TSl9w+Ua2W5mc+b5dNmH5P5TkLWytmTpfk7SbM522hi8Ky8lk4
NLtVms9PYJ53bVw8/be7LLwvsZfmeTPM/wPVYw0zb3F974p2oCT/833B1k0h
s+ccC0N1lkr7Qjf2i1OxMS6juHlzvOi5tF/wfUSvIvNaf6535X6OlvYRvr88
jrCPy+Xu0cTEP6X9he87I5rylkx15+7phbvSvrME+9Gx4M6dG50lfTJA2o96
sE9ZGsr1Wcjd98ZZsj61F/tXv4NZKW1juLnRJ1Xav8ZiX0vwlweLQdx+aHwj
7Wt8v1PakbNy8idu7lWdlva7M9gHTW7lhLxsYGB0yAtpH+T74/mabkvdfAaM
0odI+yPfN7tcl2VrcZ/zqaqutG/y/fTskg2e944wMCmtTtpPa7HPFtSpqylt
5p7v5QZpn12F/ffCdmtVZQcGgiY/kfbfDOzLj7c8cnxswEBbrY20L5djvz6y
zcTTRpGB/QcTpP26BPv4fLWbENpKw/JaU2kf/4r93cK/4XZ8Dg2hO36T9ne+
75dcPeMVze3NmlVHpX1/HPqAb9aswfu203B/g7XUByj0hOpvUfVb7Gmgr1VJ
PWEF+sNsteYmn19oaFk3WuoP29ArjJorjeO5e3XhtMwr1gt8w1vgG8noG9fQ
N/jXZ9A3XNE3+PeTi76hhL4x/ie+UYu+YYG+wT+fNegbNugbT/B5KqBvxKNv
lOHzP4O+EY2+kYnf11SBb/DfrzH6RqbAN34V+IYanp8k9A0SfWMPnrdC9A0v
gW8UoW/8ir5xRuAbegLfuIG+of4T3+DvV/oPfOMJ+oaRwDfeo290o2/Y432f
gb4R+hPfiMB5Eoe+4f5f+kYw+oYG+oY5zrcL6Bsa6BvHcR4eQ98oFfhGOPrG
G4FvrEbfcBL4hi/6xtif+EYRzv9f/kffOIG+US3wjRz0jU70jRrcXw3oGyoC
3xiBvmGPvmGI+3Ee+sYa9I35uE+b/0ffmIS+0foT3+jCPBAk8A0+P7ijb9z+
f/pGBOaZO+gbKegbIZh/ktA3Hv3ENxwwX1mjbxSibwQJfGM0+oYx5rct6BtO
At84jb6hLfCNh+gb8wS+oYe+4YK+oYD5k0XfiPuBb1AC33iKvnFW4Bs2P/CN
MvSNRvSN8Zi3C9A3qtE3vDGfB6JvLPmJb/D5Pxx947uxLP/zfWEI+sZi9I1e
gW/cQ9/g+8gA9A0afeO5wDdWom/wfUcTfeOmwDdo9A0z9I2GH/hGMfYvA/QN
NfSN09jXpqNvaKJvzMd+l46+MUTgG7noGyEC3/gLfaNE4BtT0DcuoW84YD9N
Qt9Yhb5RgX12GPpGxn/pGy7oGyoiWV+msV9noW+kom8MFPjGTPSNKuzv8egb
MwS+kYa+oY2+kYo+oI++cQd9wxM9YSD6hi36Bu8Pwegb3j/xDVOBb5ihb/ji
z7eibyxC3+D95CX6Rl/0DQ+Bb+wX+EYd+oYJ+oYXft549A1n9I2X+HwmoW8U
oG/wXvQVfSMBfaNN4Bsb0Tca8Pv6hr4Rir7xB36/f6Bv7BP4Rjj6xmaBb0Sj
b/ihbwQIfOPST3yDP89N6BsR6BvOeP6d0TdcBb6Rjb7xEn3jCd6vmegb59E3
eG8k0DdeoG/w9zcIfUMPfYP3zDfoG+8FvsGib8g/kM0H3ksb0DdK0Td6BL6R
gb5RgPNKC31jEPrGYJxvCugbGugbmTgPO9E3tqFv8PNTFX1jJvrGeIFvdLfL
5q22wDeWoW/w83wB+kbeD3wjGn2jGffFVPSNb+gbirhfPqNvRKJvqOM+WoG+
0Z0g840e3F/qP/ANN/SNGwLfaEbfUEPf4PepKfrGKPSN+bh/9dE3FqFvJOO+
noK+8Qh9Yz/u9zvoGxXoG3wecEbfqEffKMf8sAd9Ixh94x/MG7PRN4IFvuGI
vvE3+kaXwDcU0Tf4/HMffaNM4BvH0DcK0TfeCXxjOPrGAsxjbugb6ugbfH5b
g76RhL7B5z0R+oYH+kY15sMj6Bvr0DdeY56MRt+oQN9QxPw5XOAbMzCvjkff
GIq+wefbUPQNc/SNpZiHzwp8Yxnm54If+EYp+oYP+kbrD3yD//9KN/SNjwLf
UEHf+Ii+kYV9wQ59Qwd9g+8X0egbp9A3wgW+8fAHvmGCvuGIfUcTfWMe+gbf
jyLQN56jb/B9yg59g0LfCMb+1V/gG2OwryWib8QKfEMOfaMZfYP//25T9I2x
At9I+oFvfEHfKEbfUMd+moi+YSjwjTz0jTsC37iMvhGIvvGnwDdY9I0X2K+P
oW/sQd/gf9/AHn1jGfoG//sJxugbgQLfKEPfqEbf4H//YafAN/5BT2hE33gt
8A079I1GgW8Yom9cRN/4P2dpyDY=
      "]], 
     Point3DBox[{-0.574063121135662, -0.7120388432687716, \
-0.8106947205047389}]}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], Line3DBox[CompressedData["
1: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
A5eHHZ8Vpy4B7fMzqQAHGlIVNXbPvM5AgXXsXhVDCawbWdra04oGBds7kl4F
DFTcvPZ533QJFK5NKbMbTINvvJKXm/w8GncP6dqxQgJ6efpHunehYZb/WS+N
RwwkHfVx27NHAhZLS/f7fpTB067MJPOn8ucZV1nSkiCBThoy2u+NDHa09jAs
e8lAzlh63ZIcCXR7eXlgv7syeD2py/SXrxlYcrH1TMYTCdQPr4pamSmDpmrl
hMWNDORlaurR8r2pouKbM1u+N7vNnqQ9T8zAJFO9yE7qUhi57sewmgAZPIm5
vbdAxsifR5KewjApuHq0R+qskd/npcaxaU0MZInu/fvMRgqfBqhnfrWXQfqt
482K7xgYWmCeuHu5FA6ZXl0TPUYGK7sHqNTI50eX4U/T/9klBSMD76zaXjIw
z9o22Vg+h/xLK5XGHJWCfta+8zXtUtgqs6/7V/79+I5dqdaXpbDZWTcsWiQF
U1GThpV8nhntHkJyhsV27iv/82J37ufqW7g/Z4G//3kJ93uVsri/h389+VO4
11Gtzr0u/vW/cOZe95hE7n3w7zfZlnufHbnc++afj+lh7rkYGXPPqSs+z+9J
3HNU/leXPFcGn3/iFO6553hznwP/ebWt4z6nCHfuc9uGn+/Oflnkc+3bKCOf
M38eDi7mzkGmNXcu7PD8xF7gzk2gGXeOduF569PNgJyzJeeCybnjz6chcOfS
0447pyl4nuvDuHPcAkfJuXbC8z9HbRY595fOHCP3gL8v2Xu5e+JIM+Te8Pdr
YjJ3r655cvesFu+j+Bp3Dw9HaJF7mYH317eAu7dHJnL3OAPvO5PN3fPTd7TI
vefnQ9NBbi7MGcrNiU84T15Z/yBzZLMTN1c6cP4obOXmTlpqBplDhTiveqk9
IXNqXxVN5pYOzjeVDm6ufSjeROYcPw/bVg4lc3Bw+CkyF/n5qRHPzc2CK4Fk
jhrivJ33jJuzQw5pkrnbG+dzzKTFZC6vmMnN6XCc587p3BzXnMvN9QSc/5qV
3Nx/D15kD/D7wqImxJzdE28OpuSwe4PfLy2VubvZvWJYbpnE7pnuuI+Wnuly
g91DwdWDD7F7qQP3l+aXo2PZvdVjl1Ffdo/x+84tRDaA3XOPvc+psnuP348N
2fph7F7MbHo3j92Tu3Gfjj7w0Yvdo82tjYPZvcrvX/17pyPYvds/Me0Ru4f5
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
Ip61
      "]], 
     Point3DBox[{-0.574063121135662, -0.7120388432687716, \
-0.7120388433977036}]}, 
    {RGBColor[0, 0, 1], Line3DBox[CompressedData["
1:eJyl2nlUTmvYBvBSZirzeBpEJSFkyhxShBSlHEMoUwqHCmkwD5lJ4kRmlXks
6q4kmZIk0UHnHXrfbVbkEJ2v59nX/tb69lqWs9b3l3Wd07Je+332/dzXD7Pp
gW6+NXR0dGbr6ujoVf86NWPGgeQpCvJdVN6w10eB5p9szHPAroTdDacp6Hh7
Q9v1HwTav8+fZ49MRWTtmQpyVf6mDnsn0C7fHjwrDI+tjZ+roDqP7rds81qg
um33rGHZYrjN54d/KGjrxO7uU0oFck/PL2d5omdE4KZwBfW8FHJlZIlABZ/L
5rP8ZdaEFqmbFdR/pG0NZZFAPfQSm7Gc7d0xxy1OQbvTW62zzhOoeHNwNsv3
nIZN6nlOQbH+EV06ZAsU7RznxfK5yR/LR2YraHC52aInKQJ1az+rjGWPO9Zu
wc+r/3/RCS/H0wL1icpxZflx+cuO+ysUNLMPBQUfFMiu7JQVywb7voXubaSk
0oVUsmC7QM69fyxnOXTa+IrRXZQ0u0ld276RAqXOjfrM8rrW2qF7XJQ0IFln
6ZNAgbJGuPO8++6ZADd/JZl8y3B0nyyQ9RBnnrt2ye3y+2YlGd7auPuis0Bb
mm7l2bz7E/vtZ5SkVmnu6fUUKM3hCs/L7jtsz81XkrVHQrKziUC2eX14rrw2
5trHCiVZnTi1bmsdgfTKXHl2q3+vztM2KvpmEXztxQctnV+dx7PTtY1ZM4ao
KPLrpU5DirRkG7OO50tFjj6LZqnIo3nSt/Q0LZ0L6c7zhh4WB0o3q8hHuW7r
7CNa8vb8Esfyj6DKk4cvqsixw+WtDhu01G/iSZ4vxB+y3VKsomYJPYq85mvp
rF4HnrvvVS6JqqGm5o/VQcmuWrpa2J3nrU28J63tqKY8hc4R/x5aSrcO9Ga5
5Mo7P19XNQk+K6+FNdPS7x43fFm+fHXxjabBanL6cbNXZYWGpo/Qy2R5/Gvd
AZF/qslklP2xt0809Cl2eD+Wx9tF9917Q02DNfaJPlc1lFZnU2+Ws68fOu0i
qCkzqWnZ9BgNfdszPIll+5BvTTYblJJOQB+bH8Eaut7OuRHLtc4mjR/do5Se
Nj5Yr7+nhta/ODqO5Vfmg9MiPUvpU9ScPp16aejgUmUKy4WTUt6ZLC+levsS
JhQ21ZDxnDqvWZ4W8CjDOK6UBv8VXuZUXkp9E++nsmzdLnFAUHopeTt4bdzy
sJSSVO59WR5p5xxuoiilg2Frws+fKaXdhw8vY/ndG8vjTfU09CrmR/P0zaVU
8qH3IZYfda666WquoRdBCxdnziuli5Ny0lmupf10+4GDhiou7o7Oci6lGfPD
slj+snSe/xYfDRUXnHd/aFlKR2qm+LGsLPEz3RiuoTNzl3iU1yylkE0RrVku
eZuum7FfQzbxVa17qtQUapZUmV6dH2RZ3OyWrKFyY7s3BzOr/3uHV2ksb7j/
4URxgYaONRrz9+B4NZm223mI5YjnT/3S3lc/X2V8sXGEmu5+9ZnG8sFTeyye
1dXSZe3x1cOmqqlicgNTll32uy/saq6l7Jb2LtcGqumfHdfmshzcW8eC+mnJ
LKfurCjj6nNU6WPCsnXNtQEb3bU0xnTk/fQqFdVWa2axHO6ffmnHXC210t3c
1+eliiYGWp1h+bu/Q9zTCC0NLnhgGZSuon3Ol/ewbFj+9Ou0aC1Nvn2poPYh
FeXVmlrOsq5OToZ1opbiXr7pb7xaRX84zbjG8svww4Z9SUuvWlxrm+GnosbR
XnVZjn6a3HRLvpZiIsvefnFWUY2oqzyvv5PR1katpQ/mKe9ud1bRirB0nlvk
rV7e7IuWnu9s12JgYxVp167i2crx2jaX6vf8Yd82ppO+KElfN4Vn38XLMx61
FMjT5FWk5XMlLbRbxvN51YjFp6yq53jNRYtP3lDSpwRHnhu/WNXwr94C1bbZ
8r40QUlrElfynBk7/I2Po0CjXCIT1TuUZLtgGM//DgubNWS8QBd9lpglLq+e
U+YreP48aMHdUB+BBFXdqP6+Sgq2DOQ5J9nfs3mAQG727zRxY5VkkziP51OV
D/sZLRPoeIe1nwrtlTT9Sx7Pp32GxfivqZ7XNtF2goWSWsweynPx+LbLOm8T
yErz+d3TJkpy8GvDc5ahfvH4WIFqTXHsekpXSb42ejzvmpx+QHVYIIPYhGy/
DwrasIZ4Hqkx2fMiSSDj6xEu9UoUlNpazAd0Gy4ddkmgxRWtTPblKejI4AY8
6zimqVukCnRdHTizbaaCYral8hwUXcPXO6v6OTx7XG/7RQWdeKPL8/BlR30b
3hVofMaR25XHFdTyryM8P6wv9O/+UKCU2SVmU/cryG6plufFnxtb3CkUKKbm
4ymp2xUUGiDm4v71HAqLBapUJUa3XK+gTRl1eX5VpLfHs/q+TPGoSFhUfV8O
myPmBk79jcaqBBpY1tn5frCCrFX9eM7bcX1Fqkag7vM7vu64UEEP7cU806vj
rsOvqr//cWuebJinoAUNxZyYEvtG9231r+X/mr3zU1CN5WKe2ihU/2n1fd/L
JifRc4aCHF8s57n7mUUDOlbvB/Pc0sxvVe8HehvEvFAz8nlZ9a+3Ox2vNWCq
guJyxdxF+YrvGV3CXfmeYV8kZunn3WzEnzfFz9vh9681Xvz9V64Ts/R5wruK
n2dgsfh5pM9v/lX8/K+XiFn6847zEv+8N2uKWXo+mSHi82lgK+b6eJ47dbvw
53n3sfg8BTz/OXPF55/tIWbp+1r1Q/y+ZieI39cifL+LzcXv19pNzNJ5CIkS
z0N7T/E8jMD5CX4tnp8LF8TzE4zzllS/kJ+3manieZPOp4HxAn4+y7zE8xmH
8xzVqzU/z3o1xPM8GuffVT+Sn/+jj4x5lt6Xwlfi+zKnp/i+SO/X0Svi+3U1
vwbPz/A+5jlX8PfxSA3xfUzC+/tbjPj+Nv3mwHMS3nchVnzfT4WJ77s0H75f
FefDYktxPnzCPMnzr8fnSXxMAM9VmD+Xy8T5U74+lOd0zKumpeK8untnKM9N
MN+McsX5Vr8ykmdpHgaeEefhiffDeZbm59A8cX7eD1jKswXmrc5Hcd5GdUvm
uSXms5urOZ/P80+v5HkD5nm2SpznuX8Sz3sw/7cNL+fzf+CRKzxL90Vl/hJT
dl90a/hSn2XpflkTmjaY3S/dj6dcZrkR7iP9fXuL+H00K+ody1W4v47lpndi
99fWJWk7WJbuu3O31gxg911WkVECy9L9aNBi+EN2P447cHk6y0txn7ay1J3H
7tP807+1Zlm6f8foWrmy+7fj3Hm+LEv3dVbo2vXsvp5RfqU1y9L9Xjh53kt2
v+sPaDSJZWkfePH8u4rtAyP6jfmT5TzsD2vLM9+z/cFsQnIyyy+xb0REzzZm
+8b+P/dUsH1Dhf2kpNFlL7afrPTe1oxlaZ+p5ZLtwfaZk0WffViug/3n4dWQ
vWz/+bj0LbEs7UtZC8yC2b7Uv/fC6yy/xX7V7mRIK7Zf2QSYxrEs7WMNVt6J
ZPtY2YW8IJal/S3+0awotr8ZhN3uyfJU7HvTXSd+Yvve1QtbUliW9sNJX0d7
sv3Q/2RzLcvSPlmw8mlftk/OjR50lWVp/5ymfFGf7Z/1vMeOZVnaV9u8dOrM
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
RlOZbxTDNzxkvhEv843/AZnhuQ8=
      "]], 
     Point3DBox[{-0.574063121135662, -0.8106947205047389, \
-0.5740631205456289}]}, 
    {RGBColor[1, 0, 1], Line3DBox[CompressedData["
1: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
G2o835iDvrGK5xt6PN/4H5Rxjfc=
      "]], 
     Point3DBox[{-0.574063121135662, -0.7120388432687716, \
-0.5740631205456289}]}, 
    {RGBColor[0, 1, 1], Line3DBox[CompressedData["
1:eJyd2nk0V+kfwHGkRYYI7SslVCpJaU9ZijZpJ0tRTWWkPYSSQWmyC9EyTAup
LCn0ISotJEsTReZ+19uqGqVCv/s8Pvefe06nOb+/3mfmON/zdZfn+TyvDHf7
zd5dSUFBYZOigkIXrs7F61Our2Ogw9Ios+s9KSwZ3ZXWM/pCjJoLA2cTdQaU
n5SC0bTW/qQrbjGB3TcwINXqcreHtxTGPk6/Q8r0Sgs+/SsDhY5aUTWWUnhe
FxJJqm85puXxDgb8lqdeXdhfCl6H31whXbUy4Lcj/gxUTX/qH/laArkt3w6Q
ft64vG9hOAMu4f3n3QIJOLbrziW9s8awzD6ZAWX9mPa2SAlcmvRHG+lDm3lr
J11hIDElbPh6DwmELQoYRnrF6f3HBXcYmPQw2VFnqgR+jUpYS7rivpH9ngYG
Rrjb2puqS+DF+RVLSWs/vjBM+sTAjMTjjk2MGKynZq0lVU/86ntCUwSni5UX
mueJYVPePDtSXxeHTwuNRQDWi8avOyaGQT6Z40h/HyCfG2cngjvn2rS3uYth
1v0A2pgHmZ72W0UwcVLck4MzxPC6aAbtOOMKY8dwEZwZEvvmRh8x9NnmSKtn
8vfUiEwRPE2smTfuvQgeKeXS7i+3iKioEsH5NyLt1ociyJTW0X7LX5T//pMI
SlQCbo++IIIHjgdp7VUf9qgbKIbmIXNqG0NE4K9qRWuTH1a6fo4YJo86eFdv
swgWhx2gzXlq5eq9UQxz5izvp2orghvXptOGTtRPkYaL4eTUuWZnud9bcU4P
2vbd386fzRZD6yffwFYtEViqaNJmnT4z/tgzMexy1Vqi842BpoEbF5OanBDt
OqokgXSbwk+KYgauhxe1kP6htWZtsKEEQnLO15ZWMHCq3raGtOnaWw/3JRKI
THm6yS2fgd5nemwkzc3bWaK9RwJLm7zXNpxnYOfZoatJHV4pzgg8KQHvXUkn
zRIYGKaSk0DqYBprfqJEAhnNs323HWVAsyl7L+mdgjOX7FgJ6L5wueEfwMC2
oGG5pFP3ftUKV5eCttdvFzfvZuC07dY00m6X0x0WTpRC0KzVi/Q9GUhfGGxD
+lJv9s3AlVLI3f73psyNDBz0M3QjfbL2xtuhPlJolBScaXfjfv9ao0RSF8/q
4iHJUhjS1HKqB/eeebbsjSc10r04Y3eRFKY2tQ29y72Xse+O9yFdYDrffygj
hYaZEWrjnBkQ15h2IX37etRf2l1kkLLj8OlJrgwYvjGPJa0e23F7iZ4MjHwP
7XrEva9jf1m4mbSb/N97jyxkkHYxI7F5MwNlS6OOkX7et2XrMVcZHBqnkn3U
i4GIZO00UlGTx7AwfxlsqEhViNvLgMI80ftYrk1vihSLk2Twa7XPXqWD3HVg
vmwifVSqf3vCdRnE3W1/Wsxd34J+5WWkoeXN557VyOBCjHPu3XjuvidFppIG
NNR53Hwngz+7xYd1S2MgLstiH+mpjDj9ehU5JM4aUeKVzUDahbVXSO2Slm0f
pyeHKQPjyltLGMgz3p5Pumeygj5Mk8Okt991I2oY6KoZpUFq1DXYM2yZHLZG
TLIfI2VgpkP8LFL/rUU5kb/KIWaflkphKwPjrR0/FXBt22qRXBcgh+yZ1waZ
/SKCs73bVEh7faz74hIrh6GLy4+HDRNBs7feAVJFhbJio4tyEKd+O5kxSQQv
du05Qut/tpc5yCFpwb5rkdz7M6aLcSppbN117WNVcihz8jgy1k0EA4670Ybc
Lx40RiKHme9l/bz3ieD1SDFt38ogH53Pcnj4KjDeIUIEGaMO0BpY5R+368FC
6ZReEffOi2B1gCqt+06f4up+LOx0Cqi9fUsEOjm+tFfF1jszDFhoMDsTPPO5
CFacSabt3XhI7flkFo56bdM25NaP0I+baW8lWL52tWJBO4Cd6aMhhuTBUtrv
8w5snOPAwsgFGX1GjxbDB+ULtC2zvB74urKg3tKt3diKWycfdaEtu751ZR9P
FsaXVZ/1c+XWvZJK2oxvj6dp7GdBa52GmrqfGC75qnXWdV781sMsiGsNwv6O
F8Mf/fRpnzkM2j/2OAszh2rkP+bWm1vBarSlvZSfOSSwMLR5RPi/lWLQ9NOl
jXYqShGf5X7e66X5lDdiyNWV0y6QDY1rTGfh0sgEyxgVCWS3x9GmKKrtm5fD
QqF5tJ+yvgTMJ0fSKljdlPQtZKH8+tVPBywkYPf8Mu3uWCX3NaUsGGoGqXas
k8CQVQdpLfenuqs9YCExymuNjw+3bnV40j5WZaebPOauZ0xFSXOcBIz0yml3
tvTWv/+EheyJ8o2rsiXgIpbSPpve0+LJMxZWnW/5M72S2+d8/qV9+bRL3Mom
FvIy1HXk3H5pdlqN9heb6RqLxSxMN9Y52lVFCoMttGkrIwv8CmUsdz0SdRRG
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
      "]], 
     Point3DBox[{-0.574063121135662, -0.7120388432687716, \
-0.7120388429988029}]}}, 
   {PointSize[Large], Thickness[Large], 
    {RGBColor[1, 0, 0], Line3DBox[CompressedData["
1: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
AdkzzD5663aG7CHLHuFe2ob7qy9Ogeytgr+Fe4zZd9a9WWTPGcwT7j1mP770
HiB7MeSGcE8y+7Sgo4rsUflDwr3K7F/+yXlk7wZmLiF7+APu63AR4Z5euU24
t5n9vjVoKdnrPgdVyZ5fiXnAZIUwB6h/HEJyAZMf7ndKkdzg//wMyRHFmDcM
LIU5Q6RoP8kdTD45e1CYS2YV7yA5hckzF+5NJDlGqiCc5JrZmH/OZAlzj3df
LclBTF56bfmM5KS9ia/96dzUg/lKRD+W5KrwI7okZzF57NNBI5LD3lrOIbnM
GfNbT7UIyW3NbkEkxzF5r4hnTHKerbU8yX2RmA9lHDtJLoxQUiU5MR7zpPNP
L5IjN5ucJLmSyZ8ZWz1I7pQ7Lk1y6EPMqxsrDcLonJrr2nuDzq1Mvg02UNOy
FuTaaM1Evokg57ZiHpaq4VvTOVhpYbHTEUEuZvKzwcQLn+jc/PJURLWLIEcz
efujnv4GOmePPHRzf4Igd+dhPi9ZY3WAzuXaL57/Ted0S8zzIrnWJMePvBuv
Qud6B8z/+16lz6Nz/1Hv3fl0D3DDvlCis/YD3RPES9Ptbgp6w+BqYb/YvVpn
A90rBrtPHD0v6BlMH+kYpt9J95ApVqPtOgS9xBH7y+BWb9JbTj+emEn3mDbs
O8V7g0nPmZ6f0UT3nrnYj4pzxCfQvYizvecq3ZOYPpXRcI30KM3GsTp0r7qN
/StNJ5H0rrUmu0gP2459zbdH2NOcp8qQ3qaB/a5gfDTpdd+U/yE9TyRK2Ad9
1fRIDzxt8+Iy3QuZ/jgpc0cW3Ru7lDfp0D0yGvtm0pBkW7pnliR/NKR7pwL2
0ylLPGzoXgrzDfrpnhqIfdbN8YY73WOV3s5wonutGPbfa+1nSO/lpE0gPfgG
9uWHr76Snvzor2LSmznYrx8odJJefbk8m/Rspo//zLAhPfy9xrD3dC/PxP5+
ffYM0tv7C2aTHq+MfV/0YQXp+VtbVUjvD0UfMK+6QVxgS+Eq4gTF6AkbFukT
R/gy0Ya4AuMP8S5ixB2c622JQzBeQek4EafY9qOUuMUo9A159I1RLN+QZflG
GP5+I/SNxegbr1i+8QF9I/wXvrEA3+8P9I0Ilm8YoG+I9Qp9Qxo/T7Ff+MZB
9I0B9I3r+LyK0DeK0TfE8fn+RN+4j76xm+Ubfegb0/D8ZKFvzETfiP6Nb/yB
vuGOviGK59mB5RuL8Pwr/0ffuIf3Sxt9oxN9Qwfv4xb0jVb0DSW8vw7oGwno
G+1433eibyT+xjdycJ74oW+0/8Y33HFeTUffcEPfYOabD/pGLPqGKc5DXZZv
MPOzC31DE30jAeetB/qGLss3DP6jb2ji/D/xH32jGveLGvoGB30jFvfRCvSN
G+gbEbi/LrJ8wwb3XQP6hi76xkbcj5L6Qt8IR9/wwn16EX1D4je+0Yn7ej36
Ru1vfOME5oEW9I1glm8ooG+8+n/6BpNn5qNvxKNvVGD+OY2+8eg/+sYR9I1W
lm8Yom9EoG+oY36zRd/oYPlGMvpGP/oGkw/no294o29IYp4cQN84h77hi/nz
EvrGTvSNQiavsnyDybePWb6xGfPwT32hb4ihbzD5+Tj6xhv0DSZv30bfUGb5
Rhr6RtVvfGME5v9x6BshLN/IRd/go2+Mxn6Rg74xmeUbiugbsSzfOIK+oYa+
8Q77zgf0DUDf6MB+tAp9oxx9g+lTmegbC1i+IbFJ6Btt6Bs52Nd2oG/cRN/w
w34Xir6hhr5hjn2wGn1jJ8s3vNE3/NE3RrN8Ix19g+mniugbBegbM7HPJqBv
uKJvMP33PvqGLvoGH/tyPfpGDss3bFm+wcM+vgV9oxZ9g+nvk9A37qJvhGPf
l0Xf2I6+0YE+MAJ9Yw76BuMJfegbSugbjD8sRN/Yib7BeEUx+kYwyzeM0Tem
oW8sxJ83QN/IRt+Iwt+/DH1DG30jHl/PU/SNRvSNNnz9Mugb1egbzPv1Qt8w
YvlGMvqGO8s3vm0W+sZdlm9cRd9IZvmGEfpGOss3jqFvzEPfmIXnIQx9Yz/6
BuNjIheFvtHC8g199I0q9I2JLN94jL7BnOdx6BthLN+Q0hP6Rgz6BnNfetA3
2tA35uH9SkDfmIu+wXhjFvoGB32Dub8b0TeCWb4hh75RyvKNZvSNwb/+r2/c
R9+YjL7BzJ+j6BsbWb5Rjb5x4he+YcXyjZHoGy9YvqGGviGFvsF48lf0jU70
DcafU9E3TNA3GK9WQ99Y+AvfKEXfYPbFNfSNcPQNZr+Eo2/sRd9g9lEx+oY5
+sZW3F/v0TfyWb5hjr6hx/KNfPSNMJZvFKNvSLJ8g4e+kYS+0Yf7Ogp9w47l
G5vRNwLQN8wwDyxH39BA34jG/HALfSMYfYPJG/roG18Khb5xDvNJAvrGNPSN
Eyzf+JIv9I05LN+wQd9ox7xUhL4Rgr7B5KufekLf2MXyjc/oGyXoG0x+60Pf
6P+Fb1iib+zFfDgOfeMwyzfWo284sHzjb/SN8egbDzCvuqJv1LJ8Iwh9w5Hl
G0PRN+aib0zA/KyPvgHoG6cwbw+gbwxB33j2C99g/l4pir4hhb7hiPk/An1j
N8s3OOgbMugbYtgvQtA3ZHuEvvEC+0gr+sZY9I112F+GbhP6Rhr6Rhf2nQL0
jTHoG0w/KkXf+MDyjZvoG4boG3exf2Wgb3igb2zCvrYNfUMHfUMT+90L9I12
9A2mD/qjb1xB3xAROUb640T0jR70Debv6afQN/LRN+Sxn05l+QbTZ13RN2ag
b0hi/01D36hD38hg+cYT9A2mX2ezfEMG+/jQm0Lf+IG+cQf7+xX0jU/oG+os
3/BF34hAHzBD39jI8g0n9I0Blm8c/4VvtKNv+KFv/A/d8DaM
      "]], 
     Point3DBox[{-0.27999999968724937`, -0.5999999998986456, \
-0.5999999996669781}]}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], Line3DBox[CompressedData["
1:eJyd2XlUjWv7wPFdxnKOoUg6SUU4SiIlOc1JFCkhSSWFEk3EISmFTJVOpqSB
o8KJDi+pI1cDSkLtpt1oT09zFMqsdz931/Ou9XvWa3nX7y/ra7X2yt77ue/r
+lDz8HPwkuZwOFulOJwhkj9/dvZQOdRZAcqLNXR1dUWwLGjXFLoTBqx2SfdU
wMS6Mq3WD0LYnadM+sC+CdVBXyvAMmXZ0t33hTDT6VEV3aXxN30eyXPh8uLF
Z6VChXD7nh3pUFXB7zXzuOC01tQ63UgIMsrhpGcrPan43ZkLH8xVj5z4LACF
7EDSf2fO3hZ8jAtGPGULXrYAZAcoH7oVpUbMjirkwpBNX17fDhRA8MkXWnRX
qXlw3aUrIWre7d9stATQM8yQ9E2OXFfG0kp42F1c8FTMh6De/k66hwZqf+Cc
q4R3aeOveibyofL4ZNJBUuEJ0t2V0JA+z9FqFR9kqJ986FaPrw03s66C+1Ky
3akyfLjUbbOR7sMKLhOWX62CkBBNQ4cDLyGJf0GK7i8DMcv/HlMNcs/n6f/S
2QwrzAwt6P528PO793urYW3b0MtSa5uBy3/aQ7eBhs7Dqx3VML26Y8SWoiYo
17tL2tch2d/OtQaS9ir2X9Npgm96V0nfNCxNCqyugVm2TVtnJTdC7NKsZLr1
7VWfJtnVgr+N5iKTMY0Q1x/2jG6t3FXjPMpqwcmmPMMkvAEUUldOoLszNb5p
uQ0P/PNthPv76mFs6TAR3ev9gyPfP+VBZOPqW0t868FbIH+c7iL55H2fltdB
4D8Vjq1UHRzp3hLUL2kpO45Wb3kdtIbErk3yqIMVrQpFryTtft67PdyxHiau
lDqTKeRB7oROvzBJu4bOzl7Nq4edLQZqdpt5oOS3JtBR0rbRFguUXBpAP+Ca
fnZ3Lcza07KM7qI6t+zIlw3wbqrnQYXfa2HbajMvus/8WXDY1qMRVr5ue3F6
ZC1cy7k43E7SimZuF/XEjWBcHFPmmlgDHVq58bqSbjvjaPvVswmmPRyhfmJ+
DZyyb3/6TdLzhtfV7RY3QWKOlbVFRTXs+k2vYIek73rkNWzyaIadraYlJwKr
IcvZcbynpOtzbhlcbm4G1a6xckcVq+GYcybpkw2T7sisewm/HT/71byoClz2
KZMOrdzisLPiJVx5pivzOLAK4np3kXbUtx8vnMqHl9WaHKUZVZAx3J2026lV
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
sU2S79frC6SZeaz/iPnluf1imGrkR9oV57dXPI6W4mjJOTctijQz75WKLAU5
0yh4YeNPOhznw/EuHcWjDCXPsfoh0jE4T7p+25IovUJynhpPIc3Mn5m+nuVx
7pLztyaddC7OqxtrTEOzAiiIKm6xpedVZr7da6qtbx9OQdrMBZ1ekm7BeVi2
Tmy/KYYCbruuHser6T/zs+mk1P6XFyjIMlqYO1fSzLz9zthk/V3Jeaf88K+F
9pIuxPm8fNXKww03KZgw5NIUuu1wnucU2M83lZyzZn+1OtPtjPP/wafXdGrv
UyCMct+5StIeuC+UG67pPSU537k2+1YfkPTAisH9YvcKw/UekvugwtxbtlvS
zD7SPsykY6Hk78VWM+68lbQL7i8Dvt5rZSSvc8bFOYbuVtx3yvbvlS+S3AcR
zc4tdP+K+1FZ/oiJTncoCFqUPJFuZp/KbErvzZGc+1FJZc/pvoX711XD0wH1
qRT0ftZIoXsH7mv+rzwKr8dTcLo3k7Qu7nclEyJjVA9RsH/IG9KciMF90F/b
WFMriIKRpmNf083sj0o3/bILXSkwTLUyoTsS983zQxIc65ZI7o2y659sJa2K
+6nyIk+HzdoUXCtpWEN3MO6zHi7XN22Uo2Dczv71dEvj/pvedqG86K0Y1NQm
kb6O+3Lu0495UVwxnEvrIfsyF/fre6oddpk3xHCnci5pZh//lunwWidKDJb5
j8g+fhP394wZU/dPcBNDr3kD2d81cd+Xyq0+5KYrhoVjtpIOQR+wqb3urzBM
8voPdpMuQ09Yv8DkqmWVCPaWWpNm/CHGTbrwfYoIyg8XEH9gvIIy3BBtuk0E
zx/8Qno0+oYK+sYilm8ooG/sQt8Ixdc3R99QQt94yvKNv9E3DrB8YxT6xjz8
935F3xi4+399wxR94+u3Qd+Qx/dTGn3DkeUbR9A3hg4f9I0M/LxK0Td80DdG
4Of7DX3jGvrGbpZvyKJvqOH3Jxt9Ixd9I5LlG4ks3/gZfWMz+oYUfp+d0TdK
0DcW4PdfE32D+wPfuIPPlwHLNwzxedyGvhGDvjELn19n9I0vKYO+0YbP+070
Dekf+EY+nicB6BuRP/CNTXheqaNvPEDfYM43H/QNVfQNazwPf0PfmI6+wZyf
XegbXugb8XjeeqJvpLF8wxR9o+cHvjEfz/849I3gH/gGD+8XbfSNg+gbJ/A+
skLfcEPfCMP76xL6xjn0DQe875rQN/5E39iI96OMyaBvfNk46Btb8D69hL7B
/4FvdOB9vQ59I/wHvhGH84AAfSOR5Ruq6Bsr/5++wcwzc9E34tA3qnH+OYe+
kfs/+sbx7/iGGfrGLPSNOTi/OaJvRLN8IwF9owZ9g5kP56JvDEHfkMF5so/l
G/44f15G35iBvvGEmVfRNyj0DWa+vY++MRd9YyvOw99MBn3DCH2DmZ9PoW/0
o28w8/Yt9I1RLN+4+j/6xiic/+XQNzJYvlGAvqGOvjEG94t89I0HLN/QQN/Q
YfnGcfQNZ/SNTtx3etE3fNE32nE/Wo6+IUDfYPapm+gbrizfGLl50Dd46Bv5
uK/5oW80om8E4H4XwvING9wHeegbB1m+4Y2+4Yu+MYblG7roG8x+qoG+EYy+
MQ332XiWbzD77130DS76hhj35cbv+IYj+saf6Bsi3Me3oW/w0DeY/V0JfaMf
feMA7vsK6BuP0Tfa0QdGoW8Yo28wnvAGfYOzb9A3GH/QQ9+4gb7BeEXZd3zD
En3DBX1DD3/eFH3jMfpGBL6+BfpGMfpGDP4+D9A3bqFvtOLvPx59Qx99g/n3
bkHfCGH5RgL6xguWb3za+t99I+07vmGOvpHE8o1Y9I0V6BvT8fsQir5Rjr7B
+Bjn0n/3DROWb0xi+UYE+gbzfZZD37jC8g1Z40HfOIO+wTwvr9A3EtA3dPD5
ikffeI2+wXhjNvqGMfoG8/xu/I5vKH7HN/joG29YvnEXfcMXfYM5f06ib6Sx
fIOHvkF9xzdOsHzjJ/SNcpZvaKNvUOgbjCd/RN/IQ99g/DkFfaMLfYPxam30
DcXv+MZi9A3mvkhH39BD32DulwPoG3fRN5j7qAx9QxN9wxfvrx70jXaWb9ig
bySwfKMYfeMcyzfK0Df6WL4hQt/4A33jDd7XEegb2Szf2Iq+0YO+sRTngcXo
G07oG5E4P2Shb7ShbzDzhgnLN5JwPolH31BE34hj+YYa+sZMlm+I0TfacF4q
Rd9Yib7BzFffjAd9o57lG+/RN9TRN5j57Q36htl3fKMCfWM/zody6BuNLN9Y
h75hxfKNv9A3QtE37uG86o6+sZflG3vQN0pZvjEUfaMefWMizs8m6BvP0TfO
4rzdh76hiL5RxPKNsegbzP9XSqFvWKNvuOD8H4a+8YXlG1z0jTz0DWncL/ah
b9xD33iE+0gL+sZX9A0n3F+Gbh/0jSj0jS7cd0rQN9LQN5j9qAJ9YynLN26g
b2xF3/gX7l+Z6BuN6BubcV/bjr5RiL4xH/e7R+gbCegbzD4YiL7RYTLoGxxO
LNkfJ6FvWKNvMP+ffhZ94zj6hgrup5PRNy6hbzD7rDv6hgr6hgzuv1fRN35C
38hk+cZx9A1mv85B3wD0jfG4jw+9Megbeugbt3F/v4K+wbEY9I05LN8wQ98I
Qx9Yir5RwvKNDegbu1m+cQp94xHLN9rQN7joG/8GOTNh0A==
      "]], 
     Point3DBox[{-0.27999999968724937`, -0.5999999998986456, \
-0.2800000006880522}]}}, 
   {PointSize[Large], Thickness[Large], 
    {RGBColor[1, 0, 0], Line3DBox[CompressedData["
1:eJylmXtUjfn+x3dJQpnkkogpjEFTciu3fJIaMe4n45aYYnJcEoZxiXInIRlJ
QockhdLVqXi27ElCdJ2Q7pd9m6TJTBJzWmu/P7+1PGu1/NY5f7WWtcuzn+f7
eX9e79dj7r5h/iptiUSyWksi6dD2M6TI7dCCFWoyNbbL/WpLzv/9zJ7ReG7z
EjWNHhRiXe36gAz6Z5/4OS+P9IUHAUXOajIeMmCi30EpDR5dElW1oogmj2/6
R4iFmqSr+kW5WyfSvG1djx/Ke05SyeXCKm01ZYUWB9y9H06bYk08Thq/ojKD
t9OaclQUHh2h3vrLHuH32tQO3xqVU3b+MY+egSqKyzpd+qg2UqhRLsq2315B
ftTN/fy3Kko/UNYha2GCsLDH2m6OQiX1n1n27G2jkppG2G1wqv63IEnvOGtn
dRXFjj5OgaeVtMgxwNzma0FoSQ5vmqysJse84FyFlZJmbB9IV0PvCZZWI7yi
8mpoQ0F22mFBQbNHxun+2OO+oB1aOnZ8eC1N/XA8qWWagh4PqH8T3UUmBKkV
W0MW1NEy4fWq/Cw5xY9dvcDhmEywjvO8uOptHb2r7VsQ7SCnFx6vyrdflQmm
BSY9TffKaci1IZX9kuuo6X31xpKVMqHxrznRHT7KyVM5pThjUB1l60w72/3Z
fUE+zuDjsLUK0tm9p+OkgFoy0pnmXdCYIfS/cuzgD48U9Lz+wI6BDTWUfGpY
RHPhPWFs8Z4BjmZKyi+1reg2t4YiOpuu/3mPVIg/oL/Gdq2SupeVbQ6+Xk2T
ihwvSt7dEQr76xpuuqEkbe3GnjN0q8nnoall73OpwvR3N8205EoaXNT1cNKy
Klpp9kovvylZ0LU2mP6kn4pOySoeuSVUUvE+v5JYwwSh082Yixenq6i086hf
fu1USVkX5hwc2XBDGD7fuumrTSqysZte6b60ghrCHtcbel4RUurDw/48raLR
d2xSo26Wk5+JuXLP8LPC7RvGv55KUlHfjbsatbTb/j1s6ZC6qT7C5KjH33nl
qijCN9o2IqaU/GR6kYceHaQJf58YK1eoKONlRavS5RX5ufs7Hxh0gYabOz/4
/m8VKaXLXfZKSsjZx91lhH8UVS8+NFfHSE0+NXOtdGNfkPauKWPOd75FgjAz
fuRANVU294rS+eE5zQzovGdzXhINGpMbY2ytpk3Xmn0/9i4mv98qn3YOS6Ut
8Tp/1k1U070VS8955hZRs5lq9WgPgS7MGjU2x0lN5+ZPP3c1sJAi7sWsO2GU
QauzLB80zFLT5iM3dvZdUEC23ye1RG6Q0W/Ttm/e6KKmeOOS8d2/zKcK7xmO
Dx5kkn5qq5bXYjWFTtvlm1efSz91GfvsnclDurVzZLpkmZpcDWbNOSd7Rv3W
jrvlueoRxUj1SuyXq2n5wo/uNOUpdYxLjf3+2hOaajZH5dA2z8veVaT11n1C
04Sg60NqnlLT6PJeJm3/3vTDtF91irPpO6M+YV/r59IOv4ve+W5qOvv+sP/U
lCxqLH5/3co8j9JsXtn4uarp+J1gO0lEJl253Cdj28h8kq84+rdF23Xe2qRY
4XpBRlEHI4pLJxVQ/wxvVUXb9+pg3L/KKzKDws+m5U+ZWkgBcxY9iZmjpqsu
uy2c0qV0t0f3uCOORdRjaq9ZQdPVpP2v6VZZwh1qMXfIirD/jST9e+ied1DT
pTfKxycHplJ23ytDD9kW04GtBpfyJrRdT387m4LwZGq+uvfNsGHPyWvNTw3j
RqkpZ8uZY94TEkh7SEqmf68X5F5e31IwVE1yk1yLnaWxtO+nh9/FtL6gycFL
jWMGqElvje4wo93XyGdSUExg6Uua/OryX3d7qOmw9ID1qH9cJo/gc8OnppVQ
1YSrKT301GR9Y8zZxNRQyrNZf/9J0CuaYb5LEfNeRRLbpV4tG47Tm486j+1W
lVLWlinhR+pVJLWdaD//J29a1v3B5UujykjL4+z2m+Uqsk/7wvWt6w6h54aJ
/zR4X0Zdso0j++WpaK7hkv0TawOFZc98ljovLycH98sNuRkqsi68ajQyN1QI
8w8eHX63nL7p3SrLjVdRYOEf9infXBImzzt1M6RfBY2bvX1sv0squv3tmiuD
pJHCv30mRU/aWkHPjhhLbrblqeH63387NChG0F1/asmZnApSPJIHHdmtoiyd
mR7HFsYK+23G2yQOrqRaVfMXN9aqaNuAuZZeN28Jodcaqy9sq6T56YlzjRep
qEG/YppBaIKQ4NbH2iO7kjp+VSHPnKqingcSNrz1ShLG9M1s0u9bRcduWw5L
tWrL8cbdzlstU4QX88KNozyr6Gz9OvPXfdpy/O7Ela8KbwtXSjrvsE+oorkf
dlzy0G67TqshOltXpwqvKyMbKlqrqMHxJfVSKWmd1LjicE2a0PWD/sQQx2r6
clmPeVr5Siow392ydNYdYbvxvlYv/2oq7ZbdODhVST2HOq0dFX5XSLNITtqY
U03uL2M77QpXUtZAY8eZpYJweegMIcawhgr624zXPaik27Ujx/6xTypM2G/t
NHReDQUtNGlOX6OkPk6Fdue73RO+lcc6NJ6ooS8fZficn60k6z7OS+jEPaHT
hC6+PZ/UkLnVgQeXRyopPO/a740dMwQ3eaz/Wb1a8qxPCX/UQ0nxbheDn27K
EJr+aEg/6lBL+U6JIYZvFbTXYdnXqsIMISqg/6i3O2qp55CUTl6FCrI++vLC
4hH3hZerO2eX3aol/ZJog7JEBSlzvhhk6XtfCB5aO2RBXS3ZW7486XZKQd2O
G7Ru+fW+ED10zXW3fnXUHBbsUOetIJuWhhMO2jIha/AE346z66hqp/DL5lkK
Crqxc/nFsTJhtTJg/3zfOjLxmHP/w1AFyUbN7nBmuUxI/kbLfXZsHfXJeJrj
20FB2SuvDxvlJxM2OF7YpVVaR5U22T5/lMjpx/g7v/x8RiZUz373YXNXOeX7
jl44P0lOWaPtTNZdkQllyduyb9jKaURzfszpADkFTw88bxQtExxS444mu8uJ
f/Ln+XOl+D3++4X4u5X4f7JwPeW4Dm9cVwau3wTXnYjv4Y/vy9/TE997DO5P
Je4L3yd93E++j9dwXxtx/6fgvp/Gc7DB8zLAc+Ln5oPny881Es+Zz0MezgGf
iws4P6twbpbjHA3HeRuIc6aLc9cb53MAzqUTzmkqzjOfYz7Xj3H++dxHYA76
YF5WYk54bkowX2WYK56zlZhHM8xhF8xlq6VmfnluGzDHWZh3nvNIzH0i8iEE
uVCCnNBDnhxFjnCuVCN/dJA78cghF+QV59QZ5FYD8o1zbR9yTg95yDnIuViM
/OTcTEWOhiBvOWc5dwMLNPlsgVwOQU5bI885x12R65J0Tf5z7vfGHpDaaPaF
NvbEcuwNs7Ga/fIQe6UFeybuumYfzcQeeoG9xPuL99ZK7LHmf2r2He+53dh7
vB95L/KeDMY+9cAe7YK9yvuX9y7v4SDs64PY01nY263hmv3+t6lmr3/Anv8X
eMAIHCADF3QCPzA3hIEj4sAbzBnMHV7gEyW4JA6cwjzDHMNc0wj+2QnumQkO
Yl5iTmJucgFfMVd1B2etA49Fg8Oa12i4LAr8Fg9uWwKOSwbvGYDznoP7NoIP
i8CFE8CJV8CTnuBIf3Al82cYuLMJHOoNXt0ETj0MbmW+Za5lzt0FHmYO1gMX
K8DPzM3M0czbzNne4O5I8Dlz+QpwuhF43g4cbx+i4Xrm/xRwfyB6gC36AvcE
7g1l6BfD0Cu4Z4Sgj3RED1Gjl/RDf+mM3mKGHqOFvsM9Zx16D/ejAvSiMehJ
3KcS0KMuoVe9QP+yQe+6ix721y5NXxuMntbaQdPbuN9xr+OeNxR9sAE9sBS9
kPsj90bukS7om2PQM/3RO7mfci/lnsp9lnvsIvRa7r9W6L3O6MFX0Ze1UjQ9
eQx6M/drbfRqPWtNz/ZFH1+MHp6FXp6F/q5Ab9d7qOnx3Pe553Pvvw8/4AEv
UAxPYAefMBMeoQhegf2DBbxDV3iIx/AVevAUk+At2G9Ywmt0wU/+/Hx8rtX0
U78xGH/XTOQ3/sR1OIr8Rgiuexu+RwX7jRjN93wj8hvSdvyGTOQ3jHH/TXHf
u+I5xOF5fYPn9LYdv2El8hszcA60RH4jGucmAOfIFedN2o7fKBL5jS9xnnNE
fmMxzn8Izr0ac8Dz8gJzMgBzU4z5ysZc2WLOCjCPYe34DWfMbRHmmOd9ZTt+
wxm5oIOcOIs8aUaO6CJXapE/9hc1uWOBHJqMvFpxXpNTScgtC+SbtI8m11KR
c/rIQ+npT/1GIPJTmvmp37jXjt+Qi/xG1Wf8RhXy3xW5b/4Zv5GB/dIo8hvh
2EcnRX7DG/vLTuQ3ErDvykV+4zz24ybsxQTsycXYp6bwG7xXPbB/Jdi7TtjD
btjXTv9PvxECHmj+H/2GCfgkWOQ30sAzqeAY5ho9+I334B7moHDwUg44aS+4
6TD46iO4aj04Kxo8xhzGXOYNfjsObrMHx8WB9/aD8wjc5wc+ZC6sBidK4Ddy
wJHfgStX2Gj4swHcmQ0O9Rut4dVV4NQO4FbmW+bazuBcb/Awc7AjuNgbfuO8
yG/Egbftwdm24O4o8PltcPnTz/iNcvD/HnC/HD1gv8hvuKA3cL/gXsE9w7Ad
v3Fd5DdCP+M39OA31OhFb9CTuE/pi/zGM/Svn0V+wwx9LR09zQO97bHIb+S3
4zdOohdyf+TeyD2S+yb3zIEiv+Eq8hvX2/Eb+9F/r4j8ho3Ib3BvlqNfn0Gv
noyebdiO3xgn8hvc47nve4r8Rhb8QBK8QF94gkz4hI3wCGX/pd8IbcdvZODz
FvhcBX5vNf4+/92qz/iNTFy/Ma47Bd/jOL5vX3zP1SK/UY37kon71AX38x3u
41XcV/ZL7JXYM7GPYg9Vgud2EM+3B54re6xEnIdcnIO/cC4u4fx4ivwG+zT2
aJ1EfoO921Sc03SR3xiPc/0M578Q557ngH2gh8hvFIj8xjbMWRjm0Rxz2A1z
yX6S/UY95lgq8hs89+w/2Xu+RE44I084R8YjV9TIH/aqicghzivOqbPIrWef
8RtKkd/g/OTc5ByNEvkNQu6yf7ZELocip+e24zekdz71G/2wB+zHaPYFe/Af
sTek2C/szdmj22Mf8R5i7+6N/VUt8hsS+Hzec+z1JX0/9Rt+2JP8voDfE/B7
gwDsX967LdjD/D6C9/Rj7G3e77zXec+ni/xGMrigm8hvXABHXBH5jZvgjvXg
EwVzCTjFDzyTDo6RPNdwzZ/gH+aeGeAgN5HfYG7i90fMVR9jNZzlBR7j90xN
8BvXwW/MbQvAcfw+izmP32t5i/yGAzgxBDzJHBkJrpSBP5k768GhzKvMqXvB
rdXg24HgWhdw7h7w8F1wcIOPhosbwc+V4ObmnRqOFsDbQ0V+I0LkN/g9pKHY
b5zRcD3zP3M/9wDuC9wTuDfw+9PhIr8RhD7CPUSGXtIX/aUTeoshekyTlqbv
zETPkaD3GKIfcS8aJ/Ib3KP4vTH3r3HoXZnoYbp4H22KntYH76VXo9/VodfJ
0PO+Rh98jR5Ygl7YLPIbJeiR89E3bdAzg9A77dFPT6OXlor8hgQ9dpLIb/B7
fe7BKejLr9GTXUR+40OaplcXjPjUbyxADw9BL3+I/l6F3h6IHl+Ovv8aPb8c
fuMu/IAfvMAikd9gj/BR5DdM4B1sRX6jN/yGKbzFfwDNK1+C
      "]], 
     Point3DBox[{0.8867595333055815, 0.23795006481866998`, 
      0.23795006481866998`}]}}},
  Axes->True,
  AxesLabel->{
    FormBox[
     StyleBox["\"c1\"", {
       GrayLevel[0], 14}, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox["\"c2\"", {
       GrayLevel[0], 14}, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox["\"c3\"", {
       GrayLevel[0], 14}, StripOnInput -> False], TraditionalForm]},
  ImageSize->Large,
  SphericalRegion->True,
  ViewPoint->{1000, 1000, 1000},
  ViewVertical->{-0.06585359072224811, -0.024832700527368735`, 
   0.9975254641411088}]], "Output",
 CellChangeTimes->{{3.768769504307486*^9, 3.7687695354482045`*^9}, {
   3.768769733234541*^9, 3.768769755581222*^9}, 3.768769840323018*^9, 
   3.7687703908654366`*^9, 3.7688555954517794`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"CloudDeploy", "[", 
   RowBox[{"%", ",", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.768769841450034*^9, 3.7687698463668547`*^9}, {
  3.768770394214508*^9, 3.768770394426936*^9}, {3.7687704310409927`*^9, 
  3.768770432413322*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nonagon", "Section",
 CellChangeTimes->{{3.7678083142549973`*^9, 3.7678083258456955`*^9}, {
  3.7678256281491065`*^9, 3.767825630221481*^9}, {3.7681653304302464`*^9, 
  3.7681653444537373`*^9}, {3.7681736325649796`*^9, 3.7681736332545905`*^9}, {
  3.7684738145160418`*^9, 3.768473816900662*^9}, {3.7684797344151425`*^9, 
  3.768479736598308*^9}, {3.7684818374903917`*^9, 3.768481840682859*^9}, {
  3.7684843927180047`*^9, 3.7684843945760403`*^9}, {3.7687684300531006`*^9, 
  3.7687684330935016`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "@", "getNonaVtx0"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"not", " ", "for", " ", "error", " ", "purposes"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getNonaVtx0", "[", 
    RowBox[{"a_", ",", "p1_", ",", "alpha_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p2Neg", ",", "p3Neg", ",", 
       "p4Neg", ",", "p5Neg"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p2", ",", "p2Neg"}], "}"}], "=", 
       RowBox[{"getP2Alpha", "[", 
        RowBox[{"a", ",", "p1", ",", "alpha"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p3", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p1", ",", "p2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p4", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p2", ",", "p3"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p5", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p3", ",", "p4"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p3Neg", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p1", ",", "p2Neg"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p4Neg", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p2Neg", ",", "p3Neg"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p5Neg", "=", 
       RowBox[{"getInterRefl", "[", 
        RowBox[{"a", ",", "p3Neg", ",", "p4Neg"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p5Neg", ",", 
        "p4Neg", ",", "p3Neg", ",", "p2Neg"}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "nonaAlphaT15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonaAlphaT15", "=", 
   RowBox[{"calcAlphaCausticT", "[", 
    RowBox[{"False", 
     RowBox[{"(*", 
      RowBox[{"False", " ", "for", " ", "load"}], "*)"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", "0"}], "]"}], ",", 
     "\"\<data/nonaAlphaCausticT_a15.m\>\"", ",", "1.5", ",", "1"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.768760873019437*^9, 3.768760899844097*^9}, {
  3.7687610597325153`*^9, 3.768761064435935*^9}, {3.7687614496136136`*^9, 
  3.7687614496265755`*^9}, {3.7687617249550824`*^9, 3.768761734163453*^9}, {
  3.768761951155135*^9, 3.768761963131497*^9}, {3.7687620684350243`*^9, 
  3.768762068834957*^9}, {3.7687640136499944`*^9, 3.7687640141855617`*^9}, {
  3.768768529967581*^9, 3.7687685330872383`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"loaded: \"\>", "\[InvisibleSpace]", "360", 
   "\[InvisibleSpace]", "\<\" records from\"\>", 
   "\[InvisibleSpace]", "\<\"data/nonaAlphaCausticT_a15.m\"\>"}],
  SequenceForm[
  "loaded: ", 360, " records from", "data/nonaAlphaCausticT_a15.m"],
  Editable->False]], "Print",
 CellChangeTimes->{3.7687685730164537`*^9, 3.7688555954907084`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nonagon Exit Angle Table", "Subsubsection",
 CellChangeTimes->{{3.7683906295855613`*^9, 3.7683906396147614`*^9}, {
  3.7684064097935896`*^9, 3.7684064393546286`*^9}, {3.768480211455838*^9, 
  3.7684802212317142`*^9}, {3.768481844594421*^9, 3.7684818462100897`*^9}, {
  3.7687684756614685`*^9, 3.768768477893234*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotCS", "[", 
  RowBox[{"nonaAlphaT15", ",", "getNonaVtx0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7686816850160294`*^9, 3.7686816876729245`*^9}, {
  3.768683152854807*^9, 3.7686831544385705`*^9}, {3.768768483822398*^9, 
  3.768768490254108*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 117, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 360, 1}}, Typeset`size$$ = {
    729., {177., 183.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`i$92136$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$92136$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`cs$82048 = Graphics3D[{Thick, 
           PointSize[Large], 
           MapThread[{#, 
             Line[
              Part[$CellContext`coss$82048, #2]], 
             Point[
              Part[
               Part[$CellContext`coss$82048, #2], $CellContext`i$$]]}& , {
             Take[$CellContext`clrs$82048, $CellContext`n$82048], 
             Range[$CellContext`n$82048]}]}, SphericalRegion -> True, Axes -> 
          True, AxesLabel -> Map[Style[#, {Black, 14}]& , {"c1", "c2", "c3"}],
           ImageSize -> Medium]; $CellContext`poly$82048 = Show[
          $CellContext`showOnePoly[{"a" -> 1.5, "tsDeg" -> CompressedData["
1:eJwV0wV3EAQUBeAxumPAqDFGx4iNZgNGd23UaBaUUkqKiNKN0h0GKBh0KCgY
oDQoGHQJUkoJKCjf3jnfvT/gnheWMDh2UKqAgIB+KeFSKpDUpCEt6UhPBjKS
icxkISvZyE4OcpKLIHKTh7wEk4/8FKAghQihMKEUIYyiFKM4JShJKUpThrKU
I5zyVKAilYggkspUoSrVqE4NalKLKKKpTR3qEkM96tOAhjSiMU1oSjOa04KW
tKI1bWhLO2KJoz0d6EgnOhNPF7rSje70oCe96E0CiSSRTB/6pmxEfwbwEi8z
kEEMZghDeYVXGcZwRjCSUYzmNcbwOmN5g3G8yVuMZwITmcRkpjCVaUxnBjOZ
xWzm8DbvMJd5zGcBC1nEYpawlGUsZwUrWcVq1vAu7/E+H7CWdXzIR6xnAx/z
CZ/yGRvZxGa2sJVtbGcHO9nF53zBbvbwJV+xl318zTd8y3fs5wDf8wMHOcRh
jnCUYxznBCf5kZ84xWl+5hd+5TfOcJZznOcCF7nEZa5wlWv8znVu8Ac3ucVt
7nCXP/mLe9znAQ95xN885glP+Yd/ecZz/uN/Up4/FYGkJg1pSUd6MpCRTGQm
C1nJRnZykJNcBJGbPOQlmHzkpwAFKUQIhQmlCGEUpRjFKUFJSlGaMpSlHOGU
pwIVqUQEkVSmClWpRnVqUJNaRBFNbepQlxjqUZ8GNKQRjWlCU5rRnBa0pBWt
aUNb2hFLHO3pQEc60Zl4utCVbnSnBz3pRW8SSCSJZPrQlxeua5bx
             "], "tsRad" -> CompressedData["
1:eJwtlHlczPkfx+doappmprm+MyO2so740ZJjFdbnhfhR9ofaHD/FjyTHKmtT
7rJuuVosuRZZS64s5SpkqaytUBLtpvqFLsdM9/17/B6f9/wx85iZ7/fzfb9f
x7P7vHC/ELFIJFr4/zd6eR3zOzX+dRzjnydZQfWa2sqcRPp+hW31fudjnp5C
v99iPfdpjt4ef5f+T2cln45GDuj6gK7LYF8c8nAR78ui6/9g61hG5jNFNt2X
y0K+d/f0S39C9z9lqswo5Yj2Z3ROPrvmdL+kh9dzOq+AzQpTJitXvKBzC5nk
/rTt9Ukv6fxX7JxwMqi4poie8zebsqjaI7NPMT3vNVtb7CSdMaiEnlvCJsux
dNKUUnp+KesxKOQFwspojjLWMGvH6KE7/0vzlLM/Nl8+3zexnOZ6w45dzhec
s97QfG/Zdy+bo3Vv39Kc79g4qUuVrU0FzVvBzO7e37R2r6S5K1nNtEV3PrIq
mr+K3Y3Z3ac8qJr2qGb7Eq/+WLimhvZ5zxbkF7b9Gf+e9vrAhne0L0i//oH2
+8jUfXo8TX7+kfb8xCx9Tn/2fNUn2vcTe5WW4pcrt9DeFvbA79HWRwcttL+F
XXpXlPp7byvpYGWH1n6wpCVbSQ8r26AVu93wriVdatmSM/rA3/JqSZ86FjCi
d9yFeXWkUx1jTzwzzljqSK961jfEt/VETD3pVs90LUEDjzg2kH4NrG33spAD
xxtIxwb2tsfGw3vcG0nPRvbkxoHc7amNpGsTu/n1WZtNvk2kbxNLKLvltf5V
E+nczHZFZYetXNRMejezKGVJwvKmZtK9hc09aS38dmsL6d/CfL6UqUONreRD
Kxvy2DR27i+t5Ecrc/7PP1bOGtJGvrQxef3IiwG/t5E/7cy6fXLZZL928qmd
FTnPM/mUtpNfHezh1YhJ3ss6yLcOdnnC1g2jOjvIv04W/3d8iufuTvKxk432
KlgRrxaB+ylCysY5e43TROC+itAvpyJx3zERuL8inDAvf6h5IwL3WQwhuPX1
rv5icL/F2HFxU4siQgzuuxidjSph220xuP9ifD/m4ACZVAKeAwkqdrr6/OAj
Ac+DBEEvzs3vjJOA50KCZ90HR699KQHPhwT//DY1vtlVCp4TKVJTxl2LXCgF
z4sUHuLcnNrLUvDcSHHGd0blskYpeH5s0PWnUumHUTbgObLBnpLFzku22IDn
yQY2/eo8K7JtwHNlg1Ur1vmHCDLwfMnw4a5tWFmgDDxnMgQr9m6bc1oGnjcZ
Cr/pkvBXtQw8d7b4+udTaTMH24Lnzxb3K/sVFqy2Bc+hLYYNSbb637cFz6Mt
zq8fpXpqbweeSzu4Psp0+9dUO/B82uGAfuqYx4fswHNqB8XsV4ETSuzA8ypH
9NngqIducvDcylFnrYkbEy4Hz68ci76KvHA3RQ6eYzmKt3ZmjOyQg+fZHv7P
tpXeHGcPnmt7ZHbTtX25yx483/YYGXrEeC3fHjzn9rhypaeHRzcFeN4V6N12
0fdSsAI89wocGT9sQb/zCvD8K6CJuxdz1qoA74EDNhdNPNJruAN4HxzQ0isv
+dQGB/BeOCB8WeATl0cO4P1wQPmtN1VHNUrwnigxQxYuc5qhBO+LEtmTm1wO
/qwE740SYw5vGG54pwTvjwrXyxUBcV+owHukQv8B+8PVkSrwPqlwctVnO2LT
VOC9UsH44MxpuUwN3i81YtUD726epAbvmRqimTdfSvarwfumRkTCmLroIjV4
79SofP9Y3f65I3j/HDHbM6Dv6sWO4D10RN4PxWMbrziC99ERE7JDZ0c0O4L3
UoPi2JWpK1011E8NunikTRzmraGeauBfIH5RH6qhvmqwe834+ddiNdRbDbJc
Yy3LL2uovxpIM3LXe+RpqMcafLXEoPzUoKE+a7FSMzP+kpOWeq3Fb8nHei8d
paV+a1Hz77Kr/eZpqedauIncRldt1lLftZj7y5Kcs+e01HstjvokzQrN1lL/
tSj4WFfRy6IlDuigPeAVWW7QEQ908B2+XprgqSMu6LDl9f29cwN1xAcd7m2y
c3aN0REndGjpO+l8cYKOeKHD0Ny9nscydcQNHcIjnj+cVa0jfuiQ2MXJ38lR
TxzRo/zO7JLCQXriiR4u8xOWHpymJ67oMdO+oiVgtZ74osf+S/23GY7riTN6
5Ph/J+Sl64k3esibk0/FvdETd/QYe7xlwBR7A/HHgHVjWZra3UAcMuBGxUaf
7CkG4pEB1l1ZL2IjDMQlA9wHq0J8DhmITwaEFk61ylMNxCkDTq37KTrztYF4
ZcBfnxcpt0gF4pYAY5bLYW83gfglYOrS+W5SX4E4JiBWd+5aephAPBOQcf39
6JgfBeKaAFHQoNxRKQLxTcAISVRg+0uBOCdgxa+3K2+3C8Q7I5ImiaJWdzcS
94yosnjbeI0zEv+M6Hlwe1zjQiNx0Ig5I3OcU3YaiYdGxJfqLkQkGYmLRuRv
me41ON9IfDRC3f9ohqXRSJw0YeLTEv+kribipQkbI3uVhjETcdOEO10Xh7kH
m4ifJjTdu9RavcVEHDVh0ILabYmJJuKpCUsdPI2LckzEVRN+TVqb4GY1EV/N
KAtIH/hWMBNnzejWKrtz2stMvDVj+gkf3+AgM3HXjLhxewq7bzATf834syov
pOS0mThshu1ec+3xLDPx2AwMDYoJqjETl81Y8+qkqpumC/4HDy/69Q==
             "], "alphas" -> CompressedData["
1:eJztlOtTlFUcxxdKoCTUGgOtyATXiZuGYNMFviPi2loQlxYMYVPJoKBE0oYQ
WpEZGXECA3dqyCRkl8IdutrIoJKEBATVZAyMXRDLfYFi7pzzMx2n2WnffGf6
E3rBm+fMM8/l/M738nlo6/asbX4Gg6HYd7k46Xe8MEuh/NL2uF7fuvzEVMz3
2QrGxEesjRaFdZZldv+NCp9Urf8xYpNCyLWnk69ZFa43fJ29uVDBPnLqhx3F
CvPGc0ceeE2hO6P054KdCpU95Z6o3QqhY/691XsV1K3OqvR6hfDPzkTamxS+
HfNUmN/37RNtDCt0KLRMuxrOdynkrUp9yXFC4Rvn/MSTfQqxVbGuhaMKe45f
PuIaV7jT/W7orosKlvELOa/MKARZuqdqbyjcuOmp6fHXMA2VWQJDNP7qWj1U
uEjj1OlVh4cjNaafDbscv1JjU3Tc0pYnNJa8nBd8y6QRU7dlMC1LY25J3eDB
Ao0y3T7WW6yRsKE/cOx1jShb0dDoWxoLYmzDzv0aN/0jAvIPaWSao3pnjmhY
ix3llk6NAFn7R/OXGpsnBuZ0nNYw9BcE1w9qFO1dsTH5J4019b9W9v2ikfR7
RPzdlzRCs7teXHFVw5s3FR72t8ax6iuNI16N1THTAeZAwczww57GeYLSvKPn
WkMFz4za0ioeFLh3Ty5ctFyQmeyUmjjBgqDas18kCnLuCSlzPSl403Sbp2St
ILXGYRazoH5bwtupGYIMY8NYfo5g2Z8Ta5LyBUX3pnvdWwQ724yP5RYJbHfU
G98pFUzXtHmbdwjSX+3+54U3BPcHl1mvVwqs4bcXPmcTnEtr3VBdK6hY12sp
qxP0l3x4NvaA4HzqwPhXDYLypl3fBTUJtubk/ma0C/bPzF0//z2BxzaRMtAi
SIjNnGP6QOCIv6+vqVXgf/io09UmWOx2Tx5sF3y0OMWe4hTsu8t09UyHYOjR
A4HBHwv2eJsNkZ2CJQGfeoKOCU4+f+FKj2+NXDns97hL8FREe9I+3/p5d3RH
63/u+Zzv83v+j//nftyf83A+zsv5eR6ej+fl+akH9aFe1I96Ul/qTf3pB/2h
X/SPftJf+k3/mQfmg3lhfpgn5ot5Y/6YR+aTeWV+mWfmm3ln/tkH9oN9YX/Y
J/aLfWP/2Ef2k31lf9ln9pt9Z//JA/KBvCA/yBPyhbwhf8gj8om8Ir/IM/KN
vCP/yEPykbwkP8lT8pW8JX/J41k+z/J5ls+zfJ7l8/+Tz/8CNF28iQ==
             "], "mins" -> 
            "mins"}, $CellContext`i$$, {}, $CellContext`getNonaVtx0, 
           Function[$CellContext`x, 0], $CellContext`drSubhex -> 
           True, $CellContext`plotAll -> 
           False, $CellContext`vtx -> {1, 2, 3}], ImageSize -> Medium]; 
       Grid[{{$CellContext`poly$82048, $CellContext`cs$82048}}]), 
      "Specifications" :> {{$CellContext`i$$, 1, 360, 1, Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{780., {224., 230.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({
      Attributes[$CellContext`cs$82048] = {Temporary}, 
       Attributes[$CellContext`coss$82048] = {
        Temporary}, $CellContext`coss$82048 = CompressedData["
1:eJydnXVUVfn+v21R0bG7sMVW7MLuBDHAGuxOdBQR27FjRGyxu4OxPgZ2YzfG
PrGPPWLHb98179dm3df+sfR7/7hr3ctl4HDOjvfn2c/nGY/fB7bunjhBggRJ
jf/0SpggwX/+e0jqTTNKZdZU8eRBO7fndKhnczusepDUpUImLT9aM4um3J52
G5P6k12dax+W/bdvuhpQ9/nZAdk1FXOw0KaaN+xqd93LB8r+o6vcW/58vz+P
poJsQQGdd9qV34AyORo7dPUh6PCkDIU1tflykSmTZ9rV+5XrAtve11XXwstP
BJXWVH3vhgcv97arWW2jm3e8rKssg+eWvF5VU/sCksa2qW9XNcs1K975mK6u
Tri9NkcjTUWvatjDK79dHQ1L96TLLl3V/pJwZZV2mipsv1dzcgK7inyf+kWP
Vbqqs/hNz5y9NeW5PPeoHg9tKt+c612C5uoqOHn6zptGaypf0+rLXx2yqcJT
Am1/jdXV+9fl61yYrakTNx/MqbrUpux3Eh84009XhVJtCeq1VlOnsxfsHBhs
Ux2/em/I2l5XRUIzNOp2SFMTfW1pxna0qZG1vqeYUVdXYY3n11xz3Xg/t+8e
sramTUX671KepXT18IaXv/tLTWW43TvR83w2FZ3verFvWXU1rkqDgFA3m8pW
cEdkj+Q29TBwcnH3RLpq2fFuwmf5bapBypOxhV9oKuvheRm76k4Vk2lW3Rze
NhWz5EJPb+P3lP395Oqk0U6Vt2WeGSmN1zH57t6PR4zX9SnL4e+J/3aqfKUa
PwobZVP11m45tmOdpracqrOuxwqnGvDmeOp14Tb1xuNtYo95mhq6tu6ASpOc
av6ektdz77ep9V/vF8o2VlMTGg8fNrGP8XvLFfnsuGFTQ9tvO7Cyv6ZS3jyV
2a+FU9WPGtXnxTub8vl4a+zhjpoq4rbHGVnOqXZdvFkvc0a78n9QZ8jQFsbr
DwzdFpnFqRZe9XvdvJxd1V9b8HZUbU3tmjG6UdcvDjX0QZXsE1vb1ZH6d3x2
VTTev4T+kUceOtTpHo2jVg+2qxexrT5WKamp3fcOuD045lDNx7T2XjbHruZf
WdY5oJCmRv12o/mZNQ51uW+lkl2321Xt1slPpM+rqY624KUzpjhUpY9Zgh5f
tKsKnwMzts+hqc/ufT+W7+NQt5wxNdM9t6shgwpnLZpVU5vuPmtzpalDXYp9
7HiWwqHsI++NHW2cH89fn57Rs5RDdc+14UOrwg41cve6JA2Nr087nLB18vQO
5TtwbpoWdR2qbNmwcZOM82aAPrL0wXd2FdOq94NrXRzqzNeeqT2N82aTT//x
s27ZVbH+/unvBDvUmLHLMxTLbfx81arvjAN25VViXON24Q6V3XdbvzH5NZW6
pUe0WmZXDd/WTdR0t0OVico7PJOncZ71LxNQbpxdLR53cdL2iw6VdMPM/PYy
mqqgj+31pptdrWq09HGI3aH8rvjlslXRVNs0wamSNLKrlGvHXduXwKm2vc50
Lmk9Td3t2zDV8BJ29XJa4kO+2ZyqXLI93Su31NSF+UPuN0tvfH+yZnP8yjjV
ueGF0g0L0NTGrLlWLPxgU6f67L9woKFTXV4V/XiDcZ79fXhhTv8HNlVt8qee
oZ2dat38pa/OjdBU84pdT648YZxPjiSn1w13qqO9NnS9OFlTx0Jnbh+0yaaa
P1+ws8R0p7qS6M4fq8M05QqZviB6rk1lyTWyQaaVTvXcO+sK7/WaajSg7o2L
f9hUQPWQ9x33ONWz20E9wiM11Xf47IG9f7ep3KmLDXY741Qez8suWX5OU6HL
/km+pYlN9eibbF2me041tuneeg0eaGpW/13PlpS3qZc5Fu2f/MKp+t5csHPy
a+Nz6ZXpVY28NlVlqltswA+n8hu1f0irJDb16MTH3YtT2ZSWp8m1RWl1NXjK
jN5Ls9pU/hMzu+35oKl041/YanjoquHc+acCStjU8FYtbs15pqm9Lbo8bFZG
V/MdOVNPrW1Tmxbk/9MrWlOx3U8Fn/HWVcZ8vTJlbGdTxYPWLl99VFPZalZd
sKOFrg7OLpLmQ3+bKlZxrvZ4u6aatfozmVsnXY16EjKm8ESb6rOwxc23KzTV
eVjD/Vf66ipq1PBaSxfb1MG0SxbcmWP8fX8FzHP/Q1fPi7jPabrTpjrlqfo+
fLymSte/OOHwJF3V7PTofakzNrVoz9VR5YYbn0++V8M147rY1y2oQ41HNrWu
2v62m3sZ14lSt5tPXqarVzO9Ywe+N64HDx8PS2Sc3+k/Z30ZsUFX01a09juc
2q7SP7k+sEpr4zzrsMezym5dtbkV0zlPQbvq12XBMt+Gmgpv3fJqy8O6+tZj
Wr3Z1ezq/JYI99Y1ja8fXbzKfkpXF3oFTUvma1dXMzgnlzPO+1HJH7RKcMV4
/Yeb/Ajpa1fZrh2b/6mUps54Hpiw9LauxpxOcfTteLta2OneH2uKaqp7iQwX
D8fo6p/tp8sELLarSTWK1fIqoKk8d1Pv6m7cf7b075xgn3E/upXs2p4Nxv2p
Zd8qaxe80lXT/ClyfjljV1GZvndLmFNTv0dfT9bivXEfS+raVyjGrh7G7t1Q
PZtxHq/PXWD+V10lGhlR2+uDXc3rt2VFgHF+73C/XCEwkUu57zneP08ahyoR
+LlcR+N6sCxtWLejyV3q8uUuHs8KOJR/gms5ahhfH+W788hmd5fqoWaEhFR1
qBm9PO99M74eGTu7VqF0LmULvn9Pb+VQCw63OLnYuA5VeD7heulMLrW8zvvj
BXs51IcMo76nN65bzb3HNrqQ1aVSjs33sliIQ7Uo3nBMN+P6cX3jvYBPOVzq
5CWt3uf5DnX7Xln3mfmM+6hvsb2RuV3qdb01D2dudKhBBd42nmbcj99uT/c0
pYdLed1o/v7pEYeqnfbG9vYlNLWwdf6ur/O51IMVOd5+uuZQ0SPd//xYTlNf
C12Y37uASw251CjgosOhCr91fAs07tPtSlU9G1TQpRY1efPY/5tDBeV1T7uo
jqbmtfWpnLWQS1Xc+bDl6nTG/ebizKV/NdXUDOfKpM2Nrx+fNXpBREGnSp8r
U0cfP03Nle/vm/5EpG9l4zxuanNc7RL3821J6zw80NSpTvXV9rr309R3eT1d
PhapHW1cb9oumJUtwcj/HG//vv5i/v4VFw0xfm/mZ402TIz7e7vXWV4wjXGf
88vp0ymhcd/bL+/PvGEnppRa6FR7es9umXylpq7J+xnSUHN+2eBUk1b1+LZ3
W9z7v/jbZvvgA06V4uj0gimOxH1enfWlnnPOO1WR6v4Dvl40fr58vstTDu3V
5r5Thc4M/336Q039IcfDLt/QrkefO1XKwQWH7nylqSVy/JSskeXR5a/G37t3
94feCW1quxxvk6O/7BzvrqulHwaX2pHBZh6fy/++t+NWDl1t0nfXGlvIprrJ
8dxh+oV9Fz11NfNwWI3oyjbz+J919nJEYGVd+WRflWdNM5vKJedLz3v+rcIb
6Opj4x5nXnW1mefXvUDnmj5tdPUsYdbkO4Js5vnYrdXEUXd+19WROp4LHk23
qT/k/B2XrMvWpwN1pey2LH9E2NRCOd8P/OifcWqwrt56JPMYYcwZi+T6kCXw
fejJqbrynVCv1PWLNvN6Eukqc3jxX7ryuPl927RnNvP6c3Lbs2nJVhrzXwX1
+a8vNvN6dbP2p4jkm3W1Tj30f2Hcv3B9S/g4x/ale3VVpWC2VLM87aqMXA83
FGnTOkrpKm1w4TKDa9vN62fx2mtyjTmrq/Vj/e1zOtjN6+2i8uHzT0Yb3z+j
WiX7ELtqIdfnmG6Ogkvv6ardxEJ5B0y3m9fzVVXcvX481VWNa/rMPGvs6p1c
/4/Ujk7xwqWr8VuHBsYespv3i7GpPzwINObpWXt7BzmN+Tq93F96DTx0petn
43PJcn9O7Eu7eir3o0XOcfqzBC7VrbxrcAY3h3n/iqzXObsrmUuteTz8UjUP
h3oh97vRh457DTGOu1zeZ1v1reIw749+rTK+HfGf47Saz/JwH4d5P13Xr8uL
T8ZxfWVJ2+ZH+jnM+2/1Yu6rY7O51Jal69/dmORQ2eR+vaVV2MBeuVxqZZ6A
XHeWO8z7u7t/r1kt8rpUUKN5zY/tdyibzANbdh7MusE4X58s8Ewx9YpDVZf5
4dC5hUkGGud3+jbTzhZyOsx549uCl/kjjOtBylmd3RYmNH6uzCclJzzIX9W4
frxo1rNqtDHHYJ4pUz37jMrG1+sOqnDzqvF9mH+8y8w/Em78HN8fSZrMbuQ0
56WOP5p+8DV+7+x2xrzU1anCZL4a6z6laR/jdRZsP/XPoiOd5jyWbXHZ7dfz
uJT/q2KVPs1yqrIyvz1JcNY1O6dL/ZjWfka/tcb1QOa94W9nbV5oXD9Wp77y
LfigUz2U+fDhS58gewaXSpHgW/ICV52qtcyTvj2P7BmVxqVGJNM8/W1Oc/4c
U7/C7qZuLvX7kQzPc3xxqosyr+6PCl3bLqFL3er/163Ov+nmfPtjpMfmRZ90
lapYbGje/Lo5D6cetuB6yjfGfXiA38S2FXRzfs5/ekzR9XbjetLozynfGxr3
S5m302e7vL33A11NOV+j6m/+ujmfp92bY1gz47wIG90kYIKxbhom87zbMff5
zYzz/kS2RHt9x+jm/P/1bq663f82vs9rY+4xM3VzvZC02BZttnH+nh3+24T3
S3VVT9YXJW/0SHnW+N/B12s/PGD8/1iP3JrnOdXd+Of7egz0jjJ+HtYvCR1N
p/oZ15kNSxyX3U/rqr+sdxY88l20uo9x3QvseX7WNd1cH01sl+X467a6mr1j
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
8NDKNxqMzHLlu9Pqb8SMXfgt4J3V33hVKWb97m9Wf2PxP35Lkhn3JeYbkw7c
j21vfF7sb0yqVyHbLuP4Z3/jR69+yzMYxwP7G2mnl248wTj+2d9IvLJxomTG
8c984/rntFEr87ss/saVs9qSdsbxzHzj/IBdy8oaxz/7G1Ef2jwsZ3yd/Q3/
qE/9uxo/h/2NiIvVfY4av5f9jYdfik9pY7xO9jfC+jnfFDTOC/Y3zndN0KtC
dpeFb8w+3WbDdOO+zf5G4x0LO3imdVn4xuWrnmmypHRZ/I2898dV9kvssvgb
ywdEV37+Rbf4G2E9c/g8MOYX9jc2NR+8o4Qx77C/kX7x5G6PH+sWfyN0Zo8+
X2/pFr6RrnuHdeMv6hZ/42jPN7YRx3UL3xjRpqDt0T7d4m8MHryg8ZFNusXf
iM53bUPm5bqFb5y4cnDi8zm6hW/ole63rmOcv+xvHEp594/cw3WLvzE/9WOf
cT10C9/QJ6UrPdC4/7C/UfnVCx+XcZ1hf8Nr+KmvHyvqFn8j9eO8XZcU1i3+
xoTXOXbdyKxb/A2/2hdzbk6qW/yN916Lzud+57T4G7mrTLSXe+K0+Bt+9cYs
enHZafE3EmSOSNXisNPib5QsH9THf5PT4m90muthy2Ssw9jfuLhj/u5xE5wW
f+NVyLbUqwY6LXwjUgVWGOXvtPgbS6peGJHauL+xvzF6f8WCncs6Lf7Gusvl
lw7J5bT4GyXOLazXxM1p8TcaD+sb9vytw+JvrMn+Km2HBw6LvzFifUi9hacd
Fn/j3PM/rq3f6bD4G0eyFugze4nD4m/cbBp8tpVxn2R/o2T93068HeCw+Bt1
vx+rEtTOYeEbmfIuKBxTy2HxN44V6PqXVzGHxd+Y93DayhEZHRZ/40LJHaFb
v9ktfOPogqZj79rsFn+jgHebb4mu2C3+RrXCF4YU+9tu8Teun2s0sN0qu8Xf
GP49ePEsY/3FfONSmZV7oofZLf7GwFlPw4p2slv8jTxlz5cLb2C3+BvXD4Uu
zF/GbvE3RrXJ4riS3W7xN55UONZ9bRK7xd9YeSy2z7qXNou/UfbT5H53btss
/sYy77Wf6pywWfwNn9+uHHRttVn8jUt1dgXdNO5/7G/8s9yRPKVxnrG/Yb+z
o8eMgTaLv5F5x9jVgf42i7+xIVuwfUEDm8XfWHD3wdCiXjaLv5G9X4mIAh42
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
CeuNdRj4BrobL93SDxh9TTf9DXQ3frt1fcezc7rpb6C70fnmj2pPjfMa/AHd
jVdHan4IitRNfwPdDceRbZErtummv4F9KZ/r3G3RcY1u8hB0N4qVuT5u+6K4
n4/uxr4zLVOFzdJNvoHuxoc10RFpJ+gm30B3w9vL9i73iLi/F92NlTUGbD9q
zLngP+huvE6f+I/YjrrJi9Dd6Jeux4dDLePef3Q3UgekupK5Ttznhe7GtpkH
NyYqr5v+BrobVQe0KBlaSDd5F7obvtunuM/Oopt8A92NQlcSfS7pppv+Bval
+Ab47O380Wken+huOC9UcvNwOE1/A92NDx2/nR1yy2ke/+huVKzx5bHvKafJ
N9DdyDO5SePTxnUW5xe6G6P6R6Q/t8ppno/objjL+QZ2nOM0/Q3sS3lQfnHo
uDFO09/AvpSYhR8uVjDmC/gb6G74PXtydYxfHC9Fd2Pbg4jKbWvH8VV0N/at
7vLgRIk43wzdjXnZJkVFZY3z09DdiKju7emf2Gn6G+hu1L7ZafzUFw7z+onu
hu/IDiHNbznM6y26G7VGbE6//ajD9DfQ3bh5yj94y0aHeT1Hd6NOmbv1G81z
mHwb3Y2ck91bTx3lMO8X6G5Um7L8dr/fHSbfQHejRcC0oM+NHKa/ge7GpQI3
S5UvE9ffQHejeJJxIzyyxvU30N3oOiq8QtR3u3l/xL6UP6v3v5ZPs5v3U3Q3
Mv9zv1Kd83bz/ovuxqmsax4U22k3/Q10N7wrbTz/1Fgn4v6O7oZfqtLrhwTb
TX8D3Y3wpTF7Y7raTb6B7kaq2dO1Cg3s5ryB7ka/c3OjQ4rbTX8D3Y3ss6Iv
Hk8Xt98W3Y1Pf/94nNqYXzD/oLtRf4fX7b73bea8hO6G7+MNVZ3HbKa/ge7G
0z0+AfPX28x5DN2N276+LUfOtJn+BroblR3P/1k31GY+z0J3Y1Dhh/aSHWym
v4F9KT0KvJyZt5bN5BvobuSeH5h4ZhGbOX9iX8qFxjWyTU5rM/kG9qXcTvG+
Ue5PmjnforvxqPi0Lb2eaOY8jO5Gzvfbn428oJnzM7obk66/+S1wv2byDXQ3
YsaFb6+6WjPnc+xL+Tiz5uwsxjwCvoHuxuBNCTekCtHM+R/djYUdKiQo0V8z
1wvobnyreG7KHGPugL+B7oZbyWZvGrfQzPUIuhvZm9umDKqtmesXdDfC/xya
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
        "], 
       Attributes[$CellContext`clrs$82048] = {
        Temporary}, $CellContext`clrs$82048 = {
         RGBColor[1, 0, 0], 
         RGBColor[0, 2/3, 0], 
         RGBColor[0, 0, 1], 
         RGBColor[1, 0, 1], 
         RGBColor[0, 1, 1]}, 
       Attributes[$CellContext`n$82048] = {Temporary}, $CellContext`n$82048 = 
       5, Attributes[$CellContext`poly$82048] = {
        Temporary}, $CellContext`showOnePoly[
         Pattern[$CellContext`alphaT, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`notableLoci, 
          Blank[]], 
         Pattern[$CellContext`fnVtx0, 
          Blank[]], 
         Pattern[$CellContext`fnErrorP, 
          Blank[]], 
         Pattern[$CellContext`opts, 
          OptionsPattern[]]] := 
       Module[{$CellContext`polyErr}, $CellContext`polyErr = \
$CellContext`polyError[$CellContext`alphaT, $CellContext`i, \
$CellContext`fnVtx0, $CellContext`fnErrorP]; \
$CellContext`drawPoly[$CellContext`polyErr, $CellContext`notableLoci, 
           FilterRules[{$CellContext`opts}, 
            Options[$CellContext`drawPoly]]]], $CellContext`polyError[
         Pattern[$CellContext`alphaT, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`fnVtx0, 
          Blank[]], 
         Pattern[$CellContext`fnErrorP, 
          Blank[]]] := 
       Module[{$CellContext`a, $CellContext`alpha, $CellContext`poly, \
$CellContext`err}, $CellContext`a = 
          ReplaceAll["a", $CellContext`alphaT]; $CellContext`alpha = Part[
            ReplaceAll[
            "alphas", $CellContext`alphaT], $CellContext`i]; \
$CellContext`poly = $CellContext`polyVtx[$CellContext`alphaT, $CellContext`i, \
$CellContext`fnVtx0]; $CellContext`err = $CellContext`fnErrorP[$CellContext`a, 
            Part[$CellContext`poly, 1], $CellContext`alpha]; {
          "a" -> $CellContext`a, "poly" -> $CellContext`poly, 
           "error" -> $CellContext`err}], $CellContext`polyVtx[
         Pattern[$CellContext`alphaT, 
          Blank[]], 
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`fnVtx0, 
          Blank[]]] := 
       Module[{$CellContext`a, $CellContext`p1, $CellContext`t, \
$CellContext`alpha}, $CellContext`a = 
          ReplaceAll["a", $CellContext`alphaT]; $CellContext`alpha = Part[
            ReplaceAll[
            "alphas", $CellContext`alphaT], $CellContext`i]; $CellContext`t = 
          Part[
            ReplaceAll[
            "tsRad", $CellContext`alphaT], $CellContext`i]; $CellContext`p1 = \
{$CellContext`a Cos[$CellContext`t], 
            
            Sin[$CellContext`t]}; $CellContext`fnVtx0[$CellContext`a, \
$CellContext`p1, $CellContext`alpha]], $CellContext`drawPoly[
         Pattern[$CellContext`polyErr$, 
          Blank[]], 
         Pattern[$CellContext`notableLoci$, 
          Blank[]], 
         OptionsPattern[]] := 
       Module[{$CellContext`poly$, $CellContext`a$, $CellContext`centroids$, \
$CellContext`centroidNames$, $CellContext`lab$, $CellContext`pnames$, \
$CellContext`meds$, $CellContext`polyTangs$, $CellContext`polyInters$, \
$CellContext`polyInterNames$, $CellContext`tri1$, $CellContext`notables$, \
$CellContext`circs$, $CellContext`incs$, $CellContext`lgt$ = 
          0.25, $CellContext`fnt$ = 14}, $CellContext`poly$ = 
          ReplaceAll["poly", $CellContext`polyErr$]; $CellContext`a$ = 
          ReplaceAll[
           "a", $CellContext`polyErr$]; $CellContext`centroids$ = \
$CellContext`getCentroids[$CellContext`poly$]; $CellContext`centroidNames$ = {
           "\!\(\*SubscriptBox[\(G\), \(vtx\)]\)", 
            "\!\(\*SubscriptBox[\(G\), \(per\)]\)", 
            "\!\(\*SubscriptBox[\(G\), \(lam\)]\)"}; $CellContext`lab$ = 
          StringJoin["error: ", 
            $CellContext`nfn[
             N[
              ReplaceAll["error", $CellContext`polyErr$]], 
             3]]; $CellContext`pnames$ = 
          Take[{"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K"}, 
            
            Length[$CellContext`poly$]]; $CellContext`meds$ = \
$CellContext`getMediansV[$CellContext`poly$]; $CellContext`polyTangs$ = 
          Map[$CellContext`perp[
             $CellContext`ellGrad[$CellContext`a$, 
              Part[#, 1], 
              Part[#, 2]]]& , $CellContext`poly$]; $CellContext`polyInters$ = 
          MapThread[$CellContext`interRays[#, #2, #3, #4]& , \
{$CellContext`poly$, $CellContext`polyTangs$, 
             RotateLeft[$CellContext`poly$], 
             
             RotateLeft[$CellContext`polyTangs$]}]; \
$CellContext`polyInterNames$ = If[
            OptionValue[$CellContext`drExcentral], 
            MapThread[StringJoin[#, "'", #2, "'"]& , {$CellContext`pnames$, 
              RotateLeft[$CellContext`pnames$]}], {}]; If[
           OptionValue[$CellContext`drCircs], 
           
           Module[{$CellContext`sides$, $CellContext`tri$, \
$CellContext`cir$}, $CellContext`circs$ = Table[$CellContext`tri$ = Take[
                  RotateLeft[$CellContext`poly$, FE`i$$26 - 1], 
                  3]; $CellContext`cir$ = \
$CellContext`getCircumcenterTrilin[$CellContext`tri$, 
                  RotateLeft[
                   $CellContext`triLengths[$CellContext`tri$]]]; \
{$CellContext`cir$, 
                 $CellContext`magn[$CellContext`cir$ - 
                  Part[$CellContext`tri$, 1]]}, {FE`i$$26, 
                Length[$CellContext`poly$]}]; Null]]; If[
           OptionValue[$CellContext`drIncs], 
           
           Module[{$CellContext`sides$, $CellContext`tri$, \
$CellContext`inc$}, $CellContext`incs$ = Table[$CellContext`tri$ = Take[
                  RotateLeft[$CellContext`poly$, FE`i$$26 - 1], 
                  3]; $CellContext`inc$ = \
$CellContext`getIncenterTrilin[$CellContext`tri$, 
                  RotateLeft[
                   $CellContext`triLengths[$CellContext`tri$]]]; \
{$CellContext`inc$, 
                 $CellContext`closestDist[$CellContext`inc$, 
                  Part[$CellContext`tri$, 1], 
                  Part[$CellContext`tri$, 2]]}, {FE`i$$26, 
                Length[$CellContext`poly$]}]; Null]]; If[
           Or[
            OptionValue[$CellContext`drNotables], 
            OptionValue[$CellContext`drSubtri]], 
           
           Module[{$CellContext`normals$}, $CellContext`tri1$ = 
             Part[$CellContext`poly$, 
               OptionValue[$CellContext`vtx]]; $CellContext`normals$ = 
             Apply[$CellContext`gettriBisectors, $CellContext`tri1$]; \
$CellContext`notables$ = $CellContext`getNotables[$CellContext`tri1$, \
$CellContext`normals$]; Null]]; $CellContext`gr = Graphics[{
             PointSize[Large], 
             Point[$CellContext`poly$], 
             FaceForm[None], {
              EdgeForm[{Black, Thick}], 
              FaceForm[Gray], 
              Opacity[0.1], 
              Polygon[$CellContext`poly$], Black, 
              Point[$CellContext`poly$]}, {Black, 
              Arrowheads[Medium], 
              MapThread[$CellContext`drawArrow[#, 
                $CellContext`norm[
                 $CellContext`perpNeg[#2]], $CellContext`lgt$]& , \
{$CellContext`poly$, $CellContext`polyTangs$}]}, 
             If[
              OptionValue[$CellContext`drCentroids], {Black, 
               MapThread[{
                 Point[#], 
                 If[
                  OptionValue[$CellContext`drCentroidLabels], 
                  Text[
                   Style[#2, 14], #, {
                   0, -1.5}], {}]}& , {$CellContext`centroids$, \
$CellContext`centroidNames$}]}, {}], 
             If[
              OptionValue[$CellContext`drExcentral], {
               EdgeForm[
                Darker[Green]], 
               Polygon[$CellContext`polyInters$], 
               Darker[Green], 
               Point[$CellContext`polyInters$], 
               MapThread[Text[
                 
                 Style[#, $CellContext`fnt$], #2, {-1.25, -1.25}]& , \
{$CellContext`polyInterNames$, $CellContext`polyInters$}]}, {}], {Black, 
              MapThread[Text[
                Style[#, $CellContext`fnt$], 
                $CellContext`ray[#2, 
                 $CellContext`norm[
                  $CellContext`perp[#3]], $CellContext`lgt$/
                 2]]& , {$CellContext`pnames$, $CellContext`poly$, \
$CellContext`polyTangs$}]}, 
             If[
              OptionValue[$CellContext`drMedians], {{Dashed, Blue, 
                Map[Line[{#, {0, 0}}]& , $CellContext`polyInters$]}, {Blue, 
                Point[$CellContext`meds$], 
                Point[{0, 0}]}}, {}], 
             If[
              OptionValue[$CellContext`drCircs], {Red, {Dashed, 
                Map[Circle[
                  Part[#, 1], 
                  Part[#, 2]]& , $CellContext`circs$]}, 
               Point[
                Map[First, $CellContext`circs$]], 
               Circle[
                Part[$CellContext`circs$, 1, 1], 0.05]}, {}], 
             If[
              OptionValue[$CellContext`drIncs], {
               Darker[Green], Dashed, 
               Map[Circle[
                 Part[#, 1], 
                 Part[#, 2]]& , $CellContext`incs$], 
               Point[
                Map[First, $CellContext`incs$]]}, {}], 
             If[
              OptionValue[$CellContext`drNotables], {
               Apply[List, 
                $CellContext`drawSomeNotables[$CellContext`notables$, 
                 First[$CellContext`notableLoci$]]], 
               EdgeForm[None], 
               FaceForm[Red], 
               Opacity[0.1], 
               Polygon[$CellContext`tri1$]}, {}], 
             If[
              OptionValue[$CellContext`drSubtri], {
               EdgeForm[None], 
               FaceForm[Red], 
               Opacity[0.2], 
               Polygon[$CellContext`tri1$]}, {}]}]; Show[{
            $CellContext`plotEll[$CellContext`a$], $CellContext`gr, 
            If[
             OptionValue[$CellContext`drLoci], 
             $CellContext`Second[$CellContext`notableLoci$], {}]}, 
           If[
            OptionValue[$CellContext`drError], 
            PlotLabel -> $CellContext`lab$, {}], PlotRange -> If[
             OptionValue[$CellContext`plotAll], All, {{-2, 2}, {-1.5, 1.5}}], 
           Frame -> True, FrameStyle -> Medium, AxesStyle -> 
           Directive[{Dotted, Gray}]]], 
       Options[$CellContext`drawPoly] = {$CellContext`drNotables -> 
         False, $CellContext`drSubtri -> False, $CellContext`drLoci -> 
         False, $CellContext`drMedians -> False, $CellContext`drExcentral -> 
         False, $CellContext`drCentroids -> 
         False, $CellContext`drCentroidLabels -> False, $CellContext`drError -> 
         False, $CellContext`drCircs -> False, $CellContext`drIncs -> 
         False, $CellContext`vtx -> {1, 2, 3}, $CellContext`plotAll -> False},
        Attributes[$CellContext`polyErr$] = {Temporary}, 
       Attributes[$CellContext`notableLoci$] = {Temporary}, 
       Attributes[$CellContext`poly$] = {Temporary}, 
       Attributes[$CellContext`a$] = {Temporary}, 
       Attributes[$CellContext`centroids$] = {Temporary}, 
       Attributes[$CellContext`centroidNames$] = {Temporary}, 
       Attributes[$CellContext`lab$] = {Temporary}, 
       Attributes[$CellContext`pnames$] = {Temporary}, 
       Attributes[$CellContext`meds$] = {Temporary}, 
       Attributes[$CellContext`polyTangs$] = {Temporary}, 
       Attributes[$CellContext`polyInters$] = {Temporary}, 
       Attributes[$CellContext`polyInterNames$] = {Temporary}, 
       Attributes[$CellContext`tri1$] = {Temporary}, 
       Attributes[$CellContext`notables$] = {Temporary}, 
       Attributes[$CellContext`circs$] = {Temporary}, 
       Attributes[$CellContext`incs$] = {Temporary}, 
       Attributes[$CellContext`lgt$] = {Temporary}, 
       Attributes[$CellContext`fnt$] = {Temporary}, $CellContext`getCentroids[
         Pattern[$CellContext`vtx, 
          Blank[]]] := {
         Mean[$CellContext`vtx], 
         $CellContext`PerimeterCentroid[$CellContext`vtx], 
         RegionCentroid[
          Polygon[$CellContext`vtx]]}, $CellContext`PerimeterCentroid[
         Pattern[$CellContext`vtx$, 
          Blank[]]] := 
       Module[{$CellContext`sides$, $CellContext`meds$, $CellContext`per$, \
$CellContext`perCentroid$}, $CellContext`sides$ = \
$CellContext`triLengths[$CellContext`vtx$]; $CellContext`meds$ = 
          Apply[$CellContext`getMediansV, $CellContext`vtx$]; \
$CellContext`per$ = Total[$CellContext`sides$]; $CellContext`perCentroid$ = 
          Sum[
            Part[$CellContext`meds$, FE`i$$26] 
             Part[$CellContext`sides$, FE`i$$26], {FE`i$$26, 
              
              Length[$CellContext`vtx$]}]/$CellContext`per$; \
$CellContext`perCentroid$], Attributes[$CellContext`vtx$] = {Temporary}, 
       Attributes[$CellContext`sides$] = {Temporary}, 
       Attributes[$CellContext`per$] = {Temporary}, 
       Attributes[$CellContext`perCentroid$] = {
        Temporary}, $CellContext`triLengths[
         Pattern[$CellContext`vs, 
          Blank[]]] := Map[$CellContext`magn, 
         $CellContext`triSides[$CellContext`vs]], $CellContext`magn[
         Pattern[$CellContext`v, 
          Blank[]]] := Sqrt[
         $CellContext`magn2[$CellContext`v]], $CellContext`magn2[
         Pattern[$CellContext`v, 
          Blank[]]] := 
       Dot[$CellContext`v, $CellContext`v], $CellContext`triSides[
         Pattern[$CellContext`vs, 
          Blank[]]] := MapThread[# - #2& , {$CellContext`vs, 
          RotateLeft[$CellContext`vs]}], $CellContext`getMediansV[
         Pattern[$CellContext`vs, 
          Blank[]]] := 0.5 ($CellContext`vs + RotateLeft[$CellContext`vs]), 
       FE`i$$26 = 1, $CellContext`nfn[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := ToString[
         NumberForm[$CellContext`v, {$CellContext`n + 
           2, $CellContext`n}]], $CellContext`perp[{
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           
           Blank[]]}] := {-$CellContext`y, $CellContext`x}, \
$CellContext`ellGrad[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          
          Blank[]]] := -{$CellContext`x, $CellContext`y $CellContext`a^2}, \
$CellContext`interRays[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`n1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`n2, 
          Blank[]]] := 
       Module[{$CellContext`m, $CellContext`b, $CellContext`sols}, \
$CellContext`m = Transpose[{$CellContext`n1, $CellContext`n2}]; If[
           $CellContext`negl[
            
            Det[$CellContext`m]], $CellContext`p1, $CellContext`b = \
$CellContext`p2 - $CellContext`p1; $CellContext`sols = 
            LinearSolve[$CellContext`m, $CellContext`b]; \
$CellContext`ray[$CellContext`p1, $CellContext`n1, 
             Part[$CellContext`sols, 1]]]], $CellContext`negl[
         Pattern[$CellContext`v, 
          Blank[]]] := Abs[$CellContext`v] < 10^(-9), $CellContext`ray[
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`phat, 
          Blank[]], 
         Pattern[$CellContext`d, 
          Blank[]]] := $CellContext`p0 + $CellContext`phat $CellContext`d, 
       Attributes[$CellContext`tri$] = {Temporary}, 
       Attributes[$CellContext`cir$] = {
        Temporary}, $CellContext`getCircumcenterTrilin[
         Pattern[$CellContext`orbit, 
          Blank[]], {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := 
       Module[{$CellContext`a2 = $CellContext`a $CellContext`a, \
$CellContext`b2 = $CellContext`b $CellContext`b, $CellContext`c2 = \
$CellContext`c $CellContext`c}, 
         $CellContext`trilinearToCartesian[$CellContext`orbit, \
{$CellContext`a, $CellContext`b, $CellContext`c}, {$CellContext`a \
($CellContext`b2 + $CellContext`c2 - $CellContext`a2), $CellContext`b \
($CellContext`c2 + $CellContext`a2 - $CellContext`b2), $CellContext`c \
($CellContext`a2 + $CellContext`b2 - $CellContext`c2)}]], \
$CellContext`trilinearToCartesian[{
          Pattern[$CellContext`A, 
           Blank[]], 
          Pattern[$CellContext`B, 
           Blank[]], 
          Pattern[C, 
           Blank[]]}, {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]], 
          Pattern[$CellContext`z, 
           Blank[]]}] := 
       Module[{$CellContext`denom}, $CellContext`denom = 
          Dot[{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`x, $CellContext`y, $CellContext`z}]; ($CellContext`a \
$CellContext`x $CellContext`A + $CellContext`b $CellContext`y $CellContext`B + \
$CellContext`c $CellContext`z C)/$CellContext`denom], 
       Attributes[$CellContext`inc$] = {
        Temporary}, $CellContext`getIncenterTrilin[
         Pattern[$CellContext`orbit, 
          Blank[]], 
         Pattern[$CellContext`sides, 
          
          Blank[]]] := $CellContext`trilinearToCartesian[$CellContext`orbit, \
$CellContext`sides, {1, 1, 1}], $CellContext`closestDist[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`l1, 
          Blank[]], 
         Pattern[$CellContext`l2, 
          
          Blank[]]] := $CellContext`magn[$CellContext`p - \
$CellContext`closestPerp[$CellContext`p, $CellContext`l1, $CellContext`l2]], \
$CellContext`closestPerp[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`l1, 
          Blank[]], 
         Pattern[$CellContext`l2, 
          Blank[]]] := 
       Module[{$CellContext`dl = $CellContext`l2 - $CellContext`l1, \
$CellContext`s}, $CellContext`s = 
          Dot[$CellContext`p - $CellContext`l1, $CellContext`dl]/
           Dot[$CellContext`dl, $CellContext`dl]; \
$CellContext`ray[$CellContext`l1, $CellContext`dl, $CellContext`s]], 
       Attributes[$CellContext`normals$] = {
        Temporary}, $CellContext`gettriBisectors[
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]], 
         Pattern[$CellContext`p3, 
          Blank[]]] := 
       Module[{$CellContext`u12, $CellContext`u23, $CellContext`u31}, \
$CellContext`u12 = $CellContext`norm[$CellContext`p2 - $CellContext`p1]; \
$CellContext`u23 = $CellContext`norm[$CellContext`p3 - $CellContext`p2]; \
$CellContext`u31 = $CellContext`norm[$CellContext`p1 - $CellContext`p3]; {
           $CellContext`norm[$CellContext`u12 - $CellContext`u31], 
           $CellContext`norm[$CellContext`u23 - $CellContext`u12], 
           $CellContext`norm[$CellContext`u31 - $CellContext`u23]}], \
$CellContext`norm[
         Pattern[$CellContext`v, 
          
          Blank[]]] := $CellContext`v/$CellContext`magn[$CellContext`v], \
$CellContext`gr = Graphics[{
          PointSize[Large], 
          
          Point[{{1.5, 0.}, {
           0.5979478304998469, -0.9171110176346703}, {-1.3260005019843664`, \
-0.4674862653893144}, {-1.3260005019843664`, 0.4674862653893144}, {
           0.5979478304998469, 0.9171110176346703}}], 
          FaceForm[None], {
           EdgeForm[{
             GrayLevel[0], 
             Thickness[Large]}], 
           FaceForm[
            GrayLevel[0.5]], 
           Opacity[0.1], 
           
           Polygon[{{1.5, 0.}, {
            0.5979478304998469, -0.9171110176346703}, {-1.3260005019843664`, \
-0.4674862653893144}, {-1.3260005019843664`, 0.4674862653893144}, {
            0.5979478304998469, 0.9171110176346703}}], 
           GrayLevel[0], 
           
           Point[{{1.5, 0.}, {
            0.5979478304998469, -0.9171110176346703}, {-1.3260005019843664`, \
-0.4674862653893144}, {-1.3260005019843664`, 0.4674862653893144}, {
            0.5979478304998469, 0.9171110176346703}}]}, {
           GrayLevel[0], 
           Arrowheads[Medium], {
            Arrow[{{1.5, 0.}, {1.25, 0.}}], 
            Arrow[{{0.5979478304998469, -0.9171110176346703}, {
             0.5283668584520659, -0.6769891978662745}}], 
            
            Arrow[{{-1.3260005019843664`, -0.4674862653893144}, \
{-1.1301396405275244`, -0.3121204939034955}}], 
            
            Arrow[{{-1.3260005019843664`, 
             0.4674862653893144}, {-1.1301396405275244`, 
             0.3121204939034955}}], 
            
            Arrow[{{0.5979478304998469, 0.9171110176346703}, {
             0.5283668584520659, 0.6769891978662745}}]}}, {}, {}, {
           GrayLevel[0], {
            Text[
             Style["A", 14], {1.625, 0.}], 
            Text[
             Style["B", 14], {0.6327383165237374, -1.0371719275188682`}], 
            Text[
             Style["C", 14], {-1.4239309327127874`, -0.5451691511322239}], 
            Text[
             Style["D", 14], {-1.4239309327127874`, 0.5451691511322239}], 
            Text[
             Style["E", 14], {0.6327383165237374, 
             1.0371719275188682`}]}}, {}, {}, {}, {}, {}}], \
$CellContext`drawArrow[
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`phat, 
          Blank[]], 
         Pattern[$CellContext`l, 
          Blank[]]] := Arrow[{$CellContext`p0, 
          $CellContext`ray[$CellContext`p0, $CellContext`phat, \
$CellContext`l]}], $CellContext`perpNeg[{
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           
           Blank[]]}] := {$CellContext`y, -$CellContext`x}, \
$CellContext`plotEll[
         Pattern[$CellContext`a, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`clr, 
           Blank[]], 
          GrayLevel[0]]] := 
       ParametricPlot[{N[$CellContext`a] Cos[$CellContext`u], 
          Sin[$CellContext`u]}, {$CellContext`u, 0., 2. Pi}, 
         PlotStyle -> $CellContext`clr, PerformanceGoal -> 
         "Quality"], $CellContext`Second[
         Pattern[$CellContext`l, 
          Blank[]]] := Part[$CellContext`l, 2], $CellContext`getNonaVtx0[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`alpha, 
          Blank[]]] := 
       Module[{$CellContext`p2, $CellContext`p3, $CellContext`p4, \
$CellContext`p5, $CellContext`p2Neg, $CellContext`p3Neg, $CellContext`p4Neg, \
$CellContext`p5Neg}, {$CellContext`p2, $CellContext`p2Neg} = \
$CellContext`getP2Alpha[$CellContext`a, $CellContext`p1, $CellContext`alpha]; \
$CellContext`p3 = $CellContext`getInterRefl[$CellContext`a, $CellContext`p1, \
$CellContext`p2]; $CellContext`p4 = $CellContext`getInterRefl[$CellContext`a, \
$CellContext`p2, $CellContext`p3]; $CellContext`p5 = \
$CellContext`getInterRefl[$CellContext`a, $CellContext`p3, $CellContext`p4]; \
$CellContext`p3Neg = $CellContext`getInterRefl[$CellContext`a, \
$CellContext`p1, $CellContext`p2Neg]; $CellContext`p4Neg = \
$CellContext`getInterRefl[$CellContext`a, $CellContext`p2Neg, \
$CellContext`p3Neg]; $CellContext`p5Neg = \
$CellContext`getInterRefl[$CellContext`a, $CellContext`p3Neg, \
$CellContext`p4Neg]; {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p5Neg, $CellContext`p4Neg, \
$CellContext`p3Neg, $CellContext`p2Neg}], $CellContext`getP2Alpha[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`alpha, 
          Blank[]]] := 
       Module[{$CellContext`norm, $CellContext`ca, $CellContext`sa, \
$CellContext`p2, $CellContext`normRot, $CellContext`normRotNeg, \
$CellContext`p2Neg}, $CellContext`ca = 
          Cos[$CellContext`alpha]; $CellContext`sa = 
          Sin[$CellContext`alpha]; $CellContext`norm = \
$CellContext`ellGrad[$CellContext`a, 
            Part[$CellContext`p1, 1], 
            
            Part[$CellContext`p1, 
             2]]; $CellContext`normRot = $CellContext`rot[$CellContext`norm, \
$CellContext`sa, $CellContext`ca]; $CellContext`normRotNeg = \
$CellContext`rot[$CellContext`norm, -$CellContext`sa, $CellContext`ca]; \
$CellContext`p2 = Part[
            $CellContext`ellInterRayUnprot[$CellContext`a, $CellContext`p1, \
$CellContext`normRot], 2]; $CellContext`p2Neg = Part[
            $CellContext`ellInterRayUnprot[$CellContext`a, $CellContext`p1, \
$CellContext`normRotNeg], 
            2]; {$CellContext`p2, $CellContext`p2Neg}], $CellContext`rot[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`st, 
          Blank[]], 
         Pattern[$CellContext`ct, 
          Blank[]]] := 
       Module[{$CellContext`m}, $CellContext`m = {{$CellContext`ct, \
-$CellContext`st}, {$CellContext`st, $CellContext`ct}}; 
         Dot[$CellContext`m, $CellContext`p]], $CellContext`rot[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := $CellContext`rot[$CellContext`p, 
         Sin[$CellContext`t], 
         Cos[$CellContext`t]], $CellContext`ellInterRayUnprot[
         Pattern[$CellContext`a, 
          Blank[]], {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, {
          Pattern[$CellContext`nx, 
           Blank[]], 
          Pattern[$CellContext`ny, 
           Blank[]]}] := 
       Module[{$CellContext`c2, $CellContext`c1, $CellContext`c0, \
$CellContext`ss}, $CellContext`c2 = $CellContext`nx^2 + $CellContext`a^2 \
$CellContext`ny^2; $CellContext`c1 = 
          2 ($CellContext`nx $CellContext`x + $CellContext`a^2 \
$CellContext`ny $CellContext`y); $CellContext`c0 = $CellContext`x^2 + \
$CellContext`a^2 (-1 + $CellContext`y^2); $CellContext`ss = \
$CellContext`quadRootsUnprot[$CellContext`c2, $CellContext`c1, \
$CellContext`c0]; 
         Map[$CellContext`ray[{$CellContext`x, $CellContext`y}, \
{$CellContext`nx, $CellContext`ny}, #]& , $CellContext`ss]], \
$CellContext`quadRootsUnprot[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`c, 
          Blank[]]] := 
       Module[{$CellContext`det = $CellContext`b^2 - 
           4 $CellContext`a $CellContext`c, $CellContext`sqrtDet}, \
$CellContext`sqrtDet = 
          Sqrt[$CellContext`det]; {-$CellContext`b - $CellContext`sqrtDet, \
-$CellContext`b + $CellContext`sqrtDet}/(
          2 $CellContext`a)], $CellContext`getInterRefl[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`pfrom, 
          Blank[]], 
         Pattern[$CellContext`pto, 
          Blank[]]] := 
       Module[{$CellContext`norm, $CellContext`theRefl, $CellContext`pnext}, \
$CellContext`norm = $CellContext`ellGrad[$CellContext`a, 
            Part[$CellContext`pto, 1], 
            
            Part[$CellContext`pto, 
             2]]; $CellContext`theRefl = $CellContext`refl[$CellContext`pfrom - \
$CellContext`pto, $CellContext`norm]; $CellContext`pnext = Part[
            $CellContext`ellInterRayUnprot[$CellContext`a, $CellContext`pto, \
$CellContext`theRefl], 2]; $CellContext`pnext], $CellContext`refl[
         Pattern[$CellContext`v, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := 
       2 Dot[$CellContext`v, $CellContext`n] \
($CellContext`n/$CellContext`magn2[$CellContext`n]) - $CellContext`v}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.768681688735083*^9, 3.7686830080070906`*^9, 
  3.76868310455292*^9, 3.768683418830662*^9, 3.7686844264466352`*^9, 
  3.768768413917252*^9, 3.7687685753542356`*^9, 3.7687686640312085`*^9, 
  3.7688555958856325`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"CloudDeploy", "[", 
   RowBox[{"plotCSgr", "[", 
    RowBox[{"heptAlphaT15", ",", "getHeptVtx0"}], "]"}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7686830102162123`*^9, 3.7686830134475408`*^9}, {
  3.7686831588647346`*^9, 3.7686831596157255`*^9}, {3.7686832654073315`*^9, 
  3.768683265479169*^9}, {3.7686844432187805`*^9, 3.768684444576151*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Show Projections", "Section",
 CellChangeTimes->{{3.7686816548255644`*^9, 3.7686816612446036`*^9}}],

Cell[CellGroupData[{

Cell["Planar : 3, 4, 6", "Subsubsection",
 CellChangeTimes->{{3.7686819319345694`*^9, 3.7686819403361006`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"proj3d", "[", 
    RowBox[{"vx_", ",", "vy_", ",", "p_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"vx", ".", "p"}], ",", 
     RowBox[{"vy", ".", "p"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.768677257269*^9, 3.768677275307763*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vnorm", "=", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
      RowBox[{"zhat", "=", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ",", "vx", ",", "vy", ",",
       "triCos", ",", "quadCos", ",", "hexCos", ",", "\[IndentingNewLine]", 
      "tri123", ",", "quad123", ",", "hex123", ",", "hex124"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vx", "=", 
      RowBox[{"norm", "[", 
       RowBox[{"zhat", "\[Cross]", "vnorm"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vy", "=", 
      RowBox[{"norm", "[", 
       RowBox[{"vnorm", "\[Cross]", "vx"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"triCos", "=", 
      RowBox[{"getPolyCos", "[", 
       RowBox[{"triAlphaT15", ",", "getTriVtx0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"quadCos", "=", 
      RowBox[{"getPolyCos", "[", 
       RowBox[{"quadAlphaT15", ",", "getQuadVtx0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"hexCos", "=", 
      RowBox[{"getPolyCos", "[", 
       RowBox[{"hexAlphaT15", ",", "getHexVtx0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tri123", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"proj3d", "[", 
         RowBox[{"vx", ",", "vy", ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{"First", "@", "triCos"}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"quad123", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"proj3d", "[", 
         RowBox[{"vx", ",", "vy", ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{"First", "@", "quadCos"}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"hex123", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"proj3d", "[", 
         RowBox[{"vx", ",", "vy", ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{"First", "@", "hexCos"}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"hex124", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"proj3d", "[", 
         RowBox[{"vx", ",", "vy", ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{"Second", "@", "hexCos"}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Legended", "[", 
          RowBox[{"tri123", ",", "\"\<tri123\>\""}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Legended", "[", 
          RowBox[{"quad123", ",", "\"\<quad123\>\""}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Legended", "[", 
          RowBox[{"hex123", ",", "\"\<hex123\>\""}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Legended", "[", 
          RowBox[{"hex124", ",", "\"\<hex124\>\""}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"#", ",", "16"}], "]"}], "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x'= \!\(\*OverscriptBox[\(z\), \(^\)]\)\[Cross]1\>\"", ",", 
            "\"\<y'=1\[Cross]x'\>\""}], "}"}]}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "Medium"}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.768675405954827*^9, 3.7686754237980757`*^9}, {
  3.7686754545239325`*^9, 3.7686754682541842`*^9}, {3.7686757145812006`*^9, 
  3.768675882036442*^9}, {3.7686759140368586`*^9, 3.768675974044567*^9}, {
  3.768676242133155*^9, 3.7686763175397663`*^9}, {3.7686763563241034`*^9, 
  3.7686763760309377`*^9}, {3.7686764155410023`*^9, 3.7686764161164627`*^9}, {
  3.7686764473407817`*^9, 3.7686764554202957`*^9}, {3.7686772088684444`*^9, 
  3.7686776011504755`*^9}, {3.7686776499329486`*^9, 3.768677887069766*^9}, {
  3.7686785540525284`*^9, 3.7686785544374743`*^9}, {3.7686818236793594`*^9, 
  3.768681863950824*^9}, {3.768681947486977*^9, 3.7686819741145725`*^9}, {
  3.7686820743144226`*^9, 3.7686820870097632`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, 
       TagBox[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$107302, {1}}]& ], 
       TagBox[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
/LwA/OwFfr4MfjYGP1uCn2+An/8DWBMuFg==
          "]]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$107302, {2}}]& ], 
       TagBox[{
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJyN1ntUDNrbB/DckiJJLhHScRnEISSkJ0kil6HUSMdRqOmnklvSyZHEKdSJ
SJKM7rqZ0W26PtN1puYqtyTUOamEdJKjXI533jXP+eNtLev3/rXXd+2199pr
P/tZ+zPd7cC2fYPV1NTYg9TU/ndcY7KVGf63BGMHVTPEfAFqv6lyY9pJ0OX5
CZe94nLc9tjQ1yVcjI59nsvO11fgoUNHzhiV1mGwkY3mM2klxrwoUyx4Wosa
4xZ4DC+twluPP56d3SHC3JY/FMKb1ah3ZKKPuFWIk+xfrHh9tAbLztXqdt+r
wfFxW3dvAiGq7S3NOcmtxiq3432PPwtxSpdPl9+pKuR7r5KfyhBh8+/WK/5Y
W4nNrU2iTZtr0czQZdHTf8rR+BebJ+tba9E4SmPM2SwBstY7vQr3Vp5r5UP9
KSllaGrlfW9FZx3GeiXwNrQUIz9tqflxZzHGGB0Rf9IuRC9HDse/TIz8edmc
S4vyse/S0TU+4yWoh77tB+1ycAPvnM1lNwlaF0a5du3iYkiVRy0jUYLM9syQ
m03pGDryvr53gwRZ3kMYMR+T0CZOpy9psBSZ44qsdGfFY4dV2dtxRlI0HDXs
vpb7JQx951GgvkyKlt+Wue94GoBqx3V7S1dLUU20Iyoz6DD0ulrMOmOlnM+e
5DyDFQmN0bPTEpZLkTO1aH5m+nWY2vjh4E+zpShKuvy0nZ0IXkZiuy9aUmQ/
8Y0d1ZoGirt8XmW7BHc/HbpzrXU2XIjy9ewvkmCn6cOW1EoesFaPSGo6I0GD
1f57I7bnAidz0blcWwkarjsa0f0oH3wV11bxh0iw6+Vh0682heCQ2/ZqSYEY
Zzl8CxiSXAwK9ZuNznvE2LHozmWP7lJIm5zW4akhRkjaNsReTwCtnSXacSl1
ODvbPyttVjmI/CpfzbFQZpfUnzV+rIC2KYZpG+S12Hq/d/OW+ZVgnBcxbolz
Ldof8I7bM70KLNtvp016IcJsk9fJi7WqoWdi/sVFu0R4e6zdzrzOarAcLqlN
fyxEXsmE2JdYA7pnp8wssBPiatwVITwnhOzRf+4+W1SDfoPGGey1EwELHy1d
N6MG3z6P2VI7qBaaJl9kzw6rRttljo9GZNdCzPwpjfavqrC5/8pJc2YdRGhb
xfRZV2FRy8nqXzrqwHbe/reWcZUYULhi10s/MVzgT/F1eleB80YOfnjtsxgY
+7vGuFtUYMaoj3NL/CTQvKVrfnRYOaaa7Tt5sEMCQfdDo3XuCTDYZA42M6Uw
KV+e8FVPgLf3tzibcKXASvXw08wow/DN54dEqstAp9tRfGNmKR5YMt97hoMM
JHWRCUNii/HSUeMJk6/JYGLBqYowjSLsdnunz3kog5LEFz4nDvJxaZxX/4sR
chh6LSFw3sN8vJhlFzjcVJld1PY1L87D8rEWv61xlkPHNT+njvAcZPiu/CLw
k4Po8rsNv//Jw2VVW25knpfD7uujtKcv5WKsLLvH5Joc0jbYZ9UPy0Jf3arF
QTflwH5mdMsj9jbOOfnZRBAvB7NfjZxiGCnIZgzZOPWqcj0nfesXbgIaPdjg
UB0qB99XhfGO7HiU/Odc+IvDcjBMGicM2HcVXQ8ZxEaz5MDtNJgc7RypPO/X
Q2OXyUEt44553sVg/LHY5udfR8shyKnBsOm8K76apP3+nxYZWIp67qy/fRiK
2iq6i7OV+fpF8xzdUEg7H+L59KgMIk9dnuY2Nwr27x/ECV4mA47jah+TjbEQ
6BWl9ei9FGw73p8X5nPgsF7N9v50KTC2TLe7YZMEN6WnWKN/koLlitPRnx6k
QomnyGCFpjKPst1r4ZoBHbp/PYm9q6ynQ7pPTWc2xD2w/7DVUQI6YWqXjpnx
oPuu4+CTH8TA9YsUh/XfhfHDFBWWkWKo6h/Ct+HnQoJTzuy8WWKwTPPwcT6S
D9vivm3t59fBxGcHVvvO50OSoi1qzro64AYs5pv8WQid7NM+rvdqQXBEN8Lu
SjFwr/yYXOxUCwrDtWF71pQCJ6FRf1ujCIyva5QYvS0D83m7vq3aIQKDnak6
E9cLYEXBzIyrD4TQ2BzWN1G/HGY9dy/x2ygETvvxdPe2crB1Lh3ZI6iBDe/3
rb7PrYBO08X500xqoPu1FmuhfyUs+bt+3DhONTTwZqtvMa+CjvN7ZW2a1XB5
q/jZty9VoOG7Q5x2qAo++bR36BZVw5vJb9f4PK4E/0CtVKfDNeDLDCpbv7wS
ao66a91gCEE90VRvU0wFxH8d8wvviRCYfz0/EtZbDu6TcsRuZ0UwNHLh/tGb
y8Fy3gmrXxfUgtU6dktXkgDq1yZHKZT3YDY0caNPD0Lu4+1/zPStA8aFzMa3
V8pgxtkPletHiJV1Dnzgv6QUyvR/MB1+QwwGq/t95sqKwVgazWPMk4BvQP1L
gz1F4Bt8YLp/jgQcpCNPeb7nQ8qnwldlS5XvoOZRCuNkAfxt9cObap4UJtYs
f3dQPR9ieh6Gb5+t7EvB0+UuYblgPS65bGm0DJgXR9R8HZ4DH6rTBy34RwYd
i2w2eQXz4HDd6WPDflb2xd8WqwP+ugMRvQ6dwXxlvjr5kuajTIjY/tLbdJgC
dr9nOubcvQ0B2xPrrOcqQGPTZ5f431LAv2v5jS12CmAuLr/3wSERgvpXvVvO
VgDjt5FxrZM4sO2H0bK2IOX69AW/z8+5BoeuH2Utv6KA5jMTug4bRUGG+wep
XrICgjTfn/k4PAxWuH656cJVZvbYppTdx2D6sTFnevMVoKb4LG3V3YjcWuMI
AV+ZXzE8mVd/Rd2fXC2S8xRgGNheYNR1AbUdByX/lqUAQVHfFZH9FfxYsC9g
E0cB3VdC1nmsjEML6Sl4Fq7c/zg3OCX6FnY3sHdP9VMAd02SZK9eMnYade7o
ZynA33PjyfDoNAy5v+cPJ1PlfuebbuQZZOKsSR3jZmorQOf9By2PlDtYbx9l
d10gB6aXd8bv13i4oMFsQtAOOdjaJZnOds1BI2/nk0/aZBBaw0xMn5OH/aZr
2y6wZdB0f9eqip58rJ94LCbkuRRCjl3cN6qEjyaul5hcWyk03QxWTD9ThBXd
94uHpUpgyZhKwblNJZi25bL6qX4xBBbpWoj0yrBrTZTXTEsxHLl1x25zI+KG
mMuSrwF1oBehr1MhE2D+aTWLKem1ENptUtSSXY7uR6Y/uSkVgU3PpDFzwytw
6Kg99gkvhRDnuirGwrMSdVkNQu+eGuCY53jesarCmp1Co6m91dB3sHvJaP1q
jC3rcdN6XQXOi8S3ml9X4+6l0275K/uo4t2x+ETlPyZwzO2sK6wAywkHh0pC
hMhqO/uL+6Vy6Pph1RjhehEuTJofUOEqgAtX+9z6NGoxJOx1aSmzDNh317YV
l9eii7N9UZS0GFwa1lz2OFyHVTzzoLUrC6HN19Jj7RQxGrIuDh97XfnOJ1zK
ilM6KND/uS+7Kwcc3G7nZTlK0Cy+/2GFKQ8mPvi5L6dV6Yr0pwWerzMh9P0t
m3YPKfo3hL6r3ZEKGf6lM0+8kGJf4qrC8SW3oOCej1P6Bhn68hYvKZsXA+sv
hkUnpclQ0H+gcn5GGPi7nDmU1CdDtdw84856J9g+s9CpfbkcLbeOzbqfcRo5
6ta5vP1yVNPQZIw3uIK6+9fabQ2XIyfQuv3ZLA6WjnZcNC1ejpE8faN0XjIm
v54cEXxDjn1zmzjFczMwdsu9pJ5zcswVp49fuY6LY9XnTuvfJ0fufx7MyH5z
F8tXrpm7ZIEcqwbX9WmG5OF2Vhab9acMQ2YovIq1+HhztH6WyRkZGp4LVrcK
LsIUdsvB22Nl6PA+wcO8rQTrrsgHl0VIkbGoY/s+U0Rb8nMK+VmT/LyL/LyZ
/LyN/HyQ/BxJfo4e4OdU8rOA/DyV/GxKfq4kPxuQn//Zo/Izl/y8nPycTn7+
SH7+Qn42IT8vJD8bkp+Z5OdQ8rMZ+fkc+TlugJ/Z5GcR+bn3O35mkZ/9yc+G
5Odg8jOb/GxNfo4kP/d+x88C8vPQ7/i5OUvl51byczP52YD8HEl+ZpOfI8nP
VeTn5kaVn0PJz63/xc+W5Ge/7/j5k73Kz0Xk5xrycxL5ee0AP88gP0vIz3rk
5w7y80fys/l3/HyX/Nz7HT8Lyc8jyc+7yc8P/p9+NiU/h5KfX5CfQ7/j5xPk
51jy80Lysxn5OW+An/nkZz/yszf5WZP8nE5+NiA/R5CfGeTnQPJzM/n5OvnZ
mPz8D/lZQX5eSH7uiFH5OZT83LBT5efC/+JnJvk5lPx8a4Cf2eRnEfl52gA/
/0R+Xkh+nkp+ViM/3yU/MxNVft5PftZ5rfJzAPnZ8LbKzwb/+tlugJ/rVH7m
kZ85N1R+ziQ/+wap/OxBfo4kP3uTn9nkZx/ycwf5OW+An7PJz2raKj+rj1X5
2Yz8fI787EV+biA/6x1T+VmH/JxLfk4iP39JVfl5F/mZ26Tycxz5uYP83Ep+
FpGfS8jPueTnEPJzCfnZivw8lfzMIj/Hk5/1yM8J5Gdn8vN48nMz+XnwG5Wf
LcjP6eTnTvJzAPl5KPm5m/z8hfwcSH72Ij+/IT8PJj/fJT87kJ8DyM+Dyc8G
5GcX8nMj+VmP/NxGfp5Bft5Gfi4hPzeQn23Jz/USlZ8Dyc9+5Gdb8nMd+dmQ
/Gy6RuVnY/KzO/mZQX6eQX62Jj9r1/xfP+8lPzPIzy7kZ0Py8w3yM5P8fJr8
LNio8nMo+dmf/Bw8wM/ryc/NA/zMIT8nkJ8NtVR+Nic/q3mq/Gz4r5/LVH7O
JD9bkp91yM/N5Gcj8jOH/NxIfraMVvnZjPzMJD+3kZ/TyM9t5GcG+TmA/JxG
fjYmP/N7VH6uIz+bk5+3kZ+tyc/ryM+B5Ode8nMV+bmF/Bz6HT9zB/iZO8DP
jeRnFvmZRX7WIT8XkZ/Pkp9XkJ8tyc9W5OcL5GdN8nM8+VlGfv5Efs4kP7MG
+LmO/FxBfjYlPweQn3vJz4bk50vkZ1vy8y7ysz/52Zf8HEN+ric/s8jPSeRn
BvnZkfysQ342Ij8zyM/nyc9mT1R+TiA/s5JUfi4hPzdzVX62JD9zyM8H/vVz
ocrPzgP8HEN+Zg5X+Vmb/NxNfi4iP3PIzykD/MwlP6tJVH5WJz+LyM8l5OcG
8rMd+dma/JxMftYgP2eSn5nk53rysxn5+X8AN+PJiQ==
          "]]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$107302, {3}}]& ], 
       TagBox[{
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJyN1ntUzN/XB/BBKkJJvsp10JfcSd8KaY97FEZIkoQwKSnXJJVESaWSJKMm
piSV6X5vz4yphi4TEl/10/T7htyScsm1p2d99vPHr/VYz/PXWWetfdba66yz
3+c1fsd+6119WSwWrw+L9d/rEsN13NDPVfhd6jK5Ml8MQ97KdnAtq3BBss2L
dxvFYP2Y7W4fWonpu48NP12LcODAodMTSu6h2/LyXB1lKcQ0ldbObLiLTk8X
hk1vKIGEx1/OTG6Vo7BxSWCItBh0Dum6VbZU4N7giW+0LhVBafBd7fb75SjO
rl8r2lwILKeSLF9RGeo2ds0+plEAY9rc2o6clOGqSnfO+bQ8UJ5fOv/fy+5g
h+X9EwaLcsGUbT+n4ZcEZckFGcEV2TD9gvrQM2lilB3tftZ/cRb4L3ikNyap
FINWX+n4mJEBsa7XMlY1F+HohYdleboiiJlwqPLbkAIULJ7iv/19KuRPSxdE
zslF0ZVxjacEN0EH3V96WGYh63ojL2pFEiwtuLC9zUGE6i7ppsteXgPuy9SA
+MYUVA7RE7irxIPtvn4GMV+EqGWleuXzXzHAHV64WHtSHCpH5p5T40UAe3D/
hxq7I5FTppMlMj8NnG6T3ZsbvJAViheuquwHlnzzhVS/g8ByXmWhGbAbOekj
7fRtw8GxZE7tiiZ/FIwtnJGacgUcn9X7mnWcR7kwquEl7zrM9rIeHescjby/
3WMHtySDIGPTj8oSPjo2qGxZtjQdlPN1sgKPJeBr40fNN+5kgGjbvA72KSGO
XuTpFLYxGwTNiqjnXjeQveJwWHt9LrCsY44u2JaCbc8PGv9cXgDyM7dcNWen
4aQN3V79EouAu3fY47o3t7F1zu2oPe0lEDVDrVJjZQaC0Lrfeh0xmJninHER
mTg53TMteZIEREvn73tenYWT7W9sU58lBdfGwL+mdWdjy8OPa9bOuAP8Pk+2
yvVzcf3+ffyd42XgOD1RNd48D9MN3yTO1SiDKOWBh7FW+XhzmOWWnNdlINu5
cqJoTQFmFI+IfY7lUCyJ2NKwtBAXoUNYRXAFsC0N9dmzivBIn+GjnSzl0OJg
IgkaXIzvnsWsvdvnLuif3eLyp7IYLUxs6gek3wXu88IsjRslqPx60deMew9G
h3xq37ijFAubfcuOt94Dg3J5zgRtRK+C+Q7Pj1SC+ib1dVG5iNMG9X10+Xsl
TDJ0mtY6WYy3Bn+ZWnykCkTb51/udhPjDdNdvh6tVTA/TKJMFInR33AKKrnV
8Ovd7OMf3orxpkuznaGoGqb+HSf5OlGCoWvO9QtXrQFTVb3y+o0S3G80Y5/+
hhoI+zx/doK/BCMPTx8x6nINmEsGjjmQIsH2He/1BI9qIDy7pc/Oagn+xXf9
2jRAAbqmEBn6RoIRaZbeasYK8JMMTdboL0XJMPPAJXYKWB5xa+YXPSkauC/4
IT6igJBuuebeqVI0ka29mnqu5/zJ/Ak+xlKMrUnvMLzcU/9zx5jV5lJ015bN
9YtXQH7c4MD2RVKc4vvdUByngLf1aakne/Y8g35WYy/11DenROstlOKEulUb
yoIUwI963V1rJMWqvcGhTQcVIKwYsEZsIMXtB0bHRtsqQP7+WnC3rrSn358H
hpkoIKklcGtST7+zipZv89FUgFXzI7WqNgm+Gjmk81dzDag23t4XWCfBwhfS
9qL0GvCrjnzalivB5HMBzg2Ha8DirXC9brQEXVz6CPxNaqDLR8te74AEvV0v
aNR39tz/oSt91CwleFCnfOPXlGqo581r+MSWYHz1SVvNrdUg+PFD7VunGIud
5aPnD6wGL62tMyfLxNiq/eHv2MwqsAu+czw8Qoz8uvWf1tlUgX2IvdDCXozt
mTZ9fT9VgumPMf9s1xfjH/1rpZzwSkg+y/rY8BDx2qasyTmTKkFmLnP6sRnR
mt+97mv+PXgyTr9oeUMpCmtfXJiy4h58HNuR0rCpFF/zTrltv38XgnZEtD5V
lKDo4qzEok097zU74dTOJSUouPZUz/qpHAbFjp15IbMYzaY5dC/cLAetE0mG
gWOKcX7en7cu1VWA0vdvvy0BRTjp2e7iI1YVINOr2jftZSFa2JUM6hCXg9Bf
zX7o8sKefJibO86wHMKbmmonJRSg0ecHw4cLysDIzPVoQFc+tp5zqnkxsAxY
LNHExT3zqO6+uTL5gAzEkm+PjvDz8O2od0vcHt8BXnJAqemrXHTn+pWunHcH
1NPXLLpqmIuq1411VsdI4YnL2m/5njnI/fDs0NmPEtDZ/VkSX5SNKuGzXTTX
SIBjODTT6XsWLl7Ba24TiiHGbNy0kaZZaKpy3cqtA+GJz4Sn9z0y0SAk9em7
i6XA52+/xE/OQIGNd52nUQlYdFcPONco6sm3r25Ta4ogda91RepgEbp7PXg+
emchKB08X4/3TMcN1YNOOnfmg+DfG2xDFKloUF6fZOCbB9yTmSo542+hbvm8
9x6quRA+hTUzz+0maokb5tmfzYba99KFabk3kBsxoPynWha0Btm2iL4m9uTh
8tWu/hkQZHHNpMFEiKafzRd5fbgN4jP/1C31uIaml0ZFDqxPBfVtE1VVkwTo
2Mm1ycq8CZxNNfX7Uq+i+urv9nGBSaBs53Cb+sUid67k/qcN18Hvkf3UCOto
NAgcxG8ZKQB24e332TGR6Jgy8/yMrMsgHivo+pYaisrTI9oOTrgAHF0PFdA9
g34DO09/UTsLrFM3eBYvvdGPN6wxyfEosKa80jz+ay+yar9Xt2hbIatt1yO7
vzjAemXgzL3kg+KiCyudb3oA2/tl3oS2EORcODf3fZYfiAu7LsrXX0Qx7w+z
vYIgaL8YsGLPAj4KTshXllqFg98xkX9SdAL6fXzgY7w2CkRLhFVOOolYO6GE
ZbopBjydrXxDo5OxHddXWjvxQXyu8WrO6FS0mL81pf8CAWh1ftLYk3QbteJ8
rr5d1vO/uu67df5yBiqPX2qLtBaChaXQePL2LPTsBPdExyQIKudeT5mSgwYz
rFfK9ydD40OHhdKOXBQvrFwW7ZsCAUcjdg0uzsegr0/uxp9PhcZ4/9rxpwtR
Xfu47t74dDAaekccvLoYw119DE02icC7UNtcrlOKRi/DDg9yyIBDCbct1zxF
dFr0R7+WnZmgE6anJa0R48e8z8JdvCwIajcsbE6XoK3DlFezXLJhecfIoVND
pejUts1phGsO8LcvjDF3voMq6+TSTudcEJhlOd9eLMOlZoWTx+7Kgy6PdiNN
vTL8mMF+fM4+H+zmVCYo35RhVcDNRA1uAUjfH427XliOP2JHZcrNC4EzwkOl
KqACbSWhQ8CgCNomLhxasVKOWgvuL8jWKIaQS107utTvYpQ218entRh4mcte
FEnuoilX+aKppATsnyyJ2nPwHga5D0/5EFwKL9w5e5aNqcTsybLKP9YixIyI
TOOXVqL8SuOzDBUxbNhxMyfNpgp/PPweecJeDLp127qyWqrwGm4ZeCJdDEGd
Cctf7qnGlAfrRGbfxHDLs+TPE03VGGftxV8BEsi777YpZVUN7n5w+IzBCQms
jDgbLUyuwUlVo67uzZKAp/3pA8KuGiwfgKWxzRLY+GfBppfzFLimYWuUhZoU
BKpLszNcFDjIpOa+mr4UtF2WWa4LVaCR4FM/DxMplGjazBkXp8D064/z9BdJ
IfHNqDD/qwq0c7hucY8jhdi194UdwQocGbZepm0shWGqU8d93aXAZWePPSlg
S0GyYMlUo5kK/HokZGAgSwobbdN4tv/U4M/Zhx6veSSBeE29NMPTNeh2e0xW
Z5wEknjNHjeH1WB1vlXz7q0SuHdR0bc0rBrfCc6Mv6klAQvy84g7jJ8Hkp/N
yM9ryM8PyM8e5Gcv8nM0+dmB/HyD/Kz6L8bPY8nPfPLzHfKzfg7j5187GT8/
aWD8PI/87Ep+/kJ+FlgxfjYkP8vJz2zysxP5OYj8HEJ+DiY/y83+08/t5Gf5
/+FnW/KzBfmZTX5uJz/zyM+Oqxk/h5OfBaP+dz+Lyc9+v/GzMo3xM4f8rCQ/
C5oYP4eTn5XHGD+Hk5/Dyc/Kp4yfY8jPLeTnJ7/xM4f8zP6Nn7+tZ/zc5cz4
uZz8HEJ+XkZ+5pKf9cnPfPKzDvnZgPz8hfws+42fM8nPMb/xc0UvPzuSn73/
n3427uXnJvLzoN/4+QT5eRD5eTb5eST5OYf8nEJ+zu/l533k5x/k5xTyswH5
OYz8bEN+9iY/88nPV8jPZuTnX738PJv8/MuE8XMQ+ZlHfi4gPy/+jZ+55GdD
8nMC+Xkx+ZlHfi4kP48jP3eRn7eSn2eSn8eSn8PJz5nk5wDys0svP3uRn4PI
z6N/4+dB5OcM8jOP/JxKfrYlP+8hP7N8GT/vIz+3kp/dyM915Occ8nM2+Tmd
/HyI/Kw6jPGzJ/k5mPzMJT8/IT+zyc9a5Gc/8rOQ/CwiPzuQn1lsxs988vNb
8nML+dmT/Fzcy88B5GcW+Xkx+VmH/GxLfmb7MX7WIT/HkJ/tyM+15Gcl+dmT
/GxOfuaQn1+Tn1XIzyrk52zy8w/yszv52ZX8rEt+7kt+lpOfN5CfdcnPfcnP
BuRne/JzLflZh/wsJz/rk5/Dyc/F5GcB+dmC/CwjP3v38rMF+Tmc/MwmP4vJ
z9PJzzzyswH5uZ38vJT83N7Lz7bkZwPy82zyM5v8zCU/c8nPjuRnsdV/+tmT
/Mzp5WdlAeNn5f/4mc34WUB+Zo1g/MzWID+fYfzMcmb87Ded/FxKfpYxfuaQ
n1mljJ+V5GcW+VlAfnZ0YfzMiWb87O7D+JlLflZ2Mn5OJj+LyM8G5Gc/8nNy
Lz/ndzB+1r3K+NmM/BxOfl5KfmaRn73Jz63TGT/LyM9B5Ocg8nNMLz/Le/nZ
r5ef2eRnW/KzDvlZi/ysns/4+Qz52Zv8zCE/t75j/BxCfq7jMn6OIz83LmD8
/I38rJ7J+NmW/NxIfr5Hfm4hPxuTn1nk54/kZ3vycyT5+SP52YH8rFzL+Nmd
/CwmPz8gP3PIz0Lysw6f8bMN+dmojvHzBPJzFfn5HPnZhvx8jfzsSn4uJj/z
yc8c8rM2+Xk/+TmF/GxHfrYjP8eQnz8bM34eQn52JD8Xkp/LyM9J5OeV5GcR
+dmU/KxKfp5Gfi4mP7eRny3Jz/8iPyeSnw+Tn1PJz83k5wfk59fk5/8C9I7D
ZQ==
          "]]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$107302, {
          4}}]& ]}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-0.6758235797153911, 
      0.6758127857992599}, {-0.7539294916948034, 0.5297398446061778}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox["\"y'=1\[Cross]x'\"", 16, StripOnInput -> False], 
         TraditionalForm], None}, {
        FormBox[
         StyleBox[
         "\"x'= \\!\\(\\*OverscriptBox[\\(z\\), \\(^\\)]\\)\[Cross]1\"", 16, 
          StripOnInput -> False], TraditionalForm], None}}, FrameStyle -> 
     Directive[
       GrayLevel[0], Medium], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, Method -> {}, 
     PlotRange -> {{-0.6758235797153911, 
      0.6758127857992599}, {-0.7539294916948034, 0.5297398446061778}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"tri123\"", "\"quad123\"", "\"hex123\"", "\"hex124\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7686763763748164`*^9, 3.768676416495421*^9, 3.768676455741438*^9, 
   3.7686772005796127`*^9, 3.7686773041795797`*^9, 3.768677356066008*^9, 
   3.7686774184840374`*^9, {3.768677539006318*^9, 3.768677601683051*^9}, 
   3.7686776628748446`*^9, 3.768677751185996*^9, {3.7686778498627243`*^9, 
   3.7686778878915377`*^9}, {3.768678529561003*^9, 3.7686785580508103`*^9}, 
   3.7686816294933014`*^9, 3.7686818684966664`*^9, {3.7686819566554565`*^9, 
   3.7686819763278675`*^9}, 3.7686820880330267`*^9, 3.768855596456094*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Non-Planar : 5, 7", "Subsubsection",
 CellChangeTimes->{{3.768681959793065*^9, 3.768681991502287*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"vnorm", "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", "vnormRot", ",", 
     RowBox[{"zhat", "=", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ",", "vx", ",", "vy", ",", 
     "pentCos", ",", "heptCos", ",", "\[IndentingNewLine]", "pent123", ",", 
     "pent124", ",", "pent125", ",", "hept123", ",", "hept124", ",", 
     "hept125", ",", "hept135", ",", "\[IndentingNewLine]", 
     RowBox[{"maxX", "=", ".5"}], ",", 
     RowBox[{"maxY", "=", ".5"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pentCos", "=", 
     RowBox[{"getPolyCos", "[", 
      RowBox[{"pentAlphaT15", ",", "getPentVtx0"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"heptCos", "=", 
     RowBox[{"getPolyCos", "[", 
      RowBox[{"heptAlphaT15", ",", "getHeptVtx0"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"vnormRot", "=", 
        RowBox[{
         RowBox[{"RotationMatrix", "[", 
          RowBox[{
           RowBox[{"toRad", "@", "thy"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ".", 
         RowBox[{"RotationMatrix", "[", 
          RowBox[{
           RowBox[{"toRad", "@", "thx"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], ".", 
         "vnorm"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vx", "=", 
        RowBox[{"norm", "[", 
         RowBox[{"zhat", "\[Cross]", "vnormRot"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"vy", "=", 
        RowBox[{"norm", "[", 
         RowBox[{"vnormRot", "\[Cross]", "vx"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pent123", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"proj3d", "[", 
           RowBox[{"vx", ",", "vy", ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"First", "@", "pentCos"}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pent124", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"proj3d", "[", 
           RowBox[{"vx", ",", "vy", ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Second", "@", "pentCos"}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pent125", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"proj3d", "[", 
           RowBox[{"vx", ",", "vy", ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Third", "@", "pentCos"}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"hept123", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"proj3d", "[", 
           RowBox[{"vx", ",", "vy", ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"First", "@", "heptCos"}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"hept124", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"proj3d", "[", 
           RowBox[{"vx", ",", "vy", ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Second", "@", "heptCos"}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"hept125", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"proj3d", "[", 
           RowBox[{"vx", ",", "vy", ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Third", "@", "heptCos"}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"hept135", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"proj3d", "[", 
           RowBox[{"vx", ",", "vy", ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Fourth", "@", "heptCos"}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Legended", "[", 
            RowBox[{"pent123", ",", "\"\<pent123\>\""}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Legended", "[", 
            RowBox[{"pent124", ",", "\"\<pent124\>\""}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Legended", "[", 
            RowBox[{"pent125", ",", "\"\<pent125\>\""}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Legended", "[", 
            RowBox[{"hept123", ",", "\"\<hept123\>\""}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Legended", "[", 
            RowBox[{"hept124", ",", "\"\<hept124\>\""}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Legended", "[", 
            RowBox[{"hept125", ",", "\"\<hept125\>\""}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Legended", "[", 
            RowBox[{"hept125", ",", "\"\<hept135\>\""}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Thick", ",", "#"}], "}"}], "&"}], "/@", 
            RowBox[{"{", 
             RowBox[{
             "Thick", ",", "Thick", ",", "Thick", ",", "Dashed", ",", 
              "Dashed", ",", "Dashed", ",", "Dashed"}], "}"}]}], ")"}]}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "maxX"}], ",", "maxX"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "maxY"}], ",", "maxY"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"#", ",", "16"}], "]"}], "&"}], "/@", 
            RowBox[{"{", 
             RowBox[{
             "\"\<x'= \!\(\*OverscriptBox[\(z\), \(^\)]\)\[Cross]1\>\"", ",", 
              "\"\<y'=1\[Cross]x'\>\""}], "}"}]}], ")"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FrameStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", "Medium"}], "]"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"thx", ",", "0"}], "}"}], ",", 
        RowBox[{"-", "90"}], ",", "90", ",", ".1", ",", 
        RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"thy", ",", "0"}], "}"}], ",", 
        RowBox[{"-", "90"}], ",", "90", ",", ".1", ",", 
        RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
     "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7686819962126875`*^9, 3.7686820691203127`*^9}, {
  3.7686821194501567`*^9, 3.7686822071781588`*^9}, {3.7686822435728273`*^9, 
  3.768682305114058*^9}, {3.7686824046378508`*^9, 3.768682520507236*^9}, {
  3.7686825580349708`*^9, 3.768682590924615*^9}, {3.7686826317504234`*^9, 
  3.768682702957524*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`thx$$ = 0, $CellContext`thy$$ = 0, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`thx$$], 0}, -90, 90, 0.1}, {{
       Hold[$CellContext`thy$$], 0}, -90, 90, 0.1}}, Typeset`size$$ = {
    688., {182., 187.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`thx$121158$$ = 
    0, $CellContext`thy$121159$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`thx$$ = 0, $CellContext`thy$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`thx$$, $CellContext`thx$121158$$, 0], 
        Hold[$CellContext`thy$$, $CellContext`thy$121159$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`vnormRot$107475 = Dot[
          RotationMatrix[
           $CellContext`toRad[$CellContext`thy$$], {0, 1, 0}], 
          RotationMatrix[
           $CellContext`toRad[$CellContext`thx$$], {1, 0, 
           0}], $CellContext`vnorm$107475]; $CellContext`vx$107475 = \
$CellContext`norm[
          
          Cross[$CellContext`zhat$107475, $CellContext`vnormRot$107475]]; \
$CellContext`vy$107475 = $CellContext`norm[
          
          Cross[$CellContext`vnormRot$107475, $CellContext`vx$107475]]; \
$CellContext`pent123$107475 = 
        Map[$CellContext`proj3d[$CellContext`vx$107475, \
$CellContext`vy$107475, #]& , 
          First[$CellContext`pentCos$107475]]; $CellContext`pent124$107475 = 
        Map[$CellContext`proj3d[$CellContext`vx$107475, \
$CellContext`vy$107475, #]& , 
          $CellContext`Second[$CellContext`pentCos$107475]]; \
$CellContext`pent125$107475 = 
        Map[$CellContext`proj3d[$CellContext`vx$107475, \
$CellContext`vy$107475, #]& , 
          $CellContext`Third[$CellContext`pentCos$107475]]; \
$CellContext`hept123$107475 = 
        Map[$CellContext`proj3d[$CellContext`vx$107475, \
$CellContext`vy$107475, #]& , 
          First[$CellContext`heptCos$107475]]; $CellContext`hept124$107475 = 
        Map[$CellContext`proj3d[$CellContext`vx$107475, \
$CellContext`vy$107475, #]& , 
          $CellContext`Second[$CellContext`heptCos$107475]]; \
$CellContext`hept125$107475 = 
        Map[$CellContext`proj3d[$CellContext`vx$107475, \
$CellContext`vy$107475, #]& , 
          $CellContext`Third[$CellContext`heptCos$107475]]; \
$CellContext`hept135$107475 = 
        Map[$CellContext`proj3d[$CellContext`vx$107475, \
$CellContext`vy$107475, #]& , 
          $CellContext`Fourth[$CellContext`heptCos$107475]]; ListLinePlot[{
          Legended[$CellContext`pent123$107475, "pent123"], 
          Legended[$CellContext`pent124$107475, "pent124"], 
          Legended[$CellContext`pent125$107475, "pent125"], 
          Legended[$CellContext`hept123$107475, "hept123"], 
          Legended[$CellContext`hept124$107475, "hept124"], 
          Legended[$CellContext`hept125$107475, "hept125"], 
          Legended[$CellContext`hept125$107475, "hept135"]}, PlotStyle -> 
         Map[{Thick, #}& , {
           Thick, Thick, Thick, Dashed, Dashed, Dashed, Dashed}], 
         PlotRange -> {{-$CellContext`maxX$107475, $CellContext`maxX$107475}, \
{-$CellContext`maxY$107475, $CellContext`maxY$107475}}, Frame -> True, 
         FrameLabel -> 
         Map[Style[#, 16]& , {
           "x'= \!\(\*OverscriptBox[\(z\), \(^\)]\)\[Cross]1", 
            "y'=1\[Cross]x'"}], FrameStyle -> Directive[Black, Medium], 
         ImageSize -> Large]), 
      "Specifications" :> {{{$CellContext`thx$$, 0}, -90, 90, 0.1, Appearance -> 
         "Labeled"}, {{$CellContext`thy$$, 0}, -90, 90, 0.1, Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{739., {243., 249.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7686822982409086`*^9, 3.7686823056476307`*^9}, {
   3.7686824867063904`*^9, 3.768682523116127*^9}, 3.7686825916028004`*^9, 
   3.768682637145993*^9, {3.7686826915599785`*^9, 3.768682703566868*^9}, 
   3.7688555968251348`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Subtriangle Perimeters: Perimeter, Area", "Section",
 CellChangeTimes->{{3.7688567850475616`*^9, 3.7688567983459682`*^9}, {
  3.768924937644473*^9, 3.7689249423093405`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"getSubtriPer", "[", 
       RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"triAlphaT15", ",", "getTriVtx0"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"quadAlphaT15", ",", "getQuadVtx0"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"pentAlphaT15", ",", "getPentVtx0"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"hexAlphaT15", ",", "getHexVtx0"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"heptAlphaT15", ",", "getHeptVtx0"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"octAlphaT15", ",", "getOctVtx0"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"nonaAlphaT15", ",", "getNonaVtx0"}], "}"}]}], "}"}]}]}], 
    "]"}], "//", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"First", ",", "#", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}], "&"}]}], "//", 
  "ColumnForm"}]], "Input",
 CellChangeTimes->{{3.7688559190375557`*^9, 3.7688559270930414`*^9}, {
   3.768855967908881*^9, 3.7688559684943175`*^9}, {3.7688560893434496`*^9, 
   3.7688561043093886`*^9}, 3.768856160597118*^9, {3.7688568154213276`*^9, 
   3.768857042692295*^9}, {3.7688576395494285`*^9, 3.768857644549085*^9}}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"{", "6.737508324182236`", "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"6.130614414856157`", ",", "6.318428744676856`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
      "5.333568527548051`", ",", "6.40122993726419`", ",", 
       "6.401229937264181`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"4.684146608258123`", ",", "6.009209797730397`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
      "4.161861640258166`", ",", "5.522988541127118`", ",", 
       "6.480928745919934`", ",", "6.0941465440684155`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
      "3.7358593497813186`", ",", "5.063839916201362`", ",", 
       "6.1250491418762545`", ",", "5.855011683231226`", ",", 
       "5.913529881259072`", ",", "6.549142639782767`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
      "3.3833992506431083`", ",", "4.657112485454743`", ",", 
       "5.731665131014369`", ",", "5.539007409019437`", ",", 
       "5.891508561231789`"}], "}"}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{{6.737508324182236}, {6.130614414856157, 6.318428744676856}, {
    5.333568527548051, 6.40122993726419, 6.401229937264181}, {
    4.684146608258123, 6.009209797730397}, {4.161861640258166, 
    5.522988541127118, 6.480928745919934, 6.0941465440684155`}, {
    3.7358593497813186`, 5.063839916201362, 6.1250491418762545`, 
    5.855011683231226, 5.913529881259072, 6.549142639782767}, {
    3.3833992506431083`, 4.657112485454743, 5.731665131014369, 
    5.539007409019437, 5.891508561231789}}],
  Editable->False]], "Output",
 CellChangeTimes->{{3.76885702800771*^9, 3.7688570444814796`*^9}, 
   3.7688571714096045`*^9, 3.7688576453748493`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Only N which conserves perimeter is N = 4", "Subsubsection",
 CellChangeTimes->{{3.768857064923643*^9, 3.7688570785721684`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"getSubtriPer", "[", 
       RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"triAlphaT15", ",", "getTriVtx0"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"quadAlphaT15", ",", "getQuadVtx0"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"pentAlphaT15", ",", "getPentVtx0"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"hexAlphaT15", ",", "getHexVtx0"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"heptAlphaT15", ",", "getHeptVtx0"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"octAlphaT15", ",", "getOctVtx0"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"nonaAlphaT15", ",", "getNonaVtx0"}], "}"}]}], "}"}]}]}], 
    "]"}], "//", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"Third", ",", "#", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}], "&"}]}], "//", 
  "ColumnForm"}]], "Input",
 CellChangeTimes->{{3.7688570584999895`*^9, 3.768857059046359*^9}, {
  3.7688576499017544`*^9, 3.7688576517006226`*^9}}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"{", "4.909866200252047`*^-15", "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0.057531964302653935`", ",", "0.0505757177943206`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
      "0.12049989309001181`", ",", "0.03044642067182836`", ",", 
       "0.030446420671828428`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0.1622868023003608`", ",", "0.06304869110298236`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
      "0.1896575495979675`", ",", "0.09991132676022589`", ",", 
       "0.027777729691329526`", ",", "0.05602313852799922`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
      "0.20819831008625475`", ",", "0.1308675300179416`", ",", 
       "0.057403723463576355`", ",", "0.07409387320934366`", ",", 
       "0.07280023238760121`", ",", "0.02100467569992089`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
      "0.2212325471167476`", ",", "0.15543117933034462`", ",", 
       "0.08569575553440102`", ",", "0.09735060548446967`", ",", 
       "0.07238437976614946`"}], "}"}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{{4.909866200252047*^-15}, {0.057531964302653935`, 
    0.0505757177943206}, {0.12049989309001181`, 0.03044642067182836, 
    0.030446420671828428`}, {0.1622868023003608, 0.06304869110298236}, {
    0.1896575495979675, 0.09991132676022589, 0.027777729691329526`, 
    0.05602313852799922}, {0.20819831008625475`, 0.1308675300179416, 
    0.057403723463576355`, 0.07409387320934366, 0.07280023238760121, 
    0.02100467569992089}, {0.2212325471167476, 0.15543117933034462`, 
    0.08569575553440102, 0.09735060548446967, 0.07238437976614946}}],
  Editable->False]], "Output",
 CellChangeTimes->{3.768857059716539*^9, 3.768857168440814*^9, 
  3.7688576525463314`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["No Subtri areas remain constant", "Subsubsection",
 CellChangeTimes->{{3.7688578591403217`*^9, 3.7688578675873284`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"getSubtriArea", "[", 
      RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Transpose", "@", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"triAlphaT15", ",", "getTriVtx0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"quadAlphaT15", ",", "getQuadVtx0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"pentAlphaT15", ",", "getPentVtx0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"hexAlphaT15", ",", "getHexVtx0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"heptAlphaT15", ",", "getHeptVtx0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"octAlphaT15", ",", "getOctVtx0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"nonaAlphaT15", ",", "getNonaVtx0"}], "}"}]}], "}"}]}]}], 
   "]"}], "//", "ColumnForm"}]], "Input",
 CellChangeTimes->{{3.768857665260359*^9, 3.7688576666286983`*^9}, {
  3.768857782628607*^9, 3.7688578352851076`*^9}}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
       "1.7578162996276752`", ",", "0.03262322220909985`", ",", 
        "0.018558948518118647`"}], "}"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "1.442884676739766`", ",", "0.04084526635279924`", ",", 
         "0.02830806024296421`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "1.4428846776776043`", ",", "0.0408452657804818`", ",", 
         "0.028308059827916614`"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "0.9408639556441674`", ",", "0.10329513658381963`", ",", 
         "0.10978753725675257`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "1.5842334272985072`", ",", "0.16938299729994735`", ",", 
         "0.10691795437543912`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "1.5842334272985072`", ",", "0.16938299729994727`", ",", 
         "0.10691795437543906`"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "0.6292330309790906`", ",", "0.12044104665523522`", ",", 
         "0.19140928833285847`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "1.2931085113827598`", ",", "0.12045993340333815`", ",", 
         "0.09315531708512746`"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "0.43690216888253797`", ",", "0.10698303799905122`", ",", 
         "0.24486726232712713`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "0.9801760621689903`", ",", "0.08540161621651975`", ",", 
         "0.08712885318535336`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "1.7717978583646632`", ",", "0.04274325241364631`", ",", 
         "0.02412422625518779`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "1.2468013874307258`", ",", "0.15502041655201013`", ",", 
         "0.12433449153554403`"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "0.31357951012579893`", ",", "0.08793116205833355`", ",", 
         "0.2804110575434541`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "0.7395372572694746`", ",", "0.08793115710213237`", ",", 
         "0.11890023962659094`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "1.4793644080741557`", ",", "0.014662924236540678`", ",", 
         "0.009911637833459134`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "1.0679041673684964`", ",", "0.1234921211033092`", ",", 
         "0.11563970333369472`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "1.067904167330686`", ",", "0.12349212080736473`", ",", 
         "0.11563970306066267`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "1.792943923696241`", ",", "0.08793122765632239`", ",", 
         "0.04904293240529681`"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "0.23157036738966177`", ",", "0.07061143034237745`", ",", 
         "0.3049242920773197`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "0.5656075687012134`", ",", "0.09028585699245059`", ",", 
         "0.15962632395420578`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "1.1956377808917746`", ",", "0.0455814299228857`", ",", 
         "0.03812310939931028`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "0.875814107533034`", ",", "0.08936026872176576`", ",", 
         "0.10203109079102757`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "1.0080623715172254`", ",", "0.13175960243694212`", ",", 
         "0.1307058036881507`"}], "}"}]}], "}"}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{{{1.7578162996276752`, 0.03262322220909985, 
    0.018558948518118647`}}, {{1.442884676739766, 0.04084526635279924, 
    0.02830806024296421}, {1.4428846776776043`, 0.0408452657804818, 
    0.028308059827916614`}}, {{0.9408639556441674, 0.10329513658381963`, 
    0.10978753725675257`}, {1.5842334272985072`, 0.16938299729994735`, 
    0.10691795437543912`}, {1.5842334272985072`, 0.16938299729994727`, 
    0.10691795437543906`}}, {{0.6292330309790906, 0.12044104665523522`, 
    0.19140928833285847`}, {1.2931085113827598`, 0.12045993340333815`, 
    0.09315531708512746}}, {{0.43690216888253797`, 0.10698303799905122`, 
    0.24486726232712713`}, {0.9801760621689903, 0.08540161621651975, 
    0.08712885318535336}, {1.7717978583646632`, 0.04274325241364631, 
    0.02412422625518779}, {1.2468013874307258`, 0.15502041655201013`, 
    0.12433449153554403`}}, {{0.31357951012579893`, 0.08793116205833355, 
    0.2804110575434541}, {0.7395372572694746, 0.08793115710213237, 
    0.11890023962659094`}, {1.4793644080741557`, 0.014662924236540678`, 
    0.009911637833459134}, {1.0679041673684964`, 0.1234921211033092, 
    0.11563970333369472`}, {1.067904167330686, 0.12349212080736473`, 
    0.11563970306066267`}, {1.792943923696241, 0.08793122765632239, 
    0.04904293240529681}}, {{0.23157036738966177`, 0.07061143034237745, 
    0.3049242920773197}, {0.5656075687012134, 0.09028585699245059, 
    0.15962632395420578`}, {1.1956377808917746`, 0.0455814299228857, 
    0.03812310939931028}, {0.875814107533034, 0.08936026872176576, 
    0.10203109079102757`}, {1.0080623715172254`, 0.13175960243694212`, 
    0.1307058036881507}}}],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.768857755792594*^9, {3.7688577891421857`*^9, 3.7688577935912876`*^9}, {
   3.76885782644538*^9, 3.7688578411284513`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{638, 661},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 92, 1, 70, "Section"],
Cell[675, 25, 366, 8, 31, "Input"],
Cell[1044, 35, 8597, 274, 692, "Input"],
Cell[9644, 311, 744, 27, 26, "DisplayFormula"],
Cell[10391, 340, 714, 23, 72, "Input"],
Cell[11108, 365, 330, 8, 31, "Input"],
Cell[11441, 375, 2993, 88, 332, "Input"],
Cell[14437, 465, 1171, 33, 132, "Input"],
Cell[15611, 500, 695, 20, 112, "Input"],
Cell[CellGroupData[{
Cell[16331, 524, 99, 1, 39, "Subsubsection"],
Cell[16433, 527, 4799, 136, 392, "Input"],
Cell[21235, 665, 1201, 30, 232, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22473, 700, 100, 1, 39, "Subsubsection"],
Cell[22576, 703, 2716, 88, 172, "Input"],
Cell[CellGroupData[{
Cell[25317, 795, 1705, 46, 112, "Input"],
Cell[27025, 843, 695, 13, 40, "Message"],
Cell[27723, 858, 2438, 47, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30198, 910, 1046, 30, 112, "Input"],
Cell[31247, 942, 667, 12, 21, "Message"],
Cell[31917, 956, 2897, 92, 276, "Output"]
}, Open  ]],
Cell[34829, 1051, 3194, 87, 272, "Input"],
Cell[CellGroupData[{
Cell[38048, 1142, 208, 5, 31, "Input"],
Cell[38259, 1149, 453, 12, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38749, 1166, 2315, 59, 232, "Input"],
Cell[41067, 1227, 2354, 46, 447, "Output"]
}, Open  ]],
Cell[43436, 1276, 2924, 74, 246, "Input"],
Cell[46363, 1352, 99, 1, 30, "Text"],
Cell[46465, 1355, 2868, 85, 232, "Input"],
Cell[49336, 1442, 1058, 33, 92, "Input"],
Cell[50397, 1477, 2387, 64, 272, "Input"],
Cell[52787, 1543, 1842, 47, 192, "Input"],
Cell[54632, 1592, 1748, 44, 172, "Input"],
Cell[56383, 1638, 3109, 86, 272, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59529, 1729, 104, 1, 39, "Subsubsection"],
Cell[59636, 1732, 1301, 31, 172, "Input"],
Cell[60940, 1765, 615, 16, 92, "Input"],
Cell[61558, 1783, 1131, 32, 92, "Input"],
Cell[62692, 1817, 557, 16, 72, "Input"],
Cell[63252, 1835, 1229, 29, 232, "Input"],
Cell[64484, 1866, 1179, 32, 112, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65700, 1903, 154, 2, 39, "Subsubsection"],
Cell[65857, 1907, 2546, 75, 232, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[68452, 1988, 105, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[68582, 1993, 203, 2, 39, "Subsubsection"],
Cell[68788, 1997, 78335, 1289, 76, "Input",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[147160, 3291, 123116, 2024, 264, "Subsubsection"],
Cell[270279, 5317, 343, 9, 31, "Input"],
Cell[270625, 5328, 1381, 36, 172, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272043, 5369, 406, 11, 39, "Subsubsection"],
Cell[272452, 5382, 14898, 249, 73, "Text"],
Cell[287353, 5633, 1463, 37, 172, "Input"],
Cell[288819, 5672, 496, 15, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289352, 5692, 375, 10, 67, "Subsubsection"],
Cell[289730, 5704, 3258, 79, 343, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[293037, 5789, 208, 3, 70, "Section"],
Cell[293248, 5794, 3193, 75, 392, "Input"],
Cell[296444, 5871, 4971, 123, 612, "Input"],
Cell[CellGroupData[{
Cell[301440, 5998, 448, 9, 31, "Input"],
Cell[301891, 6009, 6044, 137, 199, "Output"]
}, Open  ]],
Cell[307950, 6149, 1424, 39, 152, "Input"],
Cell[309377, 6190, 777, 21, 92, "Input"],
Cell[310157, 6213, 846, 20, 72, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[311040, 6238, 269, 3, 70, "Section"],
Cell[CellGroupData[{
Cell[311334, 6245, 230, 4, 39, "Subsubsection"],
Cell[311567, 6251, 53793, 887, 210, "Text"],
Cell[365363, 7140, 1143, 33, 72, "Input"],
Cell[366509, 7175, 5348, 130, 372, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371894, 7310, 336, 6, 39, "Subsubsection"],
Cell[372233, 7318, 255239, 4196, 196, "Text"],
Cell[627475, 11516, 612, 16, 92, "Input"],
Cell[628090, 11534, 830, 19, 92, "Input"],
Cell[628923, 11555, 1203, 28, 112, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[630163, 11588, 222, 5, 67, "Subsubsection"],
Cell[630388, 11595, 136244, 2238, 220, "Input",
 Evaluatable->False]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[766681, 13839, 270, 4, 56, "Section"],
Cell[766954, 13845, 351, 7, 30, "Text"],
Cell[767308, 13854, 27528, 456, 64, "Input",
 Evaluatable->False],
Cell[794839, 14312, 2624, 64, 212, "Input"],
Cell[797466, 14378, 661, 18, 31, "Input"],
Cell[798130, 14398, 4948, 115, 272, "Input"],
Cell[803081, 14515, 3616, 109, 132, "Input"],
Cell[CellGroupData[{
Cell[806722, 14628, 119, 1, 39, "Subsubsection"],
Cell[806844, 14631, 1398, 39, 52, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[808291, 14676, 259, 3, 56, "Section"],
Cell[808553, 14681, 3020, 55, 552, "Input"],
Cell[811576, 14738, 1046, 27, 72, "Input"],
Cell[812625, 14767, 311, 10, 31, "Input"],
Cell[812939, 14779, 584, 15, 52, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[813560, 14799, 99, 1, 56, "Section"],
Cell[813662, 14802, 2305, 57, 192, "Input"],
Cell[815970, 14861, 1488, 38, 172, "Input"],
Cell[817461, 14901, 1477, 37, 132, "Input"],
Cell[818941, 14940, 2317, 60, 292, "Input"],
Cell[821261, 15002, 10185, 232, 832, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[831483, 15239, 98, 1, 70, "Section"],
Cell[831584, 15242, 25781, 551, 1992, "Input"],
Cell[857368, 15795, 1391, 32, 132, "Input"],
Cell[858762, 15829, 2811, 74, 292, "Input"],
Cell[861576, 15905, 424, 10, 31, "Input"],
Cell[862003, 15917, 6414, 153, 632, "Input"],
Cell[868420, 16072, 4692, 107, 412, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[873149, 16184, 180, 2, 70, "Section"],
Cell[873332, 16188, 3114, 70, 292, "Input"],
Cell[876449, 16260, 7133, 137, 452, "Input"],
Cell[CellGroupData[{
Cell[883607, 16401, 172, 3, 39, "Subsubsection"],
Cell[883782, 16406, 768, 19, 72, "Input"],
Cell[884553, 16427, 2403, 59, 232, "Input"],
Cell[886959, 16488, 1547, 35, 132, "Input"],
Cell[888509, 16525, 2351, 52, 232, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[890909, 16583, 130, 1, 56, "Section"],
Cell[891042, 16586, 1785, 45, 192, "Input"],
Cell[CellGroupData[{
Cell[892852, 16635, 147, 1, 39, "Subsubsection"],
Cell[893002, 16638, 3193, 79, 292, "Input"],
Cell[896198, 16719, 1551, 38, 172, "Input"],
Cell[897752, 16759, 2436, 55, 372, "Input"],
Cell[900191, 16816, 2022, 41, 192, "Input"],
Cell[902216, 16859, 2542, 54, 352, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[904807, 16919, 182, 2, 70, "Section"],
Cell[904992, 16923, 746, 19, 72, "Input"],
Cell[905741, 16944, 1122, 30, 152, "Input"],
Cell[906866, 16976, 424, 11, 52, "Input"],
Cell[907293, 16989, 1361, 34, 152, "Input"],
Cell[908657, 17025, 752, 15, 52, "Input"],
Cell[909412, 17042, 1031, 28, 92, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[910480, 17075, 247, 3, 56, "Section"],
Cell[910730, 17080, 1228, 33, 112, "Input"],
Cell[CellGroupData[{
Cell[911983, 17117, 716, 15, 52, "Input"],
Cell[912702, 17134, 598, 11, 70, "Message"],
Cell[913303, 17147, 598, 11, 70, "Message"],
Cell[913904, 17160, 598, 11, 70, "Message"],
Cell[914505, 17173, 535, 11, 70, "Message"],
Cell[915043, 17186, 541, 11, 70, "Message"],
Cell[915587, 17199, 543, 11, 70, "Message"],
Cell[916133, 17212, 543, 11, 70, "Message"],
Cell[916679, 17225, 535, 11, 70, "Message"],
Cell[917217, 17238, 466, 9, 70, "Print"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[917732, 17253, 351, 5, 56, "Section"],
Cell[918086, 17260, 2031, 45, 132, "Input"],
Cell[CellGroupData[{
Cell[920142, 17309, 173, 2, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[920340, 17315, 841, 19, 72, "Input"],
Cell[921184, 17336, 498, 9, 23, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[921719, 17350, 1857, 30, 72, "Input"],
Cell[923579, 17382, 494, 9, 23, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[924110, 17396, 1047, 19, 72, "Input"],
Cell[925160, 17417, 498, 9, 23, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[925695, 17431, 1230, 22, 72, "Input"],
Cell[926928, 17455, 491, 9, 23, "Print"]
}, Open  ]],
Cell[927434, 17467, 789, 20, 72, "Input"],
Cell[CellGroupData[{
Cell[928248, 17491, 546, 11, 52, "Input"],
Cell[928797, 17504, 1864, 44, 103, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[930722, 17555, 453, 6, 70, "Section"],
Cell[931178, 17563, 2366, 52, 152, "Input"],
Cell[CellGroupData[{
Cell[933569, 17619, 223, 3, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[933817, 17626, 1953, 31, 52, "Input"],
Cell[935773, 17659, 636, 11, 70, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[936470, 17677, 207, 3, 56, "Section"],
Cell[936680, 17682, 399960, 7171, 1183, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[1336677, 24858, 104, 1, 56, "Section"],
Cell[1336784, 24861, 576, 12, 172, "Input"],
Cell[1337363, 24875, 609, 17, 52, "Input"],
Cell[1337975, 24894, 2503, 63, 272, "Input"],
Cell[1340481, 24959, 3900, 98, 412, "Input"],
Cell[1344384, 25059, 4551, 102, 352, "Input"],
Cell[1348938, 25163, 2654, 65, 252, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1351629, 25233, 227, 3, 70, "Section"],
Cell[CellGroupData[{
Cell[1351881, 25240, 317, 5, 31, "Input"],
Cell[1352201, 25247, 36849, 759, 467, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1389099, 26012, 96, 1, 70, "Section"],
Cell[1389198, 26015, 2209, 61, 232, "Input"],
Cell[CellGroupData[{
Cell[1391432, 26080, 760, 15, 72, "Input"],
Cell[1392195, 26097, 370, 7, 23, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1392602, 26109, 173, 3, 31, "Input"],
Cell[1392778, 26114, 77847, 1552, 485, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1470674, 27672, 151, 2, 70, "Section"],
Cell[CellGroupData[{
Cell[1470850, 27678, 169, 3, 31, "Input"],
Cell[1471022, 27683, 82288, 1624, 467, "Output"]
}, Open  ]],
Cell[1553325, 29310, 521, 11, 31, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1553883, 29326, 99, 1, 56, "Section"],
Cell[CellGroupData[{
Cell[1554007, 29331, 171, 3, 31, "Input"],
Cell[1554181, 29336, 82290, 1641, 451, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1636508, 30982, 548, 13, 52, "Input"],
Cell[1637059, 30997, 20029, 343, 591, "Output"]
}, Open  ]],
Cell[1657103, 31343, 290, 6, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1657430, 31354, 454, 6, 70, "Section"],
Cell[1657887, 31362, 2815, 60, 192, "Input"],
Cell[CellGroupData[{
Cell[1660727, 31426, 272, 3, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[1661024, 31433, 556, 14, 72, "Input"],
Cell[1661583, 31449, 418, 9, 23, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1662038, 31463, 224, 4, 31, "Input"],
Cell[1662265, 31469, 51851, 1030, 463, "Output"]
}, Open  ]],
Cell[1714131, 32502, 396, 8, 31, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1714576, 32516, 94, 1, 70, "Section"],
Cell[1714673, 32519, 1725, 47, 212, "Input"],
Cell[CellGroupData[{
Cell[1716423, 32570, 560, 13, 72, "Input"],
Cell[1716986, 32585, 448, 8, 23, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1717471, 32598, 171, 3, 31, "Input"],
Cell[1717645, 32603, 116135, 2277, 471, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1833817, 34885, 889, 20, 112, "Input"],
Cell[1834709, 34907, 52386, 885, 591, "Output"]
}, Open  ]],
Cell[1887110, 35795, 338, 8, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1887485, 35808, 506, 7, 70, "Section"],
Cell[1887994, 35817, 1920, 52, 232, "Input"],
Cell[CellGroupData[{
Cell[1889939, 35873, 905, 19, 72, "Input"],
Cell[1890847, 35894, 391, 8, 23, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1891275, 35907, 322, 4, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[1891622, 35915, 273, 5, 31, "Input"],
Cell[1891898, 35922, 55604, 1089, 471, "Output"]
}, Open  ]],
Cell[1947517, 37014, 396, 8, 31, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1947962, 37028, 105, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[1948092, 37033, 111, 1, 39, "Subsubsection"],
Cell[1948206, 37036, 308, 9, 31, "Input"],
Cell[CellGroupData[{
Cell[1948539, 37049, 4553, 111, 466, "Input"],
Cell[1953095, 37162, 42012, 786, 393, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1995156, 37954, 108, 1, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[1995289, 37959, 7391, 186, 733, "Input"],
Cell[2002683, 38147, 4786, 94, 509, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2007530, 38248, 179, 2, 70, "Section"],
Cell[CellGroupData[{
Cell[2007734, 38254, 1571, 40, 192, "Input"],
Cell[2009308, 38296, 1865, 47, 133, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2011210, 38348, 138, 1, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[2011373, 38353, 1394, 38, 192, "Input"],
Cell[2012770, 38393, 1930, 47, 136, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2014749, 38446, 126, 1, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[2014900, 38451, 1242, 32, 192, "Input"],
Cell[2016145, 38485, 5823, 146, 133, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
