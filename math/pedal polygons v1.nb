(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3522189,      68256]
NotebookOptionsPosition[   3499639,      67592]
NotebookOutlinePosition[   3499985,      67607]
CellTagsIndexPosition[   3499942,      67604]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Utils", "Section",
 CellChangeTimes->{{3.7657196589240246`*^9, 3.765719665743774*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\<C:\\\\Users\\\\drezn\\\\Dropbox\\\\Mathematica\\\\Billiards\>\"", 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7657217378447948`*^9, 3.765721737973451*^9}, {
  3.765721775573923*^9, 3.7657218002300367`*^9}, {3.7657221018699837`*^9, 
  3.765722114062396*^9}, {3.7671242620943127`*^9, 3.7671242758445625`*^9}, {
  3.787073257039322*^9, 3.787073258759693*^9}}],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"neglC", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"v", ",", "_Real"}], "}"}], "}"}], ",", 
      RowBox[{
       RowBox[{"Abs", "[", "v", "]"}], "<", 
       RowBox[{"10", "^", 
        RowBox[{"-", "18"}]}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"safeDivC", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"num", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"denom", ",", "_Real"}], "}"}]}], "}"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"negl", "[", "denom", "]"}], ",", "0", ",", 
        RowBox[{"num", "/", "denom"}]}], "]"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"magn2C", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"v", ",", "_Real", ",", "1"}], "}"}], "}"}], ",", 
      RowBox[{"v", ".", "v"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"magnC", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"v", ",", "_Real", ",", "1"}], "}"}], "}"}], ",", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"magn2", "[", "v", "]"}], "]"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"reflC", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"v", ",", "_Real", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "_Real", ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"v", ".", "n"}], ")"}], 
        RowBox[{"n", "/", 
         RowBox[{"magn2", "[", "n", "]"}]}]}], "-", "v"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"normC", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"v", ",", "_Real", ",", "1"}], "}"}], "}"}], ",", 
      RowBox[{"v", "/", 
       RowBox[{"magn", "[", "v", "]"}]}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"rayC", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"p0", ",", "_Real", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"phat", ",", "_Real", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"d", ",", "_Real"}], "}"}]}], "}"}], ",", 
      RowBox[{"p0", "+", 
       RowBox[{"phat", "*", "d"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"ellGradC", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "_Real"}], "}"}]}], "}"}], ",", 
      RowBox[{"-", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"y", " ", 
          RowBox[{"a", "^", "2"}]}]}], "}"}]}]}], "]"}]}], ";", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "/", "a"}], ")"}], "^", "2"}], "+", 
      RowBox[{"y", "^", "2"}]}], "\[Equal]", "1"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ellGradbC", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "_Real"}], "}"}]}], "}"}], ",", 
      RowBox[{"-", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", " ", 
          RowBox[{"b", "^", "2"}]}], ",", 
         RowBox[{"y", " ", 
          RowBox[{"a", "^", "2"}]}]}], "}"}]}]}], "]"}]}], ";", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "/", "a"}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y", "/", "b"}], ")"}], "^", "2"}]}], "\[Equal]", "1"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"ellYC", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "_Real"}], "}"}]}], "}"}], ",", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "/", "a"}], ")"}], "^", "2"}]}], "]"}]}], "]"}]}], ";",
    "\[IndentingNewLine]", 
   RowBox[{"ellPC", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "_Real"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "/", "a"}], ")"}], "^", "2"}]}], "]"}]}], "}"}]}], 
     "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"ellYbC", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "_Real"}], "}"}]}], "}"}], ",", 
      RowBox[{"b", "*", 
       RowBox[{"ellY", "[", 
        RowBox[{
         RowBox[{"a", "/", "b"}], ",", 
         RowBox[{"x", "/", "b"}]}], "]"}]}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"focalDistanceC", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", "_Real"}], "}"}]}], "}"}], ",", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"a", "^", "2"}], "-", 
        RowBox[{"b", "^", "2"}]}], "]"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"getFociC", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"a", ",", "_Real"}], "}"}], "}"}], ",", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "c", "}"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"a", "<", "1"}], ",", 
          RowBox[{
           RowBox[{"c", "=", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"a", "^", "2"}]}], "]"}]}], ";", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "c"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", "c"}]}], "}"}]}], "}"}]}], ",", 
          RowBox[{
           RowBox[{"c", "=", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"a", "^", "2"}], "-", "1"}], "]"}]}], ";", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "c"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"c", ",", "0"}], "}"}]}], "}"}]}]}], "]"}]}], "]"}]}], 
     "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"quadRootsUnprotC", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "_Real"}], "}"}]}], "}"}], ",", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"det", "=", 
           RowBox[{
            RowBox[{"b", "^", "2"}], "-", 
            RowBox[{"4", "a", " ", "c"}]}]}], ",", "sqrtDet"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"sqrtDet", "=", 
          RowBox[{"Sqrt", "[", "det", "]"}]}], ";", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "b"}], "-", "sqrtDet"}], ",", 
            RowBox[{
             RowBox[{"-", "b"}], "+", "sqrtDet"}]}], "}"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "a"}], ")"}]}]}]}], "]"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"ellInterRayUnprotC", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", "_Real", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "_Real", ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "x", ",", "y", ",", "nx", ",", "ny", ",", "a2", ",", "c2", ",", "c1",
           ",", "c0", ",", "ss"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], "=", "p"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"nx", ",", "ny"}], "}"}], "=", "n"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"a2", "=", 
          RowBox[{"a", "*", "a"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"c2", "=", 
          RowBox[{
           RowBox[{"nx", "^", "2"}], "+", 
           RowBox[{"a2", " ", 
            RowBox[{"ny", "^", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"c1", "=", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"nx", " ", "x"}], "+", 
             RowBox[{"a2", " ", "ny", " ", "y"}]}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"c0", "=", 
          RowBox[{
           RowBox[{"x", "^", "2"}], "+", 
           RowBox[{"a2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"y", "^", "2"}]}], ")"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ss", "=", 
          RowBox[{"quadRootsUnprot", "[", 
           RowBox[{"c2", ",", "c1", ",", "c0"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"ray", "[", 
            RowBox[{"p", ",", "n", ",", "#"}], "]"}], "&"}], "/@", "ss"}]}]}],
        "\[IndentingNewLine]", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"getInterReflC", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"pfrom", ",", "_Real", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"pto", ",", "_Real", ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"norm", ",", "theRefl", ",", "pnext"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"norm", "=", 
          RowBox[{"ellGrad", "[", 
           RowBox[{"a", ",", 
            RowBox[{"pto", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"pto", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"theRefl", "=", 
          RowBox[{"refl", "[", 
           RowBox[{
            RowBox[{"pfrom", "-", "pto"}], ",", "norm"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"pnext", "=", 
          RowBox[{
           RowBox[{"ellInterRayUnprot", "[", 
            RowBox[{"a", ",", "pto", ",", "theRefl"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "pnext"}]}], "]"}]}], "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7716902168199835`*^9, 3.7716903562600865`*^9}, {
  3.7716904018606634`*^9, 3.7716904104141483`*^9}, {3.7716905309962935`*^9, 
  3.7716905359251575`*^9}, {3.771690599524514*^9, 3.7716906032051044`*^9}, {
  3.771690660484445*^9, 3.7716906608235393`*^9}, {3.771690980932355*^9, 
  3.771690983813218*^9}, {3.7716910173015385`*^9, 3.771691027157966*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"toDeg", "[", "r_", "]"}], ":=", 
   RowBox[{"180.", "*", 
    RowBox[{"r", "/", "\[Pi]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"toRad", "[", "d_", "]"}], ":=", 
   RowBox[{"\[Pi]", "*", 
    RowBox[{"d", "/", "180."}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"negl", "[", "v_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Abs", "[", "v", "]"}], "<", 
    RowBox[{"10", "^", 
     RowBox[{"-", "18"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"safeDiv", "[", 
    RowBox[{"num_", ",", "denom_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"negl", "[", "denom", "]"}], ",", "0", ",", 
     RowBox[{"num", "/", "denom"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"magn2", "[", "v_", "]"}], ":=", 
   RowBox[{"v", ".", "v"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"magn", "[", "v_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"magn2", "[", "v", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"swap", "[", 
    RowBox[{"{", 
     RowBox[{"a_", ",", "b_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"b", ",", "a"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"flipY", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "y"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"flipX", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "x"}], ",", "y"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"flipZ", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", 
     RowBox[{"-", "z"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"flipXY", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "x"}], ",", 
     RowBox[{"-", "y"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"perp", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "y"}], ",", "x"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"perpNeg", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "x"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refl", "[", 
    RowBox[{"v_", ",", "n_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"v", ".", "n"}], ")"}], 
     RowBox[{"n", "/", 
      RowBox[{"magn2", "[", "n", "]"}]}]}], "-", "v"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"norm", "[", "v_", "]"}], ":=", 
   RowBox[{"v", "/", 
    RowBox[{"magn", "[", "v", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"clamp", "[", 
     RowBox[{"v_", ",", 
      RowBox[{"max_:", "100"}]}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"v", ">", "max"}], ",", "max", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"v", "<", 
         RowBox[{"-", "max"}]}], ",", 
        RowBox[{"-", "max"}], ",", "v"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"ray", "[", 
      RowBox[{"p0_", ",", "phat_", ",", "d_"}], "]"}], ":=", 
     RowBox[{"p0", "+", 
      RowBox[{"phat", "*", "d"}]}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ray", "[", 
    RowBox[{"p0_", ",", "phat_", ",", "d_"}], "]"}], ":=", 
   RowBox[{"p0", "+", 
    RowBox[{"phat", "*", "d"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "rot"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rot", "[", 
    RowBox[{"p_", ",", "st_", ",", "ct_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "m", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"m", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ct", ",", 
           RowBox[{"-", "st"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"st", ",", "ct"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"m", ".", "p"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "@", "rotRel"}], ";", 
  RowBox[{
   RowBox[{"rotRel", "[", 
    RowBox[{"p_", ",", "p0_", ",", "st_", ",", "ct_"}], "]"}], ":=", 
   RowBox[{"p0", "+", 
    RowBox[{"rot", "[", 
     RowBox[{
      RowBox[{"p", "-", "p0"}], ",", "st", ",", "ct"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rot", "[", 
    RowBox[{"p_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"rot", "[", 
    RowBox[{"p", ",", 
     RowBox[{"Sin", "@", "t"}], ",", 
     RowBox[{"Cos", "@", "t"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getEquilateral", "[", "th_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s", "=", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", 
           RowBox[{"\[Pi]", "/", "3."}]}], "]"}]}], ",", 
        RowBox[{"c", "=", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", 
           RowBox[{"\[Pi]", "/", "3."}]}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rot", "[", 
          RowBox[{"#", ",", "s", ",", "c"}], "]"}], "&"}], ",", 
        RowBox[{"rot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1.", ",", "0."}], "}"}], ",", 
          RowBox[{"Sin", "@", "th"}], ",", 
          RowBox[{"Cos", "@", "th"}]}], "]"}], ",", "2"}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"x0", "+", 
      RowBox[{"nx", "*", "t"}]}], "=", 
     RowBox[{"0", "=", " ", 
      RowBox[{
       RowBox[{">", "t"}], "=", 
       RowBox[{
        RowBox[{"-", "x0"}], "/", "nx"}]}]}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "@", "interY"}], ";", 
   RowBox[{
    RowBox[{"interY", "[", 
     RowBox[{"p0_", ",", "phat_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"p0", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "/", 
         RowBox[{"phat", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ray", "[", 
        RowBox[{"p0", ",", "phat", ",", "t"}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"y0", "+", 
      RowBox[{"ny", "*", "t"}]}], "=", 
     RowBox[{"0", "=", " ", 
      RowBox[{
       RowBox[{">", "t"}], "=", 
       RowBox[{
        RowBox[{"-", "y0"}], "/", "ny"}]}]}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "interX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"interX", "[", 
    RowBox[{"p0_", ",", "phat_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "t", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", "=", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"p0", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "/", 
        RowBox[{"phat", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ray", "[", 
       RowBox[{"p0", ",", "phat", ",", "t"}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0l1I02EUBvBpMccqHakTQxtho2UNCYPyA+qvlBFz+QHTtiDblrKxIWNL
UbQvHa4wCB00QastprUaocgmaeguWrXJ0GHNmJRJXWT/CRmBVlLv814cfjw8
nHN19qmbay4nczgcKRmoOda/qUhlmUFJ6z9oLUvh1hH5Zm0qVByIZUOHOzkX
9i5PH6H9VrwQ/ukSl8DHs+JSGMkVVtBc8FwO+1xskO4PzL+BjN7Bqyfuaf2Q
BjdWajbOE/fmWKj2E2uMmsgL5FXD41X7DXAqsU59eO1tB/SeXqTaHOsOWJx3
dgAOpmzeh64ZzQP4VdI0Af++D1KXGFOlhrjqaTgHeX5uEPb+zAzDYG34B5Ts
nqcaPlksOuK7m93U+raJIZgIi51QrZdd1BPj+U41vHMr2n+D6BuescOxS4qn
cEa+6oV1LmMAVvpHQzCyqO3sJqo8O67Cz4cLHyWlscyLgnQ3/L2z7Am09cip
H31Fy1zi2AL7BU7bo/6DxAud8kk48ksZgDlmHTXf2dxmF7CMaVsHVXE3K/ad
GJkKrUC+7bVElM4yJ7NFUhiK8fpkGeTe0Qwq3+sxVhO1Fe1XoMklGIdztZOv
YJGqfNJKPCP99hJuJbk8ceIzjtMLZad0mWYhy7SoAkLYFW66zWaTLLdQ2xtn
hxLE61WGUehUlgrXkMuVWbB4qaVxl4hlFu4d0kPjsN8KG9zbe6BPMK6MlpB/
mpum/gc4LktB
  "]],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "s"}], " ", 
       RowBox[{"(", 
        RowBox[{"dl", ".", "dl"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"p", "-", "l1"}], ")"}], "dl"}]}], "\[Equal]", "0"}], 
    "\[Implies]", 
    StyleBox[" ",
     FontWeight->"Bold"], 
    StyleBox["s",
     FontWeight->"Bold"]}], 
   StyleBox["=",
    FontWeight->"Bold"], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"p", "-", "l1"}], ")"}], ".", "dl"}], "/", 
     RowBox[{"dl", "^", "2", " "}]}],
    FontWeight->"Bold"]}], "DisplayFormula"]], "DisplayFormula",
 CellChangeTimes->{{3.766046175268909*^9, 3.7660461971803007`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"closestPerp", "[", 
    RowBox[{"p_", ",", "l1_", ",", "l2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dl", "=", 
        RowBox[{"l2", "-", "l1"}]}], ",", "s"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"p", "-", "l1"}], ")"}], ".", "dl"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"dl", ".", "dl"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ray", "[", 
       RowBox[{"l1", ",", "dl", ",", "s"}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"closestDist", "[", 
   RowBox[{"p_", ",", "l1_", ",", "l2_"}], "]"}], ":=", 
  RowBox[{"magn", "[", 
   RowBox[{"p", "-", 
    RowBox[{"closestPerp", "[", 
     RowBox[{"p", ",", "l1", ",", "l2"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7684785056533337`*^9, 3.7684785330943646`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "quadRoots"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"quadRoots", "[", 
    RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"det", "=", 
        RowBox[{
         RowBox[{"b", "^", "2"}], "-", 
         RowBox[{"4", "a", " ", "c"}]}]}], ",", "sqrtDet"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"det", "<", "0"}], ",", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<quadRoots fail: {a,b,c}=\>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "c"}], "}"}]}]}], "]"}], ";", 
        "False"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sqrtDet", "=", 
         RowBox[{"Sqrt", "[", "det", "]"}]}], ";", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "b"}], "-", "sqrtDet"}], ",", 
           RowBox[{
            RowBox[{"-", "b"}], "+", "sqrtDet"}]}], "}"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "a"}], ")"}]}]}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "interRays"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"interRays", "[", 
    RowBox[{"p1_", ",", "n1_", ",", "p2_", ",", "n2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "b", ",", "sols"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"m", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"n1", ",", "n2"}], "}"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"nx1", ",", 
            RowBox[{"-", "nx2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ny1", ",", 
            RowBox[{"-", "ny2"}]}], "}"}]}], "}"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"negl", "[", 
         RowBox[{"Det", "[", "m", "]"}], "]"}], ",", "p1", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"b", "=", 
          RowBox[{"p2", "-", "p1"}]}], ";", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x2", "-", "x1"}], ",", 
              RowBox[{"y2", "-", "y1"}]}], "}"}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"sols", "=", 
          RowBox[{"LinearSolve", "[", 
           RowBox[{"m", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ray", "[", 
          RowBox[{"p1", ",", "n1", ",", 
           RowBox[{"sols", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"interRaysUnprot", "[", 
    RowBox[{"p1_", ",", "n1_", ",", "p2_", ",", "n2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "b", ",", "sols"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"m", "=", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{"n1", ",", "n2"}], "}"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"nx1", ",", 
            RowBox[{"-", "nx2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ny1", ",", 
            RowBox[{"-", "ny2"}]}], "}"}]}], "}"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"b", "=", 
       RowBox[{"p2", "-", "p1"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x2", "-", "x1"}], ",", 
           RowBox[{"y2", "-", "y1"}]}], "}"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"sols", "=", 
       RowBox[{"LinearSolve", "[", 
        RowBox[{"m", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ray", "[", 
       RowBox[{"p1", ",", "n1", ",", 
        RowBox[{"sols", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.791325339692352*^9, 3.7913253399655933`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Second", "[", "l_", "]"}], ":=", 
   RowBox[{"l", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Third", "[", "l_", "]"}], ":=", 
   RowBox[{"l", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Fourth", "[", "l_", "]"}], ":=", 
   RowBox[{"l", "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Fifth", "[", "l_", "]"}], ":=", 
   RowBox[{"l", "[", 
    RowBox[{"[", "5", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sixth", "[", "l_", "]"}], ":=", 
   RowBox[{"l", "[", 
    RowBox[{"[", "6", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Seventh", "[", "l_", "]"}], ":=", 
   RowBox[{"l", "[", 
    RowBox[{"[", "7", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7670147435906525`*^9, 3.7670147496393466`*^9}, {
  3.7679104981995945`*^9, 3.7679105149996314`*^9}, {3.7682316300265183`*^9, 
  3.768231675276226*^9}, {3.7687498501054573`*^9, 3.7687498786811743`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getStats", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getStats", "[", "vals_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mean", ",", "sd", ",", "z"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mean", "=", 
       RowBox[{"Mean", "@", "vals"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sd", "=", 
       RowBox[{"StandardDeviation", "@", "vals"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"z", "=", 
       RowBox[{"safeDiv", "[", 
        RowBox[{"sd", ",", "mean"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"mean", ",", "sd", ",", "z", ",", 
        RowBox[{"Min", "@", "vals"}], ",", 
        RowBox[{"Max", "@", "vals"}], ",", 
        RowBox[{"Median", "@", "vals"}], ",", 
        RowBox[{"Length", "@", "vals"}]}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.769031954609926*^9, 3.7690319621537514`*^9}, {
  3.769032105249846*^9, 3.7690321187377887`*^9}, {3.7690354728422265`*^9, 
  3.769035480504235*^9}, {3.7696036089647465`*^9, 3.769603611332415*^9}, {
  3.76960408355696*^9, 3.7696040891019106`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getStatsLabeled"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getStatsLabeled", "[", "vals_", "]"}], ":=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<mean\>\"", ",", "\"\<sd\>\"", ",", "\"\<zscore\>\"", ",", 
      "\"\<min\>\"", ",", "\"\<max\>\"", ",", "\"\<median\>\"", ",", 
      "\"\<N\>\""}], "}"}], "->", 
    RowBox[{"getStats", "[", "vals", "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.769610703055575*^9, 3.769610738236487*^9}, {
  3.769610774525465*^9, 3.7696107821331253`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "removeOutliers"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"removeOutliers", "[", 
    RowBox[{"vals_", ",", 
     RowBox[{"fenceFactor_:", "1.5"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "median", ",", "qs", ",", "iqr", ",", "upperFence", ",", "lowerFence"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"qs", "=", 
       RowBox[{"Quartiles", "[", "vals", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"median", "=", 
       RowBox[{"qs", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"iqr", "=", 
       RowBox[{
        RowBox[{"qs", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "-", 
        RowBox[{"qs", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"upperFence", "=", 
       RowBox[{
        RowBox[{"qs", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "+", 
        RowBox[{"fenceFactor", " ", "iqr"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lowerFence", "=", 
       RowBox[{
        RowBox[{"qs", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", 
        RowBox[{"fenceFactor", " ", "iqr"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Select", "[", 
       RowBox[{"vals", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", ">", "lowerFence"}], "&&", 
          RowBox[{"#", "<", "upperFence"}]}], "&"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.775734168796807*^9, 3.7757341693912168`*^9}}],

Cell[CellGroupData[{

Cell["Triangles", "Subsubsection",
 CellChangeTimes->{{3.76735539449273*^9, 3.767355402979031*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cosHalfAngle", "[", "cosAngle_", "]"}], ":=", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.", "+", "cosAngle"}], ")"}], "/", "2"}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"careful", ":", " ", 
    RowBox[{"plus", " ", "or", " ", "minus"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sinHalfAngle", "[", "cosAngle_", "]"}], ":=", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.", "-", "cosAngle"}], ")"}], "/", "2"}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"careful", ":", " ", 
    RowBox[{"plus", " ", "or", " ", "minus"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cosDoubleAngle", "[", "cosAngle_", "]"}], ":=", 
    RowBox[{
     RowBox[{"2", "*", "cosAngle", "*", "cosAngle"}], "-", "1."}]}], ";"}], 
  " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"cA", "^", "2"}], "-", 
     RowBox[{"sA", "^", "2"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"cA", "^", "2"}]}], "-", "1"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sinDoubleAngle", "[", "sinAngle_", "]"}], ":=", 
    RowBox[{"2", "*", "sinAngle", "*", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"1.", "-", 
       RowBox[{"sinAngle", "^", "2"}]}], "]"}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"2", " ", "sA", " ", "cA"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"gives", " ", "cos", 
    RowBox[{"(", "A", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lawOfCosines", "[", 
    RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"b", "^", "2"}], "+", 
      RowBox[{"c", "^", "2"}], "-", 
      RowBox[{"a", "^", "2"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2.", "b", " ", "c"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSin", "[", "theCos_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"1.", "-", 
     RowBox[{"theCos", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sinCosTripleAngle", "[", 
    RowBox[{"s_", ",", "c_", ",", "s2_", ",", "c2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s3", ",", "c3"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"c3", "=", 
       RowBox[{
        RowBox[{"c2", " ", "c"}], "-", 
        RowBox[{"s2", " ", "s"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"s3", "=", 
       RowBox[{
        RowBox[{"s2", " ", "c"}], "+", 
        RowBox[{"s", " ", "c2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"s3", ",", "c3"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSinCosApB", "[", 
    RowBox[{"sa_", ",", "sb_", ",", "ca_", ",", "cb_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"sa", " ", "cb"}], " ", "+", " ", 
      RowBox[{"sb", " ", "ca"}]}], " ", ",", 
     RowBox[{
      RowBox[{"ca", " ", "cb"}], " ", "-", " ", 
      RowBox[{"sa", " ", "sb"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSinCosAmB", "[", 
    RowBox[{"sa_", ",", "sb_", ",", "ca_", ",", "cb_"}], "]"}], ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"sa", " ", "cb"}], " ", "-", " ", 
      RowBox[{"sb", " ", "ca"}]}], ",", 
     RowBox[{
      RowBox[{"ca", " ", "cb"}], " ", "+", " ", 
      RowBox[{"sa", " ", "sb"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSinApmB", "[", 
    RowBox[{"sa_", ",", "sb_", ",", "ca_", ",", "cb_"}], "]"}], ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"sa", " ", "cb"}], " ", "+", " ", 
      RowBox[{"sb", " ", "ca"}]}], ",", 
     RowBox[{
      RowBox[{"sa", " ", "cb"}], " ", "-", " ", 
      RowBox[{"sb", " ", "ca"}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.76591906281505*^9, 3.765919078501348*^9}, {
  3.7659191143404655`*^9, 3.7659191992291965`*^9}, {3.76657832275782*^9, 
  3.766578327165077*^9}, {3.7665784325336213`*^9, 3.766578440268614*^9}, {
  3.7665785667815685`*^9, 3.7665785731805363`*^9}, {3.7666098515226717`*^9, 
  3.766609958194751*^9}, {3.766615461807331*^9, 3.766615488571554*^9}, {
  3.7670103269827766`*^9, 3.7670103287340918`*^9}, {3.7671231947036533`*^9, 
  3.7671231951903543`*^9}, {3.7673553660914555`*^9, 3.767355366258979*^9}, {
  3.767549318998588*^9, 3.767549319485285*^9}, {3.7677390008982353`*^9, 
  3.7677391362668514`*^9}, {3.7677391840759*^9, 3.7677392730113115`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getTriBisectors"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getTriBisectors", "[", 
    RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"u12", ",", "u23", ",", "u31"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"u12", "=", 
       RowBox[{"norm", "[", 
        RowBox[{"p2", "-", "p1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"u23", "=", 
       RowBox[{"norm", "[", 
        RowBox[{"p3", "-", "p2"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"u31", "=", 
       RowBox[{"norm", "[", 
        RowBox[{"p1", "-", "p3"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"norm", "[", 
         RowBox[{"u12", "-", "u31"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"norm", "[", 
         RowBox[{"u23", "-", "u12"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"norm", "[", 
         RowBox[{"u31", "-", "u23"}], "]"}]}], "\[IndentingNewLine]", 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getBisector", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"norm", "[", 
    RowBox[{
     RowBox[{"norm", "@", "u"}], "+", 
     RowBox[{"norm", "@", "v"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getEllPs", "[", 
    RowBox[{"a_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", " ", 
        RowBox[{"Cos", "@", "#"}]}], ",", 
       RowBox[{"Sin", "@", "#"}]}], "}"}], "&"}], "/@", "ts"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"reflAboutLine", "[", 
    RowBox[{"p_", ",", "l1_", ",", "l2_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"refl", "[", 
     RowBox[{
      RowBox[{"p", "-", "l1"}], ",", 
      RowBox[{"l2", "-", "l1"}]}], "]"}], "+", "l1"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.768926620285266*^9, 3.768926645836902*^9}, {
  3.7689269384129286`*^9, 3.768926945093062*^9}, {3.769030363538371*^9, 
  3.7690303636879706`*^9}, {3.7693500912781363`*^9, 3.7693501121818933`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ellipse", "Subsubsection",
 CellChangeTimes->{{3.766046228637311*^9, 3.7660462354366193`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ellEqn", "[", 
    RowBox[{"a_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "/", "a"}], ")"}], "^", "2"}], "+", 
    RowBox[{"y", "^", "2"}], "-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellEqnb", "[", 
    RowBox[{"a_", ",", "b_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "/", "a"}], ")"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y", "/", "b"}], ")"}], "^", "2"}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "ellGrad0"}], ";", 
  RowBox[{
   RowBox[{"ellGrad0", "[", 
    RowBox[{"a_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", "2"}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "/", 
       RowBox[{"(", 
        RowBox[{"a", "^", "2"}], ")"}]}], ",", "y"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "@", "ellGrad"}], ";", 
   RowBox[{
    RowBox[{"ellGrad", "[", 
     RowBox[{"a_", ",", "x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"-", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"y", " ", 
        RowBox[{"a", "^", "2"}]}]}], "}"}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "/", "a"}], ")"}], "^", "2"}], "+", 
     RowBox[{"y", "^", "2"}]}], "\[Equal]", "1"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "@", "ellGradb"}], ";", 
   RowBox[{
    RowBox[{"ellGradb", "[", 
     RowBox[{"a_", ",", "b_", ",", "x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"-", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", " ", 
        RowBox[{"b", "^", "2"}]}], ",", 
       RowBox[{"y", " ", 
        RowBox[{"a", "^", "2"}]}]}], "}"}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "/", "a"}], ")"}], "^", "2"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y", "/", "b"}], ")"}], "^", "2"}]}], "\[Equal]", "1"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Clear", "@", "getFoci"}], ";", 
  RowBox[{
   RowBox[{"getFoci", "[", "a_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "c", "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "<", "1"}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{"a", "^", "2"}]}], "]"}]}], ";", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "c"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "c"}]}], "}"}]}], "}"}]}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"a", "^", "2"}], "-", "1"}], "]"}]}], ";", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "c"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", "0"}], "}"}]}], "}"}]}]}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "@", "getFocib"}], ";", 
  RowBox[{
   RowBox[{"getFocib", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"b", "*", 
    RowBox[{"getFoci", "[", 
     RowBox[{"a", "/", "b"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "@", "ellY"}], ";", 
  RowBox[{
   RowBox[{"ellY", "[", 
    RowBox[{"a_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "/", "a"}], ")"}], "^", "2"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "ellP"}], ";", 
  RowBox[{
   RowBox[{"ellP", "[", 
    RowBox[{"a_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "/", "a"}], ")"}], "^", "2"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "ellYb"}], ";", 
  RowBox[{
   RowBox[{"ellYb", "[", 
    RowBox[{"a_", ",", "b_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"b", "*", 
    RowBox[{"ellY", "[", 
     RowBox[{
      RowBox[{"a", "/", "b"}], ",", 
      RowBox[{"x", "/", "b"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellError", "[", 
    RowBox[{"a_", ",", "b_", ",", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_"}], "}"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "/", "a"}], ")"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y", "/", "b"}], ")"}], "^", "2"}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "ellPb"}], ";", 
  RowBox[{
   RowBox[{"ellPb", "[", 
    RowBox[{"a_", ",", "b_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", " ", 
      RowBox[{"Cos", "@", "t"}]}], ",", 
     RowBox[{"b", " ", 
      RowBox[{"Sin", "@", "t"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "eccentricity"}], ";", 
  RowBox[{
   RowBox[{"eccentricity", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", "/", "a"}], ")"}], "^", "2"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"focalDistance", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"a", "^", "2"}], "-", 
     RowBox[{"b", "^", "2"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7716909477389097`*^9, 3.771690950015272*^9}, {
  3.7755026303616104`*^9, 3.775502655034036*^9}, {3.775502827771496*^9, 
  3.7755028315409894`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"ellRayCoeffs", "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", "eqn", ",", "sols"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"r", "=", 
       RowBox[{"ray", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"nx", ",", "ny"}], "}"}], ",", "s"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eqn", "=", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{
         RowBox[{"ellEqn", "[", 
          RowBox[{"a", ",", 
           RowBox[{"r", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"r", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"Assumptions", "\[Rule]", 
          RowBox[{
           RowBox[{"a", ">", "0"}], "&&", 
           RowBox[{
            RowBox[{"Abs", "[", "x", "]"}], "<=", "a"}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"nx", "^", "2"}], "+", 
              RowBox[{"ny", "^", "2"}]}], "\[Equal]", "1"}], ")"}]}]}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "^", "2"}], " ", 
         RowBox[{"CoefficientList", "[", 
          RowBox[{"eqn", ",", "s"}], "]"}]}], ",", 
        RowBox[{"a", ">", "0"}]}], "]"}]}]}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.765637805842102*^9, 3.7656378633575897`*^9}, {
  3.7656379254694333`*^9, 3.765637929686124*^9}, {3.765637966269289*^9, 
  3.7656379720617642`*^9}, {3.7656380094540954`*^9, 3.7656381704387407`*^9}, {
  3.765638471204547*^9, 3.7656385133662405`*^9}, {3.7716899356377773`*^9, 
  3.7716899372445555`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["y", "2"]}], ")"}]}]}], ",", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nx", " ", "x"}], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", "ny", " ", "y"}]}], ")"}]}], ",", 
    RowBox[{
     SuperscriptBox["nx", "2"], "+", 
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["ny", "2"]}]}]}], "}"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.771689943853161*^9, 3.7716899448281813`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "ellInterRay"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellInterRay", "[", 
    RowBox[{"a_", ",", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"nx_", ",", "ny_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c2", ",", "c1", ",", "c0", ",", "ss"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"c2", "=", 
       RowBox[{
        SuperscriptBox["nx", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["ny", "2"]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c1", "=", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nx", " ", "x"}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", "ny", " ", "y"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"c0", "=", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["y", "2"]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ss", "=", 
       RowBox[{"quadRoots", "[", 
        RowBox[{"c2", ",", "c1", ",", "c0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ListQ", "[", "ss", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"ray", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"nx", ",", "ny"}], "}"}], ",", "#"}], "]"}], "&"}], "/@",
          "ss"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}]}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.765616122000228*^9, 3.765616156819413*^9}, {
  3.765616213568821*^9, 3.765616227617854*^9}, {3.7656162693292503`*^9, 
  3.765616466450385*^9}, {3.765616528520337*^9, 3.765616702593474*^9}, {
  3.7656167574178524`*^9, 3.7656168873219366`*^9}, {3.7656169212424374`*^9, 
  3.7656169673621545`*^9}, {3.765617004659359*^9, 3.765617366697528*^9}, {
  3.7656381766132083`*^9, 3.7656383147327538`*^9}, {3.765638356590396*^9, 
  3.7656384325349646`*^9}, {3.7656385177745852`*^9, 3.7656385768219695`*^9}, {
  3.7656524223963385`*^9, 3.7656524643486853`*^9}, {3.7656525462532167`*^9, 
  3.7656525849015355`*^9}, {3.765652713566042*^9, 3.76565271378144*^9}, {
  3.7657018112844925`*^9, 3.765701844859399*^9}, {3.7657020043236523`*^9, 
  3.7657020205650425`*^9}, {3.765964082351487*^9, 3.7659641177966986`*^9}}],

Cell["Used for Proofs", "Text",
 CellChangeTimes->{{3.7659641235538635`*^9, 3.765964127236492*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"quadRootsUnprot", "[", 
    RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"det", "=", 
        RowBox[{
         RowBox[{"b", "^", "2"}], "-", 
         RowBox[{"4", "a", " ", "c"}]}]}], ",", "sqrtDet"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sqrtDet", "=", 
       RowBox[{"Sqrt", "[", "det", "]"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "b"}], "-", "sqrtDet"}], ",", 
         RowBox[{
          RowBox[{"-", "b"}], "+", "sqrtDet"}]}], "}"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "a"}], ")"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Clear", "@", "ellInterRayUnprot"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ellInterRayUnprot", "[", 
      RowBox[{"a_", ",", 
       RowBox[{"{", 
        RowBox[{"x_", ",", "y_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"nx_", ",", "ny_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"c2", ",", "c1", ",", "c0", ",", "ss"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"c2", "=", 
         RowBox[{
          SuperscriptBox["nx", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["ny", "2"]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"c1", "=", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"nx", " ", "x"}], "+", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", "ny", " ", "y"}]}], ")"}]}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"c0", "=", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["y", "2"]}], ")"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ss", "=", 
         RowBox[{"quadRootsUnprot", "[", 
          RowBox[{"c2", ",", "c1", ",", "c0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"ray", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"nx", ",", "ny"}], "}"}], ",", "#"}], "]"}], "&"}], "/@",
          "ss"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.7681733070738*^9, {3.7687485663333664`*^9, 3.768748623133095*^9}, {
   3.7687486598440576`*^9, 3.7687486769872155`*^9}, {3.768749691643999*^9, 
   3.7687497065494633`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "ellInterRayUnprot"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellInterRayUnprot", "[", 
    RowBox[{"a_", ",", "p_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "y", ",", "nx", ",", "ny", ",", "a2", ",", "c2", ",", "c1", 
       ",", "c0", ",", "ss"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "=", "p"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nx", ",", "ny"}], "}"}], "=", "n"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"a2", "=", 
       RowBox[{"a", "*", "a"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c2", "=", 
       RowBox[{
        RowBox[{"nx", "^", "2"}], "+", 
        RowBox[{"a2", " ", 
         RowBox[{"ny", "^", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c1", "=", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nx", " ", "x"}], "+", 
          RowBox[{"a2", " ", "ny", " ", "y"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"c0", "=", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "+", 
        RowBox[{"a2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"y", "^", "2"}]}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ss", "=", 
       RowBox[{"quadRootsUnprot", "[", 
        RowBox[{"c2", ",", "c1", ",", "c0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"ray", "[", 
         RowBox[{"p", ",", "n", ",", "#"}], "]"}], "&"}], "/@", "ss"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.768748695882679*^9, 3.768748711748415*^9}, {
   3.7687487589468403`*^9, 3.7687488826825466`*^9}, {3.7687489850987062`*^9, 
   3.7687490037877264`*^9}, 3.7687496182512217`*^9, {3.7687497139237413`*^9, 
   3.768749716811019*^9}, 3.769420552222806*^9, 3.7716906402322598`*^9, {
   3.771690996103264*^9, 3.771691008478629*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "1.5"}], ",", 
      RowBox[{"alpha", "=", ".1"}], ",", "p", ",", "tc", ",", "t0", ",", 
      RowBox[{"n", "=", "10000"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1.5", " ", 
         RowBox[{"Cos", "[", "alpha", "]"}]}], ",", 
        RowBox[{"Sin", "[", "alpha", "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"t0", "=", 
      RowBox[{
       RowBox[{"Timing", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ellInterRayUnprot", "[", 
           RowBox[{"a", ",", "p", ",", 
            RowBox[{"ellGrad", "[", 
             RowBox[{"a", ",", 
              RowBox[{"Sequence", "@@", "p"}]}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tc", "=", 
      RowBox[{
       RowBox[{"Timing", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ellInterRayUnprotC", "[", 
           RowBox[{"a", ",", "p", ",", 
            RowBox[{"ellGrad", "[", 
             RowBox[{"a", ",", 
              RowBox[{"Sequence", "@@", "p"}]}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t0", ",", "tc"}], "}"}]}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7687486256752963`*^9, 3.768748653506012*^9}, {
  3.768749008475191*^9, 3.7687492257543387`*^9}, {3.768749310851083*^9, 
  3.76874933436331*^9}, {3.7687496750025153`*^9, 3.768749680163709*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getInterReflNonComp"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getInterReflNonComp", "[", 
     RowBox[{"a_", ",", "pfrom_", ",", "pto_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"norm", ",", "theRefl", ",", "pnext"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"norm", "=", 
        RowBox[{"ellGrad", "[", 
         RowBox[{"a", ",", 
          RowBox[{"pto", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"pto", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"theRefl", "=", 
        RowBox[{"refl", "[", 
         RowBox[{
          RowBox[{"pfrom", "-", "pto"}], ",", "norm"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pnext", "=", 
        RowBox[{
         RowBox[{"ellInterRayUnprot", "[", 
          RowBox[{"a", ",", "pto", ",", "theRefl"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "pnext"}]}], "]"}]}], ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.769626508999834*^9, 3.769626534577449*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getInterRefl"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getInterRefl", "[", 
     RowBox[{"a_", ",", "pfrom_", ",", "pto_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"norm", ",", "theRefl", ",", "pnext"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"norm", "=", 
        RowBox[{"ellGrad", "[", 
         RowBox[{"a", ",", 
          RowBox[{"pto", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"pto", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"theRefl", "=", 
        RowBox[{"refl", "[", 
         RowBox[{
          RowBox[{"pfrom", "-", "pto"}], ",", "norm"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pnext", "=", 
        RowBox[{
         RowBox[{"ellInterRayUnprot", "[", 
          RowBox[{"a", ",", "pto", ",", "theRefl"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "pnext"}]}], "]"}]}], ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.7678099106480856`*^9, 3.767810027358735*^9}, {
  3.767810292190235*^9, 3.7678102935658493`*^9}, {3.768749446281971*^9, 
  3.7687494571299877`*^9}, {3.7687496840662475`*^9, 3.7687496863860583`*^9}, {
  3.7687497296592255`*^9, 3.7687497738099747`*^9}, {3.7716910383113656`*^9, 
  3.7716910484779654`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "bounceRay"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bounceRay", "[", 
   RowBox[{"a_", ",", "p1_", ",", "p2_", ",", "bounces_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"p1v", ",", "p2v", ",", "p3v"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p1v", "=", "p1"}], ";", 
     RowBox[{"p2v", "=", "p2"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2", ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"p3v", "=", 
            RowBox[{"getInterRefl", "[", 
             RowBox[{"a", ",", "p1v", ",", "p2v"}], "]"}]}], ";", 
           RowBox[{"p1v", "=", "p2v"}], ";", 
           RowBox[{"p2v", "=", "p3v"}], ";", "p3v"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "bounces"}], "}"}]}], "]"}]}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.768754422969144*^9, 3.7687546165212765`*^9}, {
  3.7687547854573317`*^9, 3.7687547884563355`*^9}, {3.7687548305598927`*^9, 
  3.768754846503646*^9}, {3.7687548851128616`*^9, 3.7687549210888405`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "triSides"}], ";", 
  RowBox[{
   RowBox[{"triSides", "[", "vs_", "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#1", "-", "#2"}], ")"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"vs", ",", 
       RowBox[{"RotateLeft", "@", "vs"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "triLengths"}], ";", 
  RowBox[{
   RowBox[{"triLengths", "[", "vs_", "]"}], ":=", 
   RowBox[{"magn", "/@", 
    RowBox[{"triSides", "[", "vs", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "triLengthsRL"}], ";", 
  RowBox[{
   RowBox[{"triLengthsRL", "[", "vs_", "]"}], ":=", 
   RowBox[{"RotateLeft", "@", 
    RowBox[{"triLengths", "@", "vs"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"triPer", "[", "tri_", "]"}], ":=", 
    RowBox[{"Total", "[", 
     RowBox[{"triLengths", "@", "tri"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"a", ",", "b", ",", 
    RowBox[{"c", " ", "are", " ", "side", " ", "lengths"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "@", "triAreaHeron"}], ";", 
   RowBox[{
    RowBox[{"triAreaHeron", "[", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "s", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"s", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "+", "b", "+", "c"}], ")"}], "/", "2"}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{"semi", " ", "perimeter"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"s", "*", 
         RowBox[{"(", 
          RowBox[{"s", "-", "a"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"s", "-", "b"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"s", "-", "c"}], ")"}]}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"order", " ", "by", " ", "oposition", " ", "to", " ", "vertices"}],
    " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getMedians", "[", 
    RowBox[{"t1_", ",", "t2_", ",", "t3_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t2", "+", "t3"}], ",", 
      RowBox[{"t1", "+", "t3"}], ",", 
      RowBox[{"t1", "+", "t2"}]}], "}"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getMediansV", "[", "vs_", "]"}], ":=", 
   RowBox[{".5", 
    RowBox[{"(", 
     RowBox[{"vs", "+", 
      RowBox[{"RotateLeft", "@", "vs"}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7661337620883174`*^9, 3.7661338191733656`*^9}, {
  3.7661338921831665`*^9, 3.7661340674480762`*^9}, {3.7661345241044846`*^9, 
  3.7661345363283467`*^9}, {3.766134687305379*^9, 3.766134690503578*^9}, {
  3.766142401680124*^9, 3.766142450727894*^9}, {3.7661425245618796`*^9, 
  3.7661425732326365`*^9}, {3.766142639994296*^9, 3.7661426616725283`*^9}, {
  3.766142740881012*^9, 3.766142766936796*^9}, {3.7663986552041454`*^9, 
  3.7663986688209686`*^9}, {3.767117410266687*^9, 3.7671174108022556`*^9}, {
  3.7678252008876257`*^9, 3.767825238966894*^9}, {3.7885337310397797`*^9, 
  3.788533749294979*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"signedArea", "[", "poly_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "2"}], ")"}], 
    RowBox[{"Total", "@", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"#1", "[", 
            RowBox[{"[", "1", "]"}], "]"}], 
           RowBox[{"#2", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], 
           RowBox[{"#1", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"poly", ",", 
         RowBox[{"RotateLeft", "@", "poly"}]}], "}"}]}], "]"}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.771533154870943*^9, 3.771533227838011*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Circles", "Subsubsection",
 CellChangeTimes->{{3.773306216850232*^9, 3.7733062229728603`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "circleInter"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"circleInter", "[", 
    RowBox[{"c1_", ",", "r1_", ",", "c2_", ",", "r2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d", ",", "x", ",", "y", ",", "chat"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"d", "=", 
       RowBox[{"magn", "[", 
        RowBox[{"c2", "-", "c1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"chat", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"c2", "-", "c1"}], ")"}], "/", "d"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"d", "^", "2"}], "-", 
          RowBox[{"r2", "^", "2"}], "+", 
          RowBox[{"r1", "^", "2"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "d"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"r1", "^", "2"}], "-", 
         RowBox[{"x", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"c1", "+", 
         RowBox[{"x", " ", "chat"}], "+", 
         RowBox[{"y", " ", 
          RowBox[{"perp", "[", "chat", "]"}]}]}], ",", 
        RowBox[{"c1", "+", 
         RowBox[{"x", " ", "chat"}], "-", 
         RowBox[{"y", " ", 
          RowBox[{"perp", "[", "chat", "]"}]}]}]}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.773087771139037*^9, 3.7730878921448793`*^9}, {
  3.7730879295757513`*^9, 3.7730880377131453`*^9}, {3.7730881614645233`*^9, 
  3.7730882039757223`*^9}, {3.7730883440974665`*^9, 3.773088378584659*^9}, {
  3.7730884541453443`*^9, 3.773088472225259*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Centroids", "Subsubsection",
 CellChangeTimes->{{3.7684051810395603`*^9, 3.7684051864012375`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"polyPerimeterCentroid", "[", "vtx_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sides", ",", "meds", ",", "per", ",", "perCentroid"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sides", "=", 
       RowBox[{"triLengths", "@", "vtx"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"meds", "=", 
       RowBox[{"getMediansV", "@@", "vtx"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"per", "=", 
       RowBox[{"Total", "@", "sides"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"perCentroid", "=", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"meds", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "*", 
           RowBox[{"sides", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "@", "vtx"}]}], "}"}]}], "]"}], "/", "per"}]}], 
      ";", "\[IndentingNewLine]", "perCentroid"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7683842875359526`*^9, 3.768384330605794*^9}, {
  3.7683843693901863`*^9, 3.7683845219997015`*^9}, {3.7683845546308613`*^9, 
  3.7683845573665524`*^9}, {3.768384767137034*^9, 3.768384768431575*^9}, {
  3.796420236138819*^9, 3.796420237612914*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Centroids", "Subsubsection",
 CellChangeTimes->{{3.7684051810395603`*^9, 3.7684051864012375`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
zfvll18+//zzdu3aqRflfjw5OXnnzp0qfFqtWrVFixalpaWtXbv2lVdeUWmG
DBnij0/nW0Ecg2oymdq3b6/2Xr9+/SlTphw5ckRq9bXXXtOa2dSpUy9dulS3
bl35+5///OdXX3114cKF7du39+rVy9+34aHPbDbrAwVHjx51nl46gtYvxOnT
p93dozSSDh06aP3i008/lZ0mJSX9+9//1rKdP3++dsiefvrpxMRE6Rfffvtt
0PtFZmZmsWLFpAAvvfTS+vXrMzIy5CNoxXayTKQ0uVKlSmkpZ8yYEchiwxu2
LfbHH3/MLy02NMlpR7s2iI+Pl6qT+tQq89VXX3U0GF5el3e1lHLu8tOTLDk5
Ofqrl5kzZ/pjL16xXNw2tZsuaupI5Y5Tt1108GyBTQTVcCJxSHPHeZZvPmTZ
mbyLdnHLtI7VHBeo87RtF4mgAgCAv6Wnp9uOKFuwYEGwy+VfahqrwAjlp7+h
J0eqSZMmYY7Vr18/NJ9V/+9//6sVskSJEu5OlyGtVA3VK1eunPR9fYBO3nru
uedUzo899pgaTiM3a2oXV69e7du3r7ZruUkP/Zk6ghVBlZrp16+f2vXo0aP1
FWUVvW/WrJn6v1o4Xg6B/l05CvlirK8/SEVpcX6xdOlS5+n1/aJQoULuNk45
IfTv399uv5Cs9JOyqlLJYVJn+z/++EPfLyIjIwPfL6SRqJ8/evXqpcYty3f9
O++8o5Vq/PjxjkLxn332mf68d+jQocCWHR7K1y02NEkdTpw4UVXLb7/9b+Cj
9iCD+sJ19FUifbBChQpaSr/OUDp27FhtRwMHDvTTXjx0bs2QRnnGTnWRz54J
P9urpxsiqOcuJo9onHdeFSSlk5IZ9n7UvLwLmcSN6kgEFQAAKIsWLQq70Z13
3nlzP8Mltwzdu3cPCxS5/GZi//xi69at999/v5OjKfcmIRgSP3z4sFbCqlWr
ujVGURrn559/Lhvee++9mzZtsk2gH0UjihYtqiJ4coutH9Im6tatG4KVYyUo
EdScnJz169er/dqdjfOLL76wamlJSUnXc+/fP/jgA6u3QjOMHwBSjR07dtTq
Ye7cuc7T6/tFhQoV3DoPS81/++23TvqF1ZB1rV/IXqz6hQhw0FsKP2XKFNlv
gwYN9NM+6OPPLVq0cLS0kDbgWdx333039/XATcODFquObCi02JAl5xDpAlIh
corWXtRHUMWOHTvsbvvDDz/ok02YMMF/5fz444+1HXXt2jWEnlPI2Bt3Y/i0
cuuBcR/FL9uybduf/y2L/yhuYOvKVjHL1p//bJuTLoLaceCAxjdk+Pmy/+U2
amBrqwGlreNPODjx/5zY7cbwaeXWg+Lil/9ZsOTE2cN71rQfXCWCCgDALUxu
SOPi4qyunJs2bXpzR/z27dsXFkBSn9euXQv2h4ar9Hcids2bNy+Ebk9yqRtn
pUGDBm6t/LJlyxa1YUJCgt0Effr00X/8sWPHqtczMjK0Gd6U4cOHh/7IpaBE
UC9dulSrVi3Z6bvvvmv37GoVQX3llVdUGzMajc8884z+rSZNmtzKwQ19a8wz
IrFu3Tot8XPPPedWt71w4YKqeXf7RWZmplW/6NChQ4D7xfbt2++9917ZtX7i
EWmExYsX10r16quv2q0Qk8mkHzgn31+h36lxPZ+32NAkZ9qePXtKhXTs2FH/
u5VVLPr48eN2N582bZo+mccrPLriq6++0nbUqlWr0Dl8R2boRopW6BZ/xP70
pKlHEm4Yp1p32hGbNDc8Sq80GpJgm6HFanhq+bgUuyWbdkOittP22uRkXSoi
qAAA3PLkKktdH+rJxWGwy+Vfctu4devW1e5LSkpyPfGavxw5coS1jPMRi8Wi
n5fS1iOPPHLgwIFgF/MG+qduo6KiXN9QzgDqUd/o6Gi7kT2r56Zvu+22s2fP
qrfkvttqvK7dgU9Wuck96e7du4P4G03gI6jyqf/zn/+E5a6SfOXKFbtp9M9g
ioULF6rXpZD6GSnFuHHj8qw9OazffvttKPwQJsdaToY+/MVBH7uQWnWes1W/
cP08LBU4fPhw1S/sxiIkK6t+cebM/2bcy8rKsuoXec42ILmZTCZfHTLJbcSI
EbLfiIgIfdjH6tn82bNn2918z549+mRS4Y7qTWpm7969qanurNjiH1evXpV+
vX79+mAXJGgC3GKl3/mwxXppx44dcvT98bPmqVOnVIUkJiZqL8qO9AHn6tWr
2/1JS2pGm1c2LPdhf0e/fEmGcp5PSUnxpjK177Ww3F9RQ+VhEMO24X/PU1ov
brvT79yT8a3/DlPq1or6i3UEtVHcXkfLKlpO6PMq/5FtzDN1WT9dAgfzBuQm
3GY1hpYIKgAAt7K0tDT9why214rALejatWu1a9cOc6xFixah82Sr3Brr42/t
27d3fdvMzEw1LM3R1Mdy0/fPf/5Tf2umvSX36fqnfePi4pyPjZT7xNjY2Ecf
fVQS9+/fP1jjeAMfQZVqeeKJJ2SPAwYMsJtAqkK/ZHyBAgXUDKjqrZkzZ2pv
SbI8H+FftGhRjRo1JHG9evWCOBLp6tWrkydP/r//+z8piQ9v5/VN/fXXX3cS
c/CmX0glq0Pmer/Qwowe9IuEhAR1yHr37u19v0hPT2/YsKHKTf+6fgKEggUL
agE0K9OnT3fleuDEiRMqIleuXLl9+/Z5WWaPqdpTYy/Xrl0brGIEXb5usR47
evSofKf84x//qFu3rs9judr01FWrVtWfda1+YtCG8lqR7xfpGlqyzp07O/qN
Uv+16PGv7Tt37tT2VaVKlRB5TsGwcfjfgcd+y/L6reXnhH//ndx24OiNEdTy
w7c4+wZPXTXw77RdEy5avX0mj2jtDZ8iJa4eEVQAAJDLduyB+Omnn4JdLjj0
y60h2NV8fePGjXfddVeYY4MHDw6RB+XkFmzAgAFawbp37+76ttrj/45uPy9e
vKj/1CNGjNC/KzeJ27Ztk1vIlStX5hklk3s6ubPTsvJV7eW4SZvCTs5+7m7r
WQk3bNig9rh3r/07L6vnphs1aqR/V+rt2LFjci+fmJiYZ9RXv16VkOPrWZk9
IE1IPsi5c+eWLl0aGxsrN5paMXwYQdVPsuEoKKHI8fK4X2iP/zvK/9KlS076
hTSt7du3q36RZyhDEqjVf3zVL6SRqKy++eYb7cUrV64UKVJE24ujuSDkZKIP
tApHgVZ9YF8Ot5dldp0cEfmAUktyiv7ggw/U5BiKXyOoUjPuni4Cc3pRgthi
Aznc0Zzr5MmTX3zxRY8ePbTvaH9EUOWIqJXX3n77bX2UWD8Mvnjx4qdOnbK7
uVWg1e7019dze2u1atW87/4//vijlsljjz0WIr/wpu6Nn/DR8N4vNm9eu/zA
VXkPVt82yuUIaoW4vc4P+JFpf4c9bSKoN2T1bnJelXUxoSsRVAAA8Ce5OQq7
UeHChX3447VcDcqVeag8T3RTiIqKCrvZvfTSS8Gu5j/vnqzGYtmaPXt2KEyI
KmVo27atVqrXX3/drW0zMzOd3G1ZLZmRnJzscTlPnz6t5RMbG+uTG145gw11
k7Ycufzh7rb6RXlcJ23JmMtRa9EveCRGjhzpcYXIyTYiIkLl07JlSw9O5nLS
9uDQyGeMjIwsW7as9inkq0T724dfAQsXLtSybdGihZOAg5f9Qr65XO8X3333
nXsfQ0d2pE3U4Kt+IcfdqvBWE+3Kyc3Rhg8++KCW7LHHHrNbw1I/2vw/JUqU
+PXXX90toTQJz4JFq1atqlu3bqFChWxPyP6LoEpphwwZ4u7pwi2SvzZBigfy
bLH6p7x92GLff/99d1usnCvk0Hvw1Sk7kpNMmTJltE+hFcMfEdTrueHNtLQ0
/VlUWoL+Ef527do52u+kSZP0Fb5nzx67yfQn/5iYGI+vKH7//Xctn2LFiuXT
1Qb3jnE5gjpgTR4B2d8S/k7974QbF6YyJL/7d06uhHZv2DURVAAAbmErV660
ugeRK1JfjQ27fPlynTp15MrW0TT78AAR1ICRjjD0xgUjrDzyyCOh8OuA3HPp
5+IY6rt5jCXn0aNHaznffffd3nxeudN89913JZ+XX35Zbue9L57c2P7rX//y
Xzu05cO61fvwww/1e9m2bZvHWckhk7p99NFHe/XqdfXqVXc3lyqNiIiIjY11
d0SciqAWKVKkbNmy8oc0m5iYGO0T+bCb6EOXsiPnEVQ/9Qth1S+8+dnR5/3C
ltTSv//9b63ADzzwwG+/2X9sVdqevil27drVUUu4cuWKfLk3atRoz5497l4z
yKGJjo7u0KGDBw1j1apVUrCSJUvWrFlz0KBBSUlJWmn9F0FdsWKF92ePPMn1
kv9+kvNHix07dmxmZqa7m6sHHzxo6iqCKoWXc1SLFi1mzJihdXA/RVBtpaSk
6A+Zo8mEpXr1l2pSYEcVLn2ne/fuYbnd35sGrI08V/JTBNViSP3txN7l8cNf
a1xZN9IzjwhqnmFMfQS1dNyNqY9Mq6u91Tz+pAuF3DuhPBFUAAAglxFHjlhd
w1erVs1XF6IjR46UDMuUKePZwC3YRQQ1kOSup3Pnzo7KuXjxYi8fvfQJuelu
06aNViq3xto5Jzd3jRo10nJu3ry5lxmq9Ud8dYaR4m3evLlOnTqR7pD06uO4
u6FUsj9OZdKEoqOjtUq+++67vawfbypZNgzz9KFs9RS/esJa/imZaB/KhxFU
/ZLTeY5B9V+/kF2HbL+wlZqaeuedd2oF7tGjh6N9Wa1o9sUXXzjJVjLxbDCh
bFI3lwcfWT3FL2dmdei1p9fD/BlBvXbtWrt27dw6XbhLTkfbt2/3U/n91GI9
i/d6HEG9/leTU7tWrUh9osBEUGUX+h+Gihcv7mj0tTTRe+65R0vpfL4Rj/uR
3oULF/QFC90IakbqxZN7t21ZFv/RhLhBHZs3r/l3ZPJGziOo9WYcyWNHziKo
e+P+fiuPSVDt5EYEFQCAW1haWppVUOipp57yyRhUuSasXLmyZPjqq6+Gwji9
m8b2W0Owq/lvZ8+e1R6LtoothMIj/Ndzb2Zff/11fXjEVzmnp6frP7I3T5f7
T7abtEGMmZmZ7m7rj/LL6bFkyZJaJTdp0sQfe3G9MGE+mtbSTxHUWbNmadm+
8sorzudB1c/W6MN+YTAY7r333hDvF3pffvmlviMvX77cbjKj0disWTN9yp9/
/tluSi95E0G1EpgI6vXcIKS7p4tQOL0oIdVivYmg6mUHPIIq1ai/GHDyCP/3
33+v70dz5871d9mOHTum7a506dIhMg/q337bmzCmd+NqDqKl7kdQuyVarw1l
s0fHEVRDsm6Bq+F5zoJqnRsRVAAAbmFyxxQeHq6/0itWrJhPIqjaSKHFixd7
nxsQLDk5OZ9++mnYjYYOHRoiy0hdzy2h/gnNDh06+Cpn/Xi/MO8mQQ0d2nyA
IXKPqa0zpVit8BJgoR9B1c94MHDgQOcRVD/1iy1btuSjfiFnqtatW2ulffrp
px09UCyvFy1aVJ/ST79+ylHLdxHUfC2kWmz+jaDu3r1bX41yYWA3mZx5rMZy
ezPDrYt27dql77kh8u32J8vFbVM76h/Pt69a497vxsf1C3wENW6bKw2HCCoA
AMgl15w1atQIu9H58+e9z1bdspUpU8aDabL8Ta5vU1JS1gTKjz/+GOxPDK8Y
jUb9s3tdu3YNtWHVc+bM0YrXokULn+Qp3UTNz6bcfvvtgZlozt9CLYI6ZswY
/el3/fr1Hmfl/YreoR9B1ffEESNGOB+5p+8XL774ok/m3JBMxo0bp+8XXn46
f88EYjVBYqdOnRxV2tatW/UpBw0a5ChPL8tMBDWQQq3F5tMIquzOal7006dP
202ZlZXVvHlzLdnjjz/uw+VZHVG1qjRs2DAAe3SJ5eeEnnYf06/c+MXmHQfF
TfgkITnlxMXU/30Xu76SlFcRVJ7iBwAAXtBfWitbtmzxMs8lS5aorCZPnmz1
1vr163/44Qe5wlSLBRv/cuDAgQ0bNlzPHZElf5tudOHCBblR8rJUmjNnzoQF
ULdu3UIkVgMPyH3ThAkTtKPZtGnTULk30VGrqyhy9+TBHa5tUEX63UMPPaRl
GxkZ6WRb1aPtvms2m3/88Uc5FUyfPv3777/368OqrghiBNX2s2fnLqmjP104
OnYWi0WdM+0mkHcvXrw4d+5caavLly/3eIB06EdQ+/Xrp2U7adIk54n1yww1
atTIg7Znu4nUrX561Tz7haPPLvmcPXv2k08+mThxol/7hX6xbzF69GhHKa0G
zn399ddWCaTtSQuUBvb+++9/9dVX165d86xIPoyg6gNHRFCv+6LFOjmTqxYr
/c6bFptPI6hWy7HVrFnT0R6tJkGVrWxTSm579+6Vvi9fi1u3bvW+8ImJidoe
5XCHyDMyN6z9VLp05c5xCVv+jpfaSF0zIDAR1BPxL2pv1ZuW14yqfzoZ35wI
KgAAyHXu3LmwG3m5ZvGBAwfUk4C9e/e2vXl86623whxQtz9afMNK27ZtvSmV
nlzfvvjii46K4XNDhgwJkatZeGD+/PnaoaxSpYqjYSfBtX//fq2QNWrUcP3e
Nicn5/fff587d+64ceNSUlL0DXXHjh36ZuxkGkm5pw5zcA8rZ4CXXnpJn0/7
9u2Du/xWUCKoGRkZX331lZz9NmzYoA9QpKWl6SdBdRLc2Lx5s0pjG9+QozZi
xIgiRYpo+bRq1cqzW/KsrKywEI6gSsvRr+z22WefOU+v7xdPP/20W3XiqF+k
pqbqf1no2bOnoxxUv6hUqZJtpDGQ/WL58uX6HTmKXMln1A+cu/POO3/77Yax
WXJWWbx48WOPPaalefTRR5OSkjwokrRhaepEUH1L32L1Pc5PLbZNmzaetVh1
Bs53EVRptLVr19Y+vpPr5O3bt+sravz48VYJ5EhVr15dn2bChAledv/Zs2fr
D3FIPDBi2RtX4e8gZuMxe/P6xv054d+BiaAakt/9+72Bq1Lz/Cipqwb+vQER
VAAAbm1y39SlSxf9tVx4eLjHszalp6eXKlVKMnn22Wflb9sEctkp17py9/Tk
k0/qd1qmTBm5FZIEchNUr149/Vu33377E0880apVK68+p45ceGdmZhoCJQSH
LMJFq1atKlasmGqHDzzwwPfffx/sEtmnX4dXOqDrEfsDBw4ULlxY23bLli3a
fdyUKVP03XDixIl2V6KXfdWsWVMS9O3b1ypyK2/17t07LHfVrcuXL2tzAkit
evl5vRH4CKqcbdRZURkzZox2e7t06VJ9Jcvp0dGd72uvvSYJatWqZXVwpc6n
Tp0alhv2PHXqlJbhm2++6UFRQ3wMqnxY/Y9fjlZE0uj7RdGiRX3SLxYvXqw/
ZB999JHdmWrkOKp+YTtZq/zTbr9YuXKli8Vzy+TJk/UFPn78uN1kVpOiP/fc
c1bVtWnTpnvvvVe+iPfv36+tMVe7dm0PYjWMQfU5v7ZY/Zlc+pQ2DtyzWe7z
6RhU+b7Qd5CZM2c6SmnV46Tj6N+Vk6EaEiyVKXmqy90SJUpcvXrVm+KNHz9e
2+PgwYOD+zPl/xyZVu/vsGPvZVfySn/D9KR+jaDeGBHttyyvEOoNEVciqAAA
QHvoXhMTE+PBBZhcGVaqVEk2j4iI2L17t900ctErV+NyrSuJ5V5M7a5cuXL6
MKPcB6nXJcHWrVuvXbsW9Cd/cQvatWuXtEytU3z55ZfBLpFDciOmxegKFCjg
YtBekjVq1Ejf8du1a6eCXdLj9IP9whzPz6mtNmXb5adNm/b//t//mzJlilWG
Y8eO9e7jeiXAEVQ51w0YMEBfkyVLltQiGK+++qr+rdWrV9vN5OTJk+qxUNsH
q7dt2yavd+nSRZ0kBw0apLJq2rSpByEFP0VQfTUbtnx3PPvss1q2R47k8fil
tHB97NrFKb6lEmz7hepTUslWh8zR9DJav9i5c6fVW/p+Id+z2i+YfuoX+plj
w+yNYVZ++OEHfTKrIXZSJ1WrVq1YsaIKqx44cEAlK1KkiAf9yE8RVO+DcvlU
gFvsyy+/rFI6mRHCCX9EUCMjI/39U7Uan69xNPpaOkj79u0d9TipvenTp4f9
NcOVtP8yZcqoZHIm96Z4w4YN0/Y4Y8YMb7LymRTdbKM2MUxbJ+a3Lq3fwJ8R
1OtXlvX++93GeTzIf06fFRFUAABgZ4Z88fnnn7uVSXp6uhY+TUlJcSUAKxeW
cpuvdvfmm29qN1Pq1rtVq1aM3kSwnD59+plnntG6w0cffRQSgzockLs27a5W
/PLLL65sZRUzCcv96URFSE6ePKkfbyPOnTtnm8N///vfp59+Wt5t3ry51Yg1
uamvUqVKuXLlVL+WfzZo0EBlJbfqvvjQHgpwBFX2oo/Di/r166szm7wld2P6
t6yem1akYlXwuXHjxlanRDl1d+vWLeyvxbUlpbYyoJxFQyeC6qsxqPLxtTHh
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
JG2niYmJHnxAh66sGVjBtRlHAQAA4H9yxSgX3nfddZdc+Ol/rJfXO3bsqC4I
ixcv7uSJQjhnMBgSEhKaNWsWZk+rVq3279/v70GAc+bMsdqvkzVKAs9kMrVt
21Yr23vvvRcKT757admyZerjhIeHexBr8q1x48apwjRo0EDdKsod4qOPPtq1
a9cgxtJl1z6ZmTNE7Ny5U1XyP/7xj19++eV6bt+PiIh49tln3Z0LJTQjqElJ
SVpWo0aN8iwTLZgv/cLRKLKA0fcLVTmZmZnlypXr3r27T/qFHHdtWLLGdlCc
nB/uuOMOLYH0SidhHzk33nPPPVoQ6XpuTPXll1+Wf27dutWt4vkwgqqWJVK8
D8rBEdsWK2dyz1ps/oqgbt++3aofSVVYXThJSYYPH64lqFKlivPlnIYNG6ZS
yklS/fSg5mqeOnWqW59Cus+//vUvlZV+HIIP/JYc1zx3AGqF4cnuxXQBAADg
M2otlZ9++mnJkiXaxHRi9uzZ2ggWuRrXPwxVr149udI+evSoXK7fBNGtwJCK
SkxMbNq0qVaNBQsWrF69utzsdO7cuXz58trrycnJ/ivGhQsXnnzySau7j1BY
S0iR240+ffpoBevZs2cIzjCgWP7iSmLpQVFRUepDubVujj98+umnqiT9+vVT
ZWvVqlWpUqX27mVmNZ+R06Oq5IoVK5pzqeV+PFi4zZsIqmyr1ic6duzYunXr
tIXmVUlWr1598ODBS5cuOVpFywntZ47KlSunpaV5ULbrt1i/kDagfVilcePG
VtNWSBr9qDkpgPPxb/rVw3/99Vf5yl6xYoX8PWjQIHfH7XsTQZVN1EpJUgZp
ZlowSsTExKxduzYlJUXeknbIBYMPWbVY6eyqxWrjUV3ncQRVzhvShuXIytGX
k4wc64iICFUq+SMpKWnjxo3y+h9//OHBScaRjz/+2OoaxnZgv36tOinJtm3b
nOxd3tIqU1rv9dzfOyIjI5s1a+buL036RzzcfdzAuRPzW+euIdU4LuUmmesG
AAAgP9KPGbCi3dxFR0fbTRDGM3qukfvcGTNmaJVWpUqV9evXp6amqhlQVRB7
+vTpan68tm3b+mkooOzujTfesD2Ifo3Zus5q2dwXXnghlAclTpgwoXnz5nLr
6mIhExMT1ecKDw8/deqUv4vnxP79+9VNbsOGDb/66ivp/gUKFJBb3fw702wI
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
dHS0/wbTkNN/9erV6peIhQsX+mkrAOATgWkYAQAAEFy2/3IlsYq8+TtLcJ0c
kSFDhkT/16uvvlqvXr3w8HC78cZnnnmmf//+KuXgwYNDv2Nqenp6VFSUkyBq
s2bNQrZz5qeffqoyOXLkSM/Omq1bt+onstAcsgC3plmzZqmaOWbMGIvF4vP1
Z2ZmTpw4UW1i5cqVXHQAhD5/N4wAAAAIPKvVmp6enpiY+MMPP6xatWrq1Kmj
Ro1aunTpgQMHkpKS0tLSHL0yef78+bp164Z+2O2WIgfL1N3UdevXrw929nN2
7NixSpUqOdmLoUOHhuZLc3JoOnToIDmsUqWKnFnuLn758uUKFSrI4q+88grP
YggpNputf//+6gRcs2aNb+unXJ62bNmiVj5p0iRe4QeQK/i1YQQAAECAqSfT
Tp06hYeH33nnndmDUUWKFKlTp85HH32UkpJiikqlpqa++OKLkka+DVb+kZ3V
aq1bt646fMWKFatSpUqEY48//niFChXy58+v0q9duzbY2c+ZPJIsWbLEeSh4
6dKlwc6mfceOHStZsmRY1igKbi2YnJxcoEABWbBy5co///yzn7IHeEwuEPXr
11cn4HfffeerPtKy2h07dqjVyhWHrtcAchE/NYwAAAAIpLS0tDVr1rRp08Z5
JEp7/vnn161bp9+PTkpKUsvmy5fv3Llzwd0XmMgtuhyp1NTUjGzsfihSUlLk
mIZm183sJMPR0dFOqmvlypWPHz8e7GzaYbPZ1maRs8/1pRITE3W/4kWLFvkv
e4A39u/fX6JECfXbzdGjR33yrv3JkyeLFCki6yxduvSRI0e8XyEABJI/GkYA
AAAEhsViiYmJeeGFF0xBp3Llyr3xxhtff/31Dz/8cO7cucTExF27dn344Yfd
unWrUqWKSqPGw09NTX3qqafUJ02aNOEndQSe1MPnn3/eSRD1xRdf/Gu8MSen
W79+/dROtWnThleYEcrmzp2r6urTTz99+fJlL9eWkJCgu29NmDDBJzkEgADz
bcMIAACAALBarTdu3OjZs6cp1vTKK6+sWLHCyfw7Bw4c0EHU1atXP/jgg3rZ
MWPG8Hs6guLgwYNlypRxEkQdMWLEXyDeuG7dOrU7d911165du4KdHcAZPdiv
aNGihTfTumVkZIwdO1atqk6dOn+NH0QA3IKMDeMLL7wQsvNdAgAAQElNTT18
+HDjxo2NIabmzZtv2rTJlU6kxiCqkSwegMwD2dlsNj27vSMrV64Mdja9Is9Z
kZGRal8GDx4c7OwAOdOzPolly5Z5/BPbTz/9VKpUKbWeJUuW+DaTABBIvmoY
AQAA4G/p6emrV682BZdGjRrl1riXn3/+uWkNd999d2pqqv+yDThnsVhef/11
JxHUBx988PTp08HOpofkCWvq1KlqRx544AFe/VPkoDNySCiTetusWTNVb5s0
aeLZNUIO8WuvvaZW8vLLL/8FOpMDuJWZGsa0tLRg5wgAAAB2pKen9+/f3xRZ
2rlzp7vryczMfPjhh40riYyM5M1KBFdqamqjRo2cBFHbtGmTS2vpL7/8ct99
96m9mDRpUrCzExKsVmu7du06duyYS4/pLSImJkafgEuXLvWgt5UspdewdetW
P+QRAALK+4YRAAAAfpWent6kSRNTTOnUqVOerW3kyJHG9YwfP56uQQi63bt3
33PPPU6CqBMmTMh1FVWeraZMmaLyX6hQoTNnzgQ7RyEhLS1Nlcn69euDnRc4
JKdbvXr11JHyoLeVxWJ55ZVX1OINGjRw610JAAhNXjaMAAAA8Ct5Dh0wYIAp
mrR06VKPV7hz507jqrZv3+7D3AKeycjImDVrlpMIat68eb/++utgZ9M98myl
H7U6dOhAZxWFCGpuMWfOHH0CLl++3K1ljxw5ki9fPrXs+++/76ccAkCAedMw
AgAAwH8yMzM/+OADUyhp0KBB3qzz119/1au64447GAQVIcJisXTs2NFJEPXx
xx+/du1asLPphtjYWJ35FStWBDs7oYIIam4hp6SeByoyMtL1i4VcuUaPHq0W
LFCgwPnz5/2aTwAImPT0dM8aRgAAAPjVpk2bbr/9dmMQ6V//+peXr0PK4iVK
lFBre/rpp5nPBaHjl19++ec//+kkiNqtW7fcUmMln127dlXZzpMnD3NIaURQ
cwubzfb888/rs2/fvn0uLpiamlqzZk21VERERK4bfwMAHPG4YQQAAID/nD9/
3jTrU4ECBXbs2OHlai0Wi362jY6O5s1ihJQFCxY4iaCKmTNn5opKe+XKleLF
i6s8165dmyCSlpqaSgQ1t3jnnXf0qef6y/irV6/WS/Xt29evOQSAAPOsYQQA
AICfZGZmdu7c2RQ7euutt7xfs8ViqVu3rlrh5s2bvV8h4ENWq7VHjx5OIqjF
ixffvXt3sLOZs6+//lrnuVevXsHOTgghgpqLbNiwQVfjtm3buvIGhJzCo0aN
0kt5M2o3AIQgDxpGAAAA+M/BgwfvvPNOY+CoUqVKV65c8X7N6enpKoJasmRJ
ZhFFCLp27ZruJm1XgwYNpBoHO5vOSPYmTZqkM7xkyRIPVpKRkSFnaGJiovyb
W8YucEVwI6g2my0lJSU1ixwm+gY7Z7FY9IRQFStWdOW8k+J9+eWXdeX3cvwK
dRYkJCTIaiUzdo+XfJWURbIXOqEMybbUMckb1ezWIc2L1NK0LFIh5f/Z35iQ
T6RWp2QJqRobmqSs5DxS18HQKSsPGkYAAAD4idwxDho0yBQ1mjx5sk9WLneh
ERERssJWrVr9lcIy+CsxzsFkV79+/ULnYSo7ebxq3769zu2RI0fcWlx27fLl
y71793744YfvuOOOSpUqNW/e/OTJkznucnJyckxMzJQpU06fPu1F9v0riBFU
ec79+OOPo6KiSpcuXaRIkerVq48bNy7HZtBqtZ45c0ZKVarlrfakLPter149
XZMPHjyY4yIpKSlly5ZV6UuVKuXxVSYhIWHu3Lmvv/56/fr1CxYsWKZMmcaN
G8sniYmJOo2caAsWLPj3v/9do0aNO++886GHHurRo8f58+eDO9CH5GrHjh3S
ApQrV05VsxEjRhizbZfkWXIuOzh//nx+3Mx15PBduXJl9uzZ/fv3r1OnjlT+
KlWqSB1YvXp1UlKSTiYNyIcffvjaa6+VL1++aNGiNWvWHDVq1PXr14OY85Al
17t9+/Z17NgxPDxczm75t2vXrtIE5fh7hLoOyj2z/66DHjSMAAAA8BO56ytZ
sqQxXiQPYr56pJKb0ugsK1eu9MkKAX8YMWKE8yDqnDlzgp1Hh+RsrVSpks6q
xWJxfVk5Qw8dOlS5cuXsu7x7924noaHU1NQXXnhBpZSHzYsXL/piV3xPHm+D
EkGVg2J8u1xr2bKlZMnJgnv37n3ggQdU4iFDhtxq/QnlYqHL6oMPPsgxfXx8
vE4fERHhQTBTSvjo0aO1atWye+K3atVKHS85oEOHDs2e4OGHH96zZ48nu+oL
6enpK1asyJ6rRx55xHkQdf/+/VWqVFGJ5US+1apZrpaRkbFp0ybTwPWa1FI1
Xbv827Zt2+wJqlWr9vPPPwd7J0KLXAflLNb9PLXixYs7H34qJSWlRYsWKrFc
B926+LrF3YYRAAAA/mAaRE5p3749z1O4pcgDVNOmTe0+kColSpQIYpzEudOn
T+t8VqhQwfXusjabbe/evWrBAQMGHDhw4NixY+XKlVOfVK9e3ckvKfPmzTOW
j7sdXwMmKH1Q09PTn3vuubCsXpGLFi26fPnykiVLdFlJUTtqYGXBqKgonfKV
V1651ZridevW6d1v27ZtjhHR+fPn6/QdO3Z0d3NSvFu3br399tvDsl6PHTNm
zJYtW44fPx4dHR0eHq5W26NHj4SEBB0+HT58eFxcnJwpH330kYp1V6lSRRJ4
uMNeyMjI0HEVKYcrV65s27ZNl0b37t0d9ciVJkK+1SkjIiJutd7OuZccu/fe
e08duMjIyKlTp0obHh8f36dPH31Ahw0b9scff/Ts2VP9OXHixHPnzh08eHD0
6NGFCxeWT5o1a8Y7QZo0AmvXrlVlJSeUnNo3btzQhVmnTh0n18FPPvnEeB1M
SUnxUybdbRgBAADgD0lJSfo5UVuwYEGw8+VfycnJ6YHCc0pu8cMPP5QqVSrM
sZAdEHXlypU6k40aNXL92er3339Xp/+MGTPUrskDoBp2Q9m+fbvdBeWR0xiB
uffee0P2ReDAR1AzMzNHjx4tW7znnntUZzDx1Vdf6eKqWrWqo4r0008/Gavc
Bx98cKs9Ke/atUvvfq1atZy3n/Ltv//9b51+1KhR7m7u8uXLalmpz2fPnjV+
tX//fr3mt99+W/1Hdd6T+r98+XJjJ8BDhw65u2kvScWYOnWq2rruAa57XIdl
Re919TOR6ieVUKds3bp1KI9SAk0qnp40cO7cuaYej3LnZqqx0jJ/9913N7PO
FEmvx7u44447eJdf27x5c/78+aVYYmJiVIMj10FjO7xjxw67C5p+iZDS9t8d
glsNIwAAAPxk2bJlYX+WN2/ekA2G+ITc4qpxwwLjvffeu9V6keVec+bMcX40
o6OjQzDU8Omnn+ocygOdi0vJ03e3bt3CskZ51U/iUlfvvvtuvbYJEybYXVZO
Iv0KsGjRokXIPtAFPoK6bdu2AgUKyBbXrVunPxwzZowurjvvvNPRi/xz5841
1rd9+/YFJs+h49ixY3r3K1Wq5DwiIbWuXbt2Ov2iRYvc2pbUjZYtW8qCPXv2
zF6BZdOm0793797qqx9++MH01dq1a93atPeOHDlSrFgx2fTChQv1h5s2bTLm
ateuXXaXNQ59IKZMmRKoXMMrly9fljs0OWQDBw7Mfl9hfBlBkWZHfbV161bT
V0GZWS8EyWnesGHDsD9f3KU1MJaVk+ugsQeCXAf9d3vgVsMIAAAAf7DZbGPH
jjXdV0dGRoZgjMiHDhw4EBZAfr2phm/JGdG7d2/nB9QYFgsF8hz9/vvv6+y9
8847Li44a9assKxBj2/cuKE//PLLL407O2/ePLvLGrvnidGjR3u/I34S4Aiq
bO6pp54Ky3rR0viQaxwjQp5/7f5KJdXv1Vdf1ckKFCjgqA/hX9ivv/6qS6BY
sWLOf86zWCz169fX6bds2eL6hjIyMlQfzpYtW9odvfDChQvGSv7www+rAyqH
6eOPPzZ+VbRoUeP0PQEgme/atatsul27dsZovGmk1uPHj9td/IMPPjAmcxRo
RUiR6telSxdVY+3+YnXu3DnjYa1WrZqqG3IHMnDgQFON9d/75rmLOhfCw8ON
10HjK/OuXwcnTpzov3y61TACAADAH/RTmFF0dHSw8+VfVqv122+/Xee+2NhY
1xOv/y+50b3V3sPN1eSR0/gae3b16tULqbiWPB0bp8GaNGmSK0vJua9ieh07
djRG+Hv16mXc2R9++MHu4jNmzDAmcxKclA1t3LgxiD8iBDiCKltRm4uJidEf
WiyWChUq6OKSCmY3ZCcfGnv2SjIn41hKw3Lq1Kmgd/2VnHz99debNm3y1QqN
PT9vv/1253EeKQRjibk1UvH169dLly7tpGLs3r3bWMkHDhyoPpcryIQJE4xf
tW7dOscuYXKkDh48+Mcff7ieQ+eZv+eee2TTy5cv1x/Khebxxx/XuapVq5bd
XMkh69Chg05WrFgxR5mXPZUS3rt3b9B/BFRvr4tb+WK6atUqdcjUi/nZff/9
93ZrrDQspimlWrVqleOcR1JjDxw4EJQBfk0uXrwo91T+eJdHCkFd7uW+11i1
TDfGjq6Dpl8i9u/fbzeZrFldB71prt1qGAEAAOAPiYmJ2YNFxicy4Ba0Y8eO
ggULhjk2dOhQ/0256y55KBswYIDO24cffujKUpcuXVJTinz88cf6w8zMzPvv
v1+vylEET55kjREYceXKFbtbWbZsWe3atSXBv/71r2DF+gIZQZVaoWb2qVGj
hrGGxMbGGotr+vTpdhePi4szJuvbt6/deJEcpmHDhoVldVJ11DkqACRvW7du
VTVBzghfrVbKrVChQroQLl++7CSxHFxj4vj4eBe3InVY/QrgJExtmitt5cqV
+ivjW/z16tU7fPiw882dOHFC/WBRuXLlAwcOuJhJJ5lXQx9LNTP+mmMKoI0b
N87u4unp6ZINneyll16yGyCVYpFqpuaVk6oYrLFopJrJYVUVXor6lh0SRw5H
mzZtpBBeffVVR4VgqrFffvml/kqqqJ4iUIoxxzPl+PHjzZo1UzX24MGDvtwT
d8heS2upqqs/3lvXLfPevXuNG1XjYygvv/yy3SZCzpqOHTvqZCVLlnSUw6VL
l+rroMc/RrjVMAIAAMAf5OGrePHiYX+mZspAaLpwawh2Md80vhdv1yeffBIi
z/LyYNWpUyedsc8++8yVpfRbipcuXdIf6vmIFUfd0eU5Uc9IIu6//367D5jy
oXF66I0bN3q2gyY2N+k5QWSX3V3W3bxJlahbt65sa8iQIcbPjQeoSJEiZ86c
sbu4qWev1DG7ydLS0ozBkID1D5QCUVPjxcXFzZw5UwVYlGHDhvlqK7J+Y+06
duyYk8RXr141lti5c+dc3Irsi/r10FE0WxL07dtXr/mOO+4wvuQr3yYnJ0+d
OnXevHm///57jk2BFJcPy0q2LhVMVvXmm28aN/3OO+/orRQtWvTUqVN2Fze9
eiy1zm4yqWaPPvqoThbIX0CkTZPNxcfHz58/v0uXLmqWnzA/R1DdbRw84E3m
ZVlVCDt37rSbQNqBnj17GmuscWQJKU85WT788ENpVf744w/njZusSo3xogwf
PtzjbLtLNi2NjJxrcr0YP3589erVdTb8EUFVlzzTSwGmV/iXLVtmd1k5QYwt
Vdu2bR39EuGT66BbDSMAAAD8Ifu8A/ny5fPhbarc8slNZuj01vsLqFWrVthf
nSn6FBTyKOR8QNSSJUuGyOCBcn4ZY1lffPGFK0vJ83hqaqrpZO/fv79xHx29
E22KwLRv395uMuMsG02bNvVJO5CSkiLVI9odb775psrD4MGD3VpQOJrvyQkp
1aSkJGO46fjx42piKeXll1+2G0iRD9WsRtqJEyfsbuLHH3/UadasWeNupFfy
JofGg2CONOYRERElSpTIfjr4NoJqnOP++++/d5LYWBTi2rVrrm9IjpRUJ0fx
Z8mG8QWNZ5991r3dMJCi1i8FlypV6ujRox6vSpMjKNXMeP5KhmvWrKkz3KpV
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
u++qVvH8+fN6F7766itvsudWwwgAAAD/MYZflKFDh3qwHrmjU1OFygP+/v37
7aaRO9LMLJs3b9abU5EN482qJHjrrbfUt/I0J0+gt+xzE4Llk08+0VX0rrvu
yj4kReiIj4/XWf3nP//pbpTGNFyn/N/Rk6Pp7WZTBEZNrtGpUyd1tuonx6ZN
mwaxG2oQI6g7duwwFpejDEgOy5Ytq5M1bNjQ+LOLFGbnzp1vu+02Kd6bWc2s
7tnoWZ/GEI+gbty4Ua+2TZs2Obb8M2fO1Om7dOni4lbmzp1ruuodPHhQfSUX
L+PncjrY/TVQqnT9+vUlQcuWLbP3QKtRo8YjjzyijuOxY8fUqgoXLuyPd29N
b204unxLZtq1a6eTFSpUyPjqsX6Fedq0aWrvypQpo1J6NrCPPyKoTroF/rXJ
0TG+DSGKFi0q90XqW+M7CGFZAT39lZGcsKrG/uc//zG18D/++GNY1p2bqsmz
Z89Wq4qMjPQgUuenCGpycrKXa3NOsm28Djq5DTYOmxPm4DrYvn17Vci6i8KE
CRO8KRB3G0YAAAD4idyJmeahEJ9//rlbK5E7dnlgVDfh+/bty7EXnNysqtmm
whz81q+ev9TTHBBga9asMb6mF5Rp3F2XlpamQ3C33Xabu8+8pidHR31Q09PT
5cFNJytYsOD169f1t7LIa6+9Jp9v3bpVrbNhw4YqZf/+/W/NCOrly5eNjaqj
Pqh65BMdADG2hzt37gzL6nKmPjT2RPJsMpEQj6BOnDhRr9aVCXEOHTqk0z/1
1FOudMCW2ti+fXtjmcvJnpiYqL41haq6dOmiv7KbT1P8REyfPj1v3ryTJk1S
f8bExKiUDz/8sD8iqMnJyab6YzdZfHz8gw8+qJM9++yzxrNS6kP16tVLliyp
zv3z58/rlJ6dOPRB9SE514wzpqm6pCKKUj6mF8btzn8k54WqsWXKlDENcy1f
qT6T8q/6pFu3bmpVci0InQiq3bCwD8meGq+Dbdu2tduYmH6wKFq06O+//66/
lcOhroObNm26+eeBmmVfvCkQdxtGAAAA+I/cmjZv3jzsz+bPn+/K/Z7cZE6Y
MEEt4mL4VBk5cqTelikUIHehzZo1k1tT09usQADs3r27YsWKunLqEXpDljyx
vvLKKzrD8fHxbi0uJ+yUKVP04nZHzEhNTTX9zmLqKqlCLi1atFCn/9GjR3XK
4HbfDe5MUsZ5juyGtkxRVlN9k8Ls2bNnwYIFv/nmG/XJoEGDVLIaNWp41h8v
lCOosr/GER0XLlyY4yLGHrylS5d2pUzkumY8LqJz584qtnnw4EHjG/Gie/fu
2degX3OWY2r6dUD+rFWr1n333adyItuKjIxUiXv06OGr+RCN5EBERUU5r2bX
r1//xz/+YdyvESNGGBOo8TeGDx+u/tS9zStVquTZ+8JEUH1ICsHUSvTq1UtV
sL179xpf4ReLFi0yLS61TtfYjz76yFQJZT3Vq1e/8847VdnKn3qcEM9+wvZT
BNUYqPQH03Xwqaeeyt6YJCcnm0LZpqE5Dhw4EGYYSOHw4cM6pTeTtEpJutsw
5uS3pa9W+D/j4rxeIQAAwK1Fnh+fe+450136gAEDdu/e7eihTz4/e/asHkGx
adOm+/fvd/0J8ejRo3LTrpadMWOG8auffvpJPuzYsaM/njcBJ37++efHHntM
nwJr164N/Wd20yTCS5YscXcNv/zyS968efUaTF3Qr169ql7/NNIdlpRNmzb9
61//iomJUX+OGjVKJXvkkUeCO2JbECOoUnN0OYRl64Ioz93vvfeeqVQLFixo
fGdcjmyLFi30TCXyRK9j+6+//nr2LWa4QEXCk5OTc0zpvPn1RwRVNlq8eHG9
2mPHjuW4iGTD+POBK2PDqoER9CL9+vVTZZ6QkKCmZKpSpYoeKqFBgwbGoybL
Lliw4P7775ev+vTpkz0QreJR77zzjvrTOJKDByemi2TNxiokjZj+SmrOsmXL
wrLZuHGjcQ2tW7fWISPZR6l1KlmXLl2yx5EkQY6VJzY2Nizr5wAvqxkR1JtZ
lVwfETFy5EhV8Q4ePCh1NSzrpyv9rZzgxiZXCnD+/Pmqxo4fPz57ayxVVJpu
XWN1rLVQoUInT560mxnnB1Q1uREREZJJ5ylz/B3HGEENwDSOcuIYr4PLly83
ffvAAw+YzqPRo0cb00yaNEkKU19rfHUd9KBhzAkRVAAAAG/J3axpQC3lhRde
mDx58qpVq+Lj4yXNoUOH5MZS7gzbt2//0EMPhWUN7yZ35u6+nyiPQvql4Fq1
aunf8fWQX953XwHckpCQYPwdYc6cOcGdR951xlm2e/Xq5e7icjKOGDFCr6FU
qVILFy68dOnSli1bhg4dqrskGckWTWvQZSX/efjhh1WyPn36BDfoEcQI6s2s
EEft2rV1oXXo0GH//v0XL16cO3eu6d1bpUmTJqaAlZSeDjF9+eWXOuWePXtM
25Jil4a6Xk7kAT/sv/P3OREREREX5+yx2h8RVGM1rl69uisxBymfqVOn6qWW
Ll3qyoZ0YFOubsuWLTt37tzMmTMbN24clvUmhZStmgpKpWnVqpWcDpLmk08+
0dHaBg0a2B0f9WbWgdD/1yGgRx991B+v8CtyXTbG0OrWrbt58+YbN2588cUX
PXr0yF7NKlasaApeSZ71eSq7r1N+9tlnpm1JspEjR+ZYf1TY05VkzofzJYKq
6In5+vbtu3jx4sTERGmxVfg0KipK/jT+iCZty6JFi86fP2+ssc8884yjiKWu
sVK8r776qkrftWvX7CegmujTlUMv7UyOySTnzuPnxgiq7I5PStIJKQfjqxbq
OijNtVwH5XNV2ib67QC9Bl2Y0pKrsa3Csq6D3vQH8KBhzAkRVAAAAB+QW76N
GzfWqFEj+42iI02bNv3uu+88CzQZe87oiTzksVTuVJ999lkmG0UgSeU3jo4o
T0zZO1+FrOTkZP0uc+3atT2IM8ij8ezZs+WZ0e5pHhkZqebpVpzPiSMP+I4e
MAMvuBFUcfbsWeMLmEbFixfX8QplxIgRjh605ZjqQ9C2bdvsTa40mJMmTXIx
vhEREeE8jSTQbbJd/oigTp48Wa+zb9++LsYcvv32W71Uv379XFlESu+dd97J
fkTCw8P37t2r+liuWLHi9ttvt3vgXn/9dVfCoVJEtWrVUovoYVH9JCkpyVE1
C8sabNz4Z48ePZxcsmXvVLIHHngg+/Q9UjjvvvuuD6uZmiLNESKoiqmvtRYV
FSXHSM6U9PT00aNH2z360lxPnDjRlYE7Tp48WaBAAbXUqlWrsidISEhw5ZiG
uRY816O+OGKMoP7yyy8el57r5LyWS3+ePHnslmSDBg2Mf8rZ7aRUfXgd9Kxh
dIoIKgAAgM/IPeG8efOefvppu/eQSqFChbp06bJ161YvX03S80nJk6+6LVy4
cKH8OXPmTN/tEJADeTAfMGCArt5t27bNXQH8zMzMli1bqszL059nLzzKSk6c
OCHPjzVr1lSh1HLlyj333HPLli27du2a7lYaltWdyVH5yFmswzXNmjULeife
oEdQb2ZFP5YvXx4ZGfnPf/6zQIEC0ng++OCD3bt3P3bsmJrDRYuNjXW0koSE
BDkcKtlXX31lN43qSejc0KFDZQ1SLDmmzHGndLZ9EkGVmvPiiy/qdbr+DkJa
WpqeON7RPGjZqYMiVzFVsZs0aTJ37twLFy7o6IQU5urVq0eOHNm0adPChQuX
LVu2cePGffr0Wbt2rYu1etOmTSpXpUuXDsCY3nLhlrx16NBBalehLHJ57dq1
66FDh6TCGKvZF1984WglclHWIz2axkrVpIhyrDzr1q0LyxoD2ctqRgRVk+Mr
TbGusZ06dZLjaOwILcdu0aJFcoI/++yzcvQrVKggVVfurKQCuFhu48aNU0Vd
sWJFRy18jgdU8qnORMmP85Q5nkfGCOrx48ddLytvSK727t07aNCgRx99tESJ
Enfcccf9998vrbc0znIdNJ5HTn5m9eF10OOG0SkiqAAAAD4md4Y//vijPGPO
mTNn8uTJw4cPHz169PTp0xcsWLBmzRp5aPXJs4y+Q86fP7/csct9ZlRUVKlS
pa5cueL9yhEKpKpMmTJFnjWCO6OQE/KEYuy9U6dOHf+9b+s/xkE1V65c6fF6
pDTkTEzLkpiYqPrYqFENtdmzZztaXBbRc/F8/PHHHmfDV0IhgqpI4yaFqQpW
jRAo5WzqN3jhwgVHi3/yyScqTe3atb2pnyE7k5SssHTp0mqFjRo1cv0nDCnJ
jh07qgULFChw8eJF1zeqBmO0ZLF7RVNHLSUlRco8OTnZ9auepOzdu7fKlZ73
JwBku/r8lcqv9uvtt982VrPTp087Wvzrr79WafLkyePunHRGzCTlD9I46xrr
KP6samxSUpKqAK73V5QFH3/8cVXU/fv397ioM/wzk9Thw4e9XJtbjOdRQkKC
anI3b95sPI8WL17saHFZRF8Hsw+F4RaPG0ZXxI0jggoAAOB76r7dlT4D7jp4
8KC+HV2yZMl3332nnjeZQ+qvIcMwTbw8lIXmYZ09e7auhPLU42h4wxAnj8y6
R/drr73m4lKqy5B6QnT0wCtnfadOnXQR1ahRw0kRffHFFypZ0aJFVb87Oegb
Nmw4d+6cBzvlvWBFUOU5NzWLkwfe3bt3G5/Hpd1zcgiaN2+uw5XqPNq4ceO6
devcbZNDNoI6Z84cvUInIXq7tm7dqpedNWuW95nx3u+//67jHvqFaDkR9uzZ
48NmUBpYOXPl3HdyQCWBnoBMNQ5OOs4NHjxYJYuKilK1Uf6Vc8fduA0R1FxH
zyEltm/frj/87bff3KqxfoqgHjhwwMu1OSFZ1ZFSRzsr+2UcvLp69epOfsnS
18EyZcqo001WK6eDBz9+edMw5uTG+v7/G0Ct8h8iqAAAALmD3LjKk5q6OXzm
mWfUqICmaYLhPd3JKsAxTOPcZK+88krQ3+nOTp50/v73v+tMJiYmBjtHHpKD
O2HCBLUXpUqV+v3333NcRKqEeqdbNG7cWJ7v7FaPY8eO6cHxxPvvv+8k0Ne9
e3eVrHXr1mpt8uQrf3bu3DkoRz/wEVQpnKNHj6rBACtWrNijRw+7T81SOMaB
I/7xj384mWFZlaGybds29eHcuXPDDCNIuyg0I6hSGqrEROXKlRMSEtxaXHZH
z0vYtGnTUIiz6d9lKlSooMKPUv/VsKjeF77y008/qZnvihYtKqebo56ln332
WZjBjh07HK1QKmrNmjVVskWLFhl3ZMGCBW7ljQhq7mI1DLNcv359FfSTivro
o48+//zzbvWg9lMEdffu3V6uzRHZTT0etVwHY2Ji7CaLj4+/4447jNdBR3dT
cr7r62Dv3r1Vsri4OHUddKtYvGwYc5AZN7bq/0ZQB8Te8OVqAQAA4E/G+aTC
suYRDsE4W26kulXs2bNn/vz5/fv3f/LJJ7t27TphwoTly5f76hHeuUuXLhmn
r5WH/VCbm2nbtm36VbuwQM1V4T+//fbb/fffr/blk08+cZ5Yqodx3uGwrOmi
svc0k2R9+vTRaapXr+6kA+r169eLFy9uyoB6CnY+47b/SFVv166dVH6/dmEy
SkpKMk048v3332dPtnfv3kKFCuk0I0eOdNLuDR8+XCWrVauWSib7JU/WzvsD
2xWaEdSYmBi9tsGDB3vwQ48eaOL222/35vVzn5CG7tlnn1X56dmzp9odOeJh
TruAuiU5OdlUzVatWpU9OCMHWkcg1dad9CZdvXq1SnbvvfeqTEpla9y4sVSz
7FNKOUcENXdRg5cq06ZNUx+qjpTTp093a1V+iqD66Qoiue3Xr5/xPBoxYkT2
c0TqoevXwWvXrunroP6Fy7ProPcNoxM3YgdU+d8A6mtLL/lwrQAAAPAvuYMN
Dw/Xd4mTJ08Odo7+CuT2fvbs2bpDkckzzzyzf/9+v2ZAbvVNDya1atUKqemZ
4uPjH3roIZ29bdu2heYgA66Tp7yRI0eq3YmMjHQeqElKSjJODhWW1XM1+yKr
Vq0ypnHS8eam4bX0u+66Sw1HKfVQzu7OnTsHcWwE9UJ9wGIvaigSoxkzZpjS
yJFSvQeVatWq3bjhsBeQFHjTpk1VSh2rlOoa5n5w42aoRlCbNWumVlW5cuVL
lzx5npc9atGihVpJdHS0l/nxkhzfwoULq8yoQYml+k2cOFH+3Llzp082ceLE
CVM1mzRpkunclI2+8847xjTOty5r0AdUnS/bt29X1czdqC8R1NxFhT1V0606
M8sJ9corr3gQPPdTBHXz5s1ers2uxMRE03WwefPm2X/MMl0HdZDZLn0dlEJQ
LyCkpKR4dh30vmF05LdNY5/P6oBa5a2tuW/YdwAAgFuYcR6fQoUKOZnkAq6Q
55dly5Y1bNhQ3+0XKFAgIiKib9++LVq0uPfee/Xn+nVgfzAOqqaUL18+MH1f
XXHlypWnn35a523hwoUh+2ye+V+uJD579qwefdHR24iKPMrpII8SHR1t2oo8
OxsTyPOs80DK0aNHVUp5JpVVWSyW3r17lytXzn8vYIagWbNmGQvtzjvvNI0B
a5q5TJ6sd+3a5WSFUjNfe+01lXjJkiU3s14IlaWaNGniQW9GjyOokm01B5bU
nI0bN37++ed6F6KiotatW/fdd9+dOXMmKSnJ3R9KtmzZolf13nvvuZsxbcWK
FWolJUuWDO51xDijvfopQRXXoEGDfNXOfPvtt6YGNnt7vmPHDv1twYIFFy1a
5PxHIjUuhBg+fPjNrCZCLhxSzTz45cvjCKqqZrJp+VfOC1mP/oFV/qOrmTRN
ToashLvkEKsaW61aNTnHpZaq0RvmzZvnbiF7E0GVZeXIpqSkXLp0SSqPHuIp
LGt8Y6kMP/zww9WrV3146GVbpuvgpEmTTDmXNs2YYMyYMc4b3vj4eJVSTh81
I5VcB8uWLeu8nc/OVw2jHZkn5r+YNYdUo7Fx7gXIAQAAEHx//PGHukvs2LFj
yAaycgW5V582bZq+665Tp87mzZvVFNK2LJJAzxXy0ksv+alTqDxfGEO4+hE+
ROa4l+y1bNlSZ2z8+PGhNryAJgdODlOLFi3efPNNV4Koxnfz7b6Vr5nml5Fn
PdN77pKgdu3aOsGQIUNyDLtJMapB2+TxefHixU2aNMmTJ8/atWtvqZNah6GU
0aNHG2uXFMXy5cv1t1WqVNmzZ0+O5bNw4UKVfujQodOnT5eH8Ro1aly4cMGD
7HkcQdW91HIkmXR9tdIodejQQS3YtGnTlJQUdzOmSW3XXbbkLAhieE0OqO4+
9+GHH6r/y276sL39/vvvjWX+6quvmlrXU6dO6W9Lly4dGxubYwOye/duFU2S
DMt1pEaW8+fPe5A9jyOokkk98GOO1YwIqq/ot9TlMr1u3Tr1k83EiRM9uDJ6
E0GVTbvYyPjqVEpNTS1atKhebd26dU0jS5uug//5z39ybDwlb6rjtDfXQR82
jHal7Z3SbujSE4RPAQAAciG55VaTfa9YsSLYecnF5L597Nix+lY/Kirq6tWr
xgRyT37kyJH27dvrNPJY7Y+cyFOG3aceNTl7cBlnOxJ9+/YNqbEFTPTIhJ9+
+qmLi6iRP9VS48ePd5RM9lr3bJRqc+3aNf2VFNGOHTuMY9hGR0e7GP3+4Ycf
evbsWaRIkbCsEK6c0bfasMbyAK4KrXnz5kuWLDG+tpmQkGAce1ZKeN++fa4E
M+XR+4svvpDylKWkbHv16hUX5+Hsyd5EUCOytGnTZtCgQcOyDB8+fNh/devW
rUmTJvXq1XPrpX492VzhwoW9H+rwwoULjzzyiFphwOYOs0uqvQpCSk4eeOCB
ESNG+LYH/rlz59RuhoeHf/jhh8YAi5za8+fP19VMtr5t2zZXzl+5QBirmZzI
Uj89i1J6E0GtW7eu1KKXXnpJVzOjPn36NG3aVOohEVTfkhNcTudSpUqp0N+s
WbM8+2HRmwiqVBtZsFGjRl26dMl+6IXcvahWyFdXbVmPHuxozJgxpuvgwoUL
jfHV2bNnu34d1JfXF1980e4Yxc75tmEEAADAX4ncxD788MNPPPHErRZs8SF5
bBkyZIi+1f/3v/+d/REjNTXV2O1QzJw50+cPofJoX758eVl53rx5TRHUQ4cO
+XZb7pKd1ZPyiJYtW4bOwALZ6dEyK1SokJSU5PqCKSkpdevWDcsaFsPJG/Q7
duzQj4edO3f+6KOPYmNjp06d2rx5c11EkZGRy5cvd+vElKooNe3HH3+UGngL
hjik8IcOHapKr0aNGtHR0VKq8iT+5ptv6je7CxQo8Prrrx8/ftz11coDuNRV
KVX1grPH2fNmHFSpBro3u2L6U3/i4grj4uJKlCihymT8+PHet/+y6b1796qO
lHIKBPfsTs+yceNGOV4+/5lG1qy7uT7wwAMDBw5cvHhxTEyMtG96eGepZoMG
DTpx4oRbp6Gcv6qaeVN63oyD6vNqBhfJEZe6evDgQfUiv2cr8SaC6uRYG/n2
RtE4IIlcB+fMmSMttjRHderU0Z+3bdv2m2++cfc6+Ntvv/3666/yH3frqs8b
RgAAAORe1izGT9T4de+//36wspTbyf351q1b8+TJo265K1SocP369ezJss9x
M2LECN8+h8ra+vfvr1auZ6PWtmzZ4sNteWDq1Kk6Mw0bNgyRUQUc0e+D9+nT
x92n0aSkJDUg6pNPPmnsV2Mku79o0aLHH388zJ7IyMhly5aFeBGFJhVELVmy
pN2C7dat24EDB4I1cISvZpLynlTp+vXrqzJp3bq1r2KMsmu653bXrl3/wsEH
qWZDhgxxUs3i4uKC1cHeVzNJIdfx4UxSgZGamvrZZ59Vr17d7nnUrFkzaU8C
2WD6qWEEAABAriMPs9OnT5db6+HDh+uojtxvt2/f/r777rty5Upws5d7ySOA
nq1bvPHGG3aTHTt2zPR0sG7dOt9GULdv337bbbeFZQ3B+s0335g2t2zZMh9u
y116MElRs2ZNnw8s5lv79+/X79Fv2rTJ3cXlKez48eNq8TZt2jiJ1yUnJy9a
tKh3797Nmzd/7rnn3nzzzfnz5//444+hEGTLvaT8f/755+joaGncGjRo0KFD
h/Hjx3/11Vdnz54N7qC7CxYsiIqKCoXAuP6ppUWLFu7O9+2cxWL56KOP1MpH
jx79F+6sKNXsl19+kWrWqVOnZ599tmXLlu++++6KFSvkw+BWs71794aHh5uG
VsatQC4c0sIMGzYsd/14IU3QtGnTunXr1qxZM+N1MPABTP81jAAAAMhdjBE8
PUhdbGys/Dly5Mjc0mMh1MhzirFrpdi/f7/dlGlpaU888YRO9s9//tOtd8Nd
yYmePHfZsmUnT540RVBnzJjhw8255euvvy5UqJDKRsWKFUP8wSQuLk6HT+vU
qWMcS9N1cjj0hN3R0dHOzy/1aqR6f9bTXMMOKU9VsCESx1NvxQY7FzfVTN+i
U6dO/ojVWyyWMWPGqE0sXLjQ5+sPNbqahcLBVXjR/paVew990M8jfzeMAAAA
yEUmT56sg2lqjpu0tLQGDRpUr179xo0bwc5dbnXhwoX77rtPF2zt2rWd3Pyf
O3fuww8/fOGFFzp27Lhhwwbf5kRPX9KrVy/JQ2JioimC+u677wblwSouLq5C
hQoqD0WLFpVCCHweXGfsfao60Xm8qoyMjH379qn3fBcvXuzDTAIes1gsqm53
6NDBf71h1cu5spXy5cu7NeQsAAReYBpGAAAA5BZr1qxR94eFCxeW/6enp/fs
2bNEiRLbtm0LnZ4zuYvNZtPvqyp9+vRxvojcmWdkZPj8DbuUlJRHH31UMvDw
ww9fvHjxZtbjQLFixYx569evX+AP9Llz52rXrq0y8Le//e27774L2comB2XW
rFlly5bVJXbbbbf98MMPXq523759a9eu5YkMIUJarfXr169bt87fb8jKCSVb
kTMod71QDOAWpBpGwdinAAAAuJnVI65hw4ZhYWEPPvhg7dq11Tzgq1at4vHW
Y+np6a1btzZGKaU8g5KTkSNHqgzMnDlTfSKHu1q1asa8tW3bNsDHWsonMjJS
ZyAmJiZkK9tPP/3Url07U6/dZs2ahWy8FwAAAAAAAP5gtVrnzZvXtm3b5s2b
v/fee/Hx8QSIvJGcnKwC0Zqxq6Ea3NJisfh7GMbDhw+r7qYRERG6+4RstEmT
Jsa8PfPMM4Gc30Qy0KFDB731uXPnBnd2Fbuk/p8+fTo6OtrunNqzZ88OdgYB
AAAAAAAQBGqigVw610BIWbVqlTHgli9fPhXAlH937do1Z86c7t27R0REtG7d
euDAgRs2bEhLS/N5scvRfPXVV1UGPv/8c+PnXbt2NWavRo0aAZscQbYuu6w3
PWnSpJB6M06yJ0Wxf/9+R7FT8Y9//OPKlSvBzikAAAAAAACQW1mt1kGDBhlj
bsWLF8/IyEhNTW3RooXdoFzlypXnzJnj266Yq1evViuPjIw0RSmHDx9u3HqZ
MmUCNhrnuHHj9HaHDRsW9Glt5WBJ4Zw7d2779u1Tpkxp3bq1ntzKkVdffZVf
GQAAAAAAAACPWSyWjh07GmNu5cqVS0pKioqKkv9XqlRp1KhRK1eunDZtWocO
HfLkyaOTTZgwwVcdMjMyMho0aBCWNefRN998Y/p24sSJxuzly5cvNTXVJ9t1
zji7Vq9evRISEixOpaen5/ih/JmRRf6fkY3sl06WlpZ25cqV3bt3L1u2bPLk
yZKBJk2aPPjgg/nz53ceMjVZvXp1AMoKAAAAAAAA+KtKT09/7rnnjDG38PDw
5s2by3+efvrp8+fPGxOvXr363nvv1SkHDx7skyDq+++/r1Y4aNCg7B0mZ82a
ZYoK/vrrr95v1LlVq1b9/e9/11ssVapUPd+JcOCxxx6rWrVquXLlihUrdued
d7oVKbVLDmUIjtoKAAAAAAAA5CJpaWmPPvqoMewWEREh/5YvX/7kyZPZ0+/Y
scOYeNWqVV7G6M6fP3///ffLqqpWrXrp0qXsCRYtWmQKDO7du9ebLeZo586d
joYVzV2io6P9WlAAAAAAAADAX15qamrp0qWzB99WrVrlaBEVYlVq1659+fJl
j7dutVoHDBigVjVv3jy7aWJjY015i4mJ8XiLOTpx4sRDDz3kv6hmIHlzaAAA
AAAAAACIlJQU4+imytNPP+2kZ6lxgFDRt29fj9/l37Fjx+233y4reemllzIz
M+2m2bNnjyl7U6dO9WxzOfrjjz9k3/0a1QyYhg0bOipSAAAAAAAAAC5KSUnJ
HnwbNWqUk0UOHDhgTJwvX76zZ896sOmMjAw1X1XBggW3b9/uKJms3JS9QYMG
ebA5VwwdOtR/Ic0Ac9KLGAAAAAAAAICLUlNTswfffv75ZyeL/Prrr6b0U6ZM
8WDT8+fPV4tHR0dnn0BKS09PN22udevWTtJ74/jx4+v8LzY21t+bWLt2rZSb
P4oIAAAAAAAAuKVkj6AWLFgwLS3NySIWi8U0U3xERITVanVruykpKbVq1ZJl
a9asuWbNmvUG2f805VA2x/vpAAAAAAAAAAIgLS3NFJ8sU6ZMcnKyk0UsFotp
qvoqVao4GTc1O5vNNmrUKEevn+eoUqVKbm0OAAAAAAAAADyTnp5uCodWq1bN
eXzSYrFUqVLFuEixYsXcemc8Pj6+RIkSHkdQCxQo4PHcVQAAAAAAAADguoyM
jMjISGN8sk6dOs7f4k9OTpY0pqhmYmKii1vMzMzs1q2bWmrIkCHRLsg+wdPV
q1d9sfcAAAAAAAAA4IzVao2OjjYGJ8PDw52PMmqxWKpVq+ZxBPXLL79Ui/Tt
29fF0VPHjBlj2tyhQ4dc3BwAAAAAAAAAeGP58uXG4OS9996b41v8ZcuWNS5S
smRJF9/il2UjIiJkkUceeeT69esu5nDatGmmCOr69etdXBYAAAAAAAAAvHHh
wgVjcDJ//vzORxmVbwsWLGhcpHr16i5O7TR69Gi1yNKlS13P4aeffmqKoC5a
tMj1xQEAAAAAAADAYxaL5fHHH3d9lNEbN26Y4pn9+/d35X38AwcOFClSRNK3
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
OU7c5WrK9jkcMNPyimrtum+4XFSk3aI0BpKUoMZZG51Sk6jWxUkh7qa8clf1
opY4oQTVoxtol31baPikcPPw607fwb0rbnKIvyYvbqg8+K753xsCIocFzqpd
UX/UuVgnOioDtZNtSzXxpp2WpdIJdwc31tkvbcodL7ecsK5TlznY8IrE1NTq
Z97GVhdh8sCxpt3zZttWwty6ja86VcKx1tJbbcszq3rh468752mW4k1QlYLd
UW0+R6R27N26O3hswNWqleZHuKvyDrPlrNyvtgz0CarNJJXKz/yd2zu1VZ9q
e7Le8hCaXbfxdxZfNKQlQXVx+oycjNs77PY7CWqyhTvrV5i1OCwv/ourjpgu
SHroCB0sX+zwHBrhUz5pU7YjNfmWaYm4kMCq6P+L4xFMHC3Tpqei9LFJcjSq
I2StWUV7oguUbtmVzcG7XdS8ZYVrtVS/Ktd5McOLyis7YLV14u4LNq6/zuzv
pW3xbtWJCTUHcqLr8T3SKv1WbIm57BBozTEesWi9m/KtqnPfMBTEnaBm1vHm
jpyguqre3FX1tuVXLk1urirDsvIeabU8YSxfExO7T7h5XhCfL0wS1+4Xilzs
Nl/RC92NLhLU7hcCTglhdJnWh6inV/sjVWon1MVPG1sUoeZi16eU06534sG6
XCWo3cEiF2eQ7+5gd5PrBPVId8ad3Sm6fQuS0phxfTc83Vo2zzmdUzfa4eLv
2Ya4ksQ+qNrr+bk7g2fMP9LzXP3oE1D99rfNPuFJgupdlabiLi/y9jzy6ii1
+lrBTNa8slbrbzZDB8ry3N2SsvwlzYblSJfBJjEgFWgpXCwJatBNwZwbOaHW
R/Lc1viKetOUWNP5dL5DZD28mECxcCx4lKAmUhu9tdGXbEy+eDJuZoXQJHKT
uGoljjtB9ah53Fm3yuXFwf6kcKlvfzDHOftSf6qXP2d2UZADopYXG9wscOF2
u/t038Gmpbaxofgze9Nhh36KR1uWz3e3tFm1pYnkYO5XNPwz8Y69HTZna7hr
x93VLhe1tNaqPsMdz+10uYsnLtvdctK+Kq3EkaCGe15s8LmImu2OPd2qHzzQ
9IB5ja17aeQYkRLUk23FTt8dXDCrbrtS7PDbwfsc90V16WtmuzPlCWrf73bP
dluxkZ+cB9sszyAS1OQyPDNOyytYX1Je29i4J/JTU1ESuNPQWcv8O0Hhbntb
QYF2q82evnjt5qpdkaUFt24u0vd9yrJMLE83B+RHuawZi4s2VQUjBaspX1+Q
Z96qjOcRTLyTWuaioWCRblU5Za3mHxXnRpEmMJJWlB2tiam5+XabllvWanWh
PlKlyy4itbShvGaPVYX7AvtMK1zYfdlZo68J5xVsqokuR7ffPVt1QtqfEL7e
zi6o1wdQwnZZ7i+3HOKRrhqpQqb5Ii+yCaeSoULiigveaVcX2PiY2CjdPPKP
ys/BaIMzg483d4TnnQXrA4ulq4q60mDVpiJ9t6LcgPE5S2V8WMuaoVzxbMpv
mfvZDLQlPS849qAQ33EzhPyGp/Ws6UuKNm8NRnZ0bbl8cfb5ohdM8wTV2LwX
jgTlEA0U6C/2WYu3mhbf66u9he6nF4tLiJR29GCLHLobDLs+/qdFb9blnKDG
cl/z5UZ3l22CuqDg9ugnp+YVBCpqGq3O7rzy9hSc3Sm8fY9KTmPG5d3QsL3D
ax85Fwyn6iTrM8vbDXEliQmq0L90tlnv+qGjexeOPizkbDpsvhAPElTvqjQ1
d3mNt+eRZ0dpqHmDWJ9Z0+dFxi5Q7yONu6o2Gwp2ncVt1BhHCxuo1Kf+qpu1
pEqXMQqXways7NHyLAkMb5RaRcKXHTEkqNrSpPuayV3SLlUzfis3NS8yGkzQ
6vps3EDrurJpDAi8SVATqw1xnCLlvHLoydlePkf7sMu3/kf0Hhw5EzeL32I/
1qg1j8XhIDxvHnduXaxr8Cg7qGTkXhxbS9WVY/sXiknL7Oqlgd1b6luDTZGf
7ZW7V+j7B5p2IxQColnbJkpLe7nyeXVRDcsXu4ubzPKfiXNrl5c2bR8u1Y7t
LxtKZRsBCTeI0aXVrXjYZmnVxfvNQlTHHOxkW7Ecn05evHPd6IqCTS1bHjZW
wrbZT1p0xzXrSzl7bcPI3nl+b+laXQ9D02KHO7bX6epqyh0NpZUtw0U6UPlY
w8K58lrmB5viCVF72ppGD5vSWm1pvtL9wdF/Dza9fiz6HahJrjv5hvoVj+3d
0WR1wFil7kLkqB1+s2uXP94S3b9LmjpGPy0kqHULtRqeVT177W71WN2xfbdu
1RPvawk+GI1Ptb1g/OQFwoqiUpygGg74yB4frVjlyNn4sGGnCwmzHglqUrWW
CXfkrMVPtJq/WdDbWiV9fX+dWRTVLO2q4QXmbTB5f6e3Ve6wZH5/l6ZWj3wb
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
abY5Uk6uixy3H3dYknj42W+jlKDaN2zGVoIaPtXTeXjH9t3Ll1RPtF0XUi0c
6u1qb97TWFNRUrK+YMEc/3RxgkWRw0OH8/eVNs/UMd7XdEuL/xFM7HMl3/2j
80yNFFX4ul/+9lz4LtLsXUi71/fMNss60RKnvopLdol1xmL/TOf5qmMmP8U4
jsQuFjihUVgdJ9qW5l8wmJobSWNcPl84izFBzbDjzR3hecf54UjdBvMLi1h+
9xOK2XUCdNFEFzssGd/jE39rHJ1PjENdXtPE0sq7TxoJ0P0pYBOTena1d3C6
WZrTSm+qb1lReW1rp9OwYylbl80lQny6dFkJ0niDtgmq89ltFx14eXan6/at
51ljxv5uKH1lExenudUS2hBXxl2CmlCVpugu7+l5lISjVJoNxyB7et6dJVV7
bCJlhw727okV5XxddZ+gLnE156HVbpLe4IivxqOpchx1JWyIJwlqYrWhEceG
NY4vLf7WedAA+6LHmKAm1DyWXlaKh8vGrcEp0znHtZ/JN9SvqGxp6bQdQVQM
iCxmlhdZJ6iR0VZHf+XmHWSVlLsKCxSXFtePLr2MNUE903Ps0OvBppYtD+9e
t7bOd1O11Tje+gRVjOPivmFJXXPj+bHvn2nDIeKTBsJ1P1aATa4o/iq2AH8c
JKjhvpM9Ha+1Bp/fu/Hh3St+UOu7wWqPk6CmT7i7eWsgP3dqDFf8hB46hj9t
/UwtvrHi8o1Cbx7BxC9AxVZHtNGldd8SvhQWuzUKd1LTksfW2LOrUv0smbGz
WaD97vN81TGS5hSIlfv0zITzQ024t3nTAucTaVpewabG7gR70MWYoGbY8eaO
8LwTR+gk/ElsfSa1hSWWoEr9iPTPC8Jr42ZT1cRRYOsE1eGx0YrLBDWhq72z
3ubNC51Pqal5BZv3JNy3PeF12SWosVeC+wQ1sejAy7M7bbdvVaobM7oZfOJg
scnebIgr4yVB9apKU3KX9/Q8Ss5R+kbNKr+xQ65O1vQlgZpWYxqW8Qmqu7PJ
6oKvn+c9dhbf/7p8hcTrBDWx2ogSH7L04/EK3ym7G6rXrugxJqgJNY/3JXz/
jHsUi/C7LY/XTXaM1GbXLn+89ZjptSjGaNE6QXXIjixYJai6Kdrj+JHjOJeb
eez1ytL6nNkxrCgpCaq4kPh+4r2VO0R8MfZYHpWUBNV+pIKxnKBGBo3fuLZ2
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
D5A8+6Empe6Ccb9SJyaoJuejvsAZdry5oxvCznal0nQh2QX1hjVKkVT2Yrsp
kpXnR/EdzOyioOHxJ4YEVXpeKKraWqAt1v4xQyqw3funoeZi+SposvukeHlS
blHQ5nA43Sxd8E1Ot1S8xS91pHE45S2fr1O8LocgV/oayO5gDu0L6PdoUhNU
b8/uVN++09yYkbt/Zy3eavf00lkpzmqki+s93xB4WqUpvst7eh55d5RK3Uqz
7KdJCss9aeXUWbrB5djdknp3FQk3d+m+mbwE1b6W5OnJfCbfy8svEWQtqeq0
ua28USUNDmPI56U7S/biKqvMTX9x9ixBTbQ2ZOLRWLS1arRJZPf0FFvRxeaZ
RS7jZfNYOs6dRgvRXWfiC42lHmi1W2xzup56IY5b3eK2c6YZ2wgr3LJJGMhx
Vt2Wg6csF6SbvGnWzuBJw9I2isNCVhfvt1nau/IYkoaupG77oNrXZLhnbzAn
V0yuzDoAv92yXEyGH++wDBnDHRuXWKS+YXGUy20XzA826etHcEKegchV11Bz
zgmq3D/2gvkNwePWNaabGskkT874BFUabnTbbMu+QOGO7XXR+b9iT1ClzNzk
dBANdGwzrOuozefhOak/jHLLK3rB7GQJhzr3lC0wzjFqclP2+Jm6/QmxL0BW
3obGbt2pF+5t3brKMLFQwgmq7jUuu8WaftLu7RVvEy3DxPS+VVtbe40Xs97W
qhVSPZk9R8S2+zxdtbPQC0L7Oa5WljgOWNwD/dnGI1KuEgnoWs2bRd27Av4Y
ul5YExPUnECj2doy+HhzR5+gWqw03N24IU+8nJk/bOr6ZmT7V9W2m8wn0tVY
Mk9cmHmH1VgSVPENxKws7WsXh34ahgLnrqoxPjeF2mtWGK6CprvviH5Glc1m
744pe2+VFCOYdlhNyTio+idQi1Mq3B1c7xefr41xd8rW5dQVVtdVzLeq1nCg
hkPttcb7WtITVG/P7tTevtPcmBkKt8s9F822d8jkMmVInzzfEN22JGUU4szm
bZWm+i7v5Xnk2VEqj5aj1OndQZPlDA0PBnubMKeW8Zsp3Q1uWr5pfXZK10P9
7TiZCepwLT3SbGhv9LZW5IuThfks3o6Rd9+krHkljWbXt+49JXnitdf0Fqbb
fdl5JXsMG2u4OEd4lqAmWhsSoSdzVvbo4eb0nXIMRReaHNetbzS5kXndPJYf
UiKttSqzg9nQvnL4IsZaz/aVYgJZt+Xgu2YfGzj2fINPCPRWvCjnkF4mqPqO
oBfMql1R39lnrPxjrcXLxPzHosOq3En1gtzq5ds7eoxLO9FRebc0BY9JzGWz
mXLXWctIsL8ruLFushyfWsSM4Y5t0tRUvgcOHDMp9uulYiXMD7ackX7f9+JO
KSWbv7PSZBeHew7uXS5N4O4Qp9tzkaAODR2VRuy8YHbdRpPI1lgw0w6rmZ+g
6pP85fWGsDLc0/JkveHYiHEcVKlz77aJdzS1mYaobx+uvLd2on5dFrWxT7qE
u5uSGO5I/WEipuYVBCpqGvc0Kj/BrZtL1ub7xCZldlb0BpH8BFXfDUwxLa9g
fXlNpHhBs4k+RxaWcIKqeyNjmMUsNtL4/Crbb+Q9TrQiXZVK/NlyASK1tLlq
V2QnNg5PCztd/oDFV+ExPjN6uWonujeU42sQigNJObyOZMkhHjki9SJQTM3N
L9qgHrHKT035hqL8XGmSXqcXo2zp08XhEbSUn/ujjdAMPt7i28bRZc5YXLSp
KqjW6vqCvGlu12gsf9YM7aoSuegVLZmuu6xYPQ7ElKDKbyyqXE0Zb+iLmDV9
SdHmrcFIbe+q2rx28XT9Yu12X+fT+bpJoiOH6EhNNprNNW/V7SRFM0nJPVsi
5fUtKyoZvUkpx5v+JuVmfIZkrst5MAFd/17pYLa5ryU/QfX27E7x7TutjZmI
IzX5uvwte/ritSXltY2jp6ru4LHop+TxhgyN+wTV6ypN8V3e2/PIq6PU+NZD
9vS8OwMjN6bhWjVcK8yHjjF2thf2jskGGi84yUpQc3w+rfxinW8oyNMVad7m
VqtGf7iz5jb9LVW5g5cIG6g7Wuz6/xuPPa2ubBoDniSontSGRPfVRoS7EURd
kW7EkTJHRvRVfkqaQqaf8aJ5HGre4NdtUmQHie2rebrmpUNXcAdH9y6UAsZt
k2+oX/Fw0/am1mDkp2XLww1Lb5A+MPGO/fpQx9sEdWiob3/QJ5dq4tza5aUj
pdqx/eUVd1Tr8h+byZuMS7tgtrK0lyufH97G+qZ1a2un6FZ3x16TBNFuM+Wu
s2oGu7ZhS71ajQcqH9u94gfVYj420WbwgZFFyj1sI2Fy9cKAVGw5cDPtYXuq
6WF9VjZ58c51j+3dMVyZ2ysbli/RV6bzDES2XCWoQ+GOWn1gGDn2xIIt1kd8
FgXL/ARVP8fTyF6obInsyuf3bgzU58zW9nJd8QPaemNMUHWde3XHzPDprNvd
4nFIgppyodZNeeZPawZTF25u7hWn4zFOt5GEZ+rT7eX65oeJrHllZSuiC0s8
QdX1R5pk02tReqsrwv4FUs8TLUXoQFmeeYpiYupt5e3mHbRif2b0bNUO5LaQ
8/tB5sSB/rJtpgl1XRKzeMT4OGBDOW5b46qQUZ1yl5JRQtqfwcebO+Lzzs2b
ax5xvl75VtTbB7ahg+X6p0hLZj0utMqKKUHVvyUdw+zMnXUmPRL1svPKajdH
68p693W/ENCnZJbMekiObn1qElSzAQpsKPvL3dNb0tblajjWI/Wrci2XKyy/
ZrMwdEkKEtQhb8/ulN6+09mYGeFqt45utT9g8c6ytxsyRILqeZWm9i7v9Xnk
zVFqFu3a8a2qs0yK3F9zpt5m8n1NshLUm6vaXexo5/0b7qw3eUnEQrY/YNpH
WqsrV60X5d5Rpo0/5k2C6lVtiOSezB7PYv+GeevYL7wxkYTmcajVRRt11NT8
ivYEu9z27de/VG7zM3HZ7hZjrzavE9RIqQ42LZ3ttlSzN71u0q1UXNrvds+e
5XZpk1da9Nyz38wzhzcuc7uKeY+/3rM/GA2yHrBI58JdO+7WB7PmP7Nqi/ea
9h9WnGrZZNLh0Opn6ZPWIwa44y5BjWxez4sN+nDb8ses3+aIsZCgmryhb74f
S393SlhvrAmq8usDcq9du3WtqD/aUSsszXSgYBLU5Aq1b11l/0CdNWNx2cjb
IuKEg8YOVMl5ph5+R8m6hFn+1VXKQ5ywNC8SVN2om6aDoI5uR4lUNod53pOR
aEX0tlat1n/7qZftN38rM9Z1eb9qW/K7pQ6DbtkRxylaHF+nEFfxyBs1RfqO
fCYVUrDJ7AW6GIUOlS82OTWiD30ZfLy5IyWokQeBzlrrq8G0vKKt7lqkSvnX
OuykqXlFpi9haWJNUHXPCzFNrRU6WLXKur6z/MNv97ufuKSrsczQ1Va3yOlL
ykzfN9S2PlUJakRnbVGe02Njlr9gc5MH6VCC63I7odXpdrszKDK+RKfuNpSa
BDXCw7M7pbfvtDVmhO3tbnxogdPVf+qCh+wv/h5uyBAJ6jBvqzSld/kIb88j
b47SSKmaN1m9BCEsaGGgxmbIcVVvc/ntttcc6wtO8hLU7ki5NpuM7aBV0SbL
L1j1hTQdI0JfUfb3XK2ubK/PkYpSWkH6DYlLsmpjhG7s0LzyBLpjGoXaKxab
1JIwsnGSmseR9/Sd7p9Km82+eRmDzv0rDP39jHnL0sfbzIPKJCSoESc6KgO6
bpaGtHNxg9lr6RZLM3tzWZ8pmb7j73IzTzqvYsodu4PHBobLI8wuZDdt+kDH
88F5tmHy5FtHl2kp8jr8ipscdvHEm0zf8Y+Z6wRV/XRrqaFHsWWlmRsTCerQ
8BC4u212pbYfE0pQFcfbSm912NezA3vbTgwfc+IQvqaD35KgpkCos3nr5qJl
/uj7O9nT/XMib3c2HpIu8uLo34ZB/JL5TB0pYUnBQv9oay1run9BwYZo8bxO
UIc6K8QvMG1yUXkoVKchwZOVaKneaW8c3o/+6Gs1SkX589durtrT7tS2ifeZ
0YNV25EnpE5k54qPRVnxdUJ1P99376HGyPtZc4RzarhCFtxZkmCFGNbUWlOc
75deBFugzQSawcebO4YENaK3PVhRlO8fzQCn+fzLisp3xb5GY/lHr3vNR5yD
2JgTVKnPcOxTa4VDnfsib1lG93VkwwNV+zpHhnI1rStroSOtkdfKFgqHqLLA
hQWBimC7c9lSmqBGhHvb9wxv/hxf9FiP7C/pRuCNBNbl/hIxFNkFzcNXCW0t
U31z8gNbmztHjj4xQTW59CUrQVV5eHan8vadjsaMsQytkREPFoiX5am5ysU/
UF7b2unyK0BvNmSIBDXKsyod/VjK7vLR8nt3HnlylIrL8QvfykVems4vqqhp
dXEnjS7JcEvKmuGP3Nxty5PUBDUi3D1c7aNXaeWYWVhQEr1Ku6bcwQ9EBh1a
IN5WRu65sVXUkHrv2FCwQKvzkVI1to8eC8lIUIe3wqPaGCY+Z+XXenoTH6a0
jgPi+a64sUrLaZPaPNYuDtGvGCyuNl4Y6DnUWvlYw9JFtTlCyDPlptp5a3dX
NnXadfJMUoKqerszuP3lFT+o9WmDo86q9i2KvO7ddDT2zpLGpQ1v49LAyw7b
OORyM8N9R18frsboO/sT51b7ftCwcXtr29tiDCgNQrvuJdttCfe0NUXe9fbd
FA0bcxbVLd+4N3jI/YxP2i6ujo5aMFqZsSzHQWwJaoRSaYcjr+3fKhx7s6t9
t+5cV3lArjRTYyVBHRZ+t6Npb+naOu0InHyDcvg1bX8tWlGJJqgRyr4+sKV0
5zzhgFFWNC8yssThY/3CgS5NN1a7xfgVFAkqAIxPMaaCmU1IUOObfdXekaoF
Wl0lMvIeMkVn1Y3RJzz2KBIwksaP6wQVQCYREtTYv1MGAAAAoHM+JajRt/iz
ivZ4NOOsqCn6bWPWhvgG+kUmCTdG92i8QzcDw0ZemI17njUA8JLwFr9NT28A
AAAAbp0/Caow82xOWaubFzyVbY+8C7mgYH1JydOOEySFgmuj71Daz2eHNOmu
unmqb07kPdmSDTXOe/SFougevd1+gG3A1siF1NO5WgAgXqE92g3OYrRhAAAA
ADE5bxLUQ9E3+N3OIdVbXxDtglgUtJ3iVp4e2mE+O6SJNBSz9eyEw043B4Qp
s4nEkYiR4cSzA82eD84JALEKtwtNIm/nkAIAAADGqzGaoIaHf0ZF5mbV0rDs
gnq3432JM09NylpSbjV3a/eugDhNs+8R+pllKGmCwuzFlnu0KxgQJ/PNdddp
GTAK97ZW5KvTvuQ90Z7u0gAYl8RbmNIkWqF95ZvF94MAAACAN8ZoghqZtjXy
vrZ/jjiVecwhhvQed8RU37Kikoqaxj2NkZ9dVZvXF+TJy5+UW9LMgGIZ63Sw
KFveo7n5RRvKa9QduidYtSlQMG+6vEd97FHEb/SQy1pS1UkODyAdmouVm91w
i8gv3+Dyytu5LgEAAACeGKsJqjiLuhhvxtqZMNT6SF6W2ZJMZc0ra7V92R9p
FzpQlpftvCtHZOeVHSA+RUK6t+YveKixm5gCQJp0Vi4wu8P5GJkZAAAA8MxY
TVDFES9H401/SWNcL6t1N5UtnuEUo2b7V21t7SUkGRO6G8uWTHfao1n+1VVW
b/kDADBW9NYV6G9x2f6SJu5wAAAAgHfGaoI61PlsUf7I22pZ0/35ga3NCfYB
6z3UWLWpKH+O3zctGrJN9/vz126u2tNOdjr2vNPeuHVz0TK/P3dqdI/O8PuX
FW3e2tjudrBcAAAy2xv1ys1uevbIbS6/uKq5K91FAgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAADAO2+//fZdd93V2dmZ7oIAAAAAAAAAQAYZHBysqqr63Oc+N2HC
hJ07d6a7OAAAAAAAAACQTuFwuKenp7m5+de//vW999577bXXThhFggoAAAAA
AABgnCssLJxggQQVAAAAAAAAwDi3evXq9773vZdffnlOTs6aNWt+85vfkKAC
AAAAAAAAgCocDodCof7+/sHBQeX/PvvssySoAAAAAAAAAGCKBBUAAAAAAAAA
rJCgAgAAAAAAAEixc+fO2fzq7NmzqSyMPRJUAAAAAAAAACnT3d1dX1+/Zs2a
2traN998U4tSz54929XVtWfPnkcffXT9+vW/+tWv3njjjXA4nN7SDpGgAgAA
AAAAAEiVI0eOTJ06dcKECR/5yEfUTHLHjh1nz54dGBgoKSlR/+WTn/zkBz/4
QeU/Lr300nXr1qW9PyoJKgAAAAAAAIAUCIfDX//61ydNmrRt27ZQKPTRj350
woQJf//3f3/ixIl///d//8hHPlJSUnLo0KH+/v7Ozk6fz6eGlj//+c/TW2wS
VAAAAAAAAAAp0NDQMGHChJUrVw4Np6mf+tSn1Fjy05/+9KxZs1577TXxw/ff
f7/626985SvpfZdfTFDr6+vTWBIAAAAAAAAA56tz585997vfnTBhwq5du5T/
GwqFtFjy7//+7998803d57dt26Z9YHBwMB1FHkEfVAAAAAAAAADJNjg4+KEP
fehzn/ucOq7pkSNHtFiyurra+Pk1a9ZoPVRJUAEAAAAAAACk3rlz5wYGBlLz
jvzg4ODMmTNXr16t/t8f//jHaiaZl5enlMH4+a9+9avqB2655RbTEvb39w8m
TFmIY8lJUAEAAAAAAIBxaHBw8JFHHvnoRz86f/781Mx3r6xRXZHyv9OnT1cz
yfvuu+/cuXO6T4bD4T//8z9XP/Czn/3M+IH+/v6ZM2dOSFhOTo5x4TokqAAA
AAAAAMC4cu7cuX379hUWFqqp4MyZM1OToGreeeed97znPeraX3jhBeMHqqur
tdDy4MGDxg+EQqF/+7d/y0nY9ddfT4IKAAAAAAAAYGi4Y+cf/vCHbdu2ffOb
3xT7YaY+Qd25c6e66osuusj0PfpbbrlF/cCnPvUpq0FQlc05mzA3IxiQoAIA
AAAAAADnq2eeeebZZ5/90Y9+NH/+/OzsbNM32VOfoBYXF6ur/vKXv2zMMAcH
B//2b/9W/cBtt93m2Ec02UhQAQAAAAAAgPPVqlWrHMcCTXGCqqzr61//urrq
NWvWGFe9Z88erWzPPvus+o9vvvnm/v3705KmkqACAAAAAAAA56uVK1eq0d/7
3//+adOm3XzzzQ899FBtbW0aE9SBgQGti+lvfvMb3W/PnTunlfnaa69V/zEc
Div/9ytf+YrVG/1JRYIKAAAAAAAAnK/q6+vr6uo6Ojrefffd/v5+NSndsWNH
GhPUtrY2db3ve9/7enp6dL8dHBz8zGc+o36guLhYjUy3b9+u/N8HHnggZYUU
kaACAAAAAAAA40p6E9Sf/exn6np9Pp9xENT+/v4LL7xQ/cArr7wyNPzW/w03
3KD839deey1lhRTV19cbRxUAAAAAAAAAcL5KY4KqrOhb3/qWut577rnHOK5p
KBT6p3/6J/UDb731lvL5iooK5b9/+tOfpuwV/nA4fObMmb6+vq6urp07d951
111aXa1evfrZZ5/dv3//8ePHlQ+keAYuAAAAAAAAACmQxgQ1FApddtll6npf
fPFF4weUkvzoRz9SP6CU89vf/rbyH4FAIJUjoIqv7dtTNidlpQIAAAAAAACQ
GmlMUMPhcE5Ozgc+8IGbbrrJKhRVCnPbbbddddVVStlmzJjx+OOPp3gCqWef
fdbv969xkpubS4IKAAAAAAAAnH/SOw7qwMBAKBSyD0XD4bDyMeUz/f39xjf9
k01Zo1Ih52RW/5LisgEAAAAAAABItvQmqAAAAAAAAACQyUhQAQAAAAAAAMAK
CSoAAAAAAAAAWCFBBQAAAAAAAAArJKgAAAAAAAAAYIUEFQAAAAAAAACskKAC
AAAAAAAAgBUSVAAAAAAAAACwQoIKAAAAAAAAAFZSn6Aqyz916lRPT8/Bgwf3
7NlTnxzKdiVpyTpJrSsAAAAAAAAA6WVMUMPhcFLXGAqFJpwvrrzyymRXFwAA
AAAAAIA0Sn2C2tfXl67AMxl2796d1OoCAAAAAAAAkEapT1D7+/tvvvlmm0zy
fe973w9/+MPCpLn11lsXLlx4/fXXf/nLX54yZcoHPvCBRBJUZTmMHAsAAAAA
AACcr1KfoCq6urquvvpqm1hyyZIlAwMDySvAuXPnzg5TNnZwcPBPf/pTc3Pz
008/XVpaWlBQ8I1vfGPatGkXXnihmwT1Pe95T09PT/KKCgAAAAAAACCN0pKg
Kurq6v7sz/7MJpl86KGH0ti3U1n1wMDAq6++WlFRUVhYmJWVZVPUe+65J13l
BAAAAAAAAJBU6UpQz549e88999jEkhdffPFLL72UgpI4Uora39//i1/84vrr
rzct6mc/+9mk9pgFAAAAAAAAkC7pSlAVAwMD3/jGN2xC1Ouuu+7MmTOpKYwb
g4ODL7744vz5841FraurS3fpAAAAAAAAAHgvjQmqoq2tbdKkSTYh6ve+973B
wcGUlccNpTw1NTVf/epXxXLefPPNmVZOAAAAAAAAAIlLb4KqqKiosElQFY8+
+ui5c+dSWSQ3QqHQt771La2QF1xwwf79+9NdKAAAAAAAAAAeS3uCqqzu+9//
vk2Ceumll2ZmODkwMFBYWCh2l03j1FcAAAAAAAAAkiHtCaqiv7//S1/6kk2I
+q//+q/KZ1JcKjeUunr66afVQl588cXt7e2JLG1gYKCvry8UCnlVPABIhnPn
zoWGpf5+AQAAAABAUp0bdnaU8uSrPP/+/Oc/1yWoBw4c6O/vVz6gfT4FL9E3
NTV98IMftAlRV65cmZmP6oODg9/73vfUQhYWFsa9nNOnT8+dO1dZyJw5c+jL
CiCTDQwMaBc9vvQBAAAAgAzX19f3zDPP7Nixg8TJDaWiVq1aVTjs9ttv9/l8
M2fONGaVF1100fTp02+55ZbCUStXrkxBDZeVldkkqIpf/epXyS5DfPr7+z/5
yU8qJfzUpz4VX19Z5a/UfaH8r3JUe15CAPDWT3/6U/XK/B//8R8DAwPpLg4A
AAAAwFxnZ2dOTo76BFddXZ3u4owB9fX19hGlldWrV6cgQQ2Hw7fccotNMa64
4oq2trZkFyM+DQ0NaiFra2tj/duTJ0+q8emUKVOOHz+ejOIBgLfOnTt3++23
q9e9uro6QlQAAAAAyEDhcPj+++/XsrVHH3003SUaA5555hm1ui666KJJkyZd
e+21M61lZWVdcskl6udXrVqVml6+x48f/8xnPmMTon7961/PzOd0pX5WrFih
lPCWW26J6Z3W/v7+G2+8Ud26bdu2Ja+EAOAt5Ub8xS9+Ub18NTY2ZuZAKwAA
AAAwnh04cOAjH/mIFqwVFxenu0RjgPJ4e+rUqTNnzgya6e/vN/5jX1+f+u8p
K+SOHTv+3//7fzYh6tq1azNz0AalYuvq6v7rv/7r8OHDLv9kYGBgw4YN6nYV
FhaSPwAYW1555ZUPf/jDyhXskksuaWtrS8Gg2QAAAAAAlwYGBhYuXCimaj/4
wQ/SXSh4Q3kAX79+vU2CqnjqqafSXUxvbNmyRd2iq6666k9/+lO6iwMAMXv0
0UfV69gXvvCFt956K93FAQAAAACM+OUvf6mL1BYtWpTuQsEzg4OD6qz0VrKy
stz388xYb731lrIh6hY98sgj6S4OAMTj7Nmz2neaGTvQCgAAAACMN729vdOm
TdNFan6/PzPf7EZ8Xn/99SuvvNImRJ03b96Yfk5XDtfCwkJ1W/7lX/4lleMk
AIC3nn/+ee3iXFNTk+7iAAAAAMB4J+ZOomuvvZYxJM8zlZWVNgmq4t577x27
sXlHR8dHP/pRdUN27NiR7uIAQPzOnTv3ta99Tb2gzZ8/P6bZ9AAAAAAAnnvl
lVf+6q/+SnlG+/jHPy6GaVdeeSW9+M4zZ8+e/eEPf2gfov7mN79JdzHjoRyr
d911l7oJN954I4cugLFu69at2pX5xRdfZEopAAAAAEiXwcHBBQsWqA9os2fP
FpO0iy++eEy/0w1Tyj7Nzc21SVCnTp36xz/+Md3FjNlbb711+eWXq5tQVVWV
7uIAQKLOnj2bk5OjXtaWLVvW39+f7hIBAAAAwDj11FNPqU9n69evX7t2rS5M
O3HiRLoLCO+9/PLLH/rQh2xC1G9/+9tjqw9nOBx+4IEH1ML/4z/+IzkDgPPD
pk2b1CvbRRdd9D//8z/pLg4AAAAAjEf9/f1q/5arr746FAo9/PDDuiStvb09
3WVEUvz0pz+1SVAVP/nJT8bQG6N9fX2f/exn1ZIXFhaOoZIDgA3lNn3ppZeq
F7eVK1cq17p0lwgAAAAAxpdz585p3fY2bdo0JPRH1TQ2Nqa7mEiKcDi8bNky
mwT1r//6r3fv3p3uYrr1+OOPayXfunVruosDAN44e/as3+9XL26TJ08mQQUA
AACAFOvo6PjEJz6hPJTl5uaqD2XPP/+8LkarqalJdzGRLCdPnpwxY4ZNiJqT
k3P69Ol0F9NZOBz+6le/qhX72LFj6S4RAHimqKhIu77t3Lkz3cUBAAAAgHEk
HA5/73vfU5/IduzYof5jc3OzLkN79NFH01tOJNULL7xw0UUX2YSoykGiHCrp
LqaD06dPf/CDH1QLfPXVV4+tEVwBwN6zzz6rXZPXrFmT+ddkAAAAADhvNDQ0
qI9j3//+98+ePav+4+9//3tdgFZcXJzeciLZNmzYYJOgThgd4SGTaQez4t//
/d8TGQRVORcGBgZCoVBfX9/JkydNZ6RSP6P8SvmY8h8JFNxL4XB4cJhSKjLk
8UPd48qxqhyxytGoXcxF6gcUyn8QvtlT6lM99zOqrpQ9e+GFF2qvBjBTHgAA
AACkhvI4Nnv2bOVZ7NOf/vQ777yj/fvbb7+tS8++//3vp7GcSIFwODx//nyb
BPXDH/7w3r17011MOz/+8Y+10paVlcW3EKUempqaSktLb7nlln/8x3+88MIL
p02bphz///3f/63lFefOnWtublZW981vfvPiiy++9NJLZ8yY8etf/zoUCnm3
NTFTSnXmzJnbbrvtmmuuUWrg8ssvnzVrVl1dnWP+09fX19DQUFhYePjwYebe
GnOUo+6Xv/zl6tWr/+Vf/uX973//3/3d333lK1959NFHxXhNudRXVFTccccd
yqX+L//yLz/5yU/m5+cfOXLENGgd55Tz5ZVXXlm0aNFVV12l1JXyv0uWLHn1
1Vft60o5cU6fPv3UU0/953/+56lTp5JUNqUM6pyPqq6uriStCAAAAAAgeuyx
x9QHsV/96lfiv588efK9732vmJ4pj5NEK+e9jo6OyZMn24SoX/rSlzK219PZ
s2fFBLi+vj6OhShb96Mf/egDH/iA6eY/8cQTygeUE+Hw4cOf+tSnjB9YvXp1
uqZ3UUp16tQpMV3RKFtk0xl1YGBg1apV6icvu+wyBlccQ9TU7mtf+5rp4fqN
b3xDHb5YOWjXr19v/MCUKVMy/DuR1AuHw0qdaP08NR/60IcaGhps/lA58a+/
/nr1wzNnzkxep/TCwkLxipSktQAAAAAANCdOnFCeoJWnsBtuuEH3uKf838sv
v1x8fvT7/fRWGg+qqqpM0xjN8uXLM+edVtHg4KAY/x4+fDjWJfT392sZ7M03
3/zoo4/+3//9344dO8Rg9oknnjh+/LgaVH784x9Xqks5Wfbs2fPd735X/cCq
VavS8l3DmTNn1JFsr7/++n379p08eVJLU9/3vvc1NjZa/WFbW5u4f7XBkJHh
lMPst7/9rZr2X3HFFevXr6+rqzt16lRRUdFVV12lhai9vb0PP/yw+n/vuuuu
/fv3d3R0/OIXv1Av/llZWd3d3enelEyh3OOeeeYZta4KCwuV01+pPe3U+Nzn
Pmfz/dHPf/5z8TxK3jcpWgkVCxcu5JtNAAAAAEgq5VFx7dq1yiPYn//5n7/0
0ku63w4ODuomZ7/22mu97XyoFKA/Vc6cOeNhyc9vyvP4nXfeaR+ibt68Od3F
NCFmHX/5l38Z6+E6MDBw2223qX++Z88eMSVW/lvs9+X3+5X/zc7OVr93CIVC
q1ev1n47c+bM1I8+qpRBOUOVtd96661qt8OTJ09+/vOf10p1//33WyUtv/jF
L8Sd+7//+7+pLTvi9NZbb6m77Lvf/a5u+Ijm5mblFFB/m5eXp/6HOkSDcuEN
BoNiX+Xq6up0bUKmaWhoUL+GeOqpp9SzWLl3iGeHcmUw/UPlErF06VLtYx/7
2MeS11e/qalJW9FnP/vZzPw+CwAAAADOG8ojttp5qaCgwNi5VHko0567VZMn
T/bwtURljY59HT00bdq0dL1bPRYpdfXFL37Rpj4vu+yy//u//0t3MfXefPNN
rYRavOmSckA+99xz6t/u2rXL+IGKigpdJfz+978fGj5T7rnnHt2vUjzQgVL4
O+64Q1nv1772NTU+Vc2cOVMrkvIr01xXKf+iRYu0j11yySUZO0oDRKFQaO7c
ucou+8IXvmA81JV/UU4B8ZjUJlZTzm7d+wWFhYXp2IKMo1Tal7/8ZbVCtFhS
OWvEurrvvvtM/1bZHVq/3wnD/cCT98qGcu3VVnTllVdmzhx2AAAAAHD+UZ65
1NjksssuM537RnnW1vrjqf7mb/7Gw2hFeT695ZZbTNO5JHnzzTe9Kvx48Nvf
/lbZ4zb1uWDBgkx7cm9padGK96UvfSmmrlnd3d1qH86ioiLTvpq//vWvxc2/
99571X/v6+vT9db2+Xwprpk9e/aooxYHg0HtH5WzVSzV0qVLTbdLl/zMnj2b
wToyn3Jsl5aWKvtL2XdHjx41fkDZrVOnTtV265QpU9TrvHIMPP3007pz2X54
z/GjrKxMrdLe3l7tH3fs2CHW1ZYtW0z/dv/+/eLH7r///uSV89ixY9qKLrnk
kvTOXgcAAAAA57ennnpKff7auHGj1Wfuvfde3YO2t09qhw8ffuaZZ3bEKKY/
qR+l/BWvOsbqkUceMQanIuXgyai0raGhQSvb1772NfdlU46NdevWKX919dVX
W4Wf9913n7jtWhfcvr6+K664QvzVj3/8Y/uRCZXfKmvZuXOnJ8eksrS77757
wnByK56h5eXlYqmsBl7QJT8PPfSQ1YoGBwdbWlrefffdxMucoK6uLuXszqhj
L8VOnDjx8Y9/XNlfDz74oOkHlCPhkksu0XbrsmXL1H9XjpZNmzaJe1w5eh0v
7MquP3LkSCZ0Tn7nnXeU63kyIl/llFQn5CosLBTP3yVLlojVdeDAAdM/V04c
8WPKaWX6MfXcf+655xI598UvR97znvfwegUAAAAAJInyvPzP//zPE4aHNrXp
LKd70Fb84Q9/SGU5kV5nz57VZkcyddlll1nlCWmxdetWrWzz5893n7ApZ8Q/
/MM/2ORRymmizbKt+OQnP6kFIMp/bNu2TfvVt7/9bfugSR2/4pprrlE+nJ+f
n3gMeOrUqdzc3AmGb0PEAl955ZVitzqRy+Tn9ddfnz179oTh0TxeffXVBMsc
t56env/8z/9U5wvLtC7QKXPu3Dm1t6RN4K/rOfmzn/1M+5VywGj/fumllypH
r/3qlFV85zvf+Yu/+IsJaR0jVz1xPve5zynF2Llzp+fL7+rqUoe12bdvn/aP
yraLQfS8efNMk0/dUBhXXHGF6UVAPPdvvPHGuM99pVTvf//7tdW99dZb8S0H
AAAAAGBDeWq7//771Sev1157zeaT1dXVusQsjclJRjmaKmnvZdfT06O+227l
q1/9aua8Q7p582atYLfccov7Kap37dql/pXVDFBHjhwRt3rhwoXib/v6+g4d
OrR+/fpt27Y59tNTPvC9731PW1Tic04pa1cXJU6XpuwUscCFhYVWg6DedNNN
2seuuuoq0/IrH/vpT3+qfeyuu+5KsMzuKatWinT8+PHf/OY3a9asmTRpklaM
pCao55IskVNb+XN1hNsHH3zQ6iAXjzFFc3Oz+FvlUPnJT37ys5/97Le//a1j
SZTPaMtRdkHcxY6VsuuVw/jdd9997rnnfvSjH4kXomQkqOoE90rFiseVLoh+
8sknTf9WKedll10mXh9Ma1U5B8X9omxXfEVVSiiuLgOHpAYAAACA80BbW9ul
l146YXj65tOnTyuPflbz19fW1k6Qmc6wMw5pEXSypT1BVbz00ksf/vCHbQp5
++23Z0hvQPFF++XLl7tPUJVPqse81Qd058JPfvKTuAvZ19enpR9r1qxJ/EV+
9b1g3S544oknxAK/8MILpn+rnP5/+7d/q33MJvnRgtZrr702jreGleLFcTAr
m1ZYWHj11VdrJbzwwgu1/07eUXfq1KnC5BMT71gpu0C5elvF78pBJU4idsUV
V7g/F3SUvaaF58qN449//GOsS1B2U3xfE+h2vSgZCaqypUqt6i4C4iv8NsMd
6IbCKCsrM/2YGLTOnTs37m9PlD+cMmWKtrrf/va38S0HAAAAAGBFefJavHix
6TOpGxUVFenegowwrhLUc+fO/fKXv7Qv57PPPpvuYkYUFhZqRdINZpig9evX
i9v78ssvx72ocDi8du1aZSE33XRTfX29VyUUDQwMfOMb39BK+5nPfMYqbGxs
bBS3yyr5Uacf+sQnPvGtb32rra0t1sNSuexce+21a9asifUPlfWuXr36ve99
7+WXXz5z5kxlLyj/VyttkhJUpZA//OEPEzltXdqxY0cyyq84efLkX/3VX2kr
mjt3biJL++Mf/5iTk+Pz+V555ZVYQz+lMq+//vr58+fHsbOUfX3BBRf83d/9
3fTp0++88866ujpti5KRoBr19fV96EMf0la6dOlSqwNYN0iy1csa2rmv3IWV
8yjugil7QUzIk3cgAQAAAMC4JQ4UGYcHHngg3VuQEcZVgjo0/OBfXFxsVcjC
wsKx3gfVnrL56hCgqssvvzzBBSq7Vamx5E1tdubMGd0OMq0K5R91u9U+1Rkc
FscxqfzVhOEOt3HsEfUt/r6+PjW7UxailTZ5Ceqf/vSnz3/+8zOT6Zvf/Gby
JgD67//+b3G3/vjHP05wgepeiOOIVSozZ1gcf6u+xa9Qd/3OnTu1LUpNgipm
toqnn37a9GNK8WbNmqV9LCsry6Y3uyfnvq4PqrK7E1kaAAAAAEBHeaybMWOG
8sD1hS98wc1LpitXrnzf+94nPkLeeeed6d6IjNCUKhmSoA4N92q74YYbjPHp
6tWrMyQ+HZLnPvvOd77jVYKqnDh/8zd/oy158eLFniw2SZStdvkK/+nTp/1+
v/Yxq0FQE5dIgqqTggRVdTbJEh//1sYDDzwgHgBpHL86kQRVJ8UJqrKDdK/w
W50dvb29H/zgB8XrQ7Kv28qR/4lPfEJb48GDB5O6OgAAAAAYV8T+Zrt373Yz
10koFPr4xz8uPokvWLAgczI9pNj+/fsvvvhi8XiYM2dO5kwjpXjyySe1st14
441eJagvvfSSuNW//OUvPVlskgwODoqv8H/2s5+1Shr7+vrUycdVy5YtS1Ks
NxYT1LGrv79fPACmTp2axsKM3QRVOTsuueQS8eywuvcFg0Hx+pCCsW6UI188
c48fP57sNQIAAADA+HHo0KGPfexjytPWzTff7DInUR7TxFcFFV/60pf+f3v3
HlZVlQd8nLmEU4+G6WRpOmokTzAVijqOBUiaXTRNvJU2aoVXMHXMKUGnvDSm
qWXgBS/pKGSUl8wbpGZeslITRMxwUNPSwJRShMO5+66X9bzr2e85nAMczg39
fv7wOZd19vrttffaPvvH2mu58dFjcaefmZmZ5RXijtujg75uEitXrlQnQ6dO
nS5cuODriP4/O3fu1GZ33ZXttxnRV8t8hRtnZ61UeXm5NtqEhARHNdpkhlet
WuVom7WMmQyqN+n1+qZNm6pWmjhxYm22VstDVnczqOL/Jm3vSEtLq7SY2MEZ
M2ZoS549e9bRNt04Kv73v/+9rK5evXqemw4CAAAAAG424u41ISFB3nBVfxEc
k8kUExOjvTds27atu/KQIqT4+PgAb2nUqFFpaalbIr9pffbZZ2pdlZYtWx4+
fNjXEdnSrojdvXt316ZttPlEbKR///5qs1FRUU5+a7+Wt3Y7586dW7Zs2bvv
vvvll196biz38ePHtWf+unXrHJW0mQT1xIkTNgVEkCUlJevXr3/zzTc3b97s
chKMDKrn2Dfp3r17tYd1+/btjn6r1+vFVbHSZhSbFWfy559/npSUlJaWdvny
ZdfCc2MGVVx/1E55OoMqdn/hwoXaZnT0dxNxbmsnSW7RooX9FcDtff+XX35R
Nd51111+9SAAAAAAANRpavTOyy+/XP3bN3Hfp30aVObN3JW1EGFoZ630tNDQ
UJ1O55bIb07Z2dmiDWVjBgYGbt682dcRVeLMmTPqiHfo0KFG2f6ysrLVq1e/
+uqru3bt+vXXX9XnJSUl2rksRowY4WgL+/btEwXCw8PFT2y+Er1Gm4YVnnvu
OQ8NRv3000+1FTkanyZC6tWrlyrWuHFjm8yP6P7Tpk3TTvAomrSwsNCFkPR6
fQAZVLcSB0v0weTk5PT09OPHj2u/skmMnz9/vtItiBPjhRdeEAXmzJlj85U4
TBs2bAgODlYbadWqlZNMrPM4o6Ki6lwGVUT7r3/9S1UndsHRxUQ0Y7NmzVTJ
Pn362PwPK35o3/drmUQtKCjQ/td2M3cEAAAAAHAjcXv1+OOPy7vgn3/+ufo/
FPfRw4cP19763X777W4c7qKWWvaC0tJSTz89fQO7cOFCdHS0Og2WLFnin415
5coVFWRQUFD110UqKyvTPvg8ffp0leLYuHGjtgvMnz+/0pykOJkHDRokCkyY
MMEm2SK+Gj16dEDFBKoXL16Mi4uTm9q6dWst99eeOC7vvfeeitbJnzxsnvV+
4okntDkusftyDF7fvn2/++67rKwsWeyVV15x4dAzBtW9xNFJTExU7fDggw+q
c1I0tbzaS3/+858dbUT+Wa1Bgwb26xDt3bu3cePG4tAfPXpUdA25qYcfftiF
LKj4SV0cgyqaceDAgaq6559/3tGp+8knn2ivDzNnztR+q/q+OG/FVdRdff/w
4cOqxk6dOlXZEURnP3jwoGi0wsJCZrMBAAAAgEpp77Xnz59f03GY2nyFdOXK
FQ+FCv8kbs+1Q5HF6eTGuXDdS4SqHTj3448/VudXJpOpT58+2pO8R48eMiVl
tVpHjRql/eqzzz6rdCNq5OfBgwdtvlq4cOHvfve75ORk+VYO/BNmz55di311
KCkpSUUbHR3tKLuinfFAHlbtt8eOHRMfhoWFyWOdmpqqWsaFvKWHMqg37ajy
tLQ0m8vyvn375Fc2czhERUVVerzE/wvPPPOMKDBs2DCb7iwOVkRERHh4uEy1
nTx5Um6qQYMGLsy36aEMalZWVi235pzYd9F0qjrRpxyV1Kay7QNbsWKF+HDo
0KHyzNf2/dr0Be2EzyNHjnS+qQsXLnTs2FGVnzlzJklUAAAAALD3wQcfyPum
Nm3auDB81GYuOMHmiVHc2MS9trhDV0d/yJAh/nz3bbFY5IgvqZoD1fLz821O
8qSkJDl+VafT3XvvvdqvioqK7LcgCsscRZ8+fWwSVuJtu3btQkJCZLuJt2o0
b0ZGhjt22pY2g9q6detKE2gimEcffVS7X1988YX61mq1Tp8+PaBiLK58q84B
Rxk55xiD6kaiDUU31B67oKCga9euyW/ffvtt7VcjRoywn1NCmD9/viywbds2
m69SUlLq1as3d+5c+VZla8V568L/IHV0DKo4tbQZ1MGDB1d66srpKZRbb71V
O+5d7LKcKGPXrl3XK3qB6vu17Avao7xy5UrnO2IzFY/w8ccfu1w1AAAAANx4
xK2Tdia3fv36uTD32oYNG2xuvjIzMz0RLfyQ2WzWpuMee+wx/89ZrVu3TgW8
aNGi6vzk888/tznJv/32W/nVqlWrbL6yH9dqMpmGDh0qvrrnnnuOHDli8+3q
1avr1as3a9Ys+TYvL09t6vTp07Xb18odOHBAVSGqtl8Z3GAwaLPiwh133KHN
/Ig9ateu3a233iqvGOJtWFiYLKlG0tYIGVQ3kmszaQ9fXFycHB0q/tU+wi+M
GjXKfgui2C233BJQ8ZcC+xknOnTo0KJFC/m5qGvYsGFyUwkJCS78D1JHM6ji
RFVJZiEmJsY+/rKysjZt2mhbu3fv3tomys7ODqjIPMu32uHB+/fvdzk2UYV2
zHx+fr6TwpcvXw6w8+KLL3puJTsAAAAA8H/ipu/kyZNbtmyZMmWKuI++++67
be6bxG3X7Nmzxb2bk5tZ8VVWVtb69euTk5MTExMbN25ss5HIyMjMzExRRtzP
5uXlsQrwjUqcTgsWLFDH/cEHH6z+tKI+VFhYqGJOSEioTsquvLy8ZcuW8ifR
0dHbtm2T6aP09HT54bRp09Q209LStL8VbbJ8+XL51aFDh+zzEjLjJ5tOBDNz
5kxZuGvXrh5KAIq6unXrpgK2eTxfVGozZYEQGxurvSaIS0SXLl3eeOMN+VZN
ghoUFHTq1Cn7Gk1VES0sIxG1Oy9ZZZuQQRVmzJihGmHcuHFyNgM1GUVYWFjr
1q3lt+JM0D56L87P06dPd+jQIaBiVUH7q7c4Ddq1aycOvew4ly9f/stf/iI3
VemQaXGyOT+gogq5kpR44bxklZcXb2ZQr1csS1evXj1V47p167Tf7t69W100
lLfeektbZu7cuaIfqXk/tH2/NiP5xWl/5513yk01bdq00jHGyqVLlwLsOJnW
FQAAAABuBjaLazvhaC7H63YPgVZp6tSp3txHeM3atWvVUW7cuLFri7B7n16v
f+KJJ2TYnTp1qk6mwmw2q8kMp0+fvnv37vz8/Jdffll+kpSUVFJSMmbMGNUa
CQkJJ06cOHjw4IIFC3r06CE/3LVrV6V/mDBXkK9FMOHh4bJ8amqqm/dcY82a
NdpOOmPGjIKCgmPHjone3b17d/terB7Z1oYtX1gslhdffFEWGzFihH17igaP
rgbx8y5dulRZrMpxqmRQr1ck9+QqYH369Fm1atWPP/64ePFiOfo0LCzs0KFD
e/bsUX/8EkdcfHv+/PmMjAx1nttkVrW0p/GiRYtk+fbt29unWw0Gw6BBg6o8
pl0qVFksNjbWeW/1cgZVe1kIqFjyXvTxoqIiUfXYsWMDAwPt+9HevXtttuCJ
vv/111+rGsX1x3mjiW+1f0+RnD/4DwAAAAA3PJ1Od/vtt9vf1tkIDg52tAKL
zeOB1aGdPhE3jJ07d6phTsLRo0d9HVF1GQwGOYen9Msvv1TnV2fOnGnfvr39
6Z2UlKSejx48eHClXaBTp07nzp2rzkPKH374ofxJo0aNKp1P1V1EMOnp6S1a
tKg04NDQ0EceeUT7SV5enqNNnTp1qkGDBrLYpk2b7AuUlJTIQYZOyCklq8yh
kUGtJu36gFphYWGHDx+WibtPPvnkj3/8Y6UnwCuvvFKdZwdMJlNMTIz8SaXH
Rfw/8uyzz1Z56GX6tMqTxGYgtD0vZ1CvV/x1QLRzpcnSgIostPZtx44dnQyj
1fb9Wv41at68earSf/7zn1WWz87O1g6XHTlyZG1GwAIAAADADUDcViclJb37
7rvi3jmzwvbt29WLbdu2JScniwLiX0c3quIeOS0t7fXXX1+yZMmnn36aqSE3
tXXrVvHvxo0bU1JSxKZmzZp19epVL+8mPC03N1fNe+m1ZIUbiYBV8JUm/SpV
Xl6emJjYt2/fe+65p1mzZuL03r17tzYlIl4vW7Zs/PjxnTt3Flt+4IEHnn32
WfGTak5kIbpnv379ZFTPPfecp+chFH354sWLc+bMefjhh2UqtXnz5iLy5cuX
//bbb9pVcrp27epkjfW33npLFgsODnaUeLFURTSdzMKJK4/zklUmosmgSuJY
bNmyZcSIEZ06dRJN0bNnzxUrVpw/f16dV+LF5s2b33zzzQEDBohD36RJk27d
usXHx4sreTUTaLt27VJN7WjezioPqFw6TS5AVstD7/0MqtzBw4cPT5o0qX37
9qIN//SnP9133309evQQ/58WFxdrM6jiUuBoF9zY90W/7t+/v6rUZtSrI6KD
r127VvzX/8UXX9zMvQYAAAAA4Idk4qioqEjctL733nvvvPNOVlbW6dOn9Xp9
7RdV8Zyff/5ZDTwT0tPT69yMeaWlpW3btlVpjerHLxM++gqOhpPJCRtlmRoN
5fruu+/UmECbyVQ9SgZcUlJSVlYmAy4vL69fv746xBMmTHCU0hEn6t///ndZ
bPz48S5nfkysJOUZ8uCKdhD/VnpVkVchccTF6Xrt2rXqH0FxpBISEmQ7R0ZG
ujwHch1dScqG9sogupL8o8mnn36qzaCuXbvW0c9PnDjhrr4vwmjevLlKxtIF
AAAAAAB1l1w654033njooYcC7LRo0aJnz57bt2/3w5tfEdKAAQNUqO+8846n
h0p6gtlsVutot23b1k/aWa0jExISIjMwom137Njh3vW5jBXE6eckYTVnzhx1
iOvXr3/48GFHJdUaUsK+ffvUh9WcG0HxUAa1TixtVkf9+uuvKlM3b948+aE4
XXNzc2t0EOtiBlV0TJUpdbSz4pSOjIxU8YjXTsaiu7HvL1u2TFW6devWmv4c
AAAAAAA/Ie6sDx061K5dO/vcqY24uDhxk+4/IzxF5KNHj1bhJSYm1t3p8oqL
i++//365I9u3b/d1OP93BgC5ALrw6quvyg//97//ibczZ850yzkgqkhKSpIL
DHXs2NHRM8WimDbz89prrzl5Nl+tn6VWDxc/b9++/dNPP12jc4MMap2jMnVB
QUFnzpy5XpELHTZsWKNGjWrU7HUugyr2Ti2d9sQTT6xfv77SYhkZGdqLuZOx
+kajUfRHm76fnZ3tQt8XXTK6YlE2oXfv3tWcPwQAAAAAAH9jNpvFPbK8w23U
qNGAAQPmzZu3adOmFStWTJo06emnn7ZJojZs2PDAgQP+MM5TRP7vf/9bBTZk
yBA/GbrpGhH8rFmz5L7Ex8f7vIW3bt2q2vabb76RH06cOFG8/fLLL91ShXZw
WkDFxJiVzm6qLXbffff9+OOPjjYoJy+VkpOT5YcbNmwQb1NSUmoUGxnUukX0
lyeffFI28rBhw+RRKywsvO2221566aUaJc89lEEVr2u5tUqJXRs3bpy2H02b
Ns3+Sij25bHHHlNl+vfv7ySZqQ1b9X15Gte0769fv15tau3atf7z1zcAAAAA
AKpP3M8eO3ZM3t6GhoYePnzY5g5X3J6rdXm0iouLfRWzZLFYUlJSVDxdu3a9
AXJTFy5caNWqldidxo0b5+bm+jaYuXPnqraVCRmdThcSEhIXF+eWphZbGzVq
lPakatSokX3m5+zZs7fccosqM3/+fCd5LZn2FG677bZz585dr8ip/uMf/4iI
iCgrK6tReGRQ6xZxVjRs2FA28saNG69XXCLkzBg1Tfq5MYOqnVNCvK7l1ip1
7do1m6lXnnnmGfvIFy1apC2ze/duJ9tUC9up66rorWFhYS70/d69e8tNifbk
5AcAAAAA1FHl5eVy4FZoaOjRo0cdFVuxYoVNBnXgwIFOFkP3gg8//FAFc//9
9/vtw6FywW6hOok4k8n0+uuvy50aMmSIb4ehqnFoY8eOvV6Riuzbt2/Lli2z
s7Pdsn2j0dirVy+bk8omgyredunSRRVISkpyftaJ8m3atBElw8PDRcCiAZcu
XSrerly5sqaJ0NpkUEUYpaWlOp3up59+2rFjh2g3tQtpaWmZmZm5ubmXLl1y
MmUlakocr549e8pG/vnnn8UnoqnF60mTJtW0H9Umgyp+Io67OEsLCwvFoZ86
dar27M3Kyjpy5Ig49KKAu3q3qE6ljqW5c+fabPzixYvaAunp6c4H5Z44cUL1
fbkiVUJCguj7ajxqNe3evVtVunjxYld2DwAAAAAAXxO3xomJifL2dvbs2U7S
BaKkdrpRac6cObUfo+UacWN+5513yjDuvvtunU7nkzCq4+uvv46KinrkkUeq
GeSZM2eCg4Plrq1bt87T4TlhMBjkBIbdu3fPyMgQrwMDA7dv3+6upJ/RaHzm
mWfU6dS0adOPPvrIpoA6P4XJkydXmbQXJ+TYsWNF4dtvvz0zM/Oll14Sr99+
+20XTtTaZFC1YTtXd6ft9TfiMMlsubBkyZKkpCTxYujQoS7M7FGbDKr2+Xfn
3DUtqugUjRo1UpuNjIy0+VuYXq9v3769KvDf//63yrGgotFU3//www979Ogh
+36Nsr7iiIj2l5X26tXLn6/SAAAAAAA4Ie6j1TSnTZo0mT59ek5OjqPCeXl5
d9xxh00S4Pz5894MWEUSFhYmA6hXr96VK1e8H0M1mc3mp556SiYiqvkEq9Vq
/eijj+TexcTE+DbDlpubK5OQQr9+/TZt2uTGYbFiUzLbGVCxONRXX32lNi5e
HDhw4G9/+5s606ocfaqIFps6dWqzZs0CKh4cTk1Nda0Na5NBFb8SVYuDPnz4
8Cl2Jk2aNGjQoKioqMjISDKobiS6W0pKSkREREDFuPRp06a5NjS9lhlUcVgf
e+yxF154wf7QC+Jz8a0o464MqtFoVCu+/ec//9HOryLi/+CDD7T51dWrV1ez
TWrf999//33584YNG+7fv79mewUAAAAAgN8oKytr3ry5NiMqbu0d3V9brVb7
kXUeWhvFiYsXL8bExKgA8vLy/Pk5aDXVwNtvv139XxmNxhkzZsgfLliwwLfP
8pvN5kuXLhUVFXlila5vvvkmNDRUZWnmzZu3bdu2lJQU7djURx99dO3atTWq
3WAwiNP46NGj8kF+12KrTQZV/ETO26AlIrF566sh3DcwcdTEQd+5c6c4AVw+
Y2uTQbU/0E4+cS08e+np6aq/xMXFLVu2TPSj2bNnd+7cWX0+ePDgPXv21GiP
RGOKvl9YWOhCnv/IkSNNmjSRVYtIfL4uHgAAAAAALjt58mSAnWPHjjkqv3z5
cpvCKSkp3rw1NhgMAwYMULXX9KlSL/vhhx9CQkICKp5PP3v2bI1+q9frBw8e
LIdvff755x6K0OfMZvORI0d69Ohhfx4KHTp0SE1NLS8v90mS3I0rSaFuceNK
Ut4h+sjq1avbtWtXaT/q3bv35s2bvbmKk7gsd+3aVdb+3HPPeeKPLwAAAAAA
eM23335rf7t95MgRR+X3799vU3jcuHFeewxZVDRmzBhVdWpqqj/nN4xGY//+
/WWoiYmJLmThdDqdTIk89NBDZ86c8USQfkKv169bt27s2LH9+vWLiopKSEhY
vHjxV1995duFluTKWcuXL/fnLD08QVxq5BP3dSv1V1ZWlpycPHLkyN69ez/1
1FOvvvrqmjVrjh075v29GD9+vLz0xcbGiqi8XDsAAAAAAO5VWlqqJhSVxFvx
oaPyRUVFNhnUxx9/3Dvrg5jNZrVIvTBt2jR/nkBSxBYXFydDDQwMzMvLc207
om1vu+22gIp1WKo5C2jdJZ98l/xk2Kd7H7VGHVJ3D72cHULwVeZfref1wgsv
1K0UNAAAAAAAldLr9fHx8dqMqHjrZJ0R+6f++/Tp44XMnsViWbhwoap0/Pjx
/nxjLmKbOHGiijY2NrY2yV6dTicfcp88eTKDIQH4M4PBIK97Q4cOdW0ZLwAA
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
    "], {{0, 676}, {1814, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{541.2, Automatic},
  ImageSizeRaw->{1814, 676},
  PlotRange->{{0, 1814}, {0, 676}}]], "Text",
 CellChangeTimes->{{3.7964198426273813`*^9, 3.7964198438162036`*^9}, 
   3.7964211042412815`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"note", ":", " ", 
    RowBox[{
    "cannot", " ", "call", " ", "this", " ", "with", " ", "Absolute", " ", 
     "area"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"polyAreaCentroidLow", "[", 
     RowBox[{"vtx_", ",", "area_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "c", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "=", 
        RowBox[{"Total", "@", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"#1", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], 
                RowBox[{"#2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "-", 
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], 
                RowBox[{"#1", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}], 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"#1", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "+", 
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"#1", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "+", 
                RowBox[{"#2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"vtx", ",", 
             RowBox[{"RotateLeft", "@", "vtx"}]}], "}"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"c", "/", 
        RowBox[{"(", 
         RowBox[{"6.", "area"}], ")"}]}]}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7964206649383545`*^9, 3.796420675266745*^9}, {
  3.796421196813824*^9, 3.796421200701434*^9}, {3.7964219577093563`*^9, 
  3.796421961445551*^9}, {3.7964222131391077`*^9, 3.7964222225050693`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"polyAreaCentroid", "[", "vtx_", "]"}], ":=", 
   RowBox[{"polyAreaCentroidLow", "[", 
    RowBox[{"vtx", ",", 
     RowBox[{"signedArea", "@", "vtx"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7964198077797604`*^9, 3.7964198209639454`*^9}, {
   3.7964199276071963`*^9, 3.7964201252168627`*^9}, {3.7964202200817747`*^9, 
   3.796420223528531*^9}, {3.7964206788212404`*^9, 3.7964206910685525`*^9}, 
   3.7964207363934116`*^9, {3.7964222040803585`*^9, 3.7964222042568855`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"polyAreaCentroid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7964212052821884`*^9, 3.796421217860117*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5`", ",", "0.5`"}], "}"}]], "Output",
 CellChangeTimes->{3.7964212180894747`*^9, 3.796422098828706*^9, 
  3.796422446454365*^9, 3.7965689205671253`*^9, 3.796568969174734*^9, 
  3.7966637204438553`*^9, 3.796929346882167*^9, 3.7969294838176513`*^9, 
  3.79709870418412*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"vtx", " ", "mean"}], ",", " ", "perimeter", ",", " ", "area"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"getCentroids", "[", "vtx_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Mean", "@", "vtx"}], ",", 
      RowBox[{"polyPerimeterCentroid", "@", "vtx"}], ",", 
      RowBox[{"RegionCentroid", "[", 
       RowBox[{"Polygon", "@", "vtx"}], "]"}]}], "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.768388057511879*^9, 3.76838809541187*^9}, {
  3.7683881370849085`*^9, 3.7683881427248373`*^9}, {3.7964202445852427`*^9, 
  3.7964202460766044`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "polySides"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"polySides", "[", "poly_", "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"magn", "[", 
       RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"poly", ",", 
       RowBox[{"RotateLeft", "@", "poly"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7684745669984503`*^9, 3.768474589671419*^9}, {
  3.7684746445278215`*^9, 3.768474647207037*^9}, {3.7887948302784834`*^9, 
  3.7887948355804605`*^9}, {3.7887948702207613`*^9, 3.78879487491875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getPolyPerimeter", "[", "poly_", "]"}], ":=", 
    RowBox[{"Total", "@", 
     RowBox[{"polySides", "[", "poly", "]"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"magn", "[", 
         RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RotateLeft", "@", "poly"}], ",", "poly"}], "}"}]}], "]"}], 
     "]"}], ";"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7887947967422056`*^9, 3.7887948123574286`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getPolyCosines"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPolyCosines", "[", "poly_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "us", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"us", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"norm", "[", 
           RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"poly", ",", 
           RowBox[{"RotateLeft", "@", "poly"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{"#1", ".", "#2"}]}], ")"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"us", ",", 
          RowBox[{"RotateRight", "@", "us"}]}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7684113347082243`*^9, 3.7684114320050845`*^9}, {
  3.7684140800417213`*^9, 3.7684140814250245`*^9}, {3.768415041155322*^9, 
  3.7684150422533593`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getStarCosines"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getStarCosines", "[", 
    RowBox[{"poly_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "spokes", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"spokes", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"norm", "[", 
          RowBox[{"#", "-", "m"}], "]"}], "&"}], "/@", "poly"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#1", ".", "#2"}], ")"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"spokes", ",", 
          RowBox[{"RotateLeft", "@", "spokes"}]}], "}"}]}], "]"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.796633645793848*^9, 3.7966336764482765`*^9}, {
  3.796633708384869*^9, 3.7966337107226486`*^9}, {3.7966338548325834`*^9, 
  3.7966338920809097`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "@", "getPolyDoubleCosines"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"cos2x", "=", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"cosx", "^", "2"}]}], "=", 
     RowBox[{"-", "1"}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPolyDoubleCosines", "[", "poly_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "coss", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"coss", "=", 
       RowBox[{"getPolyCosines", "[", "poly", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", 
           RowBox[{"#", "^", "2"}]}], "-", "1"}], ")"}], "&"}], "/@", 
       "coss"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.788440445050663*^9, 3.7884404806355286`*^9}, {
  3.7884432250227776`*^9, 3.7884432484060297`*^9}, {3.7884437193805532`*^9, 
  3.788443738460474*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "@", "getPolyDoubleSines"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"sin2x", "=", 
    RowBox[{
     RowBox[{"2", " ", "sinx", " ", "cosx"}], " ", "=", " ", 
     RowBox[{"2", " ", "cosx", " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "-", 
        RowBox[{"cosx", "^", "2"}]}], "]"}]}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPolyDoubleSines", "[", "poly_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "coss", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"coss", "=", 
       RowBox[{"getPolyCosines", "[", "poly", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "#", " ", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"1", "-", 
            RowBox[{"#", "^", "2"}]}], "]"}]}], ")"}], "&"}], "/@", 
       "coss"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.789136150223707*^9, 3.7891361569111605`*^9}, {
  3.7891361953187943`*^9, 3.789136267791156*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getPolySines"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPolySines", "[", "poly_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "coss", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"coss", "=", 
       RowBox[{"getPolyCosines", "[", "poly", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "-", 
          RowBox[{"#", "^", "2"}]}], "]"}], "&"}], "/@", "coss"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.788443593244906*^9, 3.7884436133002462`*^9}, {
  3.788443646484438*^9, 3.7884436475244036`*^9}, {3.7884437709485545`*^9, 
  3.7884437728056645`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "@", "getPolyHalfCosines"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"cosx", "/", "2"}], "=", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "cosx"}], ")"}], "/", "2"}], "]"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPolyHalfCosines", "[", "poly_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "coss", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"coss", "=", 
       RowBox[{"getPolyCosines", "[", "poly", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "#"}], ")"}], "/", "2"}], "]"}], "&"}], "/@", 
       "coss"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.788440445050663*^9, 3.7884404806355286`*^9}, {
  3.7884432250227776`*^9, 3.7884433999091587`*^9}, {3.7884440351344967`*^9, 
  3.788444040878108*^9}, {3.7891638508021107`*^9, 3.78916385265913*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getPolyQuarterCosines"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPolyQuarterCosines", "[", "poly_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "coss", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"coss", "=", 
       RowBox[{"getPolyCosines", "[", "poly", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", "#"}], ")"}], "/", "2"}], "]"}]}], ")"}], 
          "/", "2"}], "]"}], "&"}], "/@", "coss"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7891515808777385`*^9, 3.7891516058227253`*^9}, 
   3.789163858300069*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "@", "getPolyQuarterSines"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"half", "-", 
    RowBox[{"angle", " ", "sines", " ", "of", " ", "half"}], "-", 
    RowBox[{"angle", " ", "cosines"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPolyQuarterSines", "[", "poly_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "coss", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"coss", "=", 
       RowBox[{"getPolyCosines", "[", "poly", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", "#"}], ")"}], "/", "2"}], "]"}]}], ")"}], 
          "/", "2"}], "]"}], "&"}], "/@", "coss"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7891638334036736`*^9, 3.7891638845862117`*^9}, {
  3.7891639355388656`*^9, 3.7891639584025545`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getPolyHalfSines"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPolyHalfSines", "[", "poly_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "coss", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"coss", "=", 
       RowBox[{"getPolyCosines", "[", "poly", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "#"}], ")"}], "/", "2"}], "]"}], "&"}], "/@", 
       "coss"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.788443623413192*^9, 3.78844366854156*^9}, {
  3.7884440427740355`*^9, 3.788444046124105*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getCircularity", "[", "locus_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rads", ",", "mean", ",", "sd"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rads", "=", 
       RowBox[{"magn", "/@", "locus"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mean", "=", 
       RowBox[{"Mean", "@", "rads"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sd", "=", 
       RowBox[{"StandardDeviation", "@", "rads"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<min\>\"", "->", 
         RowBox[{"Min", "@", "rads"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<max\>\"", "->", 
         RowBox[{"Max", "@", "rads"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<mean\>\"", "\[Rule]", "mean"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<sd\>\"", "\[Rule]", "sd"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<zscore\>\"", "\[Rule]", 
         RowBox[{"sd", "/", "mean"}]}]}], "\[IndentingNewLine]", "}"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.767011845478818*^9, 3.767012039900096*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"by", " ", "zscore"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getMinCircularity", "[", "loci_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"l", ",", "imin"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"l", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"\"\<zscore\>\"", "/.", 
          RowBox[{"Quiet", "@", 
           RowBox[{"(", 
            RowBox[{"getCircularity", "/@", "loci"}], ")"}]}]}], ",", 
         "NumberQ"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imin", "=", 
       RowBox[{"First", "@", 
        RowBox[{"First", "@", 
         RowBox[{"Position", "[", 
          RowBox[{"l", ",", 
           RowBox[{"Min", "[", "l", "]"}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"[", "imin", "]"}], "]"}], ",", 
        RowBox[{"centerNames", "[", 
         RowBox[{"[", "imin", "]"}], "]"}]}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7685489464890156`*^9, 3.7685489511741047`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hyperbola", "Subsubsection",
 CellChangeTimes->{{3.7711909595622473`*^9, 3.7711909656650853`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hypC", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"a", "^", "2"}], "+", 
    RowBox[{"b", "^", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hypEqn", "[", 
   RowBox[{"a_", ",", "b_", ",", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "/", "a"}], ")"}], "^", "2"}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y", "/", "b"}], ")"}], "^", "2"}]}], "\[Equal]", 
   "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hypGrad", "[", 
    RowBox[{"a_", ",", "b_", ",", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"-", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"b", "^", "2"}]}], ",", 
      RowBox[{
       RowBox[{"-", "y"}], " ", 
       RowBox[{"a", "^", "2"}]}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.769280622885008*^9, 3.7692806972690363`*^9}, {
   3.769349455928347*^9, 3.7693494668299193`*^9}, {3.7693495293910646`*^9, 
   3.769349593030639*^9}, 3.7711909288026023`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"hypParam", "[", 
    RowBox[{"a_", ",", "b_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x", "=", 
       RowBox[{"a", " ", 
        RowBox[{"Cosh", "[", "t", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{"b", " ", 
        RowBox[{"Sinh", "[", "t", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "x"}], ",", 
          RowBox[{"-", "y"}]}], "}"}]}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7692805119987197`*^9, 3.7692805550610733`*^9}, {
  3.7692807046762266`*^9, 3.76928070896376*^9}, {3.76928077921259*^9, 
  3.7692808080524106`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Formatting", "Subsubsection",
 CellChangeTimes->{{3.765707295618081*^9, 3.7657073038969336`*^9}, {
  3.7663965281221952`*^9, 3.766396528913083*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nfn", "[", 
    RowBox[{"v_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"ToString", "@", 
    RowBox[{"NumberForm", "[", 
     RowBox[{"v", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "+", "2"}], ",", "n"}], "}"}], ",", 
      RowBox[{"ExponentFunction", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{"Null", "&"}], ")"}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nfne", "[", 
    RowBox[{"v_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"ToString", "@", 
    RowBox[{"NumberForm", "[", 
     RowBox[{"v", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "+", "2"}], ",", "n"}], "}"}], ",", 
      RowBox[{"NumberFormat", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{"#1", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"#3", "\[NotEqual]", "\"\<\>\""}], ",", "\"\<*10^\>\"", 
              ",", "\"\<\>\""}], "]"}], ",", "#3"}], "}"}], "]"}], "&"}], 
        ")"}]}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nf", "[", "v_", "]"}], ":=", 
   RowBox[{"ToString", "@", 
    RowBox[{"NumberForm", "[", 
     RowBox[{"v", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nf1", "[", "v_", "]"}], ":=", 
   RowBox[{"ToString", "@", 
    RowBox[{"NumberForm", "[", 
     RowBox[{"v", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nf0", "[", "v_", "]"}], ":=", 
   RowBox[{"ToString", "@", 
    RowBox[{"IntegerPart", "[", "v", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "padn"}], ";", 
  RowBox[{
   RowBox[{"padn", "[", 
    RowBox[{"n_", ",", 
     RowBox[{"pads_:", "3"}]}], "]"}], ":=", 
   RowBox[{"ToString", "@", 
    RowBox[{"NumberForm", "[", 
     RowBox[{"n", ",", 
      RowBox[{"{", 
       RowBox[{"pads", ",", "0"}], "}"}], ",", 
      RowBox[{"NumberPadding", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<0\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
      RowBox[{"NumberPoint", "\[Rule]", "\"\<\>\""}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringJoinCommas", "[", "strs_", "]"}], ":=", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"Riffle", "[", 
     RowBox[{"strs", ",", "\"\<,\>\""}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7657066533601804`*^9, 3.765706668193533*^9}, {
  3.7657072593854237`*^9, 3.765707314802787*^9}, {3.7675226251178913`*^9, 
  3.7675226433675165`*^9}, {3.76848152596416*^9, 3.768481587212007*^9}, {
  3.768481675307603*^9, 3.7684816887972775`*^9}, {3.7686448404724393`*^9, 
  3.7686448407576475`*^9}, {3.7962471114099903`*^9, 3.7962471492318916`*^9}, {
  3.796633318743474*^9, 3.7966333983547354`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "txtSubscript"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"txtSubscript", "[", 
    RowBox[{"txt_", ",", "subscr_", ",", "style_", ",", "where_", ",", 
     RowBox[{"offset_:", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "last", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"last", "=", 
       RowBox[{"Last", "[", 
        RowBox[{"Characters", "[", "txt", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"txt", ",", "subscr"}], "]"}], ",", "style"}], "]"}], ",", 
        "where", ",", "offset"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "txtSubscriptWhite"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"txtSubscriptWhite", "[", 
    RowBox[{"txt_", ",", "subscr_", ",", "style_", ",", "where_", ",", 
     RowBox[{"offset_:", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "last", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"last", "=", 
       RowBox[{"Last", "[", 
        RowBox[{"Characters", "[", "txt", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"txt", ",", "subscr"}], "]"}], ",", "style", ",", 
          RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", "where", 
        ",", "offset"}], "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.766141396806887*^9, 3.7661414413194227`*^9}, {
  3.766141471624304*^9, 3.7661415049046497`*^9}, {3.7708056409082184`*^9, 
  3.770805646251934*^9}, {3.7708058525811167`*^9, 3.7708058619318666`*^9}, {
  3.7802558648712654`*^9, 3.7802558900869026`*^9}, {3.780255925880243*^9, 
  3.780256006176154*^9}, {3.7802561281201253`*^9, 3.7802561350801506`*^9}, {
  3.7802562700006027`*^9, 3.7802562765213366`*^9}, {3.7966285484783792`*^9, 
  3.7966285626424847`*^9}},
 ExpressionUUID -> "c46d138c-1410-4a38-8274-4bd099f28ca5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"txtSubscriptWhite", "[", 
    RowBox[{"\"\<P\[CloseCurlyQuote]\>\"", ",", "1", ",", "40", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotRangeClipping", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.780256089843749*^9, 3.780256114552285*^9}, {
  3.780256170306579*^9, 3.780256173943449*^9}, {3.780256255783104*^9, 
  3.7802562955702972`*^9}, {3.796627348981947*^9, 3.7966273659436607`*^9}, {
  3.796627637538806*^9, 3.7966276383356833`*^9}, {3.79662856554276*^9, 
  3.796628565944686*^9}}],

Cell[BoxData[
 GraphicsBox[InsetBox[
   StyleBox[
    SubscriptBox["\<\"P\[CloseCurlyQuote]\"\>", "1"],
    StripOnInput->False,
    FontSize->40,
    Background->GrayLevel[1]], {0, 0}, {0, 0}],
  ImageSize->Small,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{{3.7802561096076956`*^9, 3.780256149152652*^9}, {
   3.780256257070141*^9, 3.7802562966762743`*^9}, 3.7802592615595503`*^9, 
   3.785864292981022*^9, 3.787073113604002*^9, 3.7884399249058943`*^9, 
   3.7884399610502224`*^9, 3.7889833651757574`*^9, 3.789459069171836*^9, 
   3.789459186416185*^9, 3.7903202076901217`*^9, 3.7913250149366617`*^9, 
   3.791325890931269*^9, 3.791484363850839*^9, 3.7921432029684935`*^9, 
   3.7921863145940523`*^9, 3.7927098268166924`*^9, 3.7959581841533337`*^9, 
   3.7960704821168685`*^9, 3.796115560927058*^9, 3.7961274038618727`*^9, 
   3.796222031685294*^9, 3.7963014376843557`*^9, 3.7963163606055455`*^9, 
   3.796420185439196*^9, 3.796420394002361*^9, 3.796422099101011*^9, 
   3.796422446757554*^9, 3.7965689208888097`*^9, 3.7965689693978343`*^9, {
   3.7966273436621723`*^9, 3.796627366165041*^9}, {3.7966276311169586`*^9, 
   3.796627638731624*^9}, 3.796628566269816*^9, 3.796663720940627*^9, 
   3.796929347129491*^9, 3.796929484005143*^9, 3.797098704416499*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "ellLabel"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "ellLabel"}], "=", 
   RowBox[{"{", 
    RowBox[{"inward", "\[Rule]", "False"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellLabel", "[", 
    RowBox[{"a_", ",", "p_", ",", "lgt_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"p", "+", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "@", "inward"}], ",", "lgt", ",", 
       RowBox[{"-", "lgt"}]}], "]"}], "*", 
     RowBox[{"norm", "@", 
      RowBox[{"ellGrad", "[", 
       RowBox[{"a", ",", 
        RowBox[{"Sequence", "@@", "p"}]}], "]"}]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "ellLabelb"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "ellLabelb"}], "=", 
   RowBox[{"{", 
    RowBox[{"inward", "\[Rule]", "False"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellLabelb", "[", 
    RowBox[{"a_", ",", "b_", ",", "p_", ",", "lgt_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"p", "+", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "@", "inward"}], ",", "lgt", ",", 
       RowBox[{"-", "lgt"}]}], "]"}], "*", 
     RowBox[{"norm", "@", 
      RowBox[{"ellGradb", "[", 
       RowBox[{"a", ",", "b", ",", 
        RowBox[{"Sequence", "@@", "p"}]}], "]"}]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "ellLabelTxt"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "ellLabelTxtb"}], "=", 
   RowBox[{"{", 
    RowBox[{"inward", "\[Rule]", "False"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellLabelTxtb", "[", 
    RowBox[{"a_", ",", "b_", ",", "p_", ",", "txt_", ",", "lgt_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Text", "[", 
    RowBox[{"txt", ",", 
     RowBox[{"ellLabelb", "[", 
      RowBox[{"a", ",", "b", ",", "p", ",", "lgt", ",", 
       RowBox[{"{", "opts", "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "ellLabelTxt"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "ellLabelTxt"}], "=", 
   RowBox[{"{", 
    RowBox[{"inward", "\[Rule]", "False"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellLabelTxt", "[", 
    RowBox[{"a_", ",", "p_", ",", "txt_", ",", "lgt_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Text", "[", 
    RowBox[{"txt", ",", 
     RowBox[{"ellLabel", "[", 
      RowBox[{"a", ",", "p", ",", "lgt", ",", 
       RowBox[{"{", "opts", "}"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7760709074737153`*^9, {3.7760709516485777`*^9, 3.7760709791536136`*^9}, {
   3.776071026056241*^9, 3.7760710497947707`*^9}},
 ExpressionUUID -> "d9ea915e-9b9c-4418-afd6-539771301889"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "labelPoints"}], ";", 
  RowBox[{
   RowBox[{"labelPoints", "[", 
    RowBox[{"pts_", ",", "prefix_", ",", "style_", ",", 
     RowBox[{"offset_:", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"txtSubscript", "[", 
       RowBox[{"prefix", ",", "#1", ",", "style", ",", "#2", ",", "offset"}], 
       "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "@", 
        RowBox[{"Length", "@", "pts"}]}], ",", "pts"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "@", "labelPointsWhite"}], ";", 
  RowBox[{
   RowBox[{"labelPointsWhite", "[", 
    RowBox[{"pts_", ",", "prefix_", ",", "style_", ",", 
     RowBox[{"offset_:", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"txtSubscriptWhite", "[", 
       RowBox[{"prefix", ",", "#1", ",", "style", ",", "#2", ",", "offset"}], 
       "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "@", 
        RowBox[{"Length", "@", "pts"}]}], ",", "pts"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "ellLabelPoints"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellLabelPoints", "[", 
    RowBox[{"a_", ",", "pts_", ",", "prefix_", ",", "style_", ",", 
     RowBox[{"lgt_:", ".33"}]}], "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"txtSubscript", "[", 
       RowBox[{"prefix", ",", "#1", ",", "style", ",", 
        RowBox[{"ellLabel", "[", 
         RowBox[{"a", ",", "#2", ",", "lgt"}], "]"}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "@", 
        RowBox[{"Length", "@", "pts"}]}], ",", "pts"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "@", "ellLabelPointsb"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellLabelPointsb", "[", 
    RowBox[{"a_", ",", "b_", ",", "pts_", ",", "prefix_", ",", "style_", ",", 
     RowBox[{"lgt_:", ".33"}]}], "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"txtSubscript", "[", 
       RowBox[{"prefix", ",", "#1", ",", "style", ",", 
        RowBox[{"ellLabelb", "[", 
         RowBox[{"a", ",", "b", ",", "#2", ",", "lgt"}], "]"}]}], "]"}], 
      "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "@", 
        RowBox[{"Length", "@", "pts"}]}], ",", "pts"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7708055859497566`*^9, 3.7708055992024937`*^9}, {
   3.7708056489068108`*^9, 3.7708057835315375`*^9}, {3.7708058376599927`*^9, 
   3.7708059166047144`*^9}, 3.7760711239777727`*^9, {3.7966285822151847`*^9, 
   3.796628590860077*^9}},
 ExpressionUUID -> "1a3b7f12-670d-4e64-be3c-880077252b4d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"export3", "[", 
    RowBox[{"name_", ",", "plot_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"subdir", "=", "\"\<pics/\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"subdir", "<>", "name", "<>", "\"\<.pdf\>\""}], ",", "plot"}],
        "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"subdir", "<>", "name", "<>", "\"\<.eps\>\""}], ",", "plot"}],
        "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"subdir", "<>", "name", "<>", "\"\<.png\>\""}], ",", "plot"}],
        "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "eccentricity"}], ";", 
  RowBox[{
   RowBox[{"eccentricity", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", "/", "a"}], ")"}], "^", "2"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellPerimeterRamanujan2", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "-", "b"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"a", "+", "b"}], ")"}]}], ")"}], "^", "2"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Pi]", 
      RowBox[{"(", 
       RowBox[{"a", "+", "b"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"3", 
         RowBox[{"h", "/", 
          RowBox[{"(", 
           RowBox[{"10", "+", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"4", "-", 
              RowBox[{"3", "h"}]}], "]"}]}], ")"}]}]}]}], ")"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellPerimeterRamanujan", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"\[Pi]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", 
       RowBox[{"(", 
        RowBox[{"a", "+", "b"}], ")"}]}], "-", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", "a"}], "+", "b"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"a", "+", 
          RowBox[{"3", "b"}]}], ")"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellPerimeter", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ecc", "=", 
       RowBox[{"eccentricity", "[", 
        RowBox[{"a", ",", "b"}], "]"}]}], "}"}], ",", 
     RowBox[{"4", "*", "a", "*", 
      RowBox[{"EllipticE", "[", 
       RowBox[{"ecc", "^", "2"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellArea", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"\[Pi]", " ", "a", " ", "b"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"polyAvgVtx", "[", "poly_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Total", "[", "poly", "]"}], "/", 
    RowBox[{"Length", "@", "poly"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.796285888723101*^9, 3.7962859125433283`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ellipse Invariants", "Section",
 CellChangeTimes->{{3.7660460012127438`*^9, 3.766046008589987*^9}}],

Cell[CellGroupData[{

Cell["Constant Perimeter (Darboux, 1917)", "Subsubsection",
 CellChangeTimes->{{3.7659623547818885`*^9, 3.765962371013446*^9}, 
   3.765962459082839*^9, {3.7677325634537053`*^9, 3.7677325641328864`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
om5vclX/Mb0gLqPfb+rZr0QeN4WymN9PO4pyheSWB0LKKXzoSV6b9/HymuGm
sn/eP7u9yGo4bLkbXdSuTUaYtfkRN9YMVmraioScfv9Zt5N5rmFl4oO2WEhz
lnfFKLhf/lrWzkl+h6uIPD7dRlNGvJNrgMQkZMwc5jzOaufzD2XmBWweaa3G
GTP1sWuvRRXxeL1CKlNeHJzZhavbiriRrev5LzwuV9j5/j8kV7Mcv+VtYdv2
npJ5f5GFvBRXWbCy7YYnieU8dlZn1SQ9Wj3GRrbxj3F2ntufp9a0aZc6UW12
0MnFzkYy3FXSnU9Ww2zxuXdZhHaaSUVIme9Pzu8h2fjyOCMrtyuxtbx+gaH0
2FMOCtyd2jDyC28nE/jXi7+doAij4N2WQWoSPznEnUdcSs5quPed7zXtdfjo
Je/3DjZRbSwjlzWY6huYVsnrStZlkecXjtLl7J36II+DoUVtD8mZtSUB6zW4
3zeE5AAIIhatKj3owGRdcRExKZUu49YeOwcAAIDviERiZ1//ARBwKIOQEXJx
w4SeurIYjJiSkc2kjWcCvhfXtmVJzV+gpN6b1UumWTG5ms3Kh3G8dqPl7DIx
/dXhGQ6GUhgJJUuP7ffjKzo0akQpecEnZ7uYSLPfiaSh09Ttt0MzK6l8ugND
agoibqx15txHKujbzD8bQ+C5fJnFiPPtxR2SjzofXcWPHh/koshbW8f1UBLH
dDYloyF7HseXtufECVKdH359dV9Nrq0o6HSdeyGOyPNGqqIOjpTBco6O5pCj
Hwvbe3nXDkeIvTi/r25jT/5OI46V7zlklX9eO+dmTPwn34n2nIbkGOn+S0+G
5PD4uULJuWHnVgzEce2mnIX9vIdpQrNo7v+F5KJy3QbNf5LZpmPMSLvnZSWP
5f4K6LPkdlwpr98A5Gz//ZPsOSWiChaTtt+JqxCW0vx/oeR/vLR6hLli508s
clMytF9/43MeDz2lecEi54dfXTOYcx6Ia/Ucuv9TBa+LdiJI4WNvBZFm0whd
twcUtPMUPh+gCLPk84Gx+th/H+FOJCmj4jBpzbM03pZVaBmrIHDjcAMlzpvs
PvV4cAaB12scWhpxZsEILc7edRk56+LXyjbvFMIgZd2f3+zAQ0gOgABi1pRE
31xio4bBYGVVR2wIENrHwgAAAADw90BZNflf7++d6WisICaGUzXvP2PXtdB0
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
uauDEHxutIOhrnKtuFJIrraE5FDn3TP6d+/x3w64bm3qlc6fS0ck0itkW715
h27/6R/rN3jkkl1XXsZ/x7eZ6LapjZ3Vx1441X/feNs3TsVpsvgXp5f0rpZP
aWRVCsnxX8mjUxuSlzdT+uT1ctu2nuiktr358R3UqFFDBAAAAEA1t27dyupL
+CwnjX95afXv9XJ9qK/SNS3t+Pvux6ouLydJCL++qIpySF559UN6kmcNQUh5
fWlKPYN0KXluu7H/eMZ+c8sVeUrQrQ1/OJbMoSPStWkyYvuNABXKaL+aIJdE
PNzQNU+6b2eemgtvhqiakUtjXDf/Vq24oizZuN7odTf8M2Nff5RY98OzulSy
1P/2phrfi0n+eiuuBX+X5vYK4sgnR2d3rWT88VX08zp0m3naR7Xe7oIsKfTR
zkGK7kIauoZWw5xC1Wa45bE+19YPLauoBNcvaNNu8wPVuzpIHq2rZa6vpfRN
Nhm43S0sQa0rgwW5LPDSlLoWOulOQFlNW8/Itn63nQ++3wSK2Gt/n/IFP7aF
KtB76bkXkSqeqOQhzhtHtrRS6raiZ9d8yIEnCeo8sj+D1Ibka0bUNlYuJM9t
XWPcfo94PvqfGCE5AAAAoDpC8jfyGO9zqwZVVRS25S5db/zupxl1LVCQJIRd
mVdeERdoamu23+sjIyTPGoJcHOO6oomxhnKwql144PYHYUnfFq8J0c+Pze9W
uaCeSNe8Yq8/Dz9RsfHuV76KTBLtuqFF4fTfzrpTLwQkqFq/HO+xf0zt0orV
8MwrDlpz7kVsdq7OTHh5Zmn/WkVzaImymkXZzlvvhSV+z3pLWfjjg392LZtL
6VUsKzSffcxTxaxQlhzlcWxstbRtNbUNSnXe+0JtmmzLkwLu7Z7YWDFlo523
dN251yNV/uoIQccG5NFLFzbbTP3nZXRm9Dn6fgRBFua8tH1xfQ11Ssl1jcyr
dRj7j+d3mzCTBJ2Z7lDUXHGOzeE498jTMFVXMo5zPzalq71SRi4yr9Fu5rlX
VDNnLkEcdG/nhFbpFu3QL+HQdYtrbGY8GQV1QUgOAAAAqI6QXEh4eXnFsNom
aV0LDEvX7rvjgcq3jYIkPuT8zKKKTERL22LK1Vgy8iwjCInPdnYppaOpHFMV
c1x2I+BbCoEFcdDtDcMcrU10RbrWjf7YcsUvc1Y4k6fEPd7U2kwn3Zez2MRT
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
e9I75v8KegS5OCbgwcmlvWrnFb1bANnSrt6g9Zf9f/XeVWoekr95E+3+9+Rm
Nnn1tTREBVpN2HvPP/7/bkIFcXzQk7Orx7YsY2WY2ofcskSDQX/uV6uE/C15
7L11LSsU0v30yqZI0/F77wZ86dkONZMY6Hr2wNrFCxbMnztr+pQJ48aOHDao
Z9u65Quba3/63lIXTjUvUqF5tyEjxk6YNG3WvAVvLVy5aedVn08bNwEAkMUE
eUr48wubxrdrVL3pkIXH7r+O+8yFhDwl1v/uvhmdy1gYvP+tM7RuO3aXS/C/
N9iEOhAkkY8PT+5U2aZu19n7b/lEfaaRiiBPDn50/K9e9UrnNHh3WZOzbL2h
a04+Dk7gWQEAWUae8vrayuEtCpnqf3qzpVepzcij7tm94cqb1InKhKCHJ5f+
0bSUlYlOzvxlO4xdffLey9CYj7VVqZ3Qol4/ubr3zy4OBbV0cxWu3G7k1tsk
5NmBOOjcjKr5c2grtVwxqDp+t2ugUkMHabzHofGNyqSWkeeqPWDlRc/oHx7m
yJPDnDf3rVw0R+p+6udrMGm3s0+kolAitU4iKsj7/tkts/rUqViqvOPABUdc
XseI5eIw5y2DG5fJ+a4zeY76ozemdlJ/u5FMHON3d/fMTpXt7VpP2XrLP4Hu
fOpFnhzy6MTioXUK59YTaRnkd2g9afcNX8WAp65MFB/u7377nw2Teje0LV+h
ybClxx+GiGWS+ADn7cMq5k29BdA0NCv5xxHfd7M9glwcH3D/4ATH/LpF6s46
75ecxbXYgjja79auSY52+Qz0jS0qtZ9ywMUvKm2nUt9dbIj3g/Nbp3StmVek
oamVq3DFBp1mHrofmsRhqvYh+Rt59OPD07vXLGymr2Vm3WzCpnNPguPTpvQE
WcrbA/fp5d0LhjQsld9QZGBmVaZmt8lrzjwJVr8Hn2XBN5Z3r1fEWE/px0HX
pGDridvuvFKXnjAqEAKvLxnQwPLTKzRNfSPTvFaFPlHAMk9Oo/Q1D5o6+ewb
zbsaltXvAwCAdOTJ4U+dVgxpW6vRwIUnn4Z/uXhYLo7zv7FlSC2L9z9yWgZG
Nn2WXQ+gwZiakkU+3jmytnXV9rOOPAxNzODGWxLssnNiq7L5DN5fsZlVajv9
wN2A+B/21DcAfEoW5X1568Ru9a2tchnqaOsY5rKyruDgYFfcqpZj//1uX27h
nV0I0qQwjytbZ/SpU65onjzm+R1aDpm1etexi7ddHjx6/Mjl5sV/diyZ3K9J
+QJ65tZVmg2ef8CFhDy7EKLvLG1ayky55YpelX4bbvjEpPUJEAdeX9avciFT
kShH4ZYz97oEJmZJpCyP97u4ekC9isVzGWhomJdpO2bJztPX7t53c3O9d+PM
3k1Lpw5qW7OsbaWavaZuuuIZkRY5iQPv7pjSqUYJEwOdt9cMrSesP3z1ruvd
K8c2TPutun0Zu27Tdt55xUWEGhIk8f4uRxYNa1auSG6jHDkLV287evnek9ed
7z9wc7116dT+NfPG929dx7501Wbd/txx9WXc+xOtXBwfeHfXmBY2+U1S62RK
dpq2/7Lz/fsu109smtLFNke+0k0XnnmlDg29BXlyhPfVbRPbOBQxNzPJU6Xd
2OW7zt689+Dho/u3r5zas2r2sHYOBTW0jHIXta/jOHr5yUehVPu8o/4heeoc
SIjLvum9GpbJb6RboHyzIbO2HLtw+77bw/tvz1QHNi8c3bVu8bxmhrkKla7c
bsife648D1XXap9E/6ubR3WoWzq/mb6OppaRuVWp+t1m/X3rVYxalbxnQB71
3GnjjP6dW6XXrufAETMWLFuezrK/5k4dNbBDuj9s33XAjPXX/LN7E3YAwM9F
kMV5X1o3xrFGyz6rrr9W4b5bkMQF3NrQu+S7lVBEGpq6ua07bXKLzT6z3mpI
kEvFSfHRkRFhIUEBr/19vb083Z88fODqfOvqeacTJ06cPHPx+pPgr69xkaf4
nRhbrUSJjiuv+MWp0DpFkIY5bx3cuJTp+1XydHLa9vjzoFso620ByDqCJNr/
4fkdC8f1/63Tb/3HL9zhdOGfjaM6dPt5QvJUcmlSuM/dY6sm9m1aq4p9mVIl
i5eyq1a/Weu2bZrUtCtbslBJ20p1WnYev9HpUeCv3hEgexFin20bXNbcSCkl
NyzcfulZz8h3P62yBK8jExqWyaMt0sxZa8Cqi55RWRiQSKKen103pmv9avY2
xQrkyW1dsU6zFi0a1a9TqXgp2wpVG/82bvUxF7/Y9A+kyeP97h5YNKBDgwo2
RfIVsi5XvU7DBnUqVqhoX6vnpI2XPMIJH9WWPCXa997RlWN/a+pgV7pIgcKF
ileq1bh586Z1HBwqlChTuU7LPhPXnXoQEC9Pv1G83529c/rXrVK+ZJH85oXt
ajdt2rhO1ZKl7Gu0nLbHLVxt8r13DVXcTqwc07W2g12pksUKlq9et3mr1s1q
V7AualnE2ta+er3mb9/gSdfX8RyiCtkhJH+TmpNHelzcNK1Hq7r2ZUoULFW+
Qp2mLVo2qVvZtmjR4sVt7Bxqtuwxesneq+7Bceq9upI87vX9szvmj+3dtX2H
gRMX7br8NDA2RVCXrxAAAL8oQRz19MS87nWL2XUYv/nS4xcBEfEZhqmy5Iin
x8bVSmukpqOfo/G0yyGk5N9KkMYHPbtxfMvKpX/NmzV10vjRfwzs3b1zm2YN
alcrV8w89WPWzFmi8ogTfl99qZfwfFvfgjmK1h259dydZ76hcWJZhv9E/Iuj
M1rYWaY9DVes0fBt1/1/go4GAH4a4lCX3WPbdPq5QvL35NKkqECPexeP7lgx
a/SANs1TtenQecTslbtO3Hjs//+tdaH+pH4nRlYqnK7lionjlMOPghJlb6Th
9zYMcSiaUyQyLOA4Y69rFpWRK5NEeLtcOLh58ZRBnVq1cHx7ALYbOmXRhoPn
XbzDkz7TalqeFOFz/8KBtbOH9ujcsnnz3waN+WuHk+vLCPVrcYBPCLLk2GDP
u2f3r5s3fnC31DNOy47dBkxdvu3wlQc+n5vhkL+9DfC5d3rXyunD2jVv7tii
5YApy/acfxSifteKqZ2CQjzvntm/Zv74wV1TT6eOrdt2Gzd33e5/Lt/3Ck34
yX4//rtsEpK/I08K93lw5fC2pVN//61j63e/lX3/mLp0y6G3dzyvo5LUOx4H
AABqSx7t6bS4b4XUGzQzy0pN+8xYd+JhSEaFP0JyhOfhcSU/3OxpaOrnKTv5
UqTaXRxnF9JoD6eFvSv93+otChpauW2qT70Q/LWfsNz7QHcbk9SnvPPZ1O70
+4KjrgFx4gxuwIUUr6Ojm9iZps2AmDcYtfaaH40aAaiN5MDbW0e0bNdyyMHH
cdwHQ+0JoTfmtytpZqBUTJ674rCdt/1i4v3OzWtbKb++psiwUs+l5zwixfzY
Asgq2SkkBwAAyAySgLsbRzuapN23aVnYNJ28zz02g9s0aXzYvQ1d9BRbGRrV
WvOQe7tvJI31ub5tZo8a1atXq1rFoZK9XZkSBXIbK91N65gWqz/kiPdXt/VM
uDm3lMnHZ7z1qw3d9zA0MaN/JsZlY5c6JRQLqxTsMH73g1A1aDEJAKmEWK/T
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
K2GVt4Rtlbr1G9SqUauKTYWqtZt0Hjpn25mHAXFimfLqnEJC4EOn9eP7t6tT
2aZwkRI29lVq1K5ZyaFm7Ra/z911wyuS5tXqTJAnR/o6H1s1qV+L+tXsbMuU
qFC1Rv0G9WtWKlPSurht5ZoNWncdOHXl4ZvPw5JYeBUAAAAAAADAL0Ea7ffk
ptPfmxZPHta/b5/evXsPmvrXut2nrj96FZkk/fe+KfLkaP+nN0/tWjlt9LB+
vXsPnzRn/aFLj/zSmndAvQnS5JjA584XDm9ZPmv8729HvHffIcPG/7Vh/8kr
Ls9fRyUTjwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAD4Bf0PoYGTvw==
    "], {{0, 270}, {1975, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{447.26666666666665`, Automatic},
  ImageSizeRaw->{1975, 270},
  PlotRange->{{0, 1975}, {0, 270}}]], "Input",
 Evaluatable->False]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJyM/QnURudd1/1yzoFaVCidPAVkHooWxMMgitMrKqjoUaCKszLZipD0bRPS
pHNo06ZthiYdaJqkTelMmzSdUgoiUwuFtlJKEQdwRBFEXxRfzuG49HzP/Vn3
b+0+SVjnWuvZaz/Xvva+9/D/Xf/5f33GN176tX/v//pRH/VRT3hgm6/9hiv+
xOMf/w1Xft1H989XXHnZt3zj/62dr/y/fNRHfWx//7/9L//yL/9Df+gP/cE/
+Af/wLl92Zd9Wf/+4T/8h9t+6Zd+af/+kT/yR/74qf3RP/pH62/8n/pTf+pP
/+k/3YD2/+Sf/JN/4k/8ifr/2B/7Y1/xFV/xp06to3/mz/yZr/7qr/5zf+7P
tf8Vp/ZVX/VVf/7P//m/cGp/8S/+xf/nuf2lv/SXvu7rvu6v/JW/8lf/6l/V
34kN/sqv/Mp2/vJf/st/62/9rW/5lm/5a3/trzXgG7/xG7/5m7/5r//1v974
v/E3/kY9f/Nv/s1v+IZv+KZv+qa2f/tv/+0Gt9Xz9/7e3/vWb/3Wb//2b3/c
4x73v5/a4x//+CecWjuXXnrpt33btzXg7//9v+9Q20suueRbT61Dl57a5Zdf
ftVVV11xxRVd5B/8g3+gv1Pa6cr1tN/4Tnz8uXWdDrlI/z7xiU+88sorn3pq
V57a05/+9GtO7eqrr37a05725Cc/uUPf+Z3f+exnP/s5z3lO2+c973nXXXfd
9ddff+ONN77sZS971ate1bbO60/tulO74YYbbrrpphe96EUveclLvuu7vuu2
22777u/+7te+9rWvec1rXnVq7dT5yle+sv477rij7atf/eqXv/zlnXLrqb3i
Fa+o8/bbb+/0/u1oPY3vxDe84Q133nnn3Xff/da3vvVtb3tb+29+85vvuuuu
7/me7+loZ7l+237xe07t9a9//ete97q2nVt/+284tXYa086b3vSmN77xjW95
y1u6oKu1rbPrOKvWgPqNecc73vEP/+E/bFuP/m7m7afW/bT9vlNrp/vslHbe
emiucM8997zzne/83lN717ve1fjv//7vb/uuU/uBH/iBto3paL/VIT/Xflj4
0lMDilr7X/zFXzy81NN+lP9HTg1kQkFIAZx2+jeItQ0jf/LUQke0HS5CQRgB
n7ZR+1edWhgBiq/5mq/52q/92qDxtacWNOps24mNaSdoBIS/83f+TjuPfvSj
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
QUaZmjbSdv6Et5iCcqPtLeqUruiijrdMzeJnAnvXP//5z+81PhLL6MdjGQL1
ZUc2pYLKBg1F2xIe5vztMR/1qEeBRq+KhFM34hdyheQ7/Nx9mx3fe9RVWHzU
NW6yIoen0vGGS223Nxytl9hyH8h4++ZLvVziFmgw0iJ7rgrF2Wgf2If+fRO3
zoaYAqjCRbpbukYbRZyU3r1eln/x0qTpxlgpuUsgoNcSnwUm0myTnXj6zqzw
OcQnSvHoReey9pREWMU2Aerz67X0K5XTQUTSp3BEtQwaSitoWMNCxYolvDbK
77tstu2cS9DQs4mF6qbLiCzbJPvB9s9Eqc///M//zM/8zGap1flv/+2/pYaH
iPXIgIu1g5EAKJ4qZbypbr36YmTfrp7EHtFG+XdcjViDXT3NYlF/XQYUSVM9
2gL1m8x2GFUgVl9lG4inXsbWD1yNHoGMquNP69JBE9JXGGxbuNbdxsiXwZIf
v1DbMBErvLTKzWQ3HBEuk47w/5ZLH+SzgfhCR86sVdyTqYr4BD7LHHzdfYsn
nOavucJXzHPKiJx3fOFa3vcZZAsR61ZzJr2eg7Wqj3RXXxjVtOkzlWmpGdRt
2gRD00JwcY05LLj51H/eYICicVssTm0WWq5w4tA1ttIZNUMQvHwcLKbr5StF
9uMmNG7QIKXPTivpia4tNLGPCPD4i6jCRl/sYXWfCR0xjnaA5jNoaHC8dmPX
ijkLx1XKIGX8V3/1V1udFjGqiLTiDsn/AsKfeTX60+5Np9qwwFq7AODujeVB
haLm2du11uXCbsZYttk0SJg65+LXzLOtaV8JO+1Rq2wc5NMvwkJsQkXoNkxl
P9M1woWFbkpD9M9etSpGZiJvF2F4ejHm7DhNuDzgPgKNBa6/7gHG6emYWMUY
zitxLSaKPjKOsHEWFZkfFo9o6Ov3z47RGS6/Hp8Czq/N38eRBxerWHiePMun
A4tQELHo64mMTUCEuA4pfmf7gPUEl9C0cNzVxaV0E5bEGTqgrTPYds0abVDb
ecll7mAQylKpnyCwsBEo2Pw7iD5Tcjvuib7kS77kcz7ncz73cz83dHzxF39x
yIrU//RP/3QNXteJ72wiI+aQIfcjH/kIO9XPX7XATsVIa5ZkxNse8TOUUW2g
XnhMn4aRPsIgel2uuq3eECkdQ1EW2w5mqllImB9d3EHL1685zw4ZLh75yEdq
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
a9D4UzlU33QNVmNep7bJxv8PKJv7Ww==
    "], {{0, 326}, {265, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{167., Automatic},
  ImageSizeRaw->{265, 326},
  PlotRange->{{0, 265}, {0, 326}}], "\[IndentingNewLine]", 
 RowBox[{"Jean", "-", 
  RowBox[{"Gaston", " ", "Darboux", " ", 
   RowBox[{"(", 
    RowBox[{"1842", "-", "1917"}], ")"}]}]}]}], "Subsubsection",
 CellChangeTimes->{{3.76773259557681*^9, 3.7677326796728935`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"deltaA", "[", "a_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"a", "^", "4"}], "-", 
     RowBox[{"a", "^", "2"}], " ", "+", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.767518908992114*^9, 3.7675189314570284`*^9}, {
  3.76751906076943*^9, 3.767519062896768*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "darbouxP", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"darbouxP", "[", 
    RowBox[{"a_", ",", 
     RowBox[{"b_:", "1"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a2", ",", "b2", ",", "delta", ",", "per"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a2", "=", 
       RowBox[{"a", "^", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"b2", "=", 
       RowBox[{"b", "^", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"delta", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"a2", "^", "2"}], "-", 
         RowBox[{"a2", " ", "b2"}], "+", 
         RowBox[{"b2", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"per", "=", 
       RowBox[{"2", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"2", "delta"}], "-", "a2", "-", "b2"}], "]"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a2", "+", "b2", "+", "delta"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"a2", "-", "b2"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      "per"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.765962462231406*^9, 3.7659625984851584`*^9}, 
   3.7674524544003525`*^9, {3.7677323662632604`*^9, 3.7677323737442513`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Exit angle at ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]]],
 " which creates triangular orbit (Garcia, 2019)"
}], "Subsubsection",
 CellChangeTimes->{{3.7656386401343875`*^9, 3.7656387080664387`*^9}, {
  3.7657020836958857`*^9, 3.765702091623542*^9}, {3.766046026750311*^9, 
  3.7660460355557504`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
zmVAEf4/Zr3FQA==
    "], {{0, 128}, {760, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{350.33333333333326`, Automatic},
  ImageSizeRaw->{760, 128},
  PlotRange->{{0, 760}, {0, 128}}]], "Text",
 CellChangeTimes->{3.7657020770149593`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "cosAlpha"}], ";", 
  RowBox[{
   RowBox[{"cosAlpha", "[", 
    RowBox[{"a_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x2", ",", "a2", ",", "a4", ",", "c2", ",", "denom"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x2", "=", 
       RowBox[{"x", "^", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a2", "=", 
       RowBox[{"a", "^", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a4", "=", 
       RowBox[{"a2", "^", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c2", "=", 
       RowBox[{"a2", "-", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"denom", "=", 
       RowBox[{"c2", " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"a4", "-", 
          RowBox[{"c2", " ", "x2"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a2", " ", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"-", "a2"}], "-", "1", "+", 
          RowBox[{"2", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"a4", "-", "c2"}], "]"}]}]}], "]"}], "/", "denom"}]}]}]}],
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7656141896654034`*^9, 3.7656144502193213`*^9}, {
  3.7656386376131325`*^9, 3.765638637892413*^9}, {3.767134928908119*^9, 
  3.7671349313641386`*^9}, {3.767135012220955*^9, 3.767135064963421*^9}, {
  3.7671351340200477`*^9, 3.7671351920041447`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cosAlphaQuad", "[", 
    RowBox[{"a_", ",", "x1_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"a", "^", "2"}], "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"a", "^", "6"}], "+", 
      RowBox[{"a", "^", "4"}], "+", 
      RowBox[{
       RowBox[{"x1", "^", "2"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"a", "^", "4"}]}], ")"}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cosAlphaQuadSelfInter", "[", 
    RowBox[{"a_", ",", "x1_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"a", "^", "2"}], "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a", "^", "2"}], "-", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a", "^", "4"}], "+", 
        RowBox[{
         RowBox[{"x1", "^", "2"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"a", "^", "2"}]}], ")"}]}]}], ")"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7685943461874733`*^9, 3.768594370122594*^9}, 
   3.7685952077091894`*^9, {3.7692759436951666`*^9, 3.769276023528138*^9}, {
   3.7692786694695697`*^9, 3.769278671150075*^9}, {3.769278755365879*^9, 
   3.769278756048026*^9}, {3.7692787890856714`*^9, 3.7692787894137945`*^9}, {
   3.7692792461662235`*^9, 3.769279246503294*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Can I find an expression for the next orbit point ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "2"], TraditionalForm]]],
 " in terms of \[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote] and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.765964228473589*^9, 3.7659642707689686`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "getP2"}], ";", 
  RowBox[{
   RowBox[{"getP2", "[", 
    RowBox[{"a_", ",", "x1_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "y", ",", "p1", ",", "norm", ",", "ca", ",", "sa", ",", "p2", ",", 
       "normRot", ",", "normRotNeg", ",", "p2Neg"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"y", "=", 
       RowBox[{"-", 
        RowBox[{"ellY", "[", 
         RowBox[{"a", ",", "x1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"{", 
        RowBox[{"x1", ",", "y"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ca", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"cosAlpha", "[", 
          RowBox[{"a", ",", "x1"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{"1", "-", 
             RowBox[{"a", "^", "2"}], "+", 
             RowBox[{"a", "^", "4"}]}], "]"}], "\[Rule]", "d"}], "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           SuperscriptBox["a", "2"], "+", 
           RowBox[{"2", " ", "d"}]}], "\[Rule]", "d2"}], "}"}]}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{"to", " ", "simplify"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"sa", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", 
         RowBox[{"ca", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"norm", "=", 
       RowBox[{"ellGrad", "[", 
        RowBox[{"a", ",", "x1", ",", "y"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"normRot", "=", 
       RowBox[{"rot", "[", 
        RowBox[{"norm", ",", "sa", ",", "ca"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"normRotNeg", "=", 
       RowBox[{"rot", "[", 
        RowBox[{"norm", ",", 
         RowBox[{"-", "sa"}], ",", "ca"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{
        RowBox[{"ellInterRayUnprot", "[", 
         RowBox[{"a", ",", "p1", ",", "normRot"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"get", " ", "2", "nd", " ", "solution"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"p2Neg", "=", 
       RowBox[{
        RowBox[{"ellInterRayUnprot", "[", 
         RowBox[{"a", ",", "p1", ",", "normRotNeg"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"p2", ",", "p2Neg"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7659634120463915`*^9, 3.76596364205964*^9}, {
   3.765963700482627*^9, 3.7659638173399634`*^9}, {3.7659638555896573`*^9, 
   3.765963887923172*^9}, {3.765963996307176*^9, 3.7659639985232496`*^9}, {
   3.765964138244048*^9, 3.7659641836275735`*^9}, {3.7659643384669185`*^9, 
   3.765964361931343*^9}, {3.7659644102840123`*^9, 3.7659644500596237`*^9}, {
   3.7659644850458846`*^9, 3.7659644974532433`*^9}, {3.7659646775200863`*^9, 
   3.765964736216584*^9}, 3.766046272230219*^9, {3.766429544047526*^9, 
   3.7664295470754595`*^9}, {3.7678084322510147`*^9, 3.767808478842349*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getGamma", "[", 
    RowBox[{"a_", ",", "b_", ",", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"xprev_", ",", "yprev_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "vhat", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vhat", "=", 
       RowBox[{"norm", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], "-", 
         RowBox[{"{", 
          RowBox[{"xprev", ",", "yprev"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "/", 
           RowBox[{"a", "^", "2"}]}], ")"}], ",", 
         RowBox[{"y", "/", 
          RowBox[{"b", "^", "2"}]}]}], "}"}], ".", "vhat"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.780259657031986*^9, 3.7802597395180717`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Triangular Orbits", "Section",
 CellChangeTimes->{{3.7660460814601183`*^9, 3.7660461045722866`*^9}, {
  3.766046439730899*^9, 3.7660464446997833`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "getReflData"}], ";", 
  RowBox[{
   RowBox[{"getReflData", " ", "[", 
    RowBox[{
    "a_", ",", "p0_", ",", "normal_", ",", "sinAlpha_", ",", "cosAlpha_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nRot", ",", "inter", ",", "interNorm", ",", "interRefl", ",", 
       "nextInter", ",", "nextInterNorm"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nRot", "=", 
       RowBox[{"rot", "[", 
        RowBox[{"normal", ",", "sinAlpha", ",", "cosAlpha"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter", "=", 
       RowBox[{
        RowBox[{"ellInterRay", "[", 
         RowBox[{"a", ",", "p0", ",", "nRot"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"interNorm", "=", 
       RowBox[{"norm", "[", 
        RowBox[{"ellGrad", "[", 
         RowBox[{"a", ",", 
          RowBox[{"inter", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"inter", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interRefl", "=", 
       RowBox[{"refl", "[", 
        RowBox[{
         RowBox[{"norm", "[", 
          RowBox[{"p0", "-", "inter"}], "]"}], ",", "interNorm"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"nextInter", "=", 
       RowBox[{
        RowBox[{"ellInterRay", "[", 
         RowBox[{"a", ",", "inter", ",", "interRefl"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nextInterNorm", "=", 
       RowBox[{"norm", "[", 
        RowBox[{"ellGrad", "[", 
         RowBox[{"a", ",", 
          RowBox[{"nextInter", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"nextInter", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"returns", " ", "an", " ", "\"\<object\>\""}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<nRot\>\"", "\[Rule]", "nRot"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<inter\>\"", "\[Rule]", "inter"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<interNorm\>\"", "\[Rule]", "interNorm"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<interRefl\>\"", "\[Rule]", "interRefl"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<nextInter\>\"", "\[Rule]", "nextInter"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<nextInterNorm\>\"", "\[Rule]", "nextInterNorm"}]}], 
       "\[IndentingNewLine]", "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.765617915036533*^9, 3.7656179467847757`*^9}, {
  3.7656186273902903`*^9, 3.765618954168909*^9}, {3.765638719615542*^9, 
  3.7656387563746033`*^9}, {3.765638835590863*^9, 3.7656388657498207`*^9}, {
  3.765639145228895*^9, 3.765639150084904*^9}, {3.7656392395346627`*^9, 
  3.76563925272674*^9}, {3.7656472106279583`*^9, 3.7656472979703765`*^9}, {
  3.7660463387139406`*^9, 3.766046339007156*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "getOrbitData", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"posY", "\[Rule]", "False"}], "}"}]}], ";", 
  RowBox[{"Clear", "@", "getOrbitData"}], ";", 
  RowBox[{
   RowBox[{"getOrbitData", "[", 
    RowBox[{"a_", ",", "x_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "y", ",", "o1", ",", "n1", ",", "ca", ",", "sa", ",", "sa2", ",", "ca2",
        ",", "halfAlpha", ",", "pos", ",", "neg"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"y", "=", 
       RowBox[{"-", 
        RowBox[{"ellY", "[", 
         RowBox[{"a", ",", "x"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "@", "posY"}], ",", 
        RowBox[{"y", "=", 
         RowBox[{"-", "y"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"o1", "=", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"n1", "=", 
       RowBox[{"norm", "[", 
        RowBox[{"ellGrad", "[", 
         RowBox[{"a", ",", "x", ",", "y"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ca", "=", 
       RowBox[{"cosAlpha", "[", 
        RowBox[{"a", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sa", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", 
         RowBox[{"ca", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pos", "=", 
       RowBox[{"getReflData", "[", 
        RowBox[{"a", ",", "o1", ",", "n1", ",", "sa", ",", "ca"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"neg", "=", 
       RowBox[{"getReflData", "[", 
        RowBox[{"a", ",", "o1", ",", "n1", ",", 
         RowBox[{"-", "sa"}], ",", "ca"}], "]"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"orbit", " ", "at"}], " ", "-", "\[Alpha]"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"half", "-", 
        RowBox[{
        "angle", " ", "to", " ", "display", " ", "\[Alpha]", " ", "at", " ", 
         "bisector"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"sa2", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "ca"}], ")"}], "/", "2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ca2", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "ca"}], ")"}], "/", "2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"halfAlpha", "=", 
       RowBox[{"rot", "[", 
        RowBox[{"n1", ",", "sa2", ",", "ca2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<ca\>\"", "\[Rule]", "ca"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<sa\>\"", "\[Rule]", "sa"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<halfAlpha\>\"", "\[Rule]", "halfAlpha"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<nRot\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"\"\<nRot\>\"", "/.", "pos"}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<interRefl\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"\"\<interRefl\>\"", "/.", "pos"}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<orbit\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"o1", ",", 
           RowBox[{"\"\<inter\>\"", "/.", "pos"}], ",", 
           RowBox[{"\"\<nextInter\>\"", "/.", "pos"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<normals\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"n1", ",", 
           RowBox[{"\"\<interNorm\>\"", "/.", "pos"}], ",", 
           RowBox[{"\"\<nextInterNorm\>\"", "/.", "pos"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<nRotNeg\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"\"\<nRot\>\"", "/.", "neg"}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<interReflNeg\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"\"\<interRefl\>\"", "/.", "neg"}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<orbitNeg\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"o1", ",", 
           RowBox[{"\"\<inter\>\"", "/.", "neg"}], ",", 
           RowBox[{"\"\<nextInter\>\"", "/.", "neg"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<normalsNeg\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"n1", ",", 
           RowBox[{"\"\<interNorm\>\"", "/.", "neg"}], ",", 
           RowBox[{"\"\<nextInterNorm\>\"", "/.", "neg"}]}], "}"}]}]}], 
       "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.766131059264862*^9, 3.766131101288623*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"getOrbitData", "[", 
   RowBox[{"2.", ",", "1.", ",", 
    RowBox[{"posY", "\[Rule]", "False"}]}], "]"}], "//", 
  "ColumnForm"}]], "Input",
 CellChangeTimes->{{3.765647347183366*^9, 3.765647357137536*^9}, {
  3.7656474395771904`*^9, 3.7656474423118477`*^9}, {3.7656487616143956`*^9, 
  3.7656487642313943`*^9}, {3.7656496326380577`*^9, 3.765649636926094*^9}, {
  3.7656498421738853`*^9, 3.7656498426366744`*^9}}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"\<\"ca\"\>", "\[Rule]", "0.5498845318951073`"}]},
    {
     RowBox[{"\<\"sa\"\>", "\[Rule]", "0.8352406848223443`"}]},
    {
     RowBox[{"\<\"halfAlpha\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.6999447055028296`"}], ",", "0.7141970381054217`"}], 
       "}"}]}]},
    {
     RowBox[{"\<\"nRot\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.954983821932709`"}], ",", "0.29665788350690403`"}], 
       "}"}]}]},
    {
     RowBox[{"\<\"interRefl\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.999046437670315`", ",", "0.04366022650254692`"}], "}"}]}]},
    {
     RowBox[{"\<\"orbit\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.`", ",", 
          RowBox[{"-", "0.8660254037844386`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.9958221967905105`"}], ",", "0.06460216482111569`"}],
          "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.9431448594673921`", ",", "0.2367425052274368`"}], "}"}]}],
        "}"}]}]},
    {
     RowBox[{"\<\"normals\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.2773500981126146`"}], ",", "0.9607689228305228`"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.9917220718836333`", ",", 
          RowBox[{"-", "0.12840300673595442`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.8989334497264451`"}], ",", 
          RowBox[{"-", "0.43808521198839007`"}]}], "}"}]}], "}"}]}]},
    {
     RowBox[{"\<\"nRotNeg\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.6499627641892748`", ",", "0.7599660552731531`"}], "}"}]}]},
    {
     RowBox[{"\<\"interReflNeg\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.9990464376703146`"}], ",", 
        RowBox[{"-", "0.04366022650254653`"}]}], "}"}]}]},
    {
     RowBox[{"\<\"orbitNeg\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.`", ",", 
          RowBox[{"-", "0.8660254037844386`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.943144859467391`", ",", "0.23674250522743723`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.9958221967905108`"}], ",", "0.06460216482111761`"}],
          "}"}]}], "}"}]}]},
    {
     RowBox[{"\<\"normalsNeg\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.2773500981126146`"}], ",", "0.9607689228305228`"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.8989334497264447`"}], ",", 
          RowBox[{"-", "0.4380852119883909`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.9917220718836329`", ",", 
          RowBox[{"-", "0.12840300673595817`"}]}], "}"}]}], "}"}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{
   "ca" -> 0.5498845318951073, "sa" -> 0.8352406848223443, 
    "halfAlpha" -> {-0.6999447055028296, 0.7141970381054217}, 
    "nRot" -> {-0.954983821932709, 0.29665788350690403`}, 
    "interRefl" -> {0.999046437670315, 0.04366022650254692}, 
    "orbit" -> {{1., -0.8660254037844386}, {-1.9958221967905105`, 
     0.06460216482111569}, {1.9431448594673921`, 0.2367425052274368}}, 
    "normals" -> {{-0.2773500981126146, 0.9607689228305228}, {
     0.9917220718836333, -0.12840300673595442`}, {-0.8989334497264451, \
-0.43808521198839007`}}, 
    "nRotNeg" -> {0.6499627641892748, 0.7599660552731531}, 
    "interReflNeg" -> {-0.9990464376703146, -0.04366022650254653}, 
    "orbitNeg" -> {{1., -0.8660254037844386}, {1.943144859467391, 
     0.23674250522743723`}, {-1.9958221967905108`, 0.06460216482111761}}, 
    "normalsNeg" -> {{-0.2773500981126146, 
     0.9607689228305228}, {-0.8989334497264447, -0.4380852119883909}, {
     0.9917220718836329, -0.12840300673595817`}}}],
  Editable->False]], "Output",
 CellChangeTimes->{{3.7656473525422935`*^9, 3.7656473581458097`*^9}, {
   3.7656474404608293`*^9, 3.765647442720807*^9}, {3.765648757104462*^9, 
   3.7656488111814804`*^9}, 3.7656493923809986`*^9, {3.765649627881259*^9, 
   3.765649654383269*^9}, {3.7656498026112814`*^9, 3.7656498429458404`*^9}, {
   3.765649931211861*^9, 3.765649936107792*^9}, 3.765701888154399*^9, 
   3.76570483595704*^9, 3.765719648342352*^9, 3.7657209765300317`*^9, 
   3.7658020580660195`*^9, 3.7660896835052147`*^9, 3.7661314578175344`*^9, 
   3.7661320312865334`*^9, 3.7662363060560637`*^9, 3.766236444350319*^9, 
   3.7662702170077615`*^9, 3.76634265611827*^9, 3.7665660529273744`*^9, 
   3.766746221709608*^9, 3.7669188274197764`*^9, 3.767009045264269*^9, 
   3.767009799771772*^9, 3.7670099385139885`*^9, 3.767013901708346*^9, 
   3.7670139995001116`*^9, 3.7670141003831654`*^9, 3.7670323965692844`*^9, 
   3.7670487972661743`*^9, 3.7670879652834606`*^9, 3.7671164138346157`*^9, 
   3.7671204118586626`*^9, 3.767123273258511*^9, 3.7671242912073317`*^9, 
   3.767260270582525*^9, 3.7676911286755*^9, 3.767732698118577*^9, 
   3.7678141441029654`*^9, 3.7678902773391895`*^9, 3.768120627475814*^9, 
   3.7681699078224783`*^9, 3.7682038381995497`*^9, 3.7682082004593782`*^9, 
   3.7682101880859632`*^9, 3.7682157601875067`*^9, 3.768259200776157*^9, 
   3.768259231154972*^9, 3.768269322183265*^9, 3.768318988068066*^9, 
   3.7683926440171165`*^9, 3.768406454157076*^9, 3.7684068395875735`*^9, 
   3.76840775940545*^9, 3.76847286687798*^9, 3.7685021931112857`*^9, 
   3.768502801022286*^9, 3.7685484059394217`*^9, 3.76866087638883*^9, 
   3.768661449866088*^9, 3.7686719233684196`*^9, 3.768734278594508*^9, 
   3.7687352863586645`*^9, 3.7687493971404257`*^9, 3.7687591236891894`*^9, 
   3.768759375945738*^9, 3.7688562721608353`*^9, 3.7690908896019993`*^9, 
   3.769101577631358*^9, 3.7691598603563766`*^9, 3.7691758882151356`*^9, 
   3.769267639823683*^9, 3.769275764088171*^9, 3.769372227431677*^9, 
   3.769372502837287*^9, 3.7694256928412557`*^9, 3.7695301516229553`*^9, 
   3.76960860132014*^9, 3.7698022620684133`*^9, 3.7698067454093733`*^9, 
   3.7699494809107323`*^9, 3.770189620150296*^9, 3.770194410051732*^9, 
   3.7704637411499863`*^9, 3.7705338834538455`*^9, 3.7716124442295904`*^9, 
   3.771669800061471*^9, 3.771687785562644*^9, 3.7716911577456207`*^9, 
   3.771691286017015*^9, 3.771834510893908*^9, 3.772096871168994*^9, 
   3.7721982021144915`*^9, 3.7724424084997487`*^9, 3.772462214077117*^9, 
   3.772481640869226*^9, 3.7725320102409196`*^9, 3.772787373099988*^9, 
   3.773074350554641*^9, 3.7733167551064034`*^9, 3.7733287867729883`*^9, 
   3.773345628298542*^9, 3.7743727288550835`*^9, 3.77437329149806*^9, 
   3.775233762251645*^9, 3.7756419579832954`*^9, 3.7756467217523127`*^9, 
   3.7757273985484676`*^9, 3.7759119240020137`*^9, 3.7760680764076495`*^9, 
   3.7769724048541946`*^9, 3.7770264987939787`*^9, 3.7773614225275087`*^9, 
   3.7802537208818073`*^9, 3.780255191393465*^9, 3.78025552451128*^9, 
   3.780259261754032*^9, 3.7858642932702475`*^9, 3.7870731201963606`*^9, 
   3.7884399612935724`*^9, 3.788983365444042*^9, 3.7894590696868916`*^9, 
   3.78945918670894*^9, 3.7903202079514227`*^9, 3.791325015230904*^9, 
   3.79132589118357*^9, 3.7914843641480446`*^9, 3.792143203286598*^9, 
   3.792186314896259*^9, 3.7959581863773556`*^9, 3.7960704825128107`*^9, 
   3.7961155611700277`*^9, 3.796127404143155*^9, 3.7962220319852505`*^9, 
   3.796301437956628*^9, 3.79631636091228*^9, 3.7964203942008567`*^9, 
   3.796422099427105*^9, 3.796422452243888*^9, 3.7965689211647263`*^9, 
   3.796568969578933*^9, 3.796663721299781*^9, 3.796929347338931*^9, 
   3.796929484176685*^9, 3.7970987046309576`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "orbitNormals"}], ";", 
  RowBox[{
   RowBox[{"orbitNormals", "[", 
    RowBox[{"a_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ellP", ",", "orbitData"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ellP", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"N", "@", "a"}], " ", "*", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"N", "@", "t"}], "]"}]}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"N", "@", "t"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"orbitData", "=", 
       RowBox[{"getOrbitData", "[", 
        RowBox[{
         RowBox[{"N", "[", "a", "]"}], ",", 
         RowBox[{"ellP", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"posY", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ellP", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ">", "0"}], ")"}]}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<orbit\>\"", "/.", "orbitData"}], ",", 
        RowBox[{"\"\<normals\>\"", "/.", "orbitData"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.765651969948132*^9, 3.7656520793945556`*^9}, {
  3.765652164147605*^9, 3.7656521846265364`*^9}, {3.7921803471350813`*^9, 
  3.792180379950832*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getAlpha", "[", 
    RowBox[{"a_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x1", ",", "ca"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x1", "=", 
       RowBox[{"a", " ", "*", " ", 
        RowBox[{"Cos", "[", "t", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ca", "=", 
       RowBox[{"cosAlpha", "[", 
        RowBox[{"a", ",", 
         RowBox[{"a", " ", 
          RowBox[{"Cos", "[", "t", "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ArcCos", "[", "ca", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7684917816844616`*^9, 3.768491808582265*^9}, {
  3.768491880261013*^9, 3.7684919424374*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getOrbitCosines"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getOrbitCosines", "[", 
    RowBox[{"a_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"orbit", ",", "normals"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"orbit", ",", "normals"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"getPolyCosines", "@", "orbit"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7659143005967426`*^9, 3.7659143335134487`*^9}, {
   3.7659143816178093`*^9, 3.76591443646488*^9}, {3.765914734137042*^9, 
   3.765914894755134*^9}, 3.766175776834915*^9, {3.7671210004349833`*^9, 
   3.767121016314105*^9}, {3.7684114922293606`*^9, 3.7684114939956417`*^9}, {
   3.7696810973089914`*^9, 3.7696811097378983`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Major Triangular Centers (Notables)", "Section",
 CellChangeTimes->{{3.7660464796718826`*^9, 3.766046489205515*^9}, {
  3.7670101642367005`*^9, 3.7670101763959494`*^9}, {3.76789056358529*^9, 
  3.767890568553003*^9}}],

Cell[CellGroupData[{

Cell["\<\
Linha de Euler: bari, ortho, circum, 9-pc all lie on a line (but not incenter)\
\>", "Subsubsection",
 CellChangeTimes->{{3.7656420853255863`*^9, 3.765642092335216*^9}, {
  3.7657067541131935`*^9, 3.765706766353731*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
emPpvHNCegIIAciB4QJDqUCYeJpQgUjL1sAqROgGTZsmEYUePYoJkRowh/zG
jU3UbVxJ8KYLsWGS+LHwWVm50PwyBRzytFPTaI2DDw1WMB4oHe356aefuJnj
5uZGS+jatWvRtal5eXmDBw+mgVi3bt3KrQoEKUXExcXRQdqFCxeWgnUXkonp
SoonpouuR/qQ8YEKRJkFZYoKRGpWqnrMhxs8erREFIYMKT5E6uvrkl9XZL2u
ZuFBF3Izib7TeFkg7tD1yyzaX2JyRbmjj4ym1Y33G1/cRhUp0tGe+fPnszIH
uhg///wzvfb777/PypI/2Jidnd2jRw8akfvQoUOsqkCQUge0f3Q+YWpq2rt3
7127dmn7dp6SJqYVrFNNzEgsKhDGC42pQKSA7ghGZibTr59EFCZMUBgiVSwi
kynwu27/I5w9HFBVFyLOMmuqS/5k8OeLuib3rMzczH7/9qN1/Xb2N2Xin8iO
9qxcuVJJc6AhNGrUKHrVmDFjFLeL0tPT27VrB2eWKVNGu2biEIRvaCuofPny
dP6OYmNj87///e/kyZPZ2hD0vzjkTExXzJ+YTlRm/0JSZhIIweBDg01l0lJL
BSI5k+e8aKC0nTtLROH335VYanTsf+QX7enBrxkqwl0XPsYxhwZ/miEyI52+
PPmTWWnZaZ13duYQIlV2tGfbtm0lnp+ZmdmvXz/6wP/yyy/KqE9ycnKTJk1o
C0pBxlsEKdV8+PCBLgI/duxYYmIi9BSgv0DX6VFMTExoDyI1VU0jLVwoNDG9
2KJ13ZfK72tLz0n3f+o/6sgos0VmUoHQn6/fdltb7yDv2I887KhNSGBatpSI
grIhUh8foZnIGHWNcSkDF10AfwtdOS9ryV9n97fMh4jizk1IT2i5uSUNkfoP
+76SbP61//77T8GZ8DzTtdmAF5uotbGxsbVr16YZDO/fv8/WQgTRfnbs2AFP
uKWlpeywalJS0qFDh6B/Ld3XQ7NZUYFISRFwpEUlEl+Qwer8+AmtK98gujB8
X3ET03LJyMmgAkE31RYSCOmyebbExDD16jE0RKrc5Njyyf7ILDQmjvSxL7d6
hYC1LsQ9ZrZ3+JSYyY4JUzQyH5MaU++fejRE6t6QvdwsTE9Pp2GBoXlz5swZ
ueckJCS0bNmS9izWrFnDtorXr187OjrSXvbTp0+52YkgWgu4eni8hw0bJvdb
eMX8/f1BIGiG3EICkazZDPTFkZnMBHm3drpLdKHLHMU7potDKhAWiy2KCsS7
tHfKFxUZyVSrRkTB0JDZt4/lb9nbk9h/VIvWibHQhdysz/PL7rpk+3ZGooLT
IxMjq3lXo0N5/vKWJykPNGwaN25MR3uuX79e6NuYmBianc3AwAAeY25VPHv2
DESBxGhydIyKUrRkGkFKF+DYjYyM4Nn29S2hRZqRkUEFgoYgpsC1WisQrVuL
iS70XSUzMd1QwY7p4sjMzaQCYbnYUioQeh56VCCgfav48ocPP4VINWGOcwh3
dHu9pJld0moctaGsLkSel+Seg8+6usyrq4pPfxj7kIRIddeB+3zp5SXV7YyN
ja1Vq5ZOkfxrkZGR1apVo0/v0aNHVani9u3b9HUQKEYTgmiE3bt3w1MNfQFw
+0pekpmZSQWCBpCh6OvrQ8/d29s7Li5OUIOVRzLvvFhMegq7uhadmGZbYFZu
FhUIqyVWRQUiOiW66CU3bzI2NsQMS0vmMrf1O6A7NDt2Met21E/JupAeT+Z6
qNkLjUhk1GLml6XcfHPTxsuGRse9w98Wb5AABwcHHZn8a0+fPqXjP9CPOHXq
lOpVXLx4kUbkbtGihVZPwCGI0tDFGEOGDOFw7cePHw8ePDh48GDZOYiqVaty
yLkpBIXXI729V2hiOn/H9GsOJeeJ8gKjAqefml5+WXlZgWi2qZn7JfeITzOq
589/DpF6964Kv2RjU2JwgJsKRfBJCbrwYJdkeS18dnWhWbwVcz7yPJ3NqbSy
0uO4x/xaGxwcTBswderUuXTpEpUJaAidhz8PT0Azia7c4DFGE4JoipSUFDqI
BO5dlXKgr+Hr61u2bFkoavLkyXyZpyLy16nKTEznJ4U0JCsno29zq0IqEBWW
V5BNCeGyzuWHDe5lKj4HAypXZh6r6Oqgd0OGYlxUK4U3itWF+KfMjo6SG7vU
lgiEEi2Eo0+O0hCpNdbUeJn0UgiDAwMDpRGz6QLsmzflBG9Xhb1799I13n36
9CkFO0MRpHj279+vkx9JWPUYxdBhpy+d4AlAlUbR/oX8ienP2SE5TUzLIhUI
OkIu/ZSZ4TLjmPvTeNXWq8TclRipRNtbDcjRhbxsIl6eJhI7oV+m3MKtAw8P
0OAkDdc3ZDWVz5ZTp07Rpdf29vYPHz4Uogoaph4YMWIERuRGSi8DBgyAxxj+
q3pRK1asgKIqVKigvgSgJVHyvrbcLNKmXVf3szpsaESOlDQYrgCRWPT72kDd
ntN1fnUo1INwv+TOcZAE1Ipmo7ixirNhPFJYF17fIDvN6Q1cW5tResp4091N
eh56UFTrra0T2U/3sMXPz69evXqCLhxauHAhlYapU6cKVwuCCEdaWpqJiQk8
w9BrUL20Vq1aadUgEqN8vjaxSP7EtLyIPSXi5SWJm92mrej0I9KDqLSyUlGB
eBT3qOSyZDk+mRi2sxMHk3jnsy5kfPg8v7ygDLlpOcquXvAK9KJxs7vt7qa2
2LbFBT7ikd9//51Kw59//il0XQiiCvA6nDlzZt68eWPHjh08ePCUKVOWLFmy
dOlSupdZ9ThI0Aaj0YkDAgJ4MZgXWOfxVG1iGhr10rjZ337LfJRxdWGxYaAF
NdbUkBWIat7VQDUCo5QLpPD8ZH4KMwMOy6h4R6ILAXOJgNJ7tbU18z5UycvF
YrE0bvbAgwO1LSOGisCvmzBhApWGZcuWadocBJFDeno69G0tLS3hKbW1tW3R
okWXLl3q169Pp+EMDAxatmypei2rV6+mGz+1ZxCJ4ZzfOTGSyIGn6eeJaRCL
kpyeSMRMmiQRhUGDig2RSgWilk8tWYFw9namAqFoHVdupmSuPJSHzp2KSHSB
3h8vGyXnlykisWjS8Um0hHHHxpUYIrU0Am/BDz/8QHdSb968WdPmIEgBQkND
q1evXqZMGegg3Lp1S9btZGRk+Pn5dezYEZ7e/v37q7jumsYcgGaSyibzCUdd
oKTHk1X3yk1M5+QwQ4dKRGH8eIUhUj9BBaL22tqyAlF1dVVFAvFvf2LGYfnb
0tWEKBduy2ddIPPLLCaLc/Jyhv43lF4+88xMLVnPLAQ5OTk9e/ak+3pUXOzH
kQ8fyNro//5jli9n5s7VgAGIVnL16lVzc/MmTZrQ7TzF4e/vb2VlBT2IxESO
AxTR0dF0hd7Zs2e5lSAQKukCRYmJ6YwM5rvvJKLw22+sFzRRgai7rq6sQDiu
cpQjEMHbiAFLrFSZFleJ6Fvk538y8jKbMKdMflyR7/Z+xyFEaikFuurt27en
MZp42UAnBxJMOJIJCGB27SIzWxMnMl27kpArZcpInkj60dVllN61inzBREVF
lS9fvkOHDh8/ljyj9+jRI2tr6x49enAbBfLx8aGhBrQtASgPukChE9PSzGLw
WWFPJ6aTk5n27VmGSC0GKhAu61xkBaLKqipUIERgw8dYksIGan+h9pXAWakk
tBGtfb4+h3iqyZnJ7be3p7v/1t5aK5ylWkVycnLTpk3p3mpop6lUVnY2Ex7O
nDvHbN5M2v/QQXV1ZSpUKOD/i37ghFatmGHDmPh4nn4TUorp06dPpUqVYmOV
jQ598uRJXV3dLVu2cKgL1Aee/HHjxnG4VlB40wUpMXfzJ6b1qTrE/eHctMYb
GiJ13TreKolMjPQO8m67ra2sQFReWXmi/0R/n9q5UPWZmbxVpgyP/vs8nra5
JfPuPltdiP0Y23RjU7jEYL7BnpA9ghqrbcTFxdWpU4dG5L53717JF6Snk/Gf
Q4cYb2+yjmHwYKZZM8baWpHzh+cP+gjQU4D+ArRO4FooISaG0bJ2GqJZrl27
Bs/h3r3sYhQPGTLEwcFB+ShJlJiYGDqIJFRPWQX41wVK/sT0699r1bF9AuUb
6OXunbGBieV/q9SLxBdUIOh6TvqxddcZtcjc/6l/jhpGk5Jff054tNiChBwU
k+1arHThdfJrOo1ivNDY76mfwBZrI69fv3ZycoJ3xM7O7smTJ5Kj0DenQ0Cb
Ninr/+Fjb09Og5PhErgQLodChF98i3wB/PjjjzVq1GC74/LRo0fw6LINL7lu
3ToaWEDbBpEY4XSBBFhmHKuIoHBjwyz/YX142TGtgFdJr4oKRLml5UYdGSWU
QIjyyH7wxZaSn3ZwICMTNlZ5XXiW8MxxlSOcbLHY4qL6h7+0gfwpgOidO2dZ
Wnrp6PiamWW2a0ea94aGivy/hYUc/4+RlxCuiMXiChUqzJo1i8O1tWvXHjNm
DKtLOnXqpJOfFZdDdUIjkC7cvy8Z1oV399L5HDINvbaOzMR0Y3JEJEiEnKjk
KO+l5dq668gKhI2XDRWI7Dye0q3G3JFE6oPPqipMkTwISurC/Xf3aVxBkLDb
XCNQlSaSkiRDQLJTwEZGivy/iQnj4lJ4CIjrChAEKY6EhARw1IcOKUqJVRyj
R49u1aqV8ue/f/9eX18fqjvOJa+A4AihC9euMWXLkmJtbZk70mjQRSemVzuR
Za6cdkyXwKnpUP7rTc1pD4LGkaAfay9rKhDcd4plp5Hy6c6++frk3/IyXCuj
C4FRgWWXlIXTHFY4hMWGcbRHO0lLK+z/wbcrHgLS1weNSG7RYpuBgZuOziwn
p5SLF9H/I2rj4cOH4Ki5pSOfM2eOk5OT8udv2LCBTqipIbwAB3jXhdOnGVNT
UmalSswjuXEsCk5Mk3EYcK0pb3izAIgMICV76NHAdPHp8bse7Oq9r7fBfAOp
QIBDHnxoMBxnF18i/DTj7SyxfFMzsvu7GErUhdPhp009TeGc6muqv0hUtExa
q8nNZT0FoKsrmQIeNarAENCnjY7nzp2jEYxbt26tzFpBBOGF8PBwzvEoZsyY
Ubt2beXP79q1K9Q1cuRIDnWpAX514eBByarwGjWYly8VnvohouCO6TJELPia
mM7LYZaUJcXe3yF7OCE9gQoEDU9KP+Cc4QgcT8tWGOokJfrz/PIiczKzUMw4
mFgsDn4bTAv/48IfAZEBKVmFM30fDDtYZkEZOKHB+gZvU9+q9GPVg0gkx//b
25cwBWBlxW0KwNfXl/ayu3Xrpp0NKuTLIy0tDR45bilrBw0a1LZtRyVPjo2N
pY/3sWPHONSlBnjUhc2byUgAlNawIfNOyQ2+H+PIHoeltoV3TKvOfz+Q0g7I
j4L7IeNDUYEw8TShApGaVXBju1hEVIAKDXz2dGeKad5Dx+TXM786rCgQJJYE
El9Q5tvd30rnlDff3ayfv8HBdYsrWMLDj+WXmBg5UwCFdoEV+piZSfz/9Ol8
TQHQjjYNZaxVoWOQL5j69etzaMPn5uZaWtro6Mx1cWHc3ZnnJUX637x5MzzY
lpaWWtvm4UsXli2ThEiFAln7A7pjmt+J6ZC9koa9wkTViRmJVCBo651+jBca
U4Eg7fzYsM9zIsvKM2HFzkntuL+j7JKy5ovMJx2fdDr8NPQCRGIR9EFC3ocs
u7YM+gVQ8oADA+Zfmk8nxLvu6lpCD0VoUlPl+H9j4xKnANQ2Bbx48WIqDWPH
jv2C44Eg2sPcuXNtbGzYRkk9e/Zs/nN6Q/qiUIF4WkxKmW+//RbOHjZMo+F6
FMKLLkhDpHbrxnAfD6YT01vbyExMV82fmJYzq1sy0A6nU8Php5U5PSkziQoE
TYsmEYj5Br3ddXe56yR76OXPLxc7RQ7dBDj/R78f4z7Kz9wNGrH13lZQDYMF
ZI7j+wPfqy9EakYGExbGcQqA+n/oWdMhILUvtHZzc6PSMGfOHDVXjXyFvHr1
ysjIyB18utKIRKJmzZq5urpevSqG7rKDQ4E3iQqEbDLKhIQEmtDW19eXd/v5
QkVdEImYKVMkd2DAAJ42D/E1Mb3jG3L5CXbJX9Jz0v2f+o/a1dVs/udVTEYL
DKF57x3kLdftr7i+As5Zc3NNiYWTrQqrHcstLSdIhh1uu8DKltXmXWDQTZg0
aRKVBi8Vo6ggiBLMmjULpEH5VUl//fWXrq7ulStX6P+CS4RLQSAqVZIjEI8e
Mdu2baPJ09nuj1YnqugCNB6HD5f86v/9T6kQqSyQPzHNZjHn9RWSzQWshiDA
8x8aDBemu+v4LygzalNTaORLBUJ/vn7bbW1BIGI/SsKnBL8NhoPQX1Cy+LDY
MCgQehYsTCqEkoHgCn3MzQv7f+hElIZVoNAeGzp0KI3IvXHjRk2bg3zhZGVl
tW/f3tbWVpn85qtXr4bHcuHChXK/hTcMtKBGjQIvoqkpiSHcufMQvg3nE866
AFrXu7fkl86cKcQO5nwkE9PlPg0u6ZKccUpOTMfckVy1xZXELDrwPXN+LhMV
yBSXzgB+w91NjJe15CqoCLQpP8Yp6UEcGWWx2KKoQHTc0bGWTy1W+6lX3VgF
lyu1YSE5mfUUgIGBOqcA1ENOTk6vXr3gbdLT0/v33381bQ7yhRMfH9+yZUtj
Y2MfH5/iglTExsaOGTMGnslffvmlxMkvKhC1atF3dLeOTjcdnf+cnUm3AjoX
Wjh1xk0XUlKYDh0kfkgdnXvJxHTtz1MPG5sompiGxvzxyWR+wUOP2diM+bcf
6QLs6c6scszvQTiScNyFro17zGzv8Gl+2U7u/HJmbiYVCMvFlrLLjQ48PMDq
12TnZVdZVWXS8UkyBn/87P/hWVElEFyuILvINQ50umnwSUNDwxMnTmjaHOQL
B543cPvQDqlVq9aiRYuCg4OTk5PB/7979+78+fPTpk2zzGfDhg2siqUCUadO
gVfZyUnrBIKDLsTFEadFPdNadUaDljsxHeTNFNqYFhlA8qMttWVurmHSEwoX
EnOXOTiI9Dt2dpak+wTRCXAjKedof8R/YolpQKUCYexpbLTQKEPpfM1Sfjn9
S0UPC9HgQdwDwRWX7u7LJSUlpVmzZjSvrnQ4F0GE48GDB8OGDTMwMNApiKOj
49y5cxMSirgXpaECUbdugRfd0VFbBIKtLrx5IxE7AwNm924hLaM8fsx4epLO
CbSNwX/CjWvThvlpFOPVtcjEdDQ5P3Q/6Sbs7VlCeI3w02Q/wj/1mMdHGZ+a
knLW1mHYpEsA+u7v22VXFw4/y++pH3Q0oqwwEBw7oINft25duvb7LvSPEERg
Ll++TOe2fHx8Nm3a5OvrCw8ej6umqUDQlrb0U6WKRCBYBnblDVa68Pw56fLA
+cbGjOAb9aKjSZwE6JNAZb16Mb/+SkZLwGEOHMhYWhIjvu3EbB7FeJp8npje
24NZYMQcHl7sDIIscY9IWje6lnWhEZnFULjTQS6uW1z/d+x/HH7c/fwEDTd+
6vfFTAGojTdv3lStWpWmYn8su/4PQQRg2rRp8LC5uroKXRG0Ab29mbZtCwiE
rS3xgv7+6h4eVl4XHjz4HCL1otDRoK9cYezsyPiJj4+cHRFZWcyePWSa38yM
2b3l88Q0OPlNTVm494hzZODIpzaT8Kzkk+UFgms63XiCP5eE3WGxYaALV1+p
lp7sayU8PLxixYrwtlauXPllCfFWEIQ7IpGIPmnLly9XW6XwRFOBoDuF6adc
OYlAqGcLkZK6cP26JEQqmHdb6GjQly+TJZedO5O07ArIyCC5F+He7dtHphiO
/o84+TclLy0rwH8/kDxrssG32QSC6zVCt/feXhx+4rmIc6ALEfnrnRAOhISE
WFtbwwtbo0aNd8pGXUEQdgQGBtJBJI00P169kiMQNjbqEAhldOHMGdIwh9Mc
HMhomLC8eUN6Cl26KPWzxWJmzBgSnx86M3u6Mzs7sa7u3X3S0Zg75HMgOAMD
RVPABQPBzdo8uOLyiiIx60FAzyueBvMN/rzw56M4uTFnkZIJCgoyMzOD17ZB
gwaJOAqHCMCMGTPgAWvevLlmzYiKkiMQ0FalAsHvCpSsLNLyp5PIEycSfyyX
//6T7JeqXp15oYZo0KNHE/lR/jWHn9GwIdOhHZlfCPLmUuOySkzP4gPBgf+H
P0kxUwBXXl2BZv+1qGts62y0oZGuhyRtkMs6F7cAt8AoLlHfv3ICAgJoRO5W
rVqxjWmDIIoRi8WVK1eGp2uJEPksOQFeGrxR164FWq9ly0oEQsUoBdC4Bu8L
LV9ZRwhK1KoVs3FjAfXZulUSIrVBA+atGqJBP31KJprXr2d31alTxMRROmxX
E0n4tz8zw5bbLrA8UV4tn1rdoavChpPPT4IcDD88vKZPTdl9EM7eztNPTUeB
YMWRI0foMsKuXbtqbXRKpDQCHVK6KjUyMlLTthQmPp5EO+jdu4BAmJqSI3Cc
bZC61FRmxAjiemvWZP7+m6yDio4mVYSFkdK+/56ogLMzc/48OXnFCkm3xdW1
hJF+3liwgMxqc1iZWc2ZaaJD9qZx4PhkEr6VK/89+g9c+t6QvUqe/yHjQ401
NTps70D/Nyw2zP2Se+21tWUFourqqlQgMIioMuzcuVNXVxfe3++//z73C93W
h6if3377DR6qxo25Owc1kJAgEQjZRChSgVCmDx0TwzRqRMLk/PNPsaueQkOZ
du1IFT17SqqAPov6OuitW5OhGw7MnMlYGZLAFxzwHUEiaXPFLcBN10O3zIIy
0vQKCkjLTuu0s5ONl83zhMIh2qlA1FlbR1YgnFY7oUAow5o1a2jTbsyYMXiv
ENWBp4guh/b09NS0LUoBTXcqELJh0kxMJAKRmir/KvDtIAqVKjH375dQfk4O
M368pKcAPQh1dM2lgeBsbJi//uJSwtatjK4O84BdPIpP17YlQ0nsEYlFU09M
pQ7cfoU9SMPGOxsVOKXwD+GNNjQyW2SmWEGoQLisc5EViCqrqqBAKGbu3LlU
GqZPn65pW5BSz+3bt+nj9OyZEovYtYnERDkCYWwsEYiUgqkjR40iPYUHD5Qq
WSRi+vYlxfI/rqY4EJyeHplW4YCfH7l8x3DWF2YkMh76zEJjsmM6NUb563Ly
ckb4jqBOe4L/hIycjDFHx8C/W2xu8d+j/wol3Ln39h54dRCOyisrB78NVrIK
EAivQK+229rKCgSUAEUFRAbkqpK06AuFrh4BFi1apGlbkNINTfzRoEEDTRvC
naQkIgSDB5NhpaICAZ44OJj1dC5cVb48mZ7mCLdAcGA0m4wYn9m+nZSwyKZw
rKQSubPxc7SlhUYklLcSkxSgAn3296GO+vdzv0vb8BdeXGi/vT3N+FZjTQ34
t+sW1wrLK8AR26W2i64u4pag7UXiC+8gbxAImuiNfqDAUUdG+T/1R4GQIhKJ
hg8fTqVh9erVmjYHKa3AG+3s7AxPkYeHh6Zt4YH0dLJaCboGdLsB/ejrEw8P
rXK2M3Jr1pBrY2MVnsRmF9jnT3GB4OAgNyn66y/G3JBET73KpqGYk8GsrMzs
60N2THvZSNQBCtnXmwTfK4aUrJSOOzpS5wzt+aInRCZGLr++nJ7QY28PtwC3
M+FnePHeL5NeFhWIckvLUYFgFev7SyUnJ6d37950L9J2aC0gCHvu3btHWxeP
Hn1R24syMiQCYWEhkQYOw/YJCWQR1ObN+f8jEhX2/23bErGRnQUv+rG0ZBcI
bs4csqGaw5KSRvWZ+rpkCwO0+V/fUPYq6B0sMmMS8wfLoCV/d9PnGHoklHfT
oqG849Pjm29qDt5Yz0Nvwx1FIXap077MbelsSUQlRxUVCBsvGyoQ2XlfXahV
WTIyMjp27Agvtb6+/uHDhzVtDlL6mDdvHjw/Li4umjZEKEAg1q0jHvrSJS6X
N26QN97hFPH/RkaK/L+pKfH/vXurmgvmxg1S2tGj7K4KDibT5NNbMEmvSA6F
ZXbMm6ASLhHlkQkFd10m7GCB4zSU95ZWn9XBuxrZLpeTDl++SXlTd11d8MCG
Cwz3h+5XXIOguiDldfJrKhCgU1KBsPay/soFIiUlpXnz5vBqGxsbX+L26CNf
MTVr1oSH5++//9a0IQJy7hzxtRGcIvH06yvuoXumwJiU0LnAunQhe7CVXwUF
HZmOHZjqVSS9jPR4Zls7Mo8c6EWduRzehzC7upAge7fWFVtsVCAZTQLhoOqw
1Dbcf2LVVVXA65p4mpx4VnJeGPXoghTQrE13N/Xe19tgvoFUIMouKQsCcSjs
UHpxt+LLJT4+Htp78HZbWFjcucNpATPyVRISEkIHkeAfmrZFQPyO5IFHj2Gx
1uYzw4YxHapGqTUXzP37ZPZ55EhlU1PMm0cmrE+d+nwEGslnfyN5dpaVJ3vW
nhwjQvAhnIm6RoRgZ2fGQ5eMF728VHLhCc9Jt2KhcYi7TsV8T2s53/DKA6XS
TqhZF6TEp8fverCrkECYeprCETj+ke28fGkmOjqazh7a2tp+YQPFiHD89ddf
8MzUgdbpl0HRKYD8KeBbOi1BF7jlMOnQgRk6lG87S2TfPjIuNHZsCb0GEA4Q
BThT7qJEcOnHJ5FYqdIRIRKIW1+SzSfygvLm3Hh2wnqhMXhXO3edu9KJ6ZKi
VWhKF6QkpCdQgTBcYCgVCOjsUIHgtjKq1BEREWFvbw+vuYODwwt1hPdCSj21
a9eGB2Ye+JZSB7T+i+4CkN3GIPOJ07HT0xVLpo/ZkJNDYihNnSqA/SWydy/Z
qtekCYm5LZcHD0ggbn19ZulSRT0L+Coxknl9nawvgl5Dxgdmc0uiC2dnKWnI
2YizZovM8jcOVHoSMJdZ7fRZZTY1y5+Ylp8DSOO6IOVDxgcqEGUWlCkqEKlZ
xeyE/FIIDQ21sbGBN7169epv1RHkCynFhIWF0UGk4GBl9xlpgJQURbvA5H4M
DIpOAbRtlffdd6wrh54HLdLFhewqePpUgB+ogPv3JbmLGjcmsZygEwEGHTxI
egetW5OxowYNuMymX1lIXLpPLWXOPfzoMPWlNX1qvkp6RQ5JJqZd5U5My6I9
uiAlMSOxqEAYLzSmApGSlVJyEaWTmzdvmpubw8tev379D2oK9YWUSjw8PGhS
D00bkk96OvH//v4sdgGAYyzk/wMDyTiSvLQFW7aQ0+/dY2fUN98UliAqEGrN
nbhvPdO+AmMtsxrWzo6MbYFA5CmRrLMo7x5I/Hl8CTq3LXib/nx98JyNNjR6
n/a+8NeFJqaX2TEBbkzq5+aoFuqClKTMJBCCwYcG064Q/RgtNKICkZyZrGkD
+ef8+fM0IrerqytG5EaKA1oO8JC4gRNWJ+DKOOwCK1tWzi4ANnGLcnOZ2rVJ
K1v5eeM9e0jNfn5EbaDa6tXlCISwOXpyM4mnXWCY73h1mf/GMY/v8xPCb3VV
UuZ1RYn5Vt5YSbcGtNnaBrxosed9mpgusGM6/gmj3bogJT0n3f+p/6gjo8wX
mUsFAtSw7ba23kHesR8V72ksZRw9epRG5O7cuXMmh5i9yJfO48eP6SDSbYFy
UkoDwYEbBwda0hSA5GNuXtj/g+flaRUouHcDAxIQT6REbjG4K6amhWecwRb4
KdDBkjUZftP06aRwnok4x6ypLnG26+oy/OZBPvkTKfZTpOuiuAW4UQ/ZfU93
pRbwQG+iyI7pUqELUjJyMqhAWCy2KCoQcrpLpZNdu3bRiNz9+vXDiNxIIRYu
XAjPRjVwaqqjOBCc0lMAPO8CKAhowc8/k5p1dZnvviMJFxSwcycRhRYtyOCW
XKhA1KpV4Dc5O0sEQtV4nx/jmEODPze/A70Y3sM7hJ+RrE1KL3wjRGLRTyd/
ol5x0MFB7PaFZaeRiYZVjtR4iS4EzC1uYlo7kQqE5WLLogLxNrXUz9v6+PjQ
NuGoUaNEyjSSkK+Gxo0bw4Mxa5ayi1II3ALBqdf/ywWaRSNHSixq145Exihb
liR0LpS4MzubOX2anACn/fBDsaIgCxUImglU+nFy4ioQcMHdTYyXtUQUdnUh
mw6EALz9YgtSRcge2cO5otyRviOpJxzvNz6Pmz+nE9ObW0p0AWqBjo+8iWkt
JzM3kwqE1RIrqUDoeehRgYhhE3tW26AL1IGfobWEIPk8f/6cPhVBQfKiJXAL
BAf+v21bOYHgNE1mJomYTW2cMIHMb0RHk50BIFnQd3BxYXr1YgYMYNq0IaGM
4BzoBbCNQsF8Eoi6dQvcEkdHNgIR95gM7HzaXEzWfwqaaODgIFLRoSHSA+AG
++7vS73fb2d/Uz3NwSddkJmYvuRetIei/WTlZoFATPSfaLfMrqhARKdEa9pA
Lvz666/UCcyfP1/TtiBaweLFi+F5qOroKI6IEDwQnEZJTWU6dZIYPnt2AUf7
/j1JZfPjjyRMnYEBWQr655/MzZtKzT4ogAoE3CHZe1alikQg5Beem1VgfvnI
KEYNo9mgO1DdYksmf6QoNSu1085OCkKkckCiC8HbGf+JciemSx3QgQqMCpx+
anr5ZeVlU0K4rHP5f3vnARbF8f7xozfpRToKgoi9K0aNxvaPJrH/NIpGTYwx
0RQ1JiYGu1jBLlawi53EXkjE2IJCFKNIESkqvUg9OPb/zs16HHB3XNm93Tv2
89yTxyx3t3O7s/OdmXfm+wZGBSbSNLijB9D96dOnY2lYv369PB+prKycNGnS
pUuX6C4bh5ooKBAPAdyzsEjm8apwPntpL6qM4JgjNxfFCPCvCZLe1PXujd6w
ejXFZwe1DAkh9x+IXnZ2yOI1MlLMMDXleq2F6ZbWcnlTUEJpLvJHgpMmXckt
ze2+qzvuA2+7v42qM9SJO799LQxMW4sHptFuO81EJBCO6xwbCkRCrmbkt6qu
rh47dix25N4DnSSZlJSUDB06FN5samqalpamnhJyUAP0jxUNAavBCI4JMjPR
HBEOceyQ5QZNly6IePGCFAicGBS/YJAS8GlF5KKN/MWGqJ1cZoiaTX4ZXYWQ
yN734NQZZ6bhjJn6S/UP/XuIwq+XsB6polg8MN3ojmn2IxIIp/VODQXiWWM7
RBgHhgC4tdfT04uAZ18K2dnZXbt2hbfp6+sfOCCXOxYHAygRAoBWSdj+x/Xs
uYTH+9HKqubKFWm7wDSdpCS0Ogh+tIEBcaQRN2jadUFEaqoEgbAxyQvofTHy
QCoD9+HWmqRAXkuhuZzxcuPIZ5HUfr3UdarVfCI+grTjwC8yMK1eWaQUQY0A
C4TzeueGAvGfHCnwmKK0tNTf3x/afENDQ4lzRDA68PX1xZbdZ8+exQdfvXql
cWl/tQcpRnCNhIAtLWXsAuvRowfc4jlz5jD7y+jj0SOUDA0ug4kJ8UfjbtDq
0wWS3IS0DeNDhn3bx+2WDq9GdNPgruIpJrXF6h89PeckbLvMV5pF0TB/1fj+
hYY7plFgOpfykqgTLBALry702uTVUCDis2jdCakkubm5bdu2xXNEt27dEv8T
NP4eHh7wp2bNml2/fl100N3dnTPiUwfQdEdHy2kER77MzOq0/9CmNDYFlJqa
ine1/CnNjU3DuXOHsLEhw+N//SXXR9SnC9WVqN1bYUI2g6cD0hOyYQQBt1pf
v/auWlmRAqHIfm6FuZN+xzrIGtoru0DeP398Rccp5N3X9uZfSYFpts/AyAOo
AGhBq02txAXCM8QThhXRjbnRqpnMzExPT09oGaysrGJjY/FB+Efz5s3hoI2N
zb179/DBJ0+egCJgEREpBQfF7NhB9OpFODo2MgRwcCB69kT7b3/+GUnAlStE
YqISPcsNGzbADXVyctLK/SwwMGrWDF0te3sFXLXVpAtpt4nt7cmmL9iDqJvX
JieHCA9HQX5xgTA1RUfgeAnVGQOuJl/Ftg8uK5s9gfLs7knxCYQott9ZcmBa
7oSk7AYLhM9mH3GBaBnSEguE6kuCKSE5ORk3+A4ODs+ePYOBA2gE/l+Rtabo
oJ2dHZfrh0aWL69tCBQxgmtIdnZ2fmPx4t69e8M9/eorWvqHzHL6NJlp082N
eKrIKkjadaEsD3WA8WzJUn20JFX6Dq/cXFIgxBcLm5iQAkGJN9Kp/04ZLTeC
dgn6sS8eHyUbYWiWqUYZHwwyMO1WG3rY2wcFIzQ2MF0PLBC+W3zFBcIj2IMl
AvH48WNbW1usBSYmJvAPd3f3Z+98hC9evAhjBDjo6ur63zvvyNu3b48cObKs
TINjQ2zk/n1i7VrixAnUwVXN//bHH3/U1dXt06dPSEhIpqTkZC9fvsSTSNo3
+tu/n8Crbr29UXhXIejVhbhwYp0j2cTt6oG8TOUD6gIWCPGpRJFAFCubMWB/
7H5skdphe4fXoAXQ3q6xRWV70MgyRSVQ3h+JDEx3FwtMt9L0wHQ9sEDgZNmi
l/tGd8YF4t69e1gRcL4GaDTw8YiICENDQzjo7e394sULfPDy5ctmZmZwcMaM
GUwVmEM22NoCY2BgMGTIkN27d+eIOQGBXuCeQLVy/sxsJTiYXOHTqRParaYo
dOlCQSpxeDjZrK0yRwYXNcrM3cEQsKFAGBuTAlGkSMaA4DvB2CK1957e+WXv
hpanJqESHv1EibLJhgLfvPqBaQctCEzXAwtE19Cu4gLhttENC4RAqTqjCrt2
7YLuJW5GoEkpFnZBoCXR09ODIx07dnz9mhxa7t+/Hx+Et71R4sHjUAvQ2kdH
R8+dOxdafpFA4BFEUFBQcnJy37594cjMmTOZLimVLFxINpV9+qDde0pAvS5A
Jzw6iFhhSrZmx8cQVHjpwK8DIRg3Di03EAmEkREpEIWNZQwQWaQOPjC4jkXq
42OokCtMKPcvosxP9c2/aCKO3A/OI1aaoTi1VgSmxUnOTw65E9Jnbx9xgbBf
ax9wOiDyWWSVQB3ep2vXrsVTCm3atMGO3AMGDIDWAx/09/cvePeMBQcHNzzI
wWZEAoHXEtQjLCyM6QJSAwy1584lm8ehQ+WyuZMIxbqQcY/Y0ZFswTa6EVRv
CiCEKYwiI9GaJRxkF21PBGUMCSGyGmQMqKmpmXNhDm5nRh8bXVFVd51TeSHa
VQelTfid2nJS7LONA9OrrbQyMC3Oi4IXWCDw4A6/bNfYYoHgU26u+46FCxfi
JmLYsGGlpaUHDx4UDRyAIUOGlLxbACF6p/hBDk1BJBCOjo7i0uDn5xcYGJiY
qEl2LvWoqiKmTCGbROhCq7LmnzJdqChG/Vhor7CF9YW5BM15IcvKSIEwN5cg
EHhkD/3MKaen4LZl2tlpki1Swz9AZY6keCBJS/4FbQ9Mi5NakNpQIGyCbCgX
CIFAMGvWLNw4jBs3rlL4OMHBfv364YPu7u44jw/qY8yZgw+OHTu2kgXGmBxK
AwLRuXNnvOS4oUA8f/6c6QIqRkUFMXIk2Qx+/rmS2SxFUKMLT04S653feTt0
I14pmDFUNUQCgS1hRQLRu295+5Wf4Pbk+0vfS41mQksLxV7vRK2DK415eaBJ
jAuvXferjYFpcV4WvmwoENZB1lggFMuR0QA+nz9x4kTcIMyYMQMHH6uqqiZP
nizeVsyePRsOTpkyBf/v9OnTtSxM2QR59eoVHhKeP38ejyCcnJwaCoRGbGx/
+5YYOJBs+ubPp6AlU1UXCtOEsVE89d0MtU5qmQqWCPTpsEBYWhI8w7e8KQPJ
lZCfBsEIQtIiNSH5KWT5M6lckU6jLohoAoFpcdKL0kEgBoUP0he6l+CX1Wor
LBD1ZwjloKysbPjw4bgRmDePNFeHocFHH30kOgjgf7du3Rr/4/vvpfcxODSH
HTt28ISbFvnvtkLAPy5evAjdA7xcWRSkluGdxQby8ogePYhGLVIVQnldEFQj
FVhtSTZKB4ehBpYdvCrI9VkrzIzzmy6vxxbR/hg8xZTRMGPAtnboJ9z4jcIy
qEMXMK/j6gamm6E5MQ0xNVWOnNKc8LjwEYdHiAuE6QpTOALH5Uq9ihItFopm
ioLePU7FxcUDBgwQPwgSIBomiL+TQ9P54IMP4IZOnTq14Z8EAgEeQbi4uOjr
6+fIznDJKNDdbdeObN+2UeYGrawuQNd6ZxeyIdrgQkd8WWkyizPbbmuLLVLD
Hh6IjkYBegeHOhvo/fxQnojaENO1n9EP2dmZwmKoTxcwxa8kBKbTJWWe0iJy
S3OxQBgsM2goEG8rZe2ExO4HOjo6q9/V/tzc3O7du+Mu4rZ3z5joIH7zrl27
aP9VHPSTlZWFlxn//rusBSdVVVX3799XW6kUJTkZ7QXHFqmHD1P5zQrrAjxr
F+aSyQug8YF/l7NonV5SXlLLkJbYIvXs07Oi49XVBBaIep4rWCAS/nxINqcF
Cm4LlI66dQEjMTANqq3t8x55ZXlYIAyXGYoEwmSFCRaI4goJOyFhIPDll18e
PEjmcs3MzMTueQYGBoffPWOig9Bp7NChA0/oyH38+HH1/TAOegB9h7tpaWlZ
QasRG508e4ZyYuINvzLFTRkU04XEi0RIS7LB2daWYJn72eOsxzgRgPkq8xsp
NyS+RyQQ2HW2ViCaJwT2X/LsBGWiy4wuYKorUWAaT47h12ZvLQ5Mi5Nflt9Q
IKCTgAWiSMoauaSkpJYtW0JDYWJiIupAig4aGRmdPXu2tLT0vffe4wkduS9c
uKDG38RBPTjvxuTJk5kuiJI8fEjOgVhYEHS4wMqrC0UZtfHl5cZo5xptK8mV
4276XZsgG7zW/X5G40M/gYAUCGdnCSOI/1TOGMCkLoiQGJguU8lwRlMoKC/A
AoHtsOoJRGF57U7IFy9e4Pbf1NT04sWL+OCjR4/w6hRxh+3CwkLRysabN28y
8Ks4qCA3NxdGhXAfzyiRzJ4FQMOFltYIM2DSZN/YuC7UCITx5XcT1wcGE3lJ
tBRFBa4lX8MWqc7rnRU1+ccCsfCL517WSQ0FQn5n2nqwQhcwr2MlBaY1bHm2
0pTySyOfRQacDjBbaSYSCBCLQeGDQu6EZJdkw0Cgb9++dnZ2Me9u9t27d21s
bPA8Q732PysrCy9Mgj89eKDW9dgcVLF37164gxYWFnhbimYBQ1VTU9RAubpS
0H2VRiO6AG3s3j61iWPi2bhe68zTM7hP6LXJK0XpNVGVJTAOip/dNnD2f61a
1RlBeHqiYUW0gnNmLNIFTEEqMrNtYoFpccr4ZVggcBcCv/SW6vXZ22flpZVR
d6Pw265evQpjBGg37O3tJbb8aWlp7u7u+A1PFTIv5mAHH374Idy+CRMmMF0Q
hTl2jHSKgzbqnX0jLUjVhapy1IyQnUwd1MMsY2Pa67DYMLxYsd22dq+KX6n0
XYc+RD/2zGfwz/h4NFjw8akjEC1bkgIhTxSXdbqAqShCo78Nrk0tMC2OSCDM
V5nXE4jpQdOxb6qbm5uMNj8hIQHb7MDbUhW1MOZglPz8fDyJdPLkSabLohih
oaRvdocOxGvqMwPUQbIuJF1BSYdxu7HFl0iVL/eb2gm5E4L3wPbc3TNP9Wnz
f3aQwyIxWwksEL6+dQTCw6NxgWCpLmCkBaarNG9YrQrlVeVYICxWWaD79SuP
h7Lu8IxsjX498WumTL/H2NhYnKPH29ub81PVIMLDw+GumZmZlSptKscEa9aQ
vtnQYjeWaIgC6utCSTYRMa42p2RUIGvbisCoQNz2fhD+geyV6vIC7QAO0b68
1fCPWCD8/OoIhLu7VIFgtS6IIAPT79RhXfOmE5gWp6KqghxBzDfnefF489G9
012iCyMI6HtkFDXcCYmIiooyNjbmCf23G00KxsES8Gb2cePGMV0QeYG2ReSb
PWQI9fkrJVKrC3D6mNDaVJJhA1kbmqypqRH5Zo88OlIJAwSphHZFv/3qQhlv
AYEICkJbp8UFwtUVCcTVq7V2VZqhCxgcmMZ7UnBg+sJcCrdyaBDVgurol9Fz
L8x1WOsgmmICgega2hX6IUkNVlxERkbiSYnevXtz3qrsp7Cw0MjICO7XsWPH
mC6LXAgExKxZZCMzZoxKFqkKQerCr1nEvn5ks7DGFk0ysHXCWVAj+PL3L/ED
O/XMVIqd+aOWoCuw1U+e96akIFeNegJhZ4cMmiIjNUoXMAUvhIFpy7qB6btM
F4sZRALRfF1z8ZQQflv9QCCei3WZDh06hO3XBg8erLmbpJoIcLM0aBKJzycm
TCAblunTVbVIVYjevQRIFwb/QrYG0G98y97JUn41f8KJCfgJ/fbit9Tbl716
QF4HRcZKL16QAoEnAMmXsJCrDv8pX35y1sAFpusiEgjHdY4NBeKZMEHStm3b
sFHG6NGjOZ9VNjNq1Ch8m5guSOOUlRHDh5ONyQ8/qPf5S7neu8VDpAsf/ERs
9iGk7BFmCaX80g8PfYifSngkaTkHXH3cJN7eqMSnU1PFBAI3IB5/2tiQIwhN
cusnA9Nta9Vhe3s0zcjWYJMagIEqFgjn9c4NBWLusrlYGmbBsJ+DlRQVFeF4
0GFqvYRooLCQ6NePYotUuSjNQUODQJ3erreRLnxxleUmCYXlhX339YXHUCdQ
Jyiaziv1x1fC8MoAVb4jLY3UBZ0Wf4pGENbWmiYQoJLJV7nAdD1EAuGywUVc
IGwX2/Le5/HseT///DPTZeSQwNGjR0EUQBpw2m7Wkp1NdOlCWqRu3arGE0NX
EB5w4ZPe2+sxxfmdaSCrJKvLzi44Arjzn530nuz5BWHKOX0V92vgtuLE/T9h
BDFoEKGvXzvFZGWFBCIiQvnsq+rm1UMJgenCl0wXi2FAIGIyY2Cw0GpTK3GB
4M3m9V/eP5pl7mEcY8eOBV34+OOPmS6ILKBLiVfFQ4vxztORfnITUE8YP92r
LIiYUIrzO9NAWmFa6y2t4XEzWGZw9PFR2s9XVUGsMkfX59ERVb6mXtw5J4cI
DydGjKgjEKam6Agc14yVLBID0xn3mC4WK4jPigeB8N7sLS4QLUNawrACBILL
48M4JSUlOF/ngQMHmC6LVBIS0N4oaBmMjYlz59RyyupKNAOwwqQ2vizcHcxy
XUjITXDf6I5N9c8/P6+msx4bhS7RyYmqfIe09Ui5uaRAGBjUCoSJCSkQb6nY
h0EvZGDahQtMSyQuM67V56143/DEBaJFcAtOIJjlxIkT2Bq3sLCw8XczQWws
0bw5ag3MzYkb6on0pt+pTQe80Z1IqHXrZrMuxL6OxcvILVdb3kxVo33lw33o
QkHHWAXP2EbXqeblkQKBDU/qCQS7Z0C5wLQssBEfz56nO1DXLchNXCA8gj04
gWCE//3vf6ALw4cPZ7ogkrl1C00vQwtga0uoIxEQ9O4iZ5LbeJfqoXkAfp1J
bdbqAjw7Vqut4FECaXjwSr3GlSVZ6FrBFVNhgZb8+xfy8yUIBAwksUAUSc4Y
wA4kBKYdhYHppr75FzqlXbp0wQkdws6HBUYF+m31ExcIt41uWCAENQKmC6v9
lJWVYS/Effv2MV0WCVy8SFqkurgQT57Qfz7o0a13Ih/YXd3RttYGsFMXLiZe
NF1hih8fvERc3ezpjS7ape+V/gIl9rUVFCAhGDeOMDOrFQgjI1Ig2Dr8FVIv
ML3KnAtMZ2dn+/r6Yj9n7OCdnJ8cciekz94+4gLhusF1ZuTMyGeRFO/Q5BDj
9OnTOKFSQQGLkktiIiLIDqGXF9oqSy8FqcTh4bUP6Z0QQkqtY6EuHI8/jpNt
+Wz2eclU23JzFbp0IZ5Kf4Eq+51LS9Fy1oAAolmzWoHQ00M7I0JCiKwspQtF
M/kpSA5WmpEVb5kB8tpqwoHp9PR0Dw8PaJHs7Oz+E/PKT8lPwQKBXR/xy26N
XcDpAE4g6ODTTz+FuzB06FCmC1Kf3btJi9T27YlXqrlBN4KgGiVTW2FKPpvH
RhNSXL8wbNOFXTG79JbqwWPSaUenrBLmWsCsePICZis5rqPEB6OsjBQIc3MJ
AsFSF8/yQi4wLeL58+fYkdvV1fVFA8f81ILUhgJhu8YWCwSfZSkRNZTy8nJz
c3O4BbuhFWYT69aRDgm9etFskQp9sx2dyIdxgyt6GBuDVbqw9tZa/IC8t/e9
gnKmR3ybWqHLqOweOmr9kUQCYWEhQSDo7WkoBw5Mb/UTC0x3aJqB6bi4OGtr
a2iXWrVq9VqKbz6MixsKhE2QDRaIympN2QnJRs6dOwcXX19fPzc3l+my1CKy
SB00iM5ViBXFKL68RJeML8Nwvlyu+Wj26ILIInXYwWGlfBbs+Lr4LdnXVQqa
fPPKy0mBwAle8UtXlxSITFkZA5gAxgjQOQkf1MQD07dv3zYzM4PWqUOHDrId
udMK07BA6C7RFQmEdZA1JxBKM2XKFLjyg6D9ZQcCAfHVV+STO3o0QaPV4pOT
xHpn8rnb1o5I+1v+j7JBFwQ1glm/z8KPwPiI8Wyp/MnXyN1bShkJ0u2nCtUJ
BGLmTMLeXoJAZMiaO2SCVw8kBabTmC6W+rhy5Qp2eO7Vq9dbOTqI2SXZ4XHh
Iw6PwOkI8ctqtRUIRER8REmlRuyEZJ7KykqcPmnHjh1MlwXB5xOffko+rZ99
RptFKjxZolWCK81kxJelwbgu8Kv5E09OxNX+i8gvqgWssaOs5pPZkGP3K/Fp
tflsQ9WKjkbZHxwcxNxceSiFUGAgkZhI9/kVQXJgWg3LtVnBqVOn9PT0cN9V
fkfunNIcLBAGywxEAmG6whSOwHFqMlJpL+fPn8eTSNnZ2UyXBc0GjxhBPp7f
fUdPwA3aT1ABkSnBwaFEfrISX8OsLpTxy4YfHo6r+oIrC1i32efEBDJ2rzjq
z78gEghHRwkCkZCgtoI0Bg5Mi0a4TSkwvX//fh0dHWipRo0aVVWlWBcurTAt
+E5wwymmz8589kfCHyzqULGJadOmwdUeMEAlG0xKKCoi+vcn6LVIzYwhdnYh
n6m1DkR8hNLfxKAuFFUU9dvXD1dvei1SlebRYdImTvFoKYN5eUQC4eQkQSCe
MbEdRAJVFcLAdJtaddjRER3R9kU4q1evxo7cU6dOVa4jlFeWh0cQeDk33kbN
uj4VCxBNIm1Vqy2pBHJyiK5d0TOoo0Ns3kzDCWDYCCNxPE+7RFcYX1Zp3Q5T
upBdkt01tCu2SN1+f7u6Ty8nZfnkpU68qOhH2ZCvTSAgBcLZWYJAiC2oZ44a
geTANOOr0ehk4cKFWBrmwr1RgfyyfCwQP139iaqyaROXLl2Ci6ynpydtGZh6
SE8n2rQhsEVqeDgNJ4DWKaQl+fhs9SOosAxiRBdgROy7xRdbpB5+xO4cGfvf
R1f7j9mKfo4NuiACC8TChWhPZUOBEG7GZZqmFJiGvv2XX36JpWHlypVMF0dr
+fzzz+EK9+3bl8EyPH9OtGhBOtucPUv1txdl1MaXlxuhRfUUDbfVrwvPc5/D
sBfaTJMVJr+LOfixlNsbhGaDborOfrNKF8SJj0da4O1dRyA8PdGwIprxjAH5
yUgORLsylxkgsXjziOliUY9AIJgwYQKWhuDgYKaLo4VUVVXZ2trC5d20aRNT
ZYiLI4N9zZoR169T+tUw0EbxZSvySYERdx6VS0zUrAuxr2NxInWLVRYsbDMl
kJdEXvlXDxX6HGt1QQQWCB+fOgIBfRssEExOV5fmoJ6Ptgem+Xz+8OHDoeHS
0dFhp5+bRnP16lW4trq6uhkMLdr++2+UohFbpN6j1gwmKx49EfjRWGOHonJU
Pxrq1IVbL29hi1T7tfYxmWyYvJAPHBv9c6lCH2K/LojAAoGzRIleHh5MC0QT
CEyXlZX169cPmi8DA4PIyMbdCTjkZ9asWXBh/f39GTn75cuk+6WzM3q+KKOq
HHliwzgaPRE6aC8zPUl11aYLlxIvYYtU1w2u/2WzIeQpN1d+RHchtJtCH9Ig
XRCBBcLPr45AuLszKhA4MC3qHcFrvZM2BaaLioq6du2K8w5HRUUxXRwtoaqq
yt7eHq7qhg0b1H/2EydIi1RPTyJZmd0DUki6QmzyIp+CLa0JOtsW9ehCRHwE
XlPnvdk7tSCV3pNRzstoUp2L0uX/kCbqgggQiKAgtHVaXCBcXZFAXL1KKLju
niJggIkC03p1AtOK3BHWkpOT06ZNG2jEzM3N//nnH6aLow3cuHEDT9Clpal7
6cLevaRFart21BmXlWSjHaBk0M0Q9Yv4ZRR9tWTUoAu7H+zGFqkdd3R8o5Sn
BMMIqtEkHtyRmFD5P6TRuiAiJQW5atQTCDs7ZNAUGcmEQNQPTBsisch6rPZy
UEx6enqLFi2wI/cTdaRm0XK+/vpruJg9evRQ83lhdIItUnv2RAkZKQBG6dDs
BFmTFX5Pb/XUdrp1Yd3f67BFpP8ef+YtUpXmzFR0Uw6PkP8T2qELIl68IAUC
V3v8srUlBYKv5il/6D6hwLSTNgWmExMTHR0doTVzcXFJoT1BizZTXV2Nr+Ta
tWvVeV6RReoHH1BkkZrzlNjX71182ZaO+LI0aNUFkUXqkANDNNvp68lJdGtW
mBBy/wot0wURqakSBMLGhhSISnVaHuLA9BZfscB0J3REY/PaPHr0CDtye3l5
vWKjebpmcPPmTTyJ1DDhBU0IBDBCIZ+FkSOpsEiFuh0VSCw3Jis2DIrfqnVr
Hk26IKgRzP5jNm4bxx4fyxaLVKWpfEveo6fybk3RVl0QkZZGCoSubq1AWFur
XSAaBqaDPdBoQjMHp3fu3MGZiNu1a5dHzUxEk2Pu3LlwAbt27aqe01VVEZMn
k/V/6lQqJldTrhObvd9V5hbE8/MUlFJB6NAFfjX/05Of4oZxxrkZWuLodXAo
uk3nZsj5dq3XBRHp6URoKDKK1NevFQgrKyQQEREoJ6maqB+YttDQwPTVq1ex
I3fPnj3lceTmEEcgELi4uMDVW7VqlRpOV15OfPQRWee//VblaZ7SXFSHA3WE
aXT00ZJUhjLRUK4LZfyyEYdH4FZx3uV52mPndW8r6VIIHVQ5aDq6ICInB9m/
1BMIU1N0BI6XqGceMS9JCwLTp0+f1tfXh8Zt4MCB5eVNLsOdKvz99994F3ky
lStEJVNcTLz/PlnPAwNV/rq4cGJdc7Le7u5JvI5TvYRKQ60uFFUU9d/fn9UW
qUpTmEbqePpded7eBHVBRG4uKRAGBrUCYWJCCoQ6usAl2Wh6Fq8iEw9Maw5h
YWHYkfuTTz5R1JG7KfPDDz/ARevUqRPdJ4JeUPfupEWqqr7ZuQlE2IDaBdgx
oXJ2PumDQl3IKc3pFtoNW6RuvcewsS0t4NzZ13+R571NWRdE5OWRAoG3+dQT
COhu0YuGB6Y3bdqEu74BAQECAcMNhUZQU1Pj5uYGV2z58uW0nigjg9z+qatL
7NypwhdVV6IOzAoTsn4eH0sUsyIXL1W6kF6U3mZrG2gJ9ZfqH/r3EBVFYx83
Fgvz17eX572cLoiTny9BIIyNSYEoKqLz3DgwvcdfLDDdQhiYlisBOrMsWrQI
S8M333zDdFk0gLt37+LLlUBnGqrERKJlS1SBYTh89KgKX5R+h9jegayTG91Y
NZ6lRBcS8xJbBLeAZtB4uXEkm34dxWTcJ29ifuPLyzldkEhBARKCceNI9xj8
MjJCAhEaStCba1EzA9PfffcdbuuWLlXMoasJsmDBAryUi75TPHpEWqSamhLn
lV4oVFGErI3I+LIeii+zbBm/6rrw75t/Hdc5Qhtovso86kUUZSVjITU1xAYX
dCvvNp5yidMF2ZSWouWsAQHIglgkEHp6aOFrSAiRlUXbiSUHpim0NqOYmpoa
nIySKbcfTQEuFN4zvmTJEppOcecOaZFqaUncVDr7TVx47ZbM0G6KGjWrBxV1
4Xbabesga2gA7dbY/ZPZBKxdkMrziAODG30jpwtyUlZGCoS5uQSBeEOTbwoZ
mLZ9N7mkgxzs2TrU5fP5I0aMwHu19uzZw3RxWEpMTAxWz3gqDUxruXKFHOQ6
OBAPHij1FQWptWl0VjZDCRTYGupSRRcuJ102W2kGrZ/LBpcn2U3D1CXhdzJf
TGPbpjhdUBSRQFhYSBAIWrb/koHp1rWhh52d2RmYLisre//993FWyogI5fO5
azE//fQTXJ82bdrQ8eWnTqHZTqiQbm5KZUgXVKOQlmiUeuj/5JmLZhCldeHk
k5PYIrXVplYp7P6NVMIvI1aaoTsbf1z2GzldUJryclIgYLQuEghdXVIgMilf
ryExMA19OZZN+RYVFXXr1g2aPkNDw0uXLjFdHNbh6ekJF2fx4sWUf/O+faRF
qo8P8fKl4p/PuEcuZYTXBhfWDkvFUU4X9j7ciy1S229v/1q9xh3Mc+RjdH9P
TZb9Lk4XVKeiAgnEzJmEvb0EgaA+DdfLaORmXD8wzUy2L4nk5OT4+flB62dq
anrr1i2mi8MiYmNj8SRSXBzF28GCg0krsE6dFA97VRSjmecluqg6wX+hOmmI
PYsSurDh9gZskdprd6/8snzaisZWHuxGdznIRvZsA6cLFFJdjRIDzZ2LpnbF
Hb/9/NA+00QqE9sSKE8uCkybsDMwnZGR0bJlS2gAraysoDFkujhs4ZdffoFr
4uvrS+3XiixS33sPLaVTjCcna3PRbmtLvNQkHVdUF0QWqYMPDNZsi1SlKcki
OwCpf8l4F6cLdCASCLxWsJ5AULloHe4yWwPTSUlJTk5O0Aw6ODg8U2ayWwvx
8fGBC7Jo0SKqvrCmhpgzh6xdw4YpaPNVmFYbX15ujCILmpZ8Vn5dENQIvj7/
NW7uRh8bXVGlupmsxrK7J7rjl+fLeAunC7QiEggnJwkC8fQpRaeBnk9MKAsD
048ePbKxsYGW0N3d/aUyU95aBVwNPIn0QMl1QvWpqkLhLVyjxo9XxBxYUI0i
U6stydpyYDBaF62ByKkLVYKqyacm47Zu2tlpWmKRqjR/rUA3fbOPjLdwuqAe
BAJSIFxcJAjEf5QkEicD071r1SGkJeOB6bt372JH7rZt2+bm5jJYEsYJDAzE
SSso+bbycuKTT8ha9MUXqAciL5kxxM4uZA1Za0/Ea/CyMXl0obyq/OMjH+OG
7ruL32mPRarSvPmXvPu5UmcuOF1QM1ggFi4koHloKBAxMVSco15gGrqFjAam
r127hh25u3fvXky72xR7AWWEi/Djjz+q/lVwFQcOJGvOggVy+2ZXvkU1Yak+
OeUYOZPQ8MBro7pQXFE8IGyAdlqkqgL0GKEO/L1O2t85XWCQ+HikBd7edQTC
0xMNK0A7VEViYJqh/TtnzpzBjtwDBgxomo7cT548wZNI9+/fV/GrYNTVowdZ
WxSwSE28SLYG8NraRnbYUVOQrQu5pbndd3WH9k0nUGezHOYPTYjz36BqsK+f
tL9zusAGsED4+NQRiBYtSIFQaeDbMDB9eASRfJWyosvNgQMHdHV1oWH8+OOP
m6Aj99KlS+G3e4Lqq0ZmJow7yIXQO3bI95m3b9D4kYwvG2lifFkaMnQhoyjD
b6sftkg9EHdA7UVjN0mXSc+r0hyJf+d0gVVggfD1rSMQHh4qCwQOTG/2EQtM
d1F/YHrLli24zzxp0qSm5sjdoUMH+OHz5s1T5UuSkmotUo8ckeMDNQJhfNmK
vOlhA4nc56oUgG1I04XEvMSWIS2xRepZuZMaNyGqK9G+J6gS/x6U+HdOF9gJ
Fghsni96uburJhA4ML27F4OB6cWLF2NpmD17ttpOyjhPnz7Fv/r27dtKf8nj
x+SqNhMT4o8/5PhAVjyx9z3yRq+xQ90ArQu5StSFR28eiSxSr6dcZ6horAcP
ISPGS/wjpwssBwQiKAhtnRYXCFdXJBBXryqbvf1ltHDhuk6dwLS6Mq3gVGU0
eUGwk5UrV+LFukovhrl7l7CxQbfewoL4q9HIQFU58sReZkDe39MBaCpJG2mo
C3fS72CLVNs1tvcy7jFXNNYTd4B0S6iWsL6Z0wVNISUFuWqAQGC7A/yys0Mr
2CMjlRKIeoHp5UbCwDQlS2ZlAW3j9OnTsTSsWyd1RYQ20blzZ/ix3377rXIf
v3aNtHm3t5djxVrSFWKTF3lPN/sQKTeUO6lGUE8XriRdwRapzuud41mz95+l
lOWRK9OgwjSA0wWN48ULCQJha0sKBF/RiCIOTAfZkC3JEl01BKarq6vHjh2L
Hbl37dpF67kYJzExEYtgtFKLzM6cIS1SYZDYyEbIkuza+PIyQ3Rb+WXKlVlT
ENeFU/+dMlpuBK2Z1yavJmSRqgr7+qKqcmFOw79wuqC5pKZKEAgbG1IgFNj9
SghXtqPAtLfaAtOVlZVDhw7FjtzHjzfi+qvRBAUFwc90dnZWItQeFkbo66Pb
6u2NbrdUamrQ7QuyJu/d7l5o71ITQKQL+x7uwxap7ba1e1VMh9m9NnJrrdCW
2aPhXzhd0ALS0kiB0NWtFQhra8UFQkJg2hMFpvkK2e7IS2lpaZ8+fbAj94UL
F+g4BRvAruNKZL6Ge4oVv2NHmYmfcp6ihegic10QCK2LL0sD68KIFcHYIrXn
7p55ZXlMF0pzyHlGVps3j+r9hdMFbSI9HaWfHjGC7GTil5UVEoiICEVM1eoF
ptfYoTgmDYHpgoKCTp06YUfum8qnnGQvycnJeBIpKipKoQ8GBpK3z99fukVq
VQWaLFpuXBtfbmJdZaQLg0iL1A/CP3gLw14OhcBr1/9aUe8wpwtaSU4OER5e
XyBMTdEROF4i57rU3OcoMC1qdugJTGdmZuJUNZaWlg8fsjGJsCqsW7cOfpqT
k5P8k0jQ2Rf5Zg8dKv1mpVyvnfcL9kApGpsYNTU1jtPm8AbyeC14dn52/d/v
P0A1zpw5w/RvUjuX5wknHnvWO4x0oR2vc+/OKl5STAKVFtIcFJCbSwqEgUGt
QJiYkAIhl1nR2zcSAtMvVffpqAU61c7OztB+2tvbP6XMZJYV9OrVC37XV199
Jef7QT2+/JK8TWPHSpkDLM1FAo1Hc0v10FCOnok+NlMlqAo4HYCbL6rYvLnp
eWXAiAA/1HXz1qELa0nZhf3nn3+Y+n0cssnLIwXC0FCCQBQVNfZ5GKHfCUH9
UlHoIbSrMDBNjWXx48ePbW1toQq5ubmlyoqwahIvX77U0dGBH3Xt2jV53s/n
ExMmkLdmxgwpFqlwzdc1J2/Bru7E66aY86i8qvyTo5/guQ5e18EffPBboGo0
b968ieoCPL/YJOfBHvHD6MIO5X327WeqXNVFixZxuqAp5OeTAoFXP+KXsTEp
EIWFMj9MBqZ70hGYvnfvnrm5OdQib2/vN7LirBpDcHAwT5iWqFoOF+zSUuLD
D8nbMW+epNBxbgIRNuBdfNkcXXam82swQnFF8cCwgVgUXKYu5PFqFM3v3BDs
UtIUdQE4NRnVqKOfiB+jJL5QWlrK6YLGUVCAgtEBAYSZWa1AgFiAQISGEtnZ
Mj9cLzC91l4YmFY16Hnjxg1jY2OoSB07dixQOCEl68Crrb744otG3wly3Lev
dIvU6ko0lSfagXhstNo2p7ON3NLcHrt6YIvUoOggJfI7S6RJ60L8cVSpoHaJ
9e44XeCAnmpkJBIIvKkWv/T00MLXkBCZSeQlBqZzVAoQnDt3Djty+/v7l8gb
IGcjGRkZ2D/28uXLst8JV7hLF9Iiddu2Bn9Ov0Ns70Be4Y1uLEnSygiZxZlt
t7WF9kp3ie7Of3YSiud3lkaT1oWKIrQLEmqX2NIFThc4RJSVkQJhbi5BIF6/
lvIxyYFp5dPHHzx4ELeoQ4YMqajQ1Dy80MjAT7C1teXL3IKelka0bk1apB46
VPdv8MBGzqyNL4MEl8ue5tNmkvKSsEWqwTKDo4+P4oOcLlBD+CBUx6CyvYPT
BY6GlJeTAmFhIUEgXkmcLsKB6Y3ulASmt27dimvU6NGj5ZmcZyH9+vWD8k+f
Pl3GexISkEcuju9E1hsHwKVb71R7JV9RkxJaQ3mc9dhpvRO0VCYrTM4/Py86
zukCNdzdhKoZ1Ld3YS1OFzhkIBIIS8tagdDVJQUis+EkNw5M7+pRqw6bvJQL
TC9ZsgRXqlmzZlHyW9RJZmYmHvKcP39e2nsePiQcHEiL1Dqb3gpShbEb4dVb
2azJxpdF3E2/axNkA82U5WrLm6l1Nj9yukANUOVwfcskG3BOFzjkoaIC2XrP
nYssPesJRFAQyhdTn4aB6ahAacmhpDF//nxcr37++Weqfoh62LZtGxTb2tpa
2iRSdDQptXZ2RO1DA2Or6CBihSl50Q4OJfKT1VZmdnIt+Vqzlc2gjbJfa/+g
waCJ0wXK2N4eVbkbv+H/43SBQyGqq1GbBgLRvHmdlBB+fsi6ITGx7rvfPEKT
lsoGpmtqaj7//HNctdasWUP5b6GPgQMHQpmnTJki8a8XLqC953DRXFyI/0Tb
xzPuETs6vZNRByI+Qm2lZS1nnp7BFqluG92eSqo2nC5QxrVFQrfMzvj/OF3g
UA6RQDg6ShCIOhvf374WBqat6wSm0/6W7yzV48aN4wkduXfu3EnTb6GWrKws
PT09KHNk/ZgB4vhxcmthq1bIMh1RUYzUEy4Lvjgovqzxa3RVJyw2TH+pPrRO
Ppt9Xha+lPgeThcoI/0O+XgWoF2lnC5wqIhIIHCWyXoCUWtrAa2fUoHpysrK
YcOGQe3S1dU9evQo3T9HdUC/eEK7p4aLqXbtQuF7uDgdOrxb3/XkJLHembwg
W/2oNRjRXELuhGCL1E47Or2RnmyO0wXKqBEQ6xxRJbyPlkpzusBBFQIBKRAu
LhIEgpwwqeajGRIJgWlZGWSggr333ntQwQwMDP6QK7cxkwwePBiKOmnSpHrH
16whfbOhNcvPJ4jCtNr48nJjFFmoVjSpEpXMmjULyowf4ZycnElCcnNz1V+S
wKhA3C712dunQObQidMFKjk3QxjVGkZwukAzu3btgodLlJLsp59+gv+9epXe
bGiMAwIRE4O0wMtLgkCQmSglB6altkKFhYU4G6aJiclfjWc4Zozs7Gy8L+/0
6dPix0UWqYMHEyXF1UgKV1uSvz18EMqpyjTYn+rUqVMEygn4Aj/RL19KnsCh
iZqamoVXSd/sYQeHlTa2jI3TBSp5epYMAlYUc7pAK5999hlcFvgv/t927ZD5
49atW5ktlTqJj0da4O1dRyA8PdGwAqW1fPOvpMD0M4lflZWV1bp1a7iAFhYW
MY3nOWaGPXv24BKWl5fjI6CSs2aRP3zMGKIi5QHKhSdKbBEXzpI0OozrgqBG
8OXvX+IWaXzE+EpJ+ejrwekClYAK47Vw/53idIFWOF0QgQXCx6eOQLRoIRSI
K3k1UUsaBKZvN/yStLQ0d3d3uIZ2dnb//UdxJgglqKqqOnHiREBAgKenp6mp
KU+YYMjAwABuNC4en09MnEj+2OlT+dV/fEcmW4eBEggim5KLMasL/Gr+hBMT
cHP0ReQX1dKjTpWVlUeOHJkwYUKLFi309U14PB0Li+a9evVasWLF8+fPlTs7
pwuYJ2v7/9af192nuYGFAVwQYxNjqNhTpkw5efIkVHVFv43TBWlwutAQLBC+
vnUEwsODmPt1ZfTOiBrxwPTePigYUbeJSEhIwK7Irq6uL4QLeqD6hYWFjRkz
BiTD2NhYV1fX0dGxb9++a9asodWy+8KFC76+vlCSVq1aff311xs2bNixY8eS
JUtGjhwJ6qCnpzd16ozBg7PwD/x+empNiCf5u7b4EuzLhMWgLpTySz889CEW
hQVXFtRIH0BB8XAWpzZt2sydOzc4OHj79u2BgYEjRoyAW6+vrw83Ih8FbxSD
0wUYjE+fPh2eHVMT41GjRkI1hsoMVRquJ1RvfMEvXryo0HdyuiANThdkgAXC
z6+OQLi51syd9Dz6xy9qfnsXetjUql5gOjY21srKCjfIW7ZsAYGAf8Oj/f33
34eEhGzbtm3x4sVDhgwxNDQ0MjJasGDB27cUp3cUCAS//PKLjo7OoEGD7ty5
0/AN8ERAk2Vtba+v78bjxQR9eqh2oiwqUHaQnSmY0oXC8sK++/piUQiKbmgm
SwL9VRACKBJIgMS8fnCXV69ebW1tDbUiHuqWIjRxXYiJiYGHyMHBAR6fsjIJ
lfP27dtQ1aHCQ7WXP/MgpwvS4HRBHuAhDgpCW6fFBcLVsWLu0MirAYOrFuuT
W73EAtNRUVHQP8RZb8aPH//kyZOGX1tQUPDbb7+Zm5u3b98+OZnKjcPfffcd
9KzWrl0r+22ZmZlduvQwNjSKny0UhbABKIcCW2FEF7JKsrrs7IItUrff3y7j
ndOmTTMwMIBOrOwvhBEiNPI2NjZJEjbhS6Up68Ljx4+bNWvWs2fPV5KNz2qB
Cg/VHnpfcn4zpwvS4HRBIVJSkO0SCARez4lfdubFAZ0ORU78CAnESjM0LZ/z
rKamxt/fHxqKw4cPy/7Op0+fQgfS2dm50WovJ4cOHYKbCMMBed4Mndi2bXxb
2RsV3w5lSXxZGurXhbTCtNZbWmOL1MOPZN1H7Cuyb98+eb42Pz/fy8sLOgPy
m/E2WV0oKiry9PSEdknOMTVONXXkyBF53szpgjQ4XVCOFy8kCIStaV5AhwMg
EPzfjJaPaw2DBTkTtUO/3cnJCXREdWvWkpISR0fHMWPGyP+RZ8+eGRkZBQYG
qnhqulGzLjzLeea+0R1bpP4u5vzfkLy8PCsrKxgvyP/lDx8+1NPT27Bhg5zv
b7K6sHjxYhh3KxSvHzlyJPSy5MmNwumCNDhdUBFolhoKhJXxYwN9o3nz5sn/
PVFRUaAj+/fvV7E869evh0Y+BQY2ijB//nwYqhc2kiSVYdSpCw9fPXRY6wCi
YLHKotHFkNB2wdV7LTX/h2RmzpwJv0jOIUPT1AWokGZmZgsWLFDoU8nJyfAI
yKO5nC5Ig9MFqkhLIwVCVxek4Wtra3sYAiv0DWPHjvXw8JA/aiaRLl26wPco
+qmMjAxQpQMHDqhyarpRmy5Ev4y2XG0JomC3xi4ms/F9KC1btpwxY4aiZ4mP
j4fynzt3Tp43N01dCA8Ph2oJlVPRD8J4uWvXro2+jdMFaXC6QDkvXlSZm9sq
2skBbt68CRc/Olp5A6Lc3Fx4juSc5a5HmzZtoOHtymLwNm0vLy/4d/v27fET
Df+g9iythrXS/VUXRMFwoWHb/m0bfT9+ZLBaKYqLi4uDg4M8pTIxMYGzuLm5
qfz7NAmokH5+fkpcWLx5s1OnTrK/HxsU4DWu6vlFmgLug4kaBFz93N3dGS2U
ZgN1DK5hVJ1MNnJRVVVlZWWlyjx/XFwcnPrvv+Vygq3H+PHjsclqk6Ytj/cr
Wo/Km8PjWSnwOUXXnWKwURWHNKBCQrVU4sLCI8B02Tk4JKDc4qLu3bsrFL6s
x40bN+DUz55JtumQzezZs6E7GspizMzMeMLsePDvVatW4eu8evVqqr5/8sbJ
ukvQSMF1heu6Hevk/NRXX30FxVA0uICZNGmSj48PVeXXPqCDCpdXiQsLjwDc
lB9++IHpX6Cp+Pv7wwWE/+L/dXZ2hv+dOHEio4XSbKZMmQLXsLKycfOchvzf
//3fJ598osQHMY8ePeIpO14YN27cwIEDlT61GqA1vrDm1hrsm+2/xz+/TIH9
yNHR0TxlxwtDhgwZNWqUEh9sIkCFhGqpxAdv3boFNwUeB8qL1ETg4guUc+7c
OaXHC926dVMigikCxxeUCx937txZWvo2lkCfLogsUoccGFJS2fj6RnFSUlJ4
coeP6+Hp6TlnzhwlPthEgArZpUsXJT4YFhYGD4ISfiMcGE4XKCcmJoanVPhY
IBBA06fiPoLu3bsrsR4pLS0NnqNGt+AxCx26IKgRzPp9FhaFscfHymOR2pDW
rVsrvR6J/dk6GOTQoUNQLaFyKvrBMWPG9OjRg44iNRE4XaAcaN4dHR2VXo90
+7YEm1b5WblypampqaJL+/Duobw8FrmnNoRyXeBX8yeenIhFYfrZ6TIsUmXz
448/WllZKXr1vv32WwsLC4luPxwYuKRQLRXtKaWnp5uYmKxatYqeQjUJOF2g
g88//9zZ2bm0tJGkLfUICAhwcnJScctzYWGhnZ2dQjNCqampZmZm0Lipcl41
QK0ulPHLhh8ejkXhh0s/yLBIbZQ3b940a9ZMoRmhp0+fGhoarlixQumTNhHw
jkuFhgyTJk2yt1d49xCHOJwu0EFycjI89Qr1c+7du6erq7t9uyxnNjnZvXs3
3MRt27bJ8+a3b9927NjR3d29oEBWPko2QKEuFFUU9dvXr1GLVPlZv369jo7O
wYMH5Xlzfn5+69atfXx8FO05NEFgyODm5ta5c2d5fC2ALVu2QK3Yu3cv3QXT
bjhdoIlFixbp6en9/rssXx0Rr169gsrfpUsXPp+aBMrffPONPH6qcN7u3btD
fywuLo6S89IKVbqQXZLdNbQrtkjdeo+aqg7DDRijyemn2r59e2tr64QE9lrX
sorY2FiF/FSh8qunYFoMpws0IRAIPv74Y2NjYzn9VJ2cnNLT0yk8+7x58+BW
Dhs2TOISyurq6p07dzZv3tzR0RGGKlSdl1Yo0YW0wjTfLb4gCvpL9Q/+K1f3
Xk6qqqpmzpwJRRo1apREnzcQ/U2bNtnY2MDo7N9//6Xw1FrP3bt3mwsJDQ2V
ONEKlRyqOlz8+fPnq+gkw0FwukAn5eXlEyZM0NHRmTRpksTmq6ysbPXq1ebm
5j4+PkpneJTBsWPHvLy8oAAwKFi8ePG+ffvgCDRN06ZNs7e3h57VxIkTlVjs
wRSq68Lz3OcewR4gCsbLjSOfRdJRyP3798PQD66tv79/YGBgWFjY0aNHQ0JC
AgICQBFgCAnPmnKb4Jo4cKP/97//wYWFqjt9+nSoxlCZoUr/+uuv3bp1g0oO
VT0iIoLpYmoJnC7QSk1NDVxM6OdAg/D+++8vW7YsPDz8yJEjGzduhEpuYWFh
aGg4e/Zs+hYCQR8VHp/Ro0dbW1vjhtTAwMDb2/unn36SmCqIzaioC7GvY5uv
aw6iYL7KPOpFFH3lrKioOHDgwEcffWRpaYkLCXe5TZs20IJxc0cqAuOChQsX
QgWGaoyvLVRsqN7Hjx+nag6Wg+B0QS2UlJTs3bt36NChMDTAldnIyKhDhw4g
EzgBtHqA9kqjd/pcunTp3LlzuLMNQ61zQuRc53nr5S2r1VbYIvV+xn2aS1oL
jBnZH9DXUKAyy5/YiEMhYmNj4eGC/+L/jYqKgv9VZ2PV1IB2jOVpDrSPS4mX
TFeYgii4bHB5kq1hoyQODg4ODmqJiI8wXGYIotBqU6uUfMXSFXFwcHBwaBm7
H+zWW6oHotB+e/vXb7loLwcHB0eTZt3f67BFaq/dvRSySOXg4ODg0D5EFqmD
wge9rXzLdHE4ODg4OBhDUCOY/cdsLAqjj42uqOKWrHBwcHA0XfjV/E9PfopF
4bMznyltkcrBwcHBoQWU8ctGHB6BReG7i9+pYpHKwcHBwaHpFFUU9d/fn0KL
VA4ODg4OzSWnNKdbaDdQBJ1Anc13NzNdHA4ODg4OJkkvSm+ztQ22SA2PC2e6
OBwcHBwcTPI893mL4BbYIvXs07NMF4eDg4ODg0niXsc5rnMEUWi2stn1lOtM
F4eDg4ODg0kS8xId1jpg32xOFDg4ODg4qgXV4yLGOa93js+SkJCOg4ODQ4v5
fxHurZ0=
    "], {{0, 420}, {520, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{243., Automatic},
  ImageSizeRaw->{520, 420},
  PlotRange->{{0, 520}, {0, 420}}]], "Text",
 CellChangeTimes->{3.7657020556624365`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getAltBases", "[", 
    RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "sides", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sides", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p2", ",", "p3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"p3", ",", "p1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"closestPerp", "[", 
          RowBox[{"#1", ",", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], ",", "sides"}], 
         "}"}]}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7660540610974607`*^9, 3.7660540912140727`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getIncenter", "[", 
    RowBox[{"p1_", ",", "n1_", ",", "p2_", ",", "n2_"}], "]"}], ":=", 
   RowBox[{"interRays", "[", 
    RowBox[{"p1", ",", "n1", ",", "p2", ",", "n2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "getBaricenter"}], ";", 
  RowBox[{
   RowBox[{"getBaricenter", "[", 
    RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "medians", "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"p1", "+", "p2", "+", "p3"}], ")"}], "/", "3"}], ";"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"medians", "=", 
       RowBox[{"getMedians", "[", 
        RowBox[{"p1", ",", "p2", ",", "p3"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interRays", "[", 
       RowBox[{"p1", ",", 
        RowBox[{
         RowBox[{"medians", "[", 
          RowBox[{"[", "1", "]"}], "]"}], 
         RowBox[{"(*", "23", "*)"}], "-", "p1"}], ",", "p2", ",", 
        RowBox[{
         RowBox[{"medians", "[", 
          RowBox[{"[", "2", "]"}], "]"}], 
         RowBox[{"(*", "31", "*)"}], "-", "p2"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getOrthocenter", "[", 
    RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "altBases", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"altBases", "=", 
       RowBox[{"getAltBases", "[", 
        RowBox[{"p1", ",", "p2", ",", "p3"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interRays", "[", 
       RowBox[{"p1", ",", 
        RowBox[{
         RowBox[{"altBases", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "p1"}], ",", "p2", ",", 
        RowBox[{
         RowBox[{"altBases", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", "p2"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getCircumcenter", "[", 
    RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"medians", ",", "medianPerps"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"medians", "=", 
       RowBox[{"getMedians", "[", 
        RowBox[{"p1", ",", "p2", ",", "p3"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"medianPerps", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"medians", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"norm", "[", 
           RowBox[{"perp", "[", 
            RowBox[{"p2", "-", "p3"}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"medians", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "+", 
          RowBox[{"norm", "[", 
           RowBox[{"perp", "[", 
            RowBox[{"p3", "-", "p1"}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"medians", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "+", 
          RowBox[{"norm", "[", 
           RowBox[{"perp", "[", 
            RowBox[{"p1", "-", "p2"}], "]"}], "]"}]}]}], 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"interRays", "[", 
       RowBox[{
        RowBox[{"medians", "[", 
         RowBox[{"[", "1", "]"}], "]"}], 
        RowBox[{"(*", 
         RowBox[{"2", "+", "3"}], "*)"}], ",", 
        RowBox[{"perp", "[", 
         RowBox[{"p2", "-", "p3"}], "]"}], ",", 
        RowBox[{"medians", "[", 
         RowBox[{"[", "2", "]"}], "]"}], 
        RowBox[{"(*", 
         RowBox[{"3", "+", "1"}], "*)"}], ",", 
        RowBox[{"perp", "[", 
         RowBox[{"p1", "-", "p3"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.765645732949212*^9, 3.7656458278425856`*^9}, {
   3.7656460598341956`*^9, 3.7656461785226216`*^9}, {3.7656462375472527`*^9, 
   3.765646374450745*^9}, {3.765646886738877*^9, 3.7656469020100865`*^9}, {
   3.765646946217825*^9, 3.765647184972618*^9}, {3.765647307276482*^9, 
   3.7656473334690547`*^9}, {3.7656474307388344`*^9, 
   3.7656474311078463`*^9}, {3.7656476691932735`*^9, 
   3.7656476979063077`*^9}, {3.765648173278365*^9, 3.765648209648874*^9}, {
   3.7656485106174583`*^9, 3.7656485730605555`*^9}, {3.765648643050417*^9, 
   3.765648662033888*^9}, {3.7656487095293875`*^9, 3.7656487328347054`*^9}, {
   3.765648777858938*^9, 3.765648809954026*^9}, {3.7656489522607193`*^9, 
   3.765648954481776*^9}, {3.7656493672032304`*^9, 3.765649386929471*^9}, {
   3.765649557667638*^9, 3.7656496136742263`*^9}, {3.765649646627115*^9, 
   3.765649648553991*^9}, {3.7656497800567646`*^9, 3.76564983854659*^9}, {
   3.7657042445302534`*^9, 3.7657043241685085`*^9}, {3.7657045089306192`*^9, 
   3.765704521683323*^9}, {3.7657046032044806`*^9, 3.765704692245428*^9}, 
   3.7658020222587976`*^9, {3.7660541069597783`*^9, 3.7660541236483755`*^9}, {
   3.766435628382712*^9, 3.766435635645294*^9}, {3.7664359370930367`*^9, 
   3.766436037605197*^9}, {3.766436074869693*^9, 3.7664360916961064`*^9}, {
   3.766436217110161*^9, 3.766436220630747*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Nine Point Circle: its center is the circumcenter of the medians, and is \
tangent to incircle (at Feuerbach point) and all 3 excircles\
\>", "Subsubsection",
 CellChangeTimes->{{3.765704696780299*^9, 3.7657047005382447`*^9}, {
  3.765704791155612*^9, 3.765704799395599*^9}, {3.7657076625432034`*^9, 
  3.765707675486966*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzs3XmgTVX/x/FHyjyTkjJUSDJVRMpQiBCRlEoUKXNJxsxjKpQokiF5lEIl
IvNcKTKVSCkhkjSQDN/f/d77XL+zz9rn3nPvPeesfc95//H6/Xrcs/f+7uGc
vT57WKv4I12bPnbBf/7zn+5Z4v5P0zY9az31VJvezS6M+x+39X663SMZ4/7j
+7i/D4/7D/1HEQHgcYsWLZKWLVuK7ToAAAAAAHZ07dpV9DLOY489JrZrAQAA
AABEXqlSpeJzoerevbvYrgcAAAAAEDlr3nxT6sTlQV8jevUS23UBAAAAACJj
aNu2cf/3Pw6544wePVps1wYAAAAACL86JUqIWy7UZ0onTpwotusDAAAAAITP
8uXLpZhfJvTNhWrmzJliu04AAAAAQHj06NEj2Vyo5s+fL7ZrBQAAAACEXtmy
ZYPKhRdccIEsXbpUbNcLAAAAAAidVatWxWc+t1w4sndvRy5UuXLlko0bN4rt
ugEAAAAAodGrV6+AuVB+/1169uxpZMPLLrtMtm/fLrZrBwAAAACkXYUKFZLM
hfqZzp07G9mwZMmSsm/fPrFdPwAAAAAg9dauXXs+5yWVC9UjjzxiZMMbbrhB
jh49KpGuGwAAAAAQGn379g06F/79999y3333GdmwRo0acurUKYl07QAAAACA
tNP7fcHmQnXkyBG56667jGzYoEEDiWTdAAAAAIC027BhgyPbBZMLlb5TePvt
txvZsEWLFsZnAQAAAADe1b9//1TlQrVz506pWrWqkQ3btm3r+nkAAAAAgPdU
rlzZkena33GHBJsL1aZNm6R8+fJGNuzWrVvAaQAAAAAA3vDZZ58ZeW7RxImS
klyoVq9eLVdffbUxr379+iU5HQAAAADArkGDBhlZTr7/XlKaC9XHH38cP869
//xGjhyZ7LQAAAAAADv83w1s1KhRqnOheu+99yRPnjxGNnzllVeCmh4AAAAA
EDlffPGFkd/efvvtNOVC9eabb8pFF11kzHv69OlBzwMAAAAAEH7Dhg0znyHV
v6UxF6rXXnvNmLfS+4m21xsAAAAAkOCWW25xZLb69etL/N9CkAvViy++6JoN
Fy9enOJ5AQAAAABCa8uWLUZemzVrlsT/PUS5UA0dOtRYTvbs2WX9+vWpmh8A
AAAAIDS0j1DXZ0hVCHOh6tOnj7GsSy65RLZu3ZrqeQIAAAAA0qZGjRqOnFa3
bl05//cQ50LVtWtXIxvqeId79+5N03wBAAAAACm3bds2I6PNmDFDzn8mDLlQ
tWvXzlhuhQoV5PDhw2meNwAAAAAgeKNHjw78DKkKUy78559/5IEHHjCWrf3f
nDhxIs3zBwAAAAAE57bbbnPkMv3fjs+EKReq3377TZo0aWJkw3r16oVk/gAA
AACApO3cudPIZFOnThXH58KYC9X+/fvj32f0r6N58+YhWwYAAAAAwJ3bmIKn
T58Wx+fCnAvVrl27xH/8RNWmTZuQLgcAAAAA4FSnTh1HDtN+SY3PRSAXqs2b
N0vFihWNbNi5c+eQLwsAAAAAkHCPzj+DTZ48WYzPRigXqnXr1kmpUqWMunr3
7h2W5QEAAABALBs3bpyRv06ePCnGZyOYC9WSJUvkiiuuMGobPnx42JYJAAAA
ALFI+/z0zV3VqlUT189GOBeq+fPnS/78+Y1s+NJLL4V1uQAAAAAQK/bs2WNk
rokTJ4rr5y3kQjVr1izJkiWLUecbb7wR9mUDAAAAQLQbP368kbf++usvcf28
pVyo9H1H/zrVO++8E5HlAwAAAEC0atiwoSNn3XTTTRLw8xZzoXJ7D1ItWrQo
YjUAAAAAQDT5Pi7nZcyY0ZGx9P5hwGks50I1YsQIIxfqM6Zr1qyJaB0AAAAA
EA30PUL/jPV7UjnPA7lQ9evXz6j74osvFh330PY2BQAAAID0pHHjxo5sdeON
N0qS03gkF6qnnnrKyIbFixeX3bt3W6kHAAAAANKbn376STJlyuTIVWPHjpUk
p/NQLlSPP/64kQ3Lli0rBw8etFYTAAAAAKQXkyZNMjLV0aNHJcnpPJYLT58+
La1atTLWo2rVqvLnn39aqwsAAAAA0oOmTZs6slSFChUk2ek8lgvV8ePHpVmz
ZkY2rFu3rpw7d85qbQAAAADgVQcOHJCsWbM6ctQLL7wgyU7rwVyYuD7169c3
sqFmX9u1AQAAAIAXTZkyxchQv/zyiyQ7rUdzodqzZ4/UqFHDWC99ztR2bQAA
AADgNc2bNzf6aglqWg/nQrV169b4PlX9s2GHDh08UyMAAAAA2Kb3BXPmzOnI
TaNGjZKgpvd4LlQbNmyQa6+91siGPXv29FSdAAAAAGDLtGnTjMz0888/S1DT
p4NcqJYtWybFihUz1nPIkCGeqxUAAAAAIu2+++5zZKXSpUtL0NOnk1yoPvzw
Q7n44ouNbDhmzBhP1gsAAAAAkfDrr79Knjx5HDlp2LBhEvQ80lEuVG+//bZk
z57dyIaTJ0/2bM0AAAAAEE5vvvmmkZF+/PFHCXoe6SwXqjfeeEMyZMhgrPfs
2bM9XTcAAAAAhMMDDzzgyEYlSpSQFM0jHeZCNX78eCMXqgULFni+dgAAAAAI
lWPHjkn+/PkduWjw4MGSovmk01yonnvuOSMXZsqUSVauXJku6gcAAACAtJo1
a5aRi/bu3Sspmk86zoVqwIABxjbIly+fbNq0Kd2sAwAAAACkVqtWrRx56Mor
r5QUzyed50LVo0cPIxsWKVJEdu3ala7WAwAAAABS4o8//pCCBQs6slD//v0l
xfOKglyoOnbsaGTDa6+9NvhxHAEAAAAgnXnnnXeMHPTtt99KiucVJbnw3Llz
0rp1a2Ob3HTTTXGrk/7WBwAAAACS06ZNG0f+KVasmKRqXlGSC9Vff/0l9957
r5ENb7/9djl9+nS6XCcAAAAAcPP3339LoUKFHNmnT58+kqr5RVEuVL/88os0
bNjQyIaNGzdOt+sEAAAAAP7ee+89I/d8/fXXkqr5RVkuVN/HrVOtWrWMbaRj
PdquDQAAAABCoW3btkbfm6meXxTmQrVjx474dwv9s+Hjjz+e7tcNAAAAQGz7
559/5PLLL3dknZ49e0qq5xmluVB99tlnUrZsWSMbPv3001GxfgAAAABi0/z5
842cs23bNkn1PKM4F6qVK1fGj+vov80GDhwYNesIAAAAILa0b9/ekW8KFy4s
aZpnlOdCtXDhQrn00kuNbPj8889H1XoCAAAAiH461kLRokUd2aZ79+6SpvnG
QC5Uc+bMkVy5chnZ8LXXXou6dQUAAAAQvT788EMj12zZskXSNN8YyYVq+vTp
kjFjRmMbvvXWW1G5vgAAAACiT4cOHRx5RscwTPN8YygXqokTJxq5UL3//vtR
u84AAAAAosO5c+eM/lO6desmaZ53jOVCpe8V+udCvY+4bNmyqF5vAAAAAOmb
9p3in2U2bdokaZ53DOZCNXjwYGN75s6dW3RsC9u1AQAAAICbzp07OzLMJZdc
IiGZd4zmQtWrVy8jG2r/rjt37oyJ9QcAAACQvpQoUcKRXzp16iQhmXcM50Ll
n7fVNddcIz/++GPMbAMAAAAA3rd48WIju2zcuFFCMv8Yz4Xq0UcfNbbvjTfe
KEePHo2p7QAAAADAu7R/Gd/MUqBAAQnZ/MmF/zl58qTcf//9RjasWbOm/PPP
PzG1LQAAAAB4kz7X6JtXHn/8cQnZ/MmF8X799Vdp3LixkQ0bNmwYc9sCAAAA
gLcsXbrUyCrr1q2TkC2DXHievlNYu3ZtY3vrvUTbtQEAAACIXU8//bQjo+TL
l09CugxyocPXX38tN998s5EN27VrF7PbBAAAAIBdZcqUCW8+IRcavvjiC6lQ
oYKRDZ988smY3i4AAAAAIm/FihVGNlm1apWEdDnkQldr1qwR/7FB1LPPPhvz
2wYAAABA5PTs2dORSfLkySMhXw65MKCPP/44fpx7/2z43HPPsX0AAAAARES5
cuUceaRNmzYS8uWQC5M0d+5cyZs3r5ENJ0yYwDYCAAAAEFarV682ssjy5csl
5MsiFyZr5syZkilTJmN/zJgxg+0EAAAAIGz69OnjyCA5c+aUsCyLXBiUSZMm
GblQ6f1E27UBAAAAiE4VK1Z05I9WrVpJWJZFLgzamDFjXLPhJ598wvYCAAAA
EFI6br1/9liyZImEZXnkwhQZNmyYsW9y5MghGzZsYJsBAAAACBkdC8E3d2TP
nl3CtjxyYYr17dvXyIaFChWSbdu2sd0AAAAAhMSNN97oyBwtW7aUsC2PXJgq
3bp1M7Khjnf4vW5PD9QHAAAAIP3auHGjkTcWLlwoYVsmuTDVHnvsMWNf6Xuh
hw8fZvsBAAAASLWBAwc6ckaWLFkkrMskF6bav//+Kw8++KCRDW+99Vb5+++/
2YYAAAAAUqVKlSqOjHHvvfdKWJdJLkyTY8eOyd13321kwzvvvJNtCAAAACDF
Pv/8cyNffPjhhxLW5ZIL0+znn3+WO+64w9h3Yc/0AAAAAKLOkCFDHLkiU6ZM
EvblkgtD4ttvv41/ftQ/Gz7yyCNsSwAAAABBq1atmiNTNGvWTMK+XHJhyGzZ
skWuv/56Ixt26dKF7QkAAAAgWZs3bzbyxLx58yTsyyYXhtT69evlmmuuMfal
jnlouzYAAAAA3jZ8+HBHjrjwwgslIssmF4bcJ598IkWKFDGy4YgRI9iuAAAA
AAKqXr26I0M0btxYIrJscmFYvP/++5I/f34jG7788stsWwAAAACGrVu3Gvlh
zpw5EpHlkwvD5r///a9kzZrV2LdTp05l+wIAAABwGDVqlCM3ZMiQQSK2fHJh
WL3++utGLlTvvvsu2xgAAADAebVq1XJkhgYNGkjElk8uDLuXXnrJNRt+/PHH
bGcAAAAA/9mxY4eRF2bPni0Rq4FcGBEjR4409nO2bNlk7dq1bGsAAAAgxj3/
/PNGXohoDeTCiHn22WeNfV2wYEHRcQ9t1wYAAADAntq1aztyQr169SSiNZAL
I6p79+5GNrzyyitlz549bHMAAAAgBn3zzTdGRpg5c6ZEtA5yYcQ98cQTxn4v
V66cHDx4kO0OAAAAxJgxY8bYfYZUkQsj7uzZs9KqVStj31erVk2OHz/OtgcA
AABiyB133OHIBXXq1JGI10EutOKPP/6Qe+65x8iGekycOXOG7Q8AAADEgN27
dxuZYPr06RLxWsiF1hw6dEjuvPNO4zho1qwZ2x8AAACIAW5j2unzhRGvhVxo
1XfffSc1a9Y0joWHH36YfQAAAABEOf/7RLfffrtYqYVcaN22bdukUqVKRjbs
1KkT+wEAAACIUnv37pULLrjAkQGmTJkiVuohF3rCxo0bpUyZMkY27NWrF/sC
AAAAiEKvvPKK0f4/deqUWKmHXOgZy5cvl+LFixvHxtChQ9kfAAAAQJRp1KiR
o92v75dZq4dc6CkLFiyQggULGtlw7Nix7BMAAAAgSuzbt08uuugiR5v/tdde
E2s1kQs95+2335YcOXIY2dDas8YAAAAAQkozoH97/8SJE2KtJnKhJ02dOtV4
B1VpZrRdGwAAAIC0adKkiaOdX716dbFaE7nQs9zeQ1UfffQR+wcAAABIp/bv
3y9ZsmRxtPEnTJggVusiF3rac889Z+TCzJkzy6pVq9hHAAAAQDr0+uuvG238
P/74Q6zWRS70vIEDBxrHTf78+eXLL79kPwEAAADpTLNmzRxt+1tuuUVs10Qu
TB+eeeYZIxsWLVpUdu3axb4CAAAA0omDBw9K9uzZHe36l156SWzXRS5MPzp1
6mRkw+uuu070+WTbtQEAAABInvYv6d+mP3bsmNiui1yYvrRp08Y4jqpUqSK/
/fYb+wwAAADwuHvvvdfRlq9atarYrikeuTBd+fvvv6VFixZGNqxdu7acOnWK
/QYAAAB41OHDhyVXrlyOdvyYMWPEdl3xyIXpzpEjR6RRo0ZGNtQxUGzXBgAA
AMDdjBkzjDa8tu1t1xWPXJgu/fDDD3LbbbcZx9VDDz3EvgMAAAA86P7773e0
3W+66SaxXdN55MJ0a8eOHfHvFvpnwyeeeIL9BwAAAHjI0aNHJW/evI52++jR
o8V2XeeRC9O1zz//XMqVK2dkwx49erAPAQAAAI946623jDa7jllhu67zyIXp
3qpVq+Sqq64yjrNBgwaxHwEAAAAPePDBBx1t9UqVKontmhzIhVFh0aJFUqhQ
ISMbvvjii+xLAAAAwKLf4/JVgQIFHO30ESNGiO26HMiFUePdd9+V3LlzG9lw
0qRJ7E8AAADAktmzZxtt9P3794vtuhzIhVFF+7698MILjeNu1qxZ7FMAAADA
gtatWzva5tdff73YrslALow6r776qpEL1QcffMB+BQAAACLozz//lEsvvdTR
Lh86dKjYrstALoxKL7zwgpEL9T7iihUr2LcAAABAhMyZM8dol+tY5LbrMpAL
o9aQIUOMYzBPnjyiY1vYrg0AAACIBY8++qijPV6hQgWxXZMrcmFU6927t5EN
r7jiCtm5cyf7GAAAAAijkydPSuHChR1t8YEDB4rtulyRC6Nely5djGxYunRp
2bdvH/sZAAAACJO5c+ca7fDvvvtObNflilwYE9q2bWsckzqW5pEjR9jXAAAA
QBg89thjjvZ3uXLlxHZNAZELY8KpU6ekZcuWRjasVauWnDhxgv0NAAAAhNC/
//4rRYoUcbS9+/XrJ7brCohcGDN+++03ady4sZEN77rrLvY3AAAAEELvv/++
0e7etWuX2K4rIHJhTPnpp5+kTp06xjGq9xJt1wYAAABEiyeeeMLR3i5TpozY
rilJ5MKYo9cpqlWrZmRDff7Zdm0AAABAenf27FkpXry4o62t4wTYritJ5MKY
9OWXX8aPneKfDZ966in2PQAAAJAGCxYsMNrZO3bsENt1JYlcGLPWrl0rJUuW
NI7ZAQMGsP8BAACAVOrUqZMxRpztmpJFLoxpixcvlssvv9zIhqNHj+YYAAAA
AFLh6quvdrSte/ToIbZrSha5MObNmzdP8ubNa2TDiRMnchwAAAAAKbBo0SKj
Xb1161axXVeyyIWI89Zbb0nmzJmNY/jNN9/kWAAAAACC1LVrV0d7ulSpUmK7
pqCQC/E/kyZNMnKhmj9/PscDAAAAEATNgemyX0dyIXyMHTvWyIUZMmSQpUuX
ckwAAAAASViyZInRltZxAGzXFRRyIfwMHz7cOJ5z5colGzdu5LgAAAAAAtB7
g75taO1/xnZNQSMXwkXfvn2NbHjZZZfJtm3bxHZtAAAAgBdde+21jvZzly5d
xHZNQSMXIoAnn3zSyIY63uHevXvFdm0AAACAlyxfvtxoO3/22Wdiu66gkQuR
hPbt2xvH9/XXXy+HDh0S27UBAAAAXqFjFPq2ma+88kqxXVOKkAuRhDNnzshD
Dz1kZMMaNWrIn3/+KbbrAwAAALygbNmyjvZyhw4dxHZNKUIuRDKOHz8uTZs2
NbJhgwYN5Ny5c2K7PgAAAMCmVatWGW3lDRs2iO26UoRciCAcOHBA6tWrZxzv
LVq0ENu1AQAAADb16tXL0UYuVqyY2K4pxciFCNKePXukevXqRjZ89NFHxXZt
AAAAgC0VKlRwtI8ff/xxsV1TipELkQJfffWV3HDDDUY27Natm9iuDQAAAIi0
tWvXGm3jNWvWiO26UoxciBRav369lC5d2jj++/XrJ7ZrAwAAACLJf9zvK664
QmzXlCrkQqTC0qVLpWjRokY2HDlypNiuDQAAAIgU/2fp2rVrJ7ZrShVyIVLp
gw8+kAIFChjZcPz48RKpGsaNGycffvhhxJYHAAAAJNI+R/3bwitXrhTbdaUK
uRBpMHv2bMmWLZvxfZg+fbqEe9lDhw6NX9ZFF10kK1asCPvyAAAAAF/9+/d3
tIELFy4stmtKNXIh0mjKlClGLlTvvfeehGuZ/n0B582bVzZt2hS25QEAAAD+
KleuHD399JMLEQIvv/yyazZcvHixhHpZnTp1cl0W/d4AAAAgUj777DOjPap9
cNiuK9XIhQiRUaNGGd+N7Nmzy7p16yRUy2jdurVrJqS/GwAAAETSoEGDHO3R
QoUKie2a0oRciBDyf8ZaXXLJJbJlyxZJ67ybNWvmmglfeeWVNM8bAAAASImq
Vas62qRt2rQR2zWlCbkQIfb0008b2e2qq66S3bt3S2rm9/fff8sdd9zhmgmT
6t/m7NmzqVoeAAAAkJQvvvjCaJd+/PHHYruuNCEXIgw6dOhgfFcqVKggP//8
s6RkPocOHZJq1aqlqF+bEydOSL169aRx48YpWhYAAAAQjGHDhjnapQULFhTb
NaUZuRBh8vDDDxtZ7pZbbok7vII7vvbs2SPlypUz5pEjRw5ZsmSJ6zx++eWX
+GUkfvaBBx4IalkAAABAsHzbm6pVq1Ziu6Y0IxciTP766y9p3ry5kev0Xt7p
06clqWn1fcQrr7zSmPbSSy+V9evXu0773XffSfny5Y1p2rdvn+SyAAAAgGBp
O9W/vfnRRx+J7brSjFyIMNL7dw0aNDC+O/fcc48EmmbNmjXx9+L9pylRooRs
3brVdbqvvvoq/h1Gtz5vQtkfKgAAAGKb9oPv294sUKCA2K4pJMiFCLPv446x
mjVrGpnNrc+mRYsWSdasWY3PVqxYUXQ+bvPX3Kf5z62vG82LttcfAAAA0cO/
Xfvggw+K7ZpCglyICNi+fbtUrlzZyG6dO3eWxM/MmTPHtX+ZW2+9VY4cOSJu
8128eHH8GIn+0+jzpPpcqe31BgAAQPTYtm2b0e58//33xXZdIUEuRIR8+umn
ct111xnfpd69e8vUqVNdM2H9+vXl5MmT4jY/7Y/UbRrtv/Tw4cOu02h/Na+9
9prr3wAAABA9tM2n7zSFcp6jR492tDvz5csX0vlbRS5EBK1YsUKKFy/umuf8
3XvvvRJoPtOmTXOdRvu00XEq3KbxzZFvvfVWwHkDAAAgfdu/f//5dp+Ogz1h
wgQ5cOCApHW+t99+u6Pt2bJlyzTP0zPIhYgw7a/J7X1AX4888ogEmn78+PGu
0yTVl8306dOj954/AAAAHAK1F2vXri0vv/yy/PTTT5LSee7cudOY39y5c1M8
H88iF8KCd955RzJlyuT6fe3SpYsEms6//6dErVu3DjjNK6+84jpNs2bNAk4D
AACA9EvzX3LPptWqVUvGjh0rP/zwgwQzzxdffNExfe7cuYOaLt0gF8IC7W8m
0HdUM6PbNP369XP9fKdOnVw/r0aNGuU6zcMPPxxwGgAAAKRfBw8ejL/+nzFj
xqDeXVLVq1cXzX1J9VtYt25dxzQtWrQI+Nl0iVyICNPxKZL7bi5cuFB8p+nW
rZvr53r16iWBlvPss8+6TtOxY8eA0wAAACA6aJ8Ts2bNiu+zItBzam60D0Pt
X+bbb7+VxHnt2rUr6HsZ6Ra5EBHUvHnzoL6PWbJkkdWrV4tO8+ijj7p+Ztiw
YRJoOU8++aTrND179gw4DQAAAKLTqVOn5O2335b777/fdazsQKpUqSL6HlOf
Pn0c/54zZ06xvU4hRy5EBOj1Gu0r1O37pn2LDho0yPj3AgUKiP/9+kTjxo2T
QMtq166d6zRDhgwJOA0AAABiw5kzZ+Tdd9+NH48+R44cQWdEX3qvw/Z6hBy5
EGGmYwnecsstrt8p/U4mfk7v5QXzPZwyZYoEWpZeA3KbZsyYMQGnAQAAQGw6
d+6czJs3L77vCe1HJthcqOOuDR48WLZu3Sq21yFkyIUIo71790qFChWM71K2
bNnk448/Fv/Pax8ySX0H9f6/23JOnz4tjRo1cp3m9ddfd50GAAAA8KXjmOl4
aTpefbAZsXz58jJgwADZvHmz2K4/TciFCJOvvvpKrrrqKuO7o2MXrl27Vtym
2bdvX/zzo/7TXHDBBTJ79mzXaY4dOxbfz7Db9zTQNAAAAEBSFixYIG3btk1R
nzXXXXedaB/6mzZtEtv1pxi5EGGwbt0617HrNSdqXnSbZvv27VKyZMmA37M6
derIyZMnHdPqmKSVKlUyPqvfX/0u294OAAAASL++j8tKF154YareQSxdurT0
7t1bPv30U7G9HkEhFyLEFi9eHP+cqNs99kBjwmzcuFEuu+yyZL9fTZs2PT/9
119/Hf998/+M3vdfuXKl63IAAACAYE2cONHRztQ+85csWSIdOnQIqu2aSO99
PPPMM7J+/XqxvU4BkQsRQtqPjNt3Qfud+eWXX8RtmqVLl0quXLmMaUqVKiVV
q1Y1/r1Vq1by+eefyxVXXGH8rUiRIunzvj0AAAA8p3Hjxo62ZpMmTcT378uW
LZPOnTu7tksDufrqq6V79+6yZs0aieS6JItciBDR8Sbcjn0dn0LHqXCbZv78
+fHvDvpPo2PFHDhwQPSeoFs2zJw5s/Fv1157rXzzzTeuywEAAABSQt9X8m9z
Tp06VQJ9Xp9X69atmxQrVizojKj9muq427bXNR65ECEwfvx412P9nnvukUDT
zJw503Wa2rVryx9//HF+ui+++CL+GdSkvlOVK1eW/fv3B1wWAAAAkBKTJk1y
tDe1/wrtAz+YaVevXh1/T9CtD0Z///3vf4OaZ9iRC5FGI0aMcD3GW7duLYGm
8X9WO9Hdd9/tOo1+t9z6sVG33XZb3CHLMQsAAIDQ0X4tfNucd911l6RmPtof
o75b6Na/ovZp49+vojXkQqRB3759XbOaPmcdaJrRo0e7TvPQQw8FnMb/eo2v
F154IeB0AAAAQErp+0z+/ShOnjxZ0jpf7WuxV69e5/tOTOrZuogjFyINDh48
KGXLlnV8Z7Q/3kCf1zE/3bLdE088EXCaF198Mdn776H4ngIAAABqypQpjrZm
xowZ5Z9//pFQLkP7UdT3qmyv63nkQqTR7t2749+Z1e/MsGHDJNDn9Blrt0zX
o0ePgNMMHjzYdRq3vmo882w2AAAA0rXmzZs72pkNGzYU2zWFHbkQIbB582Z5
6aWXJNDf27dv75rvBg0aFHAafQ7bbZqnnnpKXn31Vde/MZY9AAAA0kLHVsuZ
M6ejjaltT9t1hR25EGHWsmVL1wynz4cGmkbHCnWbpn///uencXu+9KKLLpIV
K1YEnC8AAACQFP+x1zJkyCB//fWX2K4r7MiFCJMzZ87E99vklu+0H5lA0+m4
9W7TaH81/p8dOnSo8bl8+fLJZ599FnD+AAAAQCD33Xefo21Zv359sV1TRJAL
EQY6boSOH+GW72bNmiWBpvPvDziRjmsRaJo+ffoYny9SpIhs37494DQAAACA
v19//VXy5MnjaFfqON2264oIciHCYPr06UZW0/FZPvjgA3H7vN6br1u3rmsm
fPPNN12n8dW1a1djumuvvTbu8P4+2WkBAAAApe1O/zbl8ePHxXZdEUEuRJi8
8sor579Pet1l+fLl4va5Q4cOyc0332x8B/VZ7nnz5rlO46Zdu3bGPCpXriyH
Dx8Oeh4AAACIXQ888ICjLXnHHXeI7ZoihlyIMBo1apRcccUVouOzuP19z549
xviHSvuA+uSTT1ynCeTff/8V/++yuv3222PjXWEAAACk2rFjxyR//vyOduS4
cePEdl0RQy5EmH399dfi9u9btmw5P+6hr0KFCsmGDRtcp0mOvtfYpEkTY56N
GzdO1fwAAAAQG7QPDP825NGjR8V2XRFDLoQFa9askYsvvtj47pUoUUK2bdsm
aZn3zz//7Pquot5LtL3eAAAA8Cb/PvHr1KkjtmuKKHIhImzRokWSNWtWI7dV
rFgxZP3EfPvtt3LLLbcYy2jfvn1I5g8AAIDo8ccff0jBggUd7cYXXnhBbNcV
UeRCRNCcOXNc+xy99dZb5ciRIxLKZelzqpo1/Zf19NNPh3Q5AAAASN/eeecd
o834yy+/iO26IopciAirV6+e4zunY4WePHlSwrGsdevWSalSpYzv+cCBA8Oy
PAAAAKQ/bdq0cbQVdRxu2zVFHLkQEXbixInzz3g2b95cwr28JUuWxPeJ6p8N
n3/++bAvGwAAAN72999/x/d76NtOHD16tNiuK+LIhbBAxxTU6zKRWt78+fMl
X758RjZ89dVXI1YDAAAAvOe9994z2ogHDhwQ23VFHLkQMUL7Hs6SJYvxvX/r
rbfEdm0AAACwo23bto62Yc2aNcV2TVaQCxFDJk+e7Nrvzfvvvy+2awMAAEBk
/fPPP8b7RiNHjhTbdVlBLkSMGTdunJELM2bMKEuXLhXbtQEAACBy9F0j/3bh
jz/+KLbrsoJciBg0YsQI4zcgd+7csmHDBrFdGwAAACLj8ccfd7QHq1evLrZr
soZciBjVr18/IxsWLlxYvvrqK7FdGwAAAMLr9OnTUqxYMUdbcPjw4WK7LmvI
hYhhTz31lJENdbzDPXv2iO3aAAAAED4ffvih0Q78XrORB2qzglyIGOf//IC6
8cYb5eDBg2K7NgAAAIRHx44dHe2/atWqie2arCIXIsadPXtWHnroISMbah/F
x48fF9v1AQAAILTOnTsnV111laPtN2TIELFdl1XkQuA/f/75pzRr1szIhg0b
NpQzZ86I7foAAAAQOgsXLjTafbt37xbbdVlFLgTiHTp0SOrXr2/8Rtx3331i
uzYAAACETpcuXRztvapVq4rtmqwjFwLnfffdd/H9E/tnw3bt2ont2gAAABAa
JUuWdLT1Bg0aJLZrso5cCDhs27Ytvt8Z/2z45JNPiu3aAAAAkDaLFy822nlf
f/212K7LOnIhYNi4caNce+21xm/Gs88+K7ZrAwAAQOrptX7f9t1NN90ktmvy
BHIh4GrZsmXGWKdq1KhRYrs2AAAApE7p0qUdbbsBAwaI7Zo8gVwIBKTjnV58
8cVGNpwwYYLYrg0AAAAps3TpUqNdt337drFdlyeQC4EkzZ49W7Jnz278hsyY
MUNs1wYAAIDgPf300472nPYpYbsmzyAXAsl64403JEOGDEY2nDt3rtiuDQAA
AMG57rrr6DsiEHIhEJTx48cbuVBpn1a2awMAAEDSVqxYYbTjtmzZIrbr8gxy
IRA07XPG//ckR44csnbtWrFdGwAAAALr2bOnow13/fXXi+2aPIVcCKSI9lnl
nw0vvfRS+fLLL8V2bQAAAHBXvnx5R/utT58+YrsmTyEXAinWo0cPIxuWKFFC
du3aJbZrAwAAgNPq1auNttumTZvEdl2eQi4Mn3PnJH77rlghsnChyHvvibz5
psikSSLjxomMGCHSv79IXMaQjh1FHnlE5P77RRo3FqlbV+TWW0VuuEHk2mtF
ihcXueQSkVy5RC66KIH+t/6b/k0/o5/VaXRanYfOS+ep89Zl6LJ0mbpsrUFr
0Zq0Nq1Ra9WabW+3dKJj3Hb1/32pWLGi7N+/n20IAADgIXpv0LfNVqFCBbFd
k+eQC1Pv9GmRPXtEli4VmTJFRPszatVKpHp1kaJFze2aXmjtug66LrpOum66
jrquus62t7uHtG7d2siGt8Zl899++43tBAAA4BH6LqFve61Xr15iuybPIRcG
9s8/It98I6L9Ter9NX0G+YEHRKpVE7n8cnO7xQpdd90Gui10m+i20W2k20q3
me39FkEnTpyQe++918iG9evXl1OnTsXUtgAAAPCidevWGW21Tz/9VGzX5Tnk
wgTaZ4jmm/btRapUEbn0UnO7IDi67XQb6rbUbRrl/bEcOXJEGjZsaPzeaF60
XRsAAECs0zEKfdtoZcuWFds1eVIs5sKvvkp4NrJDB5HKlUUuuMDcBqGWObNI
3rwil10mctVVIno86rJr1hSpX1+kWTORBx8Ueewxka5dRfTe9uDBIqNHi7zy
isgbb4jMni3y/vsin3ySQP9b/03/pp/Rz+o0Oq3OQ+el89R56zJ0WbpMXbbW
oLVoTVpbuNdft7EuW7e5bnvdB7aPgxD64YcfpFatWkY2fETf7/RAfQAAALGq
UqVKjvaZ9h9ouyZPivZcuH27yPTpIp07i1StKpIpk7m+aZU7t8h11yVkL71H
NnRowjKXLxfZvTt9PFupNWqtWrPWruug66LrpOum6xjq7ab7QveJ7htdpu4r
29shDXbu3Ck33XSTkQ27dOmSrtcLAAAgvdq4caPRNtPnSm3X5UnRlAu//lpk
5kyRbt0S+uXMmtVct5TSeZQsKXL77SKtWyf0w6LPRi5alJBjjh9Pn9sqNXRd
dZ113XUb6LbQbaLbRrdRqLa37jvdh7ovdZ/aXu8U+Pzzz+OfTfD//WF8HAAA
gMgbOHCgo01WpkwZsV2TZ6XnXKjvrem4C/p8ZI4c5nqkRJYsCXnkySdF3nor
4Z24I0fSx3bwEt1muu10G+q21G2q2zYt+0b3re7jUaPSxfOnK1eulCuvvNLI
hiP0WPVAfQAAALGiSpUqjvZY9+7dxXZNnvW/XLg5zspEH33kze2lmUPvIT30
UNr6hfF9123qVJFt27y5vtFEt7Fu61C801m4sEjbtgljLx496sl9t3DhwrhD
9FIjG7788suerBcAACDa6HNc/m0xHd/edl1e8n1cFhw7dqzUrFnT2Fb+dMxH
vf+6efNmO9tw1aqEsRC0f8vU5ojy5RNyxKuvimzaxLHgFbovdJ/ovtF9lNr9
m3gvceNGT+3bOXPmSK5cuYzv1FTNxx6oDwAAIJoNGTLE0QYrXbq02K7JK1as
WCHFihVLNgsGotNOmzYtvNtz716RiRNF7rsvdfcEdX/r/cRx40TWrxf591/2
f3qh+0r3me473Ye6L1N7L1HvK//4o/V9P336dMmYMaPxXdLMaLs2AACAaFat
WjVH++tJfcfJA3XZpHkw0L3Bxo0by4ABA+LpfYx58+ad/98PP/yw5M6d2zUf
6udCUt/p0wn9mOjYCqm5J6h9ZWpfs3HrKH/9FfP7OuroPtV927Nn6u4p6r3E
uGNZli0TOXPGyvExceJE1++ePmtqffsCAABEIX3W0b/ttVz73fdAbbbo86L+
20TzXkpynW7Xrl27GhmxtfZFmZq60nJPMGdOkUaNEqbfty+m921M+vnnhPcU
W7RI+dgZei+xZcuEZ1f1GIxg3c8//7zxPcyaNatoHzXWtykAAECUGT58uKPd
VVL7zvdAXbZobvO/N6jvFqZ2fseOHYvPh/7vH+q/Jzv9qVMib7+dkAVTOo66
3ifScdoXL47p/QkX+v5p//4Jfdmk5JjSY1CPRT0m9diMQK2DBw82smHBggVF
34m2vh0BAACiSPXq1R1trlgdT1pzmua1xO2g9/lC9tynJNw/LFq0qOO50oB5
c+1akaefFrnqKgm6zZ4/v0jTpgnvmX37bUzuQ6SCHoNvvJHwbuLFF0vQx5se
m3qM6rEa5hp79eplZEMd02Lnzp1hXzYAAEAs2Lp1q9HeWrJkidiuywbf+4Sa
38LRl6hmzxo1arjfN/zhB5GxYyXuAxJ027xSpYS2+YcfWnsPDFFEj6GlS0X6
9hWpVk2CPg71mNVjV4/hMNXWuXNn47eqXLlycYsM3zIBAABixahRoxztrKuv
vlps12SD9heTuA3Kly8f3DOeaaDvKiYur4k+y/fAAyLZskmy7W8dq1zfEZsw
QWTHjpjcV4igXbsS3ivUZ0f12Evu+NRjWI9l7Tc0DNcpHn30USMb3nzzzXJE
x+i0va0AAADSsVq1ajnaWJ06dRLbNUWaPivq++xoJMYc1Nyp+TNxuQOSa2/f
eqvImDGeGEMAMUqPPT0G9VgM5h6ivqf8zDMiGzZIqGo4deqU3H///UY2vOOO
O+TEiRMhWw4AAEAs2bFjh9G+WqRjH3igtkjyHZtQx6aI1HI1G/r2Vfq9f7v6
sstEOncWoe9FeI0ek3ps6jEaTEasVUvkpZdEfvpJ0rrs3377Te666y7jt6tZ
s2ZpnjcAAEAs8u8DXvtxsF1TpI0ZM+b8+mufoZFevo59eH4cjMQ2dIMGIlOm
iPz+e8ztD6QzeozqsarHbDD5UMdL0f5t5s6VtCz3p7h8Wbt2bSMb6vPZ1rcJ
AABAOuPfrurQoYPYrimS9H5dnjx5zj8/Gu53CgPx7Yfm+wULYmofIIp8+WVC
fzWlS0tQGbFiRZHx40VS+fznrl274t8t9M+GHTt2TNX8AAAAYtE333xjtKc+
1D4tPVBbpPjeq9N+Z2zVoc+u2rxnCYTUuXMi774rcv/9IpkySbL5UHPk6NEi
v/0mKV3Wl3FZ1Pc93UQ6roX17QAAAJAO+D4/mTgug+2aIs23T9C0jFsfConj
Guq7jra3CxAye/aIPPecyE03SbL5UI/9wYNFfv5ZUrKMtWvXSokSJYxsOHTo
0KDmo88JTJs2TZo0aSI1a9Y8/wyBL/13NXbsWOu/FQAAAKFUr149R7unffv2
YrumSEts/+n9Btu16H1Cr2RUICx0XFT9nbn4YkkyH15yiUifPhKfKYOc9+LF
i6Vw4cJGntMcF2gazYI6fqj/NMHQ6zcDBw609uw5AABAKOzevdto58yfP19s
1xVJvs9u2nyGNJHvWBl6L9d2PUDYHDwoMnKkyLXXSpL5MHdukSefFNm+XYKZ
79y5c13v9b3++uuO6fW7r/f+3PKevuurGjduHP+7oM8UJP5boHyo+dL6NgUA
AEiFl19+2dG2ueKKK8R2TZHmmwsjOTZFUryUU4GwO3VKZNIkkWrVJMl8qO8o
Pv64yOefS3LznDlzZtzHMxn5bfbs2fH39lq3bm38TbOfvmsczL0/vX6jn/cd
X0bpfUfuHQIAgPSmQYMGjjZNu3btxHZNkabZy6u5kL72EXO0n5pGjSTZdxDj
cp2sXi1Jzeu1115zvben4/D458HUPrOtGVB/Q3zzod6r3Lx5c6rmBwAAEGl7
9+6VjBkzOtpH7733ntiuK9J8c6FX3udLbGPqM2u2awGsWL5cRK+LJJcPW7QQ
WbxYAs3Hv18tX/o+cajym+ZDfebUNxvqvUfr2xEAACAZEyZMcLSRtK8G2zXZ
4JsLbdeSKPEdJnIhYt6WLQnvFubLJ0nmw7vuElm0SNzmMWzYMNf3B8PxvKdv
v1GK+4YAAMDr7oprR/m2Xx599FGxXZMNvrnQK20437ar7VoAT9i3L2Hsiquv
liTzod5j9Psea/675JJLHM+NhrNW3/FQ9b6hV55DAAAA8Lcvro3l3yfDnDlz
xHZdNvg+Z+a19wsZ2x7w8+efIuPHi1SqJAGzYebMIj17ihw4IDqNbx8zkbrW
4nu9ib5oAACAV/n3x3DppZeK7Zps8e2PVPsYtF2Pth/pjxQIwqxZInfcIQHz
YdGisqJDB8f7hJHMZ3pfku8yAADwsrvvvtuRC/V6uu2abNFnR710f873GTT6
rQCCoM863HyzuGXDmhbf9dMMmtiHlD5Pyj1DAADgJfv375esWbM6cuHbb78t
tuuyYtmy+P4qiv7n/8emtl2T7z0G3ksCUmDs2Ph7hImZcKrfWBQ2avK9zuOF
604AAACJXn/9dUcmLFiwoNiuKeJ27BDRsRr/137s6rM9bGcxva+Q+Myb9e0E
pDf6TmGPHiIXXigVPPK9LhqXVb3W5zEAAMA999zjyIWtWrUS2zVFzK+/ijz7
rEjOnOL7rNk8D9xXUL73FngfCUi9Y8uXe+I7rXz7tvLCO8wAAAAHDx6UHDly
OHLhLO27wQO1hZ32YViihATqo6JolizW7y3oc6y6fH0nyfZ9SyA989J7uvpd
9kpGBQAAUL5tJVWgQAE5e/as2K4rrN59V+SWWyRgn4WaFSdMiL+On7hdmjRp
EvFt4tuvPfcKgbRp3Ljx+e+TF/p70efCvfIOMwAAQIsWLRy58MEHHxTbNYXN
jz+KtGkjAfNgtmwifftK/LOl/5tGxzazcY/Bt09UvVfohXYskJ4lfpe98p6u
9jnDO4YAAMALDh8+fL7P9EQzZ84U23WFha7XVVdJwEyo43J89ZWx7prPfLdR
JMa512fMEvua8cIzb0A0SPxORWoc++T4Pg/AM+IAAMCmGTNmODJh3rx55d9/
/xXbdYXUoUMi7dtLwDxYt67IwoVJrrPvs7batgznmGd6X7BChQr0Yw+EWOJ3
Sp8ntV2L8s2FkbjeBAAAEEjLli0dufD+++8X2zWF1DvviJQuLa55UMc0e/31
oNfXtw2n2TAc9/A0b/reJ/RK+xWIBl57V1ezILkQAADYdvToUcmXL58jF+r9
Q9t1hUTcukmnThLwHqGOw7F3b4rX1Xd8eTVw4MCQba+xY8c6MqE+68Y7hUDo
eK3/T9+xKsiFAADAlrfeesuRcfQduhMnTojtutJs/nwR7VfCLQ9efrnIlClp
Wkf//lu1L8Fp06alep7aHqxZs6Zjnl5ptwLRJPE9YS++XxjOZ9MBAACS8tBD
DzmyiPZLarumNPnzT5GnnpKA9wgfeEBk9+6QrKNmOf/+ejQfduvWLaj2nfYx
ofcHfd8jpI8ZILwS+yP1Yi60XQsAAIhNv//+u1x88cXRk0e035hKlcQ1DxYq
JDJpUsjXTZ/x1Hadfz5MfP9Q7wEqzYr6vGni/04cp96f3iOkT0IgfHzHL7Rd
i0q8LqS/IbZrAQAAsWn27NmOTJIzZ075U++3eaC2FDl1SqRXLwl4j/C++0S+
+Sas66VZTjOdWz4MhrZVeYYMCD/f9/nmzZsnNmvR60o8Nw4AAGxr3bq1I5s0
b95cbNeUYkuXilSrJq55sGBBkYkTI75Omu90XIkaN90k5V0yYNGiReOfYdPP
2G6XArFGr+F4JYv5vqecrp/VAAAA6ZbeF7z00ksdeWVKGvtiibj+/SXgPULN
uDt22F0ffR7Uv67ff09f2xiIQuXLlz//rLfN/n59+5qi32EAAGDDnDlzHJkw
W7Zs6addov3G1K8vrnkwf36R8eO9sR7kQsCTfPt6sTWOoe+4hYxRCgAAbHn0
0UcdubBp06Ziu6agLFokUqKEuGZCXYetW72zHuRCwLP0ee7Ee4Y2+nry7XuK
vqYAAIANJ0+elMKFCzty4eTJk8V2XcnS+4AZMoiRteLadTJunPfqJxcC3vTX
XzL1uuvO//7p85yRXL7v/Urb7zgCAIDYNXfuXEcmzJIlixw5ckRs15Wkbt3E
9R5hrVoiXu3Hk1wIeM+hQyJVq4p+H337hdJ+uCKxfN++ZrT/Yu4VAgAAWx57
7DFHLmzSpInYrimgvXtFGjYU10z4+OMi//zj3drJhYC36LvJZctK4vfxmGYz
n9/CcPcJqn0V63OricvbXL26xP/G2d4uAAAg5vz7779SpEgRRy589dVXxXZd
rpYsEbnmGnHNhGPGeLNmX+RCwDv0uYLixcX/O7m5QAHJnSPH+d/DbvpsQhiW
r5nTNxNOTaxBf+P0t8729gEAADHl/fffd2TCTJkyySF9rsoDtTnouIMXXihG
ripZUmThQu/V64ZcCHjDmjUicfnP+D5qH1bbtonvs52Jz1CEsn9mzZq+8x/g
X4f+1lkYaxUAAMSuJ554wtE+ueuuu8R2TYbu3cX1HmGjRiLffee9egMhFwL2
6XWkLFnE+C5ef72Iz7t9+oynvu+X+Nuo9/bGjh0raVn2vHnzxLffUXVFnBVu
v29Kf/tsby8AABD1zp49K8WLF3e0USZMmCC26zpv3z4RHcfLrb309NPeqTNY
5ELArnfeEdffE32v79dfxf/z2gdM4pj3iTTXaT4Mtn8Yvc84bdo08R2zXmXN
mvX//zvO5EDZUH8D9bfQ9rYDAABRa8GCBY52SsaMGWX//v1iu654y5aJlCkj
Rhspe3aR9DCGhhtyIWDPG2+Ia+66884k+6vSXKfjSPjeO/TNiNpv6cCBA+Ot
XLny/H/rs6IVKlQwpkkci0Ln+9xzzzn+/ZlA2VB/C/U30fY2BAAAUalTp06O
NkmDBg3Edk3xJk0SyZxZXJ/zWr3aGzWmBrkQsEPHM3XLW/feK8HOI6l8GCzN
g/73GTVD+n6maZyDGTOatepvov422t6WAAAg6lx99dWO9sh4HSfedl3PPCOu
7bf77xf55Rf79aUFuRCIvGHDxPU35dFHJbXz1PcEu3btKkWLFk0yB2qG1Cyo
/dgk1W/NM3G/e77TlYvzabZs7nXrb6TtbQoAAKLGxx9/7GiHZMiQQX744Qex
VtOJEyL33COu7aCBA+3VFUrkQiCyevcW19+UuEwXyuVo5luxYsV5qRmbvmPH
jo7fZH3ncJ5bn6mqWTOR48dDug4AACA2+feTXr9+fbFWz+HDIvXqidH2ueQS
kf/+115doUYuBCKnc2dxzVR9+4r12gJo06aNcc9xossYi/Fq1XL0nwoAAJAa
11xzjaPtMU7fv7FRy969IrfcIkabR/sH/PJLOzWFC7kQiIzWrcU1S40YIeFe
9u9p+E6fPHlSWrRoYWTDYTfcIOcuu8xcn/LlRb74IuzrBAAAotMnn3xitDu+
szEO4NatItddJ0Zb54EHRP7+O/L1hBu5EAi/QM+jR+D96RFxufOqq65K8l3C
5Bw9elQaNWpk/Eb3uOOOhL63/NfriitE4n7TrW93AACQ7nTv3t3R3rhD2xuR
rmP9epE8ecRo43TsGPlaIoVcCISPvqPs9jy6mjZNwr18zYSJv6mVK1cWvfeX
2nn9+OOPcttttxnZ8JkWLRKepfBfPx2/5+23w76OAAAgupQpU8bR1hgzZoxE
tIYlS8S17danT2TriDRyIRAe+o5ytWri+rvy7rsS7uX7ZsJE9eIy6tmzZ1O9
7K+//lqqVKliZsMOHRLGXHRb1wkTwr6uAAAgOixfvtxoZ+zatUsiVsPcueLa
nnnuucjVYAu5EAg9fQZe37Nzu4f28ccS7uW7ZcJE7du3T9Pyv/jiCylXrpwx
3379+iWMvej2Wzp0aNjXGQAApH/+42TVrl1bIrb8GTPEtR3z2muRq8EmciEQ
Wl99JXLVVWJ8r7Qv43XrJNzL12ctkhvLfmgac9rq1avj31n0n+/IkSNFHnnE
XHf11FNhX3cAAJC++V97fuGFFyQiy37pJXFtv8yeHZnlewG5EAgdzX0FC4rx
ndKcqHkxzMsfPXp0spkw0fTp09NUz6JFi6RQoULGfMdrXzpdupjbQGmfrLb3
EQAA8KRVq1YZ7YqdO3dK2Jf9zDPi2m6JwDNenkIuBEJj8WKRbNnE+D5VqCAS
gb6Vg7lP6CtjxoyybNmyNNX13nvvSe7cuY15T506NeHdbLff2EaNwr4tAABA
+tO7d29He0L7uwv7clu2FNf2yoYN4V+215ALgbTTfmTcflN0HNRffpFwL1+f
sQiU/6688kq54YYbXP+WPXt22bRpU5rqmzFjhlx44YXGvN955x0RffbDbbto
fzy29xkAAPCUihUrOtoSz4W7r5caNcS1nRKJe5ReRC4E0kbHm3D7TdHxKXSc
ijAvP6n7hJoJ9+/fL0eOHJGrr77a9TP58+eXffv2panOV1991XXeCxYsSBir
wm37lC4d9m0DAADSh7Vr1xrtiK06rny4lunWF4Q+93XgQPiW6XXkQiD19F06
t8yj49hHYPnJZcJDhw6dr+OHH36QAgUKuH5W+5D59ddf01Sz2z1LvR+5YsWK
hP523LaT9sVjex8CAADrtF9z3zZEzZo1JWzLy5xZjDbJpZeK/P13+JaZHpAL
gdQZMUJcs06bNhKJ5U+YMCHoTJhIx5jQrOY2jT67kZZx79WQIUOM+V4Sl/0+
/fRTEb0nmSWLub0uuigi2wsAAHjXjTfe6Gg/xPdxHo5l5cwpRlukZMnwLCu9
IRcCKde3r7hmws6dJRLLT00mTPTJJ5/E9znjNq2Oe3/mzJk0rYP/O+OJ9yO3
b98ucvasSIEC5na7+OKIbDcAAOA9GzZsMNoOW7ZskZAvq2hRMdogcXnU9vp7
BrkQSJmuXcU1E8bloUgsP6lMWKpUqSQzYaJp06YFnMeDDz6Y5vXo0qWLMd/y
5cvH/dx8nzDvuDqN7af9ttretwAAIOIGDBjgaDPceuutEvLlVKwoRtsjHMtJ
z8iFQPACjdk+bJhEYvnJZULtXybYeQ0aNCjgvPr375/m9Wnbtq0x31tuuUV+
SeyftXp1czs2aBCR7QgAALzjpptucrQXhg8fLiFdxu23i9HmKFEitMuIBuRC
IDj33iuumfCllyQSyw9lJkz08MMPB5zn66+/nqb1On36tLRs2dL1WdW//vor
Yd56j9B/ez72WES2JwAAsO+zzz4z2gpffvmlhGwZzZuL0dag3zt35EIgaf/8
I3LnneKaCd94QyJRw5QpU0KeCZW+S3hn3Lq5zfeCCy6QRYsWpWn9fo/7LWnc
uLEx73t8+2u98kpzuw4eHJHtCgAA7Bocd873bSNUC+UYx+3bi9HGyJUrdPOP
NuRCIDAdu8HteUel47ZHoAbNhBkyZHDNbmXKlEl1Jkx04sQJuf76613nnyVL
loS+RNMw/59//lnq1KljzLt169b/P1/td8Z/+06eHJHtCwAA7Ln55psd7QPt
2zwk89Z+H/zbFtoH+uHDoZl/NCIXAu5++EFc31HOmlVk4UKJRA3JZcLffvst
JHUkNe59njx5ZM+ePWlazu7du+Ov//nPu3Ni/63Hj4vrWEL//W9EtjMAAIg8
HT/Lv23w+eefS5rnPXq0uF7T37Yt7fOOZuRCwKS/G/o+sv93Q+9rrVkjkagh
UpkwUVLj3hcpUiSofk6Tov1NV6hQwZh378R+XH/80dze6oMPIrK9AQBAZA0b
NszRJqhataqkeb5x7SfX9sQnn6R93tGOXAg4bdggUqiQGN+L4sVFNm+WSNSQ
1PuEZcuWDXkmTLRp0ybJli2b63J13Pu0zn/dunVSsmRJY97DEvtz3brV3O5q
+fKIbHcAABA5Oh6Fb3tA+0pP0zznzRPXdsTMmWmbb6wgFwL/T68l5cghxnci
LovJ7t0SiRrmxf2mBcqEms2OHTsW1jo++ugjY7maFRcvXhyS5X4St40vv/xy
Yxnjxo1LmL/ej3X7Tf/ss4hsfwAAEH76HJF/WyBNfRqsXCmSJ48Y7YcXXkj9
PGMNuRBIMHeuuOaRm28WOXhQIlXH8ePHpUqVKsZvpT6DqX+LRA2+497ny5cv
NM/6+5g/f77kzZvXWMfzY2MsWGDuB72Hu3NnxPYDAAAIn5EjRzraAJUrV5ZU
z0+fN3Lr33zo0NTPMxaRC4H/yIwZ4poJ69YVSRxrL4K0j9Dbb7/dSiZMNGDA
AClatGia+5wJ5K233pLMmTMb2XDWrFkJy9NnPvz3x403Svx7iLaPFwAAkCY1
a9Z0nP+13ZGqee3fn9A+8G8z9O2buvnFMnIhYt2ECeKaCZs2Fdu1NWvWTCpV
qiS/W/pOhus9xkSTJ092fV72/fffT1juK6+Y+6VGDZGjR63vGwAAkDrbtm0z
zv0btH+HlM7rxImEa/j+bYWnnkr5vEAuRGwbNUpcM+HDD4v12v4n0vcJI23s
2LHGuUHHTVy6dGnCeg8fbu6fBg1ETp2K6u0CAEC0Gj16tOO8f6Pe70vNvB54
QIw2whNPpG5eIBcidj37rLhmwo4dxXptMWZ4XPbzz4Y6Zsb69esT9sUzz5j7
Sc8FHqgdAACkjO+7Mqpfv36S4vnoc6f+bYPWrVM+H/w/ciFi0ZNPimsm7NlT
rNcWo/r27Wtkw2LFislXX32VsE/atzf3V2rfRQAAAFbs3LnTON+vXbtWUjSf
N98Uo03QokXK5gETuRCxpl07cc2EQ4aI9dpi3JNxed1tvMbzfd/cd5+53/Tc
4IHaAQBA8l588UXHef7666+XFM1DnyXyH4+iUiWRX39N2XxgIhcilrjlCjVm
jFivDfHat29vZMOqVavKgQMHEn7z9bffd9/puSHxeVMAAOBpdevWdZzj+/Tp
I0FPf/iw2fdorlwi69YFPw8ERi5ELPj3X5GGDcU1EyaOmQdPOHfunDz44ING
NqxTp07CWB3626/nAN99qOcIPVd4oH4AAOBu165dxvl99erVEvQ83K7vv/FG
8NMjaeRCRDsda6FmTXHNhLNni/X6YPjzzz+ladOmxrnj7rvvljNnziScA/z3
pZ4rPFA7AABwN27cOMd5vXz58hL09No3Df1ChBe5ENFMx0C/4QYxjvHMmUUW
LBDr9SGgQ4cOSb169Yxs2KpVq4T9pucC//2amv7MAABARNSvX99xTu/Vq5cE
Ne20aWKc85s0CW5aBI9ciGi1Y4dIqVJiHN/584usXCnW60Oy9u7dK7feequR
DTt06JCw//Sc4L9/9dzhgdoBAMD/0z7kMmTI4DifrwymPbZmjUjOnOI415cu
LfLDD8lPi5QhFyIaffqpSOHCYhzbRYuKfPGFWK8PQdu2bZvccMMNRjZ8Rsc0
1HOCnht897GeO/Qc4oHaAQBAgvHjxzvO49rfeLLTHTwoUrGiOM7zF1wgsnhx
8tMi5ciFiDbLlpn9kqgyZUR27RLr9SHFNm7cGBf/ShvZcPDgwQnnBj1H+O5r
PYfoucQDtQMAAPlPw4YNHefwHj16SLLTNW8uRnvupZeSnw6pQy5ENJk/38wI
qkoVkZ9/Fuv1IdWWL18uRYsWNbKhjoMUf47w3+d6LvFA3QAAxLrv4/LGhRde
6Dh/L9Pr+ElN17u3GOf2jh2TngZpQy5EtJg5U4xjWdWuLfLHH2K9PqTZhx9+
KAUKFDCy4WuvvZZwrvDf93pO8UDdAADEsldffdVx3i6jz3AlNc2UKeLanjt9
OunpkDbkQkSDuN8b10yo/ZKcOyfW60PIzJ49W7Jly2Zkw5na34yeM/yPAT23
eKBuAABiVZO49pjvObt79+4S8PPaF03ced5xLr/iCpHt2wNPg9AgFyK9e/55
cc2EDz4o1mtDWLzxxhtGLlRLx41LOHf4Hgd6bqH/WQAArPjpp58kS5YsjvP1
J598Iq6f379fpFw5Mdp0773n/nmEFrkQ6dmAAeKaCZ94QqzXhrB6+eWXjVx4
0UUXyZb+/c3jQc8xeq7xQN0AAMSSyZMnO87V11xzjQT8fNOmYpzDhw8P/HmE
FrkQ6ZU+g+CWCYPp3wpRYeTIkUY2zJs3r3z/2GPmcaHnGg/UDABALGnWrJnj
PN2tWzdx/ewLL4hx7n74YffPIjzIhUiP2rcX10w4aJBYrw0R1b9/fyMbFilS
RI42amQeH3rO8UDNAADEggMHDkj27Nkd5+jFbmMPfv65OXa99iV/7Jj5WYQP
uRDpTcuW4poJafPHrKefftrIhjeVKiUnK1QQxzGi5xw993igZgAAop1/fwAl
S5YU18/eeac4ztcZMtA3gA3kQqQXZ86I3HWXuGbCSZPEen2wqkOHDkY2fFzf
YfA/VvTc44F6AQCIdvfee6/jvNylSxcxPjdypPD8l0eQC5Ee6DF5223imgln
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
detW1K5d26da0GuNeKcPaZfOneHv76dLl459SN2AdaE96/P7WM89x31DRIEl
86Fa25pvv4X2uAzOnz+P+vXrK/cFnTp1clScRESRRPqKNmvWTGl7pU6Td3jS
v1NqRiHfAMb+/ytWrIiu22RuQeuyWbNmjf7vvsYgf8s+pC7BulA1YIC6T0Tf
vu7eL0QUPJ48bWpvFiyA9pgsTp48ierVqyv3Br169XJcrERE4U7qu/Tp05va
WxkT1N96TGrL4cOHw/rOT/qj+rK8XR9SiesSx9iIPKwLzWR8Jrua0HM9aY+N
iCJX/fowtTl+zjccKt9++230mKTWe4RBgwY5Ml4ionBkHeelVq1a0e8BE7NO
qeOsNV6HDh3ire/s+pDGkr6tU6ZMgdSeuvcZBQDrwv9p21bdF+K119y5P4go
dF56CaZ2p0oVaI/Ji6+++grFixdX7g9Gjx7t2JiJiMKFvNsztq3DA/xuQupL
Y60nY9h4+1tvfUi9jXEj8xvJWKi69yElEOvCGNZx4mPNnOm+fUFEobd0KUxt
j8yXqjumOGzZsgV58+ZV7gtel/G6HBAfEVE4Mr4nlNpN/ncwfkf6ohq/PZT3
hnZ/Z9eH1BfSz1TWKXNmsL9pGHF7XXjlClC3rroPhEPmliYiFzh+HEobtH8/
tMcVh9WrVyNTpkzK/cCsWbMcHTcRkRNJrWb8njCx/UbjI/WazDUR+3uTJ09W
fk/eF0ptGFdfUl/IO0npb8qxahzOzXWhzMv8wAPq9idJAqxc6Y59QETOkTo1
TG3R3LnQHlM8li5dihQpUij3AIv4XI2IyC/SDzO2DQ3We0IrqdOMNV9ctaj8
Nxnj1FhLJkRsf9OVvNd2HrfWhfJsvlQpddvTpgU2bYr87Sci56lRA6b2SMbB
0h2TD+bNm2eb+z/66KOwiJ+ISDfjN4Xyfi6Uv238hlDGkfFlGRlnRt4vyvio
iakR5f2ozMOxwIFjcLuSG+vCb74B8uVTtztXLuDLLyN724nIuWS+B2ObVLEi
tMfkozfeeEPJ9ylTpsT69evDZhuIiHSQ/pyx/Ufl3Z2O7/GM3xH6M7dhbPyJ
7W8q3zrqPg4E99WF27cDmTKp21ysGHD4cORuNxE5n/QbsvZp1x2TH8aPH6/k
+mzZsuGzzz4Lq+0gIgol47tCu2/8QkHe/xn7eSZmXdI3VfqbGse1iY+u7SYL
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
kPlyZ80CGjaEXzVi/frAzJnAL7/oPWYJrQs3bQLSpFGXLV0a0d9o6j4uRETh
TnK6sX2VnK87pjC2ZMkS3HvvvUpt+O6773K/EpHj/OKpEVKlSmVqr7766it4
XUZqC2PO4Hzhev36K/D220DjxvCrRpSxyN94AzhzJvTHLyF14YoVMd9RWpeT
8VzPnQv9NhARRSLJ6dbnibpjCnNz585V6sIkSZJ40toK7lsicpR58+aZ2qrS
8u4lrmVkfBNjzuD4y85x6RIwfz7QtCn8qhFr1wamTEH0WC6hiNPfulDGXLWL
W/rUhttYrERETiY53djOSs7XHVMEmDZtmlIbpk2bFhs3buT+JSLHaNWqlamd
Gj58OOJc5sknYcoZzz0X99+THpcvA++8A7RoAdx9N3yuEWvUACZNAn74IXjH
1Z+6UPq92sUp26V7HxMRRRrJ6ca2VnK+7pgixNixY5XaMFeuXPj888+5j4lI
u/Pnz0c/rzK2UTK+cpzLdeoEU854+um4/570u3oVkG8ZWrUCkiWDzzVi1arA
hAnAd98F9hj7WhfKb9vFxXHTiYiCQ3K6sb2VnK87pggydOhQpTYsVqwY9u3b
x/1MRFotWLDA1Dbdd999iHe5Hj1gyhmPPRb/MuQc16/HzPkuz4BTpIDPNWLl
ysDYscCRI4k/3r7UhcOG2cfBeVGIiIJHcrqxzZWcrzumCNO3b1+lNrz//vtx
/Phx7msi0uZJT21gbJeGDBmCeJfr3x+mnCFjYjpgWygBbt0Cli2LeeebOjV8
rhErVABGjwa+/TZhxz6+utCTM21/d8CAhP0eERH5xjrOteR83TFFoOeff16p
DWvVqoWzZ89yfxNRyP3666/KvDo7d+5EvMvK94fGnCFjljhgeygAZGy09u2B
dOngc40YFQWMGAHs3+/7eRBXXdi5s/3vSB2qe/8QEUU6yenGtje+MQcowdq2
bavUho0bN8YlGUPOAfERkXssWrTI1BYVKVIEPi07bhxMOaNSJd+Wo/CyahXw
zDNApkzwuUaUsWxl7qu9e+M+J7zVhdYxjWJNnsxzjIgoFCSnG9tfyfm6Y4pQ
V69eRYsWLZTasHXr1rh58yb3OxGFTJs2bUzt0KBBg+DTslOnQqkFHLA9FERr
18aMO5s1K3yuEUuUAAYPBuzmwrSrCxs0sF/PnDk8v4iIQkVyurENlpyvO6YI
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
KOSkJkuXLp1Sx7Vo0cK2vuvYsaPX82T69Om2y7Rs2dLrMlJHJkmSBJs49xK5
jDyXkXGgpk2bhp9++gmBWm/lypVN198777wTsHXHSfqwGXOKpw3RvY/Jhjz3
s6sFdIwVxLowtOQbjkmTgBo17M8BO3ffHXMtSzsSrPlPiUi/IkVguvYlp+uO
ibR47733cM8999jWdEY9e/b0eo6MGzfOdpkOcYxxO2PGjH//Lm3atPgymOPe
ETlM9+7dTddK7dq1MXnyZK/jOPniq6++Uq7BCxcuJHh9fpFv1Yw5JU+e0Pwu
+W7MGCj3/eLZZ/UcK9aF+pw6BUyZAk/DY39OeCPvEObP5/fDRJHkyhUo17rk
dN1xkTZz5syJsyYcLHMneVnWOvahL3Xk+PHjlb+XPq2Hgj3+HZFD5MqVy+v1
Vr16dUycOBEnTpyAP+scOXKkaT2PPvqoX8snitSf1rzy3/+G7vcpbi+9pB4f
0aePvmPEutAZzpwB3ngDeOgh9XjEpXFj4O23gVB8v0xEwSPjUluv71A9UybH
euCBB2zvUZ955hl4W6Z37962ywwaNMjrMkOHDrVdRt6f6N4HRKGwZcuWeN/P
x5J5ZeQ5ynfynVA8661atapp2fnyXD+U25YvH0x5Zc2a0P4+2evRw3xcYg0Z
ovf4sC50nl9+Ad58E6hfXz02cWnYEHjrLT4LIgpH1u8LJJfrjom0atWqldf7
0nye80PGOLQu06lTJ9u/f+WVV5S/jSXzJNot85I8y3bAfiAKhRs3buCDDz7A
U089ZTsvqDeVKlWKHjP4iIw3aFnnnj17lL8/F+oxpuU7JGNu4Zy4+klffrv7
+PHj9R8b1oXOJuOHz54NNGqkHqe41KsHzJgB/PwzjyVROLDmCY4P4FrXr1/3
NPmN4r0fLVmyJA4cOPDveeKtjpQxNLz91rPPPmu7zBj55sUB+4JIh7///hsy
t0vbtm2RJk0an2vE+++/H6NHj8a3Mm+ZZz1yHRn/u8wlE/LtkTFIjblFxrd0
wD52rcceMx+PWHLPrjs2wbowfMjcJTKOrfRN96dGfPBBQO4LAji2FhEFWNmy
MF23HE/clWROs5o1a9recz7iuZ+z/puMc3j48GGvdeS8efO8nkdPPPGE7TJT
5Lt3B+wLIqeQMYJlvKb06dP7XCNGRUVFv9c3/tvb8t1PqOOXOQuNuSVbttDH
QP+JnlvAWz/AhQudc0xYF4YnOUYLFgDNmgF33aUeQ29kbszJk4FEjK1FRAF2
+zaUa5XzD7vOqVOnUL58eeX+MkWKFFi3bl30+fDcc88p/93bvar0ibP7nZs3
b6Jx48a2y2i5byUKI6tXr4b0186UKZPPNWKsT3SMJSbvFKz5he8JQkv6/lWr
ph4HsXy5s44F68LwJ+MYLloEyHxUSZOqx9Ob6tWBiROB77/n8SbSac8eKNen
5HLdcVHIyJifRYoUUe4js2TJgs8+++zfc+Gff/5BmzZt4rz3NNaRVhcvXowe
e99uuffff992GSKyJ3WePKvJmjWrz7VhiRIloseAkvkrQhZrwYJwdC0SyWR+
ujJlzPtfpE7tzOe/rAsjy19/AUuWAK1bA/feqx5bb6pUAcaNA44d47EnCrU5
c2C6HiWH646JQmbXrl3IkSOHcv9YoEAB7Nu3TzkX/vzzz+i5t+3uOa11pNHp
06dRoUIFZZl7Pbli7dq1tssQkW82bNiArl27Rs/t4muNWKxYMQwYMMB2DKmA
atUKphwTx9jEFED790OpyUX27ECwj3lCsS6MXDduANKP6KmngJQp1ePsTaVK
gIxdd/gwzwOiUPDcS5iuQcnhumOikPj0009tx7UoXbo0vvfSl0PuIb29n2gm
3xbYLCPfIMo9qPXvpS/c9u3bbZchooSJb+5RO4UKFcKLL77o9blOosg4l8Yc
8/DDgf8NMtu5E56G2rzfReHCwMGDzt3/rAvdQb5fkn4DbdvCcxOiHnNvypcH
Ro1y9jlMFO4eeACm684JY1VT0K1YsQJ33XWXcn8oc6N5G8t+48aNSJ06dZz3
l7169TItK/3V7ObrljEx9u7da/s7RJRwEyZMMF1refLkQf78+X2uEeVv+/Tp
g23btiEgMW3eDFOOSZ8+MOsle+vXAylSmPe5KFcOOHnS2fuedaE7rVyJ6HHx
M2RQj783Ml7i8OGATb8mIkoEa59vyeG6Y6KgWrRoke39YL169XBFvhm3Weaj
jz6yXSZVqlTKv8XOPbjZcy6lS5dO+e8yx4Uvc3ITkf8efPBB0/U2c+ZMyL/v
2LEj+p2gvBv0tUaUmrJnz57YnJi8IPf11ns6ji0RHB9+qO5rUaMG8Ouvzt/n
rAtp9Wrg2WeBzJnVc8GbUqWAIUOAr7/muUKUGNJfm22wq8g9ot39X4s45qxc
uHCh1zpS3inY9RGV8Wnuvvtu5d9lbotffvmF5xhREEifbes196PNGPDSH1y+
LSxatKjPNaJ8u9itWzdsTMh4JUWKwJRnZCwKB+yviDJ/vnkfx5J5K69dC4/9
zbqQjGQMu+efj5nfxtca8b77AHk2/eWXPG+I/LV4MUzXk+Ru3TFR0Fj7l8Vq
166d1+M+Y8YM22Uek/mR7/zNli1bot8rxHdfWbduXVy+fNnrbxFR4kyaNMl0
zdWQ90TxLCN9vWWM0vs891O+1ohf+/tc/sknYco1lv7mlEhvvGHev7Eefzy8
9jPrQvJGnkd16wbkzAmfa0S5p+3fH/j8c2iPnygc9OwJ0zUkuVt3TBQUw4YN
s72/k+f/3pYZP3687TLt27dXllmzZg0yZszo9T5SxqSReS507weiSPbwww+b
rrvp06fDn+X37NmDIUOGoFSpUl6vZakf/Y5t2jSYck3Rov6vg+yNHWvet7Ge
eSb89jHrQvKF9GuX+9e8eeFzjShj8/btC+zYAe3xEzlVoUIwXTdTp0J7TBRw
fT1tod39nfQj87aM3BvaLdO9e3evy7Rt29Z2mWoyp7ID9gNRJDt27Jhy7Z04
cQIJXZ/MUzN8+HBERUWZ1jkoIfNMyPeE1vs0mVvPAfstrA0erO7XcH4fy7qQ
/CXjY/XpAxQoAJ9rxHz5gN69ga1boT1+IqeQ+UKt1wrnEI04MuanzAdhvV8c
JWM9e1lGxiK0q+9ix5OxM2LECK/vF+Q7Qxm3Rve+IIpkU6ZMMV13MrZwoNZ9
8ODB6Dbj/vvvx5cJ/W5H5kgw5psZMwIWnytJ7Wd3zyu1ou7YEop1ISWGzLPT
rx+UtiYuuXMDPXoAn34K7fET6TR5MkzXRv780B4TBYXMESjzx8feL06WY+/l
bzt16mRb240ZM8brMv087XB83yOlT58e62X8dAfsD6JI1KBBA9M1N036bjog
rn9Zv1t49FFnxRdOpI+o3T3uq6+G9z5lXUiBsmsXMHAgUKwYfK4Rc+QAunQB
eK9CbiRzCxuvBxnzSXdMFDRr166NvleUOa+9/U3r1q1ta7qpcfQvft5z3tgt
Y/3OSeTOnTs482YTudz333+vXG/Hjx+H7rhMPvkEppxzzz3ArVvOijEcyFgy
dve0MvaM7tgSi3UhBcPu3THv0UuUgM81YpYsQOfOgOfeSXv8RMF28yaQNClM
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
FkIIIYSI4/8BllhqYQ==
      "], {{0, 735}, {902, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    BaseStyle->"ImageGraphics",
    ImageSize->{221., Automatic},
    ImageSizeRaw->{902, 735},
    PlotRange->{{0, 902}, {0, 735}}], "Text"], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Qd4lFXWB3DSg0gRkN5RQUFFUZAPFQsgIq4FcJEmxIbYQREVxYIYQJKw
UnQRcEVQkE7ovS9FpaUSIISE9EzL5E2mZL4z82euI7qAuyFvyv/3zDNMZibJ
nXfeCefce+69LcNef/IF/ypVqowOlasnh79z/6hRw9/tGyhfPPDuW8+HBciN
Ku6rQPyjERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERHpodBD71YQEREREdEVZLVaL/NOIiIiIiIq7woKCoqK
igoLCws85IZ8KTf0bhcREREREZU8BP+aJxFA2I8UQO92ERERERFRyfPt+fe9
rXe7iIiIiIjoikC3f5GH+pKIiIiIiCok9PZbPNSXRERERERU8WD+b35+fqaH
3OD8XyIiIiKiispqtRYWFppMpipeISEhtWrVql+/fosWLdq1a3fnnXd269bt
8ccff+GFF955553JkydPnz59wYIFGzZs+OWXX1JSUsxms91uV9sHWD18v0Q2
Ic+RzAIri6LQSHINeY7c7/st8mS53+FwyG08AQ9pv5+hrO7R7cARUaWHP0o2
m01VUaILRe92ERERXQzW/0lPT3/llVfCwsIGDBjw6KOP9ujR47777rvrrrsk
/m/atKmkA8HBwSpBCAwMlBzBz88PX1arVq1hw4adOnV65JFH5IdIgjBv3ry1
a9fGx8erxUXlWlIMZApyp8VikRuaT0iP2QfyXyf+J5UnyJNxp9y+INqXjECe
KV/ihxAR6QU9FfijhL9UckPvRhEREV2M6lGXMPuCVYAQvRd7yP9uqampcXFx
u3btWr169dy5c6dOnfrBBx88//zz3bt3b9++/bXXXhsaGlrFhyQIAQEB1113
Xe/evSUviIqKWr58+a+//iq/yOFwyA9Htz9+O25LPI/AHuMCaAnqkfBfKu7B
o0gNdD58RFSJyV8tm81mNptdLhf+RnHzRCIiKvvwn5fE0ii5UZE2om5MClY1
PHj+H7cM0DyReXZ2dmxs7JYtW+bPn//pp58OHjy4W7dujRo1UhmBv0dISIgk
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
RFTWqWUz77zzTpRVSGi9e/duvdt1IbUrQXh4eHBwsLRz8uTJ2OpXLbCPVTqR
BVzp9shBk98uvwsrz6BGHWsTyY0PP/wQowChoaG9e/fOzMxEkqK+F63lEMAl
qcX/5ThjwoXD4ZD89JprrsG5GhcXh7EVzAXWu71EREREZR1Ws5RAdNCgQWoK
wPfff693uy6ELnQJuRs0aIDqGoPBgM5hzAguLi5G73qpFS+puQZyjWU/8/Ly
1D4FmzZtqlu3LmYEN2vWbO/evaj2R+W/XOfm5nJrgMuhxnSw/g+qgF544QVU
rL355pul+aYTERERlXdqWiWWVUFdvdzWu10XQoXPhx9+iNKaqKgoLP/ucDjU
spyYCIBlOUuhSYjnkZjIL5XgX1IAzTPJF8UqKSkp3bp1k9YGBQVJFjBjxgyj
0Sh5Cp55JZYqrXjUsj94u4XkTXLnv//978DAQDlX69evr3nLw9j/T0RERHRJ
qFqRG99++21ISAhSgEGDBundrgtJgCeBH/YpbtasmUSDWPYHIbTanEvzhOWe
3uBLdAgXFP52+TP4CUUF3ssf24PUA+v8a2qmaoFW6H42WmKVy9tvvyNJVRU/
SVv8Bw4akpWTbdUKzPkW9+8tKvT+Ivd3FWrWQs1SqJltuBRYfru47zF6L2Z1
8TwfF/leyeMuc0KBu50XvF73y3S32upz8T04548AXqC6/Cdoz19s1Z811Dun
A7VSqrhLrQEl+eCyZcvwBG4BTERERHRJqnB637596PyX6y5duiCaUvUtpbao
JvIR9avx2zFIMWbMGMxQwKovWE5f8wkvCwuKfC52zzViVOsFFwlr830uFyQC
3m+3awX2/EJ7fpHDWuQ4nwUUnl/PH7flOl+i+QJpod1W6Pl1+RZnUaFcu4pd
+ZbCAqvdanUuXhpdrVa9KkFVq/gFNr++9S9Hj1gkBSiwFtjs8hyHzVWQrxVZ
84uLLI7CXFt+qrPgXLGWXlyQ7crP81yyXdZ0V0GKqyC5uOCsqyDNpWXIpbgg
06llOwty7FqezWqQdKCoMN9WdH6tJHmR0ja5lkYW2rB6krRVXq7VVmSVX1eI
CL+gQJ6mFToKbE6LhNVF+QWaSS5WzWzV8qWR7oNVaJMnWN3frTk0u1OaLGG4
Rdpc4DmY1vMHUOUy8it+S1vcScr5bOJSSdnlk3f/448/Rvz/5JNPlvK8byIi
IqLySy2unpGRIaEUaqrr1q2r+rR9w6pSqK+QlhiNRqfTiZgfhTRms/ncuXN1
6tSRtl1//fV4prfq+4/xv917+UP8X2jx7dm+ZOe/XCTmtRYVSgQtMa4l3xMq
e1dMwmFxTzrWCq2WfLm4f1eBOwLPNxpsBRIDWzWTyWWTmDk/+WT8nbe3c48B
+FcJDa3yz9kzbHYJnPNcBbkuQ3JRRqzh5J7Uw2sS9i44suWfx7Z8dXD1tP0r
pu1dMm33oogdC8O3Lfhk28IPty4Yt/PHT/csnXRwZdSh6H/8sm7Wsc1zEvcs
Tj6wynBiV0HqL668RFd+iis/1WU567JKmpDutEgekekqypVLsZbrsOa6MwWr
odBqtGvnUwCHo7iw0JZvdWc0FotJUgC7XfIFz5vuPoQS5kteYJeLe5hAWm2R
nEGza4X2Ipsn/rf4xv847Cr4943/Lzkoc/kk9UtPT7/qqqswyfrUqVOs/yEi
IiK6HGp/VYljEWCjwD4rK6vQCxMESie4krjOt/8fv1TSgddeew21SQsWLFC5
yR/qPYr+cFHOpwDICBCcu7vm893Xdqvc404ftPN5gSfYL7IUFBnthYaiglyt
AFGx3eawF9q8lTCa1T1CoBXIjyrMt7oHAyRnkWTB6c5KivKNLofFVZjpyo1x
FcS58n4xxK9/fWC3hiFValapImHr3bffMHHMM5NfvCd8yA2Th7b87OkGUc82
nzK0UfiAelHDWkQNbRk5pEXE4OYRg5pEDGrkvgxpHDm0ScTgpnJ/1GD3Q18M
bD5lYIvIodd9GXbTF4NafzGkTeSwm/7x7K1fv9xl0fsPb44YvG/Oq/HrvkjZ
Oy8/cY0r55DLmuDSUlxFGS5bnrRNUgAcB6vJLCG+5ACapDCas1Bzafl2Cdsl
W/IcFvebYrHmmwvc97kv9sJ8p81SZDUVmOVAebKq88ffm4KpciarN/gv4ZVO
sYZqv379cFZMnTqVxT9EREREl0MtXC+3O3TooOL/w4cPo+dfLbxZaiVAap1/
rK4pN5KSkqpVqyat6tixI1IDd0RqsTgcjt9/60Xif5+fX4AClT/G/3jcer5P
u8isFUqE7O4wtxe4S2ukVWb5tdZ8d45QkG+3FTgLzTZLttOS6SrMcWmZTtNZ
l3bOaU0pNiRlHN98eN3XW+a9P//jfjPe7DbhmXafDb/t42Gdn7yzTnNPClCr
SpXmVauMebzl5MHNooY3jhxeL2Jo7X+ENZg6uP7UgQ08YX+TqCGN3ZehDSMH
N5o6uNEXgxpGDZH7G3qeIHc2lsvUgQ0n/72eJAhyQy6Rg5tOG9pcLlFDmn0x
uNmkwa0nPtP2s2HtJ4TdPvnlbt989HT0N+/tWfHl6V+i7dnHXUXnXFq6qzDD
ZTnnMqW6Co2ugiK7JDr5dkeBTQ5LkcUqqYG9yD3xttBdNlRoKdLybZICFJhs
VlOhCfF/oSexshWcT6M8mdT5CQVqkOXi8wX+KpycK1euxOl63XXXYWmgEvsF
RERERBUUJlSiR/1vf/sb6n/EqlWr8Kjv1NpSiP/VTk/ugNOzxn5xcfFzzz2H
Vi1fvlzuwYwA1P+raPNPo31Vl1Lw+3D0Tyt/LhgasBdY3AlCocNe4PDUDXnm
6hba3GUwdptVyy/QDEUF6cUFZ1wFia7svRkH5/+69KO1U4Z+O+q+aWE3RQxp
9cVAdyj+5bCWU55uNGVIy4lDW4c/e+uE5zu/3PfWNnXcKYBcWoRWGTv0nuiv
3tj147v7l487uv6zkzu/PLVj1ukds1N2z03b/13mzwtyjywyHPspL2apIXZp
xs9zzx2anfrvmWf3zTiz58uTOyLjN4YfW/Ppv398e/u3r66ZEbZkylPffdxn
1pj7p4y8c8LwdhOGXOf+vUNbTR7SStogl6nPtI4cfsPkIdeFD2k76/W7l056
etd3b6f9e64rY4fLdMxlPOMyZbnMBqfF5JDsT4605i4Fchc45ZuLrO48qFCT
1MxdAyRvkSf4xyRlZFLucRBP8O+wFOLinkNR4CkkKiy5UQCcIWazuVWrVv4e
69atK6kfTkRERFSBqV59iaaeffZZ7FolWcDMmTMxp1I9QWUBV5RayAV9+9KG
48ePY2Gizp07y/3Yb8tgMKDxfy3+91nSJ7/Q9+Ku+fGE+N7g36q5BwWsRRLY
FlqlKXYJhiUjcBbkOa1Z7ur6/DOWs/sT9i7cOP+9bz54bMKzHT4ZdN2kwa0j
B7WcPrj51AH1ogbVnza4wT+GN1s4ptPKz3ptmv70znkv/rryg7jNkVnHl5/5
edXwx++rE1ClepUqtf2rjBzU/dTh1Skxq1PjotMT1585viotfn1a3MbU2A1n
Y9anHN+QHIPLurOx0anxq84lRp+LX5kauzw1ZllqzJL0mKUZcUsyY5dkxS3J
jV+al7DEEL8kJ2ZR7tH55/Z+eXL9pz8vfH3L9MErJvae/3aXmS+0nTywUcTQ
ZlHDWkwZ0jz8mZaTht/w8ZDWn4e1+/qdhzZ+PSZh07yi03tdhjiX6Yx7XMCa
7czPddnyHRLnW812T6jv7sm3Fqo1i5A0qf5/TQ6V5sh3pwB2iyf4x0SCEuz/
B3n/J0+ejFnhkr2y/p+IiIjokhDko8t9/PjxqKbw9/d/99138ZDm7fYvnX11
Ne+gg1xjkU+1MdmGDRvsdrtE/jYvzbtWj2/876neVxff+N9drY+pwXI739Mv
bSkqche0uGe4WrRCcyFW1PT2YEsEay1yWKz5VnOuezWewjRn2v4Tm2ZsmT7i
ny93njak9eR+Dab+vWHkEAmkW30+9Ibw4TdNe6Xzwk8fXT/ruZ+Xjju7e0b2
4X/lxP6QnbAoM35JRsKyjMTVmSfWp8WuO3NsfXbSnshPXm9cOyC0SpVqflU6
3tRw79ZFZxK3Jh5fdfbU+uQTK08nrjidGH06Yc3phA3JiRvPnNh0JmnrqbiN
8qXcTknYmBy3/kzs2pT4NZIynI1dneq+rEw9vuLs8aXnji+TpCAzdllu7NLs
o4vlkhMjScHy3Ngl6b/OP7N/9oHlH62Z9fx3nz466627P3+2zSeDm04c0jT8
meZfDG31+dNNJz7dYsbIjusihyZviixO3urKT3AZk10FuQ45pPmae10jTbIz
l4T8eMc8h8ue7zliBe6LXS0E9NulRON/ORWRJJ46dSo4OBg7LJw+fbrEfgER
ERFRBYVVdBBNzZ07V9X/PPfcc2rlH8wCVgvdX1HY4xWbPUmrDh48KHGdtKdb
t254gjyKbAXTls8v1PkX4v/fVaefXwL0fPxv8V1+315gdhbkuSfwWk6mx23Z
8uOkr97r93nYnZMGtYkc1HLm4KYzBjaYMbjh18+2/vGdu7dNH5K45uPsg/80
xf6QdXxBTuzSrNiVaTErz8WvORO3Ojl+9amE1afio0/ErJbo/VTM+jNxm1Pj
tybHbtmw6tsONzWTVxjqV6XO1f7/nD7hzIkdJ+KiTyYuP5W41JsCrDsVv14i
/5OxG5ITtpyO3+y5SAqwWS6SBbjHBeLXp8StS41bkxa/Nj3BfTkXG50Ws/pc
7Jr0uLUZcRvOxbnzjrOxa1NjouWh9JiV2fErDHE/5R2dn3Po65MbJ2z9OuyH
jx+MfOGGyc80njK0cWRY8ylDmk/4e5Opz3X4+p2Ht38/PvngMpfhhKswq9ia
IwfHruUXWC1YTNUznqLif/fbgfV/3E8rcG9k4In/L70pw1+Cc0BOkqFDh2LQ
aty4cSX484mIiIgqJDX5V2zevLmKV/fu3X1X/lFjBKXTKklGUG706KOPoiRp
586dmAvg23L39SXif6s70j/PPc2h0GbN14zWgjybzVxUaCmwGt2l7BKeFtk8
ZSrWQkuuy5rpKkx3ZRzO/PcPayKHff1a588GNJ88uOW0YddPGShRccuZL3VY
MenJXfNeTdoSkXPkO4mic4//lBPzk4T9GXFL0uJWpMVFp8WukXg71R2Tr0uJ
XyOXMwlrzsSvk/hfQne5nEqQy+aTcTviD+8a+ESfEEkBqvjJ9Yih/U7GbE9J
2ng6bsXJmGXJ8SvTEjemJW49dXS9pAxn4zenxG06E7vxTKwE/Bs8l3Vp8evx
izy/9HcXzxM2pcZukIu0Ry6SEWTErMmMiZZL9vFVcsn57bIs/ej8hD1R2xeN
XjDlyag37gwPu27SkGZThzT9YnATeeHTRty+fMqgpO1fufJ+dtmTbdYzmmZw
J1LuXQfcR9c9GFNgcVgN9vwcl81YrLnXGnXKW2AtMEuCVeQsqRRAnYpynmzb
tg1L1zZs2BC7v5nNZskTMYucRUFEREREvhAdobAnJiYGwb+EUjfffHOpzfn1
hf2/0Ml/8OBB1CP16dMHmwLInYjosDWAp///wvr/30X+7uDf/U0Fnq2w5KlW
90qeliKbe5crrcBkK/JshiV3WvMc1myXLctlTEze9+PqL1+d9sp9E56+IWJw
y8jBjSMGNZr2TIuFY+7a/c+hZzZ/lvvrnKyjC9NjlqbFrUqNiz7juciNswm/
xfkSeKfGSuC9Kc0deG/wxOfnH3X35yeuO5Ww4WTiphNxm5PidiUd3z/lkw/q
XV1N4v+qVap0ubX17s0/pJ7YmnF6q3zLqWOrU46vy0raceaYe1KAe2qA5yI/
80zsWnd+4b3Ir/C5uO85E7/hTPwmuXa3J+58/H/+ErPOc9mQFrPJc9ksrT2X
tD4lYUVq3E9ZCZLRzD+5bdL2b4Yt+uiBqGEtJj1dX7KAiOfbTHzmhs+eu3VJ
1LATe+a6jLGu/JRi6zm7JcNmyXZoJmeh2X1dZLSazjkKDY4is8mYI++Us9hl
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
isUTqXQ2qtQBH+W/KAICAgICAgKC/3jk+T+m+oMHD87n/zc3N+MeqT+s+Bf4
fzIWyyZTKTEajbQlk9m4lDVa6qjiIqqEuuW2G7JpUQ6zlpVPz6kY8+bMEXMq
Bhnen9bKrG3ntjQ3VDbaNSFa77VVeWm1j8vXqJqVslljjoL2oKOIuwaVCl+g
/WHWHKYtARtKE2riTEGHxrUflILB70Rj5h7e5KKNnF2Px/kt2k9mv/TwbROu
HXtO/97K4HzfYgonzOTjzFOLrrty9Iy7Jvz98SnLFz+/ce1be7ZVuhxb3XSd
YKt2OWp93FYXbUF9B4Q6v1Dj5WqQ5T6DaLmHrXbRJlj6+Grcm0D5xOJhaj3M
Vggftz3o3Onnv6T3WfZsr9r02fKl85559L6Jt98y/ueXjhp0enmfIpTAr6Tx
F5UrK2i9mBo3fMDk2294a+GzFt1HbrYaNfxl9C5O5xF0oGsUdyBz2Gl0saqg
12Szbdm9a9Of/nhNuaJl+pUWPXHvNK99h99WHXKYA3Y14v9d/jzfyvY3FhZZ
4Lt9jCWAEU3W2Ixwo7ycBQRdmNM18voQqw2xhgOC8aBj47Y1Ty2cecH8qSPm
TRm+ZeGd2YO7s3GfFGvpzHbE5HgkFhVjiXQiBcs7bp9IwUtdRD399JNxUWoX
QR9kE4T/ExAQEBAQEPzvIW/vifn/gAED8v6fePxf6nJT/N57lkQ5HkvF4x1S
MiN1JOWsKHb85tc3AgfrfQLlsFUnm/evX3jf/EmjF9xx1lsPnFdf9Wwru+6Q
syrYsLERtbvV+uyaJpcVjeT3MNtBaeo55tld/6tHdFTxlgESG+bQWHHAYVK8
MS1B2tjIGlGKi8Pgc9Yw9Xrg/A1f61aveH3anTcOGdAL6H2/khzPP6FE4f+l
1CXnDp16++9efWbmxo+X7t22xeuoC3LbfHSt22720lbkO2oz+mgTcFRlugHV
DuOa3HzAf/OBanhZVEScq2LgDPAh/ETJ0jG5bXoI5ALEWNx2o7MBqO9WCI+9
1s/AQbd/Zd2wdtXSZx99eOKfbrtg5KhTepfnVUAuiqihA8vvuv36NR/Oqf9G
5eKqXSCUWCvsU2io8gpat6By8uqAt4Zjql96/uGTTyjH13vdRefXf6ncyW5i
/13j/wUj/z8K/w+CoqGRXPIyBo9DFaTVYVoVclTB8xX2VzbyhkbHFmftm28+
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
wSwuz/8VCUD4/1GLLv5vwZkzOOcnN/4PzJ/VwKMBgRbk9aAC3PXwvFA5MEiA
AOr5q/ILVW6uCiSAi6veu0v3u19e3pvKSQCIgaf33fzZ+x5Gqe/OdeYtsBjq
qtIttHjtDvzf/PL/w/9VwP9dfG6oH782qAUAo+qa0TAqugCJSjjzIK9z2baE
ncZG1txiU3/wjz/O/O3ZJ1N4furkxoBfjrWlkqKYzESlNOH/BAQEBAQEBMc7
ZMXPJC5lxFTnHZMrqC62tvbTD+OJSEQSxVRHMpltb0ee/1Iink20dIR3vP3I
RYunnPn2jDGhmmUHGI2Ltlxx6YheZdSJ5VSN/iMvbQ05a4Au+gSjT9jG2Ws9
3K4nH6nopzQFg3j52XuAB3pYs1KJ2d0ltieZNxZEjt3l8lJ6bPDT0+b/pshl
+B/+LP5/gR1Z2a6qAdboZqweZvtDd99RrnQHyLcJe3bWTC+3A56+02GElwR1
HOOMfpuukbH6GwxI03FWt03rYdQhl8HDVBZUIhQutT2zv7prEw5LW0KVC10t
DBRf0J4Xy+i9DiM2mELf2qtaWJVv90dzn7jpoqFlfZVuFPdMruiUU3JCkuVE
TIyiWTClIzaeNcON837qP2ICAgICAgICgu+BJKrrTYhyR1RKX3v9rzD/B4pe
V20UpWg8JUcSKWD9UrxDljJJ8WA2xn82987XJ5355r3n7F/3pOjYDMzt4w/m
l5ZRRcXUHX+5PshtC7K1XofeTauA/7u5Lxn7l3f+bUKfErTb0/pSq995xcNW
KyPAOSefLiJnJJT+OI4uCYCfptOmC7q2+fmdi+Y8e0IZIv+lVFF5cVEv1Nn5
yr27dD7hS4/D5KMNKIOIMYAEaGKrw6zVZzM0u2s9tNbPa910VXcZcs/4Tv7/
/U4blQkEWEuIMaEsJntlwL7pAFf1pW7pPbdfdTKFsoD6FRdts9akkxlJElPp
RN7/EySAKIq4cB6XyRMQEBAQEBAQHB+QU2JC7khnQAUMHja0qKS4SBmq9XoE
KRmPyem4lJETyWw6LbW3ZFON+1Tz5s+8YPaUUZ+/fku0/vPm/So/s+28sQNB
NvTuR+3ZoXbbaprYOn+DIeQ0u1jT/j2G8dde0JUBUrRp3ZtuusZL5zNAfmrW
SuLfjcJ0HU1eAgQFi4+vFmwW3lb34fsLzzilF54CwDF00Cmb1r3rYmr8QrWP
1gWVggJ3/RaUk8MafKAdOLPbpm1yWX+ES4ATQEdk9M2cIWDb0syrITZ/+NKl
o086sQhNAVx75ZXpZCoWi4moFV4cM39snItXct3xCAgICAgICAiOAyQTUhqW
QG8i7a3lvXtRxcDOisvLy6PRKPL8hG/lVFpKZGIHs3LTgQb1nOnnz506fPnj
14d3fXzQrjrk2v7O4leQY2gpNXn6zR5+e4Cp8e0zhmmrYDc07NVecdFQZPJZ
Qo0bdepWy6d+oQ71BXDW4CTwHgW8xM/nuIyCWZuCKYAgZ+TrVY3e7T5hm4/f
qVd9OGRQv7ISCt6U3uVIC/Qupea9/riHq/E7LV5W47ZXtngtqETXrvI7tEqL
MXNBiUdhmI/mPBGr9TEaVMLgMDRxpkZGCxIg4NgMYuT1ZyefXEL1UVobf/LR
x/DX0nygBTg/TvuRlMIZ3CODpAAREBAQEBAQHEfA7Y1isZjgcqK+RxBlJWeP
GJFAw/5pYP9JMSolosm2QLa9/pMXb100bcTiu8fYNPMO2DVNgpneazx3xNll
pVS/k6mv9lQ6HYYAazrA1YWZrXt3akePOK13MUr7+fllw/Z+VenlrE5a52P1
bocG2zN2E7ye2SMkjpfAtbSYjRd6h3ocqka3ldm7xcdbnYzJSVt279gwbswZ
vcqLi6jiXuWlaCKgiPr97y6t/0blYg1+p4Heuz7A4UR9fZi2hByWgM2UVwEF
kZcGRyoW/l7n39XvICygvaFedaweeUzRVaBE2H2VN44fV65MWJx84kl9+54I
fx2Ayy+/fNWqVbgpdiaTwR5ZBAQEBAQEBATHBeSElBQTKTkZFyVLbV1xcSml
ND/9xa/Gy3JWiqeTMbFTiqSTh7KZ4I41z71++9A37hhU8970A/s+99t0XqF6
6ZJ/lBYhgvTowxM9vMXPGUK8yd1g2mnecO7Is3qVoLSfm35zCdtgcjqMfqfF
BezOaejqJ9WT/3MqP+nne7yFwv9zA/LBAgkQ4HQhwdDkssKzhofu+3/snQd8
VFXWwN/UFIqgNKUjUgQsKIq9oa5YcW10xLLrWte2trUhSlOUtTdsoIhAyvSW
BghYIJmZ16a9qUkoIZnewnz3vpsMoeiKnxBkz/93vvmGyWQyu/vezP/cd+45
LoOb1f20ueSMccPRIYaiqFCGjhylnDplWE/Vug/QsRT0VHhodaPb4qkrCyK3
r9M1cpXE88noh3b5N+VTgH0vPfw+/y9z06V+VhfgjAL2f309h7tReZlyR115
2bfv9OkhtsTCSKUyBfJ/MiDv6quvrq+vb2pqIq1xO/tUBgAAAAAA+E3gMb7R
cDqOcoDWZR9+IlcUEf+/8567U8k9qWgm3RLNJZpzqVDAVrJw1ui3Zg//4pmr
dvz4aROjbnBVbftZPWTocciG+vYorN2wJkirffZyD61fX/Hd6JH9UVJQIKeu
u3ICV2twM2aBMQSdRiT/zE/f1jtN+T4zYm9PIo24tz/4/58t9lbmtPu/VpwL
oPIyKretFHdz5TUCr/Ew5T5Xha3OPPGc0ejAQIdHcZECF45JqC5F1L+fuc/v
3sTZtChN8LMGn10dYgwBu27va+5NATpG+57f/8f6v8CWu+rKkP+jl8LNiOxl
KFDyInDmpx+dQ2YZ47nYKDvGF8jwNQCSD0yaNAmdRNlslowJAwAAAAAAOPpB
/r8nHk1GmuOJzCNPPE1J5LiJj5xasOi1eDyZiadz0fSelsZc1Prxy1MWzRr6
1pwRHvPS3Ux50KZx24yLFj6BNE4moZ765+yAzbDTYUZKtrnq24H9u6M8QiGl
brz2Es5q9rAmJP9+3igwGg+NN3UKdnVHV+y4btzZNgvxO+Ig/h9EGk+r/OgW
z3FWeZgyv0PjYtROxmDbqr/s4tORTBfIqBN6Ho8zTgnOAm687iK61uxCqSKH
DhgdGS6Wb90Z6NCb9CD+T+LQk0eUlTQKFYId/6fwi+mGKP9a9Aa+r/imhziu
Qt42E09KiRcCZDKUu1AFBQXodvny5WQLAAAAAAAAwJ+CZDyRjsdSsWg6lrr5
5lsoqQLJDZKcdWu/S8TDralkazSVa6n/ed2LC+8atmD2UMu7c5tta0J2ZGIm
epthwEndZHKq9wmU/efSBg5Xa/9YtW7UsD5Y/pXU1NuuFuXfSErE26vEOy74
t635E7uD5p9//tjbh7Ptf2V6n/p8L6f2u/S8TeWwV9zwl/NxCiBVDuw/pOdx
vXBFkJIaOriHRrXc66rmbBqSMPpYlcde2uA2iLt0VfU8vjSwz8WjfecUH+p7
Roelh+3QjaptH4raQ+ufffzOInFygRydF0T+JW3yj24lEolUKr3kkktII6DO
PpUBAAAAAAAOgXQylY3Hx40ehRf/ZUqkNwxtS6di8ZZduWQ07vr+zb+Pmz/1
+A8fm9hS99UOm8pbq3PTFS8++3eJBP/Gy8/f6XMaPFZj7Qb12FNw2Y9USv11
yiS/Y6OfN7c1+ReHru7d85sv+GHLcOAUQEt+CinAnyx+oQ//gX5Onuyh1wVd
OoE2slstN/7lUjneXSsdM3rsuDFjkV8r5VTXLtSbbzwdEL73cBVuxuB3aP2c
WqDL3LYSXFNkKwtx+iCrC+w/qozkmIf6/vVexuRhTW3+T+QfTxBWBx2V1191
Ntn8K6HEyh+UAWD3p5RKJdVOQUEB6QLa2ScxAAAAAADAbyKeTMQTGbx6uXtn
j0K8yCmRKguKlC3hXalkPBPdmdvtWLP4ntdnDlw8o5+nYklw6zehWtVuYbP1
J+0Jx1NyOXVSvyLOpmGtanpb9eljR+JCDhl1/dXnsttINUXHrj77lm108H/8
BCxjRh9tAv//k0W+8H7/LGBvlX7Hjp1+pjSIu4MaBXsFX7fhonNOIxMBJp47
furUKShzlEkomZS649bL7VaLm6/yOU1OW4nAqhoEk1fcHlLP6/ZWBInRwf8P
ef4X8n8vY8G37N5N6F6ccZgvmTiqCO9txwd1YWExWf+XtO0FxpcA5HK5RCJp
bm6G/v8AAAAAAPxZQP4fTWai8ZiTqRXrnBVSiXLk6BGxeHM6Ec4ltjPGd1+Z
MWrx9IGG129uor9pYDWNrIX5Qf30v+ZKpNiFXp3/mOCwsDb9aaeNIPsiL75g
vMBW+VldI68Piob/X/x/755fWP//E8ZB/F/b4SpA3v/b/scN4lFfWNpdVp2b
rmK2VZ4zfoRSjuv/r7zygiVLXuzZU4FTAAk1dvRJFv1KN2cSeIOH07vtKoHR
iMPC1IK1tGMK0O7/v2OiHPH/Duv/7f6PkoKpN1+uxCeFTCZRkvofiQzlvFKq
A3369GltbYX9vwAAAAAA/JlIJaPRsEpdIo79lSslBdffeF06Hc4ld7fWb33r
oXPmzzjpvYcmhrd9GbKuxqUXdIVts7Z3Lyny/+Gn9GZsNQ66etLFp5Fl0Qsu
OMteV+FltYJtbcCuCtJa0g0+r1t7zZBp/1HbT3/f+i3EUR76/cOqCnFa3GaH
M3h5i4sxW3/WjRzeE/k/Muu77rxVU/7tGWOHKiQUip7dqbeXPuukLeKkYDwz
Dv1WvdPk5zQddo60HV2/7/jpuDOlY/0PSgqWLX66WIZLfySUVCZTyBRt+38R
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
UsRbCIhjJrD22/De3hBr9Nh0Qd7ispVb9B8rxXEYLz17v+CscTNGH2fw2cuD
rPqwvx9ahSLIahqZUmflW/NmjV40a6hbtzAXCaZjqXgiE01m8NRuTCyejOWr
/cnZ/fXXX3fv3h3l9ejUHjVqlNVqJW1+0dPQc/Jjgn/66ae+ffuSTOHBBx9E
j5MMgiwRkOeQIqJO/dACAAAAAOD/Rd4T0G04HB4+fDj66sedfyRSg8HQEo62
xkOuqrdem3PKCzPHTb/8ZOQ/PbsXuOsMIUZc9mfVft4oMLpOFzYIiD8wQpwe
+T/KcIOMQbDrg86KgFNX91NJgTj87sG/3e5iq92MGfk/vkZA450Ch/ctodcX
o54t9W/88JXZpy6eOdi+7vl2/8+2+38siSNClvRJGQ/SdZTaO53OM844gwz8
Kioq+vTTT1tbW9ETkNWT7QCk2qeqqqpr167kKsAzzzxDJgWgVyNbhsmHBlwX
AAAAAIA/NWT9P5vNotvPPvts7+L/KSPw0l8ilcvu5MxvvDp7xAszT5981gnI
f8aMGuxnKupZrc9eTvwf90jvbGGDgPgDo543+Om22b7I/3GGy+k8vHlAryLk
/1OuvUD0f3zkh5x6wVpyuP0fV9lxeNxAiCnZ8fMXr945Fvn/pi/++Uv+T6Qd
2TuxejLzt6mp6Z577lEoFOQ0v/fee0kXILK2nx8QoFaru3TpQp62ZMkS0hYY
PY6eTPYFw74AAAAAAPhTgzwhEolERcaMGUO2CqJbo96QwmSSu4WtJS+/OGPY
8zPPOL0fnn909RXnexlLkNUIdDlukM7qwf8hjrEgI+1w0OjY1rvtGrddhfz/
vDNHFEmps8YNFBwbXLQB5QUBXkyED/P7yft/kF7XYvvmtbnjXp891PL+3w7w
/4To/7GWlhaU1KNbMtKL1PCgO+iU/uKLLwoKCkiaP27cOLvdnmyHFAGiO2Qp
QKlUok8D9HySApAsgHQQ6uzPLQAAAAAAfj/kex99oZeUlFDtjBgxIhbF1/oj
kVgu0YD8f8FdY/89a3xvcf7p3XNuddv0yP/F6Uh4QJKfNXS6sEFA/JFhx/02
kfzj4HCdv8BokP9PueZiJUX17SlxczXI/9Hj6BRA58Jhfz+smqQAAfvaCP3t
wrtPf33OYP3bc37J/4mukz4/pM9nvsgfCTzLsiTZVygUPXv2XLFiBXlaQtws
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
qqqC25dfflmUC546dWpFRUV5efldd92FJ3v06HHkyBHwJ/BgnAvGJyaPUFBQ
UFBQULQ8xHr+LVu2iJqfvXr1Qt0PuAvT/rBq19XVkSVb4P++UDDOl7A73l4y
Y1yfDqT+57Zbrjbr99n1Cg8ndbE5wP9p8p9a+7NT8X8bd+Cqy0YC/79k9AUt
yf8J+edUwP+LuV1VuvWLHhr1zuzh+z59Nu4vBrbfmP83b/0PygWIQwPBS0il
0p49eyYnJ6empg4bNuzQoUM1NTV33nknnElKSrrgggsOHjzYeNQ4Soo11/uh
oKCgoKCg+O3ARby6unrkyJGYrIP1etOmTbhM4zY9Kn/ioJ+f+X+4xKZc+9aM
cX0zmVSGufXmSWb9XgenBP7v0Oc4IQogsoSU/1NrV3Ya/n/luBHA/8de2Bf5
f4vV/8MLOVhZqXHX8aOfvjV7xMqZI37477/igZP4v5+U7jVf8h+ZPHiPWCyG
HcFwUq/XT5o0SSwgXL16NTiNBx54AM+cd955P/74Iyb/a2trwefE4/Fme0MU
FBQUFBQUvxm4jr/99tvA/FG7e9iwYbywOw+0n+j8xOPYCIC5Pkwhkvofvqzk
wFdvzZzQvyPh/zfecBnwf6dBhaIolP9Ta5d2Gv5/2cWDgf9fOW4I1v+7OFUL
6P8I/J+oEpUYdrr2r1o0a8SKmWN02cvjgdJwg/5nhD8L/B9dB3B4PtHJiwPE
gd6/9NJLuI0I/gTIv8vlevDBB7FBoGvXrvv370exUPHpFBQUFBQUFC0MWLit
Vmvnzp1xyYYoID8/H8UAo9EoMH/U7oAlu76+njQL8GShD0bCdXxpdeHON2ZP
GtSF6H9eM/FC4P8uo9rF5gD/dxlkAj+h/J9au7LT8P+LRvQR9H8uAv5v5yRu
g9qlU5zt9wMvQQJtTurVbzWo3loye/iyWRfZ8z6OB0vh193A//lgs/N/lAsG
nxAUgBoCqCEGf+7atatHjx7Y/zt8+PDDhw9PmzYNuwPOP//8ffv28UL4UFdX
12xviIKCgoKCgqIpuPvuuzE7B7dXXHFFbW0tLuJk2q8QBfDCYo2BAPB/kruL
8dFQmZ9TvTbnusHnkflfE8ePAP7vMWpI8b9BCvzfwcoo/6fWzuw0/H/UkJ7A
/2/582UWTg38n/wWzj7/hzcA/N9hkHp1W4pyXl46Z8TSWRd7Dm6MB46Tny0f
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
j1l+LmMItLOEYDAoY1FBQQEGIl3LUwF/XT2BZIEMPjI6iVVQzlzl1LlMBisZ
ssSzljdUbVusY8qXEbth8qfwukLtwDxGKFYs9r/TYziNEqcRdBoBcQHQIjbU
JdYjM5dcWRT05gc9+x3pq9Z89OKbT/1j1EMN3uh+/oRHGr75eIsvX783cemY
wzvnHE3/KkdM5ZSlB3d/nRXqZrs0K3lJRuLizORFB9OWHEpfejB1mWxm2yw5
WJGdtjo7bW1myuqM5FXa8Css6f/1yW2/Tm4fLKZ16K1O2ls6Cx/rLJYRbryl
zbnEE8lIWyo/ZEbaV+YexzgICZ9m7Fou35uzd9X+pMX7EhftSVx4aF/oe8V5
yUpfGXJh5KdNXhLya9JWhMRL09dk7fl2985lWalrDqasytyxJCdxeV6ybMvy
U7/OS1t2KGVRdvLC7JQvsxK/yE9fmPTNlC8nd5/U79LXu50/tut547s3mPx4
6zXTnz60ZW6waHfQk+tzHvYahT75y7jcaal7v1m7fsb7H748dFjvHo/ccH2H
evUbmmn/seVCi9UxWikQZZY/lzPlkevUqXPJJZeItdm3b9/XXntt+vTpYttv
3rxZfHyMAB6LEKhhSeLFcdnSr/6fonadLjp7wrnfRth4ll9jRkbGpk2bFi5c
OG3aNDHvxau66667rrjiivPPPx8dak4uN9CQcv369du3b9+jRw9xxN5++235
S+3YsUPG7WJTTEazYU8wNTXvAkajNVXbunRuhBWwS0pKECOFU2CEWxdpTu9p
mxyrf1CPKemDGRBYG4HJn6x58+aHDh3SP724yZrJjLxlOf7222/Lly9/5513
Pvfccy+99BLy7sQd6Nev3z/+8Q95H3kwxfXDHyIQCFhLGk/ux0EIIb+JmOJi
n+uCnRzY7fZisyQfs4bMAvAIZIhDv48SE41+qBboihUrZDK68cYbb7/99mee
eWbDhg2YZTA6qTgYvj3Ct03+CB634XO5/E6X31Uotr18KTa/wxOUrcgIyoty
0ue2y+Z1u+RLp6fY8DocRQdd7uygP6/Enpy88eNPXu86umfT17rUnvjwuZMf
qftO/2aLJtyd9PWo3B2f5qUszEr66lDa17JlJi3Zn7gUlvz+HUuzk1eKaZ2V
+HV20oqc5DW5KWsPJa0+mLjiUMoK+AWyZSWHFPJNH2G5njx++xpBfnP/9cl7
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
B0hdBTQ=
     "], {{0, 768}, {1024, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{218., Automatic},
   ImageSizeRaw->{1024, 768},
   PlotRange->{{0, 1024}, {0, 768}}]}]], "Text",
 CellChangeTimes->{
  3.7657046782897635`*^9, 3.7657076560725374`*^9, {3.7657197494578285`*^9, 
   3.7657197561987953`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getNinepointcenter", "[", 
    RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "medians", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"medians", "=", 
       RowBox[{"getMedians", "[", 
        RowBox[{"p1", ",", "p2", ",", "p3"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"getCircumcenter", "@@", "medians"}]}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7657047341669097`*^9, 3.765704755293391*^9}, 
   3.765802204573437*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"shoot", " ", "ray", " ", "from", " ", "incenter"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"getFeuerbachpoint", "[", 
     RowBox[{"npc_", ",", "incenter_", ",", "inradius_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "inter", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ray", "[", 
       RowBox[{"incenter", ",", 
        RowBox[{"norm", "[", 
         RowBox[{"incenter", "-", "npc"}], "]"}], ",", "inradius"}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.765920396086056*^9, 3.765920498461627*^9}, {
  3.7659205565901484`*^9, 3.7659205627726126`*^9}, {3.76592059524376*^9, 
  3.765920639757697*^9}, {3.7659207086614256`*^9, 3.765920734197124*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getExcenters", "[", 
    RowBox[{"orbit_", ",", "normals_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"perps", ",", "perpsNeg", ",", "exc"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"perps", "=", 
       RowBox[{"perp", "/@", "normals"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"perpsNeg", "=", 
       RowBox[{"perpNeg", "/@", "normals"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"exc", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"interRays", "[", 
           RowBox[{"#1", ",", "#2", ",", "#3", ",", "#4"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"orbit", ",", "perps", ",", 
           RowBox[{"RotateLeft", "@", "orbit"}], ",", 
           RowBox[{"RotateLeft", "@", "perpsNeg"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "exc"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.765707688664742*^9, 3.765707727912359*^9}, {
  3.7657077730156746`*^9, 3.7657078147932343`*^9}, {3.7657083647133675`*^9, 
  3.7657086023546762`*^9}, {3.766135773631796*^9, 3.7661358384246206`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Gergonne Point:
perspector of ABC and its contact triangle Ta, Tb, Tc\
\>", "Subsubsection",
 CellChangeTimes->{{3.7662395260597963`*^9, 3.7662395583207273`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
JanZ7faDBw96PJ5z585JjpM0V5KtigAAAABeF4VCQcJLLpe7cOGCpJWysjKL
xaIoit517YTiqP7t7e2y7xJUq6urnU5nJBKRvLayCwZFAQAAALBnra+v3717
N51OR6PRw4cPV1RUOByOkZERvevaCfl8frOJbWhoyO/3S16TX6C+vn7zEWzj
4+P0hwQAAACgl7W1tcXFxUQiIfGkrq6uqqqqqalpYmJC77p2QqFQkLyWy+VS
qZTktfb2do/HI3mturpaEqv8IPSHBAAAAKCXTCYzPT3d19cXDAadTqfZbJaJ
ZDKpd107iv6QAAAAAHab5eXlkZGRUCjk9/uPHz9ut9uj0ej8/Lzede2oYn/I
WCwmWdVqtcrvIGHN7XZLfFMUhVH9AQAAAOywa9eu9fT0eL3epqamkydP+ny+
/v7+69ev613Xjir2h7xx40YikdjaztjQ0CC/SSQS2byFTe9KAQAAAOwVc3Nz
kkSsVqvb7Q4EAnu8419xbExFUSSsGQwGo9EokU1+H/ll5LfSu0AAAAAAe8Xl
y5dbW1tNJpPD4Th16pSElNnZ2dXVVb3r0kfxqXMzMzPRaFTymt1ul6RmsVha
Wlp6e3slry0vL6+trUmsk5mfPn2qd8kAAAAAStPFixc9Hs/+/fttNls4HE4m
k0tLSw8ePNC7Ln1I+JIIJkEsk8lIXpPoGgqF3G53TU2NhFnJa5FIZGRkZHFx
UQKdxDqZWe+SAQAAAJSmWCxmt9vLy8stFktHR8fKysr9+/fz+bzedems2B8y
Ho8HAgGz2Sx5TX4iq9Uq8S2RSMhXMoPMpnelAAAAAEpKcUiNgYGB+vr6iooK
m83W29srSe3hw4cbGxuvcmNPnqiyQgmA8v6aNEUV+0MuLCwoihIMBpubm10u
l4S1pqamcDgsH87MzGQyGfpDAgAAAHiFioPVnz9/XmJaZWWlw+EYGhqSz199
7z7JaA8fqvfva++vNgZum2J/SPmV0ul0Mpns7u72+/0S1urq6o4ePep0OqPR
qOQ1+kMCAAAAeIWKj4HeHArSYDC43e54PL4tG8vntaS2sqK9v7YdLIu/ldls
NhqN8otJXlMUhf6QAAAAAF6he/fuzc/Px2Kx06dPHzly5MCBA36//9KlS9uy
sR/9SJ2eVvv61IkJ9e/+Ts1m1UePXpcmtiLJtuPj45LXmpubbTabyWQ6duzY
5viZU1NTN2/elNSWz+dJbQAAAABexq1btyYmJjo6OlpbWxsbGy0Wy9mzZ2dn
Z7dlY6mU2tWlut3q2bPq8LC6sKDevq3ltddKsS1yYGCgra3NbrdLyJW85nQ6
5acbGxuTb7PZLGOzAAAAAHgZ6XRaUZRAIODz+bxer9vt7urqSkmq2g6JhOrz
qUaj2tCghkJqPK7ltWx2W7a1/Yo/neQ1k8lkMBiKj8yWvCaZTu8CAQAAALzG
rl692tnZ6XQ6PR5PS0tLMBgcHh5eWlralo0lk2owqJrNqtOpTfT1ab0iM5lt
2db2W11dnZ2dlbx25swZl8tlNpttNpv8jPIbDg4OXrlyhf6QAAAAAD6xmZkZ
yRo1NTUSN9ra2rq6uiYnJ+/cubMtG5ubUyMR1WrVekIGAtp0PK6NN/J6Wl9f
l7yWTqdHR0fD4bDb7a6vrz906JDJZDpx4oTkNfpDAgAAAPjEEomEz+czGo0N
DQ2hUCgejy8sLGS3qWti8Z41r1frDyl5TVHUdHpbtrWDJJTJ7xaJROx2e1VV
VVlZmeS1YDBIf0gAAAAAL6r4+LDR0dHGxkaDwWCz2aLRqCS127dvP9qmQT8k
l0k6k4zW0qKePKlFtp4e9dq1bdnWDpJsm0qlJK+Fw2GXyyVJzWq1er3e9vb2
/v7+qampzSa2x48f610pAAAAgN1OktrGxobEh8HBQYlp5eXltbW13d3dkikk
qW1s03D6Kytav8dIRG1rU5uatDvXOjvVq1e3ZVs7SH7GzQeLT05O9vT0BINB
SWp2u/3gwYMej+fcuXOS4yTNbVd7JQAAAIASUigUJGLkcrkLFy5IpigrK7NY
LIqibO9WM5l/ec5aKKQ1q1mtWnCbm9veje6g4qj+7e3t8qtKBK6urnY6nZFI
RPLaymt7dx4AAACAHbO+vn737t10Oh2NRg8fPlxRUeFwOEZGRrZ3q/fuqfPz
aiymhsPq8eNqTY165ow6M7O9G91B+Xx+s4ltaGjI7/dLXpPftr6+fvMRbOPj
4/SHBAAAAPDx1tbWFhcXE4mEhIi6urqqqqqmpqaJiYnt3qq6uKg9be3cObWx
UTWZ1NZW9fLl7d3oDioUCpLXcrlcKpWSvNbe3u7xeCSvVVdXSxaWn5r+kAAA
AAA+XiaTmZ6e7uvrCwaDTqfTbDbLRDKZ3N6t5nLabWtzc2pHh3bDmtGojQkp
2a3k0B8SAAAAwCezvLw8MjISCoX8fv/x48ftdns0Gp2fn9/erebzajar5bXz
51WbTa2sVF0udWxsezeqh2J/yFgsJinYarXKLyxhze12S3xTFIVR/QEAAAA8
07Vr13p6erxeb1NT08mTJ30+X39///Xr17d3q4WCltckoXR3q3/8x+pbb6m1
teoHH2zvRvVQ7A9548aNRCKxtQWzoaFBfu1IJLJ5C5velQIAAADYXebm5iQv
WK1Wt9sdCAR2unteX59qNqtvvKG9y3TpKo66qSiKhDWDwWA0GiWyyS8vv/lc
CY2ECQAAAOCVuHz5cmtrq8lkcjgcp06dkigxOzu7urq6Q5v/4AOtTe2tt7T2
te5ura0tn9fa3UpO8Xl2MzMz0WhU8prdbpekZrFYWlpaent7Ja8tLy+vra1J
rJOZnz59qnfJAAAAAPR08eJFj8ezf/9+m80WDoeTyeTS0tKDBw92aPNjY9rd
apWV2p1r589rd7Fls1peKzkSviSCSRDLZDKS1yQUh0Iht9tdU1MjMVnyWiQS
GRkZWVxclEAnsU5m1rtkAAAAAHqKxWJ2u728vNxisXR0dKysrNy/fz+/Y3Ep
kdDGgTQatTEhOzq08SElr5X0aBvF/pDxeDwQCJjNZslr8uNbrVaJb4lEQr6S
GQql2LwIAAAA4CcqDnwxMDBQX19fUVFhs9l6e3slqT18+HBjY2OH6kgm1WBQ
u2HN7VYjETUeVxcW1JJ++lixP+TCwoKiKMFgsLm52eVySVhramoKh8Py4czM
TCaToT8kAAAAsAcVh5Q/f/68xLTKykqHwzE0NCSf72gfvLk5LaNZrarXq4ZC
2hgj09NqJrNDW9dDsT+k/P7pdDqZTHZ3d/v9fglrdXV1R48edTqd0WhU8hr9
IQEAAIA9qPiw5s2hIA0Gg9vtjsfjO11HKqV2dWnNaj6f1sS22bi2x8axLx4F
s9lsNBrlWEheUxSF/pAAAADAHnTv3r35+flYLHb69OkjR44cOHDA7/dfunRp
p+v4+79XJya0u9X++q/VwUE1FlPn56W4nS5DV5Kax8fHJa81NzfbbDaTyXTs
2LHNkTmnpqZu3rwpqS2fz5PaAAAAgL3g1q1bExMTHR0dra2tjY2NFovl7Nmz
s7OzO13Hgwfq0pJ255psWmLawoJ654766NFOl6GrYivnwMBAW1ub3W6X+Cx5
zel0ykEZGxuTb7PZ7M6N+gIAAABAP+l0WlGUQCDg8/m8Xq/b7e7q6kqlUjtd
R6GgPn6sDf9YfMmfe7UJqXhQJK+ZTCaDwVB8ZLbktVxJD5IJAAAAYNPVq1c7
OzudTqfH42lpaQkGg8PDw0tLSztdx5Mn6saGFtCKL/lzrw6psbq6Ojs7K3nt
zJkzLpfLbDbbbDY5QHJ0BgcHr1y5Qn9IAAAAoOTNzMxIIqipqZFQ0NbW1tXV
NTk5eefOnZ2u4+lTLZpJ+ii+5M+9Olj9+vq65LV0Oj06OhoOh91ud319/aFD
h0wm04kTJySv0R8SAAAAKHmJRMLn8xmNxoaGhlAoFI/HFxYWsiX9gLPXiIQy
OSKRSMRut1dVVZWVlUleCwaD9IcEAAAASlXxIV+jo6ONjY0Gg8Fms0WjUUlq
t2/ffrTHRvbYtSQ1p1IpyWvhcNjlcklSs1qtXq+3vb29v79/ampqs4nt8ePH
elcKAAAA4NWQpLaxsSEX+YODgxLTysvLa2tru7u75cpfkpp8pXeB0MgB2nxk
+eTkZE9PTzAYlKRmt9sPHjzo8XjOnTsnOU7SHC2hAAAAQMkoFAoSBHK53IUL
F+TKv6yszGKxKIqid114tuKo/u3t7XK8JFxXV1c7nc5IJCJ5bWWPPT0cAAAA
KGHr6+t3795Np9PRaPTw4cMVFRUOh2NkZETvuvBs+Xx+s4ltaGjI7/dLXpOj
Vl9fv/kItvHxcfpDAgAAAKVhbW1tcXExkUjIpX5dXV1VVVVTU9PExITedeHZ
CoWC5LVcLpdKpSSvtbe3ezweyWvV1dWSsuUg0h8SAAAAKA2ZTGZ6erqvry8Y
DDqdTrPZLBPJZFLvuvAT0B8SAAAAKG3Ly8sjIyOhUMjv9x8/ftxut0ej0fn5
eb3rwk9Q7A8Zi8UkX1utVjl2EtbcbrfEN0VRGNUfAAAAeK1du3atp6fH6/U2
NTWdPHnS5/P19/dfv35d77rwExT7Q964cSORSGxtG21oaJDjGIlENm9h07tS
AAAAAJ/E3NycXNVbrVa32x0IBOhE99opjuepKIqENYPBYDQaJbLJMZWjKcdX
7wIBAAAAfBKXL19ubW01mUwOh+PUqVNywT87O7u6uqp3XXhexSflzczMRKNR
yWt2u12SmsViaWlp6e3tlby2vLy8trYmsU5mfvr0qd4lAwAAAPjJLl686PF4
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
Pp/X63W73V1dXSlGRMQeUDz5Ja+ZTCaDwVB8ZLbkNcl0ehcIAACAPe3q1aud
nZ1Op9Pj8bS0tASDweHh4SWeNYY9YHV1dXZ2VvLamTNnXC6X2Wy22WzyjyD/
BYODg1euXKE/JAAAAHQ0MzMjV6o1NTVysdrW1tbV1TU5OXnnzh296wK23fr6
uuS1dDo9OjoaDofdbnd9ff2hQ4dMJtOJEyckr9EfEgAAADpKJBI+n89oNDY0
NIRCoXg8vrCwIBeoetcF7BwJZXLmRyIRu91eVVVVVlYmeS0YDNIfEgAAADuv
+PCp0dHRxsZGg8Fgs9mi0agktdu3bz969EjvArG9CgU1n9ceVvDggbq2pko6
v3dPXV1VMxlJLmo6raZS6vXr2nPn5M/bt7WvZB6ZU+aXpWTZUuobmM1mU6mU
5LVwOOxyuSSpWa1Wr9fb3t7e398/NTW12cT2+PFjvSsFAABA6ZOktrGxIRef
g4ODEtPKy8tra2u7u7vlilSSmnyld4HYXpK2JHxJEJM4trioLiyo8/Pq7Kw6
Pa3G46qiqF1dan+/Ojys/Tk5qX0l88icm/FNli2lvoHyj7D5aPjJycmenp5g
MChJzW63Hzx40OPxnDt3TnKcpDlanAEAALADCoWCXKDmcrkLFy7IFWlZWZnF
YlHkGh17Qy6nZa65OTWZVBMJLZHFYlpG6+tTIxE1EFDdbtXnU4NB7U8JbvKV
zCNzyvyylCxbkn0Di6P6t7e3y/9FeXl5dXW10+mMRCKS1+QrvQsEAABA6Vtf
X7979246nY5Go4cPH66oqHA4HCMjI3rXhY/YfGp3Pq8+eqT1P8xmf/y6c0dr
5EqlfvzabBqTMHX5snrpkhasJibUixc/EsT6+9XBQW36/ffVCxfUjg713Dk1
HFZDIfXsWW1CopkENIlpEtaamlS/X/vz1Cn19GltHplB5peluru19chqh4a0
CVmzrFP+lG3JFmW7snWpQSqReqQqqW1rqem0FvcyGa135b17u6iDZT6f32xi
Gxoa8vv9ktfkv6O+vn7zEWzj4+Ml3B/y7l3tSMlxHBvT2lIlkstRu3pVO17y
LtPyiXwu38o8ctDlXJLj/sEH2idyuIuv4vlWnEfOhOVl7cjyzHkAAIDnsba2
tri4mEgk5BK0rq6uqqqqqalpQi6ysZvIxe3Dh+r9+/8SzRYWfvySy+bhYa3N
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
pwsBtbTQX7Hv0DSlki5bS0mRGhudtOkMwzAMwzDLBkxtbGwMgVxRURE0zdPT
MyQkZN++fYjuYGpjrlQtUVy/k59PSVBQMwgaNA1xHZQN4gZ9O3iQgr35Zl4x
jLtw5Qr5Wk+P9P77Ul0dJfru3Xs9KemqwTD6k5+cu+eed7/0pfJvfatg06a9
P/5xWmTk66+++mZlZWVbW5trrpILYGrYwO5u+h7GYqFJvXcvVe/H4/gQ+lSv
7+PH6a+O8pgwNbmcvBVHg2EYhmEYZpUxPj4OUxscHMzJyQkMDPTw8FAqlTab
zdnbNQtiTW33bqrx6OFBqY8KBcV1mZmUEjk4SOmRK94WmGGciRCc8PBPNm26
/qUvTfzt3x7/n/8z5ytfefHf/i0+IuLXFosFvtbt2rVQMXmxgc3NtCxuNn9O
gUeRKglZwyeAnx99e1NdvbJbzDAMwzAMs/wMDw9fuHDBbrdbrdbg4GAvLy+t
VltWVubs7boB/MvxlfvRo/R1OkxNp6PcJ7mcKsIZjRS2VVVRbhieOfNLeIZZ
3WB2QF7ga6+++klk5OSTT17/t38788//fHT9+tfvu2/vj36UGR5u3bPnQHl5
owvmQ4qKJR0dVPESymkykXnNKmviyceO0TM1Gunpp6XNmyVvb7q/fz83T2QY
hmEYZrUxMDDQ0dFRXV2dlpYWGhrq6+sbGxtbBflxGUQsmpZGlR79/cnUEMsh
qMvJkQ4fpr+eOUO5YePjFM5NTjp7ixlmBRHfZkBh3nzzEyibTvfHgIA/eHq+
e9ddb//Lv9g2bXpdpcqHr7lgPqToBXDkiLRnD62UQbt0utllTTwZnwaY/vgc
ePRR6e67qTu2QkGdstvbKVPalS60ZRiGYRiGWRQ9PT3Hjh3Lz883mUw6nU6h
UOBOQ0ODs7frBiLLC1Gcry9lP8rlFKo1N9Of3K3WHcMsF6Jj9d69Ez/72dU7
7xy9447T69Yd/dKX3oCvhYdbXTAfUmxzTg4tlMtkUkDA1LcxM2VNPNlmo9U3
CJqPD/Xgvu02+mSIiblR5J9hGIZhGGZ10NXVVVZWZjabExISoqKiNBqN1Wpt
cYGWRdOvYUlNvankY0KCVFw81TptSbtILRpR0u6jj6SPP+alPmYlEQtPVVWT
qanXwsKuKhQXvve9E3feWf297x1SKN4KD897+eWD+/fXNjW1dnWd/eMfh5y9
yTe2ubaWCjyKYkEwtZoaWiab9clNTdTTzWSi7ttqNVlbbCyVx+SVNYZhGIZh
VhknTpzIzc2NiYmJjY3duXNnXFxcQUHByZMnnb1d5GIVFbSgFhdHX7kjHtu+
nWq+5eRQxlRHBykRxMi1yomIknYXLlBeJl9Ex6wg4pKu7u5P6uomCwsnEhM/
+vnPP3z44e7Nm9u+9726TZvKAwNtv/xlblraa+XlVfA1Z2/yjW0+f1567z1a
GoOjwcXa2mbRLvHk3l4JH1ENDfRRcOAAlYd9+20qj8nXrDEMwzAMs8pobm62
WCwqlcpgMBiNRtdJlBJ9bx3V3mQyupLFZnPtko9iOdBulz74wLW3lVm1iK7x
VVWTv/71NaXy6sMP999556kvfanxzjv3P/zwK0rldvhaU1Ors7eUYRiGYRiG
uRV1dXWJiYlyuVyr1SYnJ9tstqampt4V7yc9OUlfmyPI7OuTTpygKtxZWdJL
L5GshYZK27aRqVmt1PfWpVercNyamkgpy8qoQmVDAxWpvHTJ2ZvFrC0cK1CY
Ke+//0lp6fW0tAm9fuiJJz64++5T991X7eu7/5FHUrdv3//b39bU1Z06dqz3
3Xcvt7Zer62dPHjwk/x8SdyKiijfuLSUBrLdzutWDMMwDMMwK82RI0eio6N9
fHzUanV6enpDQ0NnZ+elFfcLEV62tNC1J3FxUlQU1X6ErMXGSunpJEAwtZ4e
174OrKuLNM1spi3OyKD2b1C2M2ecvVnM2kJ89XHx4iednZNNTddff/3KL385
JJd/+NBDp+6/v/Guuw4FBJSFhZUajQeSk5tefbXntdeu/cd/XN+27ROFQhK3
LVvoKlGNhq4OwwTkK8IYhmEYhmFWmNLSUo1G4+npqVQqMzMzu7u7L168OLLi
ZTtE4tbBg9KvfkV5j3K5FBREsgb1qa52k4xC0axX3G7R2ZdhVorW1uvQse3b
x370o8HvfKfPw6P7W9+q8fHZ9/jjSc8882ZIyAn86bHHrn3rW9dvu00St9tv
p6r4np4kbkYj11pkGIZhGIZZIcbHx2Fkg4ODhYWFYWFhXl5earU6Ly8PpjY0
NDS2UqlOonriqVNkZPn59B2+TkfBYXg49b+2WGipqqPDtbMfBXY7rUAgrt25
k5YGsSd790rHjzt7s5i1ztmzk1VVE/C12NjRrVsHfX37/+//PblxY+2999o2
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
+7I3/+5FnyM/uvvMt79N9Ub+7u+kv/5r6W/+hu6sWyd9/evSN75BF7ht2DDp
7T3x3e9e27Tpw4cfPimX10RGvvfb39qrqs69//7AwMDHzt5jhmEYhmGY1cCJ
Eydyc3NjYmJiY2N37twZFxdXUFBwcikkAqbmuEymuJgukAkMpA5jKhX5WlIS
Fe1fhc3UbkFnp1RSQlEylBWmFhND1w6dOOHszWLWBOKaNczslha6gLLl3esd
LVe720f73mq6vOe1cZ3hkvrFs1ti2n+yK+eJ/VHykz/4gbRxo/TNb0pf/rL0
ta9J//APVNj/3nulf/1XWhmXy68/88x4SMiVJ574L1/fM3fddeL733/vpz9t
3LGjJi+vA77m7D1mGIZhGIZZDTQ3N1ssFpVKZTAYjEYj7ldWVnYvxXKXaKYG
QZHLqR00Yj/42hpNABSJaDgckDUun8c4l8/OTj4eZtm7rfmFF6Sf/ITsbN06
6dvfpjt/cjRqx6ZSSf/+7xMvvTSWljaiUg3ed1//X/3VB1/7Wss//VO5r28W
fK2q6pyzd49hGIZhGGY1UFdXl5iYKJfLtVptcnKyzWZramrq7e1d8AuK2o8d
HbSmBjWJjJS2bKFIT62mNTXEhk1N0iLewT0RiWg4KLm5VNOhqko6c8bZm8W4
EGLuXL4s9fWR39vtNGqam6mK46FDNHfefpuWxhxd4yFbC+fCBZqHeEVMUY1G
Cgigdu2xsZLF8t5/Vv72l92Yrc8+S3a2ebP09NNSRAR9x5CYKKWk0FcO2dmT
RUXXysvHUlKGw8P/6OfXv2nTaZms+a673t66tcFsbqmv7+joON/f/8fx8fGJ
iYnJ1Vk2iGEYhmEYZnk5cuRIdHS0j4+PWq1OT09vaGjo7Oy8dOnSgl9Q1H48
coSyHxHswdTCwmgpKT1dKi+n+BOmNjy8hDvhDohENEisIxGts1NaxHFmVh9i
7pw/T2MEZg+Xys4mOcJU0utpYRo6ZbXSnyBxi2rT19pKtVlF4X68dHy8lJcH
M2zK7U7dPbh1K9lbaCg1rIejvfEGtQqsq5MaG0ke29omOzqud3VNvP322Guv
fRQXd2nr1r5Nm85+7Wunvve9JpXqcFJSYVFRfVvbH0ZHR8fGxiZWZ0MOhmEY
hmGY5aW0tFSj0Xh6eiqVyszMzO7u7osXL46MjCz4BUV2VU4OXafm4UFrajA1
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
vVrMrbBYe2BmZmb6+vqg10pLS7VarVKp3Lt3b7i+8fDw8NmzZ6HalpeXWbUx
DMMwscK5c+cGBgbq6uoqKioKCwvVanVNTc3o6Ki0piIZfuL5DiMq9g0PS7W1
5AUyGGj+Wl4ezdb6xS92en2iF6G2xGNDk/qE1rtyhcyTsVWEn9kgr79+UwVo
tVRV1Oul7uJzc5FeLeZWWKw9MMIr0t7eXllZqdfr8/PzodeMRiMubb29vfjr
/Pz8MnsPGIZhmBghGAx6vV6bzVZWVmaxWEwmU0NDw8T7YYGoSLaTBUZuZ2aG
JmatbRDNJRG2EuGivHCBcpncJjmuEQd1RgYZjBOyH3gMwGJt84hLG/SaUqmU
yWSiZTb02iIPeoZhGCZGOHHiRH19vdFoNJvN5eXldru9o6NrfPwsLmUdHZTJ
Sk2lumS9vRFbQwgIRClQZ4gt8/IogMH6HDhAL+5kP7G4Bdt3cpK2b1cXWU4b
GyndcvgwVZ04fpyKGty7H/nSEiVmgkHK0Bw5Qu/FuMHntLbSTzzHK3gdf8Uy
WBLLMzuOyFO3t1NTvpQUSpfX1ydUP/BYAgef3U5KTa0mcc1i7QGYm5sbHR2F
Xquuri4oKFCpVFqtFpe5969xHcePH2c/JMMwDBMTBAIBXMsyMzNxOausrGxo
aOjuHhwdnUUU19REzsO0NJoyhnA7Uly/fnPyGqL+sjIKYLBWFRUUvRw9SnqN
2RQic1leTls2I4MkscVCwSKieSi4e/cjh/6CEMO+qamhgYLgMitLev552k/4
ied4Ba/jr2y5ixxiBuiBA2SATE2l+zBQ0onUDzyWEFMLodSMRhZrD8LS0hL0
WjAY7OnpcblcJpNJp9NlZWUplcri4mLoNfZDMgzDMDGB3+8vKytTKBR5eXkO
h6O/v9/vnxwZmUe0UFdHcYJCQRLJ74/0inIAs01gC2I7Co9pUhLlXeTyD4qG
37sfuSgvCFH25JP09ocflj72Maoiip94jlfwOv6KZbAklmd2HFFbNXwEsZc4
yhEHpXjwue6BgSjDdc3tduv1erlcnpSUBL1mt9vZD8kwDMNEM6I9TU9PT2Fh
oUwm02q1Ho9ncnJyfHx2dPTayAiV9TAYokisTU9T5TqHg9YHMgLhf1WVNDDA
2YHNcf48ZSgRC0KXISjEZs3JoexL2H2FbY3XEeKH7ZG9vVSLE0H/m29Kb7wh
BQL0xpISKTNTeuop6dFHSZ194hPSQw+RWMNPPMcreB1/xTLl5dLPfsZ+yJ3n
wgUS3JDdlZWUU1MqKTc9NBTp1WLuAou1LWR+fn5iYgJ6zeVyFRQUQKlpNBqL
xeJ0Otva2oaHh8MptuvXr0d6TRmGYRjmA6DUVlZWcHnq6OiATEtOTs7JyWlq
asI165e/vDY+/muoM5dLys+PIrG2sCBNTdGaQDpArO3eTfa6tjaed7M5rl0j
vYZAEPq8v58UWX29VF39QSMubOu8PMrHQMcVFFD7BOwADA6nkxbbu1f69rfJ
V/fZz0q///uUTYNG++hHSazhJ57jFbyOv2KZ558nvcZ+yB1H5D8hrAsLSYh7
PNRWnYlOWKxtIbjM4boGRTY4ONjc3Gy326HU9Hp9RkaG2Wyura2FjoOawzKR
XlOGYRiG+YDV1VVcwhYXFxsbG3HNSkpKUqvVXsRzawpOOBw3C3pEiVhbXaX5
a4uLFHZCQMhkJCCgG7ii3RYjZrFhxyOsV6nIFZmSQoZGCC6IZGz37GzphRco
Wfa1r0mf+QxJs/U88Ha8hf2QO44wQOLAgQTnPRDlsFjbDkRVf6fTiatecnJy
enq60Wh0u93Qa/hTpFeQYRiGYT5gaWnp4sWLwWDQ4/FkZ2enpKQYDIbu7m6J
2mTTLXefj2pCFBZSqG63U9Yl4oT7iUGvjY5S8gcBDOJPqArOrG0xov5mWxsl
YLD7Ed9Dt2dkkEMyP582PeL+v/5r6emnpT/9U+kP/mC9Yu1zn5O++U3O6+w8
g4OUEYXOzs0lA+S9pyEyEefUKTr4ysooE2o2s1jbGpaXl8Mpts7OTqvVCr2G
a59Opwu3YOvr62M/JMMwDBM9LCwsTE1N+f1+XKRyc3PlcnlJScnAwIC0pryf
yyUVF3+QvYo4771Hem11Vbp4kYrKQ0yInBrPWdtKRP1NhIyQVBDqhw/TgGhs
pHmM1dWUmEHQn54u/fEfS488Iv3H/7hesfapT0mPP84zpnae3l5ysKamUkYU
xzUno6OcM2eoDqvdThIbeo3F2pawuroKvba4uDgxMQG95nQ6zWYz9Fp6errB
YMClkP2QDMMwTPQQCoWOHTvW2tpqt9uNRqNKpcKTkffzZ6HQzVoE0GiIyjlO
YD5woE5OUs4VI0OvJ2/k2tqP63lg+eRkrkW480Bqq9W0+TMySHNz5/MoRziR
odfKyvgkvMWwH5JhGIaJfqanp7u7ux0Oh9VqLSoq0uv1Ho9n/H1nGscJzIcR
DtTZWcq1YXyUlkrPPHNL7cf1PLD8rl2k16D1IPqYbQY77do1SpMePEibPDWV
6rt2dtKexJ+wV5no5Px5cq7ixFtVRTbI6LE3xAfCD+nz+ex2u0ajwRUQYs1k
MkG+eb1erurPMAzDRJyTJ082NzdbLJaSkpJ9+/aVlZW1tbWdOnVKWlM4TpQD
ZLGW6AgHKkL/S5dIz//0p9Kzz95S+3E9D9F5Ta2W3q9mw2wr4Uqfk5OUTcOB
vHs3FeN8/XXak9if2KtMdCK86Pv3k381eiYOxwfCD3n69Gm/37/WYZKXl4er
odvtDk9hi/SaMgzDMInL2NgYrkcajcZkMtlstrX2Dy5Extyf1laKINep0W5/
4L34BGabEZVd6+ro3gsnaGKFqC3JG2eIqsherxdiTSaTKRQKSDZcGXFNHOND
hWEYhokcQ0NDFRUVSqXSYDBUVVXhUjU6Ojr3fusrLkTG3J9XX6XKkLt2Sb/7
u9LHP75ejYYlsTzeBbHmdNKoOnmSBlwwSBmghQWqFMP+vK1DZNYGBuighlLr
65M4XRD9RG1J3jhD9BsNBAIejwd6Ta/XQ6mp1ery8vKWlhbotenp6YWFBcg6
LPweZ6MZhmGYneLIkSNmszktLU2r1bpcrpGRkTNnzly5ckXiQmTMehDlBT/z
GdJf6xRrWBLL412IPi0WGljNzaQivF6aojM1JV2+LF29SnqN2QrEnLVz50gT
cxHIWCFqS/LGGRBfkGAQYqFQCHrN6/U6HA6TyZSZmWkwGKDX3G53d3f31NQU
BB1k3bt8H4lhGIbZKXw+n16vT05OVqvVdXV1MzMzly9fXn6/VxkXGGHuj99P
g0OhIOW1a9d6xRqWxPJ4F8QaAlCMLUg2fI7NRoMMn4nBB73GPfOYxIZL8u4w
wg/Z399vs9lUKhX0Gi6OGo0G8s3v9+NPWGCVK6gyDMMw24yYWN3e3q7T6VJS
UrRabUtLC5Ta1atXV97PaIhCZNXVdFOXOxgzdwADAsMiL4+aXH/ucxtrio13
FRVR4tbhoDsC4Vo2lZVk+aqrowj10CESbqOjZJKEfLt0ifJDXBSDSRj4jtkO
I/yQk5OTXq/XbreXlpYWFBRArJWUlLhcLrwYCARCoRD7IRmGYZhtRZQsPnDg
AGRaamqqwWDo7OzE68LjIRw4iJ3NZqrbhyd4hWE+YHpa6u4mtZWdLT322HrF
GpbE8ngXhN4rr9AggzpDPGqxkKlSp6PRBimH2BQRKoZdczPFrBCGs7Ncbp5J
HLgk7w4j/JC4PgaDwZGRkaamJqvVCrGWm5u7Z88eo9Ho8Xig19gPyTAMw2wr
ohlouBSkTCYzmUz9t7YnFoXI3G4KEnhuO3MHxChBKCmXr1esYUksj3f5/TSk
xsYoJIV2wzjLzKS/JieTTzItjaySEG5YGKPQ56P/xY2cmYSBS/JGHHGVVKlU
CoUC10roNa/Xy35IhmEYZlu5dOnS+Pi4z+fbv39/fn7+7t27rVbr0aNH1y4j
wnCXi9IdSqVUUSENDUVqlR8Q0RlsZUV65x2uMrjViDqDBw7QKIG2euIJ6Qtf
kB55RPrUp6Q//EOanoafeI5X8Dr+imWwJJbHu6amqJDNzAylbLu7b5puS0rI
dKvTSVotzWgzGkms2Wz0p9paahUGZXf4MKm8kycp1wb5hv3KURMTdwixZjbT
YVFWRmV43m+DyewQMzMzfX190GulpaVarVapVO7duzdcOXl4ePjs2bNQbcvL
y6zaGIZhmK3l3LlzAwMDdXV1FRUVhYWFarW6pqZm9FaPoxBrNTWSwUCNdK1W
6VY9FwNAl0GdXb9OquLKFa4yuNWIOoNvvEFmRUiqPXuk556jpNjjj5PdMTWV
fuI5XsHr+CuWwZJYHu9aWKC9ArU1N0eOSsSmgQDVl/f5pKYm6Z/+6RYHWH4+
tQnIyCCHJF6x2+lzBgdJ6+GjuBoJE3cIsQalhtMvhnxXF93eYHYM4UJpb2+v
rKzU6/X5+fnQa0ajERfN3t5e/HV+fn6Zzz8MwzDMlhIMBr1er81mKysrs1gs
JpOpoaFh4lZ7TXz0Y11dJaUGNYCvc+ECVxncNrCJsXHHxii4hJJSqSgXC4WP
cYOfeC6q9K+zcLwohIfxhzdqNPQ5kH5JSVJKClklN/qBDBNrCLGGcy+UmttN
J2RukBcRxEUTek2pVMpkMtEyG3ptkc8/DMMwzJZy4sSJ+vp6o9FoNpvLy8vt
dntXV9eZW+/YCoNbXR2JtbQ0suIcORKpVX5AoMugzoTPrrGR9OZbb3FNwY0g
vKRXrtC2QwSJkYHxsRZsaOhhbOjBQUp4IbKsqKBkAKLM8nJ6srYs/3oSYfhf
GJDQa9ht+EDEqfiQggKawgbhhhFpNEr790udnTRGZ2c/vD4ME/uMjdHAx3jH
ubeqig4gHF44+JidZ25ubnR0FHqturq6oKBApVJptVpcQHH17OjoOH78OPsh
GYZhmC0kEAjgipOZmYmLTmVlZUNDw+Dg4Cwi3jUIg9vBgzSFKDWVIuXe3kit
8gMiEj5tbVQVHjE+gh8oAK4puAGElxTqaWCAQsajRz8cMiJEgf7C5sYoOnmS
JpQNDdFiUGd4C0R+fz/tBmi9dU4xu3GD9FooRPZIfCDeizgV48/rJckdrmb+
yiv04cGgdPGi9Pbb27cBGCYi4DDCMFep6Ny7fz+N/dFRsgwzO8/S0hL0WjAY
7OnpcblcJpNJp9NlZWUplcri4mLoNfZDMgzDMFuI3+8vKytTKBR5eXkOh6O/
v39ychIXmjsu7PORWEtOpp94HlsIMydiHrVakskoIYOYh2sKbgDhJUXsWFe3
4Zp04u1btcWFQzIsANnbysQpoud8Xh7ZgTHecTa7y3ma2SEgynDFdLvder1e
LpcnJSVBr9ntdvZDMgzDMJtHNJHp6ekpLCyUyWRardbj8UCpnT9//tpdjGSd
nVTXYdcu+onnscXt1Qr37KH6loiCpqaovgVzV4T7EeIoECCJW1tLXkTI3fp6
6cSJ9X7OpUvUIu3QIcoKYGdsviKncEhiv4aV2oaqxojvxUZYJrphsRaFzM/P
T0xMQK+5XK6CggIoNY1GY7FYnE5nW1vb8PBwOMV2/fr1SK8pwzAME3tAqa2s
rOAi0tHRAZmWnJyck5PT1NSEKwuU2spdwt2ODikrS3r4YfqJ57GFMHP29JDO
UKmk3FwqrYbIp7ubHHbMXRHuRyg1j4c0msFAJRn1evoV+mudnDxJk85efFF6
6SVpeHgLKnIKhyT2a9hUuSH1J74XG2GZ6IbFWhSCCyiumFBkg4ODzc3Ndrsd
Sk2v12dkZJjN5traWug4qLm7OVUYhmEY5h6srq7iQrO4uNjY2IgrS1JSklqt
9nq9935XaytpnI98hH7ieYwipuqLB37Fi8xdEfZFjBAoNZmMokYMgo1uOxFx
mkw0gCLuWtxyWybDbA8s1qIZUdXf6XTiepqcnJyenm40Gt1uN/TaDFftZBiG
YTbO0tLSxYsXg8Ggx+PJzs5OSUkxGAzd3d33fldMZ9YE09OUSkPAU1JCyTVo
DkRBUCHh2oTsWPkAUSrk7FlKhGEb7d9PFlJsMoSM2GpQan19GyggPjRElSGV
SqmoiNyoEa+0L+Yx4lv09NA8zIEByh5OTNAomZuL9S7bIpuMn9xSMKY5coTq
QKal0ZFXV0fD9vY6rEykWF5eDqfYOjs7rVYr9BquqjqdLtyCra+vj/2QDMMw
zEZZWFiYmpry+/24lOTm5srl8pKSkgFEqvckpuesCRYWaJKa308T1vbsuXmz
2umkmB1BOt+s/gBRhL+3lxqiG42k1AoLKS+G7QXttlG1BR1UXS1lZlLcWVsb
+fRAMEjfwmaTiovpe+n1JOCxhg0NpOdHR2O9y7aYp8mBfayDQxAHX2oqDdKD
B1mARxerq6vQa4uLixMTE9BrTqfTbDZDr6WnpxsMBlxk2Q/JMAzDbJRQKHTs
2LHW1la73W40GlUqFZ6MjIzc+10xXQ1ScLunT6Ui/cF9Zj+M6HYQto1ufkuJ
j7JYKLXZ2kq1QUKhbVj19SHqoUOx49thZMvlpCXxHbF6D6BGowyROWTLXKwT
H+feuIf9kAzDMMxWMT093d3d7XA4rFZrUVGRXq/3eDzj96sUER93d0VVieFh
yhdBOuh0VC0Dwq22ll6Mce/bphHux+PHye0KOWM2S1rtLUrtwXKQJ05Q9Uhs
6JIS6nUXcXl85oz02mv0BbE+BgN1dMBQwBCHliwvpzV0OmmFsRGwnkNDVEol
GKQ01cLCFpSy3H5OnaKugj/+Mcli6DUuexm7xIerIe4Rfkifz2e32zUaDa6t
EGsmkwnyzev1clV/hmEYZp2cPHmyubnZYrGUlJTs27evrKysra3tFGK7exIf
8yZEvfazZ0l+QjEgVEcIlJ5O3w7BbYx73zaNcD9CpBQX0xSzrCxSMWGldvjw
g8/uC1eDhBTat4/UkM1G2SvIn0gRrvw/MkJz1rDjMaah3qHRysrIFQl9mpFB
I2PPHvruFRVU+hIrPDhIPtrNl7Lcfo4epcKnGNj4QpCbXPYydomP+cJxj/BD
nj592u/3r/Wu5OXl4TrrdrvDU9givaYMwzBMtDM2NoarhkajMZlMNpttnSaN
OKtIJlx+TidF5cnJ9BPPY9z7tmnEdrHbSaklJZE5UK/fgkSYmCOGYQTJttGe
2tsH9CnEF74ahjhWCWuo0dBAx5hISaFcskxGmwIbAX/CAlgs4qUs1wE2tlpN
OxADu7GRy17GMPFRiTdxEPWWvV4vxJpMJlMoFJBsuObiajvG1YcZhmGY+zE0
NFRRUaFUKg0GQ1VVFS4oo6Ojc3Nz935XnIm12zNIWi3lfCBKensp75ZYtjHE
8eHNMTxMaSaoVugpaBZsl4ICqsay+Qos+HB8CLYvJA+UWvR0TVhZoTQZxNfU
FCXOIHKwYhjrUGc6HQ0LrKrBQEUs8WJlJSXg6uqoCEl4g0SZG1jsyQMHaN2h
NbHunZ2cWYthOLMWW4hOpoFAwOPxQK/p9XooNbVaXV5e3tLSAr02PT29sLAA
WYeF30uUywzDMAyzXo4cOWI2m9PS0rRarcvlGhkZOXPmzJUrV+79rjgTa2Ju
1htvUFgLaVJYSJY3BOYIxiFZEiu4xY6E9MBOra0lP2hGBkkVbBS7nbyLkDCb
720QClFFkdZW+kyjkZIEeHK/sjY7QXgeI0bDwgJZe4NBkpCvv06lHNrbaXBA
u1VVkacQGwTSFQpOraZfoWqjzw0s9uRPf0oybfdu8pzi2yTWzYf4guesxRYQ
X5BgEGKhUAh6zev1OhwOk8mUmZlpMBig19xud3d399TUFAQdZN27iXKZYRiG
YdaLz+fT6/XJyclqtbqurm5mZuby5cvL9/N0xZlYEwgNgW8HjSKTkZLwehPM
NibSXvjy6enb4goV1QkxejCGMJKwxTGqohlhCsWAwGqbTFQuUi6n7QOxabNF
4WEQtQlM5oHhapAxivBD9vf322w2lUoFvYbLrkajgXzz+/34ExZYTZTLDMMw
DHMfxPTn9vZ2nU6XkpKi1WpbWlqg1K5evbpyPyuXqHReUEDtkRG9jo5K9/NO
xgDhOhPQax4PfbXduynFVl+fYJPXRPUPiDXE91BqVivdxN/CeitC+NTWUj/y
tDRK4R05sgWfvH0IsyzGenc3TVirrqaSNAiacTDgGIi+zFq4CCR08L59tKbY
pdix2L1MzCHamh88SCMuNZVOUL29kV4tZt0IP+Tk5KTX67Xb7aWlpQUFBRBr
JSUlLpcLLwYCgVAoxH5IhmEYRlpTWPjAgQOQaampqQaDobOzE6+vx4kh2mQh
xK6qorh1cJAC1Vjnxg3Sa6GQ1NNDE5LUapqchJA84n3AdhSIkZoa+vIQawj0
nU5SahMTW9nJQNTxEJOpoj/0FGbZuTlpepo2SCAgDQxQemNkhAyT0TdnbXyc
bjsgtscwhuB2OEhlYt2ZmEO0Na+ro1x0TNzeYNYi/JC48gaDwZGRkaamJqvV
CrGWm5u7Z88eo9Ho8Xig19gPyTAMw0hrWnaGS0HKZDKTydTf37/OtyNQhUAz
mSiWt9sj3yZryxFf0GKh7xjx0vI7ijC5QqwhNNyOtKLoRw4ZDM3Ppq7tQWTA
sSfxJLHuOcQXsWgcZu6NuP6qVCqFQoGrMPSa1+tlPyTDMAwDLl26ND4+7vP5
9u/fn5+fv3v3bqvVevTo0XW+XWiZkhK6Y484sKuLDIRxw/nz1JoK37G5mYxk
cePzXBenTpHXCrFgfT1ljraj25zoR97RQZk1iDWdjvJ3CVX5IpwswbEUDNJG
hoi6coWSu5tGVEnp66MjFIG9wUCGUyg1HKT3qx7ERCMs1uKPmZmZvr4+6LXS
0lKtVqtUKvfu3RuuyTw8PHz27FmotuXlZVZtDMMwicm5c+cGBgbq6uoqKioK
CwvVanVNTc0oBMn6EGLNbKZoEGEDFM39OmnHEiKOPnmSvheiaSi1paVIr9bO
sLBA3xmB4PHjGChb6X4UiH7kEGiQaRBrkGwQbglVdlPcEfB6KQrfOikl+g/g
qIRMk8motGlLyxbKQWanYbEWfwh/S3t7e2VlpV6vz8/Ph14zGo24HPf29uKv
8/Pz9633xTAMw8QlwWDQ6/XabLaysjKLxWIymRoaGibW3ZVYiDXxiJKexkyM
IWrbaTTk0kuospviKLLZyEm8dSZFMSOwro6mHrLJNA5gsRbHiMsx9JpSqZTJ
ZKJlNvTaYqJUtmIYhmFu4cSJE/X19Uaj0Ww2l5eX2+32rq6uM+s2MooqcyUl
lFxjscY8IIg+MXpkMgpAMYYgMCAzEuROcjBIOTUotYoKKmcTnvzZ2Egv9vZS
yZ6xMTrSzp3baOmShQXq6Y1IvqaG8pZyOR2nAwPb+V2YbWZujpzYGBr791Mx
nujpTMhsnrm5udHRUei16urqgoIClUql1WpxacZ1uaOj4/jx4+yHZBiGSUAC
gQCuC5mZmbg0VFZWNjQ0DA4Ozs7OrvPtUHVdXRQtWK0UB7JYYx6QHShmErWI
LmhQajiKsAWgWDUaSoYhHMehhT+1tZHK2mBTACwLqYdDEh+MT8rMpIqmgcC2
fhlmexH7tKqK7o9xy7x4YmlpCXotGAz29PS4XC6TyaTT6bKyspRKZXFxMfQa
+yEZhmESEL/fX1ZWplAo8vLyHA5Hf3//5OTk/Lr7+YowE3oNsTaLNeYBEfUK
MYbCRUWjrK/0NiJasGMLQKlhI8jlUkqKlJREvQx276aIHEcXNOwGN4tI2eHd
FgsfnvEAn3ITAYgyXIvdbrder5fL5UlJSdBrdrud/ZAMwzCJg2j10tPTU1hY
KJPJtFqtx+OBUjt//vy1jd+659u8zKYQDbhdLunVVxMrsyZasHd1UeFNROHY
Dnl51IU8J0fKz7+l3GptLZUI8fko0RYIUJj+1lv0CXeqnynaIIr5cHHWWSMB
YTNDIjA/Pz8xMQG95nK5CgoKoNQ0Go3FYnE6nW1tbcPDw+EU2/Xr1yO9pgzD
MMx2AaW2srKCU31HRwdkWnJyck5OTlNTE87/UGor654UwxMomK1hdvam7O/u
piGVUHPWRAt2BOLHj9Pxc/gwHVSNjSTNqqtJaJnNVMlRrSb5ptVSoRBE6vgT
thhUG954p/qZr79+01uKxR2OxEpXxis8TTgRwKUZ12IossHBwebmZrvdDqWm
1+szMjLMZnNtbS10HNTc+j0wDMMwTMyxurqKy8Hi4mJjYyPO/0lJSWq12ov4
cINwaTJma1hcJIE2NkbWvQsXEqsa5O2IXuE4unw+SokhKFepqABLaio5JJOT
ySqZmUmv19WRvrvTFhMlNiHysFRCKeB4hQvwJhSiqr/T6cSVOjk5OT093Wg0
ut1u6LUZTpMzDMPEL0tLSxcvXgwGgx6PJzs7OyUlxWAwdHd3b/RzRLk5l4vs
WizWohTRzuzaNenSpZvtraPKQgMJgVXCil28SGmmhOqzdjuiV/jsrDQ+TndD
EJHb7RSaGwyUWYP60ukomW2xSC+/TH7IO4m1I0co+ZKWRgt2dJBSu3p1/bUk
mWhEiDXseZxsbTbKwQaDkV4tZntYXl4Op9g6OzutViv0Gq7XOp0u3IKtr6+P
/ZAMwzDxysLCwtTUlN/vxwk/NzdXLpeXlJQMbLyod3i2zcgI2bUQRbJYi1Ju
D/4R80WVhQYqA3oNiuPtt6V33rnjDKwE4nZxPTlJhxl2XGcnzVmrq6Ny/JWV
dLy98goZR+8k1oaGqBuAUknzm37+c9rAiayA4wMh1rDnw00eeB5iHLO6ugq9
tri4ODExAb3mdDrNZjP0Wnp6usFgwOWb/ZAMwzDxSigUOnbsWGtrq91uNxqN
KpUKT0Y2PtlMmNcQPBqNLNaildttdRzhxSii0TUOM0TtNhuVkcQReCexJgqM
cNmfuGHbOqgzUQ37IRmGYRKN6enp7u5uh8NhtVqLior0er3H4xkfH9/o5wjz
WlMTZdbS0sh2deTIdqxyDCCyQ/gZFdOtxApNTdFeaWykYoMeD4u1GGZlhbyM
0GvYp4OD5IFDsI5deSfjKF7u66O9jZ+8t+MDIcCLi8l8jv0/OkqFnpj4Rvgh
fT6f3W7XaDS4akOsmUwmyDev18tV/RmGYeKMkydPNjc3WyyWkpKSffv2lZWV
tbW1nTp1aqOfI9RARwcVq0tNpdkxvb3bscoxgJCu+BkVZRzECnV2khMuI4MU
dXk5i7UYJuxoxZ5dWKDOGcEgpVVwBN7JOCoS34nTBiHuEQ0JCwvJCevzka/5
0qVIrxazzQg/5OnTp/1+/1pXTF5eHq7gbrc7PIUt0mvKMAzDbA1jY2M4t2s0
GpPJZLPZNm+lEHXn8BPPE5Ooi43FCiG8UyqpybJcTnuIxRrDxCZ+/812DHl5
3I4hERGVnL1eL8SaTCZTKBSQbLia4zo+xnZnhmGYeGFoaKiiokKpVBoMhqqq
Kpz2R0dH5zZhpunspAZQu3bRTzxPKEQ1iNOnSag6nbQFJiYi54dcWaHCFAjg
fvELsklhhYqKpBdeuCXCi7YCI8wOc/HizRaJ3d3UqW1khDI0p06RhL90icZP
gtd4iVaEWMvPJxskfp2aoiwrkyCIHqmBQMDj8UCv6fV6KDW1Wl1eXt7S0gK9
Nj09vbCwAFmHhd/jQ5hhGCY2OXLkiNlsTktL02q1LpdrZGTkzJkzV65ceeAP
7OiQsrKkhx+mn3ieUIhSiwic7HYyG1qtpNci5odEpH3+PN1wb22lwA4rBAmN
2M5kopza4cPRWLqf2WGg1GpqqAWAwUD9lTFwPR5qtwwhD9U2O5vo3ROiFSHW
sN9qa0lknzkjbeLMzcQYEF+QYBBioVAIes3r9TocDpPJlJmZaTAYoNfcbnd3
d/fU1BQEHWTdu3wIMwzDxCY+n0+v1ycnJ6vV6rq6upmZmcuXLy9vQldAFqhU
0kc+Qj/xPKEQpRbxxTUa8oJCHjmdkfNDilblNhvtD6yQUkltmbhyHCPwekmp
JSVRi225nMaJXk8yAHLe56Pxk+B9yaMVIdaMRqrBG0Wma2ZnEX7I/v5+m82m
Uqmg13BB12g0kG9+vx9/wgKrfAgzDMPEFGKScnt7u06nS0lJ0Wq1LS0tUGpX
r15d2US7XBH6/eAH1AYqoTo6iczakSOUU4Mw0mqlffso7O3tlc6e3SlDGdYg
XE7k9dep6uOPf0w1CLAqkI7FxdKBA6TU+C48E0Zk1jQaMsci9C8qolELgV9d
TTmbxkY6qg8fpuTN8eM0ciDzMXhu3Ij0qic0/f2UIZfJaKdhF0VROSNmZxF+
yMnJSa/Xa7fbS0tLCwoKINZKSkpcLhdeDAQCoVCI/ZAMwzAxhCj/e+DAAci0
1NRUg8HQ2dmJ1zfplxAFRnJyqIz/5ctUX3wT4i+WEHPWJiaoQbHFQiJpzx6K
ghEODw/vlKEMQRvWAMEc/qvBIKWnS9nZ1ErB6SRn6htvcLDNfICYs4aI3+0m
G6TVSn5IKIH8fDqMofGhBzCa8Sdo/64uFvvRgDjT4vRy8GA0NQphdhbhh8Q1
PRgMjoyMNDU1Wa1WiLXc3Nw9e/YYjUaPxwO9xn5IhmGYGEI01gyXgpTJZCaT
qR/h/aa5/X4v9Fqi3e+FGEI8KyaKYWsYjRQO75ChDBsduwGBN4I5uZzSnEol
RdrslGLugRi1DgdJM2iA3bupCcdahyTGMQYS22ijAOFhwE88ZxiBuLKrVCqF
QoHrO/Sa1+tlPyTDMEwMcenSpfHxcZ/Pt3///vz8/N27d1ut1qNHj27+k/EZ
VitFeQjrIBcSs0bZlSuUeUA86/FQvzlsDYOB0lzbW157aYl64gaDUk8PlYeD
ZtbpqM4LlFpxMeXU2CnF3AMxaru7peZmOnpxJGP4Qgzk5JCNFtofg6qsjPQa
/hq2RwYCVISEK0buFKKjZUsLJcwfeYT2zGuvRXq1mGhiZmamr68Peq20tFSr
1SqVyr1794arPQ8PD589exaqbXl5mVUbwzBMNHPu3LmBgYG6urqKiorCwkK1
Wl1TUzM6Orr5TxYzYBDWIaZraJAGB6kkYUJx4wZFvqEQyabKStoa+fnkQ7TZ
KLyFnNoWoNTCfrbqaoqxVSoK4/BfsRug1I4fZ6cUcy/EqJ2elk6epDwsDt3e
XhpR9fU0qCDTLBY6sI1GSpxrNDSy8ToW44qRO4Xob499Ag2dkkI3giCvGUYg
nDPt7e2VlZV6vT4/Px96zWg04kLf29uLv87Pz2+mkhjDMAyz3QSDQa/Xa7PZ
ysrKLBaLyWRqaGiYmJjY/CfjMyDQENAhrENwt73yJOoRW0Ovp8AW+gnKaWRk
e/4ZtjK2NbY4/plSSeZLhNNuN7sfmc0ijLU4pDG6MI7lctIJSUlk821s5IqR
O4bob4+9geMbRzlOL1thYGfiEHGhh15TKpUymUy0zIZeW+SLAsMwTBRz4sSJ
+vp6o9FoNpvLy8vtdntXV9eZM2c2/8n4jK6um1UKiospkIBamZzc/AfHJOfP
ky8UWwBbQ6slP2RREfmXoKvm5si3uAUIX9SxY1TCG1u8sJAya0Yj5Th7e2PV
/RiurYnVvnKFNha3hIsgomRNWxtZe3F4l5RQRoczazuOyJ9XVdEeUCqligpp
aCjSq8VEJXNzc6Ojo9Br1dXVBQUFKpVKq9Xioo8rfkdHx/Hjx9kPyTAME7UE
AgGcvTMzM3ECr6ysbGhoGBwcnJ2d3fwn4zMQu0GeIJYwmz/I7SQm4a7UiHPr
66W9eykdkZNDwRViLURciLu2AOGLOnSIomhscQTSLhf9j+FhahgQo+5HBP9X
r1J5Guh/bCwoBWzH7Zrvx9wT0Qzi1CnqlD0yIg0MkPeO56ztONPTtOEdDrr/
U1REeU6oZ+wThrmdpaUl6LVgMNjT0+NyuUwmk06ny8rKUiqVxcXF0Gvsh2QY
hola/H5/WVmZQqHIy8tzOBz9/f2Tk5PzWxEJiz7M0Ggm0zYb/2IHUSRTqaT4
aivdocIXBYVssdAWx6fj/8W6Mw3xA5QavhpGDzYWxhO+FH5lmASGfebMAwBR
hqu82+3W6/VyuTwpKQl6zW63sx+SYRgm2hANWXp6egoLC2UymVar9Xg8UGrn
z5+/du3a5v9FOJcEvVZfTy4duZyCisOHE/3W+y9+QTfA8/LIDJmTQ/axqirq
Wb0FWS+RWRscpCJ+0MaI3rADYt2Z9vbb1AIMYWhvL7VmxjDCtzt5MtKrFb1g
b+Pow1i4coWeRGM/etGJEKv41lskPIRHN+rWNUoJBMh5mplJTufKygSt4MRs
lPn5+YmJCeg1l8tVUFAApabRaCwWi9PpbGtrGx4eDqfYrrPPnGEYJtJAqa2s
rOCE3NHRAZmWnJyck5PT1NSEszSU2spW9K4WEWNLCwmTlBRSKFAPsS4dNknY
HdrYKO3bR9X0n3ySlOwrr2zFfDIxZw3/A1pmZIQEDj401uUxhhG+EVRnWxtZ
vqBva2qkrShYGq+I+yRnztCWi8Z+9OF5iDgXYBUHBkhphLtZROO6RinYbCUl
dBNMp6MDIjF7ozAbBRd9XOWhyAYHB5ubm+12O5SaXq/PyMgwm821tbXQcVBz
W+KuYRiGYTbD6uoqTtqLi4uNjY04SyclJanVau/2dFQVPVu5XJy0xtPndpNR
kftU3x9h76yro2IpCgW5vhCbMndBOJCh1/EkGvvR4/jHWQB7FqsYLoYj3K1R
t65Ris9HPurkZDq7YhPylmM2hKjq73Q6EQMkJyenp6cbjUa32w29NsM+c4Zh
mEiztLR08eLFYDDo8Xiys7NTUlIMBkP39jTp6e0lo05qKrn+amspepydlbbC
aBmTiGoZnZ1UdwXKIzubsmwItwYGpHPnIr1+UYiwdx44QDlajCSMJ4wq5i6I
1g0NDSRqozGMF5m10VHppZdIrJWXS/v302HQ0kLHBoTb0BDVy8CXOX+eMkbs
kHwfURsVuxhiLSWFjglsM85JMhtieXk5nGLr7Oy0Wq3Qa4gEdDpduAVbX18f
+yEZhmEiy8LCwtTUlN/vx2k5NzdXLpeXlJQMQC1sA4ODZF7bvZv6QVdX0w1h
hGCXLm3Hv4oBRKz15ps0m29tfX38evx4pNcvChH2zqYm6e/+Ttq1i2T/q69G
erWil5ERytWqVJSBREgfjWJNzFnDueDll+kwMBhIdajV9BPP8UpFBU3vxBfA
GWRqitVIGHG3p7WVjOWpqbS1oG5ZyzIbYnV1FXptcXFxYmICes3pdJrNZui1
9PR0g8GAwID9kAzDMJElFAodO3astbXVbrcbjUaVSoUnI9tTq1G0bUX8ZbNx
Mb+bhELUDw0RF7YJNg6b++4PNhYUyEc+Qj/xnLkLsWSQEzUNMzNp/hVWOiWF
FMjaeqnRmyCMAMJH3dhIYo17YTObhP2QDMMw0cn09HR3d7fD4bBarUVFRXq9
3uPxjG9Pk56TJ6l6n8VC0+H37SNJ0tZGbZoSnCtXqLgC9Fq4Gj02y8GDvFnu
yauvUk5t1y7KrzU1xWrbuG1DZCDb26noRGwY5ES3+OpqOkFAnWHVsd4aDWWM
iorowKispAoakJ1Q6IcOkXAbHaXTSkK2R19YoDQjtgFOGkYjORasVtqEDPNg
CD+kz+ez2+0ajQbxAMSayWSCfPN6vVzVn2EYJiKcPHmyubnZYrGUlJTs27ev
rKysra3t1PZIBW7eekdu3CC9FgrRpJyxMYq+sPm5mNu9ELMfEcwfOLAVBTTj
itvn9sWAQU50iw8EaNKmz0dSE18AUqSqik4ZFgvtdCg4tZoySSYTyTdot+bm
xGyPjq01OEjq1m6njcG1UZlNIvyQp0+f9vv9a/02eXl5iA3cbnd4Cluk15Rh
GCaxGBsbwxlYo9GYTCabzbathgfh90N0YTRyd2zmQYGgRaCuUNAwqqvjApof
QlTNDLuOY9UgJ76G10u3eNY6JKE/09JoAECiQMQlpKNaVI/BoYBtgM0D4QbN
yjCbRNSI9nq9EGsymUyhUECyIU5AhICYIdIryDAMk1gMDQ1VVFQolUqDwVBV
VYWT8+jo6Nzc3Hb8L+HbqamRcnMp7CopkbanlkncIcqRiEf05ki2n6EhKjqh
VFJNltpa7iz1If5/9t4+pu0zzfsd6axm91H1aMU/T1aPqtEIdVtmV2hPZe1O
2TPD6YyYPoXdOdackZ/R4Kb1EyGvAYPjshwfRByCQ30sDsdDwNRjUS/DAOWl
wLoUh7ekxBAMdSkJToNDGJLgAkM4GZJCJxmmO+d3vtc4c5eWNOXVr9dHyDLG
wM/37365vvd13df10UdxsSsiHIQ+H7nkHxkhWVREEdX4eL29FEycSExNUWQC
GqOkhByPkLNopLm5SF8WE/uI6qsTExNOpxN6TavVQqmpVKqKior29nbotbm5
udXVVcg6vPkPsVu7k2EYJhY4f/58aWlpWlqaRqOx2+1er3d2dvbOnTuH8b/W
16WlJdoQho1x7BgdpdHppMOpEhB3iNRv4it6Tx8dPhMTZLcrlWSn2u2Jnld0
G4/0ufj9kb6s3SKO3i0ukgjZGiHZ2ir9/Of0CaFSKioS8/ir2LHALFpdTXcc
ovZwttmYxALiCxIMQiwYDEKvuVyu2tpag8GgVCp1Oh30msPh6Ovrm5mZgaCD
rPs0YbcNGYZhwoLb7dZqtcnJySqVqqGhYX5+/vbt2xuHc/xH1L9taaG62ElJ
FMR0OPW34w6R+k18JXJCPBHhBylSW0s+pPFxirJl/kj8p10VEdX4bPiECRkC
iHuKzy2T0Y1GM3AsMHPgiHjIoaEhi8WiUCig12AqqNVqyDePx4Mf4Q2bnNyJ
YRjmEBBHibu6uvLy8lJSUjQaTXt7O5Ta3bt3HxyOy0bUv4VAy88nzxrMDAg3
WF537lCeDeaLiOQjH3xA6e8aGqR33pHeey/Rxdrly1SLTq+noLiqqnhUI/si
/gsaigyquO+YTaDURkYo40YCIAKie3rIp8ZZdpjDQ8RD+v1+l8tltVrLy8uL
ioog1srKyux2O16cmJgIBoMcD8kwDHPgiCS9TU1NkGmpqak6na6npwevH15U
g6h/e+4cuUTS00mywdCGzQXL63BCL2McYZTCHDWZyBNZWUl6LcHFmigCceoU
RcFZLGSxBwKRvqxoQSTLzMmhI31+v7SwQNkW4wexiYGBgPs+PU1KLa4+4Zci
AqLb20mmpaTQAb6uLq5fwRw8Ih4S1kIgEPB6va2trWazGWItNze3sLBQr9c7
nU7oNY6HZBiGOXBE+ctQKkiZTGYwGIbClTDO66WUAAoF+UbwhKPYvhQR7gVh
IpfHSHnjw4cT4T0WtA26SVISBRu3tJAZ/8knbMbHCSIgGtMA7jKmBK2WnKcM
EwaEzaBQKDIyMmA5QK+5XC6Oh2QYhjlwlpeXp6am3G73mTNnCgoKsrKyzGbz
SLgqqnIes68AtnUoD965c+R6hBgpKCA3CYzvykpynCR4ghG0zNDQZ+eVxKGd
xEb0mi+UV8PriZw69BGIUEI0ltdL4hZjanSUulAgQMk0o9hNFXK246rtdrrL
aWlSaal0/nykL4tJDObn5wcHB6HXysvLNRqNXC4/fvx4KI/02NjY9evXodo2
NjZYtTEMw+yfmzdvDg8PNzQ0VFZWFhcXq1Squro6X7gqql69SsnbTCaKYisr
I99IWxuFtjEPgc09PU16BDo2P5/qSb3yCilbm41SlH/4YaKn7ueKfY9C9JrX
XyeZlpVFIaIXLpDmQE/h0ySfIUIJ0VjoOSoVhY2azST5IdzQtaL4ANjiImV9
xGVWV9Ndlstp/+bixUhfFpMYiJicrq6uqqoqrVZbUFAAvabX62FCDAwM4Kcr
KyuHlKOMYRgmoQgEAi6Xy2KxmEwmo9FoMBiam5unwxVIxo6Rr0A0kFZLR/uS
ksgmg1XJGd9CwJD2+z8nZqH8PZ5IX1aE4WG1U0QoIRoISh/jKzWVxC2aDG3X
0RHNA43vMhMNCBMCek0ul8tkMlEyG3ptLSrHDsMwTGxx+fLlxsZGvV5fWlpa
UVFhtVp7e3tnw1VVdnmZIiHdbvIU6fW8Ofwn7t2jPAmQzL29VDh8a/Sj2UwB
bfPzv//o9sbKRhRHaYWFUENBr7W1SSdPsmcthEi7Ir7YYf1ohGdtYICmHoyv
Y8ek3NzP5RdtaqK0HZikhoepvhtG5dwcubUiPfY4LIGJBhYXF30+H/RaTU1N
UVGRQqHQaDQwJ2BLdHd3X7p0ieMhGYZh9snExATmWKVSiWm2qqqqubl5dHR0
YWEhPP8dtjb+FWzthgbyHfGxi4dAgIyMUK4MGJA6HWmQ48fpeUsLtc7MDAxF
KLXbH/0+iqO0wgKMbfQhNMG771JuevYu/BGfjyS+SkWaA8Y8HwX9UsSZtevX
SYthfNntNNCgfIqLpcJC6lEaDaVZxPQERYQ+hlGJ1kQTR3rs8YFfJhpYX1+H
XgsEAv39/Xa73WAw5OXlHT16VC6Xnzx5EnqN4yEZhmH2icfjMZlMGRkZ+fn5
tbW1Q0NDfr8fU2t4/ruojt3RQWYRJzR7yPQ02YQGAxncWVlU7xZmt8u1NZ0f
nsJajOIorfAiWoyzQdKgJo2WkfFZNB8nWf0KxEyEEYX2QqthJpLLaeilplJa
fMxN6emSUkl9DLoIgzHSY49T6TJRBUQZ7AeHw6HVatPT05OSkqDXrFYrx0My
DMPsDVE2pb+/v7i4WCaTaTQap9MJpXbr1q174SpUtL06dkKXChICrL2dUkJA
qcHahtEIa8zppBCsLen8bt4kV0BDAwVFjo1R7rrFRWl9PdIfIVIIX2TC1ER+
DMKMLy2lmuFcvvCrETMRBiDaC/MRRlxlJUkznY6caxiMmJuKisjphrFZVUWh
201NNPygja9elVZXw3OlXKSSiU5WVlamp6eh1+x2e1FREZSaWq02Go02m62z
s3NsbCzkYvsEo4xhGIbZAVBqDx48wLTZ3d0NmZacnJyTk9Pa2oq5FErtQbhS
wQvD4+xZUiSpqWQWwQKKdIRRhMDHHhwkw6usjE6oZWWRUoPZDdMRSi0Y3JrO
79IlssPRaGYz1TvGW3w+0msJijjllzA1kR8D5D46EYR+dTV1KHQc2PD370f6
sqIZMROtrVF7BQIUZXjxIqXwgBxrb6dtkbo60mgmE0VIYp7KzqZHPMcrb71F
ei0sbN/gwo1uaeG7zEQYmBOwH6DIRkdH29rarFYrlJpWq83Ozi4tLa2vr4eO
g5oLW9wOwzBMrLO5uYmpdW1traWlBXNpUlKSSqVyYfmPELCJDAaKORKnjhIx
uk8Y2QoFBbE9KvpRIELdlEp6l8VCb4SNyTAcE3qQiIyRGHJoUIw0jFAMvORk
2l1KSwtzDlIRsAmBBr2YlEROv8jN3AzzRURWf5vNBusiOTk5MzNTr9c7HA7o
Nfwo0hfIMAwTG6yvry8tLQUCAafTeezYsZSUFJ1O19fXF6nruXiRYo7kcoo5
qq5OMD+RqGF89iz50WAK5udLr75K1nZjIzXEo4oZhzL+nThBkVm5uWSwod0u
XEjUCFJmCxwTepCIjJEzM1QvG3OTw0HqLBSfjEGKQRjGPIzr69LSEm3LNDTQ
VAG9iBlgYCA8/5xhvpqNjY2Qi62np8dsNkOvwcbIy8sLlWAbHBzkeEiGYZid
sLq6OjMz4/F4MHnm5uamp6eXlZUNDw9H6noSOrOZqGEM8wtGICyw06fpOV65
dIkss0cVMw5VPYC8q6qidOPPPUc69803EzWClNkCx4QeJCJj5OoqNShk0uQk
bYu43TT8Ql8YihiQYQFXAdXo8ZBkhFjMyqIJEyKSYaKEzc1N6LW1tbXp6Wno
NZvNVlpaCr2WmZmp0+lgcnA8JMMwzE4IBoPj4+MdHR1Wq1Wv1ysUCjzxRq5A
FSwgl4sijCBWjMYEi+DaU3Xb7dFQXC6bYcKKGITbopQPj2CQcol0dNCOFqZK
rlbBRC0cD8kwDLMf5ubm+vr6amtrzWZzSUmJVqt1Op1TU1ORup5bt2hzGAKt
qoqiepRKqmg0MRGpywkvwrMGvYomgO01OCh91UIm8gzg96BwMzPJv1ZaSjnq
3G7p2rVHuuMYhjk4xCDcFqX81b+1sUEJQRYXaaQvL5MHdGcjdm6Oog6g1Cor
qRx2Yu1rMTGFiId0u91Wq1WtVsPSgFgzGAyQby6Xi7P6MwzDPIYrV660tbUZ
jcaysrJTp06ZTKbOzs6r4Upoth0R21NXRxmy09MpIWLkojLDizizFgiQ1bUz
35hIX+f30zb76dOf5aizWqkld2tCMgyzO8Qg3NW2iDgENztLJ1KHhiiKcmFh
hyM2dFjVaCSlVlHBmYWY6EXEQ167ds3j8WyN5MnPz4fV4XA4QkfYIn2lDMMw
0cjk5CTmSbVabTAYLBZLxMMSRMa1hgbKlcHVsXcOdB70Giw+mG0KBTWdWk3y
LbzBWQzD7Awx2Xm9D9OVYKbDGN7ZiBUpYw0GGvJ4jrHP1i4TzYjs0y6XC2JN
JpNlZGRAssECge0xyVG8DMMwj+LixYuVlZVyuVyn01VXV2MK9fl8i5FLvyg2
m1tbqcIYFIdGI3V3k13D7qHHE8omAVuvsZFyjKSnU9OdOUMmHF7kM9wME11s
rwVQU0O1EltaqKbbhQukx65coXjHR9VOGx2ljCJZWVJBAf0edF4Ys5swzF4Q
dV0nJiacTif0mlarhVJTqVQVFRXt7e3Qa3Nzc6urq5B1ePMfOHyfYRhGks6f
P19aWpqWlqbRaOx2u9frnZ2dvQPDIEKIYxwQaNAaEGuQbBBuMGog4sJVozsm
QeNAr0GUDQ7SMRalkjL5l5RwfBTDRCVCrIXSChkMpLsw32Vn025LRQW92NZG
J9PGxylU8vPT8sAAnepNTaXfgMLz+ymCknN+MtEMxBckGIRYMBiEXnO5XLW1
tQaDQalU6nQ66DWHw9HX1zczMwNBB1n3Ke/PMgzDSJLb7dZqtcnJySqVqqGh
YX5+/vbt2xtRkPDd7aYASIg1lYpCImHRwK6JguuKAUQpZDQgWk+hoMNrkUvw
yTDMoxBiDZNdqK5iVhapr6QkesRzvGI0Ug6Rjg7Sa8Hg1t92uWh0473Qdi0t
HO3MxBIiHnJoaMhisSgUCug1GCFqtRryzePx4Ed4wyZ3aIZhEhhx4Lerqysv
Ly8lJUWj0bS3t0Op3b1790EUeLCGhym1SHo6pRmpq6NAoZkZSj/CfCWiFLLF
QlW15XKy+N56i5xri4tUS5dhmMgjYr6npqTeXvKjVVSQTw3qKyeHvGwGA02C
ZjNJOfwUkszl+tQ98GBodMMz6a6a+T/++81/+OZK8b/cc3f/jvMIMTGEiIf0
+/0ul8tqtZaXlxcVFUGslZWV2e12vDgxMREMBjkekmGYhEWk0m1qaoJMS01N
1el0PT09eD1KYg8mJugghlJJoT5VVSQ9RkdJhjBfiSiFDOMO5l5WFkk2mHsu
F+Wci9x5RIZhtiBivpeXKcoxVGK7p4fGbX09TX8WC6V6LCmhotcYw2q1pFL9
Tlt0z2C+bXIM/kvn//1Pwy/9z/4zRQvevntcoYOJIUQ8JOyQQCDg9XpbW1vN
ZjPEWm5ubmFhoV6vdzqd0GscD8kwTMIiilSGUkHKZDKDwTA0NBTp6/oMEctn
NFL5MD54tQc8Hmq6jAzSvDD3uA0ZJqoRxbX9foqNdDhoAGu1FMqcni6lpEhJ
SZ8kp67IsuYz1MPfN/3iew2m/3Wos8x/dZjzBzGxjbBGFApFRkYGbBLoNZfL
xfGQDMMkLMvLy1NTU263+8yZMwUFBVlZWWazeWRkJNLX9Rmi5GtFBRUOU6vJ
com9zL5YYjY2yPr6+GPpt78Nc4HqUCWmEydobx5tCL3W2Chdvhyefx5phNuC
g8OYWEEU115YoNjIoSGps1NyOskvbjSScy07+86Pcmb/W4E33dD/vLnje3Vv
fL/5fPnojQsLkb50htkX8/Pzg4OD0Gvl5eUajUYulx8/fjyUoXpsbOz69etQ
bRsbG6zaGIZJHG7evDk8PNzQ0FBZWVlcXKxSqerq6nw+X6Sv6zMWFylmz+Wi
GEiNhtxDJhNFCcUYEAuhOtdLS5TMLbwHS5aXyeI7e1ay20mvKZUUWjUxEZ5/
HmnEgSDOIsrECqK49r17NHoxb1y9SmPY65XOnaPZsKVlqbzed7TGlWbp+W7l
O9+rcv/AOnW6d9kzG+lLZ5h9IaJ9urq6qqqqtFptQUEB9Jper4dxMjAwgJ+u
rKxEQ/YzhmGY8BAIBFwul8ViMZlMRqPRYDA0NzdPT09H+ro+Y22NTJXJSclm
owP3sVodW3yMQED66KMwp2wTQVXQaydOPBS8Hk94/nmkEan2OIsoEwf8aTDP
u/xDerdD5njrH63nv2e69KLh5mvNd0eiaOpmmP0gjBPoNblcLpPJRMls6DVo
ukhfIMMwTJi4fPlyY2OjXq8vLS2tqKiwWq29vb2zs1G0PStcUq2tlCAtLU0q
LJSammIkpSHMqtDVj4/TfrjDQTGdMzNh9qyJoKqpKYqHhFJ76y3aqk8III3R
+B0dlFf0ww/pdty7F5cutvv3yWcbDH72ta1+MhPzPNj49N7t363Mf+JpWnBo
pvSpQ69nvTOk6YRSu9018skMp15i4oTFxUWfzwe9VlNTU1RUpFAoNBoNDBVY
Kd3d3ZcuXeJ4SIZhEoSJiQnMhEqlEpNhVVVVc3Pz6OjowkIUHXwQh70GB+nY
mlxOkq26OkZSGkIaTE/TkZOGBtJIajVFIr73XpjPrImgquVlOr/m8ZBSS5Ty
ByJDTV0d5UX3+ylFZjzWDIY0m50lYSq+ttVPZmKeu2t/WJj/D//kZnPdPcPL
y5kp8+XK6/0/m7k7Mg2l9vv/Nw47NpOYrK+vQ68FAoH+/n673W4wGPLy8o4e
PSqXy0+ePAm9xvGQDMMkCB6Px2QyZWRk5Ofn19bWDg0N+f1+TICRvq5HMDlJ
jinIHb2eDtnHRkrD+XlSarhuiAWFQpLJ6Ek0JduMf0QqzPx8ylODxodei8oe
vk+CwYcuRPG1rX4yE/Og56L/ohdjAsSMEqth4QyzYyDKYJk4HA6tVpuenp6U
lAS9ZrVaOR6SYZj4RhQ36e/vLy4ulslkGo3G6XRCqd26deteVPodZmfJMWK1
UnlYnU5Sqcj0hjkajXWFxAk16EmbjQRacTEVigvlYbx0KdLXl0h4vdRpYNei
8fEkfjVMIEDdDTY8xkVDQxx/0IRGZMc1GmnnSi6XKiulixd3/4dE1OzVq5Rs
CPIPf2VqirrRrVvkd+cEqkx0sLKyMj09Db1mt9uLioqg1NRqtdFotNlsnZ2d
Y2NjIRfbJ598EukrZRiGOUig1B48eIDJrbu7GzItOTk5JyentbUVMx6U2oOo
PNETSmnodlNayGPHpOeeIw109myYj3/tDCi1wcGH1ZHy80kpQKmdOfMwdnNp
KdLXl0gIjyy6C5QMnsMuxQ2KO8QHhRkPY57FWlyCOdDppElFr39YfbKtjc5i
7hoRNdvZSclh8beg+vCnMUeNjtK5Wk6gykQHMFRgmUCRjY6OtrW1Wa1WKDWt
VpudnV1aWlpfXw8dBzUXnRFBDMMwe2ZzcxMT4NraWktLC2a8pKQklUrlwjId
xYisfrBIoX6Skig5ZEtLmBMr7gxhN+NCMzIo+hGmFZo3Gq813kmYquoi3hP9
Dp+SxVpccmB3WUTN4s9hJsUcJZdTSCX+KMYL/g0nUGWiDJHV32azwW5JTk7O
zMzU6/UOhwN6bT4et+AYhklk1tfXl5aWAoGA0+k8duxYSkqKTqfr6+uL9HU9
DlEvq7OTwiBhXOTkUNIIrzfSiRRE/o7VVYpSglJrb6dkKCoVWVSwf6DUnE6K
NYpGL2C8I6IDcUdOnXroirhyJdKXdWCIot9nz5IkTUujcoQ//zknGIkrRNBi
dzeVSoRYwxxYX7+Puyw8a2++KZnNNFPhL+JPQ7tVVlIYgMNBI6W/n2bYqSmK
loQxvLxMyXmiMfSciX82NjZCLraenh6z2Qy9BuslLy8vVIJtcHCQ4yEZhokn
VldXZ2ZmPB4Pprjc3Nz09PSysrLh4eFIX9fjEEbphQtkTSgUUkEBWRkNDZSU
/caNSF8ZFoiZGTpPAiMHugCWj1JJ1nNtLYkFKDVYWmzkhB+R46Wqio47ho4N
Xr4c6cs6MMQmRkcHRcelpkp5eVTnglP3xxNCWkGgYWqBWIOugnDb+10W8u/9
96WeHhog1dU0nxqN9A+OHaMZFrK/tJROejqdtEeGcQTVtrDAm05MRNjc3IRe
W1tbm56ehl6z2WylpaXQa5mZmTqdDsYMx0MyDBNPBIPB8fHxjo4Oq9Wq1+sV
CgWeeL3eSF/XjhBxbeIL30ayjreoOe3xkDRTq8mnBqUGa8diIQuHox8jiAj3
EkkZYJdOTkb6sg4MER7c0ED9jtMDxiWiF2NGQRc+yLr2W7MhYYyIvLVJSVJK
ipSeTt+iS+H/YeCgY/n9PKExkYXjIRmGSQTm5ub6+vpqa2vNZnNJSYlWq3U6
nVNTU5G+rh1x4wa50mCawm7R60kVWa1kt4Q7e5mIfoQhNTFBpo7dTr4b2FJF
RVJ5OV0WXoRtwxvREUTkOhcFFHBfYmRfYieIz3fmDHlCYFyjD0a3k5zZNR9+
SDGJRiN1YUx6+fnk7DqYCRvzJvoQ7FufjwIDmptpgODfhKK4Q6lMSkoohBgT
bk0N+fZaWigz7+go7ZHFadVCJpoR8ZBut9tqtarVatgwEGsGgwHyzeVycVZ/
hmHigCtXrrS1tRmNxrKyslOnTplMps7OzqtXr0b6unZEKCII5jasb62WrFNY
FlBF4c5eJqIfodRgOcGkKSyUcnPJwjGbKRANlxgIkCHE0Y8RRDgOIO9xj0I+
iQsXIn1ZB4YI8xSxtzCo0SWZeOLiRYr9lss/y/YJXTU3dxB/GrMT9BqGyeIi
/UXoL0xc6FKYUiHK0LGg3TChlZXRPFtQQEeFs7NpP6qqipTdyAjpNYYJIyIe
8tq1ax6PZ2uMUH5+PuwZh8MROsIW6StlGIbZO5OTk5jN1Gq1wWCwWCyxFTwg
og47Osh0SU6mPWBY4uHOXiauA1YNVIBMRkJAoYi/QLvYRoQJwvLMz4+/uuRR
FxXMHAJuN21MYa4TsdXhKO2+PYQ4K4tORSYl0TjCpXBvYyKKyGvtcrkg1mQy
WUZGBiQbbBtYNZO8CjMME8tcvHixsrJSLpfrdLrq6mpMdD6fb3FxMdLXtSOE
R6u/n46/p6eTEWG1kj0zNUXpysKEiD+z22mfWS6nKLTyclJqg4OxW8kLbXvv
Hn04yFAInZj3CooEHK2t5BSIuzNdExPkSlMqya1WURHHdeQSEcxyoRDFlhbq
tlBImGOcTpp4whF+KNKa9PVRFCb6ltlMc51KRY94zr2NiSiiYuzExITT6YRe
02q1UGoqlaqioqK9vR16bW5ubnV1FbIOb/5DDK9kDMMkHOfPny8tLU1LS9No
NHa73ev1zs7O3omRNN/irNjYGCUwg5man0/7vtBrvb1kXIQJkRO+rEwqLiZb
qqpK6uoinxqsl5iNlocFCDsQ1mDIUxnz5+1EFtH2dumll8gpAFMzuksK7orh
YeqA6elkxp85Ey6fCxMWcB+np+me2mw0y2Vk0PZUTw+9jnF66CHfImPk3BxV
u8DMNjoqDQzQ8MFU29/PvY2JLBBfkGAQYsFgEHrN5XLV1tYaDAalUqnT6aDX
HA5HX1/fzMwMBB1k3acxvJIxDJNwuN1urVabnJysUqkaGhrm5+dv3769EWv1
T0UAmF5PUinc4YdeL+nDUNwjLiJeqi0Lh6EQnXGS+K2jg27W175Gj3geL4gA
ucgEAzOHiTiQaDLRXY6i7Dgiuph7GxMFiHjIoaEhi8WiUCig12DeqNVqyDeP
x4Mf4Q2b8bCSMQwT54hjuV1dXXl5eSkpKRqNpr29HUrt7t27D8KXm+NgEGkh
T59+eJwCJs25c+FKCzk7K73zDhlPsKUgGqHUfD4pRkJJH4M4p9LdTXv4Z8+G
N7j08Hj7bQqDPHJEevllCokUUZ6xiYhWbW8nn1pKCj3iebjT7DCHgAgeeP99
Sr4ImVZURD41zG+dnVJUJIIS0cW76m3Czf3xx9R9Y3wMMtGDiIf0+/0ul8tq
tZaXlxcVFUGslZWV2e12vDgxMREMBjkekmGYKEckvG1qaoJMS01N1el0PT09
eD0WIwREWsjaWnIrpKZSpBBURpjsVfHvJyfJFxUIkFJbXz/k/3roiM38n/2M
TqWcOEGnVa5cifRl7Z+BATJ50Uugapqa6HNC6sSsU0BEq8KYhwbFx9LpSFyH
u4AFcwhsP5aLW1xZGU0bQkJ27aq3CYm3tETFtWN8DDLRg4iHhIUTCAS8Xm9r
a6vZbIZYy83NLSws1Ov1TqcTeo3jIRmGiXJEKclQKkiZTGYwGIZiNjOeSMfY
0kLJpJOSKEwIKoNjc/aDOIoXqmF3kOV3Iws+Az4JPg8+WENDrB8tFNGqVivt
VMRdksuEJm5nNhE8iVkG3TfGxyATzQg7R6FQZGRkwNqBXnO5XBwPyTBMlLO8
vDw1NeV2u8+cOVNQUJCVlWU2m0dGRiJ9XXskBvafYxC0G1oPbQgVkJ9PwaVQ
ATAaY77+rThjiM8TymIXy7kRbt58GANsNlN9vyg6zcTsmwjHDBweH39MPjUo
tdFRCrPGMGxqoqRMbjf15okJmmWEu409xMw+mJ+fHxwchF4rLy/XaDRyufz4
8eOh3NdjY2PXr1+HatvY2GDVxjBMtHHz5s3h4eGGhobKysri4mKVSlVXV+eD
aR6bxMDJjhhkfZ30Guypt96iHJtyORmKFkvs17+dnCTjUBQVhu07Pk4n9GIT
dG90cnT1sjLq86GCV1CfTBwQ4dO4h8e9exT9iG4KpVZZSZ9No5Hy8mjuRj+u
qaFOHNpFiXldykQYEUfU1dVVVVWl1WoLCgqg1/R6PcyegYEB/HRlZSXm8qox
DBP3BAIBl8tlsVhMJpPRaDQYDM3NzdOxX9I0enOmxTLCE6VSUavGfP1bkTwU
vSSUFiaWS0QJ6RlKRBrjn4b5HBHOc3t4rK1RHxV9VyYjr2FKCiUzTU+nqGvh
9Y75iE8mWhBmD/SaXC6XyWSiZDb02hpH4TIME2Vcvny5sbFRr9eXlpZWVFRY
rdbe3t7Z8FUmOywiXI0oThGH10pKpNxcsqQqK6ncd6y2qnBXvPkmbeyHu4b6
ASM8a7W1ZNjH+KdhiGipIHl4QHyFinyHNtcgzXQ6cq6pVPSI53ilooLqBWKc
trfTJI53XrxInRvz0a1b0upq7PsXmbCyuLjo8/mg12pqaoqKihQKhUajgQkE
+6e7u/vSpUscD8kwTFQxMTGB+UqpVGLKqqqqam5uHh0dXVhYiPR17ZdPPnlo
ArS00Ea0TEYrv9NJ0TSxfcwqoogUFjCd0J7p6WRMNTbGbKuKg0A+H9l++Bjo
+bH3MR4izqxBUHs8sf5pGGL7IVy1mpRa/Chx2MOQWsK/hskFcgyiDP0Yswxk
2iPlW2Ulzebo6KOj0swMR0gyu2J9fR16LRAI9Pf32+12g8GQl5d39OhRuVx+
8uRJ6DWOh2QYJqrweDwmkykjIyM/P7+2tnZoaMjv96/EbI6F7YgCwQoFuYRi
PIdEhBEp6To6yGiM+VYVn0d8xXK177itXZ7AbB9x8V/oXOSHFL42pZJkKj58
SgoFScpkdG4W03ro3KzHE9fNwRwiEGWweRwOh1arTU9PT0pKgl6zWq0cD8kw
TDQgSpD09/cXFxfLZDKNRuN0OqHUbt26dS+OtuMvXqRdWKztIo1EX580N7fj
3xeVhmMyzu+AEfv8sI+sVkohrtFIxcWU9ADGJJQCbEu8J2aKi4rPI75iOZhK
1FkLma4x/mkYQvh+oVqgTiBZoF1crrh2JYnKa6GtB8ixmhpKNoLPn5dHMw6m
cp2OQrFNJqmujoo+xupuERNhVlZWpqenodfsdntRURGUmlqtNhqNNputs7Nz
bGws5GL7BJMpwzBM2IFSe/DgAaag7u5uyLTk5OScnJzW1lbMS1BqD+LICPjw
Q1rMIdNCZ/Pz8yl8Zmpqx78vLOCYjPM7YMQJmmvXyGVps1Fo1rFjUmYm2U2w
mGJMIIjPI75iSWp+EbGvsLZGToYY/zQMIU5ViiqHVittlcTzIS1RXDsUyD49
TQn80QqYcbq6KLE/hGt1NRWowLSORzznZDrMnoAJBJsHimx0dLStrc1qtUKp
abXa7Ozs0tLS+vp66DiouXiKNWIYJobY3NzENLW2ttbS0oJ5KSkpSaVSuVyu
SF/XwRMMUjr2jg6ydtTq3Rd0FrFlvHO7BXHEBKajXE4lerOz6Xggh94xzAEi
kkCKr9jOv7pPxLyDpaq2ltuFOShEVn+bzQaLKDk5OTMzU6/XOxwO6LV53gdg
GCYSrK+vLy0tBQIBp9N57NixlJQUnU7X19cX6es6eEJxRNBr9fUUOwOxVlJC
mf8g4vCj+/e/5NeEVXDuHCk93rn9PGLb+803qVWfe478a1VV0tmz8ZL3gGEi
h3AuXbhAUdwKhVRQQE6khgZyMd24EenrixRi3vH5KJwdAk18xXbFRybCbGxs
hFxsPT09ZrMZeg12UV5eXqgE2+DgIMdDMgwTflZXV2dmZjweDyai3Nzc9PT0
srKyYdgBcQfkGEQZpBkEGmQaxBrEBYQb5BtEHH70aGAPDA6SRrNayRXHO7ef
R6RwgzFZXU1JD3Jzqf74iRMUdHrlSqSvj2FiGXFsq7OT5iuZTMrJoeNZXu9j
Z624R8w7i4t08BgTsvjiMHVmH2xubkKvra2tTU9PQ6/ZbLbS0lLotczMTJ1O
BzOJ4yEZhgk/wWBwfHy8o6PDarXq9XqFQoEn3rguGu3xkOqCWFOrKSSyo4P0
GkTcoxFFWqFDlEouqv1liMproQM1u44yZRhmGyIhIiYhzD0cZsww4YHjIRmG
iR7m5ub6+vpqa2vNZnNJSYlWq3U6nVO7yLsRe+DDOZ2UYASywmCgs+ltbZR+
hBCJJpaXyS0EsdHUJL32Gom1oiKpvJyU2jvvxEUN2gNmcZEikqDXamqoqUKZ
/M+d+yzHBcMwuwXzEOYrt5tCi48dozBjTFlnz8ZaAp+oRZThDATIKzc5SdP+
3NxXBccz8Y+Ih3S73VarVa1WwzqCWDMYDJBvLpeLs/ozDBM2rly50tbWZjQa
y8rKTp06ZTKZOjs7r169GunrOkSwFPf10al0yDSIMLmcDoNcvPjHn4kU7rCQ
IOFMJoqY1OnofWaz1Nqa8OFHX8r6Ouk1mDw9PWRYhir2wqqEHQRriAsfMcwe
wGTT20tDqayM5iGViiau8XHO8HlAYG6CRhsaom2m5mbyX2Lax/LwFcHxTPwj
4iGvXbvm8Xi2Rh/l5+fDUnI4HKEjbJG+UoZh4p/JyUnMOWq12mAwWCyWRHDx
i7SOFgs5gJKTqW6P2/3Hn4nSs5AZJ05QMB+0nFJJ2gPr+ORkhC89FhBp62BV
wgISdZkZhtktIgpbr6fNJUxZGFOBQKQvK24QFbfRspizRA3OrwiOZxIIkTHb
5XJBrMlksoyMDEg2WE2wlybZKmAY5vC5ePFiZWWlXC7X6XTV1dWYjnw+3+Li
YqSv6xARBdOcTiqsKpNJ2vw/vNn0HzdnN1cng799d4Lsoepq6fhxUmp4R3k5
reaDg5wEciegbUdGSK/19VFgJHvWGGa3iEp5Z8+Sex/zkE5HcxJmJoypuJ6e
w4sIM21spIAA6LWyMgqisFppzm9poRYfGJBGR0k2QyR/9BEHdicaohbtxMSE
0+mEXtNqtVBqKpWqoqKivb0dem1ubm51dRWyDm/+Azu8GYY5aM6fP19aWpqW
lqbRaOx2u9frnZ2dvRPX4R/CEOrpoVLOGRlSQe6nr//sd8PuTz78t4lVi5N2
sfPy6IiIUklKrbWV/UM7J6SFp6cp3BRWJZs2DLNbxIZSQwOdrk1LkwoL6fgs
5ALG1Pp6pK8vbkBDLyxQQ0ORQa9ZLNKpUxT6jiUA7R7KK1VURPIN2g3CbXyc
t58SDYgvSDAIsWAwCL3mcrlqa2sNBoNSqdTpdNBrDoejr69vZmYGgg6y7lM+
SsowzEHjdru1Wm1ycrJKpWpoaJifn799+/ZGYqxEXi9toCoUUqFm03zik4af
rQ0fd938kZ6cbZBw+AFHPzIME3YeF6rNHCAi7h3NjfbFbG8yUVuj0dPTpZQU
yr+ZmiplZX2WO5g37hIVEQ85NDRksVgUCgX0GgwntVoN+ebxePAjvGGTtyYZ
hjkgxOHZrq6uvLy8lJQUjUbT3t4OpXb37t0HDx5E+gLDwczlza5fflLxr2u2
gmvN/+LpVXVMKq2LP9F/+iPFH3Lz/79yE0c/MgwTfkReEYOBfDuZmeTbGRmJ
9GXFHyKj1MICxUNCHnd2Unw8mt5oJOdadjaFWOTmkq+trIxCJbEoNDVJXV0k
7nBLLl9+6GvjKsnxjoiH9Pv9LpfLarWWl5cXFRVBrJWVldntdrw4MTERDAY5
HpJhmANBpKVtamqCTEtNTdXpdD09PXg9cfz4y3MbH/Td7q2ZH3rVPfK//z++
Z9Wz/027otT/7rjh9z+z/aGbs2MwDBMBfD6qfA2ZplY/LDLS2EiygDlgRK2W
e/fo/Bpm+6tXSbV5vVR3xOWiY2t2O+ULhnYrLqZoVNwSjYbi5LVaktC4MZB4
09MSV0mOd0Q8JGynQCDg9XpbW1vNZjPEWm5ubmFhoV6vdzqd0GscD8kwzIEg
Cj6GUkHKZDKDwTCERSeR+O3S2m/en//o7cmgwXbru9k3/6fk5Wczf6PSf/Iz
x+/cQ5/OskONYZgIgJnYYKBwbIWCnjgc9Ap7+MOKiJCcnKToR4uF1JlcTncl
NZUiJJOTyeUJIc23J1ERFpRCocjIyIAdBb3mcrk4HpJhmANheXl5amrK7Xaf
OXOmoKAgKyvLbDaPJFicze+uzm281Xen3Lb0P0rnv3fs6jczff+Lbvi/1/Ue
H3r/3/wfTd7mYkYJRygsamPjYanc6WlK9HDvXqQv6xGIPDk3b5I3gJ3AcQBu
H24ibmVDg/Tqq3RwNj9fstnYdRMJRIQkbsn4OHnZnE5ysUE863TkXFOpKEFV
XR3n6ExY5ufnBwcHodfKy8s1Go1cLj9+/Hgoq/bY2Nj169eh2jY2Nli1MQyz
N27evDk8PNzQ0FBZWVlcXKxSqerq6nxYcRKJ/xib2Kyquf+j7F//07HZH+S9
n67v/kFd9T8NFP1o/t8sK++9+wkWaizXHMuQQOB+370r3b79ML9DczMdS4Fe
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
YCpoa6O5CrMB5gG5nDwV589z9CMTxQh3m89HuUohyrCAQbKhB2M9y8+n3nzm
DGWM9PspGDLKLYe4YGVlZXp6GnrNbrcXFRVBqanVaqPRaLPZOjs7x8bGQi62
T8IeUMQwzIEDpfbgwQMM5+7ubsi05OTknJyc1tZWjHEotQdRriK2H146doye
2GxSd7f03nvkU4NSu38/0hcqLS09TOZvsdD69txztL41NNDKxnVv94xIfi6+
IhHryjBfjTgP1NtLO0mYq0JVH2HzwsKdmeHoRyaKEfuii4tUVWJ6mg6pDQ3R
ktbSQjEN6Mdvvkkxk4EArXYffxzpK45/YLbBToMiGx0dbWtrs1qtUGparTY7
O7u0tLS+vh46DmouZuKjGIb5cjY3NzHk19bWWlpaMMaTkpJUKpULM3BMsD33
Ix7xPPoiMURBZ6xs2dl0pbDWTp+m5Q56jWdTholvRKY9GLYKRTTPVQyzG4JB
imDp6KDFLNSbOT9keBFZ/W02G6y45OTkzMxMvV7vcDig1+b5YADDxD7379+/
e/fu8vLy22+/XVpa+oMf/KCiosLj8UT6unaG8Kz19tIRfZWKHvE8+s44i4LO
589T1BPstGPHKGbTYqFV7oMPOIcWw8QhojjgjRuU6bylhRIgYaJKT6cUpm1t
UThXMcxuuHOHzhpAr/n9D5XariqvifhgDgLeKxsbGyEXW09Pj9lshl47duxY
Xl5eqATb4OAgx0MyTKyD8bu6unrz5s133333jTfegF5rbW29cuVKpK9rZ4jY
DCwWFy9SSAYe8Tz6lI+w2WZmKOrJaqVoTY2G9thhvOHC2WZjmPhD7NLAmHU4
KPhZq334aLdT8rzom6sYZjfcv096LRh8WNxxt7JLxAdzce29srm5Cb22trY2
PT0NvWaz2WDIQa9lZmbqdDroNY6HZJhY5+OPP15aWgoEAj6f79y5c//+7/+O
J4ucU/7Q2F7QGY94ztFQDBN/iPhnl4tyMMhktD8TqijCmUsZ5rP4YA6e3Dcc
D8kw8cr9+/d/85vfQK/96le/unLlCpTa3NwcXon0dcUt23OiiDwDeOX99zk/
JMPEPCK268YN8qlBqWGAa7VSVhbVp6qr48ylDPNHlpelqSkq5Xb2LH3hyfAw
1XfD8Jibo3wm7HveMSIe0u12W61WtVqt1Woh1gwGA+Sby+XirP4ME6P8/ve/
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
HqaweIeD8kHpdLSg5uRQ2Arm07IycrGFTrS1tHwuQjJOXekicq+np8dsNkOv
wa7Ly8sLlWAbHBxMzHhIcern7NmzaAootZSUFCjZJ598MicnB4buI0unibQk
b7zxxg9/+EPYxn/2Z3/2F3/xF0888cTRo0e7sagwzOFz48aN4eHhhoaGjo4O
6DWPx1NeXv7888+jQ37rW9/68Y9/bDQaOePNYYBpMmTPj43RIrPVhsRSU11N
S4rPR3qN+TJEG6KtTCZyruXm0spcW0thL1iH9444UdbaSot+cjKldHS7d/jb
IlDzMQlQxWGLV16hXP0Qa6mp5Oh5fOJJcV1cOXaHiMycTU0Uabx1VwS229mz
pItZ+TJMTCImxJs3KXs/9NeFC1JPD4my+nqppobm01OnKN8rxnx+Pg3+rRGS
cXpIVUTuTU9PQ6/ZbLbS0lLotczMTJ1OB72WmPGQ4tQPzF2VSnXkyBEoNUi2
tLS0kpISaFi0G97zh8/LdpHwv6qq6oUXXoBtDKUmwiDRvJH6OExCIbLiQK95
vd6tcbnPPPNMKJcp3jDNQUKHxvborFAs3C6zxSc0oqix+NpNOpDHInI1bk/R
uD9EGjPI82eeIbEmUoPyebQDRJw+hDpDU3O8McPEMyLZq99P22uYT00m2mpT
KCjuOSXlcxGS8Z7+leMhtyJO/QgrV5RXs1qt3i85ky5KaRuNxvT0dPzWE088
ERJ6Wq3WveMtXIbZA8Kx+/7773d2dqKjulwudEj05JaWFnTdr3/9608//fQL
L7wQyjEyeTCGL/MItuc90GjIQ7S1OBcn1Hw8c3O0RYqFt6yMmg7LMtZnSKsD
KJH6zjt0P558kvxruBkHV9jM56Mz8ZCAzz8vffObJNa+8x3aAEY3mJriYhf7
ZX2dvNKBAEUU19eTOtPraXBxJh+GiWdE5tyFBZpJh4YocsXppMUVs0B+Pk0B
x47ROoEZAVPD2FgcizURDwlNATMP5hz0BcSawWCAfIPVl1BZ/WH0LiwsbPWR
PfXUUy+++CLaxOl0TqG3/Mn7hna7c+fO4uIiGufChQuNjY2nT59WKpUymQxK
7a//+q+ff/55iN+ampqJiYlIfywmnhGO3dHR0Xfeeae5udnj8dy4cWNzc/Ot
t95Cn0SHRDf+7ne/+/g9B2b/bM8oDo1WWEj7/1AJ5eW0NQiDM8H2wHaHyL5o
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
b3Jwjo5044ePgwPCjR8WA7YCbgKmw3AmoVYP00P7k5VFZ+jlRfanpoY+EkmR
YXzq66lfCa94P8wnLzJYonmsq6P4QzSYuIZ9jlnDr3PixCDkY7xwgfwajnn0
KM1oMEJnamAYhmHuiIi2P36c/FpKClkzNITBwTQ03c+PWsRVqyhjstZWHC4M
qhWOrLS0NDU1NSwsDE7N3d192bJlcrk8Li4OPg5uTh0tBmV7/vz5s2fPtrS0
NDY2qjTgTgrGoECNRbVE7c3Nzd29e/fOnTvff/99S0vLiRMnOjg44E99nyDD
9IPe03La2VHCQBOTWwv+xEp8hA3UyTEMbRJqEQ8p5hQV5YI/QjtWWEiveG+A
J88wDMMwA0TEQ6pU9AQ2NpZCZGDQbG0pDbG5uY6tuMjqHxUVBadmYmJiZWXl
5eUVGxsLxdv8r6zB3d3dcGp4Dxm8f//+Qg14+A+jR3p6elA5RR1Ghdy+fXtE
RIRCoYBHW7t2rY+Pj42NzVNPPXX//fcvWrQoPDy8traWnzAwI4Xe03JGRNBD
ONzpZTLqXHN0pI42b2/qdFMqqQMOTUFSEnXJoVnYu5c66XTLPjWEHD9OUR4J
CRT7l59Ppiwri+IMg4Mpd31AAJ08XvEea7Aen2KbhgYqO/c3MQzDMCMVEQ/Z
0kIRG4WF1BCindNMCa2lFccu330n/cuIqbvYsrKylEol/JqTk5Orqyv82qZN
m1JTU0tKSnbv3p2UlAQ3FxoaGhQUpNAAwhjyGCJZDHbjZJLMsCFqr3oApq+v
r7OzM9yZhYXFSy+9NHv27BdeeGH69Om//e1v7733XrxfvXp1cnIyqvTJIZ6G
nmEGhd7Tch44QMYHt/CMDBq2BgcUHU0D2QIDKbACN34XF/JxuPfD0MnlNPxN
t+xTQ4h6UB781+7dFAmJNsrHR1q+nB4rzp0rvfwyPVbEK95jDdbjU2yTmUlP
InkkF8MwDDNSEfGQnZ0U8t7cTEHwsGBoEQsKyLhpb8W3blWP9BZ9E7W1tfBr
cGRyuRx+zcrKyt7eHpZt48aNeMV7rJk3b97cuXMtNIAwhjyGSBY9cZxMkhk2
RJ8aqp+Li4u5ubmJiYmxsfE9fWFqamptbc2TYjOjA5HJsLiYetyCg+m+bm1N
URVmZpRG0sSEUkpiTT+zTw0+IgyksJDO09aWTmzKFOmee/pYsB6fYhtsie05
RyLDMAwzCtGlFceanBzNnXrHQ86YMWP27Nmvvfba008/PXny5D4FMIQxtuTJ
tRm9IPrU1qxZs2DBAlTFSZMmGRkZ9VlXH3744eeeew5+LSAgICsrq7W1taOj
49Lwx4QxzGAgMhnW19NELpmZFFgREnIzVb6b223550X2qdjYm/N54favHikm
FvWQsdraW0td3c2kHydPUtdeW9utpbOzH7O8iZ61mBh6Xggv9oc/SL/+dd9m
DevxKbbBltgee/WrN1D9FPPKlVsLzhP/5T/+SKYPbWNX163lwgW6hmivxPLD
D/Rd339PC95gwQbYDPviICIm86efBvajMQzDMMy/0NKKe3tTF5tGz5pARJTt
2LHjgw8+WLhw4V/+8pdZs2bBqT3yyCO/+tWv+hTAEMaQxxDJkMoQzJoj3Rhm
qBF9aqh+ZmZmxsbGqJDjx4/vs64+8MAD8GumpqbLly+PiIgoLy9vbGzsGP6Y
MIYZDEQmw/Z2MlMNDXRH37ePLNiePXTXT0uj8IqoqNuyT6lNnKMjNQJoEAID
by1qK5ecfGtJT6eZoHFANCMVFRSUKBZ8o+7jPsWYNbQ/8+dT3xkc2X/8R99m
DevxKbbBltgee2FfHEH3ywJXhcsiFrUjgwuD/0Kr+N13txY40JYWOrhYvvmG
MjQePUoOEW+amqikp0/TRcZB1H18V6/yGDqGYRjm7tDSiufn09AFjTFrAhEP
CRH7ySef+Pj4/O1vf/vzn/88efJkOLUJEyb0KYAhjCGPIZIhlSGYRf+avorO
jCkKCwt9fX21Rz/2ZubMmWvWrElLS0NVbx3+mDCGGWK0ZJ+ysKDYCmNjCq8w
N6cxYmLBp/BxcHBi0XRwcH9oQMSCI+ueWUpkg7S2lkxN+/ZovRdsie01c0jq
wpUr1PSpO8XUCwzamTOULR+NYXMzWTCx1NfTkauqbi3wpOXl1FqWldGbAwco
gT+a0BMn6CC4pD/+eLN/jWEYhmH0xYkTJ4qKihISElxdXZ977jkdBbCIh4R4
hoTWdyGY0YyY+G/nzp0ymUx79GNvnnrqqeXLl4eEhMCvVVRUtDHM6OL06bMt
LWebm9tQu3Nz25KT26Kj25TKNl/fNpmsbenSNiurNhub9rfe+t7B4Yf//d8f
7O3P2dmde/fd86tWnffz6/TxueDl1e3hcfH//u/iBx9c3LDhYnDwj5s2XYqI
uBwefuXDD6+EhfVs3dqTlnY1N/dqVta1jIwbaWnSjh0/ZWZex585OVfz8noK
C6+IJTb22nvvXV+8+MbMmT9NmfKTjmYNW2J77LV27fWtW68WFV3eu/fyF1/Q
AfPze/AVfX47lszMqxkZPWLJzLy8e/elnJyLu3df3LXr4s6dF7OyurOzu3Jz
L+Tmdubmns/NPZeXdy4//4fCwh/27v2+qKi9uLitpKSttLRt3762r79uq65u
O3y47ejRNlzS1ta2U6fOfvfdWX3/yAzDMMzYpby8PCUlZcOGDUuWLPnjH/+o
owAW8ZAQz5DQENKQ09f4+SMzBIiJ/xITE5cuXao9+rE3jz322Pz5893c3DZt
2pSZmalimNFFTY2qulpVWakqLVXl56tQx1NTVYmJqthYVUSEKiREtWGDav36
IwpFg1x+bO3aJh+fb7y9j/v4HF+79oRcftLb+1s3tzNOTu0uLu2uru2enu3u
7h2urudkss533+10crrg4NDl7Hxx5cofPT0vubj02Ntft7WV7OxuODpew59u
bpe9vH58771usTg4XJo/v+fpp68/8siNX/1KV7OGLbE99lqw4Mq771709+/8
4IMLfn5dOCBcJL6iz29fufKyu/vF1au7xOLre97f/welsn3jxvagoPYNG9r/
/ve2sLAzUVGnPvqodevWk//85/GkpG+2bWtKTT22c2dDbu6RL79UYSkqoqWk
RLVvn6q8XPX113RJcWEPHVLV1ur7N2YYhmHGMBkZGSEhIStWrHj11VdhvnQU
wCIeEuIZEhpCGnL6su5D0BlGZ8TEf1FRUVZWVjpWUcFDDz307LPPLly4cPXq
1Vu2bClkmLHHzp1Fn366b8uWAxERFWFhB0NCqpTK6oCAGoWi1sur3tn52Ftv
nRDLm2+2zp9/es6cttmzzz7//PfPPtvx1FPnnnji/B/+cOGhhy498MBVeKsJ
E64bG1956KEfH320Cx9hG7H8/vfY7Mf//M+r2GbcuBs6mjVsie2x13/910V8
3YC/HTsuXPitZnEcHb9ZubIRxfTzOxwYWIOy4wrgOuBq4Jrgyuj7x2EYhmEY
bUC+QsRCykLQQtb2VwlDPENCQ0hDTnMOf2YouHDhwunTpxsaGsLDw+fPn9/f
Kvrggw8+8cQTc+bMefvttzds2JDMMGOPrVu3R0WlhYbu+PvfM5TKnUFBmQEB
u9aty5LLd3t773Fzy3dy+kIs9vZfLlny1V//WmJtXfr66/usrMrmzdtvaVn+
yisHZs6sfPrpQ6amKjOzGnPzqpkzD86eXWlhUfXKK9Uvv3xozpyaOXNqzcyO
/+53Hfff33Pffdd++UtdzRq2HD/+2v33X5069Xtz8+b586stLQ+98godcM4c
HPxgn99uYfH1X/5SjjMUi41NybJlRZrFkckKPDzyUEw/v2wUGWXHFcB1wNXA
NcGV0fePwzAMwzDagHyFiIWUhaCFrO2vEoZ4hoSGkIachqjWt65nRiGdnZ0t
LS0qlSo0NHTevHn9raLq8ZV/+tOfbGxsVq9eHcYwY4+QkA83bgwPCIhYvz7C
3z9SoYj64IOo99+P8vOL9vHZ4uX1kYfHx2Jxdf14xYqtzs7x77wT//bb8Y6O
nzg4fGJvn7B8ecJbbyX+z/8kWVsn//WvSba2n+JPW9ttixd/bmOTaW2dtWhR
9sKFe557rnLq1NYJE3ruvbcfZu0Xv7iB7e+7r+e//7sVLuzNN3PeeCNn0aIc
HNDGJuNvf9ve57fb2f0TJ4YzFIuz89aVK+M0i7NqVeyaNTE+PjFr126Ry6NQ
dlwBXAdcDVwTXBl9/zgMwzAMow3IV4hYSNl+ZdgTQDxDQkNIQ0536p7cmWF0
RswJGBwcbGlp2d8q+sADD/zud7+bNm3a3Llz7e3tfRmGGTxWrVovk/3d0THC
3j7azu6jt96Ke+mlgkcfbRw//sq4cVdhwXQ3a7/85bV77+159NFjL75YgOOI
xcnpQw+PDfouKMMwDMPoB8hXiFhIWQhayNr+KmGIZ0honh2bGTrEnIBbtmxZ
tGjR+PHjx40b94tf/ELHKjp58uSnn376tddeW7FihVKp1HdXNsOMKhIS0j7+
ODM6ek9kZF5EREF4+F43t9pXXz3zyCNXf/vb60ZGupq1++//6cEHrz/yyDXs
iyPgOGKJicn55JN0fReUYRiGYfQD5CtELKQsBC1krY4CGFIZghmyGeIZEhpC
GnKax6wxQ4GYEzApKWnJkiVGRkYTJkxA9dOxrj722GOvvvqqTCb7xz/+sXPn
zlqGYQaPQ4eOVFYerag49vXXTQcOfFNe3hwb2+bq2j179g1T0xu/+Y2u2SB/
/eufTE1/euGFG9gXR8BxxHLw4LHq6jp9F5RhGIZh9APkK0QspCwELWStjgIY
UhmCGbIZ4hkSGkIachqiWt+6nhnNZGZmOjo69jd1v5mZmZ2dXXBwMHZvaGjQ
dyEYZpSzfz9Nrm1rK82aJU2Zouuk2NgS22Mv7IsjMAzDMAyjBvIVIhZSFoIW
slZHASxS90M8Y3d9F4IZE3z11VeBgYGWlpYzZsx4+OGHtcdD3nfffRMnTpw0
aZKVlZVCoUAtraioOHXqlL4LwTCjnLo6KT1dCgyU7Owkc3PJyEiaMEEaN+5O
GfvpU2yDLbE99sK+OALDMAzDMGogXyFiIWUhaCFrIW4hcSF0+xTAIvoRUhmC
GbIZ4hkSWt+FYMYEKpUqOTnZ19d38eLFqH7a4yFRjadOnWpmZubi4pKQkNDQ
0ICq3tXVpe9CMMwo59QpqaJCysyUFAppwQJp0iRp4kRyZH2aNazHp9gGW2J7
7IV9+ZkKwzAMwwggXyFiIWUhaCFrIW4hcSF0+xTAIvoRUhmCGbIZ4hkSWt+F
YMYEra2t5eXlaWlpqHiWlpba4yEnTZqEyqx+nlBcXKzvc2eYsUJ3t3T2rNTc
LCUkSI6OkokJeTEjo77NGtbjU2yDLbE99sK+PPqZYRiGYXoDQauOMYPEhdDV
Hv2IzSCYIZshniGh9X3uzJigo6OjsbERVS4xMVEul9va2s6bN+/555831eDJ
J5+cMWOGubn5okWLZDIZqvTnn39ex2FVDDNcXL4snT9PnmvvXmnzZsnFRVq8
WHr5ZcnMTHrySWn6dMnUlF7xHmuwHp9iG2yJ7bEX9sURGIZhGIb5GRC0kLUQ
t5C4ELqQuxC9kL6aShjCGPIYIhlSGYIZshniGRJa3+fOjAkuXbqEytba2nrw
4MGsrKzY2NiAgABUV2sNlixZ4uDg4OLisnHjxqSkpOLiYlTs9vZ2fZ87w4wV
rl0jt9XdLX3zjVRaKqWlSeHhko8PDUlbsoSsmbU1veI91mA9PsU22BLbYy/s
iyMwDMMwDPMzIGghayFuIXEhdCF3IXohfTWVMIQx5DFEMqQyBDNkM8QzJLS+
z50ZW3R3d589e7a5ubmwsBC1UXPewMDAwLCwMKzER9hA32fKMGOXnh7p4kXp
3DmpspLsWHAw5Q9RKCRfX3rFe6zBenyKbbAlpxNmGIZhGF0QGhiiF9JXUwkL
DQypzLOqMfri8uXL58+fRyVUqVSokJrzBqanp2dnZ2NlbW1tW1ubvs+UYcYu
6i42uLDmZqm8nJKHpKdLqalScjK94j3WYD0+xTbcocYwDMMwOgKJC6ELuQvR
C+mrqYSxEvIYIhlS+TKPK2D0xLVr11D9uru7UVebm5s15w2sq6trbGxUz9J+
ERKQYRg9ceMG+a+eHuo4a22VGhooJ//hw1JtLb3iPdZgPT7FNtgS2zMMwzAM
82+BxFVrYIheSF9NJazWwBDJkMrX+DEowzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMw/TF/wNiZ5x8
    "], {{0, 767}, {1167, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{311.40000000000003`, Automatic},
  ImageSizeRaw->{1167, 767},
  PlotRange->{{0, 1167}, {0, 767}}]], "Input",
 Evaluatable->False]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Trilinears", "Section",
 CellChangeTimes->{{3.766664661581194*^9, 3.7666646732055235`*^9}, {
  3.7670072031362944`*^9, 3.767007214049448*^9}, {3.767010073676444*^9, 
  3.767010075948375*^9}}],

Cell["\<\
Trilinears x : y : z convert via triangle vertices A, B, C  and sides a, b, c \
:\
\>", "Text",
 CellChangeTimes->{{3.7663928906096363`*^9, 3.766392920072796*^9}, {
  3.7664995705174584`*^9, 3.766499570837592*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
9eloA8B0lOe8hu6dyn/FxEok7rtpPYZ7uTOPpGxlvjJQMvlCZoaFiEczj1yN
TqKYtQmfdjPKZfLdJzy2sRRsPtemPp2Iyob3/cMPPzQD9StvkGnYJA5u4qiJ
g4iMZprZ8FDy4C29rutuVDbHw9a7U4KoZFrIpBES3js3LWTJwR8omZlMmTyE
CzZllW17KUaBgVlrykp+MZuYssqwqtzrBw8eJA6Sb8pks62tLXdfTFkTapiy
/FesuSkrNo4BsErIW3Z8fKzW7eJY5UU+PDx0NUIqjb/927/1Ns43kl5sbW1t
TQ4o53r+/Pnjx4+9prWRdU/9ZXvZWMom8rqxseFWUKWJbPlRWbkdoZ1xr6q5
4HJtX7x4Idfcsz/mOYlddi8EYSaNykG8I8iXOUVVu4+XflW72ABId5TL7Xg+
RbbxGoeZ0QO3azWGue/u0dwOgjLb81AyJsQaKojRCxGyg4ODzc1N909fffWV
91jKETJP58XW5GgmA48cQYTMa/2+9957Zp6764Zke9l4NBqJwornst8X6BbL
j8qqSWXff/9995/2Bsnz8OjRI+9RSQRmvXstN0vqLrlx3hkzg5nh7NQShKyL
UVm5L2HbtfdOyMxMT9NQdF98c69zXrHKuFNPawKZ+JjdQNRwntcAVpCEKZPv
VVP2+eefexvbrsBKvDCdEU3h2bNnmaZMqkTVlJVQs3mUH5VVk8rmm7Je0gvn
mDJx5ZmmzA48LuqOd9SUxWbimHskL6O8YvL01jZl4UMVnsvrZHRbPpgygAWg
xmfkNfeirJWdtplVn5zu3r177om811z+6fXiyXlti9qL4MnGH330kVullDbK
qPyorJpU1iLy7XkKM8bS20xVcNnSrc/Fw5rvw9G5ma2jsPv44OCglYvQhM41
ANR3WW6BOo1XvvnlL3850yuW42Tt0UxVY2ZmPXnyxP4pPzgGMAkiIfap9vRF
3cwlXOVQxavExDF574WcyBNWKcxnn33m1l1WEaSQblS2wOe//KisXMN0VeP1
ARkh88ysOu5xMk2qZrdxj+NVpO+9916ObVG7F9u6DrXpXFRWbbvGchTIxp9/
/vna2lr+K1Y5rN3FNGXfTnEjFZnBDQCLGp/Z2tryJEY2k6cu8UzmmzL3Oc/J
HSce7eOPP3bfOLtxaMouLi5auSxtUX5UVk0qaynclIVLki2ezpkydaR6LLeS
3JeFmTK3r6e0RinA6qE2a2MJJN36PCTHqXmKEHvHrQE0uA1pV4zU8XiltYHL
j8qqufgMsfEk8kO8vaTCD3XB9SbuvX7z5o0n5Tl9cOqY3hIEt1sNADUTSKxj
Xc1ukX7F1F3SmEGG+acA8FBjrfnVl0vm+CIvTKee6Pz8PDar2n3C1VdSCl/7
asyD8qOyh4eHsXuamLHutSLUGIK7jddoCeu6nBBEuFdmX8Bc6VZUVrWxsRsd
qx/STbKDg4PYE6UiD88HH3zgvvKZI3IBLDFTFtOypZgyF9eUqZuV1pwrPypb
z5R5w1bVYB2mrEBmNWXhK59+xVxlzyQ0ZVIplRnBAFgZVPVPNyNfvXqldrhk
hhxjiuChTt/ofdeoxrp+SnMThUdlEzG0dCLxsPXl6YKr1969Vu9vZWef2n1c
QnygQw0ANS1V7E2MjcRIx4u82yTPgFnl0yzzmtNdW2xTGcokNko28RSps93z
qxQ3TJdoD8fG2rlli5WkhMGTLuVHZWNClm7SyJ88MfK295Kqufu6uUMtles6
yV5hIfPnGs+PDkVlVRubWGhGHR5fWUWEE7fl+mxvb+cLGfM9YSaKNWUxLXOr
xJiWlVaZlB+VrWfKwuGyXopX9wZJ2977U2jKKlUJU9Yc1ZTFWpWx5PbpHsbw
NmHKAEqjhpM1e3kTLW2dUHlGN46a7tmJRWXd2v7TTz9Va48SprS7FB6VVfs6
K2/QZKoOoWdxb9De3l7soVKlvDIqW2ZS2Ul3GgAXFxf56j+JzwhOv+xue9JO
6rx5h3wWEzEajcKMtfYpwsnCTISZzXLiIWo6ypwqJX9ButgQBTdwF5uryFjZ
mUj05FY2abxa0Rti5C7Y7f1wecbCk1ZGZdWmSwmXtCtRWTX4k7jRsR789Mvu
tjc+/vhjK2ST6YWSz1IMeSlMlr/w+IlhhwAq7ZqynH69xZiy0iqTwqOyCVOW
lgnVlLkNoVlNWWVUFlPWELV7MW3K1Gcj/bJXmjKjZZgygCWiTv/PefWePXsW
7lg5/85t8MuHtBSqZsdLVhObtlNaDVx4VPbFixfhNcyZdqd2ndupTK7Ehy5V
nZ5TaUtDvSgkcNGJBoDqTNON0tgsqkQb2x14VhnYl9dBLt3XX3/9B3/wB2aX
AlOQQeFIVRM2U9WVZD3UuZY5KdHsWKZKT6eGjzz5i71llcG9BVN4VFbtQsox
3eoUYFt3uXcwfDbUnAmVElCsk+1EVFYdLLSxsZG40TU6PtzASE5gX7aXxs+H
H35oD05IFmZFNWU5K2U0N2U5WhaaMu8N6pwpKzMqq9ZXzU2ZewfD2qktU1bI
HJ9OmDL1ftUzZYmGq3spYtkpLaopY7VKgHmjhmgqs2wZ6tXe6TBdYmOLW7XG
kilVxnsXT+FR2fBuZppuVVCsmXWbPd7R1FmflRdH7T4uIRffpAsNANXJVt5o
NX1ButtUTvTo0SO56dJIyHkTZRs7zIPBRTAragKWTBWoNzjEDdNVzstQay2v
/RwO9FWrzaVTeFRWTQGaufSn2t9n9Mi9O+HRajx7qm6WsDzKpAtR2dhSfekm
ZWw908TLbrL33Lt3L7GUuVcwVviCJqimLNM1qN1D4/E4vZdUaLbhWs+UeXt1
zpSVGZVVLXbOiKn0MhCYsqKoZ8oeP34cPhutmzK3YJgygHkTy0ySaWHsJAiL
vO+VLQd36kTlxjmB39FoNFPVtCxKjsqqE2wzy6kqsjGz6fFFOa27EHVMbyHB
gfIbAOpk7Uq1VeNFlXuZGTE5pfJSqKH+MCtqiCbzQarXvei+SjP1RVq8KkJd
EazAd6HwqKy68FPmYjeJ4Ko7wceTRXXwWGV8tdikspMuRGXVwYSV1zxMt2he
scpRQ5lC5sWKCcnCrMiTFhqr/JpB3bey9nNNWeXGauDXM1yqKStw9lPhUdk5
mTJ72LZMmbqXtGfq//L2WFVTphrhnGmJmDKAYlFbtvnVfo05C+74kJxhIarD
8oon/5QfYrYUJZIPBYZkJ2VHZev5Srtv+BSZBoA7mTQM9YdrGfQyGpDFzvqc
FN8AUOf2yiuTMx9Kbqh9c2UXaXW3VSrUHxqiJrrJ91n1vI/d6+HDh5WnyAn8
yhnFesuLtj5Fjt/iW9YiJUdlY4lGa+9rniLX5IYWVR2dWxlFKTap7KT4qGxs
LaHKhp/8LvGtrpClF82ZiTAkW2CcBwpnKaYsEaYLCQO/4SDY0JQVUrN5lByV
bWjKwqisuU1pk1Kvhzrcq5zr2UVTlnPNzTRhq2Xvvfdei9bJM2V0LwIsAHWO
Qy87i51qhHPyF5maJGcyi9r2VlXJ9AAa5hSgu2mMVa7NzU03w3Y92v11ar9b
poSp/aRGlM/Pzx88eCCf5bffBOOL6s3Sml/+oua3+M2bN/alkEZpUbdYDqiO
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
    "], {{0, 168}, {1842, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{538.2, Automatic},
  ImageSizeRaw->{1842, 168},
  PlotRange->{{0, 1842}, {0, 168}}]], "Input",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "trilinearToCartesian"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"trilinearToCartesian", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"A_", ",", "B_", ",", "C_"}], "}"}], ",", 
     RowBox[{"(*", " ", "vertices", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], ",", 
     RowBox[{"(*", " ", 
      RowBox[{"side", " ", "lengths"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}]}], " ", 
    RowBox[{"(*", " ", "trilinears", " ", "*)"}], "\[IndentingNewLine]", 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"(*", 
       RowBox[{"a", ",", "b", ",", "c", ","}], "*)"}], "denom", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"may", " ", "not", " ", "need"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"magn", "[", 
         RowBox[{"C", "-", "B"}], "]"}]}], ";", 
       RowBox[{"b", "=", 
        RowBox[{"magn", "[", 
         RowBox[{"A", "-", "C"}], "]"}]}], ";", 
       RowBox[{"c", "=", 
        RowBox[{"magn", "[", 
         RowBox[{"B", "-", "A"}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"denom", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c"}], "}"}], ".", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", " ", "x", " ", "A"}], "+", 
         RowBox[{"b", " ", "y", " ", "B"}], "+", 
         RowBox[{"c", " ", "z", " ", "C"}]}], ")"}], "/", "denom"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.766392274332153*^9, 3.7663922814904995`*^9}, {
  3.766392428106147*^9, 3.766392528042677*^9}, {3.7663925915550756`*^9, 
  3.7663927128902264`*^9}, {3.766392936819051*^9, 3.766392999564353*^9}, {
  3.7663932016307125`*^9, 3.7663932823309326`*^9}, {3.7663937775636516`*^9, 
  3.766393784411344*^9}, {3.7663938204298825`*^9, 3.766393858821268*^9}, {
  3.7666147840769415`*^9, 3.7666148537812605`*^9}, {3.7666149627556343`*^9, 
  3.7666149947333703`*^9}, {3.7667526846064796`*^9, 3.7667526876649*^9}, {
  3.7667888094003525`*^9, 3.766788827040985*^9}, {3.7667889040894938`*^9, 
  3.7667889330641994`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rotateSym", "[", "fabc_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"fabc", ",", 
    RowBox[{"fabc", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[Rule]", "b"}], ",", 
       RowBox[{"b", "\[Rule]", "c"}], ",", 
       RowBox[{"c", "\[Rule]", "a"}]}], "}"}]}], ",", 
    RowBox[{"fabc", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[Rule]", "c"}], ",", 
       RowBox[{"b", "\[Rule]", "a"}], ",", 
       RowBox[{"c", "\[Rule]", "b"}]}], "}"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7665767841381903`*^9, 3.7665768310223866`*^9}, {
  3.7665768637727995`*^9, 3.7665768643971605`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"trilinears", ":", " ", "a", ":", "b", ":", "c"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"getIncenterTrilin", "[", 
      RowBox[{"orbit_", ",", "sides_"}], "]"}], ":=", 
     RowBox[{"trilinearToCartesian", "[", 
      RowBox[{"orbit", ",", "sides", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getCircumcenterTrilin", "[", 
      RowBox[{"orbit_", ",", 
       RowBox[{"{", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a2", "=", 
          RowBox[{"a", "*", "a"}]}], ",", 
         RowBox[{"b2", "=", 
          RowBox[{"b", "*", "b"}]}], ",", 
         RowBox[{"c2", "=", 
          RowBox[{"c", "*", "c"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"trilinearToCartesian", "[", 
        RowBox[{"orbit", ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a", 
            RowBox[{"(", 
             RowBox[{"b2", "+", "c2", "-", "a2"}], ")"}]}], ",", 
           RowBox[{"b", 
            RowBox[{"(", 
             RowBox[{"c2", "+", "a2", "-", "b2"}], ")"}]}], ",", 
           RowBox[{"c", 
            RowBox[{"(", 
             RowBox[{"a2", "+", "b2", "-", "c2"}], ")"}]}]}], "}"}]}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getCircumcenterTrilin2", "[", 
      RowBox[{"orbit_", ",", 
       RowBox[{"{", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"cosA", "=", 
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"a", ",", "b", ",", "c"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cosB", "=", 
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"b", ",", "a", ",", "c"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cosC", "=", 
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"c", ",", "a", ",", "b"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"trilinearToCartesian", "[", 
         RowBox[{"orbit", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}]}], "]"}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getOrthocenterTrilin", "[", 
      RowBox[{"orbit_", ",", "sides_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "cs", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"cs", "=", 
         RowBox[{"getPolyCosines", "[", "orbit", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"trilinearToCartesian", "[", 
         RowBox[{"orbit", ",", "sides", ",", 
          RowBox[{"1", "/", "cs"}]}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.766392237563183*^9, 3.7663922689216175`*^9}, {
   3.766392336546873*^9, 3.766392424889744*^9}, {3.766392491441549*^9, 
   3.766392492570532*^9}, {3.7663927538908052`*^9, 3.766392772209856*^9}, {
   3.7663931705935307`*^9, 3.7663931883536587`*^9}, {3.766393671594722*^9, 
   3.7663937484585457`*^9}, {3.766393867028328*^9, 3.7663938909064875`*^9}, {
   3.7663943995391903`*^9, 3.766394475060255*^9}, {3.7663946177244124`*^9, 
   3.766394619284243*^9}, {3.766396296019594*^9, 3.7663962998853445`*^9}, {
   3.766396377151757*^9, 3.76639639182253*^9}, {3.766398446813922*^9, 
   3.7663985020682063`*^9}, {3.766401283693178*^9, 3.766401383012994*^9}, {
   3.766406907527419*^9, 3.766406958006222*^9}, {3.7664358408356833`*^9, 
   3.7664358633001194`*^9}, {3.76657187003658*^9, 3.766571884331933*^9}, {
   3.766572848916566*^9, 3.7665728493803225`*^9}, {3.766749506071499*^9, 
   3.7667495443345613`*^9}, {3.7667888353926563`*^9, 
   3.7667888906005573`*^9}, {3.7667889513363476`*^9, 
   3.7667889760781975`*^9}, {3.7671169921328325`*^9, 
   3.7671171013269587`*^9}, {3.7671222514026966`*^9, 
   3.7671223195864487`*^9}, {3.767346576503457*^9, 3.767346618680028*^9}, {
   3.767521652548606*^9, 3.767521653531975*^9}, {3.768411550278373*^9, 
   3.7684115513824224`*^9}, 3.7684752908543344`*^9, {3.768476223173477*^9, 
   3.768476232629211*^9}, {3.7684763158997917`*^9, 3.768476489516215*^9}, {
   3.768476809149302*^9, 3.768476812237048*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getSymmedian", "[", 
    RowBox[{"orbit_", ",", "sides_"}], "]"}], ":=", 
   RowBox[{"trilinearToCartesian", "[", 
    RowBox[{"orbit", ",", "sides", ",", "sides"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getMitten", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"b", "+", "c", "-", "a"}], ",", 
       RowBox[{"c", "+", "a", "-", "b"}], ",", 
       RowBox[{"a", "+", "b", "-", "c"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getGergonne", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"b", "*", 
        RowBox[{"c", "/", 
         RowBox[{"(", 
          RowBox[{"b", "+", "c", "-", "a"}], ")"}]}]}], ",", 
       RowBox[{"c", "*", 
        RowBox[{"a", "/", 
         RowBox[{"(", 
          RowBox[{"c", "+", "a", "-", "b"}], ")"}]}]}], ",", 
       RowBox[{"a", "*", 
        RowBox[{"b", "/", 
         RowBox[{"(", 
          RowBox[{"a", "+", "b", "-", "c"}], ")"}]}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getNagel", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "+", "c", "-", "a"}], ")"}], "/", "a"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"c", "+", "a", "-", "b"}], ")"}], "/", "b"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "+", "b", "-", "c"}], ")"}], "/", "c"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSpieker", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"b", " ", "c", 
        RowBox[{"(", 
         RowBox[{"b", "+", "c"}], ")"}]}], ",", 
       RowBox[{"c", " ", "a", 
        RowBox[{"(", 
         RowBox[{"c", "+", "a"}], ")"}]}], ",", 
       RowBox[{"a", " ", "b", " ", 
        RowBox[{"(", 
         RowBox[{"a", "+", "b"}], ")"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getCentroid", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"b", " ", "c"}], ",", 
       RowBox[{"c", " ", "a"}], ",", 
       RowBox[{"a", " ", "b"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getBevan", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"b", "/", 
         RowBox[{"(", 
          RowBox[{"c", "+", "a", "-", "b"}], ")"}]}], "+", 
        RowBox[{"c", "/", 
         RowBox[{"(", 
          RowBox[{"a", "+", "b", "-", "c"}], ")"}]}], "-", 
        RowBox[{"a", "/", 
         RowBox[{"(", 
          RowBox[{"b", "+", "c", "-", "a"}], ")"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"c", "/", 
         RowBox[{"(", 
          RowBox[{"a", "+", "b", "-", "c"}], ")"}]}], "+", 
        RowBox[{"a", "/", 
         RowBox[{"(", 
          RowBox[{"b", "+", "c", "-", "a"}], ")"}]}], "-", 
        RowBox[{"b", "/", 
         RowBox[{"(", 
          RowBox[{"c", "+", "a", "-", "b"}], ")"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"a", "/", 
         RowBox[{"(", 
          RowBox[{"b", "+", "c", "-", "a"}], ")"}]}], "+", 
        RowBox[{"b", "/", 
         RowBox[{"(", 
          RowBox[{"c", "+", "a", "-", "b"}], ")"}]}], "-", 
        RowBox[{"c", "/", 
         RowBox[{"(", 
          RowBox[{"a", "+", "b", "-", "c"}], ")"}]}]}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7702024475872817`*^9, 3.7702025609978223`*^9}, {
  3.7702027610559397`*^9, 3.770202764280319*^9}}],

Cell[CellGroupData[{

Cell["Generate Billiard as Locus", "Subsubsection",
 CellChangeTimes->{{3.7672656202757683`*^9, 3.767265635167061*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getX100Trilin", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"1", "/", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"b", "-", "c"}], ",", 
        RowBox[{"c", "-", "a"}], ",", 
        RowBox[{"a", "-", "b"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getX88Trilin", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"trilinearToCartesian", "[", 
    RowBox[{"orbit", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"1", "/", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"b", "+", "c", "-", 
         RowBox[{"2", "a"}]}], ",", 
        RowBox[{"c", "+", "a", "-", 
         RowBox[{"2", "b"}]}], ",", 
        RowBox[{"a", "+", "b", "-", 
         RowBox[{"2", "c"}]}]}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.767265456387086*^9, 3.7672656159214077`*^9}, {
  3.7672658927040424`*^9, 3.7672659049602604`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"trilinearMatrixToCartesian", "[", 
      RowBox[{"orbit_", ",", "sides_", ",", "tryM_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"trilinearToCartesian", "[", 
        RowBox[{"orbit", ",", "sides", ",", "#"}], "]"}], "&"}], "/@", 
      "tryM"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "@", "excentralTriangle"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"excentralTriangle", "[", 
      RowBox[{"orbit_", ",", 
       RowBox[{"{", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"trilinearMatrixToCartesian", "[", 
      RowBox[{"orbit", ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7921802023089113`*^9, 3.7921802076397*^9}, {
  3.7921802443825808`*^9, 3.792180262010298*^9}, {3.792180422202434*^9, 
  3.7921804258543572`*^9}, {3.792180673966318*^9, 3.7921806750549164`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Get Triangular Center (Notable) Info", "Section",
 CellChangeTimes->{{3.766430377915554*^9, 3.7664303822410145`*^9}, {
  3.7670101572603655`*^9, 3.7670101820130153`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "getTouchPts"}], ";", 
  RowBox[{
   RowBox[{"getTouchPts", "[", 
    RowBox[{"orbit_", ",", "normals_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"inc", ",", "tps"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"inc", "=", 
       RowBox[{"getIncenter", "[", 
        RowBox[{
         RowBox[{"orbit", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"normals", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"orbit", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"normals", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tps", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"closestPerp", "[", 
           RowBox[{"inc", ",", "#1", ",", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"orbit", ",", 
           RowBox[{"RotateLeft", "@", "orbit"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "tps"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.766563800817769*^9, 3.7665638517406206`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getAntiComplement", "[", 
    RowBox[{"p_", ",", "bar_"}], "]"}], ":=", 
   RowBox[{"bar", "-", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"p", "-", "bar"}], ")"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7666191520760126`*^9, 3.7666191761642833`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getNotables"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getNotables", "[", 
    RowBox[{"orbit_", ",", "normals_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "inc", ",", "inradius", ",", "cir", ",", "circumradius", ",", "npc", 
       ",", "exc", ",", "tps", ",", "ort", ",", "medians", ",", "npcradius", 
       ",", "sides", ",", "bar", ",", "feu", ",", "antifeu", ",", "x88", ",", 
       "perimeter"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"inc", "=", 
       RowBox[{"getIncenter", "[", 
        RowBox[{
         RowBox[{"orbit", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"normals", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"orbit", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"normals", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inradius", "=", 
       RowBox[{"closestDist", "[", 
        RowBox[{"inc", ",", 
         RowBox[{"orbit", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"orbit", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tps", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"closestPerp", "[", 
           RowBox[{"inc", ",", "#1", ",", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"orbit", ",", 
           RowBox[{"RotateLeft", "@", "orbit"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"medians", "=", 
       RowBox[{"getMedians", "@@", "orbit"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cir", "=", 
       RowBox[{"getCircumcenter", "@@", "orbit"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"circumradius", "=", 
       RowBox[{"magn", "[", 
        RowBox[{"cir", "-", 
         RowBox[{"orbit", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"npc", "=", 
       RowBox[{"getNinepointcenter", "@@", "orbit"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"npcradius", "=", 
       RowBox[{"magn", "[", 
        RowBox[{"npc", "-", 
         RowBox[{"medians", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"exc", "=", 
       RowBox[{"getExcenters", "[", 
        RowBox[{"orbit", ",", "normals"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sides", "=", 
       RowBox[{"triLengthsRL", "@", "orbit"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"feu", "=", 
       RowBox[{"getFeuerbachpoint", "[", 
        RowBox[{"npc", ",", "inc", ",", "inradius"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bar", "=", 
       RowBox[{"getBaricenter", "@@", "orbit"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"antifeu", "=", 
       RowBox[{"getAntiComplement", "[", 
        RowBox[{"feu", ",", "bar"}], "]"}]}], ";", 
      RowBox[{"(*", " ", "anticomplement", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"x88", "=", 
       RowBox[{"getX88Trilin", "[", 
        RowBox[{"orbit", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ort", "=", 
       RowBox[{"getOrthocenter", "@@", "orbit"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"perimeter", "=", 
       RowBox[{"Total", "@", "sides"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "we", " ", "think", " ", "this", " ", "is", " ", "constant", " ", 
        "for", " ", "excentral", " ", "triangle"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<inc\>\"", "\[Rule]", "inc"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<bar\>\"", "\[Rule]", "bar"}], ",", 
        RowBox[{"(*", " ", 
         RowBox[{"also", ":", " ", 
          RowBox[{"getCentroid", "[", 
           RowBox[{"orbit", ",", "sides"}], "]"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<ort\>\"", "\[Rule]", "ort"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<cir\>\"", "\[Rule]", "cir"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<npc\>\"", "\[Rule]", "npc"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<exc\>\"", "\[Rule]", "exc"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<ex12\>\"", "\[Rule]", 
         RowBox[{"exc", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<ex23\>\"", "\[Rule]", 
         RowBox[{"exc", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<ex31\>\"", "\[Rule]", 
         RowBox[{"exc", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<feu\>\"", "\[Rule]", "feu"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<antifeu\>\"", "\[Rule]", "antifeu"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<x88\>\"", "\[Rule]", "x88"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"all", " ", "thru", " ", "trilinears"}], ",", " ", 
          RowBox[{
          "each", " ", "computing", " ", "sides", " ", "unnecessarily"}]}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"\"\<mit\>\"", "\[Rule]", 
         RowBox[{"getMitten", "[", 
          RowBox[{"orbit", ",", "sides"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<sym\>\"", "\[Rule]", 
         RowBox[{"getSymmedian", "[", 
          RowBox[{"orbit", ",", "sides"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<ger\>\"", "\[Rule]", 
         RowBox[{"getGergonne", "[", 
          RowBox[{"orbit", ",", "sides"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<nag\>\"", "\[Rule]", 
         RowBox[{"getNagel", "[", 
          RowBox[{"orbit", ",", "sides"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<spi\>\"", "\[Rule]", 
         RowBox[{"getSpieker", "[", 
          RowBox[{"orbit", ",", "sides"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"not", " ", "really", " ", "notables"}], ",", " ", 
          RowBox[{"aux", " ", "info"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"\"\<incRadius\>\"", "\[Rule]", "inradius"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<tps\>\"", "\[Rule]", " ", "tps"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<medians\>\"", "\[Rule]", "medians"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<cirRadius\>\"", "\[Rule]", "circumradius"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<npcRadius\>\"", "\[Rule]", "npcradius"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<sides\>\"", "\[Rule]", "sides"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<perimeter\>\"", "\[Rule]", "perimeter"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<area\>\"", "\[Rule]", 
         RowBox[{"triAreaHeron", "@", "sides"}]}]}], "\[IndentingNewLine]", 
       "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7660472344434967`*^9, 3.7660474074683113`*^9}, {
   3.7660477448698783`*^9, 3.7660477999100127`*^9}, {3.766047883461458*^9, 
   3.7660478836948357`*^9}, {3.7660730123355775`*^9, 3.76607302097548*^9}, {
   3.7661437762487803`*^9, 3.7661438675542316`*^9}, {3.766238776062088*^9, 
   3.7662389310457463`*^9}, {3.766343308545548*^9, 3.7663433550969925`*^9}, {
   3.7663922077269497`*^9, 3.7663922342221127`*^9}, {3.766393055102866*^9, 
   3.766393163726858*^9}, {3.7663935290714455`*^9, 3.7663936007421207`*^9}, {
   3.7663937003352084`*^9, 3.766393712261323*^9}, {3.7663941865424757`*^9, 
   3.766394206774041*^9}, {3.7663944839035835`*^9, 3.766394493437482*^9}, {
   3.7663963986493187`*^9, 3.766396424375952*^9}, {3.766398383127941*^9, 
   3.7663984384702253`*^9}, {3.76639850758346*^9, 3.7663985212864776`*^9}, {
   3.7663985997507*^9, 3.7663986090939164`*^9}, 3.7663988740563126`*^9, {
   3.7664013884883533`*^9, 3.766401398407921*^9}, {3.76643509739882*^9, 
   3.766435105926702*^9}, {3.766435871367896*^9, 3.766435881975399*^9}, {
   3.7664361090317583`*^9, 3.7664361208231635`*^9}, {3.766618992026012*^9, 
   3.766619091121956*^9}, {3.7666191715060625`*^9, 3.7666191890085487`*^9}, {
   3.7666193121374536`*^9, 3.7666193221376877`*^9}, {3.7672656685175357`*^9, 
   3.7672657050928593`*^9}, {3.767346252615325*^9, 3.7673462763752785`*^9}, {
   3.7674495454792657`*^9, 3.767449620560625*^9}, {3.7674513624010243`*^9, 
   3.767451391047745*^9}, 3.767451856403324*^9, {3.7674523250766077`*^9, 
   3.767452325891986*^9}, {3.7674523665011983`*^9, 3.7674523743900127`*^9}, {
   3.7677148277799644`*^9, 3.767714843691434*^9}, {3.767715295627181*^9, 
   3.7677153051157985`*^9}, {3.768478561695939*^9, 3.7684785644974527`*^9}, {
   3.768479455498039*^9, 3.7684794586818*^9}, {3.7885336516727967`*^9, 
   3.7885336622167664`*^9}}],

Cell[CellGroupData[{

Cell["Excenters and Excircles", "Subsubsection",
 CellChangeTimes->{{3.7660482399458723`*^9, 3.7660482578030624`*^9}, {
  3.7661317419014287`*^9, 3.766131746964007*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "showBisectors"}], ";", 
  RowBox[{
   RowBox[{"showBisectors", "[", "vs_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "bs", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"bs", "=", 
       RowBox[{"getTriBisectors", "@@", "vs"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FaceForm", "[", "None", "]"}], ",", 
          RowBox[{"EdgeForm", "[", "Black", "]"}], ",", "Black", ",", 
          RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Polygon", "[", "vs", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Point", "[", "vs", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Text", "[", 
              RowBox[{"#1", ",", "#2", ",", 
               RowBox[{"{", 
                RowBox[{"1.5", ",", "0"}], "}"}]}], "]"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(P\), \(1\)]\)\>\"", ",", 
                "\"\<\!\(\*SubscriptBox[\(P\), \(2\)]\)\>\"", ",", 
                "\"\<\!\(\*SubscriptBox[\(P\), \(3\)]\)\>\""}], "}"}], ",", 
              "vs"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{"#1", ",", 
                RowBox[{"ray", "[", 
                 RowBox[{"#1", ",", "#2", ",", ".25"}], "]"}]}], "}"}], "]"}],
              "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"vs", ",", "bs"}], "}"}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7659676184256396`*^9, 3.765967797830856*^9}, {
  3.765967856447073*^9, 3.7659680986991434`*^9}, {3.7659682266651325`*^9, 
  3.765968230017141*^9}, {3.765968481394543*^9, 3.7659684818732905`*^9}, {
  3.765968814847141*^9, 3.765968817511533*^9}, {3.766132171223426*^9, 
  3.766132263118238*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getExtouchPoints", "[", 
    RowBox[{"orbit_", ",", "exc_"}], "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"closestPerp", "[", 
       RowBox[{"#1", ",", "#2", ",", "#3"}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"exc", ",", "orbit", ",", 
       RowBox[{"RotateLeft", "@", "orbit"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.766961538791972*^9, 3.7669615791262903`*^9}, {
  3.788533667172236*^9, 3.7885336685730906`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getExcircleData"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getExcircleData", "[", 
    RowBox[{"orbit_", ",", "exc_", 
     RowBox[{"(*", 
      RowBox[{"12", ",", "23", ",", "31"}], "*)"}], ",", "npc_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "excFeet", ",", "altLengths", ",", "tps", ",", "radii", ",", "feus", 
       ",", "nagel", ",", "medians", ",", "mitten", ",", "mittenPedals", ",", 
       "\[IndentingNewLine]", "mittenFeet", ",", "sides", ",", "cosABC", ",", 
       "cosSum", ",", "cosProd", ",", "sideProd", ",", "altLengthsProd"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"side", " ", "touch", " ", "points", " ", "to", " ", 
        RowBox[{"sides", ":", " ", "12"}]}], ",", "23", ",", "31"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tps", "=", 
       RowBox[{"getExtouchPoints", "[", 
        RowBox[{"orbit", ",", "exc"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"excFeet", "=", 
       RowBox[{"getAltBases", "@@", "exc"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"altLengths", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"magn", "[", 
           RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"exc", ",", "excFeet"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"radii", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"magn", "[", 
           RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"exc", ",", "tps"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"feus", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ray", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"norm", "[", 
             RowBox[{"npc", "-", "#1"}], "]"}], ",", "#2"}], "]"}], "&"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"exc", ",", "radii"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"nagel", "=", 
         RowBox[{"interRays", "[", 
          RowBox[{
           RowBox[{"orbit", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"tps", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "-", 
            RowBox[{"orbit", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"orbit", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"tps", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "-", 
            RowBox[{"orbit", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{" ", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{"#1", ",", 
                  RowBox[{"ray", "[", 
                   RowBox[{"#1", ",", 
                    RowBox[{"norm", "[", 
                    RowBox[{"#2", "-", "#1"}], "]"}], ",", "10"}], "]"}]}], 
                 "}"}], "]"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{"exc", ",", 
                RowBox[{"RotateRight", "@", "medians"}]}], "}"}]}], "]"}], 
            "}"}], "]"}], ",", 
          RowBox[{"{", "}"}]}], "]"}], ","}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"medians", "=", 
       RowBox[{"getMedians", "@@", "orbit"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mitten", "=", 
       RowBox[{"interRays", "[", 
        RowBox[{
         RowBox[{"exc", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"medians", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "-", 
          RowBox[{"exc", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"exc", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"medians", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", 
          RowBox[{"exc", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mittenPedals", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"closestPerp", "[", 
           RowBox[{"mitten", ",", "#1", ",", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"orbit", ",", 
           RowBox[{"RotateLeft", "@", "orbit"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mittenFeet", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"interRays", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"#2", "-", "#1"}], ",", "#3", ",", 
            RowBox[{"#4", "-", "#3"}]}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"exc", ",", 
           RowBox[{"RotateRight", "@", "medians"}], ",", 
           RowBox[{"RotateLeft", "@", "exc"}], ",", 
           RowBox[{"RotateRight", "@", "exc"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sides", "=", 
       RowBox[{"triLengthsRL", "@", "exc"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cosABC", "=", 
       RowBox[{"getPolyCosines", "[", "exc", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cosSum", "=", 
       RowBox[{"Total", "[", "cosABC", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cosProd", "=", 
       RowBox[{
        RowBox[{"cosABC", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"cosABC", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{"cosABC", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sideProd", "=", 
       RowBox[{
        RowBox[{"sides", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"sides", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{"sides", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"altLengthsProd", "=", 
       RowBox[{
        RowBox[{"altLengths", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"altLengths", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{"altLengths", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<sides\>\"", "\[Rule]", "sides"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<perimeter\>\"", "\[Rule]", 
         RowBox[{"Total", "[", "sides", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<cosABC\>\"", "\[Rule]", "cosABC"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<excFeet\>\"", "\[Rule]", "excFeet"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<altLengths\>\"", "\[Rule]", "altLengths"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<sumAltLengths\>\"", "\[Rule]", 
         RowBox[{"Total", "@", "altLengths"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<prodAltLengths\>\"", "\[Rule]", "altLengthsProd"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<sumInvAltLengths\>\"", "\[Rule]", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", "#"}], ")"}], "&"}], "/@", "altLengths"}], 
          "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<cosSum\>\"", "\[Rule]", "cosSum"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<cosProd\>\"", "\[Rule]", "cosProd"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<sideProd\>\"", "\[Rule]", "sideProd"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<tps\>\"", "\[Rule]", "tps"}], ",", 
        RowBox[{"(*", " ", "extouchpoints", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"\"\<radii\>\"", "\[Rule]", "radii"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<sumRadiiSqr\>\"", "\[Rule]", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "^", "2"}], "&"}], "/@", "radii"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<sumInvRadiiSqr\>\"", "\[Rule]", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"#", "^", "2"}]}], ")"}], "&"}], "/@", "radii"}], 
          "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<sumRadii\>\"", "\[Rule]", 
         RowBox[{"Total", "@", "radii"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<sumInvRadii\>\"", "\[Rule]", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", "#"}], ")"}], "&"}], "/@", "radii"}], "]"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<feus\>\"", "\[Rule]", "feus"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<mitten\>\"", "\[Rule]", "mitten"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<mittenPedals\>\"", "\[Rule]", "mittenPedals"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<mittenFeet\>\"", "\[Rule]", " ", "mittenFeet"}]}], " ", 
       RowBox[{"(*", " ", 
        RowBox[{"BAD", " ", 
         RowBox[{"choice", ":", " ", 
          RowBox[{
           RowBox[{"intersecao", " ", "do", " ", "segm", " ", "Vi"}], "-", 
           RowBox[{
           "MITTEN", " ", "com", " ", "o", " ", "lado", " ", "oposto", " ", 
            "do", " ", "extriangulo"}]}]}]}], " ", "*)"}], 
       "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0F1Ik2EAxfGxCtMmzpmxkkbTSMNempoDP5bb0mE6c2tMQoRCtggp9MKc
2QhvFmtmmpox6cIkFlZOEbNRi0aURQRKbq86V6iBpnsNlpVKIj3nuTj8bs7V
X1pde9bM5/F4DBn8PDuVdyyOU2WWB5TQEL9cBLXz8gYoDB/3Qfe98HuobzwY
gL7OE9Ow94KmzEDc6JnQw3drottGon0XvxU6E6/chX1tAWpmzNQstPiZEOyo
ds3BbbGHunLdsbuCOH5pmNqpLhFDnTkpCborX2bBj91+BSw17FDDbzldxTD7
olAHhx41UevzT4/BJ/L+D5BNrWPhhv7+DLQ68xcdxFGm6CcsLlxdg7c2e7eg
s1sjaUGP+k8yWJPIV8IGsYfa7rVqoYQz6WDJq/Hk10Tvw4oU2N6czsDvjlYZ
tMby3UvENzODVC+T0hwl5FSPR7ROeHkpTp1KtGv2Uc0dMaM/iGM3y1/AM2zo
zhZRYJW2wTSXN/glnlM11irm4YGVyUXosqxTg5rVPZNEkytCnWDd+2FXluII
7GGirsGhw7ImGJJXtcC8ShPVWGYT+IlXa+Yk8Jz0axpcEIsyoOB3wUm4rXxb
CJXiaCO8kX6UurNUVAV1hgKq51/OMkt0J69TZU8l0dPEumBQAH9JIwnwr+3U
XmiPWLLhQl+Y+uD85sizBE41bJM8h76M3D+xueR3aID6H289UFc=
  "]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Trilinears: X(1)~X(100)", "Section",
 CellChangeTimes->{{3.766664661581194*^9, 3.7666646732055235`*^9}, {
  3.7670072031362944`*^9, 3.767007214049448*^9}, {3.7670368144574113`*^9, 
  3.7670368313292613`*^9}, {3.767260730618619*^9, 3.767260732426783*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getNewCenters"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getNewCenters", "[", 
    RowBox[{"orbit_", ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], ",", 
     RowBox[{"singles_:", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eqns", ",", "\[IndentingNewLine]", "cosA", ",", "cosB", ",", "cosC", 
       ",", "sinA", ",", "sinB", ",", "sinC", ",", "\[IndentingNewLine]", 
       "secA", ",", "secB", ",", "secC", ",", "cscA", ",", "cscB", ",", 
       "cscC", ",", "\[IndentingNewLine]", "tanA", ",", "tanB", ",", "tanC", 
       ",", "cotA", ",", "cotB", ",", "cotC", ",", "\[IndentingNewLine]", 
       "cos2A", ",", "cos2B", ",", "cos2C", ",", "sin2A", ",", "sin2B", ",", 
       "sin2C", ",", "\[IndentingNewLine]", "sec2A", ",", "sec2B", ",", 
       "sec2C", ",", "csc2A", ",", "csc2B", ",", "csc2C", ",", 
       "\[IndentingNewLine]", "cos3A", ",", "sin3A", ",", "cos3B", ",", 
       "sin3B", ",", "cos3C", ",", "sin3C", ",", "\[IndentingNewLine]", 
       "sec3A", ",", "sec3B", ",", "sec3C", ",", "csc3A", ",", "csc3B", ",", 
       "csc3C", ",", "\[IndentingNewLine]", 
       RowBox[{"cPi3", "=", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Pi]", "/", "3."}], "]"}]}], ",", 
       RowBox[{"sPi3", "=", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Pi]", "/", "3."}], "]"}]}], ",", 
       RowBox[{"cPi6", "=", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Pi]", "/", "6."}], "]"}]}], ",", 
       RowBox[{"sPi6", "=", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Pi]", "/", "6."}], "]"}]}], ",", "\[IndentingNewLine]", 
       "sinApPi3", ",", "sinBpPi3", ",", "sinCpPi3", ",", "sinAmPi3", ",", 
       "sinBmPi3", ",", "sinCmPi3", ",", "\[IndentingNewLine]", "sinApPi6", 
       ",", "sinBpPi6", ",", "sinCpPi6", ",", "sinAmPi6", ",", "sinBmPi6", 
       ",", "sinCmPi6", ",", "\[IndentingNewLine]", "cscApPi3", ",", 
       "cscBpPi3", ",", "cscCpPi3", ",", "cscAmPi3", ",", "cscBmPi3", ",", 
       "cscCmPi3", ",", "\[IndentingNewLine]", "cscApPi6", ",", "cscBpPi6", 
       ",", "cscCpPi6", ",", "cscAmPi6", ",", "cscBmPi6", ",", "cscCmPi6"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"b", ",", "a", ",", "c"}], "]"}], ",", 
         RowBox[{"lawOfCosines", "[", 
          RowBox[{"c", ",", "a", ",", "b"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sinA", ",", "sinB", ",", "sinC"}], "}"}], "=", 
       RowBox[{"getSin", "/@", 
        RowBox[{"{", 
         RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"secA", ",", "secB", ",", "secC"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cscA", ",", "cscB", ",", "cscC"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"sinA", ",", "sinB", ",", "sinC"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tanA", ",", "tanB", ",", "tanC"}], "}"}], "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"sinA", ",", "sinB", ",", "sinC"}], "}"}], "/", 
        RowBox[{"{", 
         RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cotA", ",", "cotB", ",", "cotC"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"tanA", ",", "tanB", ",", "tanC"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cos2A", ",", "cos2B", ",", "cos2C"}], "}"}], "=", 
       RowBox[{"cosDoubleAngle", "/@", 
        RowBox[{"{", 
         RowBox[{"cosA", ",", "cosB", ",", "cosC"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sec2A", ",", "sec2B", ",", "sec2C"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"cos2A", ",", "cos2B", ",", "cos2C"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sin2A", ",", "sin2B", ",", "sin2C"}], "}"}], "=", 
       RowBox[{"getSin", "/@", 
        RowBox[{"{", 
         RowBox[{"cos2A", ",", "cos2B", ",", "cos2C"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"csc2A", ",", "csc2B", ",", "csc2C"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"sin2A", ",", "sin2B", ",", "sin2C"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sin3A", ",", "cos3A"}], "}"}], "=", 
       RowBox[{"sinCosTripleAngle", "[", 
        RowBox[{"sinA", ",", "cosA", ",", "sin2A", ",", "cos2A"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sin3B", ",", "cos3B"}], "}"}], "=", 
       RowBox[{"sinCosTripleAngle", "[", 
        RowBox[{"sinB", ",", "cosB", ",", "sin2B", ",", "cos2B"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sin3C", ",", "cos3C"}], "}"}], "=", 
       RowBox[{"sinCosTripleAngle", "[", 
        RowBox[{"sinC", ",", "cosC", ",", "sin2C", ",", "cos2C"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sec3A", ",", "sec3B", ",", "sec3C"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"cos3A", ",", "cos3B", ",", "cos3C"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"csc3A", ",", "csc3B", ",", "csc3C"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"sin3A", ",", "sin3B", ",", "sin3C"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sinApPi3", ",", "sinAmPi3"}], "}"}], "=", 
       RowBox[{"getSinApmB", "[", 
        RowBox[{"sinA", ",", "sPi3", ",", "cosA", ",", "cPi3"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sinBpPi3", ",", "sinBmPi3"}], "}"}], "=", 
       RowBox[{"getSinApmB", "[", 
        RowBox[{"sinB", ",", "sPi3", ",", "cosB", ",", "cPi3"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sinCpPi3", ",", "sinCmPi3"}], "}"}], "=", 
       RowBox[{"getSinApmB", "[", 
        RowBox[{"sinC", ",", "sPi3", ",", "cosC", ",", "cPi3"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sinApPi6", ",", "sinAmPi6"}], "}"}], "=", 
       RowBox[{"getSinApmB", "[", 
        RowBox[{"sinA", ",", "sPi6", ",", "cosA", ",", "cPi6"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sinBpPi6", ",", "sinBmPi6"}], "}"}], "=", 
       RowBox[{"getSinApmB", "[", 
        RowBox[{"sinB", ",", "sPi6", ",", "cosB", ",", "cPi6"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sinCpPi6", ",", "sinCmPi6"}], "}"}], "=", 
       RowBox[{"getSinApmB", "[", 
        RowBox[{"sinC", ",", "sPi6", ",", "cosC", ",", "cPi6"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cscApPi3", ",", "cscBpPi3", ",", "cscCpPi3"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"sinApPi3", ",", "sinBpPi3", ",", "sinCpPi3"}], "}"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cscAmPi3", ",", "cscBmPi3", ",", "cscCmPi3"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"sinAmPi3", ",", "sinBmPi3", ",", "sinCmPi3"}], "}"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cscApPi6", ",", "cscBpPi6", ",", "cscCpPi6"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"sinApPi6", ",", "sinBpPi6", ",", "sinCpPi6"}], "}"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cscAmPi6", ",", "cscBmPi6", ",", "cscCmPi6"}], "}"}], "=", 
       RowBox[{"1.", "/", 
        RowBox[{"{", 
         RowBox[{"sinAmPi6", ",", "sinBmPi6", ",", "sinCmPi6"}], "}"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"eqns", "=", 
       RowBox[{"Get", "[", "\"\<data/x0001_0100.m\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Chop", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"trilinearToCartesian", "[", 
            RowBox[{"orbit", ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
             RowBox[{"N", "@", 
              RowBox[{"ReleaseHold", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], "]"}]}], "}"}], 
         "&"}], "/@", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"if", " ", "singles"}], " ", "\[NotEqual]", " ", 
           RowBox[{"{", "}"}]}], ",", " ", 
          RowBox[{
          "use", " ", "the", " ", "list", " ", "to", " ", "only", " ", 
           "evaluate", " ", "requested", " ", "indices"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "singles", "]"}], ">", "0"}], ",", 
          RowBox[{"eqns", "[", 
           RowBox[{"[", "singles", "]"}], "]"}], ",", "eqns"}], "]"}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7665779714978848`*^9, 3.7665780828336935`*^9}, {
   3.7665782050019903`*^9, 3.766578259099848*^9}, {3.7665783299456143`*^9, 
   3.7665785309767227`*^9}, {3.76657859022948*^9, 3.7665787262947845`*^9}, {
   3.7665788269967623`*^9, 3.766578836339048*^9}, {3.76657894430968*^9, 
   3.7665790226504974`*^9}, {3.7665792364463673`*^9, 
   3.7665792599515247`*^9}, {3.766594315312018*^9, 3.7665943194489293`*^9}, {
   3.766607404236101*^9, 3.7666075089197497`*^9}, {3.7666091715415087`*^9, 
   3.7666091739101734`*^9}, 3.766609223904434*^9, {3.7666095192623243`*^9, 
   3.766609521032593*^9}, {3.766609561270995*^9, 3.7666095691349845`*^9}, 
   3.766609635753705*^9, {3.7666096939311557`*^9, 3.7666098448724585`*^9}, {
   3.7666099661235514`*^9, 3.76661008441965*^9}, {3.7666102273943815`*^9, 
   3.766610294196725*^9}, {3.7666103407610917`*^9, 3.766610483810437*^9}, {
   3.766610519602743*^9, 3.766610627384386*^9}, {3.7666107757335634`*^9, 
   3.766610838150076*^9}, {3.7666108974960556`*^9, 3.7666111328795137`*^9}, {
   3.7666111653377333`*^9, 3.766611250855734*^9}, {3.766611284431636*^9, 
   3.7666113389121475`*^9}, {3.766611382005929*^9, 3.7666114445927486`*^9}, {
   3.7666114952483625`*^9, 3.766611694819458*^9}, {3.766611927974598*^9, 
   3.7666119370145683`*^9}, {3.766611969711301*^9, 3.766611982044326*^9}, {
   3.7666127087934775`*^9, 3.7666127146975017`*^9}, {3.7666157361725016`*^9, 
   3.766615740556909*^9}, {3.7666160611024413`*^9, 3.766616069029397*^9}, {
   3.7666165975604615`*^9, 3.7666166316303997`*^9}, {3.766617039249529*^9, 
   3.766617042518789*^9}, {3.7666171058483*^9, 3.766617107909788*^9}, {
   3.766617154041812*^9, 3.766617157538463*^9}, {3.766617405870909*^9, 
   3.766617411423091*^9}, {3.766617506776169*^9, 3.7666175104403725`*^9}, {
   3.7666176705132427`*^9, 3.766617679361104*^9}, {3.7666177856304607`*^9, 
   3.7666177864781675`*^9}, {3.766618459522672*^9, 3.7666184775478296`*^9}, {
   3.7666268400193453`*^9, 3.7666268426264024`*^9}, {3.766676566653376*^9, 
   3.7666766052655954`*^9}, {3.7666773525573406`*^9, 3.76667735440141*^9}, {
   3.7666825059854527`*^9, 3.7666825075073833`*^9}, 3.766682542545766*^9, 
   3.7666828379407234`*^9, 3.7666829368270535`*^9, 3.7666830243805723`*^9, {
   3.7666830727582293`*^9, 3.7666831034232426`*^9}, {3.766683138766748*^9, 
   3.7666834688512783`*^9}, {3.766683512214215*^9, 3.766683524912539*^9}, {
   3.7666836429500237`*^9, 3.766683898765238*^9}, {3.766684648023147*^9, 
   3.7666846528931265`*^9}, 3.766684858004974*^9, {3.766684894837695*^9, 
   3.7666849100583916`*^9}, {3.766684961462989*^9, 3.766684993779695*^9}, {
   3.766685979478453*^9, 3.766686008634529*^9}, {3.7666865345664186`*^9, 
   3.7666865431341414`*^9}, {3.7666889850740967`*^9, 3.766688992847258*^9}, {
   3.766775584272298*^9, 3.766775622294676*^9}, {3.7667758339942193`*^9, 
   3.7667758488797293`*^9}, {3.766788796034089*^9, 3.766788799978543*^9}, {
   3.7667889915159235`*^9, 3.766788994512911*^9}, {3.7667894154795127`*^9, 
   3.766789520328484*^9}, {3.766789608092081*^9, 3.7667896626013937`*^9}, 
   3.766789708908337*^9, {3.7667898620965443`*^9, 3.766789881835886*^9}, {
   3.7667901746216335`*^9, 3.7667901960903807`*^9}, {3.7667902275203495`*^9, 
   3.7667902407064295`*^9}, {3.7667903034795933`*^9, 3.766790473628872*^9}, {
   3.7668285638250847`*^9, 3.7668285930252357`*^9}, {3.766828627928946*^9, 
   3.7668286289163055`*^9}, {3.766828674881161*^9, 3.766828823600153*^9}, {
   3.7668288830082912`*^9, 3.7668288921541905`*^9}, {3.7670102568009477`*^9, 
   3.767010313684351*^9}, {3.767011352395379*^9, 3.7670113534176445`*^9}, {
   3.767011385570632*^9, 3.767011386721553*^9}, {3.7672654158072395`*^9, 
   3.767265428635314*^9}, {3.770381431304043*^9, 3.770381436093238*^9}, 
   3.770533817913033*^9, {3.770533857441392*^9, 3.770533861560384*^9}, {
   3.77127209052901*^9, 3.7712720911533413`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"centerEqns", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"TraditionalForm", "@", 
      RowBox[{"First", "@", 
       RowBox[{"First", "@", "#"}]}]}], "&"}], "/@", 
    RowBox[{"List", "@@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Second", "@", "#"}], ")"}], "&"}], "/@", 
       RowBox[{"Get", "[", "\"\<data/x0001_0100.m\>\"", "]"}]}], ")"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"centerNames", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<: \>\"", "<>", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "&"}], "/@", 
    RowBox[{"Quiet", "@", 
     RowBox[{"getNewCenters", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"RotateLeft", "@", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", 
          RowBox[{"Sqrt", "[", "2.", "]"}]}], "}"}]}]}], "]"}]}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.770533910661165*^9, 3.770533915573041*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "newCenters"}], ";", 
  RowBox[{
   RowBox[{"newCenters", "[", 
    RowBox[{"a_", ",", "t_", ",", 
     RowBox[{"singles_:", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"orbit", ",", "normals", ",", "sides"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"orbit", ",", "normals"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"orbit", "=", 
       RowBox[{"Reverse", "@", "orbit"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sides", "=", 
       RowBox[{"triLengthsRL", "@", "orbit"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"getNewCenters", "[", 
       RowBox[{"orbit", ",", "sides", ",", "singles"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.766578870741023*^9, 3.766578921597373*^9}, {
   3.7665790357025995`*^9, 3.7665791029497433`*^9}, {3.766613953156332*^9, 
   3.766614003171566*^9}, {3.7666140407650814`*^9, 3.766614042725814*^9}, {
   3.7667897189355574`*^9, 3.766789727933124*^9}, {3.7885336827819376`*^9, 
   3.7885336860540504`*^9}, 3.788533763293496*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Basic Clrs and Drawing", "Section",
 CellChangeTimes->{{3.7660465135154676`*^9, 3.766046531309363*^9}, {
  3.7661318998438396`*^9, 3.766131908205478*^9}, {3.7681719174738703`*^9, 
  3.7681719431596155`*^9}, {3.768680885039075*^9, 3.768680889767431*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ptClrs", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<ell\>\"", "\[Rule]", "Black"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<med\>\"", "\[Rule]", "Black"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<bar\>\"", "\[Rule]", "Purple"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<inc\>\"", "\[Rule]", 
      RowBox[{"Darker", "@", "Green"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<ort\>\"", "\[Rule]", "Orange"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<cir\>\"", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<npc\>\"", "\[Rule]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1.", ",", "0.02", ",", "0.3"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<exc\>\"", "\[Rule]", 
      RowBox[{"Darker", "@", "Green"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<ex12\>\"", "\[Rule]", 
      RowBox[{"Darker", "@", "Green"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<ex23\>\"", "\[Rule]", 
      RowBox[{"Darker", "@", "Green"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<ex31\>\"", "\[Rule]", 
      RowBox[{"Darker", "@", "Green"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<feu\>\"", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "0.5", ",", "0.27"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<antifeu\>\"", "\[Rule]", "Orange"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<x88\>\"", "\[Rule]", "Cyan"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<nag\>\"", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<mit\>\"", "\[Rule]", 
      RowBox[{"Lighter", "@", "Blue"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<sym\>\"", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<ger\>\"", "\[Rule]", "Pink"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<spi\>\"", "\[Rule]", 
      RowBox[{"Darker", "@", "Cyan"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<nap\>\"", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<hex\>\"", "\[Rule]", "Pink"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "overrides", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\"\<red\>\"", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<green\>\"", "\[Rule]", "Green"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<blue\>\"", "\[Rule]", "Blue"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAmIQPenwUfa3fG8cr2zYJQKiVyh+kQDRHI95pUB01udb
iiB63sJDaiD6X/oPLRA9n2mzNoiWWrzGA0QbvEv2BtFiIowc74C0wJo2MP2A
bf9vbf43jseUWJh0gLQ5X8fcLiD97GztAhA9e779fRC9rGDHAxD9J+g2+24g
LeClygGij0zm3HAZSMd0F28C0VOSGy6B6LL53WA6wfzcqStAesbC0NMgWtN9
ltR1IJ1yfz6YvvdEbO5zIL2jasMCEP3slBqThsAbR5PGfjBdZsvCqwmk+5Qn
C4LoBdcEehyB9KHQ2/0getv6NGknIJ3W8g5Mm7yYZVUr+MbxjMQaGxCt9VrV
eDWQvny6AUw73FOdC6K/hC4G03ULIm7sEHrjuC5xKZi249xf6y/8xlFBXrkO
RLesndUMom/ZzgfTQTMWtoPof+2rwDQAQhrGHw==
  "]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "plotEllb"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotEllb", "[", 
    RowBox[{"a_", ",", "b_", ",", 
     RowBox[{"clr_:", 
      RowBox[{"(", 
       RowBox[{"\"\<ell\>\"", "/.", "ptClrs"}], ")"}]}]}], "]"}], ":=", 
   RowBox[{"Graphics", "@", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"SameQ", "[", 
       RowBox[{"clr", ",", "None"}], "]"}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ListQ", "@", "clr"}], ",", 
          RowBox[{"Sequence", "@@", "clr"}], ",", "clr"}], "]"}], ",", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}]}], "]"}]}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "plotEll"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotEll", "[", 
    RowBox[{"a_", ",", 
     RowBox[{"clr_:", 
      RowBox[{"(", 
       RowBox[{"\"\<ell\>\"", "/.", "ptClrs"}], ")"}]}]}], "]"}], ":=", 
   RowBox[{"plotEllb", "[", 
    RowBox[{"a", ",", "1", ",", "clr"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.765805438346921*^9, 3.765805452178815*^9}, {
   3.7659239734825225`*^9, 3.7659239900008445`*^9}, {3.7659695346167374`*^9, 
   3.765969564159203*^9}, 3.766131157133317*^9, {3.7667405762590165`*^9, 
   3.766740627875462*^9}, {3.768753980975149*^9, 3.7687539942635136`*^9}, {
   3.768754337248274*^9, 3.7687543568659086`*^9}, {3.769245467409256*^9, 
   3.7692454692892003`*^9}, {3.771618340077196*^9, 3.771618340910999*^9}, {
   3.7716190533108606`*^9, 3.771619246680105*^9}, {3.7716193897125344`*^9, 
   3.7716193999990425`*^9}, {3.7716197754001784`*^9, 
   3.7716197781109333`*^9}, {3.771619884546543*^9, 3.771619885578759*^9}, {
   3.7716201513369226`*^9, 3.7716201757197604`*^9}, {3.771620206073209*^9, 
   3.7716202104159703`*^9}, {3.7716203202568398`*^9, 
   3.7716203207605124`*^9}, {3.771620351405613*^9, 3.7716203528966565`*^9}, {
   3.771623711546436*^9, 3.7716237119902506`*^9}, {3.7716237489175625`*^9, 
   3.7716238021164184`*^9}, 3.7716724053009605`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "plotEllFillb2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotEllFillb2", "[", 
    RowBox[{"a_", ",", "b_", ",", "clrFill_", ",", 
     RowBox[{"clr_:", 
      RowBox[{"(", 
       RowBox[{"\"\<ell\>\"", "/.", "ptClrs"}], ")"}]}]}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"clrFill", ",", "None"}], "]"}], ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ListQ", "@", "clrFill"}], ",", 
            RowBox[{"Sequence", "@@", "clrFill"}], ",", "clrFill"}], "]"}], 
          ",", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"a", ",", "b"}], "}"}]}], "]"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"clr", ",", "None"}], "]"}], ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ListQ", "@", "clr"}], ",", 
            RowBox[{"Sequence", "@@", "clr"}], ",", "clr"}], "]"}], ",", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"a", ",", "b"}], "}"}]}], "]"}]}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "plotEllFill"}], ";", 
  RowBox[{
   RowBox[{"plotEllFill", "[", 
    RowBox[{"a_", ",", "clrFill_", ",", 
     RowBox[{"clr_:", 
      RowBox[{"(", 
       RowBox[{"\"\<ell\>\"", "/.", "ptClrs"}], ")"}]}]}], "]"}], ":=", 
   RowBox[{"plotEllFillb2", "[", 
    RowBox[{"a", ",", "1", ",", "clrFill", ",", "clr"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.771620406464117*^9, 3.7716205155513945`*^9}, {
  3.7716234420603228`*^9, 3.771623505404565*^9}, {3.7716235485092306`*^9, 
  3.771623590725685*^9}, {3.771623640429352*^9, 3.77162367182844*^9}, {
  3.7716237134443913`*^9, 3.771623740092148*^9}, {3.7716721878205185`*^9, 
  3.771672229828339*^9}, {3.7716723424236517`*^9, 3.7716723872208633`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"drawArrow", "[", 
    RowBox[{"p0_", ",", "phat_", ",", "l_"}], "]"}], ":=", 
   RowBox[{"Arrow", "[", 
    RowBox[{"{", 
     RowBox[{"p0", ",", 
      RowBox[{"ray", "[", 
       RowBox[{"p0", ",", "phat", ",", "l"}], "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "plotEllbAxesLow"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotEllbAxesLow", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"Graphics", "@", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Gray", ",", 
      RowBox[{"Thickness", "@", "Medium"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Line", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "a"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", "0"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Line", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "b"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "b"}], "}"}]}], "}"}]}]}], "}"}]}], "}"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7908691595000863`*^9, 3.7908691720590296`*^9}, {
  3.7908692276785393`*^9, 3.790869234538641*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "plotEllAxesLow"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotEllAxesLow", "[", "a_", "]"}], ":=", 
   RowBox[{"plotEllbAxesLow", "[", 
    RowBox[{"a", ",", "1"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7908691020511723`*^9, 3.7908691885538874`*^9}, {
  3.790869231445201*^9, 3.790869242739088*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "plotEllAxes"}], ";", 
  RowBox[{
   RowBox[{"plotEllAxes", "[", 
    RowBox[{"a_", ",", 
     RowBox[{"clr_:", 
      RowBox[{"(", 
       RowBox[{"\"\<ell\>\"", "/.", "ptClrs"}], ")"}]}]}], "]"}], ":=", 
   RowBox[{"Graphics", "@@", 
    RowBox[{"Show", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"plotEll", "[", 
        RowBox[{"a", ",", "clr"}], "]"}], ",", 
       RowBox[{"plotEllAxesLow", "[", "a", "]"}]}], "}"}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "plotEllbAxes"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotEllbAxes", "[", 
   RowBox[{"a_", ",", "b_", ",", 
    RowBox[{"clr_:", 
     RowBox[{"(", 
      RowBox[{"\"\<ell\>\"", "/.", "ptClrs"}], ")"}]}]}], "]"}], ":=", 
  RowBox[{"Graphics", "@@", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"plotEllb", "[", 
       RowBox[{"a", ",", "b", ",", "clr"}], "]"}], ",", 
      RowBox[{"plotEllbAxesLow", "[", 
       RowBox[{"a", ",", "b"}], "]"}]}], "}"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7908692460209055`*^9, 3.7908692935012007`*^9}, {
  3.790869352365934*^9, 3.790869446892967*^9}, {3.790869494533513*^9, 
  3.790869499705784*^9}, {3.7917266285805874`*^9, 3.7917266578209367`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["N = 4 Caustic and its Orthoptic Circle", "Section",
 CellChangeTimes->{{3.792709838876404*^9, 3.792709857478913*^9}}],

Cell[CellGroupData[{

Cell["\<\
This computes the point the horizontal N = 4 rectangle touches the (a, b) \
billiard\
\>", "Subsubsection",
 CellChangeTimes->{{3.792710297175068*^9, 3.7927103133027024`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"upperRightN4", "[", "a_", "]"}], "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"y", ",", "grad", ",", 
      RowBox[{"v", "=", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], ",", "eqn", ",", "xsol", ",", 
      "ysol"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"y", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "/", "a"}], ")"}], "^", "2"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"grad", "=", 
      RowBox[{"ellGrad", "[", 
       RowBox[{"a", ",", "x", ",", "y"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"eqn", "=", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"refl", "[", 
           RowBox[{"v", ",", "grad"}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"a", ">", "1"}], "&&", 
         RowBox[{"(", 
          RowBox[{"0", "<", "x", "<", "1"}], ")"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xsol", "=", 
      RowBox[{"Second", "[", 
       RowBox[{"x", "/.", 
        RowBox[{"Solve", "[", 
         RowBox[{"eqn", ",", "x"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ysol", "=", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"y", "/.", 
         RowBox[{"{", 
          RowBox[{"x", "\[Rule]", "xsol"}], "}"}]}], ",", 
        RowBox[{"a", ">", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xsol", ",", "ysol"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7927098741842213`*^9, 3.7927102912629566`*^9}, {
  3.792710328144038*^9, 3.7927103406475935`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    SuperscriptBox["a", "2"], 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox["a", "2"]}]]], ",", 
   FractionBox["1", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox["a", "2"]}]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.7927099166438365`*^9, 3.792709941803111*^9}, 
   3.792710012297343*^9, {3.7927100666249495`*^9, 3.7927100727904587`*^9}, {
   3.79271010349749*^9, 3.7927101307859964`*^9}, {3.7927101609413443`*^9, 
   3.792710201739397*^9}, {3.792710259568725*^9, 3.79271029177282*^9}, 
   3.7927103413227606`*^9, 3.7959581919723835`*^9, 3.796070484139488*^9, 
   3.7961155619482956`*^9, 3.7961274048761883`*^9, 3.7962220329527855`*^9, 
   3.796301439500501*^9, 3.7963163629360046`*^9, 3.79642039536771*^9, 
   3.796422100197075*^9, 3.796422452998868*^9, 3.796568921945281*^9, 
   3.7965689702819333`*^9, 3.796663722340873*^9, 3.7969293485168123`*^9, 
   3.7969294848768415`*^9, 3.797098705797807*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"areaN4", "[", "a_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "ur", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ur", "=", 
      RowBox[{"upperRightN4", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"4", 
      RowBox[{"ur", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "*", 
      RowBox[{"ur", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7927111262445593`*^9, 3.792711210070471*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"areaN4", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.792711213059482*^9, 3.792711215981018*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", 
   SuperscriptBox["a", "2"]}], 
  RowBox[{"1", "+", 
   SuperscriptBox["a", "2"]}]]], "Output",
 CellChangeTimes->{3.7927112162552853`*^9, 3.795958192733348*^9, 
  3.7960704841654177`*^9, 3.7961155619759746`*^9, 3.7961274049100947`*^9, 
  3.7962220329982977`*^9, 3.796301439535408*^9, 3.796316363257362*^9, 
  3.7964203953956633`*^9, 3.796422100223976*^9, 3.7964224531674175`*^9, 
  3.796568921968495*^9, 3.7965689703018084`*^9, 3.796663722387013*^9, 
  3.7969293486468134`*^9, 3.7969294848957915`*^9, 3.7970987059474072`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"areaN4caustic", "[", "a", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "ur", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ur", "=", 
      RowBox[{"upperRightN4", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Pi]", " ", 
      RowBox[{"ur", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "*", 
      RowBox[{"ur", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7927112261169386`*^9, 3.792711246117872*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"areaN4caustic", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.792711256597843*^9, 3.792711261438752*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["a", "2"], " ", "\[Pi]"}], 
  RowBox[{"1", "+", 
   SuperscriptBox["a", "2"]}]]], "Output",
 CellChangeTimes->{3.79271126177685*^9, 3.795958192871019*^9, 
  3.7960704841903524`*^9, 3.7961155620088863`*^9, 3.7961274049470005`*^9, 
  3.7962220330448413`*^9, 3.796301439569317*^9, 3.7963163632832923`*^9, 
  3.796420395421607*^9, 3.7964221002509036`*^9, 3.796422453191354*^9, 
  3.796568921991302*^9, 3.7965689703247476`*^9, 3.796663722429847*^9, 
  3.7969293486717463`*^9, 3.7969294849167185`*^9, 3.7970987059693484`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"radiusBilliardOrthoptic", "[", "a_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"a", "^", "2"}], "+", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"radiusCausticOrthoptic", "[", "a_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"a", "^", "4"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"a", "^", "2"}]}], ")"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7927129377059555`*^9, 3.7927129749717846`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"upperRightN4", "[", "a", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"radiusCausticOrthoptic", "[", "a", "]"}], ",", 
     RowBox[{"radiusBilliardOrthoptic", "[", "a", "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"radiusBilliardOrthoptic", "[", "a", "]"}], "-", "1"}], ")"}],
       "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"radiusCausticOrthoptic", "[", "a", "]"}], "-", "1"}], 
       ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1.01", ",", "3"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Medium"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<a\>\"", ",", "\"\<radius\>\""}], "}"}]}], ")"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", "Medium"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Medium"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(b\), \(caustic\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(R\), \(caustic\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(R\), \(billiard\)]\)\>\""}], "}"}]}], 
     ")"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.792746385963195*^9, 3.7927467204343224`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVkHs01HkchscM84uQ1OrmMjYp17UM6VCfr9wqJ7cpe1wGFbFFtRuq2W5M
TcJymkqSQ6uzGhkVW3RxakLJUomvMdIMM5NZE9VozWAmrP3jPe95zvvHc85r
u/tgZDKZRCJtn8//vcMr65V6nQoy5U6/PmIrQHffri3TSQW5o3X+U9kKqPTs
EahdVGASbbXB67QCxulu99TuKgj9saWo/rgCCj0+lqp9VSCtoX3iZyrgpVt8
qjpcBZTFjQd4KQrwdQqiqI+qQLWIIXgUogA7msWGiZcqiH33eVXoUgVMOVuK
UrLGIfWwcYpD+TCsun1dGbf8KzS0OISluQ/DS7Gq1q7xKwxblNIDOj4Ay+3m
n7v2/At2rs5ZjvHzPDmwiKY/AefD7pjOaOVwUppVy6ifAL7fitbdXDmYsMQz
0Uw1bLjdfuuyqxw+cpoF0m9qYD0p8jXGMuhsMGmUVGsgtjh8bUWGDGZi+myY
IZOw/EDeEXNrGTyoTfO5rZyEhFYL3e8dUji6OjUv4/IU2FWPPOdmSIFjIgtp
8pyG/cTM46drpFCyshkdk08Dzbs4uL17CDyF6SMLCrXgqhqvb2MPAY1aQl7p
ooPSiNkTXr5DYBa9Lvx6vw4EPWuX8aSDEEZbb8ZjfYNn/vm5etGDcMGIT1nj
MAPxDR7JPu0SiL8xVp2BZyC71U4TjCTAulvTHJgxC963Ai/Zt4qhdKjLtMB2
DhLjbVcm+4nB8GzGK0bLHHCLj3Lb/34PemO/2Ey6kdC+kkZTXvR7IN18Pz7L
ISFrXnrHDtkA2JdxTgT3kVD9c6M2s6wBeF0pr9zmqocqKowOTFMGoOl0lW0j
Ww99tqyMWX3lHbwt4UUn9eghmci7OJb+DlKbmU6dDmTUH+wzYtnZD/b2kQ0Z
LDLiXzy//ef0fnDcxS/ltJMRtX6B5It5P9ytfbicYUNBhXRqRcRfImDSqeGJ
BymoqPzj1rQ4ERR0Gtiue0FB2zKf/VZNEoGsPKDGbZk+aonV/eNW2wcntygL
K/fqoySnI8w4Zh+UUfyM3zTpo+zAQ2TVgj6QTvVt9jUxQMxprtCySQi8Odsl
SUkGKIBsd/HzPiHcF7/1VT80QF1hxrl+VkJQqgU2bYZUlFehX5Qv7IUKmz1l
jEQqGhRVRTXm98JxdkA3rY6KLIZaW84Fz+9P8nf9RCJQWbHSik7thYCFnLwt
UQRyKDLcNC3AYMZ9msaqItDBs2O5kmwMS19ocoZuEkienDLVdhrDMq3L1aBq
Au00E7DrTmGw3l323JxPoGYX3aczJzA4ux+zrqkjkGmpk5nLMQzB3e5dA00E
ihtYlJtzCMNJ8yqPjT0ECmaLHTcnYMgJEm+9gQkkvHPB9Id4DGdZSxMNhQTa
6MMzsWRiKJDlFPSKCCRw/sTUxGC4Wp8wnC4h0Kbu/UH8KAz3IldcKVcSaDNJ
6WEViuEBJ7xWf5RATQ+1HQu3Y3j86FzLvjECsb9zP6UNwdD8veaL1xcC+Vwj
rxdtxdD1tXvLmwkCOUU9G70UiAHbGyV4aggUeqk47kwAhr4Yv8xrkwQaYRwe
OeyPQdJ8548ULYFoDHoEww+DVKNofKUjkIv5Yld/hOGDo/Vrj5l5X4RijQdg
GInf+eHq7PyfkXe9V2/CMMot0M7NEWgwav/eJRsx/AfFSU5f
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVjWdQk3ccgEPG/xUKStWKjAukDRREeimIHkN/P3oREbRShoOTEcGFgrUG
DqOC1Rp7lKKAA5ADhZOhRASVVao5tIgtIiMarbKCWFCqLyEDAyGlH557Pj33
8HYcCNvJZDAYG+f43xErUx9rXWlgeT6wb1lMw/Qd/sMUdxraWIWB7CU0lHr3
yrUeNAxWJ45vsKFhYoXgttaTBkHnT5UDtjRke70t1PrT4JARMWDhSEO7IGaP
NpSGjKfzPNLcaPB3D2Rp02iIs/teLFtDA99piY+mnYYLo98ZjiTSMLXc4fnu
1Algto7r857QYH/j8tj2pWqYZHIV1t4T0N5Hy/gNagjo1MTeKp4AiaDiqih+
Et5GcJ0LbNQg0b9c4MTWgDiv6bjyVzWkD6XKwus0IF2gqN2yaBKsJH3GbdFa
KA4WRYRemuukrfKhGS1Ebgw+YsvVQEe9VUN/lQ6+Ddmg66jRgDFK6RgdoocL
HdIf7Py00Cjb73djTA+Wzhdrktu0kPbFnkzx+Sn4+bJHRnycDqRWqpAW74/w
wCMvPF6tg3y7Vjw8/BFSC4MS3ufqwftZ0ui8bANU+bxoKPScAieSz7TzmIZ3
Xbeeuz2aAuttrqGXX0xD0meindbJH2GT0yrrSskMxJoGZsLMDZBjUc1ydjPC
v4pDzX11BogpG68SK4wgnOQfyoiaBsnN661rxbOw36ZL2K2fhsLBrvlZPBOc
ynT7M7hsBsxPiR+H3zcBb7PprovQCGbjBx31Agau1WzcfFRlBEbFq4lZKQM/
DEjmD2fPgkuR9Ng6JQMPVbgc2yAwQWfpcGnwV2YYJjhdfG/ABC3Hy3kNJ82Q
l3a+0SeQgd35ldsSes0wySc2Tn2BgXtao9073Jjo96VMXPmegS4uYfViCRMD
IhWVMjTDZaLqQukjJr7xq8v2yjHDm7KmpeGOLJzpP5hYO2qG0StIaNwBFr76
0Tp6ny8Tszo4PNc2FkaV751nn8dEVbHwusCGjQZVyrBxhInpQWPZpbvYeM0m
Xr1pFQuLWAGWT1rYmNyT0J53hoVDU8pv/K04mGZv+TVDxcJKE29RQgIHe1V8
yXY/Nt7p6/bXNnEwrkSe45THxjGt3PGhOcHBkLFBzggbSxzji8LjCNZ3us0q
V3Pw6Elhj1MtQWfTm0/bz3Kw5O4voi0MCvtmwrbaqjgo/ESaGbSZQm5y6kCE
L0Hr3Hv7JeUUOu8KUFzLIri4TXdisILCNX9nS+yyCdoYPAoCqyjMae53yjxD
kLuj6I+F1RQa/vopaW8uweWeh7nXaynszxomrvkE1/V4dr1sodDhXr3P1TKC
6QvLvVb3Unjk0qLikmaCJwL71pcpKGy66Ctc0ELwlGRxnPkzCpfnb3+b/jvB
LNWJrKfPKXSXn10ZIydYUBc7ktRP4Yt9tzod2gjeDrO9WDxGYc3pm8aCboKN
0lAZ+x2F5XZJZea9BH9rPn0/cZxCX1fe+sMKgq2f6z6s/EBhviL53FYlwS51
T9ATDYVXRIXLbPoIKlwsYr11FK5utOyS9hNURgWkXNJT+L5TnKIbINjfWnNl
t4HCcJGz/KmK4JDuTcPj6bnfgaSda18TfL2M2+llpDAi/prFnRGCozGRrwtm
53rOqxr+PwTf5WYZTCYK+Txm5LlRgv8BQkBCfA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVz3tUk2UcwPF37y7PXoPwKKQZOSZXnZclDlAXz2+GgJFJgBc4chWSuGgQ
kC4knYeZRiSUCMoBheQicpFEdCLoEMEjQxQBDVGHoE45MYG9G4yx7I/v+fz9
5UftDYghCYLY/L7/DXJLU+lctDg8en1i+XUaGxsc2lMFWnwr8seNe1poXCLq
uaFbocWJzRkguknjd2uEl3SrtTjF1FXUeovG2a5vTunEWizuzTGq79K4QxgW
q/PX4ldfH13p+A+NxQJvpm6fFrdoXkraaBo72H20drJDi91VPZFxQj02LLd9
tDvtHa5ZmpzkWKvHn9Sc0excOI7TDpzolTsbcMegttqhcRyn/67MCyk2YKmw
/Fzkrgk8FTr6p6f9FJbqB6zsWJO4uIsfwT4zhTPUadWB9ZNY7Xe5fcplGltK
B03BoTpsEW6zzubiNH4jV95Qz+jw+eSRPXs+M+LOy5aNTytpHBx2yIFqNmJT
SD8v1E+PV03UyI5vmMFXqhPW12j0uJR8dud02wzeZx97LOWEAT/e5swzBpmw
3HLIr0k0hc8fEdzvHjDh/EVK2P9iCidrj+y32juLRX2Jr7nZ07hhWFBXTpix
HSefXLTCiP9tQWXfHDXjucEu/mceG7H3diJmnRUBW+zc51ZIZ3CubIIr3kpA
zpwLTMelJuzoY+qWnSUgrHS0MuWhCaffPeuiGiVAWlel3Jgyi1knBxoiXRlw
6nn3h1l8M865qdi94SADqMwUVWCrGf9iey03pIMBjNEknl5IgN6cVOpvRQJR
/uTdrJyA713cAwp2kuBUKD/g009AlPureNNfJHSVvCj5ciUD/q4Y+0MxQULT
wTJ+42EGqKKtuJslTLifXxEc3cOAkS2ePw0dZUKsMlTQuZSEzCheXd8jJjg5
BVxOkZLAK6Ov3lzCgmWRF07J75Awez23+Lt4FtRVX10YyGPCyjXVP6cqWBC6
huMfsZcJ8l2952JYbMjqZPNdbjOB8Myvbw5iw1CRV5VwAQtiUm/HjRezIcNX
k13yLQvSa3fY9mrYUMiUWNxrYoG97VsPx3UcUBv6N4gt2fDC0t1NksmBCjN/
fnQ0GxQkr7OrjwMNg/fFuqts8B+Oy0POCDS6G7x2igO3svJszEkIinm7CgMj
ODDfhxQktCJIP+z1wO4iBwQTW7flWHGhuPnXyO0EAoGhMD4ohAteH8iP+W5D
0OqhVhyv4sLc3JYEaRkCC5lEKdVzwfo2LXtejsCzjjKoDFxYML2iwLsSwb2B
56v401xYHFXYNu8CgusDinPtM1xYvnr/4qqLCNB26/PWJAU+D1Z3DzQhELpZ
29RaUJAxr8z18x4ElWNk8gifApn34KbShwiciyiNhz0FmVLrCKoPQdeYdVSW
AwVZQ7Ks3kcIlCKPEFdnCgrqw0cSnyKYCK+IOrScgksBH58s0iBwI1/3fOpO
wRW5fzXr7fvvK/PikzwouKY40ho3imDBrJjVtpYC5RJ6zG0MQdFktjhBTEH3
+APfe5MI6lt4bQoJBQ+d5oSLaAQGO8+ED7+goD9Eknpaj+DJb8E2UV4UPFXW
nt09jWBkkzyR8qFATb9sVBkRPDPk2Yb6UjC8bHGXqwnBsh9KVXWbKHgdtnW4
YBbB49iqgyw/Ct7mZk2bzQisjtWIdnxFwX83KzFO
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
XY4dVioJDM0R/veCyv8D9eoV5Q==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox["\"radius\"", Medium, StripOnInput -> False], 
         TraditionalForm], None}, {
        FormBox[
         StyleBox["\"a\"", Medium, StripOnInput -> False], TraditionalForm], 
        None}}, FrameStyle -> Medium, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{1.01, 3}, {0., 5.5298199304912}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(b\\), \\(caustic\\)]\\)\"", Medium, 
        StripOnInput -> False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(caustic\\)]\\)\"", Medium, 
        StripOnInput -> False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(billiard\\)]\\)\"", Medium, 
        StripOnInput -> False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.792746661121614*^9, 3.7927467217218513`*^9}, 
   3.7959581939212017`*^9, 3.7960704852225633`*^9, 3.7961155622501864`*^9, 
   3.796127405178352*^9, 3.796222033340398*^9, 3.7963014405217996`*^9, 
   3.79631636475412*^9, 3.7964203963082275`*^9, 3.7964221005062227`*^9, 
   3.7964224534446764`*^9, 3.7965689223828945`*^9, 3.7965689704906273`*^9, 
   3.7966637226489124`*^9, 3.7969293493220067`*^9, 3.7969294851531076`*^9, 
   3.79709870623065*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"TrigExpand", "["}]], "Input",
 CellChangeTimes->{{3.792753563422268*^9, 3.792753565099782*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData["\n"], "Input",
 CellChangeTimes->{3.792746452219166*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The ratio of billiard orthoptic radius to caustic orthoptic radius is the sum \
of the coordenates of P1, the TL vertex of the sideways N = 4 orbit!\
\>", "Subsubsection",
 CellChangeTimes->{{3.792712993989246*^9, 3.7927130260207243`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"radiusBilliardOrthoptic", "[", "a", "]"}], "/", 
    RowBox[{"radiusCausticOrthoptic", "[", "a", "]"}]}], ",", 
   RowBox[{"a", ">", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.792712471023799*^9, 3.792712514005557*^9}, {
  3.7927129779657764`*^9, 3.7927129912053385`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", 
   SuperscriptBox["a", "2"]}], 
  SqrtBox[
   RowBox[{"1", "+", 
    SuperscriptBox["a", "4"]}]]]], "Output",
 CellChangeTimes->{{3.7927125083819227`*^9, 3.792712514360583*^9}, 
   3.792712991812598*^9, 3.795958194643237*^9, 3.7960704856743836`*^9, 
   3.7961155627787333`*^9, 3.796127405683999*^9, 3.7962220340185814`*^9, 
   3.7963014408848*^9, 3.796316365673174*^9, 3.796420396913577*^9, 
   3.7964221010936832`*^9, 3.7964224535962996`*^9, 3.7965689229078555`*^9, 
   3.7965689706091595`*^9, 3.7966637230848413`*^9, 3.7969293495393977`*^9, 
   3.796929485318633*^9, 3.797098706375293*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"areaOrthopticBilliard", "[", "a_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "R", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"R", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"a", "^", "2"}], "+", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Pi]", " ", 
       RowBox[{"R", "^", "2"}]}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7927112636817627`*^9, 3.7927113005334744`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"areaOrthopticCausticN4", "[", "a_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "R", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"R", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"a", "^", "4"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"a", "^", "2"}]}], ")"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Pi]", " ", 
       RowBox[{"R", "^", "2"}]}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7927113020414143`*^9, 3.792711330606064*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"a", "^", "4"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"a", "^", "2"}]}], ")"}]}], "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.792712084541973*^9, 3.792712087100108*^9}}],

Cell[BoxData[
 FormBox[
  SqrtBox[
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "4"], "+", "1"}], 
    RowBox[{
     SuperscriptBox["a", "2"], "+", "1"}]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.7927120876266985`*^9, 3.7959581949135447`*^9, 
  3.7960704857142763`*^9, 3.796115562821171*^9, 3.7961274057298765`*^9, 
  3.796222034091234*^9, 3.796301440935664*^9, 3.7963163657452135`*^9, 
  3.7964203969544983`*^9, 3.7964221011305513`*^9, 3.7964224536312103`*^9, 
  3.7965689229447947`*^9, 3.79656897064392*^9, 3.796663723148633*^9, 
  3.7969293498485713`*^9, 3.796929485347556*^9, 3.797098706406212*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Factor", "[", 
   RowBox[{
    RowBox[{"areaOrthopticBilliard", "[", "a", "]"}], "/", 
    RowBox[{"areaOrthopticCausticN4", "[", "a", "]"}]}], "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.7927113319803877`*^9, 3.792711393932768*^9}}],

Cell[BoxData[
 FormBox[
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["a", "2"], "+", "1"}], ")"}], "2"], 
   RowBox[{
    SuperscriptBox["a", "4"], "+", "1"}]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.7927113501818953`*^9, 3.792711394252915*^9}, 
   3.7959581949723577`*^9, 3.7960704857302384`*^9, 3.796115562841118*^9, 
   3.7961274057498226`*^9, 3.7962220341191597`*^9, 3.7963014409556103`*^9, 
   3.7963163657611732`*^9, 3.7964203969744153`*^9, 3.796422101146539*^9, 
   3.7964224536441426`*^9, 3.7965689229582872`*^9, 3.7965689706558876`*^9, 
   3.796663723172268*^9, 3.7969293498615365`*^9, 3.7969294853575296`*^9, 
   3.7970987064171515`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"orthoRcausticN4", "[", "a_", "]"}], "=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Apply", "[", 
      RowBox[{"Plus", ",", 
       RowBox[{
        RowBox[{"upperRightN4", "[", "a", "]"}], "^", "2"}]}], "]"}], ",", 
     RowBox[{"a", ">", "1"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7927105649460077`*^9, 3.7927106278555975`*^9}}],

Cell[BoxData[
 SqrtBox[
  FractionBox[
   RowBox[{"1", "+", 
    SuperscriptBox["a", "4"]}], 
   RowBox[{"1", "+", 
    SuperscriptBox["a", "2"]}]]]], "Output",
 CellChangeTimes->{{3.792710568891456*^9, 3.7927106282854204`*^9}, 
   3.795958195330575*^9, 3.7960704857481575`*^9, 3.796115562864827*^9, 
   3.796127405766778*^9, 3.7962220341460876`*^9, 3.7963014409745593`*^9, 
   3.7963163658155475`*^9, 3.7964203969923944`*^9, 3.7964221011644897`*^9, 
   3.7964224536610985`*^9, 3.7965689229759336`*^9, 3.796568970668853*^9, 
   3.79666372319691*^9, 3.796929349875499*^9, 3.7969294853684998`*^9, 
   3.797098706432111*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"drawN4", "[", "a_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ell", ",", "ellCaustic", ",", "ur", ",", "vs", ",", "gr", ",", 
       "orthoR", ",", "orthoRcaustic"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ur", "=", 
       RowBox[{"upperRightN4", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"vs", "=", 
       RowBox[{"{", 
        RowBox[{"ur", ",", 
         RowBox[{"flipX", "@", "ur"}], ",", 
         RowBox[{"flipXY", "@", "ur"}], ",", 
         RowBox[{"flipY", "@", "ur"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ell", "=", 
       RowBox[{"plotEllAxes", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ellCaustic", "=", 
       RowBox[{"plotEllb", "[", 
        RowBox[{
         RowBox[{"Sequence", "@@", "ur"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Brown"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"orthoR", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"a", "^", "2"}], "+", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"orthoRcaustic", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"a", "^", "4"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"a", "^", "2"}]}], ")"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FaceForm", "@", "None"}], ",", 
          RowBox[{"PointSize", "@", "Large"}], ",", "Thick", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Blue"}], "}"}]}], ",", 
            RowBox[{"Polygon", "@", "vs"}], ",", " ", "Blue", ",", 
            RowBox[{"Point", "@", "vs"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Red", ",", 
            RowBox[{"Circle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", "orthoR"}], "]"}]}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Red", ",", "Dashed", ",", 
            RowBox[{"Circle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", "orthoRcaustic"}], 
             "]"}]}], "}"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"{", 
        RowBox[{"ell", ",", "ellCaustic", ",", "gr"}], "}"}], "]"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.792710342833744*^9, 3.7927104238150115`*^9}, {
  3.792710454735939*^9, 3.792710555824404*^9}, {3.792710631418069*^9, 
  3.7927107345049376`*^9}, {3.792710767657265*^9, 3.7927107732573195`*^9}, {
  3.792710877592821*^9, 3.792710877929917*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"drawN4", "[", "1.5", "]"}]], "Input",
 CellChangeTimes->{{3.792710506489006*^9, 3.7927105088616323`*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, 
    {GrayLevel[0.5], Thickness[Medium], Dashing[{Small, Small}], 
     LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}]}}, 
   {RGBColor[0.6, 0.4, 0.2], Thickness[Large], 
    CircleBox[{0, 0}, {1.2480754415067656`, 0.5547001962252291}]}, 
   {PointSize[Large], Thickness[Large], FaceForm[None], 
    {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
     PolygonBox[{{1.2480754415067656`, 
      0.5547001962252291}, {-1.2480754415067656`, 
      0.5547001962252291}, {-1.2480754415067656`, -0.5547001962252291}, {
      1.2480754415067656`, -0.5547001962252291}}], 
     {RGBColor[0, 0, 1], 
      PointBox[{{1.2480754415067656`, 
       0.5547001962252291}, {-1.2480754415067656`, 
       0.5547001962252291}, {-1.2480754415067656`, -0.5547001962252291}, {
       1.2480754415067656`, -0.5547001962252291}}]}}, 
    {RGBColor[1, 0, 0], CircleBox[{0, 0}, 1.8027756377319946`]}, 
    {RGBColor[1, 0, 0], Dashing[{Small, Small}], 
     CircleBox[{0, 0}, 1.3657908388126696`]}}}]], "Output",
 CellChangeTimes->{
  3.7927105091060076`*^9, 3.7927105575707626`*^9, {3.792710711475531*^9, 
   3.7927107356638403`*^9}, 3.792710847859332*^9, 3.7927108792932725`*^9, 
   3.7959581954451013`*^9, 3.796070485786084*^9, 3.7961155629045563`*^9, 
   3.7961274058006873`*^9, 3.79622203419547*^9, 3.796301441012459*^9, 
   3.7963163658471384`*^9, 3.796420397023284*^9, 3.7964221012322793`*^9, 
   3.796422453691017*^9, 3.7965689230066185`*^9, 3.796568970920037*^9, 
   3.796663723244899*^9, 3.7969293499054193`*^9, 3.7969294853894444`*^9, 
   3.797098706460065*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.792710494998953*^9, 3.792710495629238*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.792710320299019*^9, 3.7927103214459553`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Draw Orbits", "Section",
 CellChangeTimes->{{3.7686808757778425`*^9, 3.7686808800653753`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "drawOrbit"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawOrbit", "[", 
    RowBox[{"orbitData_", ",", 
     RowBox[{"lgt_:", ".25"}], ",", 
     RowBox[{"drawNormals_:", "True"}], ",", 
     RowBox[{"psize_:", "12"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"normals", ",", "orbit", ",", "halfAlpha"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"orbit", "=", 
       RowBox[{"\"\<orbit\>\"", "/.", "orbitData"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"normals", "=", 
       RowBox[{"\"\<normals\>\"", "/.", "orbitData"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"halfAlpha", "=", 
       RowBox[{"\"\<halfAlpha\>\"", "/.", "orbitData"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"PointSize", "[", "Large", "]"}], ",", 
         RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"Point", "@", "orbit"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"FaceForm", "[", 
            RowBox[{"GrayLevel", "[", ".95", "]"}], "]"}], ",", 
           RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
           RowBox[{"Polygon", "[", "orbit", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"drawNormals", ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "\[IndentingNewLine]", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"drawArrow", "[", 
                 RowBox[{"#1", ",", "#2", ",", "lgt"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"orbit", ",", "normals"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", "Dashed", ",", "\[IndentingNewLine]", 
             RowBox[{"drawArrow", "[", 
              RowBox[{
               RowBox[{"orbit", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"\"\<nRot\>\"", "/.", "orbitData"}], ",", "lgt"}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"drawArrow", "[", 
              RowBox[{
               RowBox[{"orbit", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"\"\<nRotNeg\>\"", "/.", "orbitData"}], ",", "lgt"}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{"\"\<\[Alpha]\>\"", ",", 
               RowBox[{"ray", "[", 
                RowBox[{
                 RowBox[{"orbit", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "halfAlpha", " ", ",", 
                 RowBox[{"lgt", "*", ".5"}]}], "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"txtSubscript", "[", 
             RowBox[{"\"\<P\>\"", ",", 
              RowBox[{"ToString", "@", "#1"}], ",", "psize", ",", 
              RowBox[{"ray", "[", 
               RowBox[{"#2", ",", 
                RowBox[{"-", "#3"}], ",", 
                RowBox[{"lgt", "*", ".5"}]}], "]"}]}], "]"}], "&"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "orbit", ",", 
             "normals"}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdxUsow3EAB/BZhoOwRFoSy2vK2jJqO/lLW2p5TK2FssbKdlkyJ4/Ylj1q
KVFzodVWWnls5j/W5DAnr6QVOUg2B/V32ixjxe+7w6dPk86k0rNZLFY9gbu0
6oWZCoa6m3+wY8mYyY0Vl+HCW/ndLRz+NdPYQk+1GckbtL+wN3vOtZK/Ygkp
/rk6kGNZeeUgXmabfTg/KjrBB681MSwqYe4xv455wsrGiRSOdJ04bOTm/ew2
FltWd3Di2h/AuqbAERbezAbxnDcWwXtKQxyHt40fWNZ+mMGKMo8zRE6ut7iw
QWTXHJNDL57C053PRZ/kBu83BxvVQjF+W/uT4+Gh+Ai2unMqzBHU+nB3bHEf
7xTRaUElQ3kuUhm8acxrO8inm1I95gS5Z5iXLI1icy+P0pCVEW4fHsi1ynGx
c1KBH2n+u4McvQ2m8Xg60b9UxVA9KdUAtnk7V0TVDOWSyAv/AwVH1GM=
  "]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "drawOneNotable"}], ";", 
  RowBox[{
   RowBox[{"drawOneNotable", "[", 
    RowBox[{"clr_", ",", "at_", ",", "txt_", ",", 
     RowBox[{"dx_:", "1.5"}], ",", 
     RowBox[{"dy_:", "0"}], ",", 
     RowBox[{"fntSize_:", "12"}]}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"clr", ",", 
     RowBox[{"Point", "@", "at"}], ",", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"txt", ",", "fntSize"}], "]"}], ",", "at", ",", 
       RowBox[{"{", 
        RowBox[{"dx", ",", "dy"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"circOneNotable", "[", 
    RowBox[{"clr_", ",", "at_", ",", "rad_", ",", "txt_", ",", 
     RowBox[{"dx_:", "1.5"}], ",", 
     RowBox[{"dy_:", "0"}], ",", 
     RowBox[{"fntSize_:", "12"}]}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"clr", ",", 
     RowBox[{"Circle", "[", 
      RowBox[{"at", ",", "rad"}], "]"}], ",", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"txt", ",", "fntSize"}], "]"}], ",", "at", ",", 
       RowBox[{"{", 
        RowBox[{"dx", ",", "dy"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "drawNotableLines"}], ";", 
  RowBox[{
   RowBox[{"drawNotableLines", "[", "notables_", "]"}], ":=", 
   RowBox[{"Graphics", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Darker", "[", "Gray", "]"}], ",", "Dashed", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"euler", " ", 
         RowBox[{"line", ":", " ", "cir"}]}], ",", "bar", ",", "npc", ",", 
        "ort"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<cir\>\"", ",", "\"\<ort\>\""}], "}"}], "/.", 
        "notables"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"npc", " ", "to", " ", 
         RowBox[{"feuerbach", ":", " ", "npc"}]}], ",", "inc", ",", "feu"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<npc\>\"", ",", "\"\<feu\>\""}], "}"}], "/.", 
        "notables"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"mittenpunkt", " ", "to", " ", 
         RowBox[{"symmedian", ":", " ", "mit"}]}], ",", "inc", ",", "sym"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<mit\>\"", ",", "\"\<sym\>\""}], "}"}], "/.", 
        "notables"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"gergonne", " ", "to", " ", 
         RowBox[{"mit", ":", " ", "ger"}]}], ",", "bar", ",", "mit"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<mit\>\"", ",", "\"\<ger\>\""}], "}"}], "/.", 
        "notables"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"nagel", " ", 
         RowBox[{"line", ":", " ", "nag"}]}], ",", "bar", ",", "spi", ",", 
        "inc"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<nag\>\"", ",", "\"\<inc\>\""}], "}"}], "/.", 
        "notables"}], "]"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "drawNotables"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawNotables", "[", 
    RowBox[{"notables_", ",", 
     RowBox[{"prefix_:", "\"\<\>\""}]}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"drawOneNotable", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "/.", "ptClrs"}], ")"}], ",", 
          RowBox[{"(", 
           RowBox[{"#", "/.", "notables"}], ")"}], ",", 
          RowBox[{"prefix", "<>", "#"}]}], "]"}], "&"}], "/@", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<inc\>\"", ",", "\"\<bar\>\"", ",", "\"\<ort\>\"", ",", 
         "\"\<cir\>\"", ",", "\"\<npc\>\"", ",", "\"\<feu\>\"", ",", 
         "\"\<ex12\>\"", ",", "\"\<ex23\>\"", ",", "\"\<ex31\>\"", ",", 
         "\"\<sym\>\"", ",", "\"\<mit\>\"", ",", "\"\<ger\>\"", ",", 
         "\"\<nag\>\"", ",", "\"\<spi\>\"", ",", "\"\<antifeu\>\"", ",", 
         "\"\<x88\>\""}], "}"}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawNotablesSingleClr", "[", 
    RowBox[{"notables_", ",", "clr_", ",", 
     RowBox[{"prefix_:", "\"\<\>\""}]}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"drawOneNotable", "[", 
         RowBox[{"clr", ",", 
          RowBox[{"(", 
           RowBox[{"#", "/.", "notables"}], ")"}], ",", 
          RowBox[{"prefix", "<>", "#"}]}], "]"}], "&"}], "/@", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<inc\>\"", ",", "\"\<bar\>\"", ",", "\"\<ort\>\"", ",", 
         "\"\<cir\>\"", ",", "\"\<npc\>\"", ",", "\"\<feu\>\"", ",", 
         "\"\<ex12\>\"", ",", "\"\<ex23\>\"", ",", "\"\<ex31\>\"", ",", 
         "\"\<sym\>\"", ",", "\"\<mit\>\"", ",", "\"\<ger\>\"", ",", 
         "\"\<nag\>\"", ",", "\"\<spi\>\"", ",", "\"\<antifeu\>\"", ",", 
         "\"\<x88\>\""}], "}"}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "circNotables"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"circNotables", "[", 
    RowBox[{"notables_", ",", "rad_", ",", 
     RowBox[{"prefix_:", "\"\<\>\""}]}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"circOneNotable", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "/.", "ptClrs"}], ")"}], ",", 
          RowBox[{"(", 
           RowBox[{"#", "/.", "notables"}], ")"}], ",", "rad", ",", 
          RowBox[{"prefix", "<>", "#"}]}], "]"}], "&"}], "/@", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<inc\>\"", ",", "\"\<bar\>\"", ",", "\"\<ort\>\"", ",", 
         "\"\<cir\>\"", ",", "\"\<npc\>\"", ",", "\"\<feu\>\"", ",", 
         "\"\<ex12\>\"", ",", "\"\<ex23\>\"", ",", "\"\<ex31\>\"", ",", 
         "\"\<sym\>\"", ",", "\"\<mit\>\"", ",", "\"\<ger\>\"", ",", 
         "\"\<nag\>\"", ",", "\"\<spi\>\"", ",", "\"\<antifeu\>\"", ",", 
         "\"\<x88\>\""}], "}"}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "circNotablesSingleClr"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"circNotablesSingleClr", "[", 
    RowBox[{"notables_", ",", "rad_", ",", "clr_", ",", 
     RowBox[{"prefix_:", "\"\<\>\""}]}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"circOneNotable", "[", 
         RowBox[{"clr", ",", 
          RowBox[{"(", 
           RowBox[{"#", "/.", "notables"}], ")"}], ",", "rad", ",", 
          RowBox[{"prefix", "<>", "#"}]}], "]"}], "&"}], "/@", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<inc\>\"", ",", "\"\<bar\>\"", ",", "\"\<ort\>\"", ",", 
         "\"\<cir\>\"", ",", "\"\<npc\>\"", ",", "\"\<feu\>\"", ",", 
         "\"\<ex12\>\"", ",", "\"\<ex23\>\"", ",", "\"\<ex31\>\"", ",", 
         "\"\<sym\>\"", ",", "\"\<mit\>\"", ",", "\"\<ger\>\"", ",", 
         "\"\<nag\>\"", ",", "\"\<spi\>\"", ",", "\"\<antifeu\>\"", ",", 
         "\"\<x88\>\""}], "}"}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "drawSomeNotables"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawSomeNotables", "[", 
    RowBox[{"notables_", ",", "nots_", ",", 
     RowBox[{"prefix_:", "\"\<\>\""}]}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"drawOneNotable", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "/.", "ptClrs"}], ")"}], ",", 
          RowBox[{"(", 
           RowBox[{"#", "/.", "notables"}], ")"}], ",", 
          RowBox[{"prefix", "<>", "#"}]}], "]"}], "&"}], "/@", "nots"}]}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "drawBasicNotables"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawBasicNotables", "[", 
    RowBox[{"notables_", ",", 
     RowBox[{"prefix_:", "\"\<\>\""}]}], "]"}], ":=", 
   RowBox[{"drawSomeNotables", "[", 
    RowBox[{"notables", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<inc\>\"", ",", "\"\<bar\>\"", ",", "\"\<ort\>\"", ",", 
       "\"\<cir\>\"", ",", "\"\<npc\>\"", ",", "\"\<mit\>\"", ",", 
       "\"\<feu\>\""}], "}"}], ",", "prefix"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "drawBasicNotablesSingleClr"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawBasicNotablesSingleClr", "[", 
    RowBox[{"notables_", ",", "clr_", ",", 
     RowBox[{"prefix_:", "\"\<\>\""}]}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"drawOneNotable", "[", 
         RowBox[{"clr", ",", 
          RowBox[{"(", 
           RowBox[{"#", "/.", "notables"}], ")"}], ",", 
          RowBox[{"prefix", "<>", "#"}]}], "]"}], "&"}], "/@", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<inc\>\"", ",", "\"\<bar\>\"", ",", "\"\<ort\>\"", ",", 
         "\"\<cir\>\"", ",", "\"\<npc\>\"", ",", "\"\<mit\>\"", ",", 
         "\"\<feu\>\""}], "}"}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "circBasicNotables"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"circBasicNotables", "[", 
    RowBox[{"notables_", ",", "rad_", ",", 
     RowBox[{"prefix_:", "\"\<\>\""}]}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"circOneNotable", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "/.", "ptClrs"}], ")"}], ",", 
          RowBox[{"(", 
           RowBox[{"#", "/.", "notables"}], ")"}], ",", "rad", ",", 
          RowBox[{"prefix", "<>", "#"}]}], "]"}], "&"}], "/@", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<inc\>\"", ",", "\"\<bar\>\"", ",", "\"\<ort\>\"", ",", 
         "\"\<cir\>\"", ",", "\"\<npc\>\"", ",", "\"\<mit\>\"", ",", 
         "\"\<feu\>\""}], "}"}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "circBasicNotablesSingleClr"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"circBasicNotablesSingleClr", "[", 
    RowBox[{"notables_", ",", "rad_", ",", "clr_", ",", 
     RowBox[{"prefix_:", "\"\<\>\""}]}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"circOneNotable", "[", 
         RowBox[{"clr", ",", 
          RowBox[{"(", 
           RowBox[{"#", "/.", "notables"}], ")"}], ",", "rad", ",", 
          RowBox[{"prefix", "<>", "#"}]}], "]"}], "&"}], "/@", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<inc\>\"", ",", "\"\<bar\>\"", ",", "\"\<ort\>\"", ",", 
         "\"\<cir\>\"", ",", "\"\<npc\>\"", ",", "\"\<mit\>\"", ",", 
         "\"\<feu\>\""}], "}"}]}]}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7660466511030107`*^9, 3.7660466643905106`*^9}, {
   3.766046965358555*^9, 3.7660469819662776`*^9}, {3.76604702723989*^9, 
   3.766047135246889*^9}, {3.7660471670748496`*^9, 3.7660472199100323`*^9}, {
   3.766049229292245*^9, 3.766049259502195*^9}, {3.7660899937274494`*^9, 
   3.766090001241497*^9}, {3.766131162999633*^9, 3.766131195334711*^9}, {
   3.7662536804385314`*^9, 3.766253687119647*^9}, {3.7663942734926467`*^9, 
   3.7663942759790277`*^9}, {3.766394316371236*^9, 3.7663943203319407`*^9}, {
   3.7663948669102106`*^9, 3.7663949229399796`*^9}, {3.7663950044041433`*^9, 
   3.7663950099014177`*^9}, {3.7663961568452177`*^9, 3.766396207685244*^9}, {
   3.7663965244444695`*^9, 3.7663965258123465`*^9}, {3.7663967044940186`*^9, 
   3.766396727085676*^9}, {3.766396771503598*^9, 3.766396776533134*^9}, {
   3.7663968086074038`*^9, 3.766396809509963*^9}, {3.766396845581522*^9, 
   3.7663969125101423`*^9}, {3.7663969454710026`*^9, 3.766396953949351*^9}, {
   3.7663976862388515`*^9, 3.7663977010772395`*^9}, {3.7663999430293384`*^9, 
   3.766399965005109*^9}, {3.766401439967109*^9, 3.7664014410462327`*^9}, {
   3.766432486597267*^9, 3.766432602574684*^9}, {3.766432656581292*^9, 
   3.766432716925228*^9}, {3.766432849580037*^9, 3.7664328497495813`*^9}, {
   3.7664328947632313`*^9, 3.7664329457795024`*^9}, {3.7664330221897287`*^9, 
   3.766433032666749*^9}, 3.7664330831637774`*^9, {3.7664352213713293`*^9, 
   3.7664352441015573`*^9}, {3.766435276963685*^9, 3.7664352778027916`*^9}, {
   3.766435348035322*^9, 3.7664353496031294`*^9}, {3.76643557616568*^9, 
   3.766435577349514*^9}, {3.766435710158119*^9, 3.7664357181337953`*^9}, {
   3.7666192708777676`*^9, 3.766619272757739*^9}, {3.7672657344732466`*^9, 
   3.767265736793042*^9}, {3.7672842932712235`*^9, 3.7672843124389505`*^9}, {
   3.7673471264517107`*^9, 3.7673471425392857`*^9}, {3.767347984045664*^9, 
   3.76734806361126*^9}, {3.767349898946748*^9, 3.7673499337923727`*^9}, {
   3.767352324951561*^9, 3.767352432858961*^9}, {3.767911737579075*^9, 
   3.7679117943941083`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Triangular Radii", "Section",
 CellChangeTimes->{{3.7658023998658776`*^9, 3.765802404372823*^9}, {
  3.7681736111582375`*^9, 3.768173635421789*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "radiusIncenter"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"radiusIncenter", "[", 
    RowBox[{"orbit_", ",", "normals_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ctr", ",", "foot", ",", "d"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ctr", "=", 
       RowBox[{"getIncenter", "[", 
        RowBox[{
         RowBox[{"orbit", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"normals", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"orbit", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"normals", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"foot", "=", 
       RowBox[{"closestPerp", "[", 
        RowBox[{"ctr", ",", 
         RowBox[{"orbit", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"orbit", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"d", "=", 
       RowBox[{"magn", "[", 
        RowBox[{"ctr", "-", "foot"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"ctr", ",", "d"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.765802768244773*^9, 3.765802775045555*^9}, {
  3.7658028485813875`*^9, 3.765802852525397*^9}, {3.765802886452669*^9, 
  3.7658029443813076`*^9}, {3.765804052390355*^9, 3.765804081181347*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "radiusCircumcenter"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"radiusCircumcenter", "[", 
    RowBox[{"orbit_", ",", "normals_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ctr", ",", "p1", ",", "d"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ctr", "=", 
       RowBox[{"getCircumcenter", "@@", "orbit"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"orbit", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"d", "=", 
       RowBox[{"magn", "[", 
        RowBox[{"ctr", "-", "p1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"ctr", ",", "d"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7658044025800486`*^9, 3.765804469371389*^9}, {
  3.765804796627679*^9, 3.765804816717915*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "radiusNPC"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"radiusNPC", "[", 
    RowBox[{"orbit_", ",", "normals_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ctr", ",", "med12", ",", "d"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ctr", "=", 
       RowBox[{"getNinepointcenter", " ", "@@", "orbit"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"med12", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"orbit", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"orbit", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", "2"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"distance", " ", "to", " ", "a", " ", "median"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"d", "=", 
       RowBox[{"magn", "[", 
        RowBox[{"ctr", "-", "med12"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"ctr", ",", "d"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.765802406896103*^9, 3.765802424645177*^9}, {
  3.7658026580454435`*^9, 3.765802694684864*^9}, {3.7658028393650427`*^9, 
  3.7658028439408073`*^9}, {3.7658030556763344`*^9, 3.7658030577806764`*^9}, {
  3.7658032675394554`*^9, 3.765803272596917*^9}, {3.7658040842521305`*^9, 
  3.7658041282933846`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getRadii"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getRadii", "[", 
    RowBox[{"a_", ",", "tmax_", ",", "radFn_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"orbit", ",", "normals", ",", "series"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"series", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"orbit", ",", "normals"}], "}"}], "=", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"orbitNormals", "[", 
             RowBox[{"a", ",", "t"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{
             RowBox[{"radFn", "[", 
              RowBox[{"orbit", ",", "normals"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax", ",", 
           RowBox[{"toRad", "[", "1.", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "series"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.765802447217798*^9, 3.765802616789959*^9}, {
  3.7658027047345505`*^9, 3.7658027073824716`*^9}, {3.7658029646144395`*^9, 
  3.765803000949774*^9}, {3.7658030493752484`*^9, 3.7658030879964867`*^9}, {
  3.765804140198569*^9, 3.765804141053673*^9}, {3.765976113978834*^9, 
  3.7659761375541677`*^9}}],

Cell["\<\
Pergunta : para qual t a area \[EAcute] maximizada e/ou o inradius? Parece \
estar ocorrendo em \[Pi]/2\
\>", "Text",
 CellChangeTimes->{{3.7659755823052263`*^9, 3.7659756015209937`*^9}, {
  3.765976116710532*^9, 3.7659761740545893`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inMax", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rs", ",", "top"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rs", "=", 
      RowBox[{"getRadii", "[", 
       RowBox[{"2", ",", 
        RowBox[{"2", "\[Pi]"}], ",", "radiusIncenter"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"top", "=", 
      RowBox[{"Ordering", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", "rs"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rs", "[", 
      RowBox[{"[", "top", "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.765975645415609*^9, 3.7659756477832737`*^9}, {
  3.7659758062635894`*^9, 3.7659758125108805`*^9}, {3.76597584989779*^9, 
  3.765975887200901*^9}, {3.7659759456555786`*^9, 3.7659760215767*^9}, {
  3.765976088015419*^9, 3.7659760894474535`*^9}, {3.765976146009523*^9, 
  3.765976146136217*^9}, {3.765976269807418*^9, 3.7659762806891174`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.5707963267948966`", ",", "0.5259316327146818`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.71238898038469`", ",", "0.5259316327146819`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.765975649613353*^9, 3.765975813175826*^9, 3.765975852196641*^9, 
   3.7659758879070406`*^9, {3.7659759523296986`*^9, 3.7659760222636433`*^9}, 
   3.7659760548385143`*^9, 3.7659760900388403`*^9, {3.7659761215435276`*^9, 
   3.765976146785321*^9}, {3.765976270722849*^9, 3.765976281227677*^9}, 
   3.7660497945408273`*^9, 3.766131464472175*^9, 3.7661320389031696`*^9, 
   3.766236455125538*^9, 3.7662703060427437`*^9, 3.7663426733122864`*^9, 
   3.7666647752877383`*^9, 3.767732790279458*^9, 3.7678903780435677`*^9, 
   3.7678907294915333`*^9, 3.76789077149319*^9, 3.768120730696329*^9, 
   3.768170007644288*^9, 3.7682082013938813`*^9, 3.7682101892598267`*^9, 
   3.768215761388301*^9, 3.7683189892369576`*^9, 3.7683926449875536`*^9, 
   3.768406455086563*^9, 3.7684068406487427`*^9, 3.7684077605084777`*^9, 
   3.768472868050846*^9, 3.768502194058719*^9, 3.7685028021024*^9, 
   3.768548407094335*^9, 3.768660877640471*^9, 3.7686614511207647`*^9, 
   3.768671924693904*^9, 3.7687342798042736`*^9, 3.768735287327104*^9, 
   3.7687493981915817`*^9, 3.7687591249238577`*^9, 3.7687594315591946`*^9, 
   3.7688562734962635`*^9, 3.7690908909952683`*^9, 3.7691015791732054`*^9, 
   3.769159861292872*^9, 3.7691758890548573`*^9, 3.7692676412248178`*^9, 
   3.769275764914959*^9, 3.769372228930641*^9, 3.7693725036062317`*^9, 
   3.76942569382963*^9, 3.7695301525355153`*^9, 3.7696086033946266`*^9, 
   3.769802263287155*^9, 3.769806746549326*^9, 3.76994948216438*^9, 
   3.7701896213311386`*^9, 3.7701944111178493`*^9, 3.7704637422460566`*^9, 
   3.7716124800149584`*^9, 3.7716698009989653`*^9, 3.77168778660682*^9, 
   3.77169115856942*^9, 3.7716912870618515`*^9, 3.77183451185833*^9, 
   3.7720968721683226`*^9, 3.772198203289383*^9, 3.7724424095449543`*^9, 
   3.772462215354334*^9, 3.7724816418386335`*^9, 3.7725320113050675`*^9, 
   3.772787374069518*^9, 3.7730743517524657`*^9, 3.7733167561934958`*^9, 
   3.773328787596757*^9, 3.773345629497338*^9, 3.7743727299072423`*^9, 
   3.7743732923727255`*^9, 3.7751232556489596`*^9, 3.7752337635531626`*^9, 
   3.7756419591719017`*^9, 3.7756467228952713`*^9, 3.7757273994221315`*^9, 
   3.775911925673501*^9, 3.7760680774468412`*^9, 3.7769724060786085`*^9, 
   3.777026500572136*^9, 3.777361424136713*^9, 3.7802537222231913`*^9, 
   3.7802551925280423`*^9, 3.7802555257873955`*^9, 3.7802592628391347`*^9, 
   3.7858642946964355`*^9, 3.7870731215348005`*^9, 3.7884399626938267`*^9, 
   3.788983366380025*^9, 3.789459070970543*^9, 3.7894591875643454`*^9, 
   3.7903202088181047`*^9, 3.791325016114546*^9, 3.791325891995399*^9, 
   3.7914843649907923`*^9, 3.7921432043044043`*^9, 3.7921863157699094`*^9, 
   3.7959581964354415`*^9, 3.796070486167037*^9, 3.796115563246383*^9, 
   3.796127406149781*^9, 3.796222034618412*^9, 3.7963014413924437`*^9, 
   3.7963163663471966`*^9, 3.796420397360404*^9, 3.796422101592345*^9, 
   3.7964224540470657`*^9, 3.796568923394869*^9, 3.7965689712569437`*^9, 
   3.7966637237147503`*^9, 3.796929350242518*^9, 3.796929486080607*^9, 
   3.7970987067881603`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"getRadii", "[", 
       RowBox[{"2", ",", 
        RowBox[{"2", "\[Pi]"}], ",", "#"}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"radiusIncenter", ",", "radiusCircumcenter", ",", "radiusNPC"}],
       "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<radius\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Point", "@", "inMax"}], ",", "Dotted", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"inMax", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"2", "\[Pi]"}], ",", 
           RowBox[{"inMax", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}], "]"}]}],
      "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<inradius\>\"", ",", "\"\<circumradius\>\"", ",", 
      "\"\<9-point-circle radius\>\""}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", "Large"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<radius\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#", "/.", "ptClrs"}], ")"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<inc\>\"", ",", "\"\<cir\>\"", ",", "\"\<npc\>\""}], 
       "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQXeFRt30T3xvHGYfugel5QcdPgeiehvUXQfQqafY7
ILrvctt9EJ0QM+E/iG68sZdxM5De86ORC0Qvqj4vAqLnFK5VAdHMW5vUQXSX
w47tIHqy2YRdIHrpuqQnIPpAi8NTEM3gsOE9iE7R/PYJRItJ7fsNouvyzvwF
0f9eSrhvAdJfZpmC6YDWNTJvgfShuXGyINrWjScbRJvt3V0CFt/G0cDOD3T3
ZacWEK2w4NFsED25TWwJiP69p38diD73c/N6EF2bYXQqXOCNI3/F1usgujHd
7Q6I3jSR/y6IvvTHOCEKSCuoBaWCaLV5tR5mwm8cVzyY5wWiAS2BniM=
  "]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        LineBox[CompressedData["
1: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
o/fziqeHbNpL2/yfn9vo/fxfwabLfw==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
kIdWeIZ9Rf1vhdPYX/kf68p61lihIfuZPKDAQvab1W63iFKVAm+x78gHCtzL
/vMdstog0VWBQ9mH5AUFnmc/bniZuWNGoALL2JfkBwV2Yn/eWN+hq02kAmPZ
p+QJBdayX5v7jD1RlKjAruxb8oUCZezfQTk7XA/cUaDgY/KGAuvYz4vCn94O
qFTgKH6d/PHfzyd37OTXyVKJgp/JI0qs598vvTatuMBFiXv4+sgnSlTx9Xeb
nbgw9nul/v7IK0o8xvfvLy1rnrRCiZ58PuQXJf7K57crxXGT6qAS7/P5kmeU
KPg52+9HdW6GEnXsZ/KNEifz8zNpSjsS80aJp/n5kneUOJif/4iDzf3GS1W4
leeD/KPC7jw/q0bAVZmTCvvyfJGHVDiY5+9i2Tqfh+NVOJznk3ykwhk8v7Vb
7z6LDleh4GfykgqR599pgEWwT5wKHXg/yE8qTOX9CSmYUGtyRYWFvF/kKRVO
4f07smrPmjsvVbiU95N8pcJZvL9/dn9hvsFAjWW83+QtNZ7j/dfc7bbXy16N
AZwP5C+13s8TFs62N/BV40POF/KYGndw/kQrjp/PCFPjAs4n8pkaX3J+ZV14
PzzyVzUu4Xwjr6mxP+efKMglxyNdjV6cj+Q3NV7m/BwqWRbYWqjGPZyv5Dk1
PuD8Xfrb5fLLrWos53wm32nQjvM7daxo2QpbDe7gfCfvabCV87+ixsvQzVuD
97gfyH8aHML90SN2c0zjXA2mcL+QBzV6P08flt01/RcNenM/kQ81ej/Hv1Kc
DE/VYCD3G3lRgxbcf3kbJrsNyNOgAfcj+VGDSu5PmeP+rJpGDfbjfiVPWmME
9++Yx8V+qZ2t8U/uZ/Kltd7P6yJ6vgoDa72fyZvWKPz/2bXO88KcZlnjGfYB
+dNa7+fPN1JaKjdYYyn7gjxqrfezy5xPm5KT23+PfUI+tUY79stCM1dNaLa1
3s/kVWu9n39LXZloX2uNf2MfkV+1ej+XTMro/1atxQr2FXlWq/dzlxaja0fd
tHo/k2+1qGS/TT7s4zsrSKv3M3lXq/dzjPf2Atu1Wr2fyb9adGE//lGRG1x8
VIsL2JfkYa3ez8Y7tJ8O3tXq/Uw+1ur9jIOCIoOqtHo/k5e1ej///DzBoou8
4//5uaPez/8CSbERFQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], 
         RGBColor[1., 0.02, 0.3]], 
        LineBox[CompressedData["
1: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
K8srY4yg/v1xzc/+oXITrKB+ZvllgjXU3+r7ppGVgSYYS/3O8swEFdT/IRb7
dyw4Z4Lp5AOWbybYSX4o+b5n0p+13d9PvmB5Z4p7yR/fnj57N2C4Kb4nn7D8
M8XB5JecaueS4vWmWE6+YXloipnkn9EjMjj/nO73k49YPpqihvx0aaOX9Uvz
HlhLvmJ52QOXkb/snz52+m5GD5xHPmP52QPF5LdD0hkTnh3tgYJBzHcsT3ug
hvxnMf9t4OTy7s+TD1m+mqE7+XFTckj0IyczjCZfsrw1w44W5s8Gri5+wgoz
nEM+Zflrhi7k13DPtZfvZ5rhL+Rblsdm6EH+LdvelTuus/v95GOWz+bI+9n/
1Y6KX33Mkfczy2tz5P38+CvJl1F7zJH3M8tvc+T9PC7suOJGoTnyfmZ5bo68
n69e7efq+pUFrqf7Y/luob//AV+uTE0NsUDezyzvLZD38/FJoxc7X7LA//Wz
BZrR8xfFZ8UkcxbI+5n1gSXyfo4tnXK8/xhL5P3M+sESeT+39S/IOLvZEnk/
s76wxBSanxUrA1/0eWqJxTRfrD8skfdz1W8fak6IrJD3M+sTK+T9PMdkhUmv
OVb6+Wb9YoW8n59Pa+lz5LQVptF+sL6x0u/PhGObx8g+WSHvZ9Y/1lhL+3ez
ymJW/BBr/ET7yfrIGnk/Dx56cIVwrTXyfmb9ZI28nxN//NuuuLvWyPuZ9ZU1
9qb8UDw8f87MRIi8n1l/CZH3c5xw2P1YPyHyfmZ9JsSXlF+CgF/fGB4UYgbl
G+s3IfJ+jkqa0LCpVIhqykfWd0Lk/Vz9+Zmwo68NHqZ8Zf1ng7yf57vPGrR+
qQ12UD6zPrRB3s8F/yyb2HzVBnk/s360wRzK/8nPw+ZHtdog72fWlyL0pP4o
i1t3Z529CFdRv7D+FKGK+qen690po71FuIz6ifWpCA9Qf/kXG7xuDBNhEfUb
61cRPqX+2/vTpEU34kS4kPqR9a0Ib1N/PrGP061OE2H9//hZhEuof41y8ze6
FohwA/Uz62MRzqP+9lwms9I2ibCU+p31sxjvU/+vEwUkpPYSozP5gPW1GCeT
H65lnBwQ4SVG3s+sv8W4jPxRN7fyuvNCMfqRT1ifi9GL/OIkcBpfEyvG0eQb
1u9i5P0T/K9leckXxfgL+Yj1vRi9yU8nfNPnhT0X41XyFet/Mc4nfxVrGlT9
dWI0Jj8zD0jwDflNfMhjbZVMgjnkO+YDCR4j/00ds9EoyV2C48iHzAsSvEF+
3PYuZ39woAQ/kS+ZHyTYi/yZtbWHnX2MBA+TT5knJFhPfm0b5HepLEmCduRb
5gsJWpN/R+bvdz/5WIITycfMGxJsID+viCp6NK9WgpPpdeYPCQrp8yk9e/n3
spEi72fmESnyfq+6N7+8xE2qvz7mEynK6Pr7LEqKOPKDFFV0f8wrUrxA9x9g
rmqbtV6KE+n5ML9IMZ6e38HUwTtkp6T4lJ4v84wUeT/n+a+SF2RLsZP8zHwj
xTl0fmatGWfjP0gxjc6XeUeKo+j8J55qGzrdXIa7aT6Yf2ToSPPz80S4K3SR
4RCaL+YhGY6m+bul2uL7fLoMx9N8Mh/JMJjml9vz5HVclAwLab6Zl7rfT/Pv
Mtw61PeoDL+m/WB+kmEa7U9YyQzO7I4M39J+MU/JcA7t39mfD296/E6Ga2g/
ma9kGEL7+2ffUqttRnJU0X4zb8nxOu2/4kmfY95OcpxL+cD8Jcdsyo8ZEYuc
jKbK8TnlC/OYHOMpf+IkF29kR8pxOeUT85kc31F+5d78PD7mFzmupnxjXpPj
UMo/QZBbvlemHCdSPjK/yfE25edYw+jAjjdyPEz5yjwnx2eUv2su3K6+3SHH
aspn5jsFOlJ+p/sJotc7KHA/5TvzngI7KP9rdN7GHj4KfEL9wPynwDHUH/2O
7IxvXqLAK9QvzIMKvZ8XjMuzy9yt0PcT86FC7+eECsnlqHQFBlK/MS8q0Jr6
r3DbbI/hhQo0on5kflSglPpTOPhErq5ZgUOoX5knbTGa+nfKy3L/9N62WEr9
zHxpq/fzlrX9KyLBVu9n5k1bff/f67000iXEVu9n5k9b7CA/tGSlttdus8Uq
8gXzqK3ez26L63ekpHT/HvmE+dQWHckvEZbuivA8W72fmVdt9X6+kL4hyYmz
xa/JR8yvSr2fK2dlD/soV2IN+Yp5Vqn381ftJvfOeSj1fma+VaKU/Db7jO/U
kCCl3s/Mu0q9n+N99pU4bFbq/cz8q0Q38uMfNQWh5ee6f498yTys1PvZdL+y
/tQTpd7PzMdKvZ9xZFBMUJ1S72fmZaXezz+9TbT+StTz//zcU+/nfwOSZOt/

         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 6.283185307179586}, {0, 2.3027756377319926`}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox["\"radius\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {
       PointBox[{{1.5707963267948966`, 0.5259316327146818}, {4.71238898038469,
         0.5259316327146819}}], 
       Dashing[{0, Small}], 
       LineBox[
        NCache[{{0, 0.5259316327146818}, {2 Pi, 0.5259316327146818}}, {{
          0, 0.5259316327146818}, {6.283185307179586, 0.5259316327146818}}]]},
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"radius\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, FrameStyle -> Large, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, Method -> {}, 
     PlotRange -> {{0, 6.283185307179586}, {0, 2.3027756377319926`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"inradius\"", "\"circumradius\"", "\"9-point-circle radius\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0.02, 0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0.02, 0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 2/3, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.02, 0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666667, 0.013333333333333334`, 0.2], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1., 0.02, 0.3]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.02, 0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.02, 0.3], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7658027339355135`*^9, 3.765802748538454*^9}, {
   3.7658031234323983`*^9, 3.7658031751649914`*^9}, {3.765803314434407*^9, 
   3.7658033251387763`*^9}, 3.765804143218856*^9, 3.765804501706039*^9, 
   3.765804843804393*^9, {3.76580494192371*^9, 3.7658049527178106`*^9}, 
   3.765805035780285*^9, 3.7658056267622294`*^9, {3.76592264350961*^9, 
   3.765922667868894*^9}, {3.765922698533953*^9, 3.7659227270726805`*^9}, {
   3.7659760803818645`*^9, 3.7659761481416655`*^9}, {3.765976272839114*^9, 
   3.765976284157851*^9}, 3.765976316233286*^9, {3.7659763484969006`*^9, 
   3.7659763536713114`*^9}, {3.765976443875861*^9, 3.7659764466414948`*^9}, 
   3.7660497981686087`*^9, 3.7661314653667917`*^9, 3.7661320396441884`*^9, 
   3.766236455849575*^9, 3.7662703067847633`*^9, 3.7663426739844885`*^9, {
   3.766664782194273*^9, 3.7666648362332277`*^9}, 3.766664894818808*^9, {
   3.766664932160437*^9, 3.7666649380832467`*^9}, {3.766670106411049*^9, 
   3.7666701235335426`*^9}, 3.7677327909716053`*^9, 3.767890378821498*^9, 
   3.767890730213602*^9, 3.767890772229221*^9, 3.7681207315650063`*^9, {
   3.7681690294803667`*^9, 3.768169045977189*^9}, 3.7681700083972464`*^9, 
   3.7682082022027197`*^9, 3.7682101900447297`*^9, 3.768215762168247*^9, 
   3.768318989912117*^9, 3.7683926460357227`*^9, 3.7684064558505216`*^9, 
   3.7684068414406223`*^9, 3.7684077613063736`*^9, 3.768472868826802*^9, 
   3.7685021947758036`*^9, 3.768502802960136*^9, 3.768548407920129*^9, 
   3.7686608785250936`*^9, 3.7686614520871553`*^9, 3.7686719253800387`*^9, 
   3.7687342806200624`*^9, 3.7687352881039968`*^9, 3.768749399376443*^9, 
   3.768759125657894*^9, 3.7687594321725235`*^9, 3.7688562741265783`*^9, 
   3.7690908916764193`*^9, 3.769101580326451*^9, 3.7691598620668354`*^9, 
   3.7691758897390275`*^9, 3.7692676422733126`*^9, 3.7692757655811768`*^9, 
   3.7693722302441635`*^9, 3.769372504258461*^9, 3.7694256948428764`*^9, 
   3.7695301532047267`*^9, 3.769608604211438*^9, 3.7698022644410696`*^9, 
   3.7698067472963285`*^9, 3.7699494830011435`*^9, 3.7701896222028084`*^9, 
   3.770194411912752*^9, 3.770463743116764*^9, 3.7716124807938776`*^9, 
   3.771669801828742*^9, 3.7716877873335886`*^9, 3.7716911593709927`*^9, 
   3.771691287914571*^9, 3.7718345127120466`*^9, 3.772096873163662*^9, 
   3.772198204388441*^9, 3.7724424103468103`*^9, 3.7724622162432065`*^9, 
   3.7724816426255293`*^9, 3.7725320121139164`*^9, 3.772787374953939*^9, 
   3.7730743525383387`*^9, 3.7733167571120405`*^9, 3.773328788371684*^9, 
   3.7733456304088993`*^9, 3.774372730730073*^9, 3.77437329315862*^9, 
   3.7752337644667187`*^9, 3.7756419602290382`*^9, 3.775646723831276*^9, 
   3.7757274001192665`*^9, 3.775911926542684*^9, 3.7760680783444757`*^9, 
   3.7769724069138827`*^9, 3.7770265026722765`*^9, 3.7773614254619164`*^9, 
   3.7802537233726854`*^9, 3.7802551933243895`*^9, 3.780255526917266*^9, 
   3.7802592636858683`*^9, 3.7858642961415715`*^9, 3.7870731222518544`*^9, 
   3.7884399635415287`*^9, 3.788983367888973*^9, 3.7894590718876266`*^9, 
   3.7894591884158473`*^9, 3.790320210305126*^9, 3.7913250172265697`*^9, 
   3.7913258929827595`*^9, 3.7914843659173155`*^9, 3.792143205689049*^9, 
   3.792186316649558*^9, 3.795958197934473*^9, 3.796070486937006*^9, 
   3.796115564011856*^9, 3.796127406849913*^9, 3.796222035499688*^9, 
   3.7963014421853228`*^9, 3.7963163672821136`*^9, 3.796420398187172*^9, 
   3.796422102408166*^9, 3.796422455108229*^9, 3.7965689244099007`*^9, 
   3.7965689719884977`*^9, 3.79666372455311*^9, 3.796929351074299*^9, 
   3.796929486806657*^9, 3.7970987075052433`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"*", " ", "Area", " ", "of", " ", "Triangle", " ", "A"}], "=", 
  RowBox[{
   RowBox[{"inradius", "*", "semiperimeter"}], "=", 
   RowBox[{"r", "*", "s"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"*", " ", "Circumradius", " ", 
  RowBox[{"(", "R", ")"}], " ", "is", " ", "related", " ", "to", " ", 
  "inradius", " ", 
  RowBox[{"(", "r", ")"}], " ", "as", " ", 
  RowBox[{"follows", ":", "\[IndentingNewLine]", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzs3QtcU1meL/p177mfz7nnnnvHz53pcWacM4dz7Pa21bQ05RRlWUopGEFA
DQ9TlooPVFBRAQFREBERgQAqD0GoogyCQQwiIPIWCS95xkAQAkkIRAiPACEJ
eT/Yd4F2n+5pLakqLdT+fz+r8rE0JHslYf3y33vttf/nQV9Xr/8dIRTwf+Ib
V48zNv7+HsFu/wf+H9vgQM+D/wn/4dL/htAFfJ+5PxMAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF5j1mSaNepNeq1eo1Ir5TNyqWx6
enJyenxcNi1TqTV6I0GY8N0WezsBAACAj8Zc8upUJo1cLZ+YnhgeEwtFAwO8
vsGuLtHg84kpuUpPEIb5/AUAAADAW4FrXpy8BoVEPj44MsgVcFmcp+ymJx3V
1ZyOLtHwuExDEDh/jYu9nQAAAMBHw6Ce1k2JVMOd3c0VxXm3khOo8UnfXU4t
CEurzansedovURGEbr74BQAAAMBboZePqoY7ZD3l5TmJ4WeOO9iT7L4+ausZ
vyGg8FxWa1mnWEkQWghfAAAA4O3RTg7I+TWSZlpGlPd2WyuELbNCVt6ITHOm
1mQ1DigI4sWeZwAAAAC8FXrFqHq0U86rKEwK9dlivQqhT36z7tcOZ818ir1u
sgrYI5r53c5wzBcAAAB4W4w6mWHmuXbqWcPNK9fIdnsQcvmDrf2+y9bxzaHF
vEd9Uy9mW8FsZwAAAODtwXWtkiCkvQxaIYVMRShkrcNx/2T3PEFS01jL0Mxi
bx4AAADwsZk1Kmb1I7NqXjM9MdF1C658PTdu8w3/7ixzjN4t40g0i72BAAAA
wMdmVjcxq+wzShvLaZH+ZJtVCDnbu/hfzUrpnikf0vDlMM0ZAAAAeMtMarFJ
2mYQF+WmB7ltXYcQWredEpTBKJIQbXJCrF3s7QMAAAAWm16tUE+J5WKuqK+r
o53FZLY8aWxpb23hsFta6x/Xlj6sYDCqq5i17b0NAmnvmHJSqXvDA8r61aJK
OSftVry/s50TQiu+tPM4fSWjoKu3+ElLaXklfsCHjOICxiMGo+FRbQ+7b0wk
002oDCr9Gydhzc43k14tV00Ny/A28591cToaWtqbmmpbnpS0NzCeNFfXtHdU
sIeeDkwOT6t0sJQlAACA9w9O3ilBq7itsP5BTlZ6Rnh40pW4pPSUpJzMpJTo
sEifY4EUyrkzlyLSC2MrhYWdYzh/3/CA48+mnzFGHl/49oLP1g3uCDmt/epE
YNi1/EeF336bFH0mAD/gMcqR/ZSzFEpsSGT+zeLOepGyZ0KD8/dNGzs7H6Qm
lXRoor9V1FbYUH73Dv1WbFL6tYSI61dOpMdSriSeC0+7FZjZdJPJaxmYUs6f
Uwx7ugEAALxXcM2Lk5dbRKXHhwR4Hbexcd/h4u51wD3Yz/2Ak7X9CjMLhNau
JpE8qeQ0Fs5fXP/+8APODLWPNaUL8ryS/Y85rD2JkN/aNWf9fS7m0akXffbs
XLMKP6AZWrYEWSFEXmMX6RNfQedIcf7i+vdNG2uabwaZuFvUVsApouaknA85
609299r5DWmf23IvMnLbvdbG09/CL8+H1nSfPSSdn3j9xscFAAAAfgHaGYl8
5JmEx2RV5t1PS00IuhgVHBUWGh94Iely7JWUlBg67VL48W92W5l/hhDpiy2U
UwmejN60J+K254rXPOSLstQoFTD7yy+2XyfFHLIjfeqAK98/rDmyzycynp55
KfbSOd8j/m6Ou7/YZPOv61ciq41rvXf6Z/rk9XzfNPx0WPGaqw2+fGSNXCQV
NYg5uc1VNxnZKfHx8TFXEy4npFxMSqfGnU2M/Do9zMrvpKu9u6+ZU/yByw+y
mH1DBmLKSKhgvzMAAID3AE7eoacMbmn4nSthZw6fs1939qhXckzS/bvVLaX1
NY0tJRx2Xmas/8nNa9ch5PyVk9f5tHNVQ3c4U11jqtc8pGl+/65+/NkDTq53
1fnl591+/dUnv0FoxW/WfO3gE+VDL43KuXfzTmZZbmqK34mALza5oGVbzJ03
fhO95lL12XtdFT3jr7na4MtHlorqBPVxbXQ3WsIR/3Pn7LyuekdnX8stL25p
r2LeayiNa8/3vhJ+fLvbySUrfFyP30wpYveqCbGeUMByWgAAAN4DuObFyVuX
aBPh4bLR8gBCfg5utORctsBAjBllM7MiguAwGfHhFDsbhNxJ5CAqLZElLRUq
edLX7cQ1zi/YrBlqpzelu+Z5IX8SWrt8fmnnNSQrHyqZzoqp66oT8gyGwY7c
1NtujsEIuZitWWntg9zprkn19BbRa642+PKRxRx6G921KBgFeVmu2+GBbBK3
hpekM3ligpDODKjHaggBjZEcSXHwRohMcqZSsxpZCkKoIaSwkDQAAIDFY9Iq
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
ozj6IeRkbrtiZxSKaHa9+YheVaTh0ukJPq72c/ty19i7+iTQ6VxN/bBWND8j
Y7y3uqvwQjXVJmyP+YZVc7OL1zq4+ifT8wSaei6Hx7mvYFGzqOedSf4IeZEp
6TRGO/6OrpDxNKISAyex+uGtCzce2ATXhedwmRzJj+/ZiyFF0svIKKRspyKU
YLsxLSqC1lx3LSoi3HYj7s6BVbYue6JsqM3hhXwm9yfk+1+/mi+nUzJzs8Ld
TtkgG1+3cFouk2UghCZC+hPi4mN7d9Q4eQlC3F2ZnhewNcIC7fzM0nydB7JJ
JIeX0Ji8uafQyTRKkUHK6SqJZ4TYRdignebLzZeS8GbYktOjaO2473wl8VMW
4oV359WUOHnxpnYzUvMojhEI7URm5sgaR5Oda1I8vWWhs8FNprlmMMwajcbZ
2fdxLRQIX/BeeHmZLc0Ye6rj5nC5TxrVb+vuAGR+2sEnO6moE49vo1rtjFGB
fzH76x5UXQ5Os9947rD/vovZG292n8ktzi9KGK7ySYvYvXWLPVqyesPXpy/c
LKsZ1j+bMkjUczMyZMNPn7fc7Lrvmxro9M3aFcsQ2mCz7VBERkz9eN6TVnZr
noIVn0UNdCa546Jmo0PIxaSiWt4oh989JKhT9he2NlfdKm46Q+PQa0Sdwh99
VNGgGtdMPZsZevwkJyXt6Inj5rbRnoHZmfQaPjfvu2upu+0jliHPNdZbdpwz
P1Xul9lR2jH24uyJNw8Xs6b5SSZajUoum5KMi4dGxcMjYmx0ZKhXLGoSC8vu
XKcec9xtjsx3OR6Lvn7noVDcKBJzh0ZGxeKRYbF4aAT/0LhEKlWoZ3QmjWHW
8B9Pz/w4351Zg2xW+3xW9ezJ/StXvex2mqENv//db9dSlthdcPBLufQt43Ej
s7S8oCDv+1xa/JWzx/xd/3/27sStqatfHP3+C67Pvc/9ec7xnPNwfn3r73oO
r1St1FqliiKIUxhMcaBqHVAcEJlkkEFQIBAFwiDIHAhDmGcI8xhCgDCHIQQC
BAiBQAYyh9wV1L5t31pRERTW59kPpbLDXouVfL977b32WsdA5jX93vj0sQdG
ZlHO/uXEqmFQ90mJ+q1L0MDWec/WUclnlYtDioXmhgTfZyZHLBBE///6H+3/
PLtV2+O8bXpcUc9Kn4NeWnqVf5eW/fksoH/SOuDPPcFeoRW1ztvB5At9Fl4v
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
uxu6pmILO7p4chbIpMv3qzSZVziu4tFHqTn16f4E3yv3Lxzet/O/NB2Wrd9o
6VzeafD8xqP8mIK+bq6cxVcsfMClM014H1VLOuoJyb5mD08gJxxNfBPw9VSB
eviDwvsX3TqazLs4qeIPMVtSq5Ic4h8dtjPXPvrf/wv0Zrf+29dbvzXeesrm
kJWrtZcvLgrn7/3I484NezTqzjmLqxcunf/Z6tq9h3cf+TthoyIySoup/aBL
CDIvX/pxNwVg6/yzJcVy/hXOMzuYlcS2GF+83Q0n42MntbYf/0bX6NAxAxT6
3A3ru488vHA4L38PLw9rLwe0q+sdBy9vG99I76DUiIjijPjG6or+nkEu6POC
zCv5nFYSBJl3cXqAzyT31BCKk3yinv5y57y+3t//awuCbP/vPQfMrpu6RjhF
5UeXtlfTuT3jfJB/17vI0CbxelzlVH8NLfd5CcYSxBBwDo/8xpYd+7VM7XRc
Mu4TyHld47+9lstj0Zj1CW0EWxBDwDm8ZqZZbW0DCwsrb+9LFhYW2tooBLmw
3/CGHdY2oyuBzKKNawbM/PNz/b++yuqulZXFCSt9Heur1+89ibEldCXUs2is
Px9mA/q8IPOy60KivH85dXjX8jQD2xHtk4i+7eGHsd45LXVszWXk5ZVi1KDP
CzKvgl3XUfIiGXPXxVLfVE97h9araYRBfTVrqB06EeQRUV85KgH5F/R/3/tv
+ermpqSrkZCCMXNFISgXE0wSvrFNoGZK1B90PfsLbh3Q5wWZVzHT3JbvG+dy
xFYfObk8rclyobdqlq3T0dfSP6Fnbm5pZXnaQE/vKy0dBNHZtkNH11QH5XLe
NfZpSm1eF5vK4rEXPuJq869g6/ylf7RXpm/c3SO2OshJLWT78uwdW7W0tPX0
9C0t9U/r6etp6esgB/R27j19UccScx2bG1PV38VTs0Tqj7ks8emAPi/IvDNt
GVVJj3EuFlYoHQNdra+WZ1nZsu0rLV0DHZSVuWOQS0xJfN0oyL+g/7veRYY2
iddDN+fZvSPUQlouLiXkkfsDK3MzEzNTwMzExNzynustTKJDCjm+YZDKmvvt
6j8i7sh0XzWIIbmxTx8/vG1ugrp557abr29QYmKAr5/vnXveJuZYZ5+IhHwQ
PaoHuCOzmjVWlIvTMm4niCG1+ZGBT5zQaPPbtvc9AwPCUlLCIsPDAp+EudtH
hkfGZFaC6FHdxx15y8osv/Z8yzMi/L0c0cA1G7SdH9orwYtQlUFhgMw7LlTw
/9DzpZHq82JTcF6BHna21tc0r0Jbo9EeaDTO068ovYz+4T1f1aJawQURvr++
IQ+bGoAOSAnMq6vtB7F9Wqb+gGT+RbfOP3q+rdnVKd4JXmg/O7TNq7/35Wto
azu0gxfo9no8wy73fD087lo7oNEON20dnAMdAlJCUquyG/pA5mVwhXMrn9z7
L8DW+Uv/aC9yVlWsV7y9+RMrE+vzp8+cOnHxyuWb9vYOvv5OHk7OTtddbMwe
uj5w8g1xwOVGFlAru9kg83Il6sXP8nrtP3q+dRnFKcFRAQ7eztZ3b17WvA1v
3rV29nYIiHqWVJhSSYM9X2htvR66KRHMzE8MTNEp3eSKyuKcNAI+JTk5OSkF
j08j5pfn13eUdY3TWLPshcXfrnsrW5wHMQScw9PbaqpLctLw8VmZxPyS4pLa
2pKSspLM3BJ8WnVJTXP7ADhvB9FjXqw561fJRSCGgHN41mBrY20ZkZhWUFRQ
XlNd39JS39hYD74pJzU3t7b2joDzdhA95hf/vFvy6z3f4d6W+moSEcgrJpbW
E2to1Z3M3ok50OcFmVf6+3u+81OM0f72LkpNY1VpSWGe5lXEQiKxikikVNcN
9jC4H37P99WKacoFLotFb+xuIDZ0NdBHR7mgVwVi+8pXX9kYrfPrPV8em87s
qqHVEOtLicWv/t45ecTCUmJZTWF1fVVTE6WVUl9bVVVUCA5WVlBSVtFY1tDV
3M3sY82APi/IvGL5agyGga3z13+eX+/RT/SNtFfTSGnVOfis5JiYqIiExARC
OjE9rzAzNycnh5ifTSjSlJNcRqFTByaYHAHo84LM+3k+YPTrPV/OaO9gF7m1
oay2orCoIEfzNiwoKqyoLWtobeoc6GJOwXu+0PpSKeUquUQhEUgXFxdFUoFA
IZGo5O/6XKnkMpVEpBDwBLMcziR7dHR0fJIzNSuYESj4EpX0rS9/PQWBQiYR
iwQCHk/AFwlEMoFELZGrVyXibjCwdT5nG6V1Xv9mqVjA53Fm2KPssVHWyCiD
Mcoam2ZPz8/wJHyRXCqD7wAIWk1LKqVKIdPEEJlMJtVED5lMpXzXCIolpUIl
k4AYIhHy+fM8Lpc7N8+fF0pA9FgEv+ytL389+Z5SKZdLJRKRSCKWSqRKED1k
CvXnOU3O+oKt8znbKK3z+jcr5CCt8/k8Lm+Wy53hTk9zubMLvIVFkHkXJQq5
Ar4DIGg1LS2pNDFEKVcqAPDB1kQP1dsma/31VWAPEEPkMk0cEItFItGiWCKR
ysF5u/yvXv562nkVOIhCLpfJ5HLNhxqct4Po8a5jbkawdT5nG6V1Xv9mTVqX
SaRikXhRtCgSCYWixUWJWCIDfV5woHfWC4IgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCPpyKZVKmUwm
Fou5XO7IyEgPBEEQ9D4GBwdHR0bZbDaPx5OIJesd1KEvA8i8AqFwjsej0+k1
tbVECIIg6H0UFRXV1ta2tbYNM4ZB/l3voA59GUCfF2TeCTa7rr4+ITHRE4Ig
CHofwcHB+ER8QX4ByL+g/7veQR36Miws8MfGx3t6egoKCnA43IMHD9zc3J4+
fRoEQRAErUBcbFxWZlZ5eXlXV9f09PR6B3Xoy8Dlcun0/vr6hqSkJB8fn2vX
rj18+DAwMDAegiAIWoGMjIzSktKG+oZ+ej+IqOsd1KEvA5vNbmttK8gvCAsN
c3BwQKPR9vb2ISEhORAEQdAKlJWV1dXVtba2Dg/De77QSo2PjZObyEQiMSws
zMPd4+bNm/7+/unp6S0QBEHQCnR0dNDpdJB5p6enhULhegd16MswOjJaW1uL
T8SD5Ovn5+fq6hobGwv+ZQKCIAhagampKS6XC/q8IPPKZLL1DurQlwGcrZWX
l0dFRYWHhwcHB2Ox2IKCgv7+/vUuFwRBEARtWENDQ6WlpSDzhr0B/hf843qX
C4IgCII2rMHBwaKiItDnBWkX9H9jY2OrqqqYTOZ6lwuCIAiCNqz+/v6CggIs
FguSL8i8BAKhvr6exWKtd7kgCIIgaMPq6+vLzs5++vRpSEgISL7EdGJTU9PY
2Nh6lwuCIAiCNqyenp709HR3d/fnz57HxcWBREyhUCYmJta7XBAEQRC0YXV2
diYnJzs5OQUEBMTHxcPpSSEIgiDoU6N10BISEmwf2GIwGDweD6cnhSAIgqBP
ra29LSY25s7dO/4Y/5SUFDg9KQRBEAR9atRWauTLyBs3b/hh/IhEIpyeFIIg
CII+tWZKMy4UZ2l50cfHOyMjo6uri8ViLSwsrHe5IAiCIGjDamxsxGIDzcxM
PT08MjMy+vv72Wy2QCBY73JBEARB0IZVV1fn++SJsZGRq4tLVmYmk8nkcDgi
kWi9ywVBEARBG1ZtTY2Pt/cxAwOQfHNzcycn2TweTywWr3e5IAiCIGjDqqmu
9vLy0j982NXVtbCwYG5uTiSCq2JBEARB0CdUVVXl4eGhp6cHkm9pacniokgm
kyoUivUuFwRBEARtWJWVlSDtfv/9987OzmVlpSDzyuVylUq53uWCIAiCoA2r
vLz84cOH3377rZOTU1lZGejzgsy7tLS03uWCIAiCoA0LJFwHBwcdHR3wFXy/
3sWBIAiCoI0PJl8IgiAIWmMw+UIQBEHQGoPJF4IgCILWyNIylYpEIjk6Ou7a
tQt8Bd+vd7EgCIIgaMNaTrwapLIykHb37Nnj5ORUXl6+3uWCIAiCoA3rVepV
KhQg+YK0u3fvXmdnZ5h8IQiCIOjTUSgUUqlUJBKVFBeDtHvghx8ePXpUVVm5
3uWCIAiCoA0LZF6hUDg7O1tYUODq6npEX/+xl1dNdfV6lwuCIAiCNiyxWDzH
402w2bm5uY/c3IyNjHyfPKmrq1vvckEQBEHQhiUSiWa43JHRUZB8PT09Tc6c
CcBgGhoa1rtc0IotydWqRbVygc9hjvdRexvKyBWFpQU5RCIxv7SqnNxV3zvZ
O86b5ovlarVSrVatd3lX0yas+yasMgRtREKhcGpqamhoKCcnx9vb+6effgp6
/pzc1LTe5YJWDIRiBVctGx/vqWrOicoMcAhytra7eRmNRlvZuT8MIvhntmU1
M7vG5yVqtWw5IG8cm7Dum7DKELQR8fn8iYmJvr6+7Ozsp0+f/vzzz6GhoRQK
Zb3LBa2YcgGEYrW4p7c6NsP3hjdKx0JXS3vbFgRB/k374LcWzqe8C30y2sp7
JwVqNQjI8vUu72rahHXfhFWGoI2Ix+Mxmcz29nYikejr63v16tUXL15QqdT1
Lhe0UpJ5Nn+klUMraCuKzX3pF+b5wOP+VetLZmfPHDU3RZudtTK1cPYISCZW
d/QJlRMSFV+xcVaq2oR134RVhqANicvlDgwMNDY2pqSk+Pn53bp16+XLl62t
retdLmilFsYGx5qKu9NCGjLiCrPSCbnFqcSU1KSItFjfZw/v2ZmiLbQPOlu7
RaWRyidlXfOKafHGuQ24Ceu+CasMQRsSh8Pp7u6urKzE4/H+/v737t2Li4sD
HeH1Lhe0UpxeWndmQqW3bXlibFkttWRU1j7BYU8NKLkUcqxvyJmjlghid9wM
g0uOHxRXT8lGBBvnNuAmrPsmrDIEbUiTk5Mg1RYVFSUkJAQEBDg6OiYlJXV2
dq53uaCVmmMND9dXUgnRbRXl7d1DNK6CObfAm59Q8fvbU4LjLhy/vwXxNDcL
evFZR+MllWpJqVDJZXLJolgkEPJ5C/Pzs7PzHM7C/MKiWCJ/NXD3D5dQN0bd
38smrDIEbUjj4+MUCiUrKys2NvbZs2ceHh7p6ek9PT3rXS5opQSzs5NDg4PN
ZCZ9YHxydkqkmheLJRLeknSqN/dlxs3T3loI9mez8JjPOhprMq9MopIIxfzZ
eS57ms1kjYwMDox2d7NGx7hz/EW5Wq34pwdnNkbd38smrDIEbUgsFqu+vp5A
IERHRwcHB/v6+mZnZ/f19a13uaCVkkgVCwLJNFcIvoLvNf+0pNQ8ZbIkZpQl
l9qbhesgkTfNYhI/62gM+rwg8yoEc3zO2ORoP4Pe1tVOIzd1VFZ2dXSzJjgL
rwbu/qHoG6Pu72UTVhmCNqSRkZHa2trExMSXL1+GhoZisdiCgoKBgYH1Lhe0
UnK5UiSWgVAMvso1V2dBMBarFaArxO4pSU9zvOuxd1fIfXtCRnHppKxjXjH1
WY7AUYrnZXOj4omO3uaywszE0GAMFhf9NCzLI6IqpaynnTGzuPzUquL3r9oY
dX8vm7DKELQhMZnMqqqq2NhYkHwjIiJA/i0pKRkaGlrvckErpVQtgSAMOkHg
K/herZkDib8kGV8S9FKLsqMe+lkd+CXAOSyrmNIpVLIkqvnP8tkTOX9ycaJt
gV5Ylvr88UNrYyMDQ7TVkav+h+5nuMWTS2jjIrVa+k/Jd2PU/b1swipD0IY0
PDxcXl4e9Rvgf8E/rne5oA+3JOUuCftVsw31BQUYVzxKP8Tbq6ikZnBGreYv
p7DPkHSOIRgicSkvYn1vnDm6BwH+dQ+y6wZy/IXJUxK+jrHCKSO+xLp/pE1Y
ZQjaAAYHB4uKioKDg8PDw6OjoxMSEmpqakZGRta7XNAHWL73pxYLpocnOur6
StNKkzOjQvJc3Yvw6e0tPVMgFC9+5JRHbyYWnp9mj3QP0mpog90j7On5BaV6
UaWWf0QfSy6cFE+1CYYKc3HONsYHdyLIjq/2f2Vo/5+3sm68bM5um3jXZIlf
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
O9TAGM9ODHJVldeAIBFJpLkLtmTr9BnMX40nkW9PT09bWxuQ19LS0szMzLi4
OENDw6NHj/LmNA8cuH79ur+/f0FBwfDwq3PXl5eXwa/A6UB8gXDr6OiEhYUB
Lf7w5m2SJ5mzNbShhHR/o5uyx3ZC0PHD59R0Pc3COsILR+r650iUtdkh/Fi5
d1+sZoDNdZSy3o69JhcMox/ldU4wuYub3Nduq/VsdHeiIRXvrxN9SdBOT03D
2kvUrepuRn/JwNKrM0zYK9zNCS6zsybJy031nDwE3UAgbT+6+DInubTuxlyc
v7GTppCmo5F/ck5jxzp3nMFd+QDnx2ZQmJT5DSJhdqCrF19XjSuuyszD52Xi
i3FFxfnZxVW44raKVkL3xPIsdZNEZ9NZvE+/yVhnUpboxMnZgd5efD04qzqn
uKq4uAr8W1yRk1ODwzWV4wc7B+enSBvLVCbt6SAaiz+ZTqUQp+YJXYRWfF9L
TUtjQ019c3V5ZVVePh6Hqy2tamwbah1fG11YJ1F/fT+dw1pn05fYlMn+mqR0
fwOgvBoS3wh//T/g7j14TvmGZzSmfbVwfH1k5b0vsc0strHQs9aTuFhuG2Gv
oXTmGAQJ/Ch5+aprgk8DMW+YMsTXANpcD7EjabrQNtRWRUH8+2c2jAnoWCsc
p73VhtvDYuBTbFJnQc9/sD49N+IBUN7bmvISUlJfCp06rWmq7ZnoWTyS2TXX
N095YQn5szGr4cL4PEttn8N7/PT0MdjswD5aAWFuaGqAtdBYEu9nfVX92E7B
iz9p2wSkPOoglY1TR1dg9f0r8mTOd2FhYXZ2FgS2g4ODQDSrqqocHR3Pnj0L
Hr29e/cikci7d+/Gx8d3dXW98k0WFxcHBgaqq6sTExM9PT2NjIyioqLa2z9C
fRU2bW6T1MWaLS4Os7NSEBeFoKNfih4/rH9CAWvsUJCU1zY6P91Vk1QXdafY
WthNH6miZSKohLnpUZBSM0Lc5GVbMV43+PTsSekuiIg3VbsrvMNcQ9XINfRO
FiG8eb5thvrqtRVAfFnjXEZHVaKns+o5aQi6ikBaf2TxXeEyx7n0jqq0GKdr
ZggBhOlVpyhcVQuVO7rBJX6A+AKvSJvtJI+UtGfE4py83NQsXK7qOelddbBQ
M7MwuGnhomYRfj+8JKF6uG2BMbrKIvEX5wCvSJ0bWB2tbctMSXHyAWe5alu4
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
xHc0+BtYHiwbybFt9D7mZqguqWgFiy/My8zPz3d3d4MA9v79+6dPn+Yt9xMW
vnTpkoeHR1ZWFlDbrQf39fWlpqY6Ojr6+vpGRkTicLiG+oapx6+uRfle8JSX
MsZZ6ajODXO1vil3Slj90hVtW1+zMLx3XE5iRhy+KCgSfdNW85C6ECT9466j
RxB7jutesQwNyW3pXOWMU3n6+8p33vKg2aOktUGHGoFyQ8fW/E7iu0kB4QJ3
Y4TQUlgciQk2MfI2M3eysrWxcbCxMLI20bI2kFeWPbhv9xc8V/ntvpMyyup3
rLWNrc0swBE2tpZ2lqb2JkaOnkHJiWWdVVMb/UTW4i/r7rL4g6zr41XxlU6o
aCnI8pKUvIW7oHezXi4hb+gFT8JmbgDfCGITKnl5hUxcIpN6KrAlnshYdcgA
eeiojA50JkT5QXFs5YtegjdyTuRuTvXmhqbcPm8vCN05h1DT5znGB1kd5R2d
LFJ3e0kw1lXTDCWoLr0P+EYQmxwQQ52W1lVQtjW1jwlOaygdJnXPUefJ7266
p6vPugqj46xvWBzfrXpO5iDqzo7LDxE2gbZBERnZcUEPDO0Ujt7YCUl++f3X
X6pCX9yX104Ozuqd2OQuvWmjq+1pMdp8H6k7bbbMOey+usJp3ljKDyck1Myd
H6TVhuTXZVTU1TbUFuakpER6h3sYm2mqyQqfEoR2nT594+r9uAelU7huYu/8
6wZst5XFXhbfr0WlJfS9b8R0B+Mnm98/LeFllocqR/IcGn0k3IwuSyrZwuIL
8zJra2vT09P9/f1AT2VkZHjx1+7dcnJyhoaGL1ev6unpSU5OtrOz8/HxiYmO
yc3JbWttm5mZ+fBmvLyl4M+1nYnUqXVeamJfZVDqA3l+fuYOIQHe/mjiiub3
wou2lg54mS0P2gOU9C0IQiJQaHRs3e8lvk9LfPRVJqe63XNCIi1V1fUuXtHS
0tW6qKqlKsHf3E1QkL/vm8CXgkKHxSUUtBRRWprq4AitKxevqqveRCJ1TeyD
MZn1W+sVbIHJf6DJhJLYInPlIBHIHIlQNkGL+LdZFIwVv3ZdP4Ofd0ki4LFF
DsggCeim1KGD0q8buX12cAm2yBwJLmGDRFw24ZcOyB/CD8+Cq091ZzckGKfa
iADfCGIT/sCmAMTfi+2YtI2Rd25C91LNJHly9Z3LTz2ru4KPRTso8/4EQl/s
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
jE+Ys4WThZ6B9lU1NbWrt4z0rN0tPKMfxucnVrR8hMj3Wf2NwZq6bO8kTzXP
RK/s6qrBVyZ7vBtPU1JXZvrGW/I6sjCJ/vfvm95SVeGBQqkqoy5oGdre9oyx
SGzA1g63TBK37v5DXRqf768EvjEr0tXx7h1VZeQt/Tu2bq4+0dGebu5uBobO
qAve1i7BWL7lB5fHl3kee3N9nrHUCXxjVU6ol4ulmprqHRNjBy/PoMSEoLCg
IG+XwAfmoSGhERkVW896meeRb0VGKNrpLjC4mo6RmqW7mmu0U0plRvsYUN5Z
GpvyYuQ72VNakxuViHHwsjcz0bvJO0tNT03NXk0NY++en1g8+ObI909tsZ8j
3/aM8hSnCFc1V0s1Qx2+Da7qqOlZqlm46jl42j/04Ue+9vYGehZqaha3jCz4
t7F/UklGbS9QXsIShbj+7qLwJ7bYG2w41phRGeWINVd10UXd1lBSUFDQ0Lp2
y8Dc0s7d6q7lXbOb1oaouzamlm7+FpiskLyWkv6ZVydlUafpi82UiczSKHdn
ravndx7T17T0fpSXPkxpmqNPvbRTIwwMgMFgUKlUIpEYHx+vqan5z3/+c9eu
XUeOHJGWlnZxcamqqgLHlJaW3r179/Dhw1ZWVsXFxSDmBcrL4XyUQZRnVXGo
JMr8GHG0Y7Ctqqo0G4eLzc1NKysrrKurriotKc/OKU7G4UurGzuHQf92bIm3
n+/bRnKe7qi7NtLyuCCiB2McYmGl+ZP9V8ddr9pmxJYOzLC5RPbTlf7P53wX
xnuHO+tbq4qrivPyczJxOFxmbkFeWU1xbUd913D32MxHmPN9Vn9jafLxQF1P
La62u25gYmLplcsc3o2nKal08uLK9NDcQFNPQ3l5QXZyfHwi+Cc+KTY+BZdb
llPTWdw91TG5PMMvQP9831vG+grwjSA2GWjDVxZmJsdGpaWmZBfkF1RWFhYU
FaZlFcYlVxZVNbbzLA/82wq/fD1wX8A3gthkcrilrqoYh0vOzc8tw1fUNTfV
1tXW4itqSosaG1ta+8e3nvWKpj+b8x0baK3FlwCD43IKcCU1uOoOfO/YwCwJ
xLxAeZ9udfdsznd1YXRysL27CV9XUVSYl807C5eHw1XgcE0V1cM9hKU3z/n+
qS32fM6XNDsw2otvq8ZVl+AKcvg2yMzB5ZXgiqvzKmsr6uubWptqqioq8vPA
xYpzC4r5t3FjD6F/cgHEvEB5acx37+r9mS32ehuuTA+Mt1d2lCSXZ8alxkeF
hoVFRcfEJ+FwGblp6ekZ6clZabF5BXmF+IbipoGWoenRRfIrn1P6Yu/qAG6+
+kFSgK2utvkeUaOrZhGhWS3dRMYkhbX60k6NMDBc/taUT15zcnJ0dHS+/PJL
QUHBPXv2CAkJmZmZFRUVgd8CwbWwsBAREQGv4PvfuEVPB7gYG6sU8gpxibgC
/ktjUFlcEMe8tKH822FTJllztYyRxETMQ1U5SwjSklHF+CU3va0O8J8Y9uYm
m8Fg0WgbtI31dRZ5nU0Hzua1SvTsLCaDTaewyMS1pfn5mamxsbHHM/NzRPIr
iwlsPe/JxAGLQdugkqkkImWVTKFsvONF/yDAFntftovFnr4zjUYlkpanZ2Ye
T01NTEyAhk0+npmZW37HzQopk7XzNZ6EBGSAh4GcgQeETFBB1yTUTcIrjGDe
zBP9LSsrs7a2FhUVFRYWBuL71VdfaWtrp6eng7g4NzfXxMTk9xLfZzXcWOt0
GpVCpqyD/zJYQHlBrPua7Ko3waYvbZIGgP5WZSV6WLsrndXTvu1j45vrVziY
0zHTP09+sT7tdoDDZrNZLJ5vBP8wNoGDYjA5m+y32I6zCU6hA99II6+ukogL
CwvLpNUVCv2VZfS2nvfEg7E3mUzgiKkU+jqdTme+40X/IMAWe1+2i8WevjOD
uUGhUogk0vLy8tLSEmjY0jKJtMJTXiqNwXzNEAGLTqaTpimzA721WbkxHgH3
r9k6Ot5wjZVH17hkDVQOLjH5+0JtJ98C89EB+ltfX+/l5YVCocTExID4fv75
5+rq6jExMeA+TE1NNTAw+L3E9+kAF3jQWEx+QSMmr4w5i6+8v2Kom8MC/eMl
EP+OtVeUJYVFOFk62KG1rSNlzLIcYlqKO2derE+7HQB/TZ5v3OQBHCQIDYCD
equLAqfwfCMT+CE6nbYOOl3rNDod/N+rCshvPe+JB+Ndj8UEjpjFZLJYm+94
0T8IsMXel+1isafvDN4X+Boajba+zmsVr2HrNBp9A8S8QHlfp+9AeUljzXMd
WbmJ4fb2bnJqpjdsg+9hywJrJgsHloaXaZvwCiOYd+Dp7gmGhnJycrt389bR
y8vLBwYGjo2NxcfH3759+/cS39+Kn8s4+LsoXXV/TX1aGBgYmHcCxLxAeUcK
PDBoN7lLLpCIk7x5amBR39uKcsPAvMDAwEBWVpaHh8elS5eEhYWB+J49e9bR
0bGqqsrf3//atWsHDhywtLQsKSn51C39lTDXptanGoD+luakuDxMVLod5xRW
VdA8scjikNncjT9LyAEDA/PHgLo0sTRQNVETm5Wc8MAnGWme6hTbUNA59bbt
qGBgXmBiYgLobGxsrIGBwdGjR4H4glcQCMfFxdnb26urqx86dMjKyuoXuw3+
iWBvrAH9BfHvcE97aUldRGx5QUV318j80gabzORs/IrpZBgYmL8wtJUF0njP
TEd5e2NdQVUbtqSvtHNqcJ78tlofMDAvsLCw0NPTU15eDqT2zBlekdX9+/dr
aGi4ubnp6+sjkcgjR468vNXvn5ENytra/MwiYWBxemppefVtmZYwMDAwr+C5
J1manyZSyPC+gTC/jtWVlcnJye7ubh8fHzk5uc8++2zPnj3S0tK6uroXL14E
PxE7edLOzq6ivPxTt/RDYdJp6ytE8NSQiUQyZf1tmZYwMDAwr+BnT7JKpNBp
VP4iSTjghXlf6HT6ysrK3OxsZGSkqqrq3//+9//85z+HDh2SkZE5d+6clKSk
pISEo4MDvrLyU7f0Q2GzmOCpAb3WDdr6xsZbMy1hYGBgXsHPnoS3GpLJgBcW
wfwqeAsH2OxNFis9Le3y5cuff/65gICAoKDg3r17gQSfPnVKTkbGzcWlurr6
U7cUBgYGBgZmm/Bk3R6gsLDQ1NRUaL/Qnu/2fP311zt37hT64YdTYmKKCgoe
7u61NTWfuqUwMDAwMDDbBQ7nycJ5ENu6urrKyskeET3yzTff/OMf/9j97bcn
T55EKSt7eXnV1dV96obCwMDAwMBsN1paW0Ifherc0pE6J/XNrm8gCPq///u/
EydOqKmp+fj41NfXf+oGwsDAwMDAbDd6e3txONwDhwdAbX/44QfeVqmCgqdP
n758+XJAQEBTU9OnbiAMDAwMDMx2Y3R0tLS0NCwsTFdX9/Dhw7w9rHftkpKS
0tHRCQ0NbW1t/dQNhIGBgYGB2W7MzMy0tbbl5uRa37UWExMD4rt79245OTlD
Q8OoqKj29vZP3UAYGBgYGJjtBnGZODoy0tLUhPbwkJaW/uyzz3744QdlZWVL
S8u4uLiurq5P3UAYGBgYGJjtxjqVSlxcnBqfCA8NVVFG/f3vfz9w4IC6urq9
vX1KSkpvb++nbiAMDAwMDMx2g725ydsjm0ZLS0m5fOnS559/fvTo0StXrri5
uWVkZPT393/qBsLAwMDAwGw3eLU2WCygv/m5uYYGBt99952srOydO3e8vb1z
c3OHhoY+dQNhYGBgYGC2G09KbYD4t6K8/P79++Li4pqamlZWVgEBAYWFhSMj
I5+6gTAwMDAwMNuW+vp6Hx8fNTU1AwMDJyensLCw0tLS0dHRT90uGBgYGBiY
bUtHR0d0dLSJicmDBw98fX2xWGxlZeX4+PinbhcMDAwMDMy2ZXBwMDs729PT
MyAgICIiIiEhoaamZnJy8lO3CwYGBgYGZtsCdBaoLdDcpKSklJSU1NTUhoaG
qampT90uGBgYGBiYbcvi4kJfXx8eX1lWVlpUVJiXl9fW1jY7O/up2wUDAwMD
A7NtoVDIc3Ozw8PDnZ2d9fX1ZWVlPT09CwsLn7pdMDAwMDAw2xYWi8VgbKyv
U2dmpkEIXFdXNzQ0tLS09KnbBQMDAwMDs21hszeZTCbQXxKJODU1NTg4ODMz
QyaTP3W7YGBgYGBgti38YhubIP6l02lra2sg5gXKu7Gx8anbBQMDAwMDs/0B
KvyLVxgYGBgYGJjfGlh5YWBgYGBgfn9g5YWBgYGBgYGBgYGBgYGBgYGBgYGB
gYGBgYGBgYGBgYGBgYGBgYGBgYGBgXkl/z8OXR+n
      "], {{0, 387}, {639, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    BaseStyle->"ImageGraphics",
    ImageSize->{187., Automatic},
    ImageSizeRaw->{639, 387},
    PlotRange->{{0, 639}, {0, 387}}]}]}]}], "Subsubsection",
 CellChangeTimes->{{3.765805393859423*^9, 3.765805401089613*^9}, {
  3.7659141165907865`*^9, 3.7659141494923105`*^9}, {3.765914248518884*^9, 
  3.7659142873262424`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getOrbitCosines", "[", 
  RowBox[{"2", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.765914338916026*^9, 3.765914343440923*^9}, {
   3.765914446041266*^9, 3.765914480088585*^9}, {3.76591487466584*^9, 
   3.7659148785046215`*^9}, 3.7661757768448887`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9654244897137586`", ",", "0.13148290817866135`", ",", 
   "0.13148290817867908`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7659143437500687`*^9, {3.765914420482662*^9, 3.7659144804904823`*^9}, {
   3.765914878815769*^9, 3.7659149015848956`*^9}, 3.766131465654018*^9, 
   3.766132039876567*^9, 3.7662364558984437`*^9, 3.7662703068376193`*^9, 
   3.7663426741021748`*^9, 3.7677327909815784`*^9, 3.7678903789710865`*^9, 
   3.7678907302255697`*^9, 3.7678907722421865`*^9, 3.7681207317495127`*^9, 
   3.7681700084142227`*^9, 3.7682082023702726`*^9, 3.768210190368864*^9, 
   3.7682157624863644`*^9, 3.7683189900926356`*^9, 3.768392646378807*^9, 
   3.7684064561876535`*^9, 3.7684068417547846`*^9, 3.7684077616285152`*^9, 
   3.7684728691529016`*^9, 3.7685021950211487`*^9, 3.7685028030478735`*^9, 
   3.768548408257229*^9, 3.7686608785540447`*^9, 3.768661452119068*^9, 
   3.768671925482769*^9, 3.768734280951205*^9, 3.7687352884371195`*^9, 
   3.768749399654698*^9, 3.768759125990038*^9, 3.7687594322224226`*^9, 
   3.768856274212375*^9, 3.7690908917392807`*^9, 3.7691015806191835`*^9, 
   3.769159862358023*^9, 3.7691758897509956`*^9, 3.769267642625765*^9, 
   3.7692757656101*^9, 3.769372230474516*^9, 3.7693725042844048`*^9, 
   3.7694256950981927`*^9, 3.7695301532466145`*^9, 3.76960860461137*^9, 
   3.769802264758221*^9, 3.7698067473252516`*^9, 3.769949483288375*^9, 
   3.770189622230734*^9, 3.7701944119386597`*^9, 3.770463743144684*^9, 
   3.771612481124992*^9, 3.7716698018566427`*^9, 3.7716877875250835`*^9, 
   3.7716911597021084`*^9, 3.771691288285709*^9, 3.7718345127409987`*^9, 
   3.7720968735047503`*^9, 3.772198204768407*^9, 3.7724424106849065`*^9, 
   3.7724622165015116`*^9, 3.7724816429536524`*^9, 3.772532012452976*^9, 
   3.772787375229231*^9, 3.7730743526151314`*^9, 3.77331675741523*^9, 
   3.7733287886140366`*^9, 3.7733456304507866`*^9, 3.774372731003339*^9, 
   3.774373293460784*^9, 3.7752337648107986`*^9, 3.7756419605791025`*^9, 
   3.7756467241673765`*^9, 3.775727400265875*^9, 3.7759119266523905`*^9, 
   3.7760680783863583`*^9, 3.776972407200627*^9, 3.7770265030409503`*^9, 
   3.7773614258480663`*^9, 3.7802537236784706`*^9, 3.7802551933701267`*^9, 
   3.7802555273182325`*^9, 3.7802592640309763`*^9, 3.785864296492633*^9, 
   3.787073122443342*^9, 3.7884399638926153`*^9, 3.788983368248969*^9, 
   3.789459072121932*^9, 3.7894591887800927`*^9, 3.7903202106492047`*^9, 
   3.7913250175806227`*^9, 3.7913258930296345`*^9, 3.7914843659502277`*^9, 
   3.7921432060306573`*^9, 3.792186317020566*^9, 3.7959581980890903`*^9, 
   3.7960704870806217`*^9, 3.7961155641706057`*^9, 3.7961274070014763`*^9, 
   3.7962220355656123`*^9, 3.7963014423379154`*^9, 3.796316367440795*^9, 
   3.7964203982210817`*^9, 3.796422102441049*^9, 3.7964224552448654`*^9, 
   3.7965689245582695`*^9, 3.796568972150673*^9, 3.796663724619483*^9, 
   3.796929351228883*^9, 3.7969294869442887`*^9, 3.7970987078523493`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getOrbitCosineSum", "[", 
    RowBox[{"a_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"Total", "[", 
    RowBox[{"getOrbitCosines", "[", 
     RowBox[{"a", ",", "t"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7659154696495275`*^9, 3.765915493152662*^9}, {
  3.7661757768518934`*^9, 3.7661757997337165`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"getOrbitCosineSum", "[", 
   RowBox[{"1.01", ",", "\[Pi]"}], "]"}], "-", "1"}]], "Input",
 CellChangeTimes->{{3.765915052330905*^9, 3.7659150617128153`*^9}, {
  3.7659156496481066`*^9, 3.7659156651288853`*^9}, {3.7659157309598293`*^9, 
  3.7659157404555407`*^9}, {3.7661757768588514`*^9, 3.7661758025092726`*^9}}],

Cell[BoxData["0.49988863866905664`"], "Output",
 CellChangeTimes->{
  3.765915061997484*^9, 3.765915665618576*^9, {3.7659157318684797`*^9, 
   3.7659157407218285`*^9}, 3.7661314656739616`*^9, 3.7661320398965144`*^9, 
   3.766175802816451*^9, 3.766236455914402*^9, 3.7662703068545465`*^9, 
   3.766342674122121*^9, 3.7677327909995303`*^9, 3.7678903789950223`*^9, 
   3.767890730275437*^9, 3.767890772289061*^9, 3.768120731769488*^9, 
   3.768170008528895*^9, 3.7682082023882246`*^9, 3.7682101903957925`*^9, 
   3.768215762504344*^9, 3.7683189901305656`*^9, 3.7683926463987527`*^9, 
   3.7684064562075987`*^9, 3.768406841774729*^9, 3.7684077616474648`*^9, 
   3.7684728691743565`*^9, 3.7685021950381303`*^9, 3.7685028030678225`*^9, 
   3.7685484082761774`*^9, 3.768660878577963*^9, 3.7686614521410093`*^9, 
   3.768671925512712*^9, 3.7687342809731436`*^9, 3.768735288457081*^9, 
   3.7687493996776085`*^9, 3.768759126025939*^9, 3.7687594322593193`*^9, 
   3.7688562742462873`*^9, 3.769090891782136*^9, 3.7691015806720343`*^9, 
   3.769159862374978*^9, 3.769175889771968*^9, 3.769267642652693*^9, 
   3.769275765630047*^9, 3.769372230494491*^9, 3.7693725043013463`*^9, 
   3.769425695121131*^9, 3.7695301532685556`*^9, 3.7696086046642275`*^9, 
   3.769802264791134*^9, 3.7698067475686007`*^9, 3.769949483310317*^9, 
   3.7701896222506804`*^9, 3.770194411958601*^9, 3.7704637431675944`*^9, 
   3.771612481149954*^9, 3.7716698018785844`*^9, 3.771687787553201*^9, 
   3.7716911597240496`*^9, 3.771691288308623*^9, 3.7718345127609444`*^9, 
   3.7720968735256944`*^9, 3.7721982047953253`*^9, 3.772442410712832*^9, 
   3.7724622165374165`*^9, 3.7724816429736357`*^9, 3.7725320124729233`*^9, 
   3.7727873752535076`*^9, 3.7730743526430564`*^9, 3.773316757435176*^9, 
   3.7733287886330147`*^9, 3.773345630483699*^9, 3.7743727310292697`*^9, 
   3.7743732934827576`*^9, 3.775233764847701*^9, 3.775641960614009*^9, 
   3.775646724192311*^9, 3.7757274002908077`*^9, 3.7759119266942787`*^9, 
   3.7760680784192753`*^9, 3.776972407242545*^9, 3.777026503065883*^9, 
   3.7773614258929462`*^9, 3.780253723713783*^9, 3.780255193410022*^9, 
   3.7802555273444185`*^9, 3.78025926405588*^9, 3.7858642965265427`*^9, 
   3.787073122489249*^9, 3.7884399639265275`*^9, 3.7889833682768936`*^9, 
   3.7894590721814575`*^9, 3.789459188807551*^9, 3.790320210673153*^9, 
   3.791325017611511*^9, 3.791325893378701*^9, 3.7914843659801474`*^9, 
   3.7921432060577784`*^9, 3.792186317047495*^9, 3.795958198370339*^9, 
   3.7960704871055574`*^9, 3.7961155641971407`*^9, 3.796127407032422*^9, 
   3.7962220356150455`*^9, 3.7963014423728213`*^9, 3.7963163674657702`*^9, 
   3.7964203982490344`*^9, 3.7964221024659815`*^9, 3.796422455254839*^9, 
   3.79656892458398*^9, 3.796568972172265*^9, 3.796663724666756*^9, 
   3.7969293512498627`*^9, 3.796929486964265*^9, 3.79709870787326*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"getOrbitCosineSum", "[", 
   RowBox[{"1.5", ",", "\[Pi]"}], "]"}], "-", "1"}]], "Input",
 CellChangeTimes->{{3.765915748823907*^9, 3.765915751855796*^9}, {
  3.7661757768628407`*^9, 3.7661758057815237`*^9}}],

Cell[BoxData["0.3626596629429204`"], "Output",
 CellChangeTimes->{{3.765915749403355*^9, 3.765915752306574*^9}, 
   3.7661314656879244`*^9, 3.766132039908482*^9, 3.7661758061345797`*^9, 
   3.766236455923377*^9, 3.766270306864548*^9, 3.766342674133092*^9, 
   3.7677327911361656`*^9, 3.76789037900699*^9, 3.7678907302874045`*^9, 
   3.7678907723030243`*^9, 3.7681207317824535`*^9, 3.7681700085468454`*^9, 
   3.7682082023972006`*^9, 3.7682101904087563`*^9, 3.7682157625152874`*^9, 
   3.7683189901505136`*^9, 3.768392646409755*^9, 3.7684064562185388`*^9, 
   3.768406841787695*^9, 3.768407761662423*^9, 3.768472869186445*^9, 
   3.7685021950471106`*^9, 3.768502803078823*^9, 3.7685484082881727`*^9, 
   3.7686608785889564`*^9, 3.768661452479106*^9, 3.768671925529668*^9, 
   3.7687342809881115`*^9, 3.7687352884670577`*^9, 3.7687493997015843`*^9, 
   3.7687591260458856`*^9, 3.768759432278328*^9, 3.7688562742642436`*^9, 
   3.7690908918061066`*^9, 3.7691015806989613`*^9, 3.769159862384951*^9, 
   3.769175889784932*^9, 3.769267642667653*^9, 3.769275765641017*^9, 
   3.7693722305064583`*^9, 3.7693725043113194`*^9, 3.7694256951331334`*^9, 
   3.7695301532825184`*^9, 3.7696086046931505`*^9, 3.7698022648080883`*^9, 
   3.7698067475805683`*^9, 3.7699494833232822`*^9, 3.7701896222636456`*^9, 
   3.770194411971567*^9, 3.770463743179562*^9, 3.7716124811668806`*^9, 
   3.7716698018905993`*^9, 3.7716877875651503`*^9, 3.7716911597420654`*^9, 
   3.771691288322615*^9, 3.7718345127739134`*^9, 3.77209687353866*^9, 
   3.7721982048102856`*^9, 3.7724424107238026`*^9, 3.7724622165533733`*^9, 
   3.772481642986597*^9, 3.7725320124858885`*^9, 3.7727873752702503`*^9, 
   3.773074352659014*^9, 3.7733167574471445`*^9, 3.77332878864399*^9, 
   3.773345630500654*^9, 3.7743727310471935`*^9, 3.774373293497693*^9, 
   3.7752337648686438`*^9, 3.7756419606339555`*^9, 3.7756467242082667`*^9, 
   3.7757274003057694`*^9, 3.775911926715222*^9, 3.776068078437222*^9, 
   3.7769724072634583`*^9, 3.7770265030808434`*^9, 3.7773614259188766`*^9, 
   3.780253723731735*^9, 3.7802551934294405`*^9, 3.7802555273603764`*^9, 
   3.7802592640688744`*^9, 3.785864296545492*^9, 3.787073122513157*^9, 
   3.7884399639454765`*^9, 3.78898336829452*^9, 3.789459072212409*^9, 
   3.7894591888214893`*^9, 3.7903202106881127`*^9, 3.7913250176284657`*^9, 
   3.7913258934026375`*^9, 3.79148436599411*^9, 3.792143206074728*^9, 
   3.792186317066444*^9, 3.795958198455109*^9, 3.7960704871194906`*^9, 
   3.7961155642140956`*^9, 3.7961274070503745`*^9, 3.796222035643261*^9, 
   3.796301442391771*^9, 3.7963163674837465`*^9, 3.796420398264*^9, 
   3.796422102479973*^9, 3.7964224552628164`*^9, 3.7965689245989513`*^9, 
   3.796568972185233*^9, 3.7966637246876993`*^9, 3.796929351261795*^9, 
   3.7969294869742365`*^9, 3.797098707886257*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"getOrbitCosineSum", "[", 
   RowBox[{"2", ",", "\[Pi]"}], "]"}], "-", "1"}]], "Input",
 CellChangeTimes->{{3.7659157612316885`*^9, 3.7659157615997047`*^9}, 
   3.76617577686683*^9, {3.766175808125258*^9, 3.7661758083337*^9}}],

Cell[BoxData["0.228390306071099`"], "Output",
 CellChangeTimes->CompressedData["
1:eJwV0n8sFGAYB/Drh12uHXXn1x2KUk1oykXnR/UWcTZCne4PKycKFVHhrBHz
o9o6KcNo+kXJ6io/FhHGjJm4ilOt1HJ3kbeyVTczqu/7x7PPnufd++zd8z7O
calRCUs4HE4qoiVyl8U3C0q2yL2VBywpaShYrGcOtFqvSIK6scXaIrhneYx7
Bcs7AvOfQ0WLfp9SQEl4daxUAzPLZAnMJKvLyUzdGVXTGiEl7V6CXm/YaRmW
JIP+x14qQ6HrSIQ4DEac7cvLhfKUl1l34WEF16cBNqilx5mKgu3vmWrZvdpB
dv5GaXoL48bj9ryDnpfNi3/CDt83aRutKOF3lbQxB8891bnBoxwnWSgs32vZ
z8z5aGqIhOuFPcnRsCnfvJTJs5O9L4SVFdlJc7DMv+L2IutXPWQjtqbELkv6
zRkOjcifhUOXsWZNFBxUawfyYHAEb4bpe0M/WQ2rzroahuEDXoXXH3Y/U9x7
wIaSVab0X3IoaUyuq4a6VwPGVbaUKFW5AULo6WrsKodObRvq+0WUbJv3r5uE
c5nppyi8Zjcn+AGNzbz1zG5HkUAiRr18q0czFCiq7hsgTT9kiLGnJCtCUHoM
Lvw6wj8NNT9K6i7CFP603MyBkq2l1hml8HO95jXXEX0Wyxr5cPdV7Yw1/KJX
pq5cS4nV/ictzEOpNz48dqJk9reVR6YzJfkOxRdU0NePZ7gFH6rH/85DU+Vw
QPA6SkZF08McF0qyOZM77GGh286eTigWZi3bu5kSt9gt7UxbIdUzz9QsbQ2C
HVzBFZME7wmJHAr0ocR9NMfrs5SSGb35pWlf1Lu52ld+lPS1V00ws3OjQzMC
KHG4KZmJ3YV9qXmkUEKTtLtNA52+9pyc3Y3/u3ZHZUYomeBqvX1CMJ8gPS8F
9sQX8wvglU1fxi5BSbuK1wqfuIRpJ+CUxazICP2+DxjsZNgj3chzEexrnDIy
D9ZdP6GEiYFFacyF8fKWEljVOJW4OhRzKPqkYv57cV4cD/8Dq56obQ==
  "]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cos[A] + Cos[B] + Cos[C] - 1 is constant!", "Subsubsection",
 CellChangeTimes->{{3.7659151472089586`*^9, 3.7659151693510604`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"getOrbitCosineSum", "[", 
      RowBox[{"1.5", ",", "t"}], "]"}], "-", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"2.", "\[Pi]"}], ",", 
      RowBox[{"\[Pi]", "/", "100"}]}], "}"}]}], "]"}], "//", 
  "Mean"}]], "Input",
 CellChangeTimes->{{3.768169059444193*^9, 3.7681690684999905`*^9}}],

Cell[BoxData["0.36265966294291957`"], "Output",
 CellChangeTimes->{{3.7681690634954247`*^9, 3.768169068909893*^9}, 
   3.7681700086725082`*^9, 3.7682082025128913`*^9, 3.768210190528437*^9, 
   3.7682157626329727`*^9, 3.7683189902801547`*^9, 3.7683926465294037`*^9, 
   3.7684064563362536`*^9, 3.7684068419083724`*^9, 3.768407761778113*^9, 
   3.768472869301413*^9, 3.768502195162798*^9, 3.768502803199497*^9, 
   3.768548408408851*^9, 3.768660878715613*^9, 3.768661452605773*^9, 
   3.768671925650316*^9, 3.768734281108756*^9, 3.7687352885837145`*^9, 
   3.7687493998222494`*^9, 3.7687591261645393`*^9, 3.7687594323969517`*^9, 
   3.7688562743938637`*^9, 3.7690908919317646`*^9, 3.769101580850556*^9, 
   3.7691598624906683`*^9, 3.769175889897603*^9, 3.7692676428072796`*^9, 
   3.7692757657497263`*^9, 3.7693722306151395`*^9, 3.769372504418034*^9, 
   3.769425695250785*^9, 3.769530153399207*^9, 3.769608604835741*^9, 
   3.769802264938739*^9, 3.769806747693267*^9, 3.769949483437976*^9, 
   3.770189622380334*^9, 3.7701944120832677`*^9, 3.770463743297248*^9, 
   3.7716124812775846`*^9, 3.7716698020112624`*^9, 3.7716877876818385`*^9, 
   3.7716911598607144`*^9, 3.7716912884512415`*^9, 3.7718345128925962`*^9, 
   3.7720968736603346`*^9, 3.7721982049309626`*^9, 3.772442410842485*^9, 
   3.772462216696989*^9, 3.7724816431072416`*^9, 3.7725320126105556`*^9, 
   3.772787375393231*^9, 3.773074352782683*^9, 3.773316757604723*^9, 
   3.7733287887656317`*^9, 3.7733456308547077`*^9, 3.7743727311768827`*^9, 
   3.774373293618362*^9, 3.7752337650032845`*^9, 3.7756419607915335`*^9, 
   3.775646724357867*^9, 3.7757274004344234`*^9, 3.7759119268628283`*^9, 
   3.7760680787413807`*^9, 3.7769724074060774`*^9, 3.7770265032200994`*^9, 
   3.777361426064516*^9, 3.780253723880746*^9, 3.7802551935747166`*^9, 
   3.780255527521226*^9, 3.7802592641975303`*^9, 3.785864296844692*^9, 
   3.787073122656805*^9, 3.788439964078121*^9, 3.788983368436344*^9, 
   3.789459072359083*^9, 3.7894591889506617`*^9, 3.7903202108167567`*^9, 
   3.791325017762109*^9, 3.7913258935382743`*^9, 3.791484366427951*^9, 
   3.792143206218342*^9, 3.792186317202081*^9, 3.7959581986844883`*^9, 
   3.7960704872441874`*^9, 3.7961155643487206`*^9, 3.796127407181018*^9, 
   3.796222035933581*^9, 3.7963014425184326`*^9, 3.796316367631776*^9, 
   3.7964203983866673`*^9, 3.7964221026115923`*^9, 3.796422455377509*^9, 
   3.7965689247368755`*^9, 3.7965689723101115`*^9, 3.7966637248308964`*^9, 
   3.796929351382471*^9, 3.796929487093917*^9, 3.7970987080019464`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"getOrbitCosineSum", "[", 
      RowBox[{"2", ",", "t"}], "]"}], "-", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"2.", "\[Pi]"}], ",", 
      RowBox[{"\[Pi]", "/", "100"}]}], "}"}]}], "]"}], "//", 
  "Mean"}]], "Input",
 CellChangeTimes->{{3.7659149555362215`*^9, 3.7659150409453573`*^9}, {
   3.7659151361625013`*^9, 3.7659151374341*^9}, {3.765915495977111*^9, 
   3.765915500183858*^9}, {3.7660499547536182`*^9, 3.766049972512396*^9}, 
   3.7661757768718166`*^9, {3.766175812471638*^9, 3.766175812837658*^9}}],

Cell[BoxData["0.22839030607109922`"], "Output",
 CellChangeTimes->{{3.765915018263998*^9, 3.765915041402109*^9}, 
   3.76591514186124*^9, 3.765915501561171*^9, 3.7660499176291122`*^9, {
   3.7660499487729874`*^9, 3.7660499730471673`*^9}, 3.7661314657976313`*^9, 
   3.7661320400281625`*^9, 3.766175813719316*^9, 3.76623645603508*^9, 
   3.7662703069772463`*^9, 3.7663426742507772`*^9, 3.7677327912528534`*^9, 
   3.7678903791276674`*^9, 3.767890730410077*^9, 3.7678907724227037`*^9, 
   3.7681207319031034`*^9, 3.7681700087762313`*^9, 3.768208202617611*^9, 
   3.7682101906301656`*^9, 3.7682157627406845`*^9, 3.768318990386878*^9, 
   3.7683926466371155`*^9, 3.7684064564429383`*^9, 3.7684068420190763`*^9, 
   3.768407761887821*^9, 3.7684728694061327`*^9, 3.768502195275468*^9, 
   3.7685028033021946`*^9, 3.7685484085185604`*^9, 3.76866087908759*^9, 
   3.7686614527244577`*^9, 3.7686719257530413`*^9, 3.768734281216468*^9, 
   3.7687352886894317`*^9, 3.7687493999299326`*^9, 3.768759126264288*^9, 
   3.7687594325226154`*^9, 3.768856274496589*^9, 3.76909089203147*^9, 
   3.769101580969239*^9, 3.769159862586413*^9, 3.769175889998334*^9, 
   3.7692676429256153`*^9, 3.7692757658454704`*^9, 3.7693722307188625`*^9, 
   3.7693725045137787`*^9, 3.7694256953604918`*^9, 3.769530153497943*^9, 
   3.7696086049424553`*^9, 3.7698022650424614`*^9, 3.7698067477900085`*^9, 
   3.76994948354469*^9, 3.7701896227812614`*^9, 3.7701944121810064`*^9, 
   3.770463743701168*^9, 3.7716124813743253`*^9, 3.7716698021109905`*^9, 
   3.7716877877855897`*^9, 3.7716911599709826`*^9, 3.771691288567957*^9, 
   3.771834513260581*^9, 3.772096873769044*^9, 3.7721982050526376`*^9, 
   3.772442410953189*^9, 3.772462216824649*^9, 3.772481643210964*^9, 
   3.772532012716273*^9, 3.7727873755029373`*^9, 3.7730743528903947`*^9, 
   3.7733167577732725`*^9, 3.7733287888733435`*^9, 3.773345630961421*^9, 
   3.774372731288576*^9, 3.774373293727092*^9, 3.775233765115983*^9, 
   3.7756419609281683`*^9, 3.7756467244915094`*^9, 3.775727400547122*^9, 
   3.7759119269944754`*^9, 3.77606807885009*^9, 3.7769724075242743`*^9, 
   3.7770265033468027`*^9, 3.7773614261861877`*^9, 3.7802537240051117`*^9, 
   3.780255193726387*^9, 3.7802555276666756`*^9, 3.7802592643072085`*^9, 
   3.785864296966367*^9, 3.7870731227684736`*^9, 3.7884399641928167`*^9, 
   3.788983368563957*^9, 3.7894590724742093`*^9, 3.7894591890689697`*^9, 
   3.790320210933445*^9, 3.7913250178807917`*^9, 3.791325893650974*^9, 
   3.791484366537657*^9, 3.792143206340017*^9, 3.7921863173207645`*^9, 
   3.7959581988779707`*^9, 3.796070487352865*^9, 3.796115564467557*^9, 
   3.7961274072936945`*^9, 3.7962220360554237`*^9, 3.7963014426241503`*^9, 
   3.7963163677560782`*^9, 3.796420398617053*^9, 3.796422102841976*^9, 
   3.796422455483227*^9, 3.796568924864935*^9, 3.7965689724235086`*^9, 
   3.7966637251088905`*^9, 3.796929351504147*^9, 3.796929487200603*^9, 
   3.7970987081046705`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"getOrbitCosineSum", "[", 
       RowBox[{"2", ",", "t"}], "]"}], "-", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2.", "\[Pi]"}], ",", 
       RowBox[{"\[Pi]", "/", "100"}]}], "}"}]}], "]"}], "//", 
   "StandardDeviation"}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.76604997908076*^9, 3.7660499868409033`*^9}, 
   3.7661757768768034`*^9, {3.7661758157339153`*^9, 3.7661758160071845`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->CompressedData["
1:eJwV0H0sFHAcx3GKrHQrzpGj09HTPC9GmPgh5amJ1ZDKXUl0uqzysCy0I6ym
64nJ8nih2tVCodIi0cOoFl3U1egu8ivaSbSlPr8/vnvt+997H6FYGpWor6en
J8U5Hp4vc1hGyQpVgCga+rgaNDLr85YvToatCQaKAjhdIHYshWLPsFPt8Njw
RLDIlJIHVUleSjgtj0xkvhk7l8J8nJDbJOBSUh5r3eUBm9QxySHQWfZOFAo3
Oe/iR8DB4f68HCioUWXWwoCTJp7XYfaioCRmQ6ffELM063bdc+gSJplRwQpO
asB7KPExOz0Jb8do09aaUVKZW97GFDV3DDpA5V77kFA4nGbZw5w9bnBjOxx6
+iJlJxQ/48qZb52ih/Kh8Hx+8iy8vruu+i9syBg05/MocbcK/CaEXRdE97bB
VEGHMgp6d3/szYMeedwJZvFN3egVmOvqpumDNcXVbr+gEW9tV7Q5JdZF2bod
sGJRuuIKtBV/0C63oMTYQu7Lhesb5x5dhuusXBp6LNGVHKkYhXH52akU/qxY
wP0BS6Z4dky+g6OpO5+SAa6vUzMUHFLUa+DGqH2aeCtK7sYI5Afg1Q0pnCOw
I6JcUQjDmnQ7DK0paZy1SZfDT+8fvjFaiX0klXc4sFg6MsGDKZ8kUmMbSnb2
t7cwC2PrP9xaRcn+eFunDCH6z1zMzYKXnXiaKigbG53/A29+VftusaXkaO10
n95qSkwydRut4J5vIZ0d8E63bGGgPX47n/vMsmtzX5gjUk7rZhh1ye7sjDsl
ifbxL4M8KWnuK3L77EXJv3HzonFvSpYeM3v12oeS8MQGNfPiGnFoui+6Ivwn
Evwo2dDYGiOCXmNv25TQOa5fMuVPSa+RMsuQUNLTNeLhuRVdaZNLDkNx/3mO
DDrqfx8ogld1+UtaobYg/pUa2ofr87XQuVClWRFCyROZut0SntDXaZmulyoP
iaA2WJ7GVHnVt5TAhf6/D5qEUpI0P57FzLlfwN8P/wPhoKZZ
  "]]
}, Open  ]]
}, Open  ]],

Cell["\<\
Does the extriangle have a similar property, e.g., sum of sines is constant? \
Algebraically, no\
\>", "Subsubsection",
 CellChangeTimes->{{3.76607523823108*^9, 3.76607526346463*^9}, {
  3.766075872855666*^9, 3.766075878231293*^9}}],

Cell[CellGroupData[{

Cell["Constraint on side lengths if sum of cosines is constant", \
"Subsubsection",
 CellChangeTimes->{{3.7659203034092965`*^9, 3.7659203156431923`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Together", "[", 
  RowBox[{
   RowBox[{"lawOfCosines", "[", 
    RowBox[{"a", ",", "b", ",", "c"}], "]"}], "+", 
   RowBox[{"lawOfCosines", "[", 
    RowBox[{"b", ",", "c", ",", "a"}], "]"}], "+", 
   RowBox[{"lawOfCosines", "[", 
    RowBox[{"c", ",", "a", ",", "b"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.765919213768305*^9, 3.765919311382056*^9}, {
  3.765919403121169*^9, 3.765919450484459*^9}, {3.7659200017900677`*^9, 
  3.7659200407101855`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"0.5`", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"1.`", " ", 
       SuperscriptBox["a", "3"]}], "-", 
      RowBox[{"1.`", " ", 
       SuperscriptBox["a", "2"], " ", "b"}], "-", 
      RowBox[{"1.`", " ", "a", " ", 
       SuperscriptBox["b", "2"]}], "+", 
      RowBox[{"1.`", " ", 
       SuperscriptBox["b", "3"]}], "-", 
      RowBox[{"1.`", " ", 
       SuperscriptBox["a", "2"], " ", "c"}], "-", 
      RowBox[{"1.`", " ", 
       SuperscriptBox["b", "2"], " ", "c"}], "-", 
      RowBox[{"1.`", " ", "a", " ", 
       SuperscriptBox["c", "2"]}], "-", 
      RowBox[{"1.`", " ", "b", " ", 
       SuperscriptBox["c", "2"]}], "+", 
      RowBox[{"1.`", " ", 
       SuperscriptBox["c", "3"]}]}], ")"}]}], 
   RowBox[{"a", " ", "b", " ", "c"}]]}]], "Output",
 CellChangeTimes->{{3.765919236511445*^9, 3.7659192547770305`*^9}, {
   3.765919302542675*^9, 3.7659193121569614`*^9}, {3.765919413786647*^9, 
   3.765919450817569*^9}, {3.7659200057115555`*^9, 3.7659200410632153`*^9}, 
   3.7659617752138224`*^9, 3.7661314661097965`*^9, 3.7661320401528287`*^9, 
   3.7662364561906624`*^9, 3.7662703071318045`*^9, 3.766342674374447*^9, 
   3.767732791383504*^9, 3.7678903792523336`*^9, 3.7678907305337462`*^9, 
   3.7678907725433807`*^9, 3.76812073203076*^9, 3.768170008906882*^9, 
   3.768208202789153*^9, 3.768210190748848*^9, 3.768215762864354*^9, 
   3.768318990516532*^9, 3.768392646785751*^9, 3.7684064565596266`*^9, 
   3.768406842140751*^9, 3.7684077620064745`*^9, 3.7684728695298023`*^9, 
   3.768502195396146*^9, 3.768502803422872*^9, 3.7685484086462145`*^9, 
   3.768660879214282*^9, 3.7686614528441586`*^9, 3.768671925981431*^9, 
   3.76873428133914*^9, 3.768735288808114*^9, 3.768749400153364*^9, 
   3.7687591263889394`*^9, 3.7687594326412797`*^9, 3.7688562746133046`*^9, 
   3.7690908921990213`*^9, 3.7691015811663527`*^9, 3.7691598627140713`*^9, 
   3.7691758901349983`*^9, 3.769267643068247*^9, 3.769275765978116*^9, 
   3.7693722309452877`*^9, 3.769372504622488*^9, 3.769425695629772*^9, 
   3.7695301536156282`*^9, 3.7696086050780926`*^9, 3.7698022652130055`*^9, 
   3.7698067479066963`*^9, 3.7699494837052603`*^9, 3.770189622903934*^9, 
   3.770194412555007*^9, 3.7704637438178563`*^9, 3.7716124814890194`*^9, 
   3.7716698025288754`*^9, 3.7716877879072437`*^9, 3.771691160095621*^9, 
   3.7716912887025695`*^9, 3.7718345133962183`*^9, 3.772096873924629*^9, 
   3.772198205187311*^9, 3.7724424111197767`*^9, 3.7724622169692926`*^9, 
   3.772481643336629*^9, 3.772532012837948*^9, 3.772787375629599*^9, 
   3.7730743530180807`*^9, 3.7733167579517946`*^9, 3.7733287889950175`*^9, 
   3.7733456310990543`*^9, 3.774372731420225*^9, 3.7743732938527803`*^9, 
   3.7752337652536154`*^9, 3.775641961094723*^9, 3.7756467246610556`*^9, 
   3.775727400677772*^9, 3.7759119271480646`*^9, 3.7760680789897165`*^9, 
   3.7769724076658955`*^9, 3.777026503659807*^9, 3.777361426335765*^9, 
   3.7802537241694117`*^9, 3.7802551938676043`*^9, 3.780255527819524*^9, 
   3.780259264436863*^9, 3.7858642971359134`*^9, 3.7870731229031134`*^9, 
   3.788439964328457*^9, 3.7889833687350135`*^9, 3.7894590726732388`*^9, 
   3.7894591892833414`*^9, 3.7903202110860367`*^9, 3.791325018029394*^9, 
   3.791325893791626*^9, 3.7914843666713*^9, 3.792143206500702*^9, 
   3.792186317456402*^9, 3.7959581993576756`*^9, 3.7960704875014677`*^9, 
   3.7961155646087594`*^9, 3.7961274074343185`*^9, 3.796222036210921*^9, 
   3.796301442912379*^9, 3.796316368057623*^9, 3.796420398783578*^9, 
   3.796422102971631*^9, 3.796422455605899*^9, 3.7965689250058823`*^9, 
   3.796568972554869*^9, 3.796663725250765*^9, 3.796929351743507*^9, 
   3.796929487324273*^9, 3.7970987082243214`*^9}]
}, Open  ]],

Cell["Adding perimeter constancy doens' t help", "Text",
 CellChangeTimes->{{3.7659202741770163`*^9, 3.765920287536757*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Together", "[", 
     RowBox[{
      RowBox[{"lawOfCosines", "[", 
       RowBox[{"a", ",", "b", ",", "c"}], "]"}], "+", 
      RowBox[{"lawOfCosines", "[", 
       RowBox[{"b", ",", "c", ",", "a"}], "]"}], "+", 
      RowBox[{"lawOfCosines", "[", 
       RowBox[{"c", ",", "a", ",", "b"}], "]"}]}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"c", "\[Rule]", 
      RowBox[{"P", "-", "a", "-", "b"}]}], "}"}]}], ")"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.765920220747933*^9, 3.76592027254937*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"0.`", "\[VeryThinSpace]", "+", 
   RowBox[{"2.`", " ", 
    SuperscriptBox["b", "2"], " ", "P"}], "-", 
   RowBox[{"2.`", " ", "b", " ", 
    SuperscriptBox["P", "2"]}], "+", 
   RowBox[{"0.5`", " ", 
    SuperscriptBox["P", "3"]}], "+", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3.`"}], " ", "b"}], "+", 
      RowBox[{"2.`", " ", "P"}]}], ")"}]}], "+", 
   RowBox[{"a", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3.`"}], " ", 
       SuperscriptBox["b", "2"]}], "+", 
      RowBox[{"5.`", " ", "b", " ", "P"}], "-", 
      RowBox[{"2.`", " ", 
       SuperscriptBox["P", "2"]}]}], ")"}]}]}], 
  RowBox[{"a", " ", "b", " ", 
   RowBox[{"(", 
    RowBox[{"a", "+", "b", "-", 
     RowBox[{"1.`", " ", "P"}]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.7659202291145473`*^9, 3.7659202535571685`*^9}, 
   3.7659617776472836`*^9, 3.766131466179038*^9, 3.766132040221644*^9, 
   3.7662364562574835`*^9, 3.7662703072006207`*^9, 3.7663426744472523`*^9, 
   3.7677327914383574`*^9, 3.7678903793041945`*^9, 3.7678907305487056`*^9, 
   3.767890772558341*^9, 3.768120732088606*^9, 3.7681700089587765`*^9, 
   3.768208202836028*^9, 3.7682101907987146`*^9, 3.7682157629172134`*^9, 
   3.7683189905673943`*^9, 3.768392646838606*^9, 3.768406456610491*^9, 
   3.7684068421906185`*^9, 3.768407762060359*^9, 3.7684728695816636`*^9, 
   3.768502195443023*^9, 3.7685028034677515`*^9, 3.7685484086970825`*^9, 
   3.768660879268136*^9, 3.768661452899012*^9, 3.7686719260343237`*^9, 
   3.7687342813910007`*^9, 3.768735288855986*^9, 3.768749400224146*^9, 
   3.768759126439803*^9, 3.768759432683186*^9, 3.768856274674142*^9, 
   3.769090892249915*^9, 3.769101581236166*^9, 3.769159862765932*^9, 
   3.7691758901908484`*^9, 3.7692676431355696`*^9, 3.7692757660309744`*^9, 
   3.769372231001109*^9, 3.7693725046903067`*^9, 3.769425695699585*^9, 
   3.7695301536754675`*^9, 3.7696086051319485`*^9, 3.7698022652738433`*^9, 
   3.7698067479615493`*^9, 3.769949483763107*^9, 3.7701896229577904`*^9, 
   3.77019441261385*^9, 3.770463743869717*^9, 3.7716124815418777`*^9, 
   3.771669802582728*^9, 3.7716877879650817`*^9, 3.7716911601724157`*^9, 
   3.771691288784351*^9, 3.771834513467029*^9, 3.7720968739994283`*^9, 
   3.7721982052620783`*^9, 3.7724424111995306`*^9, 3.772462217050105*^9, 
   3.772481643410431*^9, 3.7725320129087577`*^9, 3.77278737570041*^9, 
   3.7730743530759273`*^9, 3.773316758026595*^9, 3.7733287890638337`*^9, 
   3.7733456311928034`*^9, 3.774372731494997*^9, 3.7743732939265375`*^9, 
   3.775233765328415*^9, 3.775641961183485*^9, 3.77564672474534*^9, 
   3.775727400752572*^9, 3.7759119272677455`*^9, 3.776068079073493*^9, 
   3.7769724077501793`*^9, 3.7770265040064507`*^9, 3.777361426420567*^9, 
   3.7802537243843117`*^9, 3.7802551939145503`*^9, 3.7802555279175005`*^9, 
   3.780259264510708*^9, 3.785864297435113*^9, 3.7870731229749217`*^9, 
   3.7884399644052477`*^9, 3.7889833690215607`*^9, 3.789459072964203*^9, 
   3.789459189362335*^9, 3.7903202113702755`*^9, 3.791325018330617*^9, 
   3.791325893868392*^9, 3.7914843667480946`*^9, 3.792143206773487*^9, 
   3.792186317536188*^9, 3.7959581995730906`*^9, 3.7960704875573187`*^9, 
   3.796115564664409*^9, 3.7961274074872046`*^9, 3.7962220362660475`*^9, 
   3.7963014429632435`*^9, 3.796316368123369*^9, 3.7964203988334446`*^9, 
   3.796422103026483*^9, 3.7964224556607523`*^9, 3.7965689250643077`*^9, 
   3.7965689726082296`*^9, 3.796663725305671*^9, 3.796929351802349*^9, 
   3.7969294873731422`*^9, 3.7970987082751865`*^9}]
}, Open  ]],

Cell["An expression for P the perimeter", "Text",
 CellChangeTimes->{{3.7659627171636343`*^9, 3.7659627212917023`*^9}, {
  3.765962923354881*^9, 3.7659629283235917`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"darbouxP", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.7659626918671427`*^9, 3.765962692603201*^9}, 
   3.7677324367773037`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["a", "2"], "+", 
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox["a", "2"], "+", 
       SuperscriptBox["a", "4"]}]]}], ")"}], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     SuperscriptBox["a", "2"], "+", 
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox["a", "2"], "+", 
        SuperscriptBox["a", "4"]}]]}]}]]}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["a", "2"]}]]], "Output",
 CellChangeTimes->CompressedData["
1:eJwV0XtIE1AUBvBZDnsgmdZ0s8zNBz20smSmJXp72JRaqGWWRVssy6VzQqkj
bJm9VlhqpYKTSluZipH2sIyaCRppQ8Vk2XyUbmBeLSqHiT2++8flB/eew7mc
T3g4Pe6IA4fDUeEUC+9NcRZQ4hgYJY+HRo3TA+bqkjmGC/DC++SAEqh+Jz37
Ao7IJqLkrnj3V4bWQfHv2CPM+7IiJdMoy2vwcqNEFbusRQzfipJSouEJhz55
DDzcc1CwE+a1d+dq4SbJp+xKuP+nW0g1HL8SdZT5Rba5jylb0HD3HeRoVXYz
DFamb/4I7xp5F79BF/fRDP9FlFjE5c+ZIbXNvatg1mRAdAyUtHq2Ma8WO9XE
wqA6kzIBlpbyCpk+zgl95+GN9kspU7A1r+rOH7ihx8wTLKbkXE7UVyFsHFU8
k0L93ua6OFiRN/Q2Fw6oeWPMkXH7cBmccRdbTdDiZ1g/CV2zVrTE8ygpiND+
3AO32LMNZVASOmhzcadE9/d6uBuU7Jp5XQzLu4Kq2vioXx5vGIZmhTaNQpOd
6zYBw/R8H2Zm6hrXYAHmn4wMfAz5E1X3rXC7Ndl6wJOS6Z2iwmRo0qc5qyH/
WrnhElxpse/hLsE+5/pkFkLl7uZup6WU2FMr6p3hukHb2GLYu0+dPn8Z+j1e
PWF6iWssD70peXjZPzBLiH0oSs9oYEeJh/U29M4c/TsNb3GHw7eLKGnQT5k4
vpRouxxDPeGtWOmbV9AYUDh7y0pK4vrDm5hF//6MMN37XBq3QfHTdfn2YORr
P9SxNYQSRWX++qFQzNnrpxsNw/2gb2fXRkoccmoHmAJvdUxmOHLXSMdkEZRs
S3uZKIeJp8zP6+DXxP7U75HIsemRhksoGZz5JQ6R4D/HfsxTQantpvM5aBZ+
/6CDPJluXiP0Vh3qHICd+Y4CG9yx+pPVI5qSmqTPL/jQeHrSxtQXVByXw56h
6xlMUUv1k2tw1trpYwtjKOmOoxpmfaROoID/AariqD0=
  "]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"getTriPerimeters", "[", 
   RowBox[{"a_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"orbit", ",", "normals", ",", "darboux", ",", "per"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"orbit", ",", "normals"}], "}"}], "=", 
      RowBox[{"orbitNormals", "[", 
       RowBox[{"a", ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"darboux", "=", 
      RowBox[{"darbouxP", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"per", "=", 
      RowBox[{"Total", "[", 
       RowBox[{"magn", "/@", 
        RowBox[{"(", 
         RowBox[{"orbit", "-", 
          RowBox[{"RotateLeft", "[", "orbit", "]"}]}], ")"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"per", ",", "darboux"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7659629494989653`*^9, 3.765963039372362*^9}, {
  3.767732408146762*^9, 3.7677324388736978`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getTriPerimeters", "[", 
  RowBox[{"1.2", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.765963042010338*^9, 3.7659630594276223`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.7622551876056125`", ",", "5.762255187605611`"}], "}"}]], "Output",
 CellChangeTimes->{{3.7659630487351627`*^9, 3.765963059853454*^9}, 
   3.766131466218931*^9, 3.76613204025356*^9, 3.766236456287404*^9, 
   3.766270307233562*^9, 3.7663426744851503`*^9, 3.7677327914702754`*^9, 
   3.767890379341096*^9, 3.7678907305836124`*^9, 3.7678907725972366`*^9, 
   3.768120732143489*^9, 3.768170009001629*^9, 3.7682082028659487`*^9, 
   3.7682101908346195`*^9, 3.7682157629541144`*^9, 3.7683189906242304`*^9, 
   3.7683926468774996`*^9, 3.7684064566463947`*^9, 3.768406842227519*^9, 
   3.7684077620982323`*^9, 3.7684728696175685`*^9, 3.76850219547294*^9, 
   3.7685028035036554`*^9, 3.7685484087329845`*^9, 3.7686608793070045`*^9, 
   3.768661452935886*^9, 3.7686719260861797`*^9, 3.7687342814279027`*^9, 
   3.768735288887901*^9, 3.768749400263043*^9, 3.7687591264946566`*^9, 
   3.7687594327430296`*^9, 3.768856274707056*^9, 3.7690908923187284`*^9, 
   3.769101581324929*^9, 3.769159862793885*^9, 3.7691758902317104`*^9, 
   3.7692676431814466`*^9, 3.7692757660608945`*^9, 3.7693722310410028`*^9, 
   3.769372504720256*^9, 3.7694256957414727`*^9, 3.7695301537143645`*^9, 
   3.769608605215726*^9, 3.769802265332686*^9, 3.769806747999449*^9, 
   3.769949483805991*^9, 3.770189622999677*^9, 3.770194412641775*^9, 
   3.7704637439076157`*^9, 3.771612481581772*^9, 3.771669802625621*^9, 
   3.7716877880079956`*^9, 3.7716911602083187`*^9, 3.771691288829232*^9, 
   3.771834513505925*^9, 3.7720968740383244`*^9, 3.7721982053069572`*^9, 
   3.772442411234437*^9, 3.7724622171168976`*^9, 3.7724816434473324`*^9, 
   3.7725320129466567`*^9, 3.772787375741352*^9, 3.7730743531267633`*^9, 
   3.7733167580664883`*^9, 3.7733287890967455`*^9, 3.773345631260623*^9, 
   3.774372731539876*^9, 3.7743732939634743`*^9, 3.7752337653892517`*^9, 
   3.7756419612403336`*^9, 3.7756467247902193`*^9, 3.7757274007914686`*^9, 
   3.7759119273365602`*^9, 3.7760680791303735`*^9, 3.776972407805065*^9, 
   3.7770265041775007`*^9, 3.777361426492373*^9, 3.7802537245795717`*^9, 
   3.7802551939672103`*^9, 3.7802555281083455`*^9, 3.780259264550587*^9, 
   3.785864297625636*^9, 3.787073123037755*^9, 3.7884399644600987`*^9, 
   3.7889833691978445`*^9, 3.789459073214153*^9, 3.789459189418189*^9, 
   3.790320211529849*^9, 3.791325018485175*^9, 3.791325893926237*^9, 
   3.791484366793972*^9, 3.792143206947056*^9, 3.7921863175810685`*^9, 
   3.7959581997845373`*^9, 3.7960704876022263`*^9, 3.7961155647159014`*^9, 
   3.7961274075370717`*^9, 3.7962220363362947`*^9, 3.7963014430200915`*^9, 
   3.796316368169239*^9, 3.7964203988803186`*^9, 3.796422103067403*^9, 
   3.796422455684688*^9, 3.7965689251059484`*^9, 3.7965689726408834`*^9, 
   3.79666372538392*^9, 3.796929351840248*^9, 3.796929487405057*^9, 
   3.7970987083121157`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lawOfCosines", "[", 
        RowBox[{"s1", ",", "s2", ",", "s3"}], "]"}], "+", 
       "\[IndentingNewLine]", 
       RowBox[{"lawOfCosines", "[", 
        RowBox[{"s2", ",", "s3", ",", "s1"}], "]"}], "+", 
       "\[IndentingNewLine]", 
       RowBox[{"lawOfCosines", "[", 
        RowBox[{"s3", ",", "s1", ",", "s2"}], "]"}]}], ")"}], "/.", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"s3", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"darbouxP", "[", "a", "]"}], "/.", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"a", "^", "2"}], "+", 
              RowBox[{"a", "^", "4"}]}], "]"}], "\[Rule]", "d"}]}], ")"}], 
         "-", "s2", "-", "s1"}], ")"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"a", ">", "0"}], "&"}], "d"}], ">", "0"}], "&"}], "s1"}],
         ">", "0"}], "&"}], "s2"}], ">", "0"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.765962762211377*^9, 3.765962818571698*^9}, {
   3.7659628525169077`*^9, 3.765962894140044*^9}, {3.765963080307778*^9, 
   3.7659632476989512`*^9}, 3.767732411136795*^9, {3.7678907611169767`*^9, 
   3.767890763323043*^9}}],

Cell["\<\
Identity: Cos[t]^2 = (cos[2 t] + 1)/2 => Cos[2t] = 2Cos[t]^2-1\
\>", "Text",
 CellChangeTimes->{{3.7659618684205275`*^9, 3.7659618949724927`*^9}, {
  3.7659626540632625`*^9, 3.765962660475108*^9}, {3.765963293417672*^9, 
  3.765963308827448*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cosAlpha", "[", 
   RowBox[{"a", ",", "x1"}], "]"}], "^", "2"}]], "Input",
 CellChangeTimes->{{3.765961782812495*^9, 3.7659618038930936`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["a", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     SuperscriptBox["a", "2"], "+", 
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox["a", "2"], "+", 
        SuperscriptBox["a", "4"]}]]}]}], ")"}]}], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["a", "2"]}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["a", "4"], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["a", "2"]}], ")"}], " ", 
      SuperscriptBox["x1", "2"]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.7659617846156445`*^9, 3.7659618042860317`*^9}, 
   3.7661314786735325`*^9, 3.7661320526055346`*^9, 3.76623646932754*^9, 
   3.76627031972713*^9, 3.7663426869817395`*^9, 3.7678907726241646`*^9, 
   3.768120732174405*^9, 3.768170009025564*^9, 3.7682082028868914`*^9, 
   3.768210190858555*^9, 3.768215762976056*^9, 3.768318990660147*^9, 
   3.768392646900441*^9, 3.7684064566683474`*^9, 3.768406842252453*^9, 
   3.7684077621221943`*^9, 3.7684728696415043`*^9, 3.7685021954919176`*^9, 
   3.7685028035275917`*^9, 3.768548408755924*^9, 3.7686608793319387`*^9, 
   3.768661452958856*^9, 3.768671926118066*^9, 3.768734281450841*^9, 
   3.768735288908845*^9, 3.768749400294986*^9, 3.7687591265365453`*^9, 
   3.768759432777904*^9, 3.768856274725011*^9, 3.769090892365576*^9, 
   3.769101581482507*^9, 3.7691598628138328`*^9, 3.7691758902556734`*^9, 
   3.7692676432073774`*^9, 3.769275766080841*^9, 3.7693722310649385`*^9, 
   3.7693725047392054`*^9, 3.7694256957654095`*^9, 3.769530153740301*^9, 
   3.769608605373317*^9, 3.769802265367592*^9, 3.7698067480253806`*^9, 
   3.7699494838319225`*^9, 3.770189623023614*^9, 3.7701944126587577`*^9, 
   3.770463743930584*^9, 3.7716124816067047`*^9, 3.771669802649556*^9, 
   3.7716877880358925`*^9, 3.7716911602412376`*^9, 3.77169128886314*^9, 
   3.7718345135298605`*^9, 3.7720968740622597`*^9, 3.772198205336911*^9, 
   3.7724424112513914`*^9, 3.7724622171547966`*^9, 3.772481643472269*^9, 
   3.772532012968598*^9, 3.772787375770254*^9, 3.773074353156683*^9, 
   3.7733167580934167`*^9, 3.77332878911769*^9, 3.7733456312935343`*^9, 
   3.7743727315648394`*^9, 3.7743732939893703`*^9, 3.7752337654291453`*^9, 
   3.775641961404894*^9, 3.7756467248221345`*^9, 3.775727400817398*^9, 
   3.775911927378448*^9, 3.776068079165275*^9, 3.7769724078429327`*^9, 
   3.7770265042064238`*^9, 3.777361426677847*^9, 3.780253724616975*^9, 
   3.7802551940023284`*^9, 3.7802555281398764`*^9, 3.7802592645755205`*^9, 
   3.78586429766849*^9, 3.787073123075652*^9, 3.7884399644959745`*^9, 
   3.788983369229407*^9, 3.7894590732736197`*^9, 3.7894591895646124`*^9, 
   3.790320211556777*^9, 3.791325018517091*^9, 3.7913258939621696`*^9, 
   3.791484366821897*^9, 3.7921432069829297`*^9, 3.7921863176089935`*^9, 
   3.795958199923154*^9, 3.796070487630125*^9, 3.7961155647468185`*^9, 
   3.796127407572976*^9, 3.7962220363870153`*^9, 3.7963014430569925`*^9, 
   3.796316368232181*^9, 3.7964203989092417`*^9, 3.796422103093331*^9, 
   3.796422455697653*^9, 3.796568925131722*^9, 3.7965689726658163`*^9, 
   3.796663725433818*^9, 3.7969293518642173`*^9, 3.7969294874279976`*^9, 
   3.7970987083340597`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Which means :", "Subsubsection",
 CellChangeTimes->{{3.765915190937331*^9, 3.7659152499107237`*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{"   ", 
   RowBox[{
    RowBox[{"r", "/", "R"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"cos", "[", "A", "]"}], " ", "+", " ", 
     RowBox[{"cos", "[", "B", "]"}], "+", " ", 
     RowBox[{"cos", "[", "C", "]"}], "-", " ", "1"}]}]}],
  FontWeight->"Bold"]], "DisplayFormula",
 CellChangeTimes->{{3.7659152509389725`*^9, 3.7659152715361385`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ratioInradiusCircumRadius", "[", 
    RowBox[{"a_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"orbit", ",", "normals", ",", "R", ",", "r"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"orbit", ",", "normals"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"R", "=", 
       RowBox[{
        RowBox[{"radiusCircumcenter", "[", 
         RowBox[{"orbit", ",", "normals"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"r", "=", 
       RowBox[{
        RowBox[{"radiusIncenter", "[", 
         RowBox[{"orbit", ",", "normals"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"r", "/", "R"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7659157966410093`*^9, 3.7659157994504843`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Prova cosA+cosB+cosC=1+r/R=constante Prof. Ronaldo Garcia", \
"Subsubsection",
 CellChangeTimes->{{3.765965341715802*^9, 3.765965368463625*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnXu8TlW3+B+3N5etN3e5Xyq5JVQIvUgolWsqaYtyj8idXCKkJBFRbkVE
KEk65E6RPnbI7ZTER5S3cJIXJ87+fX97nHee1bo9az/Ps5+9ZXz/8NmeNdda
Y8055phjjDXXnKU7PtOyc+ZQKNQ3O/+07DCw/rPPdhjcKiv/aTC4X6eOWfij
C8d3ZguF/v/fyYqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIriy+XLl//444/0lkJRFEVRFEVRFEVR
FOWK59ChQ/fdd9+8efPSWxBFUZS/JsePHx88ePCaNWvSWxBFURRFURRFUdKc
PXv2VKlSpWvXrhcuXEhvWeLH77//fvDgwTNnzqS3IIqiXBVMmDAhc+bMderU
SRez8/PPP3/00UezZ89+6aWXBg0a9NRTTz3zzDO//vpr/CXJ+OzevXvx4sXT
pk0bPXp07969ExMTZ86cmd5CKX81vvnmG9TsjTfeQM369OnTvn37qVOnprdQ
4fnpp5+WL18+a9as8ePHDxw48Mknn+zbt6+6UlcoR48epSmvKuefh92wYcP8
+fMnTZo0fPjwHj16PP7449u2bUtvuVxA1PXr18+bNw9Rhw0b1r17dwajpKSk
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
q9P0rVq1KleuXDj///znP9NbljRHzAKG9KOPPkpvWa5gNNOiKJGxZs0a4qMV
K1bw9/Tp02WKHXTv3j1d5NFMS3CuwkzLxYsXmzdvziNrpiVuBMm07Nu3r1ix
YpppuXJ58803s2bNerWFGxkczbSkFs20ZHyCDCjx3FPyKjR9ly9fFtvSv3//
qyFk1kxLTNBMi6JERu/evStXrvzTTz/x9/79+wmXxFGpUKHC8ePH4y+PZlqC
cxVmWj777DPZ+VQzLXEjrGOM2zZ48ODMmTNrpuUKhfqpWbMmdXVVhRsZH820
pBbNtGR8An6OGh+uTtN36NChMmXK4D3+5Td3FjTTEhM006IoEfDTTz/dcsst
Jk7/448/WrVqJY5K9uzZP/jgg/iLlEaZlrNnzx44cEASSqk6a//+/cePH8+Y
e/lFkGn57bffqIc0faKTJ0/u27fv119/DVgerTt27Ng333xDc5ttFvnR+VZr
7969FStWFP2MLNPCNXl8YvAMsgRc2tVVDAnrGM+ZM+faa6+lQGSZFuTH8fv+
++9juxJdBJmWixcvIgbCpN2aeJggTEo034PHvAtj5Tp27CjLoWeocCP6ukpT
UKrVq1cvWbIk7YLo1GZaUAmptDNnzqSRSF6kNtOSRqL+5TMtGdMnwYbzsN9+
++25c+fCFs44mZa4mb7I/M/kNHPY8O2xKvnz57ctPB4EJEGZUUIeKrUnppd1
utoyLWlkJSLItMQh4sBtO3z4MJ5bar36OPh7igIrVqzA2JrNNOHtt9+WrgS4
eWF7B3HfqFGjunXr1qZNG4aqatWq3XHHHd9995051KRJk3Llyt14443169cf
OXIk3d//gj6ZFqz02LFj5V5333131apV+dd/+XeG/n79+hFwZcqUKXv27Izv
hISNGzdeunQpvcznrO7duxcvXjxv3ryci32+/vrrExMTd+zY4XXK3r17hw4d
2qlTp5YtW9arV69y5cpt27aVgZtePHfu3BYtWlSqVKlUqVI1atTo3bt38ID0
yJEjEydOlP04OL1WrVoDBw6UagyeaSE279WrF17fddddR8UWKVIkT548iLR8
+XITsEfJV199hcIULlyYGr7pppty5crFXTp37rxv3z7X8ljFxYsXN2rUqGTJ
ktWrV+cB69ati2xdunTZsmULvz/66KNSkgr88ssvUR5aIfRvmjVrNu7PrFu3
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
/ZtJVomJicFfGcTQ39NMixIE1KBx48a4f0E8Rvqg2T6efuq/5mfwgQ87JivA
JCQkrFmzxnY0ykzLqVOnTIbcZzNQYe/evWY0ZByRda0xF16T6MzqHybTcvjw
YeI4a81Eb1oHDRok8jdt2tS/may729sOYUXFf8ubN69/w5lPLLEeXNCnpA1s
tclmhJ03wujw+uuvExnx97Jly/BGVq5c6VO+Z8+eoZRFKV1/ByIg6+9UI+1u
3QCIWEmCnSCv3gjQvPbg8yF4piVN60qyT866Mg6hT7hn3kTEKtNimwuK5DVr
1jT/tW5n4Lq5anLKQnzyBYE109KqVSsJwI3LQZ37T8/euXNnvnz5Qm6ZFnRe
kjmhAGtHmI98GUBTtZ6k2YeicOHCXqKOGTNGLm6yB/PnzydoxYuIQxc2mHDD
ufJhjx49evfu7TwltpmWaOrKWib6TAsDyq233pra3ZFsxKrr+dQYTi/NHQqw
zKlZNgF1StVOBwymsi2Iz5go+O/yHAdRDQEzLZcuXTIG+dlnn3UWyAiZFqtP
Mm3aNNfTrT6JBDhOnyS2mZZ9+/bJWwPXtraxZ8+eOXPm2N50xDnT4u9wRmD6
fGSz+Z/+waDV/4yntd+/fz+jJ1eYPn26f0nzaUnu3Ln9c63JKdvjmsg0VV1e
hmnXLq+ZFsEn0xK9lYgs4rDpdnwUeOjQoZLPqV69utem9gKNheWRb+pj6O9p
pkUJAtFHkSJFZs+eHbC8WSMa9fZf28pYIX+bjIfToUMHuSZeqDMhH2WmJTnl
nYs47TjMPiE2JgVft1OnTvJfvBEZUxiOvSaYmRE2TTMtBBrFixcPpSzJ6LUx
nGCGD2emhXqW3RjDfvmFSogw5cuX99m31BUcLZmfUKlSJZ95F7B06VJso1Ta
smXLqEZXH8Ygm/U4PxMw30GPHTvW+jvVTnNbp7jT9PKWHIu3fPlyn3vx1NWq
VfOfSetK8ExLcnrUFXcUH5KYwvXE06dPm7n60WRazAfdDLK2rwwWLFhgjYWt
byUGDBjgejXTu10zLVgM7EYo5aUhI6mXzMmW+MKZaUlOqWSpnCZNmvjM1uOQ
jJs5cuTgFJ/bOTG66jOf1mxa7cy0xKcLC+YLaFwg20uxNm3a2PqaENtMSzR1
ZS0TfaYFF5ohEnkCPpQrsep6PjVGQ8tG9oULF/afamWiHga71K77TSwmg2nr
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
WtThjBJM1kMPPZQ1a9Zp06altyyKoihKeHTgUxRFUa5Qdu7cKV/f21Yk9mHU
qFGhYJulKooSQ9ThjJ7PP/+8QIECNWrUcF2bV1EURclQ6MCnKIqiXKEcP368
QoUKmTJlGjt2bJDy58+fb9asGUOerHenKErcUIczeuR7yWuuuWb+/PnpLYui
KIoShpMnT8pmgrly5fr000/TWxxFURRFSQWTJ0/+29/+VqxYsQ0bNviX/OOP
P8aMGUOQUqJECd2fUVHijDqcMeGHH36oUKECNRl8KVFFURQlzly4cIFRb9as
WbKDWObMmZ988snvv//+3Llzurq4oiiKckXwxx9/jB07NiEhoXDhwlOnTvXa
K+HQoUNdunTJli1bmTJl1q1bF2chFeVqRh3O2LJ48WJqctCgQQF3EVIURVHi
ydatW6+77rqQB0OGDElvARVFURQlKDt27Hjqqafy5ctXpEiRLl26TJo06cMP
P9y4ceOCBQvGjh3bvHnznDlzlitXbuTIkSdOnEhvYRXlKkIdzphz+fJlzFqB
AgWwcukti6IoimLn119//fjjj1euXLl27dotW7Zs3779888/X79+/aeffrp8
+fJvvvkmvQVUFEVRlNRx5syZBQsWDB48+PHHH69fv/7tt99+3333PfXUUyNH
jty4caO+PVeU+KMOZ1pw/vz5Ll26lCxZkvpMb1kURVEURVEURVEURVGueM6d
O/fMM89Ur179hx9+SG9ZFEVRFEVRFEVRFEVRrnguXrw4a9aslStXprcgiqIo
iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIo
iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIo
iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqK4c+nSpcuXL6e3FIqiKIqi
KIqiKIqiKH8Fpk+f3qJFi2PHjqW3IIqiKIqiKIqiKIqiKFc858+ff/LJJ2+/
/faDBw+mtyyKoiiKoiiKoihKXDl9+nSvXr3uvffeL7/80nbowoULGzZsmD9/
/qRJk4YPH96jR4/HH39827Zt6SKnF998883ixYvfeOON0aNH9+nTp3379lOn
Tk1voa5Izpw5s2rVqrlz506YMGHIkCGdO3fu1KlT2s3KSEpKatq0affu3X/5
5Rfbob9Gm546der++++vUaPGjz/+mN6y/B+HDh1aunTpjBkzxo4d27dv3w4d
OowZM0Y/dFIURVEURVEURYkVFy9e7NmzZ+bMmUOhUKtWrS5dumQ9SpR90003
hSxcc801H374YXpJ6wqhYujPPPXUU+ktVCRs27btmWeeIez9+eef00WArVu3
XnfdddaavP766w8cOJAW9zpy5Ei1atW4RdasWefOnWs7GrxNT5w4MWrUqD59
+jjzhBmBQ4cO0YPatGnz+++/p7cs/8vzzz9vq9v777/f1vEVRVEURVEURVGU
iJkxY8Y111xDtJUtW7Zx48bZjhJ/ESpu27aN8F9i8AyYafnpp5++/vrrhQsX
VqpU6crNtGzfvr1QoUIi/4MPPpgugfmFCxf279+/cePGbt26oQ9pl2nh6dq0
aWOSOc5ZUgHb9MyZM/fcc48UKFq0KKfEXNTo4SkSEhJGjBiR3oL8L7/++uuu
XbvoxbVr19ZMi6IoiqIoiqIoSmwhpi5QoAChVu7cuV999dU//vjDqySBGOF/
xsy0GGbNmpUpU6YrNNMyceJEM8egaNGi6bu4x/HjxytUqJBGmZbLly+PHDky
a9asXL9cuXJbtmzxKezfpklJSfnz55dKo9js2bNjK2pMuHDhQosWLQoVKrRj
x470luVPfPTRR9mzZ49VpgVjkkbTnxRFURRFURRFUa4UDh8+fMsttxBnlShR
YtWqVWHLywcdGTnTsmzZMpmJcSVmWqhVCXuhWrVqJ0+eTEdhTp8+XbNmzTTK
tLz//vu5c+fOlClTkyZNjhw54l/Yv01//PFHyQhBQkLCmjVrYitqrNiwYcPf
//731q1bnz9/Pr1l+T82bdokE9Wiz7ScO3eufv36r776aqxkUxRFURRFURRF
ueI4e/ZsixYtCLJq164dMJR+8sknM3imBcH+9re/XaGZlgsXLrz44os33XQT
LbJx48b0FebMmTN33nlnWmRavv7665IlS2bLlq13794oYdjyYdt0zZo1tWrV
Kleu3MSJE30mZaUvFy9epLvlyJFj8eLF6S3L/7Fly5ZYZVpOnjxZpUoVzbQo
iqIoiqIoinLVQlQ1bNgwAtgOHTqcOnUq4Fmaabl6SKNMy88//1y3bt08efK8
+eabAUP7v0ybLlq0iAdp2LDhuXPn0luW/yWGmRaUpFixYpppURRFURRFURTl
quXQoUNVqlR5+eWXUzUHQDMtVw9plGmZP39+pUqVUjVj5y/TprL0zXXXXee/
Lk08iWGmZfbs2dmyZdNMi6IoiqIoiqIoVzMRbG2jmZarhzTKtBDOp3ahkr9M
m16+fPnhhx/mQfr06ZPesvwvscq0XLx4sXnz5lxHMy2KoiiKoiiKoiipQjMt
Vw9pt05Lavkrtemrr76aKVOmm2+++fjx4+kty/8nVpmWzz77TK6jmRZFURRF
URRFUf4CnD17lkD4p59+Su1Z+/fvJ9y7fPly8LNSm2m5ePHi4cOHv//++7it
UxpBVP7bb79RgamtiuBw2V9++YXaPnTokHWBjjNnzqTF7WJFGmVaqA10ldoI
/vhpkWlBjJ9//hkxgizJazsxtfJbWb9+fe7cuRMSEtatWxfB6WFJrTLHJNOy
d+/eihUryvZPkWVafv/9d8Q+evRohl3QODnFmmHK6MUXLlwIftYV2v0VRVEU
RVEU5erk22+/7dev3w033JApU6bs2bMTil577bWNGzdeunQpEYHPWd27dy9e
vHjevHk595prriGOTkxM3LFjR5CbBsy0EO69/vrrderUQaqsWbPmzJmTPypX
rjx+/HjCW2tJYrShQ4d27ty5devWDRo0qFq1aq1atWzb/m7fvn3gwIFE2S1b
tqxfv36VKlV4TK8dkINH5d98802vXr1Kly5NpHnzzTcXKVIkT548LVq0WL58
eZQLVhiSkpI6dux44403cv17UqhQoUKjRo0+/vjjYcOGlS9f/ocffpCSBO9j
x47t1q1bmzZt7r77buqBf0+cOGG9mtRVp06dqId69epRn23btpUvcQj95s6d
i/CVKlUqVapUjRo1qLE9e/ZYTz979iyNQj0TFJctW7Z27dqDBw82AjhxZloO
Hz48fPhwKv+mFHiccePGET8GqQqqlKZBciqZqqZCqHYqnyagIfzP9WpTrvn2
22/37t378ccfv++++3hqHu3TTz/1uRRhLwUefvhhxKDj5MqVC/0sWrQoGkhj
pZH8Vo4dO0bV8SwTJkwIflZYIlZmW6aF+tmwYQM6hnqgSPQ1FHL+/Pn0aOe5
aN2XX345cuRINCT0b5o1azbuz/jklLAGo0ePRpMxKWXKlClQoAAtQlMiti1T
hDZOnDjx6aeffvTRR+lB1atXv+2220zNb926FdOEApQoUYIugD6sWLHCmrSR
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
QCeZOXNmTU2NsGJnzpzR09MTfxwMAAAAAAAA4Gvz4cOHESNGmJubb926lbcl
zfv37wMCAlhCFQrA6c+ipzFQbO7u7k6FdXR04uLipGvJhg0bOByOvr6+mBNU
CgsLhwwZ0rVr1/T0dDGr+PLli6OjY2hoKP+hoqIiOqEEzW02UlNTLS0tqfP7
9OmTn58vxRlYT7L0OKLHuKqqqjw9Pc3MzJ4+fSptewEAAAAAAABarS9fvri6
uvbu3fvNmzf8R8+fP89W1qipqS1evJiibGHnyc3NZStZrK2ts7KypGjJlStX
qC5tbe39+/eLmZw2ODhYQ0NDoik0BQUFffv2nTp1qohpGy1ObGyslpYWdT5d
lxR5faurq5cvX66qqmprayvO+MmdO3cMDAymTJlSWVkpVXsBAAAAAAAAWq2g
oCBLS8tnz54JK8Db+Zdi+ePHjwsrlpSUxMZkvv/+exEDMsK8fPnS2tpaX18/
NDRUzLGCjIwMOzs78dcZMZWVla6urtRU0UuiWhZecpuQkBAp3n7o0KE2bdrY
29snJyeLU766utrT01NbW1v83DgAAAAAAAAAX4OsrCxbW9tVq1aJGNyg6Nvc
3JwNtgwcOPDLly8Cix04cIAifSqzYcMGSZvx/v17R0dHCwuLK1euiP+u9evX
U41LliyRtDpqIdvbiH+P6ZaoqqqKroWuyMDAIDExUdK3nz9/3sjIyNXVle6C
+O+KiorS1NQcNWqUiE2mAAAAAAAAAL42Z8+e1dLSsrGx8fHxef36tcAyXC6X
JWAhenp6CQkJ/GVqa2unTp3KMrpcunRJojZ8/Phx6NChffr0EXNCBZOfn9+v
Xz99ff34+HiJqiOJiYmGhoZqampBQUFSrLVpbrKysqytranz7e3teWl2xHT1
6lUzM7PZs2cXFRVJ9EaqiKqjbhS2SxEAAAAAAADAV+if//wnb4PgMWPGCMt5
u2zZMl6x4OBg/gKfPn3q3bs3He3cubP4yWnZG11dXYcNG9ZgQkVmZubOnTvL
ysqEvfHChQtaWlqOjo7C5tiIUFlZycaODAwMLl++LOnbm5urV69qa2vT5Xh5
eXG5XPHfmJCQ0KlTp4CAgAbpVq5cuXLmzBnR7+WNrf3yyy/SNBoAAAAAAACg
Ndq8eTNvCEXEjIjg4GBescDAQP4CSUlJBgYGdNTV1VX0FkX1ff782c3Nzd3d
vaCgoMGhmJiY8ePHC9u4mcvlTp8+narz9fUVs64Grly5oqOjQ2fo0aOHREND
zRBL0kL27Nkj/rsSExO7deu2Y8cO/szAs2fP3r9/f6Nn2LdvH4fDoQ6UdCIN
AAAAAAAAQGsVHx/PRkjIrFmzhI1s1B+Qobiev0BISAhL0hIYGPg///M/4lRd
WFg4adIkCuoFJkv5+eefFy5cKOy9ubm53bt3l3Rsob6ysrJRo0axK/Ly8hJ/
dKi5qaqqGj16NF2Fvr6++Dl+Hz582KdPnz///JN/8VR+fr6Tk5M4U32oOqpU
T0/v9u3bkjYbAAAAAAAAGkXRlpubW7du3caNG3flyhVeBFdZWXn06FF3d3cK
jfv3779y5UoKk5XbVKjvxo0bP//887Zt20Qsw/nxxx/ZoISqqmpYWFiDo1wu
19vbm45qampeuHChvLw8IiJizJgxtra2vXv3XrhwYUpKSoO3FBcXe3l5mZmZ
zZs3b1E9CxYsmDNnzujRo9u2bbtv3z5h7blz5w4V0NXVvX79uhSXXFZWdvbs
2aFDh7KL0tDQ+O2336Q4T3OQmZlpZWVFV2FnZ/fx48fs7Oz169c7OztbW1sP
GTJk+/bthYWFDd7y9OlTGxsbR0fHRf/X/PnzfX19Bw4caG5uLk7OHKqOKqWq
W27vAQAAAAAANFsPHz60t7cPDQ19/fo1BbBaWloHDx6k1+l/v/nmG09Pz7i4
uJycnNjYWArN6BVltxckUFJSMnjwYDYoYWpq+vz58wYFWHJUOmppaXnr1q0x
dehe8+64oaFhZGQkr3xpaen06dPZHBhh6BESkVk3ODiY3t65c+eMjAyJrqWq
qiosLMza2pouZPHixYMGDWLVWVlZvXnzRqJTNROXL19u06YNXYKHh8fFixfp
RtB1PXnyJCsra8uWLXp6eg4ODvVzHb98+ZINj4gg5oKgmpqaiRMnUvnJkydL
lB8GAAAAAAAARCsvL3d3d9+9ezf7X5Zk1cbGJi4urn///ocOHWJR2KNHjzp1
6qRStz2NUtsLkrl16xYF7CwGX7RoEX9aj7t377IlSGZmZhSk05NQfxUSPQY6
Ojrt27en8J+9EhUVpa6uLjrYNzY25h/S4Zk1axaVGTZsWGlpqfgXkpeXN2nS
JKrax8cnPz+fXjl37hwbpiArVqyQoFOajfXr1/OGRwYMGED3gneotrZ2yZIl
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
Pn3y9PQ0MDD4448/Wu4M84SEBGNjYxcXF97irIyMjLFjx6qpqdHVKTp3yuXL
l7W0tKgByMvUBD5+/EgfsSNHjkRHRz9//ry0tFTZLWrWcnNze/fubWtrS5+I
Jqv0/Pnz9KWnq6v7NY+0pKSk9O3bl76a+A/99ddfbFR/8ODBX758aYnVtSzV
1dX/+Mc/unXrhpEWAACAlosX+U6ZMgXJAFuQNWvWiD/MQvbs2cN/kvz8/KlT
pxoZGfn6+i5cuLBnz54mJiYrVqxoNImKLOj81B53d3dxkpBkZ2fPmDFDT09v
xIgRK1euXLRoUZcuXRwdHXmjQy3XvXv3qMMpvvvpp59++OEHY2NjCjCPHj1K
v7EVXTVLh0td2rJ2x25xioqKli9fzuJ33idRTU2te/fuAQEBilsd1qIdOHBA
XV197dq1TVZjVlbWkCFD/vzzzw4dOnzNIy3U8+bm5qtXr+bPzUVfSuPHj6en
V0tLS+BMQvrxEB8fHx4evnPnzlWrVs2dO3fWrFnv3r1TUHXNWW1tbXJy8smT
J4ODg9evX09/sdJfsgIzz4tw5syZUaNGUWdipAUAAKBFe/LkSURExOfPn5Xd
EFAC+lmYnp5+/PjxkJCQuLi44uJiRdd4//59IyMjKysr8VOsUCgUFhYWFBS0
d+/ev/76qwnGIppGVVXVw4cPDx48GBoaSn9QXP7bBpW6ublRRFl/12+QO/pk
BQQETJs2LTMzs7S0lOJQT09PdXV1Nt6iqal56dIlZbex2SkoKBgwYACFlk22
oRh9HObMmbNx48bU1NSvfKRl9uzZ7OFcv349/9Hly5ezowKnI7JpcvXH9qkz
X79+raDqmrO8vLwePXrU7woOhyPRZuX0N+OQIUPu3r1Lfy9gpAUAAAAAxFRR
UTFmzBgKOSMiIpTdlq8RS5XTuXPnlphMuAVJS0ujcCkzM5P3Sm1t7dWrVwcO
HEjhvIuLS35+vhKb1zyFhYVpaGj4+/s32cLA8PBwNze3oqKid+/efeUjLWy2
IYfD2bRpE/9RNhGO0N3hP8rlcrOzs+/duxcYGMiGE+nhF71QTpbqmrkvX748
f/48MjLSwsKCLsHQ0PD+/ftivreysnLmzJksSRFGWgAAAABAIhEREZqamu7u
7lVVVcpuy1dn27ZtFN0sWrSo5Wa5aRHi4+O7deuWmprKfyg3NxdPPr+ioiIX
Fxdzc/Mmyxj25s0bqpFlZMVIS0FBwe7duw8ePChwZiPbF56+OkTPhQsLC2Nb
Gf78889NUF1zRp99S0tLuoo+ffqIP6waGho6ceLEkpKSvzHSAgAAAAASop+R
rq6uhoaGd+7cUXZbvi55eXm9evWysrJ6+/atstvSyl2/fr1t27bY0E18J0+e
1NTUXLhwYdOMAZaXl3t7e/MSWGGkRYTi4uLBgwdT1G9kZHTv3j0RJf38/FTq
tjJssLGagqprzmJjY9mKqqlTp4r5SL98+dLFxYWXqBwjLQAAAAAgqZs3bxoY
GPj6+jZNchJggoODNTQ0tm/fruyGtH4vXrwwNjZ2dnYuLCxUdltagJKSkm+/
/dbExKTBnr+KQ5+FyZMnl5WVsf/FSIsIUVFRbdq0oah/5syZIr6x6Sa6uLhQ
MVNT05SUFEVXJ4uIiIghQ4ZkZWUp4uRMUFAQm5ZDT5o45elRpAcyJCSE9wpG
WgAAAABAUvT7ef78+W3bto2Li1N2W74WFFZ0797d0dERu940geLiYmdnZ3V1
9V27dim7LS3A+fPnKbieNWtW0wy9Pn36lO7Oq1eveK9gpEWYwsLCIUOGUMjf
r1+/+nmH+FF/tm/fnkpS30qdXF386mSxdOlSAwODu3fvKuj8VVVVY8aMoasQ
v5bdu3f7+PjU3w8OIy0AAAAAIAUK/Om3NP0mR+DfBCiA9fPzMzY2jo+PV3Zb
vhYbNmzgcDgmJiZYJScaRZcUlhoaGiYmJjZBdcXFxePHj6cwtv6LGGkRqLq6
evny5dQttra2T58+FV341KlTLB3uggULZK/uyZMn0p1EHD///HPbtm3/+usv
BZ2f/naztramrrC3t8/NzW20/MOHD11cXBpsuYWRFgAAAACQzv379y0tLf39
/VvNxs3NFgVB7dq1O3LkiLIb8hV5/fo1S4k5YMCAjx8/Krs5zVdcXJyenp63
t3fTfA9s3rx55syZlZWV9V/ESItAhw4d0tLSsre3FydN8T/+8Q962tXU1I4d
O9YE1clC0SMtV69e1dbWpt7w8vJqdJpWUVHRuHHj+Dfjw0gLAAAAAEjtzJkz
pqame/bswVY4inP37l0K+QMCApAVpynRI00BHcvVMGfOHOw3JFBlZaWHh4e+
vv6tW7eaoLo7d+4MHjw4IyOjwesYaeF3/vx5IyMjV1dXcSL9kpISZ2dnetqN
jY1fvHih6OpkpOiRFpakhfBSLgtD3xJUeO7cufzfDxhpAQAAAABZnDt3rkuX
LjExMcpuSOtEIWTfvn3pxzwmDjW9Z8+emZqaUrikqan5+++/K7s5zVFCQgLF
vBMnTmwwyUQRvnz5Mnz48C1btrzkc+XKFRMTEw6Hs2vXLvZKdna2otvTnF29
etXMzGz27NliZlxJSUlhSVocHR2LiooUXZ2MFDrSUlVVNXr0aOoKfX39Rqu4
fft2nz59Ll++zP9M/vrrr3QSc3Pzmzdv0v/KkmQYAAAAAL5ODx8+/O2335Td
itbp3Llzp0+f5nK5ym7IV+fDhw87duygQIn96zb9gbd/a2tSXV29a9euNWvW
SDEtjd7r4+Ojo6Nz6dIlqRvw/v37oKCgESNG2NraDho0iBpTWlrKDjV47FNT
Ux0cHDoJYmpqyuFw6DaZmJiwVxYvXix1k5qD8vLyiIiISZMm2dvb9+zZ08/P
Ly0tjR1q9NsgISGhc+fOAQEBDYa/rly5cubMGYFvOXHiBEvSMnfuXHoSkpKS
Zs2a1atXL7opEydOjImJEVEpVUcdLlF1MlLoSEtmZqaVlRV1hZ2d3cePH7Oz
s9evX+/s7GxtbT1kyJDt27fX348sPDxc4ANJ9PT02JbZlpaW9L9dunRRRGsB
AAAAAABahLy8vCVLllCg1KdPH4ofjY2N2WCLl5dXE8zcaEr5+fnTpk1TU1Oj
KJIXyIvv3r17hoaGo0aN4o2NSKSsrGzt2rXUz927dz969ChFuA8ePBg/fjz1
c05Ojo+PDx06dOiQOKeKjY3V1NRsHauHamtrY2JibGxs2rZtGxgYmJycnJ6e
Th1lb2//7NmzAwcOUJ9Pnjy5/jY39SUmJnbr1m3Hjh38iw1nz569f/9+ge9a
uHAhPeHUgdTh69at6927d0hISEZGxvPnzz09PTU0NObNm8fbU1v26mSk0JGW
y5cvs12qPTw8Ll682KtXr8WLFz958iQrK2vLli30TDo4ODRIfisQ9RhWDwEA
AAAAABAK32xtbfX19fft20fBI5fLZREToSCrNe399OjRI4oZ2VQQCrF3794t
0dupc3788UeKSc+dOydF7R8+fBgxYgTV7ubmVn//svz8fHp97NixLCWpn5/f
//zP/zR6tlYz0lJVVRUYGEjXYmlpWX8vJ3oON2zYMGjQoC5dulC3dO/ePS8v
j//tDx8+7NOnz59//sk/Q4k61snJ6fLly/zvKi4upjPTabW0tHr37u3t7V3/
5PRGOqeamtrOnTvlUp3sFDrSsn79evZ579Gjx4ABA+pvPUaXuWTJEjo0cuTI
RkcXMdICAAAAUqusrNy6dev48eNHyw/9xktKSlL2lQHA1+jcuXPt2rUzNDSs
n3eIwkl6kQVfS5culeK0ze2rksL2sLAwOzu7w4cPT5w4kV2ao6Pjly9fxD/J
48ePTU1Nhw0bVlJSImkDcnJyvvnmG6rU2dmZf8Tg/PnzFPKzXMRipse5cOGC
hoYGlT958qSkjWk+qqurV69era6uTk/g9evXGxylTqNbxm6Wm5sbf+Kmp0+f
2tjY0H1c9H/Nnz/f19d34MCB5ubmAncFohdZPiIyefJk/hu6fPlytpomKytL
9upkp7iRFvqojho1inWFtbU1/4LBW7du6enp0fPZ6MKoOXPm0Ek6duxYv9MA
AAAAxFFUVPT999+rqampyI+uri6FAMq+MgD46sTHx7dv354C9gZJh2pqary9
vdkXFMWPUuQLbW5flUeOHHFxcWFRZExMDBvWoP9GR0eLeQYul7tw4UJNTc3j
x49LWnt5ebmXlxfVaGBgwD+eQLKzs21tbamAkZHRgwcPRJyKbk1JSUl6erqf
nx+bnDN9+vR3794VFxe3xI26Dh8+THeBLmTVqlUC0+bMmDGD3f3Nmzc3OPTy
5UveOIwwPXr0EDgT5tixY+zhpKdCYIH9+/er1A18UQtlr052ihtpycjI6Ny5
M3v2bty4wV+Alzp4/PjxArOUV1ZWFhYW3r9/v2/fvuxzSr2Xm5srcO0VAAAA
gAj0g7BGfpR9NQDwNfr48SOLjMaOHcufASM8PJyFol26dMnJyZGuiubzVVlV
VVVRUcH+TFGhk5MTC43F30IoOTnZ3Nyc3lg/O6iY9u3bp6GhQdVNmTLlP//5
D3+B1NRUCwsLKtCvX7/Pnz+LONWvv/5Kp9LW1qa427iOgYEB/S+9+Msvv0ja
MOV6/vy5paUlXTVF+unp6fwF6KZPmDCBCujo6Ny8ebPB0WnTpjU6Oufq6irw
/s6fP5+O0hMeEREhsG2///47O4O/v7/s1clOcSMtly5dYklaPD09BX7KXr9+
bWZmRgUcHBzqr3pjSkpKhg4dSo+frq6uoaGhiYmJkZGRvr6+lpYWNVjurQUA
AADZ1SqYsq9PbhTdUQAgC3FybjQ9atjSpUs5HA7FR9euXeMvkJycTEEThVem
pqatb7fWvXv3qqqq0tVRbHjv3r1Gy1N3/fLLLxRO/vHHH5LWlZGRwear0NuP
HTsmsMz58+fZUMysWbMkPX8LRUH99OnT2QCFt7e3wI1+Pn782K1bNyrQtWtX
qYf7+BUVFbGhNnrChS322bBhA28srjnsg6a4kZa1a9ey2Tv79u0TWCAxMZE+
JlTGwsLi3bt3cm8AAAAANKXNmzc3+o9HMqJftsq+SjmIj49XdEcBgCyGDx+u
7O8JAVJSUtgkiqFDh/7rX//iL5Cdnc0ykbbKkZaMjAwbGxt2g3766afaxsbe
375926lTJwcHh/z8fEnr2rRpE1vmY21tTfUKLMOygqiqqjblStKysrKDBw8u
W7Zsscz8/f3Dw8OrqqrEr/3BgwdGRkYqdZsCC1uQdevWLV1dXSrj7u4ux/mf
L168YKOIjo6OwlbGzZw5kz0e48ePV9xIC13UqVOnqPca7WF69jQ1Nb28vBot
uW7dOnH2CWIqKytHjhxJl6mvry9sGCc6OpoNA5qbm2OkBQAAoKU7e/bsBAW7
f/++sq9SDl6+fKnojgIAWaxZs0bZ3xMCBAUFsUCS/iBw1k1BQQFbW9Ra81su
XbqU9YA42z2vXbtWXV1d2D/6i/D58+cBAwawinx8fATG7GVlZcOHD6cCxsbG
T58+lbQKqb19+5Yt3pGL7t27f/z4UfzaV6xYwd5oZWWVmZkpsMzWrVtZGf49
gGRx/PhxtjJuzpw5AgsUFxfz1pfNmzdPjlU38OXLF0dHR3ndAkZVVXXPnj1i
NoCXpMXOzk7YrKF169bxbnFubq78rh4AAAAAAKD1KC8vZ6F927Zt7969K7AM
hV1s1oeDg4PozCEtFG9/JYpMd+3aJaJkenq6ra2tvb29RCMJTGJiooGBgYrI
pUNv3rxh84so6JYiCYwsqLrXr1+/lBldQnFxsfj1UmFnZ2cWvwtbOlRTUzN+
/HiVuukWt2/flt9F/7148WJ230NDQwUWoMvp0KGDIgZ5+JWWllJ1jfbwtGnT
9PT0IiIiGi35/v178SfhXLt2TUdHR6VukZTAWUPV1dXjxo1jXTFixAj+hE4A
AAAAAABA0tLSWGjfv39/Ydscp6SksG1wp0yZ0ujimpaoqqpq0qRJLIR0dHQU
MZq0efNmNTW1bdu2SVEL28KGtG/fnqJggWWioqLY6gyFTp9oVnhPFwkJCRFY
Jjs7m4312dnZyXEqRUVFxbfffqtSl6JH2NTWY8eOqaurq4idxqcJKChPy86d
O9ld2Lhxo8AC6enpVlZWossAAAAAyI4ijqSkpIMHD+6Tk+Dg4MjISAXtCwkA
wO/BgwcsxeWECROE/fP3tWvXtLW1ORxOgw2gxdQivipjYmLYritaWlpnz54V
WObDhw/du3fv1q2bdEuoVq9ezRvMETZfha1jUlNTCw8Pl6KKluivv/7S19en
q9bT00tISBBY5saNG2y6hbA9caSTn5/fq1cvEQM49IngbXE+aNAgiebqKI6C
Rlp++uknukxNTc0LFy4ILHDs2DE2DGhgYCBs/hsAAACA7OhHGstdIF/bt29X
9pUBwNfizp07LM5dsGCBsDIBAQFsJoawzVlEaxFflfW3e54wYYLA/Xl/++03
NTW1DRs2SFfFvHnz2PkpeBdYgG2Sq1K3D86zZ8/Yi0VFRa171CU2Npaie5W6
/Z2FDWFt2rSJdd3u3bt5L0ZFRb19+1aWqrOzs62trem0o0ePrq6u5i+QmZnJ
ZnGoq6sfOXJElrrkSEEjLWzravqYv3r1iv8ol8v18fFhd2HSpEkK2sAaAAAA
gHnz5s25c+fOyM+1a9eayb+aAcDXID09naVCXb9+vcACFP6zNBoUXkm0oUx9
LeKrct++fbztnpOSkhoczcvL69OnD8Xdqamp0p2fepgFqsuXLxdYgCJclhKk
f//+vBVMsbGxw4YNk67GFiExMbFt27YqdVmA/t//+3/8Baqrq8eOHUsFdHV1
b926xV6k2+Hk5HTnzh1Zqi4oKKB7SmeePn26wAInTpxgszgcHR2psCx1yZGC
RlqWLFlCV2pjY5Odnc1/NCMjg41KUdU3b96Ub9UAAAAAAACKUF5efuzYsR07
drx+/bop6y0sLGQ7nsydO1dgAba8SF9fnxfktlb1t3v+xz/+0SAjzcGDB9XV
1VesWCH1+SMiIthIjrA0L7///jvbB8fDw4O3kmvhwoXz58+XutLmj7qdjfUN
GzasrKyMvwB9IlgqISrG2xnq0qVLDg4OMq4gq6qqGjVqFJ3Z19eX/yg1ZvTo
0Sp1i2WuXbsmS0XypaCRlpCQELpYW1tbgSMtu3btouefHmD6CMhxq+vKysqT
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
tNDQ0G3btp05c6bBOkR6OOkW7N+/Pzw8XBFLFOmcV69epW6nqukzKPfzy5FC
R1r+rvuef/jw4cGDB+le0B++tocQAAAA/q4bbKEfZo8ePaJfR/r6+uy3MQU7
ly5devPmDR1KT0+nyJcKnDhxYtWqVY6OjqqqqhTq9unTh35TKbv5TefatWsU
JFJ0r6B/lpo9ezbrfIEbxS5fvpwd3bBhgyJqV6iKiorU1NSbN29StMWuYtOm
TSLKX7hwge0KOmjQIP4pJbdu3dLV1aWjFMoJm3BCv3LpTpmYmNy9e1fS1lIw
snLlSj09vaioKEnfKw7esnoDAwP+5n3+/Ll///7saEtfLEY9OXny5AZZbugr
xdfXt02bNhR3C9znlGI06vyNGzfKUjV9X9HDJssZQEbBwcFsDyD62lyzZo22
tvYPP/yguETiABJR9EgLAAAAAM+TJ09YjgjRgTBFT2FhYewfpikgknraQMtS
WFg4ZMiQrl27pqenK6iKFStWsFlDAjt/69at7Nb4+/srqAGKVlNT4+7uTpeg
o6MTFxcnomR8fDwbSxk6dGhJSUmDo48fP6YgnY7269dPRDKTN2/edO7cefTo
0ZImIrhz5w6df8aMGQqKCqnNLI+EwH/iLysrY3uIUA/cuHFDEQ1oMl++fHF0
dOQlJq2vqKiIPlMC38WyfJiZmcmS0OP06dM+Pj5Svx1kl5mZyUtQrKamRlHt
7du3ld0ogP/fqlWr6Bv4wYMHym4IAAAAtH7h4eHsnyD19PRu3boluvC6devY
Cg4TE5OvYVfB4OBgDQ0N0TMxZFRQULB79+6DBw8KnKcxa9YsNg5DBRTXBoXK
zc3t0aMHXYW1tbXoVTk1NTVRUVFBQUGpqan8R8+fP89mvIwZM0b0YAg9pZqa
mhJlCCwvLx8/fny7du3kuMyB37Nnz9avX3/16lX+nBU5OTldu3alqzMzM3v9
+rXi2tAE6JHu27fv1KlTJZ05f+fOHQMDgylTpvDvmCyO2tpa+rzs379fiveC
HPn7+/NWik2aNEm6uwmgCMnJySEhIXJJCAwAAAAg2rx589hP4m7dujWaHp+F
Qqz87Nmz5ZLksNnKyMigPqH4VxH7DYmDt7mAkZGRwNQlLQK1nE2F+v7772XZ
iiIoKIgNOv3666+iS759+7Zjx449e/YUPx/pyZMntbS0Zs6cqaxl9bxe+uab
bxSRjJdEREQMGTJEESloGqDI2tXVlS5H0in61dXVnp6e2tra0uVEevnyJdUr
361UQQqPHj1i8yR1dXVFT2MDAAAAAGiVCgsLHR0d2ciJu7t7o+smXrx4YWpq
ysrTGxWRW6/5WL9+PcX1S5YsUVYDoqKi2EYeM2fO/M9//qOsZsjowIEDbB6U
LKlmKHy2s7Ojk3Tt2rXRsQIulztr1ixVVVUx93gtKipycXHR0dG5du2a1C2U
RU1Nzdy5c1nq41OnTimolqVLlwpMEaMIdK/Z7CNJR43omdfU1Bw1apSkmbep
D/38/NgOv6BcvO2e3dzcZN91HQAAAACgxXn27JmJiQkbOdm+fXuj5WNjYykY
ZOV79+796dOnJmikUuTn5/fr109fXz8+Pl4pDWApYlhaEmVNqpFdbW3t1KlT
6SratGlz+fJlqc9DkTuHw6HbIeZsB6qLaqQOFCfSv379uq6urhJHDu/cuWNo
aKiqqrpo0SJZpv2I1pSpIBMTE+mK1NTUgoKC2A68YsrLy7O3t6f3Sro48Y8/
/hgxYgT/Bl6gFElJSf7+/m/evFF2QwAAAAAAlECiJC1k586dvAX4I0eObMU7
Pl+4cEFLS0tZ0Xd1dfXy5csp9La1tZUlQajSffr0qXfv3vS0dO7cWerdP69c
uUKht7a29v79+8UM27OysqytrempFrjNTX10QraAbtWqVdI1T0Y5OTlOTk4c
DmfKlClFRUWKq6gpR1oqKytZGmQDAwOJRth4Q3O//PKL+O96/Pixs7PzkydP
JG8pAAAAAACAnNVP0pKdnS26MIX/kyZN4m0qceDAgaZpZNPjcrnTp0+ny/T1
9VVKAw4dOqSlpWVvb5+cnKyUBshLUlISS+zj6uoq3bjcy5cvra2t9fX1Q0ND
xZ8dQZH+qFGjqN758+eLLpmZmWljY6OhoaGgzZ1FKysr8/LyUlVVnTlzJv92
S/LVxNubXrlyRUdHh25Bjx49JNq6a9++fRwOh94l/gQV6joR21EBAAAAAAA0
mfpJWiZOnNhokpaHDx/y9oMePHhwfn5+07Sz6eXm5nbv3p0uc+/evU1f+/nz
542MjFxdXcVP6NpshYSEsCQtgYGBUrydeoAeUQsLCwrbJX0v1ciyCQnbVpi5
ePGilpaWiYnJixcvpGihLKqqqpYsWaKtrb127dom2J+liUdaysrK2GAX8fLy
Ej9fB7VQX19fT08PuwMDAAAAAECLUz9Jy7Zt20QXprjJw8ODFbaxsaH3Nk0j
leLOnTsUk+rq6t64cUPS99bW1iYmJs6bN2/gwIG2trZubm5XrlxhkzFq64h+
+9WrV83MzGbPnq2gDWiaEpfL9fb2pgdGU1PzwoULFGtHRESMGTOGuqV3794L
Fy5MSUkR8faPHz8OHTq0T58+0k3siYmJoXrpCRf9rK5du5Za6ODgUFBQIGkV
7IomTZpkb2/fs2dPPz+/tLQ0dqjRbbmqq6tXr15tbGwcFhYmUSYTqTXlSAt9
XZw9e5ZuH/vG0NDQ+O2338R8L913lv1Y/LcAAAAAAAA0ExQksiQturq6opO0
VFZWrly5Ul1dncPhODs7iw6QW4Hg4GC60s6dO0uaivbdu3djxoyhuHLixIk3
b97Myck5ffo0xeAhISEU71P82LVrVxHjBgkJCZ06dQoICGgww+HKlStnzpyR
8mKUh2U3pQfM0tKSHrAxdWJjY6lb6L/UG4aGhpGRkQLf++nTJ1dX12HDhjWY
2EN3ZOfOnRTIN1r727dvLSws6AkXVsXfdQ/2999/Ty2cMmWKRMMdVDgmJsbG
xqZt27aBgYF0T9PT09euXUvXSzf6wIEDBgYGkydPFtbOmpqajRs3duzYkfqh
/utVVVV79ux5/fq1+C0RX9OMtNAlhIWFWVtbm5qaLl68eNCgQWywxcrKSsz8
qNQ59PGht1AHtu595AEAAAAAoPXhJWmh8F9EkpYHDx5QNKqqqmpubh4SEtKK
s+DyzJo1i7qFwnxxInqeK1euUBdpampu27aNokXe6/Hx8b169Ro+fDjbxrdB
cM2TmJjYrVu3HTt21H8vM3v27P3790txIcp19+5dlqTFzMysR48eu3fvrr9C
LS4uTkdHp3379vyJTD9//uzm5ubu7s4/zyQmJmb8+PGNrnQj9N5+/fpR7f7+
/sLK5OTk0MNPZbZu3Sr+dVVVVQUGBtKNtrS0pLvGe53L5W7YsGHQoEFdunSh
c3bv3j03N5f/7VSMqrOzs6v/XoZN41HQSGYTjLTk5eVNmjRJXV3dx8eHrS48
d+4c26mcrFixQszzLF26lO26hewrAAAAAADQghQWFg4cOJBFQCNGjEhLS8v6
X+/evbt37x6FSOvXr3dyctLS0urTp09QUJDAsLH14SVT9fDwEH+ew9WrV01N
TVVVVQMCAhoMldBJ5s6dy7q6Q4cOAmcsPHz4kDr5zz//5K+RIla6C5cuXZLu
cpSIpTZlWzzzbxtEQfSAAQPo6I8//li/x+jJ9PT0nD17tsAMsT///PPChQvF
qZ3ezlav0NmElUlOTqa7Ro2MiIgQ86LYqh91dXVDQ8Pr1683OJqTk8NWvhA3
Nzf+LZupE3bv3k0fvZcvX/KfPC4ujg4paKtiRY+0ZGZmUuPV1NSWLVvGm5RF
d+Hbb79lHdKvXz8xl2j9+uuvbCpUy93fHAAAAAAAvkL1k7SYm5t3q6djx44U
SLJDFOzExMQ0TR6JZoKCQQcHB7r2GTNmiPmWlJQUa2treouTk5PARMFRUVEa
GhpU4JtvviktLW1w9OnTpzY2No6Ojov+r/nz5/v6+lL0Sjeo6fO1yojL5U6Z
MoUuWVVVdfXq1fzLQKqqqkaPHs0eP966kuLiYi8vLzMzs3nz5tXvigULFsyZ
M4fKt23bNjg4WJwG8M5PfS6szI0bN3R1denWREdHi3ldhw8f1tTU5HA4q1at
Evi5oMeGfXY2b97c4BCVDwkJMTAw8PT0rH91CxcupOudPHkyPUWjRo1SUHZc
hY60fPr06bvvvqOrHjduXIMUQ5GRkezhF7/2/fv3U3lDQ8OHDx8qorUAAAAA
AACKwEvSoq+vzx/+lJaW3r59m4I+CpMpPtq6dWsT7I3STGRlZXXq1Il6hiJT
ccqXlZVNmDCByqurqwtLCRIaGko9KXAly8uXL9k+RyL06NGjxU0oysvL69mz
JzWeOpOXJ7a+6urqsWPHsjRBLPMwPXXTpk1j02CE0dLSunz5spht8PT0pLdQ
M4QVOHnyJN0XbW3tuLg4cU74/PlzS0tLOmfnzp3/+7//m79ATU0Nexh0dHRu
3rzZ4OiRI0fYxsciNLottdQUN9JCV00npxtnbm5OXdTg6Lt37zp27Mg+IGKO
aJ04cYLOJtG9BgAAAAAAUDpekhYK8z9+/CiwTGVl5dSpU1Xqtg7Zvn37VzKz
hQLDDh060FWvXbtWnPIUFWpqaqrU5fxMT08XWObHH39k3Xju3LkGh6ZNmyY6
9Caurq7//ve/Zb2wpsX2b6LGjxw5UuAwXXFxsYuLCxWgmPrPP//8u27mDxv9
E8HY2Fj86T3sIbexsRFWICwsTKVurgW1ttGz1dTUTJ8+nTXD29ubP53O33WJ
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
SJs2bRpsRhMbGztgwIDc3FxFtLyZ4O09xJ88tqKigi1Ja9++vUI36ElMTKSn
l/pfxKAW3SOWmHfEiBHUMBFnKy0tHTZsGJV0dHSkD1GDoyUlJWzMjRXgze5Y
UEf2a5ELBY20UPdqa2sbGxs/f/6c/+i5c+foqJ2dXXp6upgn5E0Vmz9/vlxb
CgAAAAAAoBB37twxMjJiIWFQUJDowm/fvmVrK/jTUzx+/Nje3l5Bm/Mq3YsX
L9iUjEbTd1CfdO/encPh7Nq1q8GhiIiI3r17u7i4NBinovix0Vy7rcC+ffvU
1dVnzJhRfwUWl8vdsmULdSwF5orOVBMaGkr3pVOnTqJj/L1791IxW1vb7Oxs
0SeMjo5u06YNtbzB+Ft5efns2bOHDx/OJr2MGzeOpcPNy8sbMGBAo7l2m4yC
RlrKysomTpxIffjLL780mLWSm5vr5ORElV64cEH8E7IlXWpqapGRkfJtKgAA
AAAAgLw8ffr0+PHjhw8fDgwMZLvQMhQG7tq1Kyws7Pz588JST/zwww+scPv2
7V+9esVep8Jubm4SLQdoWXgzfzZs2NBoYepYLS2tnj178taMUOy5bt26vn37
Pnny5Pr16/r6+gYGBklJSXTo9u3b/fr1ozui2AtoBgoKCoYNG2ZkZMRL70Pd
EhQU1KZNGzs7O2FpbeRowYIF4kxW+euvv9q2bUs3qNGlcOXl5V5eXhwOZ+7c
ubwdvemmjx071tvbm54Zf39/Ours7FxSUkIfDXp43N3dS0tL5XZJslHQSMvf
dZ3g4OBgaGgYHh7O23Tp06dPnp6e1LF//PGHRF8Uly9fpg8U/4gWAAAAAABA
M0GB3vDhw9XV1bW1tSnqMTExsbCwsLS0NDU1pciIpS2l12/evCnw7VlZWSzN
gpqa2sqVKyl8poB01KhRfn5+FDg38bU0pRUrVrAFVqKT4v5dN0/jyJEjZmZm
VlZW8+rY2tpOmzaNuu7v/11DRD3s5OQ0a9asLl26HDt2rEmuQPny8/OnTp1q
ZGTk6+u7cOHCnj170uNHHUsxuKKrZulw6bnduXOn6JIs7bOqqmpYWFijp6XC
dH/po+Ts7Lxs2bJJkybRTacqWOaWwsJCul466uXl5ebm5uDgUH/BndIpbqTl
77q90WfMmKGnpzdixAj6oli0aBE96o6OjteuXZP0VCwdbv29ugAAAAAAAFoZ
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
3Nzc7P9RqVQuLi5Dhgy5dOmSoQPWl5cvX548eTIsLGzZsmUzZ84cPXr0iBEj
tIyEqMdSqlevfv78+QJHMzIyOnfuLEft7OyOHz9e+PTU1NQ+ffr4+/snJiaW
Omb1w7p8+XKpL1IUaQ1lLKVjx45paWkFjsodpeJytFWrVhV6LRrF9evXu3bt
amlpqUzUUdja2spD3LRpU/6SeXl5K1asqFOnzpEjR0wVLQAAAADACCTbDQ8P
X7Zs2aJFi9avXx8RESFpeCmus2rVKicnp927d+tY/vjx4/7+/qdOncrMzIyO
jp43b56crs5Vx4wZU4oYTOLgwYM2NjZm+Ug2HRMTo+WUq1evzp8///Dhw4XX
7nj06JEy46V27dpFXeTevXtNmjQZMmRIqXdMLunDKpGcnBx5o4KDg2/fvl34
6M8//6zMeHnvvfcq+no+T548CQgIWLlyZVpaWkJCwubNm5s3b65+Dby9vQuU
l541atQoT0/PGzdumCRgAAAAAIBB3b1796OPPqpSpYpkvvXq1ZPUW/l3eWdn
52nTpj18+FD3Sx09erR69epBQUE65s65ubkDBgzYtm1bgXiGDx9ua2srl6pA
K1pIXaStzp8/P3v2bEtLS2nADh06pKenl+5q586dU6Z8vP3221o+rtm1a5e9
vf3ChQtLcQt5WPKsdX9Y+hUcHKxMXvrXv/5l/Lvr16ZNmz744IP8w2Xy3L/6
6itXV1d5E2bOnFn4lHv37nl7e7/zzjuVYCNvAAAAAEB+hw8fdnNz8/Pz+/nn
n1++fPnXq68bJM3v2bOn8jmPHJVDulwqJSWlQ4cOjRo1io2N1fHukmb6+vqG
hoYWPpSamioX1L0i5cfGjRuVpps4cWLprpCTkzN69Gi5go2NzY4dO7SUzMrK
CgwMrF279u+//16iW5TiYenRgwcPvLy8pIISQHx8vPED0K8ZM2b07dtXnlqB
3+XpJCYmFrXi0Pfff29ra7t8+XLDBwgAAAAAMJJz587VqVNHkvrCn59Ikjh5
8mQLCwtlK969e/cWe7U1a9ZYWVmVaIpCcnJyy5Ythw4dWjhLrbjGjBkjjWZp
aal9kESLM2fOSJubm5tPmDCh2G+4pLCjo+OgQYMyMzN1v4XysBYtWlS6CMto
wYIFKpXKwcHBQB8uGZn0lAYNGsTFxZXorJSUFH9/fw8Pj1u3bhkoMAAAAACA
MT1//rxjx469evXKyMjQWODp06dt2rRR1prw9PTUnkjK0caNGzdq1KhE+WZm
ZmZAQICTk9Pp06dLFHy5lZaW1q5dO2kxFxeX6OjoUlzh0aNHfn5+KpVq0KBB
qampxZbPzs4ODAysUqWK7qMW6oel9/2GdHHo0CF54hLwN998Uzl2mFq5cqU8
r7lz55b0xI0bN1paWgYFBVWmkUYAAAAAeG3t3LmzRo0aJ0+e1FImJCREmdYi
ieSsWbP+/PPPokrOnz9fykyePFlLGY0WLFigLItaeHuaiujGjRu1atUq9ebF
GRkZAwcONDc3//jjj3U/PTw83Nraulu3bsr3X8VSP6yShld2169f9/DwcHBw
CA0NrRzDLCIiIsLR0dHV1bWkWzjdv3+/cePG8sL88ccfBooNAAAAAGAckuR+
9NFHtra2rVq1mjdvXlELt969e7du3brKtBYfH5+iVu988uSJXEfSZ+3jNhpJ
lurk5GRhYREcHFwJUu8dO3Yoy+GOGzeupOcqX2xVqVJl7ty5JfoUKCkpqVmz
ZtKMhXeLLqwsD6uM7t+/7+vrK2/UoUOHjHxrg0pNTVUmMr3zzjvJycklOnf8
+PEqlUpefgPFBgAAAAAwjoyMjI4dOypDKBYWFqtWrdJY7OnTpy1btlSK1axZ
MyoqSmOxffv22djYSBJdio1UMjMz+/XrJ9d3dHQ8ePBgSU8vb/7+978rTbp1
69YSnZidnf3ZZ585Oztv3LixpCNOUn7o0KFy33/84x/FFi7LwyqLhIQEeeVa
tGhR1FtUoa1fv97S0tLc3Hzq1Kkl+hRIGZpr06aN9DXDhQcAAAAAMLT09HT1
SIsyAUPjVz9ZWVldu3ZVyjg4OPz222+Fy+Tm5n744YdSYPjw4aUL5tChQ1Wr
VpUreHt7m2QrHH1JS0vz9/dXNsi+du2a7idKbr5w4cJ69eodOHAg/+/S/itX
royJiSn2CqtXr1apVNKASUlJWoqV/WGVzuPHjwMCAjp16nT//v38v9+7d2/Z
smVFrRRUgUizt2jRQhpW3uTt27frfqK8Jy4uLra2tr/88ovhwgMAAAAAGMHM
mTOVzYi1bCWcf0DG0dExIiKicJnExMQmTZpIgaImxhRLEu1u3bopdxk4cGDh
jZAqiujoaGWRFl9fX10Ws1Xk5uYuXrzYy8urcPMq80B0WVn39OnTDg4O9vb2
GkfD1Mr+sErh6dOnPXv27NevX+Eva/bu3du7d+/s7GyjBWM4K1asUDqUu7u7
7oshp6SktG3bVs6aNWuWQcMDAAAAAP2SjHXcuHHe3t7+/v7Lli3LvyzJuXPn
PvnkEx8fH8lABw0apMtKF5VDRkbG+vXrx44du3v37qK+d5B2a9SokTIGUrdu
3du3bxcuc+bMmWrVqtnZ2R0/frx0Yfz000/q8RwrK6uvv/66FNcpD7Zt26Ys
0jJ69Oi8vDx5tUaMGNG8eXNPT8++ffvu3bs3Nze3wClSTDJ0ybWvX79e+IJH
jhyRQ9qnqSjkSXl5ecmttbdeWR6WhBoREREUFCQhSY169ux56NAh5UOnvFc0
npWSkhIYGDhq1CiNKx5PnDhx/PjxJY2kvJHHGhkZKS1jbW2tvMY9evQoau2j
wuTPHzklICBAxwWNAQAAAMDkJMXr3r37hAkTbt++PWfOHHNz84EDB2a88umn
n/r4+ISGht69e1dSXUkJa9asqX1WwGtF8kcnJycleezatavG2SZr1qxRqVT1
69cv6ZbBWVlZGzdu9PDwcHFxmTRp0ltvvaXcyN3d/ebNm3qqgVGNHz9e4pcX
bP369fPmzXvzzTdDQkLi4uL++OMPebWsrKwkGc//pUxeXp4UcHR0lKMT8pHr
SMkBAwZI43Tr1k2X1XFzcnL69u0rd5ezCo/nqJX6Yd25c6dHjx5SBbnLiRMn
Hj16tHPnzqZNm0r8V69e9fLyatSoUeEFWJ4/fy59rXbt2lKd/BUcN27cJ598
Ir2yWrVqElKJIilvpI8EBATY2tpKy4wePVqZ1iINJX+q6HgFKSlnvfHGGxX6
0zkAAAAArxVJBnv27KlkuBcvXnRycpI8SHL84cOHDxs2TPnKQ1LCPn36SBIq
WVIl+Ed2fZkxY4Yy+lG1atX9+/drLDNixAgp0KlTpxKttpGUlPT+++9bWloO
GTLkyZMn8suePXskXVVuJ/ct6W7RJievkDJYZGNj8+abbw4ePDj/XBSpY4sW
LSwsLJYtW6b+ccOGDcoCNVqMHTtWxwCmTJki5Vu1aqVlbdXSPaxDhw65urpa
W1svWbIk//SnkydPNm/evHPnzkqtCywyk56eLv1L6VNFkbMq7jLI2dnZS5cu
tbOza9KkiTIX7sGDB97e3krVtOzVVcCxY8fsXindrDAAAAAAMDJJ9wICAn76
6Sflf549e7ZatWqSB1WvXl0yxMePHyu///LLL+qZ/7ps4PI6ePTokbKmh5CU
OSsrq3CZzMxMZYmV/v37675jzr1799q2bWthYTF16lT1hI20tLR33nlHuV2r
Vq2U4ZcKJCoqysXFRYl/wIABhT+WmT59uhzy8vKKj4+X//nw4cMGDRpoH2YR
K1eu1DGAf/3rX1Lezc2tqPkqpXtYhw8flnqZm5vPmjWrwFdmcpHRo0crcdap
U6fAyr3h4eHyiLXXrqRLB5cf0piTJk2ytLSUN1l5oIovvvhCmdZiZ2d37Ngx
XS6lzByTs3788UeDxQsAAAAAenPmzBlJhRISEpT/+cMPPyj/yF6rVq3Lly+r
i125ckWSPvldkl+NK2a8hhYuXKjkjJ6enkVtf5OcnNy6dWsp89FHH+l42ceP
H3fp0kVO6dWr1/Pnz/Mf2rJli5WVlRyqVq1ahfuGa+vWrcrAQrt27dQjePl9
8803clRev++++84QASjXl5z94sWLGguU4mFFR0d7eHjIKX5+fhorFR4erjyy
t99+W/eVSSq6nJycBQsWSMXd3Nzy/zEi7t69q7SYmDNnji5XUy+k/MUXXxgm
XgAAAADQp+Dg4EGDBqlXrpg8ebKS7f7jH/8o8M/6ly5d2rlzp8Z08jV05cqV
2rVrK3MktKwSHB8f/8Ybb0ixiRMn6nJZSVGlpLS/q6vrH3/8UeDonTt36tWr
J1eztLSUFL5MFTC6sWPHSuQWFhabN2/WWGD9+vVKAj5t2jRDBLBt2zZpWC3f
45T0YWVkZPTp00d5HFu2bNFYRlljxHCVKp8OHDhgb28vzVJ4Cyd5wwMDA5UH
reNW2vJclNd+3LhxBggWAAAAAPQpLy9v4MCBGzduVP5nVlZW165dzV5tWHzu
3DnTxlaepaamvvvuu9JQtWvXPnXqlJaSd+7cqVOnjpScO3euLlc+fPiwg4OD
kpgX/oAlMzMzICBAyVIr1kKp0mJ+fn4Sds2aNQsvDKtYsGCBUrW+fftqWbS2
1CT9t7a2lvR/9+7dGguU9GFt27ZN+aTO3d29qMVaR44cafZqAdg9e/aUPvQK
JSkpqU2bNlLr1q1ba/zGbdWqVcqD7tatm8Zv7gpITExU9o3ScWQGAAAAAEzr
xYsX6qw2Pj6+fv36ktE0bdqUuStFyc7OnjRpkrm5ee3atY8cOaK9sHpxkvwL
vRYlMzNTmSPh5OR04cIFjWU+/PBDJUsNCQkpUdgZGRlr166dOnXqpDKbNm1a
WFiYLjmy2rVr12rWrClh+/r6KmssF/bxxx8rVevdu7chRlpOnTplb2+vUqm2
b9+usUCJHlZaWlqnTp2UgIcMGaJxH/CnT58qYw5ubm4adwA3kNjY2ODg4MmT
J5f9Wc+aNSsiIqJEd5fXTNnL+/PPP9dYIDw8XCnw7rvv6vIWPXv2zMfHR8oH
BgaWKBIAAAAAMLnDhw8ru9sMHDjQEKluJZCXl7dq1Spra2sPDw9dpv1cvXpV
Wd9GlykoktIqe0a3b9++wAotasoGOqVYHfTWrVuS72tff1V3TZo0+Z//83/q
fneJVlmk5ZNPPtFYQOqrTHoRQUFBJaqajuR5OTo6yvXDwsI0FijRw/r111/t
7e2V+SpFPYtLly7VqFFDynTp0kXjDuAGEhoaWuxau7or0eOQ5yhvr9mr0cKi
OsixY8eULaUGDBig4zXbtWsn5fv166d7JAAAAABQHsyfP1/JrXTfz+V1Izm1
5NctWrSIjo7WpfyNGzeUxTy//PLLYgsvWbJEaX8tX6989NFHZq/2bflv/+2/
lSDuV1JSUmJiYq6X2c2bN4saCCrKpEmTzF4NEIWGhmosINdUvtwx021KSSmc
OHFCEnyJYefOnRoLlOhhqb91cnd3j4uL01hmw4YNyiItn332WZlCL6G8vLyH
Dx/KK1r2Zx0bG5udna37rS9fvqwMLvn5+RU1eWn37t3KKsE67mL29OlTZaXi
wYMH6x4JAAAAAJhcVlaWssWtg4PD6dOnTR1OeXT48GHJIt9+++379+/reMrd
u3ddXV2lVWfNmqW9ZG5ubt++faWkvb39iRMnNJZRP6P69esXld2XQy9fvlT2
p3ZycoqMjNRYZuvWrcoXJVJGywrDZbFv3z6rV/bu3auxgO4PSx6EslCP6N69
u3on7gKUYTFra+sDBw6UNfoKQr152YwZM4oqExISYvZqbWQd52UlJCQo67SM
HDlSb4ECAAAAgOHdu3dPWaRFkprExERTh1PuXLhwwc3NrWfPnhoX+Xzx4sWm
TZsePHhQ4PeHDx96enpKq06YMEH79dPT0zt27CglJdkvak0PuXWLFi2kTNeu
XTMyMkpXEeOTsJs3b67l1crNzR08eLAycPHWW2+VdMKMjrZv365SqapWrXr8
+HGNBXR/WCkpKb6+vkrARQ3LJCcnt2rVSgrUq1fv7t27ZY2+gli0aJHZq83L
fvjhh6LKTJw4Ucq4uLhcvXpVl2uq9x6aMmWK/iIFAAAAAIM7ePCgjY2N2atl
J1mkpYCYmJgmTZr069fv2bNnGgvcunWrZcuWN27cKPB7amqqv7+/tOqHH36o
/Rbq3XmaNWtW1EjXqVOnHBwczM3NV69eXYpamMrDhw89PDyU6R8aP0W5d++e
u7u72avtkjds2GCgMNatW2emdfMj3R+WejccCwuLotbXjYyMVFbdyb9Iy7Vr
1yr3/JY5c+ZIlW1tbYvaSlt6kDJIJS/Dy5cvdbmm9D5lR/XCe0YDAAAAQHk2
d+5c5d/ov/76a1PHUr48ePCgbdu2AwYMKGrdib9efVgk+WPhDZtyc3OV7YR6
9uypcXua/CXff/99KSnJfkpKisYywcHByhyJmzdvlqIippKcnKxMxSlqBGPb
tm3Kwh3ShlLYQGEsXrxYbtGgQYNHjx5pLKD7w3r+/LkyJmNnZ/frr79qLLNu
3TrlO5rp06erfxw3btycOXPKUotyLiwszNzc3NHR8ezZsxoLKOsSl2hITVlY
WMv23AAAAABQDmVmZnbt2lWywmrVqhWVIr2eJPF/9913hw4dqmWYRcyYMaOo
LWsnT54sDfvmm29q/Owov88++0z5xEbjtj7K50WSvP/zn//My8srUS1MS728
zPDhwwsfzcjIUNY8kQT86NGjhgtjxIgRZq/2dUpLSyuqjI4PS9pfGRarXr36
5cuXCxeQKiuDNubm5ps2bVJ+TExM9PHx+eWXX8pYkfLst99+c3BwsLa23rdv
n8YCyudFJRpS27Nnj5WVleEW8AEAAAAAQ4iLi3vjjTckA/L29i48MeO1lZ6e
PmTIEMm7t2zZsqeQ8PDwHTt2bNiwYdq0aXXr1p0wYcKff/5Z+CLbtm2ztLSs
WbNmsatSSA5epUoVZ2fn//7f/3vho3JHOerl5RUbG6uf6hmRMoLRrVu3wl8P
SQNKHi1NFBwcbLgRJPUslLFjx2oppvvD+vzzz1UqlYODw6lTpwocklqEhIQo
3+LlX1/6wIEDPj4+lXsRJKmdsiaPxqlxDx48aNq0qa2trbSz7tdUtnmSE5OS
kvQXKQAAAAAYlnqRlkGDBlWs+RKGk5WVNWHCBGWXXl2sWbNG43WuXbvm4uJi
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
5cuXtReOioqqV6+ess3KgAED0tLSjBMkypUXL15s3rz5/fffb9asWdOmTceM
GXP37l3lkC4jb4cPH65du/aoUaM07nRcsdy7d09ZpMXLyyshIeHhw4fz58/3
9/eXHzt06PDVV1+lpKRoOb0yNQUAAAAA4K//XKSldevW2hdpuX//vrJop7W1
9YQJExhmeQ3l5eXt3bu3YcOG1apVmz17dlRUVGxs7Ny5c5s1a3b16tVvv/3W
0dFxwIABGRkZRV3h1KlTb7zxxqxZs/7973/n//3QoUO7du0yfA307ODBg8oi
Lf3799+/f7+0w6RJk65cuRIfH//ll1/a29tLt7p586bGc9VNkZmZmf/3CtoU
AAAAAACRlJTUpEmTYhdpycrKCgsLa9CggUqlateu3W+//WbMIFFOyGswe/Zs
a2trNze3/NsZ5+bmLliw4K233pI3RF4keaMSExM1XkHOaty48dKlSwvvYjxq
1KhvvvnGgNEbxvz585Xu4+3t7ePjc/bsWfWhvLy8yZMny6GuXbv+13/9V4ET
pSm8vLwqU1MAAAAAAP7Kt0iLSqVavHhxfD43btw4efLk5s2bx4wZ4+HhUbVq
1e7du2/dulXSbVNHDRPIzs7+7LPPLC0tnZycjh07VuDoo0eP1Osq9+zZU+NL
cvHixRYtWvzwww95eXkFDj158sTPz+/gwYOGit4wMjMzu3XrptRa+sjVq1cL
FPj111/t7e1tbGx27tyZ//fK1xQAAAAAAMXXX3+t5IlWVlYNGjRonI+zs7Oy
8q383y5duqgX4sDr6bvvvrO2tpaXYebMmYXHB8RHH32kvEuff/554aO///57
w4YNfX19J/ynsWPHDh8+vG3btq6urhVu5524uLj69esraxwdP368cIHo6Oha
tWpJgd69e2dnZys/VsqmAAAAAAD89Z+LtEjel5qaWqBAYmJiWFiYkkt6eXmd
OHHCJHHC5P744w9la295Gf7H//gfhQvk5OT06dNHClStWrXwe3L9+nX1jJei
eHt7JyUlGaU2evPLL7/Y2tpK8NKPCn8EJGJiYmrXrq0sgpScnPxX5W0KAAAA
AMBf/7lIS1BQUFHFbt++ray/UadOnYsXLxozQpQHOTk5H374ofKeDB48WOOQ
QkJCQuPGjaVAo0aNHj16VODosGHDtI8tiICAgAILw5Z/c+fOVSZ9rV69WmOB
iIgIJycnKVO3bt07d+78VXmbAgAAAADwV75FWszNzcPCwrSUDA4OVnLALl26
pKenGy1ClAcXLlyoXr26PH1LS8sff/xRY5lff/3Vzs5OyvTr10/jUIyBHDly
5J///OekMps8efIXX3yRkJCg+60zMzO7du0qVZZOJF1JY5ndu3dbWVlJGVdX
V2WkBQAAAABQiakXaalRo0bhxTzzk4RRsmwp6ezsrL0kKp8ZM2Yo74m7u/u9
e/c0llm8eLFSZvny5UYLLDs7u3///sVOEdGRjY3N/v37db+7epEWLy+vwtN4
FPPmzVMurmU/JgAAAABA5ZCbmztw4EAlDfT19U1JSdFS+JtvvlFK2tnZ/frr
r0YLEib3/Plzf39/5ekPHjxYXpvCZXJycnr37q19doeBZGZm3rlz53qZRUdH
JyYmalzptyhHjx6tWrWq1Lpv374ap/FkZ2f36tVLPRnsxYsX+qs3AAAAAKDc
SUpK8vb2VtLATz75RHvhUaNGKSWdnJwiIyONEyHKg+joaBcXF+Xpf/PNNxrL
PHz4sGHDhsrsjtdnKddly5YpzbJw4UKNBWJjY93d3bWXAQAAAABUGmfOnKlW
rZrZq0VafvjhBy0l09LS2rVrpySMtWrViomJMVqQMDn1Yj729va//fabxjLH
jx9XZncEBgZqnPRSKX366adSZWtr671792ossHXrVmWRFkdHR+luRg4PAAAA
AGBkK1euVAZPatSoceXKFS0l4+LilB1+hYeHx8OHD40WJEzuwIED1tbWZq/2
d75//77GMosWLVJejxUrVqh/DA8Pv3XrlpGiNAVlF6FatWpFR0cXPpqbmztk
yBClWd5///1///vfxo8QAAAAAGA0kgYOGDBASQN9fHyePXumpfDJkyeVbWVE
y5Ytk5OTjRYnTC4iIkKZ+9S6dWuN70l2dnaPHj0KrOGTlJTk5+dXuSdyTJ48
WWrdsGHDBw8eFD4aFxfn4eEhBaT1Tpw4YfzwAAAAAADGJIlwkyZNlMGTkSNH
ai+8fv16lUqlFH777bczMjLyH5UsklkulZh6RlOnTp00rukaExNTt25dKSDF
7t69q/z4yy+/tG7dunKv2RISEiK19vT01DjSsnz5cktLS3Nz8xkzZrw+X1QB
AAAAwGtLvfiGZIKhoaHaC8+dO1e9E26vXr3yp43379/38fE5e/asgeOFyaSn
p3fq1KmoDarS0tLef/999Q5Wqampyu/jXjF6sEal7D3k4uJy/fr1Aodu3Lih
bAD9t7/9jTlgAAAAAPA6mD9/vpIdOzo6nj9/Xnvh0NBQ9ZyWQYMG5T+0dOnS
d999t8AsF1Qyu3fvtrW1dXZ2vnr1av7fX7x4MWrUqM6dOyuTXtSjcElJST4+
PocOHTJRvEYi1e/Ro4e1tfX27dvz/56cnNy9e3dpkHbt2mmc7gIAAAAAqAQy
MzOPHj0aFhYWEhIycuRIe3t7ZeTE0tLygw8++Pbbbzdv3nzq1KmcnJzC58bG
xjZo0EApLylkdna28vv58+e9vb2PHz9u3KrA2F68eDFw4ECVSjV69Gh5kZQf
796926NHj8GDB6ekpEybNk2O+vv7p6Wl5eXlLViwoF+/funp6aYN2wikyzg7
O7dr1079nVRcXJw0i4WFRWBg4KNHj0wbHgAAAADAcC5evFijRg0rKys7Ozsn
J6datWq5ubm5urpKnlitWjVbW1tLS0tfX9+ivnTYt2+fi4uLmZmZlN+7d+/T
p083bdrUvHnzrVu3GrkiMIlnz54FBQVVqVLF399/6tSp77//vru7+7Jly5SV
W1JSUoYOHSpHBw4c2LNnz9atW9++fdvUIRvJ+fPnmzVr5uXl9emnn37wwQfS
Qd58803pHeoBSQAAAAAANHrw4MHnn3/epUsXV1dXNze33r17nzx50tRBwaju
3r0bGhq6ZMmSXbt2FdiHKDc3NzIy8ptvvgkLC9O+lVXlk5WVdfHixbVr10rj
yH9onBgGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlAcXL16cNm3au+++
GxAQMHbs2NWrV9+/f9/UQZlGYmLi0qVL+/fv37lz52HDhi1cuDAiIiIvL8/U
ccHg6AVq9AIAAAAAKLWUlJSpU6c2b958zpw5u3btCgkJGTBggK2trZOT07x5
8549e2bqAI0nJyfnxx9/bNas2ccffxwWFrZly5ZJkybVrVvXyspKUs6oqChT
BwhDoReo0QsAAAAAoCxevnz5wQcfDB8+PH8umZeXt3PnTmdnZzMzs+7duz99
+tSEERpTaGhomzZtLl++nP/HW7duvfXWW9IUkmxGRESYKjYYDr0gv6J6gZ+f
H70AAAAAAIq1bt26zp07a8wi58yZo1KpzM3N582bZ/zAjC86Orply5anTp0q
fOj06dOOjo6SZrZv3/61mt7wmqAXqNELAAAAALxW8vLycnJy9HjBrKys7t27
+/n5bdy4MTs7u8DRmJgYV1dXSay8vb0TEhL0eN/y6dtvv5X6fvbZZ0lJSQUO
SeP07t1bmsLGxmbfvn0Fjspzyc3N1W8whR8HDIRekF+pe4F0AVZxAQAAAFCx
3Lt3r1evXtu2bdPjNSVzbNy4saROjo6OZ8+eLXD06dOnbdq0UY6+Dt8LjBo1
yuyV+fPnFz46ffp05eiCBQsKHIqOju7SpcuJEyf0EkZmZubs2bODgoL0cjUU
i16QX6l7wYYNGwIDA1+HwSgAAAAAlcONGzdat249YcKErKwsPV5WskgfHx/J
m6pXrx4ZGVngaEZGRqdOneSonZ3d8ePH9Xjf8mnGjBlSWZVKtWjRosJHFy9e
rOSY06ZNK3x0x44d7u7uu3btKmMM6enpo0ePlody7969Ml5Kd5IdHzt2TDLl
3bt3//HHHxKD0W5dHtAL8it1L8jMzAwKCvLz87t7965RIgUAAACA0ouPj2/Z
smX//v2fP3+u94tfvXp1/vz5hw8fLvz9y6NHjxo1aiRZVe3atWNiYvR+a4PK
y8uLioravn37mjVrpILjx48fOnRoeHi4llOSk5NXrFixdu1aje08YsQIJQNd
t26dxtvJuXXq1Dly5EipY87KypowYYK7u/uVK1dKfZESSU1NnT59up2dnbm5
udn/Y2Fh0aRJk1mzZkmDGCcMk6MXqJWlF8jr1KdPH39//8TERL3VAQAAAAD0
LS0trW/fvs2bN4+Pjzfyrc+dO+fk5CSJ1dtvv22IQR6DSkpK8vb2NstH0sP1
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
NjU1tewhGVP+XqDxcZfbXmBQuvSC2rVrG64XfPPNN3JxJyenixcv6v3iAAAA
AKCj7du3W1hYVKlS5ciRI7qUX716tSTOZq/Wdfnf//t/Fy5w+/btunXrlsM5
/AYdafnll1+U5SkCAwM1fkcTExOj5JilW3m4WPHx8fXq1ZPrjxs3rqgCb7zx
hhSYOHFiGe+Vnp7+7rvvmr3aP2jp0qVFrYmRkJAg74AU69Gjx4sXLwocDQsL
kxdPjjZo0ODRo0dlDMnI8vcCjY+73PYCg9KlF9SpU8dwvWDbtm0qlcrGxkaX
vYoAAAAAwEA2btwouUm1atXOnDlTbOG4uDjlX+olzdy6davGMj///LOShI4Y
MULfwZaJQUda5s6dq3wqIjm4xgIRERFOTk5SRhLwO3fu6D2AxMREZWXR4cOH
aywgN1WSXAm1LDfKy8tbsmSJ1SvBwcFFLc8ixaZMmSINYmdnp3HuU1RUlDIr
xsXFJTo6uiwhGVmF7gUGpexipr0XVK9e3XC94MCBA9bW1paWljrO0AMAAAAA
Q1D2o6lRo8bvv/9ebOFFixZJYWURBsk3NZaZPn26mc7b/urFkydPli5dOnny
5ElajRkzRlL7OnXqjBs3TnvJKVOmSKqYlpamYwCZmZldu3aVWjs4OJw+fVpj
GUn9lNTb1dXVEDnms2fPfHx8lOkEGgtERUW5uLhIAWmrstxo7969jo6OUpc5
c+Zo+QAkOjpamdTRsWNH9fKn+akXhi3FSEtsbGxwcHCxT1wXs2bNkvS/RHcv
US8IDQ0t0cXLIiMjY+3atVOnTi17s0ybNi0sLCwrK0v3u6sXadHeC6ytrQ3X
C06dOmVvby9PZ/v27Xq/OAAAAADoaMWKFUq2K5m49pJPnz5VcnkxZMgQjd+M
SK7XuXNnKeDs7KzL0I1enDx5UpK7YncwKZFatWpp37Y4P/XyFF5eXkV9CKP8
c79o0qRJYmKi/mr/fz1//rxdu3Zy/X79+mkscPXqVWVv5aLmG+ji8uXLUtMq
VaosW7ZMy2ZDIjg4WKmv/IfGAsnJyS1btpQC9erVi4+PL1EYoaGhypdHehEU
FKT7rUvaC65cuVKiqpXFrVu33Nzc9NUs8qImJCTofnfpBe7u7mYm7QXnzp1z
dHSU64eFhen94gAAAACgo7Vr16pUqurVqxe7hmRERISSxWj5aOLmzZvKTAZf
X18Dbaas0ePHj6Ojo69rdebMmcaNG7do0eL8+fPaS964caNEi0gcPXq0atWq
Uuu+fftqHH/Izs7u1auXkmN26dKl8KIlZff06VNlwdvBgwdrLCCV0r5kbrFu
377drFkzeQc2bdqkffciqaAy1FCtWrX8+/zmJ8l4w4YNzV4t2VHSlUzk7g8f
Piz2iesiNja2REuz5u8FW7Zs0Vgmfy949uxZiapWRtLpYmJiyt4sUoXnz5+X
6NbSC+zs7EzbC06cOCE90dzc3EA7fAEAAACALiRrVqlUDg4Op06d0l5S2dfD
7NV8D8nFNJYJDw9XvpEp0TwB4zDcOi3Lli1TWmbhwoUaC0g6r/xzv5YyZZSQ
kKCs0zJy5EiNBe7evevq6ioFZs2aVYrrP3r0qH379vLo9+/fX2xhuZcy1NCm
TZuihhqio6OVr5kGDRpU9l2njSZ/LyhqGlj+XvDnn38aOUJTKQ+9YN++fcoK
Qvm3FAcAAAAAI1NWTrC1tT106JD2kp999pmSJWmZrzJlyhQpYGFhUQ5n7xtu
pOXTTz81e7URT1H53datW5XU29HRUZeVh0tBvfeQPAKNBdT7Dk+YMKGkF5cW
69Wr1xtvvFHU+htHjhz57bff1P/zwoULyvK/ffr0KWpnoqNHj1apUkWlUq1Y
saKk8ZhQ/l5Q1CBSee4FhqPuBfv27dNYIH8vKGqmUxlt375d3qiqVatq3GMa
AAAAAIxDUh5Jii0tLcPDw7WXDAoKUnLMor5PSUtL69ixoxSoWbPm1atXlR9T
U1PLSb5puJGWYcOGKZMcNK7smpubO2TIEKXp3n///X//+9/6vbtCvYv0qlWr
NBaQB+Hv7y8FPvzwwxJdOSMj46OPPvLw8IiMjNRYICcnp1evXuvWrVP/cubM
GWXlnKK2nBazZs1SGu3atWslise08vcCjfNVynkvMBx1L7hx40bhowV6QWZm
piFikJdQafliV50CAAAAAMO5ffu28qHHhg0btJecP3++kihNnz5dYwHJsJR9
hNu0aaNeeePAgQOdOnXSc9ClYriRlsmTJ0utGzZs+ODBg8JH4+LiPDw8lEVL
Tpw4od9bq126dKlGjRpa9reVVLdPnz4SRs+ePbUvZptfVlbW1KlTGzdufPny
5aLKPH78uG3btkeOHFH/EhsbqyzNKu+MxlPS0tKUYR/DJd0Gkr8XaBxpKee9
wHDUveDhw4eFjxqnFyxevFhu0aBBg6KW5AUAAAAAI0hOTm7VqpWkJ59++qn2
kps3bzY3N5eSS5Ys0Vhg/fr1yo4w/fv3V38zMn78+LFjx+o56FIx3EhLSEiI
1NrT01PjSMvy5cstLS2l6WbMmFHUpzRlt2fPHisrKycnp/PnzxdVRsmFpRGk
KXS5pkT7+eefN2/eXD03Q6Nff/1V8uv883mkhX19feVeo0eP1niK8nmRg4OD
nKtLJOVH6XrBuHHjykkvMBzpBSqVSnqBxpEW4/SCkSNHSsu3b99e9y3aAQAA
AEDv8vLylFn9Xbp0efnypZaSkh3XqFGjqCVVJRlXL3c5e/Zs5cfExETJuA8c
OGCQ0EvIcCMtyt5DLi4uhRcKvnHjhrIB9N/+9rcS7WdUUgsWLJC7NG3aNCkp
qagy27Ztk2w3/1ct2q1fv7527dpffvnlnkJ27969c+fOzZs3/+tf/5LEtnnz
5o8fP1afKC/VhAkTlJeq8JQVSbSVb3BGjBiRlZVVuvqaSv5eUHhOS1G9wMfH
p5z0AsNR9h6SXlD4G7r8vUDHUb5SUG90XukHtQAAAACUf6tWrdLyj9FqOTk5
o0eP1rhD682bN319fXv16mVtbS0FQkNDld8lu5TfteT+xmS4kRZpjR49ekjd
t2/fnv/35OTk7t27S4NIAqhxuou+yKNRvgwaMGCAlgkD165dk0TYysqq2DV5
/nq1gY6ynbEuunXrVmBEJSoqys3Nzd7e/tixYwWufOTIEScnp9atW2t/38qn
/L0gIyMj/6EK0QsMR3pBz549pe47duzI/7vReoHyIaSFhUVRu28DAACIgwcP
zps3T+8ZAQDtJJOKj4+PjY0tkEblp+VQRXT69Olq1apJWh0REaG9ZHR0tIeH
h52d3bZt25Rf8vLy9u/f36xZs5CQEMklfXx8JKUKDg7+61WGJdnoypUrDV4B
3RhupEWcOnXK2dlZckl1Qh0XF9ejRw/J+wIDAw29aoTctGnTptLyy5cv11JM
Ki7Vl2ILFizQfsFz584p6+vqSOMsAsm4nZyc2rRpk3+qj1zZ09NTXpiKtRBu
fupe8OOPPyq/KL2gefPm5b8XGJRpe4H8rcnW1lYC0HHKFgAAeA3JX+Tq1asn
f0eVv5SaOhb8f+np6ZcuXTqjMyl879697OxsUweOYjx48GDFihWSENWvX1/Z
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
KCioeEvPpKamtmzZsmHDhrdu3Sr1Gj5RsrKyRowYUbt27WPHjpV3XaDb3bt3
O3XqFBAQYOR6Q/rExcXJrREZGfmsvhCHZ9j+/fs9PDwmTJjAdEMAAJRcTk7O
tWvXrl69auovVskoua5cuWLStCfy8Hnv3r0LFy5IxocPH2q2mzT3YJHk+N7e
3gsWLNBskcBZRYVVqlQ5cuRIKZZVSBn3tGRmZl68eLEYs4lKaCwZU1JSTAoH
5EMiYcjZs2dv3rypGV0vGx88eGBqBQrSTNIiV+369etFpt+0aZPqmbGyspIr
a45nwrLsaXnq7sGsrCxN12XlypV37txpUrU17ty506RJk/79+/8TYlI51ePG
jfP39zdybSaUJbk6ISEhnTt3LmE3iyJfUF5eXps3by75oYAyI48Efn5+ERER
jMgCAKAkJNCOjo5u166dnZ2djY2NxK3yg/ySnTdvnuF3zFNTUyMjI1u3bu3g
4FA3n/wg/5WNhuc/SUpKGjp0qITS9evX75LP19c3KChIwrSpU6c2aNCgtAIQ
CVeHDx/etm3bgvNzfv755yowlJaadcbCsulpuXTp0scff/ziiy9aWlpWqFBB
rt1zzz3XtWtXebY3/Ix09uzZMWPGSBTg7OwsF8Ld3b1KlSrBwcHbtm0zMC+B
nNKNGzfKxapdu7aEij169Gjfvr1kHzFixMGDB2X7wIED//e//xWvLQUnaXn9
9df/+usvw+kPHz78wgsvqG6WwYMHF280RZHKoKfl6b0H5WNWsWJFdclatmxZ
7ImPpJnNmzc3fi3dp5181L/55htmTH0CnT9/Xu67UvzSPnLkyMKFC0vraEAZ
2LRpU2xsLNNJAQBQEgkJCY0aNZJANTAwUEJsFShJ1BMfH9+tWzcJ3CSY1Zlx
y5YtEt1XrVp11qxZmnEUknHOnDkuLi6yS99EBCtWrHB1dZXoteBfDOUX+p49
exo2bCjxmoeHR2mtqPvzzz+7u7tv37694Mavv/5aTd0prTbriqvm7mmRYE0i
AmdnZwnM5Xz+9ttvsiU3N/ePP/6Iiory8fHp1auXziVgHjx4EB4e7ujo2KRJ
E4mUNaMgTp48OWjQIInxu3fvfunSJe2MGRkZgwcPfuGFF1auXJmVlaXZnpmZ
uWDBAicnJzmrwcHBxe5pkehePnLGTNKSl5e3fv16Nzc39RbY8uXLzfenN3P3
tDy996B8BjQ9Y3JPzZ492+TGAwAAAMCzJS4uTsI0CfFGjhyp/dLHqVOn2rdv
7+Xldfbs2YLbJchdsmSJg4ODp6fn0aNHtQ8rG2vXrl25cuXFixcX+pvIsWPH
atSo8d577+mMi6XEWrVqlVZPS1pamoSu77zzTqGyJD61s7NT4eEXX3xR8oL0
MWtPy8OHD99//30bGxtnZ+fY2NhCe3Nzc9etW+fm5tavX7+Cb4U8zh8F0b9/
f7novXv31q6YXC85J/b29t7e3toXd968eU5OTvpGwkdHR8uJLUlPy+7du9Wr
QPLp0jdJizRnx44dXbt2lbZLZUJDQ5OTk4tXnJHM2tNS5D3Yrl27J/YelMSq
s0vIMU+ePFl0gwEAAADg2XXo0CEJjiREat++vfbIh4sXL0oQp2KoGTNmFNy1
adMmR0dHCeLkB30H37hxo4TMkqxQmkGDBhl+Z0cCwNLqafnyyy/r1KmjveDs
vn37JHBWTZswYULJC9LHfD0tEmjPmjXLxsbG2to6IiJCe2qLVatWqbVgnJ2d
C46IkOBaInpLS8uGDRvqez1E0oSFhUlePz+/a9euabZfv369bt26slHfVDAp
KSly2JL0tGhe7KpYsWLXrl2D/6579+7NmzeXFllZWbVr104+WsVeFsQk5utp
KXgP/vvf/y6098m/B6OiotTwMNGjR4/yeqNfqjps2DD5wASVkldffXXUqFHP
/Ny8AAAAAEpXWlpahw4dJD6ys7PbsGGDdoL4+HgVqovhw4drtl+5csXHx0c2
BgYGGohzMzIy1PElsWRRG1NTU1u1alWhQoVCr/MUtG3bNgnnS97TcunSJSla
5+sMp0+f1iyVEhISUsKCDDBfT4tE6FWrVlXTxursMHnnnXdUA+3t7Que7djY
WNlS5IseR48eVceX86OZmnX//v1OTk6+vr4pKSn6MoaFhRW7p0XidInWVbVf
eeWVH3TZvHlzTEyMRMEeHh41a9Z88803zTqnsWKmnha5B19++eWyuQcvX76s
NpbiPZiVlRUUFGTx/0yfPr2IBpuNWk5X0+dTcnIoOWlnzpwprxYBAAAAeBpJ
xC3RlsQUDRs21Bk4nz9/3svLSxJIsnXr1mm2R0REqIimyDkZZs2apWKWqVOn
qtD79u3bfn5+FvlLwer7e/Hx48dLviTHo0eP3n//fYko7969q71XDq4ZKtCt
WzfzrWBopp4WqXBISIiq/8iRI3Wm+frrr9UbUgV7uiS0b9OmjUX+oks6XznR
kPi9ffv2FvlDYvbv36827tq1q1KlShL7f/755/pGL8ybN2/AgAHF62nRTNIi
n5nIyEjDiW/cuNG1a1eL/PVuJk2aZNbBLWbqaVG9XmV2D6otpXgPyqFeeukl
9TmUD5u+OWHKjNz1uaWEeSABAAAAmEpCieDgYBUi9enTR19YIRF6TEzMgQMH
NC+naMI0Cay2bt1quBSJvFQgKeGYiukkPNeU6+vru2LFCu23ltTawSVc6XXv
3r0eHh76Qj+1nqyqRps2bUp3UemCzNTT8scffzz//PNSeWtr6zVr1uhMIydw
3759cvkKxss//vijWibGx8fn5s2bhksJDQ1Vp2jUqFFqy4ULF9RCPzY2Nr17
9969e7d2f0tGRobOOXiNoZmkxchujbNnz8pVVudh2rRp5lsd2Bw9LWV/D6p3
vkrxHpS6qc+hRf4kLYVmkgEAAACAf5SCK7xo/thtjF9++UXNcOLo6Cg/G068
d+9eSaYSy89qo4T/mik01R/r/f39R44cGRcXZ+CdFJOkp6d36tSpffv2Ehof
1CUhIaFp06aaYLMYszFI0Dp37tzRo0ePMmjYsGHVqlWTIHT48OGGU44ZMyYq
KsrIPp8NGzaol0qcnJwkBje+2hMnTlStlnNeZH/IhAkTNIlVT5GE3tOnT9e8
zyJcXFzkVMtHSK6v9myuptJM0lKvXr0iO4JUfTTdQVWqVElMTDSpODVp8Lhx
4wxfGtGkSRM7O7u+ffsWmTI8PPzcuXPGlF7296AmcWndg8eOHZPTrg7y0ksv
GV6N+h9l8uTJ/gDwDyDPWuX9jQsAwBNEQiQ1C4eQAN/4jN9++616baHQPKs6
SQIViEmW1atXa7bHxsZKdgstEsK/+uqrUrfiNUpj+fLlBXsDDPPw8NBMYWG8
hIQEFcCWIldX13/961/GlD5nzhyVpVq1aiat9tKrVy+VMSAg4D//+Y/hxJ99
9pn2KcrKyhoxYoSNjY12/eWafvjhh8UOtwtO0hIcHGzk6xtLly7VzM4xd+5c
k0q8d++ePCWW7kW0srIq8r0npezvQcmo2V4q9+Cvv/6qmVlaPlEZGRnGt6Ig
udYLFy4sg/l2yozcI64A8A/g5eVV3t+4AAA8Qfbs2ePg4KBCpG+++cb4jPPm
zVO5XFxcjh8/bjjxiRMnqlWrptIXmlDiypUroaGhlStX1o71dK5ZbDw5coMG
DaZOnfqHQW+++abxDdHp1q1bp0+fPmXQvn37vL29/fz8Dh48aDjlmTNnjO+j
+Oijj1Tla9aseenSJSNzPXz4UM2PapE/32yRQ1AWLFigEkuo/ttvv2m25+Xl
7d69u127dtbW1tqXr1mzZnJ6jaxSQQXHeEjRRuZau3atphoDBgwwtdCMjIxz
584ZvjRi4MCBcr+sXr26yJTXrl0zso+o7O/BOXPmFNxV8nvw999/1xw8KCio
2AsPyX3k6+sr90jxsgMAAADAk+DAgQOav2hHR0cbn3HRokWaWKzIv6cfOXJE
83LBF198oZ0gMzNz7969M2bM6N69u2YxINWBUOTBdZIgd8yYMfomwi1oypQp
qiyJdn/++edilGUMM83TEhERoSrv6upq/OQY2dnZnTp1UhmNGdOieZdH38iZ
GzdubNiwYezYsWotG83lk6C7GO3dvXu3ivoLvmtWpPnz52vKDQ0NNbVQI5lj
npayvwd1jpwpyT149epVNW+PhXF9d/p89tlnhhdRAgAAAIAnn4TnmokaJMwx
PmNsbKx6c8SYOSI0LxdYW1urlVPy8vIuXbqUlZWlnVg2xsXF+fr6qlq9+eab
JrVI2b9/v4eHx5YtW4pMKbGtKkias379+mKUZQwz9bQsW7ZME2ub9M7FgAED
VEZ/I+Zp+fTTT1XiWrVqqWl1Hz58qO9Nq5SUlIiICNV1YGtrq2+eXgNmzpyp
ivPx8blx44YxWQpOKmtlZbVkyRJTCzWSOXpayv4eVMNUSvEefPDgQceOHVXi
Zs2aFW8m5Fu3bskNUvDtwmLIzMzctGnT4sWLo0qJHGr79u3Z2dklqRUAAACA
f5T09HS12q8ICQkxPuPJkydVeGhvb1/kuieSQK174urqmpSU9Dg/HpeIbNu2
bfqySEQfEBAgWby9vY2vlSLRVteuXd966y1j4qP169drJhsxaUSBSczU03Lo
0CFNn4YEmMZnXLRokZriw5gpZ4cNG6bOT5cuXVRgLrGnXD4DGeXKqnER7777
rvG1evz3SVp69+5t5Lrbp06dcnd3V7lq165dvLeWjGGOnpayvwfVwKTSvQdn
zJihGQNTjLWH8vLypkyZIpe+hANafvzxR7VqVSmqWrWq4ZXQAQAAAKCQ8PBw
FXQXObxBQsLVq1enpqY+zh/VIHG3ikTmz59vuAjNhBKdO3dWkdSNGzd8fHwk
bjWQa9euXRI01ahRw9QWxcTEeHp6qi6dIv3888+aGSok1jO1LCOZqadFrkXL
li1V5T/++GPDic+dO6fpjZGTIxG3iiINT/GhmdTFyspq4cKFauOWLVucnZ3l
AhnIOGrUKMnVvXt3Uxr0t0lajJzYNjc3V9MXZGNjM3PmTJNKNIk5eloel/k9
qN7uKd178Pfff69Zs6ZF/pgZk2abUXbv3l2/fv2Sz9CSk5Ozf//+9evXx5WS
DRs2HD582MgePwAAAABQzp8/7+npKSFS5cqVf/rpJwMpJcRr3LixZiTD5s2b
1Z+PX331VQn69OWSXRLcSbKKFStKFrVRRXlNmjQxMI/KhQsXJMRr0KCBqc3x
9vaeNm2akemPHz+uWfnFfPN7mKmn5XF+t5JaX0lOpoGpdCUCHTBgQFhYmPrv
o0ePhg8frvpPFi1aZOD4EkGr0SlyIZKTk9XGLVu22NnZjRs3zkDGFStWSC4p
xaTmaCZpcXBw2LNnjzFZli9frpkcpmfPnmlpaSaVaBIz9bTIh7Z27dplcw/G
x8erjaV7D+bl5cnnQV2FDh06mHQVEhMTpYiSTH8NAAAAAE+aBQsWqGi9d+/e
+mazTE1NDQgIiIiI0GzJysoKCQmxtLR0cnJKSEjQd/Aff/xRglNJNmjQIE0w
qKI8idZXrlypL+P+/fvlyBJCGt+Q9PT01157zcvLy/j1miWlh4eHJk6XgNH4
4oxnvp4WaXK3bt0s8l8gWrp0qb5kcjLltBw4cECz5eLFi3IJJKPUSl+s/ejR
o/Hjx8u1kwh91apVmu2qp8XT0/PcuXP6SpwyZYpk/PLLL01qjmb2XW9vb03H
jj5SvejoaM36wkFBQXKeTSrOVGbqaXn893tQ3xs0pXIPam7wUr8H5Xo1b95c
fRQXLlxo5K30008/STUMfHSB0pKbm2umb3i5E2NjYwcPHtyhQwf5HfTRRx+t
W7eu2FNDP+2OHDkybty4Ll26dOzYMSwsLCoq6tq1awbSyzd58a7LzZs3586d
26tXr5dffnngwIHTpk1LTEw00yUGAAAoBnlKlMchKysrCZFmzZqlvTqtPKBO
nz5dwqhCU3NIYKtmwmzcuPHVq1e1j3zlypWmTZuqP3OnpKRotqsozyJ/1lOd
yxNLHT755BMJD3fs2GFkKyTQk0dcCScbNWp069YtI3OdPHmyRo0aKlRv06ZN
enq6kRlNYr6elsf5nUV+fn4W+VNkFOxL0ZCz0blz59GjRxe6sr/++qubm5uc
sffee0/nnDYbN26UQFs+FVOmTCmYV/W0WOTPK6Izo5Qonxa59EZOaatkZGTI
A7O6Fj169DD8ysbp06f79u2reifs7e3HjBmj3qkxK/P1tBS8B2fOnPmU3oO/
//57nTp1LPIn6V25cqXhkEcu94QJE9zd3ZcuXWrkithAsW3duvWVV14xvhPe
eElJSZ06dZKDR0VFrV+/XuL9li1byveqr69vXFzcP+rVM/kFN3bs2IYNG376
6afS9sWLF/fp06dChQrOzs7h4eH6Xo386quvgoODTfplIWf1u+++kzM8ePDg
VatWffvtt6NGjZIvE/n+7NWrl8418gAAAMrFw4cPJeqR8FkeVCScLDg2QKIz
icS9vb11rm4jz05vv/22tbV1vXr1tm/fromY5IedO3c2aNBAdg0YMKDQiy0q
ypO40tPTs1GjRvv27Su498GDB3PnzpUYX57ZinxMlWeqL7/88p133tEsYiuH
laAyMjJS36AIqVtiYmJ0dPT48eNVsKnIA2FoaKg89a1bt67IARUmMWtPy+P8
ZXblOV+e7WvUqCGPnTk5OWq7hLpHjx5t06aNPHzqLPrYsWNSMblG8qB78eJF
zfb09PTZs2c/l2/RokWFroLqaalcubKHh0f//v0Lxu+qMm+88YZcDvk8FFlz
OTMbN26MiYmZN29ely5dpCbqWrRu3Vo2rv07ebSWay0fVNmr+lhsbGwkV0JC
Qtn8HdN8PS2PS+ke3LFjR9nfgwWdP39eTfArrRg0aJDOUU9paWkSk0pzmjdv
fujQIeMPDhSPfCvKl5V81ZT6keUT/tJLLxXqLczMzJRbWL6d9HWcPpPkG+zN
N9+U76KCPSryzRwbG+vi4qKGHeocP5mVlSW/eeX3o/GTma9cubJp06by+6vg
RvnykYNIQe7u7vIrviRtAQAAKF0SbXXu3FlivUqVKskTS79+/SR+r169+sCB
A69cuaIvlzxGbtu2LSAgQJ4qJXaTmF3ievlB/tu2bdsffvhB+znz5s2b9evX
l3hcnrskdvby8vL393/33Xc//PDDvn37euWTZ1dNj4E+8oTWvXt3KUjiX6mn
PEvLvxIe2tvbV6hQQd+KsVK6r6+v5JJmOjs7q4w1a9aUp0FHR0fJK2dAwnwT
T54h5u5peZx/KpYtW6ZiZ1dXV7mOciYbN278/PPPz54928AkHhL2zpkzR8Jt
aXjr1q379+8veeWcyKnQFynLNa1SpcqSJUtSUlKGDBkiZ69jx46jRo167733
5FladsnHRufoGm2LFy9WfSZGsrS0lIrVqVOnU6dOn3/+eVJSUlmOFTdrT4ti
4B7UOWRFKcd7UFt6evr8+fPVS3nSEAmIJP6aOnXqvHnzPvroI/moyBVs0KCB
BL+snowysHHjRvlu/+KLL0r9u0K+V/v06fPpp59qH1m+6lu1aiW3gPyKKdSN
+VSQpiUkJMhNKrftJ598MnTo0JCQkIK98drk6+Lll1/W2Zcip0i+uuV3U3h4
uM68qampr732mpwxY0a2nD59+qWXXtq7d6/2LvlylgcANUK1eMvNAwAAmE9y
cvL69esjIyPl0TQ+Pr7QiAUDrl27FhcXt3DhQskrPxh4NVsiLHlM0oT/mZmZ
u3fvluc0CflXrFhx9OjRZ2zEdRn0tCjywH/ixIlvvvlm7ty5y5cvl0dltS5z
kSQSP3bs2Ndffy0Zo6Ojd+3alZGRoS+xBOmHDx/W/Pf69esSy8h1X7Bgwfff
f2+gU+5pVwY9LcozcA+mp6dv2rRp2LBhEj15eXm5urr6+vp26dJlwoQJR44c
+Yf8lR/l7vjx488//3xYWFgx+gyLdObMGTl4v379dHYsyzewWlPMfHOtm8/2
7dvVuvAaNWrUMLCAu3yfBAUFye+4mJgY7VMtGdXaZPXr19fXlyK/OHx8fPr3
71/k/DZffvmlHG3ixInaX4xSdI8ePdQrpVu2bDGioQAAAHiKlVlPC8yqzHpa
AJScROLyrSvRveEZWYtNYnk1JK9ly5ba623t2bNHraTWqlUrs66JZg6PHj26
fv36wYMHJ02aZGNjI61o27atge73GzdueHt7SzInJ6f9+/cX2nv37l01W5Ts
NfBeT1xcnKOjY5FLBw4ZMkR1/kyZMkV77/jx49XeqVOnGj4OAAAAnnb37t3z
9/dv166dgSdVPPk++eSTKlWqFBzPA+CJJbF2hQoV1q5da6bjJyQkqL6UgIAA
7dnUjx07pmYPa9y4sYG11J9wMTExavqsDz74wEAyaWCzZs0kmTRZe/KlzMzM
9u3bW+QvZL979259B8nOzu7Tp4+bm9vx48cNlPXxxx+rN0lnzJihvXfWrFmq
p2XcuHEGWwYAAICnXl5e3vr16xnM/LQ7efLk4sWL6S4Dnnxyt7q7u0uAb6YV
5R7nr4CzYcOGiIiICxcuaO+Nj49XI166du1qjneXysawYcPU3OPr1q0znPLE
iRNTpkzZuXOn9ruBycnJL774ohzHzc3NwCtIj/MnqnJycnrjjTcMvPd6586d
BQsWREdH6xwpFBISovphWDseAAAAAIDSkpOTIxG3nZ1dkf0D5jNt2jQV8k+f
Pr286lBC6enprVu3llZUr1799OnTxT7OgQMHnJ2d5Tjt2rUz/CKVXLjg4OCK
FSsWb6EoObha+6xKlSoHDx4sbn0BAAAAAMDfJCYmSmjv5+dXaHHzMvPnn3/W
q1dPQv4XX3zRwKphT7gzZ864urqWcKqZ3NzcoUOHqllqjen42rBhg52dXefO
nQ0smWcgb4UKFaSswYMHP2Pz6gMAAAAAUI7Gjh0r4fbHH39cXhWYOnWqWpK+
eGMznhDr1q1T0+EOHz682AfZt2+fs7OzlZXVyJEjjVnYPSUlxdfXV7KYOijl
/v37bdu2VRPjPMNL4AEAAAAAUMZu3LhRr149BweHvXv3lksFduzY4ezsXLFi
xSVLluTl5ZVLHUrFe++9Z2FhYW1tvWbNmuIdITk5uUWLFpaWlm+88YaRS+/J
GRswYICU++GHHxpfUE5Ozvjx462srOrWrWt4Ql0AAAAAAGCSdevW2dra1qlT
5/r162Vf+qlTpzw9PR0dHVesWPFUd7Okp6e3atXKwsLCxcUlKSmpGEfIzMzs
27evlZXV4MGDTZqXOCoqytLSsn79+ikpKUZmWbp0qb29va+v78mTJ4tRVQAA
AAAAoE9oaKiFhUXHjh0NrF9jJteuXfP393d3d9+xY0cZF13qTp8+rSZpkRal
pqaamj07O3v06NEVK1acPHmyqRfi119/dXR0dHBw+OWXX4xJHx8fX7VqVbni
cv5NrScAAAAAADAgNTW1RYsWFhYW48aNK0Z2CdUjIiICAwPr1q3bsmXL+fPn
a1Z11168uJAbN24EBAT4+fk9G8Mq1q5dqyZpGTp0aF5e3oEDB0JCQho2bChn
pmfPnps3bzZwQnJyciZOnOji4hITE1OMgT1yJn18fKTohQsXFpl4586dbm5u
7777brHn7AUAAAAAAPqcOnWqevXq1tbW3333nUkZMzMzJ0+e7ODgUK9evW++
+ebKlSuHDx/u0aNH3759k5OT+/fvL7uWLl2qL/utW7c6duzYvn37QsMq5Djz
5s2TgxevOeVoxIgRFhYWVlZW0urw8PBGjRotXrz48uXLv//+e3BwsK2tbWho
qM525ebmTps27fnnn9+6dWvB7dnZ2ZGRkWfPni2yaDlCz549pfQ+ffoY7uDa
u3fvCy+8MGHChP/+978Ft+/YsSMuLs64hgIAAAAAAL3i4+NtbW2rVKly9OhR
43P9+eefgYGBlpaW3bp1u337tma7/CzbX3311YoVK0rgP2zYMJ3Z7969Kxlf
f/117UWlN2/e3KNHj5ycnGK0pRylpaW1bNlSLc3cqFGjfv36FZwyRU6Ln5+f
tbX1vHnzCmV89OjRrFmzfHx8EhMTC+1SY35Onz5tTAXGjBmjVhGSc6svjRTh
7e09d+5c7QWd33333SVLlhhTEAAAAAAAMCAqKkoidHd390uXLhmZJTk5uV27
dpKrVatW2lOwxsfH29vby15LS8tly5ZpZ79//37v3r0ltNc56esHH3wwYsQI
U1tR7k6ePFm9enWLfH369NFu2vjx42WXj4/P1atXNRvz8vIWLFjQvHnzU6dO
aR9z165dssvISW6nT58ux/fw8NC3XvORI0f8/Py+/vpr7beTbt++3aJFi+3b
txtTEAAAAAAAMGDs2LESoRu/8NCDBw/69u0rWZycnHbv3q2dQI5Tt25dSVCl
SpXDhw8X2puWlibZ3dzcQkNDRxYwfPjwIUOGBAUFPffcc4sWLSqFhpWtNWvW
WFtbS6tbt26ts29kyZIlqvdp+fLlakteXt7ixYvlNAYHBxc8FSNGjJCT06dP
H09Pz86dOxs5O646vrOz85EjR7T3Hj9+XC6xv7//yL8LCwt7++23mzdvXrNm
zWdjthwAAAAAAMqX6jZp1KjRrVu3jEkfFRVla2srWd544w3tl1DEhQsX3N3d
db7JkpGRMXDgQEtLSwv97O3tn8bBFWFhYVJ5a2vr1atX60ywbNky1UDNzMNf
ffVVpUqVDJwKIYc1sgJr166VE6vz7J06dUrNl2uASStEAwAAAAAAnfLy8rp3
7y6BdosWLe7fv19k+suXL6vxKra2tmvWrNGZRk38ImlCQkIK7dqwYYMa+GGA
i4tLUlJSKbStDGnWb6pWrZq+kSFTp05VDezZs+ejR4+uX7/u5eVl+FSIyMhI
I+uwdetWOzs7GxubjRs3Ftr11ltvFVlQuazxDQAAAADAMyY7O7tTp04SaHfo
0OHBgwdFpp8xY4YakeLp6Xn58mWdadSEJFZWVjExMaVdX70yMzOjo6PHjh07
qsTGjRu3atUqOTPGl56UlFStWjVptb+/f2pqqs40gwcPVn0aPXr0KHL962LY
u3evg4ODXJ3vv/++1A8OAAAAAACM8fDhw8DAQAn/O3XqVOSQhrt37/r7+6vu
gv79++vsLsjMzHz55ZfV0JTjx4+bp9Y6nD9/3sPDo8iRG0aqV6/ejRs3jC/9
u+++U2N1hgwZojNBWlqaGvQiQkNDS6nRf3PgwAEnJyc5/qpVq8xxfAAAAAAA
UKScnJygoCAJz9u1a5eRkWE4cWJiorOzs4XBV4fOnTunJmnx9/c35nWkUiTF
nT179lSJSRPS0tJMKnrUqFFqGM/KlSt1JpBj1qhRQ/W0aC/0XCp+/vnnSpUq
SR1iY2PNcXwAAAAAAFCkvLy81157TXWM3Lt3z3DiJUuWqFeHXF1dda5K/Dh/
JhY1SYuZRm48gR4+fNihQweL/HV/Dh06pDPNmjVrbGxsVJqDBw+aoxpbtmyx
zbd582ZzHB8AAAAAABhj0KBBFhYWvr6+RS49M3HiRDUqw8B4lTFjxljkL8Hz
z3mH5fbt2w0bNpRW+/j43Lx5UzvBo0eP+vXrp05dy5YtTR0wY6Tvv//e0tKy
UqVKOpfeBgAAAAAAZSM8PNzCwsLLy+vPP/80nDI0NFR1F/Tr109ngvT09ICA
AIv8JXhOnDihNqampj7bvS7Xr1/39PSUVgcFBeXk5GgnuHLlSu3atSWBjY3N
V199ZaZqLF261MLg4kcAAAAAAKAMxMTEWFpaurm5nTt3znDKKVOmqJ6W8ePH
60xw5swZNRtJ06ZN7969qzZu3bq1ffv2//vf/0q53k+MO3fu+Pn5Savfeust
nQnWrl2r3qjy9/eXxGaqxqxZs1SPWXJyspmKAAAAAAAARfrpp58qVqxYoUKF
nTt3Gk65evVqtcLO7NmzdSZYtmyZStCrVy/NykTDhw8PCwt7hntasrOzO3fu
LK1+++23tfdmZmZ26dJF9jo5Of3444/mq0ZISIiU0qZNm/T0dPOVAgAAAAAA
DLt69WqtWrUkSJ8/f77hlIcPH3ZxcZGUEyZM0N574sQJ9Y6MmDRpktp48+bN
Zs2abd26tfTr/SQZPXq0tLpz587abw999dVXtra2NjY2EREReXl5ZqpAWlpa
q1atpA5hYWFmKgIAAAAAABgjKyurU6dOEqQPGjTIcMrc3Fw1VUtgYOCDBw8K
7jp37py/v3/37t3t7OwkgWax461bt8r2IufafdolJSXVqFGjbt26V69eLbg9
MTHR3d3dxsZm/Pjx2dnZ5qvAhQsXatasaW1t/e2335qvFAAAAAAAYIxJkyZZ
WFi0atWqyGVxTp8+7enpWbly5bVr16oteXl5P/zwg6+v7+LFi1NSUpo1ayaH
ioiIeJw/gUlgYGBkZKTZG1De5CRMnjzZ1tZWzmRubq7asn379lq1ajk6Os6Z
M8es3SxCyrK3t3dxcdFMRAwAAAAAAMpLQkKCg4ODu7v7xYsXi0x87NixFi1a
ODo69u7de8yYMa1atfL39//pp5/UqzFHjx719fV1c3MLDQ1t3LjxkCFDsrKy
zN+C8pebmxsVFeXs7NyxY0c5LYGBgXJKe/bseeTIkTIoXU2Hqz3WCAAAAAAA
lL2MjIyAgAAbG5s1a9YYkz43NzcxMTEqKmr+/Pm//PJLoclJ5Gg//PBDZGTk
rl271ACPf4579+7t3LlT2h4XF3f58uWyKTQ7O7tbt25WVlZLly4tmxIBAAAA
AIBhixYtsra27tu37z+tb+QZkJSUVL169Vq1al26dKm86wIAAAAAAP6vP/74
w9PT08PD49y5c+VdF5hm9uzZlpaWI0eONN/aRgAAAAAAwFQzZ860trYODw8v
74rABCkpKQ0bNqxdu/b58+fLuy4AAAAAAOD/u3PnTvPmzevWrXvlypXyrguM
tWjRIltb2zlz5pR3RQAAAAAAQGHx8fGVKlUaN27co0ePyrsuKNrVq1fr16/v
7+9/586d8q4LAAAAAAAoLDs7e+TIkc7OzgkJCeVdFxQhNzd32LBhLi4uXCwA
AAAAAJ5Y9+/fDwoK8vf3T05OLu+6wJB169ZVrVp1+fLl5V0RAAAAAABgyOXL
lxs3btyzZ8+0tLTyrgt0279/v4eHx4QJE/7666/yrgsAAAAAACjC5cuXW7du
/f777+fk5JR3XVDYxYsX/fz8IiIiuDoAAAAAADwtbt++PXPmzGvXrpV3RVDY
pk2bYmNjmbUYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAk+D9ZL12U
    "], {{0, 615}, {1486, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSize->{581.5, Automatic},
  ImageSizeRaw->{1486, 615},
  PlotRange->{{0., 1486.}, {0., 615.}},
  PlotRangePadding->Automatic]], "Input",
 Evaluatable->False],

Cell["Corre\[CCedilla]\[ATilde]o 2 a express\[ATilde]o r/R :", "Text",
 CellChangeTimes->{{3.7659665910338917`*^9, 3.7659666191367497`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
DIcpQdWZINIjl1Ejp6TU8A9Hh4v2fLbTL0mu2cYLY/2FFxxi9jUZqvoCqdM0
9eq0mAghuKMi1b+FCBNQEOOhR3QxTNyE4CXXl3QjjxnN3BZdkVsXX3V6DPml
01yW3FXgJETwYuc/yIsjEIb7pseSbWL1ZVHol+ETrWyHKn5uzEy/fr3c3RqP
u7vngIAl594p9cHh7/Z6MWXbPbwo1p+6OsOA4R2lmQZDIosuw4tXTmq8jJVd
hWezBqj1NGmNoSsuTG5NbQzHnmnSdmnaFrqYTm9Um06LiVDpBlaAEF7Gis7U
5Wu9tjzXNeexSeE+OTDMFkNobQZulVA205CqU4FGiKIpF/y/VnUl3WCE2S9C
WsdlbspcKjpiPDpB2XTN6tSV7rZsI0Nm4zE0NDF3HLzrkVIfXE01Q8NDzLrh
/T6LQ2W/ohaTL2hmx1l9eTppYlCb4GRpNl8ZqVWnhDpROxOUPSZByrh4qT9+
I8xQNRwoJailKbQsdDGd3vEvtem0mAjB5qtEbTBf2DJG22/TfBHk/xrswkCY
34w/8kRBcyTKgCW7tsjd0AuebulJRT5k9CQQpakZ0Lqs1LUcKt6dRd9SnkXf
HVKWNH7uBleqrhlh9I3QUM960WFqw4zJWpSRGi8trIPolaXfBSAqHSWG7rah
ZVx8oiDiOv3wv1J+SXmdFhMhxHZUovjECOrOIstJv0LfIingJbdWurfCzFwX
JCmRK8D9XRg0UygjoeToMBZ1jC494it4HdGXTonqvI5VZYkqaYhP+5sfpQTS
8bw9XoaiW3K/X/tQQ8aR8OLJeaZ1/ElaZbQSUsPzo7xrLvaVekhB9o6mROs0
X9o60zIR0+k/pVlnFXRaTIRwhqsKVVeC2whb3LH8Dqp2SXTLpypnj681zaLf
uluSux7wn51cvuJUw7aw/Kyfya0tYiJ/10q2HhPughkD90uNalZenEKdHg+J
UbYjpbapOZ1FTAPjJJfM4p9ihhqLkvc9wzVVV19zZCjj7nUlpMa7u6Q95eZj
diG/SYkVlZ0dT/WONh93Vq+cKjGdjpZqWup0+pCCOi0uQn3aNamN2mIRunvD
u7YBAkFewqR2TCvvLfekFuIXxQ4x679bQtr155jBpBvIGCA1GbyGmgpVtI3U
OPP/eHcWtxcmvQ0/pnN91qqvUncN0N025krc5eOfjg6nuhehbSae1VhHIX72
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
    "], {{0, 145}, {508, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{202.66666666666595`, Automatic},
  ImageSizeRaw->{508, 145},
  PlotRange->{{0, 508}, {0, 145}}]], "Input",
 Evaluatable->False],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7751228335403333`*^9, 3.775122856063103*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getDelta", "[", 
     RowBox[{"a_", ",", 
      RowBox[{"b_:", "1"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a2", ",", "b2"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"a2", "=", 
        RowBox[{"a", "^", "2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"b2", "=", 
        RowBox[{"b", "^", "2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"a2", "^", "2"}], "-", 
         RowBox[{"a2", " ", "b2"}], "+", 
         RowBox[{"b2", "^", "2"}]}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getOrbitCosineSumRG", "[", 
     RowBox[{"a_", ",", 
      RowBox[{"b_:", "1"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a2", ",", "b2", ",", "a2plusb2", ",", "delta"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"a2", "=", 
        RowBox[{"a", "^", "2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"b2", "=", 
        RowBox[{"b", "^", "2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"a2plusb2", "=", 
        RowBox[{"a2", "+", "b2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"delta", "=", 
        RowBox[{"getDelta", "[", 
         RowBox[{"a", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"a2plusb2", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "delta"}], "-", "a2plusb2"}], ")"}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a2", "-", "b2"}], ")"}], "^", "2"}]}]}]}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ratioInrad2CircumRadRG", "[", 
    RowBox[{"a_", ",", 
     RowBox[{"b_:", "1"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a2", ",", "b2", ",", "delta"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a2", "=", 
       RowBox[{"a", "^", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"b2", "=", 
       RowBox[{"b", "^", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"delta", "=", 
       RowBox[{"getDelta", "[", 
        RowBox[{"a", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"delta", "-", "b2"}], ")"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a2", "-", "delta"}], ")"}], "/", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a2", "-", "b2"}], ")"}], "^", "2"}]}]}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.765965400670499*^9, 3.7659655013643827`*^9}, {
   3.765965536474503*^9, 3.765965575675031*^9}, {3.7659656079556923`*^9, 
   3.7659656091782064`*^9}, {3.765965661972028*^9, 3.7659659005295143`*^9}, {
   3.765966064420515*^9, 3.7659660913948545`*^9}, {3.7659666352097597`*^9, 
   3.7659666353932695`*^9}, 3.76617577688179*^9, {3.7661799867098784`*^9, 
   3.766180015795122*^9}, {3.775122888198134*^9, 3.7751228976129513`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ratioInrad2CircumRadRG0", "[", 
    RowBox[{"a_", ",", 
     RowBox[{"b_:", "1"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a2", ",", "b2", ",", "delta"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a2", "=", 
       RowBox[{"a", "^", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"b2", "=", 
       RowBox[{"b", "^", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"delta", "=", 
       RowBox[{"getDelta", "[", 
        RowBox[{"a", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"2", "b2", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"delta", "-", "b2"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a2", "-", "b2"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"a2", "+", "delta"}], ")"}]}], ")"}]}]}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.765966104209592*^9, 3.765966121155237*^9}, 
   3.7661800158060894`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"deriv2", "[", "a_", "]"}], "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"getOrbitCosineSumRG", "[", 
          RowBox[{"a", ",", "1"}], "]"}], ",", "a"}], "]"}], ",", "a"}], 
      "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{"a", ">", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7751229013988247`*^9, 3.775122986155737*^9}, {
  3.775123270476303*^9, 3.775123270852298*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"4", " ", 
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox["a", "2"], "+", 
      SuperscriptBox["a", "4"]}]]}], "+", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "19"}], "-", 
      RowBox[{"15", " ", 
       SuperscriptBox["a", "8"]}], "+", 
      RowBox[{"28", " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["a", "2"], "+", 
         SuperscriptBox["a", "4"]}]]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["a", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"4", " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["a", "4"]}]]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["a", "6"], " ", 
       RowBox[{"(", 
        RowBox[{"5", "+", 
         RowBox[{"12", " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["a", "4"]}]]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["a", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "26"}], "+", 
         RowBox[{"20", " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["a", "4"]}]]}]}], ")"}]}]}], ")"}]}]}], "\[Equal]",
   "5"}]], "Output",
 CellChangeTimes->{{3.7751229113572073`*^9, 3.7751229877674265`*^9}, 
   3.775123274869553*^9, 3.77523376902752*^9, 3.7756419648579206`*^9, 
   3.775646728450306*^9, 3.7757274040158443`*^9, 3.7759119317227936`*^9, 
   3.7760680827147574`*^9, 3.7769724115860777`*^9, 3.777026508091997*^9, 
   3.7773614304368677`*^9, 3.780253728805167*^9, 3.7802551978338623`*^9, 
   3.780255531971306*^9, 3.7802592682397337`*^9, 3.7858643014164686`*^9, 
   3.787073126698966*^9, 3.7884399683107967`*^9, 3.788983373028208*^9, 
   3.789459077251974*^9, 3.7894591931881037`*^9, 3.7903202153356667`*^9, 
   3.7913250225293655`*^9, 3.7913258974807663`*^9, 3.7914843706795855`*^9, 
   3.792143210708183*^9, 3.792186321460698*^9, 3.7959582041418743`*^9, 
   3.79607049116869*^9, 3.7961155683047624`*^9, 3.796127411246124*^9, 
   3.7962220398987665`*^9, 3.7963014466803064`*^9, 3.796316372145471*^9, 
   3.7964204024248433`*^9, 3.796422106615887*^9, 3.7964224592661138`*^9, 
   3.796568928754857*^9, 3.796568976208704*^9, 3.7966637291084447`*^9, 
   3.7969293553099833`*^9, 3.7969294910373774`*^9, 3.7970987120521235`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"a", "/.", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"deriv2", "[", "a", "]"}], ",", "a"}], "]"}]}], ",", "7"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7751230042463517`*^9, 3.7751230404037094`*^9}, {
  3.7751231293008575`*^9, 3.775123146355339*^9}, {3.7751232811876535`*^9, 
  3.7751232813871202`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.`7."}], ",", "1.`7.", ",", 
   RowBox[{
    RowBox[{"-", "1.06617279584746537003595256281958379088`7."}], " ", 
    "\[ImaginaryI]"}], ",", 
   RowBox[{
   "1.06617279584746537003595256281958379088`7.", " ", "\[ImaginaryI]"}], ",", 
   RowBox[{"-", "0.55996385479255779683497970767804274442`7."}], ",", 
   "0.55996385479255779683497970767804274442`7.", ",", 
   RowBox[{"-", "1.37285105541797195784745732729875280411`7."}], ",", 
   "1.37285105541797195784745732729875280411`7."}], "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAeKoJ3k3KxXeOP546vgKRCvMMPgNopU3q95dD6R7I+fr
liu+cYy0FWqsBNKumW1PFwBpk6dV/38B6U+bY+3cld44Xi+vOM+g8saR73SX
pTSQdmS4emgfkNZLU2Jx1nrjyFi6ZzeITglrfgqibZf17HAF0kklm3u/mbxx
rMu7f8bF/I3j/jh+kweWbxwn5y/rfGn1xlFNcf2Fi9ZvHLPcte6DaIab773K
bN843j9/7XWC/RvHoiTTyEQgfUs4etc6IO3FFpP7weGN481ZRlWsjm8cZx3o
Njf3eOMoEFDJnQekW3bw8rUA6Qvd2dc6gbQhByP3DiCtxnn7wj0gLXa/R+oZ
kA7RC34m4fnGcUpA+G5JIF26K+c5iF5UK5OTCKRbnnEVgehNHhrb+oG0FGNe
pqAX0L4lKVUgukSVVToFSAMAc+eltg==
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"deriv2", "[", "a", "]"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7751233454281855`*^9, 3.7751233462779217`*^9}}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAmLB6sBPlQpvHOP91O6uB9LyrAt0yxXfOG5bL9RYCaRX
3G57ugBIH51Q/f8XkD7pFmfnrvTGMVG58jyDyhvHOa7dltJAOuzI1UP7gHTB
DyUWZ603jssE9+4G0XI3m5+C6GKO3h2uQPo2/5bebyZvHF8LPjjjYv7G8ddP
fpMHlm8c/T4t63xpBeQHbbhw0fqNo8oprfsg2sL5g1eZ7RvHI1HXXyfYv3Gc
xmoWmQik4/qid60D0rP7Y3I/OLxx1Bc1rmJ1fONoJNtnbu7xxrHsUCV3HpBm
d+TjawHSW8RyrnUC6aefGbl3AOmeNbcv3APS3Yp9Us+ANN/G4GcSnm8cv+0K
3y0JpKNdc5+D6ITzMjmJQPpJBHcRiK75o7GtH0ivK87LFPR641jxL6UKRE9v
Z5VOAdIA3p+iQA==
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{
   RowBox[{
    RowBox[{"deriv2", "[", "a", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "All"}], "]"}], "]"}], "-", 
   RowBox[{
    RowBox[{"deriv2", "[", "a", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ")"}]], "Input",
 CellChangeTimes->{{3.775123317245556*^9, 3.775123377132791*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "5"}], "+", 
  RowBox[{"4", " ", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["a", "2"], "+", 
     SuperscriptBox["a", "4"]}]]}], "+", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "19"}], "-", 
     RowBox[{"15", " ", 
      SuperscriptBox["a", "8"]}], "+", 
     RowBox[{"28", " ", 
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox["a", "2"], "+", 
        SuperscriptBox["a", "4"]}]]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["a", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"3", "-", 
        RowBox[{"4", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["a", "4"]}]]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["a", "6"], " ", 
      RowBox[{"(", 
       RowBox[{"5", "+", 
        RowBox[{"12", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["a", "4"]}]]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["a", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "26"}], "+", 
        RowBox[{"20", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["a", "4"]}]]}]}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.775123311544797*^9, 3.775123378807312*^9}, 
   3.77512342482403*^9, 3.775233769222*^9, 3.7756419650235643`*^9, 
   3.7756467286038976`*^9, 3.7757274042312675`*^9, 3.7759119318903465`*^9, 
   3.7760680829680796`*^9, 3.7769724118065124`*^9, 3.77702650837389*^9, 
   3.7773614307121315`*^9, 3.7802537291164513`*^9, 3.7802551979373283`*^9, 
   3.780255532142195*^9, 3.780259268425238*^9, 3.7858643016528654`*^9, 
   3.787073127026124*^9, 3.788439968523239*^9, 3.788983373236885*^9, 
   3.7894590775460396`*^9, 3.7894591933571215`*^9, 3.7903202155281525`*^9, 
   3.7913250227547626`*^9, 3.791325897710123*^9, 3.791484370881047*^9, 
   3.7921432109164386`*^9, 3.792186321617279*^9, 3.7959582045627394`*^9, 
   3.796070491860839*^9, 3.796115568466383*^9, 3.7961274113987155`*^9, 
   3.7962220400887117`*^9, 3.7963014468877525`*^9, 3.7963163725073404`*^9, 
   3.7964204026323204`*^9, 3.796422106760502*^9, 3.796422459436658*^9, 
   3.796568928916957*^9, 3.7965689763695745`*^9, 3.796663729306744*^9, 
   3.7969293554685793`*^9, 3.796929491168998*^9, 3.7970987121887264`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"deriv2", "[", "a", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "All"}], "]"}], "]"}], "-", 
     RowBox[{
      RowBox[{"deriv2", "[", "a", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1.01", ",", "1.5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.77512297201897*^9, 3.7751229794994564`*^9}, {
  3.77512330126196*^9, 3.7751233060923157`*^9}, {3.775123357123991*^9, 
  3.775123357477046*^9}, {3.775123390046051*^9, 3.7751233988136015`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwd1nc8lW8UAHAzoiQrLRkVIRmF5PceSShby4wKCckmmSFEZsoo2SEk3Iuo
a5VZ9swmhMq496LE73n95fP9nPM87znPc973Erh5T9+SjoaGpoOWhgb/yxiB
faKILAANjVJZTkoINuAtYxR7DLdflsDRx1jhXZHfkqK4q+TvfgjDTLQ49tqJ
bbk5RygSk/6PqWC7+Fb+54H7URjT8XXl11vmV/tuG40V7ZiyGz+Om0ZI4l4s
FrI+QOsngTvFic7/KWY63/rs4Anco9uZkuMw5pbyKgPJrbhX35/n2PWwJ1yt
0lvrXUzUX2InHzzMsZPZisfYViZj223dMZaTuNv69h1KwUou3rA+fwq3+W1R
Yir2WOHqv/EtLxTnhadhZqIaMX6yW/XvqrRJx1hYTlVWyG31nyqHZWKja8f0
DOW39vu1KZOFEX7wTVG3HPVkp/RrzLyRmV1aATc7laiWg5WGDN7KVtza/8jT
4Xws3KN99fx/W/std+1/i920/vxkYsspLU5ShRibemEpH2z1w5ge/A6zYApk
jTu7tf7dbecSTGHFI0VaGbdkoJgiAds1ffdU25az6QtYiNj7z9fMWFW2+nts
Vl6KsT8SK/ZXxc1sFm9egU258qsfUtuql8vZqBKrsOQeqtxyVQvZ6ANmdX5z
26o67oY8KwcSVsnQaWSvgbvyu/RqNRZDrv/NqrnVP4dddA12e7IyMGfL4l9c
JWoxjrqsgkkt3DOsii512J0ATzpjXdx5725J1mMqLUV9jHpb+/F+XKvH+Ljn
Cgq33GIl09CAdWQZG2+7hPtwSL1LE6bYpFjy7spW/QS2XV8xHk7XxyZXcWsW
ldK3YovG+eZM13Ar6klvtGJZPw/uNDXA3VPjTdeOse/etGQ2xl3Ge1aiE5s1
lFMs3vJw+vHqTuxT2j2O6yZbz39hca0L8zw5+rHYFLeT9+STbmzyWvUeM3Pc
B4SfHu7DypIDGgmWuMd3qjEMYzHTFa/MrXAre2+0D2N3JcmurLdxG9j3pI9g
gjUWgjesce+5w547ioV/P/9ghy3uXgYjl3HMSsJHr3TLyan+8+PYWXei8E07
3Jc/LVtNYFRm4a7Su7jFSrpvTmLm4szHbzlszc8TS/cpTMFViZ7NEbezGZFu
GuP+6NFftuXZ45FR01iTzo8gNmfcSbarxTPYSeem4XJX3LdXQvfNYUzvw6PY
HyD7zc3OyS5guoWxXIVbvkmbFL6AJWYlxut44Z7lSZ5YwMRjs1MivPH1QQ4F
cYuYrl1d4Q4/3F4XTFiWsUS+9TbmINxsPPynqdgEF/2V7C1ns9dmUjFxVpZ+
tUf4fpHbKZwr2MeVPWOPgnGn3+SmrGATbTKLDI9xc5eXNK1h4gG2u2kjcYvY
TX3+h7ned4pLidzqX1xfewP7eO/+XqUo3H97wns3MF2TYAHfaNy/4nx/b2Ku
p9Kl/sUiV8VIz+yjhY/TA3pr8biFvH9F0gPT8Fh3fAK+//WCfRP0oNs1Yyif
iKxkUKcrxwATVdQb7kl4PlfMxDgDMCdyOFFebs3fyLjqNtDTvBizmIbHR1su
qGyHqU5VypN0fD8jD5HX28HT+JyBaAYenxYSZWWBDBtFvluZeDzG51UPC1BD
JHK7XuO2GYp+sAMSP3HUlObh+fvjEzZ3gYTWriOX85FHJ8uGFNihtos1ZAE3
DW9RjBs7zE8waB97i8zf/vTnb3YAupX+xHd4/f4/QmZ3wyT2bdGbiMf5tlnT
cIHH597L+0qRzSWmNVS5YKd2Vylxy/SPpsO5QNb0i/fvMvz57bs1DnBDyAPS
9hsV+PMHJafP8cDxsnQBlSo8P6wmrpQX3KTs9Fia8Hrqq/cq8AE7Rx6lGLdS
IJaaygc5S3MJps14/pCLDMshGCy2HS9s2XpfzvsOHwJlWVvna63IbU6Zy438
wHbGJi6jC6+3wrwpQRCy9+ee1u5GXrhM0usRhLPrP4ZWcBf2Kd/lFAKXD3eO
avQip2wGWUQKwQDcKV3sx5939pN9xGHIUrHux0Zwn19ryjkKSkeyvWdwOxjq
MS8chX7GGYGYUfx5j01/yArDjvrbNt/H8Py90YmfhcHpwu2/YZPIur+Du3+K
AKZtdbD/B95ftW60iRh0X7O44UxG7nNKl74hCcPfnYp3U5BDvmY6hEvClLM/
YyFuEXcPhjJJoEYm58xTkRtarpxglwKehr5FyzXkeBWn5DopMJDXemiwgcws
f1wNk4FvvLLp/zEvovrK1NbcZWEyS4XyDXdbwN7OAlmYP3lJzXM7sm6D9+4p
WVjXdZgjsiCLhMx8uCIHB0JzZSR3Iis9rxk/LQ/X1/jqBDmQedM1GrkVYKyf
6TvTAXz/bRvehzD4VWXoUYxb/Xhx0h0M1l+/YTU7iLzQIK1cggGPm440kQ+5
TFZCXAPgIsdzXwsB5NXJ07WgBEUXj+6rPorMsC7q4n8WAitUdDylkAMv+T1W
VIHotGfjR6SRXZ4bN9uoQHLojGs7boN/lsYJKlB2LfyFyEm8nv13bVZUYH65
80ePLPL6HXbt0vNwRfxWoIwiXr/8c09VNTj60r98XhX5AOuHmYyL4MPdKBan
hjyTd40weBF6n7An/6eObK2p18+lASE+rx5GXECuY60XeaQBs2YfNCQ18fN6
GvbbThMKBNeGnPWQXwjZ2Gpog2y2A91fY9zPKrSE9SCCv8wl3QTvz3SW9oIe
TMdvTmmYIv+67T9towfxoRHNL64jyzNmqL3Vgz82eU+xG8gfu0bNFfTh4/GZ
ow+tkHt8kviNLoFasZnGdkdkjyo/oeorwNbvapuFuyrmU+7UFejZCAs754S8
pKxwc8dVsLhY1uztjKy/Tf+mwVXwG2PXXHLFz/P70zdLV+H9rhrNb57IZBHj
IEkDkLA7rJ0fiNcrXHqvwwgo0Qr2F4OQm5TzL24YQWWpbsQ07sG5ISNRY9Cg
9/4qEIzMNh2zP8AYrBO7tZ+FItvkNQrKmUBqwyMd3wi8vpeedjmmwHXkh65e
PHJvXjqTiTmMpisX/cX9qmjpmbs55Am+4MxKQF55/UI91hxU+HV6/iQiz763
42w2B9f9BOOMl8hSp39dULwBPbv9rVbS8PnS2ql/5CbEb/B6vczH70vOJZzD
Aiy8nYbUChbBby7UP0naAiTXm7El3Ho82m36FtCw5kOrVojyHeJi3sRawBp5
8tFCEYrb9TSK7bEEo7nC6HNlyF/O0tsesYL9feqvf9Sg/M2s0Uwza7jK4EgM
qUX+o9Mu9tAaoiQTPgnXofyKwOzuDGvYFvpjwvITMhOXZdysNSydfsw/Xo/y
L6VG1bvfgYak5oSBFrzf60EsCTbgYqYd3tyD7H6/PmfFDr5OXXLMn0XrU+xT
hbgd4XKGo9mFOeQVTcMvoo4wcCNS6ztyVZDwjjAlR5gebDp28CeK26c+UbZz
BJrOs+Phv/H5lxNLr3MEadKJS3bkRVCS9xQ7ed8Jnj1nPSW2geKRhgsji85g
ql67mr17CWjKPQcLhdxh5vphEX2OJfBT3HljTckdXFyDrv1FphGifWxy3R0e
p6kRtbiWQOm2/IZTgjsQ15udl3iWoOqU38QYuwfsetf168wBFFdhPNXJcB+q
905Nfj2K4lWE32a0D+DIHHM7+Qza353KRNXxBb638gUxiijfwLhq2NEXeJ2t
wyT/Q/kSF9zHYn1hx9/683YYihu2MJ/q8wUyS/D7CaUlMG+bnmGR8oMaUcaM
jvNoP4+qy7c++IG5Da17oQ6qV6Nlg2vUHxJ/rB2wu7UE7La9Mo+0AyFh290z
eyyWIOVMbOAzi0CIFxo1rEEu3OvhU+oZCHGmn5/xWi3B6FWuQLHXgRDVHsP+
yXoJdKdYnQZpguBRuRgDnz2KrxZkWZUGgWOo6VyrxxK0MfusnpUKBvVj1eUy
Eai+x17dkoaPoaNinlOmbAlUjjE++VQQBcy5tWOmI0vgNBVOCHB7Ch79DjT9
25ehipfxlbBAAjy1aIzxlVqGkpfhB+Xpk2FWctXVzWQZsiMwH8afqbBfN4wn
89EyyJeWG/SyZMJaU6PoZv4yLJyIS3cTzAb24OHInL5lMM/Rmx5JeQNdycnW
vjRkEJlqfhO9VADO22s3woXJ4FKc6bbI9Q40CR++z+qRIUX6+HzMhyKw0RJh
DdUnQ3bwWp9PbRGEfI+RFL5EBr/DHIbWjUVQx2394NZlMhhIs23KdBeBohvH
7sGrZJDUTL+cP18Ex+VuK34xJgOvvli+0P5iYCtnj31rSQb5aEefP67F0F55
S8nlPhkWQri/8wmWADl/9+tDnmRYnStcLhYuAZ5XpJ3NyA7Uq49VjpeAif/+
bwJeZBjVp5EykC+BmfOdrq0+qJ5k0TB17RKgaVV+IxqI8otuJKreLwHJMQGe
sQgylGXQHvZrLoFLHa1e4ZGoXj+HQbe2EnCr9Z6Qi0L1vTfYb91dApWZ/YUR
0aj/P59ZFEZKQN0mWkPxKRnieffWJC6VgPkyjf/zBOSF2p3qvASIYhyd08og
A3v/zzQuMwJsBAdIUZGVxG0K5W4R4C6LsHtyJhmq3vdaXb5NgIu77Ol+Z6Hz
b33wxvMeAej3rvNG5ZDBOlbt5X1fAriJ86p2FJDR99TV8HQyASYLKsI836J+
5ClfllIJcEnKrF2wEJ3XdVuTzEwCSMpmmTi/Q+c9/DKNkkeAWTjpzFVCBvP0
Bx1nKwhgekk35Wo5GRrY2ZL9egjQ0r38fQN5dSTIqL6fAAoGz8Vev0fncy4l
adsQAXhMh4krFWSIEg4Ksp8gQJuV3Zf4j2QI2eCbG/9NABXPkD8DtWQolHfw
u8JEhKJ1MaWAOrSe4+/GIRYiCPi2Bol9QvNirmM1voMIGwE8u70+k6ENc6nX
5iBC6ZMM4YON6P68D1bUHSCCaGrVZbOvqB79o08OSBKBqV1afR1ZxFF0r4I0
ESZpMs8ktKL6L3my6Z4kQrJ5qGBnGzovNhVOS3kicPLrL6h2kqHvl3q8tBIR
FnTqJiaQ1VUT/DmUifDVV7bXrwvVBwpRs+eIEDKy7+P7bnQfl3b+fahGhPXk
iTCJPjLw/xLivqxNhP6vV3ybkas0NOXIOkQgbtQ7Wfej/qM9TofrEcHhep5h
2gA6/9tt79MvE+H7QVdhniHkt5vv7xkRoUZrel8xMnPS/NQXYyKkeBuy6Q6j
8zihkCdkSgSjof8ooSNo/vdgIwQzVN+LbbX/xlB/C2/nnC2I8KbFg5g4ju6T
O3z6iSWqd302R24CzdOzppOvrIigbNIa5TiJ7mcP86vX1kQ4FH42kO07mtdX
n3KS76B+Kord3yCPXrw1Fm6Dznt//PXvU+i+NH2LtO2I8FSDRf/hNJqvqKjT
gneJ4PTA6/yhGXQ/f7Ia5pHFv5mLG/5A9fxp7re6R4TtrJ2HqMjW35Qu8DgQ
YUrhPGfsLHp/DIOTKpFTEo/9aZlDcR/e2p+ORPBuSvp5Zx7V2/4iyMMJ9ftn
59i2n6ifPEvGP8hyon5d6cgNB+hOOzkTgctoqV7pF7LgX54x5MVQi4oh5CjG
rjhVF3Q+5T0Fnr9RvXkseWnIb36op+1ZQP3Y79GlIIfsrYgrQZZ3tPPAXIlg
eeF4qN4iGTzeuu33QVa+/8rrF7L8uZcnSpAP5ex2CFtC9YSefTOKvN4XcEtk
Gb0vSqRAejd0/8zUq5+Q21ztig4gE+WtL94ko/6sEkTFkZ9aD/y3iTs5akIK
2TFeU+oFBc3v1LPO48iXBOisVKmo/l4lPT7kU7mliQvIImEcp/D998jcbU1c
Qfs/C3MaRM9fqxBkOL+K+tM7/C8H+ZtKn/xvZGZ5zQZb5A9fntxNWEPfN6Jt
vQDyq6vn0s79IcOMxvjPZtS//8hqz09kGhrmEzbIt6wLWOP/ovN3FfdZR+d5
fvGWkvI6ej9eP//6EFnYc6/rPHIZOYTzH7qP7fStOc/+ofk9J69kizwXFjis
tIH6yehS+4Lu8wuXAucccuH7oINCyNFHM72AhgLxpxI3c9B8OL81evcD2Tpf
aGnAnghX5NmnYmkpUJi503cTzdPeiw90ZuhQfJ4sI4Tm72+HZGAMPQXYs3vO
CtoSYch4qkyRgQIOS2MELjSvqXf1BKMZKeAxM57UeZsIAdRt185so4CfwoNl
fP4tfSvDviPHr/l7maH341i0MOU0MwVWO+t+lt4kwruSf/XjLBRQOlbc22JC
hNj/itfDWSkgUhB+Xgq9j66fraXkdlCgIaD1foghEU73dSaG7aSg/zMcNtmu
EqH6b87dk+wU0B0xpnuAvgfpgWZpw8i8YmtHXTSJELSTuzdkN9rfcizD7CIR
LhzyUxrioAB/1A3XnapEaFe+yvmImwIGur8maxSJUNzMqi7JQ4EyhjkdLQUi
xF2u9hpA5u9cymiUI4KhlfiUBC8FZl6Mdj1H37uxULry3n0oHnu/KkQYvQ9t
BdeP8aP1isqahWxonplkzjYgjwoouoSzEiHmv1Kh2wIo30sj0piZCCdzSTMZ
gug8yQL3OmiJ4BbQ5sR/BJ1n44NgATIB1k8tPdojivYT3ROrgH4PtOzc7hCR
2XscNJU6CJCc9kfjihjqvz1PTv4rAWAX/e5YcXSf65FOG58I8HCGM4ntBAWq
WocOTZQQ0Hfu1FvGkxRoU81woIsigGF7eXQGctSOepcjYQTIZcJczp1C+18p
HT/9iAAaLqqn/WXRff5ibJT1IkCE1rXadXn0PJY1A1/0+8hJc793+T8K+r+t
44zSGQLwWVZujqlRIGVm9uyR3hJ4Ly5b7a2O+hfalemDfr+vkt8+3HuBApLh
3+wbGksgIiCdUe8iyv9MQ3+8sgQ2Ux+zVmmi+vuY6uRTSmB02GBPsh4FFt51
qOpYloBXVkffaX30/LrYzWzTEuC110zsRqa5LaG9dKUEdP/BwZ2XUb2fG9wv
qZZA9X5hIa+rqP/7NMHaR0sgzYAiYWSM5sGxpX3/RDFg/PcWKMjm2w6+sh4o
hoHpmXfRJqjeUW/RjPZi4HAfPNloivYLC1KZJhVDQFytgrw5qr+vhP5FUjFY
dESr8liien/IBBfrFMNRTYnrHfbofoncc3K5RVBvN2f+4B6qV8AqRS+5CKyf
ZN867ID65eiavxxTBLlfBe+4OaL6aE7Q8HoWgYTeHpd9Luh+bDLpItSLQPYq
zeOb99F9xIeNi4y9AzXzDsJSANp/5v75WJp3MOMXWZYUiJ4fw9j7frEQHqdq
VqgEof6m2p82jhdCy/jnqmeP0P4SjOdf1BWCrmVFs0Iomjeh6ypcwYVgYJMx
9jAC9XNAaVORqRCsXdx2ciag/AJfjZrpfPBQpvtYiOwXd6H976d8CGGPsNdO
ROfjQ05mzMiH13mZraFJKF+7/FGoWT5MTXZF0ySj+yhuJmh35YHFFRmeX2mo
3hf+9W9L3oCZ7AJfYx6KC6x/6dDJAXsGr1arfLTf43sJbcI54NPB5MdQgPKn
mqQSN7Mh2f7QGLxF50WVPhVVkA2DWdrpxHeoP6tKN3qWbDDaky+cQURmqRKZ
ImbB1dU7kr5VaP36n5yY6XSwOXRaULQa1V8ZRv1akg6+qsxc3biLidoN/umQ
/TRrRbQW1WMWaLi4Lx3+Sk587PmE1l+ZNthzMQ1S7phoSTQjS7lkP0pKgdkB
bZuhbrS+5NooF2cibNDymYT0oPXpNbYsLxKA89hPLZleFBf3OHz3cAIouodJ
hfah87kW6OQhEw+RnA2rJ7+h/LtRnxMvPoOTmmeDw0dRvprJ57cmMeDzQSbj
zByKdxkck9sXCLQx7ee+Ifv9I0vy8wZAoNW9Cc95FNfsObPI9RDCdr0RfP8T
WSHVTZ3VD+JvCKbKLyDnLl2z73aHYsbdyacoyCKMbyJeGcOM1q/nJzaR/Xty
X+d6kWwFw+VacS+7aL5d8SH9oh7rtaehAg11Xiks3Y9EeWXJU0CL3DA8GUh9
SKJbGnwqzoBcOeDQmxtMOvisOfrYduTc1JDOrCiS/nB2mBAnsuSia2lVIklA
RZGlCllp8EPTPYsk0kJOa4gJF3LuCYXPzC9IT1ypQXHcVPDLclzQvvSS1LBD
xY+JlwpVWVT3gd+vSNiZEZe5A1Q0b1xy8elpJNF47uvFR9H6wxrWTfLZJDr9
h5LnFKig2xh88Jd0EamH3XBhHnlhvFxuyqaIlNN6ovDZGSq0GRnZc6UXkXS1
hk7MKqL8GzKVnFzFpFfq8ieiAeWPLOelrhaTFOHX8REVKkTZpOTvbSGQ3MSN
xB7oUIE9JW/c+WU5aW6b9NFiCyqEGN3smV2tIkk498bqWVJhJqOWYWhvNclh
xIt2AXd85udZhWoSubR+UPw2qlfTWsXQu5q0YW0am3WHCuYt9d8D6GtI7M0h
NIn2VGD2Xak7yF1Lko0cGfDzoEIfZ6dft9Ynkv+eJ5Ha4VRI+XKtb4W3idQw
6Ir9QW6Ta3z/TqWJxJ52/WfmE1Qf09xMlEMTKVlcUuNfBDovoSl/UkMT6f3Z
zm150eh5pzwPjHo2k8i2e322P0f+OFKjPNVCsq7KtKtLRf3a85tIDLSSdO98
vKBQiuqn09YYP9hJmiC96B1H5l9tDVCV7yS58TywDCtD/ctpRJL0O0lJtXL+
g+VU4F3z0V4I7iRNHXxX5lOJ6hOQeK+13El60JEuXFtNhdVrNeV0X7tIWWdC
GTVbkH2r1nNie0h/d16uNh1D9z0fFZF+c4C0vpv23x/k7JunTdz8Bkgb3AXy
8eNonso+/DNNHiDR8DEXdkyg+iP+TNkODJC2SVQmq02h570I9w649I3Ern3Y
S2qOCmUKHYJvLgySjkaQZRkp6L7rjC1FVIdJ+mxxeXnMKxBvNZZ1+OwYaUIn
b0ZDZgVW2V52F/tMkZrMl+/5aaxA7pSvzXn6WdL/DS4vdg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{1.01, 1.5}, {-0.8128993110724043, 0.08774101072105511}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7751229799303036`*^9, 3.7751229914595547`*^9}, 
   3.775123306680758*^9, 3.7751233583896055`*^9, {3.7751233942089167`*^9, 
   3.775123399212534*^9}, 3.775233769276863*^9, 3.7756419650834036`*^9, 
   3.7756467286507707`*^9, 3.775727404271162*^9, 3.775911931947193*^9, 
   3.776068083096737*^9, 3.776972411870614*^9, 3.7770265085165243`*^9, 
   3.7773614308108673`*^9, 3.780253729190176*^9, 3.7802551979843416`*^9, 
   3.7802555321946025`*^9, 3.7802592684670935`*^9, 3.785864301793462*^9, 
   3.7870731270869617`*^9, 3.7884399685740943`*^9, 3.788983373342605*^9, 
   3.789459077635832*^9, 3.7894591934014635`*^9, 3.7903202156448402`*^9, 
   3.7913250228056264`*^9, 3.7913258977600217`*^9, 3.791484370928919*^9, 
   3.792143211005234*^9, 3.79218632166914*^9, 3.795958204723487*^9, 
   3.796070491905703*^9, 3.796115568512179*^9, 3.796127411441633*^9, 
   3.796222040156343*^9, 3.796301446932632*^9, 3.7963163725611954`*^9, 
   3.7964204026731796`*^9, 3.7964221067984314`*^9, 3.7964224594795427`*^9, 
   3.796568928954357*^9, 3.796568976405529*^9, 3.796663729353956*^9, 
   3.7969293555074787`*^9, 3.7969294912039332`*^9, 3.797098712224663*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getOrbitCosineSumRG", "[", "2.", "]"}]], "Input",
 CellChangeTimes->{{3.7659655767212315`*^9, 3.7659655915605435`*^9}, {
   3.7660498917698092`*^9, 3.766049893233097*^9}, 3.76617577688578*^9, {
   3.766179964518546*^9, 3.76617998671885*^9}}],

Cell[BoxData["1.228390306071099`"], "Output",
 CellChangeTimes->{{3.7659655861849966`*^9, 3.7659655920532255`*^9}, 
   3.765965868916545*^9, 3.765966637921832*^9, {3.766049884793318*^9, 
   3.7660498937737308`*^9}, 3.766131478764289*^9, 3.766132052644431*^9, 
   3.766179956112692*^9, {3.7661799891912193`*^9, 3.766179997545882*^9}, 
   3.766236469364442*^9, 3.7662703197610693`*^9, 3.7663426870545444`*^9, 
   3.7678907726670513`*^9, 3.768120732259181*^9, 3.7681700090654573`*^9, 
   3.768208202924791*^9, 3.768210190902438*^9, 3.7682157630199394`*^9, 
   3.7683189907269697`*^9, 3.7683926469532995`*^9, 3.768406456709228*^9, 
   3.768406842300325*^9, 3.7684077621700745`*^9, 3.768472869692368*^9, 
   3.7685021955298195`*^9, 3.768502803578456*^9, 3.7685484088008146`*^9, 
   3.768660879382831*^9, 3.7686614530176663`*^9, 3.768671926183918*^9, 
   3.7687342814977183`*^9, 3.768735288950761*^9, 3.7687494003488417`*^9, 
   3.7687591266063957`*^9, 3.7687594328437567`*^9, 3.7688562747638736`*^9, 
   3.7690908924463873`*^9, 3.7691015815827465`*^9, 3.7691598628517027`*^9, 
   3.76917589029554*^9, 3.7692676432636795`*^9, 3.769275766119768*^9, 
   3.7693722311128426`*^9, 3.769372504776108*^9, 3.769425695818268*^9, 
   3.7695301537831793`*^9, 3.769608605480047*^9, 3.7698022654403977`*^9, 
   3.7698067480732512`*^9, 3.7699494838827887`*^9, 3.770189623072483*^9, 
   3.770194412695631*^9, 3.7704637439893975`*^9, 3.771612481658566*^9, 
   3.7716698027054086`*^9, 3.7716877880937376`*^9, 3.7716911602831287`*^9, 
   3.771691288916*^9, 3.771834513580758*^9, 3.7720968741091347`*^9, 
   3.772198205399711*^9, 3.77244241133018*^9, 3.7724622172335854`*^9, 
   3.77248164352712*^9, 3.7725320130174975`*^9, 3.7727873758188562`*^9, 
   3.7730743532205486`*^9, 3.7733167582779226`*^9, 3.773328789158617*^9, 
   3.7733456313673363`*^9, 3.774372731622655*^9, 3.774373294030289*^9, 
   3.775233769297798*^9, 3.7756419651043477`*^9, 3.7756467286647325`*^9, 
   3.775727404285124*^9, 3.775911931970131*^9, 3.776068083113695*^9, 
   3.7769724118885694`*^9, 3.7770265085334787`*^9, 3.7773614308348036`*^9, 
   3.780253729207796*^9, 3.7802551980021515`*^9, 3.780255532212161*^9, 
   3.780259268481085*^9, 3.7858643018144107`*^9, 3.7870731271059065`*^9, 
   3.788439968593014*^9, 3.788983373360608*^9, 3.7894590776688414`*^9, 
   3.78945919341543*^9, 3.790320215657805*^9, 3.7913250228226137`*^9, 
   3.7913258977799363`*^9, 3.7914843709428816`*^9, 3.7921432110221834`*^9, 
   3.7921863216841*^9, 3.795958204898911*^9, 3.7960704919196796`*^9, 
   3.796115568529134*^9, 3.796127411459564*^9, 3.796222040181278*^9, 
   3.7963014469505835`*^9, 3.7963163725781507`*^9, 3.796420402690134*^9, 
   3.7964221068103676`*^9, 3.796422459496497*^9, 3.7965689289653873`*^9, 
   3.7965689764181104`*^9, 3.7966637293767414`*^9, 3.7969293555194445`*^9, 
   3.7969294912139096`*^9, 3.797098712237624*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ratioInrad2CircumRadRG", "[", "2.", "]"}]], "Input",
 CellChangeTimes->{{3.7659659176180515`*^9, 3.7659659303041487`*^9}, 
   3.7661800158150578`*^9}],

Cell[BoxData["0.22839030607109928`"], "Output",
 CellChangeTimes->{{3.765965918232407*^9, 3.765965930985326*^9}, 
   3.765966638632902*^9, 3.7661314787752604`*^9, 3.766132052655401*^9, 
   3.766179956863688*^9, 3.766236469373417*^9, 3.766270319777993*^9, 
   3.7663426870655155`*^9, 3.767890772679018*^9, 3.7681207322721148`*^9, 
   3.7681700090854044`*^9, 3.768208202936759*^9, 3.7682101909164*^9, 
   3.7682157630299397`*^9, 3.7683189907469172`*^9, 3.7683926469652667`*^9, 
   3.768406456720232*^9, 3.7684068423132896`*^9, 3.7684077621810355`*^9, 
   3.768472869707328*^9, 3.7685021955397615`*^9, 3.7685028035884295`*^9, 
   3.7685484088117743`*^9, 3.768660879395768*^9, 3.7686614530306325`*^9, 
   3.768671926199876*^9, 3.768734281508686*^9, 3.7687352889617043`*^9, 
   3.7687494003658*^9, 3.7687591266253376`*^9, 3.768759432862705*^9, 
   3.7688562747728505`*^9, 3.769090892470301*^9, 3.769101581612668*^9, 
   3.7691598628626747`*^9, 3.7691758903065405`*^9, 3.769267643278469*^9, 
   3.7692757661307373`*^9, 3.7693722311237893`*^9, 3.7693725047860794`*^9, 
   3.7694256958302364`*^9, 3.7695301537961445`*^9, 3.769608605507945*^9, 
   3.7698022654573536`*^9, 3.7698067480852184`*^9, 3.769949483895752*^9, 
   3.77018962308545*^9, 3.7701944127036095`*^9, 3.7704637440013657`*^9, 
   3.771612481669537*^9, 3.7716698027213645`*^9, 3.7716877881067314`*^9, 
   3.771691160295088*^9, 3.771691288929962*^9, 3.7718345135917244`*^9, 
   3.7720968741201057`*^9, 3.7721982054156675`*^9, 3.772442411340155*^9, 
   3.772462217249543*^9, 3.7724816435380907`*^9, 3.772532013028461*^9, 
   3.77278737583282*^9, 3.773074353238493*^9, 3.7733167582918863`*^9, 
   3.7733287891685843`*^9, 3.773345631390275*^9, 3.7743727316366224`*^9, 
   3.7743732940422573`*^9, 3.7752337693207397`*^9, 3.775641965124298*^9, 
   3.77564672868069*^9, 3.775727404298089*^9, 3.775911931992073*^9, 
   3.776068083130675*^9, 3.776972411909483*^9, 3.777026508548439*^9, 
   3.7773614308617363`*^9, 3.780253729229737*^9, 3.7802551980224113`*^9, 
   3.7802555322278805`*^9, 3.7802592684930243`*^9, 3.785864301842331*^9, 
   3.7870731271258535`*^9, 3.788439968609968*^9, 3.7889833733750334`*^9, 
   3.789459077700432*^9, 3.7894591934333773`*^9, 3.7903202156717677`*^9, 
   3.791325022839568*^9, 3.791325897798915*^9, 3.7914843709578505`*^9, 
   3.7921432110371447`*^9, 3.792186321704047*^9, 3.7959582050235057`*^9, 
   3.7960704919336147`*^9, 3.796115568547668*^9, 3.7961274114785275`*^9, 
   3.79622204020611*^9, 3.7963014469705305`*^9, 3.79631637259311*^9, 
   3.7964204027061014`*^9, 3.7964221068243303`*^9, 3.7964224595124545`*^9, 
   3.7965689289764185`*^9, 3.7965689764292336`*^9, 3.7966637293999796`*^9, 
   3.7969293555313835`*^9, 3.796929491223851*^9, 3.797098712249592*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ratioInrad2CircumRadRG0", "[", "2.", "]"}]], "Input",
 CellChangeTimes->{3.765966131112748*^9, 3.766180015765171*^9}],

Cell[BoxData["0.22839030607109917`"], "Output",
 CellChangeTimes->CompressedData["
1:eJwV0n0s1HEcB/DT2JGoDodz4TCVdtbVdVKpviXll1TM40zO9HBKup5IU4lC
m3RCbbaWh9MDaQqJZicKPUitGfLQckflW9qUUE3v7x+fvfb57PPPZ++PJDYx
aK8Rj8dLQMlbE8vnzKfkQOmUgVns3BsbDHVcwV3mqd4Wy4Pwc0Bl+UXY7zkt
vcb24z+lN8DL4sL4KgEl3eHZDx2tKBkMdW1RwBObo1X+8EPZgJKDs35K0Q44
kt2TdhaG+wwll8KZvbZed1kfw+1nSqR+fczAv3VlL6BvrnqyBx5XHNvUC2mw
KHMcrjX+pna3puRvVPFjpt3n593LoPzOcn+OzW2d2phlwnkVu2FPwfv4UBig
EGuYzhYRfRdgiS5XNQVHM2uK/8FdJv1CkQ0lq2TcVwlUBaseBcKSrNaqIPhp
p749Ddqp7ceYIRMzw0Vwnd7b0Am/L6pe+QtaVshagoWULBWnT4RAhXWqtgjO
dRweWWBLSeizQh8rqI/i6QqZnatut9lTcigpTDsM3V+lJ1CoGzaz+g7rTru4
Mv38VwrkIkomvH2lNdDtdfUtA9woP2iIcsDd7cs0+6BbntriCNywvVibBW24
PyEmYko48ZKTGhja3PGOv4iS+W3aBxaQb/ptzAZe7zieaO5EyeonzbVMl3GP
gfvOlEzdK5MmSSghHsK0U/Cs8SXDTdh59NzsDKztiFu/1YUSx6bUNzw3SqL5
ed4OUJDc/7QJZkwvNt7sgfy55kZm1UCmgRkmu1K/BZ6ob8yZlFNyvkH/ytcL
Odtayz96U2KaXpn9ZQ0lmqRHXW/XUpKT5TnE7DGa5E76UNJ15MNYzAZKRPI1
EUook+xpqII/G5QJPzYij2lFigmhJF9d4uW1jZLpyDPmhyExE1hmwPa+xO5s
WBvON6+H7+4MdQ1CfepV0Qhc4Ro2YuePf3kZ2WgPa8zUo8zBG06HlDDDyvIo
U5MlrcuFvyPVqoUcJUb5+1OYydGmDnHwP59Am+Y=
  "]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plota razao constance : r/R = cosA + cosB + cosC - 1", "Subsection",
 CellChangeTimes->{{3.7660500199920654`*^9, 3.766050045857875*^9}, {
  3.766665000043869*^9, 3.766665028436505*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"getOrbitCosineSum", "[", 
       RowBox[{"a", ",", "0"}], "]"}], "-", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"getOrbitCosineSumRG", "[", "a", "]"}], "-", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ratioInrad2CircumRadRG", "[", "a", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ratioInradiusCircumRadius", "[", 
      RowBox[{"a", ",", "0"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "5"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<A\>\"", ",", "\"\<r/R\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", "Large"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.765915351359926*^9, 3.765915382705081*^9}, {
   3.7659155045062656`*^9, 3.765915518176306*^9}, {3.7659156746743536`*^9, 
   3.7659156943866234`*^9}, {3.7659164419993024`*^9, 3.765916518320692*^9}, {
   3.7659165643439827`*^9, 3.765916606335146*^9}, {3.765965598264613*^9, 
   3.7659656560408907`*^9}, {3.76596587580814*^9, 3.7659658909621043`*^9}, {
   3.7659660081061444`*^9, 3.765966013872719*^9}, 3.765966307273696*^9, 
   3.7659666426088524`*^9, {3.7661757768897696`*^9, 3.7661757768917646`*^9}, {
   3.7661799163593245`*^9, 3.766179916831061*^9}, {3.7661799866909285`*^9, 
   3.766180015776164*^9}, {3.7666649894701385`*^9, 3.7666649952058334`*^9}, {
   3.766665034478345*^9, 3.766665039902837*^9}, {3.7666701699587045`*^9, 
   3.7666701703676047`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
ssL0O7GVbW9L4m9gnfQ4
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
JcwuLDD59q/hODuQ+B+blve/
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"r/R\"", TraditionalForm], None}, {
     FormBox["\"A\"", TraditionalForm], None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{1, 5}, {0., 0.5002871260986286}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7659165208179865`*^9, {3.7659165675294347`*^9, 3.765916606974502*^9}, 
   3.7659656344007435`*^9, 3.765965909442916*^9, 3.765966014791235*^9, 
   3.765966308039647*^9, 3.765966643337904*^9, 3.766050016291357*^9, 
   3.7661314789747267`*^9, 3.766132052856863*^9, 3.7661799190516253`*^9, {
   3.766180000848054*^9, 3.7661800239469213`*^9}, 3.7662364695848846`*^9, 
   3.7662703199914236`*^9, 3.7663426872859263`*^9, {3.7666649711800394`*^9, 
   3.766665040390562*^9}, 3.7666701713789053`*^9, {3.7677330927764263`*^9, 
   3.7677331044412265`*^9}, 3.767890772913391*^9, 3.768120732498521*^9, 
   3.76817000932277*^9, 3.76820820314221*^9, 3.768210191122849*^9, 
   3.768215763234366*^9, 3.768318990974285*^9, 3.7683926472185893`*^9, 
   3.7684064569336276`*^9, 3.7684068425327387`*^9, 3.7684077623934703`*^9, 
   3.7684728699287367`*^9, 3.768502195747219*^9, 3.7685028037938805`*^9, 
   3.768548409024208*^9, 3.7686608796211967`*^9, 3.768661453267*^9, 
   3.768671926441201*^9, 3.7687342817251077`*^9, 3.768735289171176*^9, 
   3.7687494006520023`*^9, 3.768759126845748*^9, 3.7687594330731153`*^9, 
   3.7688562749833155`*^9, 3.7690908926937275`*^9, 3.7691015819158564`*^9, 
   3.769159863079095*^9, 3.769175890507972*^9, 3.769267643629628*^9, 
   3.7692757663291774`*^9, 3.769372231414006*^9, 3.7693725049805593`*^9, 
   3.7694256960416703`*^9, 3.769530154044481*^9, 3.769608605774232*^9, 
   3.7698022658134003`*^9, 3.7698067483056307`*^9, 3.769949484128131*^9, 
   3.7701896233138385`*^9, 3.770194412919033*^9, 3.7704637442147956`*^9, 
   3.7716124818819695`*^9, 3.7716698029397774`*^9, 3.771687788334095*^9, 
   3.771691160529146*^9, 3.771691289294454*^9, 3.7718345138141155`*^9, 
   3.772096874333535*^9, 3.7721982058225794`*^9, 3.772442411567546*^9, 
   3.772462217598981*^9, 3.772481643749525*^9, 3.7725320132409024`*^9, 
   3.7727873760572324`*^9, 3.773074353463862*^9, 3.7733167585372286`*^9, 
   3.773328789377993*^9, 3.7733456316266427`*^9, 3.774372731860049*^9, 
   3.7743732942556868`*^9, 3.7752337695610933`*^9, 3.7756419653826027`*^9, 
   3.77564672894499*^9, 3.77572740451451*^9, 3.775911932316206*^9, 
   3.77606808335305*^9, 3.77697241215338*^9, 3.777026508792514*^9, 
   3.7773614311379924`*^9, 3.7802537294831305`*^9, 3.780255198273502*^9, 
   3.7802555324942493`*^9, 3.7802592687104435`*^9, 3.785864302081691*^9, 
   3.7870731273542185`*^9, 3.788439968837392*^9, 3.7889833736193357`*^9, 
   3.789459077956326*^9, 3.7894591936821394`*^9, 3.7903202159011545`*^9, 
   3.791325023072945*^9, 3.791325898030296*^9, 3.7914843711822414`*^9, 
   3.792143211278979*^9, 3.792186321943408*^9, 3.795958205523241*^9, 
   3.7960704921530275`*^9, 3.796115568787029*^9, 3.796127411722849*^9, 
   3.7962220404650445`*^9, 3.796301447190941*^9, 3.7963163728528566`*^9, 
   3.796420402920518*^9, 3.796422107045767*^9, 3.7964224598675056`*^9, 
   3.7965689292058516`*^9, 3.7965689766496005`*^9, 3.796663729654725*^9, 
   3.7969293557408233`*^9, 3.796929491540006*^9, 
   3.7970987124580145`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
GX1sAM/1HzGmBgSkKBHS5i9YRh+T+hpQiY5U6Df6zWVPkOvoBgTEcsNeoL+1
jD46tbYQv0yP974ptbYkO2lAoBXbHLH/YrWt+qOd+X5d2Lp4lXSp4UgHWLcE
spjalyx4/Wh+jDzgNY1+QyrscEn8ZctoegocH4ZhYdNo03PSR0Zm4usTDUYf
QW1cbQpmcrVl9OsjG4cL4zgoNSDQ4lubAfxXLKN9G95xTiLqNZbRhxN4dEpw
UHdhLuB1AmiCh6cxJbjlVyxWSs/jt7h6H0qXpifW6bjnEBDdn0BuQKDF+53D
avhVy+hXUxtH8xAQJy2jD4vAQ9XbyVwCYgMCEh9CNN9gGX0oteGFjn8ml0Zf
22A0e1mID6bRh6SGGrzsHy2jD64xVJ0AWuHBVbq+1mKo/n4WljsTXf+TBTLf
DfN6Dnt5TaP9+8W45h4Wgq9bRvv7w+Vw+s8NRvOjriEilUYPUisrJdqUgGsZ
tb/tz1lICHLX5YAGKY81AHRA5Mc+sRFzLGGaTjVsXlMscpUWagjX60CsV2kN
IOyfOkooX96gQ7AWt/q/hUfbruzRcN4VHK8SjeGyfWQAQP4WF6dG4frhX3JA
zaoZI3lz7SuCkAjWvuiWl56yoPVOv/ZV0lv1e4I0Q1pAbeXE4hvVkrLA0ioO
Fa8J0mD5HRpcjgoLwb9uCVi2NwNpuPaJwhDcU4lrVDXQLLZF9Ya+7wKqRqVc
w9w4gP9xRbPutT8aGH9vlVOesBJ+c7qhiWsfde/vqUHC17JhVa1AYo3TtDG9
8mU8GhS/u4nX01D4v0mH0qyCRkVW/TU7Gpq9Iyv2lVYJRyVAzR7bzx+h6AdC
VtGQWN+cI7DmPKUbIdX68Hd+ef0MefktOfOQ2voxvMqFpwpvki41KZ7fAVQu
jfybyjEb/TKaGmbjsIDE2XgDApKXh2eebrWMfmlVOP53y+g/qAmaDQhIOZCO
w4W22yyj94x0ndRoTOd+7VmlddPo36c2vqgINZrbLaNfQoLji4okbdAJoBW+
pCrubbQY6oupjS8bQ6i6wwL5RRHkPLQ0ICAJSTDU0mlq2ujfSw017N74lmX0
CyNDzUu/DQjIHrFgqHdZRvtIi5WOxFA3WUbvkXlZfH+1AQEJyAH83ZbRu1dJ
vnS6XDDU+QRZagxxYNhksVUiIJW8YCzfsUB+QWrpIardYxntzwKM9+eIpZsI
PC8ojKOL7M+5105AFBauckoH5Wmjf4faOCUJl5D3WUb/NoHHwrefvdTVTAR2
i3QPBZt4l9v9dgIS5ULS+4Bl9G+lsgsFjtIhfsFcn0tjynuGcEy/e1rPoQnL
Fsv47sb3LZD9YYmyBzsW+YMWArtEBPLnK/7DQmDnGgIPWQj8JhGQp7ViAg/n
BLbetrDq26X+IQt5essFUgH4gxzgFtkZ1ue929rdZcpzk+MD0oePH8mRbpXt
YcpLtzW08yKd+2MK5DGwR3Wgg2wPC884Ko8+psjoOg6PooiPxQg16ykd3uA7
xfq/X4YqTWPP3fyLx0ef2fwU/IuPscwPMpIgUDrAcutsIiO/aZ/w6AM39Dat
2wfhyNGjLT5aLCTKP8xhNauL1CHD4hqpduQdj9z9TS6u8fHSEKnCU4sDHqu5
Y1PtteY//cRj0oafAx6hyXZleKO2ZvD4OeALpEY5LDR4X/Z0sFhMQ84a7vNe
bE1FOv/GL5DqFPG2rrpXXmtliHoQtrdIlR5V1M7vqGNkjbZjmWwAQlNezepa
8lKm6GBPO8emG736ve3ZbkXWzGWOgnAwziFZxd9Nr37adi8vNQCZ6a+M3Wsb
jZ0xr7md6Qra/r7i7Yqc8VjsityAevQR3imUtOo+Do96FrP+H8Yr8wA=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"ratioInrad2CircumRadRG", "[", 
     RowBox[{"a", ",", "b"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "1", ",", "3"}], "}"}]}], "]"}], "//", 
  "Quiet"}]], "Input",
 CellChangeTimes->{{3.766180116951231*^9, 3.766180244415287*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
Psbrj87wgusrHLzsa3SGDx0XlM29cYTqzP8xH4LO8OEyfkdnOONNdIYzPkJn
+Ejpz6MznP4nOsNLSH8JneG07+gMpz1CZ7i32E90hlPf0RlO+UQvOHpGPA+e
2N12DI8Y/Slef3SGV/nveY62t4zOnGd+CZ3hzIegM5zxOzrDP8h4E53hPWR8
hM5w+vPoDKf/ic5wN+kvobNeV9p3dIbTHqEz/JHYT3SGU9+13gqnfKIjHD3T
1a19JdJ2DM8453O8/lkDHh3a6PzeUizZykITbL9fmx35bucx+eZFeXt8tKzu
d6a/l41bezdKbW9fOOY8fPC0A3V8bMfTjvbdu9H2e/WBU3z+7W51nGb1/qzp
2/2xoJe9nuqxnG8r3K/aJN/XtuNHHlVr+th+h15wjc/nyIxSWZycvmr6m6mK
57Q/L8ech5d+27RDZttxnYIpr76O+2Jx8m8Tn0/2mtFrnN2/afol36pWcu5r
8uc8fPaGfM8r2Y7XBgX9ldn2u3Pt0Ph8hr73KeXuFaPpT4T2KXBmosmf88eF
v2j9Zlh72/F3z00PK9l+E6fyjM8nYNOyox7W75reumTxgIqLTP6cDxXeMO3J
xBNsxx0sQwe2t/3WDFsen0/OXa6F3L2c3Ej/tkz5Ac/Wm/w5/0Z4i3sXGzS3
HYeNWvfdYvt1a7U1Pp/6KVb0sXonciP99px50t/YbfLn/DbhE6u5zH1kO05z
K2W9ANvvjgYH4vMZ3iXxXg9rYk3/R5k6Z+YeMflzHr5v0aJbw23H1UsPnNXd
9lvq9xPx+Ww83icyLi6Jpq899Jjf1jMmf87DI95E50rllNStz4w7/pE23t7v
fHw+t7L51/ByTqbpS8fFHR122eTPeXgG925dVtiO/3tQK+dM22+qwlfj80k8
sMpkZ/fkmr5aa78sVW+Y/DlfVXjNDVe3uNiOL9fY/Hdu26//NN/4fMpdXePj
7ZFC049ccb1UkQCTP+fh/WPLvTltO45ckm7TLtvvu0K34vOhPmIvD0W/HWkf
72AnOd8r6Otmez+cY87D+X/Okw/1lPNXChZpYe9/wsln044iQ+39TO6bfF60
WTWr8KAzajfhn5xG9drU+7T+P/mRD9eDc13sPLz0m+4We/+KY51nFo59gDfp
MjGzvT+g88hy/nfhtBfwa97B8e0Xx5y/Lhy7ofOoASNy2u0tx5yH0+7AR1w6
leX3uyYfzsOxJ9r/ano65rjV5MN5uM67CW8/pfGUU+EmH863FY6dgZfYPCld
j/smH87DaQfhw2cEbDv50OTDeTj2B/7wce1bgY9NPpyH057Ce/zR7PvepyYf
zsOxS/DjCwtEd3hu8uE8nHYZXqPC1WbhL0w+nIdjr3Rcf7Dq2GqvTD6cPyac
9h1+5N8Kvw5/bfLhPBw7Bi8+w6fg4jcmH87D6SfAN20+8Hj5W5MP5zcKx77B
j18Y08DzncmH8yeE09+Ap+ty4VyP9yYfzsOxe/DHFw6OKfPB5MN5OP0WeIld
Q5o//2Dy0e82wrGH8PVZSj1a9NHkw3k4/R/4xbElV7t+Mvlw/pJw7BLnm31I
Ej9fhx0jfZ9/B5+59MnYT84/F/uGvYJXrDvp5POAE3o/8N6SD9fj+k3luhyT
ftiyJD3+/Gzuh/OOnOtzXe6T9NjbUuNzBr/2fm9x2+9b38f2u/PXG/H9PU/X
pz0yO32yrO65OvB13EfLkNoZ4tuXZ08PfajkHmmJyeXRObPt9/fctX70E1ZO
Gd/ey9Yf863+upLtd9KEzj/a66Yt0k6w2vpXk1OPbm/7vT5u9I92M1nB/zY6
x1qyVwlOPsH2u2vV3B/zb0ffFfbxiLMMfbVl4Ubbr8uk1fE8wrtT8HCrk1uf
ptXnd7f9LmywI56ny3Q5XyqnxG5Lt68PioxL5FZt/6F4XrNf6Z4rnJO4XU6a
Ou9M2+/uJqfieb+Li3e6uCd1+/z3oG65bb/Nx1+M5yvyxX447ZHMrfDRu9t2
2X6rel2L5z6juldt7pXcrUUWt3cW22/sKb94/iXw2vhH3incJnpsqRRg+7WW
vR3PY5z3ebX3emfJ2Ka3U2Xb75eW6+L19M75aZ7Vpu+0U7Pd3W28fukpGez9
JY45D380uH2Qh/WD8mFT+p2194s45jy8XfD4fBNsxwPSVp7T3va7p+z7+Otm
vXEuj5PtPZLe9/J+f3u/iGPO3xRep2iJbl7On5WvnOB/zN7/4Zjzq4QfmfPH
zo224+tnkuWaYPvNt6hYvA6DJy7Y5mwrH6TvcmBSVnv/h2POw9dav7719vii
vPO+Hi72fg7HnIdnr5O3qo/tuMSwW5s32n595jWNv65fxc6V3G3lj/Td/HJM
7x5k8ud8V+Hf510eY/WOUv70SbEPmUNMPpx/Lnxo5MuLr23HM4pvcPWx/Tbt
OCD+uqVflD7vYSvfpN+9NfEZ9zCTP+fhHeouSeXkFKN8aYkif+W5Z/Lh/BLh
AduPNc9sO34SNujM67hoy+2SU+OvO3t17J9etvpD+q5FnrVY/sDkz/kuwo99
7b7E2f278udN2vXze2Ty4fwL4WU7zYyoZDuu6+XWJLPtN2mSpfHXfd78eqi3
rX6SfrrPuCQ+T0z+nIfPDvpvgbO7kxu8QY7o/bOfmXw4D7+cqpS3i+242YYU
Hrltv9Zqm37Yk8k3DnrY6j/p23x4uqrgC5M/51sLP1Y20V1vj0TKj6yvfWr+
S5MP548K/9xtYcxp2/H42AEHdtl+h53a+2NcFlYhOs5mX0jvObB9ntBXJn/O
zxL+wrP3r+5eiZWnalErOuUbkw/n4YVPfavT3Ha8p3VQlMX2e7n8sR92ssrK
2l42+0X6Lh39onO9NflzHp7zsW93q3cS5T7DHlXJ9s7kw3l4i5xdZz6yHYft
q+kWYPudmv5c/HXLeiWZ4Wyzj6Tvlsqn47d3Jn/OwxtaKu/wsCZVnu36jCPX
35t8OA+fPNjHd7jtOF3aTdO6235PbL0Sf93Or/re9LbZX9Lva3W54dwPJn/O
w4f/t/p9XFwy5SWzvb7m9tHkw3n4vutls6dySu5WvWfaG5E23rvOzfjrzq0f
kNXdZt9J36iXy+XHH03+nIdv/pisipdzCuWF3wbMG/fJ5MN5+P0iyzqssB33
OzMky0zbb0zawB/z7Wurtrfa2g/SF4gq0jztZ5M/5+HYf9r3bQXqjaxez/RD
aE/m5C/R3N5fZTzF/x1oOjm+n8kx/+c5bX58f5VjzsO5HvlffDkrvv/MMf83
W65L+8L1x7TIVMjeX2Vcxvn+VT7H90s55ryHcMZltD+FJkTH9zM5Jv0T3yPx
/VWOOf9UOO0O+YWNfRrf/2Qcx/ntQ9fH9zM55vwO4YzjaJc2TW8R32/kmPRr
/mwd3//kmPNw2iPy81u3NL4fyLhP26v8ReL7dRxz3lc44z7aq+trs32vG2na
L9KvHvf71JufTf6ch9NOkd+XS2kWHYg040TOr/TsHZnri0nP+RXCGSfSjg34
NntS0BfTrpF+7P5rZ//9YvLnPJz2i/wm1znqXfKrGVdyPm7DFd9/v5r0nP8u
nHEl7duEtK5u6aNMe0f6BbNyVricIH/OzxdOu0Z+7zK9bNAsyoxDOf/kRoul
86NMes4/Fs44lHav455juZN9M+0g6ecfXzbkeoL8OQ+nvSO/qGMVfap9M+NW
zo/JtnCvxzeTnvNwxq20h3VyNn1+7ZtpH0lf+MTzRKsT5M/5IsJpB8kv7Vq3
eV++mXEu56PyfcxZINqk5zyccS7tZPvpSf4eEG3aTdLXybNza8Nokz/n4bSP
5OcTVugvr2gzLub8K6/EOw8mSM95OONi2s9DZ98HfIo27SnpTyz3Gnk7Qf6c
Py6cdpP8Rvdf4Jc5xoyjOe9fr/3UMjEmPecDhDOOpl0df7psxx4xpp0l/b0/
A5I0TpA/5+8Lpz0lv/nRk9aNizHjbs5nz3AmYkmC9JzPIZxxN+1t6qxvJ1yI
Me0v6ZPfiii8O0H+nIfTzpJfvtsFYoNjzLiY80MSP9r0JkF6zg8Wzviadjh8
XuUt2WJNu0z6hSueTU0ca/LnPJz2V79/9aqWpVisGV9zvk7w5YCqCdJzHq7f
Z6UdL5q8lkf7WNPuk/73bqXfNEqQj667CSseP69FOv6P9LS/tM+0y7SnnL9X
4f20r0Hh2q7TLu+X/gD/z3n6FVyPfBbW2Dwj4FfzfZPrjJX2nXaXdpb2mmPa
1VBpf2kXaQc3S3vKMe2er7SPOk6Tdor2jmPapc/SftGu0I7QHnFMu0H7gt3H
ztNecIxdx/5jl7HD2HOOsbtfxT5jN7GT2FuOsYvYT+wadgx7qOtyxG5h37A7
2BnsFcfYFewPdkHXOYg90e+MUu8XiH2g3lJPqe8cUy/zSv2lXlGPqI+UK84X
G/zdt26g4aSvNaLluRxPTTnnvJeUQ9JRbw5JPdXvxMKpR/w/54tJfaQc048N
Hv/piX2dMNflfITUI9LBSU895bm6Z3l1feQTowPX53l1XYfwmvK8pCc/8iEd
9fW/DZ1WVCt+Qu+T56r6IPmn9ANPaj3lfLd5xzOka2b0gZNe1+fIdZY75E9+
5EP/Fj18Ep1dbl+nQX2H92tw7w/7OhnsA3bG/Z+n4Y++hms+6seRpPZ3+7oO
7AU6XzzlOqtjNtOPpb//LfRWoP37OHYD7vzPaU/7+gTsDNe/s2B6rTEuJh/u
d5X34Dz27+nYHa7fIuzQ2Bx1TH+V+y187EHbovPNOmd4lWfjNvaYGq72iut3
L50p5FYLkw/3m/XD2hRTN4er/eL67ff+s6diN9Mv5X7/bFQ06y8fjP8F3DXi
bl37ujvsHtfvcMy5/NqBJh/ud6Nv1o4ZwsLVDnL9ElHOX3qMMf1P7ndBmsOH
Y2uZda3wqVVGld/yMVztJ9fvmKjA8SvTTD7ql+N/rZJ9fRT2lOt7nj34Knae
6Wdyv9V2ZfraZYxZzwlfbP1twrZfEswjyfVbZ7vWotwykw/3+756zr3Hipv+
MNcftv+/rNPXJOhPyv0Wadk0U4HdZh0jvNyGa1/s61uw51y/c0+nank3m3y4
3wdTkg6zt6fYd67fp8OAJ2l3mn4j95vnz6yT7HYGOw/fWe1KWnu9o13g+jMu
HKzdb5/Jh/tNV63eI7tdop3g+qkaZq3QyNv0D7nfDtvvhNjrI+0FfNnMbXO8
epj2hevfrzHp25FjJh/ud3T911GTBph+LNcv7Z121YVTph/I/WY9cWm6vV7T
7sBzfOhcw+4vQDvF9T0upfpj5DmTD/e7rdiV4lXGmf4q1++7Ne/hsIumv8f9
zq23qrrdDtB+wXtPnh5SaKpp73Qea+G7yrFXTD7c780ax7LZ19XT/nH9v4Jm
/BJ+zbQL3O/p/RX/tdsT7D98u+fxbf0XGPvP9XMFex2ZdtPkw/265D106OES
02/k+un7dtoa42fmc7BL2Gc4dq+/2GfsL+mrih3G/mIPL4gdxs5if7DDcOwb
dpjrkX6l2Fvyxe5hb7kP7Az2Fo4dw95yPdJjV8kX+9ZB7Cr3gT3BrsLVz0Xs
KtcjPfZT8xU7VlLsJ/eh43qxn3DsEvaT65EeO0m+2KtZYie5D+xDdbGTcOwP
dpLrkR57qN8FxC5hD7kP7AD2EK7r+cUecj3SY/fU3or9we5xH9R37B4ce7JD
7B7XIz32jXx1Xl3sG/dBvca+wbEb/4l943qkHyV2jHyxJ9gx7oP6ix3TeQGx
DznFjnE90mOvyBe7gb3iPrA388RewbEDvcRecT3S+4pdIl/sQ2uxS9wHduWM
2CU49gm7xPVIX0rsD/lih7A/9LfoP26zngiptT5M+0PYlV/G/xts91eiv4I9
6Nn6UoG0Q0x/hnr8bPz5KuMOmf4G9a/a85Yp7OsPaY+pN3MnZrn0IWOC7z5S
3nttPvvMuZxpTymnj3euzG5fN0h7Q/kq+1eXJ1c7m/aIcnGtZt2z+wab9oL3
uenYxPz29X7Yc95D8SJtU82Ya+bh0amR9Ifh6OAzvvLXvg9N/xn9gqQfC0ef
ZnU+r3NpZPq96Er/E45uuUqMf2n3lyGdfoeUfqP2I0XPysHZz+/1M++F90B/
D47Ou8aUj4yONe+L90M/DY7+B6YN72Ff/0k63hv9K/3+KO+l5P1nFSJqmffL
+6RfBOd9pX6a8fmsv8x75z0/kP4MnPfYq3j6ivb1n6Tj/Q+Qfghcv1N55X89
c7QpJ5QLd+k/wKk3jQ8ls/SYYcqPjpul3YdTv2bVC/ewr/+kHWTclmjiqPv2
9fOUG+rdkJyuRf+uGGq+B0j73+j7ND/7OmQ47f+nI9fTPexp1fJEPS0W1XxU
g5eh2n7Rzldav/Fz4XEhymnnZ7yK+/NYiVAtZ9zX5UJHvo4bEqbtFM8xcdS3
wTlbWpXTnset+TrVvv6c8sd9hTbJ6xdsDdP2iOeY+/beHLu/Bpx2+/Xg2etu
VQvTcsl9Ta7VqWYvF9Pu8By33nR9cn96qHLa58uVdhfPtSJMyyv3Va35klK1
B5j2Rcdtkyb7OH8NVU47vKRP3TEdnodpOea+9jotn7V6fbi2I/od4czZmXa/
Zjjt7ee/miw+Xzxc2ynu60zyb09H3Qg388zyHC2mDPW322E47erExyVy2vtj
lHvuy7rwb4+od+HaLvAcLV92eGe3S3Daz8XXhmbsNjtc2x3uyztm/7/70ieY
15XnSDrxSoDd/sNpJye7X562cH+4ti/c17WBi/7wK2r6wzxHgVGuK+12T+dL
pT0ssmV0cNXAcDO/Sj0tubdG9ZoRltpv5xRwcjLfK58G3qt8IjLCkkXsKrx2
mcN//dY1wvJ4+5ccTk4mHsXQuw273NkbZjks5Y/6+Pj9t6vWWncsM3t2Se/k
9E35jAP5/NLuvqWcfLZXbbS/8Me7lvZSnjQeSN5JMXO6BCgn/VLnsE9JFwRZ
XApeS+rk9F3Tb02Sft+Wjn6WuB9/yqeLPyzpyadpz50P27e9penhi8VP9vmA
5bFxcSYOyauDWb5mr39VOemXZ6v9zrrMT+0n6ccNrF6v/oHLykkfne+Bb+df
blqO/+77NS7OxC3Zt6V7hXbDLionfeKrJycP6nhNyy3pW4c1uhI3/rxy0mep
vKJPw49XLHNKJP0UF2finFj/KL9u+ZWzykmfrsCwT9f9Lml5Uz0bH7tboP4Z
5aRflSXyzrVXFyydUlZ9Gxdn4qJsubJ5+Jvwk8pJH3cia8QvlvNa3rCTcXd2
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
cq83+WRziP+m7b7wxcLJZ9V/OcdY46IslcYNir8f+Abp93bOtOrg+jeG06/7
2LdB2izjDU905Uf/cN7jpekTFzPj0xfSj+p6yOXC5Sjz3fMF9nLerKurgk3/
KpG0v2fONQvcOdv0K8pJO3W5S5XZc78Y3knsedJhvkk73TXrDEu3qrfrte23
kMRPg/Obcm3jfN/jzLx6R8nneuDcI9suGf5S2pf1PepWXRdqeI4LEdtf234P
9PSJzx+eW+xbHZeGTepHGX5c7M+VJTuXzLpuuLvYgV2rF8+O3GL6CSelvkTO
brbOXn6wD6yDGrW7bmb79wLKM9/xS7yYOMz+/YV6y7xH6kdZb1x6cEr5b5Kf
395JgcsOntP8WR/1Yfmethemm/xZ7xTQOlXNMsNNuXKMZwh3jCdGvWC907vj
NXLO8TDlBz7PZYXL7qkmH8d4YloOhb+f1eNK5eemvLEOavbekOaWvQnqi4wH
r2z22n/8gknv6H9N+YRn/D3JCquvSa/xShu73Ft32KRnvdOj4KsV978134Mc
44CRnu9cT35rvuvRbpPeMd6X9ieFl/saXPzUB8Ppx3o3GVwgItSMX3Q9r3Xq
+wWBpr5Q/jun7Fd6XYJyCN+co9yJ9/6G08+pfi93htZfTPlk/VT5xAVdM91L
UF+kn+AfWL/O9Wfm+wLtcvmLgbX3vjT50J5+ylB2W+x9U847y/8FSPkkH9ZJ
tSqxyt0pKoH/grRHXat4jFszxORTQublph2+tygq2JTnok6jPa1xHy1bLD/i
RMGz8X2+47RpXxPMQ0aF7Z5qjftsWfymyv/MT36XeaQ/tjwNuvfUvMdAh/eu
361kfLT6UdzogZ/N++owIuP+17bf1/t+xIOC89tq7fndsQnGWfWebN/z2va7
6/eT/zP+aij97eX5ZvS//sXoEC124GHfyB3FqxqeWeYh/5pUq337fYbX3p86
n5vXB0u1FRXuNg41fKC0p+ly+izfeczo9tCh/YXXdoi/hG7eMt/VOvWkLHeu
mfo+4yd2I6vMF2U/mO99pJ9J7+mQHv7kJ3ajncyDPc89dMTTEMOHyjxMkYVr
6tx7ncAuyXzR5OxFCyYNN3agjEMcJLjLT/jW0kXHWeOiLS6Vf8RBgneUX6eG
60rFJOBzZB6ms8RBgs9yiI+EPVm6p/ipXR6xlrmLQif1/GD4d5m3KdNvSeoG
jwz/8KbKvci4WEv3iB/lR78XyHzFm4x/N3j2wZTnjWL32A8C7v8T+zZc5lV+
b7dwWKezhjN/cqj1vX5/PDH5xAx1PmrfX6LwutBM9nL+M3sIX926cAGbIG7v
hv7Yh0LtocwbHH600XOTj+EBMv/QKEvwiAkvDO/j1yYmn23cXdjLdbPPZ8OZ
Bzi64+Sqxy9N/WLcevHD7xnuvjGccWKl9Db+1tjDYTIeHHtlda7v7w1PIuMs
z9ldV+RM0E/YKOOpARNX3TieIF7QyvRPd7y2/SZv8CP+D5zfDkNXDrb3Z7CT
Wf98di3INh55sf/hvFrfDG8g/Y1hleKyt/1k+Lk3bztE237fnH8Ynz/8lYwX
Qmpu2tk1QT5JpJ9fyj3lof2PDKc/X/fY7zOffzJ2g/7Jokd/3bOvJ9H+TOma
fQO831v2tuz3P+tXHeO/wR3j58Az1Hl62x7370rhJRm/J7DPrN9Ovsgrvp1S
/mJz5wBbv6VgpvlVrkUZ/u54oWm53SMtziHldvhEGXviGN8GfiC26XV7fObj
DQZu+56gP+8YrwZ78mRTxtYB3lGWNX5NUs2NNnzRiDljctv6Lcev73k1O9rU
d8d4a6SHL3Z5eqbrC5PeMf4M9Y553Yq7LrV6+8Zw+jNJz6equjXG1K/n7X70
2/dJfADlDnFg4Lpe6EibBgnr47L0Hwr0sTq55Rjv8z/rXprmvHzHHv8w5c6w
3gnbL9ZdFx35PLDXZ8P7viqSt4+tP1Osxt3vL2INr93q8Z45zkncxraaMcrO
6ccUjIwOsMdPbnz+/NSE/fMaV9vn7GNN6janTMfNjb8bnsU11445tv7MrRdV
qybk+DFYF7WovPqLKeeM6ydZpua++tVw3Qev5a+hC78bTv8kz/FUaZKFm/JP
OY/qV+uDvZ9GeXaMR0H5pF9ddc2S+P4S77310WPn7HH2FnTKnSyhPa/i+mVw
bvfvlvEvH1RJ+H4d4zzwvpif7FrgbJG6H43OrA8pdbB56OXPxv58Cix70x6X
rPnkXCsS2o3HGf/cPMc5hdv7Nen+RwfmAcocqZk68xujA34ft8PXZHg93jxv
FumfvP9+9mKbCVbVh3GQc5vFOwf9Zcb1hxz89OGHheOvRD2NdvDHh8cKjxHO
/WB/5gR1KNvgickHHu2Qnu+kOQemDdxf1DzXWvneunDUlK1f/zV2Q+MQiJ8p
vBT7+gnXdfgyXxE5oEnxwIlhZnwk1wmt4x+TIYlJr/HBLs58NfyGSU+5uvkq
nyUo0KTPLv2uqs1mtA9Lasqbv9i3CjsvF+t5MFw547hzWSfs9G1nuK6zHVCr
yf3iJp9YB/99eJxw/FIpt88kn/7yfZNyflz6aRVvBH7vVsWUf8aD7ruuBI65
ZOYfsJPnvy9bvbCvSc93qI29Vic6N8fwFzLvkWjTb9fCjpr64i/pq6ZofK9k
OTMf7ujvDx8mfIlwjdMo34OKbu1/rftLM3/O+LFL/R6twponGEdIP8on6ZOc
Rf4x9TRQ+jmXL/l99JxgvuvRj9pRfHA6e/0iPePH+8lWHvDdYPgs+W6So1LX
sA1HDf9FvmtMe7Ap/ZZbCdYlyvxMj9ATE1NkNvwk6yNaDquYpbbhjE8Xu7/+
tN/FcOzMsh6RpQ/PM/yW9K88nw1+l3q9sT/Mq2+/tHuzvR7BaQf+7Z45TdO2
hjOeda9zcmHsdmOXNku/q9GTT5va7zScce7erLn+XjrWcMa5j88sOjj3rOHM
G+dM3qh0Vz/DT8r8z4sh9Qote2DsHvUxLHGXHvb1V9irddLf+FP8IuHUr6s+
hUba19VgT2ZJff31w96Cf2UxfhmU//wNm188ddvYt+wO84Fw6tdwGTfBhzj4
m+t3JeFNHDj1q7z4oes4S9IP+6/lu4VtTH8mQOrR2VpHanrtSjBvI+ORvVea
Wd5VNPl0kvI/9ezBWq/PGDtGf6ZX327t/zlp7A/1qOXBvQFfmxg7c9TBPx1+
XLinA+d75cIzL1OGe5j8Nc5rrTk1F64JU06/6MydpDcmnjD2h/r47sjqfMkb
GjvDd8/zN/OPO7XKcOp1+S9tHqztnmCeSr4bTsvZ4mO/lSZ/6qlzwOityT3D
lOu+Lq/e9397yvhZqB0Q/3f9niX1tFnckVmLqyWI4yH1q+/Iri8OuBr7ME/q
a9UtQ459bGA49ahqjgZlF5Ux9Zp5odV+jVpeP2F4ealHZ2p/P9QtwvAXfL/Y
UKDdqgTrokfKuKPjpNIFe6cynP5YnWTJa+ZNYB+YR2oe6vZ+ykHT75rq4PdN
PWoj65GK1Q7vNzZdAt0c/DLgQxzjvYieZeU9zLid+vmthwn8OKScX99Y/922
CkY33u+vDVv0aPS3sRszpF8xIt30bXfaGX5Y5lWa/Xd62cJh5rvSTeknTKxd
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
H46//N4=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNnAkYVsP3x9+730gphUppUXYt1hAVkUrZSwjJUnbaU2ijlLVUCm3WFoXs
W7bsElmzJWTfs5b/99N3PL//87zznHPnzp07996ZM+d8zzlvo97nH3VeXKlU
LsgrlUT0/LRS2TSqVNqJplml8p3qdhM/SfyB4g8qKpUH1LCr+Fqi9XS8uzoY
JHq++miu+jbin9a5XuIbitbX+ZvU5yEqP6nMUOmocp/qr1aZoLJE7Q5X+y1E
H9a5C1S2VVms446qry46XONoqLrDRRfp+FDVVxM9RPc7V330Fb2HY9VvJvqo
ynHi64jO1XUnqmym8oiOj1X91qKPqXQXX1d0qp7xYPGXqJ+ndHyi+Aaij6v0
EF9P9DPdex/da7XoQh13UH1V0S90zRbie6uPrXT+pMjvcbLKgSqZyhyd66Y2
H6rtUl1zkvhtRUfovd0q/mjVH6lyi/gv1PZG1T+h634QnaLj1uq3l863VPlF
959aViq/6dw4tXlT9ByVbXXtuWr7ifhTVf+Q6LW6x9aqX6Prv9S1TcSfpzZX
6twz4jcXfUv1z4mvIf5xlb66dq1oPd3nJdUPUh9V1aYm71b0D537RG1a6/wK
lR3V93LRt1R3v+jZKtN1zQ5q/zvfX/z24teJv0/XVtTuY96P+Eaiz4jepjZ7
61Qsuq3usZ/aniJ6qegIlWt1rkti2lrjr61ygfhjdK824seozek631zvZRrt
dO2/FdffwzW6zxXiF4nvrnNjxf+r644TP1r8saKHqVwo/mzRBRpTV13zuWhr
HZ+g+omihzMm9XGU6oer7hKVa3T8S+Lv2EP0StW9zlwSXydz+z00zpYa2xzV
3aA+vkx8XWfRGmpzPvNf9A5dOyD2s73J+tJ11XVdH5Ua4p9V3VahT/rmWXiu
yzWe4wvfu4doFbV9krWt/nfTtddwP96rym6qH6Jr79Pzna1ST+XD1Gt5lejo
zGv5ALXtpONvxe8iukb3OIM1JDpX/e3FpxTdQu3e1flrdJ/bdbyP6hPWqOq+
Er+96Hc6von3JnqG7vN1xTJlU/FXqc9Z4i8Xf1ns99gy8rfne48UHRX7ezIX
qP9H/Dz1dYBoKbpn5DYzdbwgdl/Hq/761P3vLfqB6IRwL9qODO03JJ4jfWiv
Z/gcWaNnGqO2LVT+1rkr9U72YG2rflVuObYJ60Z8f/HPi76t64eq7V6i7+aW
e1WYa+rzJvX5vupGq1xPn6LDVC4Oa3yx+j9B197G99TxjaxBlZGsYdGVoh+y
plOvu8t0PF7Hb4mOUv+jVfei+OoqbVU/ReVu8V1EN4j+o/IV9Wq3WuMbr3t1
EB2s+vNV/73oGyqXif9V9EqNY5TavK5xLdPxINWnzP0gc34LbXdR+YN2Or5U
/HLRXirHiF+h8nLk+p2hGucZuv98nZ+XWfbOVZ+J+LP0bmPRUuefYC/S2C5i
7uu6d3XuPF3TW/zDoh/nlrEPis4R7Rlke0O1+y3I3oN0bTX184Pq1um4l0pV
laa6RzXR9jr/qe4xTm0OFj03yExk5wVhnjPfP1CZLn49z6vxn6PrFovfWeVw
1X8qen/u/WVTPcti3W987HX4QBgn470ktwy4VX18E74P3+lp1V8kGuvageLP
Ff+k6Kc6HqGxvabxDlVfw1T+1PFOqh8purPoRLWrGeT8H3qGu1XfS/R3lbvE
nyTaU/eM1Ga/1PPnatYCz6NzC9XmtMRrDv5n3etqje9Ntd1c/Q/PLaOOKLxW
WH+sk+ril6WeS4nKI6rrp35i8Q+L7ys+Ev+Q+LOQP7r+evHNRb/V8TTxR4q+
oXGMVmmu8o3O3aD6DzSGKio/im+lPr5hb2YMoutU7hR/ougfOnecxvG76L86
fkD1Z6DE6PhBkTPF/6Zyh/gTRK/Ws9wZvlc19f9LxbL1JR0PRjcRvVflWPHr
RF/UNWepzQ7sJTreKsi9A3TPNiq9kVe6vonqu4neqT6PoQ79Qe3OU/13yASV
68T/JfqC+joTeSi6DDkovpno8yqni2/K+NVuf7V/h3WtfrcTfwTzJvd74n3d
mFkXWspa1LntxR/Fc6v+ZHXxETJE/Daqf0JtFqkcLT5X/eOq78O+iL6k+qPQ
T8QXKmXsvXuW6ncPesUw0R1Y74xVbS5i/IXnOnN+Se65yRy9TOd2jXwM31X0
8Njf/WHd9xTVfSL+JNWdqPK0jlvouIv4k9XPj6ll7Q+ir4ZrkUHdRI+IPYdu
0fzcNPMz9oq9L6PHfKzj80Qfytw390g1ll1T67HoszN0bZ5ZB3tKtL/qD9N9
Nwvvjfl2j9q8kbj+HORO7HNNVP+96k9TfRl0OXTjuapvpOPP1GcHlX5qPznz
/tY39h63R2Z+E13/YOJrayfWzXR55TOdmxb7OVkDB5bWEWeqv9alde7p4g8R
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
/8ns6yTX8v8ArLZ56Q==
          "]], Polygon3DBox[CompressedData["
1:eJw1mwf8l9P7xj+fZ35kFAollJaWrDIq7SEVmkZSSGmqFC0zo6FCRSVSKhXK
JjM0zPAzki2SzGwR/+vddf6v1/e8vvf9nPOczzPvc93XfT1Vzx/WZWhUKBT2
TwoF/RXOzAqF6/W/ZVwoVCoVCoPyQmG4BvTRtoGya6i/ouyt2vaT/B3aqbPs
W7Stk/b5Ki0UpsneIbum9t+h8S8WZau9Iruz2jj1H6/+8uo/SnOcFvY/Uvbf
6v9KY2O1ibKv1nx11bdM4yONv0tjOnK88k+W31pjhrGv/H3kf6L+8+Tvrf3u
lN9J/ZfLb6j+/eV3l3+t/ObyZ8v/V/7v+q291JbL7ql2nfpbqL+i+mvKryR/
m45xh+Y+W/4U+W3VX1n9teQfLH+7+n9W/1nyb5DfSv0Hq/8I+ZXlf6f+X9R/
ofw75HdTf3X175S/Rb/dWO092amOe5DGNteYU3Vta2vbIbJ/0LZftf878o/T
2H+17SrZH3P9ZJe03x2a7znt85f691MbLnuwtu/D8cgeo/7N8q+Uf6D+3y3/
aW3frrHN1ebI/lVzbpR9tca8JfsCtXmyu+p4q2n8Ndqvnvzl8mP5F+v3h+jY
Tte2AbLP0fipstup/xD1f63xM+Wfpf+r5O/BfZN/ofa5T/Yj+s139Hs7eb5k
xxo3MPI5Pa7+XP7gyPe0qvx+mn++7O6ya2i+9dqnrPrXaNts2bvU/73ma6X2
oezV2r+v+iaq71qNH5X6ft2p/f/W8d7K/dXYUer/V/4g+U+pf5D662r8panv
/3z5O9U/OvX9vEv+P/IjtYJ+/wz9e0H7Xpb6fi1Q/y71Nde2QfLryC+j+ZrJ
v1h+bfl7yO+v8XvIvzn2+zRAfhn5t8R+3obJryD/Nvl/yE/4zcjntF5ztVAb
LLuu+vfUfH9r/H3yU51PPfkp+2h8bZ3jSo0dmfr9vUPj/1LfwMzj+8ivrfGt
5A+VX1/+3vJ/Sn29/5ZfR/65md/vU+QfJn+tfifX/A00/wzZZ2r8m/Jv1Zie
sltq/BDZ9TR+L40fqd98XP0t1Ped7Av0X3+Fqer/Xv4vcu6R30v/H9T4lzRn
qvF1Nf8U2ZdqzGr5bdT/u+xemv8mjW+v/Q/leZS/Qv558o+Qf6HGaVPhJvk/
aPxNau9q/0e07UTZC9Q6yS6v/mbsr/F7yr819vs8SP7e8mfFfv9O1WSj5R8r
f1+N7yB/lPxj5JeTf5LG9Nb8L2rbjeprIr+v/MPkD5b/gM7heZ1LdbVrZc/X
/Keo71mede1/jLb9VHDMJYb9K/882bnG95Y9Q9saq/8Rjc80/kr5teUvjQkC
igny68i8V35R/t36/c7yK8hvLn+a+k+U/5D8RP50+SfJf1h+Kr8jz7D84+Tv
J7+p9m8g/275c+XfqfEd5D8nvyS/KP8iHV+zgt/nMhq/n/y35X+kuY5V/4IQ
z8owp/rryX9X5/Kb7C/0/wT5jdW+lD1b247U2F3yj9P8R2rb9wXHGGLcIZrz
Lflztf169Q+Qv1j+2Zq7VsnnyfkOiBw/TlP/ePknyK7A8cp/mOdDcz0kf6D+
7yV/Zuz43FytX+RzHqaxfdVmye6s/qoaf7782fJPk3848Uzjy0U+pk1cO/nP
cOzyD5a9VO1c2VU0vp3Gf6TjPlb9jdQ+kd1b/TNlt+Id17GM4BmV/ybPgOw5
asfLjrX/8dp/jsZ0k/+k/Afkf6nfvF/PxjZtu0T2Is15n/wD1C6VfYq2Xaq+
ozV+pcaP0/415C+U/5/mvo41SX4N+R3U/5X8r1nftO9I+bdrfFf5T6j/Zvmf
a757NXdVYo7s2zW+ESFQ/Y3Uf4P8l3X8I7XtetljtX911gP9X67+w/V/qvo/
1bZJ2meLxmyUXY33Xv3z5beVv4/6mvD86TfOkl85vB9tU7//R6q9r2O8SOPv
kn0Uv6e+97StvvzDC37GPsuNXc6QPVb7X537+h2k+VrIv0N+G/CC/MbEN9YE
7X8s7y/xK3W8qq22UXNUkT9F9vPqP1f+U2pbdT2aqs2SfZv2b6i+ouZrqPnO
yX0vz1PfFfL3kV9L+++nbXvJrpLZ3qRtl/N+aVs7+WW1f1P598jvybMkvzV4
CVwTzvdf/Z8sv7Xs+9W/Qv1dMq/vjeUfVPLxP6Fx+xccc79S/0od60Fq98ve
mvnZuUjHd6XGb+P9UN/Bas/IXqLtD8n+ljVLdjcdz9Wa7y75V6j/AM15mfzf
iaGy39e2WzT+IfkE3mszY7nV2neS5j9UY67X+OfUvYe2dc091y863oXqr5T7
/fiYWFfy/KPlX0IMI9Zxv+SPkF9Tdhe1CfKny5/As6n9HtPvHaJ2uey56m9K
aNT8J2i+RpnjXxLiJff7OO3/ndxR6vuUeKJ995X/GO+/+mer/zeeUZ4ltVlg
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
          "]], Polygon3DBox[CompressedData["
1:eJwt1wnYjlUex/GH9/U+LtvYytIQmijrmJapMBpLCiVKNdRMWYpsLbYKlbIM
IipbQihr2bcR2VWWyjL2nawlI0q4zOd/3a7r/b3P+X/P73/u89znvv/nPKVb
dGrSMXsqlVpMOWilfytoWjqV2pKRShXImUoNF9fStz8zlTpAu/StxlbRdO2t
fAX5lmvn1v+SeA1/RlYq1Q9vjV2XzZh0GFvBlwd7mW9tXBcbReX0/xvvT9t4
OmMVtHdTVZMsiv2Bymtvxr6jneL7+JrInS2eRdux0thA468X+0u1MNf+dJt2
fZ8N6DjfRFrHV5Za65uGT8K+EpejZ7Hp2ARsrfhmaoVNxWZgu8U16BVz6iD+
mFaKS9FTfBP4ltOXNFXfZjy/e3JUuwr2Z2ot9964p5TfZNvzdIjr8LXEjhin
Ll6Rt5X4aaom5/qYI/Yv8QvUFyspLkGHxAPcg8NyN8rdRDuwRulkrsV4bsd6
8OzWfpuvqc/H6FQ6+X7xPde4xiPaJ7Dn6Hm5GeLstEdcjx7me8hYubD7xQdi
nbTz00v8i32+5TrVeRbTIWt1UbyZr1KsT45k3Lriu6i59iX8aXywuAfVcY08
5tIE6yne5LMTVsBnQTqINTXmXp4f5XbW9y3+CTXW7oWtpAy++ulkXvniecC2
iDfILWteZeT3xdaL69G34tPi2vzl+JbJWUp94hnB+sZ6U964Ju8618qS19va
lcfaGXMuHcOWUFHteng5+l7ejdgAeePE4/XtExegrca5Lu4BbeU7hB3FWokn
ZCbvUYm4X+ZwWNzYnF5LJ895PO81fd5LP2DdeKuAU2mRa5yO5yLeEf1laB//
DVh5Kqn9szHr8A4U/0xfymkkfp1WizvKKcxX22cdOmasvZSlnaZ/6pvo8yrv
73KXZyY1YLr4Edrj+84Vb9B3TjxO7nKsJDWX+7HchdgVcUv6DDuLzaHZsab6
1uO53ONq8udqZ1E1vnf134PNEeege7Ah2HtyJoh/8d3OU1W572IjsYPiQ1QF
qy53Hpam6nKHym2HZcZaYDOwS1gNbFnUR6qPjcWGGG+weL+xDlBl49Xi24jV
057Ps4D+Fvc0aiY1kDsO+zu2QXwf31zxPKqJfYOVoGZ8n8eaZiXfvS7fTPGs
qCHYR9hJ17yBr0vUG3PJZc4v4quxTJ5X4z7z5I7vrK+keBc+Wnsp/Wg9rmQl
92piRhRwa8h/VTyKZonzxRx1DXKN8dgK8Y30JDYeG43NFxeihth72DBjFjN2
V9e4JfYHcVe+pcZ+IGoGdRHPxtvrXxB1nf+CeFjUVGNdiftpvGriIulkP9gV
NY0KiYfSaL4LeFm+F6P+xB4W71lmsmcUSCdrPiojeQbiWfhNPIb+gxWlR+WO
klvFtceIj/MUxzrHGqWTWl01R7JZ1owaQNcbv1dG8s7Gu3szDRUf5c2FteFd
x1eY7zV8Y9QynjVYQeyV2KewXNharBD2KrYBy52V7AsFsO5YN6pk7cvGvdE+
FuvJ19Y1bsHex05hebF22J3YZOwiVh57AysXa4ydwPJgz2N3Y9Owy1gl7C3s
L/FuYj9hJbBuUS+x8RlJjYha0R3rZX6rxEViPuZZRvx1rFPUDGwbX0F5lWmE
eF/sXdgLcr/jKxV7Pr4XKx41N+oi1g/bgxWLdwgrgfXBdmFFsNq0SXy/+7HQ
WItoE19Jvr74br6iPKuwfFgX7Cssjd1Eg8JjLllRV+XeqvFB7B+xN2DtsW/k
FpX7Bv5frBBPVRob+wLfH7GufOv5ivG9iW/HCvP8id6J78WnO9Wab4NGcb7e
+I6o8fHuYkvExagpNprvQ2yBuDA9iA3DRmIzxXnj/ccGYsuwnMbrhC3FrsT+
hKWxjtgX2GVscUwAew5boHkeGxTnEXNrrt2MBsZ+Yj5TeS7hFfl643Px81Gb
6VPsFPZF1PvM5JwS55WK1mARdjXOTDSf70KcIYx3JtaI3sGOYG2xi/Gu0Rjs
DHaH3EejNhvzXJz34p2kbNpt+Bby/cq3BMuOtcUWYb/F+Sn2KfEDNBg7GnWW
77K4BT1D5c1vHnYhahVN5jt5rc5GvZ2cTup0Hr6njPdD7Cf0Ot+ua3U76veU
dPLM5eVrwXdSuzb149un/xnshLhWnCOwvddqdNTqT9NJjc8ttznfEe27qSff
Dv1Pxh4fexb1wnbGNeX8GmdJmoKdxlry/RR7Cg3CDsd65EjOKOXjOaYj8prF
Ps9zF/Xg245/hh8U16H+2DasDd8v4kY0HDsRz0LOZL+/SR3Olj05N8Wa58hM
7mfc1+Y8/5B7QPsO6i53S5zlYt+PZ5k+ivNE7Ntyz8ZeGXseNZZ7nK+t8W81
5uTM5IwUe+iQjGQ/jn35TJwv8Z1R96hjnGeN9xC2XVwhnj9sPdYI2xHPInXA
NmDvy58kzhZzxHpgpbCjrnckMzlHlxZ/QJ/wZKc7+XryDcemi3NSDawPNgL7
PCM5i8aZdAA2w3WfNdYkmun7HM1Knr9LPI/R43EvfN8n8P3at0cdl7tZ7tfY
25FHq+SeFc+Ue4rnYRrBd4Cvflby26FBzuT32cpr9/R/18aP65TVNwc7p/0E
jZXbOMaK+Rh7SmZyJn1ZPAs/HetAI+O3nfH+ik8R/+6eVMDexBpmJb/vHjT2
GvFaGhvPAlY8rsv3YZyx+XaJK2ck5/I4nzfISn5DNsyZ/FaM34yPY/uw26gr
3/fY/wFXyOfv
          "]], 
         Polygon3DBox[{{1608, 976, 1258, 2011, 1469, 1470}, {1912, 1356, 767, 
          768, 1357, 1913}, {1464, 1463, 2014, 1291, 1292, 2015}, {1966, 999, 
          843, 842, 1304, 1870}, {1609, 977, 1364, 2026, 1471, 1472}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0s9Lk3EcB/DPdFqtNidRxw29119QHQSxmiePdWq3hPTqDvbDfmyBCBHo
zYhI6BIo6+rFoOjYmtWm2yQiIqIQ0Wuvhw6f5/X+fA/P5/v9Ps9IeXZqJhUR
S+pASPILj6w6UjcGIvLWTsu35KJc4Xk+5EU+5SSf8zrXuaGm5Q+ssMkae1zh
L67xkG+YHox4y1ccN2u0L6KhL7Kkn++P+KS/zSbvcJt3+Zn3+IUL/Mr7fKBa
yT7Z5iPusMpd1tjhY3ZZTkdMmNWTN+V9+Yo6aw971v7Kl9UZfcE+P1ob0+fl
LbmP9eQeneklf3KZHVbZ4Bzf8526Kb/mNT5jiU94Idk/z3GOBS5697BZI2YP
6Qu8qv/DnP43s8m98lQymyf5gxl+5wl+4/HkO7Crjsm79Ppo07ho0fHjkqYu
9yfntJAzTxur8qqcSf3/Z/4BdIZLYA==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1377, 1716, 1803, 1717, 1673, 1706, 1790, 2186, 1567, 1758, 
       1718, 1759, 1719, 1674, 2008, 2168, 1568, 1805, 1804, 1806, 2189, 1569,
        1378, 2022, 2028, 1907, 1570, 1379, 2029, 1571, 1380, 2030, 1572, 
       1381, 2031, 1935, 2094, 1382, 912, 1383, 2032, 1573, 1384, 2033, 1574, 
       1385, 2034, 1575, 1386, 2035, 1576, 1387, 2036, 1577, 1388, 2169, 1675,
        1578, 1676}], 
      Line3DBox[{1389, 1644, 1852, 1891, 1892, 2214, 1677, 1720, 1760, 1645, 
       1762, 1763, 2183, 1707, 1791, 1579, 1761, 1678, 1721, 1646, 1679, 2190,
        1808, 1809, 1807, 2009, 2037, 1810, 1580, 1390, 2023, 2038, 1908, 
       1581, 1391, 2039, 1582, 1392, 2040, 1936, 2095, 1393, 1937, 2096, 1394,
        923, 1395, 2041, 1583, 1396, 2042, 1584, 1397, 2043, 1585, 1398, 2044,
        1586, 1399, 2045, 1587, 1400}], 
      Line3DBox[{1401, 1851, 1938, 2202, 1853, 1647, 1856, 2021, 2163, 1893, 
       1680, 1722, 1764, 1648, 1766, 2175, 1708, 1765, 1709, 1681, 1723, 2001,
        2046, 1683, 1813, 1814, 1812, 2191, 1811, 1815, 1588, 1402, 2218, 
       1909, 1910, 1589, 1403, 2047, 1939, 2097, 1404, 1940, 2098, 1405, 1941,
        2099, 1406, 934, 1407, 2048, 1590, 1408, 2049, 1591, 1409, 2050, 1592,
        1410, 2051, 1593, 1411}], 
      Line3DBox[{1413, 1942, 2100, 1412, 1854, 1857, 1855, 2215, 1894, 1414, 
       1858, 1649, 1682, 1650, 2177, 1724, 1792, 1725, 1768, 1767, 2178, 1651,
        1771, 1710, 1769, 1770, 1726, 1415, 1817, 2164, 1652, 1816, 1653, 
       1885, 1416, 2024, 2192, 1818, 1911, 1819, 1417, 2220, 1912, 1913, 2219,
        1418, 1943, 2101, 1419, 1944, 2102, 1420, 1945, 2103, 1421, 945, 1422,
        2052, 1594, 1423, 2053, 1595, 1424, 2054, 1596, 1425}], 
      Line3DBox[{1427, 1946, 2104, 1426, 1947, 2105, 1428, 1859, 1860, 2106, 
       2012, 1895, 1429, 1861, 2002, 2203, 1684, 1654, 1727, 1793, 1728, 1773,
        2184, 1655, 1772, 1656, 1774, 1729, 1430, 2010, 2165, 1657, 1820, 
       1658, 1886, 1431, 2221, 1915, 1821, 1914, 1822, 2193, 1432, 1916, 1917,
        2222, 1433, 1948, 2107, 1434, 1949, 2108, 1435, 1950, 2109, 1436, 957,
        1437, 2055, 1597, 1438, 2056, 1598, 1439}], 
      Line3DBox[{1441, 1951, 2110, 1440, 1952, 2111, 1442, 1953, 2112, 1443, 
       2013, 2204, 1862, 1897, 1896, 1444, 1863, 1864, 2205, 1685, 1731, 1794,
        1730, 1445, 1795, 2187, 1732, 1776, 1659, 1775, 1686, 1734, 1733, 
       1446, 2194, 1824, 1825, 1823, 1888, 1887, 2196, 1447, 1919, 1920, 1918,
        1826, 2195, 1448, 1921, 2113, 2025, 1449, 1954, 2114, 1450, 1955, 
       2115, 1451, 1956, 2116, 1452, 969, 1453, 2057, 1599, 1454}], 
      Line3DBox[{1458, 2058, 1600, 1456, 2059, 1601, 1460, 2060, 1602, 1462, 
       2061, 1603, 1464, 2015, 2062, 1604, 1866, 2003, 2063, 1868, 1900, 1605,
        1689, 2005, 2180, 1741, 1690, 1711, 1797, 1606, 2007, 2006, 2181, 
       1778, 1742, 1691, 1832, 2172, 1607, 1831, 1830, 1833, 2197, 1608, 1470,
        1926, 1927, 2223, 1609, 1472, 2064, 1610, 1474, 2065, 1611, 1476, 
       2066, 1612, 1478, 2067, 1613, 1480}], 
      Line3DBox[{1479, 981, 1477, 2125, 1963, 1475, 2124, 1962, 1473, 2123, 
       1961, 1471, 2026, 2122, 1925, 1469, 2011, 2121, 1922, 1924, 1923, 1468,
        2020, 2213, 1889, 1827, 1829, 1828, 1467, 2171, 1739, 1740, 1688, 
       1738, 1777, 1737, 2179, 1466, 1735, 1796, 1736, 1687, 1867, 2170, 2016,
        1465, 1898, 1899, 1865, 2206, 2014, 1463, 2120, 1960, 1461, 2119, 
       1959, 1459, 2118, 1958, 1455, 2117, 1957, 1457}], 
      Line3DBox[{1482, 982, 1481, 2068, 1614, 1483, 2069, 1615, 1484, 2070, 
       1616, 1485, 2071, 1617, 1486, 2017, 2072, 1618, 1869, 2207, 1660, 1871,
        1901, 1964, 2216, 1692, 1743, 1744, 1693, 1712, 1798, 2188, 1619, 
       1779, 1745, 1780, 1746, 1694, 1836, 2173, 1620, 1835, 1834, 1837, 2198,
        1621, 1487, 1928, 1929, 1622, 1488, 2073, 1623, 1489, 2074, 1624, 
       1490, 2075, 1625, 1491}], 
      Line3DBox[{1493, 1965, 2126, 1492, 994, 1494, 2076, 1626, 1495, 2077, 
       1627, 1496, 2078, 1628, 1497, 2079, 1629, 1498, 2209, 1870, 1966, 2208,
        1872, 1661, 1874, 682, 2217, 1695, 388, 468, 1131, 1799, 1630, 466, 
       389, 1696, 2199, 590, 1839, 1838, 1840, 1631, 1499, 2027, 2080, 1930, 
       1632, 1500, 2081, 1633, 1501, 2082, 1634, 1502}], 
      Line3DBox[{1504, 1967, 2127, 1503, 1968, 2128, 1505, 1005, 1506, 2083, 
       1635, 1507, 2084, 1636, 1508, 2085, 1637, 1509, 2086, 1969, 2129, 1510,
        1873, 1970, 2210, 1875, 1662, 1876, 1902, 2166, 1903, 1697, 1747, 
       1781, 1663, 1783, 2176, 1713, 1782, 1714, 1698, 1748, 1664, 1699, 1843,
        1844, 1842, 2200, 1841, 1845, 1638, 1511, 2224, 1931, 1932, 1639, 
       1512, 2087, 1640, 1513}], 
      Line3DBox[{1515, 1971, 2130, 1514, 1972, 2131, 1516, 1973, 2132, 1517, 
       1016, 1518, 2088, 1641, 1519, 2089, 1642, 1520, 2090, 1974, 2133, 1521,
        1975, 2134, 1522, 640, 1308, 642, 255, 1113, 311, 477, 1081, 1784, 
       1715, 479, 312, 1114, 257, 599, 1272, 598, 1523, 2225, 724, 1524}], 
      Line3DBox[{1526, 1976, 2135, 1525, 1977, 2136, 1527, 1978, 2137, 1528, 
       1979, 2138, 1529, 1027, 1530, 2091, 1643, 1531, 2092, 1980, 2139, 1532,
        1981, 2140, 1533, 1982, 2141, 1534, 1877, 1878, 2142, 2018, 1904, 
       1535, 1879, 1665, 1700, 1666, 1749, 1800, 1750, 1786, 2185, 1667, 1785,
        1668, 1787, 1751, 1536, 1847, 2167, 1669, 1846, 1670, 1890, 1537, 
       2226, 1934, 1848, 1933, 1849, 1538}], 
      Line3DBox[{1540, 1983, 2143, 1539, 1984, 2144, 1541, 1985, 2145, 1542, 
       1986, 2146, 1543, 1987, 2147, 1544, 1039, 1545, 2093, 1988, 2148, 1546,
        1989, 2149, 1547, 1990, 2150, 1548, 1991, 2151, 1549, 1880, 1881, 689,
        1550, 651, 2211, 1701, 405, 527, 1175, 1788, 1671, 488, 407, 1551, 
       2201, 607, 1850, 1672, 1552}], 
      Line3DBox[{1566, 1756, 1802, 1757, 1703, 1755, 1789, 1754, 2182, 1565, 
       1752, 1801, 1753, 1702, 1884, 2174, 1883, 1564, 1905, 1906, 1882, 2212,
        2019, 1563, 2162, 2000, 1562, 2161, 1999, 1561, 2160, 1998, 1560, 
       2159, 1997, 1559, 2158, 1051, 1558, 2157, 1996, 1557, 2156, 1995, 1556,
        2155, 1994, 1555, 2154, 1993, 1554, 2153, 1992, 1553, 2004, 2152, 
       1704, 1705}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{730, 1343, 1344, 2028, 1345, 1346, 1231, 1234, 1232, 2037, 
       1237, 1238, 1062, 1095, 1063, 2046, 1141, 1096, 1143, 1190, 1065, 1191,
        2178, 1066, 1192, 1144, 1099, 1285, 2203, 1069, 1284, 1070, 1288, 
       2204, 1286, 1287, 801, 2120, 974, 2061, 813, 985, 2070, 825, 996, 2077,
        839, 1006, 2083, 851, 1016, 862, 2138, 1026, 873, 2146, 1037, 884, 
       2155, 1048, 896}], 
      Line3DBox[{731, 908, 2029, 732, 1347, 1348, 2038, 1349, 1350, 1239, 
       1241, 2191, 1240, 1242, 1243, 1067, 2164, 1098, 1068, 1145, 1100, 1146,
        1193, 1071, 2184, 1194, 1072, 1196, 1147, 1102, 1290, 2205, 1073, 
       1289, 1074, 1293, 2206, 1291, 1292, 2062, 814, 986, 2071, 826, 997, 
       2078, 840, 1007, 2084, 852, 1017, 2088, 863, 1027, 874, 2147, 1038, 
       885, 2156, 1049, 897}], 
      Line3DBox[{733, 909, 2030, 734, 919, 2039, 755, 1351, 2218, 1352, 1353, 
       1354, 1355, 2192, 1245, 1244, 1246, 1247, 1248, 2165, 1101, 1149, 1195,
        1148, 1197, 1150, 1218, 2187, 1151, 1103, 1153, 1152, 1105, 2170, 
       1295, 1296, 1294, 1075, 2063, 1299, 1297, 1298, 2072, 827, 998, 2079, 
       841, 1008, 2085, 853, 1018, 2089, 864, 1028, 2091, 875, 1039, 886, 
       2157, 1050, 898}], 
      Line3DBox[{735, 910, 2031, 737, 920, 2040, 756, 930, 2047, 767, 1356, 
       2220, 1358, 1359, 1360, 2221, 1361, 1251, 1250, 1252, 1253, 2194, 1254,
        1104, 1155, 1198, 1154, 1199, 1156, 2179, 1219, 1157, 1106, 1161, 
       1160, 2180, 1108, 1301, 1302, 1300, 2207, 1076, 1305, 1303, 2209, 1304,
        842, 1009, 2086, 854, 1019, 2090, 865, 1029, 2092, 876, 1040, 2093, 
       887, 1051, 899}], 
      Line3DBox[{739, 912, 740, 2096, 922, 758, 2098, 932, 769, 2101, 942, 
       780, 1362, 2222, 953, 791, 1255, 2195, 964, 803, 2213, 1321, 1322, 
       1259, 1260, 975, 2172, 815, 1165, 1166, 1110, 1129, 1203, 988, 2188, 
       830, 1167, 1221, 1168, 1111, 1336, 2217, 1000, 844, 1337, 1338, 1307, 
       2210, 1011, 856, 2134, 1021, 867, 2140, 1031, 878, 2149, 1042, 889, 
       2159, 1053, 901}], 
      Line3DBox[{741, 913, 2032, 742, 923, 759, 2099, 933, 770, 2102, 943, 
       781, 2107, 954, 792, 2113, 1363, 965, 804, 2121, 1258, 976, 2197, 816, 
       663, 1262, 585, 2173, 831, 387, 467, 1130, 1204, 1131, 520, 390, 1112, 
       2166, 684, 857, 685, 1308, 1022, 868, 2141, 1032, 879, 2150, 1043, 890,
        2160, 1054, 902}], 
      Line3DBox[{743, 914, 2033, 744, 924, 2041, 760, 934, 771, 2103, 944, 
       782, 2108, 955, 793, 2114, 966, 805, 2122, 1364, 977, 2223, 817, 1261, 
       989, 2198, 832, 1323, 1077, 1263, 1264, 2199, 1265, 845, 1169, 1205, 
       1078, 1206, 1132, 2176, 1207, 1133, 1222, 1170, 1079, 1113, 1339, 1340,
        869, 1341, 2142, 1309, 1310, 1033, 880, 2151, 1044, 891, 2161, 1055, 
       903}], Line3DBox[{745, 915, 2034, 746, 925, 2042, 761, 935, 2048, 772, 
       945, 783, 2109, 956, 794, 2115, 967, 806, 2123, 978, 2064, 818, 715, 
       1929, 716, 588, 1840, 591, 254, 1699, 310, 476, 1080, 1208, 1081, 480, 
       313, 1700, 258, 649, 1881, 648, 892, 2162, 1056, 904}], 
      Line3DBox[{747, 916, 2035, 748, 926, 2043, 762, 936, 2049, 773, 946, 
       2052, 784, 957, 795, 2116, 968, 807, 2124, 979, 2065, 819, 990, 2073, 
       833, 1365, 1366, 2080, 1367, 1368, 1266, 1268, 2200, 1267, 1269, 1270, 
       1082, 1114, 1083, 1171, 1115, 1172, 1209, 1084, 2185, 1210, 1085, 1211,
        1173, 1117, 1312, 2211, 1086, 1311, 1087, 1315, 2212, 1313, 1314, 
       905}], Line3DBox[{749, 917, 2036, 750, 927, 2044, 763, 937, 2050, 774, 
       947, 2053, 785, 958, 2055, 796, 969, 808, 2125, 980, 2066, 820, 991, 
       2074, 834, 1001, 2081, 846, 1369, 2224, 1370, 1371, 723, 1272, 1271, 
       1273, 602, 2167, 1116, 404, 487, 1174, 1223, 1175, 489, 408, 1119, 
       2174, 655, 1316, 1088, 1122}], 
      Line3DBox[{751, 1091, 2169, 1092, 752, 928, 2045, 764, 938, 2051, 775, 
       948, 2054, 786, 959, 2056, 797, 970, 2057, 809, 981, 2067, 821, 992, 
       2075, 835, 1002, 2082, 847, 1012, 2087, 858, 1372, 2225, 1373, 1374, 
       1375, 2226, 1376, 1275, 1274, 1276, 1277, 2201, 1278, 1118, 1177, 1212,
        1176, 1213, 1178, 2182, 1224, 1179, 1121, 1181, 1225, 1180, 1214}], 
      Line3DBox[{893, 1045, 1120, 2152, 881, 1034, 2143, 870, 1023, 2135, 859,
        1013, 2130, 848, 1003, 2127, 836, 993, 2126, 822, 982, 810, 2058, 971,
        2117, 798, 960, 2110, 787, 949, 2104, 776, 939, 2100, 765, 929, 2202, 
       1279, 1326, 1325, 753, 918, 2214, 1324, 1093, 1137, 1215, 1136, 727, 
       2186, 906, 1183, 1123, 1089, 1135, 1226, 1134, 1182}], 
      Line3DBox[{894, 1046, 2153, 882, 1035, 2144, 871, 1024, 2136, 860, 1014,
        2131, 849, 1004, 2128, 837, 994, 823, 2068, 983, 811, 2059, 972, 2118,
        799, 961, 2111, 788, 950, 2105, 777, 940, 1281, 2215, 1280, 1329, 766,
        1328, 1327, 2163, 1094, 1060, 1139, 1216, 1125, 2183, 1186, 1124, 
       1185, 1058, 1184, 1138, 728, 2168, 1230, 1229, 1228, 1057, 1317, 
       1090}], Line3DBox[{895, 1047, 2154, 883, 1036, 2145, 872, 1025, 2137, 
       861, 1015, 2132, 850, 1005, 838, 2076, 995, 824, 2069, 984, 812, 2060, 
       973, 2119, 800, 962, 2112, 789, 951, 1283, 1282, 2106, 1332, 778, 1331,
        1330, 1097, 2177, 1064, 1142, 1217, 1127, 1189, 2175, 1126, 1188, 
       1061, 1187, 1140, 754, 1236, 2190, 1235, 1233, 1059, 1318, 729, 2189, 
       907, 1227, 1342}], 
      Line3DBox[{900, 1052, 2158, 888, 1041, 2148, 877, 1030, 2139, 866, 1020,
        2133, 855, 1010, 2129, 843, 999, 2208, 1306, 1335, 1334, 829, 987, 
       2216, 1333, 1109, 1163, 1220, 828, 1164, 1202, 2181, 1162, 1200, 1201, 
       1128, 1107, 1159, 2171, 1158, 802, 963, 1257, 1256, 1320, 2196, 1319, 
       790, 952, 2193, 1249, 779, 941, 2219, 1357, 768, 931, 2097, 757, 921, 
       2095, 738, 911, 2094, 736}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
3/HgOKnb0fvaZ/W9QSM5c4lXtzcyW9s4FUfoDWI1TZ5EnOukRsf51SytpB57
I5TLK/Uj8D5ap7C5NQ6503iOrx4k+LO+zo5i+Aa2vpY03N35Bqmn3A7+S7x+
V/o3kmt/lx7Sx5wzGqSTfHtbWl6/YqoSKa7kf/L0WjJIMK/PSdxNB8eYF3fx
z1c6RrzC14saNSOvs+flnBa+n0iL/pwncf+hRU7yvnpSY4kn774GyvbLPq5D
r9FE+s5JlQU6/B3b/xHHS7RHyPxBBwlSzxt2+ojvt3Lagbz/7JXybHxfnjwx
ZczZ4J8sJHe/771E8vZMfq5TTTkXTD721/Ip40Lu2dWk3yvZt+aX4NmVENbx
5vs67ZXI4tx70r/ZHxyv69y3DE6vTGP/JbMMsUitJ+fOgdctqW/uLIH3Pw9v
um25BG36cu2feTS2QfSR3ALlRGF1WZLMAvW0kQ+pm87datKvmaXY8L3ouFg9
S9UVTSF1vUSh3cv1pinM7I2VtzWmqcFiZaQuYb89hv/FJCUiLeTrA9dJKhNH
C6mH2vavOakyTqmTPkZPpoxTv05/JfWv2+WNuwpGKSIKUhwiuaPU0zsH/9mv
C38vJgR+p6wT8Vtz6s13arzbCKkH8KiuW5gYpMhMvyn3GRukHvWik/rM0N2G
2/H9FC+NX3qbovupGh/++Z42S6pha05OLyWkqtysKKuXGs32z/eHzZbdNWt3
8oLoacf03J286OHdDWQ9hwxv8MWn5sMLuum1kK4CVHMnlEPElA6Wi+5k/OLl
LQ6cX/euk9RFn1o//BmYB4Kr+8RXuSI0ta/U6aA7wcl5QTkca/5dfQvnDdIR
qbvoCdZWBXNAfMl+NslgDjR87jj5ebmtnZp7eD0bVhzX0ZNfmotUu4eNOsPp
8ES8+wqOvSQLe3FekpnDGOvW3uwOkgkZ0C3W6BfBloVCOuVazNLwXrztOY7v
bFj9DOerFxRIPfCKX7j7qxWQXvz8nbrnCnTT9Ad53/jqlU6nzqUBx44fmyof
p6OVND96cBH9v5iRZ+gP8lVeLdFLgdOdRT1TZ1LR6xJfjeBa+n8xI8/QK1t4
ehV2MYOo81xBpBQzUp5RJetvaa9UyxKQBDJK5wMb7yWjeL/v1gfbiHlhdp2M
922ZLML57ONM97GueOu3wRxfIrx94Bh+vzkR1a7l+MP5lQ7qQebOOKbc7rTC
+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
y320p1eex5pTYoA8G7fwFUXk2zrPUp8j1yYnlInn2M4vyLahXNsAXw88z7bL
5ua/2UfvgW8lXxLqw02qysD7bxeJ6/8Bcf33E9d/4jbnW8i5hW3hwd0bZPuG
e7d2s++4c3PXrK5D7g2+EMa9WwajVSFyax+/ZcUjx+apFIz7NX3i/NArxPmh
dsT5oSxqZhnIpx0ROs6MvFogpwXu1KD0TD9yaD912+WRS8uSOYR7NHtifS9d
sb6/MTwuifzGmb0MuOe4zCOAO45lh7bs0pb9hedn/5MoL7JjMgPPj9zJ0I7n
Rj442SWEfNoZTmF15NX4/2XjTi2coTob+bQ0o8HDyKtFqm3Endo4v9EXlHv4
UuryCZSDmBxJwfMPw7gacbf2XTzYGTk27bgvuF9zG1B1Q7l+p7q2tKKcP7Oa
OTzf79Qc207Ul/yxXHQM9SmLyS31J/NNHKQg57Z9YK4bubfxqjncu6k7Wj9H
zq3eXFUbubcvq39lIO+26yXTZeTZTBIfX0W+bZN3Oe7argqaf0ZuzT+2thk5
tncSAbhf6/tVhju04o6jFsil3WdewD0ax2AD7i1DX16hR/4y58t33F2mkebw
nOWw81v0UO7ydIEBnrfMuqNYt+5DGsw43pOX9zIVuO+/44ScGp12qBnyaCVM
uf/j0UiqRz94V60BbetP1r0tXwOnGZc82r5MH5EArRhQwtwl/fpGLFRxGgxB
Ho2hOUX/gAoDcDuhXv/jNAPUrF1yx+7E536E+Ny1iM+d38JoeA3ZF7LxjO5c
vdsX8D7uMERO7VnE/lN1YhTSGq2jhYXCFPJmoyV3dvbkuLmimBf4MbeuZnj9
C9jKJ3cUubP+gCmVBK3vpJc5KYYvz34nc2gt9aUruR3cjxxaqk+VAnJpv8zT
cI921dwAd2h7KC24S1O3ssM9mv+MyDbjnBRw4+ZtSIpKhSn0KurIowVFCHUi
h1ZcFumKXNoHNQru0Z4S66AvsQ4eINZBe2IdHNy/tA5GEuugKOsg7tDM+/Vi
kUs7IiKNe7QTocKsyJtZD13wQf5sl1EO7s5aIwpwb8Ym1VuJ/Nk6IU7cnaUQ
45OS/zt+i3hOumblc1IrhXTk0JgDWtm/2qcCBhk53KPNG3a0/tgVCX/bRz/h
aQ0H1x6+0EYe7Yy1Cj9yaA2vD1Qhl1Ytvw/3aJpqVp+QD/l+xkwGeZHth/hw
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{1, 3}, {1, 3}, {0.10750120978760211`, 0.49999999996198685`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.766180147017871*^9, {3.7661801793610287`*^9, 3.7661802450475674`*^9}, 
   3.766236469782324*^9, 3.766270320193909*^9, 3.7663426875203*^9, 
   3.767890773156741*^9, 3.7681207327299185`*^9, 3.7681700095342035`*^9, 
   3.7682082033396816`*^9, 3.7682101917282314`*^9, 3.768215763848752*^9, 
   3.7683189912395697`*^9, 3.76839264892004*^9, 3.768406457205928*^9, 
   3.768406843057302*^9, 3.768407762833296*^9, 3.768472870439372*^9, 
   3.7685021959307175`*^9, 3.7685028039943447`*^9, 3.768548409512904*^9, 
   3.7686608798345947`*^9, 3.7686614537976108`*^9, 3.7686719267882724`*^9, 
   3.768734282236739*^9, 3.768735289446436*^9, 3.7687494009910955`*^9, 
   3.768759127154922*^9, 3.7687594332646036`*^9, 3.768856275305425*^9, 
   3.769090892903138*^9, 3.769101582244976*^9, 3.769159863370316*^9, 
   3.7691758907024508`*^9, 3.7692676438659954`*^9, 3.7692757665067015`*^9, 
   3.7693722318977127`*^9, 3.7693725051660633`*^9, 3.7694256964486156`*^9, 
   3.7695301542589073`*^9, 3.769608605995675*^9, 3.7698022662372675`*^9, 
   3.769806749401699*^9, 3.769949484863166*^9, 3.7701896238135014`*^9, 
   3.770194413278102*^9, 3.7704637446386623`*^9, 3.7716124824424715`*^9, 
   3.7716698033756137`*^9, 3.771687788551779*^9, 3.771691160884246*^9, 
   3.771691289683034*^9, 3.771834514030554*^9, 3.7720968748082657`*^9, 
   3.772198206038004*^9, 3.7724424119036484`*^9, 3.772462217818895*^9, 
   3.772481644210293*^9, 3.7725320138312964`*^9, 3.772787376387904*^9, 
   3.773074353672333*^9, 3.773316758766616*^9, 3.7733287897709723`*^9, 
   3.7733456319657364`*^9, 3.774372732192253*^9, 3.7743732945598445`*^9, 
   3.7752337698493223`*^9, 3.7756419656050086`*^9, 3.77564672918336*^9, 
   3.7757274047079926`*^9, 3.7759119325894747`*^9, 3.7760680835864267`*^9, 
   3.7769724124252915`*^9, 3.7770265095291033`*^9, 3.777361431440895*^9, 
   3.780253729754486*^9, 3.7802551984926014`*^9, 3.7802555331006002`*^9, 
   3.780259269196145*^9, 3.785864302626234*^9, 3.7870731275726304`*^9, 
   3.788439969496624*^9, 3.788983376201088*^9, 3.7894590784302483`*^9, 
   3.789459195374857*^9, 3.7903202178279996`*^9, 3.791325025162355*^9, 
   3.7913258982387094`*^9, 3.791484371709858*^9, 3.792143213043106*^9, 
   3.7921863225727587`*^9, 3.7959582067967615`*^9, 3.796070493224166*^9, 
   3.796115569000312*^9, 3.7961274119362783`*^9, 3.796222041377282*^9, 
   3.7963014474502473`*^9, 3.7963163732042675`*^9, 3.7964204031399317`*^9, 
   3.7964221083343215`*^9, 3.7964224607790685`*^9, 3.7965689301458693`*^9, 
   3.796568976848172*^9, 3.796663730563707*^9, 3.7969293566753273`*^9, 
   3.79692949183422*^9, 
   3.797098713278841*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzFvQm4LldVJlzWrqpvOsO9uUluhps7nHMBAQUfjo02rY2CCgJhjDKLDAZQ
UAQFaQQVRZRBZVSkkRAQkjAFFJFJwhAmM8/JvRluomj/tv5t09rQ3Xq61rjX
3rV2ne8m3U/nSZ1zbg1fVe31rrXe9e5V9Z359F94zk89/+m/8NxnPv3gQ174
9Bc857nPfNHBH/m5F/arwrdV1bc9p1/2H6zg7+2qkh/b/f/bz4UfsOb4/v5r
+BWqs88+O+AK/BP/0n+9hPb8K/zVJtthgX83I9teTIf/rfPx9c6HfR1+1bCm
/b92jrt4Z3EIO/3rJWakx66g1iOeOjgiN0X5U57y//bYf4JfjQ6A+QD4PWY3
/oBvqJGD/tUtZXj+gP+iV9DoYRPnZpp8uP9eVzS8Q3YW3PZ82vnvip9Npux/
eiP40wacuGXVOVX/9/NyxK/SX/Bf0NNETKdnYX++Q8/i7TSNn9jf79WHKoof
23EA0v2fQx96TC9pTT+Ajg/4CXKIF0L4I27R64of0Tkf4V3Fs+kjjupVrOtH
zPgjBkbO1tFf1QXwqy2NDv5rQ6G0lp6lP+Ka4zjV+51NY0jerwO0S887hfO2
5rxirlqHIkMGn/wDJdtn607Tz9nNW7e2tugs/bBO4OfEOX3u5rA8i878weMM
Iafqbe9O0N6fHi4FfiPS5sd3GR9yNtVq2VP0tk/QkwZGkpwVllVr8mvIW7yw
8kyDrsJ9ts5hJ436avT+li8NLgEvr/+9tuR4PNOgMeaoxtx7/9ee9FSBP1vO
BcsCfvaXea2Ox7Xl8XgGnfTLetLsBK1zgin8bJ0TeLh9Op3gYr2DE9O4NHNO
0MDPKX5soyfgk3g3wef4vN5E5mon8DHiLbDU8HPBp7Mn75eFf+pW7cGj9lk9
oRddYujDc63bG+UPpRO1yYnErb3BfBqd9zM6mHvTc2TjKE4hHwu/V7JT4vrr
yvbjU35SbzWektFuBg4/bcXCw97tjNfB6eAUsI3+FdQxSs7xE3QZf+5cRl3C
KcbDiXMhHfys4cw1XwSeqr8QWGrnkjzUMS/5mF6Sl1NPSC9zUkL7wrlM9OGg
lynXZa912eHja/0TBY53QxlgPc/EzLqaX6tcCF5ms+RlelfAHPFCHdLTHM9d
ya/rWoyx6LFwGkG0XFC35AV56H+yyVE4bqfzTpp8C262qrbDfad4via5Bty2
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
u58J\
\>"]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getIncNpcDist", "[", 
    RowBox[{"a_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"orbit", ",", "normals", ",", "inc", ",", "npc", ",", "feu"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"orbit", ",", "normals"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"inc", "=", 
       RowBox[{"radiusIncenter", "[", 
        RowBox[{"orbit", ",", "normals"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"npc", "=", 
       RowBox[{"radiusNPC", "[", 
        RowBox[{"orbit", ",", "normals"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"feu", "=", 
       RowBox[{"getFeuerbachpoint", "[", 
        RowBox[{
         RowBox[{"npc", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"inc", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"inc", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"magn", "[", 
       RowBox[{
        RowBox[{"inc", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", "feu"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getFeuNpcDist", "[", 
   RowBox[{"a_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"orbit", ",", "normals", ",", "inc", ",", "npc", ",", "feu"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"orbit", ",", "normals"}], "}"}], "=", 
      RowBox[{"orbitNormals", "[", 
       RowBox[{"a", ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"inc", "=", 
      RowBox[{"radiusIncenter", "[", 
       RowBox[{"orbit", ",", "normals"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"npc", "=", 
      RowBox[{"radiusNPC", "[", 
       RowBox[{"orbit", ",", "normals"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"feu", "=", 
      RowBox[{"getFeuerbachpoint", "[", 
       RowBox[{
        RowBox[{"npc", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"inc", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"inc", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"magn", "[", 
      RowBox[{
       RowBox[{"npc", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "-", "feu"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.765927859661073*^9, 3.7659279286814213`*^9}, {
  3.7659280555676126`*^9, 3.765928086358117*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"getFeuNpcDist", "[", 
      RowBox[{"1.5", ",", "t"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"getIncNpcDist", "[", 
      RowBox[{"1.5", ",", "t"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7659279043184395`*^9, 3.765927950268259*^9}, {
  3.765928089468728*^9, 3.765928108091926*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
jfbXEg7ilquF+wJPG4rQASV/as0P1EJckt6Cl+hAzc/LMs/XQnyeUNgDdPCn
e8e4g2thIibeMgQdouGebP6kFuaMb0U7oUMLDfozymqh0St3nQk6jMgocPfU
gtXN6pWK6LITPqrp9Dq47JzqswitfX/g96EldWAnLGlO4fMt/3XYj7a2Dpw6
12Xkoc2qtgtzbquDvmfBxwPQXW9FU+c16+DRKacZAzRHTFPFrFUd6J9LkfiG
7zvM943FjHsd1FhxvYtEiznGDk4F1sH4Gc7z+9HbDxwWmnhaBwLp58UzcX19
3r49eSy/DkaXqygfQ5tIiSqPVuHnR526wYN24Gw6MjxYB7/5evv1cL2m5B56
0K9QD/seN/3KxPW/7bGKYt+eeiDtzhkEXRQlUtJjUg9JJ7ZxVuN++WXf2NPt
Vg8fy7r1fuD+El53aEtbXj183RwRXYv786GgStGvynpYvKvJTRO9ZX6ZSevP
ehAppNa/vsUC3Zbv7i3/6sF6cotABO7v6xFmH75qNICfpvSq1bj/ha4qG305
2AB97wwdPLFeJNku66y3bABVUtr0NQzrp9Z3nlr/BvjJL7vC+yYLRmZN9csr
GiCl551FNtaf0zamre+Mv4Bd68n5hOssGDJTcig48wU4OWK31vjh+tMU5sx3
+QJrNFsW//NlQfzqb+ve3P4C+1Uuj5phvav/ZmKX3fIFZv3phwexHhINk5mU
01/B/Y/u9nw3Fkwuk1Hxc/4KIqsXGvx0ZUFW/4zzCd+v4HurvHHGhQWSMY/6
RB5+hTWnLporYz2m9/xtDmz/CsqfaO1xDvh+bka+OX/yGzBTD7xdc44Fes01
rpuPfweDsv6vRw5jPXLUGXp1pAniB65n5SmzYM1IxArqfBNc0l9TGKHEgm7X
Js1lXk2w3rfxoRWeZ46e1nFu95qgSv/iX0EFXP/+NzRUOptgcbnJYWs8H3MS
C6Pf2DWD1p6GQsF1LFhYvmNHvncL/LRWt/cXZMF7CVnfj49/wua/Sofr/1Aw
Xb3TPun1Txi2dmr5hOezkseBwz6lP+Ehc1Yyt5+C5w12m0nvT3DfESCQ1EtB
gl9Gywe5Vvg5uu+eZzcFl7q3KX7IaQXPBascjrZSoPgEut4V/oKJhPNRldUU
XDA1rL3b8Atsro7+bqmi4Cnnqbwrnb/gypvYLf2VFEia+0aocf+G1Qub2hZV
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
9FFgWzaQu+ksk9h+T1My7cB+OVyYxunKJHPNU517GihoFbO+nRrNJFna1y7H
51Bgtl61++dtJpHZYHguCvuTuk2C24Ti8HrrW0rCMigo2p1f73WXScSTO87F
PKMg7eRifuMUJumZiw389YgCCZuuowFpTBJV9kn63wPs153ePi14yiQ7hbLP
rU3Cfsr3jLZ0Bj4PGZmz3okUOCfn+s3mMkkH56zutRgK+p+HNmzNY5ID+W4c
DbcosHx1SsK6gElSMhZc2hBFwaHPfB/qPzKJoOtztT9h+H16TkynlDPJZXmd
+krs914PbdP5Wckk55remplhPyg/xRsrWMMkg6WRaT03sB9e8FLJq4FJIk71
blzvx54nMJ2MfjBJW+u7Xo6rFPhsa/3g38okq5c9XVSN/ei0avaigt9Mkrtq
T/cDTwoG9CyeS3UxiW9vF78V9rdWZltnjlJMUtl5JtL0EuaP4zz7I3uYpKzG
ZYO+O/bzDpmsmQEmGcja/dcc++cDl24ob/2PSbpFwvUdsN8u9jG/YTXMJNS7
uGU3L1KQG8m1tn6MSfyfe2/vxv59S3yzE88kk7wfeZq7Gv304YuPu6aZJLhc
9s8Z7PcTcw4fT/nHJHLC+QW8Dti/FWxK/8HBS27pX3a1xfwQVkybFaDzki1d
HRLs348xqxv3a3HzEr9YmVpd9LVvz+M8Gbxk0DghqArzy3TrtZ5MXl4So/zU
wgztQpmpUHy8hPNHm3Ef5qM/gxv9Vy7iJfdSu10D0VYTHN8MBXiJlvGlmi3o
tvlva/2FeInGNUfLTsxvR5jPnPOX8hLNyILdSex8KuBTOLQM/7z3yTPWaN3l
pgJSy/H+Jlwat7PnCxKyJ46u5CU8AVL3l6J3y86nR4jzEqmJl+/Yef6NwtfZ
ktW85GypsxI7P2/d9eTAjAQvKfv////pf8NhJvg=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
nl31C6qMH/W+8abA5KFCbAvmLSXGAX0DbhQw2pIdsy9QcOSfrtdJ9Md1G7c+
8qLgFC29tP48zmeOSsXhQLyPL4uDCs9R8KdTY7wuhQJTGd6aRBecPxWDfaX9
mMe43/YNwvwos/Lc8DsHFkQ4JMb8OUXBf5Jjn8JdWVA1OMO6hF5+4qLfeQ8W
SDBVOujoG6Oey5QDWLA26cW6lTYUGC311Ul5wYKdes4lNicwf7F/+Ci2hwVv
LHUNBDE/k+L7tCvYtg2M9p+J6j9MwbfVl/gWO7fBV7UPVv7oQO0tRU/d2+B0
cRfXGjSPX4pehl8bXOK2+muD+WHPvCdGP5La4EdIxOnfmD++E/Y+uvRvGzQ3
mcbLYr55Vmm7TPx4G3wcmfKuMKZAwXi8bT1XO0Rxh6hfQkfdc7YFkXageIP0
64xw/BLHHE+otEPCwYy+EEPO+Hdefu7eDvGpNm+3Yn47T3NGQ+lqO2y2iXYa
wny4wOrD7Ae/dijapEp7id4areRTFtEOfctkP0mjl8vK+g9ktYPIGyMHif0U
1Gu16rkXtMPff99Gvu+jIPRkpCBXRTsY+nUfuo/mixcNFmltB3lVzYTF6P41
tAebuTpAunrqsALm4wl7cw5/YnbAZZODUYOYrx+zv7xEW6QDDKtk3r9H1yUN
Rx2S7YCrVT72e9Ef13fEeezugLn3bz+dw/z/lkph+he/Dth5KzV/COuFHzqX
dTODO6CdmbC0GL3KUol6/bADap2j1kaj825ECUU/7wCBkvnWBujZ726nrxR3
gMXpXXKZWI8c6Fs3d766A2T3h4mFoR/PssLP1HfAtbU1GWfR6mv08y16OsCe
dZGmiL5wUW65OrMTjlnvbU7CeqfwTvMbJeFO2L2iUPsOWuxp6L61kp1wSnbE
2gmdXjJ7UVK+E2yP5d3fjB5Y8rNuTKcTvou5S5ZgPaW58a7DgEEn8OZRHa/R
d3bt4u461AnVJ2MtHqAVzrze8N2uE3Yc8dI+jbb9dMs/41Yn0F28+UTRb2s0
pV8GdULg9ueSs1jP8XYNv3v2oBPCp97U9qGfzT/WEZLYCWynzG1f0UOyEpf9
X3fCNKnofIMmauUi1953grouj1ocuvXoVjhb1AlnTfmKbqDXnx/4blfVCSMv
B3gvoD394s4c/dkJU9SGLjv0kjThSP3uTvD92xV8AG1f+HWT9l/0dfcjO9GZ
DZ5FmuOdoOwUnL8FbcbTO6LI6ILgU/4e0uh4iejbqxZ0QflX768S6BEFU9ml
i7rgk8K6dCH0LhD4sHBFF7AYEpp86NCDuQYCa7rAPqjUdgbrY5adexfPxi7I
eVW7YQy9yXP9lUnVLhgUzgz7i/YObl/4b0cX8EvzPuxFV8ZFJPVqd0EAnWzt
QC/7YLCTpd8Ftakj53+hz1Tw1debdcH5yqQDnPo8i5XlVG2N463ry/2Jnjfm
wlds2wXakxo139BH5sk/znHqgu5day9z6vvny1uV31/ogqMeajnV6DHlsJJX
Xl3gp/T3MacfsEdH71iCbxdYFv9cyLHBoM1Pt8AuOOaVJsPxkQhv/T33u2BK
tjWX45NakYViT7rA+vrvYc71HH+/0eiI74LrxO495/fcw6oyMlK6wLy6VeA7
+ppmn8L1t13Q4/VrkDPe2128z4w/dcEB57FTnPsJD1qxWLawC4Yepzpw7jd6
q3rwUHkXuDZHzrZz+g0sE0buty6oad4pw5mvjABnr+DmLvCRV64dQH9SCRg9
2tEF++QmhEfRRc1xZzb2d4HvEumWKXTNzZz22eEu6F2jqkrD9er8OVITReuG
BHfLuwvRf68u0HUU6IZfx24ELEWz1yp80VjYDSPpJaJyaCHPo6+aZLthMqox
j9PfWLTaY/VLhW74MZHduwctUxn22EO5G/Zq9UUYobdIlwYs1uqGOkHjMAc0
lHRw9+p2w4DfsxZ3tK7r3MVMo25w+m3/6ibaqmCz3aHj3eBp79fxDH3zdPSu
8KvdsHLD+vvt6CCRjx9t/LpBxtJ6/ig64uM3pc3B3bA/0nweA/dbiuA86bro
brgk13JbEf099fy0cE43CBatfs7pl/w6EnSO+toNHWvLlO6he3mS+l5XdoPt
yjvbX6BnTH7V67d2w5djfhU/0KvZum/vzHRDitKVVjU8HzY+s1G05OuBkrei
lkbobfu8Y9cJ9UAGETX7D30g6k1I6dIeuGNy4VMM2m3nCiemRg/MD27bL4Ln
U6H/iNwNjx6QLquk83POR37d8BmfHhBxVe5RRHf5R9Hcb/fAhU36B43QzABt
yv5xD3yIMy54hNYLeBhh8LkHNrSIcqvp4H4J0BCU4ukFSM067ovnb+u8EI+w
eb1wTmvew3T034DOHqGFvXDAPUn/F1r4dmAh16pe0P3qp66O5/fB25RX155e
MFl9fHoUXX/7xlCafy/8bhyPv4HxoUeg4ei60F7YoXryUSaafXt9ZVxkL3jJ
VTP+oJfc+ZH04GUvvPtmvesQxh/LO/I2Vyp64fHmNVuUMD6x7pT/2CvSB8yG
+z6TGN/67opl/3rYBz4+Ll9bMT4Gc5+cK4rpA72DjEVLMZ6quqVppT7vA7lu
25wjaB9L/ZKrmX2gOJ0u/gO9eJ3fD5n6PpDQ+1ZWa0LB3uKpwZOLfoPQk2Ps
JjOMXzztq3vCf8NT6RR1BQsKjrunBQ2G9oNMiHdHFOYL8/O2lfo86oeEh4Un
R9AfBfN4xeP6wd7Ke+0+zC9En9Ve2va2H3JMN/uy0QXlwyd9fvaDmO+M2xE7
CuRlVbeKLf0Dt48mf1ztgPNb/pFSi/8DoU5VWv3OFFyRLVDyfj8AJuWXL4l7
UrBh9soYj/0gsM5fkruN+VqR1eFhaZshGPhS4Mz1igKlJ44/r5z/B09mXliN
FlGw2yjX/K3rMDg3WttGtFIQdvu/zTT3YRC3dagbQ7cXis83ujwMibE6C01+
4fyoO+T2Xx+GJbE3582nKMhduVB+VfgwBNhfrfZmUbBjzGY09P0whPnG+5p3
YP7wiBl8dnoYbLnkmb97KVjXaVC4zncEYvKTnc6M4PrbKwadChiBp3MGR7PQ
vgPMI9GBI/Du5olF80YpoMZz+0UfjMBAkExLAjps3maxycQRULwr97FljILp
jZIni0tGoEGr8R5h4/PpQXGdEhqF/GfpjxpmKLg8l136RGQUzOy85GRmcT5v
RITVi48C7bjLudNon7vG8vuXj0Lo540Hx9BqMQUGKhtH4dl/ZasXcGG9Uvj8
CbfRKJy4NTm6GfN/V2EXjSdho/DTbxUY0lnQF1h6NujhKPgbNt+4jT4htCr+
6uNR6DApDP6KNpr3U+hk3ChoqXya3M7A+olX89eaN6Ow9oCe2ComCwbGmT5p
daPAMHLT7uVngcOvmKIC0TFotLz3TxvrmTaryam3EmPAZfK0zANt3nxwU+KS
MTh+6bXdK7RuAz3CX3YMfB479YhhPSRfd8ZBX3kMFI//5f+F7vq6VajeaAzO
HVn6wU6YBSdfVRv/Dh6D98fTNuphfWUtWeSjFD4GV5R8By+hzX0+pbtHjMHV
IA/bF2hDsyRR3mdjIFVi7cIQY4HG7PXapRljEHL6NNcXtJi+mrH+9zGYO584
IIv13ILM9T5hDXg92Y1jB9DzZFelN7aMQfsGq7SLaK4xYVG7Lhz/+EGtCnR/
VF+N9/gYuMbrlbtivVjwJ8oobfE4ZDo3Ob7GejLnUNi18WXjIJRQEP8d/TE3
IE1Tdhz2NvEFT6FTw91FShXGodVD67I21qOPNY1q2raPQ4713aR6tNtdXiMx
63EIpm23HMD6VW79f4buz8bBsHH1vVasd/uDW/vOJ4zDy79iYmx0+ojRTdek
cbh728NgIdbLmtlbPzqmj8PxRZdHtdEm++irbPLGITtDbCYJfc3+6bhh2zg8
ilo3dArrb+0KsVD9rnEw33dEzBMtqOSnuL9vHCaajYdC0A8nnI7r/BsHYbPr
9dnoV7c0yjR5JkBjwzfzBVjPN8f/fKIgOwHcVi5rEtHP+Pdtk5ebgNTr0u2Z
nP6S4+e61QoT4OUtfLgUPbw5nimjjN+/GubYj55X4Oq6SGsChvWstddLs6B6
TZeguPYE/GrbXaaBvn/7SKKo3gTohinz70fLHCTNQsYTIPWRmWrP6T+0CWnz
nsDrKf55/hQ9u+caxW07AcmVh0dfoQtejHjM2U/An4SIySy0gUvT60mXCfA3
v7HxO9qW68XioWsTEGBsq8XpVynaLH0zcHMCKva3myxADxUF6ff7TwDbUUB6
CaefFHThenfIBMic1aM2oO8t3/2n5ekE7D/MYJqi35X3uhfFT0Cz1ZMMK3Sj
RxBP2osJCG+6ucQWLf2zcdGNtAl4ort1yQX0rptXnzm+nYBVt6bTOf0uWxW5
9Yc+TID6TxrjJjo5yEVLIXcCZnyrqFB0leaiioWFExC5JNA2Av3vd/ahmeIJ
qJS/kRiN3raX6VhdPQG7zAUtXqItx1LGP3ybgG0PIypSOf2tuIM+sfUTIO9r
MvUW/ZUr+sEFagISOvT8ctC9r3bLHuuYAG8zn+58tKBVX7JuzwTQL//i5vTT
NgkEq6n0T8Bc5LGfZeiDH7bkLR2cgBYp3tNVnH6dXdN++sgEzL9anFGLjhS/
9vPv+ARk2iZ/5PTDPuXLnWiYmoDG268869GUS3l/3twE7CiuYDeiadKu7sk0
NviL8Ctz+mlylYt47jPYsNTj6OpfaD3PT3e8BdigplRdR6EdFU4usl/Ahm4f
c01OPy64nvnMeCEb5tXPHG9Hv/F9paixiA3a7z7s5PTzfm42eb9aig2ML3eb
OZ5sY+9csIINCW8uKXP6e8tCossnZNmw4eyVXRwT2HOoTY4NV38/XMCxzZ8+
VpkCGw5olN/nfP/Wo+AzbzewYUn4ogbO7yXpqo4/UWbDjj2Xf3DGUznedM1P
lQ05meOBnP7iUPw1QVd1NsRcvMvDGb+YyZoHFjvYcFdBU6kVrcZTIbNHiw0L
QxhSnP6keapr8gZtNty7/SenAX3FWlJNUo8NChKDK36iYwQ/53Lrs6FZV3j7
N3T+x5P7fxuxwcbSQKQG3XWa/+c3UzY4xrx6VoFeX2jSn2jFBt0HdWOFaMNz
kxdCjrPBzvvxh1xO/1UmhvvyKTb40u6ocfqTH6/8ltB3ZMN/t7psMtAt60Ke
qrmwYfKZqdgrNFejqqKMG95v6LAXpx+rreqzc8STDU+PFd58jLbvWFPecpUN
u7RmZe5z+pmhFWZFN9gQOO18KQhdNyB5JvIOG7Zq8ptfQx9LfH2fPGbDLaHT
bcfR9J3/lnrHsOHDwWWPD6NTGjfHfopjA0zP8hpw1k/o42v1FDYI3zTvUEeH
nS8o3vyZDbwvuBrno9XnMwzO5bFhaFmCEA3NStT9nvaVDRZyzwbHcP9vaKpk
bahiQyTPu4IWdPHOhkl5ig2/pGfjEzn97Capa3YdbKAZM00j0OJu1oyEHhyP
blQGpx9+4nn7wpVDbHgWfcP7DHp6/oDiMp5JeLNx2UFF9KZmnqMiqybBrv3R
4GM873647ek0kJ+E9iKhx/7oKwv8/gtUnITGgeBxN3SpltBFgS2TICv77/MB
tM2LRSF82pPg9Ek9mM05jy8o5rPtJkGEtkNbC71D2Fl365lJsJhMHl+L7nyR
VnXh7CRk/W06IoJWblFtHr44CcXMl5t+4flfvmvn6B//Sfik4bzWHc0lYram
7eUkmHUuP/gQ44lLnLhk/etJiHQTF7qCblP7zqzMmASJ+Dyf4+gCa5O+D1mT
cF/I5elatH+ycUpI2STYTrilvJNigeheA5WdvyfBwGCPQAHGr1XeeyFGYQq4
s7w0kzH+hYsyN93fMAXdTt23/ND0hCLpO8pTcH17fpANuqdcm+ei+hRc/L6w
XgqdsmRPoYHeFNh2tey/hfFW9d3OfXP2U5CmH/vdCOOx7h/1Q9YvpuCh78/W
t5y//5x5sOtFyhQsk5jR8UUr/x7eOJI2BRqnwk+ZoZf0JjMDPk7B47Drn0dF
MZ52LP/4tmwKopes7uP8fSm4mWeZ0MAUSH24ARGYf/woK23LUp6G6+vmxylj
/lKqt6aKrjYNgX7tVWxBjPcl17OMtk/D3OekjC/o50UaYd27pqHqQEDsAbRH
/qs9C02nYeD3xBobATxfskKfO7hPQ8jRq7+uY/5kk2TutDh7Gs7a/RkK5MP4
ca5Xz/DLNMwPMQvURzM1L665VTANJTmHe4XQyVXh1Ej5NEy8TW+6zcuCkZFq
4+qWaRhUCX57g8aC66CjdmtuGr4XSVo5cGM8/qbCNao1A+mPbl6hY37JmhUM
rS6ZgSWux+MDhimgf50xOVE4C/yeNvGRmC/POa6dU/4xBys1jgeZYr5tWKC7
ytmBi+w7NMYv8poCo2V7q7S6uYhJv+WrnPsUZHe1/3nrxE2cggbHRK5g/l77
2Pn1WW5yWDbm4lvM72s/mw49d+UmQTQRqSPonvtFI48ucJOPB5/nx1ymQEzn
5dQ1L25C31WXouRBwZlEV379QG6yMqxPzdydgqWnuVd3pXAT6mt4VrEL5se9
yy0l/nCT7iSF9k1Yb+zdl2Ch/pebfF7q977eFq+Xst7CeoibjH40qLqKfnVW
wzxhlJusf6BUVnOKk58fOaw6y03kbzbyuGN9s4cebmK2gIcIu9t1Vx6nYMFK
gQP3lXjI9LdLkGlJQfON0P0fVXjIWclrt+zRz7sW72/dwkMCiuetkkJrJcnv
k1PnIUtP1Vt6Yz11Xklb950WD1m9qLJ5nzkFDXBtz4+DPOTZ0JnQ0UMUxFqO
a0pc4CH0a3vygrBeM9n+6Z/4RR5SWeKxzAhNX3I9UdyDhwyfFagVRTv8nC8i
7sVDmnVX6D7AelDZWK5joS8PqTfS8IwzoiBPxzRA5D4PSWFLHas2wN+XkwKR
hzzELina/wFajo81LBzJQ1aWCYsdRQfknbESfsJD5O7HHfiL9aax5o1NCxLw
80H2MTF0m3LGD8F3PEQie/acC9arYSKXbgtm8hCDxX87d6C1B3cQwY885F6x
9xdBdFJK6QuBzzwkodg17QXWu67ybZ7zvuJ8vt8W3KNHAfdykZXMHzyk7K/z
Kw+sn9Onf/xk1PMQo2sVHfpom6bHdxiNPKRpXcTtlejih/Jj9FYeErXTRbES
6/HghaSEr4uHLMnvLJZHS/M7O9PGeEhwtmzTMNb73EL6S9njPERpcyh/NbpN
eH3JAJuH8K6IfZmMjpX8Lds4w0PED/vut0PLydv9SOWjkel7R+e37aGAoah9
PYFBI/33u7ty0T0bV296zE8jo+wy1WfoF2rt/reEaESo/tYOG7SizlFNa3Ea
sXjdOvlnNwVC+3b0HVxEI3Qty0c1nP6o/rIHuotppMXn37u36NdmTYObl9FI
obnOcW+0su2hOIHVNGKukxDEef9E1EHViHsNjdismRHnQg87is+OydPI85Vr
pXp2UfDGre5QmyKNfLZtjf2AVrtpIPBhM43A6cqsE2hJ/w2Zr1RpZPJh6x59
9MQdoVNxW2nklpi3sTrn/Zewss9BGjSSVXtgdCE68mHSfzd30Ei4g8MdbvTl
x/6SlwmNLB8bTvyrRYFGnI6r7W4aMZle61SBXvZcboWlNo1ssChY/Ak9+5Kv
3GgvjdSeS9yXgs7JyF+tuZ9GDlOyu4PQWvnQsNCERhqru8OOoFcWLfflN6OR
vVG53pz+Km/ZjPLcIRq5s+nhCKe/WlibdafPgkaMaGJeiuiEH5HbKCsakd8Q
f08W7dt4qev7URoxHJm3hfP+0N42NZJ7kka0xhWWMdFruyT+vDuFv7e92oYL
Pa9vNCLZDse3VlqdvZOCvj/ftJ/Z00jpaFDUP3TZUMbwg/9oJC0jLKgfnTwa
GnPXkUa+msQKd6PvsF0OXHemkVcJm2TaOP3KGcPJiy64fsZpuS1ofe5NiU7n
aORfc8S/BvSgR0tNoBuNCMy8P/8DfW8kYPqVO43cftX4tA6t6rR1TdUlGsng
u+9Rg67v7jT6e5lG3JuvzHH6ox7H73ku8KKRmurVShwvbSKJG6/i87ZLRpjj
zyYDNQY+eP8mtCiOj1c+mna+QSMXO6zrOf1U3r26a4J9acQ3+Gsep5+akDtm
lOqH308rt+T0U/duj/OsDqCRnkO0xHrOfLwxShy8QyMD+tNPmzn3u2GuRjiI
RngldPVZ6I3Pk6c3hdAIRXkkd6FrZczXGN3D64fLfuLM1/lHDGOXcBqxL62+
OoyWEH/rGfKARjYXiE9Moj8EnkhMi8D1O39tJad/askUrq15hL/vFksT5Dw/
1z5ND0XRSJmQQIQ4OmbKYY1oDI2cltPpWMF5ftwkjZWf0YiqQVenAvrW6XOJ
rgk0snKr7/xdaIU26drQ5zSSrf5M1RBdblE5nZ5EI5KVhxZZo4UN1hoPv6KR
Yw25vJ7o9OIfngvTaKT6ZKDoHbSp1o1ElQwa+R29qukxOnLLr+lz72nkRXTD
ky+c5//1nTVhH2ikd07wUR36l7y68ZssGjHQVjHpRq9aGp44kkMj8557zgnj
/vkarlUrlkcj72JS/8mhTy8YnN5cQCOyW9hxmpx+K88+Y7diGgk507HXEW3o
OeEZXkojf6h7233R/0bjE9+W00h+oMvfaLRqL9fMaDU+HwfKHn9Hf6l6l3ih
gUY0008s1cPz4YSuTe39JhpRFPgnZ4/mzReZedeC9ydQPOaH1n13xnicRSO0
T3t7OO+z1T6WnXHvo5H6u1ekD+P51WkfaHxpikZ2mnoYP8Tz8MwxD2W3GRqp
mm858wU9YmYr6jKH638wz7wPzbt7R+1pGi8xKXiwAXQokF0+YHRYgJe8P/N0
9xD6WO0BIzUpXnLRsuGSO57fPcXblFSW8RLVZZIXX6Kdc1aLbFzBS9pPeWyg
0F7JM9VyK3nJ59/jBfswPkT5phhKrOMlziWVT9dh/GhUFzIcVecl+tH/js4/
gPerxN44pMFLnNZ38umj+9Z0LvizA78fVnc6EM0W+1TVocVLVt7/aCuC8Uvy
7xmDb3q8RHzlYj1pjHemseX6Gea85JztbNdxjJfVAncOuHjwkre06lk3MwoW
X9R++cCTlwwp1Ep8R5/o4OL/7MVLXGT8xbZgvB7NdiuYd52XrJN9nzuOXuJ0
dHvcbV4yb3hB960jFJyqVl778zEvEbr17UId5gOTYQ28mjn471N7ZxdhfrGb
O+zEyVycH+Mdw/fQdx31v/jn8xLLDslKYcxHpLXzL/8o4iW6B2pUhTBf2TOe
/M+5mpcwlxRXCZ/G+HfkKvWMxUtkGSVDWmcoWL18TTaTl48csVnVauhGwZPX
kyKr6XykfNs2iy60xM5Ku51MPqIyeSTZ8wLmEzZuCz0E+cj27Kjil5hPdb3I
d/gtxkcWXHdpWIj5VsKWY4srV/MR6yfJNfO8KZA/EHHhng4fURuz/Bvoj/vN
U0Bp+W0+ovtUfff7GAr8ApZpSNzlIz1CYumOT/F5erhRZ34QH7EUbni06hnu
57cHrWZD+UhflEnLvVgKxP8+8m+N5CPfzbUG3BMo4Dqh2PYkiY8MSn3tMUmm
4KfOgXsrSvlIy/F5m8wyKbixMGhUmp9OAlxXv+Kpwfj9wNlrlwCdSNj09jeg
86QMGbZCdHKt8ZFUWi1eb5XI4pcidNJt9nrb0W8UeG6+p7FlCZ147ksQ/PiT
AjfTB9d119FJ7CPzQNtWCmwfRIu4HqCTte6Rk56/KbgpdTUyzIBOpGeTFfT6
KYiLPrbyvRGdeOk2fZb4g/lEosyWaVM62ZbsOJcyQIF1ZuxhX2s6iY6yNf42
RIFZQ2J0pDOd3Hn4NmFqnAIdqdT1+SF0UpQbsCMQ8/H9S6v+y71HJ96yEZQS
5uuGywZe5ITTSW9JovU39OEVinLZEXQyxhvaKE5ngcPK58vfPqUTg45arQAm
1svrYhYkptFJ+DLjfZux/ghWzDkQn0Enl/07tPLR4etbb8e+pRPfBXN5hvNZ
8GTjUmbMBzrZUaCiY7eABa9VHnJF5NJJ4auzRddEWFC7PXgooIZOVt+2qbcT
x/pG4/VG/zo6OfewtagZ3aRZ6XjrO/7+i5RuA6yvOkCw73oDztfzyqebsP4a
3eXX5snCzw9pn2jC+mxyd6L05XYcz6841Z2LOf23r9aXOumE/7XS/Hg0fS9v
k1svnZyUW5dqi/Wg5P6rdU5DeL0bzdI1WC8uPRAt4jhMJ2Yxw85yWE/K6H82
+G+UTjbHU2GX0AqG02V2bDoRuhOpuxjr1Q1GUvNsp+hkldCSylNoZWP1vTYz
OD/q30VS0dtNLhYc42aQYYVLXzSx/iWmD3iO0hgkwXm19DX0brN3xIqPQYaG
w+Tz0PsPj2Qf4WcQqR22yzSx3jY8snDqkACDbLSKn72ANjVX3mYmxCBZjJOu
r9DWlmffGoswCP/2XVPiWN+H+Dz/rb2QQVQuVS/ew+k3PqdktoszyKdt9EoX
9Hil5OGNixjEtz9P9DFaYdQwcOViBikO6WvLR1tJ+RcskmKQIIbdtl508M7c
SYFlDOJwRF5EUAavZ8fexLWCQbqFV59SRI/fVbIbkcbPb5lv0kMrvLGP6pFl
kNKtFY6n0NaYdjSvYpD1i/wlvdAhXI38NXIM0kA9Xcd5f65ATpQUyjPIuJvK
s0TO9fbrXfigwCAKm064Z3Kud84nOUWRQbZoWCR8RVtFfGx7uoFBbP+ZKHD6
ecE5/yTvb2IQaZWgWU6/Lr9TwSBAmUF48w4u5/S3xgRO3vTazCAkbuwGpz+2
VvlRlqsqg9h5/VjP6Z9ZHq4bst3KIJ0jlmKcflmQl4C8hTqD+AvOqXD6X3lx
u6wNNBjk3B1Nvx+c65VeDtu1g0FkTsQLlnOuN5RRqkYYZJa3Ovsz53qL+rkU
tRhEo/lkGKcfFay5Sk16N4NEx4sFPeKM76Slo5g2gwi3xD7n9FPH/MNimXsZ
JGc1q5nz/tza1PKGaV0G0XuTtMaIc70fvMJD+xjE68OfG8qc8U1raHceYJC3
lQmDwpzxybp5Nhjg5yfbbPtxvUb3pqRXGDGI57pP7QVoeefOntyDDMIMtDkZ
ibYIX7binSmD/JBY1MbpDwVmmZomHWIQpe5Vlpz+di7r7u0nR3B95AcrmOgR
xtfcUAsGWX7tj0otPm8WJqobLh9lkA1KqZUW6EAPJxvn4wySaZEzLYXOi0mI
PHmSQV5vDBdpwOdZ/o8EY78dgyT/42/XRY/cHP+11JlBtP2Eavlwf6xJ3igh
4sLA/fehLZnz/mmt3X6+cwyyX9c83xD9ZXl95p8LDLKouaYvEPfn3feZIZ+9
GGS++uOwDtzPX1oGi9KvMkibx94uF/QIbe1sgg+DnDfdNc75+4a5YYRDkC+D
PLZsNaSj5Xov7ToWiPstQ/PTMJ4vUjevjnsFM8iJIYtCc7SwzK2XUaF4/1WL
Bj6JsYB9OGxh030G6Xvr/uTiQhaUF79qN41mEIPO0LM5wjhfNm8fnH+K82uy
wpWBfseVve9eLIMUTe69tw/Pu+itJRnViQwSRZLVivF8dH3efn1fKp4Ha3oU
7s1jgd3uPjWHdJxP2w162fy43tTgb783DHJ4O284C8/bPZKzB79mMsjTmzfe
SzPwvPKTXLUzl0ECaI3XXfA8/2x3oEC1lkH+dPbFHpuiIINmctH0G4NYh/cq
6E9S8DzaXPH8DwbZkS8ju5VNQchPu7C0Rga50mJxmRvjg42Oj41iO4NEGk08
cfiH9cqa97yyIwzSmyBcENVDwaEu6T1CEkzyOfKqVRXGN+W5U68YkkzyNjEy
2w3jn6Dky0U8S5iEa2vlxiXVmB/qbukbW8YkbS6JN60qMH6n6AZRq5kkWd7l
eFUR1oPnXBsytjDJveYq6TPZmO9yFziamzLJqi0+b8fiMJ9fwv/T5BCTbOfz
MPTEeK2vok8MjjCJWGLuFDfGc55T9aK7rZjkxbIblULRFPxX3P9+/SkmoZKZ
l9dGYL4cJM7D7cYkUmF5PD53KWhZanc/MYxJRPO9U3ZjvmG2WqOz+T6TyB28
eaEM85Pq9SKbRSOY5GFG+AXT8xjPd2TVeEYxScmamjvnXHD+ji0QMk5gknAh
a9mm/yiQse+wuPWcSRx/dLzxcsDxu3xIyk5ikvU18lZy9phP+Zzcu+Y1k/za
udnCB/Mn17j316ffM0nFwKFx5+MU/E6+U6v0kUkWr+NZqXYM5//tcRm7bPz9
K3OqtKM4318Fcmq+MEnHmKJnEuZvGj1HJxNKmITnb6fc1sMUvBvcrNtcxiQ7
JN9prcX8byOb/6FIJZP4DtylS2O+KDvvzRbPWiZp+G/Vr+UmnH4C08WoCden
bXytjSEFVze35Pi2MEmLWWHrDcxHJzXS52f/YhJPRhfrJear/Qcsk+U6mKSI
x36ZEOaztmZKUxZdTHLl/MtLOvux/rCm64X0MIm07PR/fpgf1zqndk/1M0n6
jhyT5Zg/77t4U1XpL5M011U5nMP8uuCq+U3bISZ5riRnVrWXgvchvCtrRpnk
6a/kzkeYr2+KbHChTzBJvNOfOEF00rNXX7ZPMonl6mDnG5jvP844bJ0wyySl
g7fN/LFeEM9en9LExU9EfVb7S6ADC3imhWn8ZOTrk2HO+2PMip962nz8RH7S
L1obfe17csRlBj8hE7XhvVi/TLZc60nl5yf7WopaOe+TnO8yU+sS4CfLPwr5
7EH/GVjnKzWfn1ScjPPlvP9lO8713VCYnwRZdPz7jKbmvq/0FeUnJjVXyn3R
R5gvXbPE+Mm7HHdJM3St8NXcQQl+clF2YxOnf7B/samw3GJ+oq9jJinA6S/I
KBy1kOInettGagexPt2hMJcSvIyfbNOxEWpFZyp/my5cwU9a4kxLOPWz0vYX
+6Zk+Inw////p/8B4TJ1FA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, Pi}, {0.5080332901208935, 0.7381405990771864}}, {{
     0, 3.141592653589793}, {0.5080332901208935, 0.7381405990771864}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.765927911817349*^9, 3.76592795118079*^9}, {
   3.7659280913825808`*^9, 3.7659281095441113`*^9}, 3.7660498567444005`*^9, 
   3.7661314801147118`*^9, 3.7661320540377054`*^9, 3.7662364709641647`*^9, 
   3.7662703214664793`*^9, 3.7663426887370467`*^9, 3.7678907744432993`*^9, 
   3.7681207340154514`*^9, 3.768170010937484*^9, 3.7682082045464573`*^9, 
   3.7682101928691826`*^9, 3.7682157650146084`*^9, 3.768318992415428*^9, 
   3.7683926501507273`*^9, 3.76840645835483*^9, 3.768406844207229*^9, 
   3.768407764006131*^9, 3.7684728716112404`*^9, 3.7685021972053113`*^9, 
   3.7685028051871576`*^9, 3.7685484106807528`*^9, 3.7686608811690288`*^9, 
   3.768661455065195*^9, 3.7686719279242344`*^9, 3.7687342834355335`*^9, 
   3.7687352905933394`*^9, 3.768749402206874*^9, 3.768759128260933*^9, 
   3.7687594344105377`*^9, 3.768856276584006*^9, 3.769090894056055*^9, 
   3.7691015836837215`*^9, 3.769159864535201*^9, 3.7691758918434*^9, 
   3.7692676452788153`*^9, 3.7692757676197257`*^9, 3.7693722331613474`*^9, 
   3.76937250629103*^9, 3.769425697583548*^9, 3.7695301554297776`*^9, 
   3.7696086072941675`*^9, 3.769802267404147*^9, 3.7698067506583395`*^9, 
   3.769949486047*^9, 3.77018962510106*^9, 3.7701944146444216`*^9, 
   3.7704637458823385`*^9, 3.771612483542531*^9, 3.771669804588622*^9, 
   3.7716877899037304`*^9, 3.771691162098544*^9, 3.771691290952924*^9, 
   3.771834515315153*^9, 3.772096875971158*^9, 3.772198207228821*^9, 
   3.7724424130745173`*^9, 3.772462219093627*^9, 3.772481645347253*^9, 
   3.7725320149971743`*^9, 3.7727873775583167`*^9, 3.773074354941938*^9, 
   3.773316760128973*^9, 3.773328791065481*^9, 3.7733456331695175`*^9, 
   3.774372733463885*^9, 3.774373295737695*^9, 3.775233771146852*^9, 
   3.775641966941685*^9, 3.775646730556471*^9, 3.7757274059087815`*^9, 
   3.775911934374852*^9, 3.7760680848301015`*^9, 3.7769724137424192`*^9, 
   3.7770265110245624`*^9, 3.777361432951404*^9, 3.7802537311342435`*^9, 
   3.7802551998662496`*^9, 3.7802555347558556`*^9, 3.7802592704458065`*^9, 
   3.785864303966651*^9, 3.7870731287415056`*^9, 3.7884399708021035`*^9, 
   3.788983377656103*^9, 3.789459079853359*^9, 3.789459196763609*^9, 
   3.7903202192262583`*^9, 3.7913250265456295`*^9, 3.791325899496378*^9, 
   3.7914843730772038`*^9, 3.792143214450969*^9, 3.7921863240038986`*^9, 
   3.795958211162079*^9, 3.7960704946044765`*^9, 3.7961155702732515`*^9, 
   3.7961274132457757`*^9, 3.796222042873375*^9, 3.796301448657022*^9, 
   3.796316374672201*^9, 3.796420404311799*^9, 3.7964221096408005`*^9, 
   3.7964224621962795`*^9, 3.79656893152138*^9, 3.796568978139559*^9, 
   3.796663732041079*^9, 3.796929357926981*^9, 3.7969294930210805`*^9, 
   3.7970987145294704`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Poly Utils", "Section",
 CellChangeTimes->{{3.7684117207504683`*^9, 3.7684117273480253`*^9}, {
   3.7887953644811845`*^9, 3.788795366771051*^9}, {3.7887954802261734`*^9, 
   3.7887954814019976`*^9}, 3.7969293925346084`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getExcentralPolygon", "[", 
    RowBox[{"a_", ",", "poly_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"polyTangs", ",", "polyExc"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"polyTangs", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"perp", "[", 
          RowBox[{"ellGrad", "[", 
           RowBox[{"a", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@", 
        "poly"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"polyExc", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"interRays", "[", 
           RowBox[{"#1", ",", "#2", ",", "#3", ",", "#4"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"poly", ",", "polyTangs", ",", 
           RowBox[{"RotateLeft", "@", "poly"}], ",", 
           RowBox[{"RotateLeft", "@", "polyTangs"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "polyExc"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "plotPolyAreas"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotPolyAreas", "[", 
    RowBox[{"ts_", ",", "polyAreas_", ",", "ps_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"polyMean", ",", "polySd"}], 
      RowBox[{"(*", 
       RowBox[{",", "lab"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"polyMean", "=", 
       RowBox[{"Mean", "@", "polyAreas"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"polySd", "=", 
       RowBox[{"StandardDeviation", "@", "polyAreas"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"lab", "=", 
         RowBox[{"\"\<mean=\>\"", "<>", 
          RowBox[{"nfn", "[", 
           RowBox[{"polyMean", ",", "3"}], "]"}], "<>", "\"\<, sd=\>\"", "<>", 
          RowBox[{"nfn", "[", 
           RowBox[{"polySd", ",", "3"}], "]"}]}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{"ts", ",", "polyAreas"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"PlotLabel", "\[Rule]", "lab"}], ","}], "*)"}], 
        RowBox[{"PlotStyle", "\[Rule]", "ps"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7682706322525625`*^9, 3.7682707140379925`*^9}, {
  3.7682709311463537`*^9, 3.768270932711172*^9}, {3.7684105515401983`*^9, 
  3.7684105557556467`*^9}, {3.768479573483818*^9, 3.76847963232014*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "getP2Alpha"}], ";", 
  RowBox[{
   RowBox[{"getP2Alpha", "[", 
    RowBox[{"a_", ",", "p1_", ",", "alpha_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "norm", ",", "ca", ",", "sa", ",", "p2", ",", "normRot", ",", 
       "normRotNeg", ",", "p2Neg"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"y", "=", 
        RowBox[{"-", 
         RowBox[{"ellY", "[", 
          RowBox[{"a", ",", "x1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"p1", "=", 
        RowBox[{"{", 
         RowBox[{"x1", ",", "y"}], "}"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ca", "=", 
       RowBox[{"Cos", "@", "alpha"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sa", "=", 
       RowBox[{"Sin", "@", "alpha"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"norm", "=", 
       RowBox[{"ellGrad", "[", 
        RowBox[{"a", ",", 
         RowBox[{"p1", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"p1", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"normRot", "=", 
       RowBox[{"rot", "[", 
        RowBox[{"norm", ",", "sa", ",", "ca"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"normRotNeg", "=", 
       RowBox[{"rot", "[", 
        RowBox[{"norm", ",", 
         RowBox[{"-", "sa"}], ",", "ca"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{
        RowBox[{"ellInterRayUnprot", "[", 
         RowBox[{"a", ",", "p1", ",", "normRot"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"get", " ", "2", "nd", " ", "solution"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"p2Neg", "=", 
       RowBox[{
        RowBox[{"ellInterRayUnprot", "[", 
         RowBox[{"a", ",", "p1", ",", "normRotNeg"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"p2", ",", "p2Neg"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.767809129535489*^9, 3.7678092405600863`*^9}, {
  3.7678094684158916`*^9, 3.767809496624196*^9}, {3.769886686300124*^9, 
  3.7698866914842634`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "plotPolyCos"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "plotPolyCos", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pert", "\[Rule]", ".02"}], ",", 
     RowBox[{"keep", "\[Rule]", "All"}], ",", 
     RowBox[{"cosDiv", "\[Rule]", "2"}], ",", 
     RowBox[{"clrs", "->", 
      RowBox[{"{", 
       RowBox[{
       "Black", ",", "Red", ",", "Green", ",", "Blue", ",", "Cyan", ",", 
        "Magenta", ",", "Orange", ",", "Brown", ",", "Purple", ",", "Gray"}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"polys0", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"ts0", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"drGrid", "\[Rule]", "False"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotPolyCos", "[", 
    RowBox[{"alphaT_", ",", "fnVtx0_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a", ",", "ts", ",", "polys", ",", "cosPoly", ",", "theN", ",", "clrs0",
        ",", "clrs0k", ",", "plotData", ",", "ticksx", ",", "ticksxGrid", ",",
        "ticksy", ",", "keep0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"\"\<a\>\"", "/.", "alphaT"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"polys", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"OptionValue", "@", "polys0"}], "]"}], ">", "0"}], ",", 
         RowBox[{"OptionValue", "@", "polys0"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"polyVtx", "[", 
            RowBox[{"alphaT", ",", "i", ",", "fnVtx0"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"\"\<alphas\>\"", "/.", "alphaT"}], "]"}]}], "}"}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"theN", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"polys", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"clrs0", "=", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"OptionValue", "@", "clrs"}], ",", 
         RowBox[{"1", "+", "theN"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cosPoly", "=", 
       RowBox[{"getPolyCosines", "/@", "polys"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"keep0", "=", 
       RowBox[{"Part", "[", 
        RowBox[{
         RowBox[{"Range", "[", "theN", "]"}], ",", 
         RowBox[{"OptionValue", "@", "keep"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"clrs0k", "=", 
       RowBox[{"Part", "[", 
        RowBox[{"clrs0", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"(", 
             RowBox[{"keep0", "+", "1"}], ")"}]}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ts", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"OptionValue", "@", "ts0"}], "]"}], ">", "0"}], ",", 
         RowBox[{"OptionValue", "@", "ts0"}], ",", 
         RowBox[{"\"\<tsDeg\>\"", "/.", "alphaT"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ticksx", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", 
           RowBox[{
            RowBox[{"Max", "[", "ts", "]"}], "+", "1"}], ",", "30"}], "}"}]}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ticksxGrid", "=", 
       RowBox[{"ticksx", "/.", 
        RowBox[{"{", 
         RowBox[{"180", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"180", ",", 
            RowBox[{"Directive", "[", 
             RowBox[{"Thick", ",", "Black", ",", "Dashed", ",", 
              RowBox[{"Opacity", "@", ".75"}]}], "]"}]}], "}"}]}], "}"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"ticksy", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "1.5"}], ",", "1.5", ",", ".1"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"plotData", "=", 
       RowBox[{"Transpose", "/@", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ts", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Total", "/@", "cosPoly"}], ")"}], "/", 
              RowBox[{"OptionValue", "@", "cosDiv"}]}], "+", 
             RowBox[{"OptionValue", "@", "pert"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Sequence", "@@", 
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"ts", ",", 
                RowBox[{"#1", "+", 
                 RowBox[{"RandomReal", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"OptionValue", "@", "pert"}]}], ",", 
                    RowBox[{"OptionValue", "@", "pert"}]}], "}"}], "]"}]}]}], 
               "}"}], "&"}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Part", "[", 
                 RowBox[{"#", ",", "keep0"}], "]"}], "&"}], "/@", "cosPoly"}],
               "]"}]}], "]"}]}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Legended", "[", 
       RowBox[{
        RowBox[{"ListLinePlot", "[", 
         RowBox[{"plotData", ",", "\[IndentingNewLine]", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", "12"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "clrs0k"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AspectRatio", "\[Rule]", ".25"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "360"}], "}"}], ",", "Automatic"}], "}"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"ticksy", ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"ticksx", ",", "None"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"GridLines", "\[Rule]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "@", "drGrid"}], ",", 
             RowBox[{"{", 
              RowBox[{"ticksxGrid", ",", "ticksy"}], "}"}], ",", "None"}], 
            "]"}]}], ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<a=\>\"", "<>", 
              RowBox[{"nfn", "[", 
               RowBox[{"a", ",", "2"}], "]"}], "<>", "\"\<, N=\>\"", "<>", 
              RowBox[{"ToString", "@", "theN"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"16", ",", "Black"}], "}"}]}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "#"}], "}"}], "]"}], "&"}], "/@", 
           "clrs0k"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"#", ",", "16"}], "]"}], "&"}], "/@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<\[CapitalSigma]cos\>\"", "<>", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"OptionValue", "@", "cosDiv"}], "\[NotEqual]", 
                  "1"}], ",", 
                 RowBox[{"\"\</\>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"OptionValue", "@", "cosDiv"}], "]"}]}], ",", 
                 "\"\<\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\"\<cos(\>\"", "<>", "#", "<>", "\"\<)\>\""}], 
                 ")"}], "&"}], "/@", 
               RowBox[{"Part", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\"", ",", 
                   "\"\<D\>\"", ",", "\"\<E\>\"", ",", "\"\<F\>\"", ",", 
                   "\"\<G\>\"", ",", "\"\<H\>\"", ",", "\"\<I\>\""}], "}"}], 
                 ",", "keep0"}], "]"}]}]}], "}"}]}]}]}], "]"}]}], "]"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.768233141047119*^9, 3.7682332876085906`*^9}, {
   3.7682333267749357`*^9, 3.768233714551135*^9}, {3.7682337483770885`*^9, 
   3.7682338134158697`*^9}, {3.7682339397133303`*^9, 
   3.7682339446022377`*^9}, {3.7682339746184273`*^9, 
   3.7682340103684077`*^9}, {3.768244318611882*^9, 3.768244321706608*^9}, 
   3.7682450035894675`*^9, {3.7682601723584146`*^9, 3.7682602250320597`*^9}, {
   3.7682602924243164`*^9, 3.768260550856988*^9}, 3.768260598453779*^9, {
   3.7682607293504496`*^9, 3.768260732007351*^9}, {3.7682607775423737`*^9, 
   3.768260789944236*^9}, {3.7682609598556185`*^9, 3.768260980092822*^9}, {
   3.768261354248853*^9, 3.768261354377509*^9}, 3.7682613912579613`*^9, 
   3.7683973971132627`*^9, {3.768414717828379*^9, 3.768414757279173*^9}, {
   3.7684151438119855`*^9, 3.768415144548046*^9}, {3.768415262166272*^9, 
   3.768415389359886*^9}, {3.768415481535135*^9, 3.7684156929112053`*^9}, {
   3.7684157497752857`*^9, 3.768416098790879*^9}, {3.768416131920354*^9, 
   3.7684161993263617`*^9}, {3.768416237505315*^9, 3.7684162689926915`*^9}, {
   3.7684162996896524`*^9, 3.7684163028552227`*^9}, {3.7684163367117558`*^9, 
   3.768416528315194*^9}, {3.768416625056694*^9, 3.7684166678155174`*^9}, {
   3.7684168996824684`*^9, 3.768416921265335*^9}, {3.7684169732414484`*^9, 
   3.768416987202144*^9}, {3.76841763164132*^9, 3.7684177140510015`*^9}, {
   3.768417780269605*^9, 3.768417802306721*^9}, {3.7684179403489428`*^9, 
   3.7684180260293427`*^9}, {3.768418058684089*^9, 3.7684180922918024`*^9}, {
   3.768418125612796*^9, 3.768418190596567*^9}, {3.768418276003973*^9, 
   3.7684182985896177`*^9}, {3.768418374941599*^9, 3.7684184371663303`*^9}, {
   3.7684184709969015`*^9, 3.7684185740374827`*^9}, {3.768418650317033*^9, 
   3.7684186541348004`*^9}, {3.768418702556385*^9, 3.768418710132142*^9}, {
   3.768418776157716*^9, 3.7684189372932105`*^9}, {3.7684191370600214`*^9, 
   3.7684191814546537`*^9}, {3.7684983434865403`*^9, 
   3.7684983607886624`*^9}, {3.7684985813331146`*^9, 3.768498584500823*^9}, {
   3.768498674583189*^9, 3.7684988133888626`*^9}, {3.768498857166295*^9, 
   3.768498882429784*^9}, {3.7687676426846733`*^9, 3.768767695717183*^9}, {
   3.7692458827748384`*^9, 3.7692458872549543`*^9}, {3.7692459558315268`*^9, 
   3.7692459560080547`*^9}, {3.7693020221122713`*^9, 3.769302081837675*^9}, {
   3.7693021334776616`*^9, 3.7693021670640683`*^9}, {3.769679169432186*^9, 
   3.76967919416107*^9}, 3.7754107172704096`*^9, {3.77541099278895*^9, 
   3.7754110201568274`*^9}, {3.775411075821716*^9, 3.7754110762600684`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerically Calculate Exit Angle: \[Alpha]", "Section",
 CellChangeTimes->{{3.7684056758590803`*^9, 3.768405688689765*^9}, {
  3.7684057614925723`*^9, 3.768405769123183*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getPolyAlphaTOneQuarter"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPolyAlphaTOneQuarter", "[", 
    RowBox[{"errFn_", ",", "a_", ",", "alpha0_", ",", 
     RowBox[{"degStep_:", "10"}], ",", "verbose_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "lastAlpha", ",", "tRad", ",", "min", ",", "tab", ",", "ts", ",", 
       "alphas", ",", "p1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lastAlpha", "=", "alpha0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tab", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"tRad", "=", 
           RowBox[{"toRad", "[", "tDeg", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"p1", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"a", " ", 
              RowBox[{"Cos", "[", "tRad", "]"}]}], ",", 
             RowBox[{"Sin", "[", "tRad", "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"min", "=", 
           RowBox[{"Quiet", "@", 
            RowBox[{"FindMinimum", "[", 
             RowBox[{
              RowBox[{"errFn", "[", 
               RowBox[{"a", ",", "p1", ",", "alpha"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"alpha", ",", "lastAlpha"}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Method", "->", "\"\<PrincipalAxis\>\""}]}], 
             RowBox[{"(*", 
              RowBox[{",", 
               RowBox[{"WorkingPrecision", "\[Rule]", "40"}]}], "*)"}], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"lastAlpha", "=", 
           RowBox[{"(", 
            RowBox[{"alpha", "/.", 
             RowBox[{"min", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"min", "=", 
             RowBox[{"gradDescPentErr", "[", 
              RowBox[{"a", ",", "p1", ",", "lastAlpha"}], "]"}]}], ";"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"lastAlpha", "=", 
             RowBox[{"min", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"verbose", ",", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<t=\>\"", ",", "tDeg", ",", "\"\<; min=\>\"", ",", "min"}], 
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"tDeg", ",", "tRad", ",", "lastAlpha", ",", "min"}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"takes", " ", "advantage", " ", "of", " ", "4"}], "-", 
           RowBox[{"arc", " ", "symmetry"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"tDeg", ",", "0", ",", "90", ",", "degStep"}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "\[Rule]", "a"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<tsDeg\>\"", "\[Rule]", 
         RowBox[{"First", "/@", "tab"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<tsRad\>\"", "\[Rule]", 
         RowBox[{"Second", "/@", "tab"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<alphas\>\"", "\[Rule]", 
         RowBox[{"Third", "/@", "tab"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<mins\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "&"}], "/@", "tab"}], ")"}]}]}], 
       "\[IndentingNewLine]", "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.767810634022298*^9, 3.7678109086695027`*^9}, {
   3.7678109600382833`*^9, 3.7678110385975*^9}, {3.767811074941062*^9, 
   3.767811075148507*^9}, {3.767811116582264*^9, 3.767811122158447*^9}, {
   3.7678116126367917`*^9, 3.767811656589664*^9}, {3.7678117164857693`*^9, 
   3.7678117516612372`*^9}, {3.767811791085672*^9, 3.7678118315483437`*^9}, 
   3.7679086754753895`*^9, {3.7679087635637627`*^9, 3.767908764706705*^9}, {
   3.7679088209791913`*^9, 3.767908931125578*^9}, {3.767908997362411*^9, 
   3.7679090586903744`*^9}, {3.767909095452049*^9, 3.7679091005234814`*^9}, {
   3.7679095288827314`*^9, 3.7679095387623053`*^9}, {3.7679104204119396`*^9, 
   3.767910471697762*^9}, {3.7679105306113405`*^9, 3.7679105326109924`*^9}, {
   3.7681657518967657`*^9, 3.768165754152707*^9}, {3.7681662905617137`*^9, 
   3.768166308007779*^9}, {3.7681678425282297`*^9, 3.768167872127149*^9}, {
   3.7681679934551816`*^9, 3.7681679982942376`*^9}, {3.7681680624640017`*^9, 
   3.7681680645195026`*^9}, {3.7681696114390545`*^9, 
   3.7681696552873993`*^9}, {3.768170261158991*^9, 3.76817026544456*^9}, {
   3.7681702965802784`*^9, 3.768170310372727*^9}, {3.768170360403672*^9, 
   3.768170362452197*^9}, {3.768170471566339*^9, 3.7681704916040916`*^9}, {
   3.7681705787320366`*^9, 3.768170600789129*^9}, {3.768170671995755*^9, 
   3.768170676578498*^9}, {3.7681708287325783`*^9, 3.768170830458993*^9}, {
   3.7681709842999525`*^9, 3.768170984883393*^9}, {3.768171111610115*^9, 
   3.7681711134761343`*^9}, {3.768175150975972*^9, 3.768175157392809*^9}, {
   3.768203868618301*^9, 3.7682039059253926`*^9}, {3.768206734209761*^9, 
   3.768206756660576*^9}, {3.7682068070449457`*^9, 3.768206830025978*^9}, {
   3.76820989540923*^9, 3.7682099144087505`*^9}, {3.7682102525931163`*^9, 
   3.7682102765277977`*^9}, {3.7682103336807737`*^9, 3.768210368329707*^9}, {
   3.768210596839013*^9, 3.7682106274004*^9}, {3.768210997979575*^9, 
   3.7682110022019367`*^9}, {3.768211042497813*^9, 3.768211072241058*^9}, {
   3.76821110876169*^9, 3.768211170617893*^9}, {3.768216163329899*^9, 
   3.768216197070009*^9}, {3.768216236726077*^9, 3.768216269260178*^9}, {
   3.7682163516200857`*^9, 3.7682163981329217`*^9}, {3.768217912390621*^9, 
   3.7682179223811264`*^9}, {3.768218038677452*^9, 3.7682180389968653`*^9}, {
   3.7682180730172815`*^9, 3.768218074577114*^9}, {3.7682466670957603`*^9, 
   3.7682467452807093`*^9}, {3.7682600971324277`*^9, 
   3.7682600983504925`*^9}, {3.768384848158538*^9, 3.768384858345934*^9}, {
   3.7683849382843723`*^9, 3.768384968800858*^9}, {3.768385053331113*^9, 
   3.7683850591381187`*^9}, {3.7683851420196505`*^9, 3.768385147282589*^9}, {
   3.76838833580719*^9, 3.7683883359597826`*^9}, {3.7683892225695333`*^9, 
   3.768389227698832*^9}, {3.7683899725864215`*^9, 3.7683899834353213`*^9}, {
   3.7683904919801197`*^9, 3.7683904921396914`*^9}, {3.7683945966098056`*^9, 
   3.7683946200737295`*^9}, {3.7683946554751596`*^9, 3.7683946926428356`*^9}, 
   3.7683947327952456`*^9, {3.768405303124984*^9, 3.768405346964697*^9}, {
   3.768405382460878*^9, 3.7684053945570397`*^9}, {3.7684055517088175`*^9, 
   3.768405580949684*^9}, {3.7684073762297606`*^9, 3.7684073779381943`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Takes Advantage of 4-arc alpha symmetry (only computes fn from 0 to 90)\
\>", "Subsubsection",
 CellChangeTimes->{{3.768390375105198*^9, 3.7683904004634137`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "doubleList"}], ";", 
  RowBox[{
   RowBox[{"doubleList", "[", "vs_", "]"}], ":=", 
   RowBox[{"Join", "[", 
    RowBox[{"vs", ",", 
     RowBox[{"Rest", "[", 
      RowBox[{"Reverse", "@", "vs"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "@", "quadrupleList"}], ";", 
  RowBox[{
   RowBox[{"quadrupleList", "[", "vs_", "]"}], ":=", 
   RowBox[{"Most", "[", 
    RowBox[{"doubleList", "@", 
     RowBox[{"doubleList", "@", "vs"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.76838933526939*^9, 3.7683893739356394`*^9}, {
  3.7683895896790195`*^9, 3.76838960523246*^9}, {3.7683902703214407`*^9, 
  3.7683902734478273`*^9}, {3.7684065566354685`*^9, 3.7684065658837557`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "quadrupleT"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"quadrupleT", "[", 
    RowBox[{"theT_", ",", 
     RowBox[{"doMins_:", "True"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"degStep", ",", "radStep"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"degStep", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\"\<tsDeg\>\"", "/.", "theT"}], ")"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\"\<tsDeg\>\"", "/.", "theT"}], ")"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"radStep", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\"\<tsRad\>\"", "/.", "theT"}], ")"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\"\<tsRad\>\"", "/.", "theT"}], ")"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"\"\<a\>\"", "/.", "theT"}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<tsDeg\>\"", "\[Rule]", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{"360", "-", "degStep"}], ",", "degStep"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<tsRad\>\"", "\[Rule]", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"2", "\[Pi]"}], "-", "radStep"}], ",", "radStep"}], 
          "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<alphas\>\"", "\[Rule]", 
         RowBox[{"quadrupleList", "[", 
          RowBox[{"\"\<alphas\>\"", "/.", "theT"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<mins\>\"", "\[Rule]", 
         RowBox[{"If", "[", 
          RowBox[{"doMins", ",", 
           RowBox[{"quadrupleList", "[", 
            RowBox[{"\"\<mins\>\"", "/.", "theT"}], "]"}], ",", 
           RowBox[{"\"\<mins\>\"", "/.", "theT"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7683896733130975`*^9, 3.7683897453757877`*^9}, {
   3.7683897903995085`*^9, 3.7683899466248546`*^9}, {3.7683900320728073`*^9, 
   3.768390040146204*^9}, {3.7683901179711027`*^9, 3.7683901194581547`*^9}, 
   3.768406199339865*^9, {3.7687597285975847`*^9, 3.76875974551737*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getPolyAlphaT"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPolyAlphaT", "[", 
    RowBox[{
    "errFn_", ",", "a_", ",", "startAlpha_", ",", "degStep_", ",", 
     "verbose_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "theT", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "if", " ", "the", " ", "step", " ", "angle", " ", "is", " ", "too", 
        " ", "large"}], ",", " ", 
       RowBox[{"the", " ", "previous", " ", "guess", " ", 
        RowBox[{"won", "'"}], "t", " ", "help"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"theT", "=", 
       RowBox[{"getPolyAlphaTOneQuarter", "[", 
        RowBox[{
        "errFn", ",", "a", ",", "startAlpha", ",", "degStep", ",", 
         "verbose"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"theT", "=", 
       RowBox[{"quadrupleT", "@", "theT"}]}], ";", "\[IndentingNewLine]", 
      "theT"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7683910326421347`*^9, 3.768391096417637*^9}, {
  3.7683911815547905`*^9, 3.7683912137137957`*^9}, {3.7683912475947065`*^9, 
  3.768391254234969*^9}, {3.7683926935567474`*^9, 3.768392698348937*^9}, {
  3.7683946319440107`*^9, 3.7683946648889785`*^9}, {3.768405290970462*^9, 
  3.768405291961811*^9}, {3.7684053531940784`*^9, 3.768405355722324*^9}, {
  3.768405402754622*^9, 3.7684054660664463`*^9}, {3.7684055669790144`*^9, 
  3.7684055713144464`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "calcAlphaT"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"calcAlphaT", "[", 
    RowBox[{"doCalc_", 
     RowBox[{"(*", 
      RowBox[{"False", " ", "for", " ", "load"}], "*)"}], ",", "errFn_", ",", 
     "fname_", ",", "a_", ",", "startAlpha_", ",", "degStep_", ",", 
     RowBox[{"verbose_:", "True"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "theT", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"doCalc", ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "if", " ", "the", " ", "step", " ", "angle", " ", "is", " ", "too", 
          " ", "large"}], ",", " ", 
         RowBox[{"the", " ", "previous", " ", "guess", " ", 
          RowBox[{"won", "'"}], "t", " ", "help"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"theT", "=", 
         RowBox[{"getPolyAlphaT", "[", 
          RowBox[{
          "errFn", ",", "a", ",", "startAlpha", ",", "degStep", ",", 
           "verbose"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<saving: \>\"", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"\"\<alphas\>\"", "/.", "theT"}], "]"}], ",", 
          "\"\< records to\>\"", ",", "fname"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Save", "[", 
         RowBox[{"fname", ",", "theT"}], "]"}], ";", "\[IndentingNewLine]", 
        "theT"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"theT", "=", 
         RowBox[{"Get", "[", "fname", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<loaded: \>\"", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"\"\<alphas\>\"", "/.", "theT"}], "]"}], ",", 
          "\"\< records from\>\"", ",", "fname"}], "]"}], ";", 
        "\[IndentingNewLine]", "theT"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.768393718798751*^9, 3.7683937891987977`*^9}, {
   3.7683946429456425`*^9, 3.7683946478734703`*^9}, {3.7683947052264795`*^9, 
   3.768394719305291*^9}, {3.768405433251132*^9, 3.768405434802985*^9}, {
   3.768405471452056*^9, 3.76840548694765*^9}, 3.7684061734389315`*^9, {
   3.7684069351735706`*^9, 3.768406935991357*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Tangents to Ellipse", "Section",
 CellChangeTimes->{{3.769418776900899*^9, 3.769418781576482*^9}, {
  3.7694189176426935`*^9, 3.7694189210425687`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "/.", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"ellEqnb", "[", 
            RowBox[{"a", ",", "b", ",", "x", ",", "y"}], "]"}], "\[Equal]", 
           "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"ellGradb", "[", 
             RowBox[{"a", ",", "b", ",", "x", ",", "y"}], "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"px", "-", "x"}], ",", 
              RowBox[{"py", "-", "y"}]}], "}"}]}], "\[Equal]", "0"}]}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"a", ">", "0"}], "&&", 
      RowBox[{"b", ">", "0"}], "&&", 
      RowBox[{"px", "\[Element]", "Reals"}], "&&", 
      RowBox[{"py", "\[Element]", "Reals"}]}]}], "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{" ", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["b", "2"], " ", "px"}], "+", 
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{
              SuperscriptBox["b", "2"], " ", 
              SuperscriptBox["px", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["b", "2"]}], "+", 
                SuperscriptBox["py", "2"]}], ")"}]}]}]], " ", 
           RowBox[{"Abs", "[", "py", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{
         SuperscriptBox["b", "2"], " ", 
         SuperscriptBox["px", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["py", "2"]}]}]], ",", 
      FractionBox[
       RowBox[{
        SuperscriptBox["b", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["py", "2"]}], "-", 
          RowBox[{"px", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{
              SuperscriptBox["b", "2"], " ", 
              SuperscriptBox["px", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["b", "2"]}], "+", 
                SuperscriptBox["py", "2"]}], ")"}]}]}]], " ", 
           RowBox[{"Abs", "[", "py", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{
         SuperscriptBox["b", "2"], " ", 
         SuperscriptBox["px", "2"], " ", "py"}], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["py", "3"]}]}]]}], "}"}], "}"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.768752292756564*^9, 3.7687523384482546`*^9}, {
  3.76875256579195*^9, 3.76875277066543*^9}, {3.7687528065539856`*^9, 
  3.7687528176642437`*^9}, {3.7691649208326907`*^9, 3.769164921303405*^9}, {
  3.7691649693183355`*^9, 3.7691649787820187`*^9}, {3.7691650489929333`*^9, 
  3.7691650595511713`*^9}, {3.7691651008635483`*^9, 3.7691651019839835`*^9}, {
  3.771689976484352*^9, 3.7716899849971952`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "ellTangentsb"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellTangentsb", "[", 
    RowBox[{"a_", ",", "b_", ",", "p_"}], "]"}], ":=", 
   RowBox[{"(*", 
    RowBox[{"=", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "_Real"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", "_Real"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "_Real", ",", "1"}], "}"}]}], "}"}], ","}]}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a2", ",", "b2", ",", "px", ",", "py", ",", "px2", ",", "px3", ",", 
       "py2", ",", "py3", ",", "radicand", ",", "numFact", ",", "denomx", ",",
        "denomy"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"px", ",", "py"}], "}"}], "=", "p"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"a2", "=", 
       RowBox[{"a", "*", "a"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"b2", "=", 
       RowBox[{"b", "*", "b"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"px2", "=", 
       RowBox[{"px", "*", "px"}]}], ";", 
      RowBox[{"py2", "=", 
       RowBox[{"py", "*", "py"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"px3", "=", 
       RowBox[{"px", "*", "px2"}]}], ";", 
      RowBox[{"py3", "=", 
       RowBox[{"py", "*", "py2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"denomx", "=", 
       RowBox[{
        RowBox[{"b2", " ", "px2"}], " ", "+", 
        RowBox[{"a2", " ", "py2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"denomy", "=", 
       RowBox[{
        RowBox[{"b2", " ", "px2", " ", "py"}], "+", 
        RowBox[{"a2", " ", "py3"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"radicand", "=", " ", 
       RowBox[{
        RowBox[{"b2", " ", "px2"}], "+", 
        RowBox[{"a2", 
         RowBox[{"(", 
          RowBox[{"py2", "-", "b2"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"numFact", "=", 
       RowBox[{
        RowBox[{"Sqrt", "[", "radicand", "]"}], "*", 
        RowBox[{"Abs", "[", "py", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<radicand=\>\"", ",", "radicand", ",", "\"\<, numFact=\>\"", ",",
           "numFact", ",", "\"\<, dx=\>\"", ",", "denomx", ",", 
          "\"\<, dy=\>\"", ",", "denomy"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"NOTE", ":", " ", 
         RowBox[{
          RowBox[{"Reverse", "[", "]"}], " ", "so", " ", "first", " ", "one", 
          " ", "is", " ", "Clockwise"}]}], ",", " ", 
        RowBox[{"the", " ", "2", "nd", " ", "one", " ", "is", " ", "CCW"}]}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Reverse", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a2", " ", 
            RowBox[{"safeDiv", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"b2", " ", "px"}], "-", " ", "numFact"}], ",", 
              "denomx"}], "]"}]}], ",", 
           RowBox[{"b2", " ", 
            RowBox[{"safeDiv", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"a2", " ", "py2"}], "+", 
               RowBox[{"px", " ", "numFact"}]}], ",", "denomy"}], "]"}]}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a2", " ", 
            RowBox[{"safeDiv", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"b2", " ", "px"}], "+", " ", "numFact"}], ",", 
              "denomx"}], "]"}]}], ",", 
           RowBox[{"b2", " ", 
            RowBox[{"safeDiv", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"a2", " ", "py2"}], "-", 
               RowBox[{"px", " ", "numFact"}]}], ",", "denomy"}], "]"}]}]}], 
          "}"}]}], "}"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", "]", "*)"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7691651522407475`*^9, 3.7691652036818724`*^9}, {
   3.7691652494256563`*^9, 3.769165293321683*^9}, {3.769165409649309*^9, 
   3.769165549937166*^9}, 3.769166150152321*^9, {3.769166900161103*^9, 
   3.769166918559899*^9}, {3.769167010930129*^9, 3.769167012327886*^9}, {
   3.7966636173305893`*^9, 3.796663651055961*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "/.", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"ellEqn", "[", 
           RowBox[{"a", ",", "x", ",", "y"}], "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"ellGrad", "[", 
            RowBox[{"a", ",", "x", ",", "y"}], "]"}], ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"px", "-", "x"}], ",", 
             RowBox[{"py", "-", "y"}]}], "}"}]}], "\[Equal]", "0"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"a", ">", "0"}], "&&", 
     RowBox[{"px", "\[Element]", "Reals"}], "&&", 
     RowBox[{"py", "\[Element]", "Reals"}]}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.768752292756564*^9, 3.7687523384482546`*^9}, {
  3.76875256579195*^9, 3.76875277066543*^9}, {3.7687528065539856`*^9, 
  3.7687528176642437`*^9}, {3.7691649208326907`*^9, 3.769164921303405*^9}, {
  3.7691649693183355`*^9, 3.7691649787820187`*^9}, {3.7691650489929333`*^9, 
  3.7691650595511713`*^9}, {3.7691651008635483`*^9, 3.7691651019839835`*^9}, {
  3.7691664487663207`*^9, 3.7691664603266025`*^9}, {3.7716900011738796`*^9, 
  3.771690029363191*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "ellTangents"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellTangents", "[", 
    RowBox[{"a_", ",", "p_"}], "]"}], ":=", 
   RowBox[{"(*", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", "_Real", ",", "1"}], "}"}]}], "}"}], ","}]}], 
    "*)"}], 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a2", ",", "px", ",", "py", ",", "px2", ",", "px3", ",", "py2", ",", 
       "radicand", ",", "numFact", ",", "denomx", ",", "denomy"}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"px", ",", "py"}], "}"}], "=", "p"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"a2", "=", 
       RowBox[{"a", "*", "a"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"px2", "=", 
       RowBox[{"px", "*", "px"}]}], ";", 
      RowBox[{"py2", "=", 
       RowBox[{"py", "*", "py"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"px3", "=", 
       RowBox[{"px", "*", "px2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"denomx", "=", 
       RowBox[{"px3", "+", 
        RowBox[{"a2", " ", "px", " ", "py2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"denomy", "=", 
       RowBox[{"px2", "+", 
        RowBox[{"a2", " ", "py2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"radicand", "=", 
       RowBox[{"px2", "+", 
        RowBox[{"a2", 
         RowBox[{"(", 
          RowBox[{"py2", "-", "1"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"numFact", "=", 
       RowBox[{
        RowBox[{"Sqrt", "[", "radicand", "]"}], "*", 
        RowBox[{"Abs", "[", "px", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"[", 
         RowBox[{
         "\"\<radicand=\>\"", ",", "radicand", ",", "\"\<, numFact=\>\"", ",",
           "numFact", ",", "\"\<, dx=\>\"", ",", "denomx", ",", 
          "\"\<, dy=\>\"", ",", "denomy"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"NOTE", ":", " ", 
         RowBox[{
         "the", " ", "first", " ", "one", " ", "is", " ", "Clockwise"}]}], 
        ",", " ", 
        RowBox[{"the", " ", "2", "nd", " ", "one", " ", "is", " ", "CCW"}]}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a2", " ", 
           RowBox[{"safeDiv", "[", 
            RowBox[{
             RowBox[{"px2", "+", 
              RowBox[{"py", " ", "numFact"}]}], ",", "denomx"}], "]"}]}], ",", 
          RowBox[{"safeDiv", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"a2", " ", "py"}], "-", "numFact"}], ",", "denomy"}], 
           "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a2", " ", 
           RowBox[{"safeDiv", "[", 
            RowBox[{
             RowBox[{"px2", "-", 
              RowBox[{"py", " ", "numFact"}]}], ",", "denomx"}], "]"}]}], ",", 
          RowBox[{"safeDiv", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"a2", " ", "py"}], "+", "numFact"}], ",", "denomy"}], 
           "]"}]}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", "]", "*)"}], ";"}]}], "Input",
 CellChangeTimes->{{3.768752837782468*^9, 3.7687531869850597`*^9}, {
   3.7687535578969126`*^9, 3.7687535640095644`*^9}, {3.7687536301856785`*^9, 
   3.7687537057700453`*^9}, 3.769091696889203*^9, {3.769164203192435*^9, 
   3.769164230969*^9}, {3.769164303537648*^9, 3.769164303689217*^9}, {
   3.769164364829316*^9, 3.7691643833203974`*^9}, {3.7691645813307767`*^9, 
   3.7691646158489475`*^9}, {3.7691647841935663`*^9, 
   3.7691647869070616`*^9}, {3.769164832048545*^9, 3.769164864641449*^9}, {
   3.769166890249374*^9, 3.7691668964718733`*^9}, {3.769167006314129*^9, 
   3.769167007720323*^9}, {3.7966636546638994`*^9, 3.796663668678894*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ellTangentsProt", "[", 
    RowBox[{"a_", ",", "p_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"a", ">", "1"}], ",", 
     RowBox[{"ellTangents", "[", 
      RowBox[{"a", ",", "p"}], "]"}], ",", 
     RowBox[{"a", "*", 
      RowBox[{"perp", "[", 
       RowBox[{"ellTangents", "[", 
        RowBox[{
         RowBox[{"1", "/", "a"}], ",", 
         RowBox[{"perp", "@", "p"}]}], "]"}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7691637528972764`*^9, 3.7691638048879585`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "ellTangentsAB"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellTangentsAB", "[", 
    RowBox[{"a_", ",", "b_", ",", "p1_"}], "]"}], ":=", 
   RowBox[{"b", "*", 
    RowBox[{"ellTangents", "[", 
     RowBox[{
      RowBox[{"a", "/", "b"}], ",", 
      RowBox[{"p1", "/", "b"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7690935718466206`*^9, 3.7690936325589924`*^9}, {
  3.769093771625215*^9, 3.769093775982561*^9}, {3.7691638179189262`*^9, 
  3.7691638183427925`*^9}, {3.7691658776296787`*^9, 3.7691659613735476`*^9}, {
  3.769166684373678*^9, 3.7691667211415725`*^9}, {3.769166785230784*^9, 
  3.7691667899658213`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tangs", ",", "tangs2", ",", "ell", ",", "gr", ",", 
      RowBox[{"maxX", "=", "3"}], ",", 
      RowBox[{"maxY", "=", "3"}], ",", "int12", ",", "int21", ",", 
      "tripleInt"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"ell", "=", 
        RowBox[{"plotEll", "[", 
         RowBox[{"a", ",", "Black"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tangs", "=", 
        RowBox[{"ellTangentsAB", "[", 
         RowBox[{"a", ",", "1", ",", "ploc"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tangs2", "=", 
        RowBox[{"ellTangentsAB", "[", 
         RowBox[{"a", ",", "1", ",", "ploc2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"int12", "=", 
        RowBox[{"interRays", "[", 
         RowBox[{"ploc", ",", 
          RowBox[{
           RowBox[{"tangs", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", "ploc"}], ",", "ploc2", ",", 
          RowBox[{
           RowBox[{"tangs2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "ploc2"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"int21", "=", 
        RowBox[{"interRays", "[", 
         RowBox[{"ploc2", ",", 
          RowBox[{
           RowBox[{"tangs2", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", "ploc2"}], ",", "ploc", ",", 
          RowBox[{
           RowBox[{"tangs", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "ploc"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tripleInt", "=", 
        RowBox[{"interRays", "[", 
         RowBox[{
          RowBox[{"tangs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"tangs", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"tangs", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{"tangs2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"tangs2", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"tangs2", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"gr", "=", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "@", "Medium"}], ",", "Black", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Blue", ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"ploc", ",", 
                RowBox[{"tangs", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], ",", 
             RowBox[{"Point", "@", 
              RowBox[{"tangs", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"Darker", "@", "Green"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"ploc", ",", 
                RowBox[{"tangs", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
             RowBox[{"Point", "@", 
              RowBox[{"tangs", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Dashed", ",", "Blue", ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"ploc2", ",", 
                RowBox[{"tangs2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], ",", 
             RowBox[{"Point", "@", 
              RowBox[{"tangs2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"Darker", "@", "Green"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"ploc2", ",", 
                RowBox[{"tangs2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
             RowBox[{"Point", "@", 
              RowBox[{"tangs2", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Dotted", ",", 
             RowBox[{"Line", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"tangs", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"tangs", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
             RowBox[{"Line", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"tangs2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"tangs2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Darker", "@", "Green"}], ",", 
             RowBox[{"Line", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"tangs", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", "int12"}], "}"}]}], ",", 
             RowBox[{"Point", "@", "int12"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Darker", "@", "Green"}], ",", "Dashed", ",", 
             RowBox[{"Line", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"tangs2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", "int21"}], "}"}]}], ",", 
             RowBox[{"Point", "@", "int21"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Line", "@", 
              RowBox[{"{", 
               RowBox[{"int12", ",", "int21"}], "}"}]}], ",", 
             RowBox[{"Point", "@", "tripleInt"}]}], "}"}]}], 
          "\[IndentingNewLine]", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ell", ",", "gr"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "maxX"}], ",", "maxX"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "maxY"}], ",", "maxY"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Frame", "->", "True"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "1.5"}], "}"}], ",", "1.01", ",", "2", ",", ".1", 
        ",", 
        RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], " ", "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ploc", ",", 
          RowBox[{"{", 
           RowBox[{"2.5", ",", "1.5"}], "}"}]}], "}"}], ",", "Locator"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ploc2", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}], ",", "Locator"}], 
       "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.76875319043586*^9, 3.768753424760208*^9}, {
  3.7687536010914183`*^9, 3.768753604073511*^9}, {3.7691780162257395`*^9, 
  3.769178018599363*^9}, {3.769418608056295*^9, 3.769418626629637*^9}, {
  3.7724424357549124`*^9, 3.77244301858077*^9}, {3.7724430544539337`*^9, 
  3.7724431633767414`*^9}, {3.7724434465423775`*^9, 3.77244349415781*^9}}],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`tangs$$ = {{
  1.3953675514568842`, -0.3669389270050992}, {-0.40089241333533704`, 
  0.9636240098780274}}, $CellContext`tangs2$$ = {{-1.4810951292061154`, \
-0.15826450186938465`}, {0.7887874368984231, 
  0.850572194177077}}, $CellContext`ell$$ = Graphics[{
    GrayLevel[0], 
    Circle[{0, 0}, {1.5, 1}]}], $CellContext`gr$$ = Graphics[{
    PointSize[Medium], 
    GrayLevel[0], {
     Thickness[Large], 
     RGBColor[0, 0, 1], 
     Line[{{2.5, 1.5}, {1.3953675514568842`, -0.3669389270050992}}], 
     Point[{1.3953675514568842`, -0.3669389270050992}], 
     RGBColor[0, 
      Rational[2, 3], 0], 
     Line[{{2.5, 1.5}, {-0.40089241333533704`, 0.9636240098780274}}], 
     Point[{-0.40089241333533704`, 0.9636240098780274}]}, {
     Thickness[Large], 
     Dashing[{Small, Small}], 
     RGBColor[0, 0, 1], 
     Line[{{-2, 2}, {-1.4810951292061154`, -0.15826450186938465`}}], 
     Point[{-1.4810951292061154`, -0.15826450186938465`}], 
     RGBColor[0, 
      Rational[2, 3], 0], 
     Line[{{-2, 2}, {0.7887874368984231, 0.850572194177077}}], 
     Point[{0.7887874368984231, 0.850572194177077}]}, {
     Dashing[{0, Small}], 
     Line[{{1.3953675514568842`, -0.3669389270050992}, {-0.40089241333533704`,
       0.9636240098780274}}], 
     Line[{{-1.4810951292061154`, -0.15826450186938465`}, {0.7887874368984231,
       0.850572194177077}}]}, {
     RGBColor[0, 
      Rational[2, 3], 0], 
     Line[{{-0.40089241333533704`, 0.9636240098780274}, {-1.693370197725466, 
      0.7246444296198848}}], 
     Point[{-1.693370197725466, 0.7246444296198848}]}, {
     RGBColor[0, 
      Rational[2, 3], 0], 
     Dashing[{Small, Small}], 
     Line[{{0.7887874368984231, 0.850572194177077}, {1.8555878702125086`, 
      0.4108792777894108}}], 
     Point[{1.8555878702125086`, 0.4108792777894108}]}, {
     GrayLevel[0], 
     Line[{{-1.693370197725466, 0.7246444296198848}, {1.8555878702125086`, 
      0.4108792777894108}}], 
     Point[{0.140625, 0.5625}]}}], $CellContext`maxX$$ = 
  3, $CellContext`maxY$$ = 3, $CellContext`int12$$ = {-1.693370197725466, 
  0.7246444296198848}, $CellContext`int21$$ = {1.8555878702125086`, 
  0.4108792777894108}, $CellContext`tripleInt$$ = {0.140625, 0.5625}}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`a$$ = 1.5, $CellContext`ploc$$ = {2.5, 
     1.5}, $CellContext`ploc2$$ = {-2, 2}, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{{
        Hold[$CellContext`a$$], 1.5}, 1.01, 2, 0.1}, {{
        Hold[$CellContext`ploc$$], {2.5, 1.5}}, Automatic}, {{
        Hold[$CellContext`ploc2$$], {-2, 2}}, Automatic}}, Typeset`size$$ = {
     360., {179., 185.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`a$100959$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, 
       "Variables" :> {$CellContext`a$$ = 
         1.5, $CellContext`ploc$$ = {2.5, 1.5}, $CellContext`ploc2$$ = {-2, 
          2}}, "ControllerVariables" :> {
         Hold[$CellContext`a$$, $CellContext`a$100959$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, 
       "Body" :> ($CellContext`ell$$ = $CellContext`plotEll[$CellContext`a$$, 
           Black]; $CellContext`tangs$$ = \
$CellContext`ellTangentsAB[$CellContext`a$$, 
           1, $CellContext`ploc$$]; $CellContext`tangs2$$ = \
$CellContext`ellTangentsAB[$CellContext`a$$, 
           1, $CellContext`ploc2$$]; $CellContext`int12$$ = \
$CellContext`interRays[$CellContext`ploc$$, 
           Part[$CellContext`tangs$$, 
             2] - $CellContext`ploc$$, $CellContext`ploc2$$, 
           Part[$CellContext`tangs2$$, 
             1] - $CellContext`ploc2$$]; $CellContext`int21$$ = \
$CellContext`interRays[$CellContext`ploc2$$, 
           Part[$CellContext`tangs2$$, 
             2] - $CellContext`ploc2$$, $CellContext`ploc$$, 
           Part[$CellContext`tangs$$, 
             1] - $CellContext`ploc$$]; $CellContext`tripleInt$$ = \
$CellContext`interRays[
           Part[$CellContext`tangs$$, 1], Part[$CellContext`tangs$$, 2] - 
           Part[$CellContext`tangs$$, 1], 
           Part[$CellContext`tangs2$$, 1], Part[$CellContext`tangs2$$, 2] - 
           Part[$CellContext`tangs2$$, 1]]; $CellContext`gr$$ = Graphics[{
            PointSize[Medium], Black, {Thick, Blue, 
             Line[{$CellContext`ploc$$, 
               Part[$CellContext`tangs$$, 1]}], 
             Point[
              Part[$CellContext`tangs$$, 1]], 
             Darker[Green], 
             Line[{$CellContext`ploc$$, 
               Part[$CellContext`tangs$$, 2]}], 
             Point[
              Part[$CellContext`tangs$$, 2]]}, {Thick, Dashed, Blue, 
             Line[{$CellContext`ploc2$$, 
               Part[$CellContext`tangs2$$, 1]}], 
             Point[
              Part[$CellContext`tangs2$$, 1]], 
             Darker[Green], 
             Line[{$CellContext`ploc2$$, 
               Part[$CellContext`tangs2$$, 2]}], 
             Point[
              Part[$CellContext`tangs2$$, 2]]}, {Dotted, 
             Line[{
               Part[$CellContext`tangs$$, 1], 
               Part[$CellContext`tangs$$, 2]}], 
             Line[{
               Part[$CellContext`tangs2$$, 1], 
               Part[$CellContext`tangs2$$, 2]}]}, {
             Darker[Green], 
             Line[{
               Part[$CellContext`tangs$$, 2], $CellContext`int12$$}], 
             Point[$CellContext`int12$$]}, {
             Darker[Green], Dashed, 
             Line[{
               Part[$CellContext`tangs2$$, 2], $CellContext`int21$$}], 
             Point[$CellContext`int21$$]}, {Black, 
             Line[{$CellContext`int12$$, $CellContext`int21$$}], 
             Point[$CellContext`tripleInt$$]}}]; 
        Show[{$CellContext`ell$$, $CellContext`gr$$}, 
          PlotRange -> {{-$CellContext`maxX$$, $CellContext`maxX$$}, \
{-$CellContext`maxY$$, $CellContext`maxY$$}}, Frame -> True]), 
       "Specifications" :> {{{$CellContext`a$$, 1.5}, 1.01, 2, 0.1, 
          Appearance -> "Labeled"}, {{$CellContext`ploc$$, {2.5, 1.5}}, 
          Automatic, ControlType -> 
          Locator}, {{$CellContext`ploc2$$, {-2, 2}}, Automatic, ControlType -> 
          Locator}}, "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{417., {229., 235.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.7724427577875233`*^9, 3.772442778998189*^9}, {
   3.772442888909154*^9, 3.7724429307150297`*^9}, 3.7724429691322536`*^9, 
   3.772443019302839*^9, {3.7724430555242834`*^9, 3.7724430829090075`*^9}, 
   3.772443164062716*^9, {3.772443466126135*^9, 3.7724434950773563`*^9}, 
   3.7724622194341583`*^9, 3.772481645616563*^9, 3.77253201531436*^9, 
   3.7727873778490477`*^9, 3.773074355270062*^9, 3.7733167605103235`*^9, 
   3.773328791265973*^9, 3.7733456335405245`*^9, 3.774372733795966*^9, 
   3.7743732959800477`*^9, 3.7752337715926595`*^9, 3.7756419673266554`*^9, 
   3.775646730914284*^9, 3.775727406348605*^9, 3.775911934759837*^9, 
   3.7760680852390366`*^9, 3.776972414140375*^9, 3.777026511408659*^9, 
   3.777361433400947*^9, 3.780253731522211*^9, 3.780255200131299*^9, 
   3.7802554029176035`*^9, 3.7802555350866547`*^9, 3.780259270824794*^9, 
   3.7858643043446407`*^9, 3.787073129144458*^9, 3.788439971137235*^9, 
   3.788983378310422*^9, 3.789459080960351*^9, 3.789459197441912*^9, 
   3.7903202198336334`*^9, 3.791325027250745*^9, 3.7913259002044573`*^9, 
   3.79148437374539*^9, 3.7921432151476154`*^9, 3.7921863246362085`*^9, 
   3.7959582145430636`*^9, 3.7960704951979127`*^9, 3.796115570882092*^9, 
   3.796127413895039*^9, 3.7962220436168585`*^9, 3.796301449404025*^9, 
   3.796316375336364*^9, 3.796420404849391*^9, 3.7964221101913605`*^9, 
   3.796422462950264*^9, 3.7965689319432364`*^9, 3.7965689786450777`*^9, 
   3.796663732868737*^9, 3.7969293584505816`*^9, 3.7969294933850746`*^9, 
   3.797098714865572*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerically Calculate \[Alpha] Using Caustics (Tangents to Ellipse)", \
"Section",
 CellChangeTimes->{{3.768758357772972*^9, 3.768758379565613*^9}, {
   3.76941892229124*^9, 3.769418926634618*^9}, 3.772442720260586*^9, 
   3.772462203051202*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getOneCosAlphaCaustic"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getOneCosAlphaCaustic", "[", 
    RowBox[{"a_", ",", "p1_", ",", "acaustic_", ",", "bcaustic_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tangs", ",", "n"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tangs", "=", 
       RowBox[{"ellTangentsAB", "[", 
        RowBox[{"acaustic", ",", "bcaustic", ",", "p1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"n", "=", 
       RowBox[{"norm", "[", 
        RowBox[{"ellGrad", "[", 
         RowBox[{"a", ",", 
          RowBox[{"Sequence", "@@", "p1"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"2", "nd", " ", "tangent", " ", "is", " ", "clockwise"}], ",",
         " ", 
        RowBox[{"but", " ", "it", " ", 
         RowBox[{"doesn", "'"}], "t", " ", "matter", " ", "as", " ", "the", 
         " ", "normal", " ", "is", " ", "bisected"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"n", ".", 
       RowBox[{"norm", "[", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"tangs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", "p1"}], ")"}], "]"}]}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7687560929688873`*^9, 3.7687563671599393`*^9}, {
  3.76875680926236*^9, 3.768756813126589*^9}, {3.76875760460902*^9, 
  3.768757604783599*^9}, {3.7687577436475663`*^9, 3.7687577488796644`*^9}, {
  3.7687588911244254`*^9, 3.7687588911294127`*^9}, {3.7687590019019623`*^9, 
  3.7687590019079456`*^9}, {3.769093691527079*^9, 3.7690937017112565`*^9}, {
  3.769093795648625*^9, 3.7690937977669315`*^9}}],

Cell[CellGroupData[{

Cell["This may take some time for high-order N-odd nonagon", "Subsubsection",
 CellChangeTimes->{{3.7687624033592362`*^9, 3.7687624346730433`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getAlpha0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getAlpha0", "[", 
    RowBox[{"a_", ",", "errCausticFn_", ",", "x1guess_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "min", ",", "c2", ",", "acaustic", ",", "bcaustic", ",", "p1", ",", 
       "p2", ",", "tangs"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"min", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"FindMinimum", "[", 
         RowBox[{
          RowBox[{"errCausticFn", "[", 
           RowBox[{"a", ",", "x1"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x1", ",", "x1guess"}], "}"}], ",", 
          RowBox[{"Method", "->", "\"\<PrincipalAxis\>\""}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"c2", "=", 
       RowBox[{
        RowBox[{"a", "^", "2"}], "-", "1"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{"b", "=", "1"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"acaustic", "=", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"x1", "/.", 
          RowBox[{"Second", "[", "min", "]"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["a", "caustic"], "^", "2"}], "-", 
         RowBox[{
          SubscriptBox["b", "caustic"], "^", "2"}]}], "\[Equal]", 
        RowBox[{"c", "^", "2"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"bcaustic", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"acaustic", "^", "2"}], "-", "c2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tangs", "=", 
       RowBox[{"ellTangentsAB", "[", 
        RowBox[{"acaustic", ",", "bcaustic", ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"{", 
        RowBox[{"a", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{
        RowBox[{"ellInterRayUnprot", "[", 
         RowBox[{"a", ",", "p1", ",", 
          RowBox[{
           RowBox[{"tangs", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", "p1"}]}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "acaustic", ",", "bcaustic", ",", "tangs", ",", "p1", ",", "p2", ",", 
        "min"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7687513354638853`*^9, 3.768751415088258*^9}, {
  3.7687514653209457`*^9, 3.7687517270263243`*^9}, {3.76875374114643*^9, 
  3.768753766217473*^9}, {3.7687538049129863`*^9, 3.768753846435322*^9}, {
  3.7687542669861584`*^9, 3.768754270242422*^9}, {3.768755037193224*^9, 
  3.768755083439983*^9}, {3.768755116736935*^9, 3.7687551556497726`*^9}, {
  3.768755260386112*^9, 3.7687553004758825`*^9}, {3.7687553332639866`*^9, 
  3.7687553382820024`*^9}, {3.7687589583425756`*^9, 3.768758972686311*^9}, {
  3.7687590217503185`*^9, 3.7687590229980097`*^9}, {3.7690937349134884`*^9, 
  3.769093747056015*^9}, {3.7690938076977043`*^9, 3.769093811737401*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getCosAlphasCaustic"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getCosAlphasCaustic", "[", 
    RowBox[{"a_", ",", "acaustic_", ",", "bcaustic_", ",", 
     RowBox[{"step_:", "1"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tDegs", ",", "tRad", ",", "cossa"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tDegs", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "90", ",", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cossa", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"tRad", "=", 
            RowBox[{"toRad", "[", "#", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"getOneCosAlphaCaustic", "[", 
            RowBox[{"a", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"a", " ", 
                RowBox[{"Cos", "[", "tRad", "]"}]}], ",", 
               RowBox[{"Sin", "[", "tRad", "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", "acaustic", ",", "bcaustic"}], "]"}]}], 
          ")"}], "&"}], "/@", "tDegs"}]}], ";", "\[IndentingNewLine]", 
      "cossa"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.76875676302061*^9, 3.768756793020767*^9}, {
   3.768756823613783*^9, 3.768756912702347*^9}, {3.7687569472141123`*^9, 
   3.7687569530059013`*^9}, 3.7687588911413803`*^9, 3.7687590019209385`*^9, {
   3.768759772180296*^9, 3.768759775324885*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getPolyAlphaCausticTOneQuarter"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPolyAlphaCausticTOneQuarter", "[", 
    RowBox[{"errCausticFn_", ",", "a_", ",", 
     RowBox[{"degStep_:", "10"}], ",", "verbose_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "tsDeg", ",", "tsRad", ",", "alphas", ",", "cosAlphas", ",", "acaustic",
        ",", "bcaustic", ",", "min"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tsDeg", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "359", ",", "degStep"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tsRad", "=", 
       RowBox[{"toRad", "/@", "tsDeg"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"acaustic", ",", "bcaustic", ",", "min"}], "}"}], "=", 
       RowBox[{"Part", "[", 
        RowBox[{
         RowBox[{"getAlpha0", "[", 
          RowBox[{"a", ",", "errCausticFn", ",", 
           RowBox[{
            RowBox[{"-", "a"}], "+", ".1"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "6"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cosAlphas", "=", 
       RowBox[{"getCosAlphasCaustic", "[", 
        RowBox[{"a", ",", "acaustic", ",", "bcaustic"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"alphas", "=", 
       RowBox[{"ArcCos", "/@", "cosAlphas"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "\[Rule]", "a"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<tsDeg\>\"", "\[Rule]", "tsDeg"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<tsRad\>\"", "\[Rule]", "tsRad"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<alphas\>\"", "\[Rule]", "alphas"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<min\>\"", "\[Rule]", "min"}]}], "\[IndentingNewLine]", 
       "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.76875839682382*^9, 3.7687584999190655`*^9}, {
  3.7687586879580717`*^9, 3.768758774191992*^9}, {3.768758831742177*^9, 
  3.7687588515025616`*^9}, {3.7687588911533475`*^9, 3.768758891161327*^9}, {
  3.7687590019298863`*^9, 3.768759040262389*^9}, {3.7687596673179426`*^9, 
  3.7687596821013093`*^9}, {3.7687606648214073`*^9, 3.768760665460698*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getPolyAlphaCausticT"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPolyAlphaCausticT", "[", 
    RowBox[{"errCausticFn_", ",", "a_", ",", "degStep_", ",", "verbose_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "theT", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "if", " ", "the", " ", "step", " ", "angle", " ", "is", " ", "too", 
        " ", "large"}], ",", " ", 
       RowBox[{"the", " ", "previous", " ", "guess", " ", 
        RowBox[{"won", "'"}], "t", " ", "help"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"theT", "=", 
       RowBox[{"getPolyAlphaCausticTOneQuarter", "[", 
        RowBox[{"errCausticFn", ",", "a", ",", "degStep", ",", "verbose"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"theT", "=", 
       RowBox[{"quadrupleT", "[", 
        RowBox[{"theT", ",", "False"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "theT"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7683910326421347`*^9, 3.768391096417637*^9}, {
  3.7683911815547905`*^9, 3.7683912137137957`*^9}, {3.7683912475947065`*^9, 
  3.768391254234969*^9}, {3.7683926935567474`*^9, 3.768392698348937*^9}, {
  3.7683946319440107`*^9, 3.7683946648889785`*^9}, {3.768405290970462*^9, 
  3.768405291961811*^9}, {3.7684053531940784`*^9, 3.768405355722324*^9}, {
  3.768405402754622*^9, 3.7684054660664463`*^9}, {3.7684055669790144`*^9, 
  3.7684055713144464`*^9}, {3.7687588105896535`*^9, 3.768758828140806*^9}, {
  3.768758862852766*^9, 3.7687588909668455`*^9}, {3.768759001939893*^9, 
  3.7687590019448795`*^9}, {3.7687590480375977`*^9, 3.7687590509827175`*^9}, {
  3.7687596395170317`*^9, 3.7687596484544363`*^9}, {3.7687597631362557`*^9, 
  3.7687597644689503`*^9}, {3.768759804332377*^9, 3.7687598044769917`*^9}, {
  3.768759857437007*^9, 3.7687598597723036`*^9}, {3.768760669790123*^9, 
  3.768760671564375*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "calcAlphaCausticT"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"calcAlphaCausticT", "[", 
    RowBox[{"doCalc_", 
     RowBox[{"(*", 
      RowBox[{"False", " ", "for", " ", "load"}], "*)"}], ",", 
     "errCausticFn_", ",", "fname_", ",", "a_", ",", "degStep_", ",", 
     RowBox[{"verbose_:", "True"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "theT", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"doCalc", ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "if", " ", "the", " ", "step", " ", "angle", " ", "is", " ", "too", 
          " ", "large"}], ",", " ", 
         RowBox[{"the", " ", "previous", " ", "guess", " ", 
          RowBox[{"won", "'"}], "t", " ", "help"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"theT", "=", 
         RowBox[{"getPolyAlphaCausticT", "[", 
          RowBox[{"errCausticFn", ",", "a", ",", "degStep", ",", "verbose"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<saving: \>\"", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"\"\<alphas\>\"", "/.", "theT"}], "]"}], ",", 
          "\"\< records to\>\"", ",", "fname"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Save", "[", 
         RowBox[{"fname", ",", "theT"}], "]"}], ";", "\[IndentingNewLine]", 
        "theT"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"theT", "=", 
         RowBox[{"Get", "[", "fname", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<loaded: \>\"", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"\"\<alphas\>\"", "/.", "theT"}], "]"}], ",", 
          "\"\< records from\>\"", ",", "fname"}], "]"}], ";", 
        "\[IndentingNewLine]", "theT"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.768393718798751*^9, 3.7683937891987977`*^9}, {
   3.7683946429456425`*^9, 3.7683946478734703`*^9}, {3.7683947052264795`*^9, 
   3.768394719305291*^9}, {3.768405433251132*^9, 3.768405434802985*^9}, {
   3.768405471452056*^9, 3.76840548694765*^9}, 3.7684061734389315`*^9, {
   3.7684069351735706`*^9, 3.768406935991357*^9}, {3.7687589223427515`*^9, 
   3.76875893677422*^9}, {3.7687590019508624`*^9, 3.7687590019568467`*^9}, {
   3.7687590578304043`*^9, 3.7687590599986053`*^9}, {3.7687606813421974`*^9, 
   3.768760683581006*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["[exp] Relaxation Algm for Alpha w/ Caustics", "Section",
 CellChangeTimes->{{3.7689249450219955`*^9, 3.7689249529817796`*^9}, {
  3.7689277895231056`*^9, 3.7689278014905715`*^9}, {3.769091964982051*^9, 
  3.7690919663105307`*^9}, {3.771696849738105*^9, 3.7716968554114714`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "normErr"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"normErr", "[", 
    RowBox[{"p_", ",", "pl_", ",", "pr_", ",", "norm_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"getBisector", "[", 
     RowBox[{
      RowBox[{"pl", "-", "p"}], ",", 
      RowBox[{"pr", "-", "p"}]}], "]"}], ".", 
    RowBox[{"perp", "[", "norm", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7690001238124604`*^9, 3.769000250851637*^9}, 
   3.769000339075296*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getRelaxErr", "[", 
    RowBox[{"a_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ps", ",", "lower", ",", "psAug", ",", "norms", ",", "bis"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ps", "=", 
       RowBox[{"getEllPs", "[", 
        RowBox[{"a", ",", "ts"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lower", "=", 
       RowBox[{"flipY", "[", 
        RowBox[{"Last", "@", "ps"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"psAug", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "0"}], "}"}], ",", 
         RowBox[{"Sequence", "@@", "ps"}], ",", "lower"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"norms", "=", 
       RowBox[{"norm", "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"ellGrad", "[", 
            RowBox[{"a", ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", "ps"}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"bis", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"normErr", "[", 
           RowBox[{
            RowBox[{"psAug", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"psAug", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"psAug", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
            RowBox[{"norms", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", 
           RowBox[{
            RowBox[{"Length", "[", "psAug", "]"}], "-", "1"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Total", "@", "bis"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7689271994687643`*^9, 3.768927254670164*^9}, {
   3.768927686782805*^9, 3.768927720095714*^9}, {3.7689283091740665`*^9, 
   3.768928328429827*^9}, {3.769000231517042*^9, 3.769000286254578*^9}, 
   3.769000350293295*^9, {3.7690004684281178`*^9, 3.769000476708971*^9}}],

Cell[CellGroupData[{

Cell["\<\
What is an ellipse' s parameters which pass thru point x0, y0 and has focal \
length c\
\>", "Subsubsection",
 CellChangeTimes->{{3.7689311387729254`*^9, 3.768931164465469*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getConfocalEll"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getConfocalEll", "[", 
   RowBox[{"c_", ",", 
    RowBox[{"{", 
     RowBox[{"x0_", ",", "y0_"}], "}"}]}], "]"}], "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eqn1", ",", "eqn2", ",", "ab"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"eqn1", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ac", "^", "2"}], "-", 
        RowBox[{"bc", "^", "2"}]}], "==", 
       RowBox[{"c", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"eqn2", "=", 
      RowBox[{
       RowBox[{"ellError", "[", 
        RowBox[{"ac", ",", "bc", ",", 
         RowBox[{"{", 
          RowBox[{"x0", ",", "y0"}], "}"}]}], "]"}], "\[Equal]", "0"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"ab", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ac", ",", "bc"}], "}"}], "/.", 
       RowBox[{"Quiet", "@", 
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"eqn1", ",", "eqn2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ac", ",", "bc"}], "}"}], ",", "Reals"}], "]"}]}]}]}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.768931089509812*^9, 3.7689311009874988`*^9}, {
   3.7689311317462397`*^9, 3.7689311371869087`*^9}, {3.768931172427207*^9, 
   3.768931246786061*^9}, {3.7689313027396793`*^9, 3.7689313237781143`*^9}, {
   3.768931382362688*^9, 3.768931389106877*^9}, {3.7689314218031387`*^9, 
   3.768931467051931*^9}, {3.768931508259755*^9, 3.768931543786714*^9}, {
   3.7689316454907923`*^9, 3.768931647155341*^9}, {3.768931678924197*^9, 
   3.768931691107377*^9}, {3.768931757163197*^9, 3.7689317785148396`*^9}, {
   3.7689319300443287`*^9, 3.768931931971152*^9}, {3.7689319691866503`*^9, 
   3.768932002211772*^9}, {3.7691633453915462`*^9, 3.769163346263247*^9}, {
   3.7733045234586473`*^9, 3.773304525560027*^9}, 3.77332873974555*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["c", "2"], " ", 
          SuperscriptBox["x0", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["c", "2"]}], "-", 
            SuperscriptBox["x0", "2"], "-", 
            SuperscriptBox["y0", "2"]}], ")"}], " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         SuperscriptBox["#1", "4"]}], "&"}], ",", "1"}], "]"}], ",", 
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["c", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              SuperscriptBox["c", "2"], " ", 
              SuperscriptBox["x0", "2"]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["c", "2"]}], "-", 
                SuperscriptBox["x0", "2"], "-", 
                SuperscriptBox["y0", "2"]}], ")"}], " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             SuperscriptBox["#1", "4"]}], "&"}], ",", "1"}], "]"}], 
         "2"]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["c", "2"], " ", 
          SuperscriptBox["x0", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["c", "2"]}], "-", 
            SuperscriptBox["x0", "2"], "-", 
            SuperscriptBox["y0", "2"]}], ")"}], " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         SuperscriptBox["#1", "4"]}], "&"}], ",", "1"}], "]"}], ",", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["c", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["c", "2"], " ", 
             SuperscriptBox["x0", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["c", "2"]}], "-", 
               SuperscriptBox["x0", "2"], "-", 
               SuperscriptBox["y0", "2"]}], ")"}], " ", 
             SuperscriptBox["#1", "2"]}], "+", 
            SuperscriptBox["#1", "4"]}], "&"}], ",", "1"}], "]"}], "2"]}]]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["c", "2"], " ", 
          SuperscriptBox["x0", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["c", "2"]}], "-", 
            SuperscriptBox["x0", "2"], "-", 
            SuperscriptBox["y0", "2"]}], ")"}], " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         SuperscriptBox["#1", "4"]}], "&"}], ",", "4"}], "]"}], ",", 
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["c", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              SuperscriptBox["c", "2"], " ", 
              SuperscriptBox["x0", "2"]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["c", "2"]}], "-", 
                SuperscriptBox["x0", "2"], "-", 
                SuperscriptBox["y0", "2"]}], ")"}], " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             SuperscriptBox["#1", "4"]}], "&"}], ",", "4"}], "]"}], 
         "2"]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["c", "2"], " ", 
          SuperscriptBox["x0", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["c", "2"]}], "-", 
            SuperscriptBox["x0", "2"], "-", 
            SuperscriptBox["y0", "2"]}], ")"}], " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         SuperscriptBox["#1", "4"]}], "&"}], ",", "4"}], "]"}], ",", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["c", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["c", "2"], " ", 
             SuperscriptBox["x0", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["c", "2"]}], "-", 
               SuperscriptBox["x0", "2"], "-", 
               SuperscriptBox["y0", "2"]}], ")"}], " ", 
             SuperscriptBox["#1", "2"]}], "+", 
            SuperscriptBox["#1", "4"]}], "&"}], ",", "4"}], "]"}], "2"]}]]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJwV0FFIk2EUBuAJpdJ06sZSt4WtLCiSCn6bzlp+oaaTVmy0jIrcsotoufJC
MyWajFhRWV14sUFm5WQRLmSZKWyuBhajrSWZF9rCclv6UX+yCAdp739xeDgH
zuHlyI1m7dk0Ho9Xi2J9gaBUTEmp37Igh458z0sN3ONKDWrhyY7d7yzwQ9/h
Rc6rrPe7AyqFW2IhqNHcZ/5Aa1FWQLeekoDUkDwKH2zTOR2QtXviufmUZE2f
UIngx7/h8R4oKch0TRRSYvskc36DuXp9M4V1ySOin9DEXNrMmW5xOVloN7UJ
GQn66TslHnhIvTwwD5eXEnOnpJSoc15lX4Rvz//qt8F0W6V+rYwS9zVz6z1Y
Nlo/k7YB+f3iyQz4IkWHsuHIqoKK4ewxn5lfRIlw65phzjMZnbPujZTE89iS
NjklByaMlnZYMx6efwiflEZXU9x8wa06uImSancwzCvGX54ly6WwJrPijRfO
PBL5qrdTEhLseF+loKSpu1/1tRw57rbf5lSu0938oaQkEd0ZiVRQIgh7opxs
cVd96z5KTifMtHE/7v+7ddwAq/Z6RwehJkAvsJWUfNb+LlPUUrLiX+Q3Q7bF
KLDCIfnrqRswxnTwR+BUDxP5Au19S5IYnAv1xgrqKNnVGRwrhLLeRJyTyeky
GaDV39DC2bDyeLgbPr0+eS5Pjb3Lz69wjlkbpU3wP5QKHew=
  "]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getTangCW"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getTangCW", "[", 
    RowBox[{"a_", ",", "p1_", ",", "acaustic_", ",", "bcaustic_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tangs", ",", "norm"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tangs", "=", 
       RowBox[{"ellTangentsAB", "[", 
        RowBox[{"acaustic", ",", "bcaustic", ",", "p1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"norm", "=", 
       RowBox[{"ellGrad", "[", 
        RowBox[{"a", ",", 
         RowBox[{"Sequence", "@@", "p1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"tangs", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", "p1"}], ")"}], ".", 
          RowBox[{"perp", "[", "norm", "]"}]}], ">", "0"}], ",", 
        RowBox[{"tangs", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"tangs", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.768935068557243*^9, 3.7689350958040967`*^9}, {
  3.7689354016882753`*^9, 3.7689354041915812`*^9}, {3.7690936362463627`*^9, 
  3.769093656382089*^9}, {3.769093817696435*^9, 3.769093820679039*^9}, {
  3.7696818713142595`*^9, 3.769681979378952*^9}, {3.7762523859382477`*^9, 
  3.776252386956525*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getTangCCW"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getTangCCW", "[", 
    RowBox[{"a_", ",", "p1_", ",", "acaustic_", ",", "bcaustic_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tangs", ",", "norm"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tangs", "=", 
       RowBox[{"ellTangentsAB", "[", 
        RowBox[{"acaustic", ",", "bcaustic", ",", "p1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"norm", "=", 
       RowBox[{"ellGrad", "[", 
        RowBox[{"a", ",", 
         RowBox[{"Sequence", "@@", "p1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"tangs", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", "p1"}], ")"}], ".", 
          RowBox[{"perp", "[", "norm", "]"}]}], ">", "0"}], ",", 
        RowBox[{"tangs", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"tangs", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.775734086348216*^9, 3.775734095260466*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getInitTs"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getInitTs", "[", 
    RowBox[{"a_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tstep", ",", "ts"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tstep", "=", 
       RowBox[{"\[Pi]", "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "1"}], ")"}], "/", "2."}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ts", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"i", "*", "tstep"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}], "/", "2"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "ts"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7689270939645867`*^9, 3.7689271609494553`*^9}, 
   3.7689273588374424`*^9, {3.769030547868544*^9, 3.7690305506032577`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getInitTs2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getInitTs2", "[", 
    RowBox[{"a_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "tstep", ",", "ts", ",", "c", ",", "xmin", ",", "xmax", ",", "xstep", 
       ",", "xs"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"c", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"a", "<", "1"}], ",", 
         RowBox[{".25", "*", "a"}], ",", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"a", "^", "2"}], "-", "1"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xmax", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"c", "+", "a"}], ")"}], "/", "2"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xmin", "=", 
       RowBox[{"-", "xmax"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xstep", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"xmax", "-", "xmin"}], ")"}], 
        RowBox[{"2", "/", 
         RowBox[{"(", 
          RowBox[{"n", "-", "1"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xs", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"xmax", "-", 
          RowBox[{"i", "*", "xstep"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}], "/", "2"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"ts", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"ArcCos", "[", 
          RowBox[{"#", "/", "a"}], "]"}], "&"}], "/@", "xs"}]}], ";", 
      "\[IndentingNewLine]", "ts"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.769030654337862*^9, 3.769030802523659*^9}, {
  3.769030848090606*^9, 3.769030938403396*^9}, {3.7690310493875475`*^9, 
  3.7690310532611876`*^9}, {3.769031134843566*^9, 3.76903116625076*^9}, {
  3.769163175535831*^9, 3.7691631990479517`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getInitTs", "[", 
  RowBox[{"1.5", ",", "7"}], "]"}]], "Input",
 CellChangeTimes->{{3.769030907503944*^9, 3.7690309108091326`*^9}, {
  3.769030956017292*^9, 3.7690309573540826`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7853981633974483`", ",", "1.5707963267948966`", ",", 
   "2.356194490192345`"}], "}"}]], "Output",
 CellChangeTimes->{{3.7690309112289824`*^9, 3.7690309577550135`*^9}, 
   3.769031054724275*^9, 3.769031138284966*^9, 3.7691015844709992`*^9, 
   3.769159864853361*^9, 3.7691758920947275`*^9, 3.7692676456827354`*^9, 
   3.7692757678710814`*^9, 3.7693722335921855`*^9, 3.7693725065234084`*^9, 
   3.769425702011737*^9, 3.7695301612013464`*^9, 3.7696086126827908`*^9, 
   3.7698022724486604`*^9, 3.769806755080516*^9, 3.7699494906457043`*^9, 
   3.7701896296907883`*^9, 3.770194418899045*^9, 3.7704637505558505`*^9, 
   3.7716124883028092`*^9, 3.7716698089509325`*^9, 3.7716877947498674`*^9, 
   3.7716911625706816`*^9, 3.7716912915944977`*^9, 3.7716964373508234`*^9, 
   3.771834515777912*^9, 3.772096876507725*^9, 3.772198207856144*^9, 
   3.772444439341494*^9, 3.772481645826971*^9, 3.7725320155257754`*^9, 
   3.7727873780674644`*^9, 3.7730743555472913`*^9, 3.773316760730734*^9, 
   3.7733287914424734`*^9, 3.773345633813795*^9, 3.774372734033363*^9, 
   3.774373296173529*^9, 3.775233771954692*^9, 3.775641967570511*^9, 
   3.7756467311406794`*^9, 3.7757274065400925`*^9, 3.775911935080019*^9, 
   3.7760680855881033`*^9, 3.77697241444989*^9, 3.7770265117148404`*^9, 
   3.777361433963439*^9, 3.780259320690426*^9, 3.787073129475544*^9, 
   3.78844005327748*^9, 3.7884406881048517`*^9, 3.7889833786696186`*^9, 
   3.7894590816475353`*^9, 3.789459197727363*^9, 3.790320220134827*^9, 
   3.791325027690597*^9, 3.7913259004896927`*^9, 3.791484374015668*^9, 
   3.7921432154737487`*^9, 3.7959582159722366`*^9, 3.796070495437244*^9, 
   3.796115571145394*^9, 3.796127414145369*^9, 3.796222044031299*^9, 
   3.7963014497989683`*^9, 3.7963163756443143`*^9, 3.796420405052845*^9, 
   3.7964221104197474`*^9, 3.796422463432005*^9, 3.7965689321054516`*^9, 
   3.796568978824024*^9, 3.796663733353835*^9, 3.796929358667033*^9, 
   3.7969294935616307`*^9, 3.7970987150750127`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getInitTs2", "[", 
  RowBox[{"1.5", ",", "7"}], "]"}]], "Input",
 CellChangeTimes->{{3.769030912985285*^9, 3.769030917601939*^9}, {
  3.7690309528996277`*^9, 3.769030953506007*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.2756366082958577`", ",", "1.8659560452939352`", ",", 
   "2.6314564258196174`"}], "}"}]], "Output",
 CellChangeTimes->{{3.769030917954994*^9, 3.769030953788254*^9}, 
   3.769031055890686*^9, 3.769031139073857*^9, 3.7691015844989247`*^9, 
   3.7691598648653173`*^9, 3.769175892104701*^9, 3.769267645702682*^9, 
   3.769275767881056*^9, 3.769372233610137*^9, 3.7693725065333815`*^9, 
   3.7694257020266685`*^9, 3.7695301612163067`*^9, 3.769608612711684*^9, 
   3.769802272468607*^9, 3.7698067550964737`*^9, 3.769949490661662*^9, 
   3.7701896297057486`*^9, 3.7701944189090185`*^9, 3.770463750573801*^9, 
   3.7716124883187666`*^9, 3.771669808965893*^9, 3.7716877947648277`*^9, 
   3.77169116258265*^9, 3.7716912916094856`*^9, 3.7716964373637886`*^9, 
   3.7718345157928433`*^9, 3.772096876522684*^9, 3.7721982078741226`*^9, 
   3.772444439358574*^9, 3.7724816458419304`*^9, 3.7725320155397243`*^9, 
   3.772787378081395*^9, 3.773074355566269*^9, 3.7733167607466917`*^9, 
   3.7733287914544415`*^9, 3.7733456338337417`*^9, 3.7743727340502853`*^9, 
   3.7743732961864944`*^9, 3.775233771976632*^9, 3.7756419675914545`*^9, 
   3.775646731157634*^9, 3.7757274065580444`*^9, 3.7759119351059504`*^9, 
   3.7760680856080503`*^9, 3.7769724144698367`*^9, 3.777026511732793*^9, 
   3.7773614339883733`*^9, 3.78025932070436*^9, 3.7870731294955225`*^9, 
   3.7884400532974167`*^9, 3.7884406886872663`*^9, 3.7889833786868105`*^9, 
   3.7894590816805067`*^9, 3.7894591977453184`*^9, 3.790320220153776*^9, 
   3.791325027710515*^9, 3.7913259005076447`*^9, 3.7914843740356145`*^9, 
   3.792143215611883*^9, 3.7959582160600033`*^9, 3.796070495455196*^9, 
   3.796115571163394*^9, 3.796127414166313*^9, 3.79622204405723*^9, 
   3.7963014498179183`*^9, 3.7963163756602716`*^9, 3.796420405068804*^9, 
   3.7964221104356756`*^9, 3.796422463453946*^9, 3.796568932118464*^9, 
   3.7965689788339977`*^9, 3.796663733377101*^9, 3.7969293586839867`*^9, 
   3.7969294935725737`*^9, 3.797098715088006*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getCausticAxes"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getCausticAxes", "[", 
    RowBox[{"a_", ",", "p1_", ",", "p2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f1", ",", "f2", ",", "f2p", ",", "pb", ",", "causticAxes"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"f1", ",", "f2"}], "}"}], "=", 
       RowBox[{"getFoci", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"f2p", "=", 
       RowBox[{"reflAboutLine", "[", 
        RowBox[{"f2", ",", "p1", ",", "p2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"f2foot", "=", 
         RowBox[{".5", 
          RowBox[{"(", 
           RowBox[{"f2", "+", "f2p"}], ")"}]}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"pb", "=", 
       RowBox[{"interRays", "[", 
        RowBox[{"f1", ",", 
         RowBox[{"f2p", "-", "f1"}], ",", "p1", ",", 
         RowBox[{"p2", "-", "p1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"causticAxes", "=", 
       RowBox[{"First", "@", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"getConfocalEll", "[", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"a", "^", "2"}], "-", "1"}], "]"}], ",", "pb"}], "]"}], 
          ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ">", "0"}]}], ")"}], "&"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", "causticAxes"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7692956117270927`*^9, 3.76929571827701*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "getCausticOddN"}], ";", 
  RowBox[{
   RowBox[{"getCausticOddN", "[", 
    RowBox[{"a_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ts", ",", "ps", ",", "p1", ",", "lower", ",", "norms", ",", "tsyms", 
       ",", "min", ",", "p2", ",", "f1", ",", "f2", ",", 
       RowBox[{"(*", 
        RowBox[{"f2foot", ","}], "*)"}], "f2p", ",", "pb", ",", "causticAxes",
        ",", "poly"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ts", "=", 
       RowBox[{"getInitTs2", "[", 
        RowBox[{"a", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ps", "=", 
       RowBox[{"getEllPs", "[", 
        RowBox[{"a", ",", "ts"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lower", "=", 
       RowBox[{"flipY", "[", 
        RowBox[{"Last", "@", "ps"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"{", 
        RowBox[{"a", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"norms", "=", 
       RowBox[{"norm", "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"ellGrad", "[", 
            RowBox[{"a", ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", "ps"}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tsyms", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Symbol", "[", 
          RowBox[{"\"\<t\>\"", "<>", 
           RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "@", "ps"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"min", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"FindMinimum", "[", 
         RowBox[{
          RowBox[{"getRelaxErr", "[", 
           RowBox[{"a", ",", "tsyms"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"tsyms", ",", "ts"}], "}"}]}], "]"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{
        RowBox[{"getEllPs", "[", 
         RowBox[{"a", ",", 
          RowBox[{"tsyms", "/.", 
           RowBox[{"min", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"f1", ",", "f2"}], "}"}], "=", 
       RowBox[{"getFoci", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"f2foot", "=", 
         RowBox[{"closestPerp", "[", 
          RowBox[{"f2", ",", "p1", ",", "p2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"f2p", "=", 
         RowBox[{"f2", "+", 
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{"f2foot", "-", "f2"}], ")"}]}]}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"f2p", "=", 
       RowBox[{"reflAboutLine", "[", 
        RowBox[{"f2", ",", "p1", ",", "p2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"f2foot", "=", 
         RowBox[{".5", 
          RowBox[{"(", 
           RowBox[{"f2", "+", "f2p"}], ")"}]}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"pb", "=", 
       RowBox[{"interRays", "[", 
        RowBox[{"f1", ",", 
         RowBox[{"f2p", "-", "f1"}], ",", "p1", ",", 
         RowBox[{"p2", "-", "p1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"causticAxes", "=", 
       RowBox[{"First", "@", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"getConfocalEll", "[", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"a", "^", "2"}], "-", "1"}], "]"}], ",", "pb"}], "]"}], 
          ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ">", "0"}]}], ")"}], "&"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"poly", "=", 
       RowBox[{"Chop", "@", 
        RowBox[{"bounceRay", "[", 
         RowBox[{"a", ",", "p1", ",", "p2", ",", 
          RowBox[{"n", "-", "1"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "\[Rule]", "a"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<n\>\"", "\[Rule]", "n"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<causticAB\>\"", "\[Rule]", "causticAxes"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<poly\>\"", "\[Rule]", "poly"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<error\>\"", "\[Rule]", 
         RowBox[{"min", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"for", " ", "geometric", " ", "drawing"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<f1\>\"", "\[Rule]", "f1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<f2\>\"", "\[Rule]", "f2"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<f2p\>\"", "\[Rule]", "f2p"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<pb\>\"", "\[Rule]", "pb"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<guessPoly\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"p1", ",", 
           RowBox[{"Sequence", "@@", "ps"}], ",", "lower"}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<guessNorms\>\"", "\[Rule]", "norms"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.768989352381946*^9, 3.768989466239019*^9}, {
   3.768989503767652*^9, 3.7689898178596954`*^9}, {3.7689898504532185`*^9, 
   3.7689899164306436`*^9}, {3.7689899483270345`*^9, 
   3.7689899684618483`*^9}, {3.7689904124078455`*^9, 3.768990430342396*^9}, {
   3.768991102411971*^9, 3.7689911194429045`*^9}, {3.768991188554173*^9, 
   3.768991188833454*^9}, {3.7689914331418114`*^9, 3.768991483916825*^9}, {
   3.7689915179812856`*^9, 3.768991518637189*^9}, {3.7689915522786083`*^9, 
   3.7689915656046925`*^9}, {3.768991812933257*^9, 3.7689918223570538`*^9}, {
   3.7689985895298877`*^9, 3.768998593225006*^9}, {3.76903055348531*^9, 
   3.7690305536369324`*^9}, 3.7690309727668624`*^9, {3.7691630290116954`*^9, 
   3.769163033171598*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getRelaxErrEven", "[", 
    RowBox[{"a_", ",", "ts_", ",", "mod4_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ps", ",", "left", ",", "psAug", ",", "norms", ",", "bis"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ps", "=", 
       RowBox[{"getEllPs", "[", 
        RowBox[{"a", ",", "ts"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"left", "=", 
       RowBox[{"If", "[", 
        RowBox[{"mod4", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"flipX", "[", 
          RowBox[{"Last", "@", "ps"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"psAug", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "0"}], "}"}], ",", 
         RowBox[{"Sequence", "@@", "ps"}], ",", "left"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"norms", "=", 
       RowBox[{"norm", "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"ellGrad", "[", 
            RowBox[{"a", ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", "ps"}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"bis", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"normErr", "[", 
           RowBox[{
            RowBox[{"psAug", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"psAug", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"psAug", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
            RowBox[{"norms", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", 
           RowBox[{
            RowBox[{"Length", "[", "psAug", "]"}], "-", "1"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Total", "@", "bis"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.769000068204104*^9, 3.7690001040313625`*^9}, {
  3.7690003953415775`*^9, 3.7690003958951254`*^9}, {3.7690004313732157`*^9, 
  3.769000464981364*^9}, {3.76900049914098*^9, 3.769000589709035*^9}, {
  3.769001258597196*^9, 3.769001258948256*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getInitTsEven"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getInitTsEven", "[", 
    RowBox[{"a_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"slices", ",", "tstep", ",", "ts"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"slices", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"n", "/", "2"}], "+", "1"}], ")"}], "/", "2"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"tstep", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Pi]", "/", "2."}], ")"}], "/", "slices"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ts", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"i", "*", "tstep"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"slices", "-", "1"}]}], "}"}]}], "]"}]}], ";", "ts"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7689986807646575`*^9, 3.768998737556775*^9}, {
   3.7689990829977207`*^9, 3.7689990886287413`*^9}, {3.768999510899435*^9, 
   3.7689995522847548`*^9}, {3.768999608732793*^9, 3.768999642292425*^9}, 
   3.768999678148533*^9, {3.769030566706355*^9, 3.7690305743550854`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "getCausticEvenN"}], ";", 
  RowBox[{
   RowBox[{"getCausticEvenN", "[", 
    RowBox[{"a_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "mod4", ",", "ts", ",", "ps", ",", "p1", ",", "left", ",", "norms", ",",
        "tsyms", ",", "min", ",", "p2", ",", "f1", ",", "f2", ",", 
       RowBox[{"(*", 
        RowBox[{"f2foot", ","}], "*)"}], "f2p", ",", "pb", ",", "causticAxes",
        ",", "poly"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mod4", "=", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"n", ",", "4"}], "]"}], "\[Equal]", "0"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"{", 
        RowBox[{"a", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", ">", "4"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ts", "=", 
          RowBox[{"getInitTsEven", "[", 
           RowBox[{"a", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ps", "=", 
          RowBox[{"getEllPs", "[", 
           RowBox[{"a", ",", "ts"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"left", "=", 
          RowBox[{"If", "[", 
           RowBox[{"mod4", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"flipX", "[", 
             RowBox[{"Last", "@", "ps"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"norms", "=", 
          RowBox[{"norm", "/@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"ellGrad", "[", 
               RowBox[{"a", ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", "ps"}],
             ")"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"parou", " ", 
           RowBox[{"aqui", ":", " ", 
            RowBox[{
            "ser\[AAcute]", " ", "que", " ", "otimizacao", " ", "esta", " ", 
             "correta"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"tsyms", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Symbol", "[", 
             RowBox[{"\"\<t\>\"", "<>", 
              RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "@", "ps"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"min", "=", 
          RowBox[{"Quiet", "@", 
           RowBox[{"FindMinimum", "[", 
            RowBox[{
             RowBox[{"getRelaxErrEven", "[", 
              RowBox[{"a", ",", "tsyms", ",", "mod4"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"tsyms", ",", "ts"}], "}"}]}], "]"}]}], "]"}]}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"p2", "=", 
          RowBox[{
           RowBox[{"getEllPs", "[", 
            RowBox[{"a", ",", 
             RowBox[{"tsyms", "/.", 
              RowBox[{"min", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"n", "=", 
          RowBox[{"4", " ", "special", " ", "case"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ps", "=", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], "}"}]}], ";", 
         RowBox[{"norms", "=", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}], "}"}]}], ";", 
         RowBox[{"p2", "=", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], ";", 
         RowBox[{"left", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "0"}], "}"}]}], ";", 
         RowBox[{"min", "=", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"{", "}"}]}], "}"}]}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"f1", ",", "f2"}], "}"}], "=", 
       RowBox[{"getFoci", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"f2p", "=", 
       RowBox[{"reflAboutLine", "[", 
        RowBox[{"f2", ",", "p1", ",", "p2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pb", "=", 
       RowBox[{"interRays", "[", 
        RowBox[{"f1", ",", 
         RowBox[{"f2p", "-", "f1"}], ",", "p1", ",", 
         RowBox[{"p2", "-", "p1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"causticAxes", "=", 
       RowBox[{"First", "@", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"getConfocalEll", "[", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"a", "^", "2"}], "-", "1"}], "]"}], ",", "pb"}], "]"}], 
          ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ">", "0"}]}], ")"}], "&"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"poly", "=", 
       RowBox[{"Chop", "@", 
        RowBox[{"bounceRay", "[", 
         RowBox[{"a", ",", "p1", ",", "p2", ",", 
          RowBox[{"n", "-", "1"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "\[Rule]", "a"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<n\>\"", "\[Rule]", "n"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<causticAB\>\"", "\[Rule]", "causticAxes"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<poly\>\"", "\[Rule]", "poly"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<error\>\"", "\[Rule]", 
         RowBox[{"min", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"for", " ", "geometric", " ", "drawing"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<f1\>\"", "\[Rule]", "f1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<f2\>\"", "\[Rule]", "f2"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<f2p\>\"", "\[Rule]", "f2p"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<pb\>\"", "\[Rule]", "pb"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<guessPoly\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"p1", ",", 
           RowBox[{"Sequence", "@@", "ps"}], ",", "left"}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<guessNorms\>\"", "\[Rule]", "norms"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7689985669280844`*^9, 3.7689985806257024`*^9}, {
  3.76899970196695*^9, 3.7689997741993847`*^9}, {3.768999805989367*^9, 
  3.7689998639755955`*^9}, {3.7689999132548037`*^9, 3.768999914726867*^9}, {
  3.7690000025260596`*^9, 3.7690000110240245`*^9}, {3.769000604124484*^9, 
  3.769000651054247*^9}, {3.769000681320304*^9, 3.7690007031608944`*^9}, {
  3.7690007863428698`*^9, 3.769000786799655*^9}, {3.7690010792637987`*^9, 
  3.769001096704156*^9}, {3.769001372408377*^9, 3.769001386008054*^9}, {
  3.769001471286968*^9, 3.7690015020307198`*^9}, {3.769001544022442*^9, 
  3.769001676543784*^9}, {3.769030560924508*^9, 3.7690305612047873`*^9}, {
  3.7691630080678806`*^9, 3.7691630173957605`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "rotCaustic"}], ";", 
  RowBox[{
   RowBox[{"rotCaustic", "[", "caustic_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "a", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"\"\<a\>\"", "/.", "caustic"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "\[Rule]", "a"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<n\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"\"\<n\>\"", "/.", "caustic"}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<causticAB\>\"", "\[Rule]", 
         RowBox[{"a", "*", 
          RowBox[{"Reverse", "[", 
           RowBox[{"\"\<causticAB\>\"", "/.", "caustic"}], "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<poly\>\"", "\[Rule]", 
         RowBox[{"a", "*", 
          RowBox[{"(", 
           RowBox[{"perp", "/@", 
            RowBox[{"(", 
             RowBox[{"\"\<poly\>\"", "/.", "caustic"}], ")"}]}], ")"}]}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<error\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"\"\<error\>\"", "/.", "caustic"}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"for", " ", "geometric", " ", "drawing"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<f1\>\"", "\[Rule]", 
         RowBox[{"a", "*", 
          RowBox[{"perp", "[", 
           RowBox[{"\"\<f1\>\"", "/.", "caustic"}], "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<f2\>\"", "\[Rule]", 
         RowBox[{"a", "*", 
          RowBox[{"perp", "[", 
           RowBox[{"\"\<f2\>\"", "/.", "caustic"}], "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<f2p\>\"", "\[Rule]", 
         RowBox[{"a", "*", 
          RowBox[{"perp", "[", 
           RowBox[{"\"\<f2p\>\"", "/.", "caustic"}], "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<pb\>\"", "\[Rule]", 
         RowBox[{"a", "*", 
          RowBox[{"perp", "[", 
           RowBox[{"\"\<pb\>\"", "/.", "caustic"}], "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<guessPoly\>\"", "\[Rule]", 
         RowBox[{"a", "*", 
          RowBox[{"(", 
           RowBox[{"perp", "/@", 
            RowBox[{"(", 
             RowBox[{"\"\<guessPoly\>\"", "/.", "caustic"}], ")"}]}], 
           ")"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<guessNorms\>\"", "\[Rule]", 
         RowBox[{"a", "*", 
          RowBox[{"(", 
           RowBox[{"perp", "/@", 
            RowBox[{"(", 
             RowBox[{"\"\<guessNorms\>\"", "/.", "caustic"}], ")"}]}], 
           ")"}]}]}]}], "\[IndentingNewLine]", "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.76916083551994*^9, 3.7691608407598968`*^9}, {
  3.7691608790894175`*^9, 3.7691610728420362`*^9}, {3.7691612302093935`*^9, 
  3.7691612322578864`*^9}, {3.76916354155297*^9, 3.7691636275694113`*^9}, {
  3.769163969872902*^9, 3.769163974343917*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getCausticBoth"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getCausticBoth", "[", 
    RowBox[{"a_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a0", ",", "caustic"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a0", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"a", "<", "1"}], ",", 
         RowBox[{"1", "/", "a"}], ",", "a"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"caustic", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"EvenQ", "[", "n", "]"}], ",", 
         RowBox[{"getCausticEvenN", "[", 
          RowBox[{"a0", ",", "n"}], "]"}], ",", 
         RowBox[{"getCausticOddN", "[", 
          RowBox[{"a0", ",", "n"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"a", "<", "1"}], ",", 
        RowBox[{"rotCaustic", "[", "caustic", "]"}], ",", "caustic"}], 
       "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7690299604834332`*^9, 3.769029970370954*^9}, {
  3.7690309935702267`*^9, 3.7690309956656237`*^9}, {3.7691607176478424`*^9, 
  3.7691608686413317`*^9}, {3.76916394678446*^9, 3.769163948672598*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Do caustic touchpoints configure orbit within caustic?", "Subsubsection",
 CellChangeTimes->{{3.7689922396177945`*^9, 3.7689922532004538`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getPolyCaustic"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPolyCaustic", "[", 
    RowBox[{"a_", ",", "n_", ",", "tRad_", ",", "causticAB_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "p1rot", ",", "tang", ",", "p2rot", ",", "bouncedRot", ",", 
       "normsRot"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p1rot", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", " ", 
          RowBox[{"Cos", "[", "tRad", "]"}]}], ",", 
         RowBox[{"Sin", "[", "tRad", "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "may", " ", "not", " ", "be", " ", "always", " ", "picking", " ", 
        "the", " ", "right", " ", "tangent"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"tang", "=", 
       RowBox[{"getTangCW", "[", 
        RowBox[{"a", ",", "p1rot", ",", 
         RowBox[{"Sequence", "@@", "causticAB"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p2rot", "=", 
       RowBox[{
        RowBox[{"ellInterRayUnprot", "[", 
         RowBox[{"a", ",", "p1rot", ",", 
          RowBox[{"tang", "-", "p1rot"}]}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"bouncedRot", "=", 
       RowBox[{"bounceRay", "[", 
        RowBox[{"a", ",", "p1rot", ",", "p2rot", ",", 
         RowBox[{"n", "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"normsRot", "=", 
       RowBox[{"norm", "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"ellGrad", "[", 
            RowBox[{"a", ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
          "bouncedRot"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"bouncedRot", ",", "normsRot"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7689900621043925`*^9, 3.7689901366667423`*^9}, {
   3.769027799525817*^9, 3.7690277997083282`*^9}, 3.7690278498277693`*^9, {
   3.769027900327688*^9, 3.7690279007171707`*^9}, {3.7696817210353127`*^9, 
   3.769681731228793*^9}, {3.7696818599795637`*^9, 3.769681861075633*^9}, 
   3.77598733215799*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getPolyCausticInner"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPolyCausticInner", "[", 
    RowBox[{"a_", ",", "n_", ",", "tDeg_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "causticData", ",", "causticAB", ",", "logErr", ",", "p1rot", ",", 
       "tang", ",", "p2rot", ",", "bouncedRot", ",", "normsRot", ",", "tangs",
        ",", "tRad"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"causticData", "=", 
       RowBox[{"getCausticBoth", "[", 
        RowBox[{"a", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"logErr", "=", 
       RowBox[{"Log10", "[", 
        RowBox[{"\"\<error\>\"", "/.", "causticData"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"logErr", ">", 
         RowBox[{"-", "6"}]}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<a=\>\"", ",", 
          RowBox[{"nfn", "[", 
           RowBox[{"a", ",", "2"}], "]"}], ",", "\"\<, n=\>\"", ",", "n", 
          ",", "\"\<: \!\(\*SubscriptBox[\(log\), \(10\)]\)(error)=\>\"", ",", 
          RowBox[{"nfn", "[", 
           RowBox[{"logErr", ",", "2"}], "]"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"causticAB", "=", 
       RowBox[{"\"\<causticAB\>\"", "/.", "causticData"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tRad", "=", 
       RowBox[{"toRad", "@", "tDeg"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p1rot", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", " ", 
          RowBox[{"Cos", "[", "tRad", "]"}]}], ",", 
         RowBox[{"Sin", "[", "tRad", "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "may", " ", "not", " ", "be", " ", "always", " ", "picking", " ", 
        "the", " ", "right", " ", "tangent"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"tang", "=", 
       RowBox[{"getTangCW", "[", 
        RowBox[{"a", ",", "p1rot", ",", 
         RowBox[{"Sequence", "@@", "causticAB"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p2rot", "=", 
       RowBox[{
        RowBox[{"ellInterRayUnprot", "[", 
         RowBox[{"a", ",", "p1rot", ",", 
          RowBox[{"tang", "-", "p1rot"}]}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"bouncedRot", "=", 
       RowBox[{"bounceRay", "[", 
        RowBox[{"a", ",", "p1rot", ",", "p2rot", ",", 
         RowBox[{"n", "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tangs", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"getTangCW", "[", 
          RowBox[{"a", ",", "#", ",", 
           RowBox[{"Sequence", "@@", "causticAB"}]}], "]"}], "&"}], "/@", 
        "bouncedRot"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"needs", " ", 
        RowBox[{"Most", "[", "]"}], " ", "so", " ", "first", " ", "and", " ", 
        "last", " ", "are", " ", "not", " ", "repeated"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Most", "@", "bouncedRot"}], ",", 
        RowBox[{"Most", "@", "tangs"}], ",", "causticAB"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.789132936226738*^9, 3.789132960150113*^9}, {
  3.7891330069888444`*^9, 3.7891330375505843`*^9}, {3.789133074710142*^9, 
  3.789133179206773*^9}, {3.7891334063028436`*^9, 3.789133409366572*^9}, {
  3.789139839316992*^9, 3.7891398670130672`*^9}, {3.7891401648201385`*^9, 
  3.7891401982999954`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get orbit vertices for a generic N", "Subsubsection",
 CellChangeTimes->{{3.7885334998742414`*^9, 3.788533512403906*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"slow", ",", " ", 
    RowBox[{
    "since", " ", "needs", " ", "to", " ", "recompute", " ", "caustic", " ", 
     "everytime"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"use", " ", "getCausticOrbits", " ", "for", " ", "efficiency"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "@", "getCausticOrbit"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getCausticOrbit", "[", 
      RowBox[{"a_", ",", "n_", ",", "t_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "causticData", ",", "causticAB", ",", "poly", ",", "norms", ",", 
         "logErr"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"causticData", "=", 
         RowBox[{"getCausticBoth", "[", 
          RowBox[{"a", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"logErr", "=", 
         RowBox[{"Log10", "[", 
          RowBox[{"\"\<error\>\"", "/.", "causticData"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"logErr", ">", 
           RowBox[{"-", "6"}]}], ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<a=\>\"", ",", 
            RowBox[{"nfn", "[", 
             RowBox[{"a", ",", "2"}], "]"}], ",", "\"\<, n=\>\"", ",", "n", 
            ",", "\"\<: \!\(\*SubscriptBox[\(log\), \(10\)]\)(error)=\>\"", 
            ",", 
            RowBox[{"nfn", "[", 
             RowBox[{"logErr", ",", "2"}], "]"}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"causticAB", "=", 
         RowBox[{"\"\<causticAB\>\"", "/.", "causticData"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Most", "@", 
         RowBox[{
          RowBox[{"getPolyCaustic", "[", 
           RowBox[{"a", ",", "n", ",", "t", ",", "causticAB"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7696802226589966`*^9, 3.7696802280674353`*^9}, {
  3.7696802668109274`*^9, 3.769680298050523*^9}, {3.7696803346694913`*^9, 
  3.7696803535102067`*^9}, {3.769680444598748*^9, 3.7696804459471416`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getGammaN", "[", 
   RowBox[{"a_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"orb5", ",", "p21hat", ",", "cosAlpha"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"orb5", "=", 
      RowBox[{"getCausticOrbit", "[", 
       RowBox[{"a", ",", "n", ",", 
        RowBox[{"toRad", "@", "0"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p21hat", "=", 
      RowBox[{"norm", "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"orb5", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"orb5", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cosAlpha", "=", 
      RowBox[{"-", 
       RowBox[{"p21hat", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cosAlpha", "/", "a"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7891531164392223`*^9, 3.789153216684646*^9}, {
  3.7891532690848837`*^9, 3.789153360781269*^9}, {3.791325115121886*^9, 
  3.7913251156574535`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getCausticOrbits"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getCausticOrbits", "[", 
    RowBox[{"a_", ",", "n_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "causticData", ",", "causticAB", ",", "poly", ",", "norms", ",", 
       "logErr"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"causticData", "=", 
       RowBox[{"getCausticBoth", "[", 
        RowBox[{"a", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"logErr", "=", 
       RowBox[{"Log10", "[", 
        RowBox[{"\"\<error\>\"", "/.", "causticData"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"logErr", ">", 
         RowBox[{"-", "6"}]}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<a=\>\"", ",", 
          RowBox[{"nfn", "[", 
           RowBox[{"a", ",", "2"}], "]"}], ",", "\"\<, n=\>\"", ",", "n", 
          ",", "\"\<: \!\(\*SubscriptBox[\(log\), \(10\)]\)(error)=\>\"", ",", 
          RowBox[{"nfn", "[", 
           RowBox[{"logErr", ",", "2"}], "]"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"causticAB", "=", 
       RowBox[{"\"\<causticAB\>\"", "/.", "causticData"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Most", "@", 
          RowBox[{
           RowBox[{"getPolyCaustic", "[", 
            RowBox[{"a", ",", "n", ",", 
             RowBox[{"toRad", "@", "#"}], ",", "causticAB"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "&"}], "/@", "ts"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.774373131248023*^9, 3.774373199993166*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getCausticTangs"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getCausticTangs", "[", 
    RowBox[{"f1_", ",", "f2_", ",", "orbit_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"f2p", ",", "pb"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f2p", "=", 
          RowBox[{"reflAboutLine", "[", 
           RowBox[{"f2", ",", "#1", ",", "#2"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"pb", "=", 
          RowBox[{"interRays", "[", 
           RowBox[{"f1", ",", 
            RowBox[{"f2p", "-", "f1"}], ",", "#1", ",", 
            RowBox[{"#2", "-", "#1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "pb"}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Most", "@", "orbit"}], ",", 
       RowBox[{"Rest", "@", "orbit"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7689916305572405`*^9, 3.7689917224729185`*^9}, {
  3.768991857096807*^9, 3.7689921389760714`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"bounceRayAB", "[", 
    RowBox[{"a_", ",", "b_", ",", "p1_", ",", "p2_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"A", "=", 
        RowBox[{"a", "/", "b"}]}], ",", 
       RowBox[{"p1b", "=", 
        RowBox[{"p1", "/", "b"}]}], ",", 
       RowBox[{"p2b", "=", 
        RowBox[{"p2", "/", "b"}]}], ",", "bounced"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"bounced", "=", 
       RowBox[{"bounceRay", "[", 
        RowBox[{"A", ",", "p1b", ",", "p2b", ",", "n"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"b", "*", "bounced"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellInterAB", "[", 
    RowBox[{"a_", ",", "b_", ",", "from_", ",", "dir_"}], "]"}], ":=", 
   RowBox[{"b", "*", 
    RowBox[{"ellInterRayUnprot", "[", 
     RowBox[{
      RowBox[{"a", "/", "b"}], ",", 
      RowBox[{"from", "/", "b"}], ",", "dir"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7689925396677504`*^9, 3.768992628297038*^9}, {
  3.7689936333121986`*^9, 3.7689936922551627`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "drawCausticOddN"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "drawCausticOddN", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"drSol", "\[Rule]", "False"}], ",", 
     RowBox[{"drCaustic", "\[Rule]", "False"}], ",", 
     RowBox[{"drCausticConstr", "\[Rule]", "False"}], ",", 
     RowBox[{"drGuesses", "\[Rule]", "False"}], ",", 
     RowBox[{"drOrbit", "\[Rule]", "False"}], ",", 
     RowBox[{"drPlotLabel", "\[Rule]", "False"}], ",", 
     RowBox[{"drCausticTangs", "\[Rule]", "False"}], ",", 
     RowBox[{"causticT2", "\[Rule]", 
      RowBox[{"\[Pi]", "/", "4"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"drawCausticOddN", "[", 
   RowBox[{"a_", ",", "n_", ",", "tDeg_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "causticData", ",", "bouncedRot", ",", "normsRot", ",", "causticAB", ",",
       "ps", ",", "norms", ",", "psAug", ",", "bounced", ",", "normsSol", ",",
       "causticTangs", ",", "causticTangPoly", ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "ts", ",", "ps", ",", "f1", ",", "f2", ",", "f2foot", ",", "pb", ",", 
        "f2p", ",", "psSol", ",", "psAug", ",", "gr", ",", "p1", ",", "min", 
        ",", "norms", ",", "normsSol", ",", "bis", ",", "lower", ",", 
        "bounced", ",", "normsRot", ",", "bouncedRot", ",", "tsyms", ",", 
        "causticAxes", ","}], "*)"}], "\[IndentingNewLine]", "causticEll", 
      ",", "p1Caustic", ",", "p2Caustic", ",", "polyCaustic", ",", "lab", ",", 
      RowBox[{"lgt", "=", ".15"}], ",", 
      RowBox[{"circRad", "=", ".05"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"causticData", "=", 
      RowBox[{"getCausticBoth", "[", 
       RowBox[{"a", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"causticAB", "=", 
      RowBox[{"\"\<causticAB\>\"", "/.", "causticData"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"psAug", "=", 
      RowBox[{"\"\<guessPoly\>\"", "/.", "causticData"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ps", "=", 
      RowBox[{"Rest", "@", 
       RowBox[{"Most", "@", "psAug"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"norms", "=", 
      RowBox[{"\"\<guessNorms\>\"", "/.", "causticData"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"bounced", "=", 
      RowBox[{"\"\<poly\>\"", "/.", "causticData"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"normsSol", "=", 
      RowBox[{"norm", "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"ellGrad", "[", 
           RowBox[{"a", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
         "bounced"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bouncedRot", ",", "normsRot"}], "}"}], "=", 
      RowBox[{"getPolyCaustic", "[", 
       RowBox[{"a", ",", "n", ",", 
        RowBox[{"toRad", "@", "tDeg"}], ",", "causticAB"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"causticTangs", "=", 
      RowBox[{"getCausticTangs", "[", 
       RowBox[{
        RowBox[{"\"\<f1\>\"", "/.", "causticData"}], ",", 
        RowBox[{"\"\<f2\>\"", "/.", "causticData"}], ",", "bouncedRot"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"causticTangPoly", "=", 
      RowBox[{"bounceRayAB", "[", 
       RowBox[{
        RowBox[{"Sequence", "@@", "causticAB"}], ",", 
        RowBox[{"First", "@", "causticTangs"}], ",", 
        RowBox[{"Second", "@", "causticTangs"}], ",", 
        RowBox[{"n", "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p1Caustic", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"causticAB", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p2Caustic", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"causticAB", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"OptionValue", "@", "causticT2"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"causticAB", "[", 
          RowBox[{"[", "2", "]"}], "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"OptionValue", "@", "causticT2"}], "]"}]}]}], "}"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"ellInterAB", "[", 
         RowBox[{
          RowBox[{"Sequence", "@@", "causticAB"}], ",", "n1CausticInter", ",", 
          RowBox[{
           RowBox[{"bouncedRot", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"bouncedRot", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"polyCaustic", "=", 
      RowBox[{"bounceRayAB", "[", 
       RowBox[{
        RowBox[{"Sequence", "@@", "causticAB"}], ",", "p1Caustic", ",", 
        "p2Caustic", ",", 
        RowBox[{"n", "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"causticEll", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "@", "drCaustic"}], ",", 
        RowBox[{"plotEllb", "[", 
         RowBox[{
          RowBox[{"Sequence", "@@", "causticAB"}], ",", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", 
            RowBox[{"Darker", "@", "Green"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gr", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "@", "Large"}], ",", 
         RowBox[{"Arrowheads", "@", "Medium"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "@", "drGuesses"}], ",", 
           RowBox[{"{", 
            RowBox[{"Orange", ",", 
             RowBox[{"Point", "@", "psAug"}], ",", 
             RowBox[{"Line", "[", "psAug", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Circle", "[", 
              RowBox[{
               RowBox[{"First", "@", "psAug"}], ",", "circRad"}], "]"}], ",", 
             RowBox[{"Circle", "[", 
              RowBox[{
               RowBox[{"Last", "@", "psAug"}], ",", "circRad"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Arrow", "[", 
                 RowBox[{"{", 
                  RowBox[{"#1", ",", 
                   RowBox[{"ray", "[", 
                    RowBox[{"#1", ",", "#2", ",", "lgt"}], "]"}]}], "}"}], 
                 "]"}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"ps", ",", "norms"}], "}"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "@", "drSol"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Blue", ",", "Thick", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"OptionValue", "@", "drOrbit"}], ",", "Dashed", 
                   ",", 
                   RowBox[{"{", "}"}]}], "]"}], ",", 
                 RowBox[{"Line", "@", "bounced"}]}], "}"}], ",", 
               RowBox[{"Point", "@", "bounced"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"OptionValue", "@", "drOrbit"}], ",", 
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"MapThread", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{"#1", ",", 
                    RowBox[{"ray", "[", 
                    RowBox[{"#1", ",", "#2", ",", "lgt"}], "]"}]}], "}"}], 
                    "]"}], "&"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"bounced", ",", "normsSol"}], "}"}]}], "]"}]}], 
                "]"}]}], "}"}], ",", "Red", ",", 
             RowBox[{"Point", "@", 
              RowBox[{"Take", "[", 
               RowBox[{"bounced", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "+", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"EvenQ", "[", "n", "]"}], ",", "0", ",", "1"}], 
                    "]"}]}], ")"}], "/", "2"}]}], ",", "n"}], "}"}]}], 
               "]"}]}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"Point", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<f1\>\"", ",", "\"\<f2\>\""}], "}"}], "/.", 
             "causticData"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "@", "drCausticConstr"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Blue", ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"bounced", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"bounced", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"bounced", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"bounced", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Black", ",", "Dashed", ",", 
               RowBox[{"Line", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<f2\>\"", ",", "\"\<f2p\>\""}], "}"}], "/.", 
                 "causticData"}], "]"}], ",", 
               RowBox[{"Line", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<f1\>\"", ",", "\"\<f2p\>\""}], "}"}], "/.", 
                 "causticData"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Darker", "@", "Green"}], ",", 
               RowBox[{"Point", "[", 
                RowBox[{"\"\<pb\>\"", "/.", "causticData"}], "]"}]}], "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Black", ",", 
               RowBox[{"Point", "[", 
                RowBox[{"\"\<f2p\>\"", "/.", "causticData"}], "]"}]}], "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Black", ",", 
               RowBox[{"MapThread", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "16"}], "]"}], ",", "#2", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1.75"}]}], "}"}]}], "]"}], "&"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(f\), \(1\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \(2\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \(2\)]\)'\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(P\), \(1\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(P\), \(2\)]\)\>\"", ",", 
                    "\"\<b\>\""}], "}"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<f1\>\"", ",", "\"\<f2\>\"", ",", "\"\<f2p\>\""}], 
                    "}"}], "/.", "causticData"}], ")"}]}], ",", 
                    RowBox[{"bounced", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"bounced", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"\"\<pb\>\"", "/.", "causticData"}]}], "}"}]}], 
                  "}"}]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "@", "drOrbit"}], ",", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", "Thick", ",", 
             RowBox[{"Line", "@", "bouncedRot"}], ",", 
             RowBox[{"Point", "@", 
              RowBox[{"First", "[", "bouncedRot", "]"}]}], ",", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Arrow", "[", 
                 RowBox[{"{", 
                  RowBox[{"#1", ",", 
                   RowBox[{"ray", "[", 
                    RowBox[{"#1", ",", "#2", ",", "lgt"}], "]"}]}], "}"}], 
                 "]"}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"bouncedRot", ",", "normsRot"}], "}"}]}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "@", "drCausticTangs"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Darker", "@", "Green"}], ",", 
             RowBox[{"Point", "@", "causticTangs"}], ",", 
             RowBox[{"Circle", "[", 
              RowBox[{
               RowBox[{"First", "@", "causticTangs"}], ",", "circRad"}], 
              "]"}], ",", 
             RowBox[{"(*", 
              RowBox[{"Dashed", ",", "Red", ",", 
               RowBox[{"Line", "@", "causticTangPoly"}], ","}], "*)"}], 
             "\[IndentingNewLine]", "Magenta", ",", 
             RowBox[{"Point", "[", 
              RowBox[{"flipX", "/@", 
               RowBox[{"{", 
                RowBox[{"p1Caustic", ",", "p2Caustic"}], "}"}]}], "]"}], ",", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Line", "@", "polyCaustic"}], "}"}], "*)"}], 
             RowBox[{"Line", "[", 
              RowBox[{"flipX", "/@", "polyCaustic"}], "]"}]}], 
            RowBox[{"(*", 
             RowBox[{",", "Dotted", ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"bouncedRot", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "+", "1"}], ")"}], "/", "2"}], "]"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "*)"}], 
            "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"lab", "=", 
      RowBox[{"\"\<a=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{"a", ",", "2"}], "]"}], "<>", "\"\<, N=\>\"", "<>", 
       RowBox[{"ToString", "@", "n"}], "<>", 
       "\"\<, \!\(\*SubscriptBox[\(log\), \(10\)]\)(err)=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{
         RowBox[{"Log10", "[", 
          RowBox[{"\"\<error\>\"", "/.", "causticData"}], "]"}], ",", "1"}], 
        "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"plotEll", "[", 
          RowBox[{"a", ",", "Black"}], "]"}], ",", "causticEll", ",", "gr"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "@", "drPlotLabel"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{"lab", ",", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "16"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", "}"}]}], "]"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", "Medium"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "a"}], "-", ".1"}], ",", 
            RowBox[{"a", "+", ".1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}]}], "}"}]}]}], "]"}]}]}],
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.768924986831196*^9, 3.7689250153267546`*^9}, {
   3.768925117183926*^9, 3.768925128581992*^9}, {3.7689251826552415`*^9, 
   3.768925783343238*^9}, {3.7689258394810753`*^9, 3.7689258454082527`*^9}, {
   3.7689264537123976`*^9, 3.768926615256713*^9}, {3.7689266535851793`*^9, 
   3.7689269043699713`*^9}, {3.768926951793132*^9, 3.7689270485842433`*^9}, {
   3.7689271116263485`*^9, 3.768927189192247*^9}, {3.7689272975514812`*^9, 
   3.768927338816017*^9}, {3.768927381120874*^9, 3.7689275650722933`*^9}, {
   3.7689275990166616`*^9, 3.768927644723316*^9}, {3.768927741809658*^9, 
   3.7689277480316153`*^9}, {3.7689281130708*^9, 3.7689282711826677`*^9}, {
   3.768928355951936*^9, 3.7689283572564287`*^9}, {3.768928387920889*^9, 
   3.7689288439357586`*^9}, {3.76892919162494*^9, 3.76892920541611*^9}, {
   3.7689301906711655`*^9, 3.768930256790865*^9}, {3.7689302960548286`*^9, 
   3.76893029798769*^9}, {3.768930536336257*^9, 3.768930538153224*^9}, {
   3.768930571270685*^9, 3.768930607159174*^9}, {3.768930692240636*^9, 
   3.7689308436001234`*^9}, {3.7689309084144697`*^9, 3.768931018765923*^9}, {
   3.7689310622068305`*^9, 3.7689310631343484`*^9}, {3.7689315958864336`*^9, 
   3.7689317519840484`*^9}, {3.768931785361529*^9, 3.768931838693638*^9}, {
   3.7689320202783537`*^9, 3.768932061445597*^9}, {3.768932165999976*^9, 
   3.768932166735012*^9}, {3.768932213072092*^9, 3.7689322345915375`*^9}, {
   3.76893227675838*^9, 3.7689323930380526`*^9}, {3.7689327482465096`*^9, 
   3.7689327487910523`*^9}, {3.768932812775964*^9, 3.7689328322640295`*^9}, {
   3.768932913373788*^9, 3.768932923886726*^9}, {3.768932958656745*^9, 
   3.7689330275442753`*^9}, {3.768933171485923*^9, 3.768933171950678*^9}, {
   3.768933225767754*^9, 3.76893342199131*^9}, {3.7689334678691597`*^9, 
   3.7689334866319838`*^9}, {3.768933577518516*^9, 3.7689336305188804`*^9}, {
   3.7689336754536448`*^9, 3.7689337061183615`*^9}, {3.768933739877291*^9, 
   3.768933787784772*^9}, {3.7689338535215783`*^9, 3.768933985830916*^9}, {
   3.76893416526305*^9, 3.7689341922309313`*^9}, {3.7689342831919456`*^9, 
   3.7689343277790527`*^9}, {3.7689344501657467`*^9, 
   3.7689344678144507`*^9}, {3.7689345286432557`*^9, 
   3.7689345323842516`*^9}, {3.7689346223751755`*^9, 
   3.7689346234871693`*^9}, {3.768934856438546*^9, 3.7689349449996786`*^9}, {
   3.7689350540410604`*^9, 3.7689350601128244`*^9}, {3.768935099942034*^9, 
   3.768935250822745*^9}, {3.7689353005098114`*^9, 3.7689353848652353`*^9}, {
   3.7689354260411463`*^9, 3.768935637253894*^9}, {3.768935708388414*^9, 
   3.768935716627511*^9}, {3.7689457574225216`*^9, 3.7689457757704535`*^9}, {
   3.768945814384186*^9, 3.768945816466617*^9}, {3.7689458602176085`*^9, 
   3.768945934281046*^9}, {3.768945968383837*^9, 3.7689462646886*^9}, {
   3.76894642456287*^9, 3.7689464847396917`*^9}, {3.7689465380678496`*^9, 
   3.7689466234434185`*^9}, {3.7689467754757824`*^9, 3.768946776354432*^9}, {
   3.768946831180911*^9, 3.7689468313305097`*^9}, {3.768946864826971*^9, 
   3.768946864871851*^9}, {3.768946914938431*^9, 3.7689469205717363`*^9}, {
   3.76894697625062*^9, 3.768947163881987*^9}, {3.768947249192007*^9, 
   3.768947249953939*^9}, {3.7689473338829117`*^9, 3.7689473341302786`*^9}, {
   3.768947422825528*^9, 3.7689474313801117`*^9}, {3.768948706654145*^9, 
   3.7689487672728014`*^9}, {3.768989295519996*^9, 3.768989330897125*^9}, {
   3.768989986190448*^9, 3.7689900079113193`*^9}, {3.768990147175659*^9, 
   3.768990249779353*^9}, {3.768990283920018*^9, 3.7689903907138634`*^9}, {
   3.768990516230983*^9, 3.768990573975768*^9}, 3.768990619479076*^9, {
   3.768990665537901*^9, 3.7689908293131647`*^9}, {3.768990861434264*^9, 
   3.768991026200157*^9}, {3.7689911612641835`*^9, 3.7689911614556684`*^9}, {
   3.7689912225473633`*^9, 3.768991259552081*^9}, {3.768991351518133*^9, 
   3.768991354286727*^9}, {3.768992157197151*^9, 3.7689922149408903`*^9}, {
   3.768992260199764*^9, 3.7689923291555223`*^9}, {3.7689924142713346`*^9, 
   3.76899250392034*^9}, {3.768992632852854*^9, 3.768992665693038*^9}, {
   3.768992716288699*^9, 3.76899272098232*^9}, {3.76899276051797*^9, 
   3.7689928416682253`*^9}, {3.7689929126557217`*^9, 3.768992914606533*^9}, {
   3.7689929675359793`*^9, 3.768993002224206*^9}, {3.768993368479001*^9, 
   3.768993577770534*^9}, {3.7689936125279665`*^9, 3.7689936228162665`*^9}, {
   3.7689936961038427`*^9, 3.7689939029290104`*^9}, {3.7689940843603325`*^9, 
   3.7689941810179977`*^9}, {3.768994446049209*^9, 3.768994688991378*^9}, {
   3.76899502325205*^9, 3.7689950386057425`*^9}, {3.768995255262785*^9, 
   3.76899525954034*^9}, {3.768995292046504*^9, 3.768995299644184*^9}, {
   3.768995352485839*^9, 3.768995358154661*^9}, {3.768995396267891*^9, 
   3.7689954373098583`*^9}, {3.768996627061721*^9, 3.768996643164235*^9}, {
   3.769000828523385*^9, 3.7690008486109514`*^9}, {3.7690009808473186`*^9, 
   3.7690009980682917`*^9}, {3.7690010579072323`*^9, 
   3.7690010622852297`*^9}, {3.769001739622925*^9, 3.76900173994808*^9}, {
   3.7690017786305757`*^9, 3.7690017804277973`*^9}, {3.7690018372678027`*^9, 
   3.7690018652599416`*^9}, {3.7690299812867613`*^9, 
   3.7690299890149984`*^9}, {3.795961987658386*^9, 3.7959619879949274`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"drawCausticOddN", "[", 
    RowBox[{"a", ",", "n", ",", "tDeg", ",", 
     RowBox[{"drGuesses", "\[Rule]", "drGuesses0"}], ",", 
     RowBox[{"drSol", "\[Rule]", "drSol0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"drCausticConstr", "\[Rule]", "drCausticConstr0"}], ",", 
     RowBox[{"drCaustic", "\[Rule]", "drCaustic0"}], ",", 
     RowBox[{"drCausticTangs", "\[Rule]", "drCausticTangs0"}], ",", 
     RowBox[{"causticT2", "\[Rule]", "causticT20"}], ",", 
     RowBox[{"drOrbit", "\[Rule]", "drOrbit0"}], ",", 
     RowBox[{"drPlotLabel", "\[Rule]", "True"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "1.5"}], "}"}], ",", "1.1", ",", "3", ",", ".01"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "7"}], "}"}], ",", "3", ",", "23", ",", "1"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tDeg", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "360"}], ",", "360", ",", "1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drGuesses0", ",", "True", ",", "\"\<guesses\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drSol0", ",", "False", ",", "\"\<solution\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "drCausticConstr0", ",", "False", ",", "\"\<caustic constr.\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drCaustic0", ",", "True", ",", "\"\<caustic\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drCausticTangs0", ",", "False", ",", "\"\<caustic tangs\>\""}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drOrbit0", ",", "True", ",", "\"\<orbit\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"causticT20", ",", 
       RowBox[{"\[Pi]", "/", "4."}]}], "}"}], ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2."}], ",", 
     RowBox[{"\[Pi]", "/", "100."}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7689328627697463`*^9, 3.7689328771692133`*^9}, {
   3.7689330370179663`*^9, 3.7689330554099636`*^9}, {3.7689330907135773`*^9, 
   3.7689331348598723`*^9}, {3.768933179225196*^9, 3.768933179762785*^9}, {
   3.768933640593964*^9, 3.7689336611698437`*^9}, {3.7689337139624143`*^9, 
   3.768933725585512*^9}, {3.768933793874512*^9, 3.7689338391877885`*^9}, {
   3.7689345666516066`*^9, 3.7689345990425425`*^9}, {3.768935646537513*^9, 
   3.7689356729540663`*^9}, {3.768946057251766*^9, 3.768946057667632*^9}, {
   3.7689462693022876`*^9, 3.7689463101555967`*^9}, {3.7689467964436865`*^9, 
   3.768946796693021*^9}, {3.7689475421962414`*^9, 3.7689475450435777`*^9}, {
   3.7689487739709163`*^9, 3.7689487774574924`*^9}, 3.768989140347983*^9, {
   3.7689893370441217`*^9, 3.768989338507673*^9}, {3.768992339883168*^9, 
   3.7689923573619275`*^9}, {3.7689946639917283`*^9, 3.768994754954015*^9}, 
   3.7689955306472387`*^9, {3.7690003132697983`*^9, 3.769000313758974*^9}, {
   3.7690008622375145`*^9, 3.769000862318299*^9}, {3.7690312033154545`*^9, 
   3.769031203700425*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1.5, $CellContext`causticT20$$ = 
    0.7853981633974483, $CellContext`drCaustic0$$ = 
    True, $CellContext`drCausticConstr0$$ = 
    False, $CellContext`drCausticTangs0$$ = False, $CellContext`drGuesses0$$ =
     True, $CellContext`drOrbit0$$ = True, $CellContext`drSol0$$ = 
    False, $CellContext`n$$ = 7, $CellContext`tDeg$$ = 0, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 1.5}, 1.1, 3, 0.01}, {{
       Hold[$CellContext`n$$], 7}, 3, 23, 1}, {{
       Hold[$CellContext`tDeg$$], 0}, -360, 360, 1}, {{
       Hold[$CellContext`drGuesses0$$], True, "guesses"}, {True, False}}, {{
       Hold[$CellContext`drSol0$$], False, "solution"}, {True, False}}, {{
       Hold[$CellContext`drCausticConstr0$$], False, "caustic constr."}, {
      True, False}}, {{
       Hold[$CellContext`drCaustic0$$], True, "caustic"}, {True, False}}, {{
       Hold[$CellContext`drCausticTangs0$$], False, "caustic tangs"}, {
      True, False}}, {{
       Hold[$CellContext`drOrbit0$$], True, "orbit"}, {True, False}}, {{
       Hold[$CellContext`causticT20$$], 0.7853981633974483}, 0, 
      1.5707963267948966`, 0.031415926535897934`}}, Typeset`size$$ = {
    576., {205., 210.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$100994$$ = 
    0, $CellContext`n$100995$$ = 0, $CellContext`tDeg$100996$$ = 
    0, $CellContext`drGuesses0$100997$$ = 
    False, $CellContext`drSol0$100998$$ = 
    False, $CellContext`drCausticConstr0$100999$$ = 
    False, $CellContext`drCaustic0$101000$$ = 
    False, $CellContext`drCausticTangs0$101001$$ = 
    False, $CellContext`drOrbit0$101002$$ = 
    False, $CellContext`causticT20$101003$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1.5, $CellContext`causticT20$$ = 
        0.7853981633974483, $CellContext`drCaustic0$$ = 
        True, $CellContext`drCausticConstr0$$ = 
        False, $CellContext`drCausticTangs0$$ = 
        False, $CellContext`drGuesses0$$ = True, $CellContext`drOrbit0$$ = 
        True, $CellContext`drSol0$$ = False, $CellContext`n$$ = 
        7, $CellContext`tDeg$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$100994$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$100995$$, 0], 
        Hold[$CellContext`tDeg$$, $CellContext`tDeg$100996$$, 0], 
        Hold[$CellContext`drGuesses0$$, $CellContext`drGuesses0$100997$$, 
         False], 
        Hold[$CellContext`drSol0$$, $CellContext`drSol0$100998$$, False], 
        Hold[$CellContext`drCausticConstr0$$, \
$CellContext`drCausticConstr0$100999$$, False], 
        Hold[$CellContext`drCaustic0$$, $CellContext`drCaustic0$101000$$, 
         False], 
        Hold[$CellContext`drCausticTangs0$$, \
$CellContext`drCausticTangs0$101001$$, False], 
        Hold[$CellContext`drOrbit0$$, $CellContext`drOrbit0$101002$$, False], 
        Hold[$CellContext`causticT20$$, $CellContext`causticT20$101003$$, 0]},
       "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`drawCausticOddN[$CellContext`a$$, \
$CellContext`n$$, $CellContext`tDeg$$, $CellContext`drGuesses -> \
$CellContext`drGuesses0$$, $CellContext`drSol -> $CellContext`drSol0$$, \
$CellContext`drCausticConstr -> $CellContext`drCausticConstr0$$, \
$CellContext`drCaustic -> $CellContext`drCaustic0$$, \
$CellContext`drCausticTangs -> $CellContext`drCausticTangs0$$, \
$CellContext`causticT2 -> $CellContext`causticT20$$, $CellContext`drOrbit -> \
$CellContext`drOrbit0$$, $CellContext`drPlotLabel -> True], 
      "Specifications" :> {{{$CellContext`a$$, 1.5}, 1.1, 3, 
         0.01}, {{$CellContext`n$$, 7}, 3, 23, 
         1}, {{$CellContext`tDeg$$, 0}, -360, 360, 
         1}, {{$CellContext`drGuesses0$$, True, "guesses"}, {
         True, False}}, {{$CellContext`drSol0$$, False, "solution"}, {
         True, False}}, {{$CellContext`drCausticConstr0$$, False, 
          "caustic constr."}, {
         True, False}}, {{$CellContext`drCaustic0$$, True, "caustic"}, {
         True, False}}, {{$CellContext`drCausticTangs0$$, False, 
          "caustic tangs"}, {
         True, False}}, {{$CellContext`drOrbit0$$, True, "orbit"}, {
         True, False}}, {{$CellContext`causticT20$$, 0.7853981633974483}, 0, 
         1.5707963267948966`, 0.031415926535897934`}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{922., {236., 242.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7689328635426826`*^9, 3.768932877692815*^9}, 
   3.7689329386292768`*^9, 3.768933012792726*^9, 3.768933055923617*^9, {
   3.768933102216161*^9, 3.7689331371098413`*^9}, {3.768933175920062*^9, 
   3.7689331802265177`*^9}, 3.7689336617393217`*^9, 3.7689337263405027`*^9, 
   3.7689337780707493`*^9, {3.768933817555641*^9, 3.768933839654535*^9}, {
   3.768933877723233*^9, 3.7689339264898143`*^9}, 3.768933957705454*^9, 
   3.768933988832887*^9, 3.76893419586567*^9, {3.768934290707817*^9, 
   3.7689343315958467`*^9}, {3.7689344827822113`*^9, 3.768934516426927*^9}, 
   3.7689346045468245`*^9, {3.7689353055254474`*^9, 3.768935387561054*^9}, {
   3.7689354330214157`*^9, 3.7689355125190525`*^9}, 3.768935544591221*^9, {
   3.768935665006322*^9, 3.7689356736541657`*^9}, {3.7689457620292034`*^9, 
   3.768945778506136*^9}, 3.768945819933316*^9, 3.768945885470293*^9, 
   3.768945937814737*^9, {3.768946027801508*^9, 3.7689460772522893`*^9}, {
   3.7689461301030855`*^9, 3.768946149860948*^9}, {3.768946298067919*^9, 
   3.768946310852085*^9}, {3.768946466171793*^9, 3.768946489593891*^9}, {
   3.7689467801871643`*^9, 3.7689467973552203`*^9}, 3.7689468378451805`*^9, {
   3.768946869101599*^9, 3.768946889685965*^9}, 3.768946925892167*^9, 
   3.7689469824580193`*^9, 3.7689470755242405`*^9, {3.76894876930338*^9, 
   3.7689487777446947`*^9}, 3.768989140764854*^9, 3.7689893389973364`*^9, 
   3.7689901853496313`*^9, 3.7689910358078957`*^9, {3.768991138662601*^9, 
   3.7689911643778296`*^9}, 3.7689911952433815`*^9, 3.7689914922989984`*^9, 
   3.768991828570084*^9, 3.7689922195908794`*^9, {3.7689923581009235`*^9, 
   3.7689923609433217`*^9}, {3.76899270517941*^9, 3.768992724297284*^9}, 
   3.768992846025914*^9, 3.768994595806887*^9, 3.768994722981498*^9, 
   3.768994755613227*^9, 3.7689955316555395`*^9, {3.769000302137534*^9, 
   3.7690003140591717`*^9}, 3.7690008628339853`*^9, 3.7690010064049683`*^9, 
   3.7690011068450365`*^9, 3.769001266649732*^9, 3.76900169473877*^9, 
   3.7690017468535585`*^9, {3.7690017840770097`*^9, 3.769001798444971*^9}, 
   3.769027872320589*^9, 3.7690310044781084`*^9, 3.769031083612548*^9, 
   3.76903114802392*^9, {3.769031199036501*^9, 3.7690312045042744`*^9}, 
   3.7691015853815637`*^9, 3.769159865036873*^9, 3.7691612513241625`*^9, 
   3.769167490075904*^9, 3.76917589227724*^9, 3.769267645977647*^9, 
   3.769275768049576*^9, 3.7693722338694444`*^9, 3.769372506717889*^9, 
   3.7694257022750053`*^9, 3.76953016142076*^9, 3.769608613065737*^9, 
   3.7698022727887506`*^9, 3.769806755354783*^9, 3.7699494909269533`*^9, 
   3.770189629962064*^9, 3.770194419118458*^9, 3.7704637508490686`*^9, 
   3.771612488581066*^9, 3.7716698092361703`*^9, 3.771687795038129*^9, 
   3.771691162782117*^9, 3.771691291892701*^9, 3.7716964375632553`*^9, 
   3.771696493073658*^9, 3.771834516045212*^9, 3.7720968767839856`*^9, 
   3.7721982081603603`*^9, 3.7724444396508265`*^9, 3.77248164609429*^9, 
   3.772532015874857*^9, 3.77278737830184*^9, 3.7730743558654404`*^9, 
   3.7733167610329566`*^9, 3.7733287916379504`*^9, 3.7733456341279545`*^9, 
   3.7743727343255806`*^9, 3.7743732963729954`*^9, 3.7752337724324136`*^9, 
   3.7756419678667183`*^9, 3.7756467314618196`*^9, 3.775727406771474*^9, 
   3.7759119355717974`*^9, 3.776068086052865*^9, 3.776972414751116*^9, 
   3.7770265120189905`*^9, 3.7773614343565474`*^9, 3.780259320975665*^9, 
   3.7870731297678103`*^9, 3.7884400536165724`*^9, 3.7889833791389503`*^9, 
   3.7894590823637753`*^9, 3.789459198293162*^9, 3.790320220920725*^9, 
   3.791325028157321*^9, 3.7913259009295483`*^9, 3.791484374566196*^9, 
   3.792143216032456*^9, 3.795958217873737*^9, 3.796070496012705*^9, 
   3.7961155716262145`*^9, 3.7961274145912094`*^9, 3.796222044449444*^9, 
   3.796301450132078*^9, 3.79631637605929*^9, 3.7964204053141193`*^9, 
   3.7964221108815165`*^9, 3.796422463909731*^9, 3.796568932410022*^9, 
   3.796568979066481*^9, 3.796663733779645*^9, 3.7969293590988827`*^9, 
   3.7969294937950087`*^9, 3.7970987153852115`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"DeleteFile", "[", "relaxApp", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7716964809442253`*^9, 3.771696484530882*^9}, {
  3.771696543069503*^9, 3.7716965444769545`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"relaxApp", "=", 
   RowBox[{"CloudDeploy", "[", 
    RowBox[{"%", ",", "\"\<relaxation algorithm for caustics v1\>\"", ",", 
     RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.771696440825039*^9, 3.771696466796403*^9}, {
  3.771696547973134*^9, 3.7716965496774454`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "=", "1.5"}], ",", 
     RowBox[{"tDeg", "=", "8"}], ",", 
     RowBox[{"n", "=", "7"}], ",", "params"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"True", ",", "i"}], "]"}], ",", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"False", ",", 
            RowBox[{"5", "-", "i"}]}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "5"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Grid", "@", 
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Row", "[", 
          RowBox[{"#", ",", 
           RowBox[{"Spacer", "[", "20", "]"}], ",", 
           RowBox[{"Alignment", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Right", ",", "Center"}], "}"}]}]}], "]"}], "&"}], "/@", 
        "\[IndentingNewLine]", 
        RowBox[{"MapIndexed", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Show", "[", 
             RowBox[{
              RowBox[{"drawCausticOddN", "[", 
               RowBox[{"a", ",", "n", ",", "tDeg", ",", "\[IndentingNewLine]", 
                RowBox[{"Thread", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drGuesses", ",", "drSol", ",", "drCausticConstr", ",", 
                    "drCaustic", ",", "drOrbit"}], "}"}], "\[Rule]", "#1"}], 
                 "]"}]}], "]"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"PlotLabel", "\[Rule]", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"\"\<(\>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"First", "@", "#2"}], "]"}], "<>", "\"\<)\>\""}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"Black", ",", "Medium"}], "}"}]}], "]"}]}]}], "]"}],
             "}"}], "&"}], ",", "params"}], "]"}]}], ",", "3"}], "]"}]}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.768946366156005*^9, 3.7689463853936205`*^9}, {
  3.7689474646415963`*^9, 3.768947681795576*^9}, {3.7689477274263105`*^9, 
  3.7689477434025807`*^9}, {3.7689477882907786`*^9, 3.7689483207466726`*^9}, {
  3.7689483575223184`*^9, 3.7689484237475376`*^9}, {3.7689484572878847`*^9, 
  3.768948691995349*^9}, {3.769031574283334*^9, 3.7690316181635942`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{
          GrayLevel[0], 
          CircleBox[{0, 0}, {1.5, 1}]}, {
          PointSize[Large], 
          Arrowheads[Medium], {}, {}, {
           GrayLevel[0], 
           
           PointBox[{{-1.118033988749895, 0}, {
             1.118033988749895, 0}}]}, {}, {}, {}}}, {
        ImageSize -> Small, PlotLabel -> FormBox[
           StyleBox["\"(1)\"", {
             GrayLevel[0], Medium}, StripOnInput -> False], TraditionalForm], 
         Frame -> True, FrameStyle -> Medium, ImageSize -> Large, 
         PlotRange -> {{-1.6, 1.6}, {-1.1, 1.1}}}]},
      "Row",
      DisplayFunction->(PaneBox[#, Alignment -> {Right, Center}]& ),
      InterpretationFunction->(RowBox[{"Row", "[", 
         RowBox[{
           RowBox[{"{", #, "}"}], ",", 
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {20, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[20]], ",", 
           RowBox[{"Alignment", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Right", ",", "Center"}], "}"}]}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{
          GrayLevel[0], 
          CircleBox[{0, 0}, {1.5, 1}]}, {
          PointSize[Large], 
          Arrowheads[Medium], {
           RGBColor[1, 0.5, 0], 
           
           PointBox[{{1.5, 0}, {0.4363389981249827, 
             0.956755693584728}, {-0.4363389981249822, 
             0.9567556935847281}, {-1.3090169943749475`, 
             0.4882961343909516}, {-1.3090169943749475`, \
-0.4882961343909516}}], 
           
           LineBox[{{1.5, 0}, {0.4363389981249827, 
             0.956755693584728}, {-0.4363389981249822, 
             0.9567556935847281}, {-1.3090169943749475`, 
             0.4882961343909516}, {-1.3090169943749475`, \
-0.4882961343909516}}], 
           CircleBox[{1.5, 0}, 0.05], 
           CircleBox[{-1.3090169943749475`, -0.4882961343909516}, 0.05], {
            ArrowBox[{{0.4363389981249827, 0.956755693584728}, {
             0.40654089162374046`, 0.8097452420891265}}], 
            
            ArrowBox[{{-0.4363389981249822, 
             0.9567556935847281}, {-0.40654089162374, 0.8097452420891266}}], 
            
            ArrowBox[{{-1.3090169943749475`, 
             0.4882961343909516}, {-1.1941220249695923`, 
             0.3918640546387108}}]}}, {}, {
           GrayLevel[0], 
           
           PointBox[{{-1.118033988749895, 0}, {
             1.118033988749895, 0}}]}, {}, {}, {}}}, {
        ImageSize -> Small, PlotLabel -> FormBox[
           StyleBox["\"(2)\"", {
             GrayLevel[0], Medium}, StripOnInput -> False], TraditionalForm], 
         Frame -> True, FrameStyle -> Medium, ImageSize -> Large, 
         PlotRange -> {{-1.6, 1.6}, {-1.1, 1.1}}}]},
      "Row",
      DisplayFunction->(PaneBox[#, Alignment -> {Right, Center}]& ),
      InterpretationFunction->(RowBox[{"Row", "[", 
         RowBox[{
           RowBox[{"{", #, "}"}], ",", 
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {20, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[20]], ",", 
           RowBox[{"Alignment", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Right", ",", "Center"}], "}"}]}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{
          GrayLevel[0], 
          CircleBox[{0, 0}, {1.5, 1}]}, {
          PointSize[Large], 
          Arrowheads[Medium], {
           RGBColor[1, 0.5, 0], 
           
           PointBox[{{1.5, 0}, {0.4363389981249827, 
             0.956755693584728}, {-0.4363389981249822, 
             0.9567556935847281}, {-1.3090169943749475`, 
             0.4882961343909516}, {-1.3090169943749475`, \
-0.4882961343909516}}], 
           
           LineBox[{{1.5, 0}, {0.4363389981249827, 
             0.956755693584728}, {-0.4363389981249822, 
             0.9567556935847281}, {-1.3090169943749475`, 
             0.4882961343909516}, {-1.3090169943749475`, \
-0.4882961343909516}}], 
           CircleBox[{1.5, 0}, 0.05], 
           CircleBox[{-1.3090169943749475`, -0.4882961343909516}, 0.05], {
            
            ArrowBox[{{0.4363389981249827, 0.956755693584728}, {
             0.40654089162374046`, 0.8097452420891265}}], 
            
            ArrowBox[{{-0.4363389981249822, 
             0.9567556935847281}, {-0.40654089162374, 0.8097452420891266}}], 
            
            ArrowBox[{{-1.3090169943749475`, 
             0.4882961343909516}, {-1.1941220249695923`, 
             0.3918640546387108}}]}}, {{
            RGBColor[0, 0, 1], 
            Thickness[Large], {{}, 
             
             LineBox[{{1.5, 0}, {1.0713639835612363`, 
               0.6998981559969356}, {-0.4164741824668925, 
               0.9606824554193021}, {-1.4061428996297485`, 
               0.3481775701632994}, {-1.4061428996297949`, \
-0.3481775701632157}, {-0.4164741824670817, -0.9606824554192657}, {
               1.0713639835611188`, -0.6998981559970153}, {1.5, 0}}]}, 
            
            PointBox[{{1.5, 0}, {1.0713639835612363`, 
              0.6998981559969356}, {-0.4164741824668925, 
              0.9606824554193021}, {-1.4061428996297485`, 
              0.3481775701632994}, {-1.4061428996297949`, \
-0.3481775701632157}, {-0.4164741824670817, -0.9606824554192657}, {
              1.0713639835611188`, -0.6998981559970153}, {1.5, 0}}], {
             ArrowBox[{{1.5, 0}, {1.35, 0.}}], 
             
             ArrowBox[{{1.0713639835612363`, 0.6998981559969356}, {
              0.9869894895706597, 0.5758782190358399}}], 
             
             ArrowBox[{{-0.4164741824668925, 
              0.9606824554193021}, {-0.3880948821623378, 
              0.8133915347411289}}], 
             
             ArrowBox[{{-1.4061428996297485`, 
              0.3481775701632994}, {-1.2751067943084113`, 
              0.2751738777757535}}], 
             
             ArrowBox[{{-1.4061428996297949`, -0.3481775701632157}, \
{-1.2751067943084493`, -0.27517387777568497`}}], 
             
             ArrowBox[{{-0.4164741824670817, -0.9606824554192657}, \
{-0.3880948821625135, -0.8133915347410952}}], 
             
             ArrowBox[{{1.0713639835611188`, -0.6998981559970153}, {
              0.9869894895705551, -0.5758782190359109}}], 
             ArrowBox[{{1.5, 0}, {1.35, 0.}}]}}, 
           RGBColor[1, 0, 0], 
           
           PointBox[{{-1.4061428996297949`, -0.3481775701632157}, \
{-0.4164741824670817, -0.9606824554192657}, {
            1.0713639835611188`, -0.6998981559970153}}]}, {
           GrayLevel[0], 
           
           PointBox[{{-1.118033988749895, 0}, {
             1.118033988749895, 0}}]}, {}, {}, {}}}, {
        ImageSize -> Small, PlotLabel -> FormBox[
           StyleBox["\"(3)\"", {
             GrayLevel[0], Medium}, StripOnInput -> False], TraditionalForm], 
         Frame -> True, FrameStyle -> Medium, ImageSize -> Large, 
         PlotRange -> {{-1.6, 1.6}, {-1.1, 1.1}}}]},
      "Row",
      DisplayFunction->(PaneBox[#, Alignment -> {Right, Center}]& ),
      InterpretationFunction->(RowBox[{"Row", "[", 
         RowBox[{
           RowBox[{"{", #, "}"}], ",", 
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {20, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[20]], ",", 
           RowBox[{"Alignment", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Right", ",", "Center"}], "}"}]}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{
          GrayLevel[0], 
          CircleBox[{0, 0}, {1.5, 1}]}, {
          PointSize[Large], 
          Arrowheads[Medium], {
           RGBColor[1, 0.5, 0], 
           
           PointBox[{{1.5, 0}, {0.4363389981249827, 
             0.956755693584728}, {-0.4363389981249822, 
             0.9567556935847281}, {-1.3090169943749475`, 
             0.4882961343909516}, {-1.3090169943749475`, \
-0.4882961343909516}}], 
           
           LineBox[{{1.5, 0}, {0.4363389981249827, 
             0.956755693584728}, {-0.4363389981249822, 
             0.9567556935847281}, {-1.3090169943749475`, 
             0.4882961343909516}, {-1.3090169943749475`, \
-0.4882961343909516}}], 
           CircleBox[{1.5, 0}, 0.05], 
           CircleBox[{-1.3090169943749475`, -0.4882961343909516}, 0.05], {
            ArrowBox[{{0.4363389981249827, 0.956755693584728}, {
             0.40654089162374046`, 0.8097452420891265}}], 
            
            ArrowBox[{{-0.4363389981249822, 
             0.9567556935847281}, {-0.40654089162374, 0.8097452420891266}}], 
            
            ArrowBox[{{-1.3090169943749475`, 
             0.4882961343909516}, {-1.1941220249695923`, 
             0.3918640546387108}}]}}, {{
            RGBColor[0, 0, 1], 
            Thickness[Large], {{}, 
             
             LineBox[{{1.5, 0}, {1.0713639835612363`, 
               0.6998981559969356}, {-0.4164741824668925, 
               0.9606824554193021}, {-1.4061428996297485`, 
               0.3481775701632994}, {-1.4061428996297949`, \
-0.3481775701632157}, {-0.4164741824670817, -0.9606824554192657}, {
               1.0713639835611188`, -0.6998981559970153}, {1.5, 0}}]}, 
            
            PointBox[{{1.5, 0}, {1.0713639835612363`, 
              0.6998981559969356}, {-0.4164741824668925, 
              0.9606824554193021}, {-1.4061428996297485`, 
              0.3481775701632994}, {-1.4061428996297949`, \
-0.3481775701632157}, {-0.4164741824670817, -0.9606824554192657}, {
              1.0713639835611188`, -0.6998981559970153}, {1.5, 0}}], {
             ArrowBox[{{1.5, 0}, {1.35, 0.}}], 
             
             ArrowBox[{{1.0713639835612363`, 0.6998981559969356}, {
              0.9869894895706597, 0.5758782190358399}}], 
             
             ArrowBox[{{-0.4164741824668925, 
              0.9606824554193021}, {-0.3880948821623378, 
              0.8133915347411289}}], 
             
             ArrowBox[{{-1.4061428996297485`, 
              0.3481775701632994}, {-1.2751067943084113`, 
              0.2751738777757535}}], 
             
             ArrowBox[{{-1.4061428996297949`, -0.3481775701632157}, \
{-1.2751067943084493`, -0.27517387777568497`}}], 
             
             ArrowBox[{{-0.4164741824670817, -0.9606824554192657}, \
{-0.3880948821625135, -0.8133915347410952}}], 
             
             ArrowBox[{{1.0713639835611188`, -0.6998981559970153}, {
              0.9869894895705551, -0.5758782190359109}}], 
             ArrowBox[{{1.5, 0}, {1.35, 0.}}]}}, 
           RGBColor[1, 0, 0], 
           
           PointBox[{{-1.4061428996297949`, -0.3481775701632157}, \
{-0.4164741824670817, -0.9606824554192657}, {
            1.0713639835611188`, -0.6998981559970153}}]}, {
           GrayLevel[0], 
           PointBox[{{-1.118033988749895, 0}, {1.118033988749895, 0}}]}, {
           Thickness[Large], 
           RGBColor[0, 0, 1], 
           PointBox[{{1.5, 0}, {1.0713639835612363`, 0.6998981559969356}}], 
           LineBox[{{1.5, 0}, {1.0713639835612363`, 0.6998981559969356}}], {
            GrayLevel[0], 
            Dashing[{Small, Small}], 
            
            LineBox[{{1.118033988749895, 0}, {1.6735942735317408`, 
              0.34023971247827983`}}], 
            
            LineBox[{{-1.118033988749895, 0}, {1.6735942735317408`, 
              0.34023971247827983`}}]}, {
            RGBColor[0, 
             NCache[
              Rational[2, 3], 0.6666666666666666], 0], 
            PointBox[{1.3181585694528146`, 0.29691971053020944`}]}, {
            GrayLevel[0], 
            PointBox[{1.6735942735317408`, 0.34023971247827983`}]}, {
            GrayLevel[0], {
             InsetBox[
              FormBox[
               StyleBox[
               "\"\\!\\(\\*SubscriptBox[\\(f\\), \\(1\\)]\\)\"", 16, 
                StripOnInput -> False], TraditionalForm], {-1.118033988749895,
                0}, {0, -1.75}], 
             InsetBox[
              FormBox[
               StyleBox[
               "\"\\!\\(\\*SubscriptBox[\\(f\\), \\(2\\)]\\)\"", 16, 
                StripOnInput -> False], TraditionalForm], {
              1.118033988749895, 0}, {0, -1.75}], 
             InsetBox[
              FormBox[
               StyleBox[
               "\"\\!\\(\\*SubscriptBox[\\(f\\), \\(2\\)]\\)'\"", 16, 
                StripOnInput -> False], TraditionalForm], {
              1.6735942735317408`, 0.34023971247827983`}, {0, -1.75}], 
             InsetBox[
              FormBox[
               StyleBox[
               "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)\"", 16, 
                StripOnInput -> False], TraditionalForm], {1.5, 0}, {
              0, -1.75}], 
             InsetBox[
              FormBox[
               StyleBox[
               "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(2\\)]\\)\"", 16, 
                StripOnInput -> False], TraditionalForm], {
              1.0713639835612363`, 0.6998981559969356}, {0, -1.75}], 
             InsetBox[
              FormBox[
               StyleBox["\"b\"", 16, StripOnInput -> False], 
               TraditionalForm], {1.3181585694528146`, 
              0.29691971053020944`}, {0, -1.75}]}}}, {}, {}}}, {
        ImageSize -> Small, PlotLabel -> FormBox[
           StyleBox["\"(4)\"", {
             GrayLevel[0], Medium}, StripOnInput -> False], TraditionalForm], 
         Frame -> True, FrameStyle -> Medium, ImageSize -> Large, 
         PlotRange -> {{-1.6, 1.6}, {-1.1, 1.1}}}]},
      "Row",
      DisplayFunction->(PaneBox[#, Alignment -> {Right, Center}]& ),
      InterpretationFunction->(RowBox[{"Row", "[", 
         RowBox[{
           RowBox[{"{", #, "}"}], ",", 
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {20, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[20]], ",", 
           RowBox[{"Alignment", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Right", ",", "Center"}], "}"}]}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{
          GrayLevel[0], 
          CircleBox[{0, 0}, {1.5, 1}]}, {
          Thickness[Large], 
          RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          CircleBox[{0, 0}, {1.4061428996297716`, 0.8527824190139134}]}, {
          PointSize[Large], 
          Arrowheads[Medium], {
           RGBColor[1, 0.5, 0], 
           
           PointBox[{{1.5, 0}, {0.4363389981249827, 
             0.956755693584728}, {-0.4363389981249822, 
             0.9567556935847281}, {-1.3090169943749475`, 
             0.4882961343909516}, {-1.3090169943749475`, \
-0.4882961343909516}}], 
           LineBox[{{1.5, 0}, {0.4363389981249827, 
             0.956755693584728}, {-0.4363389981249822, 
             0.9567556935847281}, {-1.3090169943749475`, 
             0.4882961343909516}, {-1.3090169943749475`, \
-0.4882961343909516}}], 
           CircleBox[{1.5, 0}, 0.05], 
           CircleBox[{-1.3090169943749475`, -0.4882961343909516}, 0.05], {
            
            ArrowBox[{{0.4363389981249827, 0.956755693584728}, {
             0.40654089162374046`, 0.8097452420891265}}], 
            
            ArrowBox[{{-0.4363389981249822, 
             0.9567556935847281}, {-0.40654089162374, 0.8097452420891266}}], 
            
            ArrowBox[{{-1.3090169943749475`, 
             0.4882961343909516}, {-1.1941220249695923`, 
             0.3918640546387108}}]}}, {{
            RGBColor[0, 0, 1], 
            Thickness[Large], {{}, 
             
             LineBox[{{1.5, 0}, {1.0713639835612363`, 
               0.6998981559969356}, {-0.4164741824668925, 
               0.9606824554193021}, {-1.4061428996297485`, 
               0.3481775701632994}, {-1.4061428996297949`, \
-0.3481775701632157}, {-0.4164741824670817, -0.9606824554192657}, {
               1.0713639835611188`, -0.6998981559970153}, {1.5, 0}}]}, 
            
            PointBox[{{1.5, 0}, {1.0713639835612363`, 
              0.6998981559969356}, {-0.4164741824668925, 
              0.9606824554193021}, {-1.4061428996297485`, 
              0.3481775701632994}, {-1.4061428996297949`, \
-0.3481775701632157}, {-0.4164741824670817, -0.9606824554192657}, {
              1.0713639835611188`, -0.6998981559970153}, {1.5, 0}}], {
             ArrowBox[{{1.5, 0}, {1.35, 0.}}], 
             
             ArrowBox[{{1.0713639835612363`, 0.6998981559969356}, {
              0.9869894895706597, 0.5758782190358399}}], 
             
             ArrowBox[{{-0.4164741824668925, 
              0.9606824554193021}, {-0.3880948821623378, 
              0.8133915347411289}}], 
             
             ArrowBox[{{-1.4061428996297485`, 
              0.3481775701632994}, {-1.2751067943084113`, 
              0.2751738777757535}}], 
             
             ArrowBox[{{-1.4061428996297949`, -0.3481775701632157}, \
{-1.2751067943084493`, -0.27517387777568497`}}], 
             
             ArrowBox[{{-0.4164741824670817, -0.9606824554192657}, \
{-0.3880948821625135, -0.8133915347410952}}], 
             
             ArrowBox[{{1.0713639835611188`, -0.6998981559970153}, {
              0.9869894895705551, -0.5758782190359109}}], 
             ArrowBox[{{1.5, 0}, {1.35, 0.}}]}}, 
           RGBColor[1, 0, 0], 
           
           PointBox[{{-1.4061428996297949`, -0.3481775701632157}, \
{-0.4164741824670817, -0.9606824554192657}, {
            1.0713639835611188`, -0.6998981559970153}}]}, {
           GrayLevel[0], 
           PointBox[{{-1.118033988749895, 0}, {1.118033988749895, 0}}]}, {
           Thickness[Large], 
           RGBColor[0, 0, 1], 
           PointBox[{{1.5, 0}, {1.0713639835612363`, 0.6998981559969356}}], 
           LineBox[{{1.5, 0}, {1.0713639835612363`, 0.6998981559969356}}], {
            GrayLevel[0], 
            Dashing[{Small, Small}], 
            
            LineBox[{{1.118033988749895, 0}, {1.6735942735317408`, 
              0.34023971247827983`}}], 
            
            LineBox[{{-1.118033988749895, 0}, {1.6735942735317408`, 
              0.34023971247827983`}}]}, {
            RGBColor[0, 
             NCache[
              Rational[2, 3], 0.6666666666666666], 0], 
            PointBox[{1.3181585694528146`, 0.29691971053020944`}]}, {
            GrayLevel[0], 
            PointBox[{1.6735942735317408`, 0.34023971247827983`}]}, {
            GrayLevel[0], {
             InsetBox[
              FormBox[
               StyleBox[
               "\"\\!\\(\\*SubscriptBox[\\(f\\), \\(1\\)]\\)\"", 16, 
                StripOnInput -> False], TraditionalForm], {-1.118033988749895,
                0}, {0, -1.75}], 
             InsetBox[
              FormBox[
               StyleBox[
               "\"\\!\\(\\*SubscriptBox[\\(f\\), \\(2\\)]\\)\"", 16, 
                StripOnInput -> False], TraditionalForm], {
              1.118033988749895, 0}, {0, -1.75}], 
             InsetBox[
              FormBox[
               StyleBox[
               "\"\\!\\(\\*SubscriptBox[\\(f\\), \\(2\\)]\\)'\"", 16, 
                StripOnInput -> False], TraditionalForm], {
              1.6735942735317408`, 0.34023971247827983`}, {0, -1.75}], 
             InsetBox[
              FormBox[
               StyleBox[
               "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)\"", 16, 
                StripOnInput -> False], TraditionalForm], {1.5, 0}, {
              0, -1.75}], 
             InsetBox[
              FormBox[
               StyleBox[
               "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(2\\)]\\)\"", 16, 
                StripOnInput -> False], TraditionalForm], {
              1.0713639835612363`, 0.6998981559969356}, {0, -1.75}], 
             InsetBox[
              FormBox[
               StyleBox["\"b\"", 16, StripOnInput -> False], 
               TraditionalForm], {1.3181585694528146`, 
              0.29691971053020944`}, {0, -1.75}]}}}, {}, {}}}, {
        ImageSize -> Small, PlotLabel -> FormBox[
           StyleBox["\"(5)\"", {
             GrayLevel[0], Medium}, StripOnInput -> False], TraditionalForm], 
         Frame -> True, FrameStyle -> Medium, ImageSize -> Large, 
         PlotRange -> {{-1.6, 1.6}, {-1.1, 1.1}}}]},
      "Row",
      DisplayFunction->(PaneBox[#, Alignment -> {Right, Center}]& ),
      InterpretationFunction->(RowBox[{"Row", "[", 
         RowBox[{
           RowBox[{"{", #, "}"}], ",", 
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {20, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[20]], ",", 
           RowBox[{"Alignment", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Right", ",", "Center"}], "}"}]}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{
          GrayLevel[0], 
          CircleBox[{0, 0}, {1.5, 1}]}, {
          Thickness[Large], 
          RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          CircleBox[{0, 0}, {1.4061428996297716`, 0.8527824190139134}]}, {
          PointSize[Large], 
          Arrowheads[Medium], {
           RGBColor[1, 0.5, 0], 
           
           PointBox[{{1.5, 0}, {0.4363389981249827, 
             0.956755693584728}, {-0.4363389981249822, 
             0.9567556935847281}, {-1.3090169943749475`, 
             0.4882961343909516}, {-1.3090169943749475`, \
-0.4882961343909516}}], 
           
           LineBox[{{1.5, 0}, {0.4363389981249827, 
             0.956755693584728}, {-0.4363389981249822, 
             0.9567556935847281}, {-1.3090169943749475`, 
             0.4882961343909516}, {-1.3090169943749475`, \
-0.4882961343909516}}], 
           CircleBox[{1.5, 0}, 0.05], 
           CircleBox[{-1.3090169943749475`, -0.4882961343909516}, 0.05], {
            
            ArrowBox[{{0.4363389981249827, 0.956755693584728}, {
             0.40654089162374046`, 0.8097452420891265}}], 
            
            ArrowBox[{{-0.4363389981249822, 
             0.9567556935847281}, {-0.40654089162374, 0.8097452420891266}}], 
            
            ArrowBox[{{-1.3090169943749475`, 
             0.4882961343909516}, {-1.1941220249695923`, 
             0.3918640546387108}}]}}, {{
            RGBColor[0, 0, 1], 
            Thickness[Large], {
             Dashing[{Small, Small}], 
             
             LineBox[{{1.5, 0}, {1.0713639835612363`, 
               0.6998981559969356}, {-0.4164741824668925, 
               0.9606824554193021}, {-1.4061428996297485`, 
               0.3481775701632994}, {-1.4061428996297949`, \
-0.3481775701632157}, {-0.4164741824670817, -0.9606824554192657}, {
               1.0713639835611188`, -0.6998981559970153}, {1.5, 0}}]}, 
            
            PointBox[{{1.5, 0}, {1.0713639835612363`, 
              0.6998981559969356}, {-0.4164741824668925, 
              0.9606824554193021}, {-1.4061428996297485`, 
              0.3481775701632994}, {-1.4061428996297949`, \
-0.3481775701632157}, {-0.4164741824670817, -0.9606824554192657}, {
              1.0713639835611188`, -0.6998981559970153}, {1.5, 0}}], {}}, 
           RGBColor[1, 0, 0], 
           
           PointBox[{{-1.4061428996297949`, -0.3481775701632157}, \
{-0.4164741824670817, -0.9606824554192657}, {
            1.0713639835611188`, -0.6998981559970153}}]}, {
           GrayLevel[0], 
           PointBox[{{-1.118033988749895, 0}, {1.118033988749895, 0}}]}, {
           Thickness[Large], 
           RGBColor[0, 0, 1], 
           PointBox[{{1.5, 0}, {1.0713639835612363`, 0.6998981559969356}}], 
           LineBox[{{1.5, 0}, {1.0713639835612363`, 0.6998981559969356}}], {
            GrayLevel[0], 
            Dashing[{Small, Small}], 
            
            LineBox[{{1.118033988749895, 0}, {1.6735942735317408`, 
              0.34023971247827983`}}], 
            
            LineBox[{{-1.118033988749895, 0}, {1.6735942735317408`, 
              0.34023971247827983`}}]}, {
            RGBColor[0, 
             NCache[
              Rational[2, 3], 0.6666666666666666], 0], 
            PointBox[{1.3181585694528146`, 0.29691971053020944`}]}, {
            GrayLevel[0], 
            PointBox[{1.6735942735317408`, 0.34023971247827983`}]}, {
            GrayLevel[0], {
             InsetBox[
              FormBox[
               StyleBox[
               "\"\\!\\(\\*SubscriptBox[\\(f\\), \\(1\\)]\\)\"", 16, 
                StripOnInput -> False], TraditionalForm], {-1.118033988749895,
                0}, {0, -1.75}], 
             InsetBox[
              FormBox[
               StyleBox[
               "\"\\!\\(\\*SubscriptBox[\\(f\\), \\(2\\)]\\)\"", 16, 
                StripOnInput -> False], TraditionalForm], {
              1.118033988749895, 0}, {0, -1.75}], 
             InsetBox[
              FormBox[
               StyleBox[
               "\"\\!\\(\\*SubscriptBox[\\(f\\), \\(2\\)]\\)'\"", 16, 
                StripOnInput -> False], TraditionalForm], {
              1.6735942735317408`, 0.34023971247827983`}, {0, -1.75}], 
             InsetBox[
              FormBox[
               StyleBox[
               "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)\"", 16, 
                StripOnInput -> False], TraditionalForm], {1.5, 0}, {
              0, -1.75}], 
             InsetBox[
              FormBox[
               StyleBox[
               "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(2\\)]\\)\"", 16, 
                StripOnInput -> False], TraditionalForm], {
              1.0713639835612363`, 0.6998981559969356}, {0, -1.75}], 
             InsetBox[
              FormBox[
               StyleBox["\"b\"", 16, StripOnInput -> False], 
               TraditionalForm], {1.3181585694528146`, 
              0.29691971053020944`}, {0, -1.75}]}}}, {
           RGBColor[0, 0, 1], 
           Thickness[Large], 
           
           LineBox[{{1.4854021031123557`, 0.13917310096006544`}, {
            1.242252868548657, -0.5604790849830106}, {-0.08204657177835428, \
-0.9985029594479973}, {-1.3059683522345205`, -0.4919108604713982}, \
{-1.467753872094439, 0.2062345708187442}, {-0.7182071243266667, 
            0.8779214155078447}, {0.8455729240783477, 0.8259691761979695}, {
            1.4854021031123406`, 0.1391731009601348}}], 
           PointBox[{1.4854021031123557`, 0.13917310096006544`}], {
            
            ArrowBox[{{1.4854021031123557`, 0.13917310096006544`}, {
             1.3386280716350694`, 0.10823148361538609`}}], 
            
            ArrowBox[{{1.242252868548657, -0.5604790849830106}, {
             1.1369874452447044`, -0.4536184717682264}}], 
            
            ArrowBox[{{-0.08204657177835428, -0.9985029594479973}, \
{-0.07657224890719042, -0.8486028867692216}}], 
            
            ArrowBox[{{-1.3059683522345205`, -0.4919108604713982}, \
{-1.1915360259220147`, -0.3949302299583509}}], 
            
            ArrowBox[{{-1.467753872094439, 
             0.2062345708187442}, {-1.3247312137456722`, 
             0.1610182109602598}}], 
            
            ArrowBox[{{-0.7182071243266667, 
             0.8779214155078447}, {-0.6669514773858991, 0.7369502884758053}}], 
            
            ArrowBox[{{0.8455729240783477, 0.8259691761979695}, {
             0.7834518461792597, 0.6894372323875357}}], 
            
            ArrowBox[{{1.4854021031123406`, 0.1391731009601348}, {
             1.3386280716350574`, 0.1082314836154404}}]}}, {}}}, {
        ImageSize -> Small, PlotLabel -> FormBox[
           StyleBox["\"(6)\"", {
             GrayLevel[0], Medium}, StripOnInput -> False], TraditionalForm], 
         Frame -> True, FrameStyle -> Medium, ImageSize -> Large, 
         PlotRange -> {{-1.6, 1.6}, {-1.1, 1.1}}}]},
      "Row",
      DisplayFunction->(PaneBox[#, Alignment -> {Right, Center}]& ),
      InterpretationFunction->(RowBox[{"Row", "[", 
         RowBox[{
           RowBox[{"{", #, "}"}], ",", 
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {20, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[20]], ",", 
           RowBox[{"Alignment", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Right", ",", "Center"}], "}"}]}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7689482856126137`*^9, 3.7689482896847124`*^9}, 
   3.768948321490653*^9, 3.7689483688727083`*^9, {3.7689483989508038`*^9, 
   3.768948424634214*^9}, {3.7689484628809166`*^9, 3.7689485449924135`*^9}, 
   3.768948582007936*^9, 3.768948627643449*^9, 3.768948662462302*^9, 
   3.7689486957173653`*^9, 3.7689487822187304`*^9, {3.76903157834608*^9, 
   3.7690316190542116`*^9}, 3.7691015858364687`*^9, 3.7691598654068975`*^9, 
   3.769175892585415*^9, 3.7692676464832954`*^9, 3.769275768346781*^9, 
   3.7693722343860645`*^9, 3.769372507036039*^9, 3.7694257026001644`*^9, 
   3.769530161742899*^9, 3.7696086135953217`*^9, 3.769802273120863*^9, 
   3.7698067556918817`*^9, 3.76994949127203*^9, 3.7701896302981644`*^9, 
   3.7701944194316216`*^9, 3.770463751195141*^9, 3.7716124889261723`*^9, 
   3.7716698094286847`*^9, 3.771687795224599*^9, 3.7716911629646573`*^9, 
   3.77169129209117*^9, 3.7716964378893833`*^9, 3.7718345162526145`*^9, 
   3.772096876994423*^9, 3.772198208367776*^9, 3.7724444398742585`*^9, 
   3.7724816462927537`*^9, 3.7725320161281796`*^9, 3.7727873784952884`*^9, 
   3.773074356158669*^9, 3.773316761239374*^9, 3.7733287918174706`*^9, 
   3.773345634344376*^9, 3.774372734537981*^9, 3.7743732965545435`*^9, 
   3.775233772663802*^9, 3.7756419680921144`*^9, 3.7756467316902084`*^9, 
   3.775727406971938*^9, 3.775911935874985*^9, 3.7760680864119005`*^9, 
   3.776972415105138*^9, 3.7770265126336603`*^9, 3.777361434692676*^9, 
   3.780259321187071*^9, 3.7870731300569887`*^9, 3.788440053838975*^9, 
   3.788983379373417*^9, 3.7894590825972033`*^9, 3.7894591985101767`*^9, 
   3.7903202211371455`*^9, 3.7913250283807516`*^9, 3.791325901132004*^9, 
   3.7914843747806225`*^9, 3.792143216259477*^9, 3.7959582218778753`*^9, 
   3.796070496229127*^9, 3.796115571834397*^9, 3.7961274148115883`*^9, 
   3.7962220446758585`*^9, 3.7963014503295507`*^9, 3.7963163762737894`*^9, 
   3.796420405578441*^9, 3.7964221110889297`*^9, 3.796422464136098*^9, 
   3.7965689326241846`*^9, 3.796568979267194*^9, 3.7966637340027256`*^9, 
   3.7969293592983437`*^9, 3.7969294939735017`*^9, 3.7970987155846815`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conway' Circle", "Section",
 CellChangeTimes->{{3.797175745209905*^9, 3.797175763830115*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getConwaySpokes"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getConwaySpokes", "[", "poly_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sides", ",", "sidesRot", ",", "spokes1", ",", "spokes2"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sides", "=", 
       RowBox[{"polySides", "@", "poly"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sidesRot", "=", 
       RowBox[{"RotateLeft", "[", 
        RowBox[{"sides", ",", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"Length", "@", "poly"}], "/", "2"}], "]"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"spokes1", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#1", ",", 
            RowBox[{"#1", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"#1", "-", "#2"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"#4", "/", "#3"}], ")"}]}]}]}], "}"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"poly", ",", 
           RowBox[{"RotateLeft", "@", "poly"}], ",", "sides", ",", 
           "sidesRot"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"spokes2", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#1", ",", 
            RowBox[{"#1", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"#1", "-", "#2"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"#4", "/", "#3"}], ")"}]}]}]}], "}"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"poly", ",", 
           RowBox[{"RotateRight", "@", "poly"}], ",", 
           RowBox[{"RotateRight", "@", "sides"}], ",", "sidesRot"}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"spokes1", ",", "spokes2"}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7971021457246428`*^9, 3.7971021788213987`*^9}, {
  3.7971023084622307`*^9, 3.797102428519968*^9}, {3.797102458703331*^9, 
  3.7971026978072405`*^9}, {3.797102849553074*^9, 3.7971028527605305`*^9}, {
  3.797102947320111*^9, 3.7971030083852353`*^9}, {3.797103283848841*^9, 
  3.797103285297974*^9}, {3.797104149866277*^9, 3.797104152089795*^9}, {
  3.797167943989827*^9, 3.7971679489735045`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getConwaySpokes2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getConwaySpokes2", "[", "poly_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sides", ",", "spokes1", ",", "spokes2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sides", "=", 
       RowBox[{"polySides", "@", "poly"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"spokes1", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#1", ",", 
            RowBox[{"#1", "+", 
             RowBox[{"#4", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"#1", "-", "#2"}], ")"}], "/", "#3"}]}]}]}], "}"}], 
          "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"poly", ",", 
           RowBox[{"RotateLeft", "@", "poly"}], ",", "sides", ",", 
           RowBox[{"RotateLeft", "[", 
            RowBox[{"sides", ",", "1"}], "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"spokes2", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#1", ",", 
            RowBox[{"#1", "+", 
             RowBox[{"#4", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"#1", "-", "#2"}], ")"}], "/", "#3"}]}]}]}], "}"}], 
          "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"poly", ",", 
           RowBox[{"RotateRight", "@", "poly"}], ",", 
           RowBox[{"RotateRight", "@", "sides"}], ",", 
           RowBox[{"RotateRight", "[", 
            RowBox[{"sides", ",", "2"}], "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"spokes1", ",", "spokes2"}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7971041584179134`*^9, 3.797104186794073*^9}, {
   3.7971043161883607`*^9, 3.797104371540454*^9}, 3.7971677769052196`*^9, {
   3.7971679373280306`*^9, 3.7971679478853846`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getConwaySpokes3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getConwaySpokes3", "[", "poly_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sides", ",", "spokes1", ",", "spokes2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sides", "=", 
       RowBox[{"polySides", "@", "poly"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"spokes1", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#1", ",", 
            RowBox[{"#1", "+", 
             RowBox[{"#4", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"#1", "-", "#2"}], ")"}], "/", "#3"}]}]}]}], "}"}], 
          "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"poly", ",", 
           RowBox[{"RotateLeft", "@", "poly"}], ",", "sides", ",", 
           RowBox[{"RotateRight", "[", 
            RowBox[{"sides", ",", "2"}], "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"spokes2", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#1", ",", 
            RowBox[{"#1", "+", 
             RowBox[{"#4", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"#1", "-", "#2"}], ")"}], "/", "#3"}]}]}]}], "}"}], 
          "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"poly", ",", 
           RowBox[{"RotateRight", "@", "poly"}], ",", 
           RowBox[{"RotateRight", "@", "sides"}], ",", 
           RowBox[{"RotateLeft", "[", 
            RowBox[{"sides", ",", "1"}], "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"spokes1", ",", "spokes2"}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7971682411732063`*^9, 3.7971682581278677`*^9}}],

Cell["\<\
{q1, r2, q2, r3, q3, r1}=riffle[{q1,q2,q3},rotateLeft@{r1,r2,r3}]\
\>", "Text",
 CellChangeTimes->{{3.7971535503867407`*^9, 3.7971536049311438`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "showConwaySpokes"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "showConwaySpokes"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"maxX", "\[Rule]", "3"}], ",", 
     RowBox[{"maxY", "\[Rule]", "3"}], ",", 
     RowBox[{"drPoly1", "\[Rule]", "False"}], ",", 
     RowBox[{"conwayType", "\[Rule]", "1"}], ",", 
     RowBox[{"drExc", "\[Rule]", "False"}], ",", 
     RowBox[{"drPoly2", "\[Rule]", "False"}], ",", 
     RowBox[{"drCirc1", "\[Rule]", "False"}], ",", 
     RowBox[{"drCirc2", "\[Rule]", "False"}], ",", 
     RowBox[{"drRiffle", "\[Rule]", "False"}], ",", 
     RowBox[{"lgt", "\[Rule]", ".2"}], ",", 
     RowBox[{"fnt", "\[Rule]", "16"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showConwaySpokes", "[", 
   RowBox[{"a_", ",", "n_", ",", "tDeg_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "poly", ",", "exc", ",", "cAB", ",", "inner", ",", "s1", ",", "s2", ",", 
      "gr", ",", "pr", ",", "p1", ",", "p2", ",", "cir1", ",", "r1", ",", 
      "r2", ",", "tri2", ",", "cir2", ",", "pl", ",", "ell", ",", 
      "\[IndentingNewLine]", "polyA", ",", "p1A", ",", "p2A", ",", 
      "polyRiffle", ",", "polyRiffleA"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ell", "=", 
      RowBox[{"plotEllAxes", "[", 
       RowBox[{"a", ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Thick"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pr", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"OptionValue", "@", "maxX"}]}], ",", 
          RowBox[{"OptionValue", "@", "maxX"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"OptionValue", "@", "maxY"}]}], ",", 
          RowBox[{"OptionValue", "@", "maxY"}]}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"poly", ",", "inner", ",", "cAB"}], "}"}], "=", 
      RowBox[{"getPolyCausticInner", "[", 
       RowBox[{"a", ",", "n", ",", "tDeg"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"exc", "=", 
      RowBox[{"getExcentralPolygon", "[", 
       RowBox[{"a", ",", "poly"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"s1", ",", "s2"}], "}"}], "=", 
      RowBox[{"Switch", "[", 
       RowBox[{
        RowBox[{"OptionValue", "@", "conwayType"}], ",", "2", ",", 
        RowBox[{"getConwaySpokes2", "@", "poly"}], ",", "3", ",", 
        RowBox[{"getConwaySpokes3", "@", "poly"}], ",", "_", ",", 
        RowBox[{"getConwaySpokes", "@", "poly"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<poly sides: \>\"", ",", 
         RowBox[{"polySides", "@", "poly"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<spk1 lgts: \>\"", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"magn", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", "s1"}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<spk2 lgts: \>\"", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"magn", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", "s2"}]}], 
        "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"p1", "=", 
      RowBox[{"Second", "/@", "s1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p2", "=", 
      RowBox[{"Second", "/@", "s2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"polyA", "=", 
      RowBox[{"signedArea", "@", "poly"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p1A", "=", 
      RowBox[{"signedArea", "@", "p1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p2A", "=", 
      RowBox[{"signedArea", "@", "p2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"polyRiffle", "=", 
      RowBox[{"Riffle", "[", 
       RowBox[{"p1", ",", 
        RowBox[{"RotateLeft", "@", "p2"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"polyRiffleA", "=", 
      RowBox[{"signedArea", "@", "polyRiffle"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cir1", "=", 
      RowBox[{"getCircumcenterTrilin", "[", 
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{"p1", ",", "3"}], "]"}], ",", 
        RowBox[{"triLengthsRL", "@", 
         RowBox[{"Take", "[", 
          RowBox[{"p1", ",", "3"}], "]"}]}]}], "]"}]}], ";", 
     RowBox[{"r1", "=", 
      RowBox[{"magn", "[", 
       RowBox[{
        RowBox[{"First", "@", "p1"}], "-", "cir1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cir2", "=", 
      RowBox[{"getCircumcenterTrilin", "[", 
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{"p2", ",", "3"}], "]"}], ",", 
        RowBox[{"triLengthsRL", "@", 
         RowBox[{"Take", "[", 
          RowBox[{"p2", ",", "3"}], "]"}]}]}], "]"}]}], ";", 
     RowBox[{"r2", "=", 
      RowBox[{"magn", "[", 
       RowBox[{
        RowBox[{"First", "@", "p2"}], "-", "cir2"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pl", "=", 
      RowBox[{"\"\<A=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{"polyA", ",", "5"}], "]"}], "<>", 
       "\"\<, \!\(\*SubscriptBox[\(A\), \(1\)]\)=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{"p1A", ",", "5"}], "]"}], "<>", 
       "\"\<, \!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{"p2A", ",", "5"}], "]"}], "<>", "\[IndentingNewLine]", 
       "\"\<\\n\!\(\*SubscriptBox[\(A\), \(1\)]\)A=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{
         RowBox[{"p1A", " ", "polyA"}], ",", "5"}], "]"}], "<>", 
       "\"\<, \!\(\*SubscriptBox[\(A\), \(1\)]\)/A=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{
         RowBox[{"p1A", "/", "polyA"}], ",", "5"}], "]"}], "<>", 
       "\[IndentingNewLine]", 
       "\"\<\\n\!\(\*SubscriptBox[\(A\), \(2\)]\)A=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{
         RowBox[{"p2A", " ", "polyA"}], ",", "5"}], "]"}], "<>", 
       "\"\<, \!\(\*SubscriptBox[\(A\), \(2\)]\)/A=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{
         RowBox[{"p2A", "/", "polyA"}], ",", "5"}], "]"}], "<>", 
       "\[IndentingNewLine]", 
       "\"\<\\n\!\(\*SubscriptBox[\(A\), \(1\)]\)+\!\(\*SubscriptBox[\(A\), \
\(2\)]\)=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{
         RowBox[{"p1A", "+", "p2A"}], ",", "5"}], "]"}], "<>", 
       "\"\<, \!\(\*SubscriptBox[\(A\), \(1\)]\)\!\(\*SubscriptBox[\(A\), \(2\
\)]\)=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{
         RowBox[{"p1A", " ", "p2A"}], ",", "5"}], "]"}], "<>", 
       "\"\<, \!\(\*SubscriptBox[\(A\), \(1\)]\)/\!\(\*SubscriptBox[\(A\), \
\(2\)]\)=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{
         RowBox[{"p1A", "/", "p2A"}], ",", "5"}], "]"}], "<>", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "@", "drRiffle"}], ",", 
         RowBox[{"\"\<\\n\!\(\*SubscriptBox[\(A\), \(r\)]\)=\>\"", "<>", 
          RowBox[{"nfn", "[", 
           RowBox[{"polyRiffleA", ",", "5"}], "]"}], "<>", 
          "\"\<, \!\(\*SubscriptBox[\(A\), \(r\)]\)/A=\>\"", "<>", 
          RowBox[{"nfn", "[", 
           RowBox[{
            RowBox[{"polyRiffleA", "/", "polyA"}], ",", "5"}], "]"}], "<>", 
          "\"\<, \!\(\*SubscriptBox[\(A\), \(r\)]\)A=\>\"", "<>", 
          RowBox[{"nfn", "[", 
           RowBox[{
            RowBox[{"polyRiffleA", " ", "polyA"}], ",", "5"}], "]"}]}], ",", 
         "\"\<\>\""}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gr", "=", 
      RowBox[{"Graphics", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"FaceForm", "@", "None"}], ",", 
         RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "@", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Blue"}], "}"}]}], ",", 
           RowBox[{"Polygon", "@", "poly"}], ",", "Blue", ",", 
           RowBox[{"Point", "@", "poly"}], ",", 
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"poly", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", ".1"}], "]"}], ",", 
           RowBox[{"ellLabelPoints", "[", 
            RowBox[{"a", ",", "poly", ",", "\"\<P\>\"", ",", 
             RowBox[{"OptionValue", "@", "fnt"}], ",", 
             RowBox[{"OptionValue", "@", "lgt"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"Line", "/@", "s1"}], ",", 
           RowBox[{"Point", "@", "p1"}], ",", 
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", ".1"}], "]"}], ",", 
           RowBox[{"ellLabelPoints", "[", 
            RowBox[{"a", ",", "p1", ",", "\"\<Q\>\"", ",", 
             RowBox[{"OptionValue", "@", "fnt"}], ",", 
             RowBox[{"OptionValue", "@", "lgt"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Darker", "@", "Green"}], ",", 
           RowBox[{"Line", "/@", "s2"}], ",", 
           RowBox[{"Point", "@", "p2"}], ",", 
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"s2", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", ".1"}], "]"}], ",", 
           RowBox[{"ellLabelPoints", "[", 
            RowBox[{"a", ",", "p2", ",", "\"\<R\>\"", ",", 
             RowBox[{"OptionValue", "@", "fnt"}], ",", 
             RowBox[{"OptionValue", "@", "lgt"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "@", "drExc"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"EdgeForm", "@", 
              RowBox[{"{", 
               RowBox[{"Thick", ",", 
                RowBox[{"Darker", "@", "Green"}]}], "}"}]}], ",", 
             RowBox[{"Polygon", "@", "exc"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "@", "drPoly1"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"EdgeForm", "@", 
              RowBox[{"{", 
               RowBox[{"Thick", ",", "Dashed", ",", "Red"}], "}"}]}], ",", 
             RowBox[{"Polygon", "@", "p1"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "@", "drPoly2"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"EdgeForm", "@", 
              RowBox[{"{", 
               RowBox[{"Thick", ",", "Dashed", ",", 
                RowBox[{"Darker", "@", "Green"}]}], "}"}]}], ",", 
             RowBox[{"Polygon", "@", "p2"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "@", "drRiffle"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"EdgeForm", "@", 
              RowBox[{"{", 
               RowBox[{"Thick", ",", "Dashed", ",", "Purple"}], "}"}]}], ",", 
             RowBox[{"Polygon", "@", "polyRiffle"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "@", "drCirc1"}], ",", 
           RowBox[{"{", 
            RowBox[{"Red", ",", 
             RowBox[{"Point", "@", "cir1"}], ",", 
             RowBox[{"Circle", "[", 
              RowBox[{"cir1", ",", "r1"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "@", "drCirc2"}], ",", 
           RowBox[{"{", 
            RowBox[{"Red", ",", 
             RowBox[{"Point", "@", "cir2"}], ",", 
             RowBox[{"Circle", "[", 
              RowBox[{"cir2", ",", "r2"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ell", ",", "gr"}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{"pl", ",", 
          RowBox[{"{", 
           RowBox[{"Black", ",", "16"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "pr"}]}], "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7971021795415025`*^9, 3.79710219552559*^9}, {
   3.797102388333714*^9, 3.79710238874963*^9}, {3.79710270216756*^9, 
   3.7971028241749*^9}, {3.797102867279727*^9, 3.797102924112137*^9}, {
   3.7971030261776834`*^9, 3.7971030336016874`*^9}, {3.797103072713131*^9, 
   3.7971031236649804`*^9}, {3.797103183073174*^9, 3.797103232248747*^9}, {
   3.797103296858102*^9, 3.7971033012972383`*^9}, {3.7971033380818977`*^9, 
   3.7971033653864365`*^9}, {3.797103426698927*^9, 3.7971034946028085`*^9}, {
   3.797103572057806*^9, 3.7971037396839676`*^9}, {3.7971038332911687`*^9, 
   3.797103922259339*^9}, {3.7971039629244843`*^9, 3.797103964595027*^9}, {
   3.797104034355605*^9, 3.7971040506685038`*^9}, {3.7971040830917673`*^9, 
   3.7971040916050143`*^9}, 3.797104196733649*^9, 3.7971044063723636`*^9, {
   3.7971510727160263`*^9, 3.797151131693886*^9}, {3.7971511624932733`*^9, 
   3.7971512288531213`*^9}, {3.7971525021131134`*^9, 
   3.7971526709442296`*^9}, {3.797152706186426*^9, 3.797152888969942*^9}, {
   3.7971530700402412`*^9, 3.7971531122489834`*^9}, {3.797153193443141*^9, 
   3.797153198338735*^9}, {3.797153295424262*^9, 3.7971533555542536`*^9}, {
   3.797153413760662*^9, 3.797153500931916*^9}, {3.7971536305237827`*^9, 
   3.797153718186708*^9}, {3.797153777346969*^9, 3.7971539318599586`*^9}, {
   3.7971675818124185`*^9, 3.7971676213655806`*^9}, {3.7971676655620623`*^9, 
   3.7971676757615366`*^9}, {3.7971679548557553`*^9, 3.797167977936838*^9}, 
   3.797168048241041*^9, {3.7971682823092747`*^9, 3.7971682827261276`*^9}, {
   3.7971684136915693`*^9, 3.797168469460187*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"showConwaySpokes", "[", 
    RowBox[{"a", ",", "n", ",", "tDeg", ",", 
     RowBox[{"maxX", "->", "maxX0"}], ",", 
     RowBox[{"maxY", "->", "maxY0"}], ",", 
     RowBox[{"drExc", "\[Rule]", "drExc0"}], ",", 
     RowBox[{"drCirc1", "\[Rule]", "drCirc1a"}], ",", 
     RowBox[{"drCirc2", "\[Rule]", "drCirc2a"}], ",", 
     RowBox[{"drRiffle", "\[Rule]", "drRiffle0"}], ",", 
     RowBox[{"conwayType", "\[Rule]", "conwayType0"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5", ",", "7"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "1.5"}], "}"}], ",", "1.01", ",", "5", ",", ".05"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"maxX0", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"maxY0", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"conwayType0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drExc0", ",", "False"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drRiffle0", ",", "False"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drCirc1a", ",", "False"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"drCirc2a", ",", "False"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tDeg", ",", "10"}], "}"}], ",", 
     RowBox[{"-", "180"}], ",", "180", ",", ".1"}], "}"}], ",", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7971034392871943`*^9, 3.7971034636402807`*^9}, {
  3.797103936463091*^9, 3.7971039462012033`*^9}, {3.7971040537532597`*^9, 
  3.7971040813623867`*^9}, {3.7971511350818014`*^9, 3.7971511463447*^9}, {
  3.7971529329166613`*^9, 3.7971529694114733`*^9}, {3.7971530065386677`*^9, 
  3.7971530114036703`*^9}, {3.797153161107375*^9, 3.797153188996206*^9}, {
  3.7971537256926446`*^9, 3.797153735165518*^9}, {3.797167626893834*^9, 
  3.797167637070208*^9}, {3.797167990053322*^9, 3.797168005351437*^9}, {
  3.7971684821353116`*^9, 3.7971684956003647`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1.5, $CellContext`conwayType0$$ = 
    2, $CellContext`drCirc1a$$ = False, $CellContext`drCirc2a$$ = 
    False, $CellContext`drExc0$$ = False, $CellContext`drRiffle0$$ = 
    False, $CellContext`maxX0$$ = 4, $CellContext`maxY0$$ = 
    4, $CellContext`n$$ = 5, $CellContext`tDeg$$ = -68.6, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 5}, {3, 5, 7}}, {{
       Hold[$CellContext`a$$], 1.5}, 1.01, 5, 0.05}, {{
       Hold[$CellContext`maxX0$$], 3}, {1, 2, 3, 4, 5}}, {{
       Hold[$CellContext`maxY0$$], 3}, {1, 2, 3, 4, 5}}, {{
       Hold[$CellContext`conwayType0$$], 1}, {1, 2, 3}}, {{
       Hold[$CellContext`drExc0$$], False}, {True, False}}, {{
       Hold[$CellContext`drRiffle0$$], False}, {True, False}}, {{
       Hold[$CellContext`drCirc1a$$], False}, {True, False}}, {{
       Hold[$CellContext`drCirc2a$$], False}, {True, False}}, {{
       Hold[$CellContext`tDeg$$], 10}, -180, 180, 0.1}}, Typeset`size$$ = {
    576., {329., 335.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$2047285$$ = 
    0, $CellContext`a$2047286$$ = 0, $CellContext`maxX0$2047287$$ = 
    0, $CellContext`maxY0$2047288$$ = 0, $CellContext`conwayType0$2047289$$ = 
    0, $CellContext`drExc0$2047290$$ = 
    False, $CellContext`drRiffle0$2047291$$ = 
    False, $CellContext`drCirc1a$2047292$$ = 
    False, $CellContext`drCirc2a$2047293$$ = 
    False, $CellContext`tDeg$2047294$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1.5, $CellContext`conwayType0$$ = 
        1, $CellContext`drCirc1a$$ = False, $CellContext`drCirc2a$$ = 
        False, $CellContext`drExc0$$ = False, $CellContext`drRiffle0$$ = 
        False, $CellContext`maxX0$$ = 3, $CellContext`maxY0$$ = 
        3, $CellContext`n$$ = 5, $CellContext`tDeg$$ = 10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$2047285$$, 0], 
        Hold[$CellContext`a$$, $CellContext`a$2047286$$, 0], 
        Hold[$CellContext`maxX0$$, $CellContext`maxX0$2047287$$, 0], 
        Hold[$CellContext`maxY0$$, $CellContext`maxY0$2047288$$, 0], 
        Hold[$CellContext`conwayType0$$, $CellContext`conwayType0$2047289$$, 
         0], 
        Hold[$CellContext`drExc0$$, $CellContext`drExc0$2047290$$, False], 
        Hold[$CellContext`drRiffle0$$, $CellContext`drRiffle0$2047291$$, 
         False], 
        Hold[$CellContext`drCirc1a$$, $CellContext`drCirc1a$2047292$$, False], 
        Hold[$CellContext`drCirc2a$$, $CellContext`drCirc2a$2047293$$, False], 
        Hold[$CellContext`tDeg$$, $CellContext`tDeg$2047294$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`showConwaySpokes[$CellContext`a$$, \
$CellContext`n$$, $CellContext`tDeg$$, $CellContext`maxX -> \
$CellContext`maxX0$$, $CellContext`maxY -> $CellContext`maxY0$$, \
$CellContext`drExc -> $CellContext`drExc0$$, $CellContext`drCirc1 -> \
$CellContext`drCirc1a$$, $CellContext`drCirc2 -> $CellContext`drCirc2a$$, \
$CellContext`drRiffle -> $CellContext`drRiffle0$$, $CellContext`conwayType -> \
$CellContext`conwayType0$$], 
      "Specifications" :> {{{$CellContext`n$$, 5}, {3, 5, 
         7}}, {{$CellContext`a$$, 1.5}, 1.01, 5, 
         0.05}, {{$CellContext`maxX0$$, 3}, {1, 2, 3, 4, 
         5}}, {{$CellContext`maxY0$$, 3}, {1, 2, 3, 4, 
         5}}, {{$CellContext`conwayType0$$, 1}, {1, 2, 
         3}}, {{$CellContext`drExc0$$, False}, {
         True, False}}, {{$CellContext`drRiffle0$$, False}, {
         True, False}}, {{$CellContext`drCirc1a$$, False}, {
         True, False}}, {{$CellContext`drCirc2a$$, False}, {
         True, False}}, {{$CellContext`tDeg$$, 10}, -180, 180, 0.1}}, 
      "Options" :> {ControlPlacement -> Left}, "DefaultOptions" :> {}],
     ImageSizeCache->{918., {361., 367.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7971034665555167`*^9, 3.7971039469621444`*^9, 3.7971040930770864`*^9, 
   3.7971041979035187`*^9, 3.7971043749592905`*^9, 3.797151148334116*^9, 
   3.797151191254533*^9, {3.7971526725893974`*^9, 3.7971526970979643`*^9}, {
   3.797152948884016*^9, 3.7971529697647533`*^9}, 3.797153011637046*^9, {
   3.7971531894099154`*^9, 3.797153201143237*^9}, 3.797153359249379*^9, 
   3.7971537356102343`*^9, 3.7971676374083047`*^9, 3.7971680067696743`*^9, 
   3.79716828489137*^9, 3.797168497811427*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["[*** app ***] Focus Pedals to Orbit and Tangential", "Section",
 CellChangeTimes->{{3.7959609644673977`*^9, 3.7959610022391977`*^9}, {
  3.796108689524212*^9, 3.7961087145747466`*^9}, {3.7971757806212397`*^9, 
  3.7971757839962296`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "stachelLsRs"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stachelLsRs", "[", 
   RowBox[{"poly_", ",", "inner_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ls", ",", "rs"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ls", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"magn", "[", 
          RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"inner", ",", "poly"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rs", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"magn", "[", 
          RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RotateLeft", "@", "poly"}], ",", "inner"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Apply", "[", 
        RowBox[{"Times", ",", "ls"}], "]"}], ",", 
       RowBox[{"Apply", "[", 
        RowBox[{"Times", ",", "rs"}], "]"}]}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7974470476683846`*^9, 3.7974471474493327`*^9}, {
  3.7974474538421383`*^9, 3.797447455969348*^9}, {3.7974475030813403`*^9, 
  3.797447507628086*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stachelLsRs", "@@", 
  RowBox[{"Part", "[", 
   RowBox[{
    RowBox[{"getPolyCausticInner", "[", 
     RowBox[{"1.5", ",", "5", ",", "10."}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.797447457172278*^9, 3.7974474981210933`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.16955380585892615`", ",", "0.1695538058589289`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.797447498507491*^9, 3.79744750860932*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "myChop"}], ";", 
  RowBox[{
   RowBox[{"myChop", "[", "val_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "@", "val"}], "<", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}], ",", "0", ",", 
     RowBox[{"Abs", "@", "val"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7960717528718233`*^9, 3.796071770966506*^9}, {
  3.796071895357914*^9, 3.7960718974373527`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getPedals", "[", 
    RowBox[{"p_", ",", "poly_"}], "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"closestPerp", "[", 
       RowBox[{"p", ",", "#1", ",", "#2"}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"poly", ",", 
       RowBox[{"RotateLeft", "@", "poly"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.796109706253759*^9, 3.7961097239664536`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "getInnerPedals"}], ";", 
  RowBox[{
   RowBox[{"getInnerPedals", "[", 
    RowBox[{
     RowBox[{"a_", "?", "NumericQ"}], ",", 
     RowBox[{"n_", "?", "NumericQ"}], ",", 
     RowBox[{"tDeg_", "?", "NumericQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "poly", ",", "polyInner", ",", "causticAB", ",", "fs1", ",", "fs2", ",",
        "pedalsInner1", ",", "pedalsInner2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"poly", ",", "polyInner", ",", "causticAB"}], "}"}], "=", 
       RowBox[{"getPolyCausticInner", "[", 
        RowBox[{"a", ",", "n", ",", "tDeg"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fs1", ",", "fs2"}], "}"}], "=", 
       RowBox[{"getFoci", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pedalsInner1", ",", "pedalsInner2"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"getPedals", "[", 
          RowBox[{"#", ",", 
           RowBox[{"Take", "[", 
            RowBox[{"polyInner", ",", "2"}], "]"}]}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"fs1", ",", "fs2"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"First", "@", "pedalsInner1"}], ",", 
        RowBox[{"First", "@", "pedalsInner2"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.796110159482768*^9, 3.796110321063221*^9}, {
  3.7961103917522616`*^9, 3.7961104079023476`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getInnerPedals", "[", 
  RowBox[{"1.5", ",", "5", ",", "10."}], "]"}]], "Input",
 CellChangeTimes->{{3.796110271376052*^9, 3.7961102771497436`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7755490081689156`"}], ",", 
     RowBox[{"-", "0.944058716680089`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2004588722229395`", ",", 
     RowBox[{"-", "0.22720391878811036`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7961102776324525`*^9, 3.796110322211295*^9}, 
   3.79611040942843*^9, 3.7961155770029216`*^9, 3.7961274202839527`*^9, 
   3.7962220589141817`*^9, 3.796301461155607*^9, 3.7963163763431225`*^9, 
   3.796420411109625*^9, 3.796422111151761*^9, 3.796422464239848*^9, {
   3.7965689327636046`*^9, 3.796568947965973*^9}, 3.7965689836478395`*^9, 
   3.7966637341336017`*^9, 3.7969293593541946`*^9, 3.796929494033342*^9, 
   3.7970987157612076`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pairStr", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_"}], "}"}], ",", "digs_"}], "]"}], ":=", 
   RowBox[{"\"\<(\>\"", "<>", 
    RowBox[{"nfn", "[", 
     RowBox[{
      RowBox[{"Chop", "@", "x"}], ",", "digs"}], "]"}], "<>", "\"\<,\>\"", "<>", 
    RowBox[{"nfn", "[", 
     RowBox[{
      RowBox[{"Chop", "@", "y"}], ",", "digs"}], "]"}], "<>", "\"\<)\>\""}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.796418834738525*^9, 3.796418865843587*^9}, {
  3.796575578136983*^9, 3.796575582282714*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "polyAntipedal"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"polyAntipedal", "[", 
    RowBox[{"p_", ",", "poly_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"perpLines", ",", "vertices"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"perpLines", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"perp", "[", 
            RowBox[{"#", "-", "p"}], "]"}]}], "}"}], "&"}], "/@", "poly"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"vertices", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"interRaysUnprot", "[", 
           RowBox[{
            RowBox[{"#1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#1", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"perpLines", ",", 
           RowBox[{"RotateLeft", "@", "perpLines"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "vertices"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7965049053984404`*^9, 3.796505006745475*^9}, {
  3.79650504602148*^9, 3.796505103622529*^9}, {3.7970993298112755`*^9, 
  3.7970993385718794`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"polyAntipedal", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{
    RowBox[{"getPolyCausticInner", "[", 
     RowBox[{"1.5", ",", "5", ",", "10."}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7965051167003727`*^9, 3.7965051337286205`*^9}, {
  3.7970993448860044`*^9, 3.797099347338481*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.5074008505733154`", ",", 
     RowBox[{"-", "0.08316919310956189`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2114740650590632`"}], ",", 
     RowBox[{"-", "2.24028486374836`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.4989484238357975`"}], ",", 
     RowBox[{"-", "0.02332978479601555`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.2587362574982761`"}], ",", "1.2014171240001597`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4023040827746214`", ",", "0.8108808896664143`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7965051341065817`*^9, 3.796568951823798*^9, 
  3.796568997386841*^9, 3.796663734283667*^9, 3.7969293595386734`*^9, 
  3.7969294941949105`*^9, 3.797098715797113*^9, 3.7970993476147413`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getMidDists", "[", 
    RowBox[{"mid_", ",", "poly_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d1", ",", "d2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"d2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"magn2", "[", 
          RowBox[{"mid", "-", "#"}], "]"}], "&"}], "/@", "poly"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"d1", "=", 
       RowBox[{"Sqrt", "/@", "d2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Total", "@", "d1"}], ",", 
        RowBox[{"Total", "@", "d2"}], ",", 
        RowBox[{"Apply", "[", 
         RowBox[{"Times", ",", "d1"}], "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.797099045218415*^9, 3.79709909231392*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getThreeCentroids", "[", "poly_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"polyAvgVtx", "[", "poly", "]"}], ",", 
     RowBox[{"polyPerimeterCentroid", "[", "poly", "]"}], ",", 
     RowBox[{"RegionCentroid", "[", 
      RowBox[{"Polygon", "@", "poly"}], "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.797099932243142*^9, 3.7970999513886323`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPart", "[", 
  RowBox[{"5", "/", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.797102375143989*^9, 3.7971023762300615`*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.797102376595088*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"reportProds", "[", 
   RowBox[{"sym_", ",", "val1_", ",", "val2_", ",", "digs_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sym1", ",", "sym2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sym1", "=", 
      RowBox[{"\"\<\[Product]\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"sym", ",", "1"}], "]"}], ",", "StandardForm"}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"sym2", "=", 
      RowBox[{"\"\<\[Product]\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"sym", ",", "2"}], "]"}], ",", "StandardForm"}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"\"\<\\n\>\"", "<>", "sym1", "<>", "\"\<=\>\"", "<>", 
      RowBox[{"nfn", "[", 
       RowBox[{"val1", ",", "digs"}], "]"}], "<>", "\[IndentingNewLine]", 
      "\"\<, \>\"", "<>", "sym2", "<>", "\"\<=\>\"", "<>", 
      RowBox[{"nfn", "[", 
       RowBox[{"val2", ",", "digs"}], "]"}], "<>", "\[IndentingNewLine]", 
      "\"\<, \>\"", "<>", "sym1", "<>", "sym2", "<>", "\"\<=\>\"", "<>", 
      RowBox[{"nfn", "[", 
       RowBox[{
        RowBox[{"val1", " ", "val2"}], ",", "digs"}], "]"}], "<>", 
      "\[IndentingNewLine]", "\"\<, \>\"", "<>", "sym1", "<>", "\"\</\>\"", "<>",
       "sym2", "<>", "\"\<=\>\"", "<>", 
      RowBox[{"nfn", "[", 
       RowBox[{
        RowBox[{"N", "[", 
         RowBox[{"val1", " ", "/", "val2"}], "]"}], ",", "digs"}], 
       "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7975083826129246`*^9, 3.7975084953007746`*^9}, {
  3.7975087241241817`*^9, 3.797508727342239*^9}, {3.797521747461176*^9, 
  3.797521750148373*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"reportSums", "[", 
    RowBox[{"sym_", ",", "val1_", ",", "val2_", ",", "digs_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sym1", ",", "sym2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sym1", "=", 
       RowBox[{"\"\<\[Sum]\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"sym", ",", "1"}], "]"}], ",", "StandardForm"}], "]"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"sym2", "=", 
       RowBox[{"\"\<\[Sum]\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"sym", ",", "2"}], "]"}], ",", "StandardForm"}], "]"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"\"\<\\n\>\"", "<>", "sym1", "<>", "\"\<=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{"val1", ",", "digs"}], "]"}], "<>", "\"\<, \>\"", "<>", 
       "sym2", "<>", "\"\<=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{"val2", ",", "digs"}], "]"}], "<>", "\[IndentingNewLine]", 
       "\"\<, \>\"", "<>", "sym1", "<>", "\"\<+\>\"", "<>", "sym2", "<>", 
       "\"\<=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{
         RowBox[{"val1", "+", "val2"}], ",", "digs"}], "]"}], "<>", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "\"\<, |\>\"", "<>", "sym1", "<>", "\"\<-\>\"", "<>", "sym2", "<>", 
         "\"\<|=\>\"", "<>", 
         RowBox[{"nfn", "[", 
          RowBox[{
           RowBox[{"val1", "-", "val2"}], ",", "digs"}], "]"}], "<>"}], 
        "*)"}], "\[IndentingNewLine]", "\"\<\\n\>\"", "<>", "sym1", "<>", 
       "sym2", "<>", "\"\<=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{
         RowBox[{"val1", "  ", "val2"}], ",", "digs"}], "]"}], "<>", 
       "\[IndentingNewLine]", "\"\<, \>\"", "<>", "sym1", "<>", "\"\</\>\"", "<>",
        "sym2", "<>", "\"\<=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{"val1", "/", "val2"}], "]"}], ",", "digs"}], "]"}]}]}]}], 
    RowBox[{"(*", 
     RowBox[{
     "<>", "\[IndentingNewLine]", "\"\<, \>\"", "<>", "sym1", "<>", "sym2", 
      "<>", "\"\</(\>\"", "<>", "sym1", "<>", "\"\<+\>\"", "<>", "sym2", 
      "<>", "\"\<)=\>\"", "<>", 
      RowBox[{"nfn", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"val1", " ", "val2"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"val1", "+", "val2"}], ")"}]}], ",", "digs"}], "]"}]}], 
     "*)"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7975068830265303`*^9, 3.7975072632462482`*^9}, {
  3.7975101435546527`*^9, 3.797510145068551*^9}, {3.797521342378787*^9, 
  3.797521344047279*^9}, {3.797521743718675*^9, 3.797521745095132*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"reportAreas", "[", 
    RowBox[{"sym_", ",", "val1_", ",", "val2_", ",", "digs_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sym1", ",", "sym2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sym1", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"sym", ",", "1"}], "]"}], ",", "StandardForm"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"sym2", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"sym", ",", "2"}], "]"}], ",", "StandardForm"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"\"\<\\n\>\"", "<>", "sym1", "<>", "\"\<=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{"val1", ",", "digs"}], "]"}], "<>", "\"\<, \>\"", "<>", 
       "sym2", "<>", "\"\<=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{"val2", ",", "digs"}], "]"}], "<>", "\[IndentingNewLine]", 
       "\"\<, \>\"", "<>", "sym1", "<>", "\"\<.\>\"", "<>", "sym2", "<>", 
       "\"\<=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{
         RowBox[{"val1", " ", "val2"}], ",", "digs"}], "]"}], "<>", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "\"\<, |\>\"", "<>", "sym1", "<>", "\"\<-\>\"", "<>", "sym2", "<>", 
         "\"\<|=\>\"", "<>", 
         RowBox[{"nfn", "[", 
          RowBox[{
           RowBox[{"val1", "-", "val2"}], ",", "digs"}], "]"}], "<>"}], 
        "*)"}], "\[IndentingNewLine]", "\"\<, \>\"", "<>", "sym1", "<>", 
       "\"\</\>\"", "<>", "sym2", "<>", "\"\<=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{"val1", " ", "/", " ", "val2"}], "]"}], ",", "digs"}], 
        "]"}]}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7975216512452755`*^9, 3.797521662973084*^9}, {
  3.7975216998929167`*^9, 3.7975217412205815`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"reportAreaPair", "[", 
    RowBox[{"sym1_", ",", "sym2_", ",", "val1_", ",", "val2_", ",", "digs_"}],
     "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"\"\<\\n\>\"", "<>", "sym1", "<>", "\"\<=\>\"", "<>", 
    RowBox[{"nfn", "[", 
     RowBox[{"val1", ",", "digs"}], "]"}], "<>", "\"\<, \>\"", "<>", "sym2", 
    "<>", "\"\<=\>\"", "<>", 
    RowBox[{"nfn", "[", 
     RowBox[{"val2", ",", "digs"}], "]"}], "<>", "\[IndentingNewLine]", 
    "\"\<, \>\"", "<>", "sym1", "<>", "\"\<.\>\"", "<>", "sym2", "<>", 
    "\"\<=\>\"", "<>", 
    RowBox[{"nfn", "[", 
     RowBox[{
      RowBox[{"val1", " ", "val2"}], ",", "digs"}], "]"}], "<>", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "\"\<, |\>\"", "<>", "sym1", "<>", "\"\<-\>\"", "<>", "sym2", "<>", 
      "\"\<|=\>\"", "<>", 
      RowBox[{"nfn", "[", 
       RowBox[{
        RowBox[{"val1", "-", "val2"}], ",", "digs"}], "]"}], "<>"}], "*)"}], 
    "\[IndentingNewLine]", "\"\<, \>\"", "<>", "sym1", "<>", "\"\</\>\"", "<>",
     "sym2", "<>", "\"\<=\>\"", "<>", 
    RowBox[{"nfn", "[", 
     RowBox[{
      RowBox[{"N", "[", 
       RowBox[{"val1", "/", "val2"}], "]"}], ",", "digs"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.797522967261817*^9, 3.797522994877736*^9}, {
  3.7975235267194905`*^9, 3.7975235271104565`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"reportAreaTriple", "[", 
    RowBox[{
    "sym1_", ",", "sym2_", ",", "sym3_", ",", "val1_", ",", "val2_", ",", 
     "val3_", ",", "digs_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"\"\<\\n\>\"", "<>", "sym1", "<>", "\"\<=\>\"", "<>", 
    RowBox[{"nfn", "[", 
     RowBox[{"val1", " ", ",", "digs"}], "]"}], "<>", "\[IndentingNewLine]", 
    "\"\<, \>\"", "<>", "sym2", "<>", "\"\<=\>\"", "<>", 
    RowBox[{"nfn", "[", 
     RowBox[{"val2", ",", "digs"}], "]"}], "<>", "\[IndentingNewLine]", 
    "\"\<, \>\"", "<>", "sym3", "<>", "\"\<=\>\"", "<>", 
    RowBox[{"nfn", "[", 
     RowBox[{"val3", ",", "digs"}], "]"}], "<>", "\[IndentingNewLine]", 
    "\"\<\\n\>\"", "<>", "sym1", "<>", "\"\<.\>\"", "<>", "sym2", "<>", 
    "\"\<=\>\"", "<>", 
    RowBox[{"nfn", "[", 
     RowBox[{
      RowBox[{"val1", " ", "val2"}], ",", "digs"}], "]"}], "<>", 
    "\[IndentingNewLine]", "\"\<, \>\"", "<>", "sym1", "<>", "\"\<.\>\"", "<>",
     "sym3", "<>", "\"\<=\>\"", "<>", 
    RowBox[{"nfn", "[", 
     RowBox[{
      RowBox[{"val1", " ", "val3"}], ",", "digs"}], "]"}], "<>", 
    "\[IndentingNewLine]", "\"\<, \>\"", "<>", "sym2", "<>", "\"\<.\>\"", "<>",
     "sym3", "<>", "\"\<=\>\"", "<>", 
    RowBox[{"nfn", "[", 
     RowBox[{
      RowBox[{"val2", " ", "val3"}], ",", "digs"}], "]"}], "<>", 
    "\[IndentingNewLine]", "\"\<\\n\>\"", "<>", "sym1", "<>", "\"\</\>\"", "<>",
     "sym2", "<>", "\"\<=\>\"", "<>", 
    RowBox[{"nfn", "[", 
     RowBox[{
      RowBox[{"N", "[", 
       RowBox[{"val1", "/", "val2"}], "]"}], ",", "digs"}], "]"}], "<>", 
    "\[IndentingNewLine]", "\"\<, \>\"", "<>", "sym1", "<>", "\"\</\>\"", "<>",
     "sym3", "<>", "\"\<=\>\"", "<>", 
    RowBox[{"nfn", "[", 
     RowBox[{
      RowBox[{"N", "[", 
       RowBox[{"val1", "/", "val3"}], "]"}], ",", "digs"}], "]"}], "<>", 
    "\[IndentingNewLine]", "\"\<, \>\"", "<>", "sym2", "<>", "\"\</\>\"", "<>",
     "sym3", "<>", "\"\<=\>\"", "<>", 
    RowBox[{"nfn", "[", 
     RowBox[{
      RowBox[{"N", "[", 
       RowBox[{"val2", "/", "val3"}], "]"}], ",", "digs"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.797523278478077*^9, 3.79752353128194*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"reportThreeVals", "[", 
    RowBox[{
    "sym1_", ",", "sym2_", ",", "sym3_", ",", "val1_", ",", "val2_", ",", 
     "val3_", ",", "digs_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"\"\<\\n\>\"", "<>", "sym1", "<>", "\"\<=\>\"", "<>", 
    RowBox[{"nfn", "[", 
     RowBox[{"val1", ",", "digs"}], "]"}], "<>", "\[IndentingNewLine]", 
    "\"\<, \>\"", "<>", "sym2", "<>", "\"\<=\>\"", "<>", 
    RowBox[{"nfn", "[", 
     RowBox[{"val2", ",", "digs"}], "]"}], "<>", "\[IndentingNewLine]", 
    "\"\<, \>\"", "<>", "sym3", "<>", "\"\<=\>\"", "<>", 
    RowBox[{"nfn", "[", 
     RowBox[{"val3", ",", "digs"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.797523954259094*^9, 3.7975240179844265`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "reportThs"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"reportThs", "[", 
    RowBox[{"ang_", ",", "cs_", ",", "digsShort_", ",", "digs_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "ss", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ss", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{"#", "^", "2"}]}], "]"}], "&"}], "/@", "cs"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<\\nc\>\"", "<>", "ang", "<>", "\"\<=(\>\"", "<>", 
       RowBox[{"StringJoinCommas", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"nfn", "[", 
           RowBox[{"#", ",", "digsShort"}], "]"}], "&"}], "/@", "cs"}], "]"}],
        "<>", "\"\<)\>\"", "<>", "\[IndentingNewLine]", "\"\<\\n\[Sum]c\>\"", 
       "<>", "ang", "<>", "\"\<=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{
         RowBox[{"Total", "@", "cs"}], ",", "digs"}], "]"}], "<>", 
       "\[IndentingNewLine]", "\"\<, \[Product]c\>\"", "<>", "ang", "<>", 
       "\"\<=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{
         RowBox[{"Apply", "[", 
          RowBox[{"Times", ",", "cs"}], "]"}], ",", "digs"}], "]"}], "<>", 
       "\[IndentingNewLine]", "\"\<, \[Sum]s\>\"", "<>", "ang", "<>", 
       "\"\<=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{
         RowBox[{"Total", "@", "ss"}], ",", "digs"}], "]"}], "<>", 
       "\[IndentingNewLine]", "\"\<, \[Product]s\>\"", "<>", "ang", "<>", 
       "\"\<=\>\"", "<>", 
       RowBox[{"nfn", "[", 
        RowBox[{
         RowBox[{"Apply", "[", 
          RowBox[{"Times", ",", "ss"}], "]"}], ",", "digs"}], "]"}]}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.797525848116807*^9, 3.7975259680279026`*^9}, {
  3.797526109298843*^9, 3.797526115980261*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reportThreeVals", "[", 
  RowBox[{
  "\"\<A\>\"", ",", "\"\<A'\>\"", ",", "\"\<A\\\"\>\"", ",", "10.", ",", 
   "20.", ",", "30.", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.7975072644300385`*^9, 3.79750729452979*^9}, {
  3.7975230009326153`*^9, 3.797523009813252*^9}, {3.7975234617252474`*^9, 
  3.7975234927407165`*^9}, {3.797524022757361*^9, 3.7975240257448487`*^9}}],

Cell[BoxData["\<\"\\nA=10.000, A'=20.000, A\\\"=30.000\"\>"], "Output",
 CellChangeTimes->{{3.797507277239499*^9, 3.797507295056096*^9}, 
   3.7975230107914963`*^9, {3.7975234880109887`*^9, 3.7975234932114587`*^9}, 
   3.7975235329769163`*^9, 3.7975240260792294`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"reportThreeCentroids", "[", 
    RowBox[{
    "sym_", ",", "vtx_", ",", "per_", ",", "are_", ",", "fl_", ",", "digs_"}],
     "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c0", ",", "c1", ",", "c2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"c0", ",", "c1", ",", "c2"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"sym", ",", "#"}], "]"}], ",", "StandardForm"}], "]"}], 
         "&"}], "/@", 
        RowBox[{"Range", "[", "3", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\"\<\\n\>\"", "<>", "c0", "<>", "\"\<=\>\"", "<>", 
       RowBox[{"pairStr", "[", 
        RowBox[{
         RowBox[{"vtx", "/", "fl"}], ",", "digs"}], "]"}], "<>", 
       "\[IndentingNewLine]", "\"\<, \>\"", "<>", "c1", "<>", "\"\<=\>\"", "<>", 
       RowBox[{"pairStr", "[", 
        RowBox[{
         RowBox[{"per", "/", "fl"}], ",", "digs"}], "]"}], "<>", 
       "\[IndentingNewLine]", "\"\<, \>\"", "<>", "c2", "<>", "\"\<=\>\"", "<>", 
       RowBox[{"pairStr", "[", 
        RowBox[{
         RowBox[{"are", "/", "fl"}], ",", "digs"}], "]"}]}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.797526785938892*^9, 3.797526947985569*^9}, {
  3.797526978091836*^9, 3.79752697857277*^9}, {3.797527624875106*^9, 
  3.797527624941021*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reportThreeCentroids", "[", 
  RowBox[{"\"\<\!\(\*SuperscriptBox[\(c\), \(*\)]\)\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", ".5", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7975269490368423`*^9, 3.7975269704339275`*^9}}],

Cell[BoxData["\<\"\\n\\!\\(\\\"\\\\!\\\\(\\\\*SuperscriptBox[\\\\(c\\\\), \
\\\\(*\\\\)]\\\\)\\\"\\_1\\)=(0.00,0.00), \
\\!\\(\\\"\\\\!\\\\(\\\\*SuperscriptBox[\\\\(c\\\\), \
\\\\(*\\\\)]\\\\)\\\"\\_2\\)=(2.00,0.00), \
\\!\\(\\\"\\\\!\\\\(\\\\*SuperscriptBox[\\\\(c\\\\), \
\\\\(*\\\\)]\\\\)\\\"\\_3\\)=(2.00,2.00)\"\>"], "Output",
 CellChangeTimes->{{3.797526970705907*^9, 3.7975269818054605`*^9}, 
   3.797527626457659*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "drawPolyCausticInner"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "drawPolyCausticInner"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"drOrbit", "\[Rule]", "True"}], ",", 
     RowBox[{"drCaustic", "\[Rule]", "True"}], ",", 
     RowBox[{"drOuter", "\[Rule]", "True"}], ",", 
     RowBox[{"drInner", "\[Rule]", "False"}], ",", 
     RowBox[{"drFoci", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
     RowBox[{"drPs", "\[Rule]", "False"}], ",", 
     RowBox[{"drThs", "\[Rule]", "False"}], ",", 
     RowBox[{"drPhis", "\[Rule]", "False"}], ",", 
     RowBox[{"drPsis", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
     RowBox[{"drExcircles", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
     RowBox[{"drFocusPedalPolys", "\[Rule]", "False"}], ",", 
     RowBox[{"drFocusPedals", "\[Rule]", "False"}], ",", 
     RowBox[{"drFocusExcPedals", "\[Rule]", "False"}], ",", 
     RowBox[{"drFocusInnerPedals", "\[Rule]", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"drFocusAntipedalPolys", "\[Rule]", "False"}], ",", 
     RowBox[{"drFocusAntipedals", "\[Rule]", "False"}], ",", 
     RowBox[{"drFocusExcAntipedals", "\[Rule]", "False"}], ",", 
     RowBox[{"drFocusInnerAntipedals", "\[Rule]", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"mid", ",", " ", "ctr"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"drMidPedals", "\[Rule]", "False"}], ",", 
     RowBox[{"drMidExcPedals", "\[Rule]", "False"}], ",", 
     RowBox[{"drMidInnerPedals", "\[Rule]", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"foci", " ", "pedals"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"drPedalPolys", "\[Rule]", "False"}], ",", 
     RowBox[{"drAntipedalPolys", "\[Rule]", "False"}], ",", 
     RowBox[{"drAntipedalQLines", "\[Rule]", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"drMidAntipedals", "\[Rule]", "False"}], ",", 
     RowBox[{"drMidExcAntipedals", "\[Rule]", "False"}], ",", 
     RowBox[{"drMidInnerAntipedals", "\[Rule]", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"foci", " ", "areas"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"drMidPedalRatios", "\[Rule]", "False"}], ",", 
     RowBox[{"drMidAntipedalRatios", "\[Rule]", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "centroids", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"drCentroids", "\[Rule]", "False"}], ",", 
     RowBox[{"drPerCentroids", "\[Rule]", "False"}], ",", 
     RowBox[{"drAreaCentroids", "\[Rule]", "False"}], ",", 
     RowBox[{"drBasicCentroids", "\[Rule]", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "labels", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"drPlAreas", "\[Rule]", "False"}], ",", 
     RowBox[{"drPlShort", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
     RowBox[{"drMongeCircle", "\[Rule]", "False"}], ",", 
     RowBox[{"drFocusPedalCircle", "\[Rule]", "False"}], ",", 
     RowBox[{"drFocusExcPedalCircle", "\[Rule]", "False"}], ",", 
     RowBox[{"drFocusInnerPedalCircle", "\[Rule]", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"drConwayCircle", "\[Rule]", "False"}], ",", 
     RowBox[{"drStachelLsRs", "\[Rule]", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"midParamX", "\[Rule]", ".5"}], ",", 
     RowBox[{"midParamY", "\[Rule]", "0"}], ",", 
     RowBox[{"lgt", "\[Rule]", ".1"}], ",", 
     RowBox[{"fontSize", "\[Rule]", "16"}], ",", 
     RowBox[{"digs", "\[Rule]", "4"}], ",", 
     RowBox[{"digsC0", "\[Rule]", "3"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawPolyCausticInner", "[", 
    RowBox[{"a_", ",", "n_", ",", "tDeg_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "poly", ",", "exc", ",", "polyInner", ",", "causticAB", ",", "ell", ",",
        "gr", ",", "ellCaustic", ",", "delta", ",", "excA", ",", "excB", ",", 
       "c2", ",", "cauA", ",", "cauB", ",", "fs1", ",", "fs2", ",", "mid", 
       ",", "\[IndentingNewLine]", "pedalsMid", ",", "pedalsMidSum", ",", 
       "pedalsMidSumSqr", ",", "pedalsMidProd", ",", "\[IndentingNewLine]", 
       "pedalsExcMid", ",", "pedalsExcMidSum", ",", "pedalsExcMidSumSqr", ",",
        "pedalsExcMidProd", ",", "\[IndentingNewLine]", "pedalsInnerMid", ",",
        "pedalsInnerMidSum", ",", "pedalsInnerMidSumSqr", ",", 
       "pedalsInnerMidProd", ",", "\[IndentingNewLine]", "pedals1", ",", 
       "pedals2", ",", "pedalSum1", ",", "pedalSum2", ",", "pedalSumSqr1", 
       ",", "pedalSumSqr2", ",", "pedalProd1", ",", "pedalProd2", ",", 
       "\[IndentingNewLine]", "pedalsExc1", ",", "pedalsExc2", ",", 
       "pedalExcSum1", ",", "pedalExcSum2", ",", "pedalExcSumSqr1", ",", 
       "pedalExcSumSqr2", ",", "pedalExcProd1", ",", "pedalExcProd2", ",", 
       "\[IndentingNewLine]", "pedalsInner1", ",", "pedalsInner2", ",", 
       "pedalInnerSum1", ",", "pedalInnerSum2", ",", "pedalInnerSumSqr1", ",",
        "pedalInnerSumSqr2", ",", "pedalInnerProd1", ",", "pedalInnerProd2", 
       ",", "\[IndentingNewLine]", "lsrs", 
       RowBox[{"(*", " ", "stachel", " ", "*)"}], ",", "\[IndentingNewLine]", 
       "pl", ",", "plArea", ",", "plOrbit", ",", "plExc", ",", "plThs", ",", 
       "plPhis", ",", "plPsis", ",", "\[IndentingNewLine]", "plCentroid", ",",
        "\[IndentingNewLine]", "plMid", ",", "plExcMid", ",", "plInnerMid", 
       ",", "\[IndentingNewLine]", "plInner", ",", "plMidArea", ",", 
       "plMidExcArea", ",", "plMidInnerArea", ",", "plStachelLsRs", ",", 
       "\[IndentingNewLine]", "pedalsMidA", ",", "pedalsExcMidA", ",", 
       "polyA", ",", "polyExcA", ",", "polyInnerA", ",", "pedalsInnerMidA", 
       ",", "\[IndentingNewLine]", "pedals1A", ",", "pedals2A", ",", 
       "pedalsExc1A", ",", "pedalsExc2A", ",", "pedalsInner1A", ",", 
       "pedalsInner2A", ",", "\[IndentingNewLine]", "midCentroid", ",", 
       "excMidCentroid", ",", "\[IndentingNewLine]", "innerMidCentroid", ",", 
       "midPerCentroid", ",", "excMidPerCentroid", ",", "innerMidPerCentroid",
        ",", "\[IndentingNewLine]", "midAreaCentroid", ",", 
       "excMidAreaCentroid", ",", "innerMidAreaCentroid", ",", 
       "\[IndentingNewLine]", "orbitCentroid", ",", "orbitPerCentroid", ",", 
       "orbitAreaCentroid", ",", "\[IndentingNewLine]", "excCentroid", ",", 
       "excPerCentroid", ",", "excAreaCentroid", ",", "\[IndentingNewLine]", 
       "innerCentroid", ",", "innerPerCentroid", ",", "innerAreaCentroid", 
       ",", "\[IndentingNewLine]", "antipedalsMid", ",", "antipedalsExcMid", 
       ",", "antipedalsInnerMid", ",", "\[IndentingNewLine]", 
       "antipedalsMidA", ",", "antipedalsExcMidA", ",", "antipedalsInnerMidA",
        ",", "\[IndentingNewLine]", "antipedalCentroid", ",", 
       "antipedalExcCentroid", ",", "antipedalInnerCentroid", ",", 
       "\[IndentingNewLine]", "antipedalPerCentroid", ",", 
       "antipedalExcPerCentroid", ",", "antipedalInnerPerCentroid", ",", 
       "\[IndentingNewLine]", "antipedalAreaCentroid", ",", 
       "antipedalExcAreaCentroid", ",", "antipedalInnerAreaCentroid", ",", 
       "\[IndentingNewLine]", "antipedalsMidSum", ",", " ", 
       "antipedalsMidSumSqr", ",", " ", "antipedalsMidProd", ",", 
       "\[IndentingNewLine]", "antipedalsExcSum", ",", " ", 
       "antipedalsExcSumSqr", ",", " ", "antipedalsExcProd", ",", 
       "\[IndentingNewLine]", "antipedalsInnerSum", ",", " ", 
       "antipedalsInnerSumSqr", ",", " ", "antipedalsInnerProd", ",", 
       "\[IndentingNewLine]", "conwaySpokes", ",", "\[IndentingNewLine]", 
       "antipedals1", ",", "antipedalsExc1", ",", "antipedalsInner1", ",", 
       "\[IndentingNewLine]", "antipedals2", ",", "antipedalsExc2", ",", 
       "antipedalsInner2", ",", "\[IndentingNewLine]", "antipedalSum1", ",", 
       "antipedalSumSqr1", ",", "antipedalProd1", ",", "\[IndentingNewLine]", 
       "antipedalSum2", ",", "antipedalSumSqr2", ",", "antipedalProd2", ",", 
       "\[IndentingNewLine]", "antipedalExcSum1", ",", "antipedalExcSumSqr1", 
       ",", "antipedalExcProd1", ",", "\[IndentingNewLine]", 
       "antipedalExcSum2", ",", "antipedalExcSumSqr2", ",", 
       "antipedalExcProd2", ",", "\[IndentingNewLine]", "antipedalInnerSum1", 
       ",", "antipedalInnerSumSqr1", ",", "antipedalInnerProd1", ",", 
       "\[IndentingNewLine]", "antipedalInnerSum2", ",", 
       "antipedalInnerSumSqr2", ",", "antipedalInnerProd2", ",", 
       "\[IndentingNewLine]", "antipedals1A", ",", "antipedalsExc1A", ",", 
       "antipedalsInner1A", ",", "\[IndentingNewLine]", "antipedals2A", ",", 
       "antipedalsExc2A", ",", "antipedalsInner2A", ",", 
       "\[IndentingNewLine]", "midOrbitSum", ",", "midOrbitSumSqr", ",", 
       "midOrbitProd", ",", "\[IndentingNewLine]", "midExcSum", ",", 
       "midExcSumSqr", ",", "midExcProd", ",", "\[IndentingNewLine]", 
       "midInnerSum", ",", "midInnerSumSqr", ",", "midInnerProd", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"fs", " ", "to", " ", "vertices"}], " ", "*)"}], 
       "\[IndentingNewLine]", "orbitSum1", ",", "orbitSumSqr1", ",", 
       "orbitProd1", ",", "excSum1", ",", "excSumSqr1", ",", "excProd1", ",", 
       "innerSum1", ",", "innerSumSqr1", ",", "innerProd1", ",", 
       "\[IndentingNewLine]", "orbitSum2", ",", "orbitSumSqr2", ",", 
       "orbitProd2", ",", "excSum2", ",", "excSumSqr2", ",", "excProd2", ",", 
       "innerSum2", ",", "innerSumSqr2", ",", "innerProd2"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"poly", ",", "polyInner", ",", "causticAB"}], "}"}], "=", 
       RowBox[{"getPolyCausticInner", "[", 
        RowBox[{"a", ",", "n", ",", "tDeg"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lsrs", "=", 
       RowBox[{"stachelLsRs", "[", 
        RowBox[{"poly", ",", "polyInner"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"this", " ", "is", " ", "causing", " ", "bad", " ", "solve"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"exc", "=", 
       RowBox[{"getExcentralPolygon", "[", 
        RowBox[{"a", ",", "poly"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"delta", "=", 
       RowBox[{
        RowBox[{"a", "^", "4"}], "-", 
        RowBox[{"a", "^", "2"}], " ", "+", "1"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"excA", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "delta"}], ")"}], "/", "a"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"excB", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", "^", "2"}], "+", "delta"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"c2", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", "^", "2"}], "-", "1"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cauA", "=", 
       RowBox[{"a", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"delta", "-", "1"}], ")"}], "/", "c2"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cauB", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", "^", "2"}], "-", "delta"}], ")"}], "/", "c2"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fs1", ",", "fs2"}], "}"}], "=", 
       RowBox[{"getFoci", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pedals1", ",", "pedals2"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"getPedals", "[", 
          RowBox[{"#", ",", "poly"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"fs1", ",", "fs2"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pedalsExc1", ",", "pedalsExc2"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"getPedals", "[", 
          RowBox[{"#", ",", "exc"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"fs1", ",", "fs2"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pedalsInner1", ",", "pedalsInner2"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"getPedals", "[", 
          RowBox[{"#", ",", "polyInner"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"fs1", ",", "fs2"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"antipedals1", ",", "antipedals2"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"polyAntipedal", "[", 
          RowBox[{"#", ",", "poly"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"fs1", ",", "fs2"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"antipedalsExc1", ",", "antipedalsExc2"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"polyAntipedal", "[", 
          RowBox[{"#", ",", "exc"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"fs1", ",", "fs2"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"antipedalsInner1", ",", "antipedalsInner2"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"polyAntipedal", "[", 
          RowBox[{"#", ",", "polyInner"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"fs1", ",", "fs2"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"mid", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"fs2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", 
          RowBox[{"OptionValue", "@", "midParamX"}]}], ",", 
         RowBox[{"OptionValue", "@", "midParamY"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"basic", " ", "to", " ", "vertices"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"midOrbitSum", ",", "midOrbitSumSqr", ",", "midOrbitProd"}], 
        "}"}], "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"mid", ",", "poly"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"midExcSum", ",", "midExcSumSqr", ",", "midExcProd"}], "}"}], 
       "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"mid", ",", "exc"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"midInnerSum", ",", "midInnerSumSqr", ",", "midInnerProd"}], 
        "}"}], "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"mid", ",", "polyInner"}], "]"}]}], ";", " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"fs1", " ", "to", " ", "vertices"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"orbitSum1", ",", "orbitSumSqr1", ",", "orbitProd1"}], "}"}], 
       "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"fs1", ",", "poly"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"excSum1", ",", "excSumSqr1", ",", "excProd1"}], "}"}], "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"fs1", ",", "exc"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"innerSum1", ",", "innerSumSqr1", ",", "innerProd1"}], "}"}], 
       "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"fs1", ",", "polyInner"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"fs2", " ", "to", " ", "vertices"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"orbitSum2", ",", "orbitSumSqr2", ",", "orbitProd2"}], "}"}], 
       "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"fs2", ",", "poly"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"excSum2", ",", "excSumSqr2", ",", "excProd2"}], "}"}], "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"fs2", ",", "exc"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"innerSum2", ",", "innerSumSqr2", ",", "innerProd2"}], "}"}], 
       "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"fs2", ",", "polyInner"}], "]"}]}], ";", " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pedalsMid", ",", "pedalsExcMid", ",", "pedalsInnerMid"}], 
        "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"getPedals", "[", 
          RowBox[{"mid", ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"poly", ",", "exc", ",", "polyInner"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "pedalsMidSum", ",", "pedalsMidSumSqr", ",", "pedalsMidProd"}], "}"}],
        "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"mid", ",", "pedalsMid"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "pedalsExcMidSum", ",", "pedalsExcMidSumSqr", ",", 
         "pedalsExcMidProd"}], "}"}], "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"mid", ",", "pedalsExcMid"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "pedalsInnerMidSum", ",", "pedalsInnerMidSumSqr", ",", 
         "pedalsInnerMidProd"}], "}"}], "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"mid", ",", "pedalsInnerMid"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "antipedalsMid", ",", "antipedalsExcMid", ",", "antipedalsInnerMid"}],
         "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"polyAntipedal", "[", 
          RowBox[{"mid", ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"poly", ",", "exc", ",", "polyInner"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "antipedalsMidSum", ",", "antipedalsMidSumSqr", ",", 
         "antipedalsMidProd"}], "}"}], "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"mid", ",", "antipedalsMid"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "antipedalsExcSum", ",", "antipedalsExcSumSqr", ",", 
         "antipedalsExcProd"}], "}"}], "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"mid", ",", "antipedalsExcMid"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "antipedalsInnerSum", ",", "antipedalsInnerSumSqr", ",", 
         "antipedalsInnerProd"}], "}"}], "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"mid", ",", "antipedalsInnerMid"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pedalSum1", ",", "pedalSumSqr1", ",", "pedalProd1"}], "}"}], 
       "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"fs1", ",", "pedals1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pedalSum2", ",", "pedalSumSqr2", ",", "pedalProd2"}], "}"}], 
       "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"fs2", ",", "pedals2"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "pedalExcSum1", ",", "pedalExcSumSqr1", ",", "pedalExcProd1"}], "}"}],
        "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"fs1", ",", "pedalsExc1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "pedalExcSum2", ",", "pedalExcSumSqr2", ",", "pedalExcProd2"}], "}"}],
        "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"fs2", ",", "pedalsExc2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "pedalInnerSum1", ",", "pedalInnerSumSqr1", ",", "pedalInnerProd1"}], 
        "}"}], "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"fs1", ",", "pedalsInner1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "pedalInnerSum2", ",", "pedalInnerSumSqr2", ",", "pedalInnerProd2"}], 
        "}"}], "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"fs2", ",", "pedalsInner2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "antipedalSum1", ",", "antipedalSumSqr1", ",", "antipedalProd1"}], 
        "}"}], "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"fs1", ",", "antipedals1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "antipedalSum2", ",", "antipedalSumSqr2", ",", "antipedalProd2"}], 
        "}"}], "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"fs2", ",", "antipedals2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "antipedalExcSum1", ",", "antipedalExcSumSqr1", ",", 
         "antipedalExcProd1"}], "}"}], "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"fs1", ",", "antipedalsExc1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "antipedalExcSum2", ",", "antipedalExcSumSqr2", ",", 
         "antipedalExcProd2"}], "}"}], "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"fs2", ",", "antipedalsExc2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "antipedalInnerSum1", ",", "antipedalInnerSumSqr1", ",", 
         "antipedalInnerProd1"}], "}"}], "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"fs1", ",", "antipedalsInner1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "antipedalInnerSum2", ",", "antipedalInnerSumSqr2", ",", 
         "antipedalInnerProd2"}], "}"}], "=", 
       RowBox[{"getMidDists", "[", 
        RowBox[{"fs2", ",", "antipedalsInner2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "areas", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"polyA", ",", "polyExcA", ",", "polyInnerA"}], "}"}], "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"signedArea", "/@", 
         RowBox[{"{", 
          RowBox[{"poly", ",", "exc", ",", "polyInner"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pedalsMidA", ",", "pedalsExcMidA", ",", "pedalsInnerMidA"}], 
        "}"}], "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"signedArea", "/@", 
         RowBox[{"{", 
          RowBox[{"pedalsMid", ",", "pedalsExcMid", ",", "pedalsInnerMid"}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "antipedalsMidA", ",", "antipedalsExcMidA", ",", 
         "antipedalsInnerMidA"}], "}"}], "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"signedArea", "/@", 
         RowBox[{"{", 
          RowBox[{
          "antipedalsMid", ",", "antipedalsExcMid", ",", 
           "antipedalsInnerMid"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pedals1A", ",", "pedalsExc1A", ",", "pedalsInner1A"}], "}"}],
        "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"signedArea", "/@", 
         RowBox[{"{", 
          RowBox[{"pedals1", ",", "pedalsExc1", ",", "pedalsInner1"}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pedals2A", ",", "pedalsExc2A", ",", "pedalsInner2A"}], "}"}],
        "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"signedArea", "/@", 
         RowBox[{"{", 
          RowBox[{"pedals2", ",", "pedalsExc2", ",", "pedalsInner2"}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "antipedals1A", ",", "antipedalsExc1A", ",", "antipedalsInner1A"}], 
        "}"}], "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"signedArea", "/@", 
         RowBox[{"{", 
          RowBox[{
          "antipedals1", ",", "antipedalsExc1", ",", "antipedalsInner1"}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "antipedals2A", ",", "antipedalsExc2A", ",", "antipedalsInner2A"}], 
        "}"}], "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"signedArea", "/@", 
         RowBox[{"{", 
          RowBox[{
          "antipedals2", ",", "antipedalsExc2", ",", "antipedalsInner2"}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"tri", " ", "centroids"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "orbitCentroid", ",", "orbitPerCentroid", ",", "orbitAreaCentroid"}], 
        "}"}], "=", 
       RowBox[{"getThreeCentroids", "@", "poly"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "excCentroid", ",", "excPerCentroid", ",", "excAreaCentroid"}], "}"}],
        "=", 
       RowBox[{"getThreeCentroids", "@", "exc"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "innerCentroid", ",", "innerPerCentroid", ",", "innerAreaCentroid"}], 
        "}"}], "=", 
       RowBox[{"getThreeCentroids", "@", "polyInner"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"mid", " ", "centroids"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "midCentroid", ",", "midPerCentroid", ",", "midAreaCentroid"}], "}"}],
        "=", 
       RowBox[{"getThreeCentroids", "@", "pedalsMid"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "excMidCentroid", ",", "excMidPerCentroid", ",", 
         "excMidAreaCentroid"}], "}"}], "=", 
       RowBox[{"getThreeCentroids", "@", "pedalsExcMid"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "innerMidCentroid", ",", "innerMidPerCentroid", ",", 
         "innerMidAreaCentroid"}], "}"}], "=", 
       RowBox[{"getThreeCentroids", "@", "pedalsInnerMid"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"polyAreaCentroidLow", "[", 
         RowBox[{"pedalsInnerMid", ",", "pedalsInnerMidA"}], "]"}], ";"}], 
       "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "antipedals", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "antipedalCentroid", ",", "antipedalPerCentroid", ",", 
         "antipedalAreaCentroid"}], "}"}], "=", 
       RowBox[{"getThreeCentroids", "@", "antipedalsMid"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "antipedalExcCentroid", ",", "antipedalExcPerCentroid", ",", 
         "antipedalExcAreaCentroid"}], "}"}], "=", 
       RowBox[{"getThreeCentroids", "@", "antipedalsExcMid"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "antipedalInnerCentroid", ",", "antipedalInnerPerCentroid", ",", 
         "antipedalInnerAreaCentroid"}], "}"}], "=", 
       RowBox[{"getThreeCentroids", "@", "antipedalsInnerMid"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"conwaySpokes", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OddQ", "[", "n", "]"}], ",", 
         RowBox[{"getConwaySpokes", "@", "poly"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"ell", "=", 
       RowBox[{"plotEllAxes", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ellCaustic", "=", 
       RowBox[{"plotEllb", "[", 
        RowBox[{
         RowBox[{"Sequence", "@@", "causticAB"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Brown"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FaceForm", "@", "None"}], ",", 
          RowBox[{"PointSize", "@", "Large"}], ",", "Thick", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", "misc", " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drFoci"}], ",", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"#1", ",", 
                   RowBox[{"{", 
                    RowBox[{"Black", ",", "20"}], "}"}]}], "]"}], ",", "#2", 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "]"}], "&"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(f\), \(1\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(f\), \(2\)]\)\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"fs1", ",", "fs2"}], "}"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMongeCircle"}], ",", 
            RowBox[{"{", 
             RowBox[{"Red", ",", 
              RowBox[{"Circle", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"a", "^", "2"}], "+", "1"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drFocusPedalCircle"}], ",", 
            RowBox[{"{", 
             RowBox[{"Dashed", ",", "Blue", ",", 
              RowBox[{"Circle", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"causticAB", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drFocusExcPedalCircle"}], ",", 
            RowBox[{"{", 
             RowBox[{"Dashed", ",", 
              RowBox[{"Darker", "@", "Green"}], ",", 
              RowBox[{"Circle", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "a"}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drFocusInnerPedalCircle"}], ",", 
            RowBox[{"{", 
             RowBox[{"Dashed", ",", 
              RowBox[{"Darker", "@", "Red"}], ",", 
              RowBox[{"Circle", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"magn", "[", 
                 RowBox[{"pedalsInnerMid", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"OptionValue", "@", "drConwayCircle"}], "&&", 
             RowBox[{"OddQ", "[", "n", "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "Dashed", ",", 
              RowBox[{"Line", "/@", 
               RowBox[{"conwaySpokes", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"Line", "/@", 
               RowBox[{"conwaySpokes", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"Point", "[", 
               RowBox[{"Second", "/@", 
                RowBox[{"conwaySpokes", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"Point", "[", 
               RowBox[{"Second", "/@", 
                RowBox[{"conwaySpokes", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drExcircles"}], ",", 
            RowBox[{"{", 
             RowBox[{"Dashed", ",", 
              RowBox[{"Darker", "@", "Green"}], ",", 
              RowBox[{"MapThread", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Circle", "[", 
                  RowBox[{"#1", ",", 
                   RowBox[{"magn", "[", 
                    RowBox[{"#1", "-", "#2"}], "]"}]}], "]"}], "&"}], ",", 
                RowBox[{"{", 
                 RowBox[{"exc", ",", "polyInner"}], "}"}]}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "3", " ", "basic", " ", "polygons", " ", "and", " ", "their", " ", 
            "centroids"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drOrbit"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "@", 
               RowBox[{"{", 
                RowBox[{"Blue", ",", "Thick"}], "}"}]}], ",", 
              RowBox[{"Polygon", "@", "poly"}], ",", "Blue", ",", 
              RowBox[{"Point", "@", "poly"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drBasicCentroids"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "@", "orbitCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(b\), \(0\)]\)\>\"", ",", "20"}],
                     "]"}], ",", "orbitCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Point", "@", "orbitPerCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(b\), \(1\)]\)\>\"", ",", "20"}],
                     "]"}], ",", "orbitPerCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Point", "@", "orbitAreaCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(b\), \(2\)]\)\>\"", ",", "20"}],
                     "]"}], ",", "orbitAreaCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"Point", "@", "fs1"}], ",", 
            RowBox[{"Point", "@", "fs2"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drOuter"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Darker", "@", "Green"}], ",", "Thick"}], "}"}]}], 
              ",", 
              RowBox[{"Polygon", "@", "exc"}], ",", 
              RowBox[{"Darker", "@", "Green"}], ",", 
              RowBox[{"Point", "@", "exc"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drBasicCentroids"}], ",", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Point", "@", "excCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(b\), \(0\)]\)'\>\"", ",", 
                    "20"}], "]"}], ",", "excCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Point", "@", "excPerCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(b\), \(1\)]\)'\>\"", ",", 
                    "20"}], "]"}], ",", "excPerCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Point", "@", "excAreaCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(b\), \(2\)]\)'\>\"", ",", 
                    "20"}], "]"}], ",", "excAreaCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drInner"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Darker", "@", "Red"}], ",", "Thick"}], "}"}]}], ",", 
              RowBox[{"Polygon", "@", "polyInner"}], ",", 
              RowBox[{"Darker", "@", "Red"}], ",", 
              RowBox[{"Point", "@", "polyInner"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drBasicCentroids"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "@", "innerCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(b\), \(0\)]\)\\\"\>\"", ",", 
                    "20"}], "]"}], ",", "innerCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Point", "@", "innerPerCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(b\), \(1\)]\)\\\"\>\"", ",", 
                    "20"}], "]"}], ",", "innerPerCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Point", "@", "innerAreaCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(b\), \(2\)]\)\\\"\>\"", ",", 
                    "20"}], "]"}], ",", "innerAreaCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"focus", " ", "pedals"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drFocusPedals"}], ",", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Red", ",", "Dashed", ",", 
                RowBox[{"Circle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", 
                  RowBox[{"causticAB", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", 
                RowBox[{"Point", "@", "pedals1"}], ",", 
                RowBox[{"Point", "@", "pedals2"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", "Blue", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Line", "@", 
                   RowBox[{"{", 
                    RowBox[{"fs1", ",", "#"}], "}"}]}], "&"}], "/@", 
                 "pedals1"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Line", "@", 
                   RowBox[{"{", 
                    RowBox[{"fs2", ",", "#"}], "}"}]}], "&"}], "/@", 
                 "pedals2"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drFocusExcPedals"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Red", ",", "Dashed", ",", 
                RowBox[{"Circle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "a"}], "]"}]}], "}"}],
               ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Darker", "@", "Green"}], ",", 
                RowBox[{"Point", "@", "pedalsExc1"}], ",", 
                RowBox[{"Point", "@", "pedalsExc2"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", 
                RowBox[{"Darker", "@", "Green"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Line", "@", 
                   RowBox[{"{", 
                    RowBox[{"fs1", ",", "#"}], "}"}]}], "&"}], "/@", 
                 "pedalsExc1"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Line", "@", 
                   RowBox[{"{", 
                    RowBox[{"fs2", ",", "#"}], "}"}]}], "&"}], "/@", 
                 "pedalsExc2"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drFocusInnerPedals"}], ",", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Darker", "@", "Red"}], ",", 
                RowBox[{"Point", "@", "pedalsInner1"}], ",", 
                RowBox[{"Point", "@", "pedalsInner2"}]}], 
               RowBox[{"(*", 
                RowBox[{",", 
                 RowBox[{"Circle", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                   RowBox[{"magn", "[", 
                    RowBox[{"pedalsInner1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], "*)"}], 
               "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", 
                RowBox[{"Darker", "@", "Red"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Line", "@", 
                   RowBox[{"{", 
                    RowBox[{"fs1", ",", "#"}], "}"}]}], "&"}], "/@", 
                 "pedalsInner1"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Line", "@", 
                   RowBox[{"{", 
                    RowBox[{"fs2", ",", "#"}], "}"}]}], "&"}], "/@", 
                 "pedalsInner2"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"focus", " ", "antipedals"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drFocusAntipedals"}], ",", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Red", ",", "Dashed", ",", 
                 RowBox[{"Circle", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                   RowBox[{"causticAB", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ","}], 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"OptionValue", "@", "drAntipedalQLines"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Dashed", ",", "Orange", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{"fs1", ",", "#"}], "}"}]}], "&"}], "/@", 
                  "antipedals1"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{"fs2", ",", "#"}], "}"}]}], "&"}], "/@", 
                  "antipedals2"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Dashed", ",", "Blue", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{"fs1", ",", "#"}], "}"}]}], "&"}], "/@", "poly"}],
                  ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{"fs2", ",", "#"}], "}"}]}], "&"}], "/@", 
                  "poly"}]}], "}"}]}], "]"}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drFocusExcAntipedals"}], ",", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"OptionValue", "@", "drAntipedalQLines"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Dashed", ",", "Orange", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{"fs1", ",", "#"}], "}"}]}], "&"}], "/@", 
                  "antipedalsExc1"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{"fs2", ",", "#"}], "}"}]}], "&"}], "/@", 
                  "antipedalsExc2"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Dashed", ",", 
                 RowBox[{"Darker", "@", "Green"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{"fs1", ",", "#"}], "}"}]}], "&"}], "/@", "exc"}], 
                 ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{"fs2", ",", "#"}], "}"}]}], "&"}], "/@", 
                  "exc"}]}], "}"}]}], "]"}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drFocusInnerAntipedals"}], ",", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"OptionValue", "@", "drAntipedalQLines"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Dashed", ",", "Orange", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{"fs1", ",", "#"}], "}"}]}], "&"}], "/@", 
                  "antipedalsInner1"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{"fs2", ",", "#"}], "}"}]}], "&"}], "/@", 
                  "antipedalsInner2"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Dashed", ",", 
                 RowBox[{"Darker", "@", "Red"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{"fs1", ",", "#"}], "}"}]}], "&"}], "/@", 
                  "polyInner"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{"fs2", ",", "#"}], "}"}]}], "&"}], "/@", 
                  "polyInner"}]}], "}"}]}], "]"}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"draw", " ", "\"\<M\>\""}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"OptionValue", "@", "drMidPedals"}], "||", 
             RowBox[{"OptionValue", "@", "drMidExcPedals"}], "||", 
             RowBox[{"OptionValue", "@", "drMidInnerPedals"}], "||", 
             RowBox[{"OptionValue", "@", "drMidAntipedals"}], "||", 
             RowBox[{"OptionValue", "@", "drMidExcAntipedals"}], "||", 
             RowBox[{"OptionValue", "@", "drMidInnerAntipedals"}], "||", 
             RowBox[{"OptionValue", "@", "drMidPedalRatios"}], "||", 
             RowBox[{"OptionValue", "@", "drMidAntipedalRatios"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Point", "@", "mid"}], ",", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<M\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{"Black", ",", "20"}], "}"}]}], "]"}], ",", "mid", 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "]"}]}], "}"}],
             ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"mid", " ", "pedals"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidPedals"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Blue", ",", 
              RowBox[{"Point", "@", "pedalsMid"}], ",", "Dashed", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Line", "@", 
                 RowBox[{"{", 
                  RowBox[{"mid", ",", "#"}], "}"}]}], "&"}], "/@", 
               "pedalsMid"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidExcPedals"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Darker", "@", "Green"}], ",", 
              RowBox[{"Point", "@", "pedalsExcMid"}], ",", "Dashed", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Line", "@", 
                 RowBox[{"{", 
                  RowBox[{"mid", ",", "#"}], "}"}]}], "&"}], "/@", 
               "pedalsExcMid"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidInnerPedals"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Darker", "@", "Red"}], ",", 
              RowBox[{"Point", "@", "pedalsInnerMid"}], ",", "Dashed", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Line", "@", 
                 RowBox[{"{", 
                  RowBox[{"mid", ",", "#"}], "}"}]}], "&"}], "/@", 
               "pedalsInnerMid"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"mid", " ", "areas", " ", "and", " ", "centroids"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"OptionValue", "@", "drMidPedals"}], "||", 
             RowBox[{"OptionValue", "@", "drMidPedalRatios"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"OptionValue", "@", "drPedalPolys"}], "||", 
                 RowBox[{"OptionValue", "@", "drMidPedalRatios"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"FaceForm", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "@", ".1"}], ",", "Blue"}], "}"}]}], 
                  ",", 
                  RowBox[{"EdgeForm", "@", "Blue"}], ",", 
                  RowBox[{"Polygon", "@", "pedalsMid"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              "Blue", ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drCentroids"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "@", "midCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<\!\(\*SubscriptBox[\(C\), \(0\)]\)\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    "midCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drPerCentroids"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "@", "midPerCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<\!\(\*SubscriptBox[\(C\), \(1\)]\)\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    "midPerCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drAreaCentroids"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "@", "midAreaCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<\!\(\*SubscriptBox[\(C\), \(2\)]\)\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    "midAreaCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"OptionValue", "@", "drMidExcPedals"}], "||", 
             RowBox[{"OptionValue", "@", "drMidPedalRatios"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"OptionValue", "@", "drPedalPolys"}], "||", 
                 RowBox[{"OptionValue", "@", "drMidPedalRatios"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"FaceForm", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "@", ".1"}], ",", "Green"}], "}"}]}], 
                  ",", 
                  RowBox[{"EdgeForm", "@", 
                   RowBox[{"Darker", "@", "Green"}]}], ",", 
                  RowBox[{"Polygon", "@", "pedalsExcMid"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Darker", "@", "Green"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drCentroids"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "@", "excMidCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(C\), \(0\)]\)'\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    "excMidCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1.5"}]}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drPerCentroids"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "@", "excMidPerCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(C\), \(1\)]\)'\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    "excMidPerCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drAreaCentroids"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "@", "excMidAreaCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(C\), \(2\)]\)'\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    "excMidAreaCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"OptionValue", "@", "drMidInnerPedals"}], "||", 
             RowBox[{"OptionValue", "@", "drMidPedalRatios"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"OptionValue", "@", "drPedalPolys"}], "||", 
                 RowBox[{"OptionValue", "@", "drMidPedalRatios"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"FaceForm", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "@", ".1"}], ",", "Red"}], "}"}]}], 
                  ",", 
                  RowBox[{"EdgeForm", "[", 
                   RowBox[{"Darker", "@", "Red"}], "]"}], ",", 
                  RowBox[{"Polygon", "@", "pedalsInnerMid"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Darker", "@", "Red"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drCentroids"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "@", "innerMidCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(C\), \(0\)]\)\\\"\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    "innerMidCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1.5"}]}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drPerCentroids"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "@", "innerMidPerCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(C\), \(1\)]\)\\\"\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    "innerMidPerCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drAreaCentroids"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "@", "innerMidAreaCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(C\), \(2\)]\)\\\"\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    "innerMidAreaCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidAntipedals"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"OptionValue", "@", "drAntipedalQLines"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Red", ",", "Dashed", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Line", "@", 
                   RowBox[{"{", 
                    RowBox[{"mid", ",", "#"}], "}"}]}], "&"}], "/@", 
                 "antipedalsMid"}]}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", "Dashed", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Line", "@", 
                   RowBox[{"{", 
                    RowBox[{"mid", ",", "#"}], "}"}]}], "&"}], "/@", 
                 "poly"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidExcAntipedals"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Darker", "@", "Green"}], ",", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Point", "@", "antipedalsExcMid"}], ","}], "*)"}], 
              "Dashed", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Line", "@", 
                 RowBox[{"{", 
                  RowBox[{"mid", ",", "#"}], "}"}]}], "&"}], "/@", "exc"}]}], 
             "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidInnerAntipedals"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Darker", "@", "Red"}], ",", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Point", "@", "antipedalsInnerMid"}], ","}], "*)"}], 
              "Dashed", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Line", "@", 
                 RowBox[{"{", 
                  RowBox[{"mid", ",", "#"}], "}"}]}], "&"}], "/@", 
               "polyInner"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"mid", " ", "antipedals"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"OptionValue", "@", "drMidAntipedals"}], "||", 
             RowBox[{"OptionValue", "@", "drMidAntipedalRatios"}]}], ",", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"OptionValue", "@", "drAntipedalPolys"}], "||", 
                 RowBox[{"OptionValue", "@", "drMidAntipedalRatios"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"FaceForm", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "@", ".1"}], ",", "Blue"}], "}"}]}], 
                  ",", 
                  RowBox[{"EdgeForm", "@", 
                   RowBox[{"{", 
                    RowBox[{"Dashed", ",", "Blue"}], "}"}]}], ",", 
                  RowBox[{"Polygon", "@", "antipedalsMid"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"Blue", ",", "Dashed", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Line", "@", 
                   RowBox[{"{", 
                    RowBox[{"mid", ",", "#"}], "}"}]}], "&"}], "/@", "poly"}],
                 ","}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drCentroids"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "@", "antipedalCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(C\), \(*\)], \(0\
\)]\)\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    "antipedalCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drPerCentroids"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "@", "antipedalPerCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(C\), \(*\)], \(1\
\)]\)\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    "antipedalPerCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drAreaCentroids"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "@", "antipedalAreaCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(C\), \(*\)], \(2\
\)]\)\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    "antipedalAreaCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"OptionValue", "@", "drMidExcAntipedals"}], "||", 
             RowBox[{"OptionValue", "@", "drMidAntipedalRatios"}]}], ",", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"OptionValue", "@", "drAntipedalPolys"}], "||", 
                 RowBox[{"OptionValue", "@", "drMidAntipedalRatios"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"FaceForm", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "@", ".1"}], ",", "Green"}], "}"}]}], 
                  ",", 
                  RowBox[{"EdgeForm", "@", 
                   RowBox[{"{", 
                    RowBox[{"Dashed", ",", 
                    RowBox[{"Darker", "@", "Green"}]}], "}"}]}], ",", 
                  RowBox[{"Polygon", "@", "antipedalsExcMid"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Darker", "@", "Green"}], ",", "Dashed", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Line", "@", 
                   RowBox[{"{", 
                    RowBox[{"mid", ",", "#"}], "}"}]}], "&"}], "/@", "exc"}], 
                ","}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drCentroids"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "@", "antipedalExcCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(C\), \(*\)], \(0\
\)]\)'\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    "antipedalExcCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drPerCentroids"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "@", "antipedalExcPerCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(C\), \(*\)], \(1\
\)]\)'\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    "antipedalExcPerCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drAreaCentroids"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "@", "antipedalExcAreaCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(C\), \(*\)], \(2\
\)]\)'\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    "antipedalExcAreaCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"OptionValue", "@", "drMidInnerAntipedals"}], "||", 
             RowBox[{"OptionValue", "@", "drMidAntipedalRatios"}]}], ",", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"OptionValue", "@", "drAntipedalPolys"}], "||", 
                 RowBox[{"OptionValue", "@", "drMidAntipedalRatios"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"FaceForm", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "@", ".1"}], ",", "Red"}], "}"}]}], 
                  ",", 
                  RowBox[{"EdgeForm", "@", 
                   RowBox[{"{", 
                    RowBox[{"Dashed", ",", 
                    RowBox[{"Darker", "@", "Red"}]}], "}"}]}], ",", 
                  RowBox[{"Polygon", "@", "antipedalsInnerMid"}]}], "}"}], 
                ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Darker", "@", "Red"}], ",", "Dashed", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Line", "@", 
                   RowBox[{"{", 
                    RowBox[{"mid", ",", "#"}], "}"}]}], "&"}], "/@", 
                 "polyInner"}], ","}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drCentroids"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "@", "antipedalInnerCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(C\), \(*\)], \(0\
\)]\)\\\"\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    "antipedalInnerCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drPerCentroids"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "@", "antipedalInnerPerCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(C\), \(*\)], \(1\
\)]\)\\\"\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    "antipedalInnerPerCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drAreaCentroids"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "@", "antipedalInnerAreaCentroid"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(C\), \(*\)], \(2\
\)]\)\\\"\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    "antipedalInnerAreaCentroid", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
            ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"foci", " ", "areas"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"OptionValue", "@", "drFocusPedalPolys"}], "&&", 
             RowBox[{"OptionValue", "@", "drFocusPedals"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"FaceForm", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Opacity", "@", ".1"}], ",", "Blue"}], "}"}], "]"}], 
              ",", 
              RowBox[{"EdgeForm", "@", "Blue"}], ",", 
              RowBox[{"Polygon", "/@", 
               RowBox[{"{", 
                RowBox[{"pedals1", ",", "pedals2"}], "}"}]}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"OptionValue", "@", "drFocusPedalPolys"}], "&&", 
             RowBox[{"OptionValue", "@", "drFocusExcPedals"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"FaceForm", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Opacity", "@", ".1"}], ",", "Green"}], "}"}], "]"}],
               ",", 
              RowBox[{"EdgeForm", "[", 
               RowBox[{"Darker", "@", "Green"}], "]"}], ",", 
              RowBox[{"Polygon", "/@", 
               RowBox[{"{", 
                RowBox[{"pedalsExc1", ",", "pedalsExc2"}], "}"}]}]}], "}"}], 
            ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"OptionValue", "@", "drFocusPedalPolys"}], "&&", 
             RowBox[{"OptionValue", "@", "drFocusInnerPedals"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"FaceForm", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Opacity", "@", ".1"}], ",", "Red"}], "}"}], "]"}], 
              ",", 
              RowBox[{"EdgeForm", "[", 
               RowBox[{"Darker", "@", "Red"}], "]"}], ",", 
              RowBox[{"Polygon", "/@", 
               RowBox[{"{", 
                RowBox[{"pedalsInner1", ",", "pedalsInner2"}], "}"}]}]}], 
             "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"OptionValue", "@", "drFocusAntipedalPolys"}], "&&", 
             RowBox[{"OptionValue", "@", "drFocusAntipedals"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"FaceForm", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Opacity", "@", ".1"}], ",", "Blue"}], "}"}], "]"}], 
              ",", 
              RowBox[{"EdgeForm", "@", "Blue"}], ",", 
              RowBox[{"Polygon", "/@", 
               RowBox[{"{", 
                RowBox[{"antipedals1", ",", "antipedals2"}], "}"}]}]}], "}"}],
             ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"OptionValue", "@", "drFocusAntipedalPolys"}], "&&", 
             RowBox[{"OptionValue", "@", "drFocusExcAntipedals"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"FaceForm", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Opacity", "@", ".1"}], ",", "Green"}], "}"}], "]"}],
               ",", 
              RowBox[{"EdgeForm", "[", 
               RowBox[{"Darker", "@", "Green"}], "]"}], ",", 
              RowBox[{"Polygon", "/@", 
               RowBox[{"{", 
                RowBox[{"antipedalsExc1", ",", "antipedalsExc2"}], "}"}]}]}], 
             "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"OptionValue", "@", "drFocusAntipedalPolys"}], "&&", 
             RowBox[{"OptionValue", "@", "drFocusInnerAntipedals"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"FaceForm", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Opacity", "@", ".1"}], ",", "Red"}], "}"}], "]"}], 
              ",", 
              RowBox[{"EdgeForm", "[", 
               RowBox[{"Darker", "@", "Red"}], "]"}], ",", 
              RowBox[{"Polygon", "/@", 
               RowBox[{"{", 
                RowBox[{"antipedalsInner1", ",", "antipedalsInner2"}], 
                "}"}]}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"labels", " ", "go", " ", "last"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drPs"}], ",", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drOrbit"}], ",", 
                RowBox[{"{", 
                 RowBox[{"Blue", ",", 
                  RowBox[{"ellLabelPoints", "[", 
                   RowBox[{"a", ",", "poly", ",", "\"\<P\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}], ",", 
                    RowBox[{"OptionValue", "@", "lgt"}]}], "]"}]}], "}"}], 
                ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drOuter"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Darker", "@", "Green"}], ",", " ", 
                  RowBox[{"ellLabelPointsb", "[", 
                   RowBox[{
                   "excA", ",", "excB", ",", "exc", ",", "\"\<P'\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}], ",", 
                    RowBox[{"OptionValue", "@", "lgt"}]}], "]"}]}], "}"}], 
                ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drInner"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Darker", "@", "Red"}], ",", " ", 
                  RowBox[{"ellLabelPointsb", "[", 
                   RowBox[{
                    RowBox[{"Sequence", "@@", "causticAB"}], ",", "polyInner",
                     ",", "\"\<P\\\"\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}], ",", 
                    RowBox[{"OptionValue", "@", "lgt"}]}], "]"}]}], "}"}], 
                ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drPedalPolys"}], ",", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"OptionValue", "@", "drMidPedals"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Blue", ",", "\[IndentingNewLine]", 
                    RowBox[{"labelPointsWhite", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "+", 
                    RowBox[{
                    RowBox[{"norm", "[", 
                    RowBox[{"#", "-", "mid"}], "]"}], 
                    RowBox[{"OptionValue", "@", "lgt"}]}]}], ")"}], "&"}], "/@",
                     "pedalsMid"}], ",", "\"\<Q\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"OptionValue", "@", "drMidExcPedals"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Darker", "@", "Green"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"labelPointsWhite", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "+", 
                    RowBox[{
                    RowBox[{"norm", "[", 
                    RowBox[{"#", "-", "mid"}], "]"}], 
                    RowBox[{"OptionValue", "@", "lgt"}]}]}], ")"}], "&"}], "/@",
                     "pedalsExcMid"}], ",", "\"\<Q'\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"OptionValue", "@", "drMidInnerPedals"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Darker", "@", "Red"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"labelPointsWhite", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "+", 
                    RowBox[{
                    RowBox[{"norm", "[", 
                    RowBox[{"#", "-", "mid"}], "]"}], 
                    RowBox[{"OptionValue", "@", "lgt"}]}]}], ")"}], "&"}], "/@",
                     "pedalsInnerMid"}], ",", "\"\<Q\\\"\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drAntipedalPolys"}], ",", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"OptionValue", "@", "drMidAntipedals"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Blue", ",", "\[IndentingNewLine]", 
                    RowBox[{"labelPointsWhite", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "+", 
                    RowBox[{
                    RowBox[{"norm", "[", 
                    RowBox[{"#", "-", "mid"}], "]"}], 
                    RowBox[{"OptionValue", "@", "lgt"}]}]}], ")"}], "&"}], "/@",
                     "antipedalsMid"}], ",", 
                    "\"\<\!\(\*SuperscriptBox[\(Q\), \(*\)]\)\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"OptionValue", "@", "drMidExcAntipedals"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Darker", "@", "Green"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"labelPointsWhite", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "+", 
                    RowBox[{
                    RowBox[{"norm", "[", 
                    RowBox[{"#", "-", "mid"}], "]"}], 
                    RowBox[{"OptionValue", "@", "lgt"}]}]}], ")"}], "&"}], "/@",
                     "antipedalsExcMid"}], ",", 
                    "\"\<\!\(\*SuperscriptBox[\(Q\), \(*\)]\)'\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"OptionValue", "@", "drMidInnerAntipedals"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Darker", "@", "Red"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"labelPointsWhite", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "+", 
                    RowBox[{
                    RowBox[{"norm", "[", 
                    RowBox[{"#", "-", "mid"}], "]"}], 
                    RowBox[{"OptionValue", "@", "lgt"}]}]}], ")"}], "&"}], "/@",
                     "antipedalsInnerMid"}], ",", 
                    "\"\<\!\(\*SuperscriptBox[\(Q\), \(*\)]\)\\\"\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
            ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drFocusAntipedalPolys"}], ",", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drFocusAntipedals"}], ",", 
                RowBox[{"{", 
                 RowBox[{"Blue", ",", "\[IndentingNewLine]", 
                  RowBox[{"labelPoints", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "+", 
                    RowBox[{
                    RowBox[{"norm", "[", 
                    RowBox[{"#", "-", "fs1"}], "]"}], 
                    RowBox[{"OptionValue", "@", "lgt"}]}]}], ")"}], "&"}], "/@",
                     "antipedals1"}], ",", 
                    "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(Q\), \(*\)], \
\(\(1\)\(,\)\)]\)\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"labelPoints", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "+", 
                    RowBox[{
                    RowBox[{"norm", "[", 
                    RowBox[{"#", "-", "fs2"}], "]"}], 
                    RowBox[{"OptionValue", "@", "lgt"}]}]}], ")"}], "&"}], "/@",
                     "antipedals2"}], ",", 
                    "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(Q\), \(*\)], \
\(\(2\)\(,\)\)]\)\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drFocusExcAntipedals"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Darker", "@", "Green"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"labelPoints", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "+", 
                    RowBox[{
                    RowBox[{"norm", "[", 
                    RowBox[{"#", "-", "fs1"}], "]"}], 
                    RowBox[{"OptionValue", "@", "lgt"}]}]}], ")"}], "&"}], "/@",
                     "antipedalsExc1"}], ",", 
                    "\"\<\!\(\*SuperscriptBox[\(Q\), \
\(*\)]\)\!\(\*SubscriptBox[\('\), \(\(1\)\(,\)\)]\)\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"labelPoints", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "+", 
                    RowBox[{
                    RowBox[{"norm", "[", 
                    RowBox[{"#", "-", "fs2"}], "]"}], 
                    RowBox[{"OptionValue", "@", "lgt"}]}]}], ")"}], "&"}], "/@",
                     "antipedalsExc2"}], ",", 
                    "\"\<\!\(\*SuperscriptBox[\(Q\), \
\(*\)]\)\!\(\*SubscriptBox[\('\), \(\(2\)\(,\)\)]\)\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OptionValue", "@", "drFocusInnerAntipedals"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Darker", "@", "Red"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"labelPoints", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "+", 
                    RowBox[{
                    RowBox[{"norm", "[", 
                    RowBox[{"#", "-", "fs1"}], "]"}], 
                    RowBox[{"OptionValue", "@", "lgt"}]}]}], ")"}], "&"}], "/@",
                     "antipedalsInner1"}], ",", 
                    "\"\<\!\(\*SuperscriptBox[\(Q\), \
\(*\)]\)\!\(\*SubscriptBox[\(\*\"\\\\\\\"\"\), \(\(1\)\(,\)\)]\)\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"labelPoints", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "+", 
                    RowBox[{
                    RowBox[{"norm", "[", 
                    RowBox[{"#", "-", "fs2"}], "]"}], 
                    RowBox[{"OptionValue", "@", "lgt"}]}]}], ")"}], "&"}], "/@",
                     "antipedalsInner2"}], ",", 
                    "\"\<\!\(\*SuperscriptBox[\(Q\), \
\(*\)]\)\!\(\*SubscriptBox[\(\*\"\\\\\\\"\"\), \(\(2\)\(,\)\)]\)\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pl", "=", 
       RowBox[{"\"\<N=\>\"", "<>", 
        RowBox[{"ToString", "@", "n"}], "<>", "\"\<, a=\>\"", "<>", 
        RowBox[{"nfn", "[", 
         RowBox[{"a", ",", "2"}], "]"}], "<>", "\"\<, \[Theta]=\>\"", "<>", 
        RowBox[{"nfn", "[", 
         RowBox[{"tDeg", ",", "1"}], "]"}], "<>", "\"\<\[Degree]\>\"", "<>", 
        "\"\<, L=\>\"", "<>", 
        RowBox[{"nfn", "[", 
         RowBox[{
          RowBox[{"triPer", "@", "poly"}], ",", 
          RowBox[{"OptionValue", "@", "digsC0"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"plThs", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "@", "drThs"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drOrbit"}], ",", 
            RowBox[{"reportThs", "[", 
             RowBox[{"\"\<\[Theta]\>\"", ",", 
              RowBox[{"getPolyCosines", "@", "poly"}], ",", 
              RowBox[{"OptionValue", "@", "digsC0"}], ",", 
              RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", 
            "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drOuter"}], ",", 
            RowBox[{"reportThs", "[", 
             RowBox[{"\"\<\[Theta]'\>\"", ",", 
              RowBox[{"getPolyCosines", "@", "exc"}], ",", 
              RowBox[{"OptionValue", "@", "digsC0"}], ",", 
              RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", 
            "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drInner"}], ",", 
            RowBox[{"reportThs", "[", 
             RowBox[{"\"\<\[Theta]\\\"\>\"", ",", 
              RowBox[{"getPolyCosines", "@", "polyInner"}], ",", 
              RowBox[{"OptionValue", "@", "digsC0"}], ",", 
              RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", 
            "\"\<\>\""}], "]"}]}], ",", "\[IndentingNewLine]", "\"\<\>\""}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plPhis", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "@", "drPhis"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidPedals"}], ",", 
            RowBox[{"reportThs", "[", 
             RowBox[{"\"\<\[Phi]\>\"", ",", 
              RowBox[{"getStarCosines", "[", 
               RowBox[{"pedalsMid", ",", "mid"}], "]"}], ",", 
              RowBox[{"OptionValue", "@", "digsC0"}], ",", 
              RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", 
            "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidExcPedals"}], ",", 
            RowBox[{"reportThs", "[", 
             RowBox[{"\"\<\[Phi]'\>\"", ",", 
              RowBox[{"getStarCosines", "[", 
               RowBox[{"pedalsExcMid", ",", "mid"}], "]"}], ",", 
              RowBox[{"OptionValue", "@", "digsC0"}], ",", 
              RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", 
            "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidInnerPedals"}], ",", 
            RowBox[{"reportThs", "[", 
             RowBox[{"\"\<\[Phi]\\\"\>\"", ",", 
              RowBox[{"getStarCosines", "[", 
               RowBox[{"pedalsInnerMid", ",", "mid"}], "]"}], ",", 
              RowBox[{"OptionValue", "@", "digsC0"}], ",", 
              RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", 
            "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidAntipedals"}], ",", 
            RowBox[{"reportThs", "[", 
             RowBox[{"\"\<\!\(\*SuperscriptBox[\(\[Phi]\), \(*\)]\)\>\"", ",", 
              RowBox[{"getStarCosines", "[", 
               RowBox[{"antipedalsMid", ",", "mid"}], "]"}], ",", 
              RowBox[{"OptionValue", "@", "digsC0"}], ",", 
              RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", 
            "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidExcAntipedals"}], ",", 
            RowBox[{"reportThs", "[", 
             RowBox[{
             "\"\<\!\(\*SuperscriptBox[\(\[Phi]\), \(*\)]\)'\>\"", ",", 
              RowBox[{"getStarCosines", "[", 
               RowBox[{"antipedalsExcMid", ",", "mid"}], "]"}], ",", 
              RowBox[{"OptionValue", "@", "digsC0"}], ",", 
              RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", 
            "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidInnerAntipedals"}], ",", 
            RowBox[{"reportThs", "[", 
             RowBox[{
             "\"\<\!\(\*SuperscriptBox[\(\[Phi]\), \(*\)]\)\\\"\>\"", ",", 
              RowBox[{"getStarCosines", "[", 
               RowBox[{"antipedalsInnerMid", ",", "mid"}], "]"}], ",", 
              RowBox[{"OptionValue", "@", "digsC0"}], ",", 
              RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", 
            "\"\<\>\""}], "]"}]}], ",", "\"\<\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plPsis", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "@", "drPsis"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidPedals"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"reportThs", "[", 
             RowBox[{"\"\<\[Psi]\>\"", ",", 
              RowBox[{"getPolyCosines", "@", "pedalsMid"}], ",", 
              RowBox[{"OptionValue", "@", "digsC0"}], ",", 
              RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", 
            "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidExcPedals"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"reportThs", "[", 
             RowBox[{"\"\<\[Psi]'\>\"", ",", 
              RowBox[{"getPolyCosines", "@", "pedalsExcMid"}], ",", 
              RowBox[{"OptionValue", "@", "digsC0"}], ",", 
              RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", 
            "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidInnerPedals"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"reportThs", "[", 
             RowBox[{"\"\<\[Psi]\\\"\>\"", ",", 
              RowBox[{"getPolyCosines", "@", "pedalsInnerMid"}], ",", 
              RowBox[{"OptionValue", "@", "digsC0"}], ",", 
              RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", 
            "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidAntipedals"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"reportThs", "[", 
             RowBox[{"\"\<\!\(\*SuperscriptBox[\(\[Psi]\), \(*\)]\)\>\"", ",", 
              RowBox[{"getPolyCosines", "@", "antipedalsMid"}], ",", 
              RowBox[{"OptionValue", "@", "digsC0"}], ",", 
              RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", 
            "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidExcAntipedals"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"reportThs", "[", 
             RowBox[{
             "\"\<\!\(\*SuperscriptBox[\(\[Psi]\), \(*\)]\)'\>\"", ",", 
              RowBox[{"getPolyCosines", "@", "antipedalsExcMid"}], ",", 
              RowBox[{"OptionValue", "@", "digsC0"}], ",", 
              RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", 
            "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidInnerAntipedals"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"reportThs", "[", 
             RowBox[{
             "\"\<\!\(\*SuperscriptBox[\(\[Psi]\), \(*\)]\)\\\"\>\"", ",", 
              RowBox[{"getPolyCosines", "@", "antipedalsInnerMid"}], ",", 
              RowBox[{"OptionValue", "@", "digsC0"}], ",", 
              RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", 
            "\"\<\>\""}], "]"}]}], ",", "\"\<\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"plCentroid", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "@", "drCentroids"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidPedals"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"reportThreeCentroids", "[", 
             RowBox[{
             "\"\<c\>\"", ",", "midCentroid", ",", "midPerCentroid", ",", 
              "midAreaCentroid", ",", 
              RowBox[{"fs2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"OptionValue", "@", "digsC0"}]}], "]"}], ",", 
            "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidExcPedals"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"reportThreeCentroids", "[", 
             RowBox[{
             "\"\<c'\>\"", ",", "excMidCentroid", ",", "excMidPerCentroid", 
              ",", "excMidAreaCentroid", ",", 
              RowBox[{"fs2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"OptionValue", "@", "digsC0"}]}], "]"}], ",", 
            "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidInnerPedals"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"reportThreeCentroids", "[", 
             RowBox[{
             "\"\<c\\\"\>\"", ",", "innerMidCentroid", ",", 
              "innerMidPerCentroid", ",", "innerMidAreaCentroid", ",", 
              RowBox[{"fs2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"OptionValue", "@", "digsC0"}]}], "]"}], ",", 
            "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidAntipedals"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"reportThreeCentroids", "[", 
             RowBox[{
             "\"\<\!\(\*SuperscriptBox[\(c\), \(*\)]\)\>\"", ",", 
              "antipedalCentroid", ",", "antipedalPerCentroid", ",", 
              "antipedalAreaCentroid", ",", 
              RowBox[{"fs2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"OptionValue", "@", "digsC0"}]}], "]"}], ",", 
            "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidExcAntipedals"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"reportThreeCentroids", "[", 
             RowBox[{
             "\"\<\!\(\*SuperscriptBox[\(c\), \(*\)]\)'\>\"", ",", 
              "antipedalExcCentroid", ",", "antipedalExcPerCentroid", ",", 
              "antipedalExcAreaCentroid", ",", 
              RowBox[{"fs2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"OptionValue", "@", "digsC0"}]}], "]"}], ",", 
            "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMidInnerAntipedals"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"reportThreeCentroids", "[", 
             RowBox[{
             "\"\<\!\(\*SuperscriptBox[\(c\), \(*\)]\)\\\"\>\"", ",", 
              "antipedalInnerCentroid", ",", "antipedalInnerPerCentroid", ",",
               "antipedalInnerAreaCentroid", ",", 
              RowBox[{"fs2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "2", ",", 
              RowBox[{"OptionValue", "@", "digsC0"}]}], "]"}], ",", 
            "\"\<\>\""}], "]"}]}], ",", "\"\<\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"plMid", "=", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "@", "drMidPedals"}], "||", 
           RowBox[{"OptionValue", "@", "drMidAntipedals"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"reportThreeVals", "[", 
           RowBox[{
           "\"\<\[Sum]\!\(\*SubscriptBox[\(p\), \(i\)]\)\>\"", ",", 
            "\"\<\[Sum]\!\(\*SuperscriptBox[SubscriptBox[\(p\), \(i\)], \
\(2\)]\)\>\"", ",", "\"\<\[Product]\!\(\*SubscriptBox[\(p\), \(i\)]\)\>\"", 
            ",", "midOrbitSum", ",", "midOrbitSumSqr", ",", "midOrbitProd", 
            ",", 
            RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", "\"\<\>\""}], 
         "]"}], "<>", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "@", "drMidPedals"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"reportThreeVals", "[", 
           RowBox[{
           "\"\<\[Sum]\!\(\*SubscriptBox[\(q\), \(i\)]\)\>\"", ",", 
            "\"\<\[Sum]\!\(\*SuperscriptBox[SubscriptBox[\(q\), \(i\)], \
\(2\)]\)\>\"", ",", "\"\<\[Product]\!\(\*SubscriptBox[\(q\), \(i\)]\)\>\"", 
            ",", "pedalsMidSum", ",", "pedalsMidSumSqr", ",", "pedalsMidProd",
             ",", 
            RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", "\"\<\>\""}], 
         "]"}], "<>", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "@", "drMidAntipedals"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"reportThreeVals", "[", 
           RowBox[{
           "\"\<\[Sum]\!\(\*SubscriptBox[SuperscriptBox[\(q\), \(*\)], \(i\)]\
\)\>\"", ",", 
            "\"\<\[Sum]\!\(\*SuperscriptBox[SubscriptBox[SuperscriptBox[\(q\),\
 \(*\)], \(i\)], \(2\)]\)\>\"", ",", 
            "\"\<\[Product]\!\(\*SubscriptBox[SuperscriptBox[\(q\), \(*\)], \
\(i\)]\)\>\"", ",", "antipedalsMidSum", ",", "antipedalsMidSumSqr", ",", 
            "antipedalsMidProd", ",", 
            RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", "\"\<\>\""}], 
         "]"}], "<>", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"OptionValue", "@", "drPedalPolys"}], "&&", 
             RowBox[{"OptionValue", "@", "drMidPedals"}]}], ")"}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"OptionValue", "@", "drAntipedalPolys"}], "&&", 
             RowBox[{"OptionValue", "@", "drMidAntipedals"}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"reportAreaPair", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(A\), \(m\)]\)\>\"", ",", 
            "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(A\), \(*\)], \
\(m\)]\)\>\"", ",", "pedalsMidA", ",", " ", "antipedalsMidA", ",", 
            RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", "\"\<\>\""}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"plExcMid", "=", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "@", "drMidExcPedals"}], "||", 
           RowBox[{"OptionValue", "@", "drMidExcAntipedals"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"reportThreeVals", "[", 
           RowBox[{
           "\"\<\[Sum]p\!\(\*SubscriptBox[\('\), \(i\)]\)\>\"", ",", 
            "\"\<\[Sum]p\!\(\*SuperscriptBox[SubscriptBox[\('\), \(i\)], \
\(2\)]\)\>\"", ",", "\"\<\[Product]p\!\(\*SubscriptBox[\('\), \(i\)]\)\>\"", 
            ",", "midExcSum", ",", "midExcSumSqr", ",", "midExcProd", ",", 
            RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", "\"\<\>\""}], 
         "]"}], "<>", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "@", "drMidExcPedals"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"reportThreeVals", "[", 
           RowBox[{
           "\"\<\[Sum]q\!\(\*SubscriptBox[\('\), \(i\)]\)\>\"", ",", 
            "\"\<\[Sum]q\!\(\*SuperscriptBox[SubscriptBox[\('\), \(i\)], \
\(2\)]\)\>\"", ",", "\"\<\[Product]q\!\(\*SubscriptBox[\('\), \(i\)]\)\>\"", 
            ",", "pedalsExcMidSum", ",", "pedalsExcMidSumSqr", ",", 
            "pedalsExcMidProd", ",", 
            RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", "\"\<\>\""}], 
         "]"}], "<>", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "@", "drMidExcAntipedals"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"reportThreeVals", "[", 
           RowBox[{
           "\"\<\[Sum]\!\(\*SubscriptBox[SuperscriptBox[\(q\), \(*\)], \(i\)]\
\)'\>\"", ",", 
            "\"\<\[Sum](\!\(\*SubscriptBox[SuperscriptBox[\(q\), \(*\)], \
\(i\)]\)'\!\(\*SuperscriptBox[\()\), \(2\)]\)\>\"", ",", 
            "\"\<\[Product]\!\(\*SubscriptBox[SuperscriptBox[\(q\), \(*\)], \
\(i\)]\)\>\"", ",", "antipedalsExcSum", ",", "antipedalsExcSumSqr", ",", 
            "antipedalsExcProd", ",", 
            RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", "\"\<\>\""}], 
         "]"}], "<>", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"OptionValue", "@", "drPedalPolys"}], "&&", 
             RowBox[{"OptionValue", "@", "drMidExcPedals"}]}], ")"}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"OptionValue", "@", "drAntipedalPolys"}], "&&", 
             RowBox[{"OptionValue", "@", "drMidExcAntipedals"}]}], ")"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"reportAreaPair", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(A\), \(m\)]\)'\>\"", ",", 
            
            "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(A\), \(*\)], \(m\)]\)'\>\
\"", ",", "pedalsExcMidA", ",", " ", "antipedalsExcMidA", ",", 
            RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", "\"\<\>\""}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"plInnerMid", "=", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "@", "drMidInnerPedals"}], "||", 
           RowBox[{"OptionValue", "@", "drMidInnerAntipedals"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"reportThreeVals", "[", 
           RowBox[{
           "\"\<\[Sum]\!\(\*SubscriptBox[\(p\), \(i\)]\)\\\"\>\"", ",", 
            "\"\<\[Sum](\!\(\*SubscriptBox[\(p\), \
\(i\)]\)\\\"\!\(\*SuperscriptBox[\()\), \(2\)]\)\>\"", ",", 
            "\"\<\[Product]\!\(\*SubscriptBox[\(p\), \(i\)]\)\\\"\>\"", ",", 
            "midInnerSum", ",", "midInnerSumSqr", ",", "midInnerProd", ",", 
            RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", "\"\<\>\""}], 
         "]"}], "<>", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "@", "drMidInnerPedals"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"reportThreeVals", "[", 
           RowBox[{
           "\"\<\[Sum]\!\(\*SubscriptBox[\(q\), \(i\)]\)\\\"\>\"", ",", 
            "\"\<\[Sum](\!\(\*SubscriptBox[\(q\), \
\(i\)]\)\\\"\!\(\*SuperscriptBox[\()\), \(2\)]\)\>\"", ",", 
            "\"\<\[Product]\!\(\*SubscriptBox[\(q\), \(i\)]\)\\\"\>\"", ",", 
            "pedalsInnerMidSum", ",", "pedalsInnerMidSumSqr", ",", 
            "pedalsInnerMidProd", ",", 
            RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", "\"\<\>\""}], 
         "]"}], "<>", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "@", "drMidInnerAntipedals"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"reportThreeVals", "[", 
           RowBox[{
           "\"\<\[Sum]\!\(\*SubscriptBox[SuperscriptBox[\(q\), \(*\)], \(i\)]\
\)\\\"\>\"", ",", 
            "\"\<\[Sum](\!\(\*SubscriptBox[SuperscriptBox[\(q\), \(*\)], \
\(i\)]\)\\\"\!\(\*SuperscriptBox[\()\), \(2\)]\)\>\"", ",", 
            "\"\<\[Product]\!\(\*SubscriptBox[SuperscriptBox[\(q\), \(*\)], \
\(i\)]\)\\\"\>\"", ",", "antipedalsInnerSum", ",", "antipedalsInnerSumSqr", 
            ",", "antipedalsInnerProd", ",", 
            RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", "\"\<\>\""}], 
         "]"}], "<>", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"OptionValue", "@", "drPedalPolys"}], "&&", 
             RowBox[{"OptionValue", "@", "drMidInnerPedals"}]}], ")"}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"OptionValue", "@", "drAntipedalPolys"}], "&&", 
             RowBox[{"OptionValue", "@", "drMidInnerAntipedals"}]}], ")"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"reportAreaPair", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(A\), \(m\)]\)\\\"\>\"", ",", 
            "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(A\), \(*\)], \
\(m\)]\)\\\"\>\"", ",", "pedalsInnerMidA", ",", " ", "antipedalsInnerMidA", 
            ",", 
            RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", "\"\<\>\""}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"plArea", "=", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "@", "drPlAreas"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"reportAreaTriple", "[", 
            RowBox[{
            "\"\<A\>\"", ",", "\"\<A'\>\"", ",", "\"\<A\\\"\>\"", ",", 
             "polyA", ",", "polyExcA", ",", "polyInnerA", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           "\"\<, \!\(\*SubscriptBox[\(k\), \(113\)]\)=\>\"", "<>", 
           RowBox[{"nfn", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"a", " ", "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"causticAB", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], 
                  RowBox[{"causticAB", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ")"}], "^", 
              "2"}], ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}]}], ",", 
          "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "@", "drMidPedalRatios"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"reportAreaTriple", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(A\), \(m\)]\)\>\"", ",", 
            "\"\<\!\(\*SubscriptBox[\(A\), \(m\)]\)'\>\"", ",", 
            "\"\<\!\(\*SubscriptBox[\(A\), \(m\)]\)\\\"\>\"", ",", 
            "pedalsMidA", ",", "pedalsExcMidA", ",", "pedalsInnerMidA", ",", 
            RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", "\"\<\>\""}], 
         "]"}], "<>", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "@", "drMidAntipedalRatios"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"reportAreaTriple", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(A\), \(*\)], \
\(m\)]\)\>\"", ",", 
            "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(A\), \(*\)], \(m\)]\)'\>\
\"", ",", 
            "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(A\), \(*\)], \
\(m\)]\)\\\"\>\"", ",", "antipedalsMidA", ",", "antipedalsExcMidA", ",", 
            "antipedalsInnerMidA", ",", 
            RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", "\"\<\>\""}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"plMidArea", "=", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "@", "drMidPedals"}], ",", 
          RowBox[{"(*", " ", 
           RowBox[{"--", "-"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"reportAreaPair", "[", 
           RowBox[{
           "\"\<A\>\"", ",", "\"\<\!\(\*SubscriptBox[\(A\), \(m\)]\)\>\"", 
            ",", "polyA", ",", " ", "pedalsMidA", ",", 
            RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", "\"\<\>\""}], 
         "]"}], "<>", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "@", "drMidAntipedals"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"reportAreaPair", "[", 
           RowBox[{
           "\"\<A\>\"", ",", 
            "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(A\), \(*\)], \
\(m\)]\)\>\"", ",", "polyA", ",", " ", "antipedalsMidA", ",", 
            RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", "\"\<\>\""}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plMidExcArea", "=", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "@", "drMidExcPedals"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"reportAreaPair", "[", 
           RowBox[{
           "\"\<A'\>\"", ",", "\"\<\!\(\*SubscriptBox[\(A\), \(m\)]\)'\>\"", 
            ",", "polyExcA", " ", ",", "pedalsExcMidA", ",", 
            RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", "\"\<\>\""}], 
         "]"}], "<>", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "@", "drMidExcAntipedals"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"reportAreaPair", "[", 
           RowBox[{
           "\"\<A'\>\"", ",", 
            "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(A\), \(*\)], \(m\)]\)'\>\
\"", ",", "polyExcA", " ", ",", "antipedalsExcMidA", ",", 
            RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", "\"\<\>\""}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plMidInnerArea", "=", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "@", "drMidInnerPedals"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"reportAreaPair", "[", 
           RowBox[{
           "\"\<A\\\"\>\"", ",", "\"\<\!\(\*SubscriptBox[\(A\), \(m\)]\)\>\"",
             ",", "polyInnerA", ",", "pedalsInnerMidA", ",", 
            RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", "\"\<\>\""}], 
         "]"}], "<>", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "@", "drMidInnerAntipedals"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"reportAreaPair", "[", 
           RowBox[{
           "\"\<\!\(\*SuperscriptBox[\(A\), \(*\)]\)\\\"\>\"", ",", 
            "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(A\), \(m\)], \
\(*\)]\)\>\"", ",", "polyInnerA", ",", "antipedalsInnerMidA", ",", 
            RowBox[{"OptionValue", "@", "digs"}]}], "]"}], ",", "\"\<\>\""}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"plOrbit", "=", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "@", "drFocusPedals"}], "||", 
           RowBox[{"OptionValue", "@", "drFocusAntipedals"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"reportSums", "[", 
            RowBox[{"\"\<p\>\"", ",", "orbitSum1", ",", "orbitSum2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportSums", "[", 
            RowBox[{
            "\"\<\!\(\*SuperscriptBox[\(p\), \(2\)]\)\>\"", ",", 
             "orbitSumSqr1", ",", "orbitSumSqr2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportProds", "[", 
            RowBox[{"\"\<p\>\"", ",", "orbitProd1", ",", "orbitProd2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}]}], ",", 
          "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "@", "drFocusPedals"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"reportSums", "[", 
            RowBox[{"\"\<q\>\"", ",", "pedalSum1", ",", "pedalSum2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportSums", "[", 
            RowBox[{
            "\"\<\!\(\*SuperscriptBox[\(q\), \(2\)]\)\>\"", ",", 
             "pedalSumSqr1", ",", "pedalSumSqr2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportProds", "[", 
            RowBox[{"\"\<q\>\"", ",", "pedalProd1", ",", "pedalProd2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportAreas", "[", 
            RowBox[{"\"\<A\>\"", ",", "pedals1A", ",", "pedals2A", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}]}], ",", 
          "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "@", "drFocusAntipedals"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"reportSums", "[", 
            RowBox[{
            "\"\<\!\(\*SuperscriptBox[\(q\), \(*\)]\)\>\"", ",", 
             "antipedalSum1", ",", "antipedalSum2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportSums", "[", 
            RowBox[{
            "\"\<(\!\(\*SuperscriptBox[\(q\), \
\(2\)]\)\!\(\*SuperscriptBox[\()\), \(*\)]\)\>\"", ",", "antipedalSumSqr1", 
             ",", "antipedalSumSqr2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportProds", "[", 
            RowBox[{
            "\"\<\!\(\*SuperscriptBox[\(q\), \(*\)]\)\>\"", ",", 
             "antipedalProd1", ",", "antipedalProd2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportAreas", "[", 
            RowBox[{
            "\"\<\!\(\*SuperscriptBox[\(A\), \(*\)]\)\>\"", ",", 
             "antipedals1A", ",", "antipedals2A", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}]}], ",", 
          "\"\<\>\""}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plExc", "=", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "@", "drFocusExcPedals"}], "||", 
           RowBox[{"OptionValue", "@", "drFocusExcAntipedals"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"reportSums", "[", 
            RowBox[{"\"\<p'\>\"", ",", "excSum1", ",", "excSum2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportSums", "[", 
            RowBox[{
            "\"\<(p'\!\(\*SuperscriptBox[\()\), \(2\)]\)\>\"", ",", 
             "excSumSqr1", ",", "excSumSqr2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportProds", "[", 
            RowBox[{"\"\<p'\>\"", ",", "excProd1", ",", "excProd2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}]}], ",", 
          "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "@", "drFocusExcPedals"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"reportSums", "[", 
            RowBox[{
            "\"\<q'\>\"", ",", "pedalExcSum1", ",", "pedalExcSum2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportSums", "[", 
            RowBox[{
            "\"\<(q'\!\(\*SuperscriptBox[\()\), \(2\)]\)\>\"", ",", 
             "pedalExcSumSqr1", ",", "pedalExcSumSqr2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportProds", "[", 
            RowBox[{
            "\"\<q'\>\"", ",", "pedalExcProd1", ",", "pedalExcProd2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportAreas", "[", 
            RowBox[{"\"\<A'\>\"", ",", "pedalsExc1A", ",", "pedalsExc2A", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}]}], ",", 
          "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "@", "drFocusExcAntipedals"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"reportSums", "[", 
            RowBox[{
            "\"\<\!\(\*SuperscriptBox[\(q\), \(*\)]\)\>\"", ",", 
             "antipedalExcSum1", ",", "antipedalExcSum2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportSums", "[", 
            RowBox[{
            "\"\<(\!\(\*SuperscriptBox[\(q\), \
\(2\)]\)\!\(\*SuperscriptBox[\()\), \(*\)]\)\>\"", ",", "antipedalExcSumSqr1",
              ",", "antipedalExcSumSqr2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportProds", "[", 
            RowBox[{
            "\"\<\!\(\*SuperscriptBox[\(q\), \(*\)]\)\>\"", ",", 
             "antipedalExcProd1", ",", "antipedalExcProd2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportAreas", "[", 
            RowBox[{
            "\"\<\!\(\*SuperscriptBox[\(A\), \(*\)]\)\>\"", ",", 
             "antipedalsExc1A", ",", "antipedalsExc2A", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}]}], ",", 
          "\"\<\>\""}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"plInner", "=", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "@", "drFocusInnerPedals"}], "||", 
           RowBox[{"OptionValue", "@", "drFocusInnerAntipedals"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"reportSums", "[", 
            RowBox[{"\"\<p\\\"\>\"", ",", "innerSum1", ",", "innerSum2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportSums", "[", 
            RowBox[{
            "\"\<(p\\\"\!\(\*SuperscriptBox[\()\), \(2\)]\)\>\"", ",", 
             "innerSumSqr1", ",", "innerSumSqr2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportProds", "[", 
            RowBox[{
            "\"\<p\\\"\>\"", ",", "innerProd1", ",", "innerProd2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}]}], ",", 
          "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "@", "drFocusInnerPedals"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"reportSums", "[", 
            RowBox[{
            "\"\<q\\\"\>\"", ",", "pedalInnerSum1", ",", "pedalInnerSum2", 
             ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportSums", "[", 
            RowBox[{
            "\"\<(q\\\"\!\(\*SuperscriptBox[\()\), \(2\)]\)\>\"", ",", 
             "pedalInnerSumSqr1", ",", "pedalInnerSumSqr2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportProds", "[", 
            RowBox[{
            "\"\<q\\\"\>\"", ",", "pedalInnerProd1", ",", "pedalInnerProd2", 
             ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportAreas", "[", 
            RowBox[{
            "\"\<A\\\"\>\"", ",", "pedalsInner1A", ",", "pedalsInner2A", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}]}], ",", 
          "\"\<\>\""}], "]"}], "<>", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "@", "drFocusInnerAntipedals"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"reportSums", "[", 
            RowBox[{
            "\"\<\!\(\*SuperscriptBox[\(q\), \(*\)]\)\\\"\>\"", ",", 
             "antipedalInnerSum1", ",", "antipedalInnerSum2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportSums", "[", 
            RowBox[{
            "\"\<(\!\(\*SuperscriptBox[\(q\), \
\(*\)]\)\\\"\!\(\*SuperscriptBox[\()\), \(2\)]\)\>\"", ",", 
             "antipedalInnerSumSqr1", ",", "antipedalInnerSumSqr2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportProds", "[", 
            RowBox[{
            "\"\<\!\(\*SuperscriptBox[\(q\), \(*\)]\)\\\"\>\"", ",", 
             "antipedalInnerProd1", ",", "antipedalInnerProd2", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
           "\[IndentingNewLine]", 
           RowBox[{"reportAreas", "[", 
            RowBox[{
            "\"\<\!\(\*SuperscriptBox[\(A\), \(*\)]\)\\\"\>\"", ",", 
             "antipedalsInner1A", ",", "antipedalsInner2A", ",", 
             RowBox[{"OptionValue", "@", "digs"}]}], "]"}]}], ",", 
          "\"\<\>\""}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"plStachelLsRs", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "@", "drStachelLsRs"}], ",", 
         RowBox[{"\"\<\\n\[Product]\!\(\*SubscriptBox[\(l\), \(i\)]\)=\>\"", "<>", 
          RowBox[{"nfn", "[", 
           RowBox[{
            RowBox[{"lsrs", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"OptionValue", "@", "digs"}]}], "]"}], "<>", 
          "\"\<, \[Product]\!\(\*SubscriptBox[\(r\), \(i\)]\)=\>\"", "<>", 
          RowBox[{"nfn", "[", 
           RowBox[{
            RowBox[{"lsrs", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"OptionValue", "@", "digs"}]}], "]"}]}], ",", 
         "\"\<\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ell", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drCaustic"}], ",", "ellCaustic", ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "gr"}], "}"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{
           "pl", "<>", "plArea", "<>", "\[IndentingNewLine]", "plOrbit", "<>",
             "plExc", "<>", "plInner", "<>", "\[IndentingNewLine]", "plMid", "<>",
             "plExcMid", "<>", "plInnerMid", "<>", "\[IndentingNewLine]", 
            "plMidArea", "<>", "plMidExcArea", "<>", "plMidInnerArea", "<>", 
            "\[IndentingNewLine]", "plStachelLsRs", "<>", 
            "\[IndentingNewLine]", "plCentroid", "<>", "\[IndentingNewLine]", 
            "plThs", "<>", "plPhis", "<>", "plPsis"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
             RowBox[{"OptionValue", "@", "fontSize"}]}], "}"}]}], "]"}]}]}], 
       "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7891331810675297`*^9, 3.7891333578390245`*^9}, {
   3.789133391183157*^9, 3.7891334548945503`*^9}, {3.789135732699546*^9, 
   3.7891357732014217`*^9}, {3.789139926348564*^9, 3.7891399300510693`*^9}, {
   3.789139961786436*^9, 3.7891400921226006`*^9}, {3.7891401291317744`*^9, 
   3.7891401413638163`*^9}, {3.789140174908258*^9, 3.7891401750671377`*^9}, {
   3.789142578495343*^9, 3.7891426143918457`*^9}, {3.789142738656547*^9, 
   3.7891427761525693`*^9}, {3.7892973247926598`*^9, 3.789297476027462*^9}, {
   3.7892975971609*^9, 3.7892976595767097`*^9}, {3.78929775301208*^9, 
   3.7892977548511705`*^9}, {3.789297787473762*^9, 3.7892977909949117`*^9}, {
   3.7892978669831095`*^9, 3.7892979830892916`*^9}, {3.789298077153863*^9, 
   3.7892980892390327`*^9}, {3.789298743633027*^9, 3.7892988113621855`*^9}, {
   3.7921455803337173`*^9, 3.7921456321914234`*^9}, {3.7959584669152026`*^9, 
   3.795958797044032*^9}, {3.7959588449668336`*^9, 3.7959588463800507`*^9}, {
   3.79595892965491*^9, 3.7959589397478733`*^9}, {3.7959589762911205`*^9, 
   3.7959591314920993`*^9}, {3.7959592159507847`*^9, 3.79595922139423*^9}, {
   3.79595930383099*^9, 3.7959595065285177`*^9}, {3.7959597527591286`*^9, 
   3.7959599270646305`*^9}, {3.7959599575051107`*^9, 3.795959960356228*^9}, {
   3.7959600089882827`*^9, 3.7959600341929283`*^9}, {3.7959600916583214`*^9, 
   3.7959600994991417`*^9}, {3.795960236820779*^9, 3.7959602381373587`*^9}, {
   3.7959605118118706`*^9, 3.79596051288631*^9}, {3.795961281302719*^9, 
   3.795961328644354*^9}, {3.795961390189361*^9, 3.795961390312434*^9}, {
   3.795961993875821*^9, 3.7959621937945232`*^9}, {3.7959622286157284`*^9, 
   3.7959622411950197`*^9}, {3.795962280432429*^9, 3.795962321670828*^9}, {
   3.7959625789774055`*^9, 3.795962976392661*^9}, {3.7959630095144253`*^9, 
   3.795963242194408*^9}, {3.7959633610965853`*^9, 3.7959636269293985`*^9}, {
   3.7959642671903563`*^9, 3.795964363959227*^9}, {3.795964801095152*^9, 
   3.795964853136302*^9}, {3.7959653266903496`*^9, 3.7959653366793585`*^9}, {
   3.7959654435967636`*^9, 3.7959654469446383`*^9}, {3.795965613357649*^9, 
   3.795965699996682*^9}, {3.795965735767827*^9, 3.7959657867037015`*^9}, {
   3.7959659786214366`*^9, 3.795966113846164*^9}, {3.795966146739532*^9, 
   3.79596623743959*^9}, {3.795966497955433*^9, 3.7959665213156404`*^9}, {
   3.796070691231616*^9, 3.7960712024292192`*^9}, {3.7960712605832744`*^9, 
   3.796071414356616*^9}, {3.796071474168988*^9, 3.7960715900152807`*^9}, {
   3.796071684822523*^9, 3.7960717368217497`*^9}, {3.7960719788865185`*^9, 
   3.7960721034494143`*^9}, {3.796072157338261*^9, 3.7960721853589697`*^9}, {
   3.796072341813964*^9, 3.7960723471397495`*^9}, {3.7960724308762507`*^9, 
   3.7960724489010625`*^9}, {3.796072499570269*^9, 3.796072551107007*^9}, {
   3.7960725879260035`*^9, 3.796072589598523*^9}, {3.7960726226910467`*^9, 
   3.796072757925223*^9}, {3.7960728565873833`*^9, 3.796072873082267*^9}, {
   3.7960729144875236`*^9, 3.7960729827406664`*^9}, {3.7960736377728615`*^9, 
   3.7960736571877584`*^9}, {3.7960753236219277`*^9, 
   3.7960754458466196`*^9}, {3.796075540123705*^9, 3.7960755428975544`*^9}, {
   3.7960758116755247`*^9, 3.7960758169613523`*^9}, {3.796108757112589*^9, 
   3.7961088863342257`*^9}, {3.796108927310604*^9, 3.796108927682543*^9}, {
   3.796109019996771*^9, 3.7961090909589767`*^9}, {3.7961091846657715`*^9, 
   3.7961092466009536`*^9}, {3.7961094441624823`*^9, 
   3.7961094856424265`*^9}, {3.7961095256472354`*^9, 3.796109588938966*^9}, {
   3.796109679538127*^9, 3.7961098665790057`*^9}, {3.7961099382280855`*^9, 
   3.796110002914721*^9}, {3.7961100995066814`*^9, 3.796110113365698*^9}, {
   3.796110619376683*^9, 3.7961106362769413`*^9}, {3.7961156066080637`*^9, 
   3.7961156151990147`*^9}, {3.79613016982086*^9, 3.79613043976013*^9}, {
   3.796130486502999*^9, 3.796130655829774*^9}, {3.7961307356390295`*^9, 
   3.7961307431140375`*^9}, {3.7961309024658866`*^9, 
   3.7961309531038284`*^9}, {3.796130986350937*^9, 3.7961312168860044`*^9}, {
   3.796131252871793*^9, 3.7961312542868*^9}, {3.7961316001561527`*^9, 
   3.7961316005660353`*^9}, {3.7961324213977013`*^9, 3.796132543555589*^9}, {
   3.796132573836615*^9, 3.796132822548772*^9}, {3.796132935685779*^9, 
   3.796132960480571*^9}, {3.796132992200059*^9, 3.7961330020805645`*^9}, {
   3.796133040629932*^9, 3.7961331730669622`*^9}, {3.7961332191256933`*^9, 
   3.796133222950361*^9}, {3.7961336548895226`*^9, 3.7961336563430467`*^9}, {
   3.796133861277877*^9, 3.7961339039215975`*^9}, {3.7961340050879917`*^9, 
   3.796134019484178*^9}, {3.7961341258935227`*^9, 3.7961341436934986`*^9}, {
   3.79613426310285*^9, 3.7961342641397667`*^9}, {3.7961343614844275`*^9, 
   3.796134362564686*^9}, {3.7961345385138235`*^9, 3.796134563046542*^9}, {
   3.796136784344319*^9, 3.796136821641779*^9}, {3.796136973256194*^9, 
   3.796137165583652*^9}, {3.7961372980982513`*^9, 3.7961373029058466`*^9}, {
   3.79613734933282*^9, 3.7961373496621857`*^9}, {3.7961374229431696`*^9, 
   3.796137475433081*^9}, {3.7961375086844087`*^9, 3.796137520027594*^9}, {
   3.796142823842719*^9, 3.796142829535494*^9}, {3.796142862612032*^9, 
   3.7961429323442397`*^9}, {3.796143032577362*^9, 3.796143037050888*^9}, {
   3.7961430939007635`*^9, 3.796143132359908*^9}, {3.7961431981256166`*^9, 
   3.7961431985923986`*^9}, {3.7961434022011204`*^9, 
   3.7961434116780925`*^9}, {3.796143449219777*^9, 3.7961434526266594`*^9}, {
   3.796143861004697*^9, 3.7961439009671803`*^9}, {3.796144017940633*^9, 
   3.796144026279894*^9}, {3.7961549953408346`*^9, 3.796155229011792*^9}, {
   3.796155263778593*^9, 3.796155384733678*^9}, {3.7961554579875717`*^9, 
   3.796155471044738*^9}, {3.796155623480055*^9, 3.796155832794121*^9}, {
   3.796205797595014*^9, 3.796205811912502*^9}, {3.7962059158932447`*^9, 
   3.796205916974944*^9}, {3.7962059869502563`*^9, 3.796206049240162*^9}, {
   3.7962061417565966`*^9, 3.796206319633259*^9}, {3.796206414689435*^9, 
   3.79620644146631*^9}, {3.796206503675908*^9, 3.796206647895734*^9}, {
   3.7962067057523766`*^9, 3.7962068230253987`*^9}, {3.7962068782171507`*^9, 
   3.796206891719039*^9}, {3.7962069300463667`*^9, 3.79620695525308*^9}, {
   3.796207011985217*^9, 3.796207014944626*^9}, {3.796207081798506*^9, 
   3.79620714653944*^9}, {3.7962072475631714`*^9, 3.7962072479302883`*^9}, {
   3.796207444541052*^9, 3.796207496978506*^9}, {3.796207648917762*^9, 
   3.7962076624273863`*^9}, {3.7962077285360117`*^9, 
   3.7962077508327155`*^9}, {3.7962078081036344`*^9, 3.796207844599353*^9}, {
   3.7962078902803125`*^9, 3.796207918903865*^9}, {3.796208986614185*^9, 
   3.796209014274376*^9}, {3.796209058631783*^9, 3.7962091459515934`*^9}, {
   3.796209265347703*^9, 3.796209271144385*^9}, {3.7962156920659924`*^9, 
   3.7962156949051666`*^9}, {3.7962157507837563`*^9, 3.796215810911162*^9}, {
   3.7962158762928996`*^9, 3.7962159828186893`*^9}, {3.7962161421701393`*^9, 
   3.796216299859273*^9}, {3.796216474775315*^9, 3.796216482434801*^9}, {
   3.796217527950305*^9, 3.7962175390017467`*^9}, {3.7962175721456738`*^9, 
   3.796217644050089*^9}, {3.796218009093465*^9, 3.796218009809577*^9}, {
   3.7962180783667755`*^9, 3.7962180794090166`*^9}, {3.796225887569804*^9, 
   3.7962260823000045`*^9}, {3.796233990762196*^9, 3.796233996637185*^9}, {
   3.796234659976266*^9, 3.7962347064984026`*^9}, {3.796234811940346*^9, 
   3.796234856491085*^9}, {3.7962354053893113`*^9, 3.7962354800522604`*^9}, {
   3.796235520577134*^9, 3.796235523107604*^9}, {3.796235685750086*^9, 
   3.7962357648436375`*^9}, {3.796246416844537*^9, 3.7962464923910336`*^9}, {
   3.7962466877929225`*^9, 3.796246826910179*^9}, {3.7962468640727897`*^9, 
   3.7962469067036147`*^9}, {3.7962471884071465`*^9, 3.796247234334899*^9}, {
   3.79624751719641*^9, 3.796247520910477*^9}, {3.7962480740051236`*^9, 
   3.796248900223569*^9}, {3.7962489486988983`*^9, 3.7962489934674997`*^9}, {
   3.7962490566221437`*^9, 3.796249057037035*^9}, {3.796249125878837*^9, 
   3.7962491266916924`*^9}, {3.796249252212809*^9, 3.7962492531324167`*^9}, {
   3.796250199654121*^9, 3.79625021176692*^9}, {3.796250252074299*^9, 
   3.7962503292017612`*^9}, {3.7962503956509256`*^9, 3.79625042321773*^9}, {
   3.79625051739081*^9, 3.7962505511164885`*^9}, {3.796250594265089*^9, 
   3.7962508726528025`*^9}, {3.796285763406014*^9, 3.796285883048278*^9}, {
   3.796285958134812*^9, 3.79628597937353*^9}, {3.796286050092842*^9, 
   3.7962861692927537`*^9}, {3.7962862403924227`*^9, 3.796286257410961*^9}, {
   3.796286308542482*^9, 3.796286398833003*^9}, {3.796286546936864*^9, 
   3.7962867849552994`*^9}, {3.796286822131835*^9, 3.7962868277853365`*^9}, {
   3.796286944939505*^9, 3.7962871378679967`*^9}, {3.796287236546245*^9, 
   3.7962872989185038`*^9}, {3.796287332123867*^9, 3.7962873339882193`*^9}, {
   3.7962873648402357`*^9, 3.796287367979903*^9}, {3.79628742277466*^9, 
   3.7962874230712457`*^9}, {3.7962874563053694`*^9, 
   3.7962874877549753`*^9}, {3.796287968861185*^9, 3.796287990160905*^9}, {
   3.7962881576726856`*^9, 3.7962881936664953`*^9}, {3.7962883662401505`*^9, 
   3.7962884003777723`*^9}, {3.79628848727953*^9, 3.7962885247422533`*^9}, {
   3.796288561371359*^9, 3.796288579404107*^9}, {3.796288610317131*^9, 
   3.7962886376129227`*^9}, {3.7962886693868394`*^9, 3.7962888086664963`*^9}, 
   3.7962889138473425`*^9, {3.796301522475279*^9, 3.7963015393731046`*^9}, {
   3.7963015754895506`*^9, 3.7963016288409214`*^9}, {3.7963016729335423`*^9, 
   3.7963017077913246`*^9}, {3.79630183629854*^9, 3.7963018580381503`*^9}, 
   3.796302761260086*^9, {3.7963028471618657`*^9, 3.796302987694972*^9}, {
   3.7963030198749714`*^9, 3.796303056690548*^9}, {3.7963031438789687`*^9, 
   3.796303147810429*^9}, {3.7963032940277305`*^9, 3.7963033515875454`*^9}, {
   3.7963034430923543`*^9, 3.796303510835788*^9}, {3.7964186936793537`*^9, 
   3.7964188309207025`*^9}, {3.796418876101164*^9, 3.7964189218303413`*^9}, {
   3.796418983318093*^9, 3.796418992210992*^9}, {3.7964190540002747`*^9, 
   3.7964190605368013`*^9}, {3.796419166973012*^9, 3.7964192138937817`*^9}, {
   3.796419280311488*^9, 3.796419406510125*^9}, {3.796419446104274*^9, 
   3.796419462371789*^9}, {3.7964195182074385`*^9, 3.7964195191319666`*^9}, {
   3.7964195513169193`*^9, 3.796419577265793*^9}, {3.7964205597099953`*^9, 
   3.7964205611910353`*^9}, {3.796420597302208*^9, 3.796420651704763*^9}, {
   3.796420761068879*^9, 3.7964207891857185`*^9}, {3.796420867122126*^9, 
   3.7964209470618763`*^9}, {3.7964209839407225`*^9, 
   3.7964210020446815`*^9}, {3.7964215144777565`*^9, 
   3.7964215388957357`*^9}, {3.7964216182880363`*^9, 
   3.7964216193960733`*^9}, {3.7964216790236645`*^9, 3.796421699894867*^9}, {
   3.796421730565874*^9, 3.7964217309209228`*^9}, {3.7964226131551723`*^9, 
   3.796422653149843*^9}, {3.796422690313703*^9, 3.796422859166438*^9}, {
   3.7964231931335135`*^9, 3.7964232727047243`*^9}, {3.796459647289282*^9, 
   3.7964598688197575`*^9}, {3.7964599390564423`*^9, 
   3.7964599452253485`*^9}, {3.7964599782541437`*^9, 
   3.7964600846637316`*^9}, {3.796460125988429*^9, 3.796460164510314*^9}, {
   3.796460226992385*^9, 3.796460246413443*^9}, {3.7964604252063856`*^9, 
   3.796460570746503*^9}, {3.796460901386395*^9, 3.796460965329876*^9}, {
   3.7964864707375507`*^9, 3.7964865157622356`*^9}, {3.796488595179414*^9, 
   3.7964886112784705`*^9}, {3.7964922677446923`*^9, 3.796492307927317*^9}, {
   3.7965051828672256`*^9, 3.796505270381959*^9}, {3.7965053365750785`*^9, 
   3.796505525212034*^9}, {3.796505982078218*^9, 3.796506023858776*^9}, {
   3.796506216869645*^9, 3.7965063158631783`*^9}, {3.796506406538763*^9, 
   3.79650669548698*^9}, {3.7965067994216204`*^9, 3.796506880183631*^9}, {
   3.7965069199463253`*^9, 3.79650697613652*^9}, {3.796507198044503*^9, 
   3.796507329785473*^9}, {3.7965073636389217`*^9, 3.7965074371393747`*^9}, {
   3.7965075776050844`*^9, 3.7965075972794905`*^9}, {3.7965076678537855`*^9, 
   3.7965076960874634`*^9}, {3.796541130884718*^9, 3.7965411315260043`*^9}, {
   3.796543376451048*^9, 3.7965437116560097`*^9}, {3.7965437866505814`*^9, 
   3.7965437911216583`*^9}, {3.7965438262946253`*^9, 3.796543827282984*^9}, {
   3.796544516024746*^9, 3.796544626645251*^9}, {3.7965447612154245`*^9, 
   3.796544763471423*^9}, {3.79654482648411*^9, 3.7965448793567686`*^9}, {
   3.796545040530755*^9, 3.796545078790884*^9}, 3.796569056381018*^9, {
   3.796569099615139*^9, 3.7965691117676916`*^9}, {3.7965692461144066`*^9, 
   3.7965692491167126`*^9}, {3.7965693217132125`*^9, 
   3.7965696541903596`*^9}, {3.7965697069003925`*^9, 
   3.7965697192069063`*^9}, {3.796569775502124*^9, 3.79657029996519*^9}, {
   3.796570341228567*^9, 3.796570443963546*^9}, {3.7965704794136915`*^9, 
   3.796570569886795*^9}, {3.796570608648697*^9, 3.7965706546330824`*^9}, {
   3.7965707767698154`*^9, 3.7965708885149574`*^9}, {3.7965711014898043`*^9, 
   3.79657110239285*^9}, {3.7965711535758286`*^9, 3.796571166859815*^9}, {
   3.7965712252282853`*^9, 3.796571372051051*^9}, {3.796571441594964*^9, 
   3.796571718670603*^9}, {3.79657176051798*^9, 3.796571979763358*^9}, 
   3.796572162400877*^9, {3.7965721958056283`*^9, 3.79657220964779*^9}, 
   3.7965722709509287`*^9, {3.796572312292989*^9, 3.7965723127086124`*^9}, {
   3.7965738479570055`*^9, 3.7965738678013363`*^9}, {3.796573964374275*^9, 
   3.7965739650168333`*^9}, {3.7965740081005373`*^9, 
   3.7965742114280024`*^9}, {3.796574446854739*^9, 3.796574703157114*^9}, {
   3.7965747397352114`*^9, 3.7965747402084208`*^9}, {3.7965747831711507`*^9, 
   3.796574810620813*^9}, {3.796574913575412*^9, 3.7965751526360703`*^9}, {
   3.7965751969370823`*^9, 3.7965752463483906`*^9}, {3.796575360840968*^9, 
   3.796575366396132*^9}, {3.7965754578447742`*^9, 3.7965755188301*^9}, {
   3.7965756728976355`*^9, 3.7965756858041153`*^9}, {3.796575716757785*^9, 
   3.796575735872986*^9}, {3.796577114692107*^9, 3.796577154700125*^9}, {
   3.796577186493155*^9, 3.796577216674469*^9}, {3.7965772550189915`*^9, 
   3.7965776123388023`*^9}, {3.7965776780167036`*^9, 3.796577731953215*^9}, {
   3.7965778850957155`*^9, 3.796578018871765*^9}, {3.7965791407391567`*^9, 
   3.7965791415450315`*^9}, {3.796579343396087*^9, 3.7965793457980833`*^9}, {
   3.7965799906745567`*^9, 3.7965800035857697`*^9}, {3.796580041817093*^9, 
   3.796580051469291*^9}, {3.796580093830989*^9, 3.7965800968260612`*^9}, {
   3.796580133777273*^9, 3.7965802105534325`*^9}, {3.7965802554559746`*^9, 
   3.796580381713509*^9}, {3.796580440405631*^9, 3.796580479765377*^9}, {
   3.7965805645902753`*^9, 3.796580640703131*^9}, {3.796580775101472*^9, 
   3.7965807782939095`*^9}, {3.7965808108316975`*^9, 
   3.7965808178149996`*^9}, {3.7965808628189683`*^9, 3.796580907908276*^9}, {
   3.796580943149064*^9, 3.796581051390774*^9}, {3.7965810915663686`*^9, 
   3.7965811322127123`*^9}, {3.796581175557474*^9, 3.796581192677536*^9}, {
   3.7965812471618776`*^9, 3.7965812501976833`*^9}, {3.7965815162579107`*^9, 
   3.796581530339266*^9}, {3.7965816043138084`*^9, 3.7965816234271183`*^9}, {
   3.796581731342648*^9, 3.796581899443341*^9}, {3.796581954754119*^9, 
   3.7965820739493704`*^9}, {3.796586315817582*^9, 3.796586346714115*^9}, {
   3.7965863832147064`*^9, 3.7965864151370583`*^9}, {3.7965921787033744`*^9, 
   3.7965921943212204`*^9}, {3.796623593133932*^9, 3.7966235978712673`*^9}, {
   3.7966236315462704`*^9, 3.7966236337988586`*^9}, {3.796623697692604*^9, 
   3.796623700810272*^9}, {3.7966243630696955`*^9, 3.796624456717367*^9}, {
   3.7966244896463056`*^9, 3.7966245354069543`*^9}, {3.7966272472253504`*^9, 
   3.7966273143540583`*^9}, {3.7966274110261383`*^9, 
   3.7966275054494395`*^9}, {3.796627566499704*^9, 3.7966275837608542`*^9}, {
   3.796627692968063*^9, 3.796627729637039*^9}, {3.7966277638803606`*^9, 
   3.7966278643046*^9}, {3.796627952900181*^9, 3.796628052683872*^9}, {
   3.796628120144475*^9, 3.7966281961340265`*^9}, {3.796628230554008*^9, 
   3.7966282442892885`*^9}, {3.796628464373227*^9, 3.796628496959117*^9}, {
   3.7966287197206497`*^9, 3.796628723108593*^9}, {3.7966288795565195`*^9, 
   3.7966289022587976`*^9}, {3.7966325843109283`*^9, 3.796632624979912*^9}, {
   3.7966327260098467`*^9, 3.796632753250744*^9}, {3.7966328100569067`*^9, 
   3.796633188575094*^9}, {3.7966332283021855`*^9, 3.7966332301612453`*^9}, {
   3.7966332700147457`*^9, 3.7966332897370195`*^9}, {3.796633427144767*^9, 
   3.796633445223324*^9}, {3.7966335293632035`*^9, 3.796633563430286*^9}, {
   3.7966337410797186`*^9, 3.796633743972954*^9}, {3.7966338169070005`*^9, 
   3.7966338317133884`*^9}, {3.796633959724335*^9, 3.7966345655394278`*^9}, {
   3.7966346172741203`*^9, 3.7966346358928185`*^9}, {3.7966346714159813`*^9, 
   3.7966346716762547`*^9}, {3.796634712548986*^9, 3.796634737784952*^9}, {
   3.7966350847947645`*^9, 3.7966352889274626`*^9}, {3.7966390696188126`*^9, 
   3.796639283107706*^9}, {3.79663937024933*^9, 3.7966393715607967`*^9}, {
   3.7966503780322123`*^9, 3.7966506194475875`*^9}, {3.796650670118305*^9, 
   3.7966506761851063`*^9}, {3.796658145761956*^9, 3.796658148666192*^9}, {
   3.7966746525685177`*^9, 3.7966747015454993`*^9}, {3.7966747849855475`*^9, 
   3.7966748178704753`*^9}, {3.7966748885389013`*^9, 
   3.7966749235243435`*^9}, {3.7966751913240414`*^9, 
   3.7966752469178534`*^9}, {3.7969295231016817`*^9, 
   3.7969295234038467`*^9}, {3.7970987699874887`*^9, 
   3.7970990290222673`*^9}, {3.797099108094898*^9, 3.7970993178741264`*^9}, {
   3.7970993541951523`*^9, 3.7970999106019807`*^9}, {3.797099960990945*^9, 
   3.797100167875774*^9}, {3.797100249895567*^9, 3.797100551505145*^9}, {
   3.797100735415597*^9, 3.797101011902814*^9}, 3.7971011783344135`*^9, {
   3.7971019439705205`*^9, 3.797101948882393*^9}, {3.7971019883569207`*^9, 
   3.797102140948409*^9}, {3.7971045741023407`*^9, 3.797104583307074*^9}, {
   3.797150878101757*^9, 3.7971508977822666`*^9}, {3.797180431235553*^9, 
   3.7971806158862686`*^9}, {3.7971807323639402`*^9, 
   3.7971807643654137`*^9}, {3.797180845321081*^9, 3.7971808988081317`*^9}, {
   3.7971809761364346`*^9, 3.797180991945213*^9}, {3.7971810481958485`*^9, 
   3.797181111067849*^9}, {3.7971812259281435`*^9, 3.797181234572014*^9}, {
   3.7971816776294794`*^9, 3.7971817073054795`*^9}, {3.797181746769038*^9, 
   3.7971817509059534`*^9}, {3.797181931903815*^9, 3.7971820080404034`*^9}, {
   3.7971820531909943`*^9, 3.7971820828030167`*^9}, {3.7971821355725665`*^9, 
   3.7971821383730507`*^9}, {3.7971874322782946`*^9, 3.797187492576584*^9}, {
   3.797187572331378*^9, 3.797187617303149*^9}, {3.797187737757238*^9, 
   3.7971877473266907`*^9}, {3.797187790241967*^9, 3.79718783597239*^9}, {
   3.797187917935365*^9, 3.7971879889752073`*^9}, 3.7971880617356253`*^9, {
   3.797188186660636*^9, 3.7971882659966826`*^9}, {3.797188303871491*^9, 
   3.79718830828244*^9}, {3.7971883536741147`*^9, 3.7971883604709773`*^9}, {
   3.797188435568676*^9, 3.797188450282352*^9}, {3.797188585348561*^9, 
   3.797188586487517*^9}, {3.7971886364988832`*^9, 3.7971888052341304`*^9}, {
   3.7971890734694357`*^9, 3.797189113379778*^9}, {3.7971891863207455`*^9, 
   3.797189216106498*^9}, {3.797189276118269*^9, 3.7971892763566656`*^9}, {
   3.797189371103175*^9, 3.797189377134058*^9}, {3.7971894382517138`*^9, 
   3.797189459834031*^9}, {3.797189491409648*^9, 3.797189507127348*^9}, {
   3.7971895377056236`*^9, 3.797189593653076*^9}, {3.7971896360977364`*^9, 
   3.7971896418264875`*^9}, {3.797189720284472*^9, 3.7971898787417955`*^9}, {
   3.7971899273169737`*^9, 3.7971900406628284`*^9}, {3.797445470990526*^9, 
   3.7974454936279335`*^9}, {3.797445568225542*^9, 3.7974456122902746`*^9}, {
   3.7974472590520906`*^9, 3.797447423363533*^9}, {3.797452017540442*^9, 
   3.7974520480089073`*^9}, {3.797452092420167*^9, 3.7974521184764137`*^9}, {
   3.7974524962191334`*^9, 3.797452526776108*^9}, {3.7974530358957195`*^9, 
   3.7974530405807395`*^9}, {3.7974530821870556`*^9, 
   3.7974531344982452`*^9}, {3.797453164986616*^9, 3.7974531782470126`*^9}, {
   3.7974532314920435`*^9, 3.79745346538624*^9}, {3.797453498237634*^9, 
   3.797453522745597*^9}, {3.797453634571501*^9, 3.7974536868373675`*^9}, {
   3.7974538646441116`*^9, 3.7974538803302107`*^9}, {3.7974539519594235`*^9, 
   3.7974540443172307`*^9}, {3.7974540982050266`*^9, 3.797454125404237*^9}, {
   3.797454328919592*^9, 3.7974546006153016`*^9}, {3.7974547139501657`*^9, 
   3.7974547637697983`*^9}, {3.7974982848027368`*^9, 3.797498340521793*^9}, {
   3.797498374101049*^9, 3.7974985366017494`*^9}, {3.797498567936037*^9, 
   3.79749858186724*^9}, {3.7974986415312104`*^9, 3.7974986594716153`*^9}, {
   3.7974987267218847`*^9, 3.7974988121695127`*^9}, {3.7974989105247393`*^9, 
   3.79749891514536*^9}, {3.797498989523577*^9, 3.7974990174489436`*^9}, {
   3.79750046027209*^9, 3.797500584876051*^9}, 3.7975009209438443`*^9, {
   3.7975009523409004`*^9, 3.797500962268368*^9}, {3.797501005011134*^9, 
   3.7975010603492856`*^9}, {3.7975013958234844`*^9, 
   3.7975015254653535`*^9}, {3.797501656249634*^9, 3.7975020025213933`*^9}, {
   3.7975020500618424`*^9, 3.7975020526286907`*^9}, {3.7975021821397285`*^9, 
   3.7975021861365104`*^9}, 3.7975022553523293`*^9, {3.797502285768503*^9, 
   3.7975023264783707`*^9}, {3.7975024277723813`*^9, 
   3.7975024618613234`*^9}, {3.7975025347945395`*^9, 
   3.7975027913926196`*^9}, {3.7975035126122713`*^9, 3.797503531796384*^9}, {
   3.797503601052469*^9, 3.7975036239113007`*^9}, {3.7975037305299244`*^9, 
   3.797503792816523*^9}, {3.79750382934645*^9, 3.797503830387433*^9}, {
   3.79750386424807*^9, 3.797503899669445*^9}, {3.7975039444597473`*^9, 
   3.797503944877452*^9}, {3.797506271291064*^9, 3.7975062837139544`*^9}, {
   3.7975063404703164`*^9, 3.797506475975321*^9}, {3.7975065069717345`*^9, 
   3.797506561586669*^9}, {3.7975066343625526`*^9, 3.79750678287381*^9}, {
   3.797506822871374*^9, 3.797506851186972*^9}, {3.7975073663221493`*^9, 
   3.7975074628123107`*^9}, {3.797507579446737*^9, 3.7975075896723986`*^9}, {
   3.7975076542992754`*^9, 3.7975077178358383`*^9}, {3.7975077754226685`*^9, 
   3.797507834082013*^9}, {3.797508014009534*^9, 3.797508363207235*^9}, 
   3.797508809631878*^9, {3.797509118574527*^9, 3.7975092322482557`*^9}, {
   3.7975092678193693`*^9, 3.7975092946384397`*^9}, 3.797509401576129*^9, {
   3.797509584941084*^9, 3.7975096629083557`*^9}, {3.797509707527404*^9, 
   3.7975098389253387`*^9}, {3.7975098712792807`*^9, 
   3.7975098762030106`*^9}, {3.797509975938993*^9, 3.7975100956802034`*^9}, {
   3.797511347409422*^9, 3.797511459547288*^9}, {3.7975115007054777`*^9, 
   3.79751150112339*^9}, {3.7975207029196916`*^9, 3.7975207663941717`*^9}, {
   3.7975208942297554`*^9, 3.797520985606168*^9}, {3.797521028684859*^9, 
   3.7975212380724044`*^9}, {3.7975214052187805`*^9, 3.797521605234518*^9}, {
   3.7975217725295315`*^9, 3.7975219809396095`*^9}, {3.797522017650155*^9, 
   3.79752227438282*^9}, {3.7975223297176237`*^9, 3.7975229505793056`*^9}, {
   3.797523043916171*^9, 3.7975231953981514`*^9}, 3.7975232347793255`*^9, {
   3.7975235475166817`*^9, 3.7975236674752197`*^9}, {3.7975237103676815`*^9, 
   3.7975237254198956`*^9}, {3.79752376434391*^9, 3.7975238633462477`*^9}, {
   3.797523909767912*^9, 3.7975239334088593`*^9}, {3.7975240420788507`*^9, 
   3.7975241877527156`*^9}, {3.797524235972376*^9, 3.797524653590737*^9}, {
   3.797524848943405*^9, 3.797524913691028*^9}, {3.797525076414421*^9, 
   3.7975250772801065`*^9}, {3.7975259851637297`*^9, 
   3.7975265643268237`*^9}, {3.797526711962632*^9, 3.797526750688095*^9}, {
   3.7975269945347404`*^9, 3.7975274499147496`*^9}, {3.7975275429507494`*^9, 
   3.7975275477846804`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"makeCtrlCol", "[", "ctrls_", "]"}], ":=", 
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"First", "@", "ctrls"}], ",", "Bold", ",", "Medium"}], "]"}],
        ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"Rest", "[", "ctrls", "]"}]}]}], "}"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Right"}], ",", 
     RowBox[{"BaselinePosition", "\[Rule]", "1"}]}], "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", "pr", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"pr", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "a"}], "-", "xslack"}], ",", 
           RowBox[{"a", "+", "xslack"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "-", "yslack"}], ",", 
           RowBox[{"1", "+", "yslack"}]}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"drawPolyCausticInner", "[", 
         RowBox[{"a", ",", "n", ",", "tDeg", ",", "\[IndentingNewLine]", 
          RowBox[{"drPs", "\[Rule]", "drPs0"}], ",", 
          RowBox[{"drThs", "\[Rule]", "drThs0"}], ",", 
          RowBox[{"drPhis", "\[Rule]", "drPhis0"}], ",", 
          RowBox[{"drPsis", "\[Rule]", "drPsis0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"drOrbit", "\[Rule]", "drOrbit0"}], ",", 
          RowBox[{"drCaustic", "\[Rule]", "drCaustic0"}], ",", 
          RowBox[{"drOuter", "\[Rule]", "drExc0"}], ",", 
          RowBox[{"drInner", "\[Rule]", "drInner0"}], ",", 
          RowBox[{"drFoci", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
          RowBox[{"drFocusPedalPolys", "\[Rule]", "drFocusPedalPolys0"}], ",", 
          RowBox[{"drFocusPedals", "\[Rule]", "drFocusPedals0"}], ",", 
          RowBox[{"drFocusExcPedals", "\[Rule]", "drFocusExcPedals0"}], ",", 
          RowBox[{"drFocusInnerPedals", "\[Rule]", "drFocusInnerPedals0"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
          "drFocusAntipedalPolys", "\[Rule]", "drFocusAntipedalPolys0"}], ",", 
          RowBox[{"drAntipedalQLines", "\[Rule]", "drAntipedalQLines0"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"drFocusAntipedals", "\[Rule]", "drFocusAntipedals0"}], ",", 
          RowBox[{
          "drFocusExcAntipedals", "\[Rule]", "drFocusExcAntipedals0"}], ",", 
          RowBox[{
          "drFocusInnerAntipedals", "\[Rule]", "drFocusInnerAntipedals0"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"drMidPedals", "\[Rule]", "drMidPedals0"}], ",", 
          RowBox[{"drMidExcPedals", "\[Rule]", "drMidExcPedals0"}], ",", 
          RowBox[{"drMidInnerPedals", "\[Rule]", "drMidInnerPedals0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"drCentroids", "\[Rule]", "drCentroids0"}], ",", 
          RowBox[{"drPerCentroids", "\[Rule]", "drPerCentroids0"}], ",", 
          RowBox[{"drAreaCentroids", "\[Rule]", "drAreaCentroids0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"drMidPedalRatios", "\[Rule]", "drMidPedalRatios0"}], ",", 
          RowBox[{
          "drMidAntipedalRatios", "\[Rule]", "drMidAntipedalRatios0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"drBasicCentroids", "\[Rule]", "drBasicCentroids0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"midParamX", "\[Rule]", "tMidX"}], ",", 
          RowBox[{"midParamY", "\[Rule]", "tMidY"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"drPlAreas", "\[Rule]", "drPlAreas0"}], ",", 
          RowBox[{"drPlShort", "\[Rule]", "drPlShort0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"drMongeCircle", "\[Rule]", "drMongeCircle0"}], ",", 
          RowBox[{"drMidAntipedals", "->", "drMidAntipedals0"}], ",", 
          RowBox[{"drMidExcAntipedals", "->", "drMidExcAntipedals0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"drMidInnerAntipedals", "->", "drMidInnerAntipedals0"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"drPedalPolys", "\[Rule]", "drPedalPolys0"}], ",", 
          RowBox[{"drAntipedalPolys", "\[Rule]", "drAntipedalPolys0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"drFocusPedalCircle", "\[Rule]", "drFocusPedalCircle0"}], 
          ",", 
          RowBox[{
          "drFocusExcPedalCircle", "\[Rule]", "drFocusExcPedalCircle0"}], ",", 
          RowBox[{
          "drFocusInnerPedalCircle", "\[Rule]", "drFocusInnerPedalCircle0"}], 
          ",", 
          RowBox[{"drConwayCircle", "\[Rule]", "drConwayCircle0"}], ",", 
          RowBox[{"drStachelLsRs", "\[Rule]", "drStachelLsRs0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"fontSize", "\[Rule]", "14"}], ",", 
          RowBox[{"lgt", "\[Rule]", "lgt0"}], ",", 
          RowBox[{"digs", "\[Rule]", "5"}]}], "\[IndentingNewLine]", "]"}], 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", "pr"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<N-Periodics in the Elliptic Billiard:\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "@", "Red"}], ",", "16"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Pedal Polygon Invariants\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "@", "Red"}], ",", "16"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<D. Reznik + R. Garcia + J. Koiller, April, 2020\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "12"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"(*", "1.38674", "*)"}], "1.5"}], "}"}], ",", "1.01", ",", 
       "5", ",", ".01", ",", 
       RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tDeg", ",", "10."}], "}"}], ",", 
       RowBox[{"-", "360"}], ",", "360", ",", ".05", ",", 
       RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Row", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"n", ",", "5"}], "}"}], ",", 
           RowBox[{"Range", "[", 
            RowBox[{"3", ",", "16"}], "]"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"xslack", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", ".05", ",", ".1", ",", ".25", ",", ".5", ",", "1", ",", 
             "2", ",", "3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"yslack", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", ".05", ",", ".1", ",", ".25", ",", ".5", ",", "1", ",", 
             "2", ",", "3", ",", "4"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"lgt0", ",", ".1", ",", "\"\<lgt\>\""}], "}"}], ",", "0", ",",
        ".5", ",", ".01"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"makeCtrlCol", "/@", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<basic\>\"", ",", "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"drOrbit0", ",", "True", ",", "\"\<orbit\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"drExc0", ",", "False", ",", "\"\<outer\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"drInner0", ",", "False", ",", "\"\<inner\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drCaustic0", ",", "False", ",", "\"\<caustic\>\""}], "}"}],
                  ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\"\<pedals\>\"", ",", "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drMidPedals0", ",", "False", ",", "\"\<mid->orbit\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drMidExcPedals0", ",", "False", ",", 
                   "\"\<mid->outer\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drMidInnerPedals0", ",", "False", ",", 
                   "\"\<mid->inner\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drPedalPolys0", ",", "False", ",", "\"\<polys\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drMidPedalRatios0", ",", "False", ",", "\"\<ratio3\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"this", " ", "should", " ", "disappear"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\"\<polygons\>\"", ",", "\[IndentingNewLine]", 
                RowBox[{"Control", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "drMidArea0", ",", "False", ",", "\"\<mid->orbit\>\""}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Control", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "drMidExcArea0", ",", "False", ",", 
                    "\"\<mid->outer\>\""}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Control", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "drMidInnerArea0", ",", "False", ",", 
                    "\"\<mid->inner\>\""}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}]}], 
               "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\"\<antipedals\>\"", ",", "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drMidAntipedals0", ",", "False", ",", 
                   "\"\<mid->orbit\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drMidExcAntipedals0", ",", "False", ",", 
                   "\"\<mid->outer\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drMidInnerAntipedals0", ",", "False", ",", 
                   "\"\<mid->inner\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drAntipedalPolys0", ",", "False", ",", "\"\<polys\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drMidAntipedalRatios0", ",", "False", ",", 
                   "\"\<ratio3\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\"\<centroids\>\"", ",", "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drCentroids0", ",", "False", ",", "\"\<vertex\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drPerCentroids0", ",", "False", ",", 
                   "\"\<perimeater\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drAreaCentroids0", ",", "False", ",", "\"\<area\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drBasicCentroids0", ",", "False", ",", "\"\<basic\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\"\<labels\>\"", ",", "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"drPs0", ",", "False", ",", "\"\<Ps\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"drPlAreas0", ",", "False", ",", "\"\<areas\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drPlShort0", ",", "True", ",", "\"\<labs short\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drThs0", ",", "False", ",", 
                   "\"\<poly \!\(\*SubscriptBox[\(\[Theta]\), \(i\)]\)\>\""}],
                   "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drPhis0", ",", "False", ",", 
                   "\"\<star \!\(\*SubscriptBox[\(\[Phi]\), \(i\)]\)\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drPsis0", ",", "False", ",", 
                   "\"\<derived \!\(\*SubscriptBox[\(\[Psi]\), \
\(i\)]\)\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\"\<foci pedals\>\"", ",", "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drFocusPedals0", ",", "False", ",", "\"\<orbit\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drFocusExcPedals0", ",", "False", ",", "\"\<outer\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drFocusInnerPedals0", ",", "False", ",", "\"\<inner\>\""}],
                   "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drFocusPedalPolys0", ",", "False", ",", "\"\<polys\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\"\<foci antipedals\>\"", ",", "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drFocusAntipedals0", ",", "False", ",", "\"\<orbit\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drFocusExcAntipedals0", ",", "False", ",", 
                   "\"\<outer\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drFocusInnerAntipedals0", ",", "False", ",", 
                   "\"\<inner\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drFocusAntipedalPolys0", ",", "False", ",", 
                   "\"\<polys\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drAntipedalQLines0", ",", "False", ",", 
                   "\"\<q lines\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\"\<misc\>\"", ",", "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drMongeCircle0", ",", "False", ",", "\"\<monge circ\>\""}],
                   "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drFocusPedalCircle0", ",", "False", ",", 
                   "\"\<focus orbit circ\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drFocusExcPedalCircle0", ",", "False", ",", 
                   "\"\<focus outer circ\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drFocusInnerPedalCircle0", ",", "False", ",", 
                   "\"\<focus inner circ\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drConwayCircle0", ",", "False", ",", 
                   "\"\<conway spokes\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "drStachelLsRs0", ",", "False", ",", 
                   "\"\<Stachel Ls,Rs\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}]}], 
             "}"}]}], "\[IndentingNewLine]", "}"}]}], ")"}], "//", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{"#", ",", "4"}], "]"}], "&"}]}], ",", 
       RowBox[{"Spacings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}]}], ",", 
       RowBox[{"Alignment", "\[Rule]", "Right"}], ",", 
       RowBox[{"Frame", "\[Rule]", "All"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Lighter", "@", "Gray"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tMidX", ",", ".5"}], "}"}], ",", 
       RowBox[{"-", "2"}], ",", "2", ",", ".01", ",", 
       RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tMidY", ",", ".25"}], "}"}], ",", 
       RowBox[{"-", "2"}], ",", "2", ",", ".01", ",", 
       RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Row", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Button", "[", 
         RowBox[{"\"\<Center\>\"", ",", 
          RowBox[{
           RowBox[{"tMidX", "=", "0"}], ";", 
           RowBox[{"tMidY", "=", "0"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<f1\>\"", ",", 
          RowBox[{
           RowBox[{"tMidX", "=", 
            RowBox[{"-", "1"}]}], ";", 
           RowBox[{"tMidY", "=", "0"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<f2\>\"", ",", 
          RowBox[{
           RowBox[{"tMidX", "=", "1"}], ";", 
           RowBox[{"tMidY", "=", "0"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<q1\>\"", ",", 
          RowBox[{
           RowBox[{"tMidX", "=", ".5"}], ";", 
           RowBox[{"tMidY", "=", ".25"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "}"}], "]"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"ControlPlacement", "\[Rule]", "Left"}], ",", 
     RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7959588274447174`*^9, 3.7959589142056828`*^9}, {
   3.795958992925887*^9, 3.795959035671522*^9}, {3.795959138628606*^9, 
   3.795959192285137*^9}, {3.795959228965958*^9, 3.795959233054019*^9}, {
   3.7959592735826*^9, 3.795959282305558*^9}, {3.795960048519774*^9, 
   3.795960078599554*^9}, {3.795960222803627*^9, 3.795960226084242*^9}, {
   3.7959604673335304`*^9, 3.795960467661479*^9}, {3.7959605389150276`*^9, 
   3.795960555434786*^9}, {3.7959606364992123`*^9, 3.795960652291564*^9}, {
   3.795960687428231*^9, 3.7959606925966578`*^9}, {3.7959614912503967`*^9, 
   3.7959614913715515`*^9}, {3.795961925739149*^9, 3.79596192598234*^9}, {
   3.795961962146849*^9, 3.7959619625395217`*^9}, {3.795964231748247*^9, 
   3.7959642446262846`*^9}, 3.7959643857335987`*^9, {3.795964535947462*^9, 
   3.795964536268076*^9}, {3.795964567667094*^9, 3.7959645963315587`*^9}, {
   3.7959652749057474`*^9, 3.795965276140108*^9}, {3.7959654304339275`*^9, 
   3.7959654316768064`*^9}, {3.795966348506113*^9, 3.7959663514894714`*^9}, {
   3.7960705035795*^9, 3.7960705132007647`*^9}, {3.7960723089354362`*^9, 
   3.796072334519501*^9}, {3.7960723770238266`*^9, 3.7960723812086287`*^9}, {
   3.79607246668051*^9, 3.7960724724008474`*^9}, {3.796073125191742*^9, 
   3.796073125256762*^9}, {3.7960750195049067`*^9, 3.7960750442380238`*^9}, {
   3.7960752594633365`*^9, 3.7960753071350245`*^9}, {3.7960754582866817`*^9, 
   3.796075495319105*^9}, {3.7960755575421953`*^9, 3.7960755578559055`*^9}, {
   3.796108893881178*^9, 3.7961089144957094`*^9}, {3.7961095150633984`*^9, 
   3.79610951545835*^9}, {3.7961098826632285`*^9, 3.7961099186079025`*^9}, {
   3.7961103390492783`*^9, 3.7961103401668396`*^9}, {3.7961124605185924`*^9, 
   3.796112460830963*^9}, {3.7961128188218584`*^9, 3.7961128408934216`*^9}, {
   3.7961304459465847`*^9, 3.7961304632820635`*^9}, {3.7961308688816757`*^9, 
   3.7961308963622103`*^9}, {3.796131833811469*^9, 3.7961318340590696`*^9}, {
   3.796131886155775*^9, 3.796131886426911*^9}, {3.796132833896882*^9, 
   3.7961328877307825`*^9}, {3.796133266033456*^9, 3.7961332845240717`*^9}, {
   3.796133357906643*^9, 3.796133376873727*^9}, {3.796133435385298*^9, 
   3.796133435586379*^9}, {3.7961342730414405`*^9, 3.7961342843853207`*^9}, {
   3.7961368302874813`*^9, 3.7961368520237637`*^9}, {3.7961368855139894`*^9, 
   3.7961369553518553`*^9}, {3.796137246009532*^9, 3.79613728568069*^9}, {
   3.796142953418579*^9, 3.796142970306413*^9}, {3.7961430662207623`*^9, 
   3.7961430840600543`*^9}, {3.7961433764413567`*^9, 3.796143382242843*^9}, {
   3.7961434733691854`*^9, 3.796143473865861*^9}, {3.796205779684286*^9, 
   3.7962057833222413`*^9}, {3.7962063958183956`*^9, 3.796206400307202*^9}, {
   3.796206458194123*^9, 3.7962064617853823`*^9}, {3.796207412777235*^9, 
   3.796207420938578*^9}, {3.7962075315844097`*^9, 3.796207535434641*^9}, {
   3.7962156470497007`*^9, 3.79621571199551*^9}, {3.796216386820698*^9, 
   3.7962163965715904`*^9}, {3.7962164292370768`*^9, 3.796216429637036*^9}, {
   3.7962258232388496`*^9, 3.796225825932645*^9}, {3.7962340011349683`*^9, 
   3.7962340018338237`*^9}, {3.7962457032715645`*^9, 
   3.7962457048251886`*^9}, {3.7962457373659945`*^9, 
   3.7962461253925533`*^9}, {3.7962461839434776`*^9, 
   3.7962461953350077`*^9}, {3.7962462512068796`*^9, 3.796246278258346*^9}, {
   3.796246353383045*^9, 3.7962464054390697`*^9}, {3.796246509529355*^9, 
   3.7962465927586927`*^9}, {3.7962466520631366`*^9, 
   3.7962466739938264`*^9}, {3.7962469211190896`*^9, 3.796246929329722*^9}, {
   3.7962476634321575`*^9, 3.796247669303817*^9}, {3.796247726226528*^9, 
   3.796247730672017*^9}, {3.796247796534465*^9, 3.796247826457438*^9}, {
   3.7962478751264954`*^9, 3.796248002369403*^9}, {3.796249333768508*^9, 
   3.796249349750841*^9}, {3.7962501312863235`*^9, 3.7962501888859196`*^9}, {
   3.796251035123796*^9, 3.796251109740054*^9}, {3.796251203584174*^9, 
   3.796251244924877*^9}, {3.796251275404582*^9, 3.796251326886119*^9}, {
   3.7962514172322435`*^9, 3.796251484134329*^9}, {3.7962516444306755`*^9, 
   3.7962517546054015`*^9}, {3.7962519797678137`*^9, 3.79625198228608*^9}, {
   3.7962865042763863`*^9, 3.79628654106158*^9}, {3.7962868555201597`*^9, 
   3.796286895718814*^9}, {3.7962875300782647`*^9, 3.7962876512469797`*^9}, {
   3.796287698253602*^9, 3.796287913776966*^9}, {3.7962880167952795`*^9, 
   3.7962880551275444`*^9}, {3.796288101659966*^9, 3.796288127438413*^9}, {
   3.796288201561407*^9, 3.7962882439128323`*^9}, {3.796294182304778*^9, 
   3.7962941840347257`*^9}, {3.7962942495277014`*^9, 3.796294257429512*^9}, {
   3.7963017598331966`*^9, 3.7963018226470356`*^9}, {3.7963018742119074`*^9, 
   3.796301922785574*^9}, {3.7963032228012853`*^9, 3.7963032849190817`*^9}, {
   3.796303366537113*^9, 3.7963034084495597`*^9}, {3.796303629200904*^9, 
   3.796303629585908*^9}, {3.7963215820247765`*^9, 3.796321582241173*^9}, {
   3.796420474889146*^9, 3.796420544358039*^9}, {3.796420577728795*^9, 
   3.7964205809928083`*^9}, {3.796420805791325*^9, 3.7964208215463314`*^9}, {
   3.796422572942705*^9, 3.7964226031270103`*^9}, {3.796422875303296*^9, 
   3.7964228920490475`*^9}, {3.7964238285105934`*^9, 3.796423884802123*^9}, {
   3.796424387896143*^9, 3.7964245238736205`*^9}, {3.796424587067706*^9, 
   3.796424607247607*^9}, {3.7964599015714216`*^9, 3.796459920845434*^9}, {
   3.7964601825308933`*^9, 3.7964601925642557`*^9}, {3.796492331832338*^9, 
   3.796492362459257*^9}, {3.79650559644557*^9, 3.796505831253986*^9}, {
   3.796505878066385*^9, 3.7965058817165966`*^9}, {3.7965061727505646`*^9, 
   3.7965061899525766`*^9}, {3.796506328094447*^9, 3.7965063284415474`*^9}, {
   3.796506728046937*^9, 3.796506730982087*^9}, {3.7965437373560147`*^9, 
   3.796543760869368*^9}, {3.7965444451714883`*^9, 3.796544502455024*^9}, {
   3.7965446434932384`*^9, 3.7965446594720154`*^9}, {3.7965447177342567`*^9, 
   3.796544720513309*^9}, {3.796545086363962*^9, 3.7965451222837777`*^9}, {
   3.796547298788603*^9, 3.79654732609629*^9}, {3.796570948582877*^9, 
   3.796571019728511*^9}, {3.796573182543832*^9, 3.796573196512583*^9}, {
   3.7965760254891524`*^9, 3.7965760259529114`*^9}, {3.7965761072196245`*^9, 
   3.79657610740117*^9}, {3.7965781938677254`*^9, 3.796578240225006*^9}, 
   3.796579853995299*^9, {3.7965798935887856`*^9, 3.7965799796669807`*^9}, 
   3.796580028617386*^9, {3.7965805345443854`*^9, 3.7965805525006013`*^9}, {
   3.7965812233336096`*^9, 3.7965812372853107`*^9}, {3.79658130018673*^9, 
   3.796581403429965*^9}, {3.796586282204472*^9, 3.7965862923992176`*^9}, {
   3.796586356107004*^9, 3.796586360076088*^9}, {3.796586425251611*^9, 
   3.7965864255078955`*^9}, {3.7966269705263453`*^9, 
   3.7966271163586426`*^9}, {3.796627157462323*^9, 3.7966271958557005`*^9}, {
   3.7966279017270365`*^9, 3.796627910206339*^9}, {3.7966283822871666`*^9, 
   3.7966283862710733`*^9}, {3.796628794970478*^9, 3.796628835082388*^9}, {
   3.7966324355590096`*^9, 3.79663250302721*^9}, {3.796632538293928*^9, 
   3.796632575594203*^9}, {3.7966337702008667`*^9, 3.7966337712969065`*^9}, {
   3.7966369834096155`*^9, 3.796636985092146*^9}, {3.7966390285369453`*^9, 
   3.7966390640057898`*^9}, 3.796649883428255*^9, {3.796650628127507*^9, 
   3.7966506521922045`*^9}, 3.7966507142897615`*^9, {3.796658429620926*^9, 
   3.796658440696294*^9}, {3.797101908602705*^9, 3.7971019352059727`*^9}, {
   3.7971045981053066`*^9, 3.7971045987286406`*^9}, {3.797181434783069*^9, 
   3.797181463975052*^9}, {3.797181886254821*^9, 3.797181915982278*^9}, {
   3.797182023863858*^9, 3.7971820318555*^9}, {3.797184202298918*^9, 
   3.7971842109919133`*^9}, {3.7971880914063034`*^9, 
   3.7971880927280564`*^9}, {3.797188919752042*^9, 3.797188936743658*^9}, {
   3.7971891695396843`*^9, 3.7971891850481453`*^9}, 3.797189216131431*^9, {
   3.7971892760474586`*^9, 3.7971893611647077`*^9}, {3.797447186951234*^9, 
   3.797447243225793*^9}, 3.797447553737255*^9, {3.7974523077846594`*^9, 
   3.7974523754249787`*^9}, {3.7974524099535923`*^9, 3.797452473752483*^9}, {
   3.7974525626322236`*^9, 3.797452644265306*^9}, {3.7974526777191277`*^9, 
   3.7974528081709967`*^9}, {3.7974528523941283`*^9, 3.797452919874322*^9}, {
   3.797452958591442*^9, 3.7974529922862387`*^9}, {3.7974531354752674`*^9, 
   3.7974531781772*^9}, {3.7975093180595856`*^9, 3.7975093830935287`*^9}, {
   3.7975101768384266`*^9, 3.797510177198371*^9}, {3.7975247082201695`*^9, 
   3.7975247127653503`*^9}}],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`pr$$ = {{-2.5, 2.5}, {-2, 2}}}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`a$$ = 
     1.5, $CellContext`drAntipedalPolys0$$ = 
     False, $CellContext`drAntipedalQLines0$$ = 
     False, $CellContext`drAreaCentroids0$$ = 
     True, $CellContext`drBasicCentroids0$$ = 
     False, $CellContext`drCaustic0$$ = False, $CellContext`drCentroids0$$ = 
     True, $CellContext`drConwayCircle0$$ = False, $CellContext`drExc0$$ = 
     False, $CellContext`drFocusAntipedalPolys0$$ = 
     False, $CellContext`drFocusAntipedals0$$ = 
     False, $CellContext`drFocusExcAntipedals0$$ = 
     False, $CellContext`drFocusExcPedalCircle0$$ = 
     False, $CellContext`drFocusExcPedals0$$ = 
     False, $CellContext`drFocusInnerAntipedals0$$ = 
     False, $CellContext`drFocusInnerPedalCircle0$$ = 
     False, $CellContext`drFocusInnerPedals0$$ = 
     False, $CellContext`drFocusPedalCircle0$$ = 
     False, $CellContext`drFocusPedalPolys0$$ = 
     False, $CellContext`drFocusPedals0$$ = False, $CellContext`drInner0$$ = 
     False, $CellContext`drMidAntipedalRatios0$$ = 
     False, $CellContext`drMidAntipedals0$$ = 
     False, $CellContext`drMidExcAntipedals0$$ = 
     False, $CellContext`drMidExcPedals0$$ = 
     True, $CellContext`drMidInnerAntipedals0$$ = 
     False, $CellContext`drMidInnerPedals0$$ = 
     False, $CellContext`drMidPedalRatios0$$ = 
     False, $CellContext`drMidPedals0$$ = 
     False, $CellContext`drMongeCircle0$$ = False, $CellContext`drOrbit0$$ = 
     True, $CellContext`drPedalPolys0$$ = 
     False, $CellContext`drPerCentroids0$$ = True, $CellContext`drPhis0$$ = 
     False, $CellContext`drPlAreas0$$ = False, $CellContext`drPlShort0$$ = 
     True, $CellContext`drPs0$$ = False, $CellContext`drPsis0$$ = 
     False, $CellContext`drStachelLsRs0$$ = False, $CellContext`drThs0$$ = 
     False, $CellContext`lgt0$$ = 0.1, $CellContext`n$$ = 
     5, $CellContext`tDeg$$ = -256.6, $CellContext`tMidX$$ = 
     1, $CellContext`tMidY$$ = 0, $CellContext`xslack$$ = 
     1, $CellContext`yslack$$ = 1, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[
        Style["N-Periodics in the Elliptic Billiard:", {
          RGBColor[
           Rational[2, 3], 0, 0], 16}]], Manipulate`Dump`ThisIsNotAControl}, {
       Hold[
        Style["Pedal Polygon Invariants", {
          RGBColor[
           Rational[2, 3], 0, 0], 16}]], Manipulate`Dump`ThisIsNotAControl}, {
       Hold[
        Style["D. Reznik + R. Garcia + J. Koiller, April, 2020", {
          RGBColor[0, 0, 1], 12}]], Manipulate`Dump`ThisIsNotAControl}, {{
        Hold[$CellContext`a$$], 1.5}, 1.01, 5, 0.01}, {{
        Hold[$CellContext`tDeg$$], 10.}, -360, 360, 0.05}, {{
        Hold[$CellContext`n$$], 5}, {3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
       15, 16}}, {{
        Hold[$CellContext`xslack$$], 1}, {
       0, 0.05, 0.1, 0.25, 0.5, 1, 2, 3, 4}}, {{
        Hold[$CellContext`yslack$$], 1}, {
       0, 0.05, 0.1, 0.25, 0.5, 1, 2, 3, 4}}, {
       Hold[
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          Manipulate`Place[3]}]], Manipulate`Dump`ThisIsNotAControl}, {{
        Hold[$CellContext`lgt0$$], 0.1, "lgt"}, 0, 0.5, 0.01}, {{
        Hold[$CellContext`drOrbit0$$], True, "orbit"}, {True, False}}, {{
        Hold[$CellContext`drExc0$$], False, "outer"}, {True, False}}, {{
        Hold[$CellContext`drInner0$$], False, "inner"}, {True, False}}, {{
        Hold[$CellContext`drCaustic0$$], False, "caustic"}, {True, False}}, {{
        Hold[$CellContext`drMidPedals0$$], False, "mid->orbit"}, {
       True, False}}, {{
        Hold[$CellContext`drMidExcPedals0$$], False, "mid->outer"}, {
       True, False}}, {{
        Hold[$CellContext`drMidInnerPedals0$$], False, "mid->inner"}, {
       True, False}}, {{
        Hold[$CellContext`drPedalPolys0$$], False, "polys"}, {True, False}}, {{
        Hold[$CellContext`drMidPedalRatios0$$], False, "ratio3"}, {
       True, False}}, {{
        Hold[$CellContext`drMidAntipedals0$$], False, "mid->orbit"}, {
       True, False}}, {{
        Hold[$CellContext`drMidExcAntipedals0$$], False, "mid->outer"}, {
       True, False}}, {{
        Hold[$CellContext`drMidInnerAntipedals0$$], False, "mid->inner"}, {
       True, False}}, {{
        Hold[$CellContext`drAntipedalPolys0$$], False, "polys"}, {
       True, False}}, {{
        Hold[$CellContext`drMidAntipedalRatios0$$], False, "ratio3"}, {
       True, False}}, {{
        Hold[$CellContext`drCentroids0$$], False, "vertex"}, {True, False}}, {{
        Hold[$CellContext`drPerCentroids0$$], False, "perimeater"}, {
       True, False}}, {{
        Hold[$CellContext`drAreaCentroids0$$], False, "area"}, {
       True, False}}, {{
        Hold[$CellContext`drBasicCentroids0$$], False, "basic"}, {
       True, False}}, {{
        Hold[$CellContext`drPs0$$], False, "Ps"}, {True, False}}, {{
        Hold[$CellContext`drPlAreas0$$], False, "areas"}, {True, False}}, {{
        Hold[$CellContext`drPlShort0$$], True, "labs short"}, {
       True, False}}, {{
        Hold[$CellContext`drThs0$$], False, 
        "poly \!\(\*SubscriptBox[\(\[Theta]\), \(i\)]\)"}, {True, False}}, {{
        Hold[$CellContext`drPhis0$$], False, 
        "star \!\(\*SubscriptBox[\(\[Phi]\), \(i\)]\)"}, {True, False}}, {{
        Hold[$CellContext`drPsis0$$], False, 
        "derived \!\(\*SubscriptBox[\(\[Psi]\), \(i\)]\)"}, {True, False}}, {{
        Hold[$CellContext`drFocusPedals0$$], False, "orbit"}, {
       True, False}}, {{
        Hold[$CellContext`drFocusExcPedals0$$], False, "outer"}, {
       True, False}}, {{
        Hold[$CellContext`drFocusInnerPedals0$$], False, "inner"}, {
       True, False}}, {{
        Hold[$CellContext`drFocusPedalPolys0$$], False, "polys"}, {
       True, False}}, {{
        Hold[$CellContext`drFocusAntipedals0$$], False, "orbit"}, {
       True, False}}, {{
        Hold[$CellContext`drFocusExcAntipedals0$$], False, "outer"}, {
       True, False}}, {{
        Hold[$CellContext`drFocusInnerAntipedals0$$], False, "inner"}, {
       True, False}}, {{
        Hold[$CellContext`drFocusAntipedalPolys0$$], False, "polys"}, {
       True, False}}, {{
        Hold[$CellContext`drAntipedalQLines0$$], False, "q lines"}, {
       True, False}}, {{
        Hold[$CellContext`drMongeCircle0$$], False, "monge circ"}, {
       True, False}}, {{
        Hold[$CellContext`drFocusPedalCircle0$$], False, 
        "focus orbit circ"}, {True, False}}, {{
        Hold[$CellContext`drFocusExcPedalCircle0$$], False, 
        "focus outer circ"}, {True, False}}, {{
        Hold[$CellContext`drFocusInnerPedalCircle0$$], False, 
        "focus inner circ"}, {True, False}}, {{
        Hold[$CellContext`drConwayCircle0$$], False, "conway spokes"}, {
       True, False}}, {{
        Hold[$CellContext`drStachelLsRs0$$], False, "Stachel Ls,Rs"}, {
       True, False}}, {
       Hold[
        Grid[{{
           Column[{
             Style["basic", Bold, Medium], 
             Manipulate`Place[4], 
             Manipulate`Place[5], 
             Manipulate`Place[6], 
             Manipulate`Place[7]}, Alignment -> Right, BaselinePosition -> 1], 
           Column[{
             Style["pedals", Bold, Medium], 
             Manipulate`Place[8], 
             Manipulate`Place[9], 
             Manipulate`Place[10], 
             Manipulate`Place[11], 
             Manipulate`Place[12]}, Alignment -> Right, BaselinePosition -> 
            1], 
           Column[{
             Style["antipedals", Bold, Medium], 
             Manipulate`Place[13], 
             Manipulate`Place[14], 
             Manipulate`Place[15], 
             Manipulate`Place[16], 
             Manipulate`Place[17]}, Alignment -> Right, BaselinePosition -> 
            1], 
           Column[{
             Style["centroids", Bold, Medium], 
             Manipulate`Place[18], 
             Manipulate`Place[19], 
             Manipulate`Place[20], 
             Manipulate`Place[21]}, Alignment -> Right, BaselinePosition -> 
            1]}, {
           Column[{
             Style["labels", Bold, Medium], 
             Manipulate`Place[22], 
             Manipulate`Place[23], 
             Manipulate`Place[24], 
             Manipulate`Place[25], 
             Manipulate`Place[26], 
             Manipulate`Place[27]}, Alignment -> Right, BaselinePosition -> 
            1], 
           Column[{
             Style["foci pedals", Bold, Medium], 
             Manipulate`Place[28], 
             Manipulate`Place[29], 
             Manipulate`Place[30], 
             Manipulate`Place[31]}, Alignment -> Right, BaselinePosition -> 
            1], 
           Column[{
             Style["foci antipedals", Bold, Medium], 
             Manipulate`Place[32], 
             Manipulate`Place[33], 
             Manipulate`Place[34], 
             Manipulate`Place[35], 
             Manipulate`Place[36]}, Alignment -> Right, BaselinePosition -> 
            1], 
           Column[{
             Style["misc", Bold, Medium], 
             Manipulate`Place[37], 
             Manipulate`Place[38], 
             Manipulate`Place[39], 
             Manipulate`Place[40], 
             Manipulate`Place[41], 
             Manipulate`Place[42]}, Alignment -> Right, BaselinePosition -> 
            1]}}, Spacings -> {1, 1}, Alignment -> Right, Frame -> All, 
         FrameStyle -> 
         RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666]]], 
       Manipulate`Dump`ThisIsNotAControl}, {{
        Hold[$CellContext`tMidX$$], 0.5}, -2, 2, 0.01}, {{
        Hold[$CellContext`tMidY$$], 0.25}, -2, 2, 0.01}, {
       Hold[
        Row[{
          Button[
          "Center", $CellContext`tMidX$$ = 0; $CellContext`tMidY$$ = 0, 
           ImageSize -> Medium], 
          Button[
          "f1", $CellContext`tMidX$$ = -1; $CellContext`tMidY$$ = 0, 
           ImageSize -> Medium], 
          Button[
          "f2", $CellContext`tMidX$$ = 1; $CellContext`tMidY$$ = 0, ImageSize -> 
           Medium], 
          Button[
          "q1", $CellContext`tMidX$$ = 0.5; $CellContext`tMidY$$ = 0.25, 
           ImageSize -> Medium]}]], Manipulate`Dump`ThisIsNotAControl}}, 
     Typeset`size$$ = {600., {291., 295.}}, Typeset`update$$ = 0, 
     Typeset`initDone$$, Typeset`skipInitDone$$ = 
     False, $CellContext`a$11128906$$ = 0, $CellContext`tDeg$11128907$$ = 
     0, $CellContext`n$11128908$$ = 0, $CellContext`xslack$11128909$$ = 
     0, $CellContext`yslack$11128910$$ = 0, $CellContext`lgt0$11128911$$ = 
     0, $CellContext`drOrbit0$11128912$$ = 
     False, $CellContext`drExc0$11128913$$ = 
     False, $CellContext`drInner0$11128914$$ = 
     False, $CellContext`drCaustic0$11128915$$ = 
     False, $CellContext`drMidPedals0$11128916$$ = 
     False, $CellContext`drMidExcPedals0$11128917$$ = 
     False, $CellContext`drMidInnerPedals0$11128918$$ = 
     False, $CellContext`drPedalPolys0$11128919$$ = 
     False, $CellContext`tMidX$11128920$$ = 0, $CellContext`tMidY$11128921$$ =
      0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      2, StandardForm, 
       "Variables" :> {$CellContext`a$$ = 
         1.5, $CellContext`drAntipedalPolys0$$ = 
         False, $CellContext`drAntipedalQLines0$$ = 
         False, $CellContext`drAreaCentroids0$$ = 
         False, $CellContext`drBasicCentroids0$$ = 
         False, $CellContext`drCaustic0$$ = 
         False, $CellContext`drCentroids0$$ = 
         False, $CellContext`drConwayCircle0$$ = False, $CellContext`drExc0$$ = 
         False, $CellContext`drFocusAntipedalPolys0$$ = 
         False, $CellContext`drFocusAntipedals0$$ = 
         False, $CellContext`drFocusExcAntipedals0$$ = 
         False, $CellContext`drFocusExcPedalCircle0$$ = 
         False, $CellContext`drFocusExcPedals0$$ = 
         False, $CellContext`drFocusInnerAntipedals0$$ = 
         False, $CellContext`drFocusInnerPedalCircle0$$ = 
         False, $CellContext`drFocusInnerPedals0$$ = 
         False, $CellContext`drFocusPedalCircle0$$ = 
         False, $CellContext`drFocusPedalPolys0$$ = 
         False, $CellContext`drFocusPedals0$$ = 
         False, $CellContext`drInner0$$ = 
         False, $CellContext`drMidAntipedalRatios0$$ = 
         False, $CellContext`drMidAntipedals0$$ = 
         False, $CellContext`drMidExcAntipedals0$$ = 
         False, $CellContext`drMidExcPedals0$$ = 
         False, $CellContext`drMidInnerAntipedals0$$ = 
         False, $CellContext`drMidInnerPedals0$$ = 
         False, $CellContext`drMidPedalRatios0$$ = 
         False, $CellContext`drMidPedals0$$ = 
         False, $CellContext`drMongeCircle0$$ = 
         False, $CellContext`drOrbit0$$ = True, $CellContext`drPedalPolys0$$ = 
         False, $CellContext`drPerCentroids0$$ = 
         False, $CellContext`drPhis0$$ = False, $CellContext`drPlAreas0$$ = 
         False, $CellContext`drPlShort0$$ = True, $CellContext`drPs0$$ = 
         False, $CellContext`drPsis0$$ = False, $CellContext`drStachelLsRs0$$ = 
         False, $CellContext`drThs0$$ = False, $CellContext`lgt0$$ = 
         0.1, $CellContext`n$$ = 5, $CellContext`tDeg$$ = 
         10., $CellContext`tMidX$$ = 0.5, $CellContext`tMidY$$ = 
         0.25, $CellContext`xslack$$ = 1, $CellContext`yslack$$ = 1}, 
       "ControllerVariables" :> {
         Hold[$CellContext`a$$, $CellContext`a$11128906$$, 0], 
         Hold[$CellContext`tDeg$$, $CellContext`tDeg$11128907$$, 0], 
         Hold[$CellContext`n$$, $CellContext`n$11128908$$, 0], 
         Hold[$CellContext`xslack$$, $CellContext`xslack$11128909$$, 0], 
         Hold[$CellContext`yslack$$, $CellContext`yslack$11128910$$, 0], 
         Hold[$CellContext`lgt0$$, $CellContext`lgt0$11128911$$, 0], 
         Hold[$CellContext`drOrbit0$$, $CellContext`drOrbit0$11128912$$, 
          False], 
         Hold[$CellContext`drExc0$$, $CellContext`drExc0$11128913$$, False], 
         Hold[$CellContext`drInner0$$, $CellContext`drInner0$11128914$$, 
          False], 
         Hold[$CellContext`drCaustic0$$, $CellContext`drCaustic0$11128915$$, 
          False], 
         Hold[$CellContext`drMidPedals0$$, \
$CellContext`drMidPedals0$11128916$$, False], 
         Hold[$CellContext`drMidExcPedals0$$, \
$CellContext`drMidExcPedals0$11128917$$, False], 
         Hold[$CellContext`drMidInnerPedals0$$, \
$CellContext`drMidInnerPedals0$11128918$$, False], 
         Hold[$CellContext`drPedalPolys0$$, \
$CellContext`drPedalPolys0$11128919$$, False], 
         Hold[$CellContext`tMidX$$, $CellContext`tMidX$11128920$$, 0], 
         Hold[$CellContext`tMidY$$, $CellContext`tMidY$11128921$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, 
       "Body" :> ($CellContext`pr$$ = {{-$CellContext`a$$ - \
$CellContext`xslack$$, $CellContext`a$$ + $CellContext`xslack$$}, {-1 - \
$CellContext`yslack$$, 1 + $CellContext`yslack$$}}; Show[
          $CellContext`drawPolyCausticInner[$CellContext`a$$, \
$CellContext`n$$, $CellContext`tDeg$$, $CellContext`drPs -> \
$CellContext`drPs0$$, $CellContext`drThs -> $CellContext`drThs0$$, \
$CellContext`drPhis -> $CellContext`drPhis0$$, $CellContext`drPsis -> \
$CellContext`drPsis0$$, $CellContext`drOrbit -> $CellContext`drOrbit0$$, \
$CellContext`drCaustic -> $CellContext`drCaustic0$$, $CellContext`drOuter -> \
$CellContext`drExc0$$, $CellContext`drInner -> $CellContext`drInner0$$, \
$CellContext`drFoci -> 
           True, $CellContext`drFocusPedalPolys -> \
$CellContext`drFocusPedalPolys0$$, $CellContext`drFocusPedals -> \
$CellContext`drFocusPedals0$$, $CellContext`drFocusExcPedals -> \
$CellContext`drFocusExcPedals0$$, $CellContext`drFocusInnerPedals -> \
$CellContext`drFocusInnerPedals0$$, $CellContext`drFocusAntipedalPolys -> \
$CellContext`drFocusAntipedalPolys0$$, $CellContext`drAntipedalQLines -> \
$CellContext`drAntipedalQLines0$$, $CellContext`drFocusAntipedals -> \
$CellContext`drFocusAntipedals0$$, $CellContext`drFocusExcAntipedals -> \
$CellContext`drFocusExcAntipedals0$$, $CellContext`drFocusInnerAntipedals -> \
$CellContext`drFocusInnerAntipedals0$$, $CellContext`drMidPedals -> \
$CellContext`drMidPedals0$$, $CellContext`drMidExcPedals -> \
$CellContext`drMidExcPedals0$$, $CellContext`drMidInnerPedals -> \
$CellContext`drMidInnerPedals0$$, $CellContext`drCentroids -> \
$CellContext`drCentroids0$$, $CellContext`drPerCentroids -> \
$CellContext`drPerCentroids0$$, $CellContext`drAreaCentroids -> \
$CellContext`drAreaCentroids0$$, $CellContext`drMidPedalRatios -> \
$CellContext`drMidPedalRatios0$$, $CellContext`drMidAntipedalRatios -> \
$CellContext`drMidAntipedalRatios0$$, $CellContext`drBasicCentroids -> \
$CellContext`drBasicCentroids0$$, $CellContext`midParamX -> \
$CellContext`tMidX$$, $CellContext`midParamY -> $CellContext`tMidY$$, \
$CellContext`drPlAreas -> $CellContext`drPlAreas0$$, $CellContext`drPlShort -> \
$CellContext`drPlShort0$$, $CellContext`drMongeCircle -> \
$CellContext`drMongeCircle0$$, $CellContext`drMidAntipedals -> \
$CellContext`drMidAntipedals0$$, $CellContext`drMidExcAntipedals -> \
$CellContext`drMidExcAntipedals0$$, $CellContext`drMidInnerAntipedals -> \
$CellContext`drMidInnerAntipedals0$$, $CellContext`drPedalPolys -> \
$CellContext`drPedalPolys0$$, $CellContext`drAntipedalPolys -> \
$CellContext`drAntipedalPolys0$$, $CellContext`drFocusPedalCircle -> \
$CellContext`drFocusPedalCircle0$$, $CellContext`drFocusExcPedalCircle -> \
$CellContext`drFocusExcPedalCircle0$$, $CellContext`drFocusInnerPedalCircle -> \
$CellContext`drFocusInnerPedalCircle0$$, $CellContext`drConwayCircle -> \
$CellContext`drConwayCircle0$$, $CellContext`drStachelLsRs -> \
$CellContext`drStachelLsRs0$$, $CellContext`fontSize -> 
           14, $CellContext`lgt -> $CellContext`lgt0$$, $CellContext`digs -> 
           5], PlotRange -> $CellContext`pr$$, ImageSize -> 600]), 
       "Specifications" :> {
         Style["N-Periodics in the Elliptic Billiard:", {
           RGBColor[
            Rational[2, 3], 0, 0], 16}], 
         Style["Pedal Polygon Invariants", {
           RGBColor[
            Rational[2, 3], 0, 0], 16}], 
         Style["D. Reznik + R. Garcia + J. Koiller, April, 2020", {
           RGBColor[0, 0, 1], 12}], 
         Delimiter, {{$CellContext`a$$, 1.5}, 1.01, 5, 0.01, Appearance -> 
          "Labeled"}, {{$CellContext`tDeg$$, 10.}, -360, 360, 0.05, 
          Appearance -> "Open"}, {{$CellContext`n$$, 5}, {3, 4, 5, 6, 7, 8, 9,
           10, 11, 12, 13, 14, 15, 16}, ControlPlacement -> 
          1}, {{$CellContext`xslack$$, 1}, {
          0, 0.05, 0.1, 0.25, 0.5, 1, 2, 3, 4}, ControlPlacement -> 
          2}, {{$CellContext`yslack$$, 1}, {
          0, 0.05, 0.1, 0.25, 0.5, 1, 2, 3, 4}, ControlPlacement -> 3}, 
         Row[{
           Manipulate`Place[1], 
           Manipulate`Place[2], 
           Manipulate`Place[3]}], {{$CellContext`lgt0$$, 0.1, "lgt"}, 0, 0.5, 
          0.01}, {{$CellContext`drOrbit0$$, True, "orbit"}, {True, False}, 
          ControlPlacement -> 4}, {{$CellContext`drExc0$$, False, "outer"}, {
          True, False}, ControlPlacement -> 
          5}, {{$CellContext`drInner0$$, False, "inner"}, {True, False}, 
          ControlPlacement -> 
          6}, {{$CellContext`drCaustic0$$, False, "caustic"}, {True, False}, 
          ControlPlacement -> 
          7}, {{$CellContext`drMidPedals0$$, False, "mid->orbit"}, {
          True, False}, ControlPlacement -> 
          8}, {{$CellContext`drMidExcPedals0$$, False, "mid->outer"}, {
          True, False}, ControlPlacement -> 
          9}, {{$CellContext`drMidInnerPedals0$$, False, "mid->inner"}, {
          True, False}, ControlPlacement -> 
          10}, {{$CellContext`drPedalPolys0$$, False, "polys"}, {True, False},
           ControlPlacement -> 
          11}, {{$CellContext`drMidPedalRatios0$$, False, "ratio3"}, {
          True, False}, ControlPlacement -> 
          12}, {{$CellContext`drMidAntipedals0$$, False, "mid->orbit"}, {
          True, False}, ControlPlacement -> 
          13}, {{$CellContext`drMidExcAntipedals0$$, False, "mid->outer"}, {
          True, False}, ControlPlacement -> 
          14}, {{$CellContext`drMidInnerAntipedals0$$, False, "mid->inner"}, {
          True, False}, ControlPlacement -> 
          15}, {{$CellContext`drAntipedalPolys0$$, False, "polys"}, {
          True, False}, ControlPlacement -> 
          16}, {{$CellContext`drMidAntipedalRatios0$$, False, "ratio3"}, {
          True, False}, ControlPlacement -> 
          17}, {{$CellContext`drCentroids0$$, False, "vertex"}, {True, False},
           ControlPlacement -> 
          18}, {{$CellContext`drPerCentroids0$$, False, "perimeater"}, {
          True, False}, ControlPlacement -> 
          19}, {{$CellContext`drAreaCentroids0$$, False, "area"}, {
          True, False}, ControlPlacement -> 
          20}, {{$CellContext`drBasicCentroids0$$, False, "basic"}, {
          True, False}, ControlPlacement -> 
          21}, {{$CellContext`drPs0$$, False, "Ps"}, {True, False}, 
          ControlPlacement -> 
          22}, {{$CellContext`drPlAreas0$$, False, "areas"}, {True, False}, 
          ControlPlacement -> 
          23}, {{$CellContext`drPlShort0$$, True, "labs short"}, {
          True, False}, ControlPlacement -> 
          24}, {{$CellContext`drThs0$$, False, 
           "poly \!\(\*SubscriptBox[\(\[Theta]\), \(i\)]\)"}, {True, False}, 
          ControlPlacement -> 
          25}, {{$CellContext`drPhis0$$, False, 
           "star \!\(\*SubscriptBox[\(\[Phi]\), \(i\)]\)"}, {True, False}, 
          ControlPlacement -> 
          26}, {{$CellContext`drPsis0$$, False, 
           "derived \!\(\*SubscriptBox[\(\[Psi]\), \(i\)]\)"}, {True, False}, 
          ControlPlacement -> 
          27}, {{$CellContext`drFocusPedals0$$, False, "orbit"}, {
          True, False}, ControlPlacement -> 
          28}, {{$CellContext`drFocusExcPedals0$$, False, "outer"}, {
          True, False}, ControlPlacement -> 
          29}, {{$CellContext`drFocusInnerPedals0$$, False, "inner"}, {
          True, False}, ControlPlacement -> 
          30}, {{$CellContext`drFocusPedalPolys0$$, False, "polys"}, {
          True, False}, ControlPlacement -> 
          31}, {{$CellContext`drFocusAntipedals0$$, False, "orbit"}, {
          True, False}, ControlPlacement -> 
          32}, {{$CellContext`drFocusExcAntipedals0$$, False, "outer"}, {
          True, False}, ControlPlacement -> 
          33}, {{$CellContext`drFocusInnerAntipedals0$$, False, "inner"}, {
          True, False}, ControlPlacement -> 
          34}, {{$CellContext`drFocusAntipedalPolys0$$, False, "polys"}, {
          True, False}, ControlPlacement -> 
          35}, {{$CellContext`drAntipedalQLines0$$, False, "q lines"}, {
          True, False}, ControlPlacement -> 
          36}, {{$CellContext`drMongeCircle0$$, False, "monge circ"}, {
          True, False}, ControlPlacement -> 
          37}, {{$CellContext`drFocusPedalCircle0$$, False, 
           "focus orbit circ"}, {True, False}, ControlPlacement -> 
          38}, {{$CellContext`drFocusExcPedalCircle0$$, False, 
           "focus outer circ"}, {True, False}, ControlPlacement -> 
          39}, {{$CellContext`drFocusInnerPedalCircle0$$, False, 
           "focus inner circ"}, {True, False}, ControlPlacement -> 
          40}, {{$CellContext`drConwayCircle0$$, False, "conway spokes"}, {
          True, False}, ControlPlacement -> 
          41}, {{$CellContext`drStachelLsRs0$$, False, "Stachel Ls,Rs"}, {
          True, False}, ControlPlacement -> 42}, 
         Grid[{{
            Column[{
              Style["basic", Bold, Medium], 
              Manipulate`Place[4], 
              Manipulate`Place[5], 
              Manipulate`Place[6], 
              Manipulate`Place[7]}, Alignment -> Right, BaselinePosition -> 
             1], 
            Column[{
              Style["pedals", Bold, Medium], 
              Manipulate`Place[8], 
              Manipulate`Place[9], 
              Manipulate`Place[10], 
              Manipulate`Place[11], 
              Manipulate`Place[12]}, Alignment -> Right, BaselinePosition -> 
             1], 
            Column[{
              Style["antipedals", Bold, Medium], 
              Manipulate`Place[13], 
              Manipulate`Place[14], 
              Manipulate`Place[15], 
              Manipulate`Place[16], 
              Manipulate`Place[17]}, Alignment -> Right, BaselinePosition -> 
             1], 
            Column[{
              Style["centroids", Bold, Medium], 
              Manipulate`Place[18], 
              Manipulate`Place[19], 
              Manipulate`Place[20], 
              Manipulate`Place[21]}, Alignment -> Right, BaselinePosition -> 
             1]}, {
            Column[{
              Style["labels", Bold, Medium], 
              Manipulate`Place[22], 
              Manipulate`Place[23], 
              Manipulate`Place[24], 
              Manipulate`Place[25], 
              Manipulate`Place[26], 
              Manipulate`Place[27]}, Alignment -> Right, BaselinePosition -> 
             1], 
            Column[{
              Style["foci pedals", Bold, Medium], 
              Manipulate`Place[28], 
              Manipulate`Place[29], 
              Manipulate`Place[30], 
              Manipulate`Place[31]}, Alignment -> Right, BaselinePosition -> 
             1], 
            Column[{
              Style["foci antipedals", Bold, Medium], 
              Manipulate`Place[32], 
              Manipulate`Place[33], 
              Manipulate`Place[34], 
              Manipulate`Place[35], 
              Manipulate`Place[36]}, Alignment -> Right, BaselinePosition -> 
             1], 
            Column[{
              Style["misc", Bold, Medium], 
              Manipulate`Place[37], 
              Manipulate`Place[38], 
              Manipulate`Place[39], 
              Manipulate`Place[40], 
              Manipulate`Place[41], 
              Manipulate`Place[42]}, Alignment -> Right, BaselinePosition -> 
             1]}}, Spacings -> {1, 1}, Alignment -> Right, Frame -> All, 
          FrameStyle -> 
          RGBColor[
           0.6666666666666666, 0.6666666666666666, 
            0.6666666666666666]], {{$CellContext`tMidX$$, 0.5}, -2, 2, 0.01, 
          Appearance -> "Labeled"}, {{$CellContext`tMidY$$, 0.25}, -2, 2, 
          0.01, Appearance -> "Labeled"}, 
         Row[{
           Button[
           "Center", $CellContext`tMidX$$ = 0; $CellContext`tMidY$$ = 0, 
            ImageSize -> Medium], 
           Button[
           "f1", $CellContext`tMidX$$ = -1; $CellContext`tMidY$$ = 0, 
            ImageSize -> Medium], 
           Button[
           "f2", $CellContext`tMidX$$ = 1; $CellContext`tMidY$$ = 0, 
            ImageSize -> Medium], 
           Button[
           "q1", $CellContext`tMidX$$ = 0.5; $CellContext`tMidY$$ = 0.25, 
            ImageSize -> Medium]}]}, "Options" :> {ControlPlacement -> Left}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{1033., {322., 328.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     Initialization:>({$CellContext`drawPolyCausticInner[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`n, 
           Blank[]], 
          Pattern[$CellContext`tDeg, 
           Blank[]], 
          OptionsPattern[]] := 
        Module[{$CellContext`poly, $CellContext`exc, $CellContext`polyInner, \
$CellContext`causticAB, $CellContext`ell, $CellContext`gr, \
$CellContext`ellCaustic, $CellContext`delta, $CellContext`excA, \
$CellContext`excB, $CellContext`c2, $CellContext`cauA, $CellContext`cauB, \
$CellContext`fs1, $CellContext`fs2, $CellContext`mid, $CellContext`pedalsMid, \
$CellContext`pedalsMidSum, $CellContext`pedalsMidSumSqr, \
$CellContext`pedalsMidProd, $CellContext`pedalsExcMid, \
$CellContext`pedalsExcMidSum, $CellContext`pedalsExcMidSumSqr, \
$CellContext`pedalsExcMidProd, $CellContext`pedalsInnerMid, \
$CellContext`pedalsInnerMidSum, $CellContext`pedalsInnerMidSumSqr, \
$CellContext`pedalsInnerMidProd, $CellContext`pedals1, $CellContext`pedals2, \
$CellContext`pedalSum1, $CellContext`pedalSum2, $CellContext`pedalSumSqr1, \
$CellContext`pedalSumSqr2, $CellContext`pedalProd1, $CellContext`pedalProd2, \
$CellContext`pedalsExc1, $CellContext`pedalsExc2, $CellContext`pedalExcSum1, \
$CellContext`pedalExcSum2, $CellContext`pedalExcSumSqr1, \
$CellContext`pedalExcSumSqr2, $CellContext`pedalExcProd1, \
$CellContext`pedalExcProd2, $CellContext`pedalsInner1, \
$CellContext`pedalsInner2, $CellContext`pedalInnerSum1, \
$CellContext`pedalInnerSum2, $CellContext`pedalInnerSumSqr1, \
$CellContext`pedalInnerSumSqr2, $CellContext`pedalInnerProd1, \
$CellContext`pedalInnerProd2, $CellContext`lsrs, $CellContext`pl, \
$CellContext`plArea, $CellContext`plOrbit, $CellContext`plExc, \
$CellContext`plThs, $CellContext`plPhis, $CellContext`plPsis, \
$CellContext`plCentroid, $CellContext`plMid, $CellContext`plExcMid, \
$CellContext`plInnerMid, $CellContext`plInner, $CellContext`plMidArea, \
$CellContext`plMidExcArea, $CellContext`plMidInnerArea, \
$CellContext`plStachelLsRs, $CellContext`pedalsMidA, \
$CellContext`pedalsExcMidA, $CellContext`polyA, $CellContext`polyExcA, \
$CellContext`polyInnerA, $CellContext`pedalsInnerMidA, $CellContext`pedals1A, \
$CellContext`pedals2A, $CellContext`pedalsExc1A, $CellContext`pedalsExc2A, \
$CellContext`pedalsInner1A, $CellContext`pedalsInner2A, \
$CellContext`midCentroid, $CellContext`excMidCentroid, \
$CellContext`innerMidCentroid, $CellContext`midPerCentroid, \
$CellContext`excMidPerCentroid, $CellContext`innerMidPerCentroid, \
$CellContext`midAreaCentroid, $CellContext`excMidAreaCentroid, \
$CellContext`innerMidAreaCentroid, $CellContext`orbitCentroid, \
$CellContext`orbitPerCentroid, $CellContext`orbitAreaCentroid, \
$CellContext`excCentroid, $CellContext`excPerCentroid, \
$CellContext`excAreaCentroid, $CellContext`innerCentroid, \
$CellContext`innerPerCentroid, $CellContext`innerAreaCentroid, \
$CellContext`antipedalsMid, $CellContext`antipedalsExcMid, \
$CellContext`antipedalsInnerMid, $CellContext`antipedalsMidA, \
$CellContext`antipedalsExcMidA, $CellContext`antipedalsInnerMidA, \
$CellContext`antipedalCentroid, $CellContext`antipedalExcCentroid, \
$CellContext`antipedalInnerCentroid, $CellContext`antipedalPerCentroid, \
$CellContext`antipedalExcPerCentroid, $CellContext`antipedalInnerPerCentroid, \
$CellContext`antipedalAreaCentroid, $CellContext`antipedalExcAreaCentroid, \
$CellContext`antipedalInnerAreaCentroid, $CellContext`antipedalsMidSum, \
$CellContext`antipedalsMidSumSqr, $CellContext`antipedalsMidProd, \
$CellContext`antipedalsExcSum, $CellContext`antipedalsExcSumSqr, \
$CellContext`antipedalsExcProd, $CellContext`antipedalsInnerSum, \
$CellContext`antipedalsInnerSumSqr, $CellContext`antipedalsInnerProd, \
$CellContext`conwaySpokes, $CellContext`antipedals1, \
$CellContext`antipedalsExc1, $CellContext`antipedalsInner1, \
$CellContext`antipedals2, $CellContext`antipedalsExc2, \
$CellContext`antipedalsInner2, $CellContext`antipedalSum1, \
$CellContext`antipedalSumSqr1, $CellContext`antipedalProd1, \
$CellContext`antipedalSum2, $CellContext`antipedalSumSqr2, \
$CellContext`antipedalProd2, $CellContext`antipedalExcSum1, \
$CellContext`antipedalExcSumSqr1, $CellContext`antipedalExcProd1, \
$CellContext`antipedalExcSum2, $CellContext`antipedalExcSumSqr2, \
$CellContext`antipedalExcProd2, $CellContext`antipedalInnerSum1, \
$CellContext`antipedalInnerSumSqr1, $CellContext`antipedalInnerProd1, \
$CellContext`antipedalInnerSum2, $CellContext`antipedalInnerSumSqr2, \
$CellContext`antipedalInnerProd2, $CellContext`antipedals1A, \
$CellContext`antipedalsExc1A, $CellContext`antipedalsInner1A, \
$CellContext`antipedals2A, $CellContext`antipedalsExc2A, \
$CellContext`antipedalsInner2A, $CellContext`midOrbitSum, \
$CellContext`midOrbitSumSqr, $CellContext`midOrbitProd, \
$CellContext`midExcSum, $CellContext`midExcSumSqr, $CellContext`midExcProd, \
$CellContext`midInnerSum, $CellContext`midInnerSumSqr, \
$CellContext`midInnerProd, $CellContext`orbitSum1, $CellContext`orbitSumSqr1, \
$CellContext`orbitProd1, $CellContext`excSum1, $CellContext`excSumSqr1, \
$CellContext`excProd1, $CellContext`innerSum1, $CellContext`innerSumSqr1, \
$CellContext`innerProd1, $CellContext`orbitSum2, $CellContext`orbitSumSqr2, \
$CellContext`orbitProd2, $CellContext`excSum2, $CellContext`excSumSqr2, \
$CellContext`excProd2, $CellContext`innerSum2, $CellContext`innerSumSqr2, \
$CellContext`innerProd2}, {$CellContext`poly, $CellContext`polyInner, \
$CellContext`causticAB} = $CellContext`getPolyCausticInner[$CellContext`a, \
$CellContext`n, $CellContext`tDeg]; $CellContext`lsrs = \
$CellContext`stachelLsRs[$CellContext`poly, $CellContext`polyInner]; \
$CellContext`exc = $CellContext`getExcentralPolygon[$CellContext`a, \
$CellContext`poly]; $CellContext`delta = $CellContext`a^4 - $CellContext`a^2 + 
            1; $CellContext`excA = (
             1 + $CellContext`delta)/$CellContext`a; $CellContext`excB = \
$CellContext`a^2 + $CellContext`delta; $CellContext`c2 = $CellContext`a^2 - 
            1; $CellContext`cauA = $CellContext`a (($CellContext`delta - 
              1)/$CellContext`c2); $CellContext`cauB = ($CellContext`a^2 - \
$CellContext`delta)/$CellContext`c2; {$CellContext`fs1, $CellContext`fs2} = \
$CellContext`getFoci[$CellContext`a]; {$CellContext`pedals1, \
$CellContext`pedals2} = 
           Map[$CellContext`getPedals[#, $CellContext`poly]& , \
{$CellContext`fs1, $CellContext`fs2}]; {$CellContext`pedalsExc1, \
$CellContext`pedalsExc2} = 
           Map[$CellContext`getPedals[#, $CellContext`exc]& , \
{$CellContext`fs1, $CellContext`fs2}]; {$CellContext`pedalsInner1, \
$CellContext`pedalsInner2} = 
           Map[$CellContext`getPedals[#, $CellContext`polyInner]& , \
{$CellContext`fs1, $CellContext`fs2}]; {$CellContext`antipedals1, \
$CellContext`antipedals2} = 
           Map[$CellContext`polyAntipedal[#, $CellContext`poly]& , \
{$CellContext`fs1, $CellContext`fs2}]; {$CellContext`antipedalsExc1, \
$CellContext`antipedalsExc2} = 
           Map[$CellContext`polyAntipedal[#, $CellContext`exc]& , \
{$CellContext`fs1, $CellContext`fs2}]; {$CellContext`antipedalsInner1, \
$CellContext`antipedalsInner2} = 
           Map[$CellContext`polyAntipedal[#, $CellContext`polyInner]& , \
{$CellContext`fs1, $CellContext`fs2}]; $CellContext`mid = {
            Part[$CellContext`fs2, 1] OptionValue[$CellContext`midParamX], 
             
             OptionValue[$CellContext`midParamY]}; {$CellContext`midOrbitSum, \
$CellContext`midOrbitSumSqr, $CellContext`midOrbitProd} = \
$CellContext`getMidDists[$CellContext`mid, $CellContext`poly]; \
{$CellContext`midExcSum, $CellContext`midExcSumSqr, $CellContext`midExcProd} = \
$CellContext`getMidDists[$CellContext`mid, $CellContext`exc]; \
{$CellContext`midInnerSum, $CellContext`midInnerSumSqr, \
$CellContext`midInnerProd} = $CellContext`getMidDists[$CellContext`mid, \
$CellContext`polyInner]; {$CellContext`orbitSum1, $CellContext`orbitSumSqr1, \
$CellContext`orbitProd1} = $CellContext`getMidDists[$CellContext`fs1, \
$CellContext`poly]; {$CellContext`excSum1, $CellContext`excSumSqr1, \
$CellContext`excProd1} = $CellContext`getMidDists[$CellContext`fs1, \
$CellContext`exc]; {$CellContext`innerSum1, $CellContext`innerSumSqr1, \
$CellContext`innerProd1} = $CellContext`getMidDists[$CellContext`fs1, \
$CellContext`polyInner]; {$CellContext`orbitSum2, $CellContext`orbitSumSqr2, \
$CellContext`orbitProd2} = $CellContext`getMidDists[$CellContext`fs2, \
$CellContext`poly]; {$CellContext`excSum2, $CellContext`excSumSqr2, \
$CellContext`excProd2} = $CellContext`getMidDists[$CellContext`fs2, \
$CellContext`exc]; {$CellContext`innerSum2, $CellContext`innerSumSqr2, \
$CellContext`innerProd2} = $CellContext`getMidDists[$CellContext`fs2, \
$CellContext`polyInner]; {$CellContext`pedalsMid, $CellContext`pedalsExcMid, \
$CellContext`pedalsInnerMid} = 
           Map[$CellContext`getPedals[$CellContext`mid, #]& , \
{$CellContext`poly, $CellContext`exc, $CellContext`polyInner}]; \
{$CellContext`pedalsMidSum, $CellContext`pedalsMidSumSqr, \
$CellContext`pedalsMidProd} = $CellContext`getMidDists[$CellContext`mid, \
$CellContext`pedalsMid]; {$CellContext`pedalsExcMidSum, \
$CellContext`pedalsExcMidSumSqr, $CellContext`pedalsExcMidProd} = \
$CellContext`getMidDists[$CellContext`mid, $CellContext`pedalsExcMid]; \
{$CellContext`pedalsInnerMidSum, $CellContext`pedalsInnerMidSumSqr, \
$CellContext`pedalsInnerMidProd} = $CellContext`getMidDists[$CellContext`mid, \
$CellContext`pedalsInnerMid]; {$CellContext`antipedalsMid, \
$CellContext`antipedalsExcMid, $CellContext`antipedalsInnerMid} = 
           Map[$CellContext`polyAntipedal[$CellContext`mid, #]& , \
{$CellContext`poly, $CellContext`exc, $CellContext`polyInner}]; \
{$CellContext`antipedalsMidSum, $CellContext`antipedalsMidSumSqr, \
$CellContext`antipedalsMidProd} = $CellContext`getMidDists[$CellContext`mid, \
$CellContext`antipedalsMid]; {$CellContext`antipedalsExcSum, \
$CellContext`antipedalsExcSumSqr, $CellContext`antipedalsExcProd} = \
$CellContext`getMidDists[$CellContext`mid, $CellContext`antipedalsExcMid]; \
{$CellContext`antipedalsInnerSum, $CellContext`antipedalsInnerSumSqr, \
$CellContext`antipedalsInnerProd} = \
$CellContext`getMidDists[$CellContext`mid, $CellContext`antipedalsInnerMid]; \
{$CellContext`pedalSum1, $CellContext`pedalSumSqr1, $CellContext`pedalProd1} = \
$CellContext`getMidDists[$CellContext`fs1, $CellContext`pedals1]; \
{$CellContext`pedalSum2, $CellContext`pedalSumSqr2, $CellContext`pedalProd2} = \
$CellContext`getMidDists[$CellContext`fs2, $CellContext`pedals2]; \
{$CellContext`pedalExcSum1, $CellContext`pedalExcSumSqr1, \
$CellContext`pedalExcProd1} = $CellContext`getMidDists[$CellContext`fs1, \
$CellContext`pedalsExc1]; {$CellContext`pedalExcSum2, \
$CellContext`pedalExcSumSqr2, $CellContext`pedalExcProd2} = \
$CellContext`getMidDists[$CellContext`fs2, $CellContext`pedalsExc2]; \
{$CellContext`pedalInnerSum1, $CellContext`pedalInnerSumSqr1, \
$CellContext`pedalInnerProd1} = $CellContext`getMidDists[$CellContext`fs1, \
$CellContext`pedalsInner1]; {$CellContext`pedalInnerSum2, \
$CellContext`pedalInnerSumSqr2, $CellContext`pedalInnerProd2} = \
$CellContext`getMidDists[$CellContext`fs2, $CellContext`pedalsInner2]; \
{$CellContext`antipedalSum1, $CellContext`antipedalSumSqr1, \
$CellContext`antipedalProd1} = $CellContext`getMidDists[$CellContext`fs1, \
$CellContext`antipedals1]; {$CellContext`antipedalSum2, \
$CellContext`antipedalSumSqr2, $CellContext`antipedalProd2} = \
$CellContext`getMidDists[$CellContext`fs2, $CellContext`antipedals2]; \
{$CellContext`antipedalExcSum1, $CellContext`antipedalExcSumSqr1, \
$CellContext`antipedalExcProd1} = $CellContext`getMidDists[$CellContext`fs1, \
$CellContext`antipedalsExc1]; {$CellContext`antipedalExcSum2, \
$CellContext`antipedalExcSumSqr2, $CellContext`antipedalExcProd2} = \
$CellContext`getMidDists[$CellContext`fs2, $CellContext`antipedalsExc2]; \
{$CellContext`antipedalInnerSum1, $CellContext`antipedalInnerSumSqr1, \
$CellContext`antipedalInnerProd1} = \
$CellContext`getMidDists[$CellContext`fs1, $CellContext`antipedalsInner1]; \
{$CellContext`antipedalInnerSum2, $CellContext`antipedalInnerSumSqr2, \
$CellContext`antipedalInnerProd2} = \
$CellContext`getMidDists[$CellContext`fs2, $CellContext`antipedalsInner2]; \
{$CellContext`polyA, $CellContext`polyExcA, $CellContext`polyInnerA} = Abs[
             
             Map[$CellContext`signedArea, {$CellContext`poly, \
$CellContext`exc, $CellContext`polyInner}]]; {$CellContext`pedalsMidA, \
$CellContext`pedalsExcMidA, $CellContext`pedalsInnerMidA} = Abs[
             
             Map[$CellContext`signedArea, {$CellContext`pedalsMid, \
$CellContext`pedalsExcMid, $CellContext`pedalsInnerMid}]]; \
{$CellContext`antipedalsMidA, $CellContext`antipedalsExcMidA, \
$CellContext`antipedalsInnerMidA} = Abs[
             
             Map[$CellContext`signedArea, {$CellContext`antipedalsMid, \
$CellContext`antipedalsExcMid, $CellContext`antipedalsInnerMid}]]; \
{$CellContext`pedals1A, $CellContext`pedalsExc1A, $CellContext`pedalsInner1A} = 
           Abs[
             
             Map[$CellContext`signedArea, {$CellContext`pedals1, \
$CellContext`pedalsExc1, $CellContext`pedalsInner1}]]; \
{$CellContext`pedals2A, $CellContext`pedalsExc2A, $CellContext`pedalsInner2A} = 
           Abs[
             
             Map[$CellContext`signedArea, {$CellContext`pedals2, \
$CellContext`pedalsExc2, $CellContext`pedalsInner2}]]; \
{$CellContext`antipedals1A, $CellContext`antipedalsExc1A, \
$CellContext`antipedalsInner1A} = Abs[
             
             Map[$CellContext`signedArea, {$CellContext`antipedals1, \
$CellContext`antipedalsExc1, $CellContext`antipedalsInner1}]]; \
{$CellContext`antipedals2A, $CellContext`antipedalsExc2A, \
$CellContext`antipedalsInner2A} = Abs[
             
             Map[$CellContext`signedArea, {$CellContext`antipedals2, \
$CellContext`antipedalsExc2, $CellContext`antipedalsInner2}]]; \
{$CellContext`orbitCentroid, $CellContext`orbitPerCentroid, \
$CellContext`orbitAreaCentroid} = \
$CellContext`getThreeCentroids[$CellContext`poly]; {$CellContext`excCentroid, \
$CellContext`excPerCentroid, $CellContext`excAreaCentroid} = \
$CellContext`getThreeCentroids[$CellContext`exc]; \
{$CellContext`innerCentroid, $CellContext`innerPerCentroid, \
$CellContext`innerAreaCentroid} = \
$CellContext`getThreeCentroids[$CellContext`polyInner]; \
{$CellContext`midCentroid, $CellContext`midPerCentroid, \
$CellContext`midAreaCentroid} = \
$CellContext`getThreeCentroids[$CellContext`pedalsMid]; \
{$CellContext`excMidCentroid, $CellContext`excMidPerCentroid, \
$CellContext`excMidAreaCentroid} = \
$CellContext`getThreeCentroids[$CellContext`pedalsExcMid]; \
{$CellContext`innerMidCentroid, $CellContext`innerMidPerCentroid, \
$CellContext`innerMidAreaCentroid} = \
$CellContext`getThreeCentroids[$CellContext`pedalsInnerMid]; \
{$CellContext`antipedalCentroid, $CellContext`antipedalPerCentroid, \
$CellContext`antipedalAreaCentroid} = \
$CellContext`getThreeCentroids[$CellContext`antipedalsMid]; \
{$CellContext`antipedalExcCentroid, $CellContext`antipedalExcPerCentroid, \
$CellContext`antipedalExcAreaCentroid} = \
$CellContext`getThreeCentroids[$CellContext`antipedalsExcMid]; \
{$CellContext`antipedalInnerCentroid, $CellContext`antipedalInnerPerCentroid, \
$CellContext`antipedalInnerAreaCentroid} = \
$CellContext`getThreeCentroids[$CellContext`antipedalsInnerMid]; \
$CellContext`conwaySpokes = If[
             OddQ[$CellContext`n], 
             $CellContext`getConwaySpokes[$CellContext`poly], {}]; \
$CellContext`ell = $CellContext`plotEllAxes[$CellContext`a, {
             Thick, Black}]; $CellContext`ellCaustic = $CellContext`plotEllb[
             Apply[Sequence, $CellContext`causticAB], {
             Thick, Brown}]; $CellContext`gr = Graphics[{
              FaceForm[None], 
              PointSize[Large], Thick, 
              If[
               OptionValue[$CellContext`drFoci], 
               MapThread[Text[
                 Style[#, {Black, 20}], #2, {-1.5, 1.5}]& , {{
                 "\!\(\*SubscriptBox[\(f\), \(1\)]\)", 
                  "\!\(\*SubscriptBox[\(f\), \(2\)]\)"}, {$CellContext`fs1, \
$CellContext`fs2}}], {}], 
              If[
               OptionValue[$CellContext`drMongeCircle], {Red, 
                Circle[{0, 0}, 
                 Sqrt[$CellContext`a^2 + 1]]}, {}], 
              If[
               OptionValue[$CellContext`drFocusPedalCircle], {Dashed, Blue, 
                Circle[{0, 0}, 
                 Part[$CellContext`causticAB, 1]]}, {}], 
              If[
               OptionValue[$CellContext`drFocusExcPedalCircle], {Dashed, 
                Darker[Green], 
                Circle[{0, 0}, $CellContext`a]}, {}], 
              If[
               OptionValue[$CellContext`drFocusInnerPedalCircle], {Dashed, 
                Darker[Red], 
                Circle[{0, 0}, 
                 $CellContext`magn[
                  Part[$CellContext`pedalsInnerMid, 1]]]}, {}], 
              If[
               And[
                OptionValue[$CellContext`drConwayCircle], 
                OddQ[$CellContext`n]], {Black, Dashed, 
                Map[Line, 
                 Part[$CellContext`conwaySpokes, 1]], 
                Map[Line, 
                 Part[$CellContext`conwaySpokes, 2]], 
                Point[
                 Map[$CellContext`Second, 
                  Part[$CellContext`conwaySpokes, 1]]], 
                Point[
                 Map[$CellContext`Second, 
                  Part[$CellContext`conwaySpokes, 2]]]}, {}], 
              If[
               OptionValue[$CellContext`drExcircles], {Dashed, 
                Darker[Green], 
                MapThread[Circle[#, 
                  $CellContext`magn[# - #2]]& , {$CellContext`exc, \
$CellContext`polyInner}]}, {}], 
              If[
               OptionValue[$CellContext`drOrbit], {
                EdgeForm[{Blue, Thick}], 
                Polygon[$CellContext`poly], Blue, 
                Point[$CellContext`poly], 
                If[
                 OptionValue[$CellContext`drBasicCentroids], {
                  Point[$CellContext`orbitCentroid], 
                  Text[
                   Style[
                   "\!\(\*SubscriptBox[\(b\), \(0\)]\)", 
                    20], $CellContext`orbitCentroid, {0, 1.5}], 
                  Point[$CellContext`orbitPerCentroid], 
                  Text[
                   Style[
                   "\!\(\*SubscriptBox[\(b\), \(1\)]\)", 
                    20], $CellContext`orbitPerCentroid, {0, 1.5}], 
                  Point[$CellContext`orbitAreaCentroid], 
                  Text[
                   Style[
                   "\!\(\*SubscriptBox[\(b\), \(2\)]\)", 
                    20], $CellContext`orbitAreaCentroid, {
                   0, 1.5}]}, {}]}, {}], {Black, 
               Point[$CellContext`fs1], 
               Point[$CellContext`fs2]}, 
              If[
               OptionValue[$CellContext`drOuter], {
                EdgeForm[{
                  Darker[Green], Thick}], 
                Polygon[$CellContext`exc], 
                Darker[Green], 
                Point[$CellContext`exc], 
                If[
                 OptionValue[$CellContext`drBasicCentroids], {
                  Point[$CellContext`excCentroid], 
                  Text[
                   Style[
                   "\!\(\*SubscriptBox[\(b\), \(0\)]\)'", 
                    20], $CellContext`excCentroid, {0, 1.5}], 
                  Point[$CellContext`excPerCentroid], 
                  Text[
                   Style[
                   "\!\(\*SubscriptBox[\(b\), \(1\)]\)'", 
                    20], $CellContext`excPerCentroid, {0, 1.5}], 
                  Point[$CellContext`excAreaCentroid], 
                  Text[
                   Style[
                   "\!\(\*SubscriptBox[\(b\), \(2\)]\)'", 
                    20], $CellContext`excAreaCentroid, {0, 1.5}]}, {}]}, {}], 
              If[
               OptionValue[$CellContext`drInner], {
                EdgeForm[{
                  Darker[Red], Thick}], 
                Polygon[$CellContext`polyInner], 
                Darker[Red], 
                Point[$CellContext`polyInner], 
                If[
                 OptionValue[$CellContext`drBasicCentroids], {
                  Point[$CellContext`innerCentroid], 
                  Text[
                   Style[
                   "\!\(\*SubscriptBox[\(b\), \(0\)]\)\"", 
                    20], $CellContext`innerCentroid, {0, 1.5}], 
                  Point[$CellContext`innerPerCentroid], 
                  Text[
                   Style[
                   "\!\(\*SubscriptBox[\(b\), \(1\)]\)\"", 
                    20], $CellContext`innerPerCentroid, {0, 1.5}], 
                  Point[$CellContext`innerAreaCentroid], 
                  Text[
                   Style[
                   "\!\(\*SubscriptBox[\(b\), \(2\)]\)\"", 
                    20], $CellContext`innerAreaCentroid, {
                   0, 1.5}]}, {}]}, {}], 
              If[
               OptionValue[$CellContext`drFocusPedals], {{Red, Dashed, 
                 Circle[{0, 0}, 
                  Part[$CellContext`causticAB, 1]]}, {Blue, 
                 Point[$CellContext`pedals1], 
                 Point[$CellContext`pedals2]}, {Dashed, Blue, 
                 Map[Line[{$CellContext`fs1, #}]& , $CellContext`pedals1], 
                 Map[
                 Line[{$CellContext`fs2, #}]& , $CellContext`pedals2]}}, {}], 
              If[
               OptionValue[$CellContext`drFocusExcPedals], {{Red, Dashed, 
                 Circle[{0, 0}, $CellContext`a]}, {
                 Darker[Green], 
                 Point[$CellContext`pedalsExc1], 
                 Point[$CellContext`pedalsExc2]}, {Dashed, 
                 Darker[Green], 
                 Map[Line[{$CellContext`fs1, #}]& , $CellContext`pedalsExc1], 
                 Map[
                 Line[{$CellContext`fs2, #}]& , $CellContext`pedalsExc2]}}, \
{}], 
              If[
               OptionValue[$CellContext`drFocusInnerPedals], {{
                 Darker[Red], 
                 Point[$CellContext`pedalsInner1], 
                 Point[$CellContext`pedalsInner2]}, {Dashed, 
                 Darker[Red], 
                 Map[
                 Line[{$CellContext`fs1, #}]& , $CellContext`pedalsInner1], 
                 Map[
                 Line[{$CellContext`fs2, #}]& , $CellContext`pedalsInner2]}}, \
{}], 
              If[
               OptionValue[$CellContext`drFocusAntipedals], {
                If[
                 OptionValue[$CellContext`drAntipedalQLines], {Dashed, Orange, 
                  Map[
                  Line[{$CellContext`fs1, #}]& , $CellContext`antipedals1], 
                  Map[
                  Line[{$CellContext`fs2, #}]& , $CellContext`antipedals2]}, {
                 Dashed, Blue, 
                  Map[Line[{$CellContext`fs1, #}]& , $CellContext`poly], 
                  Map[
                  Line[{$CellContext`fs2, #}]& , $CellContext`poly]}]}, {}], 
              If[
               OptionValue[$CellContext`drFocusExcAntipedals], {
                If[
                 OptionValue[$CellContext`drAntipedalQLines], {Dashed, Orange, 
                  Map[
                  Line[{$CellContext`fs1, #}]& , $CellContext`antipedalsExc1], 
                  Map[
                  Line[{$CellContext`fs2, #}]& , \
$CellContext`antipedalsExc2]}, {Dashed, 
                  Darker[Green], 
                  Map[Line[{$CellContext`fs1, #}]& , $CellContext`exc], 
                  Map[
                  Line[{$CellContext`fs2, #}]& , $CellContext`exc]}]}, {}], 
              If[
               OptionValue[$CellContext`drFocusInnerAntipedals], {
                If[
                 OptionValue[$CellContext`drAntipedalQLines], {Dashed, Orange, 
                  Map[
                  Line[{$CellContext`fs1, #}]& , \
$CellContext`antipedalsInner1], 
                  Map[
                  Line[{$CellContext`fs2, #}]& , \
$CellContext`antipedalsInner2]}, {Dashed, 
                  Darker[Red], 
                  Map[Line[{$CellContext`fs1, #}]& , $CellContext`polyInner], 
                  Map[
                  Line[{$CellContext`fs2, #}]& , $CellContext`polyInner]}]}, \
{}], 
              If[
               Or[
                OptionValue[$CellContext`drMidPedals], 
                OptionValue[$CellContext`drMidExcPedals], 
                OptionValue[$CellContext`drMidInnerPedals], 
                OptionValue[$CellContext`drMidAntipedals], 
                OptionValue[$CellContext`drMidExcAntipedals], 
                OptionValue[$CellContext`drMidInnerAntipedals], 
                OptionValue[$CellContext`drMidPedalRatios], 
                OptionValue[$CellContext`drMidAntipedalRatios]], {
                Point[$CellContext`mid], 
                Text[
                 Style["M", {Black, 20}], $CellContext`mid, {-1.5, 
                 1.5}]}, {}], 
              If[
               OptionValue[$CellContext`drMidPedals], {Blue, 
                Point[$CellContext`pedalsMid], Dashed, 
                Map[
                Line[{$CellContext`mid, #}]& , $CellContext`pedalsMid]}, {}], 
              If[
               OptionValue[$CellContext`drMidExcPedals], {
                Darker[Green], 
                Point[$CellContext`pedalsExcMid], Dashed, 
                Map[
                Line[{$CellContext`mid, #}]& , $CellContext`pedalsExcMid]}, \
{}], 
              If[
               OptionValue[$CellContext`drMidInnerPedals], {
                Darker[Red], 
                Point[$CellContext`pedalsInnerMid], Dashed, 
                Map[
                Line[{$CellContext`mid, #}]& , $CellContext`pedalsInnerMid]}, \
{}], 
              If[
               Or[
                OptionValue[$CellContext`drMidPedals], 
                OptionValue[$CellContext`drMidPedalRatios]], {
                If[
                 Or[
                  OptionValue[$CellContext`drPedalPolys], 
                  OptionValue[$CellContext`drMidPedalRatios]], {
                  FaceForm[{
                    Opacity[0.1], Blue}], 
                  EdgeForm[Blue], 
                  Polygon[$CellContext`pedalsMid]}, {}], Blue, 
                If[
                 OptionValue[$CellContext`drCentroids], {
                  Point[$CellContext`midCentroid], 
                  Text[
                   Style["\!\(\*SubscriptBox[\(C\), \(0\)]\)", 
                    
                    OptionValue[$CellContext`fontSize]], \
$CellContext`midCentroid, {0, 1.5}]}, {}], 
                If[
                 OptionValue[$CellContext`drPerCentroids], {
                  Point[$CellContext`midPerCentroid], 
                  Text[
                   Style["\!\(\*SubscriptBox[\(C\), \(1\)]\)", 
                    
                    OptionValue[$CellContext`fontSize]], \
$CellContext`midPerCentroid, {0, 1.5}]}, {}], 
                If[
                 OptionValue[$CellContext`drAreaCentroids], {
                  Point[$CellContext`midAreaCentroid], 
                  Text[
                   Style["\!\(\*SubscriptBox[\(C\), \(2\)]\)", 
                    
                    OptionValue[$CellContext`fontSize]], \
$CellContext`midAreaCentroid, {0, 1.5}]}, {}]}, {}], 
              If[
               Or[
                OptionValue[$CellContext`drMidExcPedals], 
                OptionValue[$CellContext`drMidPedalRatios]], {
                If[
                 Or[
                  OptionValue[$CellContext`drPedalPolys], 
                  OptionValue[$CellContext`drMidPedalRatios]], {
                  FaceForm[{
                    Opacity[0.1], Green}], 
                  EdgeForm[
                   Darker[Green]], 
                  Polygon[$CellContext`pedalsExcMid]}, {}], 
                Darker[Green], 
                If[
                 OptionValue[$CellContext`drCentroids], {
                  Point[$CellContext`excMidCentroid], 
                  Text[
                   Style["\!\(\*SubscriptBox[\(C\), \(0\)]\)'", 
                    
                    OptionValue[$CellContext`fontSize]], \
$CellContext`excMidCentroid, {0, -1.5}]}, {}], 
                If[
                 OptionValue[$CellContext`drPerCentroids], {
                  Point[$CellContext`excMidPerCentroid], 
                  Text[
                   Style["\!\(\*SubscriptBox[\(C\), \(1\)]\)'", 
                    
                    OptionValue[$CellContext`fontSize]], \
$CellContext`excMidPerCentroid, {0, 1.5}]}, {}], 
                If[
                 OptionValue[$CellContext`drAreaCentroids], {
                  Point[$CellContext`excMidAreaCentroid], 
                  Text[
                   Style["\!\(\*SubscriptBox[\(C\), \(2\)]\)'", 
                    
                    OptionValue[$CellContext`fontSize]], \
$CellContext`excMidAreaCentroid, {0, 1.5}]}, {}]}, {}], 
              If[
               Or[
                OptionValue[$CellContext`drMidInnerPedals], 
                OptionValue[$CellContext`drMidPedalRatios]], {
                If[
                 Or[
                  OptionValue[$CellContext`drPedalPolys], 
                  OptionValue[$CellContext`drMidPedalRatios]], {
                  FaceForm[{
                    Opacity[0.1], Red}], 
                  EdgeForm[
                   Darker[Red]], 
                  Polygon[$CellContext`pedalsInnerMid]}, {}], 
                Darker[Red], 
                If[
                 OptionValue[$CellContext`drCentroids], {
                  Point[$CellContext`innerMidCentroid], 
                  Text[
                   Style["\!\(\*SubscriptBox[\(C\), \(0\)]\)\"", 
                    
                    OptionValue[$CellContext`fontSize]], \
$CellContext`innerMidCentroid, {0, -1.5}]}, {}], 
                If[
                 OptionValue[$CellContext`drPerCentroids], {
                  Point[$CellContext`innerMidPerCentroid], 
                  Text[
                   Style["\!\(\*SubscriptBox[\(C\), \(1\)]\)\"", 
                    
                    OptionValue[$CellContext`fontSize]], \
$CellContext`innerMidPerCentroid, {0, 1.5}]}, {}], 
                If[
                 OptionValue[$CellContext`drAreaCentroids], {
                  Point[$CellContext`innerMidAreaCentroid], 
                  Text[
                   Style["\!\(\*SubscriptBox[\(C\), \(2\)]\)\"", 
                    
                    OptionValue[$CellContext`fontSize]], \
$CellContext`innerMidAreaCentroid, {0, 1.5}]}, {}]}, {}], 
              If[
               OptionValue[$CellContext`drMidAntipedals], 
               If[
                OptionValue[$CellContext`drAntipedalQLines], {Red, Dashed, 
                 Map[
                 Line[{$CellContext`mid, #}]& , $CellContext`antipedalsMid]}, \
{Blue, Dashed, 
                 Map[Line[{$CellContext`mid, #}]& , $CellContext`poly]}], {}], 
              If[
               OptionValue[$CellContext`drMidExcAntipedals], {
                Darker[Green], Dashed, 
                Map[Line[{$CellContext`mid, #}]& , $CellContext`exc]}, {}], 
              If[
               OptionValue[$CellContext`drMidInnerAntipedals], {
                Darker[Red], Dashed, 
                Map[
                Line[{$CellContext`mid, #}]& , $CellContext`polyInner]}, {}], 
              If[
               Or[
                OptionValue[$CellContext`drMidAntipedals], 
                OptionValue[$CellContext`drMidAntipedalRatios]], {
                If[
                 Or[
                  OptionValue[$CellContext`drAntipedalPolys], 
                  OptionValue[$CellContext`drMidAntipedalRatios]], {
                  FaceForm[{
                    Opacity[0.1], Blue}], 
                  EdgeForm[{Dashed, Blue}], 
                  Polygon[$CellContext`antipedalsMid]}, {}], 
                If[
                 OptionValue[$CellContext`drCentroids], {
                  Point[$CellContext`antipedalCentroid], 
                  Text[
                   Style[
                   "\!\(\*SubscriptBox[SuperscriptBox[\(C\), \(*\)], \
\(0\)]\)", 
                    
                    OptionValue[$CellContext`fontSize]], \
$CellContext`antipedalCentroid, {0, 1.5}]}, {}], 
                If[
                 OptionValue[$CellContext`drPerCentroids], {
                  Point[$CellContext`antipedalPerCentroid], 
                  Text[
                   Style[
                   "\!\(\*SubscriptBox[SuperscriptBox[\(C\), \(*\)], \
\(1\)]\)", 
                    
                    OptionValue[$CellContext`fontSize]], \
$CellContext`antipedalPerCentroid, {0, 1.5}]}, {}], 
                If[
                 OptionValue[$CellContext`drAreaCentroids], {
                  Point[$CellContext`antipedalAreaCentroid], 
                  Text[
                   Style[
                   "\!\(\*SubscriptBox[SuperscriptBox[\(C\), \(*\)], \
\(2\)]\)", 
                    
                    OptionValue[$CellContext`fontSize]], \
$CellContext`antipedalAreaCentroid, {0, 1.5}]}, {}]}, {}], 
              If[
               Or[
                OptionValue[$CellContext`drMidExcAntipedals], 
                OptionValue[$CellContext`drMidAntipedalRatios]], {
                If[
                 Or[
                  OptionValue[$CellContext`drAntipedalPolys], 
                  OptionValue[$CellContext`drMidAntipedalRatios]], {
                  FaceForm[{
                    Opacity[0.1], Green}], 
                  EdgeForm[{Dashed, 
                    Darker[Green]}], 
                  Polygon[$CellContext`antipedalsExcMid]}, {}], 
                If[
                 OptionValue[$CellContext`drCentroids], {
                  Point[$CellContext`antipedalExcCentroid], 
                  Text[
                   Style[
                   "\!\(\*SubscriptBox[SuperscriptBox[\(C\), \(*\)], \
\(0\)]\)'", 
                    
                    OptionValue[$CellContext`fontSize]], \
$CellContext`antipedalExcCentroid, {0, 1.5}]}, {}], 
                If[
                 OptionValue[$CellContext`drPerCentroids], {
                  Point[$CellContext`antipedalExcPerCentroid], 
                  Text[
                   Style[
                   "\!\(\*SubscriptBox[SuperscriptBox[\(C\), \(*\)], \
\(1\)]\)'", 
                    
                    OptionValue[$CellContext`fontSize]], \
$CellContext`antipedalExcPerCentroid, {0, 1.5}]}, {}], 
                If[
                 OptionValue[$CellContext`drAreaCentroids], {
                  Point[$CellContext`antipedalExcAreaCentroid], 
                  Text[
                   Style[
                   "\!\(\*SubscriptBox[SuperscriptBox[\(C\), \(*\)], \
\(2\)]\)'", 
                    
                    OptionValue[$CellContext`fontSize]], \
$CellContext`antipedalExcAreaCentroid, {0, 1.5}]}, {}]}, {}], 
              If[
               Or[
                OptionValue[$CellContext`drMidInnerAntipedals], 
                OptionValue[$CellContext`drMidAntipedalRatios]], {
                If[
                 Or[
                  OptionValue[$CellContext`drAntipedalPolys], 
                  OptionValue[$CellContext`drMidAntipedalRatios]], {
                  FaceForm[{
                    Opacity[0.1], Red}], 
                  EdgeForm[{Dashed, 
                    Darker[Red]}], 
                  Polygon[$CellContext`antipedalsInnerMid]}, {}], 
                If[
                 OptionValue[$CellContext`drCentroids], {
                  Point[$CellContext`antipedalInnerCentroid], 
                  Text[
                   Style[
                   "\!\(\*SubscriptBox[SuperscriptBox[\(C\), \(*\)], \(0\)]\)\
\"", 
                    
                    OptionValue[$CellContext`fontSize]], \
$CellContext`antipedalInnerCentroid, {0, 1.5}]}, {}], 
                If[
                 OptionValue[$CellContext`drPerCentroids], {
                  Point[$CellContext`antipedalInnerPerCentroid], 
                  Text[
                   Style[
                   "\!\(\*SubscriptBox[SuperscriptBox[\(C\), \(*\)], \(1\)]\)\
\"", 
                    
                    OptionValue[$CellContext`fontSize]], \
$CellContext`antipedalInnerPerCentroid, {0, 1.5}]}, {}], 
                If[
                 OptionValue[$CellContext`drAreaCentroids], {
                  Point[$CellContext`antipedalInnerAreaCentroid], 
                  Text[
                   Style[
                   "\!\(\*SubscriptBox[SuperscriptBox[\(C\), \(*\)], \(2\)]\)\
\"", 
                    
                    OptionValue[$CellContext`fontSize]], \
$CellContext`antipedalInnerAreaCentroid, {0, 1.5}]}, {}]}, {}], 
              If[
               And[
                OptionValue[$CellContext`drFocusPedalPolys], 
                OptionValue[$CellContext`drFocusPedals]], {
                FaceForm[{
                  Opacity[0.1], Blue}], 
                EdgeForm[Blue], 
                Map[
                Polygon, {$CellContext`pedals1, $CellContext`pedals2}]}, {}], 
              If[
               And[
                OptionValue[$CellContext`drFocusPedalPolys], 
                OptionValue[$CellContext`drFocusExcPedals]], {
                FaceForm[{
                  Opacity[0.1], Green}], 
                EdgeForm[
                 Darker[Green]], 
                Map[
                Polygon, {$CellContext`pedalsExc1, \
$CellContext`pedalsExc2}]}, {}], 
              If[
               And[
                OptionValue[$CellContext`drFocusPedalPolys], 
                OptionValue[$CellContext`drFocusInnerPedals]], {
                FaceForm[{
                  Opacity[0.1], Red}], 
                EdgeForm[
                 Darker[Red]], 
                Map[
                Polygon, {$CellContext`pedalsInner1, \
$CellContext`pedalsInner2}]}, {}], 
              If[
               And[
                OptionValue[$CellContext`drFocusAntipedalPolys], 
                OptionValue[$CellContext`drFocusAntipedals]], {
                FaceForm[{
                  Opacity[0.1], Blue}], 
                EdgeForm[Blue], 
                Map[
                Polygon, {$CellContext`antipedals1, \
$CellContext`antipedals2}]}, {}], 
              If[
               And[
                OptionValue[$CellContext`drFocusAntipedalPolys], 
                OptionValue[$CellContext`drFocusExcAntipedals]], {
                FaceForm[{
                  Opacity[0.1], Green}], 
                EdgeForm[
                 Darker[Green]], 
                Map[
                Polygon, {$CellContext`antipedalsExc1, \
$CellContext`antipedalsExc2}]}, {}], 
              If[
               And[
                OptionValue[$CellContext`drFocusAntipedalPolys], 
                OptionValue[$CellContext`drFocusInnerAntipedals]], {
                FaceForm[{
                  Opacity[0.1], Red}], 
                EdgeForm[
                 Darker[Red]], 
                Map[
                Polygon, {$CellContext`antipedalsInner1, \
$CellContext`antipedalsInner2}]}, {}], 
              If[
               OptionValue[$CellContext`drPs], {
                If[
                 OptionValue[$CellContext`drOrbit], {Blue, 
                  $CellContext`ellLabelPoints[$CellContext`a, \
$CellContext`poly, "P", 
                   OptionValue[$CellContext`fontSize], 
                   OptionValue[$CellContext`lgt]]}, {}], 
                If[
                 OptionValue[$CellContext`drOuter], {
                  Darker[Green], 
                  $CellContext`ellLabelPointsb[$CellContext`excA, \
$CellContext`excB, $CellContext`exc, "P'", 
                   OptionValue[$CellContext`fontSize], 
                   OptionValue[$CellContext`lgt]]}, {}], 
                If[
                 OptionValue[$CellContext`drInner], {
                  Darker[Red], 
                  $CellContext`ellLabelPointsb[
                   Apply[
                   Sequence, $CellContext`causticAB], $CellContext`polyInner, 
                   "P\"", 
                   OptionValue[$CellContext`fontSize], 
                   OptionValue[$CellContext`lgt]]}, {}], 
                If[
                 OptionValue[$CellContext`drPedalPolys], {
                  If[
                   OptionValue[$CellContext`drMidPedals], {Blue, 
                    $CellContext`labelPointsWhite[
                    
                    Map[# + $CellContext`norm[# - $CellContext`mid] 
                    OptionValue[$CellContext`lgt]& , $CellContext`pedalsMid], 
                    "Q", 
                    OptionValue[$CellContext`fontSize], {0, 0}]}, {}], 
                  If[
                   OptionValue[$CellContext`drMidExcPedals], {
                    Darker[Green], 
                    $CellContext`labelPointsWhite[
                    
                    Map[# + $CellContext`norm[# - $CellContext`mid] 
                    OptionValue[$CellContext`lgt]& , \
$CellContext`pedalsExcMid], "Q'", 
                    OptionValue[$CellContext`fontSize], {0, 0}]}, {}], 
                  If[
                   OptionValue[$CellContext`drMidInnerPedals], {
                    Darker[Red], 
                    $CellContext`labelPointsWhite[
                    
                    Map[# + $CellContext`norm[# - $CellContext`mid] 
                    OptionValue[$CellContext`lgt]& , \
$CellContext`pedalsInnerMid], "Q\"", 
                    OptionValue[$CellContext`fontSize], {0, 0}]}, {}]}, {}], 
                If[
                 OptionValue[$CellContext`drAntipedalPolys], {
                  If[
                   OptionValue[$CellContext`drMidAntipedals], {Blue, 
                    $CellContext`labelPointsWhite[
                    
                    Map[# + $CellContext`norm[# - $CellContext`mid] 
                    OptionValue[$CellContext`lgt]& , \
$CellContext`antipedalsMid], "\!\(\*SuperscriptBox[\(Q\), \(*\)]\)", 
                    OptionValue[$CellContext`fontSize], {0, 0}]}, {}], 
                  If[
                   OptionValue[$CellContext`drMidExcAntipedals], {
                    Darker[Green], 
                    $CellContext`labelPointsWhite[
                    
                    Map[# + $CellContext`norm[# - $CellContext`mid] 
                    OptionValue[$CellContext`lgt]& , \
$CellContext`antipedalsExcMid], "\!\(\*SuperscriptBox[\(Q\), \(*\)]\)'", 
                    OptionValue[$CellContext`fontSize], {0, 0}]}, {}], 
                  If[
                   OptionValue[$CellContext`drMidInnerAntipedals], {
                    Darker[Red], 
                    $CellContext`labelPointsWhite[
                    
                    Map[# + $CellContext`norm[# - $CellContext`mid] 
                    OptionValue[$CellContext`lgt]& , \
$CellContext`antipedalsInnerMid], "\!\(\*SuperscriptBox[\(Q\), \(*\)]\)\"", 
                    OptionValue[$CellContext`fontSize], {0, 
                    0}]}, {}]}, {}]}, {}], 
              If[
               OptionValue[$CellContext`drFocusAntipedalPolys], {
                If[
                 OptionValue[$CellContext`drFocusAntipedals], {Blue, 
                  $CellContext`labelPoints[
                   
                   Map[# + $CellContext`norm[# - $CellContext`fs1] 
                    OptionValue[$CellContext`lgt]& , \
$CellContext`antipedals1], 
                   "\!\(\*SubscriptBox[SuperscriptBox[\(Q\), \(*\)], \
\(\(1\)\(,\)\)]\)", 
                   OptionValue[$CellContext`fontSize], {0, 0}], 
                  $CellContext`labelPoints[
                   
                   Map[# + $CellContext`norm[# - $CellContext`fs2] 
                    OptionValue[$CellContext`lgt]& , \
$CellContext`antipedals2], 
                   "\!\(\*SubscriptBox[SuperscriptBox[\(Q\), \(*\)], \
\(\(2\)\(,\)\)]\)", 
                   OptionValue[$CellContext`fontSize], {0, 0}]}, {}], 
                If[
                 OptionValue[$CellContext`drFocusExcAntipedals], {
                  Darker[Green], 
                  $CellContext`labelPoints[
                   
                   Map[# + $CellContext`norm[# - $CellContext`fs1] 
                    OptionValue[$CellContext`lgt]& , \
$CellContext`antipedalsExc1], 
                   "\!\(\*SuperscriptBox[\(Q\), \
\(*\)]\)\!\(\*SubscriptBox[\('\), \(\(1\)\(,\)\)]\)", 
                   OptionValue[$CellContext`fontSize], {0, 0}], 
                  $CellContext`labelPoints[
                   
                   Map[# + $CellContext`norm[# - $CellContext`fs2] 
                    OptionValue[$CellContext`lgt]& , \
$CellContext`antipedalsExc2], 
                   "\!\(\*SuperscriptBox[\(Q\), \
\(*\)]\)\!\(\*SubscriptBox[\('\), \(\(2\)\(,\)\)]\)", 
                   OptionValue[$CellContext`fontSize], {0, 0}]}, {}], 
                If[
                 OptionValue[$CellContext`drFocusInnerAntipedals], {
                  Darker[Red], 
                  $CellContext`labelPoints[
                   
                   Map[# + $CellContext`norm[# - $CellContext`fs1] 
                    OptionValue[$CellContext`lgt]& , \
$CellContext`antipedalsInner1], 
                   "\!\(\*SuperscriptBox[\(Q\), \(*\)]\)\!\(\*SubscriptBox[\(\
\*\"\\\\\\\"\"\), \(\(1\)\(,\)\)]\)", 
                   OptionValue[$CellContext`fontSize], {0, 0}], 
                  $CellContext`labelPoints[
                   
                   Map[# + $CellContext`norm[# - $CellContext`fs2] 
                    OptionValue[$CellContext`lgt]& , \
$CellContext`antipedalsInner2], 
                   "\!\(\*SuperscriptBox[\(Q\), \(*\)]\)\!\(\*SubscriptBox[\(\
\*\"\\\\\\\"\"\), \(\(2\)\(,\)\)]\)", 
                   OptionValue[$CellContext`fontSize], {0, 
                   0}]}, {}]}, {}]}]; $CellContext`pl = StringJoin["N=", 
             ToString[$CellContext`n], ", a=", 
             $CellContext`nfn[$CellContext`a, 2], ", \[Theta]=", 
             $CellContext`nfn[$CellContext`tDeg, 1], "\[Degree]", ", L=", 
             $CellContext`nfn[
              $CellContext`triPer[$CellContext`poly], 
              OptionValue[$CellContext`digsC0]]]; $CellContext`plThs = If[
             OptionValue[$CellContext`drThs], 
             StringJoin[
              If[
               OptionValue[$CellContext`drOrbit], 
               $CellContext`reportThs["\[Theta]", 
                $CellContext`getPolyCosines[$CellContext`poly], 
                OptionValue[$CellContext`digsC0], 
                OptionValue[$CellContext`digs]], ""], 
              If[
               OptionValue[$CellContext`drOuter], 
               $CellContext`reportThs["\[Theta]'", 
                $CellContext`getPolyCosines[$CellContext`exc], 
                OptionValue[$CellContext`digsC0], 
                OptionValue[$CellContext`digs]], ""], 
              If[
               OptionValue[$CellContext`drInner], 
               $CellContext`reportThs["\[Theta]\"", 
                $CellContext`getPolyCosines[$CellContext`polyInner], 
                OptionValue[$CellContext`digsC0], 
                OptionValue[$CellContext`digs]], ""]], 
             ""]; $CellContext`plPhis = If[
             OptionValue[$CellContext`drPhis], 
             StringJoin[
              If[
               OptionValue[$CellContext`drMidPedals], 
               $CellContext`reportThs["\[Phi]", 
                $CellContext`getStarCosines[$CellContext`pedalsMid, \
$CellContext`mid], 
                OptionValue[$CellContext`digsC0], 
                OptionValue[$CellContext`digs]], ""], 
              If[
               OptionValue[$CellContext`drMidExcPedals], 
               $CellContext`reportThs["\[Phi]'", 
                $CellContext`getStarCosines[$CellContext`pedalsExcMid, \
$CellContext`mid], 
                OptionValue[$CellContext`digsC0], 
                OptionValue[$CellContext`digs]], ""], 
              If[
               OptionValue[$CellContext`drMidInnerPedals], 
               $CellContext`reportThs["\[Phi]\"", 
                $CellContext`getStarCosines[$CellContext`pedalsInnerMid, \
$CellContext`mid], 
                OptionValue[$CellContext`digsC0], 
                OptionValue[$CellContext`digs]], ""], 
              If[
               OptionValue[$CellContext`drMidAntipedals], 
               $CellContext`reportThs[
               "\!\(\*SuperscriptBox[\(\[Phi]\), \(*\)]\)", 
                $CellContext`getStarCosines[$CellContext`antipedalsMid, \
$CellContext`mid], 
                OptionValue[$CellContext`digsC0], 
                OptionValue[$CellContext`digs]], ""], 
              If[
               OptionValue[$CellContext`drMidExcAntipedals], 
               $CellContext`reportThs[
               "\!\(\*SuperscriptBox[\(\[Phi]\), \(*\)]\)'", 
                $CellContext`getStarCosines[$CellContext`antipedalsExcMid, \
$CellContext`mid], 
                OptionValue[$CellContext`digsC0], 
                OptionValue[$CellContext`digs]], ""], 
              If[
               OptionValue[$CellContext`drMidInnerAntipedals], 
               $CellContext`reportThs[
               "\!\(\*SuperscriptBox[\(\[Phi]\), \(*\)]\)\"", 
                $CellContext`getStarCosines[$CellContext`antipedalsInnerMid, \
$CellContext`mid], 
                OptionValue[$CellContext`digsC0], 
                OptionValue[$CellContext`digs]], ""]], 
             ""]; $CellContext`plPsis = If[
             OptionValue[$CellContext`drPsis], 
             StringJoin[
              If[
               OptionValue[$CellContext`drMidPedals], 
               $CellContext`reportThs["\[Psi]", 
                $CellContext`getPolyCosines[$CellContext`pedalsMid], 
                OptionValue[$CellContext`digsC0], 
                OptionValue[$CellContext`digs]], ""], 
              If[
               OptionValue[$CellContext`drMidExcPedals], 
               $CellContext`reportThs["\[Psi]'", 
                $CellContext`getPolyCosines[$CellContext`pedalsExcMid], 
                OptionValue[$CellContext`digsC0], 
                OptionValue[$CellContext`digs]], ""], 
              If[
               OptionValue[$CellContext`drMidInnerPedals], 
               $CellContext`reportThs["\[Psi]\"", 
                $CellContext`getPolyCosines[$CellContext`pedalsInnerMid], 
                OptionValue[$CellContext`digsC0], 
                OptionValue[$CellContext`digs]], ""], 
              If[
               OptionValue[$CellContext`drMidAntipedals], 
               $CellContext`reportThs[
               "\!\(\*SuperscriptBox[\(\[Psi]\), \(*\)]\)", 
                $CellContext`getPolyCosines[$CellContext`antipedalsMid], 
                OptionValue[$CellContext`digsC0], 
                OptionValue[$CellContext`digs]], ""], 
              If[
               OptionValue[$CellContext`drMidExcAntipedals], 
               $CellContext`reportThs[
               "\!\(\*SuperscriptBox[\(\[Psi]\), \(*\)]\)'", 
                $CellContext`getPolyCosines[$CellContext`antipedalsExcMid], 
                OptionValue[$CellContext`digsC0], 
                OptionValue[$CellContext`digs]], ""], 
              If[
               OptionValue[$CellContext`drMidInnerAntipedals], 
               $CellContext`reportThs[
               "\!\(\*SuperscriptBox[\(\[Psi]\), \(*\)]\)\"", 
                $CellContext`getPolyCosines[$CellContext`antipedalsInnerMid], 
                OptionValue[$CellContext`digsC0], 
                OptionValue[$CellContext`digs]], ""]], 
             ""]; $CellContext`plCentroid = If[
             OptionValue[$CellContext`drCentroids], 
             StringJoin[
              If[
               OptionValue[$CellContext`drMidPedals], 
               $CellContext`reportThreeCentroids[
               "c", $CellContext`midCentroid, $CellContext`midPerCentroid, \
$CellContext`midAreaCentroid, 
                Part[$CellContext`fs2, 1], 
                OptionValue[$CellContext`digsC0]], ""], 
              If[
               OptionValue[$CellContext`drMidExcPedals], 
               $CellContext`reportThreeCentroids[
               "c'", $CellContext`excMidCentroid, \
$CellContext`excMidPerCentroid, $CellContext`excMidAreaCentroid, 
                Part[$CellContext`fs2, 1], 
                OptionValue[$CellContext`digsC0]], ""], 
              If[
               OptionValue[$CellContext`drMidInnerPedals], 
               $CellContext`reportThreeCentroids[
               "c\"", $CellContext`innerMidCentroid, \
$CellContext`innerMidPerCentroid, $CellContext`innerMidAreaCentroid, 
                Part[$CellContext`fs2, 1], 
                OptionValue[$CellContext`digsC0]], ""], 
              If[
               OptionValue[$CellContext`drMidAntipedals], 
               $CellContext`reportThreeCentroids[
               "\!\(\*SuperscriptBox[\(c\), \(*\)]\)", \
$CellContext`antipedalCentroid, $CellContext`antipedalPerCentroid, \
$CellContext`antipedalAreaCentroid, 
                Part[$CellContext`fs2, 1], 
                OptionValue[$CellContext`digsC0]], ""], 
              If[
               OptionValue[$CellContext`drMidExcAntipedals], 
               $CellContext`reportThreeCentroids[
               "\!\(\*SuperscriptBox[\(c\), \(*\)]\)'", \
$CellContext`antipedalExcCentroid, $CellContext`antipedalExcPerCentroid, \
$CellContext`antipedalExcAreaCentroid, 
                Part[$CellContext`fs2, 1], 
                OptionValue[$CellContext`digsC0]], ""], 
              If[
               OptionValue[$CellContext`drMidInnerAntipedals], 
               $CellContext`reportThreeCentroids[
               "\!\(\*SuperscriptBox[\(c\), \(*\)]\)\"", \
$CellContext`antipedalInnerCentroid, $CellContext`antipedalInnerPerCentroid, \
$CellContext`antipedalInnerAreaCentroid, 
                Part[$CellContext`fs2, 1], 2, 
                OptionValue[$CellContext`digsC0]], ""]], 
             ""]; $CellContext`plMid = StringJoin[
             If[
              Or[
               OptionValue[$CellContext`drMidPedals], 
               OptionValue[$CellContext`drMidAntipedals]], 
              $CellContext`reportThreeVals[
              "\[Sum]\!\(\*SubscriptBox[\(p\), \(i\)]\)", 
               "\[Sum]\!\(\*SuperscriptBox[SubscriptBox[\(p\), \(i\)], \(2\)]\
\)", "\[Product]\!\(\*SubscriptBox[\(p\), \(i\)]\)", \
$CellContext`midOrbitSum, $CellContext`midOrbitSumSqr, \
$CellContext`midOrbitProd, 
               OptionValue[$CellContext`digs]], ""], 
             If[
              OptionValue[$CellContext`drMidPedals], 
              $CellContext`reportThreeVals[
              "\[Sum]\!\(\*SubscriptBox[\(q\), \(i\)]\)", 
               "\[Sum]\!\(\*SuperscriptBox[SubscriptBox[\(q\), \(i\)], \(2\)]\
\)", "\[Product]\!\(\*SubscriptBox[\(q\), \(i\)]\)", \
$CellContext`pedalsMidSum, $CellContext`pedalsMidSumSqr, \
$CellContext`pedalsMidProd, 
               OptionValue[$CellContext`digs]], ""], 
             If[
              OptionValue[$CellContext`drMidAntipedals], 
              $CellContext`reportThreeVals[
              "\[Sum]\!\(\*SubscriptBox[SuperscriptBox[\(q\), \(*\)], \
\(i\)]\)", 
               "\[Sum]\!\(\*SuperscriptBox[SubscriptBox[SuperscriptBox[\(q\), \
\(*\)], \(i\)], \(2\)]\)", 
               "\[Product]\!\(\*SubscriptBox[SuperscriptBox[\(q\), \(*\)], \
\(i\)]\)", $CellContext`antipedalsMidSum, $CellContext`antipedalsMidSumSqr, \
$CellContext`antipedalsMidProd, 
               OptionValue[$CellContext`digs]], ""], 
             If[
              Or[
               And[
                OptionValue[$CellContext`drPedalPolys], 
                OptionValue[$CellContext`drMidPedals]], 
               And[
                OptionValue[$CellContext`drAntipedalPolys], 
                OptionValue[$CellContext`drMidAntipedals]]], 
              $CellContext`reportAreaPair[
              "\!\(\*SubscriptBox[\(A\), \(m\)]\)", 
               "\!\(\*SubscriptBox[SuperscriptBox[\(A\), \(*\)], \(m\)]\)", \
$CellContext`pedalsMidA, $CellContext`antipedalsMidA, 
               OptionValue[$CellContext`digs]], ""]]; $CellContext`plExcMid = 
           StringJoin[
             If[
              Or[
               OptionValue[$CellContext`drMidExcPedals], 
               OptionValue[$CellContext`drMidExcAntipedals]], 
              $CellContext`reportThreeVals[
              "\[Sum]p\!\(\*SubscriptBox[\('\), \(i\)]\)", 
               "\[Sum]p\!\(\*SuperscriptBox[SubscriptBox[\('\), \(i\)], \
\(2\)]\)", 
               "\[Product]p\!\(\*SubscriptBox[\('\), \(i\)]\)", \
$CellContext`midExcSum, $CellContext`midExcSumSqr, $CellContext`midExcProd, 
               OptionValue[$CellContext`digs]], ""], 
             If[
              OptionValue[$CellContext`drMidExcPedals], 
              $CellContext`reportThreeVals[
              "\[Sum]q\!\(\*SubscriptBox[\('\), \(i\)]\)", 
               "\[Sum]q\!\(\*SuperscriptBox[SubscriptBox[\('\), \(i\)], \
\(2\)]\)", 
               "\[Product]q\!\(\*SubscriptBox[\('\), \(i\)]\)", \
$CellContext`pedalsExcMidSum, $CellContext`pedalsExcMidSumSqr, \
$CellContext`pedalsExcMidProd, 
               OptionValue[$CellContext`digs]], ""], 
             If[
              OptionValue[$CellContext`drMidExcAntipedals], 
              $CellContext`reportThreeVals[
              "\[Sum]\!\(\*SubscriptBox[SuperscriptBox[\(q\), \(*\)], \
\(i\)]\)'", 
               "\[Sum](\!\(\*SubscriptBox[SuperscriptBox[\(q\), \(*\)], \
\(i\)]\)'\!\(\*SuperscriptBox[\()\), \(2\)]\)", 
               "\[Product]\!\(\*SubscriptBox[SuperscriptBox[\(q\), \(*\)], \
\(i\)]\)", $CellContext`antipedalsExcSum, $CellContext`antipedalsExcSumSqr, \
$CellContext`antipedalsExcProd, 
               OptionValue[$CellContext`digs]], ""], 
             If[
              Or[
               And[
                OptionValue[$CellContext`drPedalPolys], 
                OptionValue[$CellContext`drMidExcPedals]], 
               And[
                OptionValue[$CellContext`drAntipedalPolys], 
                OptionValue[$CellContext`drMidExcAntipedals]]], 
              $CellContext`reportAreaPair[
              "\!\(\*SubscriptBox[\(A\), \(m\)]\)'", 
               "\!\(\*SubscriptBox[SuperscriptBox[\(A\), \(*\)], \(m\)]\)'", \
$CellContext`pedalsExcMidA, $CellContext`antipedalsExcMidA, 
               OptionValue[$CellContext`digs]], ""]]; $CellContext`plInnerMid = 
           StringJoin[
             If[
              Or[
               OptionValue[$CellContext`drMidInnerPedals], 
               OptionValue[$CellContext`drMidInnerAntipedals]], 
              $CellContext`reportThreeVals[
              "\[Sum]\!\(\*SubscriptBox[\(p\), \(i\)]\)\"", 
               
               "\[Sum](\!\(\*SubscriptBox[\(p\), \
\(i\)]\)\"\!\(\*SuperscriptBox[\()\), \(2\)]\)", 
               "\[Product]\!\(\*SubscriptBox[\(p\), \(i\)]\)\"", \
$CellContext`midInnerSum, $CellContext`midInnerSumSqr, \
$CellContext`midInnerProd, 
               OptionValue[$CellContext`digs]], ""], 
             If[
              OptionValue[$CellContext`drMidInnerPedals], 
              $CellContext`reportThreeVals[
              "\[Sum]\!\(\*SubscriptBox[\(q\), \(i\)]\)\"", 
               "\[Sum](\!\(\*SubscriptBox[\(q\), \
\(i\)]\)\"\!\(\*SuperscriptBox[\()\), \(2\)]\)", 
               "\[Product]\!\(\*SubscriptBox[\(q\), \(i\)]\)\"", \
$CellContext`pedalsInnerMidSum, $CellContext`pedalsInnerMidSumSqr, \
$CellContext`pedalsInnerMidProd, 
               OptionValue[$CellContext`digs]], ""], 
             If[
              OptionValue[$CellContext`drMidInnerAntipedals], 
              $CellContext`reportThreeVals[
              "\[Sum]\!\(\*SubscriptBox[SuperscriptBox[\(q\), \(*\)], \
\(i\)]\)\"", 
               "\[Sum](\!\(\*SubscriptBox[SuperscriptBox[\(q\), \(*\)], \
\(i\)]\)\"\!\(\*SuperscriptBox[\()\), \(2\)]\)", 
               "\[Product]\!\(\*SubscriptBox[SuperscriptBox[\(q\), \(*\)], \
\(i\)]\)\"", $CellContext`antipedalsInnerSum, \
$CellContext`antipedalsInnerSumSqr, $CellContext`antipedalsInnerProd, 
               OptionValue[$CellContext`digs]], ""], 
             If[
              Or[
               And[
                OptionValue[$CellContext`drPedalPolys], 
                OptionValue[$CellContext`drMidInnerPedals]], 
               And[
                OptionValue[$CellContext`drAntipedalPolys], 
                OptionValue[$CellContext`drMidInnerAntipedals]]], 
              $CellContext`reportAreaPair[
              "\!\(\*SubscriptBox[\(A\), \(m\)]\)\"", 
               "\!\(\*SubscriptBox[SuperscriptBox[\(A\), \(*\)], \(m\)]\)\"", \
$CellContext`pedalsInnerMidA, $CellContext`antipedalsInnerMidA, 
               OptionValue[$CellContext`digs]], ""]]; $CellContext`plArea = 
           StringJoin[
             If[
              OptionValue[$CellContext`drPlAreas], 
              StringJoin[
               $CellContext`reportAreaTriple[
               "A", "A'", 
                "A\"", $CellContext`polyA, $CellContext`polyExcA, \
$CellContext`polyInnerA, 
                OptionValue[$CellContext`digs]], 
               ", \!\(\*SubscriptBox[\(k\), \(113\)]\)=", 
               $CellContext`nfn[($CellContext`a/(
                 Part[$CellContext`causticAB, 1] 
                 Part[$CellContext`causticAB, 2]))^2, 
                OptionValue[$CellContext`digs]]], ""], 
             If[
              OptionValue[$CellContext`drMidPedalRatios], 
              $CellContext`reportAreaTriple[
              "\!\(\*SubscriptBox[\(A\), \(m\)]\)", 
               "\!\(\*SubscriptBox[\(A\), \(m\)]\)'", 
               "\!\(\*SubscriptBox[\(A\), \(m\)]\)\"", \
$CellContext`pedalsMidA, $CellContext`pedalsExcMidA, \
$CellContext`pedalsInnerMidA, 
               OptionValue[$CellContext`digs]], ""], 
             If[
              OptionValue[$CellContext`drMidAntipedalRatios], 
              $CellContext`reportAreaTriple[
              "\!\(\*SubscriptBox[SuperscriptBox[\(A\), \(*\)], \(m\)]\)", 
               "\!\(\*SubscriptBox[SuperscriptBox[\(A\), \(*\)], \(m\)]\)'", 
               "\!\(\*SubscriptBox[SuperscriptBox[\(A\), \(*\)], \(m\)]\)\"", \
$CellContext`antipedalsMidA, $CellContext`antipedalsExcMidA, \
$CellContext`antipedalsInnerMidA, 
               OptionValue[$CellContext`digs]], ""]]; $CellContext`plMidArea = 
           StringJoin[
             If[
              OptionValue[$CellContext`drMidPedals], 
              $CellContext`reportAreaPair[
              "A", "\!\(\*SubscriptBox[\(A\), \(m\)]\)", $CellContext`polyA, \
$CellContext`pedalsMidA, 
               OptionValue[$CellContext`digs]], ""], 
             If[
              OptionValue[$CellContext`drMidAntipedals], 
              $CellContext`reportAreaPair[
              "A", "\!\(\*SubscriptBox[SuperscriptBox[\(A\), \(*\)], \
\(m\)]\)", $CellContext`polyA, $CellContext`antipedalsMidA, 
               OptionValue[$CellContext`digs]], 
              ""]]; $CellContext`plMidExcArea = StringJoin[
             If[
              OptionValue[$CellContext`drMidExcPedals], 
              $CellContext`reportAreaPair[
              "A'", "\!\(\*SubscriptBox[\(A\), \(m\)]\)'", \
$CellContext`polyExcA, $CellContext`pedalsExcMidA, 
               OptionValue[$CellContext`digs]], ""], 
             If[
              OptionValue[$CellContext`drMidExcAntipedals], 
              $CellContext`reportAreaPair[
              "A'", "\!\(\*SubscriptBox[SuperscriptBox[\(A\), \(*\)], \
\(m\)]\)'", $CellContext`polyExcA, $CellContext`antipedalsExcMidA, 
               OptionValue[$CellContext`digs]], 
              ""]]; $CellContext`plMidInnerArea = StringJoin[
             If[
              OptionValue[$CellContext`drMidInnerPedals], 
              $CellContext`reportAreaPair[
              "A\"", "\!\(\*SubscriptBox[\(A\), \(m\)]\)", \
$CellContext`polyInnerA, $CellContext`pedalsInnerMidA, 
               OptionValue[$CellContext`digs]], ""], 
             If[
              OptionValue[$CellContext`drMidInnerAntipedals], 
              $CellContext`reportAreaPair[
              "\!\(\*SuperscriptBox[\(A\), \(*\)]\)\"", 
               "\!\(\*SuperscriptBox[SubscriptBox[\(A\), \(m\)], \(*\)]\)", \
$CellContext`polyInnerA, $CellContext`antipedalsInnerMidA, 
               OptionValue[$CellContext`digs]], ""]]; $CellContext`plOrbit = 
           StringJoin[
             If[
              Or[
               OptionValue[$CellContext`drFocusPedals], 
               OptionValue[$CellContext`drFocusAntipedals]], 
              StringJoin[
               $CellContext`reportSums[
               "p", $CellContext`orbitSum1, $CellContext`orbitSum2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportSums[
               "\!\(\*SuperscriptBox[\(p\), \(2\)]\)", \
$CellContext`orbitSumSqr1, $CellContext`orbitSumSqr2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportProds[
               "p", $CellContext`orbitProd1, $CellContext`orbitProd2, 
                OptionValue[$CellContext`digs]]], ""], 
             If[
              OptionValue[$CellContext`drFocusPedals], 
              StringJoin[
               $CellContext`reportSums[
               "q", $CellContext`pedalSum1, $CellContext`pedalSum2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportSums[
               "\!\(\*SuperscriptBox[\(q\), \(2\)]\)", \
$CellContext`pedalSumSqr1, $CellContext`pedalSumSqr2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportProds[
               "q", $CellContext`pedalProd1, $CellContext`pedalProd2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportAreas[
               "A", $CellContext`pedals1A, $CellContext`pedals2A, 
                OptionValue[$CellContext`digs]]], ""], 
             If[
              OptionValue[$CellContext`drFocusAntipedals], 
              StringJoin[
               $CellContext`reportSums[
               "\!\(\*SuperscriptBox[\(q\), \(*\)]\)", \
$CellContext`antipedalSum1, $CellContext`antipedalSum2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportSums[
               "(\!\(\*SuperscriptBox[\(q\), \(2\)]\)\!\(\*SuperscriptBox[\()\
\), \(*\)]\)", $CellContext`antipedalSumSqr1, $CellContext`antipedalSumSqr2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportProds[
               "\!\(\*SuperscriptBox[\(q\), \(*\)]\)", \
$CellContext`antipedalProd1, $CellContext`antipedalProd2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportAreas[
               "\!\(\*SuperscriptBox[\(A\), \(*\)]\)", \
$CellContext`antipedals1A, $CellContext`antipedals2A, 
                OptionValue[$CellContext`digs]]], ""]]; $CellContext`plExc = 
           StringJoin[
             If[
              Or[
               OptionValue[$CellContext`drFocusExcPedals], 
               OptionValue[$CellContext`drFocusExcAntipedals]], 
              StringJoin[
               $CellContext`reportSums[
               "p'", $CellContext`excSum1, $CellContext`excSum2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportSums[
               "(p'\!\(\*SuperscriptBox[\()\), \(2\)]\)", \
$CellContext`excSumSqr1, $CellContext`excSumSqr2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportProds[
               "p'", $CellContext`excProd1, $CellContext`excProd2, 
                OptionValue[$CellContext`digs]]], ""], 
             If[
              OptionValue[$CellContext`drFocusExcPedals], 
              StringJoin[
               $CellContext`reportSums[
               "q'", $CellContext`pedalExcSum1, $CellContext`pedalExcSum2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportSums[
               "(q'\!\(\*SuperscriptBox[\()\), \(2\)]\)", \
$CellContext`pedalExcSumSqr1, $CellContext`pedalExcSumSqr2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportProds[
               "q'", $CellContext`pedalExcProd1, $CellContext`pedalExcProd2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportAreas[
               "A'", $CellContext`pedalsExc1A, $CellContext`pedalsExc2A, 
                OptionValue[$CellContext`digs]]], ""], 
             If[
              OptionValue[$CellContext`drFocusExcAntipedals], 
              StringJoin[
               $CellContext`reportSums[
               "\!\(\*SuperscriptBox[\(q\), \(*\)]\)", \
$CellContext`antipedalExcSum1, $CellContext`antipedalExcSum2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportSums[
               "(\!\(\*SuperscriptBox[\(q\), \(2\)]\)\!\(\*SuperscriptBox[\()\
\), \(*\)]\)", $CellContext`antipedalExcSumSqr1, \
$CellContext`antipedalExcSumSqr2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportProds[
               "\!\(\*SuperscriptBox[\(q\), \(*\)]\)", \
$CellContext`antipedalExcProd1, $CellContext`antipedalExcProd2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportAreas[
               "\!\(\*SuperscriptBox[\(A\), \(*\)]\)", \
$CellContext`antipedalsExc1A, $CellContext`antipedalsExc2A, 
                OptionValue[$CellContext`digs]]], ""]]; $CellContext`plInner = 
           StringJoin[
             If[
              Or[
               OptionValue[$CellContext`drFocusInnerPedals], 
               OptionValue[$CellContext`drFocusInnerAntipedals]], 
              StringJoin[
               $CellContext`reportSums[
               "p\"", $CellContext`innerSum1, $CellContext`innerSum2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportSums[
               "(p\"\!\(\*SuperscriptBox[\()\), \(2\)]\)", \
$CellContext`innerSumSqr1, $CellContext`innerSumSqr2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportProds[
               "p\"", $CellContext`innerProd1, $CellContext`innerProd2, 
                OptionValue[$CellContext`digs]]], ""], 
             If[
              OptionValue[$CellContext`drFocusInnerPedals], 
              StringJoin[
               $CellContext`reportSums[
               "q\"", $CellContext`pedalInnerSum1, \
$CellContext`pedalInnerSum2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportSums[
               "(q\"\!\(\*SuperscriptBox[\()\), \(2\)]\)", \
$CellContext`pedalInnerSumSqr1, $CellContext`pedalInnerSumSqr2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportProds[
               "q\"", $CellContext`pedalInnerProd1, \
$CellContext`pedalInnerProd2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportAreas[
               "A\"", $CellContext`pedalsInner1A, $CellContext`pedalsInner2A, 
                OptionValue[$CellContext`digs]]], ""], 
             If[
              OptionValue[$CellContext`drFocusInnerAntipedals], 
              StringJoin[
               $CellContext`reportSums[
               "\!\(\*SuperscriptBox[\(q\), \(*\)]\)\"", \
$CellContext`antipedalInnerSum1, $CellContext`antipedalInnerSum2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportSums[
               "(\!\(\*SuperscriptBox[\(q\), \
\(*\)]\)\"\!\(\*SuperscriptBox[\()\), \(2\)]\)", \
$CellContext`antipedalInnerSumSqr1, $CellContext`antipedalInnerSumSqr2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportProds[
               "\!\(\*SuperscriptBox[\(q\), \(*\)]\)\"", \
$CellContext`antipedalInnerProd1, $CellContext`antipedalInnerProd2, 
                OptionValue[$CellContext`digs]], 
               $CellContext`reportAreas[
               "\!\(\*SuperscriptBox[\(A\), \(*\)]\)\"", \
$CellContext`antipedalsInner1A, $CellContext`antipedalsInner2A, 
                OptionValue[$CellContext`digs]]], 
              ""]]; $CellContext`plStachelLsRs = If[
             OptionValue[$CellContext`drStachelLsRs], 
             StringJoin["\n\[Product]\!\(\*SubscriptBox[\(l\), \(i\)]\)=", 
              $CellContext`nfn[
               Part[$CellContext`lsrs, 1], 
               OptionValue[$CellContext`digs]], 
              ", \[Product]\!\(\*SubscriptBox[\(r\), \(i\)]\)=", 
              $CellContext`nfn[
               Part[$CellContext`lsrs, 2], 
               OptionValue[$CellContext`digs]]], ""]; Show[{$CellContext`ell, 
             If[
              
              OptionValue[$CellContext`drCaustic], $CellContext`ellCaustic, \
{}], $CellContext`gr}, PlotLabel -> Style[
              
              StringJoin[$CellContext`pl, $CellContext`plArea, \
$CellContext`plOrbit, $CellContext`plExc, $CellContext`plInner, \
$CellContext`plMid, $CellContext`plExcMid, $CellContext`plInnerMid, \
$CellContext`plMidArea, $CellContext`plMidExcArea, \
$CellContext`plMidInnerArea, $CellContext`plStachelLsRs, \
$CellContext`plCentroid, $CellContext`plThs, $CellContext`plPhis, \
$CellContext`plPsis], {Black, FontFamily -> "Helvetica", 
               OptionValue[$CellContext`fontSize]}]]], 
        Options[$CellContext`drawPolyCausticInner] = {$CellContext`drOrbit -> 
          True, $CellContext`drCaustic -> True, $CellContext`drOuter -> 
          True, $CellContext`drInner -> False, $CellContext`drFoci -> 
          False, $CellContext`drPs -> False, $CellContext`drThs -> 
          False, $CellContext`drPhis -> False, $CellContext`drPsis -> 
          False, $CellContext`drExcircles -> 
          False, $CellContext`drFocusPedalPolys -> 
          False, $CellContext`drFocusPedals -> 
          False, $CellContext`drFocusExcPedals -> 
          False, $CellContext`drFocusInnerPedals -> 
          False, $CellContext`drFocusAntipedalPolys -> 
          False, $CellContext`drFocusAntipedals -> 
          False, $CellContext`drFocusExcAntipedals -> 
          False, $CellContext`drFocusInnerAntipedals -> 
          False, $CellContext`drMidPedals -> 
          False, $CellContext`drMidExcPedals -> 
          False, $CellContext`drMidInnerPedals -> 
          False, $CellContext`drPedalPolys -> 
          False, $CellContext`drAntipedalPolys -> 
          False, $CellContext`drAntipedalQLines -> 
          False, $CellContext`drMidAntipedals -> 
          False, $CellContext`drMidExcAntipedals -> 
          False, $CellContext`drMidInnerAntipedals -> 
          False, $CellContext`drMidPedalRatios -> 
          False, $CellContext`drMidAntipedalRatios -> 
          False, $CellContext`drCentroids -> 
          False, $CellContext`drPerCentroids -> 
          False, $CellContext`drAreaCentroids -> 
          False, $CellContext`drBasicCentroids -> 
          False, $CellContext`drPlAreas -> False, $CellContext`drPlShort -> 
          False, $CellContext`drMongeCircle -> 
          False, $CellContext`drFocusPedalCircle -> 
          False, $CellContext`drFocusExcPedalCircle -> 
          False, $CellContext`drFocusInnerPedalCircle -> 
          False, $CellContext`drConwayCircle -> 
          False, $CellContext`drStachelLsRs -> False, $CellContext`midParamX -> 
          0.5, $CellContext`midParamY -> 0, $CellContext`lgt -> 
          0.1, $CellContext`fontSize -> 16, $CellContext`digs -> 
          4, $CellContext`digsC0 -> 3}, $CellContext`gr = Graphics[{
           PointSize[Large], 
           Arrowheads[Medium], {
            RGBColor[1, 0.5, 0], 
            
            Point[{{1.5, 0}, {0.4363389981249827, 
              0.956755693584728}, {-0.4363389981249822, 
              0.9567556935847281}, {-1.3090169943749475`, 
              0.4882961343909516}, {-1.3090169943749475`, \
-0.4882961343909516}}], 
            
            Line[{{1.5, 0}, {0.4363389981249827, 
              0.956755693584728}, {-0.4363389981249822, 
              0.9567556935847281}, {-1.3090169943749475`, 
              0.4882961343909516}, {-1.3090169943749475`, \
-0.4882961343909516}}], 
            Circle[{1.5, 0}, 0.05], 
            Circle[{-1.3090169943749475`, -0.4882961343909516}, 0.05], {
             
             Arrow[{{0.4363389981249827, 0.956755693584728}, {
              0.40654089162374046`, 0.8097452420891265}}], 
             
             Arrow[{{-0.4363389981249822, 
              0.9567556935847281}, {-0.40654089162374, 0.8097452420891266}}], 
             
             Arrow[{{-1.3090169943749475`, 
              0.4882961343909516}, {-1.1941220249695923`, 
              0.3918640546387108}}]}}, {}, {
            GrayLevel[0], 
            Point[{{-1.118033988749895, 0}, {1.118033988749895, 0}}]}, {}, {
            RGBColor[0, 0, 1], 
            Thickness[Large], 
            
            Line[{{1.5, 0.}, {
             1.0713639835612354`, -0.6998981559969361}, {-0.4164741824668956, \
-0.9606824554193014}, {-1.4061428996297496`, -0.3481775701632971}, \
{-1.406142899629793, 0.34817757016321893`}, {-0.41647418246707113`, 
             0.9606824554192678}, {1.0713639835611284`, 0.699898155997009}, {
             1.4999999999999998`, 7.471800955727304*^-14}}], 
            Point[{1.5, 0.}], {
             Arrow[{{1.5, 0.}, {1.35, 0.}}], 
             
             Arrow[{{1.0713639835612354`, -0.6998981559969361}, {
              0.9869894895706589, -0.5758782190358402}}], 
             
             Arrow[{{-0.4164741824668956, -0.9606824554193014}, \
{-0.38809488216234067`, -0.8133915347411282}}], 
             
             Arrow[{{-1.4061428996297496`, -0.3481775701632971}, \
{-1.2751067943084122`, -0.27517387777575153`}}], 
             
             Arrow[{{-1.406142899629793, 
              0.34817757016321893`}, {-1.2751067943084478`, 
              0.27517387777568764`}}], 
             
             Arrow[{{-0.41647418246707113`, 
              0.9606824554192678}, {-0.3880948821625037, 0.813391534741097}}], 
             
             Arrow[{{1.0713639835611284`, 0.699898155997009}, {
              0.9869894895705636, 0.5758782190359052}}], 
             
             Arrow[{{1.4999999999999998`, 7.471800955727304*^-14}, {
              1.3499999999999999`, 
              5.790645740688661*^-14}}]}}, {}}], \
$CellContext`getPolyCausticInner[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`n, 
           Blank[]], 
          Pattern[$CellContext`tDeg, 
           Blank[]]] := 
        Module[{$CellContext`causticData, $CellContext`causticAB, \
$CellContext`logErr, $CellContext`p1rot, $CellContext`tang, \
$CellContext`p2rot, $CellContext`bouncedRot, $CellContext`normsRot, \
$CellContext`tangs, $CellContext`tRad}, $CellContext`causticData = \
$CellContext`getCausticBoth[$CellContext`a, $CellContext`n]; \
$CellContext`logErr = Log10[
             ReplaceAll["error", $CellContext`causticData]]; 
          If[$CellContext`logErr > -6, 
            Print["a=", 
             $CellContext`nfn[$CellContext`a, 2], ", n=", $CellContext`n, 
             ": \!\(\*SubscriptBox[\(log\), \(10\)]\)(error)=", 
             $CellContext`nfn[$CellContext`logErr, 
              2]]]; $CellContext`causticAB = 
           ReplaceAll[
            "causticAB", $CellContext`causticData]; $CellContext`tRad = \
$CellContext`toRad[$CellContext`tDeg]; $CellContext`p1rot = {$CellContext`a 
             Cos[$CellContext`tRad], 
             
             Sin[$CellContext`tRad]}; $CellContext`tang = \
$CellContext`getTangCW[$CellContext`a, $CellContext`p1rot, 
             Apply[Sequence, $CellContext`causticAB]]; $CellContext`p2rot = 
           Part[
             $CellContext`ellInterRayUnprot[$CellContext`a, \
$CellContext`p1rot, $CellContext`tang - $CellContext`p1rot], 
             2]; $CellContext`bouncedRot = \
$CellContext`bounceRay[$CellContext`a, $CellContext`p1rot, \
$CellContext`p2rot, $CellContext`n - 1]; $CellContext`tangs = 
           Map[$CellContext`getTangCW[$CellContext`a, #, 
              Apply[
              Sequence, $CellContext`causticAB]]& , $CellContext`bouncedRot]; {
            Most[$CellContext`bouncedRot], 
            
            Most[$CellContext`tangs], $CellContext`causticAB}], \
$CellContext`getCausticBoth[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`n, 
           Blank[]]] := 
        Module[{$CellContext`a0, $CellContext`caustic}, $CellContext`a0 = 
           If[$CellContext`a < 1, 
             1/$CellContext`a, $CellContext`a]; $CellContext`caustic = If[
             EvenQ[$CellContext`n], 
             $CellContext`getCausticEvenN[$CellContext`a0, $CellContext`n], 
             $CellContext`getCausticOddN[$CellContext`a0, $CellContext`n]]; 
          If[$CellContext`a < 1, 
            $CellContext`rotCaustic[$CellContext`caustic], \
$CellContext`caustic]], $CellContext`getCausticEvenN[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`n, 
           Blank[]]] := 
        Module[{$CellContext`mod4, $CellContext`ts, $CellContext`ps, \
$CellContext`p1, $CellContext`left, $CellContext`norms, $CellContext`tsyms, \
$CellContext`min, $CellContext`p2, $CellContext`f1, $CellContext`f2, \
$CellContext`f2p, $CellContext`pb, $CellContext`causticAxes, \
$CellContext`poly}, $CellContext`mod4 = 
           Mod[$CellContext`n, 4] == 0; $CellContext`p1 = {$CellContext`a, 0}; 
          If[$CellContext`n > 
            4, $CellContext`ts = $CellContext`getInitTsEven[$CellContext`a, \
$CellContext`n]; $CellContext`ps = $CellContext`getEllPs[$CellContext`a, \
$CellContext`ts]; $CellContext`left = If[$CellContext`mod4, {0, 1}, 
               $CellContext`flipX[
                Last[$CellContext`ps]]]; $CellContext`norms = 
             Map[$CellContext`norm, 
               Map[$CellContext`ellGrad[$CellContext`a, 
                 Part[#, 1], 
                 Part[#, 2]]& , $CellContext`ps]]; $CellContext`tsyms = Table[
               Symbol[
                StringJoin["t", 
                 ToString[$CellContext`i]]], {$CellContext`i, 
                Length[$CellContext`ps]}]; $CellContext`min = Quiet[
               FindMinimum[
                $CellContext`getRelaxErrEven[$CellContext`a, \
$CellContext`tsyms, $CellContext`mod4], 
                
                MapThread[{#, #2}& , {$CellContext`tsyms, $CellContext`ts}]]]; \
$CellContext`p2 = Part[
               $CellContext`getEllPs[$CellContext`a, 
                ReplaceAll[$CellContext`tsyms, 
                 Part[$CellContext`min, 2]]], 1], $CellContext`ps = {{0, 
              1}}; $CellContext`norms = {{-1, 0}}; $CellContext`p2 = {0, 
              1}; $CellContext`left = {-$CellContext`a, 
               0}; $CellContext`min = {0, {}}; 
            Null]; {$CellContext`f1, $CellContext`f2} = \
$CellContext`getFoci[$CellContext`a]; $CellContext`f2p = \
$CellContext`reflAboutLine[$CellContext`f2, $CellContext`p1, $CellContext`p2]; \
$CellContext`pb = $CellContext`interRays[$CellContext`f1, $CellContext`f2p - \
$CellContext`f1, $CellContext`p1, $CellContext`p2 - $CellContext`p1]; \
$CellContext`causticAxes = First[
             Select[
              $CellContext`getConfocalEll[
               Sqrt[$CellContext`a^2 - 1], $CellContext`pb], And[
              Part[#, 1] > 0, Part[#, 2] > 0]& ]]; $CellContext`poly = Chop[
             $CellContext`bounceRay[$CellContext`a, $CellContext`p1, \
$CellContext`p2, $CellContext`n - 1]]; {
           "a" -> $CellContext`a, "n" -> $CellContext`n, 
            "causticAB" -> $CellContext`causticAxes, 
            "poly" -> $CellContext`poly, "error" -> Part[$CellContext`min, 1],
             "f1" -> $CellContext`f1, "f2" -> $CellContext`f2, 
            "f2p" -> $CellContext`f2p, "pb" -> $CellContext`pb, 
            "guessPoly" -> {$CellContext`p1, 
              Apply[Sequence, $CellContext`ps], $CellContext`left}, 
            "guessNorms" -> $CellContext`norms}], $CellContext`getInitTsEven[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`n, 
           Blank[]]] := 
        Module[{$CellContext`slices, $CellContext`tstep, $CellContext`ts}, \
$CellContext`slices = Floor[($CellContext`n/2 + 1)/2]; $CellContext`tstep = 
           Pi/(2. $CellContext`slices); $CellContext`ts = 
           Table[$CellContext`i $CellContext`tstep, {$CellContext`i, 
              1, $CellContext`slices - 
              1}]; $CellContext`ts], $CellContext`getEllPs[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`ts, 
           Blank[]]] := Map[{$CellContext`a Cos[#], 
           Sin[#]}& , $CellContext`ts], $CellContext`flipX[{
           Pattern[$CellContext`x, 
            Blank[]], 
           Pattern[$CellContext`y, 
            Blank[]]}] := {-$CellContext`x, $CellContext`y}, $CellContext`norm[
          Pattern[$CellContext`v, 
           
           Blank[]]] := $CellContext`v/$CellContext`magn[$CellContext`v], \
$CellContext`magn[
          Pattern[$CellContext`v, 
           Blank[]]] := Sqrt[
          $CellContext`magn2[$CellContext`v]], $CellContext`magn2[
          Pattern[$CellContext`v, 
           Blank[]]] := 
        Dot[$CellContext`v, $CellContext`v], $CellContext`ellGrad[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           
           Blank[]]] := -{$CellContext`x, $CellContext`y $CellContext`a^2}, \
$CellContext`getRelaxErrEven[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`ts, 
           Blank[]], 
          Pattern[$CellContext`mod4, 
           Blank[]]] := 
        Module[{$CellContext`ps, $CellContext`left, $CellContext`psAug, \
$CellContext`norms, $CellContext`bis}, $CellContext`ps = \
$CellContext`getEllPs[$CellContext`a, $CellContext`ts]; $CellContext`left = 
           If[$CellContext`mod4, {0, 1}, 
             $CellContext`flipX[
              Last[$CellContext`ps]]]; $CellContext`psAug = {{$CellContext`a, 
              0}, 
             Apply[
             Sequence, $CellContext`ps], $CellContext`left}; \
$CellContext`norms = Map[$CellContext`norm, 
             Map[$CellContext`ellGrad[$CellContext`a, 
               Part[#, 1], 
               Part[#, 2]]& , $CellContext`ps]]; $CellContext`bis = 
           Table[$CellContext`normErr[
               Part[$CellContext`psAug, $CellContext`i], 
               Part[$CellContext`psAug, $CellContext`i - 1], 
               Part[$CellContext`psAug, $CellContext`i + 1], 
               
               Part[$CellContext`norms, $CellContext`i - 
                1]]^2, {$CellContext`i, 2, Length[$CellContext`psAug] - 1}]; 
          Total[$CellContext`bis]], $CellContext`normErr[
          Pattern[$CellContext`p, 
           Blank[]], 
          Pattern[$CellContext`pl, 
           Blank[]], 
          Pattern[$CellContext`pr, 
           Blank[]], 
          Pattern[$CellContext`norm, 
           Blank[]]] := Dot[
          $CellContext`getBisector[$CellContext`pl - $CellContext`p, \
$CellContext`pr - $CellContext`p], 
          $CellContext`perp[$CellContext`norm]], $CellContext`getBisector[
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           
           Blank[]]] := $CellContext`norm[$CellContext`norm[$CellContext`u] + \
$CellContext`norm[$CellContext`v]], $CellContext`perp[{
           Pattern[$CellContext`x, 
            Blank[]], 
           Pattern[$CellContext`y, 
            
            Blank[]]}] := {-$CellContext`y, $CellContext`x}, \
$CellContext`getFoci[
          Pattern[$CellContext`a, 
           Blank[]]] := Module[{$CellContext`c}, 
          
          If[$CellContext`a < 
           1, $CellContext`c = 
            Sqrt[1 - $CellContext`a^2]; {{0, $CellContext`c}, {
             0, -$CellContext`c}}, $CellContext`c = 
            Sqrt[$CellContext`a^2 - 1]; {{-$CellContext`c, 
              0}, {$CellContext`c, 0}}]], $CellContext`reflAboutLine[
          Pattern[$CellContext`p, 
           Blank[]], 
          Pattern[$CellContext`l1, 
           Blank[]], 
          Pattern[$CellContext`l2, 
           
           Blank[]]] := $CellContext`refl[$CellContext`p - $CellContext`l1, \
$CellContext`l2 - $CellContext`l1] + $CellContext`l1, $CellContext`refl[
          Pattern[$CellContext`v, 
           Blank[]], 
          Pattern[$CellContext`n, 
           Blank[]]] := (2 
           Dot[$CellContext`v, $CellContext`n]) \
($CellContext`n/$CellContext`magn2[$CellContext`n]) - $CellContext`v, \
$CellContext`interRays[
          Pattern[$CellContext`p1, 
           Blank[]], 
          Pattern[$CellContext`n1, 
           Blank[]], 
          Pattern[$CellContext`p2, 
           Blank[]], 
          Pattern[$CellContext`n2, 
           Blank[]]] := 
        Module[{$CellContext`m, $CellContext`b, $CellContext`sols}, \
$CellContext`m = Transpose[{$CellContext`n1, $CellContext`n2}]; If[
            $CellContext`negl[
             
             Det[$CellContext`m]], $CellContext`p1, $CellContext`b = \
$CellContext`p2 - $CellContext`p1; $CellContext`sols = 
             LinearSolve[$CellContext`m, $CellContext`b]; \
$CellContext`ray[$CellContext`p1, $CellContext`n1, 
              Part[$CellContext`sols, 1]]]], $CellContext`negl[
          Pattern[$CellContext`v, 
           Blank[]]] := Abs[$CellContext`v] < 10^(-18), $CellContext`ray[
          Pattern[$CellContext`p0, 
           Blank[]], 
          Pattern[$CellContext`phat, 
           Blank[]], 
          Pattern[$CellContext`d, 
           
           Blank[]]] := $CellContext`p0 + $CellContext`phat $CellContext`d, \
$CellContext`getConfocalEll[
          Pattern[$CellContext`c, 
           Blank[]], {
           Pattern[$CellContext`x0, 
            Blank[]], 
           Pattern[$CellContext`y0, 
            Blank[]]}] = {{
           
           Root[$CellContext`c^2 $CellContext`x0^2 + (-$CellContext`c^2 - \
$CellContext`x0^2 - $CellContext`y0^2) #^2 + #^4& , 1], -
           Sqrt[-$CellContext`c^2 + 
             Root[$CellContext`c^2 $CellContext`x0^2 + (-$CellContext`c^2 - \
$CellContext`x0^2 - $CellContext`y0^2) #^2 + #^4& , 1]^2]}, {
           
           Root[$CellContext`c^2 $CellContext`x0^2 + (-$CellContext`c^2 - \
$CellContext`x0^2 - $CellContext`y0^2) #^2 + #^4& , 1], 
           
           Sqrt[-$CellContext`c^2 + 
            Root[$CellContext`c^2 $CellContext`x0^2 + (-$CellContext`c^2 - \
$CellContext`x0^2 - $CellContext`y0^2) #^2 + #^4& , 1]^2]}, {
           
           Root[$CellContext`c^2 $CellContext`x0^2 + (-$CellContext`c^2 - \
$CellContext`x0^2 - $CellContext`y0^2) #^2 + #^4& , 4], -
           Sqrt[-$CellContext`c^2 + 
             Root[$CellContext`c^2 $CellContext`x0^2 + (-$CellContext`c^2 - \
$CellContext`x0^2 - $CellContext`y0^2) #^2 + #^4& , 4]^2]}, {
           
           Root[$CellContext`c^2 $CellContext`x0^2 + (-$CellContext`c^2 - \
$CellContext`x0^2 - $CellContext`y0^2) #^2 + #^4& , 4], 
           
           Sqrt[-$CellContext`c^2 + 
            Root[$CellContext`c^2 $CellContext`x0^2 + (-$CellContext`c^2 - \
$CellContext`x0^2 - $CellContext`y0^2) #^2 + #^4& , 
               4]^2]}}, $CellContext`bounceRay[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`p1, 
           Blank[]], 
          Pattern[$CellContext`p2, 
           Blank[]], 
          Pattern[$CellContext`bounces, 
           Blank[]]] := 
        Module[{$CellContext`p1v, $CellContext`p2v, $CellContext`p3v}, \
$CellContext`p1v = $CellContext`p1; $CellContext`p2v = $CellContext`p2; \
{$CellContext`p1, $CellContext`p2, 
            Apply[Sequence, 
             
             Table[$CellContext`p3v = \
$CellContext`getInterRefl[$CellContext`a, $CellContext`p1v, $CellContext`p2v]; \
$CellContext`p1v = $CellContext`p2v; $CellContext`p2v = $CellContext`p3v; \
$CellContext`p3v, {$CellContext`i, $CellContext`bounces}]]}], \
$CellContext`getInterRefl[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`pfrom, 
           Blank[]], 
          Pattern[$CellContext`pto, 
           Blank[]]] := 
        Module[{$CellContext`norm, $CellContext`theRefl, $CellContext`pnext}, \
$CellContext`norm = $CellContext`ellGrad[$CellContext`a, 
             Part[$CellContext`pto, 1], 
             
             Part[$CellContext`pto, 
              2]]; $CellContext`theRefl = \
$CellContext`refl[$CellContext`pfrom - $CellContext`pto, $CellContext`norm]; \
$CellContext`pnext = Part[
             $CellContext`ellInterRayUnprot[$CellContext`a, $CellContext`pto, \
$CellContext`theRefl], 2]; $CellContext`pnext], $CellContext`ellInterRayUnprot[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`p, 
           Blank[]], 
          Pattern[$CellContext`n, 
           Blank[]]] := 
        Module[{$CellContext`x, $CellContext`y, $CellContext`nx, \
$CellContext`ny, $CellContext`a2, $CellContext`c2, $CellContext`c1, \
$CellContext`c0, $CellContext`ss}, {$CellContext`x, $CellContext`y} = \
$CellContext`p; {$CellContext`nx, $CellContext`ny} = $CellContext`n; \
$CellContext`a2 = $CellContext`a $CellContext`a; $CellContext`c2 = \
$CellContext`nx^2 + $CellContext`a2 $CellContext`ny^2; $CellContext`c1 = 
           2 ($CellContext`nx $CellContext`x + ($CellContext`a2 \
$CellContext`ny) $CellContext`y); $CellContext`c0 = $CellContext`x^2 + \
$CellContext`a2 (-1 + $CellContext`y^2); $CellContext`ss = \
$CellContext`quadRootsUnprot[$CellContext`c2, $CellContext`c1, \
$CellContext`c0]; 
          Map[$CellContext`ray[$CellContext`p, $CellContext`n, #]& , \
$CellContext`ss]], $CellContext`quadRootsUnprot[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]] := 
        Module[{$CellContext`det = $CellContext`b^2 - (
             4 $CellContext`a) $CellContext`c, $CellContext`sqrtDet}, \
$CellContext`sqrtDet = 
           Sqrt[$CellContext`det]; {-$CellContext`b - $CellContext`sqrtDet, \
-$CellContext`b + $CellContext`sqrtDet}/(
           2 $CellContext`a)], $CellContext`getCausticOddN[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`n, 
           Blank[]]] := 
        Module[{$CellContext`ts, $CellContext`ps, $CellContext`p1, \
$CellContext`lower, $CellContext`norms, $CellContext`tsyms, $CellContext`min, \
$CellContext`p2, $CellContext`f1, $CellContext`f2, $CellContext`f2p, \
$CellContext`pb, $CellContext`causticAxes, $CellContext`poly}, \
$CellContext`ts = $CellContext`getInitTs2[$CellContext`a, $CellContext`n]; \
$CellContext`ps = $CellContext`getEllPs[$CellContext`a, $CellContext`ts]; \
$CellContext`lower = $CellContext`flipY[
             Last[$CellContext`ps]]; $CellContext`p1 = {$CellContext`a, 
             0}; $CellContext`norms = Map[$CellContext`norm, 
             Map[$CellContext`ellGrad[$CellContext`a, 
               Part[#, 1], 
               Part[#, 2]]& , $CellContext`ps]]; $CellContext`tsyms = Table[
             Symbol[
              StringJoin["t", 
               ToString[$CellContext`i]]], {$CellContext`i, 
              Length[$CellContext`ps]}]; $CellContext`min = Quiet[
             FindMinimum[
              $CellContext`getRelaxErr[$CellContext`a, $CellContext`tsyms], 
              
              MapThread[{#, #2}& , {$CellContext`tsyms, $CellContext`ts}]]]; \
$CellContext`p2 = Part[
             $CellContext`getEllPs[$CellContext`a, 
              ReplaceAll[$CellContext`tsyms, 
               Part[$CellContext`min, 2]]], 
             1]; {$CellContext`f1, $CellContext`f2} = \
$CellContext`getFoci[$CellContext`a]; $CellContext`f2p = \
$CellContext`reflAboutLine[$CellContext`f2, $CellContext`p1, $CellContext`p2]; \
$CellContext`pb = $CellContext`interRays[$CellContext`f1, $CellContext`f2p - \
$CellContext`f1, $CellContext`p1, $CellContext`p2 - $CellContext`p1]; \
$CellContext`causticAxes = First[
             Select[
              $CellContext`getConfocalEll[
               Sqrt[$CellContext`a^2 - 1], $CellContext`pb], And[
              Part[#, 1] > 0, Part[#, 2] > 0]& ]]; $CellContext`poly = Chop[
             $CellContext`bounceRay[$CellContext`a, $CellContext`p1, \
$CellContext`p2, $CellContext`n - 1]]; {
           "a" -> $CellContext`a, "n" -> $CellContext`n, 
            "causticAB" -> $CellContext`causticAxes, 
            "poly" -> $CellContext`poly, "error" -> Part[$CellContext`min, 1],
             "f1" -> $CellContext`f1, "f2" -> $CellContext`f2, 
            "f2p" -> $CellContext`f2p, "pb" -> $CellContext`pb, 
            "guessPoly" -> {$CellContext`p1, 
              Apply[Sequence, $CellContext`ps], $CellContext`lower}, 
            "guessNorms" -> $CellContext`norms}], $CellContext`getInitTs2[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`n, 
           Blank[]]] := 
        Module[{$CellContext`tstep, $CellContext`ts, $CellContext`c, \
$CellContext`xmin, $CellContext`xmax, $CellContext`xstep, $CellContext`xs}, \
$CellContext`c = If[$CellContext`a < 1, 0.25 $CellContext`a, 
             
             Sqrt[$CellContext`a^2 - 
              1]]; $CellContext`xmax = ($CellContext`c + $CellContext`a)/
            2; $CellContext`xmin = -$CellContext`xmax; $CellContext`xstep = \
($CellContext`xmax - $CellContext`xmin) (2/($CellContext`n - 
             1)); $CellContext`xs = 
           Table[$CellContext`xmax - $CellContext`i $CellContext`xstep, \
{$CellContext`i, 1, ($CellContext`n - 1)/2}]; $CellContext`ts = 
           Map[ArcCos[#/$CellContext`a]& , $CellContext`xs]; \
$CellContext`ts], $CellContext`flipY[{
           Pattern[$CellContext`x, 
            Blank[]], 
           Pattern[$CellContext`y, 
            
            Blank[]]}] := {$CellContext`x, -$CellContext`y}, \
$CellContext`getRelaxErr[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`ts, 
           Blank[]]] := 
        Module[{$CellContext`ps, $CellContext`lower, $CellContext`psAug, \
$CellContext`norms, $CellContext`bis}, $CellContext`ps = \
$CellContext`getEllPs[$CellContext`a, $CellContext`ts]; $CellContext`lower = \
$CellContext`flipY[
             
             Last[$CellContext`ps]]; $CellContext`psAug = {{$CellContext`a, 
              0}, 
             Apply[
             Sequence, $CellContext`ps], $CellContext`lower}; \
$CellContext`norms = Map[$CellContext`norm, 
             Map[$CellContext`ellGrad[$CellContext`a, 
               Part[#, 1], 
               Part[#, 2]]& , $CellContext`ps]]; $CellContext`bis = 
           Table[$CellContext`normErr[
               Part[$CellContext`psAug, $CellContext`i], 
               Part[$CellContext`psAug, $CellContext`i - 1], 
               Part[$CellContext`psAug, $CellContext`i + 1], 
               
               Part[$CellContext`norms, $CellContext`i - 
                1]]^2, {$CellContext`i, 2, Length[$CellContext`psAug] - 1}]; 
          Total[$CellContext`bis]], $CellContext`rotCaustic[
          Pattern[$CellContext`caustic, 
           Blank[]]] := 
        Module[{$CellContext`a}, $CellContext`a = 
           1/ReplaceAll["a", $CellContext`caustic]; {
           "a" -> $CellContext`a, "n" -> 
            ReplaceAll["n", $CellContext`caustic], 
            "causticAB" -> $CellContext`a Reverse[
               ReplaceAll["causticAB", $CellContext`caustic]], 
            "poly" -> $CellContext`a Map[$CellContext`perp, 
               ReplaceAll["poly", $CellContext`caustic]], "error" -> 
            ReplaceAll["error", $CellContext`caustic], 
            "f1" -> $CellContext`a $CellContext`perp[
               ReplaceAll["f1", $CellContext`caustic]], 
            "f2" -> $CellContext`a $CellContext`perp[
               ReplaceAll["f2", $CellContext`caustic]], 
            "f2p" -> $CellContext`a $CellContext`perp[
               ReplaceAll["f2p", $CellContext`caustic]], 
            "pb" -> $CellContext`a $CellContext`perp[
               ReplaceAll["pb", $CellContext`caustic]], 
            "guessPoly" -> $CellContext`a Map[$CellContext`perp, 
               ReplaceAll["guessPoly", $CellContext`caustic]], 
            "guessNorms" -> $CellContext`a Map[$CellContext`perp, 
               ReplaceAll[
               "guessNorms", $CellContext`caustic]]}], $CellContext`nfn[
          Pattern[$CellContext`v, 
           Blank[]], 
          Pattern[$CellContext`n, 
           Blank[]]] := ToString[
          
          NumberForm[$CellContext`v, {$CellContext`n + 2, $CellContext`n}, 
           ExponentFunction -> (Null& )]], $CellContext`toRad[
          Pattern[$CellContext`d, 
           Blank[]]] := Pi ($CellContext`d/180.), $CellContext`getTangCW[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`p1, 
           Blank[]], 
          Pattern[$CellContext`acaustic, 
           Blank[]], 
          Pattern[$CellContext`bcaustic, 
           Blank[]]] := 
        Module[{$CellContext`tangs, $CellContext`norm}, $CellContext`tangs = \
$CellContext`ellTangentsAB[$CellContext`acaustic, $CellContext`bcaustic, \
$CellContext`p1]; $CellContext`norm = $CellContext`ellGrad[$CellContext`a, 
             Apply[Sequence, $CellContext`p1]]; 
          If[Dot[Part[$CellContext`tangs, 1] - $CellContext`p1, 
              $CellContext`perp[$CellContext`norm]] > 0, 
            Part[$CellContext`tangs, 1], 
            Part[$CellContext`tangs, 2]]], $CellContext`ellTangentsAB[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`p1, 
           
           Blank[]]] := $CellContext`b \
$CellContext`ellTangents[$CellContext`a/$CellContext`b, \
$CellContext`p1/$CellContext`b], $CellContext`ellTangents[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`p, 
           Blank[]]] := 
        Module[{$CellContext`a2, $CellContext`px, $CellContext`py, \
$CellContext`px2, $CellContext`px3, $CellContext`py2, $CellContext`radicand, \
$CellContext`numFact, $CellContext`denomx, $CellContext`denomy}, \
{$CellContext`px, $CellContext`py} = $CellContext`p; $CellContext`a2 = \
$CellContext`a $CellContext`a; $CellContext`px2 = $CellContext`px \
$CellContext`px; $CellContext`py2 = $CellContext`py $CellContext`py; \
$CellContext`px3 = $CellContext`px $CellContext`px2; $CellContext`denomx = \
$CellContext`px3 + ($CellContext`a2 $CellContext`px) $CellContext`py2; \
$CellContext`denomy = $CellContext`px2 + $CellContext`a2 $CellContext`py2; \
$CellContext`radicand = $CellContext`px2 + $CellContext`a2 ($CellContext`py2 - 
              1); $CellContext`numFact = 
           Sqrt[$CellContext`radicand] 
            Abs[$CellContext`px]; {{$CellContext`a2 \
$CellContext`safeDiv[$CellContext`px2 + $CellContext`py $CellContext`numFact, \
$CellContext`denomx], 
             $CellContext`safeDiv[$CellContext`a2 $CellContext`py - \
$CellContext`numFact, $CellContext`denomy]}, {$CellContext`a2 \
$CellContext`safeDiv[$CellContext`px2 - $CellContext`py $CellContext`numFact, \
$CellContext`denomx], 
             $CellContext`safeDiv[$CellContext`a2 $CellContext`py + \
$CellContext`numFact, $CellContext`denomy]}}], $CellContext`safeDiv[
          Pattern[$CellContext`num, 
           Blank[]], 
          Pattern[$CellContext`denom, 
           Blank[]]] := If[
          $CellContext`negl[$CellContext`denom], 
          0, $CellContext`num/$CellContext`denom], $CellContext`stachelLsRs[
          Pattern[$CellContext`poly, 
           Blank[]], 
          Pattern[$CellContext`inner, 
           Blank[]]] := 
        Module[{$CellContext`ls, $CellContext`rs}, $CellContext`ls = 
           MapThread[$CellContext`magn[# - #2]& , {$CellContext`inner, \
$CellContext`poly}]; $CellContext`rs = MapThread[$CellContext`magn[# - #2]& , {
              RotateLeft[$CellContext`poly], $CellContext`inner}]; {
            Apply[Times, $CellContext`ls], 
            Apply[Times, $CellContext`rs]}], $CellContext`getExcentralPolygon[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`poly, 
           Blank[]]] := 
        Module[{$CellContext`polyTangs, $CellContext`polyExc}, \
$CellContext`polyTangs = Map[$CellContext`perp[
              $CellContext`ellGrad[$CellContext`a, 
               Part[#, 1], 
               Part[#, 2]]]& , $CellContext`poly]; $CellContext`polyExc = 
           MapThread[$CellContext`interRays[#, #2, #3, #4]& , \
{$CellContext`poly, $CellContext`polyTangs, 
              RotateLeft[$CellContext`poly], 
              
              RotateLeft[$CellContext`polyTangs]}]; $CellContext`polyExc], \
$CellContext`getPedals[
          Pattern[$CellContext`p, 
           Blank[]], 
          Pattern[$CellContext`poly, 
           Blank[]]] := 
        MapThread[$CellContext`closestPerp[$CellContext`p, #, #2]& , \
{$CellContext`poly, 
           RotateLeft[$CellContext`poly]}], $CellContext`closestPerp[
          Pattern[$CellContext`p, 
           Blank[]], 
          Pattern[$CellContext`l1, 
           Blank[]], 
          Pattern[$CellContext`l2, 
           Blank[]]] := 
        Module[{$CellContext`dl = $CellContext`l2 - $CellContext`l1, \
$CellContext`s}, $CellContext`s = 
           Dot[$CellContext`p - $CellContext`l1, $CellContext`dl]/
            Dot[$CellContext`dl, $CellContext`dl]; \
$CellContext`ray[$CellContext`l1, $CellContext`dl, $CellContext`s]], \
$CellContext`polyAntipedal[
          Pattern[$CellContext`p, 
           Blank[]], 
          Pattern[$CellContext`poly, 
           Blank[]]] := 
        Module[{$CellContext`perpLines, $CellContext`vertices}, \
$CellContext`perpLines = Map[{#, 
              $CellContext`perp[# - $CellContext`p]}& , $CellContext`poly]; \
$CellContext`vertices = MapThread[$CellContext`interRaysUnprot[
              Part[#, 1], 
              Part[#, 2], 
              Part[#2, 1], 
              Part[#2, 2]]& , {$CellContext`perpLines, 
              
              RotateLeft[$CellContext`perpLines]}]; $CellContext`vertices], \
$CellContext`interRaysUnprot[
          Pattern[$CellContext`p1, 
           Blank[]], 
          Pattern[$CellContext`n1, 
           Blank[]], 
          Pattern[$CellContext`p2, 
           Blank[]], 
          Pattern[$CellContext`n2, 
           Blank[]]] := 
        Module[{$CellContext`m, $CellContext`b, $CellContext`sols}, \
$CellContext`m = 
           Transpose[{$CellContext`n1, $CellContext`n2}]; $CellContext`b = \
$CellContext`p2 - $CellContext`p1; $CellContext`sols = 
           LinearSolve[$CellContext`m, $CellContext`b]; \
$CellContext`ray[$CellContext`p1, $CellContext`n1, 
            Part[$CellContext`sols, 1]]], $CellContext`getMidDists[
          Pattern[$CellContext`mid, 
           Blank[]], 
          Pattern[$CellContext`poly, 
           Blank[]]] := 
        Module[{$CellContext`d1, $CellContext`d2}, $CellContext`d2 = 
           Map[$CellContext`magn2[$CellContext`mid - #]& , $CellContext`poly]; \
$CellContext`d1 = Map[Sqrt, $CellContext`d2]; {
            Total[$CellContext`d1], 
            Total[$CellContext`d2], 
            Apply[Times, $CellContext`d1]}], $CellContext`signedArea[
          Pattern[$CellContext`poly, 
           Blank[]]] := (1/2) Total[
           MapThread[
           Part[#, 1] Part[#2, 2] - Part[#2, 1] 
            Part[#, 2]& , {$CellContext`poly, 
             RotateLeft[$CellContext`poly]}]], $CellContext`getThreeCentroids[
          Pattern[$CellContext`poly, 
           Blank[]]] := {
          $CellContext`polyAvgVtx[$CellContext`poly], 
          $CellContext`polyPerimeterCentroid[$CellContext`poly], 
          RegionCentroid[
           Polygon[$CellContext`poly]]}, $CellContext`polyAvgVtx[
          Pattern[$CellContext`poly, 
           Blank[]]] := 
        Total[$CellContext`poly]/
         Length[$CellContext`poly], $CellContext`polyPerimeterCentroid[
          Pattern[$CellContext`vtx, 
           Blank[]]] := 
        Module[{$CellContext`sides, $CellContext`meds, $CellContext`per, \
$CellContext`perCentroid}, $CellContext`sides = \
$CellContext`triLengths[$CellContext`vtx]; $CellContext`meds = 
           Apply[$CellContext`getMediansV, $CellContext`vtx]; \
$CellContext`per = Total[$CellContext`sides]; $CellContext`perCentroid = 
           Sum[Part[$CellContext`meds, $CellContext`i] 
              Part[$CellContext`sides, $CellContext`i], {$CellContext`i, 
               
               Length[$CellContext`vtx]}]/$CellContext`per; \
$CellContext`perCentroid], $CellContext`triLengths[
          Pattern[$CellContext`vs, 
           Blank[]]] := Map[$CellContext`magn, 
          $CellContext`triSides[$CellContext`vs]], $CellContext`triSides[
          Pattern[$CellContext`vs, 
           Blank[]]] := MapThread[# - #2& , {$CellContext`vs, 
           RotateLeft[$CellContext`vs]}], $CellContext`getMediansV[
          Pattern[$CellContext`vs, 
           Blank[]]] := 
        0.5 ($CellContext`vs + 
          RotateLeft[$CellContext`vs]), $CellContext`getConwaySpokes[
          Pattern[$CellContext`poly, 
           Blank[]]] := 
        Module[{$CellContext`sides, $CellContext`sidesRot, \
$CellContext`spokes1, $CellContext`spokes2}, $CellContext`sides = \
$CellContext`polySides[$CellContext`poly]; $CellContext`sidesRot = 
           RotateLeft[$CellContext`sides, 
             IntegerPart[Length[$CellContext`poly]/2]]; $CellContext`spokes1 = 
           MapThread[{#, # + (# - #2) (#4/#3)}& , {$CellContext`poly, 
              
              RotateLeft[$CellContext`poly], $CellContext`sides, \
$CellContext`sidesRot}]; $CellContext`spokes2 = 
           MapThread[{#, # + (# - #2) (#4/#3)}& , {$CellContext`poly, 
              RotateRight[$CellContext`poly], 
              
              RotateRight[$CellContext`sides], $CellContext`sidesRot}]; \
{$CellContext`spokes1, $CellContext`spokes2}], $CellContext`polySides[
          Pattern[$CellContext`poly, 
           Blank[]]] := 
        MapThread[$CellContext`magn[# - #2]& , {$CellContext`poly, 
           RotateLeft[$CellContext`poly]}], $CellContext`plotEllAxes[
          Pattern[$CellContext`a, 
           Blank[]], 
          Optional[
           Pattern[$CellContext`clr, 
            Blank[]], 
           GrayLevel[0]]] := Apply[Graphics, 
          Show[{
            $CellContext`plotEll[$CellContext`a, $CellContext`clr], 
            $CellContext`plotEllAxesLow[$CellContext`a]}]], \
$CellContext`plotEll[
          Pattern[$CellContext`a, 
           Blank[]], 
          Optional[
           Pattern[$CellContext`clr, 
            Blank[]], 
           GrayLevel[0]]] := $CellContext`plotEllb[$CellContext`a, 
          1, $CellContext`clr], $CellContext`plotEllb[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Optional[
           Pattern[$CellContext`clr, 
            Blank[]], 
           GrayLevel[0]]] := Graphics[
          If[$CellContext`clr === None, {}, {
            If[
             ListQ[$CellContext`clr], 
             Apply[Sequence, $CellContext`clr], $CellContext`clr], 
            
            Circle[{0, 
             0}, {$CellContext`a, $CellContext`b}]}]], \
$CellContext`plotEllAxesLow[
          Pattern[$CellContext`a, 
           Blank[]]] := $CellContext`plotEllbAxesLow[$CellContext`a, 
          1], $CellContext`plotEllbAxesLow[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]]] := Graphics[{Dashed, Gray, 
           Thickness[Medium], {
            Line[{{-$CellContext`a, 0}, {$CellContext`a, 0}}], 
            
            Line[{{0, -$CellContext`b}, {
              0, $CellContext`b}}]}}], $CellContext`Second[
          Pattern[$CellContext`l, 
           Blank[]]] := Part[$CellContext`l, 2], $CellContext`ellLabelPoints[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`pts, 
           Blank[]], 
          Pattern[$CellContext`prefix, 
           Blank[]], 
          Pattern[$CellContext`style, 
           Blank[]], 
          Optional[
           Pattern[$CellContext`lgt, 
            Blank[]], 0.33]] := 
        MapThread[$CellContext`txtSubscript[$CellContext`prefix, #, \
$CellContext`style, 
           $CellContext`ellLabel[$CellContext`a, #2, $CellContext`lgt]]& , {
           Range[
            
            Length[$CellContext`pts]], $CellContext`pts}], \
$CellContext`txtSubscript[
          Pattern[$CellContext`txt, 
           Blank[]], 
          Pattern[$CellContext`subscr, 
           Blank[]], 
          Pattern[$CellContext`style, 
           Blank[]], 
          Pattern[$CellContext`where, 
           Blank[]], 
          Optional[
           Pattern[$CellContext`offset, 
            Blank[]], {0, 0}]] := 
        Module[{$CellContext`last}, $CellContext`last = Last[
             Characters[$CellContext`txt]]; Text[
            Style[
             
             Subscript[$CellContext`txt, $CellContext`subscr], \
$CellContext`style], $CellContext`where, $CellContext`offset]], 
        Attributes[Subscript] = {NHoldRest}, $CellContext`ellLabel[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`p, 
           Blank[]], 
          Pattern[$CellContext`lgt, 
           Blank[]], 
          OptionsPattern[]] := $CellContext`p + If[
            
            OptionValue[$CellContext`inward], $CellContext`lgt, \
-$CellContext`lgt] $CellContext`norm[
            $CellContext`ellGrad[$CellContext`a, 
             Apply[Sequence, $CellContext`p]]], 
        Options[$CellContext`ellLabel] = {$CellContext`inward -> 
          False}, $CellContext`ellLabelPointsb[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`pts, 
           Blank[]], 
          Pattern[$CellContext`prefix, 
           Blank[]], 
          Pattern[$CellContext`style, 
           Blank[]], 
          Optional[
           Pattern[$CellContext`lgt, 
            Blank[]], 0.33]] := 
        MapThread[$CellContext`txtSubscript[$CellContext`prefix, #, \
$CellContext`style, 
           $CellContext`ellLabelb[$CellContext`a, $CellContext`b, #2, \
$CellContext`lgt]]& , {
           Range[
            
            Length[$CellContext`pts]], $CellContext`pts}], \
$CellContext`ellLabelb[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`p, 
           Blank[]], 
          Pattern[$CellContext`lgt, 
           Blank[]], 
          OptionsPattern[]] := $CellContext`p + If[
            
            OptionValue[$CellContext`inward], $CellContext`lgt, \
-$CellContext`lgt] $CellContext`norm[
            $CellContext`ellGradb[$CellContext`a, $CellContext`b, 
             Apply[Sequence, $CellContext`p]]], 
        Options[$CellContext`ellLabelb] = {$CellContext`inward -> 
          False}, $CellContext`ellGradb[
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           
           Blank[]]] := -{$CellContext`x $CellContext`b^2, $CellContext`y \
$CellContext`a^2}, $CellContext`labelPointsWhite[
          Pattern[$CellContext`pts, 
           Blank[]], 
          Pattern[$CellContext`prefix, 
           Blank[]], 
          Pattern[$CellContext`style, 
           Blank[]], 
          Optional[
           Pattern[$CellContext`offset, 
            Blank[]], {0, 0}]] := 
        MapThread[$CellContext`txtSubscriptWhite[$CellContext`prefix, #, \
$CellContext`style, #2, $CellContext`offset]& , {
           Range[
            
            Length[$CellContext`pts]], $CellContext`pts}], \
$CellContext`txtSubscriptWhite[
          Pattern[$CellContext`txt, 
           Blank[]], 
          Pattern[$CellContext`subscr, 
           Blank[]], 
          Pattern[$CellContext`style, 
           Blank[]], 
          Pattern[$CellContext`where, 
           Blank[]], 
          Optional[
           Pattern[$CellContext`offset, 
            Blank[]], {0, 0}]] := 
        Module[{$CellContext`last}, $CellContext`last = Last[
             Characters[$CellContext`txt]]; Text[
            Style[
             
             Subscript[$CellContext`txt, $CellContext`subscr], \
$CellContext`style, Background -> 
             White], $CellContext`where, $CellContext`offset]], \
$CellContext`labelPoints[
          Pattern[$CellContext`pts, 
           Blank[]], 
          Pattern[$CellContext`prefix, 
           Blank[]], 
          Pattern[$CellContext`style, 
           Blank[]], 
          Optional[
           Pattern[$CellContext`offset, 
            Blank[]], {0, 0}]] := 
        MapThread[$CellContext`txtSubscript[$CellContext`prefix, #, \
$CellContext`style, #2, $CellContext`offset]& , {
           Range[
            Length[$CellContext`pts]], $CellContext`pts}], $CellContext`triPer[
          Pattern[$CellContext`tri, 
           Blank[]]] := Total[
          $CellContext`triLengths[$CellContext`tri]], $CellContext`reportThs[
          Pattern[$CellContext`ang, 
           Blank[]], 
          Pattern[$CellContext`cs, 
           Blank[]], 
          Pattern[$CellContext`digsShort, 
           Blank[]], 
          Pattern[$CellContext`digs, 
           Blank[]]] := 
        Module[{$CellContext`ss}, $CellContext`ss = 
           Map[Sqrt[1 - #^2]& , $CellContext`cs]; 
          StringJoin["\nc", $CellContext`ang, "=(", 
            $CellContext`StringJoinCommas[
             
             Map[$CellContext`nfn[#, $CellContext`digsShort]& , \
$CellContext`cs]], ")", "\n\[Sum]c", $CellContext`ang, "=", 
            $CellContext`nfn[
             Total[$CellContext`cs], $CellContext`digs], 
            ", \[Product]c", $CellContext`ang, "=", 
            $CellContext`nfn[
             Apply[Times, $CellContext`cs], $CellContext`digs], 
            ", \[Sum]s", $CellContext`ang, "=", 
            $CellContext`nfn[
             Total[$CellContext`ss], $CellContext`digs], 
            ", \[Product]s", $CellContext`ang, "=", 
            $CellContext`nfn[
             Apply[
             Times, $CellContext`ss], $CellContext`digs]]], \
$CellContext`StringJoinCommas[
          Pattern[$CellContext`strs, 
           Blank[]]] := StringJoin[
          Riffle[$CellContext`strs, ","]], $CellContext`getPolyCosines[
          Pattern[$CellContext`poly, 
           Blank[]]] := 
        Module[{$CellContext`us}, $CellContext`us = 
           MapThread[$CellContext`norm[# - #2]& , {$CellContext`poly, 
              RotateLeft[$CellContext`poly]}]; 
          MapThread[-Dot[#, #2]& , {$CellContext`us, 
             RotateRight[$CellContext`us]}]], $CellContext`getStarCosines[
          Pattern[$CellContext`poly, 
           Blank[]], 
          Pattern[$CellContext`m, 
           Blank[]]] := 
        Module[{$CellContext`spokes}, $CellContext`spokes = 
           Map[$CellContext`norm[# - $CellContext`m]& , $CellContext`poly]; 
          MapThread[Dot[#, #2]& , {$CellContext`spokes, 
             
             RotateLeft[$CellContext`spokes]}]], \
$CellContext`reportThreeCentroids[
          Pattern[$CellContext`sym, 
           Blank[]], 
          Pattern[$CellContext`vtx, 
           Blank[]], 
          Pattern[$CellContext`per, 
           Blank[]], 
          Pattern[$CellContext`are, 
           Blank[]], 
          Pattern[$CellContext`fl, 
           Blank[]], 
          Pattern[$CellContext`digs, 
           Blank[]]] := 
        Module[{$CellContext`c0, $CellContext`c1, $CellContext`c2}, \
{$CellContext`c0, $CellContext`c1, $CellContext`c2} = Map[ToString[
              Subscript[$CellContext`sym, #], StandardForm]& , 
             Range[3]]; StringJoin["\n", $CellContext`c0, "=", 
            $CellContext`pairStr[$CellContext`vtx/$CellContext`fl, \
$CellContext`digs], ", ", $CellContext`c1, "=", 
            $CellContext`pairStr[$CellContext`per/$CellContext`fl, \
$CellContext`digs], ", ", $CellContext`c2, "=", 
            $CellContext`pairStr[$CellContext`are/$CellContext`fl, \
$CellContext`digs]]], $CellContext`pairStr[{
           Pattern[$CellContext`x, 
            Blank[]], 
           Pattern[$CellContext`y, 
            Blank[]]}, 
          Pattern[$CellContext`digs, 
           Blank[]]] := StringJoin["(", 
          $CellContext`nfn[
           Chop[$CellContext`x], $CellContext`digs], ",", 
          $CellContext`nfn[
           Chop[$CellContext`y], $CellContext`digs], 
          ")"], $CellContext`reportThreeVals[
          Pattern[$CellContext`sym1, 
           Blank[]], 
          Pattern[$CellContext`sym2, 
           Blank[]], 
          Pattern[$CellContext`sym3, 
           Blank[]], 
          Pattern[$CellContext`val1, 
           Blank[]], 
          Pattern[$CellContext`val2, 
           Blank[]], 
          Pattern[$CellContext`val3, 
           Blank[]], 
          Pattern[$CellContext`digs, 
           Blank[]]] := StringJoin["\n", $CellContext`sym1, "=", 
          $CellContext`nfn[$CellContext`val1, $CellContext`digs], 
          ", ", $CellContext`sym2, "=", 
          $CellContext`nfn[$CellContext`val2, $CellContext`digs], 
          ", ", $CellContext`sym3, "=", 
          $CellContext`nfn[$CellContext`val3, $CellContext`digs]], \
$CellContext`reportAreaPair[
          Pattern[$CellContext`sym1, 
           Blank[]], 
          Pattern[$CellContext`sym2, 
           Blank[]], 
          Pattern[$CellContext`val1, 
           Blank[]], 
          Pattern[$CellContext`val2, 
           Blank[]], 
          Pattern[$CellContext`digs, 
           Blank[]]] := StringJoin["\n", $CellContext`sym1, "=", 
          $CellContext`nfn[$CellContext`val1, $CellContext`digs], 
          ", ", $CellContext`sym2, "=", 
          $CellContext`nfn[$CellContext`val2, $CellContext`digs], 
          ", ", $CellContext`sym1, ".", $CellContext`sym2, "=", 
          $CellContext`nfn[$CellContext`val1 $CellContext`val2, \
$CellContext`digs], ", ", $CellContext`sym1, "/", $CellContext`sym2, "=", 
          $CellContext`nfn[
           
           N[$CellContext`val1/$CellContext`val2], $CellContext`digs]], \
$CellContext`reportAreaTriple[
          Pattern[$CellContext`sym1, 
           Blank[]], 
          Pattern[$CellContext`sym2, 
           Blank[]], 
          Pattern[$CellContext`sym3, 
           Blank[]], 
          Pattern[$CellContext`val1, 
           Blank[]], 
          Pattern[$CellContext`val2, 
           Blank[]], 
          Pattern[$CellContext`val3, 
           Blank[]], 
          Pattern[$CellContext`digs, 
           Blank[]]] := StringJoin["\n", $CellContext`sym1, "=", 
          $CellContext`nfn[$CellContext`val1, $CellContext`digs], 
          ", ", $CellContext`sym2, "=", 
          $CellContext`nfn[$CellContext`val2, $CellContext`digs], 
          ", ", $CellContext`sym3, "=", 
          $CellContext`nfn[$CellContext`val3, $CellContext`digs], 
          "\n", $CellContext`sym1, ".", $CellContext`sym2, "=", 
          $CellContext`nfn[$CellContext`val1 $CellContext`val2, \
$CellContext`digs], ", ", $CellContext`sym1, ".", $CellContext`sym3, "=", 
          $CellContext`nfn[$CellContext`val1 $CellContext`val3, \
$CellContext`digs], ", ", $CellContext`sym2, ".", $CellContext`sym3, "=", 
          $CellContext`nfn[$CellContext`val2 $CellContext`val3, \
$CellContext`digs], "\n", $CellContext`sym1, "/", $CellContext`sym2, "=", 
          $CellContext`nfn[
           N[$CellContext`val1/$CellContext`val2], $CellContext`digs], 
          ", ", $CellContext`sym1, "/", $CellContext`sym3, "=", 
          $CellContext`nfn[
           N[$CellContext`val1/$CellContext`val3], $CellContext`digs], 
          ", ", $CellContext`sym2, "/", $CellContext`sym3, "=", 
          $CellContext`nfn[
           
           N[$CellContext`val2/$CellContext`val3], $CellContext`digs]], \
$CellContext`reportSums[
          Pattern[$CellContext`sym, 
           Blank[]], 
          Pattern[$CellContext`val1, 
           Blank[]], 
          Pattern[$CellContext`val2, 
           Blank[]], 
          Pattern[$CellContext`digs, 
           Blank[]]] := 
        Module[{$CellContext`sym1, $CellContext`sym2}, $CellContext`sym1 = 
           StringJoin["\[Sum]", 
             ToString[
              Subscript[$CellContext`sym, 1], 
              StandardForm]]; $CellContext`sym2 = StringJoin["\[Sum]", 
             ToString[
              Subscript[$CellContext`sym, 2], StandardForm]]; 
          StringJoin["\n", $CellContext`sym1, "=", 
            $CellContext`nfn[$CellContext`val1, $CellContext`digs], 
            ", ", $CellContext`sym2, "=", 
            $CellContext`nfn[$CellContext`val2, $CellContext`digs], 
            ", ", $CellContext`sym1, "+", $CellContext`sym2, "=", 
            $CellContext`nfn[$CellContext`val1 + $CellContext`val2, \
$CellContext`digs], "\n", $CellContext`sym1, $CellContext`sym2, "=", 
            $CellContext`nfn[$CellContext`val1 $CellContext`val2, \
$CellContext`digs], ", ", $CellContext`sym1, "/", $CellContext`sym2, "=", 
            $CellContext`nfn[
             
             N[$CellContext`val1/$CellContext`val2], $CellContext`digs]]], \
$CellContext`reportProds[
          Pattern[$CellContext`sym, 
           Blank[]], 
          Pattern[$CellContext`val1, 
           Blank[]], 
          Pattern[$CellContext`val2, 
           Blank[]], 
          Pattern[$CellContext`digs, 
           Blank[]]] := 
        Module[{$CellContext`sym1, $CellContext`sym2}, $CellContext`sym1 = 
           StringJoin["\[Product]", 
             ToString[
              Subscript[$CellContext`sym, 1], 
              StandardForm]]; $CellContext`sym2 = StringJoin["\[Product]", 
             ToString[
              Subscript[$CellContext`sym, 2], StandardForm]]; 
          StringJoin["\n", $CellContext`sym1, "=", 
            $CellContext`nfn[$CellContext`val1, $CellContext`digs], 
            ", ", $CellContext`sym2, "=", 
            $CellContext`nfn[$CellContext`val2, $CellContext`digs], 
            ", ", $CellContext`sym1, $CellContext`sym2, "=", 
            $CellContext`nfn[$CellContext`val1 $CellContext`val2, \
$CellContext`digs], ", ", $CellContext`sym1, "/", $CellContext`sym2, "=", 
            $CellContext`nfn[
             
             N[$CellContext`val1/$CellContext`val2], $CellContext`digs]]], \
$CellContext`reportAreas[
          Pattern[$CellContext`sym, 
           Blank[]], 
          Pattern[$CellContext`val1, 
           Blank[]], 
          Pattern[$CellContext`val2, 
           Blank[]], 
          Pattern[$CellContext`digs, 
           Blank[]]] := 
        Module[{$CellContext`sym1, $CellContext`sym2}, $CellContext`sym1 = 
           ToString[
             Subscript[$CellContext`sym, 1], StandardForm]; $CellContext`sym2 = 
           ToString[
             Subscript[$CellContext`sym, 2], StandardForm]; 
          StringJoin["\n", $CellContext`sym1, "=", 
            $CellContext`nfn[$CellContext`val1, $CellContext`digs], 
            ", ", $CellContext`sym2, "=", 
            $CellContext`nfn[$CellContext`val2, $CellContext`digs], 
            ", ", $CellContext`sym1, ".", $CellContext`sym2, "=", 
            $CellContext`nfn[$CellContext`val1 $CellContext`val2, \
$CellContext`digs], ", ", $CellContext`sym1, "/", $CellContext`sym2, "=", 
            $CellContext`nfn[
             N[$CellContext`val1/$CellContext`val2], $CellContext`digs]]]}; 
      Typeset`initDone$$ = True),
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.7975247139132395`*^9, 3.7975265975175953`*^9, 
  3.7975274547576885`*^9, 3.7975275752341022`*^9, 3.7975276361847467`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"DeleteFile", "[", "relaxApp", "]"}], "*)"}], "\n", 
  RowBox[{"ngonApp", "=", 
   RowBox[{"CloudDeploy", "[", 
    RowBox[{"%", ",", "\"\<ngon lab v1\>\"", ",", 
     RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.796658709140807*^9, 3.7966587387803946`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TagBox[
    ButtonBox[
     PaneSelectorBox[{
      False->"\<\"https://www.wolframcloud.com/objects/user-abf31092-d7c1-\
4e49-8701-dc65d547b021/ngon lab v1\"\>", True->
      StyleBox["\<\"https://www.wolframcloud.com/objects/user-abf31092-d7c1-\
4e49-8701-dc65d547b021/ngon lab v1\"\>", "HyperlinkActive"]}, Dynamic[
       CurrentValue["MouseOver"]],
      BaseStyle->{"Hyperlink"},
      FrameMargins->0,
      ImageSize->Automatic],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL[
       "https://www.wolframcloud.com/objects/user-abf31092-d7c1-4e49-8701-\
dc65d547b021/ngon lab v1"], None},
     ButtonNote->
      "https://www.wolframcloud.com/objects/user-abf31092-d7c1-4e49-8701-\
dc65d547b021/ngon lab v1"],
    Annotation[#, 
     "https://www.wolframcloud.com/objects/user-abf31092-d7c1-4e49-8701-\
dc65d547b021/ngon lab v1", "Hyperlink"]& ], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/user-abf31092-d7c1-4e49-8701-\
dc65d547b021/ngon lab v1"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.7966587576280327`*^9, 3.796663745100868*^9, 
  3.7969293704007626`*^9, 3.7969295038600807`*^9, 3.7970987260239725`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Antipedal Sums and Loci", "Section",
 CellChangeTimes->{{3.7975130163282733`*^9, 3.79751302204134*^9}, {
  3.797513544376371*^9, 3.797513545464512*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getFocalAntipedalSum"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getFocalAntipedalSum", "[", 
   RowBox[{"a_", ",", "n_", ",", "tDeg_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "poly", ",", "polyInner", ",", "causticAB", ",", "fs1", ",", "fs2", ",", 
      "\[IndentingNewLine]", "antipedals1", ",", "antipedals2", ",", 
      "\[IndentingNewLine]", "antipedalSum1", ",", "antipedalSumSqr1", ",", 
      "antipedalProd1", ",", "\[IndentingNewLine]", "antipedalSum2", ",", 
      "antipedalSumSqr2", ",", "antipedalProd2"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"poly", ",", "polyInner", ",", "causticAB"}], "}"}], "=", 
      RowBox[{"getPolyCausticInner", "[", 
       RowBox[{"a", ",", "n", ",", "tDeg"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fs1", ",", "fs2"}], "}"}], "=", 
      RowBox[{"getFoci", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"antipedals1", ",", "antipedals2"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"polyAntipedal", "[", 
         RowBox[{"#", ",", "poly"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"fs1", ",", "fs2"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "antipedalSum1", ",", "antipedalSumSqr1", ",", "antipedalProd1"}], 
       "}"}], "=", 
      RowBox[{"getMidDists", "[", 
       RowBox[{"fs1", ",", "antipedals1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "antipedalSum2", ",", "antipedalSumSqr2", ",", "antipedalProd2"}], 
       "}"}], "=", 
      RowBox[{"getMidDists", "[", 
       RowBox[{"fs2", ",", "antipedals2"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"antipedalSum1", ",", "antipedalSum2"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.797513028742322*^9, 3.7975131422202187`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"getFocalAntipedalSum", "[", 
       RowBox[{"2", ",", "3", ",", "tDeg"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tDeg", ",", "0", ",", "360"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<N=3\>\"", ",", "16"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.797513234224253*^9, 3.7975132630506887`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxVmHtYVHUexsm8YUmzLpK5JkfFCy7qKOYNwTfzLsJwEbmJZ4b7cJn74KX0
lJuF1EplZYp2rKzWMmFNM0A6W4+KtBKhUim6xywqS+VJfRTNdd2n+TWv/MPz
8uU7c+b3+37f9/PMEIstMbdbQEBA4T0BAf///ftP54xL1cY3+hfHwvcHFNYH
6xdahO6Nspfe+qXm60U+bUDu4X3r3hwd79PBuHxyV9tbk00+PQCuS+Vtno+E
HoQpfU7uD+2T4NMSWl5+M7HDKPRQlPe/GNU3UugwROVGBux8SOgRWGU52Jp2
QbzeKLieTJ8Yu1fo0Rhn6/l4UJnQEdh4JNNbM0nosQgLGf7xoIvieY2IOtZv
8yC30OPRtPz5bl/eI/QEtFbdCn93U5xPR2LQz9uvZEwVeiKCRu4ZMPo7cR6P
wFnx4L9/2yT0JNQbUj5/ZonQk3Es09KcGSr0FNxozGvsuiTOdyq+tY/d29oo
9DR4ljwXnfoPoaNQPGmL9Ful0NORfGXm/RPXCB2NJnl51iqX0DEYINuGJ5cI
PQNbmz/dMveP+wUKErYu7LD5tAIM2T/i2uEyUX8Ub3+Xm1GxVtQfxetbU9pP
vCjqM1HpsYQl7RD1mcBlY8OHtaL+GD5JWbWrplXUH0NV+5XAnhdEfRY2pU/Z
5gz0nYcyCyGnvq2oHynOZzZujlx+9f25oj4b+8/Ff2AoFPU5mHO8vPOjClGf
A4P3PwO8u0V9LiLeDyoYclzU56L2ifVHXuwS9Xl4aveDr+8I9d2nMg/NU69X
Tp4j7nc+Wp+YbxlVIup39AvRR9I2ivoC3C+dXLC7TtQXwBp56aGgc6K+EGO7
/3Y9s49vnpSFCN7YMPhv48V8xaKhZtzDJamiHos99j1N3daI+iIcPzp/zPgd
or4ICH4h//smUY9D/WDbO307RT0O5VsfrojtI+Y9Hu3tQ7+PGuTTSjzWHm7O
PDpG1E1oPnCzrSvGp2FCYXlzVW28+H8TwpPeTgmUfVozYU3oyl66TfQnoOPU
5t5T14j+BDT82tLjgb+L/gSE9mnuyqwS/QnY2fDz6ME7RX8ibp8wjooT/oBE
TDj66qEfPxP9iQgIfmHw+S9EfyJsSfXlcadEfxIO9z+h9usQ/UlQs5unRnaK
/iRsih+Yt6tL9CchsGigY3U34SfJuH5775k3hR8hGfeNC7b+pZ9PK8l4Kq6s
+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
xTM1v/Pz/wBwfks8
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 56.24441020371157},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
    StyleBox["\"N=3\"", 16, StripOnInput -> False], TraditionalForm],
  PlotRange->{{0., 361.}, {56.844410203711874`, 68.84441020371824}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.797513237025332*^9, 3.7975132659958324`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"getFocalAntipedalSum", "[", 
       RowBox[{"2", ",", "4", ",", "tDeg"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tDeg", ",", "0", ",", "360"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<N=4\>\"", ",", "16"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7975132810004997`*^9, 3.7975132868806596`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
uHGD+cd0y3xkueGV+EnDI+Yrm4Z65i9Fw3LmswQNu5jfoMFivrNreJX5T9WQ
xnyoachmftQ1JDFfhjR8w/xpaKhlPg1r8DO/mhpymW9bNHiZfy0NYebjTg2N
Ej97sJfrNo/cr3jkz0/orvP14cEqvj+7Bzf4/lUPpvDzaR6Zn3WPzM8hD0L8
/gyP/H7DHuzj9296ZH5u8ch//1ge+Xw7PXBL5+/FA54Pmxf3eH4Ur8zPCV5M
5fmDFx/yfNq9sPH8ql6M4fnWvKjn+de9uM37EfIin/fH8Mr7Fe6+Hu+f6YWX
97PFi928v5YXdt7vTi86pP334Rz7g82HfPYPxSfzc4IPUczP8GE6+5PdhxL2
L9WH6HjyN82HVyR+9qGZ/THkw2X2T8OHXeyvYR8S2H9NH75jf27xoY792/LB
xf7e6cNAyf/9uMv8bPNjLeeH4ofK+ZLgRzrnD/wYx/lk92M455fqR4DzTfMj
WeJnPwo4H0N+/Jbz0/ADnK9hP4Kcv6YfJZzPLX5c4Py2/LjO+d7px3Yp/wPw
MB/YAtjM/KAEYDBfJARwg7+/QwDDmU/sAfn7PzWAB8zPWgAK848eQD3zUSiA
DuYnI4Bvma/CAaxn/jIDqGM+awlgGvObFUAN811nAG0S/wXl71dtQbzM/KgE
kcp8mRDEYeZPBHGa+dQexEbmVzWIOuZbLdh9/8zPQZjMx6EgxPfP/wXME1Z0

      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 14.13291275378934},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
    StyleBox["\"N=4\"", 16, StripOnInput -> False], TraditionalForm],
  PlotRange->{{0., 361.}, {14.31175232837072, 17.88854381999834}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.797513135540204*^9, 3.7975132177418537`*^9}, 
   3.7975133067146063`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"getFocalAntipedalSum", "[", 
       RowBox[{"2", ",", "5", ",", "tDeg"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tDeg", ",", "0", ",", "360"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<N=5\>\"", ",", "16"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7975133107534122`*^9, 3.7975133149536605`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxNmHtcVNUWx4ky0STnIoQo6oCmXK4PVEwvYv4QeaXgyPsph4EZYHjN20rQ
o5ChZqIlmJodMx91s1DzlennYPqBtAS5vh94UOSakRfJMFT00ufGXpt/+KxZ
s+fss/dav9/3s7y0RdE6RwcHh9znHBz+/P//v/aZ95a37lp0ZAL++gDn95wZ
u4rFTijbVuJ0iMUqrLh0SdfNYlf43FncFvNdbzwYERdf2reXxZ6YntUWpzra
G6uhD2t0ymKxN/y+mlayg8WjsNG9tbSRxaOhXbg17TaLfbD4hvPRJhb7QrM7
ZrnM4rH4pXNn+vssHo97W86NiWSxH8LeMegdWTwR75mKT+5j+52ERNXtT/Qs
noxRA/2/GMFif1ifH3HoJnv/Kfgty+3jvSx+Dc4XjaPWsngqokI+8FzC4mk4
3n2nqJjF/8QY4UloOYsDMNmcOmEri6dj++orwSdZHAjNR5aYDhbPgGf9sxdG
s/29jgq7pTONxTMxrWTAxSoWA/8aPr34bG8sArGFOfed2HkE4fD4P5YF9sZi
ENb5O500sPws+HmVVq5j+Vl4e7u31z6WD8Yp3aMLp1k+GC5OQwuvsfxsfKSt
v9LC8rMR3rc1nO43BC73c1zZ/YohmNbkerye5UMxd13jw29ZPhQeM/Q2ieXD
cPlMsfNSlg/D6Yn+n6SxfDh2jZ6kmsry4TA2xoW9zPIRCK3p59PCzicCdo+p
7x9m5/cGgn+68MYalu+Jtw7xonqZA9e9r554neXn4Iudb5z3YPm5cDx34ubD
3vsT5+Ldp4r+MrvPSCS+vbL2GMtHYmPExPhdLB8FJfvpvEqWj8Ku83OaqH7m
4XhVvLvI8vPQVu71jPpbg8w1YjmrP2gQI86uXMq+r0Hn1+KTlb2xrIH2xq2l
G9j6+bA3D2/+nK2fj+j7Madov/PREbGy5QJbPx8bPLzr77P10VhgCBk5sPc8
EA3BOcY2np1XNLY/Rfy83liOxji3B7Emdn4x8Buz6tkHbH0Mrg3a3HKArY9B
gi7jw8tsfQw67Re3PmbrY5EVWLfNs/e+EYuh909MoXqPRbKnc1dSbyzH4plZ
u97G6iMOF6b/cJjpC+Kw+57/sO1sfRx8L6uXHGLr4xAtue6qY+vj4VLqajjP
1sdjQHi3RPUej+IfTk9i/SHH44Bbw8BWtj4Bx4b9SHkkYEk7vz4B25e40e/L
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
rkk=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 15.865941922512045`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
    StyleBox["\"N=5\"", 16, StripOnInput -> False], TraditionalForm],
  PlotRange->{{0., 361.}, {15.866177824154388`, 15.870895857001283`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7975133205593796`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getAntipedalVtxF12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getAntipedalVtxF12", "[", 
   RowBox[{"a_", ",", "n_", ",", "tDeg_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "poly", ",", "polyInner", ",", "causticAB", ",", "fs1", ",", "fs2", ",", 
      "\[IndentingNewLine]", "antipedals1", ",", "antipedals2"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"poly", ",", "polyInner", ",", "causticAB"}], "}"}], "=", 
      RowBox[{"getPolyCausticInner", "[", 
       RowBox[{"a", ",", "n", ",", "tDeg"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fs1", ",", "fs2"}], "}"}], "=", 
      RowBox[{"getFoci", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"antipedals1", ",", "antipedals2"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"polyAntipedal", "[", 
         RowBox[{"#", ",", "poly"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"fs1", ",", "fs2"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"First", "/@", 
      RowBox[{"{", 
       RowBox[{"antipedals1", ",", "antipedals2"}], "}"}]}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.797513555905714*^9, 3.7975136263088837`*^9}, 
   3.797513676954273*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Transpose", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"getAntipedalVtxF12", "[", 
      RowBox[{"2", ",", "5", ",", 
       RowBox[{"N", "@", "tDeg"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tDeg", ",", "0", ",", "360"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7975136275253325`*^9, 3.797513654834293*^9}, {
  3.797513689465314*^9, 3.7975138023954487`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
XmG3W56pT8L///vz/wAAb5Ds
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
X0Dxf+/P/wGkqaDX
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-3.1564694755333083`, 3.156469475533304}, {-2.668026952307154, 
   2.6680269523071525`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7975136379394836`*^9, {3.7975137013681555`*^9, 3.7975138077979727`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Transpose", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"getAntipedalVtxF12", "[", 
      RowBox[{"4", ",", "5", ",", 
       RowBox[{"N", "@", "tDeg"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tDeg", ",", "0", ",", "360"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.797514027153597*^9, 3.797514043811459*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwteHc8V+/7/8vezrFedvbelLfepXOFNJWIzBAloigjI8ookoTKihQV0hCh
qHOjJCq7d8kmGWXv+Tufx+97/jmP63Gd+76v+Xxe95E5ftbiBCONRvNgoNH+
9/7/Dw5bB/16J5q5Udmz4h3/NPCBglb8RFAfBxKKUXouYyAA37Ws34jXsqLR
45732cwFIcw2fO58KRMaXA/5+EhGCBpM5BpyW2lI3kWr0aZSCHKYK4XbbFZJ
Hc8ce18NOqzzMwyUXlkgXUSdfXzC6TA1V+KupjJDGs3julpv6JB06Iq11Mlx
crxFTtptgA46Zmlde9R/kw54a736Bh0mPYr3yV7rJSP3GlSG48JQe9pjKKup
jdQ748UcISoM3rEH03d/riadIgzT3osLwyk+3oBt5C3Cq0rD/6yIMCgmO88R
VbXE9eShAidqfc8dVZGNv21E+xTr8e3MwqDPH/NNj7WbkKiwT4iepcPq2tof
PocB4lORvENWHx32DJvs4Yz5TXi1o8S2BjqoqljoCV0fIxSd9KZPFNOhu/pD
mLvXBME8JS0RlUqHPzHnENyZIhRmxNyPhtAh1W9t9LH7DGFde56JwYEOjxoP
Nz9QmyNYmriT7v5Lh/K8798NBuYJR3NG253CdAhNZ0e7ExaJ4ZqTWkzTQvCq
wO3qNe1lInmgVXemXghKvA/y3/u4QrSwnDwi/UAI9Dzlqzmt1gjhj1wfUwKF
4LJKB7HjxzrB8jPA+sR+IUhPizt4QJUG+zCxwmRJIUj5en++ZIAG683GV9TH
BeH9eXr5cioD+KaeGDR4KwjnUqyLtu5jhIMpnapV1wRh/kyzUewCI5zNZoYv
1oLA+lixZDWbCep853LcZARhgOEAyjFlhmbG1cgbowKg3fqXO26YGU5FPKw/
/FIAWF0v36y8wgLCzMwary4IwDO9rhFChhWmC4u2kIYCcNY/74lYOStcX18x
C2AQAMbh2Ezz/Wzw9lHch94afgg7lz870MEGrXmfvzNH8wPzWEtU+0l2KLpv
Vjpswg/BXuZj8hPsEHfbKDKJiR/aPrmVNJ3ngOygQ07sVXzwgFUl9NssBwyJ
l7ubX+QDzRofLr1znJD0keeNjwEfFC0Svv1jnDBQcSbg7DQOZ9l2i/a6cME7
mVNVFk9wsIiq61Fs44JLR2M+SLviYGRlKFdkxA1iCk9LekRxeGm90XrhKTcE
8Gklqd3D4MxRg4hAQR5AYenXk9gxMPDY5/kokAdqmzNnaD68YC7VE77+jQcm
NQ4HRrbzwArtQ+AFXV7o9q7pUtzKA9fE3zZxX+MFWb77TIvp3FDNbP2zuIsX
TPzyO5lWuGDwzV90QgODd4GL54/acgHH6clYsSAMTLpV/my84gTlne5y9Yg6
d8ounJOPE/RmZ3T0GXH4ZsMbHuXJASYpS1dXZXDoTp6zDKlmh+GXv8eLCRz6
GXIuroqww9Arv+029jiMiiolCZ1hg7rx40a//HBY4sowbKtihQdWHxqtr1Ny
Q/pOU0FWiBcRfJl3H4cYoxd+QSdYwGNJoPRbCQ409aKqkFfM4CqenNf5AYdM
Jj4le2ZmcAlbsy5tw2GftnKpggUTnORoSHDqw+F9pG/SSBYjNL+ok20bw2GI
mZwsGWWAnbQdfdgsDnndJ+l3tjDAN+bJTN5lHGINPWwywmkQ48io8XkNh/U0
qS2PEjcIfK7U1WQDB4EJ3swU2XWCs4Rb5Pw6DqkrI7+UXq4SW3cZSh9ZwSHi
J4eCH6wQJu2iFgNzOKQNj0enfVki7oSbRkiM4yCyar7nle0i0TtpGbkygEOB
vMq7wcF5YjS5VD70Pxz+vfNq766zc0SFV7pOeh3lX+IF+9nFGeJYatLZw2WU
/VO6PljENJGiI5eZmYPDL66fvCWcU0S2hrxPcDwOPrPS8RsKE8Tn6JXkASq+
fBNittL6fwjat8LHbbY4zBaql7CYjhAZFpXb9m6n9rNtbBu1GiKEqvobt0vg
wBi5e4rz5ACRVCx132oGA6fY8G33A3qJPjsfZcl8DJ4VfnjdjP0kkpq+vai1
xaCozH9w6+Z24kDLsYt7WDDwk9m+qf/VV+L5U4Ok1CdU/e2QM+9gryFC/3g+
LTzACz68jY5SsU8JJd3ZHcHDPJCtYyaRP5NN2glZOs+HUfKtFqGcxySJ0KkG
IZwHtJ3esEW5NJDAW9D0OYMbNhln/Xv9XCtpmp14AJPlhtICT6lWzR/kJjWT
u00PuKDi3+hPsr+6yayH1olMm7jAKOJpZ+S+fvLd7Vy39GROeMGxfpZN6hdp
VCubd4WJE3jd/mntn/hNLg+k/vPamwOud3gtd1aOku2EqrJsCzt0l5MSb6P/
kv0pyaUvtNkh9GefvYLCJPlrE8Nmy1g2CL/l+kkxeopUYHecmv/JChZza721
/dOk8r0Z5RhlVlDsftc2YjhLGmw2HZo6wwKd8qI0vztzJOPO/jHJ58xwyYkY
2ftnnnxzkSdldpgJdGXcjcyJRTLkCX+VgwQTbOaZHj2dsEQ2bp7L3LaXEZyb
giYvdy6TA0H7U/3OMgBWWJEQqLhKyucvqozcoIFYs9MWXe81csRw/PjUwQ0i
wig1LOXFOrmoUHaFdm6N2O+YtDV+coM0UHGaKLmyQryv6HgZeoeGGB94n3h3
fYmwEGkT7dNlQOnrB5prIxeIoZvXGN2/MKA8emKZ7+k5on27QCnDSUak2jaS
Z288Q3CdOHo7d5URbXrtlyvKNUU87AoSMU5kQqNbZ9t9ov4SD+tYvzbJMSMW
fCoisGmYKJQbst1ZwowuV7sabVsaICQJdr8YIxY0tXnkwJaVLiK3omoo7SsL
snLZ0f66vJW43FN/3cOGFd1S5VEnzauJN5OtB8d6WFE2rSPSPi6D3FyUKS1w
gg0Z6IsX7/j5iXRhjVhr+82GLt1QPvI66DsZJWM1KH+KHZ2GkZNHtPtJd5bI
lvlf7Gh0TC9Gx3KYfNez+90OFw5U99I5J/3xOFkm/jNh8gcHWqTTds6kTJML
Io6iNHNOtJ2by9N8YY58W2rG41LDiYKD7J7uPk/lZXXXDOtmLsSsq1Fvz7NG
lidni/26z4Xi7Sa2p7nSUHhTwbVxbm4UcYNtdP9hRjTM3D8h5M+NTnZ/XUfm
zMj86sNosw5u9MkCS+R0ZUWehrkrV7bzoGCf1h+WsewIWmWtizN4kM/YxfMD
7zmRljFzXfUCD+qMflsoKcyDxLN2ROea86KYn8m9Vy5jKNtG+LrpI17E2kXv
6mfkQ6qZMq63Fyn9zndZLRb8KPx9xKeQ3Rj6tFiuHlckgCSKfK37kzDk5Ndh
JSIthBxy/mV+3oGhTI9vS6n36Ohqo/zh4xiOHp8XrjDUEUHbJ88IXtbCkZzA
sKTpN1FUdQWbzTbDkWuuyv6VBHHUnVS5q9ADRwwZ9RaPnSSRXUjbbGwkjoLl
0vZeNZVCHy5JfZHIwJHo0b6ZjgfSqKnh7UOjFzjq4h9+xPJcBt1lO+fVWo2j
Q216GfMfZZGK/iHh7BYcsYgtRET9lUOcbJI3fHtwZLdueXphkwLikHQsYhvB
0THl8GVkp4hMM9PqRCZwlH4o0V0kSwn5GBZ2Hp7CUU+RR9u5QWV0UVi924bS
hyQdH2pRVEUu138tNg/jaFfUcOy0nRqS2LXM5dmFo6UzXA6O59TRgHbDw+HP
OLpVLDFfbquB8k6xuO8vw5F6YsKnskUNlF55f23kLo7Y+3ObLulpIl6ZDo+M
MBzBAZHRkHEN5M9YJt7giCMPVnrQvKAGyk9fynXbjqOIIP8P3vfVEJpVromS
wNGmobzMLzkq6P/mZ3Q+cuRGCyghRobDqeONGEqxFapsyZNHKCImyyMfQ5fM
GAoOc8qino0e4ZdxGPp7tOxhMiaFrO71Ntj6YyjMQtXTxEMMSSn9Smtyw5BX
Re+xJC06qj12q7LYBkOtxcUSMc78yGFGKWT4EIYGPmyNTRnkQbna1dzpezGU
0JjYm/CCDZlwif9Q30XVi79QZDcXI9rllHVG2whDTTkJtq3kEvnMVTDPEjBk
MLLFq1R3kgzTfPPUnsCQprdwUAl0kTYs9wIkKfm9IKR6y78ggirS9IIoWW8v
yZ9R0kew2ZSJHaXWHwjhr721d5Lo83BTebgTQ+mRWlw3jy0Q8psOJloZY+ja
32RuEYV1IrJBLMORsidSzlg4wJIROEXKO0qoejaciJLmCWCBazcu3j2yD0Pn
YgoT8y6yw1YX/eB/zDC0h+JcPm8uiIz04bY1x9BglUdShikvOBkyv3hliSFH
tja9TVdwOCGjb7fvKIa+Vw6Pfu7hg8KxsEBBeww5hIhacusIwPsulRY+Jwzx
eWdknQ8WBCzvQxi4YiiEc2ZbJHVPSfCf/pzlTu0vzOGft0CHYydCt6l5Yag6
zOMUqIvA9rilM4M+GBKs8r+YbicKLXrWqp+ofK1dsfZejhCD8ns9e74HY4gJ
55lLeygOv79ceI1fwpD8aiMUVEvALdnXwb7RGHo2f0fSqkMSnN/UpCxdw5CZ
m9LK2z+b4FpgkULeTQw5R03UMi5LgYW5z87QOxiKqNO13HRZGi6003j971L5
jtLcjxhlgNa68TLxAYbiXPuWJi7LQGKpt31zHoZoO4oulKzLwB/LvM16zzF0
yu1HmECQLDgPx3uXvsLQzeqEeL4pWQhgrd5iV4mhJ51n6C9PyoFZCO9byRoM
sbqu3134IQeLdj91afUYalTD2wb2yYOYyZsPtGYM+YzHlgW+loe8LIacTd8x
JNchnlOsoADP1PznbXqo+Eman0xJUACf50sjz4YwNP3joLXsggKc6T78UGoc
Q0aKuY6WDoogyDhgVjCHIeLwPk4VUhHK2C6xHlzDUECLdvp9KSVgn7y7EMWI
ozwLH9aKi0ogIpWedIYVRy2WVjznfyhB7cwOF1dOHB0kTmz7qKsM2lNz48d5
caT6JnSmJFYZiPMhH7z4KbxakAnY2q0My8ZfvC7RcdSoKzt8WFsFsprETmeK
4Whz2A2blXAVsK17ZVKzCUe3XVVqdb+oQOc0Y+iULI4sy47Izwmrghff6UQl
JRxNLl13IpxVwS57P9MJNRxVc4S58D5ShXXz32b5FL5uPlch6DSiClvp1mMz
ejj6x0PhlKaqGuD3/CxNDHBEC2S0CDqlBrrirStpFJ7YtrS1bM9Vg2WFnKOz
gCOiYGrBv4vSl+T+Z7ELR387e7pkBNXBspdvtGQvjhhXIl4a7lGHIz6xy6IH
cTTzm15WG6QOqeMLvpctcNQ2urHzTZ46HNQMLx21xtGd2+eQULs6dQ92ULOy
x9GV6Pmyb+vqIOZWr42ccPQ7v/bjsoIGGN8bklNzw5GaD19B+D4NmHOKP3b7
FI7GJ8S2uHppwPIxg3/WvXB0bsbIISdOA/Y9/0474Uvh/+VJ7R151Pcszzg/
+eOoydFtQKdaA9w/iWWrBFP2vDtfE/pDA7Sz/divUPia4KK+U3JcAwp1mq90
ReCo9tfxv3w0TSDef7XVuoqjoYPqwbaYJqg72lQEx+Eo1c64YlpcE/TX3Xrf
JVB8ZmL3qFNBE24lFy0uJ+NI4pytJV1DE8zE/TU1U3Hk5Ra3mqWjCdyRvI+O
UviutK103V9PE+49fXIxIBtHfjOyP9J1NUGMaeRzbC6OMkOTNHi0NGFvz6nc
m3k4olPc9llZEz5KH+e5VkjxU4lg4A8pTZBjV+Dwp/huqeaenZ6gJvy9dPum
eQmOylVibnWwaELvt7Rk8XIcCTNUn22c1QCfd6GLbRXU+dKzR/n7NKAkeGdG
CImjWNrI95x6DaivGz7AW4Oju1OjmVFFGoAEHrbE1eLoTxOn76vbGvBj7+rg
9Cccrbub//tPoAbIXWzXNPqCo6Kzreuc1hrQauxz4EITjkrplT06uhoAicb1
ya2U/r2K6FMuDegMrZJL/oaj70/WaWH96vBHaq3K7weOzBJusDwqVYciB61l
/U6qn+Y0CxVj1KFqg879vZvi38+PEhiOqsPwdm1p6z5qP5OQYwZy6mDNRe56
PoAj7QvCPz7/UQPZI499+n5R9kp+bkTFauBkzBM4+htHWbtzpekX1CD9UBlv
HcXvzU1cr75uVQPfUtX6wDEcJdUZh/9ZVIVS/WChhT84+lyaHej7ShU2St/q
Go9T9ah2I83prCogY2V9W4rvNWIsessVVaHc9gWD/iSOXtjGG4f/VAHnmu3w
jZIzcc/ikngVKHUwddan5oUnwpcE7Q1VQLuxM96CkhXTbLb5jSpDffnSE0VK
XrJP/M1wWxkMcjnNnlHrJTST37EYKgNrwZ2CQeo8Q6J51+V+JVjz7M14T9mj
kRnd6R+tBENbnOP2/MXRtmddJYMKSiDu/8fTk/IniDvm89caRWCvc3okR/lL
hicPbnZSBFuIEvQewlEAU/wF4UUFEOliGNpBxe/s+7qSgBsKoLOLKenm/+ah
r+RpC1kFEL2lj2x+4si03IOzoFgeGm2QVjyVv71MgXGhRvKwrJybLtuMo2vY
QY+6r3JQ/Qa7zd2AI95b+TfibORgPabD3fA9NY94l+yq6ZGFU5mnfz2sxJGP
f4iCl5ss3NzADLZQ9bpLKG7t8pAMuMzezftegCN9/zhy44QMCH3dsA+h+oNT
ovBkT780sOkIs7LexlFZ9rNOUUdpOBTUmXAsBkfRe6rKzfKlIKY45Jk71d/i
bS8eLCVtAtR44RTtNDX/dd71kAmUhNkc12gmOxxVOs5/fWIlAX87OwZMd1P9
4T6Gh2qKQ7DB8xfpupS/vMeTfBnE4K5J84U6cQpfUNtF968isO+JKW8Shf9S
lWZum28LQ9Yfwtv5C4Ys7uZ05FvRYSDIR/NBAoZUc0+K3MKEoHo6/776fgzZ
tbRmvq4WADvjFl+FDV708UDfcMcZfghestmSUMCL2j9473opwAc2NxPqjQ7w
IlnBnFu/XTCoPtJ54Hc/D2rA4//NuM4N7/ryLYe9eNB/xHfT5kccsHObh4Tn
MDfyiTAtaH3OCkG707W3WXKjWwefs488YoJpqXKOmgIuhF/bzesQR4P/1KLU
/o5xIiOpwnye18vESMO8Di7AifIPXbSt05slzkeXnmsS50DM0c5xD7nHCIfM
nZrrNHbUU3PMxqWmg+D4YCngU8mKDNZ1FKVak8h2/VmbTlMW1M8cTwW0i0zf
Nur3KoUJdeVk8SWY/yUtZdt3CD5kQOtMw9/ilubI3mOjAREf18mVWfJ64KE1
Uvbja/n5G0vkb6U++tW9jGi62azX4uoM2dHP+OlSMwuqsxDrXtcdIQcqbvSd
UeZAPhbJhUztLeRq1H+S9lrcSHk2cGA+s4mQsDWxOknyIhvVGiGjr2PE6Rtv
mIesKJys4ihLsFgkrju/b6uh6vy12zrLRDQDvP1X5enTBRzpPTfUkqpnBZeV
1UPGFK7b1nlc7nzBBVvsRuLLqLlucuN/DwZS//f/+f8BzXuBEg==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-5.777117151622114, 5.777117151622035}, {-15.100592155577957`, 
   15.10059215557795}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7975140327488823`*^9, 3.7975140498654227`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Transpose", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"getAntipedalVtxF12", "[", 
      RowBox[{"2", ",", "6", ",", 
       RowBox[{"N", "@", "tDeg"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tDeg", ",", "0", ",", "360"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.797513886850215*^9, 3.7975139084439263`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
GMCG/aXpK1sK3GD+/wCU/50//wcpo3tw
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-2.6089038885408273`, 
   2.608903888540828}, {-2.8158075046782587`, 2.8158075046782582`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.797513902024557*^9, 3.7975139115320506`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Transpose", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"getAntipedalVtxF12", "[", 
      RowBox[{"3", ",", "7", ",", 
       RowBox[{"N", "@", "tDeg"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tDeg", ",", "0", ",", "360"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7975139678823605`*^9, 3.79751401403458*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
0Is=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-3.430657401050677, 3.430657401050677}, {-8.593747269221332, 
   8.593747269221335}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.797513976780785*^9, 3.7975140226512995`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Figures Labeled", "Section",
 CellChangeTimes->{{3.796637101835638*^9, 3.7966371058718286`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotInvariantsPedalsLabeled", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"p1", ",", "p2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p1", "=", 
      RowBox[{"drawPolyCausticInner", "[", 
       RowBox[{"1.5", ",", "5", ",", "15.", ",", "\[IndentingNewLine]", 
        RowBox[{"drPs", "\[Rule]", "True"}], ",", 
        RowBox[{"drCaustic", "\[Rule]", "False"}], ",", 
        RowBox[{"drFoci", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"drOrbit", "\[Rule]", "True"}], ",", 
        RowBox[{"drOuter", "\[Rule]", "False"}], ",", 
        RowBox[{"drInner", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
        RowBox[{"drMidPedals", "\[Rule]", "True"}], ",", 
        RowBox[{"drMidExcPedals", "\[Rule]", "False"}], ",", 
        RowBox[{"drMidInnerPedals", "\[Rule]", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"midParamX", "\[Rule]", ".5"}], ",", 
        RowBox[{"midParamY", "\[Rule]", ".25"}], ",", "\[IndentingNewLine]", 
        RowBox[{"drMidAntipedals", "\[Rule]", "False"}], ",", 
        RowBox[{"drMidExcAntipedals", "\[Rule]", "False"}], ",", " ", 
        RowBox[{"drMidInnerAntipedals", "\[Rule]", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"drPedalPolys", "\[Rule]", "True"}], ",", 
        RowBox[{"drAntipedalPolys", "\[Rule]", "True"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"drCentroids", "\[Rule]", "True"}], ",", 
        RowBox[{"drAreaCentroids", "\[Rule]", "True"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"drFocusPedalCircle", "\[Rule]", "drFocusPedalCircle0"}], 
          ",", 
          RowBox[{
          "drFocusExcPedalCircle", "\[Rule]", "drFocusExcPedalCircle0"}], ",", 
          RowBox[{
          "drFocusInnerPedalCircle", "\[Rule]", "drFocusInnerPedalCircle0"}], 
          ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"fontSize", "\[Rule]", "20"}], ",", 
        RowBox[{"lgt", "\[Rule]", ".1"}], ",", 
        RowBox[{"digs", "\[Rule]", "5"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p2", "=", 
      RowBox[{"drawPolyCausticInner", "[", 
       RowBox[{"1.5", ",", "5", ",", "20.", ",", "\[IndentingNewLine]", 
        RowBox[{"drPs", "\[Rule]", "True"}], ",", 
        RowBox[{"drCaustic", "\[Rule]", "False"}], ",", 
        RowBox[{"drFoci", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"drOrbit", "\[Rule]", "True"}], ",", 
        RowBox[{"drOuter", "\[Rule]", "True"}], ",", 
        RowBox[{"drInner", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
        RowBox[{"drMidPedals", "\[Rule]", "False"}], ",", 
        RowBox[{"drMidExcPedals", "\[Rule]", "True"}], ",", 
        RowBox[{"drMidInnerPedals", "\[Rule]", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"midParamX", "\[Rule]", ".5"}], ",", 
        RowBox[{"midParamY", "\[Rule]", ".25"}], ",", "\[IndentingNewLine]", 
        RowBox[{"drMidAntipedals", "\[Rule]", "False"}], ",", 
        RowBox[{"drMidExcAntipedals", "\[Rule]", "False"}], ",", " ", 
        RowBox[{"drMidInnerAntipedals", "\[Rule]", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"drPedalPolys", "\[Rule]", "True"}], ",", 
        RowBox[{"drAntipedalPolys", "\[Rule]", "True"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"drCentroids", "\[Rule]", "True"}], ",", 
        RowBox[{"drAreaCentroids", "\[Rule]", "True"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"drFocusPedalCircle", "\[Rule]", "drFocusPedalCircle0"}], 
          ",", 
          RowBox[{
          "drFocusExcPedalCircle", "\[Rule]", "drFocusExcPedalCircle0"}], ",", 
          RowBox[{
          "drFocusInnerPedalCircle", "\[Rule]", "drFocusInnerPedalCircle0"}], 
          ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"fontSize", "\[Rule]", "20"}], ",", 
        RowBox[{"lgt", "\[Rule]", ".1"}], ",", 
        RowBox[{"digs", "\[Rule]", "5"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Show", "[", 
           RowBox[{"#", ",", 
            RowBox[{"PlotLabel", "\[Rule]", "None"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"PlotRangeClipping", "\[Rule]", "True"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2"}], "}"}]}], "}"}], ",", 
       RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7966368398270574`*^9, 3.796636884175531*^9}, {
  3.79663723419576*^9, 3.796637237670082*^9}, {3.796637280747668*^9, 
  3.7966372948069506`*^9}, {3.796637519493617*^9, 3.796637523071083*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{
        {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, 
        {GrayLevel[0.5], Thickness[Medium], Dashing[{Small, Small}], 
         LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}]}}, 
       {PointSize[Large], Thickness[Large], FaceForm[None], {InsetBox[
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(f\\), \\(1\\)]\\)\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           FontColor->GrayLevel[0]], {-1.118033988749895, 0}, {-1.5, 1.5}], 
         InsetBox[
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(f\\), \\(2\\)]\\)\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           
           FontColor->GrayLevel[
            0]], {1.118033988749895, 0}, {-1.5, 1.5}]}, {}, {}, {}, {}, {}, 
        {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
         PolygonBox[{{1.4488887394336025`, 0.2588190451025208}, {
          1.0984761489955917`, -0.6809634188536171}, {-1.0018778964722075`, \
-0.7442343360230999}, {-1.470736667768103, 
          0.19656342384117953`}, {-0.08391036549441133, 0.9984341185771503}}], 
         {RGBColor[0, 0, 1], 
          PointBox[{{1.4488887394336025`, 0.2588190451025208}, {
           1.0984761489955917`, -0.6809634188536171}, {-1.0018778964722075`, \
-0.7442343360230999}, {-1.470736667768103, 
           0.19656342384117953`}, {-0.08391036549441133, 
           0.9984341185771503}}], {}}}, 
        {GrayLevel[0], PointBox[{-1.118033988749895, 0}], 
         PointBox[{1.118033988749895, 0}]}, {}, {}, {}, {}, {}, {
         PointBox[{0.5590169943749475, 0.25}], InsetBox[
          StyleBox["\<\"m\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           
           FontColor->GrayLevel[
            0]], {0.5590169943749475, 0.25}, {-1.5, 1.5}]}, {}, {}, {}, 
        {RGBColor[0, 0, 1], 
         PointBox[{{1.337384878581987, -0.04022663975933949}, {
          0.5875249340185023, -0.6963552772263619}, {-1.0882443379454525`, \
-0.5709340596074551}, {0.0736068099059779, 1.0895114270072517`}, {
          0.7305289310672385, 0.6054461671682408}}], 
         {Dashing[{Small, Small}], 
          LineBox[{{0.5590169943749475, 0.25}, {
           1.337384878581987, -0.04022663975933949}}], 
          LineBox[{{0.5590169943749475, 0.25}, {
           0.5875249340185023, -0.6963552772263619}}], 
          LineBox[{{0.5590169943749475, 
           0.25}, {-1.0882443379454525`, -0.5709340596074551}}], 
          LineBox[{{0.5590169943749475, 0.25}, {0.0736068099059779, 
           1.0895114270072517`}}], 
          LineBox[{{0.5590169943749475, 0.25}, {0.7305289310672385, 
           0.6054461671682408}}]}}, {}, {}, {
         {EdgeForm[RGBColor[0, 0, 1]], FaceForm[{RGBColor[0, 0, 1], Opacity[
          0.1]}], PolygonBox[{{1.337384878581987, -0.04022663975933949}, {
           0.5875249340185023, -0.6963552772263619}, {-1.0882443379454525`, \
-0.5709340596074551}, {0.0736068099059779, 1.0895114270072517`}, {
           0.7305289310672385, 0.6054461671682408}}]}, 
         {RGBColor[
          0, 0, 1], {PointBox[{0.3281602431256507, 0.0774883235164672}], 
           InsetBox[
            StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(C\\), \\(0\\)]\\)\"\>",
             StripOnInput->False,
             
             FontSize->
              20], {0.3281602431256507, 0.0774883235164672}, {0, 1.5}]}, {}, {
           PointBox[{0.16746026629420463`, 0.020192228648018402`}], InsetBox[
            StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(C\\), \\(2\\)]\\)\"\>",
             StripOnInput->False,
             
             FontSize->
              20], {0.16746026629420463`, 0.020192228648018402`}, \
{0, 1.5}]}}}, {}, {}, {}, {}, {}, {
         {RGBColor[0, 0, 1], InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "1"],
            StripOnInput->False,
            FontSize->20], {1.541674729064109, 0.2961119415881459}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "2"],
            StripOnInput->False,
            FontSize->20], {1.156742853093428, -0.762234515767435}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "3"],
            StripOnInput->False,
            
            FontSize->
             20], {-1.0532204757044905`, -0.8300477356631137}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "4"],
            StripOnInput->False,
            
            FontSize->
             20], {-1.566500517946428, 0.22536073272627016`}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "5"],
            StripOnInput->False,
            
            FontSize->
             20], {-0.08764296105329464, 1.0983644329486852`}, {0, 0}]}, {}, \
{}, 
         {RGBColor[0, 0, 1], InsetBox[
           StyleBox[
            SubscriptBox["\<\"Q\"\>", "1"],
            StripOnInput->False,
            FontSize->20,
            
            Background->GrayLevel[
             1]], {1.4310833810971646`, -0.07516359192196065}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"Q\"\>", "2"],
            StripOnInput->False,
            FontSize->20,
            
            Background->GrayLevel[
             1]], {0.590535961097327, -0.7963099355266662}, {0, 0}], InsetBox[
           StyleBox[
            SubscriptBox["\<\"Q\"\>", "3"],
            StripOnInput->False,
            FontSize->20,
            
            Background->GrayLevel[
             1]], {-1.1777455865247766`, -0.6155381681933473}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"Q\"\>", "4"],
            StripOnInput->False,
            FontSize->20,
            
            Background->GrayLevel[
             1]], {0.02355128724669603, 1.176081887623481}, {0, 0}], InsetBox[
           StyleBox[
            SubscriptBox["\<\"Q\"\>", "5"],
            StripOnInput->False,
            FontSize->20,
            
            Background->GrayLevel[
             1]], {0.7739868295210971, 0.6955095396454811}, {0, 0}]}, {}, {}, \
{}, {}, {}}}},
      ImageSize->600,
      PlotLabel->None,
      PlotRange->All,
      PlotRangeClipping->True], 
     GraphicsBox[{{
        {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, 
        {GrayLevel[0.5], Thickness[Medium], Dashing[{Small, Small}], 
         LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}]}}, 
       {PointSize[Large], Thickness[Large], FaceForm[None], {InsetBox[
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(f\\), \\(1\\)]\\)\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           FontColor->GrayLevel[0]], {-1.118033988749895, 0}, {-1.5, 1.5}], 
         InsetBox[
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(f\\), \\(2\\)]\\)\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           
           FontColor->GrayLevel[
            0]], {1.118033988749895, 0}, {-1.5, 1.5}]}, {}, {}, {}, {}, {}, 
        {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
         PolygonBox[{{1.4095389311788624`, 0.34202014332566877`}, {
          1.205462698509648, -0.5951133160077211}, {-0.8548319625635423, \
-0.8217223958869059}, {-1.4898230132486123`, 
          0.11628965597416208`}, {-0.3006285402585913, 0.9797102702742704}}], 
         {RGBColor[0, 0, 1], 
          PointBox[{{1.4095389311788624`, 0.34202014332566877`}, {
           1.205462698509648, -0.5951133160077211}, {-0.8548319625635423, \
-0.8217223958869059}, {-1.4898230132486123`, 
           0.11628965597416208`}, {-0.3006285402585913, 
           0.9797102702742704}}], {}}}, 
        {GrayLevel[0], PointBox[{-1.118033988749895, 0}], 
         PointBox[{1.118033988749895, 0}]}, 
        {EdgeForm[{RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[Large]}], 
         PolygonBox[{{1.6853195127221312`, -0.1631138036837947}, {
          0.3400774054860213, -1.3741916024587366`}, {-1.5945004497395416`, \
-0.4797349002968969}, {-1.363645070314118, 0.8347362951908539}, {
          0.9670041164590919, 1.1525897505024048`}}], 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          PointBox[{{1.6853195127221312`, -0.1631138036837947}, {
           0.3400774054860213, -1.3741916024587366`}, {-1.5945004497395416`, \
-0.4797349002968969}, {-1.363645070314118, 0.8347362951908539}, {
           0.9670041164590919, 1.1525897505024048`}}], {}}}, {}, {}, {}, {}, {
         PointBox[{0.5590169943749475, 0.25}], InsetBox[
          StyleBox["\<\"m\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           
           FontColor->GrayLevel[
            0]], {0.5590169943749475, 0.25}, {-1.5, 1.5}]}, {}, {}, {}, {}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], 
         PointBox[{{
          1.2686405717693412`, -0.5382363276447613}, {-0.0982341379419665, \
-1.1715372111686262`}, {-1.405738089752155, 0.5950621679510353}, {
          0.445619457318426, 1.0814834182432196`}, {1.252941619203149, 
          0.6288518623927107}}], 
         {Dashing[{Small, Small}], 
          LineBox[{{0.5590169943749475, 0.25}, {
           1.2686405717693412`, -0.5382363276447613}}], 
          LineBox[{{0.5590169943749475, 
           0.25}, {-0.0982341379419665, -1.1715372111686262`}}], 
          LineBox[{{0.5590169943749475, 0.25}, {-1.405738089752155, 
           0.5950621679510353}}], 
          LineBox[{{0.5590169943749475, 0.25}, {0.445619457318426, 
           1.0814834182432196`}}], 
          LineBox[{{0.5590169943749475, 0.25}, {1.252941619203149, 
           0.6288518623927107}}]}}, {}, {}, {
         {EdgeForm[RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0]], FaceForm[{RGBColor[
          0, 1, 0], Opacity[0.1]}], 
          PolygonBox[{{
           1.2686405717693412`, -0.5382363276447613}, {-0.0982341379419665, \
-1.1715372111686262`}, {-1.405738089752155, 0.5950621679510353}, {
           0.445619457318426, 1.0814834182432196`}, {1.252941619203149, 
           0.6288518623927107}}]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], {
           PointBox[{0.292645884119359, 0.11912478195471565`}], InsetBox[
            StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(C\\), \\(0\\)]\\)'\"\>",
             StripOnInput->False,
             
             FontSize->
              20], {0.292645884119359, 0.11912478195471565`}, {0, -1.5}]}, \
{}, {PointBox[{0.1346289912033967, 0.05940992316121189}], InsetBox[
            StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(C\\), \\(2\\)]\\)'\"\>",
             StripOnInput->False,
             
             FontSize->
              20], {0.1346289912033967, 0.05940992316121189}, {0, 1.5}]}}}, \
{}, {}, {}, {}, {
         {RGBColor[0, 0, 1], InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "1"],
            StripOnInput->False,
            FontSize->20], {1.497310003499884, 0.3899392299573858}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "2"],
            StripOnInput->False,
            FontSize->20], {1.272370156154431, -0.6694328431288725}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "3"],
            StripOnInput->False,
            
            FontSize->
             20], {-0.8967986758751685, -0.9124902039127681}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "4"],
            StripOnInput->False,
            
            FontSize->
             20], {-1.5883155717762671`, 0.1335875146473188}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "5"],
            StripOnInput->False,
            
            FontSize->
             20], {-0.3141414324201267, 1.0787930727448845`}, {0, 0}]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], InsetBox[
           StyleBox[
            SubscriptBox["\<\"P'\"\>", "1"],
            StripOnInput->False,
            
            FontSize->
             20], {1.7852827964459788`, -0.16582339906789959`}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P'\"\>", "2"],
            StripOnInput->False,
            
            FontSize->
             20], {0.4062937505305231, -1.4491275460969366`}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P'\"\>", "3"],
            StripOnInput->False,
            FontSize->20], {-1.694147324214965, -0.4881313523618601}, {0, 0}],
           InsetBox[
           StyleBox[
            SubscriptBox["\<\"P'\"\>", "4"],
            StripOnInput->False,
            
            FontSize->
             20], {-1.4622071648581136`, 0.8516334404852657}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P'\"\>", "5"],
            StripOnInput->False,
            
            FontSize->
             20], {1.0618588174384092`, 1.1842533842503546`}, {0, 0}]}, {}, \
{}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], InsetBox[
           StyleBox[
            SubscriptBox["\<\"Q'\"\>", "1"],
            StripOnInput->False,
            FontSize->20,
            
            Background->GrayLevel[
             1]], {1.3355480294141242`, -0.6125558547659127}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"Q'\"\>", "2"],
            StripOnInput->False,
            FontSize->20,
            
            Background->GrayLevel[
             1]], {-0.1402008512535926, -1.2623050191944885`}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"Q'\"\>", "3"],
            StripOnInput->False,
            FontSize->20,
            
            Background->GrayLevel[
             1]], {-1.5042306482798098`, 0.612360026624192}, {0, 0}], InsetBox[
           StyleBox[
            SubscriptBox["\<\"Q'\"\>", "4"],
            StripOnInput->False,
            FontSize->20,
            
            Background->GrayLevel[
             1]], {0.4321065651568906, 1.1805662207138337`}, {0, 0}], InsetBox[
           StyleBox[
            SubscriptBox["\<\"Q'\"\>", "5"],
            StripOnInput->False,
            FontSize->20,
            
            Background->GrayLevel[
             1]], {1.3407126915241707`, 0.6767709490244278}, {0, 0}]}, {}, \
{}, {}, {}}}},
      ImageSize->600,
      PlotLabel->None,
      PlotRange->All,
      PlotRangeClipping->True]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7966368502342067`*^9, 3.79663688568347*^9}, 
   3.7966372383083878`*^9, {3.7966372874255395`*^9, 3.7966372952178526`*^9}, 
   3.7966375235228453`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"export3", "[", 
  RowBox[{"\"\<pics_pedals_labeled\>\"", ",", "plotInvariantsPedalsLabeled"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.7966370939536495`*^9, 3.796637097849269*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotInvariantsAntipedalsLabeled", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"q1", ",", "q2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"q1", "=", 
      RowBox[{"drawPolyCausticInner", "[", 
       RowBox[{"1.5", ",", "5", ",", "20.", ",", "\[IndentingNewLine]", 
        RowBox[{"drPs", "\[Rule]", "True"}], ",", 
        RowBox[{"drCaustic", "\[Rule]", "False"}], ",", 
        RowBox[{"drFoci", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"drOrbit", "\[Rule]", "True"}], ",", 
        RowBox[{"drOuter", "\[Rule]", "False"}], ",", 
        RowBox[{"drInner", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
        RowBox[{"drMidPedals", "\[Rule]", "False"}], ",", 
        RowBox[{"drMidExcPedals", "\[Rule]", "False"}], ",", 
        RowBox[{"drMidInnerPedals", "\[Rule]", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"midParamX", "\[Rule]", ".5"}], ",", 
        RowBox[{"midParamY", "\[Rule]", ".25"}], ",", "\[IndentingNewLine]", 
        RowBox[{"drMidAntipedals", "\[Rule]", "True"}], ",", 
        RowBox[{"drMidExcAntipedals", "\[Rule]", "False"}], ",", " ", 
        RowBox[{"drMidInnerAntipedals", "\[Rule]", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"drPedalPolys", "\[Rule]", "True"}], ",", 
        RowBox[{"drAntipedalPolys", "\[Rule]", "True"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"drCentroids", "\[Rule]", "True"}], ",", 
        RowBox[{"drAreaCentroids", "\[Rule]", "True"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"drFocusPedalCircle", "\[Rule]", "drFocusPedalCircle0"}], 
          ",", 
          RowBox[{
          "drFocusExcPedalCircle", "\[Rule]", "drFocusExcPedalCircle0"}], ",", 
          RowBox[{
          "drFocusInnerPedalCircle", "\[Rule]", "drFocusInnerPedalCircle0"}], 
          ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"fontSize", "\[Rule]", "20"}], ",", 
        RowBox[{"lgt", "\[Rule]", ".1"}], ",", 
        RowBox[{"digs", "\[Rule]", "5"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"q2", "=", 
      RowBox[{"drawPolyCausticInner", "[", 
       RowBox[{"1.5", ",", "5", ",", "20.", ",", "\[IndentingNewLine]", 
        RowBox[{"drPs", "\[Rule]", "True"}], ",", 
        RowBox[{"drCaustic", "\[Rule]", "False"}], ",", 
        RowBox[{"drFoci", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"drOrbit", "\[Rule]", "True"}], ",", 
        RowBox[{"drOuter", "\[Rule]", "True"}], ",", 
        RowBox[{"drInner", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
        RowBox[{"drMidPedals", "\[Rule]", "False"}], ",", 
        RowBox[{"drMidExcPedals", "\[Rule]", "False"}], ",", 
        RowBox[{"drMidInnerPedals", "\[Rule]", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"midParamX", "\[Rule]", ".5"}], ",", 
        RowBox[{"midParamY", "\[Rule]", ".25"}], ",", "\[IndentingNewLine]", 
        RowBox[{"drMidAntipedals", "\[Rule]", "False"}], ",", 
        RowBox[{"drMidExcAntipedals", "\[Rule]", "True"}], ",", " ", 
        RowBox[{"drMidInnerAntipedals", "\[Rule]", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"drPedalPolys", "\[Rule]", "True"}], ",", 
        RowBox[{"drAntipedalPolys", "\[Rule]", "True"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"drCentroids", "\[Rule]", "True"}], ",", 
        RowBox[{"drAreaCentroids", "\[Rule]", "True"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"drFocusPedalCircle", "\[Rule]", "drFocusPedalCircle0"}], 
          ",", 
          RowBox[{
          "drFocusExcPedalCircle", "\[Rule]", "drFocusExcPedalCircle0"}], ",", 
          RowBox[{
          "drFocusInnerPedalCircle", "\[Rule]", "drFocusInnerPedalCircle0"}], 
          ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"fontSize", "\[Rule]", "20"}], ",", 
        RowBox[{"lgt", "\[Rule]", ".1"}], ",", 
        RowBox[{"digs", "\[Rule]", "5"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Show", "[", 
           RowBox[{"#", ",", 
            RowBox[{"PlotLabel", "\[Rule]", "None"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"PlotRangeClipping", "\[Rule]", "True"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{"q1", ",", "q2"}], "}"}]}], "}"}], ",", 
       RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7964238982238617`*^9, 3.796423900552636*^9}, {
  3.7966294304988437`*^9, 3.796629984090556*^9}, {3.796630014938089*^9, 
  3.796630028298255*^9}, {3.796636868667926*^9, 3.79663694549457*^9}, {
  3.7966373094268975`*^9, 3.7966373146728706`*^9}, {3.796637531779771*^9, 
  3.796637537549815*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{
        {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, 
        {GrayLevel[0.5], Thickness[Medium], Dashing[{Small, Small}], 
         LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}]}}, 
       {PointSize[Large], Thickness[Large], FaceForm[None], {InsetBox[
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(f\\), \\(1\\)]\\)\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           FontColor->GrayLevel[0]], {-1.118033988749895, 0}, {-1.5, 1.5}], 
         InsetBox[
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(f\\), \\(2\\)]\\)\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           
           FontColor->GrayLevel[
            0]], {1.118033988749895, 0}, {-1.5, 1.5}]}, {}, {}, {}, {}, {}, 
        {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
         PolygonBox[{{1.4095389311788624`, 0.34202014332566877`}, {
          1.205462698509648, -0.5951133160077211}, {-0.8548319625635423, \
-0.8217223958869059}, {-1.4898230132486123`, 
          0.11628965597416208`}, {-0.3006285402585913, 0.9797102702742704}}], 
         {RGBColor[0, 0, 1], 
          PointBox[{{1.4095389311788624`, 0.34202014332566877`}, {
           1.205462698509648, -0.5951133160077211}, {-0.8548319625635423, \
-0.8217223958869059}, {-1.4898230132486123`, 
           0.11628965597416208`}, {-0.3006285402585913, 
           0.9797102702742704}}], {}}}, 
        {GrayLevel[0], PointBox[{-1.118033988749895, 0}], 
         PointBox[{1.118033988749895, 0}]}, {}, {}, {}, {}, {}, {
         PointBox[{0.5590169943749475, 0.25}], InsetBox[
          StyleBox["\<\"m\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           
           FontColor->GrayLevel[
            0]], {0.5590169943749475, 0.25}, {-1.5, 1.5}]}, {
         {EdgeForm[{RGBColor[0, 0, 1], Dashing[{Small, Small}]}], FaceForm[{
          RGBColor[0, 0, 1], Opacity[0.1]}], 
          PolygonBox[{{
           1.4875819308170306`, -0.37931412988151303`}, \
{-0.20739590639950634`, -1.675839839177218}, {-1.4826597538521389`, 
           0.00652722477703338}, {-1.4572476791644018`, \
-0.38286131263404716`}, {1.1550127970524118`, 2.6945491955604215`}}]}, 
         {RGBColor[0, 0, 1], 
          Dashing[{Small, Small}], {
           LineBox[{{0.5590169943749475, 0.25}, {1.4095389311788624`, 
            0.34202014332566877`}}], 
           LineBox[{{0.5590169943749475, 0.25}, {
            1.205462698509648, -0.5951133160077211}}], 
           LineBox[{{0.5590169943749475, 
            0.25}, {-0.8548319625635423, -0.8217223958869059}}], 
           LineBox[{{0.5590169943749475, 0.25}, {-1.4898230132486123`, 
            0.11628965597416208`}}], 
           LineBox[{{0.5590169943749475, 0.25}, {-0.3006285402585913, 
            0.9797102702742704}}]}, {
           PointBox[{-0.10094172230932097`, 0.052612227728935326`}], InsetBox[
            
            StyleBox["\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(C\\), \
\\(*\\)], \\(0\\)]\\)\"\>",
             StripOnInput->False,
             
             FontSize->
              20], {-0.10094172230932097`, 0.052612227728935326`}, \
{0, 1.5}]}, {}, {PointBox[{0.29197269130979087`, 0.24103036943325284`}], 
           InsetBox[
            
            StyleBox["\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(C\\), \
\\(*\\)], \\(2\\)]\\)\"\>",
             StripOnInput->False,
             
             FontSize->
              20], {0.29197269130979087`, 0.24103036943325284`}, \
{0, 1.5}]}}}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
         {RGBColor[0, 0, 1], InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "1"],
            StripOnInput->False,
            FontSize->20], {1.497310003499884, 0.3899392299573858}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "2"],
            StripOnInput->False,
            FontSize->20], {1.272370156154431, -0.6694328431288725}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "3"],
            StripOnInput->False,
            
            FontSize->
             20], {-0.8967986758751685, -0.9124902039127681}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "4"],
            StripOnInput->False,
            
            FontSize->
             20], {-1.5883155717762671`, 0.1335875146473188}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "5"],
            StripOnInput->False,
            
            FontSize->
             20], {-0.3141414324201267, 1.0787930727448845`}, {0, 0}]}, {}, \
{}, {}, {}, {}, 
         {RGBColor[0, 0, 1], InsetBox[
           StyleBox[
            
            SubscriptBox["\<\"\\!\\(\\*SuperscriptBox[\\(Q\\), \
\\(*\\)]\\)\"\>", "1"],
            StripOnInput->False,
            FontSize->20,
            
            Background->GrayLevel[
             1]], {1.5703619479289894`, -0.43541643613485537`}, {0, 0}], 
          InsetBox[
           StyleBox[
            
            SubscriptBox["\<\"\\!\\(\\*SuperscriptBox[\\(Q\\), \
\\(*\\)]\\)\"\>", "2"],
            StripOnInput->False,
            FontSize->20,
            
            Background->GrayLevel[
             1]], {-0.24437175450188253`, -1.7687526297773823`}, {0, 0}], 
          InsetBox[
           StyleBox[
            
            SubscriptBox["\<\"\\!\\(\\*SuperscriptBox[\\(Q\\), \
\\(*\\)]\\)\"\>", "3"],
            StripOnInput->False,
            FontSize->20,
            
            Background->GrayLevel[
             1]], {-1.5819562042360724`, -0.005314014227015341}, {0, 0}], 
          InsetBox[
           StyleBox[
            
            SubscriptBox["\<\"\\!\\(\\*SuperscriptBox[\\(Q\\), \
\\(*\\)]\\)\"\>", "4"],
            StripOnInput->False,
            FontSize->20,
            
            Background->GrayLevel[
             1]], {-1.5526581684587746`, -0.4128085751568287}, {0, 0}], 
          InsetBox[
           StyleBox[
            
            SubscriptBox["\<\"\\!\\(\\*SuperscriptBox[\\(Q\\), \
\\(*\\)]\\)\"\>", "5"],
            StripOnInput->False,
            FontSize->20,
            
            Background->GrayLevel[
             1]], {1.1786995731533316`, 2.7917033855778617`}, {0, 0}]}, {}, \
{}}}},
      ImageSize->600,
      PlotLabel->None,
      PlotRange->All,
      PlotRangeClipping->True], 
     GraphicsBox[{{
        {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, 
        {GrayLevel[0.5], Thickness[Medium], Dashing[{Small, Small}], 
         LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}]}}, 
       {PointSize[Large], Thickness[Large], FaceForm[None], {InsetBox[
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(f\\), \\(1\\)]\\)\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           FontColor->GrayLevel[0]], {-1.118033988749895, 0}, {-1.5, 1.5}], 
         InsetBox[
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(f\\), \\(2\\)]\\)\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           
           FontColor->GrayLevel[
            0]], {1.118033988749895, 0}, {-1.5, 1.5}]}, {}, {}, {}, {}, {}, 
        {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
         PolygonBox[{{1.4095389311788624`, 0.34202014332566877`}, {
          1.205462698509648, -0.5951133160077211}, {-0.8548319625635423, \
-0.8217223958869059}, {-1.4898230132486123`, 
          0.11628965597416208`}, {-0.3006285402585913, 0.9797102702742704}}], 
         {RGBColor[0, 0, 1], 
          PointBox[{{1.4095389311788624`, 0.34202014332566877`}, {
           1.205462698509648, -0.5951133160077211}, {-0.8548319625635423, \
-0.8217223958869059}, {-1.4898230132486123`, 
           0.11628965597416208`}, {-0.3006285402585913, 
           0.9797102702742704}}], {}}}, 
        {GrayLevel[0], PointBox[{-1.118033988749895, 0}], 
         PointBox[{1.118033988749895, 0}]}, 
        {EdgeForm[{RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[Large]}], 
         PolygonBox[{{1.6853195127221312`, -0.1631138036837947}, {
          0.3400774054860213, -1.3741916024587366`}, {-1.5945004497395416`, \
-0.4797349002968969}, {-1.363645070314118, 0.8347362951908539}, {
          0.9670041164590919, 1.1525897505024048`}}], 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          PointBox[{{1.6853195127221312`, -0.1631138036837947}, {
           0.3400774054860213, -1.3741916024587366`}, {-1.5945004497395416`, \
-0.4797349002968969}, {-1.363645070314118, 0.8347362951908539}, {
           0.9670041164590919, 1.1525897505024048`}}], {}}}, {}, {}, {}, {}, {
         PointBox[{0.5590169943749475, 0.25}], InsetBox[
          StyleBox["\<\"m\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           
           FontColor->GrayLevel[
            0]], {0.5590169943749475, 0.25}, {-1.5, 1.5}]}, {}, {
         {EdgeForm[{RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          Dashing[{Small, Small}]}], FaceForm[{RGBColor[0, 1, 0], Opacity[
          0.1]}], PolygonBox[{{
           1.198660565233415, -1.4899278516410897`}, {-1.3694966806300037`, \
-1.143742530426354}, {-1.6835184534378491`, -0.21703426239872542`}, \
{-0.9969840795280336, 2.040348437593637}, {1.9971161306096712`, 
           0.6869602262986767}}]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          Dashing[{Small, Small}], {
           LineBox[{{0.5590169943749475, 0.25}, {
            1.6853195127221312`, -0.1631138036837947}}], 
           LineBox[{{0.5590169943749475, 0.25}, {
            0.3400774054860213, -1.3741916024587366`}}], 
           LineBox[{{0.5590169943749475, 
            0.25}, {-1.5945004497395416`, -0.4797349002968969}}], 
           LineBox[{{0.5590169943749475, 0.25}, {-1.363645070314118, 
            0.8347362951908539}}], 
           LineBox[{{0.5590169943749475, 0.25}, {0.9670041164590919, 
            1.1525897505024048`}}]}, {
           PointBox[{-0.17084450355056005`, -0.02467919611477103}], InsetBox[
            
            StyleBox["\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(C\\), \
\\(*\\)], \\(0\\)]\\)'\"\>",
             StripOnInput->False,
             
             FontSize->
              20], {-0.17084450355056005`, -0.02467919611477103}, {0, 1.5}]}, \
{}, {PointBox[{0.030138683823024804`, 0.10411743918711629`}], InsetBox[
            
            StyleBox["\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(C\\), \
\\(*\\)], \\(2\\)]\\)'\"\>",
             StripOnInput->False,
             
             FontSize->
              20], {0.030138683823024804`, 0.10411743918711629`}, \
{0, 1.5}]}}}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
         {RGBColor[0, 0, 1], InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "1"],
            StripOnInput->False,
            FontSize->20], {1.497310003499884, 0.3899392299573858}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "2"],
            StripOnInput->False,
            FontSize->20], {1.272370156154431, -0.6694328431288725}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "3"],
            StripOnInput->False,
            
            FontSize->
             20], {-0.8967986758751685, -0.9124902039127681}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "4"],
            StripOnInput->False,
            
            FontSize->
             20], {-1.5883155717762671`, 0.1335875146473188}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "5"],
            StripOnInput->False,
            
            FontSize->
             20], {-0.3141414324201267, 1.0787930727448845`}, {0, 0}]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], InsetBox[
           StyleBox[
            SubscriptBox["\<\"P'\"\>", "1"],
            StripOnInput->False,
            
            FontSize->
             20], {1.7852827964459788`, -0.16582339906789959`}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P'\"\>", "2"],
            StripOnInput->False,
            
            FontSize->
             20], {0.4062937505305231, -1.4491275460969366`}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P'\"\>", "3"],
            StripOnInput->False,
            FontSize->20], {-1.694147324214965, -0.4881313523618601}, {0, 0}],
           InsetBox[
           StyleBox[
            SubscriptBox["\<\"P'\"\>", "4"],
            StripOnInput->False,
            
            FontSize->
             20], {-1.4622071648581136`, 0.8516334404852657}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P'\"\>", "5"],
            StripOnInput->False,
            
            FontSize->
             20], {1.0618588174384092`, 1.1842533842503546`}, {0, 0}]}, {}, \
{}, {}, {}, {}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], InsetBox[
           StyleBox[
            
            SubscriptBox["\<\"\\!\\(\\*SuperscriptBox[\\(Q\\), \\(*\\)]\\)'\"\
\>", "1"],
            StripOnInput->False,
            FontSize->20,
            
            Background->GrayLevel[
             1]], {1.2331654290951004`, -1.583786332184334}, {0, 0}], InsetBox[
           StyleBox[
            
            SubscriptBox["\<\"\\!\\(\\*SuperscriptBox[\\(Q\\), \\(*\\)]\\)'\"\
\>", "2"],
            StripOnInput->False,
            FontSize->20,
            
            Background->GrayLevel[
             1]], {-1.4505461058019185`, -1.2023171894462936`}, {0, 0}], 
          InsetBox[
           StyleBox[
            
            SubscriptBox["\<\"\\!\\(\\*SuperscriptBox[\\(Q\\), \\(*\\)]\\)'\"\
\>", "3"],
            StripOnInput->False,
            FontSize->20,
            
            Background->GrayLevel[
             1]], {-1.7814178952653612`, -0.2374229673566574}, {0, 0}], 
          InsetBox[
           StyleBox[
            
            SubscriptBox["\<\"\\!\\(\\*SuperscriptBox[\\(Q\\), \\(*\\)]\\)'\"\
\>", "4"],
            StripOnInput->False,
            FontSize->20,
            
            Background->GrayLevel[
             1]], {-1.0625821760510812`, 2.1158261808862986`}, {0, 0}], 
          InsetBox[
           StyleBox[
            
            SubscriptBox["\<\"\\!\\(\\*SuperscriptBox[\\(Q\\), \\(*\\)]\\)'\"\
\>", "5"],
            StripOnInput->False,
            FontSize->20,
            
            Background->GrayLevel[
             1]], {2.092796891221586, 0.716032413157002}, {0, 0}]}, {}}}},
      ImageSize->600,
      PlotLabel->None,
      PlotRange->All,
      PlotRangeClipping->True]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7966369471212215`*^9, {3.796637310941816*^9, 3.796637315465721*^9}, 
   3.796637538003574*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"export3", "[", 
  RowBox[{
  "\"\<pics_antipedals_labeled\>\"", ",", "plotInvariantsAntipedalsLabeled"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.796630032865043*^9, 3.7966300459601593`*^9}, {
  3.796637069488591*^9, 3.796637084027419*^9}}],

Cell["\<\
*** Centroid stationarity [need to study locus circularity]:\[LineSeparator]\
\[LineSeparator]1- even N: c0 = O if m = O
2- all N: c0\[CloseCurlyQuote] = O if m = O
3- all N: c0\[CloseCurlyQuote] stationary for any m
3- even N: c2\[CloseCurlyQuote] stationary for any m
\[LineSeparator]**** Distance Invariances:

1- N=0 (mod 4): \[Product]mi if m = 0,f1,f2
2- N=2 (mod 4): \[Product]mi if m = f1,f2

3- all N: \[Sum](mi\[CloseCurlyQuote])^2 for any m
4- N even: \[Product]mi\[CloseCurlyQuote]=1.0 for m=f1,f2
5- additionally N=2 (mod 4): \[Product]mi\[CloseCurlyQuote] for m=0\
\[LineSeparator]\[LineSeparator]***Area Invariances:

6- odd N: Am.A if m = O
7- N=0 (mod 4): Am.A for any m
8- N=2 (mod 4): Am/A for any m

9- odd N: Am\[CloseCurlyQuote]A\[CloseCurlyQuote] if m = O
10- N=0 (mod 4): Am\[CloseCurlyQuote]/A\[CloseCurlyQuote] for any m. note: w/ \
N=4, Am\[CloseCurlyQuote]/A\[CloseCurlyQuote]=2 for any a/b and m
11- N=2 (mod4): Am\[CloseCurlyQuote].A\[CloseCurlyQuote] for any m
\
\>", "Subsubsection",
 CellChangeTimes->CompressedData["
1:eJwlzk0ow3EAxvH1l5dlzWVsY60m85ZFG5GXJCnCvExIu3hZnFDMgWhpbrJl
B0oimV3mspeQIm9raTQsi2aa1DRiCq2Y/J+fw9Pn+HxFPUOtKorBYAjpwY7m
bXVy3UuVckExBbdL2FpoaR8kesRKHXwY0euh0DC/CHn5OcvwVXxrhGxdgGg7
2jVDqeCY6C6mLDD89PZvkLUF5RIZ0WZM2oOaQssxbMjcc8LIyZobZqREvTBh
x/EIL8eTnyF1EXohP4lZ76T3tOYD3ujtEehQ7BPb7G5GCu30rCkeyqo72LBl
JpsPqStPLuxzzUhg6ga/HJoa1ZWQc9dVC42W3lZoLYrthBMx9QaYd1bggg/n
TiLFss5xadP6ozo4LGnywNHZX+JASB6AXl93EIY41WE4xtUSr/2qT6j54XxB
0QHzGwo2pVFo869TPNpSyRITxt2nLlXQmuXpxPVJ1wr0lR2uwj/E0Nr0
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stability Tests", "Section",
 CellChangeTimes->{{3.7965690402662344`*^9, 3.79656904698553*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"getInnerPedals", "[", 
       RowBox[{"1.5", ",", "4", ",", "tDeg"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"getInnerPedals", "[", 
       RowBox[{"1.5", ",", "4", ",", "tDeg"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"tDeg", ",", "0", ",", "360"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Green"}], "}"}]}], ",", 
   RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7961103471304893`*^9, 3.7961103827806883`*^9}, {
  3.796110419070243*^9, 3.796110488214301*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], FaceForm[Opacity[
    0.3]], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], FaceForm[Opacity[
    0.3]], LineBox[CompressedData["
1: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
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-1.147001895328337, 
   1.1470014184696484`}, {-1.1014574913728759`, 1.101160460983869}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7961103891167607`*^9, 3.7961104895450573`*^9}, 
   3.79611557801293*^9, 3.7961274212244687`*^9, 3.796222059950632*^9, 
   3.79630146209011*^9, 3.7963163774215283`*^9, 3.796420412052105*^9, 
   3.7964221120982304`*^9, 3.7964224652172036`*^9, {3.796568933758382*^9, 
   3.7965689483693056`*^9}, 3.796568984643133*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getMidExcSumSqr"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getMidExcSumSqr", "[", 
    RowBox[{
    "a_", ",", "n_", ",", "tDeg_", ",", "midParamX_", ",", "midParamY_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "poly", ",", "polyInner", ",", "causticAB", ",", "exc", ",", "fs1", ",",
        "fs2", ",", "mid", ",", "pedalsMid", ",", "pedalsExcMid", ",", 
       "pedalsExcMidSumSqr", ",", "midX", ",", "midY"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"poly", ",", "polyInner", ",", "causticAB"}], "}"}], "=", 
       RowBox[{"getPolyCausticInner", "[", 
        RowBox[{"a", ",", "n", ",", "tDeg"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"this", " ", "is", " ", "causing", " ", "bad", " ", "solve"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"exc", "=", 
       RowBox[{"getExcentralPolygon", "[", 
        RowBox[{"a", ",", "poly"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fs1", ",", "fs2"}], "}"}], "=", 
       RowBox[{"getFoci", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"midX", "=", 
       RowBox[{
        RowBox[{"fs2", "[", 
         RowBox[{"[", "1", "]"}], "]"}], " ", "midParamX"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"midY", "=", "midParamY"}], ";", "\[IndentingNewLine]", 
      RowBox[{"mid", "=", 
       RowBox[{"{", 
        RowBox[{"midX", ",", "midY"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pedalsMid", "=", 
       RowBox[{"getPedals", "[", 
        RowBox[{"mid", ",", "poly"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pedalsExcMid", "=", 
       RowBox[{"getPedals", "[", 
        RowBox[{"mid", ",", "exc"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pedalsExcMidSumSqr", "=", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"magn2", "[", 
           RowBox[{"mid", "-", "#"}], "]"}], "&"}], "/@", "pedalsExcMid"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "pedalsExcMidSumSqr"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7961357883143106`*^9, 3.7961359403183346`*^9}, {
  3.7961365366715546`*^9, 3.7961366213189564`*^9}, {3.7961366519918222`*^9, 
  3.7961366777586694`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getMidExcSumSqr", "[", 
  RowBox[{"1.5", ",", "5", ",", "10.", ",", ".5", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.796135924498763*^9, 3.7961359343493233`*^9}, {
  3.7961366090117435`*^9, 3.796136609340581*^9}}],

Cell[BoxData["8.722649436084918`"], "Output",
 CellChangeTimes->{{3.7961359347549744`*^9, 3.7961359414126873`*^9}, {
   3.796136610051053*^9, 3.796136622398735*^9}, 3.7961366788201876`*^9, 
   3.7962220600671864`*^9, 3.796301462171891*^9, 3.7963163775272074`*^9, 
   3.796420412136879*^9, 3.796422112184002*^9, 3.7964224653259125`*^9, {
   3.7965689338189363`*^9, 3.7965689486583743`*^9}, 3.7965689847013083`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getStats", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"getMidExcSumSqr", "[", 
     RowBox[{"1.5", ",", "5", ",", "tDeg", ",", ".5", ",", "0"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"tDeg", ",", "0", ",", "360"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.796136686527502*^9, 3.7961367201164107`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "8.72264943608485`", ",", "5.681195383322301`*^-14", ",", 
   "6.5131534001810096`*^-15", ",", "8.722649436084865`", ",", 
   "8.722649436084923`", ",", "8.722649436084911`", ",", "361"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.796136724780311*^9, 3.7962220645054245`*^9, 
  3.796301466215082*^9, 3.7963163823204956`*^9, 3.7964204162259474`*^9, 
  3.796422116241155*^9, 3.7964224694548745`*^9, 3.796568949634694*^9, 
  3.7965689892008495`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getStats", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"getMidExcSumSqr", "[", 
     RowBox[{"1.5", ",", "5", ",", "tDeg", ",", "1", ",", "1"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"tDeg", ",", "0", ",", "360"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.796136734538639*^9, 3.7961367618986*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "13.573743458641532`", ",", "3.767931131759965`*^-14", ",", 
   "2.7758968211242895`*^-15", ",", "13.573743458641413`", ",", 
   "13.573743458641559`", ",", "13.57374345864152`", ",", "361"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7961367402687664`*^9, 3.796136766682335*^9}, 
   3.7962220688978*^9, 3.796301470366982*^9, 3.7963163872430944`*^9, 
   3.7964204202960663`*^9, 3.7964221203761015`*^9, 3.7964224737174788`*^9, 
   3.7965689503437223`*^9, 3.79656899366228*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "=", "1.5"}], ",", "pl"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pl", "=", 
     RowBox[{"\"\<a/b=\>\"", "<>", 
      RowBox[{"nfn", "[", 
       RowBox[{"a", ",", "2"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"getMidExcSumSqr", "[", 
       RowBox[{"a", ",", "5", ",", "20.", ",", "m", ",", "0"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", "Medium"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "16"}], "}"}]}], "]"}], "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{
          "\"\<t\>\"", ",", 
           "\"\<\[Sum](\!\(\*SubscriptBox[\(m\), \
\(i\)]\)\!\(\*SuperscriptBox[\()\), \(2\)]\)\>\""}], "}"}]}], ")"}]}], ",", 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{"pl", ",", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "16"}], "}"}]}], "]"}]}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.796135945771761*^9, 3.7961361172783623`*^9}, {
  3.7961362385421963`*^9, 3.796136243236972*^9}, {3.796136295413*^9, 
  3.7961363190722446`*^9}, {3.79630148697165*^9, 3.7963014872907724`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwt2Hk0lc8fB3DKUippsZXc5173opQWS4hm6CpakewhlZ0kSxQJWQqpJPsS
yk7WrGML6SqStSxRsnWvLd8s6Ted8/vrOa/znDnzPHOe5/N5z5AtrulcXcPG
xraVnY3t31UaCEz8/ctCRSGJYlHjNKhrKxG0uMRC9WUHbcp+0KDnUwXxuV8s
lGO3sNj3nQabJo0sRidZSNRU8I/oMA2aRyX2MbpZyNSrNDizjwYfzUi+i85j
IZM0p8oP72hwPuVItowZC+nFNgbq5NJg+bpLjlbVTEQnsZcoutDgndauydpL
P5GC+23JU0tUOJ4mLHhYZAo9/2BX5xBKhXsGNdZv7p9AIQqfhswkqDB1W8p8
r+84uj/y2/9HlRisN24JRWAM2QffmrQwF4MiiSJE1NdRVC9dfegqmxg8dczY
oyP4O7qyhmP/k5cUSFq29Nmt+Q2V9LS/CDekwH258T7OP4fRwknNo6o8FDjk
kizdlf4VSf5ZMN77hgxt4h6lxNkOITEDDrpwABkaeBuKZVMGEC9RsWvgOBlK
Tu421k34jMTZHUZr+MjQ7qzWveGRHhS3vfmc/WcCGt04pyIv34VM8w2cXbMJ
+ASNaaGSDjRyapzH4x4BwZoePWn2dhTJY5vnZE7AUQnTMb7/2lB3s3jjtBkB
w85885ibakOzx/h2X8ceiJqOe93ThnKdbDqcTQnovX/9iFp+GzqeKlvuYULA
ShOla/pmbWj+hnTbUwMCujgqbma/9QFpFeft4tYmoG1PnVPaHAMtorGj79UI
6NBxqb6sn4EaYwVOGWA7vWcTeN/EQNnDRfnDqgR0bzhasRDLQOiVWtBvSED/
/HJODToDrb2QYi0JCJgQVBAzEfEOceffZEYdIWCHwvOG/fIt6E/pDd4qWQJ2
yagK0okW1LSQq6GD3Sc9ZGPA04Iykoy+/JAh4BBVdPPdgbeoRG4t33ZsJl+M
4ceAt+jnleh0p4MEXDf+iOnS3Yx6unsTlKQJqBx9V6j8ZhOK2pyVuEWSgGeM
Hj6TvdyEHtwqbSiUIKDpzniBvDNNaIW2BPSw78S/3p5KaUIm8hTFOHEC1iWz
+MIYjYhH/Y/cXhoBT2ReXG9BNKJ9OwYNTSgE1KlQXFrf3IB8UrRP/hEh4OXb
Jzz8CxrQqUGafCa2i8qF36txDeip4YGb+thPkdPC3PUGlLp+bLVgJwF76l/O
9u9sQAX6wwKOOwh4kcE/+epaPXqcteb6vCABrftnPhsK1iGLQ7OtqtsIWHjt
C+fxtXWIstygv7qVgKvsTfsPsWoRT1Hi3grsCPE4P56mWqS3YF8qh11z7bhU
hVst6qi01JbeQkChNbGeIl01yF67O3LfZgKGnwk6VL0boe3R2VZXNhBQ3Pli
QCQ7QmOWXjp7sCsjD/U59lajb1S9oGkeAo4NfrlLCq5G+tdJnV7Y0Plgu89Y
FaKe3jIXu56A05F91469rETG653hKDcBzw3tzWmmliPV5xLkQg4Cnr4iYQ4W
y9DaHTf1vLFPjpG3lbSWIdGk5RFNbPq0gEeKWxm62B3LPbyWgAps7Oreza/R
mll4XQCbQnR+kbEvRUPdu94/ZCcgKfXDw0xYinbLJQaYY4tItqiR+UsRI+n8
s4PYggdQOm91CRJOuVD7iY2AG2GGy/jmEtRzvvowCfuXmdfGxMIi1P+ObhL8
hwRnR9wRf1AR8tbO6JDDnrZydg4xKUJtczeWh1dIcOKaVY8HZxEKDDtiArAH
7min6uoXoqMiERZsyyTYnEhT5ll+hXqjbH1TfpOgPIrtnvDPRUUCObyO8yS4
YyPHeIJMLmoX8EqWxf5jYL+kM5yDpAq3vl+eI8GGWeVdFSAHRdWEzT/APi8+
YPFgKQudlW5xK5wlQadQginllIHghbNapBkS1O0L+jsomoEOCd+8w5omwcMS
M3wRrenokoeVRg32ak2tzMqedOTB++zlZeyQeQsPxvcXKPCBYuwrFglmGKdx
OBinIvH2B/q2THw/fZMAmScVMQ02i9GxnX65SnS+TkFztw2CRLEVHh4/qSKQ
goqjjxCdP0mwse7Hw03tyUhEXP2eJnbmZq3k2jvJqPXhL1FJ7FCT1wWu0smo
6qmdDje27kJQZ/+DJKTvlh7QNIXHn9eVNwlNQFb3r1LPYYf+pBo2TMQjzi61
kEPYuoG/bu3ViEdDVd9DBbBHyiNrV9bEobMWt02HJkmQjdJ7Ov5mNOJZnZK9
hd1UkXGNsysKPZb6z/YydtgFz8cOMlHI4Fej0mlskeCdPSrMSBR/sfQlCVtx
+uLlgcsRiPPu55LWCRK0L08dd294giqruIQrsBP8J69toT1BFnkrvBnYa4U9
btNHH6E7rzRKArDlR9CageOP0HxtgpUbtnUOV7D7y3BkFIiyLbGj/SSlLrSH
odkDl2Y1sFcFSw4HPQ5FEvzDs0rYFtnH6BXnQ5Bm7r7Afdh7O00vkruCkflf
qt127Ec2Uza6z4KQTmlb+TrshT8eboEGgUiWeiLhzzgJ1og/ffizzx81iUQQ
49i0CkocEeeH3NNt0SD2/XP56ecv+iKh8Q2zXdisEZXiANG76MWA++v32C+n
I/1uoDtIIjh3axO2k3BBXK+qF3o6lsdWg62k1loMGjzR/Mot3zJsDrux92nH
byK1xq1Rhdjvn6wd2/DWFfnQXVRzsaMqRdmdT91Aue5J3hnYFt8Vd/S0OqEW
s2fn0rD1RTItbyfZo+4Vg6Jk7AmHoSiNNCvUcfZ7dgK2NxJ4tz3TAlVdUFaM
w6ZQYpZqLxqj6C2mhjHYmm+4zIystNFV35Obov+9f3Lrpnf1KoiUzn4hClsj
5W/NCykqaPb1O/DP/s8tf7z+TwNYbG1L/Oeducc30531wKTej+f/xntyOnRe
kDUHV7TeKsZijxbKpwTvvwoYq65X4rHPW7Bdr9pjC8QsflKS/s3H13J0hnYN
2Hrud03BjhzUDHjM5wyen1A2fonNKJF22BvmAprfbuvMwl4Ttk23cYM7GGAr
Gc7HVrj6W8k82AN8m6L4l2BfU+4nL3HdBn2hRmWV2C+21a2L8PcG1SMmvvXY
jq4d/wnc9QGPmbsHW7BTT78eyF/1BRvEqLqfscHrPR+9VPxB7mlt+2/YfWLx
b07evgdUpTSFmNh8y3ezvy0GAnnuaKm1+PvJspxPfKUQDCI5Zh7zYh//aPnE
2/0+GC/ZFrYD2yvjlKfQrxBgoFQGZLGF+KsdvsuEgZsblBdUsYt8DlwqcH4I
gh8FQy3sX1k8VPHf4cC10j/cEVvKj8VT4/oEhIQu7yrANjmybV0OJQJ8Weng
bsQOmZPnjPkQAQxV4hL7sJmXvf/e2B0Jvh1c6eHE/2MBfdO8RH8U2Du+6HwF
e2TlwMz2+9Fg7qsWwwt7e7Euk/1wDJjIetbxDNuVFjf2OTwWXCmcn2zFVuCS
6n9ITwAh4VPH1HC9sKk+23d7JgG0bK3beAk7xs252yYhEShZBvr5YHvPfRkj
304CqT5fPWuxBy9TR5Y7k0G2X0f4KVyvntMLu/OCU0FYXa6hD65/5YS6nvhQ
KkD6d9kzsTtWuj7FyacB0epj+p+wOYqX2oNH0oD16rONUri+XqWpMS6rvAQH
z3gnDGFLcrXXCM5kgKdiamb2uH7DYQsQdiITFL/bMpqEbVg9X8WRkAk41Nt3
dGHfdxOqmDmZBfZnkcLUcP2fGjUrfpeaDcrVl2LFcH/Ia2Jm3DHIA4mFL3S5
fuF+ZLrJa39GHuAYaLupis27IKU1uJgHHM+6yHphyz+WvZV4Jh8YsUs4L2BH
1Fwn/2XmA++8I9zTCySovWvKofpgAVi3jxL1F/evMetb+gJGBaCrdEiGvkiC
PkU8qo6+BSA7SMgqGDv/1O7toh0FwH5l7gn/Ep7P07Lcy6UQqOw14pbD/bCl
a4hLpbQIUHJGdMNxP7WgOE1HDBYBkyh56wHsRYe/vVPcxSDh7Zpt+1bx+nCK
5sQZFAPZVa79DOxAGePzK4vFoE/frGYd7tf08M7ECuVS8DvaVd0E9/cqzRYF
pboyUG4usksZ5wemnGz93M8y8MYiuMAJW5SScCZHuByo6f5MSsP2XrpuQVwv
BwGcMUF8nDi/ZAmHcBEV4FxygN8EdsNGm8GPXpXgY1W2RB7OLy0fuAPsFBF4
cX/v7ls4Dy1VXOejXUUg09O9vxx7T/rnmIFwBESMyiaWsB/45OVpjyGg9YPM
d3sjAV9EZU3FnqoB/ykFBPhuwnlO87yA71INUGiKJSfh/DWZ+dzmrEEd8L+x
xCe6nYALfdZr3jjUgcautHtW2Gwb9sce8asDAzJ8Wq+wBewqGJK5dSDkM3lU
nZ+AalKf9q/lqAffhhQEbwgQMCqLc6E0rx6E1MuF9gvh9cq29iVzvwEFY7bN
s7sIGJ8jHTtf3AR0C+puie4moONGoeDFt03gqQZ52Q37qB27+2p/E6gMFXrz
AXtA8pPOOq5mgKjtCr57CEikevCI6DWDx/dsEyekCJga0+BxbKEZuG49avMW
5+3sQCODx/ItQNzQmlWN83vlpQD+A6UMIBvz9k0w3h/08vV3fGcwgAD16PIf
7AUk8zh2mAGUhR2CnPF+4oDoV15u3lagpb6UYXKMgCl9R9YNXGkF0ant6+XU
CXj//MzSg63vQfEdF+UFDQIaqJsM/XD4AHjT7zuUaxHQc3t057mt7UCj9veq
5iUCMto+0T/GdIBtJ/NPDvkR8Pq7w+IPBbrAQafvN+wy8fN/oPNbNvcAKxX7
TU69BAzJLk3nPv0ZMJ2/OknzkCH7k0+a9ZwDoLhr7pUenQwFM7KaUjWGgNdl
JXrKHTLseukjxhn0FfhaPS13qSZD46w9Ac7Dw6CbRRvt5KZA5VjuI29o30Cs
oHKrijYFjjwsW6D6fwcuK+I/xV9QYJHYnUnyl1HwWVrm4Mwq3k+muB/i2DUG
3P31yuL1xOBHSXWfuZvjgGOT9OR/5WKQFKNONFdNAJpMgU7iLiqMzDRcVFyZ
BJGxvrV/fKmwA6n1vr7wE5h/XemXXqBCu1rTDbuimGBeWMs63JIGLRJ7Iyvj
mYBuPzwdbk2DRl66FJMUJuCiJ3U/sqVBDcWTirG5TDDol4AiHGmQ+krOSvgN
E3yjpy0muNHgl6SN9fyzTKDC+Mz/JoAGT/uUe/KeZgFieoqp/5IGj5nKceVq
s0DKNEv5SgYNKinnPzqjzwLRbqLjTlk0KPk7LT3EggV6t64aP8ijQQ6nR108
HiyQE9KU1VBKg1Vm1oe4X7BA8j2/OY1mGixSGal6kcUCR/uPUo1baDB7p6nm
8VcscKacVujAoMGY7vPm9ypZoJbDbfJJGw26nQNhaztYYKWPaPzWQ4MO+8qF
U3pYQNJUYWyxjwavbJBLUxtggTrLW9ab+2lQp2lP5d1xFtBe5+935CsNaqal
nSCzWEA1WVNUZ4QGoR/RUTPPAqlISdDmOw0evhRrar7EAh6X9R19ftDg/89D
QPX/z0P+B/FCPRA=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 7.9},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox[
      "\"\[Sum](\\!\\(\\*SubscriptBox[\\(m\\), \
\\(i\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(2\\)]\\)\"", {
        GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], None}, {
     FormBox[
      StyleBox["\"t\"", {
        GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], None}},
  FrameStyle->Medium,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    StyleBox["\"a/b=1.50\"", {
      GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm],
  PlotRange->{{-1, 1}, {7.978119619395052, 10.956238854624072`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.796136079849514*^9, 3.7961361210618954`*^9}, 
   3.796136246926032*^9, {3.796136303212999*^9, 3.796136322809884*^9}, 
   3.796222068988296*^9, {3.7963014704278574`*^9, 3.7963014906747856`*^9}, 
   3.7963163909694176`*^9, 3.796420423432681*^9, 3.796422123525695*^9, 
   3.7964224772310877`*^9, 3.7965689511796045`*^9, 3.7965689971248803`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p", ",", "pi", ",", "cAB", ",", "area", ",", "areaCtr"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", "pi", ",", "cAB"}], "}"}], "=", 
     RowBox[{"getPolyCausticInner", "[", 
      RowBox[{"1.5", ",", "5", ",", "50."}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"area", "=", 
     RowBox[{"signedArea", "@", "p"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"areaCtr", "=", 
     RowBox[{"polyAreaCentroidLow", "[", 
      RowBox[{"p", ",", "area"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"area", ",", 
      RowBox[{"Area", "[", 
       RowBox[{"Polygon", "@", "p"}], "]"}], ",", "areaCtr", ",", 
      RowBox[{"RegionCentroid", "[", 
       RowBox[{"Polygon", "@", "p"}], "]"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.796421817047735*^9, 3.79642192310246*^9}, {
  3.7964221429447937`*^9, 3.7964221666015215`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "3.491241636309892`"}], ",", "3.4912416363098906`", ",", 
   RowBox[{"{", 
    RowBox[{"0.005156412205910068`", ",", 
     RowBox[{"-", "0.009128556832889828`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.005156412205910065`", ",", 
     RowBox[{"-", "0.009128556832889798`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7964218389108286`*^9, 3.796421880222681*^9}, 
   3.7964219239681177`*^9, {3.7964221235965185`*^9, 3.796422168173319*^9}, 
   3.796422477307881*^9, 3.79656895152277*^9, 3.7965689973449526`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["[new] Study Pedal Polygon Centroid Loci", "Section",
 CellChangeTimes->{{3.7962932258702793`*^9, 3.796293244570485*^9}, {
  3.7964203820223937`*^9, 3.7964203828442183`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getPedalCentroids"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPedalCentroids", "[", 
    RowBox[{
     RowBox[{"a_", "?", "NumberQ"}], ",", 
     RowBox[{"n_", "?", "NumberQ"}], ",", 
     RowBox[{"tDeg_", "?", "NumberQ"}], ",", 
     RowBox[{"midX_", "?", "NumberQ"}], ",", 
     RowBox[{"midY_", "?", "NumberQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "poly", ",", "inner", ",", "outer", ",", "causticAB", ",", "mid", ",", 
       "\[IndentingNewLine]", "pedalsOrbit", ",", "pedalsOuter", ",", 
       "pedalsInner", ",", "midOrbit", ",", "midOuter", ",", "midInner", ",", 
       "fs1", ",", "fs2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"poly", ",", "inner", ",", "causticAB"}], "}"}], "=", 
       RowBox[{"getPolyCausticInner", "[", 
        RowBox[{"a", ",", "n", ",", "tDeg"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"outer", "=", 
       RowBox[{"getExcentralPolygon", "[", 
        RowBox[{"a", ",", "poly"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fs1", ",", "fs2"}], "}"}], "=", 
       RowBox[{"getFoci", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mid", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"fs2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "midX"}], ",", "midY"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pedalsOrbit", "=", 
       RowBox[{"getPedals", "[", 
        RowBox[{"mid", ",", "poly"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pedalsOuter", "=", 
       RowBox[{"getPedals", "[", 
        RowBox[{"mid", ",", "outer"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pedalsInner", "=", 
       RowBox[{"getPedals", "[", 
        RowBox[{"mid", ",", "inner"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "centroids", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"midOrbit", "=", 
       RowBox[{"polyAvgVtx", "[", "pedalsOrbit", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"midOuter", "=", 
       RowBox[{"polyAvgVtx", "[", "pedalsOuter", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"midInner", "=", 
       RowBox[{"polyAvgVtx", "[", "pedalsInner", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"midOrbit", ",", "midOuter", ",", "midInner"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.796290383569707*^9, 3.796290699213111*^9}, {
  3.796290740517918*^9, 3.7962907670480747`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "showPedalCentroids"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "showPedalCentroids"}], "=", 
   RowBox[{"{", 
    RowBox[{"drCircles", "\[Rule]", "True"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"showPedalCentroids", "[", 
    RowBox[{"a_", ",", "n_", ",", "midX_", ",", "midY_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "pts", ",", "pl", ",", "ell", ",", "cAB", ",", "ellCaustic", ",", "lp", 
       ",", "fs1", ",", "fs2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ell", "=", 
       RowBox[{"plotEll", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cAB", "=", 
       RowBox[{
        RowBox[{"getPolyCausticInner", "[", 
         RowBox[{"a", ",", "n", ",", "10."}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ellCaustic", "=", 
       RowBox[{"plotEllb", "[", 
        RowBox[{
         RowBox[{"Sequence", "@@", "cAB"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Brown"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fs1", ",", "fs2"}], "}"}], "=", 
       RowBox[{"getFoci", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pts", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Chop", "@", 
          RowBox[{"getPedalCentroids", "[", 
           RowBox[{
           "a", ",", "n", ",", " ", "tDeg", ",", "midX", ",", "midY"}], 
           "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"tDeg", ",", " ", "0", ",", " ", "360"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"pl", "=", 
       RowBox[{"\"\<a/b=\>\"", "<>", 
        RowBox[{"nfn", "[", 
         RowBox[{"a", ",", "2"}], "]"}], "<>", "\"\<, N=\>\"", "<>", 
        RowBox[{"ToString", "@", "n"}], "<>", "\"\<, mid=(\>\"", "<>", 
        RowBox[{"nfn", "[", 
         RowBox[{"midX", ",", "1"}], "]"}], "<>", "\"\<,\>\"", "<>", 
        RowBox[{"nfn", "[", 
         RowBox[{"midY", ",", "1"}], "]"}], "<>", "\"\<)\>\""}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lp", "=", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Transpose", "@", "pts"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", " ", 
            RowBox[{"Darker", "@", "Green"}], ",", "Red"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{"pl", ",", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "16"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", 
            RowBox[{"PointSize", "@", "Medium"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Black", ",", 
              RowBox[{"Point", "@", 
               RowBox[{"{", 
                RowBox[{"fs1", ",", "fs2"}], "}"}]}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#2", ",", "Dashed", ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"OptionValue", "@", "drCircles"}], ",", 
                   RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"#1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ",", 
                   RowBox[{"{", "}"}]}], "]"}], ",", 
                 RowBox[{"Point", "@", "#1"}]}], "}"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"pts", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                  RowBox[{"pts", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                  RowBox[{"pts", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"Blue", ",", 
                  RowBox[{"Darker", "@", "Green"}], ",", 
                  RowBox[{"Darker", "@", "Red"}]}], "}"}]}], "}"}]}], "]"}]}],
            "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"SwatchLegend", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "\"\<orbit\>\"", ",", "\"\<outer\>\"", ",", "\"\<inner\>\""}], 
               "}"}], ",", 
              RowBox[{"LegendLabel", "\[Rule]", "\"\<mid pedals to:\>\""}]}], 
             "]"}], ",", "Bottom"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"lp", ",", "ell", ",", "ellCaustic"}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "a"}], ",", "a"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}], 
          ",", "lp"}], "}"}], "}"}], "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQfUCUv+OmxxvHvbLanSDax+rCRBC9jOH7VBD9SOjw
bBBd77n2KIjuaDM4BaL3/T72CURzJNX9AdFJkbmct4B03vHFvCB6/UJLfhAt
mvpGFETb/IyXBtFpO5sUQfSS33PA9LGI/Rogui7gtjaInuX+2xBEJ/HNMgLR
ey8HBoDoN9u1k0C0VVJ6Goh2uryqFkSfEe5tBNECj5dMAdGRPw/OBNE6Aqrz
QHT+o7hFILqiiXs1iL5x4uk6EC2xbOc2EH2FYeYREP1tydmjIPqWet07EM2g
tec/2B6hGSy3gXTN2zlgWuGSEQ+IfhGyWBBEAwBPvK0b
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showPedalCentroids", "[", 
  RowBox[{"1.5", ",", "5", ",", "0", ",", "0", ",", 
   RowBox[{"drCircles", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7962923711205053`*^9, 3.7962923782519894`*^9}, {
  3.7962936773195343`*^9, 3.7962936922562284`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.008333333333333333], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1:eJxd2Ht0U3W2B/DDM7xSK4NwzchQFAgWi1waBTvQnasy5ZVKS5EaZoaWRw+v
CtIgnfIwUNoi2lLo+7RxFYoTX0EewXILzM7SK2XAQwUqYgawwkgcoFDGDkJh
cML+HmbWuvzDyspKevL7/fZ3f3578JylyfM7K4qysJOi3P+/dfrA9KLTHlaM
f9aH85MueTxsW7ttcVPXTM55gjPa2mtYf3j/UOXYas5JurHso/PV7I+eklMz
LY/NLTnDuqRp3F6U6swJvcWmgvH1O96oZMuQQ1cW9tjCzYedXc5OKOfQsb9E
ng6WsH1Gc2LqwRL2/imQdD6tnL17HvVcby3m2tFrR1zaUsnq0MCg/V+8xWN+
Hn/gpwyN3Qkd81vn5nHt4jr162A16/OGP3NkxRpOm9xpfe/LNazkLDHt+2gp
Rw09turMVg+rh31PL2ixc45/xsejvwq/3qovXBipkm9wP5N3j4f1E46Mc6Fs
2vFlXudxIz3s/t8n0uuvrKddf3jFP3VqDTv+mBybN+BN+rL18KzZfatZSfeN
ee37Iho479ORt/OrWD0zsvjC41tJdw5oWra7gq3R9S9sKislf3P5oUBVGdv3
bbQM+bycHHtj2pwTS1if9tjCRF8lZXZbvube58WsLW1PPDZZI2eEJS5qzNus
L1D+tqK6mmx/3/7I1bp8Lhy2a2/sOzXk6zs99fpFN2vvFly7kOwhf8Wq/Rsi
X2dr8beHf9PgIffOk8tfyZvH5tK+P9/4ykO23F5D1WFjyT1mkH/Uex7SYsbd
/ePzi0g/9XDTjVgPWb6/2OP42myyX1mk7VpdQyU7Gn99IbCOtIyu3/4+v5rM
tUmBgz0LqN378pmXZmik9vwk9c8PvU3+XufHD7lWSSWVz71kml9MlnW9N9fP
qKA19pTKOZVbKdj2WSBiSxkNOZD/5PvvlJLlpW6zJ75bQjOnbD8yaEU5OTcf
jS6q2EK2L27erni0kmwp49XIYBGlpc/asXBTFYUm7Ty6fcYmaltz5dbiwxq5
37t9O/hhHgVynzzZ+kU1acO3ed2X3BQ40FTv89SQrXXn7kd/lU3RtuU7T4z1
kN7w+7QVDUuo4OSk9vPvhF9PbN6cvDSZCroMa9z9Zfh1ZEZZ5MspXPty7eQV
TeHXaTvskxIz2f3rSduqa8Lr9PaBuym9sjlH9SScfi68TrdSz35Y6WZT8rCD
Ee/XkNZ2JLLelMfWfjFrZl+tJj27dmLm1De5n34m3dy9mkKPFaQuSy9ka8G8
5HW3qsjezdXpRm0x674J6c8friTflhP23a6trNiqJrS9VkFRv2kaY4ou5YTY
tmfi75WRN+3iI/Fcxs0Xygdfyyyl0mXjMs6OrmDfG94JX3y2lZyd/j5re24l
p+XWWj7svIXME0/dLthVxd7EDTHsLKJAt9DAA/s19oamrF9VuIkcSftWeqqr
2dtU9fiIunzSnyxa+mlquH4vbohJ27aegj1Hdm29Hq6b16u3xP5yDZlGzK0z
p3vYkX3uytqgi3wd73eyf+RhLftkVlb/hRTT77H2Iyc8HKv/PKTt/DTKObru
pX4nw3lxc1Fu7cxp3FH3zfE9vnCd1VW8+413AZv++VyX1Pnhz/fpuvlctovt
9woTz9yuYcu40w/VrFrNDY6Zl4ctCf/9p+Lj9zy5nq29p92ZfqiabdceL/rh
TjhPzufu2XRNY+eAXxx9ddeb3DE/bvVDnTS23ep1zvVCIXec/Xpc/M1K7uhF
nT9OLea4Lh9Ub2yq4JKVn19Pu7OFc2a9OstVVM5xf+n+0bMbSzh4KS5QZSvj
hj5X/bv/WcrO0dM7b/+shN37733/qrOcnSmp+oTxW9m+IMTDPBXsCEUfm1JX
zN7lC3b4/q+SQ91ysyKuF3LCwek92puqWImf1N+3chPbHz9V0/1PGuvb5g58
8a/5/Lsdz74WURT+HdmvT9g3Npen9U+NSKIa1i4+88l3N9ZyQ/y6t0edqGHb
qKysS0kr2f/L2h0jXgiv04jqlJ6xS7n5Ztahc6Xh1w77bOcLs7l5UPw/7n3+
n1weVZ0+fF44pzWfvE+tD95Pk8+Tyfi8PkW+n3KM71fuyN8n+3j8fcsGeT5q
6Ifn0z+Q5ye9Ds/vniy/jxqi8PvUSPn9pB3A7w9elfWhwFKsj+qU9SN7BtZP
GSvrSx37sL6hq7L+5OiF9dfSZH8o4Qz2R+kh+0cFLuyffkH2l37sjv0tXCL7
T64b2H/LX+V8kCMS58MaKeeHApdwftqT5XxRMArny9m56P75I3UUzp+rU9z9
80l2E85n0Cvnl2wbcX6tx+V8U+xRnO/CAXL+Se2tDL1//kP3pD5IK0N9eEdK
/VBhLurHapb6IvUt1FfwKak/imlF/TlSpD7D/QL1ae8p9Uv+66hf22Spb9Je
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
AhQ7TIo=
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.008333333333333333], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0]], 
             LineBox[CompressedData["
1:eJztxTENACAQBLADJ1hCAgnDT/jfCCaY2qVjnbl7kmrJGwAAAAAAfrhcMAIY

              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.008333333333333333], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1:eJxd2HtU1NUWB/BJMcwkFYarjpKU0ihIUk0XJXGPISEWpjiJcdO0wFGTABnj
IeJkIILi44KiGAbyGByYmVQSA22jqZiKkpHU5INb2ZSKolIYiVzv+R7XXff6
D8s1ax6/c/b+7s85T70TGx7dS6FQLH5EofjP36hryqyVH9lIIf85djy/KCLE
RgW9ksv/sKWRZcWr/EielTThd463x2+gnNq8HV8ttdDywi8TTGu3UoDXmvxB
LZWU337Y/dm0QuqI/WCM2r6b/P6qXjuvp5gyfYda+60yUci+FR1P/FlKIecT
Db5NpZS6M7Bwc7GJ3Dy2zx7zfTEFt377yP2bu8nhc2Hv1dcKqXDN3c81FyvJ
sO7adU32Vmq/O3f29Xct1OE9pLjqsY20aL9u3R6jlVRn3E/ctxqp8Y/p8y48
ZyN93zbnAQ0zyRQ7b0Jq4oPnchxIOP5qEj8duODwxFk2st987Y9egdkcaF81
MviElTK9ViSU3czl+d846dx+sJB2Y3lLXnwBxw2ZnqzbXEXmRbOzjk8t4qSk
2x/V3TJTyRbfl1aOKOFNO6MbzvfeTZEfFsSf/KyME8fseOXK2XJK/zYo7kCf
Cr7aPuONqnml1HpQe2F1PzOPT0nwmv55MTXtGbYjr76Sa6Y9VxF0rpA80uZc
NHpZuGNxXf9hN/PJNLaTO/2t7BZdoj3+w2bK+TDIqabTysasSzMVb2RSZFCv
+MRoGxuzfzicsW85KZNPGltW27hgz4W9I7NDufN6Rf8p4TZuzPdI0B5bwco1
ieWXz1vZ1P5V/pVfslj93u/hi5VWntU7WDn12D952vGrU0cOsHDXY91WU+Q2
VgSlhdaequSonJ72uopCnnH/xwHPvm7mL6NHJfeaVcyGvycG1u2s4JORabe8
y0rYPH6USwOXc+bMgs8XNpRxxJmu+6drSvnQ8bZhV/ab2Kzsu2X6+l08wOK4
GxO/m7XGl7yOvVzEnx0OCnnzdzM3evlE+xzewV11qecyJlexYl2fKJfzW1mp
Clv/+hsWVq9f4R17ZjOfyC49kOH3YB0G6b/QL8risE/3+y74xsoFj7p7zw9K
41+/XtucMsnGmhffCgt9712e2Dgu+8gyGyvK336xz9JoMh58OvGDeBurxh67
P/xyGmkszb+qJtq4+peAMbmzsihgfNDeZc1WVgcOr4xO3UxVU6e6Jk20suqC
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
fibldvhW+pkc8DMr4WNqbBd+Zv3/3T//Gz5AYHQ=
              "]]}}}, {}}, {{
           Thickness[Large], 
           GrayLevel[0], 
           CircleBox[{0, 0}, {1.5, 1}]}, {
           Dashing[{Small, Small}], 
           GrayLevel[0.5], 
           Thickness[Medium], {
            LineBox[{{-1.5, 0}, {1.5, 0}}], 
            LineBox[{{0, -1}, {0, 1}}]}}}, {
          Thickness[Large], 
          RGBColor[0.6, 0.4, 0.2], 
          CircleBox[{0, 0}, {1.326000501983965, 0.7129357132741541}]}}, {
        PlotRange -> {{-1.5, 1.5}, {-1, 1}}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{-0.06155006693230467, 
          0.06155006693230441}, {-0.061468027195477594`, 
          0.061468027195478864`}}, DisplayFunction -> Identity, 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
           Thickness[Large], 
           PointSize[Medium], {
            GrayLevel[0], 
            PointBox[{{-1.118033988749895, 0}, {1.118033988749895, 0}}]}, {{
             RGBColor[0, 0, 1], 
             Dashing[{Small, Small}], 
             CircleBox[{0, 0}, 0.029138779332544763`], 
             PointBox[{-0.029138779332544763`, 0}]}, {
             RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], 
             Dashing[{Small, Small}], 
             CircleBox[{0, 0}, 0], 
             PointBox[{0, 0}]}, {
             RGBColor[
              NCache[
               Rational[2, 3], 0.6666666666666666], 0, 0], 
             Dashing[{Small, Small}], 
             CircleBox[{0, 0}, 0.06155006693230439], 
             PointBox[{0.06155006693230439, 0}]}}}, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, PlotLabel -> 
         FormBox[
           StyleBox["\"a/b=1.50, N=5, mid=(0.0,0.0)\"", {
             GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
         PlotRange -> {{-0.06155006693230467, 
          0.06155006693230441}, {-0.061468027195477594`, 
          0.061468027195478864`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, "SwatchLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   StyleBox[
                   "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                  AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1:eJxd2Ht0U3W2B/DDM7xSK4NwzchQFAgWi1waBTvQnasy5ZVKS5EaZoaWRw+v
CtIgnfIwUNoi2lLo+7RxFYoTX0EewXILzM7SK2XAQwUqYgawwkgcoFDGDkJh
cML+HmbWuvzDyspKevL7/fZ3f3578JylyfM7K4qysJOi3P+/dfrA9KLTHlaM
f9aH85MueTxsW7ttcVPXTM55gjPa2mtYf3j/UOXYas5JurHso/PV7I+eklMz
LY/NLTnDuqRp3F6U6swJvcWmgvH1O96oZMuQQ1cW9tjCzYedXc5OKOfQsb9E
ng6WsH1Gc2LqwRL2/imQdD6tnL17HvVcby3m2tFrR1zaUsnq0MCg/V+8xWN+
Hn/gpwyN3Qkd81vn5nHt4jr162A16/OGP3NkxRpOm9xpfe/LNazkLDHt+2gp
Rw09turMVg+rh31PL2ixc45/xsejvwq/3qovXBipkm9wP5N3j4f1E46Mc6Fs
2vFlXudxIz3s/t8n0uuvrKddf3jFP3VqDTv+mBybN+BN+rL18KzZfatZSfeN
ee37Iho479ORt/OrWD0zsvjC41tJdw5oWra7gq3R9S9sKislf3P5oUBVGdv3
bbQM+bycHHtj2pwTS1if9tjCRF8lZXZbvube58WsLW1PPDZZI2eEJS5qzNus
L1D+tqK6mmx/3/7I1bp8Lhy2a2/sOzXk6zs99fpFN2vvFly7kOwhf8Wq/Rsi
X2dr8beHf9PgIffOk8tfyZvH5tK+P9/4ykO23F5D1WFjyT1mkH/Uex7SYsbd
/ePzi0g/9XDTjVgPWb6/2OP42myyX1mk7VpdQyU7Gn99IbCOtIyu3/4+v5rM
tUmBgz0LqN378pmXZmik9vwk9c8PvU3+XufHD7lWSSWVz71kml9MlnW9N9fP
qKA19pTKOZVbKdj2WSBiSxkNOZD/5PvvlJLlpW6zJ75bQjOnbD8yaEU5OTcf
jS6q2EK2L27erni0kmwp49XIYBGlpc/asXBTFYUm7Ty6fcYmaltz5dbiwxq5
37t9O/hhHgVynzzZ+kU1acO3ed2X3BQ40FTv89SQrXXn7kd/lU3RtuU7T4z1
kN7w+7QVDUuo4OSk9vPvhF9PbN6cvDSZCroMa9z9Zfh1ZEZZ5MspXPty7eQV
TeHXaTvskxIz2f3rSduqa8Lr9PaBuym9sjlH9SScfi68TrdSz35Y6WZT8rCD
Ee/XkNZ2JLLelMfWfjFrZl+tJj27dmLm1De5n34m3dy9mkKPFaQuSy9ka8G8
5HW3qsjezdXpRm0x674J6c8friTflhP23a6trNiqJrS9VkFRv2kaY4ou5YTY
tmfi75WRN+3iI/Fcxs0Xygdfyyyl0mXjMs6OrmDfG94JX3y2lZyd/j5re24l
p+XWWj7svIXME0/dLthVxd7EDTHsLKJAt9DAA/s19oamrF9VuIkcSftWeqqr
2dtU9fiIunzSnyxa+mlquH4vbohJ27aegj1Hdm29Hq6b16u3xP5yDZlGzK0z
p3vYkX3uytqgi3wd73eyf+RhLftkVlb/hRTT77H2Iyc8HKv/PKTt/DTKObru
pX4nw3lxc1Fu7cxp3FH3zfE9vnCd1VW8+413AZv++VyX1Pnhz/fpuvlctovt
9woTz9yuYcu40w/VrFrNDY6Zl4ctCf/9p+Lj9zy5nq29p92ZfqiabdceL/rh
TjhPzufu2XRNY+eAXxx9ddeb3DE/bvVDnTS23ep1zvVCIXec/Xpc/M1K7uhF
nT9OLea4Lh9Ub2yq4JKVn19Pu7OFc2a9OstVVM5xf+n+0bMbSzh4KS5QZSvj
hj5X/bv/WcrO0dM7b/+shN37733/qrOcnSmp+oTxW9m+IMTDPBXsCEUfm1JX
zN7lC3b4/q+SQ91ysyKuF3LCwek92puqWImf1N+3chPbHz9V0/1PGuvb5g58
8a/5/Lsdz74WURT+HdmvT9g3Npen9U+NSKIa1i4+88l3N9ZyQ/y6t0edqGHb
qKysS0kr2f/L2h0jXgiv04jqlJ6xS7n5Ztahc6Xh1w77bOcLs7l5UPw/7n3+
n1weVZ0+fF44pzWfvE+tD95Pk8+Tyfi8PkW+n3KM71fuyN8n+3j8fcsGeT5q
6Ifn0z+Q5ye9Ds/vniy/jxqi8PvUSPn9pB3A7w9elfWhwFKsj+qU9SN7BtZP
GSvrSx37sL6hq7L+5OiF9dfSZH8o4Qz2R+kh+0cFLuyffkH2l37sjv0tXCL7
T64b2H/LX+V8kCMS58MaKeeHApdwftqT5XxRMArny9m56P75I3UUzp+rU9z9
80l2E85n0Cvnl2wbcX6tx+V8U+xRnO/CAXL+Se2tDL1//kP3pD5IK0N9eEdK
/VBhLurHapb6IvUt1FfwKak/imlF/TlSpD7D/QL1ae8p9Uv+66hf22Spb9Je
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
AhQ7TIo=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0]], 
            LineBox[CompressedData["
1:eJztxTENACAQBLADJ1hCAgnDT/jfCCaY2qVjnbl7kmrJGwAAAAAAfrhcMAIY

             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1:eJxd2HtU1NUWB/BJMcwkFYarjpKU0ihIUk0XJXGPISEWpjiJcdO0wFGTABnj
IeJkIILi44KiGAbyGByYmVQSA22jqZiKkpHU5INb2ZSKolIYiVzv+R7XXff6
D8s1ax6/c/b+7s85T70TGx7dS6FQLH5EofjP36hryqyVH9lIIf85djy/KCLE
RgW9ksv/sKWRZcWr/EielTThd463x2+gnNq8HV8ttdDywi8TTGu3UoDXmvxB
LZWU337Y/dm0QuqI/WCM2r6b/P6qXjuvp5gyfYda+60yUci+FR1P/FlKIecT
Db5NpZS6M7Bwc7GJ3Dy2zx7zfTEFt377yP2bu8nhc2Hv1dcKqXDN3c81FyvJ
sO7adU32Vmq/O3f29Xct1OE9pLjqsY20aL9u3R6jlVRn3E/ctxqp8Y/p8y48
ZyN93zbnAQ0zyRQ7b0Jq4oPnchxIOP5qEj8duODwxFk2st987Y9egdkcaF81
MviElTK9ViSU3czl+d846dx+sJB2Y3lLXnwBxw2ZnqzbXEXmRbOzjk8t4qSk
2x/V3TJTyRbfl1aOKOFNO6MbzvfeTZEfFsSf/KyME8fseOXK2XJK/zYo7kCf
Cr7aPuONqnml1HpQe2F1PzOPT0nwmv55MTXtGbYjr76Sa6Y9VxF0rpA80uZc
NHpZuGNxXf9hN/PJNLaTO/2t7BZdoj3+w2bK+TDIqabTysasSzMVb2RSZFCv
+MRoGxuzfzicsW85KZNPGltW27hgz4W9I7NDufN6Rf8p4TZuzPdI0B5bwco1
ieWXz1vZ1P5V/pVfslj93u/hi5VWntU7WDn12D952vGrU0cOsHDXY91WU+Q2
VgSlhdaequSonJ72uopCnnH/xwHPvm7mL6NHJfeaVcyGvycG1u2s4JORabe8
y0rYPH6USwOXc+bMgs8XNpRxxJmu+6drSvnQ8bZhV/ab2Kzsu2X6+l08wOK4
GxO/m7XGl7yOvVzEnx0OCnnzdzM3evlE+xzewV11qecyJlexYl2fKJfzW1mp
Clv/+hsWVq9f4R17ZjOfyC49kOH3YB0G6b/QL8risE/3+y74xsoFj7p7zw9K
41+/XtucMsnGmhffCgt9712e2Dgu+8gyGyvK336xz9JoMh58OvGDeBurxh67
P/xyGmkszb+qJtq4+peAMbmzsihgfNDeZc1WVgcOr4xO3UxVU6e6Jk20suqC
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
fibldvhW+pkc8DMr4WNqbBd+Zv3/3T//Gz5AYHQ=
             "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{-0.06155006693230467, 
          0.06155006693230441}, {-0.061468027195477594`, 
          0.061468027195478864`}}, DisplayFunction -> Identity, 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
           Thickness[Large], 
           PointSize[Medium], {
            GrayLevel[0], 
            PointBox[{{-1.118033988749895, 0}, {1.118033988749895, 0}}]}, {{
             RGBColor[0, 0, 1], 
             Dashing[{Small, Small}], 
             CircleBox[{0, 0}, 0.029138779332544763`], 
             PointBox[{-0.029138779332544763`, 0}]}, {
             RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], 
             Dashing[{Small, Small}], 
             CircleBox[{0, 0}, 0], 
             PointBox[{0, 0}]}, {
             RGBColor[
              NCache[
               Rational[2, 3], 0.6666666666666666], 0, 0], 
             Dashing[{Small, Small}], 
             CircleBox[{0, 0}, 0.06155006693230439], 
             PointBox[{0.06155006693230439, 0}]}}}, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, PlotLabel -> 
         FormBox[
           StyleBox["\"a/b=1.50, N=5, mid=(0.0,0.0)\"", {
             GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
         PlotRange -> {{-0.06155006693230467, 
          0.06155006693230441}, {-0.061468027195477594`, 
          0.061468027195478864`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, "SwatchLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   StyleBox[
                   "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                  AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7962923839841747`*^9, 3.796292435896128*^9}, 
   3.7962924862464733`*^9, {3.796292546583018*^9, 3.7962925961955624`*^9}, 
   3.796292631906997*^9, {3.796292670256278*^9, 3.7962926958599815`*^9}, {
   3.796292743158203*^9, 3.7962927803320704`*^9}, 3.796292825099241*^9, 
   3.796292855986548*^9, {3.7962929004787164`*^9, 3.7962929586713514`*^9}, 
   3.7962930530235405`*^9, 3.79629317356124*^9, {3.7962936595758944`*^9, 
   3.7962936851134863`*^9}, 3.7962937670927896`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"showPedalCentroids", "[", 
        RowBox[{"1.5", ",", "#", ",", "0", ",", "0"}], "]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"3", ",", "8"}], "]"}]}], ",", "2"}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7962930820493937`*^9, 3.796293135321438*^9}, {
  3.7962932668903666`*^9, 3.7962932780261106`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], 
                 LineBox[CompressedData["
1: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
                  "]]}, {
                 Hue[0.9060679774997897, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 
                   NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                 LineBox[CompressedData["
1:eJztxTENACAQBLADJ1hCAgnDT/jfCCaY2qVjnbl7kmrJGwAAAAAAfrhcMAIY

                  "]]}, {
                 Hue[0.1421359549995791, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], 
                 LineBox[CompressedData["
1:eJxd2Htcz/ceB/C0CT0292tEJDO3U8ZMmnfCZraY66rJcOQQSxoOGUO5NZfc
mlGUyUmHtMh1ef1uaJVuw8w2y6zktrVMo7Gdnc/r3Xk8dvzjj5/0/X4/7/fr
9fx9O0+bOzbM2cnJaVY9J6f//p2UOL7vnjdKxUn//BHq2ffFZ0pkxo/j/vbH
1iPSr3nTvCtDCmRm/OluwQst4jPp96ZFlWely0/tfZ5Ototly+0OneItcqVn
Wd9Hyx0yeNfQaEfNCbnYMjxq1CsOGRn+JGP4zSzp0nG9y/E///2qjGfrrbEe
lOkxJ/NmlNskfvbY5sVfpcrW1gnHvnnJJpZrtw/dmJMsY0dNfG9XmlVO3FpT
tLzhDnnyzvj8mgFWOVtx51zgrnhpdWvUby4VFukR7OW1zi9WwtYV/jAh0yIj
h/7j+N6aSIkb8fcxjbZZJHyue0TW6PFoXhq5YNJGi+wMvBfvMzMaPvJl688T
LZJatuyzWSVrkL73hanP5Fjk3fevvtNr7GacCe34Tvt7FqmqXLy93i8JeGpe
nxtNelqlTIJjTtxKxNCft8xstsAqySNsSY/2p2CF8617vp9bJdIxIzbFPRU7
qkO3LvWyiVu2zSWoIg1eg2O8P1hjk6xg386PGx+C+84J37931yaRSM28VpoJ
v2jXzJ/ftEt0YlKDiElH0PyDAbdzMu2y1L1TZdOex7D64/cabHdxyNIiZ58n
w04iVl4r+Ol1h3gkT0tscPgz9KsNq8xf5JC0yfU6lPa3oPcH7YfExDik1/ne
p8/72fBw1sOH9ikOCUjNSmk2y4EVCdl97E85pPzmKPfTR87h9J1HbfIn2yVp
TMDlV5p9jgeNBn42fLpNTh2oLmo6Lx+feLUuDGpolZAuQ9LH5FzAV18EL3Fd
fUZ656dt8PimCKvaBHdv6HVK+j+pLbx8pRgJDd4Yfaj2qERtebg3f3MJ8p7r
XvZ6YIb8tvr0xamNS+HtUZ7veTRFfri+OHzaiFJs3/Dpje3bVsqCD5sVfz+4
FCs6HBjX8lg8Lp0J8etfU4LwpxbUzyvaB6fIAJcbC0uwIKrfkrjnM1HrcjW+
SUExHp2PCXQdnY2e33d62lKvGFfixh+OPHsSK7rUel19pRBtZ+3ynr42B6GR
++50WViAuP6TDk4ebUFq4rYVESl5aHys891JH1rxuF3E6yUXc9G3z5I7I1fY
MNX+QtmZtueR+FJ00QNfO7r/6hiXGnUW/zrtmvqL1Y6P7yRYE8rtiJ2NVZ06
ObD88Cm/iigbxh/o2/2NEAf8Xsyr/LebFeN+ajF1YLQDPg9WxYecANLiQkd/
FOtA5NGE9W/NycGC1H/WdlzmwJihL/YfNOo0ntl2ZXdmuAMFZ2f0/HfISTjF
1Qa+F+iA+4X0en4bj6PwwJfl1d0dmFqwqcW28mxkRlbf8/3DjrYLH1QsDz2K
0aFDvrxXYkdlV88XnrqfhWedkz8J2muHbbvn5vGffIrkGR8OjplnR02njb9X
zs7EoIjnfnzZ347sOaVzv96WgYj2LiN7NbHDt3LmT+sXH8SEdQc6FV6zIarl
gZQWK9Px8OCnKasP2+D1mbNfbXoanmuR67P3z+c15+Wx6R4/78eOlJSGb0+w
IcI7oezImFRMe1B0/5seNrzfOqZ5t7xP8PWZ2okjnG04N/dJ5HNBe7HozVXb
j35tRfpbuUv2PEpG2MBY577HrSh/NeliYPAelHZoMjd/mxVe5Wmjnv4uEQV3
B4WvmW/FqZvvZLy0YicG5g4KmDXRiuVPl5yu//IOVPR7UjrP14rAroOP2Jok
4LK/9Er2sCKqzS3XxzVbsdu1QZvqhlb4uv9QPadqMxpNvLh8+n0LAuoPrK6+
vwm3rx0quf+dBRMe7oge67kew/a4+SQW/rlXbp7Dhs9ei5aNA3OCYUFYxPUv
3siNRUGZ+/HuWRbkvfXs1DYDViA35e6++v+ywGvXpbNVM5dg/eHGEfeS/py3
j/4m9uj52L+qfeS3CRZMyX1+Q9Sg2bB1ab/pi80W9HBt8lpX77fRICx0SOFG
C+pyuXDS+o8KNlhw29N8Lk76eVyp+Xk5rz+flmT+f8nQ/782xfx+2ay//0qw
uT4p1uuLijTXL1f0+i0dzP1JV72/6N/M/cs4vX+vRub5yAN9Pg07mecnrfT5
Obczz1cy9PnmeJnnLz/r8y92Mecjj/R8/G+Z85ORen6WCnO+UqbnO+U1c/5y
R8/fKdjMh8TqfJyKNPMjCTo/K9uY+ZKHOl8WHzN/skzn7+pgM59yUuczPMfM
rwTq/LZtbeZb3A5xvgNvmfmXRXXzH2H2Q7bqfmR7mP2REN2frASzX+LQ/ar2
MvsnfXT/evzT7KdE6n7uuGD2V0p1f5MKzX7Ldd3vLufN/oub7v+lYSYfpKPm
Q2W2yQ9ZpvkxpcbkixzSfGk+wOSP+Gv+TM40+SQDNZ+87pr8kuWaX78w32SJ
5tvzDpN/MkXz77GbyUfJ7s18fDfJ5Kfsy2Z+Lppn8lWy+zFfoz1N/sqQfzB/
9zKfZfFa5vPUBia/peVZ5vcM5rvMjGC+N4HJf/H7bb7J/43sB9nYmP1QzP6Q
uEz2RxH7RTK6sV/6sX/kQi/2T9lj009S3oj91DvP9Jf82I791bGz6Tepf5n9
NjnN9J8s7cb+S3jT9KNEubIfF1SY/pTed9mfi/aZfpWj2q87zpn+lcbh7N+1
oaafpa6f9+02/S3dtL/XFpp+l4Xa78M6mP6X6dr/53YZH8iTZfRByhnjB3FT
PwwPMr6Q2o/pi6wjxh/irP5obTc+kYXqk22vGr/IdPVL2GDjG/FW33jdNP6R
e5H0T0208ZFkqo9uf2v8JMnqJ/9Xja+kh/oqfYLxl9T5a+lrxmfYoD779m3j
N0So31ZWGt+hi/pu+B3jPzSdQv8lfWd8iPA6H84xfkS2+tE50/gSq9WXHrON
P+Gv/gxKND5Fhfo0aavxK4rVry+HGt+i9Ef6tn8L419kbKJ/gycbH6PiDn2c
SD//L6dd9POO9DMC6GdMpp8RQj+jFf2M3fQz1M9oRT+jiNeHQPoZXrx+rKSf
oX7GPvoZ23n/KKWfMZ7PB1H0Mx7Rz3hCP6Mtny/86WdM5/PHm/Qz1M+whP3l
/OA6iufbl+eLq9d5/hk8f3xLP4uF84FQ+ll+5/wg3p/zNZLzhSr6WeI4fxhB
P8s2zifSjnJ+3Ti/qKSfpTP9jN70s3hz/pFDP4s7/Qxv+lne5/5gC/0sq7lf
8KefRf0MD/pZPLmf6Ec/y6/0M9TPspL7jSv0s5yhn6F+FvUzIuhnuUA/Y7/m
S8VFky/4XfPnGv2MAfSz7KCfsUTzqz/9jHuab2mdTb6hQvNv1SaTf5iv+bi7
nclHUT+L+lkez2W+ptPPon4W9bOon0X9LAn0s1TONPktY+ln2UE/ywT6WcbQ
z6J+lj70s4TTz7KB/SG/1LBfbOwXcaKfxcH+keP0s/ixn2Qh/SwB7C9xp58l
nf0me4+w/9az/+QV+lkasx+l4Tn2Z+0605+ykH6WAvardKef5Sj7V/rRzzKK
/SxV9LO4sr9F/Sx72O9ygX6Wwex/qaSf5V36QOJu0g9B9INcop/lV/pZguhn
6UZ/yBb6WdTPEk0/Sxj9IjPoZ7lK38gZ+lmi6R85QD/LdPpIvEbQT8X0k9Sn
nyWPvpJk+lkG0F/iUZ8+u06fyUj6Wb6i32Qn/SyJ9J1U0s/iTP+Jmwt9WE4f
Shj9LAH0o7jTz9KcvhQ3+lnUz3KIfpZ8+lSm0M8SR79KFf0safSt9D9H/+bS
v9LqWfq4Hn38v/capfSzJNPPcNbPd35Bf3+uP69+hvpZfJPp9w36++NC6Pvi
uuujn3FRrz+Pfoan3l9eLb8/jNT7P9uQ3y/Uz2LryO8fjfX5Vbfl9xP1s+TR
z6jS5+9PP6NKzyeMfsYoPb+r9DOu1Z0v/YwqPf/yIH6/Wq7zUUw/Y7vOz1L6
Gfd1vkrpZ8Tq/JXSzziq89mDfoa/zq8H/Yz29LO408+Yr/MfTT8jQfdD/Ywp
uj9p9DMsul/l9DN66P51oZ+hfpYt9DMu6v5a6GdU6n6rn9GOfpZc+hlumg+n
6Gcs1vyIpJ9Rly8d6Weon2US/QxfzafO9DNiNL/u6vuB9zXfmtHPCNP8e0I/
I4d+lnX0M3bSz7KMfkYm/SyL6WcMp58lS99vDKefZS79jMsO5vc0fT/yEf0s
rvQzdtHPon7GJfpZCvX9y4Us9keBvp9JpJ+hfkYy/Ywb9DMc9DO82V/4gX6G
H/sNuZfYb1PpZyyin7GefsZ8+hlx9DO60s+YRT/jmPbrFvoZTelnxIT+5f0W
9tPP6K79vYF+xiLt91n0M2Zq/5+kn/GQfkYy/Qz1MwLoZzymn5FDP0P9DF/6
GYvVJ/vpZ8xQv7xLP8NHfTOcfkaV+mcv/YyD6iML/YwU9ZMr/Yzn1Vc9Jv7l
/SVOjeD7zY3qs3j6Weao37bQz9Ktznf0s6ifUUY/S6T68Cr9LCfUj73pZ1mr
vnyJfpah6k9/+lnUz5hPP0uJ+jWEfpbz9DNC6GfZQj9jAn0stfQzEv/v/fN/
AKyBt5M=
                  "]]}}}, {}}, {
              Thickness[Large], 
              GrayLevel[0], 
              CircleBox[{0, 0}, {1.5, 1}]}, {
              Thickness[Large], 
              RGBColor[0.6, 0.4, 0.2], 
              
              CircleBox[{0, 0}, {1.1430749027719966`, 
               0.2379500648186704}]}}, {
            PlotRange -> {{-1.5, 1.5}, {-1, 1}}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
             PlotRange -> {{-0.32440473424345684`, 
              0.32440473424345684`}, {-0.30783004753368964`, 
              0.3078300475336902}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                RGBColor[0, 0, 1], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0.32440473424345667`], 
                PointBox[{-0.32440473424345667`, 0}]}, {
                RGBColor[0, 
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0], 
                PointBox[{0, 0}]}, {
                RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0.2859266273030217], 
                PointBox[{0.2859266273030217, 0}]}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=3, mid=(0.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{-0.32440473424345684`, 
              0.32440473424345684`}, {-0.30783004753368964`, 
              0.3078300475336902}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
         TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 0, 1]], 
                LineBox[CompressedData["
1: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
                 "]]}, {
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0]], 
                LineBox[CompressedData["
1:eJztxTENACAQBLADJ1hCAgnDT/jfCCaY2qVjnbl7kmrJGwAAAAAAfrhcMAIY

                 "]]}, {
                Hue[0.1421359549995791, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]], 
                LineBox[CompressedData["
1:eJxd2Htcz/ceB/C0CT0292tEJDO3U8ZMmnfCZraY66rJcOQQSxoOGUO5NZfc
mlGUyUmHtMh1ef1uaJVuw8w2y6zktrVMo7Gdnc/r3Xk8dvzjj5/0/X4/7/fr
9fx9O0+bOzbM2cnJaVY9J6f//p2UOL7vnjdKxUn//BHq2ffFZ0pkxo/j/vbH
1iPSr3nTvCtDCmRm/OluwQst4jPp96ZFlWely0/tfZ5Ototly+0OneItcqVn
Wd9Hyx0yeNfQaEfNCbnYMjxq1CsOGRn+JGP4zSzp0nG9y/E///2qjGfrrbEe
lOkxJ/NmlNskfvbY5sVfpcrW1gnHvnnJJpZrtw/dmJMsY0dNfG9XmlVO3FpT
tLzhDnnyzvj8mgFWOVtx51zgrnhpdWvUby4VFukR7OW1zi9WwtYV/jAh0yIj
h/7j+N6aSIkb8fcxjbZZJHyue0TW6PFoXhq5YNJGi+wMvBfvMzMaPvJl688T
LZJatuyzWSVrkL73hanP5Fjk3fevvtNr7GacCe34Tvt7FqmqXLy93i8JeGpe
nxtNelqlTIJjTtxKxNCft8xstsAqySNsSY/2p2CF8617vp9bJdIxIzbFPRU7
qkO3LvWyiVu2zSWoIg1eg2O8P1hjk6xg386PGx+C+84J37931yaRSM28VpoJ
v2jXzJ/ftEt0YlKDiElH0PyDAbdzMu2y1L1TZdOex7D64/cabHdxyNIiZ58n
w04iVl4r+Ol1h3gkT0tscPgz9KsNq8xf5JC0yfU6lPa3oPcH7YfExDik1/ne
p8/72fBw1sOH9ikOCUjNSmk2y4EVCdl97E85pPzmKPfTR87h9J1HbfIn2yVp
TMDlV5p9jgeNBn42fLpNTh2oLmo6Lx+feLUuDGpolZAuQ9LH5FzAV18EL3Fd
fUZ656dt8PimCKvaBHdv6HVK+j+pLbx8pRgJDd4Yfaj2qERtebg3f3MJ8p7r
XvZ6YIb8tvr0xamNS+HtUZ7veTRFfri+OHzaiFJs3/Dpje3bVsqCD5sVfz+4
FCs6HBjX8lg8Lp0J8etfU4LwpxbUzyvaB6fIAJcbC0uwIKrfkrjnM1HrcjW+
SUExHp2PCXQdnY2e33d62lKvGFfixh+OPHsSK7rUel19pRBtZ+3ynr42B6GR
++50WViAuP6TDk4ebUFq4rYVESl5aHys891JH1rxuF3E6yUXc9G3z5I7I1fY
MNX+QtmZtueR+FJ00QNfO7r/6hiXGnUW/zrtmvqL1Y6P7yRYE8rtiJ2NVZ06
ObD88Cm/iigbxh/o2/2NEAf8Xsyr/LebFeN+ajF1YLQDPg9WxYecANLiQkd/
FOtA5NGE9W/NycGC1H/WdlzmwJihL/YfNOo0ntl2ZXdmuAMFZ2f0/HfISTjF
1Qa+F+iA+4X0en4bj6PwwJfl1d0dmFqwqcW28mxkRlbf8/3DjrYLH1QsDz2K
0aFDvrxXYkdlV88XnrqfhWedkz8J2muHbbvn5vGffIrkGR8OjplnR02njb9X
zs7EoIjnfnzZ347sOaVzv96WgYj2LiN7NbHDt3LmT+sXH8SEdQc6FV6zIarl
gZQWK9Px8OCnKasP2+D1mbNfbXoanmuR67P3z+c15+Wx6R4/78eOlJSGb0+w
IcI7oezImFRMe1B0/5seNrzfOqZ5t7xP8PWZ2okjnG04N/dJ5HNBe7HozVXb
j35tRfpbuUv2PEpG2MBY577HrSh/NeliYPAelHZoMjd/mxVe5Wmjnv4uEQV3
B4WvmW/FqZvvZLy0YicG5g4KmDXRiuVPl5yu//IOVPR7UjrP14rAroOP2Jok
4LK/9Er2sCKqzS3XxzVbsdu1QZvqhlb4uv9QPadqMxpNvLh8+n0LAuoPrK6+
vwm3rx0quf+dBRMe7oge67kew/a4+SQW/rlXbp7Dhs9ei5aNA3OCYUFYxPUv
3siNRUGZ+/HuWRbkvfXs1DYDViA35e6++v+ywGvXpbNVM5dg/eHGEfeS/py3
j/4m9uj52L+qfeS3CRZMyX1+Q9Sg2bB1ab/pi80W9HBt8lpX77fRICx0SOFG
C+pyuXDS+o8KNlhw29N8Lk76eVyp+Xk5rz+flmT+f8nQ/782xfx+2ay//0qw
uT4p1uuLijTXL1f0+i0dzP1JV72/6N/M/cs4vX+vRub5yAN9Pg07mecnrfT5
Obczz1cy9PnmeJnnLz/r8y92Mecjj/R8/G+Z85ORen6WCnO+UqbnO+U1c/5y
R8/fKdjMh8TqfJyKNPMjCTo/K9uY+ZKHOl8WHzN/skzn7+pgM59yUuczPMfM
rwTq/LZtbeZb3A5xvgNvmfmXRXXzH2H2Q7bqfmR7mP2REN2frASzX+LQ/ar2
MvsnfXT/evzT7KdE6n7uuGD2V0p1f5MKzX7Ldd3vLufN/oub7v+lYSYfpKPm
Q2W2yQ9ZpvkxpcbkixzSfGk+wOSP+Gv+TM40+SQDNZ+87pr8kuWaX78w32SJ
5tvzDpN/MkXz77GbyUfJ7s18fDfJ5Kfsy2Z+Lppn8lWy+zFfoz1N/sqQfzB/
9zKfZfFa5vPUBia/peVZ5vcM5rvMjGC+N4HJf/H7bb7J/43sB9nYmP1QzP6Q
uEz2RxH7RTK6sV/6sX/kQi/2T9lj009S3oj91DvP9Jf82I791bGz6Tepf5n9
NjnN9J8s7cb+S3jT9KNEubIfF1SY/pTed9mfi/aZfpWj2q87zpn+lcbh7N+1
oaafpa6f9+02/S3dtL/XFpp+l4Xa78M6mP6X6dr/53YZH8iTZfRByhnjB3FT
PwwPMr6Q2o/pi6wjxh/irP5obTc+kYXqk22vGr/IdPVL2GDjG/FW33jdNP6R
e5H0T0208ZFkqo9uf2v8JMnqJ/9Xja+kh/oqfYLxl9T5a+lrxmfYoD779m3j
N0So31ZWGt+hi/pu+B3jPzSdQv8lfWd8iPA6H84xfkS2+tE50/gSq9WXHrON
P+Gv/gxKND5Fhfo0aavxK4rVry+HGt+i9Ef6tn8L419kbKJ/gycbH6PiDn2c
SD//L6dd9POO9DMC6GdMpp8RQj+jFf2M3fQz1M9oRT+jiNeHQPoZXrx+rKSf
oX7GPvoZ23n/KKWfMZ7PB1H0Mx7Rz3hCP6Mtny/86WdM5/PHm/Qz1M+whP3l
/OA6iufbl+eLq9d5/hk8f3xLP4uF84FQ+ll+5/wg3p/zNZLzhSr6WeI4fxhB
P8s2zifSjnJ+3Ti/qKSfpTP9jN70s3hz/pFDP4s7/Qxv+lne5/5gC/0sq7lf
8KefRf0MD/pZPLmf6Ec/y6/0M9TPspL7jSv0s5yhn6F+FvUzIuhnuUA/Y7/m
S8VFky/4XfPnGv2MAfSz7KCfsUTzqz/9jHuab2mdTb6hQvNv1SaTf5iv+bi7
nclHUT+L+lkez2W+ptPPon4W9bOon0X9LAn0s1TONPktY+ln2UE/ywT6WcbQ
z6J+lj70s4TTz7KB/SG/1LBfbOwXcaKfxcH+keP0s/ixn2Qh/SwB7C9xp58l
nf0me4+w/9az/+QV+lkasx+l4Tn2Z+0605+ykH6WAvardKef5Sj7V/rRzzKK
/SxV9LO4sr9F/Sx72O9ygX6Wwex/qaSf5V36QOJu0g9B9INcop/lV/pZguhn
6UZ/yBb6WdTPEk0/Sxj9IjPoZ7lK38gZ+lmi6R85QD/LdPpIvEbQT8X0k9Sn
nyWPvpJk+lkG0F/iUZ8+u06fyUj6Wb6i32Qn/SyJ9J1U0s/iTP+Jmwt9WE4f
Shj9LAH0o7jTz9KcvhQ3+lnUz3KIfpZ8+lSm0M8SR79KFf0safSt9D9H/+bS
v9LqWfq4Hn38v/capfSzJNPPcNbPd35Bf3+uP69+hvpZfJPp9w36++NC6Pvi
uuujn3FRrz+Pfoan3l9eLb8/jNT7P9uQ3y/Uz2LryO8fjfX5Vbfl9xP1s+TR
z6jS5+9PP6NKzyeMfsYoPb+r9DOu1Z0v/YwqPf/yIH6/Wq7zUUw/Y7vOz1L6
Gfd1vkrpZ8Tq/JXSzziq89mDfoa/zq8H/Yz29LO408+Yr/MfTT8jQfdD/Ywp
uj9p9DMsul/l9DN66P51oZ+hfpYt9DMu6v5a6GdU6n6rn9GOfpZc+hlumg+n
6Gcs1vyIpJ9Rly8d6Weon2US/QxfzafO9DNiNL/u6vuB9zXfmtHPCNP8e0I/
I4d+lnX0M3bSz7KMfkYm/SyL6WcMp58lS99vDKefZS79jMsO5vc0fT/yEf0s
rvQzdtHPon7GJfpZCvX9y4Us9keBvp9JpJ+hfkYy/Ywb9DMc9DO82V/4gX6G
H/sNuZfYb1PpZyyin7GefsZ8+hlx9DO60s+YRT/jmPbrFvoZTelnxIT+5f0W
9tPP6K79vYF+xiLt91n0M2Zq/5+kn/GQfkYy/Qz1MwLoZzymn5FDP0P9DF/6
GYvVJ/vpZ8xQv7xLP8NHfTOcfkaV+mcv/YyD6iML/YwU9ZMr/Yzn1Vc9Jv7l
/SVOjeD7zY3qs3j6Weao37bQz9Ktznf0s6ifUUY/S6T68Cr9LCfUj73pZ1mr
vnyJfpah6k9/+lnUz5hPP0uJ+jWEfpbz9DNC6GfZQj9jAn0stfQzEv/v/fN/
AKyBt5M=
                 "]]}}}, {}}, {
            DisplayFunction -> Identity, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
             PlotRange -> {{-0.32440473424345684`, 
              0.32440473424345684`}, {-0.30783004753368964`, 
              0.3078300475336902}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                RGBColor[0, 0, 1], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0.32440473424345667`], 
                PointBox[{-0.32440473424345667`, 0}]}, {
                RGBColor[0, 
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0], 
                PointBox[{0, 0}]}, {
                RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0.2859266273030217], 
                PointBox[{0.2859266273030217, 0}]}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=3, mid=(0.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{-0.32440473424345684`, 
              0.32440473424345684`}, {-0.30783004753368964`, 
              0.3078300475336902}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], 
                 LineBox[CompressedData["
1:eJztxTENACAQBLADJ1hCAgnDT/jfCCaY2qVjnbl7kmrJGwAAAAAAfrhcMAIY

                  "]]}, {
                 Hue[0.9060679774997897, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 
                   NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                 LineBox[CompressedData["
1:eJztxTENACAQBLADJ1hCAgnDT/jfCCaY2qVjnbl7kmrJGwAAAAAAfrhcMAIY

                  "]]}, {
                 Hue[0.1421359549995791, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], 
                 LineBox[CompressedData["
1:eJztxTENACAQBLADJ1hCAgnDT/jfCCaY2qVjnbl7kmrJGwAAAAAAfrhcMAIY

                  "]]}}}, {}}, {
              Thickness[Large], 
              GrayLevel[0], 
              CircleBox[{0, 0}, {1.5, 1}]}, {
              Thickness[Large], 
              RGBColor[0.6, 0.4, 0.2], 
              
              CircleBox[{0, 0}, {1.2480754415067652`, 
               0.5547001962252281}]}}, {
            PlotRange -> {{-1.5, 1.5}, {-1, 1}}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
             PlotRange -> {{-1., 1.}, {-1., 1.}}, DisplayFunction -> Identity,
              Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                RGBColor[0, 0, 1], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0], 
                PointBox[{0, 0}]}, {
                RGBColor[0, 
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0], 
                PointBox[{0, 0}]}, {
                RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0], 
                PointBox[{0, 0}]}}, Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=4, mid=(0.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
         TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 0, 1]], 
                LineBox[CompressedData["
1:eJztxTENACAQBLADJ1hCAgnDT/jfCCaY2qVjnbl7kmrJGwAAAAAAfrhcMAIY

                 "]]}, {
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0]], 
                LineBox[CompressedData["
1:eJztxTENACAQBLADJ1hCAgnDT/jfCCaY2qVjnbl7kmrJGwAAAAAAfrhcMAIY

                 "]]}, {
                Hue[0.1421359549995791, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]], 
                LineBox[CompressedData["
1:eJztxTENACAQBLADJ1hCAgnDT/jfCCaY2qVjnbl7kmrJGwAAAAAAfrhcMAIY

                 "]]}}}, {}}, {
            DisplayFunction -> Identity, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
             PlotRange -> {{-1., 1.}, {-1., 1.}}, DisplayFunction -> Identity,
              Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                RGBColor[0, 0, 1], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0], 
                PointBox[{0, 0}]}, {
                RGBColor[0, 
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0], 
                PointBox[{0, 0}]}, {
                RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0], 
                PointBox[{0, 0}]}}, Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=4, mid=(0.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], 
                 LineBox[CompressedData["
1:eJxd2Ht0U3W2B/DDM7xSK4NwzchQFAgWi1waBTvQnasy5ZVKS5EaZoaWRw+v
CtIgnfIwUNoi2lLo+7RxFYoTX0EewXILzM7SK2XAQwUqYgawwkgcoFDGDkJh
cML+HmbWuvzDyspKevL7/fZ3f3578JylyfM7K4qysJOi3P+/dfrA9KLTHlaM
f9aH85MueTxsW7ttcVPXTM55gjPa2mtYf3j/UOXYas5JurHso/PV7I+eklMz
LY/NLTnDuqRp3F6U6swJvcWmgvH1O96oZMuQQ1cW9tjCzYedXc5OKOfQsb9E
ng6WsH1Gc2LqwRL2/imQdD6tnL17HvVcby3m2tFrR1zaUsnq0MCg/V+8xWN+
Hn/gpwyN3Qkd81vn5nHt4jr162A16/OGP3NkxRpOm9xpfe/LNazkLDHt+2gp
Rw09turMVg+rh31PL2ixc45/xsejvwq/3qovXBipkm9wP5N3j4f1E46Mc6Fs
2vFlXudxIz3s/t8n0uuvrKddf3jFP3VqDTv+mBybN+BN+rL18KzZfatZSfeN
ee37Iho479ORt/OrWD0zsvjC41tJdw5oWra7gq3R9S9sKislf3P5oUBVGdv3
bbQM+bycHHtj2pwTS1if9tjCRF8lZXZbvube58WsLW1PPDZZI2eEJS5qzNus
L1D+tqK6mmx/3/7I1bp8Lhy2a2/sOzXk6zs99fpFN2vvFly7kOwhf8Wq/Rsi
X2dr8beHf9PgIffOk8tfyZvH5tK+P9/4ykO23F5D1WFjyT1mkH/Uex7SYsbd
/ePzi0g/9XDTjVgPWb6/2OP42myyX1mk7VpdQyU7Gn99IbCOtIyu3/4+v5rM
tUmBgz0LqN378pmXZmik9vwk9c8PvU3+XufHD7lWSSWVz71kml9MlnW9N9fP
qKA19pTKOZVbKdj2WSBiSxkNOZD/5PvvlJLlpW6zJ75bQjOnbD8yaEU5OTcf
jS6q2EK2L27erni0kmwp49XIYBGlpc/asXBTFYUm7Ty6fcYmaltz5dbiwxq5
37t9O/hhHgVynzzZ+kU1acO3ed2X3BQ40FTv89SQrXXn7kd/lU3RtuU7T4z1
kN7w+7QVDUuo4OSk9vPvhF9PbN6cvDSZCroMa9z9Zfh1ZEZZ5MspXPty7eQV
TeHXaTvskxIz2f3rSduqa8Lr9PaBuym9sjlH9SScfi68TrdSz35Y6WZT8rCD
Ee/XkNZ2JLLelMfWfjFrZl+tJj27dmLm1De5n34m3dy9mkKPFaQuSy9ka8G8
5HW3qsjezdXpRm0x674J6c8friTflhP23a6trNiqJrS9VkFRv2kaY4ou5YTY
tmfi75WRN+3iI/Fcxs0Xygdfyyyl0mXjMs6OrmDfG94JX3y2lZyd/j5re24l
p+XWWj7svIXME0/dLthVxd7EDTHsLKJAt9DAA/s19oamrF9VuIkcSftWeqqr
2dtU9fiIunzSnyxa+mlquH4vbohJ27aegj1Hdm29Hq6b16u3xP5yDZlGzK0z
p3vYkX3uytqgi3wd73eyf+RhLftkVlb/hRTT77H2Iyc8HKv/PKTt/DTKObru
pX4nw3lxc1Fu7cxp3FH3zfE9vnCd1VW8+413AZv++VyX1Pnhz/fpuvlctovt
9woTz9yuYcu40w/VrFrNDY6Zl4ctCf/9p+Lj9zy5nq29p92ZfqiabdceL/rh
TjhPzufu2XRNY+eAXxx9ddeb3DE/bvVDnTS23ep1zvVCIXec/Xpc/M1K7uhF
nT9OLea4Lh9Ub2yq4JKVn19Pu7OFc2a9OstVVM5xf+n+0bMbSzh4KS5QZSvj
hj5X/bv/WcrO0dM7b/+shN37733/qrOcnSmp+oTxW9m+IMTDPBXsCEUfm1JX
zN7lC3b4/q+SQ91ysyKuF3LCwek92puqWImf1N+3chPbHz9V0/1PGuvb5g58
8a/5/Lsdz74WURT+HdmvT9g3Npen9U+NSKIa1i4+88l3N9ZyQ/y6t0edqGHb
qKysS0kr2f/L2h0jXgiv04jqlJ6xS7n5Ztahc6Xh1w77bOcLs7l5UPw/7n3+
n1weVZ0+fF44pzWfvE+tD95Pk8+Tyfi8PkW+n3KM71fuyN8n+3j8fcsGeT5q
6Ifn0z+Q5ye9Ds/vniy/jxqi8PvUSPn9pB3A7w9elfWhwFKsj+qU9SN7BtZP
GSvrSx37sL6hq7L+5OiF9dfSZH8o4Qz2R+kh+0cFLuyffkH2l37sjv0tXCL7
T64b2H/LX+V8kCMS58MaKeeHApdwftqT5XxRMArny9m56P75I3UUzp+rU9z9
80l2E85n0Cvnl2wbcX6tx+V8U+xRnO/CAXL+Se2tDL1//kP3pD5IK0N9eEdK
/VBhLurHapb6IvUt1FfwKak/imlF/TlSpD7D/QL1ae8p9Uv+66hf22Spb9Je
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
AhQ7TIo=
                  "]]}, {
                 Hue[0.9060679774997897, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 
                   NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                 LineBox[CompressedData["
1:eJztxTENACAQBLADJ1hCAgnDT/jfCCaY2qVjnbl7kmrJGwAAAAAAfrhcMAIY

                  "]]}, {
                 Hue[0.1421359549995791, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], 
                 LineBox[CompressedData["
1:eJxd2HtU1NUWB/BJMcwkFYarjpKU0ihIUk0XJXGPISEWpjiJcdO0wFGTABnj
IeJkIILi44KiGAbyGByYmVQSA22jqZiKkpHU5INb2ZSKolIYiVzv+R7XXff6
D8s1ax6/c/b+7s85T70TGx7dS6FQLH5EofjP36hryqyVH9lIIf85djy/KCLE
RgW9ksv/sKWRZcWr/EielTThd463x2+gnNq8HV8ttdDywi8TTGu3UoDXmvxB
LZWU337Y/dm0QuqI/WCM2r6b/P6qXjuvp5gyfYda+60yUci+FR1P/FlKIecT
Db5NpZS6M7Bwc7GJ3Dy2zx7zfTEFt377yP2bu8nhc2Hv1dcKqXDN3c81FyvJ
sO7adU32Vmq/O3f29Xct1OE9pLjqsY20aL9u3R6jlVRn3E/ctxqp8Y/p8y48
ZyN93zbnAQ0zyRQ7b0Jq4oPnchxIOP5qEj8duODwxFk2st987Y9egdkcaF81
MviElTK9ViSU3czl+d846dx+sJB2Y3lLXnwBxw2ZnqzbXEXmRbOzjk8t4qSk
2x/V3TJTyRbfl1aOKOFNO6MbzvfeTZEfFsSf/KyME8fseOXK2XJK/zYo7kCf
Cr7aPuONqnml1HpQe2F1PzOPT0nwmv55MTXtGbYjr76Sa6Y9VxF0rpA80uZc
NHpZuGNxXf9hN/PJNLaTO/2t7BZdoj3+w2bK+TDIqabTysasSzMVb2RSZFCv
+MRoGxuzfzicsW85KZNPGltW27hgz4W9I7NDufN6Rf8p4TZuzPdI0B5bwco1
ieWXz1vZ1P5V/pVfslj93u/hi5VWntU7WDn12D952vGrU0cOsHDXY91WU+Q2
VgSlhdaequSonJ72uopCnnH/xwHPvm7mL6NHJfeaVcyGvycG1u2s4JORabe8
y0rYPH6USwOXc+bMgs8XNpRxxJmu+6drSvnQ8bZhV/ab2Kzsu2X6+l08wOK4
GxO/m7XGl7yOvVzEnx0OCnnzdzM3evlE+xzewV11qecyJlexYl2fKJfzW1mp
Clv/+hsWVq9f4R17ZjOfyC49kOH3YB0G6b/QL8risE/3+y74xsoFj7p7zw9K
41+/XtucMsnGmhffCgt9712e2Dgu+8gyGyvK336xz9JoMh58OvGDeBurxh67
P/xyGmkszb+qJtq4+peAMbmzsihgfNDeZc1WVgcOr4xO3UxVU6e6Jk20suqC
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
fibldvhW+pkc8DMr4WNqbBd+Zv3/3T//Gz5AYHQ=
                  "]]}}}, {}}, {
              Thickness[Large], 
              GrayLevel[0], 
              CircleBox[{0, 0}, {1.5, 1}]}, {
              Thickness[Large], 
              RGBColor[0.6, 0.4, 0.2], 
              CircleBox[{0, 0}, {1.326000501983965, 0.7129357132741541}]}}, {
            PlotRange -> {{-1.5, 1.5}, {-1, 1}}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
             PlotRange -> {{-0.06155006693230467, 
              0.06155006693230441}, {-0.061468027195477594`, 
              0.061468027195478864`}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                RGBColor[0, 0, 1], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0.029138779332544763`], 
                PointBox[{-0.029138779332544763`, 0}]}, {
                RGBColor[0, 
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0], 
                PointBox[{0, 0}]}, {
                RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0.06155006693230439], 
                PointBox[{0.06155006693230439, 0}]}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=5, mid=(0.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{-0.06155006693230467, 
              0.06155006693230441}, {-0.061468027195477594`, 
              0.061468027195478864`}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
         TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 0, 1]], 
                LineBox[CompressedData["
1:eJxd2Ht0U3W2B/DDM7xSK4NwzchQFAgWi1waBTvQnasy5ZVKS5EaZoaWRw+v
CtIgnfIwUNoi2lLo+7RxFYoTX0EewXILzM7SK2XAQwUqYgawwkgcoFDGDkJh
cML+HmbWuvzDyspKevL7/fZ3f3578JylyfM7K4qysJOi3P+/dfrA9KLTHlaM
f9aH85MueTxsW7ttcVPXTM55gjPa2mtYf3j/UOXYas5JurHso/PV7I+eklMz
LY/NLTnDuqRp3F6U6swJvcWmgvH1O96oZMuQQ1cW9tjCzYedXc5OKOfQsb9E
ng6WsH1Gc2LqwRL2/imQdD6tnL17HvVcby3m2tFrR1zaUsnq0MCg/V+8xWN+
Hn/gpwyN3Qkd81vn5nHt4jr162A16/OGP3NkxRpOm9xpfe/LNazkLDHt+2gp
Rw09turMVg+rh31PL2ixc45/xsejvwq/3qovXBipkm9wP5N3j4f1E46Mc6Fs
2vFlXudxIz3s/t8n0uuvrKddf3jFP3VqDTv+mBybN+BN+rL18KzZfatZSfeN
ee37Iho479ORt/OrWD0zsvjC41tJdw5oWra7gq3R9S9sKislf3P5oUBVGdv3
bbQM+bycHHtj2pwTS1if9tjCRF8lZXZbvube58WsLW1PPDZZI2eEJS5qzNus
L1D+tqK6mmx/3/7I1bp8Lhy2a2/sOzXk6zs99fpFN2vvFly7kOwhf8Wq/Rsi
X2dr8beHf9PgIffOk8tfyZvH5tK+P9/4ykO23F5D1WFjyT1mkH/Uex7SYsbd
/ePzi0g/9XDTjVgPWb6/2OP42myyX1mk7VpdQyU7Gn99IbCOtIyu3/4+v5rM
tUmBgz0LqN378pmXZmik9vwk9c8PvU3+XufHD7lWSSWVz71kml9MlnW9N9fP
qKA19pTKOZVbKdj2WSBiSxkNOZD/5PvvlJLlpW6zJ75bQjOnbD8yaEU5OTcf
jS6q2EK2L27erni0kmwp49XIYBGlpc/asXBTFYUm7Ty6fcYmaltz5dbiwxq5
37t9O/hhHgVynzzZ+kU1acO3ed2X3BQ40FTv89SQrXXn7kd/lU3RtuU7T4z1
kN7w+7QVDUuo4OSk9vPvhF9PbN6cvDSZCroMa9z9Zfh1ZEZZ5MspXPty7eQV
TeHXaTvskxIz2f3rSduqa8Lr9PaBuym9sjlH9SScfi68TrdSz35Y6WZT8rCD
Ee/XkNZ2JLLelMfWfjFrZl+tJj27dmLm1De5n34m3dy9mkKPFaQuSy9ka8G8
5HW3qsjezdXpRm0x674J6c8friTflhP23a6trNiqJrS9VkFRv2kaY4ou5YTY
tmfi75WRN+3iI/Fcxs0Xygdfyyyl0mXjMs6OrmDfG94JX3y2lZyd/j5re24l
p+XWWj7svIXME0/dLthVxd7EDTHsLKJAt9DAA/s19oamrF9VuIkcSftWeqqr
2dtU9fiIunzSnyxa+mlquH4vbohJ27aegj1Hdm29Hq6b16u3xP5yDZlGzK0z
p3vYkX3uytqgi3wd73eyf+RhLftkVlb/hRTT77H2Iyc8HKv/PKTt/DTKObru
pX4nw3lxc1Fu7cxp3FH3zfE9vnCd1VW8+413AZv++VyX1Pnhz/fpuvlctovt
9woTz9yuYcu40w/VrFrNDY6Zl4ctCf/9p+Lj9zy5nq29p92ZfqiabdceL/rh
TjhPzufu2XRNY+eAXxx9ddeb3DE/bvVDnTS23ep1zvVCIXec/Xpc/M1K7uhF
nT9OLea4Lh9Ub2yq4JKVn19Pu7OFc2a9OstVVM5xf+n+0bMbSzh4KS5QZSvj
hj5X/bv/WcrO0dM7b/+shN37733/qrOcnSmp+oTxW9m+IMTDPBXsCEUfm1JX
zN7lC3b4/q+SQ91ysyKuF3LCwek92puqWImf1N+3chPbHz9V0/1PGuvb5g58
8a/5/Lsdz74WURT+HdmvT9g3Npen9U+NSKIa1i4+88l3N9ZyQ/y6t0edqGHb
qKysS0kr2f/L2h0jXgiv04jqlJ6xS7n5Ztahc6Xh1w77bOcLs7l5UPw/7n3+
n1weVZ0+fF44pzWfvE+tD95Pk8+Tyfi8PkW+n3KM71fuyN8n+3j8fcsGeT5q
6Ifn0z+Q5ye9Ds/vniy/jxqi8PvUSPn9pB3A7w9elfWhwFKsj+qU9SN7BtZP
GSvrSx37sL6hq7L+5OiF9dfSZH8o4Qz2R+kh+0cFLuyffkH2l37sjv0tXCL7
T64b2H/LX+V8kCMS58MaKeeHApdwftqT5XxRMArny9m56P75I3UUzp+rU9z9
80l2E85n0Cvnl2wbcX6tx+V8U+xRnO/CAXL+Se2tDL1//kP3pD5IK0N9eEdK
/VBhLurHapb6IvUt1FfwKak/imlF/TlSpD7D/QL1ae8p9Uv+66hf22Spb9Je
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
AhQ7TIo=
                 "]]}, {
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0]], 
                LineBox[CompressedData["
1:eJztxTENACAQBLADJ1hCAgnDT/jfCCaY2qVjnbl7kmrJGwAAAAAAfrhcMAIY

                 "]]}, {
                Hue[0.1421359549995791, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]], 
                LineBox[CompressedData["
1:eJxd2HtU1NUWB/BJMcwkFYarjpKU0ihIUk0XJXGPISEWpjiJcdO0wFGTABnj
IeJkIILi44KiGAbyGByYmVQSA22jqZiKkpHU5INb2ZSKolIYiVzv+R7XXff6
D8s1ax6/c/b+7s85T70TGx7dS6FQLH5EofjP36hryqyVH9lIIf85djy/KCLE
RgW9ksv/sKWRZcWr/EielTThd463x2+gnNq8HV8ttdDywi8TTGu3UoDXmvxB
LZWU337Y/dm0QuqI/WCM2r6b/P6qXjuvp5gyfYda+60yUci+FR1P/FlKIecT
Db5NpZS6M7Bwc7GJ3Dy2zx7zfTEFt377yP2bu8nhc2Hv1dcKqXDN3c81FyvJ
sO7adU32Vmq/O3f29Xct1OE9pLjqsY20aL9u3R6jlVRn3E/ctxqp8Y/p8y48
ZyN93zbnAQ0zyRQ7b0Jq4oPnchxIOP5qEj8duODwxFk2st987Y9egdkcaF81
MviElTK9ViSU3czl+d846dx+sJB2Y3lLXnwBxw2ZnqzbXEXmRbOzjk8t4qSk
2x/V3TJTyRbfl1aOKOFNO6MbzvfeTZEfFsSf/KyME8fseOXK2XJK/zYo7kCf
Cr7aPuONqnml1HpQe2F1PzOPT0nwmv55MTXtGbYjr76Sa6Y9VxF0rpA80uZc
NHpZuGNxXf9hN/PJNLaTO/2t7BZdoj3+w2bK+TDIqabTysasSzMVb2RSZFCv
+MRoGxuzfzicsW85KZNPGltW27hgz4W9I7NDufN6Rf8p4TZuzPdI0B5bwco1
ieWXz1vZ1P5V/pVfslj93u/hi5VWntU7WDn12D952vGrU0cOsHDXY91WU+Q2
VgSlhdaequSonJ72uopCnnH/xwHPvm7mL6NHJfeaVcyGvycG1u2s4JORabe8
y0rYPH6USwOXc+bMgs8XNpRxxJmu+6drSvnQ8bZhV/ab2Kzsu2X6+l08wOK4
GxO/m7XGl7yOvVzEnx0OCnnzdzM3evlE+xzewV11qecyJlexYl2fKJfzW1mp
Clv/+hsWVq9f4R17ZjOfyC49kOH3YB0G6b/QL8risE/3+y74xsoFj7p7zw9K
41+/XtucMsnGmhffCgt9712e2Dgu+8gyGyvK336xz9JoMh58OvGDeBurxh67
P/xyGmkszb+qJtq4+peAMbmzsihgfNDeZc1WVgcOr4xO3UxVU6e6Jk20suqC
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
fibldvhW+pkc8DMr4WNqbBd+Zv3/3T//Gz5AYHQ=
                 "]]}}}, {}}, {
            DisplayFunction -> Identity, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
             PlotRange -> {{-0.06155006693230467, 
              0.06155006693230441}, {-0.061468027195477594`, 
              0.061468027195478864`}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                RGBColor[0, 0, 1], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0.029138779332544763`], 
                PointBox[{-0.029138779332544763`, 0}]}, {
                RGBColor[0, 
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0], 
                PointBox[{0, 0}]}, {
                RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0.06155006693230439], 
                PointBox[{0.06155006693230439, 0}]}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=5, mid=(0.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{-0.06155006693230467, 
              0.06155006693230441}, {-0.061468027195477594`, 
              0.061468027195478864`}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.006944444444444445], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], 
                 LineBox[CompressedData["
1:eJxVmHlU1NcVx0ehRMEeA0KMlGNAJeoAVbEjYgBBQxWQ5ODhh4oGCTZWphEs
BgU3pgHiKcZICSTVqsGNeCZWxSma5QhYtzoSEWHU1IXVYYdhGbZhhv5+30sP
XP758Zm7vPvue7/77vu5xSWu/WiiTCaLnyCTSU/xrybdVlYs/SPMbbwuCIKu
oX8ET5VV83W1+HexbATPxqYWeuaA5Y+q2q6LZqo3Qkn+/q0O/D692yL9Xuob
bYCfF1lg1ayILujtc7RIz5b1wd3g2CNmSS8vSdED/UHTsPQUrFx78ayIBhcV
WBklP7JHF0zSM1BeTaztHoLe+sI++PvZa0h6Kr1T+xFPR8ygJHe6qxhAHAkH
B6TfbTfpByie89CzDc+CnpB0E35sZ7nBj/r4Lxgn9kv1EMZb14a4FPveNiHe
x8M9GO8/uYhLlTQF8zCeNpow/nqXbsS/KmQYfN4LedDOyMa8dOlBBvj9Wgu5
+t+FlMcNg8TezchzbIeLGXrOHq2wW7TEDPn5lGbpd9eyYJJ7VjYijvw1xAXv
6PH8Ioz0711pQP4+WUns5VuP+cxWEC8sr0Ue0tywLoJ9co2kn79jMvnLFl5i
va620zql1zyDv4Xlw9dlo39SPr66OMZSfCc+H2PJfiSesRC+itnLXd0521gz
btndYBrvX/bgjmm8XP3xdybm/3IOY92NfYzzGuKZv9Jl0cyfsjOcjzchmMtT
l/PxIv2ZfmBOALd/cyXTd9KEcn/RAmN5eRz335vE5/NJJh9v8TE+XtVl7s/z
Hpc31XH7m2Yuj53B1lP2uYJxaUsEWx+1ZwLXt83i67fwHNePKqH9viT7ub/0
28ynJJ+Y8tJfWp/fdxIfWFIjsS7LmvbnH31q/SW7o9Np/x4LqJPsS33mkfx+
WD3k5tH9/SimAfKqQOLo3a/Asatpfzvm6SX9luTR9+fctUbIy0f5yssmiVV+
IcRVk1skds0MIn+nl7ZK9qEZo+NdULZJLJ/kTvHs+qZdil9omUp86HEH4rPq
o/qgec0gsdbnCeXj9lkD8hGvoXqxbEUX/H+WRXy7ugv52LIJ+VF57++WWPGb
+WQ/37lH0rfda6D1TLzag3wevkL8Q0Qvxl+biHqlLmnt9cf6U30TlmcYIW9/
SnW23blPsk9+lAnWfXqpT9KP/dSL6mNpUD/y4fgQ9VQXWdGP+R/eTjwlZkCy
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
HA==
                  "]]}, {
                 Hue[0.9060679774997897, 0.6, 0.6], 
                 Directive[
                  PointSize[0.006944444444444445], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 
                   NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                 LineBox[CompressedData["
1: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
PnnfD++H69nuOmGi7886/v35/9fR4Nk=
                  "]]}, {
                 Hue[0.1421359549995791, 0.6, 0.6], 
                 Directive[
                  PointSize[0.006944444444444445], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], 
                 LineBox[CompressedData["
1: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
                  "]]}}}, {}}, {
              Thickness[Large], 
              GrayLevel[0], 
              CircleBox[{0, 0}, {1.5, 1}]}, {
              Thickness[Large], 
              RGBColor[0.6, 0.4, 0.2], 
              CircleBox[{0, 0}, {1.3747727085678447`, 0.800000000139355}]}}, {
            PlotRange -> {{-1.5, 1.5}, {-1, 1}}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
             PlotRange -> {{-5.912417222475597*^-10, 
              5.912417962624279*^-10}, {-4.263717712227333*^-10, 
              4.2637080902944524`*^-10}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                RGBColor[0, 0, 1], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 4.668567199495044*^-10], 
                
                PointBox[{-4.668567199495044*^-10, \
-1.6846490868971387`*^-10}]}, {
                RGBColor[0, 
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 4.1290400728162996`*^-10], 
                
                PointBox[{-4.1290400728162996`*^-10, \
-3.096780794760908*^-10}]}, {
                RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 3.4003644344693384`*^-10], 
                PointBox[{-3.4003644344693384`*^-10, 0}]}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=6, mid=(0.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{-5.912417222475597*^-10, 
              5.912417962624279*^-10}, {-4.263717712227333*^-10, 
              4.2637080902944524`*^-10}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
         TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.006944444444444445], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 0, 1]], 
                LineBox[CompressedData["
1:eJxVmHlU1NcVx0ehRMEeA0KMlGNAJeoAVbEjYgBBQxWQ5ODhh4oGCTZWphEs
BgU3pgHiKcZICSTVqsGNeCZWxSma5QhYtzoSEWHU1IXVYYdhGbZhhv5+30sP
XP758Zm7vPvue7/77vu5xSWu/WiiTCaLnyCTSU/xrybdVlYs/SPMbbwuCIKu
oX8ET5VV83W1+HexbATPxqYWeuaA5Y+q2q6LZqo3Qkn+/q0O/D692yL9Xuob
bYCfF1lg1ayILujtc7RIz5b1wd3g2CNmSS8vSdED/UHTsPQUrFx78ayIBhcV
WBklP7JHF0zSM1BeTaztHoLe+sI++PvZa0h6Kr1T+xFPR8ygJHe6qxhAHAkH
B6TfbTfpByie89CzDc+CnpB0E35sZ7nBj/r4Lxgn9kv1EMZb14a4FPveNiHe
x8M9GO8/uYhLlTQF8zCeNpow/nqXbsS/KmQYfN4LedDOyMa8dOlBBvj9Wgu5
+t+FlMcNg8TezchzbIeLGXrOHq2wW7TEDPn5lGbpd9eyYJJ7VjYijvw1xAXv
6PH8Ioz0711pQP4+WUns5VuP+cxWEC8sr0Ue0tywLoJ9co2kn79jMvnLFl5i
va620zql1zyDv4Xlw9dlo39SPr66OMZSfCc+H2PJfiSesRC+itnLXd0521gz
btndYBrvX/bgjmm8XP3xdybm/3IOY92NfYzzGuKZv9Jl0cyfsjOcjzchmMtT
l/PxIv2ZfmBOALd/cyXTd9KEcn/RAmN5eRz335vE5/NJJh9v8TE+XtVl7s/z
Hpc31XH7m2Yuj53B1lP2uYJxaUsEWx+1ZwLXt83i67fwHNePKqH9viT7ub/0
28ynJJ+Y8tJfWp/fdxIfWFIjsS7LmvbnH31q/SW7o9Np/x4LqJPsS33mkfx+
WD3k5tH9/SimAfKqQOLo3a/Asatpfzvm6SX9luTR9+fctUbIy0f5yssmiVV+
IcRVk1skds0MIn+nl7ZK9qEZo+NdULZJLJ/kTvHs+qZdil9omUp86HEH4rPq
o/qgec0gsdbnCeXj9lkD8hGvoXqxbEUX/H+WRXy7ugv52LIJ+VF57++WWPGb
+WQ/37lH0rfda6D1TLzag3wevkL8Q0Qvxl+biHqlLmnt9cf6U30TlmcYIW9/
SnW23blPsk9+lAnWfXqpT9KP/dSL6mNpUD/y4fgQ9VQXWdGP+R/eTjwlZkCy
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
HA==
                 "]]}, {
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[0.006944444444444445], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0]], 
                LineBox[CompressedData["
1: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
PnnfD++H69nuOmGi7886/v35/9fR4Nk=
                 "]]}, {
                Hue[0.1421359549995791, 0.6, 0.6], 
                Directive[
                 PointSize[0.006944444444444445], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]], 
                LineBox[CompressedData["
1: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
                 "]]}}}, {}}, {
            DisplayFunction -> Identity, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
             PlotRange -> {{-5.912417222475597*^-10, 
              5.912417962624279*^-10}, {-4.263717712227333*^-10, 
              4.2637080902944524`*^-10}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                RGBColor[0, 0, 1], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 4.668567199495044*^-10], 
                
                PointBox[{-4.668567199495044*^-10, \
-1.6846490868971387`*^-10}]}, {
                RGBColor[0, 
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 4.1290400728162996`*^-10], 
                
                PointBox[{-4.1290400728162996`*^-10, \
-3.096780794760908*^-10}]}, {
                RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 3.4003644344693384`*^-10], 
                PointBox[{-3.4003644344693384`*^-10, 0}]}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=6, mid=(0.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{-5.912417222475597*^-10, 
              5.912417962624279*^-10}, {-4.263717712227333*^-10, 
              4.2637080902944524`*^-10}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], 
                 LineBox[CompressedData["
1:eJxV2Hl8T1f6B/CjYkbspPalmGtfY4mtPNZwJRFCyK72VB0jWhSjVFvVFqNX
2yFapqWpsRPuNUPzhAqpbSiqHEWVFFNb1Vp0zvmc729er59/+srr9vv93nvP
8zyf9zn1Rv45YcwzQogXiwlh/uuXWJ1TanIGi9A/5/rN9CHlM1gN2HKmSkJb
luvub7h8NY2dEf3WRlXqxaJxXf4qPJW99YOmv/ckhtW9sbt/n5nE3siZ8eOr
Jejv6Tyub0Iii+4zK63ZmchOeKmd8Z8NYvl77riPjiWxf7nruz1KxbD31/XB
yL6pLF5Njl7SvCc7uVeeKSyXzs4757+qfCiS5cr5TdLr6PvwN3b48B+3u/kV
3l2xI0vfZ369Aw1+bEvqworq48Mz2M1e0/PLMr1INey95NC1NHYvDl5ad00M
udlbhmx7Tt9n74evFBUOotT+EdWebk9icXby86cHJJKbPzCiBOv7XNr1196D
k0gdORv7h/gEll+Mjui2P4Xkqd/ev/kglr03C3bvXZlG3pGC33LzerOf3Pfa
dyfTyVt6aGTDnh1ZDGl8bNLYDBIXSkZOer8Gu8/IsMSEDHJ65A788pcGJKoN
q335k3QSqyedTO74PPnpD9t8PTCN5JTrQy8NjyZ/zPlKH0xJIfXgQG6H5waQ
V5ifklI9iZy/Dbr7e3YCqfruhJ4xiSTHzTk4f08iec+evV2hVgJ5N2Ytjp2e
RKL7lk/Hd4kj0XbBtUbbU8hZln93S0EfkvN/GbpvYhr5ssaEow+7kHizdc3s
T/V91K1TJ65mY/JKnMstiMkgz7kwa+qM8uzVuPvtA6n/vtQh2/X1uqsVLXqV
1n+/8knOwLk9WD4sfvlc43RSN4qtTz3Sj8W84/XuHk4lb8Lpaamr4tmZPbpn
RvEUChosSOj/q66DV85sHX58GAXHHoYl7U1kr37KlUxXv/f+Vxvf6JjE7sAt
RUezEsjpenrXjf4p+r1fKtYsdwD522/dLHE3leXNwTmda/Ujyd8mf9Y2nd0a
O9961KkH+e+X/HdRWAbLnd8sKxnfjtw6Iu+jzAy9zpuW3/qtqn7vpR8/Ga6v
d1lS7Mniurre6p8/cT2dVcvKO28kRrHf4IUp9aqkcxDXdnH8kx6stu5cXuVc
KvvXO896561+7P6S8vntmBR2Z+wrzN00gGXpyW1PjU1ip1On16+008+1mA5t
ihrK7q6yOY+ODWFnQ/+NYXsHs/ds1mctGg9j8Wz72O+rDmLRblrmjshk9mft
zO4yLZZVdmTrG1dTONhwOf9wVjSL57/b2DUujWVERLcbbbqz2JYX1SI5nb29
Rcc6ftyWnVUFzw4po59r9MMrdbbruprc+7VBY3U/TJ27a21YdfJO7Bu+e5z+
O+rnda+W0v3gLE5uVUn3Q0LBoinvEcmuF9uUzNTPWZuvpB7rQ36rL0q+OyGN
vcc7YuTSGFIx70zL/VMqB1vGbWwxbyB54XseR3rJHLiHL14qP5j8Rq33xn85
jN2pBy8NHqXXbe3cyj+s1es45IsX6s7U6xrJCyNHDGa3zh8nrk5IJvHgdtzt
ooEs3yhscueyrsNRcW/3nqefO2XzShWZRs75ZcNKP4pm2WxRzWtt08l54+Lp
iI492K944uG4a7quBvw+/8cVen2mcPmUIRmk/NwJ7bs2YPle+FezsnR/dR8j
gkb3u/kl9lzp3TOD5KhfTorrTcmLnTH36P50csfGxzYb2EnXT99J14rr71tE
LV/P6kne2ZdbPH2QSn6vmfmF4bqeWl1fX2FtCrkNR//9yKg4cnP4xaBGMrnv
nvQ+6DSI/B7luFz8MJJhL6XU+miwru+O2Zt0/wXy5u3auv+CFmWXra48mKIi
lv+weccwcre2+jxj60D9vpbVl1OSSa7q0DkhPpbEnZzhk39NIW9I0/Zd7us+
zzzafWKbNFL7xh9s+WIPco7fz/+0uX4Pp9suzB7dgURW0wWXL6STH3dsbI05
jcipV27shjj93P/3r+f1v+k5TW6bQnOdvVr2ujuylfk8y8X284HMNN/PotB+
v6jQ2Pw++1n2950R7c39sbpi78+d19LcPwvH3r8XVsY8H8tw+3yyVwfz/Cxn
2udXlcqa98PqGft+/Fl55v2xXG7fn1PsZ/N+2elj369YP9m8f1YZ9v07U6LN
+ug+sOsjwqab9WP/Lbt+6l/5Zn117tj19fuUNOvPYk6WXf8eeaY+dM7Y+hC7
vjH1w6pbqH6uLjD1xaK1rS+n8iZTfyyP2/oT7fab+mT1NBb16e0oYeqXxRFb
v+rR56a+WVUK1Xf9A6b+Wb4Vqv9bB01/sPytFfpDvDDW9A97J3ajf0Rr3/QX
i2vzbX/12WX6j+XtHPSf2semP9n58Qf0p/PPItO/7J77K/rXGy1Nf7M3NtTf
98pf1f1PbnXb/zLmZzMfSLa388H5obKZH+RE2vkRyCtmvpCz7pSdL83yzPwh
v1xo/sgoM5/09amYT265WDO/SH44CfMruNrdzDcK6tv5pka+bOYfqU0d7fzr
mGbmo86RAsxHt9SXZn6SyuyE+elljjDzlcTRSMxXr4xj5i+pvIqYv3JaGTOf
9ZxeiPmsEoqZ+a37ZBfmt/LDzXwnr9+3mO/O3VNm/lOwfJed/6dvm3wgZ3oi
8sFPPGPyg8RrRcgPOe6ayRcKmm1FvgSnH5n8oTl/SEX+yGYLTT5RpbEK+eS2
USa/dB+MQX7J/xQ3+UbOrBPIN6feSpN/pCqWQP6J7l1MPpL700rkoxBPTH6S
2/Qe8lNVqWrylWWJ88hXsbmqyV8W6yKRv97PeSafWU6/g3yWBzeZ/GYVvxD5
7WUqk+/s/HE28j2Y3s/kv577ryP/VTn4gNXHCfCBf/ic8QOLB4fgB/nvB8YX
LJfchC/cuUONP9g5/Qr84WRNMD7R+bgTPvEPNzJ+0f17v7Xxi/91tPENi4GF
1jcC/mH1zVfwj1cLPmJ/+0P4yK0EP7GXp+An71X4it018fCVu/WB8Rd7zSvB
X34ifKbdtxk+cw98YfzGfvle1m97njO+Y+/rT+C7QC4z/stz7syH/4LvLxgf
knz7bevDqBTjRxJrfoIf1b5uxpekpq+DL+Uw+JOk2gp/OrXhU5KlZ8Cn7iP4
Va/fDPjVHwPfkhgaD986/4R/SRaLtv49BB+Ts2E9fOxVg5//N6fdA/a6jIef
Se60n1fj4WeSjULfvxF+1p8bZ39/FPxM8k4n3J/TBX4mWTV0/9bP5NWyzydW
wc/kvA8/k78Vfqbgk/P2/WTDz+R68HOeKAY/k3wPftb1AD/rvIKfWTWCn0n+
aNfHXQo/65yEn1mOgZ9JfGfX19sFP+uctesfHIOfSS6x9SHvwM/kvGjrRxbf
Z+qH1NC+tr7mwM/aw/Cz3ieEGz+TKgU/c7AQfma/GPys/QY/6z6An1ktgp9Z
joKf9VyGn9nLt/3hrYCfWdSFn3U9w88ctD9r++u510x/6f0M/MyiOfyscwR+
ZtEbftY5BD+z+gh+ZlUFfuaQn9mX59D/XkP4mVUR/EwhP7N8CX7WuRhm5gc7
V+FnEovhZ30dfiZnAfys6xN+JjUbfmb1LfxMqjb8zH7cVTvf4uFn9rrDz9rF
8DO7G+Fn8k/Bz3q/BD+TZ/3MYgH8TE7Z42a+csjPFPIz+9bPFPKz9hP8TDIC
ftZzH34mpxH8TP4W+Jn8/fAz+VdTbD58AD+TVwZ+JicOfia1An6mSpeRL7r+
4GdaXRV+pqAs/EyqJfys6xd+1v8f8ouCD+FnEu3gZ3IqRtj8y0H+kRP+E/JR
+chHEvnwM8mXkZ8ka76BfHWPIF9JTYWf2Y+An/U+En5mNRh+1vMffmYRDT+T
/wR+5pCfyVsPP7NbC34mtxv8zL4LP+vvh5/Z3QY/kEqBnznkZ70/hJ/ZeQh/
kPsa/KxzFH7W8xp+Zq8QfiG/Cfys6x++IT8cfmZ3JPxD8g34We8DthkfkfMO
/Kzr9CXjpzxRBn5mv8Ud4yu9b4Kf2fsY/tL7kL7WZyfhM3a+h5/1nIPf9D4I
fma3M3zHchVb/82G/3Q9ws8srJ91fcPPHGTBj9pf8LN2A3yp6xV+1n0Hf7LK
gZ9ZnoRP2Utrav06An7loAB+ZnUGvtX7JfhZ74/gX+3UY9bH1eDj/51ruH3g
Zw75mbw/2etqKPxM6k37eTURfqaQn/Vcgp/J+bP9ffEC/Ezyib0/sbSl9X9f
e//yfmnsD9TNbDxfyM8UzLLP71eHn0lYP7Mj4WdSc0Pv7/F/sD9xetn36/8D
fibR375/MQl+pmBJaH0qws+63+z6uQfgZxKt7fqqaPiZ/A0Tsf5u5zy7v4qC
n8kvgJ/JffoU9aPOwc/kdbP15YXBz+Tds/Xntd5v93dlbX26efAzed/Y+vUe
w8/kRdj6DmrDz3R9ga3/4Hv4mZww2x9BOvxMUWd22/5p6tv96U/ws74OP5O4
kWP7bwP8TKIIfqbgepHd/x6FnynkZxKZtr/l8grGz+w0CfV/KvzMopudD8FJ
+JlVEzs/vFj4mb3F8LN2KfzMopadP3IU/KzzAH4m53YM9v/iL/AzeQ/gZw4a
2fmmpsLPLHz4WfsTfma/coGdj7d22fOHPvCz/j34mcXf4Wdy68PP2j3wM7mT
4Wdd7/AzyRj4Wecp/Kz7F35mYf3MbhH8zDIXftb7FPiZfetn3V/ws65D+FnP
LfiZgw7wM4sT8DPLsvAzi2rwM0sJP7MzXdnznyz4mb1L8DOrOfAzO+5Ke35U
An7Wc6mLPV+6Aj/r/nyM8ye3OfzMsib8TKo4/MxqHvxMXg78zEEJxvmWMxt+
Zvci/EzuIPiZnUHws3YV/MzOFPiZ1GT4mUUFe74ml8LP2pvwM7lF8DP7u+Fn
cufAzyzeHGrP7w7Bz+wlwc86J+Bnva+En8lfCD+Tuw9+Jr8e/Ezuvb04P3S/
g5/1+tvzRbUNfibPseePjq+sn0bZ88nVm+Otr/bAzxQVCT9TyM8kJPys89We
f3rV4WfdX/Cznl/wMwVyBc5PnVvwM4lb8DO7i+BnUnXgZ/ay4Wddr/Alu5nw
M6kB9vzWPw8/U9DAnu+6ZeBnnb/j7PlvQ/iZ3Gh7PixHwc/6fdjzYyHgZ3IO
h86X58HP2hP///z5v4Zjc1g=
                  "]]}, {
                 Hue[0.9060679774997897, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 
                   NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                 LineBox[CompressedData["
1:eJztxTENACAQBLADJ1hCAgnDT/jfCCaY2qVjnbl7kmrJGwAAAAAAfrhcMAIY

                  "]]}, {
                 Hue[0.1421359549995791, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], 
                 LineBox[CompressedData["
1:eJxVmHtYVmXWxreMWX54QNTJQk2YrZaKeUjJAyysUdlSpqAoMIMHEPCwEeQl
SKHe72uaxLGkxyyR0lCsjFBL29vzQs0vSW0Ujcyt84mhoxEqqXjIw2zW/c5c
18c/Xvvavu/7PM+6133/nhU8c37MLD9N02a30LTmf9WKvacOPpRDmu/Peb/2
rTV7PaQfeS+zaOM4UuMvrm1xM5sS+22bER+XQGpxUENe+QLS5x5fdTQ2mfTn
P8nyv5hJQ1v/nJF0L52MhH3bTmeZFHisz5/Tf5dBem1QfXhCOvWw11X1/EMW
aVHbgw+XzyTTb9WNljXu99RWNPZ7LJ5URFB+boCHtG27DtQvj6LCE39rdf+Q
uw7jys+jUx7hmO/O7VzqrtOonrar5uVobri78uxfd7vv2xZs2jM+gUuCi9qv
cdepNmd89l2XZM618jas3rGA1IDWmYuXpbO2Obj+0YAsMp+Yd+sJ02Trv/uk
tX0kg8z097bWH8pk5YnYfTBqNjktF50uLFjAas2ZrNQWKeRUvdl0bH82OzOX
3Xj04z+R821u5uViD5sP7Xm8e+UEMu/99tT/3vOwltkhNW3qIGo4dVj9dMV9
v7P4mddeimAz7+P90dketl+bVz4vP5a1+EEU9VY2m/ecl0ZcSGJ9WFO/XqMX
sP110Z3iwynsjPm5rmFdJuu9+5du/WI2m6MG/75vuskqcePFf7bJYC2qqXim
32wOfOf85KcvZLI5uGPvsU+ncFlA74Vtshaw9djyQyM7JLG345++/q00m1Wn
vPAhE2M5JuPb6SdzPKzyk+ueWx/Jzk+zy6fWu+tMvPV/cbt6knl7z++a/HJY
u5rT66dno6lk8brFR/a47xc93K5N/6kUmRY7eFGIh52rL4T8s8cMav1ql51X
B2WzvbvDBytOziJv5bF3jaYsNqzlZff6zSFvQ8HoD7Pdcx1+9MzM9hnU+rna
8LWzTLb3d6/auT2TvDfD7BN5s1n78+tfbent6uCtjTX7Bs1ie/7VtPoXsyls
6enIy+uns4o6+ftfnnLr/F//6Dvw2ynsdG98Zt4OVyfvNi2u9X+B1cagulEP
PGReK01et2wAG3P3Rsbc9pBVO+WVY2eHkrFlTvdXP/OQWnJw0qKT48lctv7A
0s4eMm7nPPPrD1NJ+67rsM4R2VS4L3/S+svTSb+4MD/1yQUUs4+GJg2YRc7z
NdHzf8ykpoF/3GTrrj78Sl6IrsigxE2Ns7ZUznP749eWZ6LnUt3Hr/T++535
pNXEXvEvSaMRHen0X2dlkZP/l7CjnySTdn3GiIIVC0j7S23f+vtJlHtnSI8T
S7JJCwjvdC4pjqoGxPjXPO8h5+3gznWdoqkspPBWIbv7Slx9rEXWIFLz5j5e
cc99HjFxWOqYgVwS/+QT5ffdfcw5MeqD6HFcWHpz8Ir97uf7hHDHg5NZr8i4
/eh49xwGrpw+NTiJK9O7rMz8KJvsiTlTb7ZNZm3c/OAZu91zzz6w7dSxVG4I
6JCqf+r2p/WN6ho7hxvGf5U6IyWTtF6fdUkvdPUXmtoy/BeTjB+OpX0+NJOd
UPNB+v45pNqN2Twq36379NdDXp+SRk6/EXd2K1fPQ5L+/uyXyWT8FNe9ITeb
9S9qd3TbOY2coxHruvXxsHXkeMd3vplCxsDTH/b41H0eluA/MvwlCutctDKq
0X0+HzTzyKRwspd9/07aQzlsOlezBt5pz/aXxSGH6zxsrLqkl77/HDufRp4O
L/Kw/vAPV4oWTmTdvtRw6xFXt9t7NqbnxbO9qm2PDROyWduXd3Bg8XS2z3YY
kjJ7AWuHLvw4MDqF9eHndq2bnMWW5SlYW5XG6nKn2RFdMtn6Q/d2BW3muv0X
cmav23/O3g/iJ7n9Zx4Y49c2cQ57xzesGTAjk7Xrhy7VtkvjsFe3+419N4u1
mgPBo5Ymc+XrHftWfuD2Y/hruf3taXxz0MI7E/Ky3eekK3H+U7nhV/82nXq6
+xjXLbhr7wlcduqcvbTU9ZGjnW53GR7Jkdemzd3wi/vs+yvRuscdcM9BTerc
/J7+/d5YIp8n/Rg+rzzy/RR4Fd+vF8jvU1Vf/L7eKOsj41Wsz2h3uHn9VJeD
9Rv/kP3Ri6OxP3Oy7J+a1mP/zm05Hwpth/Oxn5fzo6DlOD/jvJwv6eW+810r
509qDc5f3yn1ITMT9dE/l/qR8XUN6of6kvG4r75FUn/SW5+X+psdRR9kPtxN
9KGeFv2QVQr9OIdFX2R0PSH6UqdEf1R1HPrTe4k+KTce+rRbin4pcJFPv4dE
3xRK0LfWTvRPgRHQv1kq/UGtp6A/7HjpH/I+hv4xQ6W/KDLO11+332/uP0qc
i/4zrwQ39ydpW9CfeuPx5v6lwtXoX63HhOb+JpWI/rZD1zT3Pwemof81LaTZ
H7jqCfiDPVn8g51+8A/re/EXDr0Bf3FWiv9w2WX4j3Nd/IkDW8GfzDTxLza9
8C+ji/gbWwr+Zhjif2y1gv/pV8Uf3brCH43j4p9slME/7ffEX9nZDH81t4v/
stkX/mvPEX9mqyJO/DmsXPybnaa18O8g8XfW7sLfnZHi/6yb8H8jWfKB7W3I
By1W8oP1cuSHuVXyha1uz0q+WN0kf1ibjvyxiiWfOOwO8sleL/nl9jXyS/9G
8o3VYuSbMU7yjytSkX/m3yQfWb3ly8egpub85MI7vvwckNKcr+TUIV+d4ZK/
pKUifzWv5DPpHZDP9ouS31TVCvltJEm+k/MG8l2fIvlPDVHIfydO+IDqAsAH
zh+FHyjoY/CDkSR8Qa5jCV+oAuEP0iPAH/pZ4RPSTqwEn4BfSPMECr+oKuEb
Mgh84xwS/qHAj8A/mp/wEem7wEdGsvATVS4BP6lHhK8opgR8ZfQR/qLAbeAv
/Q3hM7q5B3xmnclv5jeq7Al+M8uF76hMKxa+07SLzfxHhT7+0x/b3cyH7PXx
oflA+JFzh4Ef7ReFL7nhZrHwpdUg/MlhFeBPM1f41M0J8KkdK/zK2s1Lwq/6
m8K3rMaCb50Y4V+26m3h36oy4WN2+oOPA5Xw83982lmN99YX8p7Ncfi88aTw
M/v4mZ058v2sj8LvO22En1mb6VvfUVkfO6ewfnubrJ/Vs9if3UL4mbUT2H8l
yf7Z2CH8zGU1cj6s9MtyftVH5fzYOIfzrX4g/MxWa+FnMsHPbG5CfcrAz2yN
Rv2CKqR+bAWjvt7/kfqyNg/1fzlH6s+OP/RR9qHog+1q6MeaJPphE/zs+qro
i+270J+aJPzM2kno01gt/EyGF/pVSvRLegz0bd0VfZMDfqaKg6J/UmPRHyk9
pT/IHIv+KUmV/iHVH/2lCqW/SA1H/3k7SP+RNh392bq79CcZfujfyLnSv2Qs
TEZ/g5/J+FX4mcNuSf+7eoM/+PiZzNfgH2qW+If7/+EvofniL2Qz/Cdoj/gP
GbvgT2X14k9khcG/LPAzaeBndsDPZCfA/4x3xP9IZfr8sUj8kXz8zBr4mfQQ
+KvyiL+Sj5/Zx8/k42dXJ8LPbHwF/zbeFv9mezn8Xfd/udnfXZ3C/51vxf/Z
Bj+zsVPyweUn5Id6UvKDneurJF/MjyRf2Jjgy58yyR/WHeRTA/iZVR7yy3tN
8ou1IuSb9zfJN9Y7I//CBkv+sZYu/MxlyEc2YoSf2Qt+Zi1A+Jkiwc+sXhB+
ptx1kr9sRAg/U+AGyWd2hgo/U2iy5Dfr4Gfy8TM7ech/vZ3kPzuV4IPfxgof
sAI/U8VTwg9sfw++0PsJX7AKAH8kgp9Z9QefVA0VPmHtDPhF2yr8wno1+EY/
IPzMziAf/wwR/mG9E/jI2iD8zObb4CfrSEMzP5G+CXzlZApfkbbBx193hL9I
bQGfNZQIn5H6EPxWVyX8Rs5p8J1zUPiOjBHgP3OH8B/5+Jkqwc+kE/gxpVL4
kZx94MuwCcKXZDUKP5N6RfiT1EnwaWWh8CmpkeDXiiHCr+4z+NbbKHxLDviZ
7B+Ff0mdEH4m+4bw8X/mGqEthJ/JiRN+Zm8j3uuF4O+Y4/i8ngM+9/EzWeBn
9vbD7zvXwfdqIdZn+Qs/s52B9WtncT/QorE/NQn3Bw38TPYt3C/MtjgfbTTu
H8Zq3/ldwP3EBj+TCX5muwznb+7A/Ubloz4O6sdaJeoX6LsfOfcvSn0Tffcn
K/SC1F+DPlze6gp9gJ9ZbYV+1BHcz1SA8DMrB/c352voz+mJ+50zBfo0wM/s
LIR+jUO++2EE9G22xf1RHwH9O2txv6yKRX+Y4Gc2H0X/mANxP209Bf2l3xB+
ZnMe+s9uFH7m3C/Rn8bPws+srUX/mv7Cz1ydgP728TPZM9H/qqXwM9V1hT+o
qbh/Jz4N/3CqcT+vu+vzlxW4vxdegv9Y13C/b9kG/mTMwf1fKZ9/dcR8oHKZ
z9/GYn4QqsH/zEbMF3I/gT/qNZg/aJvhn/pKzCfMo8LP7FiYX+ht4b/KN98w
PouDP3+O+YdxQfiZFPjZ5SL4uxmB+Yk3Af6vUjBfiQQ/kwF+ppgvkB/6dsxn
KgKFn8npjvlNZQLyxyzFfGdRE/LJLMH8J/AI8suuwnzIfBP5po3E/Ch0LvLP
egPzpVDws8trws/uPQn5qT8l/Mwl4GfSR2N+VZaG/DVzMd8qbI98VlGYf9ng
Z9LTMB/zLkG+m+Bn1g3kvwl+ZjMQfGCPwfzN2Ah+MKf75nNHwBcqH/M79Rz4
I/E85nuGH/jEC35hu0D4mW3ffFCLAt84RzA/NEvAP+rBQpkvGgw+cqZh/mgU
gZ/M9phPGivAV0YI5peGDf5SizHftPeCz/QDws9s9gK/6aWYj4a1EH5mM/GC
zE9T/s1/gcLPZFeDD51WG2X+GhkOfrTjMZ9tuC/8zHoj5reB4GfWPJjvVm8B
n9rjMf+tuib8zPoy33x4HPhWm4j5sXPeBv+uxXzZGQk+Nt7+//PnfwFg78bR

                  "]]}}}, {}}, {
              Thickness[Large], 
              GrayLevel[0], 
              CircleBox[{0, 0}, {1.5, 1}]}, {
              Thickness[Large], 
              RGBColor[0.6, 0.4, 0.2], 
              
              CircleBox[{0, 0}, {1.4061428996297716`, 
               0.8527824190139134}]}}, {
            PlotRange -> {{-1.5, 1.5}, {-1, 1}}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
             PlotRange -> {{-0.005132469737962457, 
              0.0051324697379632345`}, {-0.005132456631940975, 
              0.0051324566319411015`}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                RGBColor[0, 0, 1], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0.0018582443249787035`], 
                PointBox[{-0.0018582443249787035`, 0}]}, {
                RGBColor[0, 
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0], 
                PointBox[{0, 0}]}, {
                RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0.0051324697379632345`], 
                PointBox[{0.0051324697379632345`, 0}]}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=7, mid=(0.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{-0.005132469737962457, 
              0.0051324697379632345`}, {-0.005132456631940975, 
              0.0051324566319411015`}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
         TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 0, 1]], 
                LineBox[CompressedData["
1:eJxV2Hl8T1f6B/CjYkbspPalmGtfY4mtPNZwJRFCyK72VB0jWhSjVFvVFqNX
2yFapqWpsRPuNUPzhAqpbSiqHEWVFFNb1Vp0zvmc729er59/+srr9vv93nvP
8zyf9zn1Rv45YcwzQogXiwlh/uuXWJ1TanIGi9A/5/rN9CHlM1gN2HKmSkJb
luvub7h8NY2dEf3WRlXqxaJxXf4qPJW99YOmv/ckhtW9sbt/n5nE3siZ8eOr
Jejv6Tyub0Iii+4zK63ZmchOeKmd8Z8NYvl77riPjiWxf7nruz1KxbD31/XB
yL6pLF5Njl7SvCc7uVeeKSyXzs4757+qfCiS5cr5TdLr6PvwN3b48B+3u/kV
3l2xI0vfZ369Aw1+bEvqworq48Mz2M1e0/PLMr1INey95NC1NHYvDl5ad00M
udlbhmx7Tt9n74evFBUOotT+EdWebk9icXby86cHJJKbPzCiBOv7XNr1196D
k0gdORv7h/gEll+Mjui2P4Xkqd/ev/kglr03C3bvXZlG3pGC33LzerOf3Pfa
dyfTyVt6aGTDnh1ZDGl8bNLYDBIXSkZOer8Gu8/IsMSEDHJ65A788pcGJKoN
q335k3QSqyedTO74PPnpD9t8PTCN5JTrQy8NjyZ/zPlKH0xJIfXgQG6H5waQ
V5ifklI9iZy/Dbr7e3YCqfruhJ4xiSTHzTk4f08iec+evV2hVgJ5N2Ytjp2e
RKL7lk/Hd4kj0XbBtUbbU8hZln93S0EfkvN/GbpvYhr5ssaEow+7kHizdc3s
T/V91K1TJ65mY/JKnMstiMkgz7kwa+qM8uzVuPvtA6n/vtQh2/X1uqsVLXqV
1n+/8knOwLk9WD4sfvlc43RSN4qtTz3Sj8W84/XuHk4lb8Lpaamr4tmZPbpn
RvEUChosSOj/q66DV85sHX58GAXHHoYl7U1kr37KlUxXv/f+Vxvf6JjE7sAt
RUezEsjpenrXjf4p+r1fKtYsdwD522/dLHE3leXNwTmda/Ujyd8mf9Y2nd0a
O9961KkH+e+X/HdRWAbLnd8sKxnfjtw6Iu+jzAy9zpuW3/qtqn7vpR8/Ga6v
d1lS7Mniurre6p8/cT2dVcvKO28kRrHf4IUp9aqkcxDXdnH8kx6stu5cXuVc
KvvXO896561+7P6S8vntmBR2Z+wrzN00gGXpyW1PjU1ip1On16+008+1mA5t
ihrK7q6yOY+ODWFnQ/+NYXsHs/ds1mctGg9j8Wz72O+rDmLRblrmjshk9mft
zO4yLZZVdmTrG1dTONhwOf9wVjSL57/b2DUujWVERLcbbbqz2JYX1SI5nb29
Rcc6ftyWnVUFzw4po59r9MMrdbbruprc+7VBY3U/TJ27a21YdfJO7Bu+e5z+
O+rnda+W0v3gLE5uVUn3Q0LBoinvEcmuF9uUzNTPWZuvpB7rQ36rL0q+OyGN
vcc7YuTSGFIx70zL/VMqB1vGbWwxbyB54XseR3rJHLiHL14qP5j8Rq33xn85
jN2pBy8NHqXXbe3cyj+s1es45IsX6s7U6xrJCyNHDGa3zh8nrk5IJvHgdtzt
ooEs3yhscueyrsNRcW/3nqefO2XzShWZRs75ZcNKP4pm2WxRzWtt08l54+Lp
iI492K944uG4a7quBvw+/8cVen2mcPmUIRmk/NwJ7bs2YPle+FezsnR/dR8j
gkb3u/kl9lzp3TOD5KhfTorrTcmLnTH36P50csfGxzYb2EnXT99J14rr71tE
LV/P6kne2ZdbPH2QSn6vmfmF4bqeWl1fX2FtCrkNR//9yKg4cnP4xaBGMrnv
nvQ+6DSI/B7luFz8MJJhL6XU+miwru+O2Zt0/wXy5u3auv+CFmWXra48mKIi
lv+weccwcre2+jxj60D9vpbVl1OSSa7q0DkhPpbEnZzhk39NIW9I0/Zd7us+
zzzafWKbNFL7xh9s+WIPco7fz/+0uX4Pp9suzB7dgURW0wWXL6STH3dsbI05
jcipV27shjj93P/3r+f1v+k5TW6bQnOdvVr2ujuylfk8y8X284HMNN/PotB+
v6jQ2Pw++1n2950R7c39sbpi78+d19LcPwvH3r8XVsY8H8tw+3yyVwfz/Cxn
2udXlcqa98PqGft+/Fl55v2xXG7fn1PsZ/N+2elj369YP9m8f1YZ9v07U6LN
+ug+sOsjwqab9WP/Lbt+6l/5Zn117tj19fuUNOvPYk6WXf8eeaY+dM7Y+hC7
vjH1w6pbqH6uLjD1xaK1rS+n8iZTfyyP2/oT7fab+mT1NBb16e0oYeqXxRFb
v+rR56a+WVUK1Xf9A6b+Wb4Vqv9bB01/sPytFfpDvDDW9A97J3ajf0Rr3/QX
i2vzbX/12WX6j+XtHPSf2semP9n58Qf0p/PPItO/7J77K/rXGy1Nf7M3NtTf
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
h86X58HP2hP///z5v4Zjc1g=
                 "]]}, {
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0]], 
                LineBox[CompressedData["
1:eJztxTENACAQBLADJ1hCAgnDT/jfCCaY2qVjnbl7kmrJGwAAAAAAfrhcMAIY

                 "]]}, {
                Hue[0.1421359549995791, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]], 
                LineBox[CompressedData["
1:eJxVmHtYVmXWxreMWX54QNTJQk2YrZaKeUjJAyysUdlSpqAoMIMHEPCwEeQl
SKHe72uaxLGkxyyR0lCsjFBL29vzQs0vSW0Ujcyt84mhoxEqqXjIw2zW/c5c
18c/Xvvavu/7PM+6133/nhU8c37MLD9N02a30LTmf9WKvacOPpRDmu/Peb/2
rTV7PaQfeS+zaOM4UuMvrm1xM5sS+22bER+XQGpxUENe+QLS5x5fdTQ2mfTn
P8nyv5hJQ1v/nJF0L52MhH3bTmeZFHisz5/Tf5dBem1QfXhCOvWw11X1/EMW
aVHbgw+XzyTTb9WNljXu99RWNPZ7LJ5URFB+boCHtG27DtQvj6LCE39rdf+Q
uw7jys+jUx7hmO/O7VzqrtOonrar5uVobri78uxfd7vv2xZs2jM+gUuCi9qv
cdepNmd89l2XZM618jas3rGA1IDWmYuXpbO2Obj+0YAsMp+Yd+sJ02Trv/uk
tX0kg8z097bWH8pk5YnYfTBqNjktF50uLFjAas2ZrNQWKeRUvdl0bH82OzOX
3Xj04z+R821u5uViD5sP7Xm8e+UEMu/99tT/3vOwltkhNW3qIGo4dVj9dMV9
v7P4mddeimAz7+P90dketl+bVz4vP5a1+EEU9VY2m/ecl0ZcSGJ9WFO/XqMX
sP110Z3iwynsjPm5rmFdJuu9+5du/WI2m6MG/75vuskqcePFf7bJYC2qqXim
32wOfOf85KcvZLI5uGPvsU+ncFlA74Vtshaw9djyQyM7JLG345++/q00m1Wn
vPAhE2M5JuPb6SdzPKzyk+ueWx/Jzk+zy6fWu+tMvPV/cbt6knl7z++a/HJY
u5rT66dno6lk8brFR/a47xc93K5N/6kUmRY7eFGIh52rL4T8s8cMav1ql51X
B2WzvbvDBytOziJv5bF3jaYsNqzlZff6zSFvQ8HoD7Pdcx1+9MzM9hnU+rna
8LWzTLb3d6/auT2TvDfD7BN5s1n78+tfbent6uCtjTX7Bs1ie/7VtPoXsyls
6enIy+uns4o6+ftfnnLr/F//6Dvw2ynsdG98Zt4OVyfvNi2u9X+B1cagulEP
PGReK01et2wAG3P3Rsbc9pBVO+WVY2eHkrFlTvdXP/OQWnJw0qKT48lctv7A
0s4eMm7nPPPrD1NJ+67rsM4R2VS4L3/S+svTSb+4MD/1yQUUs4+GJg2YRc7z
NdHzf8ykpoF/3GTrrj78Sl6IrsigxE2Ns7ZUznP749eWZ6LnUt3Hr/T++535
pNXEXvEvSaMRHen0X2dlkZP/l7CjnySTdn3GiIIVC0j7S23f+vtJlHtnSI8T
S7JJCwjvdC4pjqoGxPjXPO8h5+3gznWdoqkspPBWIbv7Slx9rEXWIFLz5j5e
cc99HjFxWOqYgVwS/+QT5ffdfcw5MeqD6HFcWHpz8Ir97uf7hHDHg5NZr8i4
/eh49xwGrpw+NTiJK9O7rMz8KJvsiTlTb7ZNZm3c/OAZu91zzz6w7dSxVG4I
6JCqf+r2p/WN6ho7hxvGf5U6IyWTtF6fdUkvdPUXmtoy/BeTjB+OpX0+NJOd
UPNB+v45pNqN2Twq36379NdDXp+SRk6/EXd2K1fPQ5L+/uyXyWT8FNe9ITeb
9S9qd3TbOY2coxHruvXxsHXkeMd3vplCxsDTH/b41H0eluA/MvwlCutctDKq
0X0+HzTzyKRwspd9/07aQzlsOlezBt5pz/aXxSGH6zxsrLqkl77/HDufRp4O
L/Kw/vAPV4oWTmTdvtRw6xFXt9t7NqbnxbO9qm2PDROyWduXd3Bg8XS2z3YY
kjJ7AWuHLvw4MDqF9eHndq2bnMWW5SlYW5XG6nKn2RFdMtn6Q/d2BW3muv0X
cmav23/O3g/iJ7n9Zx4Y49c2cQ57xzesGTAjk7Xrhy7VtkvjsFe3+419N4u1
mgPBo5Ymc+XrHftWfuD2Y/hruf3taXxz0MI7E/Ky3eekK3H+U7nhV/82nXq6
+xjXLbhr7wlcduqcvbTU9ZGjnW53GR7Jkdemzd3wi/vs+yvRuscdcM9BTerc
/J7+/d5YIp8n/Rg+rzzy/RR4Fd+vF8jvU1Vf/L7eKOsj41Wsz2h3uHn9VJeD
9Rv/kP3Ri6OxP3Oy7J+a1mP/zm05Hwpth/Oxn5fzo6DlOD/jvJwv6eW+810r
509qDc5f3yn1ITMT9dE/l/qR8XUN6of6kvG4r75FUn/SW5+X+psdRR9kPtxN
9KGeFv2QVQr9OIdFX2R0PSH6UqdEf1R1HPrTe4k+KTce+rRbin4pcJFPv4dE
3xRK0LfWTvRPgRHQv1kq/UGtp6A/7HjpH/I+hv4xQ6W/KDLO11+332/uP0qc
i/4zrwQ39ydpW9CfeuPx5v6lwtXoX63HhOb+JpWI/rZD1zT3Pwemof81LaTZ
H7jqCfiDPVn8g51+8A/re/EXDr0Bf3FWiv9w2WX4j3Nd/IkDW8GfzDTxLza9
8C+ji/gbWwr+Zhjif2y1gv/pV8Uf3brCH43j4p9slME/7ffEX9nZDH81t4v/
stkX/mvPEX9mqyJO/DmsXPybnaa18O8g8XfW7sLfnZHi/6yb8H8jWfKB7W3I
By1W8oP1cuSHuVXyha1uz0q+WN0kf1ibjvyxiiWfOOwO8sleL/nl9jXyS/9G
8o3VYuSbMU7yjytSkX/m3yQfWb3ly8egpub85MI7vvwckNKcr+TUIV+d4ZK/
pKUifzWv5DPpHZDP9ouS31TVCvltJEm+k/MG8l2fIvlPDVHIfydO+IDqAsAH
zh+FHyjoY/CDkSR8Qa5jCV+oAuEP0iPAH/pZ4RPSTqwEn4BfSPMECr+oKuEb
Mgh84xwS/qHAj8A/mp/wEem7wEdGsvATVS4BP6lHhK8opgR8ZfQR/qLAbeAv
/Q3hM7q5B3xmnclv5jeq7Al+M8uF76hMKxa+07SLzfxHhT7+0x/b3cyH7PXx
oflA+JFzh4Ef7ReFL7nhZrHwpdUg/MlhFeBPM1f41M0J8KkdK/zK2s1Lwq/6
m8K3rMaCb50Y4V+26m3h36oy4WN2+oOPA5Xw83982lmN99YX8p7Ncfi88aTw
M/v4mZ058v2sj8LvO22En1mb6VvfUVkfO6ewfnubrJ/Vs9if3UL4mbUT2H8l
yf7Z2CH8zGU1cj6s9MtyftVH5fzYOIfzrX4g/MxWa+FnMsHPbG5CfcrAz2yN
Rv2CKqR+bAWjvt7/kfqyNg/1fzlH6s+OP/RR9qHog+1q6MeaJPphE/zs+qro
i+270J+aJPzM2kno01gt/EyGF/pVSvRLegz0bd0VfZMDfqaKg6J/UmPRHyk9
pT/IHIv+KUmV/iHVH/2lCqW/SA1H/3k7SP+RNh392bq79CcZfujfyLnSv2Qs
TEZ/g5/J+FX4mcNuSf+7eoM/+PiZzNfgH2qW+If7/+EvofniL2Qz/Cdoj/gP
GbvgT2X14k9khcG/LPAzaeBndsDPZCfA/4x3xP9IZfr8sUj8kXz8zBr4mfQQ
+KvyiL+Sj5/Zx8/k42dXJ8LPbHwF/zbeFv9mezn8Xfd/udnfXZ3C/51vxf/Z
Bj+zsVPyweUn5Id6UvKDneurJF/MjyRf2Jjgy58yyR/WHeRTA/iZVR7yy3tN
8ou1IuSb9zfJN9Y7I//CBkv+sZYu/MxlyEc2YoSf2Qt+Zi1A+Jkiwc+sXhB+
ptx1kr9sRAg/U+AGyWd2hgo/U2iy5Dfr4Gfy8TM7ech/vZ3kPzuV4IPfxgof
sAI/U8VTwg9sfw++0PsJX7AKAH8kgp9Z9QefVA0VPmHtDPhF2yr8wno1+EY/
IPzMziAf/wwR/mG9E/jI2iD8zObb4CfrSEMzP5G+CXzlZApfkbbBx193hL9I
bQGfNZQIn5H6EPxWVyX8Rs5p8J1zUPiOjBHgP3OH8B/5+Jkqwc+kE/gxpVL4
kZx94MuwCcKXZDUKP5N6RfiT1EnwaWWh8CmpkeDXiiHCr+4z+NbbKHxLDviZ
7B+Ff0mdEH4m+4bw8X/mGqEthJ/JiRN+Zm8j3uuF4O+Y4/i8ngM+9/EzWeBn
9vbD7zvXwfdqIdZn+Qs/s52B9WtncT/QorE/NQn3Bw38TPYt3C/MtjgfbTTu
H8Zq3/ldwP3EBj+TCX5muwznb+7A/Ubloz4O6sdaJeoX6LsfOfcvSn0Tffcn
K/SC1F+DPlze6gp9gJ9ZbYV+1BHcz1SA8DMrB/c352voz+mJ+50zBfo0wM/s
LIR+jUO++2EE9G22xf1RHwH9O2txv6yKRX+Y4Gc2H0X/mANxP209Bf2l3xB+
ZnMe+s9uFH7m3C/Rn8bPws+srUX/mv7Cz1ydgP728TPZM9H/qqXwM9V1hT+o
qbh/Jz4N/3CqcT+vu+vzlxW4vxdegv9Y13C/b9kG/mTMwf1fKZ9/dcR8oHKZ
z9/GYn4QqsH/zEbMF3I/gT/qNZg/aJvhn/pKzCfMo8LP7FiYX+ht4b/KN98w
PouDP3+O+YdxQfiZFPjZ5SL4uxmB+Yk3Af6vUjBfiQQ/kwF+ppgvkB/6dsxn
KgKFn8npjvlNZQLyxyzFfGdRE/LJLMH8J/AI8suuwnzIfBP5po3E/Ch0LvLP
egPzpVDws8trws/uPQn5qT8l/Mwl4GfSR2N+VZaG/DVzMd8qbI98VlGYf9ng
Z9LTMB/zLkG+m+Bn1g3kvwl+ZjMQfGCPwfzN2Ah+MKf75nNHwBcqH/M79Rz4
I/E85nuGH/jEC35hu0D4mW3ffFCLAt84RzA/NEvAP+rBQpkvGgw+cqZh/mgU
gZ/M9phPGivAV0YI5peGDf5SizHftPeCz/QDws9s9gK/6aWYj4a1EH5mM/GC
zE9T/s1/gcLPZFeDD51WG2X+GhkOfrTjMZ9tuC/8zHoj5reB4GfWPJjvVm8B
n9rjMf+tuib8zPoy33x4HPhWm4j5sXPeBv+uxXzZGQk+Nt7+//PnfwFg78bR

                 "]]}}}, {}}, {
            DisplayFunction -> Identity, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
             PlotRange -> {{-0.005132469737962457, 
              0.0051324697379632345`}, {-0.005132456631940975, 
              0.0051324566319411015`}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                RGBColor[0, 0, 1], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0.0018582443249787035`], 
                PointBox[{-0.0018582443249787035`, 0}]}, {
                RGBColor[0, 
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0], 
                PointBox[{0, 0}]}, {
                RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 0.0051324697379632345`], 
                PointBox[{0.0051324697379632345`, 0}]}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=7, mid=(0.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{-0.005132469737962457, 
              0.0051324697379632345`}, {-0.005132456631940975, 
              0.0051324566319411015`}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.006944444444444445], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], 
                 LineBox[CompressedData["
1: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
OXpUb06O8O3Nc9PQlMfvYceunjw388SfOY6arjw3h4k/I6e3t8A5qQubUcTv
L8PNSH4q/sz5Fn/mc3Z3IreIP/P9xZ+Rj8WfkSOs3iKbPA/DOagrOXuN50mI
q4Hn4P7z88h9xJ/5XYs/c/+KP/O9xJ+Rg8Sfkd81OpCt7pwm79WN5/m3WfwZ
mS3+jLwZWUmOOpnM+xQ89+R1OvFnyfxK8WewX4/9PJ/df9hCrn1ZhHEHnX5S
TD4s/gxOEn/md368Hd+zQfwZuWeeO+chUfwZeSNmAufp485x5Nt1y1h/wrZ9
SbYTf0YuFH/mOos/o93p0ClyrPgzMlr8mesg/oz2+zmNZPgzEv7M9xV/5nPE
n7kvAs3JwVvdyYa0cdw3F5IDyBtDvVjPzweNITeUnmP9bzSfStaNmMd9uEv8
GZnvZ0d/KLCOJ28Tf0Z6iD/zevFn7jvxZ86H+DPXNSVdsfgzU/wZqYk/87v6
UNWJ1Okz6EP/dlT7xl/8Geko/oysEH9GvnTMUe/3MJL+5S3+zO+m6pkVsvDN
IjVe8Wfkt+LPHK/4M9JX/JnP9yk3Q4aKP/M7DlyOc0G7I/7M/XvAtQ3SWvyZ
8yH+jHOkSfyZ38k9K5wzWqyXqmu6jouNaPd8VK/un1jwCHzL6bHqL/4MdhV/
Zn/104ziz6+yu/jzK0x/fpWn1f7Vf6WePv7rDXW/oFt19eCJoep5OpurOHeD
Doo/czwjhjSDA46q8W4TfwavFH/mOhkX6PKk2+fiz+AJ0Zt4zo8RfwY7rc4z
FQ76TPyZ8yP+jPYVa66q/skmqBvay1WXVHu2syU4tP8FtV7iz+DghLOKxZ9x
/fhlav2CxJ/Bv/fLVe3iz+hfKv7M9iuXWdeS92WRY8SfwdHiz9zP4s/gduLP
4GbxZ1w/T/yZ4/GyZB11EH/m+4s/g0vFn8Fh4s/gm+LP3D/LhjqAPxB/5vfu
OJZ1Olv8mfvVNYJ1vED8mftf/BmcIP7M7078GbxF/BlcIv4MfnZktGLxZ/AX
4s9k8WewJv7Mc0P8GfyH+DO/U/Fn8AvxZ853j63kYW1NyUniz+AQ8WeO9z9n
yKXiz+Aq+wh6zynxZ7DVsyfk4eLPXN9x6+lJH4s/87vv6k6PShd/5vyJP4OP
71lBzhB/Br/d9SPF4s98vvgz+JT4M+b/ofgzeLr4M9oXij9z/cSf0W6IUufp
RvFntDeLP4PdxJ/Bvzw8Qg4Tf0Z/L/Fnrq/4M9qLxJ/BOeLPaLcRfwZPFn9G
+xLxZ66HWSy9N+3r66wHFuLP4EDxZ76f+DP4gfgzeKH4M1gn/gx+aqKRTcSf
wbfFn8FnxJ/BDuLPefyOQskZ4s8YT4r4M7+vluNsX999LNlW/Bnt3uLP4HXi
z+AJtd7khGr1d4X94s9sP6n+37tC/BlsLf4MXiv+zPf7cym5RfwZbCr+DA4W
fwYXiD+DD4o/gweLP4NT4o6x3heKP4MzxZ/BPcWfwUbxZ/AO8WdwvvgzWBN/
BjeKP4NrxZ/BVmUdyWHiz+BJ4s9g+DPYQvwZ7Ne9hNwi/gyeJP4MXir+zPGI
P4Mj04fTfyaLP4P14s+8PmsKOafUjHUpUvwZfGl3DOvSwZzVZKP4M7i4MpNs
Jf7M/uLP3K/iz9z/T4+TM+qese7ofYvJG8Wf+T7x18ge4s/gERW3yS7nZrHu
aOLPYNM1w/h3BH2pUd2/TE+/nCn+zP0k/gzeIP7M97HMpp+2ij+DG8oS6K/r
Cs3IhatG4e8gukbxZ7aP7FwHXiX+zPv99Vsj/vwqJ99/vT3qlro+sld4Lfxb
b2pOdrPd2gi2CFDPD8ntS3+vnqbGZyP+DG4drMYPf0bWrm9S4xd/Rn4i/oxM
jffswHNB/JnzJf7M71T8Gekg/oxMtjtFNog/I8PFn5GHxZ+RUeLPfI74M7LM
8Bn5pPgzcnDjTLL/u4E8pweIPyMnL/HnubyhQe2f/MKhPIcn/fX35334+/P/
ACXHPZk=
                  "]]}, {
                 Hue[0.9060679774997897, 0.6, 0.6], 
                 Directive[
                  PointSize[0.006944444444444445], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 
                   NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                 LineBox[CompressedData["
1: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
                  "]]}, {
                 Hue[0.1421359549995791, 0.6, 0.6], 
                 Directive[
                  PointSize[0.006944444444444445], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], 
                 LineBox[CompressedData["
1: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
X3/Z79cv8X8Aqe4GzQ==
                  "]]}}}, {}}, {
              Thickness[Large], 
              GrayLevel[0], 
              CircleBox[{0, 0}, {1.5, 1}]}, {
              Thickness[Large], 
              RGBColor[0.6, 0.4, 0.2], 
              CircleBox[{0, 0}, {1.427246146277728, 0.8871479933272833}]}}, {
            PlotRange -> {{-1.5, 1.5}, {-1, 1}}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
             PlotRange -> {{-6.271657970735589*^-9, 
              6.271656111112023*^-9}, {-4.4132617144088115`*^-9, 
              4.4132617144088115`*^-9}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                RGBColor[0, 0, 1], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 5.104610206752014*^-9], 
                PointBox[{-5.104610206752014*^-9, -1.876698796365872*^-9}]}, {
                RGBColor[0, 
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 5.1876254958393986`*^-9], 
                
                PointBox[{-5.1876254958393986`*^-9, \
-2.698548051682792*^-9}]}, {
                RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 4.918799256792283*^-9], 
                PointBox[{-4.918799256792283*^-9, 0}]}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=8, mid=(0.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{-6.271657970735589*^-9, 
              6.271656111112023*^-9}, {-4.4132617144088115`*^-9, 
              4.4132617144088115`*^-9}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
         TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.006944444444444445], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 0, 1]], 
                LineBox[CompressedData["
1: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
OXpUb06O8O3Nc9PQlMfvYceunjw388SfOY6arjw3h4k/I6e3t8A5qQubUcTv
L8PNSH4q/sz5Fn/mc3Z3IreIP/P9xZ+Rj8WfkSOs3iKbPA/DOagrOXuN50mI
q4Hn4P7z88h9xJ/5XYs/c/+KP/O9xJ+Rg8Sfkd81OpCt7pwm79WN5/m3WfwZ
mS3+jLwZWUmOOpnM+xQ89+R1OvFnyfxK8WewX4/9PJ/df9hCrn1ZhHEHnX5S
TD4s/gxOEn/md368Hd+zQfwZuWeeO+chUfwZeSNmAufp485x5Nt1y1h/wrZ9
SbYTf0YuFH/mOos/o93p0ClyrPgzMlr8mesg/oz2+zmNZPgzEv7M9xV/5nPE
n7kvAs3JwVvdyYa0cdw3F5IDyBtDvVjPzweNITeUnmP9bzSfStaNmMd9uEv8
GZnvZ0d/KLCOJ28Tf0Z6iD/zevFn7jvxZ86H+DPXNSVdsfgzU/wZqYk/87v6
UNWJ1Okz6EP/dlT7xl/8Geko/oysEH9GvnTMUe/3MJL+5S3+zO+m6pkVsvDN
IjVe8Wfkt+LPHK/4M9JX/JnP9yk3Q4aKP/M7DlyOc0G7I/7M/XvAtQ3SWvyZ
8yH+jHOkSfyZ38k9K5wzWqyXqmu6jouNaPd8VK/un1jwCHzL6bHqL/4MdhV/
Zn/104ziz6+yu/jzK0x/fpWn1f7Vf6WePv7rDXW/oFt19eCJoep5OpurOHeD
Doo/czwjhjSDA46q8W4TfwavFH/mOhkX6PKk2+fiz+AJ0Zt4zo8RfwY7rc4z
FQ76TPyZ8yP+jPYVa66q/skmqBvay1WXVHu2syU4tP8FtV7iz+DghLOKxZ9x
/fhlav2CxJ/Bv/fLVe3iz+hfKv7M9iuXWdeS92WRY8SfwdHiz9zP4s/gduLP
4GbxZ1w/T/yZ4/GyZB11EH/m+4s/g0vFn8Fh4s/gm+LP3D/LhjqAPxB/5vfu
OJZ1Olv8mfvVNYJ1vED8mftf/BmcIP7M7078GbxF/BlcIv4MfnZktGLxZ/AX
4s9k8WewJv7Mc0P8GfyH+DO/U/Fn8AvxZ853j63kYW1NyUniz+AQ8WeO9z9n
yKXiz+Aq+wh6zynxZ7DVsyfk4eLPXN9x6+lJH4s/87vv6k6PShd/5vyJP4OP
71lBzhB/Br/d9SPF4s98vvgz+JT4M+b/ofgzeLr4M9oXij9z/cSf0W6IUufp
RvFntDeLP4PdxJ/Bvzw8Qg4Tf0Z/L/Fnrq/4M9qLxJ/BOeLPaLcRfwZPFn9G
+xLxZ66HWSy9N+3r66wHFuLP4EDxZ76f+DP4gfgzeKH4M1gn/gx+aqKRTcSf
wbfFn8FnxJ/BDuLPefyOQskZ4s8YT4r4M7+vluNsX999LNlW/Bnt3uLP4HXi
z+AJtd7khGr1d4X94s9sP6n+37tC/BlsLf4MXiv+zPf7cym5RfwZbCr+DA4W
fwYXiD+DD4o/gweLP4NT4o6x3heKP4MzxZ/BPcWfwUbxZ/AO8WdwvvgzWBN/
BjeKP4NrxZ/BVmUdyWHiz+BJ4s9g+DPYQvwZ7Ne9hNwi/gyeJP4MXir+zPGI
P4Mj04fTfyaLP4P14s+8PmsKOafUjHUpUvwZfGl3DOvSwZzVZKP4M7i4MpNs
Jf7M/uLP3K/iz9z/T4+TM+qese7ofYvJG8Wf+T7x18ge4s/gERW3yS7nZrHu
aOLPYNM1w/h3BH2pUd2/TE+/nCn+zP0k/gzeIP7M97HMpp+2ij+DG8oS6K/r
Cs3IhatG4e8gukbxZ7aP7FwHXiX+zPv99Vsj/vwqJ99/vT3qlro+sld4Lfxb
b2pOdrPd2gi2CFDPD8ntS3+vnqbGZyP+DG4drMYPf0bWrm9S4xd/Rn4i/oxM
jffswHNB/JnzJf7M71T8Gekg/oxMtjtFNog/I8PFn5GHxZ+RUeLPfI74M7LM
8Bn5pPgzcnDjTLL/u4E8pweIPyMnL/HnubyhQe2f/MKhPIcn/fX35334+/P/
ACXHPZk=
                 "]]}, {
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[0.006944444444444445], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0]], 
                LineBox[CompressedData["
1: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
                 "]]}, {
                Hue[0.1421359549995791, 0.6, 0.6], 
                Directive[
                 PointSize[0.006944444444444445], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]], 
                LineBox[CompressedData["
1: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
X3/Z79cv8X8Aqe4GzQ==
                 "]]}}}, {}}, {
            DisplayFunction -> Identity, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
             PlotRange -> {{-6.271657970735589*^-9, 
              6.271656111112023*^-9}, {-4.4132617144088115`*^-9, 
              4.4132617144088115`*^-9}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                RGBColor[0, 0, 1], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 5.104610206752014*^-9], 
                PointBox[{-5.104610206752014*^-9, -1.876698796365872*^-9}]}, {
                RGBColor[0, 
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 5.1876254958393986`*^-9], 
                
                PointBox[{-5.1876254958393986`*^-9, \
-2.698548051682792*^-9}]}, {
                RGBColor[
                 NCache[
                  Rational[2, 3], 0.6666666666666666], 0, 0], 
                Dashing[{Small, Small}], 
                CircleBox[{0, 0}, 4.918799256792283*^-9], 
                PointBox[{-4.918799256792283*^-9, 0}]}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=8, mid=(0.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{-6.271657970735589*^-9, 
              6.271656111112023*^-9}, {-4.4132617144088115`*^-9, 
              4.4132617144088115`*^-9}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.79629311913918*^9, 3.796293146243081*^9}, 
   3.7962931898812304`*^9, 3.7962933039669404`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"showPedalCentroids", "[", 
        RowBox[{"1.5", ",", "#", ",", "1", ",", "0", ",", 
         RowBox[{"drCircles", "\[Rule]", "False"}]}], "]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"3", ",", "8"}], "]"}]}], ",", "2"}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7962937059923487`*^9, 3.796293710346676*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], 
                 LineBox[CompressedData["
1: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
                  "]]}, {
                 Hue[0.9060679774997897, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 
                   NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                 LineBox[CompressedData["
1:eJyV2MGqjVEUwPHv3jIwoEsoA3IVmXgG7+ARlIGcMvIKnkO6CiGEEEIIIYQk
bggDIQyEIimj3+D8+87k9G+tvfbaa6+199rf/I4923fODsOwa2YY/v0f3/1s
7+K+l9uG/78T8GH4IHwIPglr/xh8NOaX1dfekZH+ad/xzncm1qf+qdCX1Zf1
XzYe50Nff8v+Bfh0xOdssPb091zwpbCv/9qXr460L1+Gr8EXQ/8KfB1+DN8K
/Tuhrz8PY3/vwjfgJ/Aj+Has91XYvwc/gL9Gfj2Hv8Dfw/+bYd94f4Dfwq/h
ucn0/XC97+Df8Bv4afjj+r/Fet7Dn+Hlk+n29f8T/AfehL0l8I+Ih/HdMJmu
P4t8Jbw07Knv/GvhFfDmsL8u7M3Aq2P8+vBnTehvDX3jsQreAs+HvvHZGHLz
Ubn+GR/jZ3wcL6tv/i4byebrr8j/n8HWn/X0MfSt5xfwYvD9YO8P7wfPZ89j
72Pvb/sX73/7D+9v7dlfOt7+rvSrf3V++0H1lVc/qr799UL0D74nHF/9v/ru
l/Kav+JT/fj+mE/7+ut8xt/1mA++V8wP32sHQq7/sv7Ue6zeg3Llt3Ljr7zq
0XhU/F2v8TdeFd96f9d7u+qj6rfys/JVufFwfvXdr6o367e48s39HHse1fu7
9rvOf9ejvv6Pra/6XuF+1veW2q/6/mP8tW89uJ7yt9Zf5/HY81t/xupXvXq+
1Xmi/fpeVvZKXvqVz7L1VPd1+aO9ms94VX1WPcrmt3Lnq++jNV5/3X/vR/uP
ql/z1X7a8X8BlFjcjw==
                  "]]}, {
                 Hue[0.1421359549995791, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], 
                 LineBox[CompressedData["
1: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
ZWMMA1oHguMK15bBiKrqh83ODPikJtqkfamAwdyL3XojPfCyZttz3eJKELn8
5ULUtB54cc/HKH1XFdRKHdmb/r4LhtS/LhUVqwbvzDAFSYNOCNWfvsE8nMtP
WeMZ1852mKk8Z2jzMSGE1vbYbWlrBdiaNlBgJoT2MZhe5/ARdEbfWF3a/BqO
9qeLtnz9G/aDc35xZxE4jQ29YabW+L/5eeEA//2r5eR73D+W/30d/3sUecNf
fw9/fbS+z99flL8/CujzmfPPh5Ol+efP458f9en7hfLvh4p5/Pub8u+P4mr8
+jApZH3QiK7fxUCyfphO11eaX180ous/gV9/PEj3R5/fH7Sk+6fC7x9+o/ub
3UH2F2Xp/gfPJfuP3XQ+zpiT+cA8Oj8m/PxgHp2vvYfJfOFNOn/WAjJ/WE3n
s6uUzCda0PlN/p3ML26i8y0qTuYbt9P5d8kk84/D9HwYfiXnAwvo+UmdQM4P
htLzFWFOzhd+oOfP04KcP6yk5/NOy8C/5xNL6Pk1P0POL7jR871xiJxviKPn
v86HnH8Io/ogJiT6AAZUP3ZHEf2AD1RfrHl9gclUfwxdif7AbKpPEceJPsF1
ql+MDtEvaKH6Zl5D9A1iqf7p7CP6BylUH2t1iD5iItXPi45EP7Gf6iszQvQV
Tan+Ni0j+otOVJ+jlIk+43mq31ofiH6jM9X3ATOi7zhM9V8rneg/plJ/KJYk
/oCW1D+YLOIfWE39RUuG+At+p/7jOYf4D4ZTf7KdR/wJ1f/zL2fiXyhP/a1j
L/E3qKD+59lC/A+UqD8m3iT+CPLUP3PkiX+CJ/XXhWrEX6GK+m9LPvFfTi95
f47zIP4MgdS/E3cR/wZ16u+dicTfIZP6f8Ex4v+wn+YDZUOSD8CM5ofNK0l+
AAOaLwQHSb6ArTR/jPD5A/7LJ3X3SD4BJZpfesVIfoH/8s33LSTfgCXNP9M3
k/wDzTQf7VQn+QjEaX5SayT5CeppvpIpJ/kK/stf5Xz+guk0n6Xy+Qxu0fzW
xec3aKb5bpIDyXegQfNfIp//QI3mQyGfD+ECzY+3bUh+hFk0X+pcJPkSxGn+
HOTzJwhoPn3J51M4TvOrYyrJr1BJ863UKpJvwY/m38GZJP+CKM3HR/h8DC9o
fpZyJ/kZAmm+7uPzNSTT/D3bgORviKf5fHU7yeewiub3Yj6/gxvN94o7Sb4H
a5r/B/n8D3m0H4x1Jv0AbtP+MF6R9AcYS/uF43jSL2Ae7R+H+P4BM2g/uc33
Ewii/cWYJf0FPtF+U8H3G3Cl/WeyAek/kEL7UQLfjyCf9qff+P4E62i/esL3
K1hK+9fBCtK/wIv2sxN8P4Nv9Xx/G+X7G9jTfhchT/odKNP+l8b3P0il/dDi
MemH4Ez7oynfH2Ey7ZdKAaRfgg7tnzOukv4J52k/NftG+insov31NN9focCZ
77cJfL8FHdp/Pfj+C2K0H8v5kH4MXrQ/7+L7Mww78v1azIr0a5hM+/csvn9D
FO3nrnw/h1uufH+/xfd3qK76P/0e3p3n+78d3//hqg3PB0ZrCB+Ao5QfiPD8
AAR2PF+Q4fkC/ET5wxSeP0DVfZ5P3DUjfALcKL+wGSD8At7b8XxDXJHwDegv
4/lHpBHhH9AUw/MR8QWEj8Biyk+UMwg/gcOUrzwMJXwFMih/8R4l/AWlFvB8
Rtuf8BnUb+X5zZx2wm/wIOU72nKE76DiZJ7/HFIl/AcXzuX50OpZhA+htTTP
jyo0CD/CF5QvST0kfAmHKX/ayvMnPEP5VBDPp9AxhudXU3h+he2Ub6nwfAu1
HHn+1RtP+Bf6UD7myPMx9Kb8LIznZyhux/M1c56vofZEnr99fkn4G6ZRPifH
8zmctpHnd+9iCb/Dq5Tv3dtP+B7Op/xvNc//sIjywWJNwgcxiPLDo28IP8Rp
lC+eVSR8EWMof/yxgPBH9KF88qwk4ZMYT/nl3cWEX6LoDZ5vjpoQvolJlH82
9BL+iZ8pH/3NmPBRjKD8VITnp9hP+eqdbsJXsYzyV9vthL/iGMpnM3IIn0VH
ym+digi/RXPKd+PtCd/FVf/x321R//JfmET5sIgD4cMgoPw4kefHYEf5spgx
4cvw//nz/wD072hj
                  "]]}}}, {}}, {
              Thickness[Large], 
              GrayLevel[0], 
              CircleBox[{0, 0}, {1.5, 1}]}, {
              Thickness[Large], 
              RGBColor[0.6, 0.4, 0.2], 
              
              CircleBox[{0, 0}, {1.1430749027719966`, 
               0.2379500648186704}]}}, {
            PlotRange -> {{-1.5, 1.5}, {-1, 1}}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0.36771908456384084`, 0}, 
             PlotRange -> {{0.3787490280343868, 
              1.0846654101493316`}, {-0.32439376598414416`, 
              0.32439376598414427`}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.36771908456384084`, 0}, DisplayFunction :> 
             Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.37874902803438687`, 0}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.4613567496141354, 0}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{1.0269463166231894`, 0}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=3, mid=(1.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0.3787490280343868, 
              1.0846654101493316`}, {-0.32439376598414416`, 
              0.32439376598414427`}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
         TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 0, 1]], 
                LineBox[CompressedData["
1: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
                 "]]}, {
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0]], 
                LineBox[CompressedData["
1:eJyV2MGqjVEUwPHv3jIwoEsoA3IVmXgG7+ARlIGcMvIKnkO6CiGEEEIIIYQk
bggDIQyEIimj3+D8+87k9G+tvfbaa6+199rf/I4923fODsOwa2YY/v0f3/1s
7+K+l9uG/78T8GH4IHwIPglr/xh8NOaX1dfekZH+ad/xzncm1qf+qdCX1Zf1
XzYe50Nff8v+Bfh0xOdssPb091zwpbCv/9qXr460L1+Gr8EXQ/8KfB1+DN8K
/Tuhrz8PY3/vwjfgJ/Aj+Has91XYvwc/gL9Gfj2Hv8Dfw/+bYd94f4Dfwq/h
ucn0/XC97+Df8Bv4afjj+r/Fet7Dn+Hlk+n29f8T/AfehL0l8I+Ih/HdMJmu
P4t8Jbw07Knv/GvhFfDmsL8u7M3Aq2P8+vBnTehvDX3jsQreAs+HvvHZGHLz
Ubn+GR/jZ3wcL6tv/i4byebrr8j/n8HWn/X0MfSt5xfwYvD9YO8P7wfPZ89j
72Pvb/sX73/7D+9v7dlfOt7+rvSrf3V++0H1lVc/qr799UL0D74nHF/9v/ru
l/Kav+JT/fj+mE/7+ut8xt/1mA++V8wP32sHQq7/sv7Ue6zeg3Llt3Ljr7zq
0XhU/F2v8TdeFd96f9d7u+qj6rfys/JVufFwfvXdr6o367e48s39HHse1fu7
9rvOf9ejvv6Pra/6XuF+1veW2q/6/mP8tW89uJ7yt9Zf5/HY81t/xupXvXq+
1Xmi/fpeVvZKXvqVz7L1VPd1+aO9ms94VX1WPcrmt3Lnq++jNV5/3X/vR/uP
ql/z1X7a8X8BlFjcjw==
                 "]]}, {
                Hue[0.1421359549995791, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]], 
                LineBox[CompressedData["
1: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
ZWMMA1oHguMK15bBiKrqh83ODPikJtqkfamAwdyL3XojPfCyZttz3eJKELn8
5ULUtB54cc/HKH1XFdRKHdmb/r4LhtS/LhUVqwbvzDAFSYNOCNWfvsE8nMtP
WeMZ1852mKk8Z2jzMSGE1vbYbWlrBdiaNlBgJoT2MZhe5/ARdEbfWF3a/BqO
9qeLtnz9G/aDc35xZxE4jQ29YabW+L/5eeEA//2r5eR73D+W/30d/3sUecNf
fw9/fbS+z99flL8/CujzmfPPh5Ol+efP458f9en7hfLvh4p5/Pub8u+P4mr8
+jApZH3QiK7fxUCyfphO11eaX180ous/gV9/PEj3R5/fH7Sk+6fC7x9+o/ub
3UH2F2Xp/gfPJfuP3XQ+zpiT+cA8Oj8m/PxgHp2vvYfJfOFNOn/WAjJ/WE3n
s6uUzCda0PlN/p3ML26i8y0qTuYbt9P5d8kk84/D9HwYfiXnAwvo+UmdQM4P
htLzFWFOzhd+oOfP04KcP6yk5/NOy8C/5xNL6Pk1P0POL7jR871xiJxviKPn
v86HnH8Io/ogJiT6AAZUP3ZHEf2AD1RfrHl9gclUfwxdif7AbKpPEceJPsF1
ql+MDtEvaKH6Zl5D9A1iqf7p7CP6BylUH2t1iD5iItXPi45EP7Gf6iszQvQV
Tan+Ni0j+otOVJ+jlIk+43mq31ofiH6jM9X3ATOi7zhM9V8rneg/plJ/KJYk
/oCW1D+YLOIfWE39RUuG+At+p/7jOYf4D4ZTf7KdR/wJ1f/zL2fiXyhP/a1j
L/E3qKD+59lC/A+UqD8m3iT+CPLUP3PkiX+CJ/XXhWrEX6GK+m9LPvFfTi95
f47zIP4MgdS/E3cR/wZ16u+dicTfIZP6f8Ex4v+wn+YDZUOSD8CM5ofNK0l+
AAOaLwQHSb6ArTR/jPD5A/7LJ3X3SD4BJZpfesVIfoH/8s33LSTfgCXNP9M3
k/wDzTQf7VQn+QjEaX5SayT5CeppvpIpJ/kK/stf5Xz+guk0n6Xy+Qxu0fzW
xec3aKb5bpIDyXegQfNfIp//QI3mQyGfD+ECzY+3bUh+hFk0X+pcJPkSxGn+
HOTzJwhoPn3J51M4TvOrYyrJr1BJ863UKpJvwY/m38GZJP+CKM3HR/h8DC9o
fpZyJ/kZAmm+7uPzNSTT/D3bgORviKf5fHU7yeewiub3Yj6/gxvN94o7Sb4H
a5r/B/n8D3m0H4x1Jv0AbtP+MF6R9AcYS/uF43jSL2Ae7R+H+P4BM2g/uc33
Ewii/cWYJf0FPtF+U8H3G3Cl/WeyAek/kEL7UQLfjyCf9qff+P4E62i/esL3
K1hK+9fBCtK/wIv2sxN8P4Nv9Xx/G+X7G9jTfhchT/odKNP+l8b3P0il/dDi
MemH4Ez7oynfH2Ey7ZdKAaRfgg7tnzOukv4J52k/NftG+insov31NN9focCZ
77cJfL8FHdp/Pfj+C2K0H8v5kH4MXrQ/7+L7Mww78v1azIr0a5hM+/csvn9D
FO3nrnw/h1uufH+/xfd3qK76P/0e3p3n+78d3//hqg3PB0ZrCB+Ao5QfiPD8
AAR2PF+Q4fkC/ET5wxSeP0DVfZ5P3DUjfALcKL+wGSD8At7b8XxDXJHwDegv
4/lHpBHhH9AUw/MR8QWEj8Biyk+UMwg/gcOUrzwMJXwFMih/8R4l/AWlFvB8
Rtuf8BnUb+X5zZx2wm/wIOU72nKE76DiZJ7/HFIl/AcXzuX50OpZhA+htTTP
jyo0CD/CF5QvST0kfAmHKX/ayvMnPEP5VBDPp9AxhudXU3h+he2Ub6nwfAu1
HHn+1RtP+Bf6UD7myPMx9Kb8LIznZyhux/M1c56vofZEnr99fkn4G6ZRPifH
8zmctpHnd+9iCb/Dq5Tv3dtP+B7Op/xvNc//sIjywWJNwgcxiPLDo28IP8Rp
lC+eVSR8EWMof/yxgPBH9KF88qwk4ZMYT/nl3cWEX6LoDZ5vjpoQvolJlH82
9BL+iZ8pH/3NmPBRjKD8VITnp9hP+eqdbsJXsYzyV9vthL/iGMpnM3IIn0VH
ym+digi/RXPKd+PtCd/FVf/x321R//JfmET5sIgD4cMgoPw4kefHYEf5spgx
4cvw//nz/wD072hj
                 "]]}}}, {}}, {
            DisplayFunction -> Identity, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0.36771908456384084`, 0}, 
             PlotRange -> {{0.3787490280343868, 
              1.0846654101493316`}, {-0.32439376598414416`, 
              0.32439376598414427`}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.36771908456384084`, 0}, DisplayFunction :> 
             Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.37874902803438687`, 0}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.4613567496141354, 0}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{1.0269463166231894`, 0}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=3, mid=(1.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0.3787490280343868, 
              1.0846654101493316`}, {-0.32439376598414416`, 
              0.32439376598414427`}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], 
                 LineBox[CompressedData["
1:eJxd2GtYzekaBvAGO7FpBk05NKkkjCKJQnmKHCYVCpFKRFPEZHRyGpkJSVfT
hFSkokmko9Vx0dsoSYxxHEmbWtVqTYMdQw4jtvk/dx92vviwrnX4v+/z3Pfv
ymDNNy7reqmpqfl/oqb2z/87fG+9v1alIjX8Szcabv9WqMjW/Y3dxV776NO/
di09mK+iquUuVk6N8dQ5dfvBq4kq0lD0Dg/uSqU1JRuWvApTUfufV/UclmfQ
dymbP4laqKL+o+wNzTdn0WSD6VFD9FQ0yXT0lqe6eVQWGDjXprWNdr5vnnjG
pYCmH3+yqvrnNjJJvOmqvURGec/vNu/ybqOMZUmJS3SLaJ5HaNJ87Ta6si3w
8IZTxdSw9/kljRolhTisXOn8vITKTA8rs0OUNKHj4IWHb0spMC8szXiUkgw1
Fwa0izKapTyj8LreSg7eOr6j7OT0Xab+IuutrXTQ4sEcrV1yUoRN0Ttq1Eo6
/1k5aNB2Oak9u7Z4wc0W6lycZznaUk7Dr+0N1QxvoeQan6APhWV0fcfg24cn
tdDeKpOvGj5+X//Cwn/tVjaTScOK4m/6lVLcrcwxninN1J6od+d6azHNrtRx
SvdopoDVlr+sOFRE8yvWbbyg10xpY6buyhhWSLLqqrR3rQqaaLjhTcC2cyQ7
b5N7skBBn7veOxwkz6ekiobfFBEKmvlVWpd6ZS65z6rMue+hoKezl/2Uosii
ogUuBxKmK+gWFWq0PjxFLqaeYQZ6Cqp1v7a7tOIkvb7skO3fV0E16hsrpxmk
UOlJ40b3zibSb2rcZp0dT/GPb6beaW8is97rjs7yj6bY5pKc7JYmCjf9oXqo
dih5n0iZXdjcRLYtu1McE9YKH1urhbK2JqqxN7o3JW6P8H9ik7qpo4n6nPPs
e+dmnFhmUvH6ZFcTaXnEnN98MkmsPKw7YNCnCqqavKU+dXiaSE58sC7QSEG+
g+37/CrSxUnNmdO22ygoftybNW02mSJnzOVh7SsUlKn9W8fguCxxsv3b5OCt
CkrPef2upTRH3I6O/+P3owqad+r2kNz7ecJhSNr4mgoFnU+rj908s0D8XjPs
Qx+Vgt4XnT+dFHVOpNu5XHQY1EwUvKiq8IJMrLd0erDcupnurrjvEXyvUOz6
w+Nph18zZVyO+yH3XpEYqXrR9158Mw2xqN/mXl4s9CfpyW9eaibLlI7t+w+U
iPGN7VPOvGymyvFZGf5UKrSuTHIyMW4h//I+I6m+VLi6V4Ybu7VQWLCr+xqP
MmHSafbGP7KFDO8rj9lUl4mIjWPCa0tbyEW3d6bDULm48dw+SO/PFrJ7GHHk
M1e56Gs1o3SmbivZ2/31xCBULr6ofZWu7tRKbweu+nX4HrmY6x3a7rqzlWof
6a9M2SkX+a13vlfPbiXZq8WO7qvlwi9m8GG1hlYKP1ac8LeZXDhs6O9p3F9J
xrqXFls+KRN5sS2DvCyVJDNbfLQqvkx8GOBz7UcfJe2VHa/0mFAm9L+ft/Hn
GCWZ3vAJK5OVikem/46IKlGSc0C0duKXH5/v66FTTZqUVP4yarAstkSka5w1
3qrRRrOcjUKr24qFffnOVasntNGhShEWZVYszpXPm/67SxsNXb96ROmGIhFy
23ZBbXAbJdLBP/olFYrlj+IdJx1pI0V+Spn5eZno1etFf7XiNtp0O3lv261z
4pDO564md9vIOfTx3PqHBWJNZHDj2Wdt9MXcu01ljflC+9PBTlsHqGjRuvH6
lh/nQXfurF5Ro1VUW53u9vKnXNG1/NSXddYqOubkY+K1Olv0GmH6s6eLikyG
eV59ZZAlol4Ne6PlqyKZR7HLwLuZYmvquAVvQlVUc9/aSLk9Q1QNzHFVj1RR
Qck0g2qddGFsXbDUKl5F5ydmPX1yOk00jhyuE31CRQ02s3dP/fq48PCX339/
9uPvKUhwGxyQKOo/rF8aU6iipMrQ141rD4ktIX8XWJ1XUeZolZ1+ZozQnjwu
8l2FijqOHGvUCosQMd9vvlNX+fH9SZfONO4IEr498rn79Yp46XXSxPvfHZbe
TyH4fNko6fPpEb7/0EXp+8kNv+9pnvT76CF+/zVr6fdT9/N58/PRdTy/Dz8/
ReB8zPh86AjOz5/Pj9RxvvlDpfMltRV8/tP5/MkU9xPO90OGuL+pfH+0Cffb
j++XMnH/tnz/9Bnmw4/ng9Zhfq7w/FAQ5msfzxddwPxp8/zREsxnMs8nHcP8
6vP8kjvm+zLPN9Vh/i14/mk09sOE94MGDuT9OcH7Q1ewX3qTpP0iZ+zfRN4/
CsR+HuD9pIvY3z6vpf2lVdjvOY3SfpMu9v8x7z+NQD6c4nygBuRHJecHRSFf
AjlfyBb5k835QwHIJ4cQKZ/ICPnVR0j5RebIN2MTKd9oGvLPKVXKPxqGfBzI
+Uj7kZ/za6T8pFDka7m7lK+Ug/xVD5HylxTIZ+0SKZ/JGfm96oSU31SPfHfP
lPKdUpH/y3Kl/Kez6AdvHakfKB39UTBe6g86hn6x0JL6hTzQP3Mtpf6hRegn
b0+pn2g1+iuySOov8kC/qTlK/UZLuvvvmdR/FIF+rBgv9aOIRn+qutb+058i
A/2qVS/1q3iM/m3oLfWvsEI/+7lJ/SxOoL+1Zkr9Lay6+91W6nexH/0fNl/q
f5EMH5i7SD4QP8IPf+lLfhAT4AsN9oUwgj8SvCV/iM3wyXz2ieiUsV+ePpD8
IorgG0v2jfhwlf0zj/0jGjrYRzHsI5EPP8U3SH4SjvCVJvtKaMFf71dJ/hIL
4LO3AyWfiST4bQb7TZTBd/vYd8IA/qtj/4nv4MMK9qHoBz+uZz+KTPgym30p
tODPOPan8IJPG9mnwh5+rXgs+VXUw7eazZJvxYfn7N8Ed8m/Iho+NvKSfCw2
9MjnPXjdwo393P3+d27s5xZ8fmwT+9kW368PP3vj9/kasp9H4fcrTdjPGXg+
Q/h5BJ4/P4H9/BPOp2sp+9kc53cWfr6F8/WFn8/g/AP/y352xf2E8v2QGe5P
zvdHK3G/Ryezn2tw/2v5/ulPzMdi+HkA/GwEP9dgvvrCz5/AzxU8fxSN+dwI
P1thfvfw/BJhvs3g5wzMv48B+/kM9sOC94PisT+189jPjtivIjv2cwH27z3v
H83HfuYsZz+/wP5q9GE/n8N+x95nPydg/2PfS/tPcciHRqv/97NaA/t5LfLF
6iv283rkz40efk6An32RXyVT2c8nkG+RQ9jPp5F/1px/Ig/52AE/pyM/LeDn
R8hXR85X4YL8Jc5foUI+W3E+izzkdwv8HIZ8X8z5LqKR/36c/0IX/fByMvt5
JvrDj/tDWKJfQrhfRI/+EZvQT17cT2IO+mtGPft5P/otGX6uR/9Vwc8j0Y8D
ZrGfDdGfmzTZz2vRr4e4X0U1+rcX968IRj/XwM/L0d918PMN9Hs697sYgv7X
KmQ/T4APwuFnBfwQCz97wxdjO9nPmfDHPfh5JXxyD36+Dr9Uw8/h8M0z+Hkz
/ONXwH42gI/U7rCfZfBTAfy8C76Kgp8t4K8i+NkaPvO7zH4eAL+NdWY/D4Pv
6uDndPjP25P9nAEfaj5gPz+CH6eXsp+t4MsAM/ZzJ/xpQuznUPg06Bz7+Tn8
6l7Ffo6Hb4eOZT+P6/ZzIvv5BHycmcx+3tkjn0/jdY049rMZ3l9ykP0ch89v
NGA/v8b3F/3Cfg7q4ed3+P0tM9jPlni+8fCzEs/fUMx+TsX5DIKfs3F+OvCz
Hs53H/z8Bc6/2pH9PB/3sx1+7r6/cfBzJO63fQ77uQb3rw8/m2M+bODnHZif
X+DnaMxXDPx8F/M3EH7ehPkMh5/lmN9+8HMI5jsLfu7E/I+Cn22wH6Ph53HY
n1L4+WEPP6/F/tnBz3uxn0fh50bsbz/4OayHnydj/1/Az+bIBwX8/Az5kQs/
pyNfguBnN+RPPvwcgXyygJ+tkF/q8LMd8m04/LwQ+RcIP5shHxfCz6k9/HwA
+RoCP1cgf8fCz13IZ334eQ3yex383IF8j4efi5D/bzn/qRz9oIKfZeiP9fBz
DvpFA34ORP9c5P4hL/STCn4OQX+NhZ+/Qb+ZLWA/+6L/Kh6znxO6+3EC+/k4
+rMDfi5Dv9bAz13oXy3uX+GMfi6Hn8vQ39XwszP63YX7XRzv7n/4OQs+0IKf
U+CHZ/CzPXxhCz9PgT9S4edI+MQHflaHX17Az7XwjQ38/Bn84wY/P4ePEuDn
WvgpFX5eA18Zwc8W8NdY/vulcIHPOuDnIvhtGfx8Hb4Lhp+t4L878HMSfJgA
P38JPzrCzyXwZS78bA5/BsDP38KndfCzF/xaDz8/hm838d+HhQ7+fuwBP6fC
x3We7OctPfL5f9N/nA8=
                  "]]}, {
                 Hue[0.9060679774997897, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 
                   NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                 LineBox[CompressedData["
1:eJyl2EtOVUEUheEDM2EkzMEhkNCgRZOOUV4R8RUlylMNqOADxCcDMk7BARgT
W1/nT+Xezs3K3mvX2qvq1Kk6C0urt5bnp2lamZumf/+f/xycrP3+tTj9/30D
X4K/gL8G/yqwfOubfw3+GPXM/x5xseN/AuuffomtL7/GK779W8/8D+B34Pcx
P+orvc6XcfnqMa5++9V/+RUvv+xHvnrk66/xi0H9VU891je//Lb/6s96jn8e
2PVQcXGNN8oXvwn+24jLL3wa+Ax8HPHin0T+S/Br8KuIq896+5F/BN4DPw++
+U/Ah4EfgJ8GVo/9ma+++6HX+uoTW+9hjG9cvvhexLfA6+DH4G3wBngT/Ah8
F7wDvhPY8Uuvcfm3wbvgZ+Gn/Zmvv65f5/dFrE/7c725Hn2era8en0+xetxf
za/90v2o9vPav30/qK/y631qfr2P631e+Z43RvmjuM5P9lv3heLrp/3WeX3W
89qo3xUf9dfzfc1vnY+r/uj9sPTXfU69+q+f3hfFdd+o+6T17K/uc3X/1m9x
+SUufvlT9/Pya1b+aD81XsVnrV9+1v1efq2PUT3mj/LLn9o/avyqrx/lV30/
0v/R56Xq/4jx7L/qqa/01/fCUf9rPmu9/Yy4ftX3tVqf9XwVv54P+7mJ90v1
X+PpT82PWL5+Vn3PC38BvH5xoA==
                  "]]}, {
                 Hue[0.1421359549995791, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], 
                 LineBox[CompressedData["
1:eJxd13k8lWkfBvAzGFpteSXDtGvajNKipvq1JyKvJKN1eiOkmnbZKkqlklKR
VEScLDGGst+Ww2mokyntKwdxnFORSlrMzHNf88fb/NNnPj7neJ77/v2u62vg
6o2ObmoikcjzG5Hon39T2iPP7JDXkgj/vf7i4JneVkt5h364qNsWzWwC3G/k
9q8j93ln33rFJDONviMTZR51VHrtzqsPh39nbLde45CqOlp5SrZStjiXWWjJ
31jMkpNv6eXLQYeLmHVSeZDqupyme/gZLwkrYbpT+tUMWVNPgwfvClH5l7ET
Yw3UMjUayEKnvCpIp5ztzem6nZXcQDf1ug+vnlvBjN9vk2Q7NpJlskz+g5mU
1a/ddizvQyMNyE7Ik2VKmeyE5x67sy9oQHrEGfs3UhY+Xn+T709NFDHQo6j1
pZR57alslNxqol5lmgPmp0nZhc4IPePVzdQQvTKqZryUZdXKNEqamql49p+n
y45WsEeyh49t3BXUI++ssqqknEUvLKoLfqigxtGpffRvSdjrqiO27nNaSP2b
Q8b9K8rYb2Oe3dVOaqHQP+s0n18oZe2Snxb93tVCpzxmylK8S9jM8AhF9EIl
vRs+ZYXdsGJWdafvt0aRSnLKTinvn1rI9Kf1Pxh8V0n3Wm0+RL7PY0Pid0yb
pK2iUr90DcX4HLYi4mz/k9NUtKzDdJvtumzmULXfs3WtimQzVq13OZPJNmyN
n3ExVEWLljXsczyezsSp3tXqSSqKs3GRVL28xJa/t85eWqgis8znn9IcEpjV
ibzCdzdU5JYVkVyz4yxzijov6/dARTcDNvW6v/Y4kyR3tWo8U1Hb8pHBO58E
sPmTNXa9+fv/lc46V65c8KLAbmOdTB6r6PqDCVXjVYfI373VNPP238+zq7rQ
al0U7e3xKUFeoaJ7ppe+jFoSRxmFPgMfZ6so7VOi1GpFIombd4SXxapIcaQm
22B+Cp1QTujB9quoROd+iUHPDOr+1tCo1UtFC/K0Qt79kkkd0VHdfW1UZDC8
wXmDOIuedr2b52Omou132+YVPLlCwe/HiLt1KSnmzZw7/b/JJZGFX/7cGiVN
aNahu3r5VK2n/71dopIWjNax7KdTSPcbkiTjtylp9ZbLBaYdRRR4dZ218Qwl
dXUNzu/uXkxtoidjDHooye5ZwUe9OSVUcjxw5tTqFnr+6Mm0XKNSUljuLEyP
aKF3JiWNR56XUlTNj+khTi3kuO/Y0O9iyughXbF8qt9Cn9oLhzbbSOhmoFbB
bZmCyu742wcoJVQkLf1vyAEFBXr2vui6u5wyZpk+MJyuoKw+G23VNCvozeYY
B/HbZlJ7vty03b+Cxih0tVddaiajMjfv9PoKMv8wssNtaTNNGlv56PcpUjIw
VeXX92wmsWXNsqC9UmpM1fzcPb+JfvWvsT2XL6W7V6fs1vRsIu9h19LCaqXk
WJxor23YRM+7+oQ9eyulVNXFapfSF2QVa+k3uENK4Ur7ZwM2vKDOlyED3r6Q
UuWmzsqEfi9ozo3ozg6JlLY/SV5sVt5Iel7/G/QsTEoH13SeV/zaSFOGy0e4
zZGSZORircmmjTSCpfV0aaqgUtuV7SsrG2hyzQW9UzsqqHDKsahknwaqnTBM
pvumnCID7KO9fmgg/6h+n2Su5bRKRz297UE9fdx83eHlZQmtch81OPJIPbU6
7TK/+KqMViijHNJm1dPk4nGjZ5uW0Ti/GPVDn+RUnuS2YaJVKd3N3Va9L0dO
bbM1M7RmlFDqwQTXth1y0tU412epVTHdXuwTPvgnOdm43DRtmVpEFc2xTzzV
5NTdyOTDppZ8OlCm5aIvq6OK5Xah8/1yyWFTgsLtXB3NZlrjk19dIcky5yDx
ljoyTY4LVrfNorUxPWcY2ddR7WDzex1Hf6Pxr0/nK0fXUUjlvQ15QWnENC/N
de5TRyM6D51eJkmiAuNa54AvtbS72+bhpi1xtHDGtI49r2rp8E6/Mx87I0k/
5fVKv8ZactheODa/2wG69FU+98DPX68Sfs7m4vNN64XPs2R8/w414ftZKn6/
wVvh9zNDPF9mmfB8bAGev3Sg8PxMjPezFAvvx0bg/asKhPdnDjifMFfhfNhJ
nN++/wjnxy7gfI2dhfNlgTj/UerC+bPjuJ+rs4T7YSLc39NE4f7Yd7jfcUy4
X2aM+29fJNw/08N8fMvngzliflikMD8sDPO1js8X88H8hd8W5o8FYD5jioT5
ZGswv+p8ftlozPdZT2G+WTTmvxuff+aM/Sjh+8G8sT8fzwv7wzoY368TfL9Y
AvbPhe8fy8R+uvL9ZDUmfH9P8/1lLR18vy34fjNt7P8gvv8sA/lgzPOB+SE/
pDw/2GHkSxLPF3YK+dPG84dFI58mvRXyiXkgvw7x/GLFyDdLUyHfWDDyjx4L
+cfuIx/383xkjsjPJaIh/+QnS0O+Gm0V8pWJkb+9zIX8ZTU/8nwerhDyma1B
fi9vF/Kb5SHf3e4J+c5akP9xPP/Zu3beD828H5g/+uOirtAf7Dj6JfCo0C/s
BPrn5Rehf5gP+sm4v9BPzBv95R4s9BfzRr851gr9xmai/3p5C/3HitGPIU5C
P5Id+lPsK/Qn/Yh+/Zwu9Cu5oH/9MoT+pQT080ZroZ9pHfo711Xob/q3329P
F/qdVqP/f3sv9D8Ngw9e+go+oH7wQ9trwQ90C76IzxJ8QQvgj3PcH6RWzn1i
y31CV+AXa+4X6oJvikSCbygJ/knk/qE2+OharuAjugk/hXM/URF8xbivKBT+
EnF/kRg+C+E+o2b4zYz7jbp5cN9N5b6jcfCfK/cfpcCHZvqCDykPfjzP/UjD
4Etv7ktaBX8Wc3+SNXx6uUzwKVXCrz6Rgl+pF3z75Q/Bt2QP/xraCP79e464
j68dE3xMiV/lsxw/bw/lfp6Oz++GnzsN+fcfhZ9T8ft7w89D8Xy74eepeH4r
+FkT72cEPx/G+1vCz1txPpXwsxnObwH83AY/j4WfL+P8B8HPu3A/UfDzatyf
Hvx8Evf7HH7OwP1fgZ/vYD7U4efjmB85/FyP+eoFP8dj/k7Cz0r4OQ5+noj5
7T6C+7kE8+0CP+tg/iPgZ0PsxyP42Rr7Uw8/22C/QuHn9di/+qXcz0nYT4/5
3M+LsL+j4Oeh2O9u2dzPtth/413cz9eRDyvgZxvkx+HF3M/bkS+zH3I/+yJ/
RHu4n4OQT3nw83nkl/1n7uc45FvfMO7nA8i/CvhZE35eCj9/Rn72hZ+rka/7
4Gc/5O8B+FmJfDaBn0uQ30vh5yrk+wX4eTPyXwE/t6IfXODnWPTHO/i5Hv0i
g59D0D+L4Oeir/x8Ff0VAT/noN+84Od49F88/PwY/Vj3jPvZCv3ZVMr9rAs/
68LPnejfRPj5IfrZCX6+g/6eCD+bw8/h8HMk+l8DfvaHD27Bz7fgh8nwszt8
8ZT7gsLhj+/h5xT4pIn7hK7CL23cL5QD3xTCz0HwjxH8PBs+2gk/z4Sf1sDP
1vBVCfcVjYC/NsHPOfCZHfwcB7/9wf1GFfCd0xLu51T476Ih9/MW+NBkGffz
JPixvJD7uQi+DL/E/bwG/rSDny3g04Rr3M858OvYDu7nPPhWTZP72Rb+tdjG
/dwbPvbx5n4Wf5XP2vh5hwf383x8fvYW7ucMfP8jDe7nDPx+7ffcz2Z4PrGU
+9kZz/94EPdzFt7Phr8fs8D7x/P3Z7/gfCRLuZ/P4/xm8fNjmThfTX6+LBzn
nwU/J+J+BvH7YQa4v5/5/bEJuN98+Nkc9+/O75+ZYz6C4WdvzM8IPj/sHOYr
B36OwvyJ+N9v7CTmU8T/vmNbMb/O8PNCzLcm//uQ5WL+18LPG7Afmq+4n4P+
/+9P1g/79QB+LsX+hcLPMuznfvhZhf2tgZ874GdX+Hko9t8Wfq5EPkyEn08g
P9rh5yTkyy34WYz8MbnL/ZyJfFoFPwcgvxLh5/vIt+nwczTybwn83IJ8jIWf
vZCf6+BnCfJ1FvxcgPwdAj8rkM/u8LMP8tsXfr6BfN8DP/+b/7fhZy30Q+98
7ucw9Ecs/ByPflkPPyegf4y7uJ9D0E9W8HMg+ktjL/dzAPotpo77eSH6z2oj
9/NN9KPJEu7n5ejPcfDzZPTrdxncz+7o3+nwczr6eSH87Iv+XgI/r0C/58DP
W9H/m+DncfDBa/jZDH7ogJ/r4Asf+HkZ/BEKP+vCz1Pg5yr4xQJ+1r7OfZMK
P+fDP6fh5y74SAI/P4KfwuDnavgqBX6Ohb+aSrmf8+CzY/Dztye534bCz/rw
M8HP8+C/1fBzBnzYF36ugB+Pws+T4cuD8LMn/JkNP/8Mn/aScD/Xwq9y+FkX
fs6En13h31j4uRM+3hrB/fx1Pv8F1DHuRw==
                  "]]}}}, {}}, {
              Thickness[Large], 
              GrayLevel[0], 
              CircleBox[{0, 0}, {1.5, 1}]}, {
              Thickness[Large], 
              RGBColor[0.6, 0.4, 0.2], 
              
              CircleBox[{0, 0}, {1.2480754415067652`, 
               0.5547001962252281}]}}, {
            PlotRange -> {{-1.5, 1.5}, {-1, 1}}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0.5531643257291816, 0}, 
             PlotRange -> {{0.5590169943749426, 
              0.9335877877036384}, {-0.1872600890703795, 0.1872600890703795}},
              DisplayFunction -> Identity, Axes -> {True, True}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0.5531643257291816, 0},
              DisplayFunction :> Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.7740235306730052, 0}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.559016994374948, 0}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.5590169943749478, 0}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=4, mid=(1.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0.5590169943749426, 
              0.9335877877036384}, {-0.1872600890703795, 0.1872600890703795}},
              PlotRangeClipping -> True, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
         TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 0, 1]], 
                LineBox[CompressedData["
1:eJxd2GtYzekaBvAGO7FpBk05NKkkjCKJQnmKHCYVCpFKRFPEZHRyGpkJSVfT
hFSkokmko9Vx0dsoSYxxHEmbWtVqTYMdQw4jtvk/dx92vviwrnX4v+/z3Pfv
ymDNNy7reqmpqfl/oqb2z/87fG+9v1alIjX8Szcabv9WqMjW/Y3dxV776NO/
di09mK+iquUuVk6N8dQ5dfvBq4kq0lD0Dg/uSqU1JRuWvApTUfufV/UclmfQ
dymbP4laqKL+o+wNzTdn0WSD6VFD9FQ0yXT0lqe6eVQWGDjXprWNdr5vnnjG
pYCmH3+yqvrnNjJJvOmqvURGec/vNu/ybqOMZUmJS3SLaJ5HaNJ87Ta6si3w
8IZTxdSw9/kljRolhTisXOn8vITKTA8rs0OUNKHj4IWHb0spMC8szXiUkgw1
Fwa0izKapTyj8LreSg7eOr6j7OT0Xab+IuutrXTQ4sEcrV1yUoRN0Ttq1Eo6
/1k5aNB2Oak9u7Z4wc0W6lycZznaUk7Dr+0N1QxvoeQan6APhWV0fcfg24cn
tdDeKpOvGj5+X//Cwn/tVjaTScOK4m/6lVLcrcwxninN1J6od+d6azHNrtRx
SvdopoDVlr+sOFRE8yvWbbyg10xpY6buyhhWSLLqqrR3rQqaaLjhTcC2cyQ7
b5N7skBBn7veOxwkz6ekiobfFBEKmvlVWpd6ZS65z6rMue+hoKezl/2Uosii
ogUuBxKmK+gWFWq0PjxFLqaeYQZ6Cqp1v7a7tOIkvb7skO3fV0E16hsrpxmk
UOlJ40b3zibSb2rcZp0dT/GPb6beaW8is97rjs7yj6bY5pKc7JYmCjf9oXqo
dih5n0iZXdjcRLYtu1McE9YKH1urhbK2JqqxN7o3JW6P8H9ik7qpo4n6nPPs
e+dmnFhmUvH6ZFcTaXnEnN98MkmsPKw7YNCnCqqavKU+dXiaSE58sC7QSEG+
g+37/CrSxUnNmdO22ygoftybNW02mSJnzOVh7SsUlKn9W8fguCxxsv3b5OCt
CkrPef2upTRH3I6O/+P3owqad+r2kNz7ecJhSNr4mgoFnU+rj908s0D8XjPs
Qx+Vgt4XnT+dFHVOpNu5XHQY1EwUvKiq8IJMrLd0erDcupnurrjvEXyvUOz6
w+Nph18zZVyO+yH3XpEYqXrR9158Mw2xqN/mXl4s9CfpyW9eaibLlI7t+w+U
iPGN7VPOvGymyvFZGf5UKrSuTHIyMW4h//I+I6m+VLi6V4Ybu7VQWLCr+xqP
MmHSafbGP7KFDO8rj9lUl4mIjWPCa0tbyEW3d6bDULm48dw+SO/PFrJ7GHHk
M1e56Gs1o3SmbivZ2/31xCBULr6ofZWu7tRKbweu+nX4HrmY6x3a7rqzlWof
6a9M2SkX+a13vlfPbiXZq8WO7qvlwi9m8GG1hlYKP1ac8LeZXDhs6O9p3F9J
xrqXFls+KRN5sS2DvCyVJDNbfLQqvkx8GOBz7UcfJe2VHa/0mFAm9L+ft/Hn
GCWZ3vAJK5OVikem/46IKlGSc0C0duKXH5/v66FTTZqUVP4yarAstkSka5w1
3qrRRrOcjUKr24qFffnOVasntNGhShEWZVYszpXPm/67SxsNXb96ROmGIhFy
23ZBbXAbJdLBP/olFYrlj+IdJx1pI0V+Spn5eZno1etFf7XiNtp0O3lv261z
4pDO564md9vIOfTx3PqHBWJNZHDj2Wdt9MXcu01ljflC+9PBTlsHqGjRuvH6
lh/nQXfurF5Ro1VUW53u9vKnXNG1/NSXddYqOubkY+K1Olv0GmH6s6eLikyG
eV59ZZAlol4Ne6PlqyKZR7HLwLuZYmvquAVvQlVUc9/aSLk9Q1QNzHFVj1RR
Qck0g2qddGFsXbDUKl5F5ydmPX1yOk00jhyuE31CRQ02s3dP/fq48PCX339/
9uPvKUhwGxyQKOo/rF8aU6iipMrQ141rD4ktIX8XWJ1XUeZolZ1+ZozQnjwu
8l2FijqOHGvUCosQMd9vvlNX+fH9SZfONO4IEr498rn79Yp46XXSxPvfHZbe
TyH4fNko6fPpEb7/0EXp+8kNv+9pnvT76CF+/zVr6fdT9/N58/PRdTy/Dz8/
ReB8zPh86AjOz5/Pj9RxvvlDpfMltRV8/tP5/MkU9xPO90OGuL+pfH+0Cffb
j++XMnH/tnz/9Bnmw4/ng9Zhfq7w/FAQ5msfzxddwPxp8/zREsxnMs8nHcP8
6vP8kjvm+zLPN9Vh/i14/mk09sOE94MGDuT9OcH7Q1ewX3qTpP0iZ+zfRN4/
CsR+HuD9pIvY3z6vpf2lVdjvOY3SfpMu9v8x7z+NQD6c4nygBuRHJecHRSFf
AjlfyBb5k835QwHIJ4cQKZ/ICPnVR0j5RebIN2MTKd9oGvLPKVXKPxqGfBzI
+Uj7kZ/za6T8pFDka7m7lK+Ug/xVD5HylxTIZ+0SKZ/JGfm96oSU31SPfHfP
lPKdUpH/y3Kl/Kez6AdvHakfKB39UTBe6g86hn6x0JL6hTzQP3Mtpf6hRegn
b0+pn2g1+iuySOov8kC/qTlK/UZLuvvvmdR/FIF+rBgv9aOIRn+qutb+058i
A/2qVS/1q3iM/m3oLfWvsEI/+7lJ/SxOoL+1Zkr9Lay6+91W6nexH/0fNl/q
f5EMH5i7SD4QP8IPf+lLfhAT4AsN9oUwgj8SvCV/iM3wyXz2ieiUsV+ePpD8
IorgG0v2jfhwlf0zj/0jGjrYRzHsI5EPP8U3SH4SjvCVJvtKaMFf71dJ/hIL
4LO3AyWfiST4bQb7TZTBd/vYd8IA/qtj/4nv4MMK9qHoBz+uZz+KTPgym30p
tODPOPan8IJPG9mnwh5+rXgs+VXUw7eazZJvxYfn7N8Ed8m/Iho+NvKSfCw2
9MjnPXjdwo393P3+d27s5xZ8fmwT+9kW368PP3vj9/kasp9H4fcrTdjPGXg+
Q/h5BJ4/P4H9/BPOp2sp+9kc53cWfr6F8/WFn8/g/AP/y352xf2E8v2QGe5P
zvdHK3G/Ryezn2tw/2v5/ulPzMdi+HkA/GwEP9dgvvrCz5/AzxU8fxSN+dwI
P1thfvfw/BJhvs3g5wzMv48B+/kM9sOC94PisT+189jPjtivIjv2cwH27z3v
H83HfuYsZz+/wP5q9GE/n8N+x95nPydg/2PfS/tPcciHRqv/97NaA/t5LfLF
6iv283rkz40efk6An32RXyVT2c8nkG+RQ9jPp5F/1px/Ig/52AE/pyM/LeDn
R8hXR85X4YL8Jc5foUI+W3E+izzkdwv8HIZ8X8z5LqKR/36c/0IX/fByMvt5
JvrDj/tDWKJfQrhfRI/+EZvQT17cT2IO+mtGPft5P/otGX6uR/9Vwc8j0Y8D
ZrGfDdGfmzTZz2vRr4e4X0U1+rcX968IRj/XwM/L0d918PMN9Hs697sYgv7X
KmQ/T4APwuFnBfwQCz97wxdjO9nPmfDHPfh5JXxyD36+Dr9Uw8/h8M0z+Hkz
/ONXwH42gI/U7rCfZfBTAfy8C76Kgp8t4K8i+NkaPvO7zH4eAL+NdWY/D4Pv
6uDndPjP25P9nAEfaj5gPz+CH6eXsp+t4MsAM/ZzJ/xpQuznUPg06Bz7+Tn8
6l7Ffo6Hb4eOZT+P6/ZzIvv5BHycmcx+3tkjn0/jdY049rMZ3l9ykP0ch89v
NGA/v8b3F/3Cfg7q4ed3+P0tM9jPlni+8fCzEs/fUMx+TsX5DIKfs3F+OvCz
Hs53H/z8Bc6/2pH9PB/3sx1+7r6/cfBzJO63fQ77uQb3rw8/m2M+bODnHZif
X+DnaMxXDPx8F/M3EH7ehPkMh5/lmN9+8HMI5jsLfu7E/I+Cn22wH6Ph53HY
n1L4+WEPP6/F/tnBz3uxn0fh50bsbz/4OayHnydj/1/Az+bIBwX8/Az5kQs/
pyNfguBnN+RPPvwcgXyygJ+tkF/q8LMd8m04/LwQ+RcIP5shHxfCz6k9/HwA
+RoCP1cgf8fCz13IZ334eQ3yex383IF8j4efi5D/bzn/qRz9oIKfZeiP9fBz
DvpFA34ORP9c5P4hL/STCn4OQX+NhZ+/Qb+ZLWA/+6L/Kh6znxO6+3EC+/k4
+rMDfi5Dv9bAz13oXy3uX+GMfi6Hn8vQ39XwszP63YX7XRzv7n/4OQs+0IKf
U+CHZ/CzPXxhCz9PgT9S4edI+MQHflaHX17Az7XwjQ38/Bn84wY/P4ePEuDn
WvgpFX5eA18Zwc8W8NdY/vulcIHPOuDnIvhtGfx8Hb4Lhp+t4L878HMSfJgA
P38JPzrCzyXwZS78bA5/BsDP38KndfCzF/xaDz8/hm838d+HhQ7+fuwBP6fC
x3We7OctPfL5f9N/nA8=
                 "]]}, {
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0]], 
                LineBox[CompressedData["
1:eJyl2EtOVUEUheEDM2EkzMEhkNCgRZOOUV4R8RUlylMNqOADxCcDMk7BARgT
W1/nT+Xezs3K3mvX2qvq1Kk6C0urt5bnp2lamZumf/+f/xycrP3+tTj9/30D
X4K/gL8G/yqwfOubfw3+GPXM/x5xseN/AuuffomtL7/GK779W8/8D+B34Pcx
P+orvc6XcfnqMa5++9V/+RUvv+xHvnrk66/xi0H9VU891je//Lb/6s96jn8e
2PVQcXGNN8oXvwn+24jLL3wa+Ax8HPHin0T+S/Br8KuIq896+5F/BN4DPw++
+U/Ah4EfgJ8GVo/9ma+++6HX+uoTW+9hjG9cvvhexLfA6+DH4G3wBngT/Ah8
F7wDvhPY8Uuvcfm3wbvgZ+Gn/Zmvv65f5/dFrE/7c725Hn2era8en0+xetxf
za/90v2o9vPav30/qK/y631qfr2P631e+Z43RvmjuM5P9lv3heLrp/3WeX3W
89qo3xUf9dfzfc1vnY+r/uj9sPTXfU69+q+f3hfFdd+o+6T17K/uc3X/1m9x
+SUufvlT9/Pya1b+aD81XsVnrV9+1v1efq2PUT3mj/LLn9o/avyqrx/lV30/
0v/R56Xq/4jx7L/qqa/01/fCUf9rPmu9/Yy4ftX3tVqf9XwVv54P+7mJ90v1
X+PpT82PWL5+Vn3PC38BvH5xoA==
                 "]]}, {
                Hue[0.1421359549995791, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]], 
                LineBox[CompressedData["
1:eJxd13k8lWkfBvAzGFpteSXDtGvajNKipvq1JyKvJKN1eiOkmnbZKkqlklKR
VEScLDGGst+Ww2mokyntKwdxnFORSlrMzHNf88fb/NNnPj7neJ77/v2u62vg
6o2ObmoikcjzG5Hon39T2iPP7JDXkgj/vf7i4JneVkt5h364qNsWzWwC3G/k
9q8j93ln33rFJDONviMTZR51VHrtzqsPh39nbLde45CqOlp5SrZStjiXWWjJ
31jMkpNv6eXLQYeLmHVSeZDqupyme/gZLwkrYbpT+tUMWVNPgwfvClH5l7ET
Yw3UMjUayEKnvCpIp5ztzem6nZXcQDf1ug+vnlvBjN9vk2Q7NpJlskz+g5mU
1a/ddizvQyMNyE7Ik2VKmeyE5x67sy9oQHrEGfs3UhY+Xn+T709NFDHQo6j1
pZR57alslNxqol5lmgPmp0nZhc4IPePVzdQQvTKqZryUZdXKNEqamql49p+n
y45WsEeyh49t3BXUI++ssqqknEUvLKoLfqigxtGpffRvSdjrqiO27nNaSP2b
Q8b9K8rYb2Oe3dVOaqHQP+s0n18oZe2Snxb93tVCpzxmylK8S9jM8AhF9EIl
vRs+ZYXdsGJWdafvt0aRSnLKTinvn1rI9Kf1Pxh8V0n3Wm0+RL7PY0Pid0yb
pK2iUr90DcX4HLYi4mz/k9NUtKzDdJvtumzmULXfs3WtimQzVq13OZPJNmyN
n3ExVEWLljXsczyezsSp3tXqSSqKs3GRVL28xJa/t85eWqgis8znn9IcEpjV
ibzCdzdU5JYVkVyz4yxzijov6/dARTcDNvW6v/Y4kyR3tWo8U1Hb8pHBO58E
sPmTNXa9+fv/lc46V65c8KLAbmOdTB6r6PqDCVXjVYfI373VNPP238+zq7rQ
al0U7e3xKUFeoaJ7ppe+jFoSRxmFPgMfZ6so7VOi1GpFIombd4SXxapIcaQm
22B+Cp1QTujB9quoROd+iUHPDOr+1tCo1UtFC/K0Qt79kkkd0VHdfW1UZDC8
wXmDOIuedr2b52Omou132+YVPLlCwe/HiLt1KSnmzZw7/b/JJZGFX/7cGiVN
aNahu3r5VK2n/71dopIWjNax7KdTSPcbkiTjtylp9ZbLBaYdRRR4dZ218Qwl
dXUNzu/uXkxtoidjDHooye5ZwUe9OSVUcjxw5tTqFnr+6Mm0XKNSUljuLEyP
aKF3JiWNR56XUlTNj+khTi3kuO/Y0O9iyughXbF8qt9Cn9oLhzbbSOhmoFbB
bZmCyu742wcoJVQkLf1vyAEFBXr2vui6u5wyZpk+MJyuoKw+G23VNCvozeYY
B/HbZlJ7vty03b+Cxih0tVddaiajMjfv9PoKMv8wssNtaTNNGlv56PcpUjIw
VeXX92wmsWXNsqC9UmpM1fzcPb+JfvWvsT2XL6W7V6fs1vRsIu9h19LCaqXk
WJxor23YRM+7+oQ9eyulVNXFapfSF2QVa+k3uENK4Ur7ZwM2vKDOlyED3r6Q
UuWmzsqEfi9ozo3ozg6JlLY/SV5sVt5Iel7/G/QsTEoH13SeV/zaSFOGy0e4
zZGSZORircmmjTSCpfV0aaqgUtuV7SsrG2hyzQW9UzsqqHDKsahknwaqnTBM
pvumnCID7KO9fmgg/6h+n2Su5bRKRz297UE9fdx83eHlZQmtch81OPJIPbU6
7TK/+KqMViijHNJm1dPk4nGjZ5uW0Ti/GPVDn+RUnuS2YaJVKd3N3Va9L0dO
bbM1M7RmlFDqwQTXth1y0tU412epVTHdXuwTPvgnOdm43DRtmVpEFc2xTzzV
5NTdyOTDppZ8OlCm5aIvq6OK5Xah8/1yyWFTgsLtXB3NZlrjk19dIcky5yDx
ljoyTY4LVrfNorUxPWcY2ddR7WDzex1Hf6Pxr0/nK0fXUUjlvQ15QWnENC/N
de5TRyM6D51eJkmiAuNa54AvtbS72+bhpi1xtHDGtI49r2rp8E6/Mx87I0k/
5fVKv8ZactheODa/2wG69FU+98DPX68Sfs7m4vNN64XPs2R8/w414ftZKn6/
wVvh9zNDPF9mmfB8bAGev3Sg8PxMjPezFAvvx0bg/asKhPdnDjifMFfhfNhJ
nN++/wjnxy7gfI2dhfNlgTj/UerC+bPjuJ+rs4T7YSLc39NE4f7Yd7jfcUy4
X2aM+29fJNw/08N8fMvngzliflikMD8sDPO1js8X88H8hd8W5o8FYD5jioT5
ZGswv+p8ftlozPdZT2G+WTTmvxuff+aM/Sjh+8G8sT8fzwv7wzoY368TfL9Y
AvbPhe8fy8R+uvL9ZDUmfH9P8/1lLR18vy34fjNt7P8gvv8sA/lgzPOB+SE/
pDw/2GHkSxLPF3YK+dPG84dFI58mvRXyiXkgvw7x/GLFyDdLUyHfWDDyjx4L
+cfuIx/383xkjsjPJaIh/+QnS0O+Gm0V8pWJkb+9zIX8ZTU/8nwerhDyma1B
fi9vF/Kb5SHf3e4J+c5akP9xPP/Zu3beD828H5g/+uOirtAf7Dj6JfCo0C/s
BPrn5Rehf5gP+sm4v9BPzBv95R4s9BfzRr851gr9xmai/3p5C/3HitGPIU5C
P5Id+lPsK/Qn/Yh+/Zwu9Cu5oH/9MoT+pQT080ZroZ9pHfo711Xob/q3329P
F/qdVqP/f3sv9D8Ngw9e+go+oH7wQ9trwQ90C76IzxJ8QQvgj3PcH6RWzn1i
y31CV+AXa+4X6oJvikSCbygJ/knk/qE2+OharuAjugk/hXM/URF8xbivKBT+
EnF/kRg+C+E+o2b4zYz7jbp5cN9N5b6jcfCfK/cfpcCHZvqCDykPfjzP/UjD
4Etv7ktaBX8Wc3+SNXx6uUzwKVXCrz6Rgl+pF3z75Q/Bt2QP/xraCP79e464
j68dE3xMiV/lsxw/bw/lfp6Oz++GnzsN+fcfhZ9T8ft7w89D8Xy74eepeH4r
+FkT72cEPx/G+1vCz1txPpXwsxnObwH83AY/j4WfL+P8B8HPu3A/UfDzatyf
Hvx8Evf7HH7OwP1fgZ/vYD7U4efjmB85/FyP+eoFP8dj/k7Cz0r4OQ5+noj5
7T6C+7kE8+0CP+tg/iPgZ0PsxyP42Rr7Uw8/22C/QuHn9di/+qXcz0nYT4/5
3M+LsL+j4Oeh2O9u2dzPtth/413cz9eRDyvgZxvkx+HF3M/bkS+zH3I/+yJ/
RHu4n4OQT3nw83nkl/1n7uc45FvfMO7nA8i/CvhZE35eCj9/Rn72hZ+rka/7
4Gc/5O8B+FmJfDaBn0uQ30vh5yrk+wX4eTPyXwE/t6IfXODnWPTHO/i5Hv0i
g59D0D+L4Oeir/x8Ff0VAT/noN+84Od49F88/PwY/Vj3jPvZCv3ZVMr9rAs/
68LPnejfRPj5IfrZCX6+g/6eCD+bw8/h8HMk+l8DfvaHD27Bz7fgh8nwszt8
8ZT7gsLhj+/h5xT4pIn7hK7CL23cL5QD3xTCz0HwjxH8PBs+2gk/z4Sf1sDP
1vBVCfcVjYC/NsHPOfCZHfwcB7/9wf1GFfCd0xLu51T476Ih9/MW+NBkGffz
JPixvJD7uQi+DL/E/bwG/rSDny3g04Rr3M858OvYDu7nPPhWTZP72Rb+tdjG
/dwbPvbx5n4Wf5XP2vh5hwf383x8fvYW7ucMfP8jDe7nDPx+7ffcz2Z4PrGU
+9kZz/94EPdzFt7Phr8fs8D7x/P3Z7/gfCRLuZ/P4/xm8fNjmThfTX6+LBzn
nwU/J+J+BvH7YQa4v5/5/bEJuN98+Nkc9+/O75+ZYz6C4WdvzM8IPj/sHOYr
B36OwvyJ+N9v7CTmU8T/vmNbMb/O8PNCzLcm//uQ5WL+18LPG7Afmq+4n4P+
/+9P1g/79QB+LsX+hcLPMuznfvhZhf2tgZ874GdX+Hko9t8Wfq5EPkyEn08g
P9rh5yTkyy34WYz8MbnL/ZyJfFoFPwcgvxLh5/vIt+nwczTybwn83IJ8jIWf
vZCf6+BnCfJ1FvxcgPwdAj8rkM/u8LMP8tsXfr6BfN8DP/+b/7fhZy30Q+98
7ucw9Ecs/ByPflkPPyegf4y7uJ9D0E9W8HMg+ktjL/dzAPotpo77eSH6z2oj
9/NN9KPJEu7n5ejPcfDzZPTrdxncz+7o3+nwczr6eSH87Iv+XgI/r0C/58DP
W9H/m+DncfDBa/jZDH7ogJ/r4Asf+HkZ/BEKP+vCz1Pg5yr4xQJ+1r7OfZMK
P+fDP6fh5y74SAI/P4KfwuDnavgqBX6Ohb+aSrmf8+CzY/Dztye534bCz/rw
M8HP8+C/1fBzBnzYF36ugB+Pws+T4cuD8LMn/JkNP/8Mn/aScD/Xwq9y+FkX
fs6En13h31j4uRM+3hrB/fx1Pv8F1DHuRw==
                 "]]}}}, {}}, {
            DisplayFunction -> Identity, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0.5531643257291816, 0}, 
             PlotRange -> {{0.5590169943749426, 
              0.9335877877036384}, {-0.1872600890703795, 0.1872600890703795}},
              DisplayFunction -> Identity, Axes -> {True, True}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0.5531643257291816, 0},
              DisplayFunction :> Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.7740235306730052, 0}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.559016994374948, 0}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.5590169943749478, 0}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=4, mid=(1.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0.5590169943749426, 
              0.9335877877036384}, {-0.1872600890703795, 0.1872600890703795}},
              PlotRangeClipping -> True, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], 
                 LineBox[CompressedData["
1:eJxdmHlcjen7x4/IVk1JoSyVCTFapgWlXMmQSSkVJWkhUtoQLdNytGKKo9Jy
6tDETEZKKJFynYgSZcsyUZbzPEJFpTAlfR/3uef3x69/ej2v86z3fV2f6/N5
a20Kdtwiw+Px/EbweN//T6lt08s9LQEe/dPpFHlsLZFA4aD5p2Umgeh8Lzka
z0ug73na6xEDUTh59PyI1CoJdNlo7FHfmYi2m0RrC+slMG/Now9flFKwtd/H
5eFjCTSoTLjYrXEYi39+Lbj/VgLV6TZvaj+m4zRv45rV3yTwzmVKf21EJm47
/1twtwoDMkZhb9f/nY0GXwvmu+gywO7VLT/5mxC3Hy1hplszEHZu3dbjHbk4
uzxtXqs3A2V7TJcofMrDwj7n7brRDCw/myXYmSNCA/n1X05mM3Duo2K96iMR
zuvVedZ1noF6420LHhSLkBdwPuRYEwPaej8nDP0owjjdjLO+bxhgzLQKjC3y
0Guv7covPBYq1xZNNB0W4qJSMye5KSwIUqttqkNysODo3nebdVlIfVAnWpCT
haEJ7b5NlixkVBbrnOEfwUXDg2Gajizsypp4Okc/HdecFw0u8mah0abB8mSJ
AC1LVtcMB7LQMmt/n61CCqYli6dvCWchcl9FZQk/CQdiz/l781ng/Rp8raSe
j3aCizv7ErnnrS8xHN+5G5tin93R3s8Cf6Lf8b5NPpgxZ43VMHfc+PWX/XVD
CyEvonRk5j7uOHak65VJ/nB1G1+d9/16m6GgiHXhUO889qxrLAtj7H8953Fi
LzQ1PttxJYwFhZR++69sEhxT7u9wDGKhr+4nscbr32FejWjYdDMLCz2+Kny1
E4Bim97anHUsGHleLOqITQNRjWJb1kpuffz0sjMTMyBv40qvjaYsuL2NaAL3
TAgcKpBXnsuCKC4/u3RENhi4GGq0TWZBN7q41zA0BzrLOva/lWXBoWO+3e/n
hLAv4N3JDR+5/Z6o96Tnci4oGT4fdnvBgGVHYqScIA8U8rV4Co0MLLwol/FK
TwSb7B88OnKJgcg5vD+fZ4tA5iPfaspfDJhNq+quaRKBknFJcHkaAw7DP+pl
3xOBW9XlpymxDEw2n7v2UoEIfOxzLaoCGBhzp/lI9TIR9P9+a5enGwN2zUxc
2IU8qI6YGiZYycA7+zdhXV9z4cT06jW+Cxko3dFr6aSWC3MKTNQHZjPgsyFw
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
                  "]]}, {
                 Hue[0.9060679774997897, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 
                   NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                 LineBox[CompressedData["
1:eJyl2ElqlVEQhuHf7MSVuAeXEFBw5MCBxjbXJho7xCadiD1KbFGjEhGdZJhN
uBIRHD2Tl8O9k8tH1an6qjnn1PkPLh4/fGRhmqZjB6bp3/+52dH9nd0/h6b/
vwuBT4NPgU+GvnL9Xwx95cVPfCn8q38efCbWL4W+/FfD/3LYk5/xuV58IuTy
1Z/5V+7666Fv/NqvepW+8VW+q9+uga9GPZS7/kroK18JrH/juTEYj/LLYc96
y199/ZU9sfvpdtgTq38HfCvkpX8ffHfQ3j3wg0F56a+Hvvy3wJuD8g3wQ/AT
8FPwo1iv/Bn48aD9l4P8nsf6N2HvM/gt+AP4VWDz8y7sfQy5/JUb7yfwF/Dr
iP9n8JfvHngX/B28A/4W641Hvupr73fkT/kP8K+Qm4+vwUe59dOf8VuP98HP
/jH/5lP/L6J/zH/1o/7cP54X7lfPl+1Yr75Y+57Pnq9rcb67/0fvE+8j70vv
O+/Xuh9vDt7XNT+MzlfOS84X6jtvKXfe0v6885vzaMnFviecf33fab9w+T8L
dp6UT70/nPfNX73ffA8Yj+tnYU/+8ql4xPPmQ3m9h8t+9U/xqX7Rvng03tF8
ya/yU+/94l/9qb/Kd73/y578y1/lQzx6vum/6uX5VXxr/4/uT/l53lW9q//m
lVc/1v0iNn91nld/jZ4/VU/zX/1c9al81f4qe8rre2Otr3iKn/X0/qt46/vo
Xy1mzBw=
                  "]]}, {
                 Hue[0.1421359549995791, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], 
                 LineBox[CompressedData["
1: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
                  "]]}}}, {}}, {
              Thickness[Large], 
              GrayLevel[0], 
              CircleBox[{0, 0}, {1.5, 1}]}, {
              Thickness[Large], 
              RGBColor[0.6, 0.4, 0.2], 
              CircleBox[{0, 0}, {1.326000501983965, 0.7129357132741541}]}}, {
            PlotRange -> {{-1.5, 1.5}, {-1, 1}}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0.5825487763919289, 0}, 
             PlotRange -> {{0.5852917682387172, 
              0.7608432464331709}, {-0.06155622931714025, 
              0.061556229317139916`}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.5825487763919289, 0}, DisplayFunction :> 
             Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.6148200908120343, 0}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.5852917682387183, 0}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.7608432464331709, 0}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=5, mid=(1.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0.5852917682387172, 
              0.7608432464331709}, {-0.06155622931714025, 
              0.061556229317139916`}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
         TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 0, 1]], 
                LineBox[CompressedData["
1:eJxdmHlcjen7x4/IVk1JoSyVCTFapgWlXMmQSSkVJWkhUtoQLdNytGKKo9Jy
6tDETEZKKJFynYgSZcsyUZbzPEJFpTAlfR/3uef3x69/ej2v86z3fV2f6/N5
a20Kdtwiw+Px/EbweN//T6lt08s9LQEe/dPpFHlsLZFA4aD5p2Umgeh8Lzka
z0ug73na6xEDUTh59PyI1CoJdNlo7FHfmYi2m0RrC+slMG/Now9flFKwtd/H
5eFjCTSoTLjYrXEYi39+Lbj/VgLV6TZvaj+m4zRv45rV3yTwzmVKf21EJm47
/1twtwoDMkZhb9f/nY0GXwvmu+gywO7VLT/5mxC3Hy1hplszEHZu3dbjHbk4
uzxtXqs3A2V7TJcofMrDwj7n7brRDCw/myXYmSNCA/n1X05mM3Duo2K96iMR
zuvVedZ1noF6420LHhSLkBdwPuRYEwPaej8nDP0owjjdjLO+bxhgzLQKjC3y
0Guv7covPBYq1xZNNB0W4qJSMye5KSwIUqttqkNysODo3nebdVlIfVAnWpCT
haEJ7b5NlixkVBbrnOEfwUXDg2Gajizsypp4Okc/HdecFw0u8mah0abB8mSJ
AC1LVtcMB7LQMmt/n61CCqYli6dvCWchcl9FZQk/CQdiz/l781ng/Rp8raSe
j3aCizv7ErnnrS8xHN+5G5tin93R3s8Cf6Lf8b5NPpgxZ43VMHfc+PWX/XVD
CyEvonRk5j7uOHak65VJ/nB1G1+d9/16m6GgiHXhUO889qxrLAtj7H8953Fi
LzQ1PttxJYwFhZR++69sEhxT7u9wDGKhr+4nscbr32FejWjYdDMLCz2+Kny1
E4Bim97anHUsGHleLOqITQNRjWJb1kpuffz0sjMTMyBv40qvjaYsuL2NaAL3
TAgcKpBXnsuCKC4/u3RENhi4GGq0TWZBN7q41zA0BzrLOva/lWXBoWO+3e/n
hLAv4N3JDR+5/Z6o96Tnci4oGT4fdnvBgGVHYqScIA8U8rV4Co0MLLwol/FK
TwSb7B88OnKJgcg5vD+fZ4tA5iPfaspfDJhNq+quaRKBknFJcHkaAw7DP+pl
3xOBW9XlpymxDEw2n7v2UoEIfOxzLaoCGBhzp/lI9TIR9P9+a5enGwN2zUxc
2IU8qI6YGiZYycA7+zdhXV9z4cT06jW+Cxko3dFr6aSWC3MKTNQHZjPgsyFw
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
                 "]]}, {
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0]], 
                LineBox[CompressedData["
1:eJyl2ElqlVEQhuHf7MSVuAeXEFBw5MCBxjbXJho7xCadiD1KbFGjEhGdZJhN
uBIRHD2Tl8O9k8tH1an6qjnn1PkPLh4/fGRhmqZjB6bp3/+52dH9nd0/h6b/
vwuBT4NPgU+GvnL9Xwx95cVPfCn8q38efCbWL4W+/FfD/3LYk5/xuV58IuTy
1Z/5V+7666Fv/NqvepW+8VW+q9+uga9GPZS7/kroK18JrH/juTEYj/LLYc96
y199/ZU9sfvpdtgTq38HfCvkpX8ffHfQ3j3wg0F56a+Hvvy3wJuD8g3wQ/AT
8FPwo1iv/Bn48aD9l4P8nsf6N2HvM/gt+AP4VWDz8y7sfQy5/JUb7yfwF/Dr
iP9n8JfvHngX/B28A/4W641Hvupr73fkT/kP8K+Qm4+vwUe59dOf8VuP98HP
/jH/5lP/L6J/zH/1o/7cP54X7lfPl+1Yr75Y+57Pnq9rcb67/0fvE+8j70vv
O+/Xuh9vDt7XNT+MzlfOS84X6jtvKXfe0v6885vzaMnFviecf33fab9w+T8L
dp6UT70/nPfNX73ffA8Yj+tnYU/+8ql4xPPmQ3m9h8t+9U/xqX7Rvng03tF8
ya/yU+/94l/9qb/Kd73/y578y1/lQzx6vum/6uX5VXxr/4/uT/l53lW9q//m
lVc/1v0iNn91nld/jZ4/VU/zX/1c9al81f4qe8rre2Otr3iKn/X0/qt46/vo
Xy1mzBw=
                 "]]}, {
                Hue[0.1421359549995791, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]], 
                LineBox[CompressedData["
1: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
                 "]]}}}, {}}, {
            DisplayFunction -> Identity, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0.5825487763919289, 0}, 
             PlotRange -> {{0.5852917682387172, 
              0.7608432464331709}, {-0.06155622931714025, 
              0.061556229317139916`}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.5825487763919289, 0}, DisplayFunction :> 
             Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.6148200908120343, 0}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.5852917682387183, 0}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.7608432464331709, 0}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=5, mid=(1.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0.5852917682387172, 
              0.7608432464331709}, {-0.06155622931714025, 
              0.061556229317139916`}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], 
                 LineBox[CompressedData["
1:eJxd2Hlcjen7B/BTFFJmLCFLirRZSimR3CctpoMIR0rLIS0SLdo3R4SJlklH
JCmM0QmlUdbpPpbSNI21E4oRHe2UpSZtvvd1nXn9/vj5x+t5PZ3nec59X9f1
eZ9He2vgOm9FDoezXYHDgf+3pozZOGOfjHD++zfxuMGygwky4j9f6Wzs0FrS
I/puc1coI2Y9Gde6nwqIrm7Xoro4GREFayQUPfYj2vOLZr+JkpFc+xNmo/SD
SMIS24amUHY9zwTHZtFuYlU0wUc1kJ23PNpknRdOZHbzZwX6yUhly2LpLcso
8ld702STLTKS9va70TGXGBL5qPFztIuM2HlqOTZ9iiWq3nVjg51kRKuMo1c6
FEda5rlnLHVg12+/M+yHuHgSEJ7trWQtI0vUFB07A+JJ/NAKl88WMhKdN4Mz
70kcWTD6jqv+AhkJWjez1r4wlpiePn31TwMZMdS4WqP7QwwxiLAL7Z4pI0Jz
mcrLvkjyWr21vWKajIhD351cHB9OogyXbuBPYn//R532qfO7ybvkvOTfx8lI
ieYNj/CEIGIfVP+9cwxbj+9Hu/619idPGxcfm6DKrpc0bGveLC9SMztPqqsi
I/zIVY8l6c7kfu+yUfqj2LEDx3asgzXRTwtLUIfjgp92FU9bTGWL3Fta2LG0
TpI21LOBjilfdvT4aBmRbOeFZ2VtocblP3dNYvcz/Hf6/YV+ftT+12EdzmPZ
/c2XvVV+uIu6DV+yeYU6e77IzAmmbiHUvPmk3zMN9vei094mo8PozpeD/c2a
bH9fGZFPARF0eUihZpCOjHR/upf3ICaKvjLOd9loCM+X2xFkGkNva5eoJhqz
+4+4WqnwSyyd/73yjyZzdqzdmv0yPY5u/D5e4GPF7l/6xT3NIp5KQvand9qw
47K7wrcJ8TTU+450F09GqlrcKjN2x1P/6rs3nqyVEfXDjpneavE07a3zsBHO
bL1/rHFtXR9Hz9WNqBpykxHu7ICjYStjqYXCwxTxVnZcM6VD6Vs0PcLjrhr0
ZdevbqYzt0bRWOk1YXuAjNxM2+JWeSSCFmtNNN0RLCN94hDumj1htGLpnc+7
w2QkcfDeIT53N521f+ezoUgZcdVzvpxfG0Qjl9p5K8ey+lr4acvO9ADaltmT
fyCe1auWSUyjlS+t9NQbEcfqv/vLv0Xpf2yhLhfumbfsZet3y23BpmWbaHR2
ulkl6xdxr/WjbRIH+m1siLEm6yf+z2kS34uTaJNXalAHOy9dHHEr6YoN2b+4
zd6cHYtuhMe7K/LJ+UPb/v3Orq/+m7hVu92TKG7JOuu4h/VbWojdnWXe5NuX
3830Wb81GEYFFqzzJ7X1biuPRrPrWSYW9OoFkqG24dqZETIy5azCldH1wWRX
6aE4S9Z/Zs8zE3P7dpMksWvOoSBW//V+RqQzjFiJuToH2Xp5W1X315REkFmj
Sjlc1o9paUYV11dGkU1KQ163vWQkKe9tp/hyNHlQ1lmg5Mn67b793ZpXMaTp
y971s13ZfpaUODyoiSXLEqY06vDZ+oUsK40SxZEJt86+VWP727Yv23GFZjyx
UPKraGX7352Zx/mwK5709BS337GTEZU/wk4cOBhP3iubJ5zmwvroFR72iye1
M+YnHrZk9Ttxnm31uHgy7Z59YQqrN0HP73N3HowjSZ3mQVdYP0saHy+VPYgl
O4vHN/bPZfWtqmT/VRpDuidtKA/Tl5GwbfWtF36PJtenJOzSZfUt8JDar/OK
IkWmGZUTtNj5EKf9wuYIcozb/tMK1u+8zBzr78vDyd6TXa33JrPrfetrfxwZ
Sm4GrZ2dxvrJ8OGrIYMjIaQyu/pjEet/QcOBBQHCIKJ79lyh4Y/sfP4SA5vi
AGJ+MnW5AutPSfMa205TP1Jqa9e1iM0DSZLv/tBkL3Kt+mjAEzYPDNVsJlsm
uxNjfU7NI9bvhok9gbcerifBKzrzF7JjzsLo5qlvbEhHxcbnnFE4n7ncweFl
ebO+4nmxRckBzTc2dOPrUfh5zvyustsP19MTG87g9fmtc32WJrtTqWgT3l9a
nGMYluxFVfN/w+dr+ymjlT0fne5xB5+fM2/T3+z56drPH/D7GRa2JLDvR11X
huP3byiPXGN4JIS+fzelDdaH33Ld8klkKM1/qeGA6zfVN42tH63gPMD1rdIe
85StL03sv47rzzkfdJStP21qTcH9EQ+zNsv/PZqeWLsO908rWzuN7R/tN4nC
/eUEpSey/aVlCUdw/8POjwpl+08HjCOwPtTPjEhi9UHnWiVg/ZTkRX5h9UPj
dBQ7oL44gQtesfqi3X03sP78z922ZvVHO37qxfrs3quWwuqT2kUEY/22nRr8
wuqXZmvWY31zOm8nsvqmCz/wLkL9VyX+MsDqn8Yqbd4G/SFYvFO/4HI0/XBh
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
                  "]]}, {
                 Hue[0.9060679774997897, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 
                   NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                 LineBox[CompressedData["
1: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

                  "]]}, {
                 Hue[0.1421359549995791, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], 
                 LineBox[CompressedData["
1:eJwt2Hs41VkXB3DKLclglKgkpbdMLimKmI1IF6Q4hUoo14pSSkISiZBLLsdE
qIRKrhFlnxRiKqkYY8oo5yepFKV0f/da5q+enoNzfnuv9V2fs2a5+6/3GCci
IuIjKiIC/1auGng467GQFBUVDcRnP7vxbUQvtKxdSFIrnPP8VT3p9B4Vo01d
QrL6duzow95A6nTULUXkuZC8K5wS6qkeTvXda+8EvhYS3Zx1c9R+RFJjb97K
sM9CYvRXzUuPnTF0dXF3bqsURxJ3WxZv3xhP7xq0df2qwhE5Vdl96zck0uoz
UyVfL+CIoNhWpaI4ieaMq5V8b8oRZWtVm4ArydSt89o6AY8jCVdi7mnzUqih
6fXcAV+ONKrK+Sdkp9AVHo8jpcM54r3OpWluXAqNnb/17PVTHMnaMWHlVrUU
Wrl8huBsAUe2lOmprdyaTJ/kN7n71nKk4oekh49tEj1+RlPz9l2OWP5bOqT8
8iRdJSHa6PeEIx5xraITy+PoiNai03oDHAlKWPexf2IMDekrn9k7wpGe8Xb+
6hJRtNj4e4/LT/Y8t2NXCyvC6ZENhm4nJfqIoKpL33NjED2nkFDqPbGPpF4e
3rJ4dBetd3/9on9SH2nvfbzr0iiP5t9aG6Ak20dMZ99zcHq1liS6nbcTk+kj
+ucPP36b70uaR6qMmyT7iNaXZXzRbfvJ1ZbkxjDRPhJuIbcie9JhMvy913ft
Z44sVeq/8uSPo6TihGSB+1uOuE0xn7B9ezTxtuVP7uvlSLNQtOlqeyzpvFB1
RPovjqQFRtjc6YsnqUaRU8Y3cyQ27sXo1JWJpFPjVYxYDUeErV4pUz2TiOap
VU4WRRxpDbLStluTTBK36CiM8jny9GkFP/BjMil4M7/QIYYjlYFRtj89U8iK
eMt/44M4YuybVaeSlULKGmqutntxZKQhRDOXn0I275v0adNGjkh35ppMdEkh
AbxqgY0VR0L6VEq2vU4m/D8ddduXcGR4QuA8Q6tkcjVEU155PkfUv8xMO7kn
iVx0DM82nsaRoQ9Whm1+iWRDzB37rbLs/o1Hfz0clUC4s7Etp8dx5HyxjfOd
5ydI1v7y8zKjQiK1/qqF2I/jJNrWO6Z+UEgGisLOyvZEEasfkar3+4Sk4Ueb
0fekCKJ29bHash4hmfy7G0/aKIxc1pc4IP+PkOirXzt7S/EAkXWzs+f9xV6/
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
fvlAEPq57L/9M+Nz+Anm5/8D55hrfA==
                  "]]}}}, {}}, {
              Thickness[Large], 
              GrayLevel[0], 
              CircleBox[{0, 0}, {1.5, 1}]}, {
              Thickness[Large], 
              RGBColor[0.6, 0.4, 0.2], 
              CircleBox[{0, 0}, {1.3747727085678447`, 0.800000000139355}]}}, {
            PlotRange -> {{-1.5, 1.5}, {-1, 1}}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0.5948322916739468, 0}, 
             PlotRange -> {{0.5962847936971694, 
              0.6892449231834183}, {-0.019172200298502615`, 
              0.019172200302793284`}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.5948322916739468, 0}, DisplayFunction :> 
             Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.6410061531827973, 0}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.59628479370245, 0}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.650895034736371, -1.281976654462132*^-10}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=6, mid=(1.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0.5962847936971694, 
              0.6892449231834183}, {-0.019172200298502615`, 
              0.019172200302793284`}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
         TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 0, 1]], 
                LineBox[CompressedData["
1:eJxd2Hlcjen7B/BTFFJmLCFLirRZSimR3CctpoMIR0rLIS0SLdo3R4SJlklH
JCmM0QmlUdbpPpbSNI21E4oRHe2UpSZtvvd1nXn9/vj5x+t5PZ3nec59X9f1
eZ9He2vgOm9FDoezXYHDgf+3pozZOGOfjHD++zfxuMGygwky4j9f6Wzs0FrS
I/puc1coI2Y9Gde6nwqIrm7Xoro4GREFayQUPfYj2vOLZr+JkpFc+xNmo/SD
SMIS24amUHY9zwTHZtFuYlU0wUc1kJ23PNpknRdOZHbzZwX6yUhly2LpLcso
8ld702STLTKS9va70TGXGBL5qPFztIuM2HlqOTZ9iiWq3nVjg51kRKuMo1c6
FEda5rlnLHVg12+/M+yHuHgSEJ7trWQtI0vUFB07A+JJ/NAKl88WMhKdN4Mz
70kcWTD6jqv+AhkJWjez1r4wlpiePn31TwMZMdS4WqP7QwwxiLAL7Z4pI0Jz
mcrLvkjyWr21vWKajIhD351cHB9OogyXbuBPYn//R532qfO7ybvkvOTfx8lI
ieYNj/CEIGIfVP+9cwxbj+9Hu/619idPGxcfm6DKrpc0bGveLC9SMztPqqsi
I/zIVY8l6c7kfu+yUfqj2LEDx3asgzXRTwtLUIfjgp92FU9bTGWL3Fta2LG0
TpI21LOBjilfdvT4aBmRbOeFZ2VtocblP3dNYvcz/Hf6/YV+ftT+12EdzmPZ
/c2XvVV+uIu6DV+yeYU6e77IzAmmbiHUvPmk3zMN9vei094mo8PozpeD/c2a
bH9fGZFPARF0eUihZpCOjHR/upf3ICaKvjLOd9loCM+X2xFkGkNva5eoJhqz
+4+4WqnwSyyd/73yjyZzdqzdmv0yPY5u/D5e4GPF7l/6xT3NIp5KQvand9qw
47K7wrcJ8TTU+450F09GqlrcKjN2x1P/6rs3nqyVEfXDjpneavE07a3zsBHO
bL1/rHFtXR9Hz9WNqBpykxHu7ICjYStjqYXCwxTxVnZcM6VD6Vs0PcLjrhr0
ZdevbqYzt0bRWOk1YXuAjNxM2+JWeSSCFmtNNN0RLCN94hDumj1htGLpnc+7
w2QkcfDeIT53N521f+ezoUgZcdVzvpxfG0Qjl9p5K8ey+lr4acvO9ADaltmT
fyCe1auWSUyjlS+t9NQbEcfqv/vLv0Xpf2yhLhfumbfsZet3y23BpmWbaHR2
ulkl6xdxr/WjbRIH+m1siLEm6yf+z2kS34uTaJNXalAHOy9dHHEr6YoN2b+4
zd6cHYtuhMe7K/LJ+UPb/v3Orq/+m7hVu92TKG7JOuu4h/VbWojdnWXe5NuX
3830Wb81GEYFFqzzJ7X1biuPRrPrWSYW9OoFkqG24dqZETIy5azCldH1wWRX
6aE4S9Z/Zs8zE3P7dpMksWvOoSBW//V+RqQzjFiJuToH2Xp5W1X315REkFmj
Sjlc1o9paUYV11dGkU1KQ163vWQkKe9tp/hyNHlQ1lmg5Mn67b793ZpXMaTp
y971s13ZfpaUODyoiSXLEqY06vDZ+oUsK40SxZEJt86+VWP727Yv23GFZjyx
UPKraGX7352Zx/mwK5709BS337GTEZU/wk4cOBhP3iubJ5zmwvroFR72iye1
M+YnHrZk9Ttxnm31uHgy7Z59YQqrN0HP73N3HowjSZ3mQVdYP0saHy+VPYgl
O4vHN/bPZfWtqmT/VRpDuidtKA/Tl5GwbfWtF36PJtenJOzSZfUt8JDar/OK
IkWmGZUTtNj5EKf9wuYIcozb/tMK1u+8zBzr78vDyd6TXa33JrPrfetrfxwZ
Sm4GrZ2dxvrJ8OGrIYMjIaQyu/pjEet/QcOBBQHCIKJ79lyh4Y/sfP4SA5vi
AGJ+MnW5AutPSfMa205TP1Jqa9e1iM0DSZLv/tBkL3Kt+mjAEzYPDNVsJlsm
uxNjfU7NI9bvhok9gbcerifBKzrzF7JjzsLo5qlvbEhHxcbnnFE4n7ncweFl
ebO+4nmxRckBzTc2dOPrUfh5zvyustsP19MTG87g9fmtc32WJrtTqWgT3l9a
nGMYluxFVfN/w+dr+ymjlT0fne5xB5+fM2/T3+z56drPH/D7GRa2JLDvR11X
huP3byiPXGN4JIS+fzelDdaH33Ld8klkKM1/qeGA6zfVN42tH63gPMD1rdIe
85StL03sv47rzzkfdJStP21qTcH9EQ+zNsv/PZqeWLsO908rWzuN7R/tN4nC
/eUEpSey/aVlCUdw/8POjwpl+08HjCOwPtTPjEhi9UHnWiVg/ZTkRX5h9UPj
dBQ7oL44gQtesfqi3X03sP78z922ZvVHO37qxfrs3quWwuqT2kUEY/22nRr8
wuqXZmvWY31zOm8nsvqmCz/wLkL9VyX+MsDqn8Yqbd4G/SFYvFO/4HI0/XBh
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
                 "]]}, {
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0]], 
                LineBox[CompressedData["
1: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

                 "]]}, {
                Hue[0.1421359549995791, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]], 
                LineBox[CompressedData["
1:eJwt2Hs41VkXB3DKLclglKgkpbdMLimKmI1IF6Q4hUoo14pSSkISiZBLLsdE
qIRKrhFlnxRiKqkYY8oo5yepFKV0f/da5q+enoNzfnuv9V2fs2a5+6/3GCci
IuIjKiIC/1auGng467GQFBUVDcRnP7vxbUQvtKxdSFIrnPP8VT3p9B4Vo01d
QrL6duzow95A6nTULUXkuZC8K5wS6qkeTvXda+8EvhYS3Zx1c9R+RFJjb97K
sM9CYvRXzUuPnTF0dXF3bqsURxJ3WxZv3xhP7xq0df2qwhE5Vdl96zck0uoz
UyVfL+CIoNhWpaI4ieaMq5V8b8oRZWtVm4ArydSt89o6AY8jCVdi7mnzUqih
6fXcAV+ONKrK+Sdkp9AVHo8jpcM54r3OpWluXAqNnb/17PVTHMnaMWHlVrUU
Wrl8huBsAUe2lOmprdyaTJ/kN7n71nKk4oekh49tEj1+RlPz9l2OWP5bOqT8
8iRdJSHa6PeEIx5xraITy+PoiNai03oDHAlKWPexf2IMDekrn9k7wpGe8Xb+
6hJRtNj4e4/LT/Y8t2NXCyvC6ZENhm4nJfqIoKpL33NjED2nkFDqPbGPpF4e
3rJ4dBetd3/9on9SH2nvfbzr0iiP5t9aG6Ak20dMZ99zcHq1liS6nbcTk+kj
+ucPP36b70uaR6qMmyT7iNaXZXzRbfvJ1ZbkxjDRPhJuIbcie9JhMvy913ft
Z44sVeq/8uSPo6TihGSB+1uOuE0xn7B9ezTxtuVP7uvlSLNQtOlqeyzpvFB1
RPovjqQFRtjc6YsnqUaRU8Y3cyQ27sXo1JWJpFPjVYxYDUeErV4pUz2TiOap
VU4WRRxpDbLStluTTBK36CiM8jny9GkFP/BjMil4M7/QIYYjlYFRtj89U8iK
eMt/44M4YuybVaeSlULKGmqutntxZKQhRDOXn0I275v0adNGjkh35ppMdEkh
AbxqgY0VR0L6VEq2vU4m/D8ddduXcGR4QuA8Q6tkcjVEU155PkfUv8xMO7kn
iVx0DM82nsaRoQ9Whm1+iWRDzB37rbLs/o1Hfz0clUC4s7Etp8dx5HyxjfOd
5ydI1v7y8zKjQiK1/qqF2I/jJNrWO6Z+UEgGisLOyvZEEasfkar3+4Sk4Ueb
0fekCKJ29bHash4hmfy7G0/aKIxc1pc4IP+PkOirXzt7S/EAkXWzs+f9xV6/
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
fvlAEPq57L/9M+Nz+Anm5/8D55hrfA==
                 "]]}}}, {}}, {
            DisplayFunction -> Identity, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0.5948322916739468, 0}, 
             PlotRange -> {{0.5962847936971694, 
              0.6892449231834183}, {-0.019172200298502615`, 
              0.019172200302793284`}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.5948322916739468, 0}, DisplayFunction :> 
             Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.6410061531827973, 0}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.59628479370245, 0}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.650895034736371, -1.281976654462132*^-10}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=6, mid=(1.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0.5962847936971694, 
              0.6892449231834183}, {-0.019172200298502615`, 
              0.019172200302793284`}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.006944444444444445], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], 
                 LineBox[CompressedData["
1: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
83GCNe5nIrCh5OHJJdT/2nm5G2VFYWXwqetV7Hyv3Bz0aKkQg+9//LHAh9W7
WeTTQY7KWBzze2LOBXY/gt+81rVz5HhBJf4Zzuq96Tf/gJVmCjTd5t38qjvV
y6ume6y+o5xXnNvM6l3c/DTAjdX/4qm9cxyZXlR9Pn7XZ/3h65G7589TvV80
X3w0Uo5v4vstCGV6E5aML9wVGIst624eqyE9bjoYYd8Yja1u80/50Pzwzvly
b3AUXu7+m3on1bvtJE/v/hF4eWHp21uk936fLxreCsN2d41fNNJ8vKRrqOsS
gie2Jk75L82rwTt1uhwKxo9nWmOKaF6eG59uvz4AOxivnODN6k+jODzB+6s3
omqyVQnV88uMxO1hrmg2pNnhKa2rLlu2ZthgpEflsudsrdrm/DLxc3dIVDQW
nKD52X5JRWWQCwwe5NyJ+kW5W//jH0Z4g5drVPUR9nuqzNSUhxYB8I+R6UMN
7Wf3YcufSoPhksmVT9Vsv8qhbnbPF4XAn4mPr+5k76OZ4LRzZUA4yMJyawfT
+24cs3R5dQToLU08/Avrf5ocm4pN7aLB8J+5G5+z81P90UfPtzIG7rZk7+qu
rdd6wxh7OcQ+svvvQKrXqbOPf+iogPM9b7cbTv24wWZao1IBya86TR9O9bl9
4/0WNl/LL26qdmP1qVmtEtrny2F1tz7/HsP0EBNp5zI7PhZ27p6lP4fpRXnO
bePb49FQp+50aj/Tl9jRL2lIUiRcmvS8nSnTn/hgu9UKVn83x5j+9SvNz+zs
TQ25IWDpOTNnFc2rKZMjb9sEQ4mXqn4L07vSfUCG0zR/0E+39Wug+tmok2Lg
MRKumIo6W9i63GFIR/MWW1g5rf+7FHq+zTfSNMsCn+nX+V+j+VmzfOhu3xHo
t8J7xmyav106lDxFP1zkqXMuhOp7fYN/8udA1Pi9ebCZ7Sd5nG3oywkh6Hc2
2s2E7bew0Gh2C4aj2HliWDX5AY8eXWvVkehjV/rouinNz9vGy21isOxIUnUz
O4/k9f3vRL9gei3udciD1YM62NqznPm77HyDi1ms/2m6xb8/xfzfH/dqdrxh
/VEcb9rcnfnDLcXl9j7sfoSg3vnQSY5xY+OSVjK9awx8PAv9Y9BX/8qbDUzv
wrJ7sWVVkdj5dtqlKaRvFzhz4vdwXHZM/FcL9fvVvySldg/Byi9Boz1Jz747
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
                  "]]}, {
                 Hue[0.9060679774997897, 0.6, 0.6], 
                 Directive[
                  PointSize[0.006944444444444445], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 
                   NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                 LineBox[CompressedData["
1:eJyV2F1ojlEcAPBnQ8Ys35mvMqa9w2JFLGQ1N9iyNhfStAxlWEjaxVxIabuR
j4hkF+ZCLpSRizWSr0xc+GgpXNBWu3BDrJmPSLnxu3j/vbtZv855zv9/nvO8
z3P+p6BhX83O7CRJGrOS5O//JFVb+qGib03y7+9T0f/+gX/iX3gQj2L8MXgc
HotH4jycnUqfn+2jAxtvEs4K+pu/87f/hGB+xhsRzH9qKv36GC8H/y5Kf3+8
3vWzfQrOx+PxdDwjaJ8Z9Hf9onxm4UJcgGcH+cwP8puLFwV2vBK8GC8NxluB
V+JVeDkuw6sDr8Xr8boMvRFX49rAW/DWwNtwA27EewIfwAdxMz6MjwRuw634
BD6Nz+L2wB34Kr6GO3EX7sa38WP8CD/Hvfg97sd9eAB/xEO+f31fF/M9xHk4
P3AhLsHFuAxXBK7E1bge78B1eDfei/fjNtyKT+HzQftlfAbfwFfwHfww8F18
H7/APbgXv8Td+Al+hZ8F8ftxF36D3wb9B4L2B/ge7sQdwXreCtov4Gbcjltw
U/C8+nvYjqvwBlyOS/ECPBnn4hzs+2g48GDwvnyHX+Onwfva9/11fBNfCr4/
F/E5fByfxMfwUdwSfL8P4aZgf7Ar2F/U4zq8GdfgTbgq2E9VBvs1XR7sH7X7
UfeTy3ApXhjsf5cE7V5fhOfhOcH+3vrA+iGy49luvWC9Mg1bf9ke1UPWjxOx
9ZrxHN96Nje43vOByI5vPWt/61nzsd52PPsb33o7Om8wnvW85wXW554HaK/X
xtNDwXnP9+C8yP62e/7keM7Xdu+f433N8PxKf8swf8+/Pgf9jed8o/hR/vbX
3h/X33y0841sPJ8v7fyNP4y/BPHt73rY7vNmfj5Pxnf8aD2i9YnOH83f9TSf
6Pfj/KL5m7/3z+fT8f4AdkPKXg==
                  "]]}, {
                 Hue[0.1421359549995791, 0.6, 0.6], 
                 Directive[
                  PointSize[0.006944444444444445], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], 
                 LineBox[CompressedData["
1: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
Ae+Lw2wKiF8aPaCgsGVoMFTpaOWdJfWgdDHud6frWmjS0ksVk3pRjVG72HSU
wBcTC0ck88vXtL6kdrkPvAy9t9qCzJPxGJZg6LcM3vSzWLlbqN8lEVMMrzvB
QYMhUh3B77G/Rva5qoJ+jl/Y782b6O+xgV3fbRq9Pg7Sbr+/yIneH9Vsf+sC
6f4wmO3/kSXdPxax53N8Qp8Px7DnD+To8+Nddj6WSfR8UM7OT61Lzw+T2fma
bqDniy3s/NPG0/NHV/Z+3JfS94Pl7P15etL3h/fY+403pO8X57D3r1DS94+l
rD6UE2l9oBmrH1EarR/8WV/Z12l9YRyrP/OSfUL94RpWn1nRS4T6hGxWv+ZW
dUL9wnNW36IrtL7BjtW/+QFa/2DG9CGNpfqAx0w/9QarBf3APzfa9SUW9RP0
BQOY/nyDqP7Anukz1pvqE0RMv74fqX5BwfQt7Uv1DXUR7fq3Gk/1D42e7f1B
4Uj7A0xl/UO9ifYPMGX9Rf3JT+gvMIH1n2wZ7T+wnPWn0vG0P0EU61/px2j/
gnzW31TFtL/BW9b/dlyj/Q8iWX+sN6b9EYaz/uluRPsnpLL+Gl/aX+ivsID1
X/HuI0L//a8/xw9uE/ozBrL+HV9O+zeWsf5uf5T2d1zC+r/0DO3/+IrNh+xD
dD5gAJsfLtF0fqAlmy/1pXS+4CA2f8qn0PmDMjafYs7T+YTb2fxKeEnnFxpX
ts+35b3pfMNCNv+W7qXzD73ZfIxtpPMRJ7L52SuIzk+MYfNVaUHnK5az+cs3
0PmLL9l8Dm+zFuYzFrP57ZBL5zceYfNdMpPOd6xg8/9TEJ3/WMf8Qex96g+w
hfmHJAn1D3iS+YtITeovMJP5j0gD6j/Qg/kTaesowZ+g5s52/yLuTv0LTmb+
RvR6oOBv8C7zP2IP6n8w7qc/Sj4s+COMYP5JNb5N8E/wn7+Kpf4KzjH/Fe9K
/Rf0YP5MKqX+DGTMv6UM8xH8G/gyf2c0i/o7yGD+L0XLWvB/sIP5Q3ODr4I/
hHzmH0VfqX+ETsxf2qdSfwn1c9v9p3gQ9Z9QwfxpbT/qTyGI+decKupfwZD5
W+lk6m/h28N2/2s6lPpfOM38scFR6o8hh/nneA3qn8GY+Wt3MfXXEMv8d3gU
9d9wkflzPpX6czBi/j0kkvp3MGL+Xvya+nv4nNXu/6X51P+DP8sHSY00H4AN
yw9SGc0PkMPyRbwFzReQzvKH0UKaP+A5yycdrWg+gU972/NLykyaX2A0yzfu
p2m+AR2Wf1J8af6BgJ/5qEpDyEdgy/KTSBYg5Kf/8pXoa5KQr1CH5S9pDM1f
+IPlM/F7ms9wB8tvVlKa3/ASy3fuu2m+wx0s/3kW0fyHniwfOqym+RALWX4s
+k7zI25n+XJjEc2X2CmgPX9mXqH5E/svac+n/ZfSfIo5LL/WdqP5Fe+xfGu9
jOZbLGD5t749/6Ivy8dWe2g+Rp7lZ21vmp/RjuXr5pk0X2Mby98uJTR/40OW
z0MqaD7HfSy/53x7J+R3tPuZ70NovscXLP8rr9L8j2MYH+i4hPIBDGf8wPgv
yg/wIOMLSbcpX8AUxh8mPKD8AUcwPiGeQvkEOjJ+obrrIvALTGF8Q7zhgsA3
UI/xD9XMvwT+AaY/+chuykfAlvETkT3lJ2DJ+Er2EMpXQMz4i1hO+QvkMT4j
mkj5DDxn/EbcQvkN5DG+43KW8h3Yx/jP8T6U/0CVZTsf4g0oH4LjjB8dXEj5
EZQwvhT5kPIlqApv508pf1P+BCqNdj6VdpbyKahg/Kq0ivIrKGJ8S/mA8i3Y
z/iX4gzlXzCb8bH6LpSPwWjGzyKTKT+D2px2vmaVRvka2DP+ll1J+Rts/snn
ulA+B9mM30Weo/wOmha18z1pR8r34Ajjf6rW3QL/wzGMD6oOUj6Irxg/THGk
/BD/ZnzRyJzyRbzykz9OpvwRk37ySV1vgU+ilPFLPe3lAr9EY2znm/NNKN/E
HuJ2/uluSPkn3mZ81CWa8lGcwPipVSLlp2jP+OroLpSvohnjr5YdKH/F5YzP
2g6jfBbtGL/daEv5Ld5jfFfRi/JdBMZ/RVcp/0VTxoeVwZQP43DGj8XdKT/G
8J98WZ/yZXz6f/z5f4NDcb4=
                  "]]}}}, {}}, {
              Thickness[Large], 
              GrayLevel[0], 
              CircleBox[{0, 0}, {1.5, 1}]}, {
              Thickness[Large], 
              RGBColor[0.6, 0.4, 0.2], 
              
              CircleBox[{0, 0}, {1.4061428996297716`, 
               0.8527824190139134}]}}, {
            PlotRange -> {{-1.5, 1.5}, {-1, 1}}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0.6011487317022174, 0}, 
             PlotRange -> {{0.6020360911727476, 
              0.6588270972866863}, {-0.005132456631940912, 
              0.005132456631941189}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.6011487317022174, 0}, DisplayFunction :> 
             Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.6261583054900491, 0}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.6020360911727494, 0}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.6588270972866863, 0}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=7, mid=(1.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0.6020360911727476, 
              0.6588270972866863}, {-0.005132456631940912, 
              0.005132456631941189}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
         TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.006944444444444445], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 0, 1]], 
                LineBox[CompressedData["
1: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
83GCNe5nIrCh5OHJJdT/2nm5G2VFYWXwqetV7Hyv3Bz0aKkQg+9//LHAh9W7
WeTTQY7KWBzze2LOBXY/gt+81rVz5HhBJf4Zzuq96Tf/gJVmCjTd5t38qjvV
y6ume6y+o5xXnNvM6l3c/DTAjdX/4qm9cxyZXlR9Pn7XZ/3h65G7589TvV80
X3w0Uo5v4vstCGV6E5aML9wVGIst624eqyE9bjoYYd8Yja1u80/50Pzwzvly
b3AUXu7+m3on1bvtJE/v/hF4eWHp21uk936fLxreCsN2d41fNNJ8vKRrqOsS
gie2Jk75L82rwTt1uhwKxo9nWmOKaF6eG59uvz4AOxivnODN6k+jODzB+6s3
omqyVQnV88uMxO1hrmg2pNnhKa2rLlu2ZthgpEflsudsrdrm/DLxc3dIVDQW
nKD52X5JRWWQCwwe5NyJ+kW5W//jH0Z4g5drVPUR9nuqzNSUhxYB8I+R6UMN
7Wf3YcufSoPhksmVT9Vsv8qhbnbPF4XAn4mPr+5k76OZ4LRzZUA4yMJyawfT
+24cs3R5dQToLU08/Avrf5ocm4pN7aLB8J+5G5+z81P90UfPtzIG7rZk7+qu
rdd6wxh7OcQ+svvvQKrXqbOPf+iogPM9b7cbTv24wWZao1IBya86TR9O9bl9
4/0WNl/LL26qdmP1qVmtEtrny2F1tz7/HsP0EBNp5zI7PhZ27p6lP4fpRXnO
bePb49FQp+50aj/Tl9jRL2lIUiRcmvS8nSnTn/hgu9UKVn83x5j+9SvNz+zs
TQ25IWDpOTNnFc2rKZMjb9sEQ4mXqn4L07vSfUCG0zR/0E+39Wug+tmok2Lg
MRKumIo6W9i63GFIR/MWW1g5rf+7FHq+zTfSNMsCn+nX+V+j+VmzfOhu3xHo
t8J7xmyav106lDxFP1zkqXMuhOp7fYN/8udA1Pi9ebCZ7Sd5nG3oywkh6Hc2
2s2E7bew0Gh2C4aj2HliWDX5AY8eXWvVkehjV/rouinNz9vGy21isOxIUnUz
O4/k9f3vRL9gei3udciD1YM62NqznPm77HyDi1ms/2m6xb8/xfzfH/dqdrxh
/VEcb9rcnfnDLcXl9j7sfoSg3vnQSY5xY+OSVjK9awx8PAv9Y9BX/8qbDUzv
wrJ7sWVVkdj5dtqlKaRvFzhz4vdwXHZM/FcL9fvVvySldg/Byi9Boz1Jz747
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
                 "]]}, {
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[0.006944444444444445], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0]], 
                LineBox[CompressedData["
1:eJyV2F1ojlEcAPBnQ8Ys35mvMqa9w2JFLGQ1N9iyNhfStAxlWEjaxVxIabuR
j4hkF+ZCLpSRizWSr0xc+GgpXNBWu3BDrJmPSLnxu3j/vbtZv855zv9/nvO8
z3P+p6BhX83O7CRJGrOS5O//JFVb+qGib03y7+9T0f/+gX/iX3gQj2L8MXgc
HotH4jycnUqfn+2jAxtvEs4K+pu/87f/hGB+xhsRzH9qKv36GC8H/y5Kf3+8
3vWzfQrOx+PxdDwjaJ8Z9Hf9onxm4UJcgGcH+cwP8puLFwV2vBK8GC8NxluB
V+JVeDkuw6sDr8Xr8boMvRFX49rAW/DWwNtwA27EewIfwAdxMz6MjwRuw634
BD6Nz+L2wB34Kr6GO3EX7sa38WP8CD/Hvfg97sd9eAB/xEO+f31fF/M9xHk4
P3AhLsHFuAxXBK7E1bge78B1eDfei/fjNtyKT+HzQftlfAbfwFfwHfww8F18
H7/APbgXv8Td+Al+hZ8F8ftxF36D3wb9B4L2B/ge7sQdwXreCtov4Gbcjltw
U/C8+nvYjqvwBlyOS/ECPBnn4hzs+2g48GDwvnyHX+Onwfva9/11fBNfCr4/
F/E5fByfxMfwUdwSfL8P4aZgf7Ar2F/U4zq8GdfgTbgq2E9VBvs1XR7sH7X7
UfeTy3ApXhjsf5cE7V5fhOfhOcH+3vrA+iGy49luvWC9Mg1bf9ke1UPWjxOx
9ZrxHN96Nje43vOByI5vPWt/61nzsd52PPsb33o7Om8wnvW85wXW554HaK/X
xtNDwXnP9+C8yP62e/7keM7Xdu+f433N8PxKf8swf8+/Pgf9jed8o/hR/vbX
3h/X33y0841sPJ8v7fyNP4y/BPHt73rY7vNmfj5Pxnf8aD2i9YnOH83f9TSf
6Pfj/KL5m7/3z+fT8f4AdkPKXg==
                 "]]}, {
                Hue[0.1421359549995791, 0.6, 0.6], 
                Directive[
                 PointSize[0.006944444444444445], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]], 
                LineBox[CompressedData["
1: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
Ae+Lw2wKiF8aPaCgsGVoMFTpaOWdJfWgdDHud6frWmjS0ksVk3pRjVG72HSU
wBcTC0ck88vXtL6kdrkPvAy9t9qCzJPxGJZg6LcM3vSzWLlbqN8lEVMMrzvB
QYMhUh3B77G/Rva5qoJ+jl/Y782b6O+xgV3fbRq9Pg7Sbr+/yIneH9Vsf+sC
6f4wmO3/kSXdPxax53N8Qp8Px7DnD+To8+Nddj6WSfR8UM7OT61Lzw+T2fma
bqDniy3s/NPG0/NHV/Z+3JfS94Pl7P15etL3h/fY+403pO8X57D3r1DS94+l
rD6UE2l9oBmrH1EarR/8WV/Z12l9YRyrP/OSfUL94RpWn1nRS4T6hGxWv+ZW
dUL9wnNW36IrtL7BjtW/+QFa/2DG9CGNpfqAx0w/9QarBf3APzfa9SUW9RP0
BQOY/nyDqP7Anukz1pvqE0RMv74fqX5BwfQt7Uv1DXUR7fq3Gk/1D42e7f1B
4Uj7A0xl/UO9ifYPMGX9Rf3JT+gvMIH1n2wZ7T+wnPWn0vG0P0EU61/px2j/
gnzW31TFtL/BW9b/dlyj/Q8iWX+sN6b9EYaz/uluRPsnpLL+Gl/aX+ivsID1
X/HuI0L//a8/xw9uE/ozBrL+HV9O+zeWsf5uf5T2d1zC+r/0DO3/+IrNh+xD
dD5gAJsfLtF0fqAlmy/1pXS+4CA2f8qn0PmDMjafYs7T+YTb2fxKeEnnFxpX
ts+35b3pfMNCNv+W7qXzD73ZfIxtpPMRJ7L52SuIzk+MYfNVaUHnK5az+cs3
0PmLL9l8Dm+zFuYzFrP57ZBL5zceYfNdMpPOd6xg8/9TEJ3/WMf8Qex96g+w
hfmHJAn1D3iS+YtITeovMJP5j0gD6j/Qg/kTaesowZ+g5s52/yLuTv0LTmb+
RvR6oOBv8C7zP2IP6n8w7qc/Sj4s+COMYP5JNb5N8E/wn7+Kpf4KzjH/Fe9K
/Rf0YP5MKqX+DGTMv6UM8xH8G/gyf2c0i/o7yGD+L0XLWvB/sIP5Q3ODr4I/
hHzmH0VfqX+ETsxf2qdSfwn1c9v9p3gQ9Z9QwfxpbT/qTyGI+decKupfwZD5
W+lk6m/h28N2/2s6lPpfOM38scFR6o8hh/nneA3qn8GY+Wt3MfXXEMv8d3gU
9d9wkflzPpX6czBi/j0kkvp3MGL+Xvya+nv4nNXu/6X51P+DP8sHSY00H4AN
yw9SGc0PkMPyRbwFzReQzvKH0UKaP+A5yycdrWg+gU972/NLykyaX2A0yzfu
p2m+AR2Wf1J8af6BgJ/5qEpDyEdgy/KTSBYg5Kf/8pXoa5KQr1CH5S9pDM1f
+IPlM/F7ms9wB8tvVlKa3/ASy3fuu2m+wx0s/3kW0fyHniwfOqym+RALWX4s
+k7zI25n+XJjEc2X2CmgPX9mXqH5E/svac+n/ZfSfIo5LL/WdqP5Fe+xfGu9
jOZbLGD5t749/6Ivy8dWe2g+Rp7lZ21vmp/RjuXr5pk0X2Mby98uJTR/40OW
z0MqaD7HfSy/53x7J+R3tPuZ70NovscXLP8rr9L8j2MYH+i4hPIBDGf8wPgv
yg/wIOMLSbcpX8AUxh8mPKD8AUcwPiGeQvkEOjJ+obrrIvALTGF8Q7zhgsA3
UI/xD9XMvwT+AaY/+chuykfAlvETkT3lJ2DJ+Er2EMpXQMz4i1hO+QvkMT4j
mkj5DDxn/EbcQvkN5DG+43KW8h3Yx/jP8T6U/0CVZTsf4g0oH4LjjB8dXEj5
EZQwvhT5kPIlqApv508pf1P+BCqNdj6VdpbyKahg/Kq0ivIrKGJ8S/mA8i3Y
z/iX4gzlXzCb8bH6LpSPwWjGzyKTKT+D2px2vmaVRvka2DP+ll1J+Rts/snn
ulA+B9mM30Weo/wOmha18z1pR8r34Ajjf6rW3QL/wzGMD6oOUj6Irxg/THGk
/BD/ZnzRyJzyRbzykz9OpvwRk37ySV1vgU+ilPFLPe3lAr9EY2znm/NNKN/E
HuJ2/uluSPkn3mZ81CWa8lGcwPipVSLlp2jP+OroLpSvohnjr5YdKH/F5YzP
2g6jfBbtGL/daEv5Ld5jfFfRi/JdBMZ/RVcp/0VTxoeVwZQP43DGj8XdKT/G
8J98WZ/yZXz6f/z5f4NDcb4=
                 "]]}}}, {}}, {
            DisplayFunction -> Identity, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0.6011487317022174, 0}, 
             PlotRange -> {{0.6020360911727476, 
              0.6588270972866863}, {-0.005132456631940912, 
              0.005132456631941189}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.6011487317022174, 0}, DisplayFunction :> 
             Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.6261583054900491, 0}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.6020360911727494, 0}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.6588270972866863, 0}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=7, mid=(1.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0.6020360911727476, 
              0.6588270972866863}, {-0.005132456631940912, 
              0.005132456631941189}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.006944444444444445], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], 
                 LineBox[CompressedData["
1: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
eNTtJ64flO2WkuWeZvBoiqosqS8T0radD1hwk9a5u7j+0MfHUvTa2VBC82k9
qU+3Lj/oS7aAN+32RuD6Rbl8O2XTyIUdv220cX2jDl1urs3iwdGvlQO4/vFP
OJtm9vLgs0C9N7g+0h0b5VuqeFA+5cRrXD/p7UGb0qV5cEJqXR2ur5S9w9HR
JguYFDwYguuv8P2fu/brcKCsFKeM1Oex9BeDYyw4/CYhFtdvWm7L91hvMzj6
270e13eaL6lV4caE+w8tuoDrP3XOR1zpjTEs4M0KJf1het91p9268Orc9Auk
fzQ2792qogr1R8flSX/xNb02YC4NLZbV3yf9Rz73l7fakOVHNcdlpD9FeKZU
LmOAlysPLyb9K/Z1xZ4BTXBWQaaX9DdNFjd0wAC8ZGdKkP53Z4oWi7UYqH+w
zsD9kR90I6Qsdyko5tgtxP2T/yJya1E2C+TdVr9E+utvfc9fcziAm3gqgvTf
I/cWtP62AI2d6etIf/Z44jDVlge+JUFf3L+F+TbnDnfwQJjNqX7c34ULkrQX
NvBAUr1jNu7//D3RDd+/cMGqoBvK2Ad83fTaE74WoMRDyRDnO3Xy6dRQFTYo
XrJqL/YFzTo+MsfUHCxXzTqC/UE/fOkme4UJ2rMsDxGfuP7luM3CGOhureQT
v/hMNZ3qqA0836yVFfnm/b3+aAa4kdl0WuSf3ppB6xbLaduS2oiPpGxdBgMU
4HnP5vnET88r9Y9O0YI6Y7YNxFf+U3aWrzeC5o28HdhfFM/k48E9TPi271Er
9hldH5E7l20Ot/G8Z2G/0ZtsUnU82bDlkfNa7Dsa5mYfKbeABsWBTth/1Ne3
vw5a8WB8npPRduKfSDvkQ3gI3GnAfqTiBH4glwdjlBc0YF8KvVti3YK5UN3d
og37U/jkH/UQZw6cCCr5hn1KT/IN63xY8EmAlTf2q/BW/+nxq0tgmTt7CPuW
+kvVZuZNE8gr/+WG/Uu3zLzIl9SBtVVdv4iPX/lM3erHgGuWntz0X32erOLr
Wzofeiy6nnBJ7DHy83zrZ6LP21nMD0d+ZuR9HSR+dlG9zkd+XhvQ7YV/n17e
D2cjP39U4JL7E1rb2LUiP5/KuNmK75/ufWAcj/z8uie6njxfQULkDuRnqYPj
9cTPmxqtPZGfT1vFGOL14af6zfqA/Byevnc1Wb/JritZyM9/dK92w+vLH6zX
Pof8XBRqJY/Xn3Jy+spDfj6ikdmC94ey6GxehPysMvw1GO8fnac/lIn8rPzz
fR3ZX2brnA/Iz4lGPipk/ysTfNERATdkfraQ/Jh4WLU6UAEoyBmdIvmT9yrZ
0LJFkLUkTYbkl1pvUXo0A54sb7ck+Zfw3rrZQRuKyzrSJD+LnBlc5OfZ3SmH
SP66K2eOXGbCM6f0IomfF84pEkN+rrjUrkfy/568phfy88jMjXOJn5mS6/Yh
P69lfcjA54fuyW/u/MKF6xTm9eHzRQmaahSRn1kuphvw+aNomYZdyM8JDgNu
+HzSvUskh1fyoIJPWzg5vzerIh4iP1+C7kX4fAuPOq75MocD/bZs1ybn/w95
6VPIz7u0153G9UF4N6fmAvLz2PFscVw/KMc/dfWQn+MPT/bg+kLNHS51RX72
GtpmQuqPN7zqhfwsrqtjRupT8JOo+GUMSN9LbSD1q2Hqh2zVIYG1JZxB6tui
xIP2LGlQ7LC6gNS/DcusTqqogpmn67eT+jihPemP/HzBvC2f+LnrdLXeG2Og
ZTcBSX19FL1UiPx8s99oH66/VM5Cbhzyc/as17dIfZa54fwD+dn1bHIwrt+U
6j2dI8jPKjHDAlzf+UF0xCTys06gYRPx83B46lnk54Qr917j/kA57Yx5g/wc
dsurD/cP6q3E22zk53mmvcTPws9zGuuRn3nNGuG4/wjvHP93JfKz5mC0kPSn
alOfL8jPoVPW1JH+1Z2wD/UvcMHmX5GfL/1K6kB+3seZ84P4eZGbhxXys+HF
UuJnqru49gjyzJmhapGfLerm70N+/t6gdY3012VXsiyv64HAP01Efi57TZ9D
fl7idVjk5y3+7EvIz91W30R+9pusSL0yaakw+4PIz9veGHzNHxc4OTqI/Fzs
G6iP/NzsKy/y82KZGg/k586N00V+lh9bbIf8fCacK/LzmYfPCpCfncs2ET9T
4ctzv8gx4dSHb6Zin1COoamXkJ8PfywKJ36eMKtehvzc8SVRQPJ9dLlSJPJz
WubhQuLnpxLTA5GfZyt/fUb8nPju/GLk577CWSI/Z6+Z5ob87HCHlUh8JVF7
bg/y8/MwNSfsLz4tfTAO+Zkymyrysz373WXkZ5P1N64Svy2TdWQjP1Nt/JPY
d5TRxGQl8rP1ovdm2H+UIT/tb+Tnza4cf+xDyi93gSryc0zDsX7ix7ojMt7I
z4/vlDUSX8LCShXk597FQ3LYn5SPS+Aj5BmdPJUm4me3Ra7qyM+DZ95uIX59
tio0Evk5jhWri31L+4xZOSM/e3xfkUX8GxZ7bj+tDH9OwCDiY3Nqr36xDAzt
OPLffIM2y+jWt4xPKxdd36BzfrRYBjSqLxV9/kXeoh7kZ+FYIPl+SjBD9jDy
87yhGvL7VKQ65yryc0n60Ctyf9Pk1dYiP+8QCkT3/3DIvhvl20TnPtHzqRvn
myE/NyfbkOfney35uhv5mVnd70feL6YIpFnIz+vYJ8n6CZ21979Hft4f152K
11d4QKrvH+TnlQX2ZP2FR29x3ZCf36icfUL8bPjjVR3y88xvl1fj/RNahUTl
Ij/3PK5MwPvLn7ItMwX5+Ydd4iey/zfeTwtBfvZZsYnkB6W04IID8rMdr6+A
+Dn6llIs8nPUxOca4mcJpuFJ5GdTl4kwkn/v7JtdkZ+LdhuJ8vNjWlkt8vPs
pOJc8v4XE/xUUp4Jkjz3epP8rlG2aUZ+7lsMFpP83+ooiEF+3jnK+UnORxN6
j0B+lji8Yzs5P5TlxzTk55qKX7PI+ZL6bZJVOG45U11cdP7sEko/XpoUgGVH
15PzmbT1Gxf52d9Vj0nOr1IhZxvy89YOBdH7MW+GqTTycxbI8yfnv56XsAL5
ObA5WUDqg9Tq7iCUb4o/u74TP+s7btZFfo5hZ0mS+hL1Lu4u8rPZ42nk/Z0+
Ke87A/k5WF+HvN/TLmzDF8jPUnMFfxA/J2mdNER+bpPeu4D4WXx/2GXk5+jS
1l5S/zpuhNDIz3Eb2WS+QNuJ/6hFft7olvKS+Pnh6x/RyM+6hrZkPkG5tv3d
ifzsf/TFNjK/2BUbvA35eWX9DDLfoMV2xLUiPzt1upD5Bx3XuikI+fnCz5lk
PsI/7utahPysoPcml/jZrKpnsM0YWtvcDsL9garjqhogP3da6IvmL9PPRmog
P38YOiqaz+y/8j0I+fl2vY1ofjO1pMxrwZClxchdJulPGVEyI8jPhprfDeeR
eY6xdxryc8/F3aL50BnJ5QnIz9NYk7+z8f2s92i2Rn7+8CM/DfdHerW/Wy3y
c694vgbpn5LC/TeRn+2e7ibzKaFKVL6UEgfUJHfvIv03tTq7G/lZ3r3DhfTn
Q4vGZZGf4aAUmX9RK8boROTn3XKtH8l8rGE/zwT5OdT3JJmfCV+eU5xAfl5o
NjSb+CDgvu0p5OcTxZ6i+Ztea1048vOB9Qmi+VybzBdl5GfP9a/3E398Nzks
h/x8QS9WNN+L9VUNQX4ejP7BIX5ZYPSHJPLz7StpovmgyYThMPJzgcPs/+aH
tu3fkJ9VjB+J5ostHeZfkZ9v+zFE88ekyaUJyM+GUfGi+aT+A8ZfyM83qVgy
v6SfS8yIQ37uY0wn803qsH/GfOTntJs5ZP5JWdX5GSA/P+tJI/NRKuegbQLy
85HOy2R+SrG5CceQn02jzpD5Kh2ZXv4K+XnGGjEyfxXmjpXbIj/vYewk81nh
YHrtBuTnaVQKmd9SRi7ukcjP6gXSZL5LbU1e+wT5uVYln8x/6cq75ZLXlkBm
Zt5nkZ/DaT3k5/6CnaL5cXF8+wbk52P7/5svlw5GFiI/2/1//nwRz5//BzlW
3ik=
                  "]]}, {
                 Hue[0.9060679774997897, 0.6, 0.6], 
                 Directive[
                  PointSize[0.006944444444444445], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 
                   NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                 LineBox[CompressedData["
1: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
D8X/Araf08w=
                  "]]}, {
                 Hue[0.1421359549995791, 0.6, 0.6], 
                 Directive[
                  PointSize[0.006944444444444445], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], 
                 LineBox[CompressedData["
1:eJxFmHk8lFv8x5+kkJItV9JtpFCUKdqEM5K9LGNmUqmQSqUbrVR4WqgQUyqR
NNEi3dDu2s7UTXsMCSmhlCWhVEouv+8583v9fn9xXjPzPOd8z3d5fz4GAZv5
axQYhlk/hGHI3xvTJx0pTmhG8K9MGPauuOPdkN2fyPq90fqKenP8/evg9a2J
zYjVTFlzzAdhA8eDYi9xM5KqFFZ6vHXED1rS4iKOwvez+1PG8xfjAu2E6M/H
YL0veuiJ9V54W2z59BPHmxFnREtgeao3ntmpvHftyWbkZ6h59b2pEKtpb3Ti
n4LnbRjrflhDhL8/6MlxTm1G6i3Rez0cRTg9yKh2Xlozkizb8fLSEyEe1FQI
1ElvRt2HtgjvnBdgM62jP8rPwu+VjIf1NPBxvLJ99tJzsN+16rEJ8Z5Yv9Up
JCsDPv9upxAX4Yb1Li5YfiOzGfGwso6mvgP2rKus3Hoe1h3nvP7ytMbXs5Ny
P8CaXZUVY+RvirkDljylC3CeUyLnqQk9tja2c+a9It/fIOvu/88cLRTEHl1J
1mPj3pyeZ4uqnevc08jzR19dMvG+A5qzM2dhCryfc13znscTN7Qv5+rjFbA/
z7nfynWjPdHEuSvX9sD+dcfa7Lp+nY9qxqSygXC+2p8T9/oFCNCQ3TeHF8H5
Q0zb053jhSjNqV9/2Gl43vkEK1czEep587HcNQXiEbbS+72dCLU4lT5LToZ4
bWa0B8qFKLQ3bOKPE/D99qii7DcC9K1nhupmuA+/kkmlj0O80Vy2Do9Iakbi
uHGTs5O90NV1O4QyuM/GC7n6qNgdGSqvP18K9+334+ZWk8suyLV08bwuyAdO
0jQjC62FSPH2C3dPWDPTrlW2z7NGMq2G8naSP4Ur1VIzzBFbru6PybrfZHNy
tAqa3Fsc8pyse380NjyZiMdNEizSIr9/nidJvzYLG1dOskog+Vb2pHB2EQ+3
1Z44aQXvZ1SHSPLtHPGmXtyjBfvj7XujPMTLDfdrHrcaQ/JN0Uy9rcoDv+Le
eDYXztOdcSm0ut4LSwzmXwyD87JXFO7E7PbGtQ5NkWUQD6aVZc1LBDiw8lmb
BcSLrVphb58hxNaV/2zNgHwUD9ru7Zkswn/MGIa1IB89cxOSOS4i/LxhyZm9
JP6Cbwn2o0Q4yavQ6CPcj1Tzfh1/uxBnN/U8nw/3J2l9/TUjWoB1ldW2RMD9
in/1Z/1r741lR8duuihpRnn1c9WW3/bC90V6kuuQD36fi3z/e+yB1Wx5e9JJ
vgoscv7Ic8Pf37Iq6zJJ/lX/Och1wq2VN9pVIN8aa0MvnFm1AEdq+KyKJvnq
s89hIN0Kzz5kZl9L1gnJZ1WncHHNs0eqCiR/3RXq1Mbo4LC1gffpeuqF2SlJ
2kj68bfSa/g+k7Rc9mqFOSoaPbQvjqz1NfRye+ahtsuVNn+Q/C4+HdfZYofM
0wc7ImE/km8TONOOOqJ7Ox/Gl8J+G39/Unb96Iq+FhYpdMJ5OI2729e+ckeJ
6a8P/YbznvI9aKtr7oUmiaed+0LqNdT4cP9NPgoczlGpgnixY3KkH395oyWF
eX9fPNOMDul1Oy/oE6CX4YkpmyC+yi8b9gfeECLnrd5fzSD+YpmfdaKhCN0e
2tjUCvnvqT8modtFhKY+00y8APfHpqitkRiJUIbGC/V1cL+NgrvXTxcIkcLW
UwEzoP/w/Et3FisJUZlFxFJlyAfPCQ//vaUuQOGnO1O6IH94yy+UDdTyUf/c
kQntkF95GeM9ZIFeKGROqW8/qY+f09ZP3OKB+n3vNhmTfDzLf5l42w253zO4
uJnk62l8WjPTCa2sNKx7CfnsN/lbz7OF9sj9cq6HL8n3X8s2rPW2QVHhr7Yr
knX+5/SHUgskmOkrLCf1sW/03d4GQ9Rgo5kg789s/dNrM0pySjfLP1/3Yp9t
oyFGicwO8nu2+3Zvu9QCN05op89nH0hvHfa2wdKdofT97PcA8duF9rhSsI/u
TyraajYp0wmbx1u+I/tnDXuXnLvthlUuuK4g55MuO/XaYosH1tiVSc8vWzJ3
sDbQC3fPS04l8ckrv7dN6RUfN+fOXkbix7pOXFWiLsB/OASsJvFll/yj9EBJ
iOuu/K1B4s81ezr7fIEQX077Te9HfUr5mywjEY7YUfOO3B8z4PXrJ9RX0Def
HnK/bI/i6WRDES7fmZFK7p/3pv9l8A0hVrosu0ryI0+vOMG1T4DvrVg0guRP
Iz7Y1/nLG6tVrcmg+cVJuKN4i48DVkyIJfnHmf5nAMfcC8ccVVUk+cnrEo/f
+cod54w2SCD5KwnOnrLsoyvOubW6k+Q3sz2Ka3PUET/WsEM0/7/cPTLQYofV
c3b/JvXB+xQ1vLxnHubnR6rQ+lEfv3/sSnM8nf1SSutrfPFq3ePa+Lqv3yi6
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
TwD8/D8JizRi
                  "]]}}}, {}}, {
              Thickness[Large], 
              GrayLevel[0], 
              CircleBox[{0, 0}, {1.5, 1}]}, {
              Thickness[Large], 
              RGBColor[0.6, 0.4, 0.2], 
              CircleBox[{0, 0}, {1.427246146277728, 0.8871479933272833}]}}, {
            PlotRange -> {{-1.5, 1.5}, {-1, 1}}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0.6048414112420515, 0}, 
             PlotRange -> {{0.6054614675091512, 
              0.6451450686035445}, {-0.0013604098687948207`, 
              0.0013604098693897199`}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.6048414112420515, 0}, DisplayFunction :> 
             Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.6251575333740024, -8.13578707875573*^-10}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.6054614675469091, -6.87168974500274*^-10}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.6424243694941282, -1.343873692882802*^-10}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=8, mid=(1.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0.6054614675091512, 
              0.6451450686035445}, {-0.0013604098687948207`, 
              0.0013604098693897199`}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
         TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.006944444444444445], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 0, 1]], 
                LineBox[CompressedData["
1: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
eNTtJ64flO2WkuWeZvBoiqosqS8T0radD1hwk9a5u7j+0MfHUvTa2VBC82k9
qU+3Lj/oS7aAN+32RuD6Rbl8O2XTyIUdv220cX2jDl1urs3iwdGvlQO4/vFP
OJtm9vLgs0C9N7g+0h0b5VuqeFA+5cRrXD/p7UGb0qV5cEJqXR2ur5S9w9HR
JguYFDwYguuv8P2fu/brcKCsFKeM1Oex9BeDYyw4/CYhFtdvWm7L91hvMzj6
270e13eaL6lV4caE+w8tuoDrP3XOR1zpjTEs4M0KJf1het91p9268Orc9Auk
fzQ2792qogr1R8flSX/xNb02YC4NLZbV3yf9Rz73l7fakOVHNcdlpD9FeKZU
LmOAlysPLyb9K/Z1xZ4BTXBWQaaX9DdNFjd0wAC8ZGdKkP53Z4oWi7UYqH+w
zsD9kR90I6Qsdyko5tgtxP2T/yJya1E2C+TdVr9E+utvfc9fcziAm3gqgvTf
I/cWtP62AI2d6etIf/Z44jDVlge+JUFf3L+F+TbnDnfwQJjNqX7c34ULkrQX
NvBAUr1jNu7//D3RDd+/cMGqoBvK2Ad83fTaE74WoMRDyRDnO3Xy6dRQFTYo
XrJqL/YFzTo+MsfUHCxXzTqC/UE/fOkme4UJ2rMsDxGfuP7luM3CGOhureQT
v/hMNZ3qqA0836yVFfnm/b3+aAa4kdl0WuSf3ppB6xbLaduS2oiPpGxdBgMU
4HnP5vnET88r9Y9O0YI6Y7YNxFf+U3aWrzeC5o28HdhfFM/k48E9TPi271Er
9hldH5E7l20Ot/G8Z2G/0ZtsUnU82bDlkfNa7Dsa5mYfKbeABsWBTth/1Ne3
vw5a8WB8npPRduKfSDvkQ3gI3GnAfqTiBH4glwdjlBc0YF8KvVti3YK5UN3d
og37U/jkH/UQZw6cCCr5hn1KT/IN63xY8EmAlTf2q/BW/+nxq0tgmTt7CPuW
+kvVZuZNE8gr/+WG/Uu3zLzIl9SBtVVdv4iPX/lM3erHgGuWntz0X32erOLr
Wzofeiy6nnBJ7DHy83zrZ6LP21nMD0d+ZuR9HSR+dlG9zkd+XhvQ7YV/n17e
D2cjP39U4JL7E1rb2LUiP5/KuNmK75/ufWAcj/z8uie6njxfQULkDuRnqYPj
9cTPmxqtPZGfT1vFGOL14af6zfqA/Byevnc1Wb/JritZyM9/dK92w+vLH6zX
Pof8XBRqJY/Xn3Jy+spDfj6ikdmC94ey6GxehPysMvw1GO8fnac/lIn8rPzz
fR3ZX2brnA/Iz4lGPipk/ysTfNERATdkfraQ/Jh4WLU6UAEoyBmdIvmT9yrZ
0LJFkLUkTYbkl1pvUXo0A54sb7ck+Zfw3rrZQRuKyzrSJD+LnBlc5OfZ3SmH
SP66K2eOXGbCM6f0IomfF84pEkN+rrjUrkfy/568phfy88jMjXOJn5mS6/Yh
P69lfcjA54fuyW/u/MKF6xTm9eHzRQmaahSRn1kuphvw+aNomYZdyM8JDgNu
+HzSvUskh1fyoIJPWzg5vzerIh4iP1+C7kX4fAuPOq75MocD/bZs1ybn/w95
6VPIz7u0153G9UF4N6fmAvLz2PFscVw/KMc/dfWQn+MPT/bg+kLNHS51RX72
GtpmQuqPN7zqhfwsrqtjRupT8JOo+GUMSN9LbSD1q2Hqh2zVIYG1JZxB6tui
xIP2LGlQ7LC6gNS/DcusTqqogpmn67eT+jihPemP/HzBvC2f+LnrdLXeG2Og
ZTcBSX19FL1UiPx8s99oH66/VM5Cbhzyc/as17dIfZa54fwD+dn1bHIwrt+U
6j2dI8jPKjHDAlzf+UF0xCTys06gYRPx83B46lnk54Qr917j/kA57Yx5g/wc
dsurD/cP6q3E22zk53mmvcTPws9zGuuRn3nNGuG4/wjvHP93JfKz5mC0kPSn
alOfL8jPoVPW1JH+1Z2wD/UvcMHmX5GfL/1K6kB+3seZ84P4eZGbhxXys+HF
UuJnqru49gjyzJmhapGfLerm70N+/t6gdY3012VXsiyv64HAP01Efi57TZ9D
fl7idVjk5y3+7EvIz91W30R+9pusSL0yaakw+4PIz9veGHzNHxc4OTqI/Fzs
G6iP/NzsKy/y82KZGg/k586N00V+lh9bbIf8fCacK/LzmYfPCpCfncs2ET9T
4ctzv8gx4dSHb6Zin1COoamXkJ8PfywKJ36eMKtehvzc8SVRQPJ9dLlSJPJz
WubhQuLnpxLTA5GfZyt/fUb8nPju/GLk577CWSI/Z6+Z5ob87HCHlUh8JVF7
bg/y8/MwNSfsLz4tfTAO+Zkymyrysz373WXkZ5P1N64Svy2TdWQjP1Nt/JPY
d5TRxGQl8rP1ovdm2H+UIT/tb+Tnza4cf+xDyi93gSryc0zDsX7ix7ojMt7I
z4/vlDUSX8LCShXk597FQ3LYn5SPS+Aj5BmdPJUm4me3Ra7qyM+DZ95uIX59
tio0Evk5jhWri31L+4xZOSM/e3xfkUX8GxZ7bj+tDH9OwCDiY3Nqr36xDAzt
OPLffIM2y+jWt4xPKxdd36BzfrRYBjSqLxV9/kXeoh7kZ+FYIPl+SjBD9jDy
87yhGvL7VKQ65yryc0n60Ctyf9Pk1dYiP+8QCkT3/3DIvhvl20TnPtHzqRvn
myE/NyfbkOfney35uhv5mVnd70feL6YIpFnIz+vYJ8n6CZ21979Hft4f152K
11d4QKrvH+TnlQX2ZP2FR29x3ZCf36icfUL8bPjjVR3y88xvl1fj/RNahUTl
Ij/3PK5MwPvLn7ItMwX5+Ydd4iey/zfeTwtBfvZZsYnkB6W04IID8rMdr6+A
+Dn6llIs8nPUxOca4mcJpuFJ5GdTl4kwkn/v7JtdkZ+LdhuJ8vNjWlkt8vPs
pOJc8v4XE/xUUp4Jkjz3epP8rlG2aUZ+7lsMFpP83+ooiEF+3jnK+UnORxN6
j0B+lji8Yzs5P5TlxzTk55qKX7PI+ZL6bZJVOG45U11cdP7sEko/XpoUgGVH
15PzmbT1Gxf52d9Vj0nOr1IhZxvy89YOBdH7MW+GqTTycxbI8yfnv56XsAL5
ObA5WUDqg9Tq7iCUb4o/u74TP+s7btZFfo5hZ0mS+hL1Lu4u8rPZ42nk/Z0+
Ke87A/k5WF+HvN/TLmzDF8jPUnMFfxA/J2mdNER+bpPeu4D4WXx/2GXk5+jS
1l5S/zpuhNDIz3Eb2WS+QNuJ/6hFft7olvKS+Pnh6x/RyM+6hrZkPkG5tv3d
ifzsf/TFNjK/2BUbvA35eWX9DDLfoMV2xLUiPzt1upD5Bx3XuikI+fnCz5lk
PsI/7utahPysoPcml/jZrKpnsM0YWtvcDsL9garjqhogP3da6IvmL9PPRmog
P38YOiqaz+y/8j0I+fl2vY1ofjO1pMxrwZClxchdJulPGVEyI8jPhprfDeeR
eY6xdxryc8/F3aL50BnJ5QnIz9NYk7+z8f2s92i2Rn7+8CM/DfdHerW/Wy3y
c694vgbpn5LC/TeRn+2e7ibzKaFKVL6UEgfUJHfvIv03tTq7G/lZ3r3DhfTn
Q4vGZZGf4aAUmX9RK8boROTn3XKtH8l8rGE/zwT5OdT3JJmfCV+eU5xAfl5o
NjSb+CDgvu0p5OcTxZ6i+Ztea1048vOB9Qmi+VybzBdl5GfP9a/3E398Nzks
h/x8QS9WNN+L9VUNQX4ejP7BIX5ZYPSHJPLz7StpovmgyYThMPJzgcPs/+aH
tu3fkJ9VjB+J5ostHeZfkZ9v+zFE88ekyaUJyM+GUfGi+aT+A8ZfyM83qVgy
v6SfS8yIQ37uY0wn803qsH/GfOTntJs5ZP5JWdX5GSA/P+tJI/NRKuegbQLy
85HOy2R+SrG5CceQn02jzpD5Kh2ZXv4K+XnGGjEyfxXmjpXbIj/vYewk81nh
YHrtBuTnaVQKmd9SRi7ukcjP6gXSZL5LbU1e+wT5uVYln8x/6cq75ZLXlkBm
Zt5nkZ/DaT3k5/6CnaL5cXF8+wbk52P7/5svlw5GFiI/2/1//nwRz5//BzlW
3ik=
                 "]]}, {
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[0.006944444444444445], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0]], 
                LineBox[CompressedData["
1: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
D8X/Araf08w=
                 "]]}, {
                Hue[0.1421359549995791, 0.6, 0.6], 
                Directive[
                 PointSize[0.006944444444444445], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]], 
                LineBox[CompressedData["
1:eJxFmHk8lFv8x5+kkJItV9JtpFCUKdqEM5K9LGNmUqmQSqUbrVR4WqgQUyqR
NNEi3dDu2s7UTXsMCSmhlCWhVEouv+8583v9fn9xXjPzPOd8z3d5fz4GAZv5
axQYhlk/hGHI3xvTJx0pTmhG8K9MGPauuOPdkN2fyPq90fqKenP8/evg9a2J
zYjVTFlzzAdhA8eDYi9xM5KqFFZ6vHXED1rS4iKOwvez+1PG8xfjAu2E6M/H
YL0veuiJ9V54W2z59BPHmxFnREtgeao3ntmpvHftyWbkZ6h59b2pEKtpb3Ti
n4LnbRjrflhDhL8/6MlxTm1G6i3Rez0cRTg9yKh2Xlozkizb8fLSEyEe1FQI
1ElvRt2HtgjvnBdgM62jP8rPwu+VjIf1NPBxvLJ99tJzsN+16rEJ8Z5Yv9Up
JCsDPv9upxAX4Yb1Li5YfiOzGfGwso6mvgP2rKus3Hoe1h3nvP7ytMbXs5Ny
P8CaXZUVY+RvirkDljylC3CeUyLnqQk9tja2c+a9It/fIOvu/88cLRTEHl1J
1mPj3pyeZ4uqnevc08jzR19dMvG+A5qzM2dhCryfc13znscTN7Qv5+rjFbA/
z7nfynWjPdHEuSvX9sD+dcfa7Lp+nY9qxqSygXC+2p8T9/oFCNCQ3TeHF8H5
Q0zb053jhSjNqV9/2Gl43vkEK1czEep587HcNQXiEbbS+72dCLU4lT5LToZ4
bWa0B8qFKLQ3bOKPE/D99qii7DcC9K1nhupmuA+/kkmlj0O80Vy2Do9Iakbi
uHGTs5O90NV1O4QyuM/GC7n6qNgdGSqvP18K9+334+ZWk8suyLV08bwuyAdO
0jQjC62FSPH2C3dPWDPTrlW2z7NGMq2G8naSP4Ur1VIzzBFbru6PybrfZHNy
tAqa3Fsc8pyse380NjyZiMdNEizSIr9/nidJvzYLG1dOskog+Vb2pHB2EQ+3
1Z44aQXvZ1SHSPLtHPGmXtyjBfvj7XujPMTLDfdrHrcaQ/JN0Uy9rcoDv+Le
eDYXztOdcSm0ut4LSwzmXwyD87JXFO7E7PbGtQ5NkWUQD6aVZc1LBDiw8lmb
BcSLrVphb58hxNaV/2zNgHwUD9ru7Zkswn/MGIa1IB89cxOSOS4i/LxhyZm9
JP6Cbwn2o0Q4yavQ6CPcj1Tzfh1/uxBnN/U8nw/3J2l9/TUjWoB1ldW2RMD9
in/1Z/1r741lR8duuihpRnn1c9WW3/bC90V6kuuQD36fi3z/e+yB1Wx5e9JJ
vgoscv7Ic8Pf37Iq6zJJ/lX/Och1wq2VN9pVIN8aa0MvnFm1AEdq+KyKJvnq
s89hIN0Kzz5kZl9L1gnJZ1WncHHNs0eqCiR/3RXq1Mbo4LC1gffpeuqF2SlJ
2kj68bfSa/g+k7Rc9mqFOSoaPbQvjqz1NfRye+ahtsuVNn+Q/C4+HdfZYofM
0wc7ImE/km8TONOOOqJ7Ox/Gl8J+G39/Unb96Iq+FhYpdMJ5OI2729e+ckeJ
6a8P/YbznvI9aKtr7oUmiaed+0LqNdT4cP9NPgoczlGpgnixY3KkH395oyWF
eX9fPNOMDul1Oy/oE6CX4YkpmyC+yi8b9gfeECLnrd5fzSD+YpmfdaKhCN0e
2tjUCvnvqT8modtFhKY+00y8APfHpqitkRiJUIbGC/V1cL+NgrvXTxcIkcLW
UwEzoP/w/Et3FisJUZlFxFJlyAfPCQ//vaUuQOGnO1O6IH94yy+UDdTyUf/c
kQntkF95GeM9ZIFeKGROqW8/qY+f09ZP3OKB+n3vNhmTfDzLf5l42w253zO4
uJnk62l8WjPTCa2sNKx7CfnsN/lbz7OF9sj9cq6HL8n3X8s2rPW2QVHhr7Yr
knX+5/SHUgskmOkrLCf1sW/03d4GQ9Rgo5kg789s/dNrM0pySjfLP1/3Yp9t
oyFGicwO8nu2+3Zvu9QCN05op89nH0hvHfa2wdKdofT97PcA8duF9rhSsI/u
TyraajYp0wmbx1u+I/tnDXuXnLvthlUuuK4g55MuO/XaYosH1tiVSc8vWzJ3
sDbQC3fPS04l8ckrv7dN6RUfN+fOXkbix7pOXFWiLsB/OASsJvFll/yj9EBJ
iOuu/K1B4s81ezr7fIEQX077Te9HfUr5mywjEY7YUfOO3B8z4PXrJ9RX0Def
HnK/bI/i6WRDES7fmZFK7p/3pv9l8A0hVrosu0ryI0+vOMG1T4DvrVg0guRP
Iz7Y1/nLG6tVrcmg+cVJuKN4i48DVkyIJfnHmf5nAMfcC8ccVVUk+cnrEo/f
+cod54w2SCD5KwnOnrLsoyvOubW6k+Q3sz2Ka3PUET/WsEM0/7/cPTLQYofV
c3b/JvXB+xQ1vLxnHubnR6rQ+lEfv3/sSnM8nf1SSutrfPFq3ePa+Lqv3yi6
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
TwD8/D8JizRi
                 "]]}}}, {}}, {
            DisplayFunction -> Identity, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0.6048414112420515, 0}, 
             PlotRange -> {{0.6054614675091512, 
              0.6451450686035445}, {-0.0013604098687948207`, 
              0.0013604098693897199`}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.6048414112420515, 0}, DisplayFunction :> 
             Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.6251575333740024, -8.13578707875573*^-10}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.6054614675469091, -6.87168974500274*^-10}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.6424243694941282, -1.343873692882802*^-10}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=8, mid=(1.0,0.0)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0.6054614675091512, 
              0.6451450686035445}, {-0.0013604098687948207`, 
              0.0013604098693897199`}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7962937390566716`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"showPedalCentroids", "[", 
        RowBox[{"1.5", ",", "#", ",", ".5", ",", ".25", ",", 
         RowBox[{"drCircles", "\[Rule]", "False"}]}], "]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"3", ",", "8"}], "]"}]}], ",", "2"}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7962938544426413`*^9, 3.796293857803476*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], 
                 LineBox[CompressedData["
1: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
v//n/wNDl4kO
                  "]]}, {
                 Hue[0.9060679774997897, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 
                   NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                 LineBox[CompressedData["
1:eJx1mH9ozGEcx89FLe10W6a5rEymuWwhp5HvQysltUKRFqXVaTgRrVgpySSl
lihW01pW62o1y2qE1tXCmKQmhEZoSbIxHSHJ562eV33/ul59fjzvz+fzPM/3
e9/yhgNb0tFIJLJnWiTy97d339OmV6dG1uaD1upz93Nr+41nun/cZfzD7B3G
v4w7jaPOj48ZZ40jIXwV+XuR/0ZIvNbrMZ4Fex76Jo37kE/82+zdxhPg79BT
6Hy9Bc7vz3jg9+9D4OuVvizqVb449L2Gfvb7M/TmjG+FzKPI+f0ZRPxH6Ltt
PGj8DPvlHXgG9Gv9AeP3gc85xL9FvYPwvwk9Q+jvMPR/Qvwz8BzTl0O/h9Cv
AfRf/V0DHgv8fIOoLw/7S8zrofFd4wfGT40PI/6O8TDWE/ch33XU/wL5r6Cf
SefnO2/2UeMnxs+NL8N+yfiR8T3o13zGjfdA7yTy5bCe5p83dsj/0/il8TXj
aOYfN4F3GY+Z/y30U/td98EE+qf9M2ncbByx/N3GHzCfBWZfA72jqH8E9ar+
Mos/jvV7Uc8I7DeMYxbfgX70GM8w7g+Jn5nx16sybjEuNs4iXvUVZHx9CaxX
Z7wf9WahT/HxjN+f5fDfZNxqXGI8gHmIU+hHFdbbiP7VwF+s/bQB/ZL9rvF2
rL8+4++X2ox/HtSfYeh7g/hR6H1svMX4EfKPIV731VbkT8O/Dnblm0Q+Pf8b
M/75kp5fiNfzW/563qTBDcgfZPznkeylzp9HsXE97Kqnwvn9q4B9AexJ2MWa
d8r59dUifr3z+yVOwl/z3uD8/V4H/52wi7X/tyPfXuefX3Gp8Q7YxT/sfO9y
/n3S4Pzzvtv592E9WPY3xpudf9+mnf88aID/JvirH3p/2Ibnu1jP/63Ov+9X
Ov/5tArvD5qPnveah57vK5CvFv4O+qphr0Z8FfIvxfup9PbBX/ZlsNfAvhws
eyfqa0d/pVfnJ4t69X68Ee/zKay3FPlT6E/CWO+vq1FPKexl4Br4l0BvCfQo
/izm3QO9Xej3APSwPvnPx/+JSuhLoB8B9ErfGdjF68Ap9COFenRfnUO/LqC+
LuiVnnhIPy6if+pHDP5J6BPvxflvx/z70Y+LiD+C9dswj9PgVuRvQT87kb85
ZH9UgmPQp/PWhPNxEvZ2cDP8lb8U867CPJOYVyX6XYn+cD+zvxXQtxDznYd+
LQqpX/tLz9MTmEcj7jfNc7HxceznY7h/mzDPxpD+zsV5XwK9C7E+92sCetQv
7e85qK8sRE8b9Gje5SH79SD6ewj9lH0+4hNYvxz1aT+0QD/zN0PvTqyn81sC
PQnEyz9tPBv+2t/1iE+jn0fhr3kUYb0YeDbqjYfoVf2zwHHUWwh9RbBPR/z/
91XjYuiPQk8B7MwXBReiXn0PO4J41a/vYfKfhvtF8drP4+CpwM/3LfDPp9YT
6/1f+1Pf07ReHvmm4P8F/vq+pfvvK/ynYNd6uv/1/+UC7Hpe6/9LG+rn98HO
kPyf4D8Bf8Xrvtb/mx7o5/dBfn/k91/dZ/p/1QF7P+z8ftkdokf7bQiseP1f
+wPYpfyk
                  "]]}, {
                 Hue[0.1421359549995791, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], 
                 LineBox[CompressedData["
1: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
Z3sYsHLnwdJiTSlqNNqvvTbFAOK3uYcUnVK084zwZzMOJlR4dSULfypBheTJ
M3bbmaBLyJXgP1iCxiZcNQ+pMSHmkFnxcHYxyutOec08wwSbL/oFPmLFiMOr
a+fdm0xoynqQX3ivCIkw/rTyPmAC/yHVcdOSQuQIj8TfpjIhSKvALPZyAfLI
n+A6W8MEl8EXrzwm85FDPWe+yAgTfA49rkq4lIcMJzwMFleYoHbbYEQ4OxeF
zqtGzEuxwN5576pkVzb677Sf/m8dFlyusYzeSclEhKvy74dsWbAosuSf/zwd
3Zh69MHxEQueULZbO259i/Y6cKQa5rBA5Vqgg3VOMoqxUXu43saC4n5XxcTH
cUh5IFdj4jsLPmb27Em49gLtk3wmSBBig7Yz1lskF4JOz1U0HVJhw/vhbr0b
3FrAeFopLWjIhiLGA0EZr4ewUeFEdKcVG6zfaC22zbyC0covfx46ssEjguFZ
9iMVIhRepyk5s6Hc1Jrz2rlM0N37KGXUhg2E9Au1ZJs84IqMt959ig3t8v/V
Y6QiMMkakLgoy4ZYLwd+dk0p6KwzzUtn8P1EflhKeV4BjH+MlUkf8O8RNMYl
Il4F8fz0Wo4bLFihZNBZ8AkCr7oJdYuyYCZ+AQtbrYGmCq/Zvlom/Eyl+0+c
JMGtWFHRZ25MEMrtrVGUR8D3/M/KZxkm2N7jOSmdgmD14S3h7QMMMEhSOG7Z
hMAiq6o0KJYByjPN/C8LENQvOSVXWjGgf6uozEVXBAa7DiR0KzFA59y/GZFb
EDSHSii4r2NwuCrJ7GMaCeqj9gjMjmCgoo9c09VJYHup5EcECQPKrCYlo5MI
BG2/955ZGOwz2pY660+EspNv6/qjMXgSrS7AdZgIDr8H3OYeYDC2S9N3hxAR
JuOS13l9cf/1Pbg2DvdXB2SPLHu7YiAQLPlYX4IIX5Kk1qPsMag+VexeZEwE
g40zUuQruP8a4tf2yyaCi2JEWYgZBqc5/f2uK5JgpdNUSvYsBkZfvyUW95Dg
cm66ywacN+zQ1sf6HxDwiu36cVMbgy0DI98mr9bCFy3hBVcVPN9GSaOY9VqQ
uHl+/bc07s8yv7pCfR0I6xi6xPBhEFZU4nwhtx4STcnJl3D+/TnrmaZc3QCp
8/7MqFY6+D4IPabzpxH4R/hsfOPp4K6lp8bl3Qxysja1oWZ04LeYtEjYSwbb
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
/wHwKKCX
                  "]]}}}, {}}, {
              Thickness[Large], 
              GrayLevel[0], 
              CircleBox[{0, 0}, {1.5, 1}]}, {
              Thickness[Large], 
              RGBColor[0.6, 0.4, 0.2], 
              
              CircleBox[{0, 0}, {1.1430749027719966`, 
               0.2379500648186704}]}}, {
            PlotRange -> {{-1.5, 1.5}, {-1, 1}}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
             PlotRange -> {{0, 0.6769767675423009}, {-0.24191854321847533`, 
               0.383085737689259}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                GrayLevel[0], 
                
                PointBox[{{-1.118033988749895, 0}, {
                  1.118033988749895, 0}}]}, {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.02717214689546469, 0.09277003889119673}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.23067837480706777`, 0.14683749459844342`}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.656436471963104, 0.08430296020143568}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=3, mid=(0.5,0.3)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0, 0.6769767675423009}, {-0.24191854321847533`, 
               0.383085737689259}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
         TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 0, 1]], 
                LineBox[CompressedData["
1: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
v//n/wNDl4kO
                 "]]}, {
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0]], 
                LineBox[CompressedData["
1:eJx1mH9ozGEcx89FLe10W6a5rEymuWwhp5HvQysltUKRFqXVaTgRrVgpySSl
lihW01pW62o1y2qE1tXCmKQmhEZoSbIxHSHJ562eV33/ul59fjzvz+fzPM/3
e9/yhgNb0tFIJLJnWiTy97d339OmV6dG1uaD1upz93Nr+41nun/cZfzD7B3G
v4w7jaPOj48ZZ40jIXwV+XuR/0ZIvNbrMZ4Fex76Jo37kE/82+zdxhPg79BT
6Hy9Bc7vz3jg9+9D4OuVvizqVb449L2Gfvb7M/TmjG+FzKPI+f0ZRPxH6Ltt
PGj8DPvlHXgG9Gv9AeP3gc85xL9FvYPwvwk9Q+jvMPR/Qvwz8BzTl0O/h9Cv
AfRf/V0DHgv8fIOoLw/7S8zrofFd4wfGT40PI/6O8TDWE/ch33XU/wL5r6Cf
SefnO2/2UeMnxs+NL8N+yfiR8T3o13zGjfdA7yTy5bCe5p83dsj/0/il8TXj
aOYfN4F3GY+Z/y30U/td98EE+qf9M2ncbByx/N3GHzCfBWZfA72jqH8E9ar+
Mos/jvV7Uc8I7DeMYxbfgX70GM8w7g+Jn5nx16sybjEuNs4iXvUVZHx9CaxX
Z7wf9WahT/HxjN+f5fDfZNxqXGI8gHmIU+hHFdbbiP7VwF+s/bQB/ZL9rvF2
rL8+4++X2ox/HtSfYeh7g/hR6H1svMX4EfKPIV731VbkT8O/Dnblm0Q+Pf8b
M/75kp5fiNfzW/563qTBDcgfZPznkeylzp9HsXE97Kqnwvn9q4B9AexJ2MWa
d8r59dUifr3z+yVOwl/z3uD8/V4H/52wi7X/tyPfXuefX3Gp8Q7YxT/sfO9y
/n3S4Pzzvtv592E9WPY3xpudf9+mnf88aID/JvirH3p/2Ibnu1jP/63Ov+9X
Ov/5tArvD5qPnveah57vK5CvFv4O+qphr0Z8FfIvxfup9PbBX/ZlsNfAvhws
eyfqa0d/pVfnJ4t69X68Ee/zKay3FPlT6E/CWO+vq1FPKexl4Br4l0BvCfQo
/izm3QO9Xej3APSwPvnPx/+JSuhLoB8B9ErfGdjF68Ap9COFenRfnUO/LqC+
LuiVnnhIPy6if+pHDP5J6BPvxflvx/z70Y+LiD+C9dswj9PgVuRvQT87kb85
ZH9UgmPQp/PWhPNxEvZ2cDP8lb8U867CPJOYVyX6XYn+cD+zvxXQtxDznYd+
LQqpX/tLz9MTmEcj7jfNc7HxceznY7h/mzDPxpD+zsV5XwK9C7E+92sCetQv
7e85qK8sRE8b9Gje5SH79SD6ewj9lH0+4hNYvxz1aT+0QD/zN0PvTqyn81sC
PQnEyz9tPBv+2t/1iE+jn0fhr3kUYb0YeDbqjYfoVf2zwHHUWwh9RbBPR/z/
91XjYuiPQk8B7MwXBReiXn0PO4J41a/vYfKfhvtF8drP4+CpwM/3LfDPp9YT
6/1f+1Pf07ReHvmm4P8F/vq+pfvvK/ynYNd6uv/1/+UC7Hpe6/9LG+rn98HO
kPyf4D8Bf8Xrvtb/mx7o5/dBfn/k91/dZ/p/1QF7P+z8ftkdokf7bQiseP1f
+wPYpfyk
                 "]]}, {
                Hue[0.1421359549995791, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]], 
                LineBox[CompressedData["
1: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
Z3sYsHLnwdJiTSlqNNqvvTbFAOK3uYcUnVK084zwZzMOJlR4dSULfypBheTJ
M3bbmaBLyJXgP1iCxiZcNQ+pMSHmkFnxcHYxyutOec08wwSbL/oFPmLFiMOr
a+fdm0xoynqQX3ivCIkw/rTyPmAC/yHVcdOSQuQIj8TfpjIhSKvALPZyAfLI
n+A6W8MEl8EXrzwm85FDPWe+yAgTfA49rkq4lIcMJzwMFleYoHbbYEQ4OxeF
zqtGzEuxwN5576pkVzb677Sf/m8dFlyusYzeSclEhKvy74dsWbAosuSf/zwd
3Zh69MHxEQueULZbO259i/Y6cKQa5rBA5Vqgg3VOMoqxUXu43saC4n5XxcTH
cUh5IFdj4jsLPmb27Em49gLtk3wmSBBig7Yz1lskF4JOz1U0HVJhw/vhbr0b
3FrAeFopLWjIhiLGA0EZr4ewUeFEdKcVG6zfaC22zbyC0covfx46ssEjguFZ
9iMVIhRepyk5s6Hc1Jrz2rlM0N37KGXUhg2E9Au1ZJs84IqMt959ig3t8v/V
Y6QiMMkakLgoy4ZYLwd+dk0p6KwzzUtn8P1EflhKeV4BjH+MlUkf8O8RNMYl
Il4F8fz0Wo4bLFihZNBZ8AkCr7oJdYuyYCZ+AQtbrYGmCq/Zvlom/Eyl+0+c
JMGtWFHRZ25MEMrtrVGUR8D3/M/KZxkm2N7jOSmdgmD14S3h7QMMMEhSOG7Z
hMAiq6o0KJYByjPN/C8LENQvOSVXWjGgf6uozEVXBAa7DiR0KzFA59y/GZFb
EDSHSii4r2NwuCrJ7GMaCeqj9gjMjmCgoo9c09VJYHup5EcECQPKrCYlo5MI
BG2/955ZGOwz2pY660+EspNv6/qjMXgSrS7AdZgIDr8H3OYeYDC2S9N3hxAR
JuOS13l9cf/1Pbg2DvdXB2SPLHu7YiAQLPlYX4IIX5Kk1qPsMag+VexeZEwE
g40zUuQruP8a4tf2yyaCi2JEWYgZBqc5/f2uK5JgpdNUSvYsBkZfvyUW95Dg
cm66ywacN+zQ1sf6HxDwiu36cVMbgy0DI98mr9bCFy3hBVcVPN9GSaOY9VqQ
uHl+/bc07s8yv7pCfR0I6xi6xPBhEFZU4nwhtx4STcnJl3D+/TnrmaZc3QCp
8/7MqFY6+D4IPabzpxH4R/hsfOPp4K6lp8bl3Qxysja1oWZ04LeYtEjYSwbb
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
/wHwKKCX
                 "]]}}}, {}}, {
            DisplayFunction -> Identity, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
             PlotRange -> {{0, 0.6769767675423009}, {-0.24191854321847533`, 
               0.383085737689259}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                GrayLevel[0], 
                
                PointBox[{{-1.118033988749895, 0}, {
                  1.118033988749895, 0}}]}, {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.02717214689546469, 0.09277003889119673}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.23067837480706777`, 0.14683749459844342`}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.656436471963104, 0.08430296020143568}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=3, mid=(0.5,0.3)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0, 0.6769767675423009}, {-0.24191854321847533`, 
               0.383085737689259}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], 
                 LineBox[CompressedData["
1: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
T3Nu34DMMyFGHvBdUn7KgOaHuE1By0UIO3k4XCYpE72Ggoe6kv0o77zQ2uW3
bMSFKlmqtonQv3nqmZuWOZCTi967QrLf+7McX10+kYdBoxX6VbvFWM7ZGXvx
33zYHT8Q8/iSGHVnhXl56wuxm/L56Uomn9PIz3Lk56E8xs+nyM+XyM8J5OeW
94yfHcjPVeTnoXrGz/84MH5u82L8rE5+Xkt+PkZ+3kp+XkR+vkR+DiQ/V5Of
g8jP3uTnYvLzoD3j5znk5wPkZw3ysyH5uW4c4+cRA8bPYkvGzxrk5yzy86se
xs9fXjJ+ziQ/q5GfXcjPtuTn0TDGzzrk59Z9jJ8nkJ9TzjN+diQ/l5CfPcnP
G8jPLuTnGeTnH8nPgkbGz4fIz6rkZwXyswP5OZH8LFRj/NxMfvYlP98gP59T
ZPx8mPw8tJ/xcyf5WXoZ42dv8nMu+TmA/GxJfn5Ofl5Pfr5Ifr5Dfg4jP/uu
Yfy8lfzcYsH4WYn8rPwfP1/+j59/HM/4OYX83O7L+FmL/Jxfz/i5kvx8+XfG
z5Xk539MGT9rkZ//TWH87EN+zjVk/GxFfrYgPw+Rn5X/ZPw8l/xcGc/4uZn8
POTP+FnKkPGz4QnGz3+Tnzt0GD9PzGP8LEV+7ic/V/oyfk4gPyu9ZfzMIT+r
kZ89yc+Onoyf/cnPt8sYP2uTn/0HGD//S34OUmf8LF3C+PlNKeNnrbWMn91O
M34OIT8vIz//Sn4OIz83kZ9rlzN+nkN+NnVj/FxBfq5OYfwcQn62+cD4+Tb5
WZX8bEt+jhlg/PyG/PzmHeNnNvnZ5lfGz7PjGD9nfWX8zCc/dx1n/GxHftYh
P9uRnyOdGD8Lyc+m5Oer5GcrT8bP6eTnmDTGz4Hk5+r9jJ+9yc8RDxg/B5Cf
88nPM+QYP9uTn5PIzzfIzwrdjJ//JD+zyc+h5OfH5Gd38nME5XM35XMs+bkn
jPFzJvnZifxsIM/4WYv8vJv8vJ38/Ir83El+TiA/K5GflXiMn/PJz7vIz5rk
5zLy8xbycwP5eTz52Z/8XE5+fkt+Pkp+Xkt+vkh+vk1+3kd+HneK8XM8+bmV
/BxJfo4kP6uRnwvIz37k52Dycy/5efV//KyRzPj5JPl5D/m5mfyskcn4uYf8
nEF+jic/fyU/fyQ/LxEyfrYnPzeSn4PJzy/Iz6bk51fk50ryM8jPz8jPEeRn
VfLzdfJzEflZRH7eRH4eJD9zyM8ryc8nyc995Gdz8rPsKcbPAeTnG+TnRvKz
D/n5Pfk5g/zcTH6eocP42Yj8zCU/nyU/95Ofz5Of68nPweRnK/LzP+TnG+Tn
SPLzKvLzGvJzL/l5PvmZT36+Q37eR37uJz9Lcxk/Pyc/u5Kfv3ozfl5Cfg4n
PyscYvxsQH72Iz83kJ/dyM8e5Gc78nM++VlIfvYnP3eQn1XIzybk5/Hk56n+
jJ99yc/+5GcV8rMx+TmZ/KxlyvhZmfz8lfxsTX7uJD9fJD+bkZ/XkZ99yM8y
5Ode8nMw+bnpP36OJD9zyc865OcE8rMJ+Vmb/FxJfv54kvGz9EbGz2/Iz7bk
ZxfyczD5uZf8nEZ+7iI/65Ofv5Kfv5Gfb5Cfv5KfbcnPf5OfFy1g/GxGfpZt
Zvy8h/x8j/w8zYjxszH5uYn8rLaF8bMe+XlXNuNnTWPGz07k5wDycyf52Yfy
WZb+b/wPTIpRvQ==
                  "]]}, {
                 Hue[0.9060679774997897, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 
                   NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                 LineBox[CompressedData["
1:eJx1mGto11UYx/+a0Vquy8ysNElZEVlp9xs1suhFUUQvehVBdiEj0sTSTLrQ
yi4mZktNTU1tbv/pWv8tdX/npbHGWlul1KjoTUUhvogICZFRMfh+3nzgvzfj
w3PO83yf55zznPP/TZsz7/7HxhYKhbljCoXR/+3H1qxf9Nuh+kmF0b+D9Z3h
unAxPDlcCk8Md4TPCX8WPi+8I3xmuC18lubj/9PwRZpfG/5E3Byukj7HP1fx
pssf8ds1H66poId8qsOt4dNVP9erVv4u0HzWoyU8LrxT9YZPqZDfTsWDL5E+
6rc1fOS/0b8D9U3hv8LUa4L81Uj/ybJfrnzOUP2dL/O3hH9NfOo1Vet/aoX8
PB59U2Q/X/UYK/tNYeoxPrxd/ph/jebPqjC/SfHJ52Ktx/Hkj/1WxWf8x1qP
FuVD/rcpfp3iT5P+fxO/qHxbpA+eKT11Gs/+3ab6MP4Grf9s1WOW7Pj/KHyP
eLrmX6b594Y3hR8Ibw7fLn1nyx/9YmN4hvxfKb5F8chng3izxuP/qvCH4bs1
/3rZyXdV+GH5m6nxM6TvivDq8J3h9eHrwmt0XtbJP/M5H2vFjeE7pLc+vCJ8
l+xXh9/V+XgzPEfzZyvejeFlWv9Xwg+GV6r+q7ReLypeg+rVoPyWyd87Wr8G
5fOW7M+F71P8m8Nv6D59XvbF0gNz/pZqPV/XeVus/NFzbfjZ8KWys94LtT/n
iZ/U/iM/7vP5Gj9X/f8J9X/y4T5+XP0MPbxXHtH99Kju96fVb/HHffRC+J/0
R/Rwnz+l/vpQeEzsC8JHY385/GP4mfCh8KLwUPgl2YnfFV6u8ey3/WHWuzvM
ftodRt/W8GvhjvCS8Lrwe+F2jV8d5rxukz747fDK8Kvh+WH6Va/Grwh/EG4K
vy99nOflYfppUYx++mVzmH62JEx/LVXgxgrj14a3yD/2DWHuh43iBt3HI7q/
2V/4W6h41LtZ9eS+XhrmPizLPqB4P0tPUf77w7xP+sS9iveT7MfC27U+vAcX
hHnvfK35J6Ue6Pd7n/G89xvD2HuUD+8D/J9QvCPSO17jR+R/WPr/lB6/1wvS
j3/WY1Dz/wjz+6lT/n7XetLf2lQfv595338fO7+ndii+3/eHw/weba2gl3i/
SP+AuKj49E/qX6V8qGeXztsenY82xWO/sd87xCXVf6/6D/7+Vrw21eOHML+3
OT9lnR/sw+Lv5G9YjL1UoR7fyh/rf1D9C3890jcof+jfK3tJ692teu5S/Xdr
fqf0Ob7r1SV7t+bvUf77dT9ipz/tU38sq75l+TP36zyS79EK8bo1v0f5fCE9
3dJDPsdlJ16fzmef6ter9ejR+vXJTjy+L5QrxOf9tE/r3y897D/Ox+c6T8Tj
vYVe9veg/H2l+gypHsQ7IX0jik+8Axr/pe6vIdWL8dzX32g89aXfE++08IDi
Yef7Cvlz/1GfatmrZef7Dfrpn6zHOI0nHue7Rv55T5PPBPmrkp379bD82U7+
vOc5L3x/oL/UKh7vffRP1Hz8c56mKj7fc8pi/E2RP37PUA9+X3Fe+H5RUn2I
d6H8TRL7++xk6eP7Uafy2SXulP6y7K2qZ5f0cx/yvcTvn/8BsGR4ww==
                  "]]}, {
                 Hue[0.1421359549995791, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], 
                 LineBox[CompressedData["
1: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

                  "]]}}}, {}}, {
              Thickness[Large], 
              GrayLevel[0], 
              CircleBox[{0, 0}, {1.5, 1}]}, {
              Thickness[Large], 
              RGBColor[0.6, 0.4, 0.2], 
              
              CircleBox[{0, 0}, {1.2480754415067652`, 
               0.5547001962252281}]}}, {
            PlotRange -> {{-1.5, 1.5}, {-1, 1}}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0.2673646097811034, 0}, 
             PlotRange -> {{0.27057010139937077`, 
              0.475721564968486}, {-0.019461023130732447`, 
              0.18570449656103155`}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.2673646097811034, 0}, DisplayFunction :> 
             Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                GrayLevel[0], 
                
                PointBox[{{-1.118033988749895, 0}, {
                  1.118033988749895, 0}}]}, {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.38701176533650294`, 0.07692307692307686}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.27950849718747417`, 0.12500000000000064`}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.2795084971874749, 0.12500000000000178`}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=4, mid=(0.5,0.3)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0.27057010139937077`, 
              0.475721564968486}, {-0.019461023130732447`, 
              0.18570449656103155`}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
         TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 0, 1]], 
                LineBox[CompressedData["
1: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
T3Nu34DMMyFGHvBdUn7KgOaHuE1By0UIO3k4XCYpE72Ggoe6kv0o77zQ2uW3
bMSFKlmqtonQv3nqmZuWOZCTi967QrLf+7McX10+kYdBoxX6VbvFWM7ZGXvx
33zYHT8Q8/iSGHVnhXl56wuxm/L56Uomn9PIz3Lk56E8xs+nyM+XyM8J5OeW
94yfHcjPVeTnoXrGz/84MH5u82L8rE5+Xkt+PkZ+3kp+XkR+vkR+DiQ/V5Of
g8jP3uTnYvLzoD3j5znk5wPkZw3ysyH5uW4c4+cRA8bPYkvGzxrk5yzy86se
xs9fXjJ+ziQ/q5GfXcjPtuTn0TDGzzrk59Z9jJ8nkJ9TzjN+diQ/l5CfPcnP
G8jPLuTnGeTnH8nPgkbGz4fIz6rkZwXyswP5OZH8LFRj/NxMfvYlP98gP59T
ZPx8mPw8tJ/xcyf5WXoZ42dv8nMu+TmA/GxJfn5Ofl5Pfr5Ifr5Dfg4jP/uu
Yfy8lfzcYsH4WYn8rPwfP1/+j59/HM/4OYX83O7L+FmL/Jxfz/i5kvx8+XfG
z5Xk539MGT9rkZ//TWH87EN+zjVk/GxFfrYgPw+Rn5X/ZPw8l/xcGc/4uZn8
POTP+FnKkPGz4QnGz3+Tnzt0GD9PzGP8LEV+7ic/V/oyfk4gPyu9ZfzMIT+r
kZ89yc+Onoyf/cnPt8sYP2uTn/0HGD//S34OUmf8LF3C+PlNKeNnrbWMn91O
M34OIT8vIz//Sn4OIz83kZ9rlzN+nkN+NnVj/FxBfq5OYfwcQn62+cD4+Tb5
WZX8bEt+jhlg/PyG/PzmHeNnNvnZ5lfGz7PjGD9nfWX8zCc/dx1n/GxHftYh
P9uRnyOdGD8Lyc+m5Oer5GcrT8bP6eTnmDTGz4Hk5+r9jJ+9yc8RDxg/B5Cf
88nPM+QYP9uTn5PIzzfIzwrdjJ//JD+zyc+h5OfH5Gd38nME5XM35XMs+bkn
jPFzJvnZifxsIM/4WYv8vJv8vJ38/Ir83El+TiA/K5GflXiMn/PJz7vIz5rk
5zLy8xbycwP5eTz52Z/8XE5+fkt+Pkp+Xkt+vkh+vk1+3kd+HneK8XM8+bmV
/BxJfo4kP6uRnwvIz37k52Dycy/5efV//KyRzPj5JPl5D/m5mfyskcn4uYf8
nEF+jic/fyU/fyQ/LxEyfrYnPzeSn4PJzy/Iz6bk51fk50ryM8jPz8jPEeRn
VfLzdfJzEflZRH7eRH4eJD9zyM8ryc8nyc995Gdz8rPsKcbPAeTnG+TnRvKz
D/n5Pfk5g/zcTH6eocP42Yj8zCU/nyU/95Ofz5Of68nPweRnK/LzP+TnG+Tn
SPLzKvLzGvJzL/l5PvmZT36+Q37eR37uJz9Lcxk/Pyc/u5Kfv3ozfl5Cfg4n
PyscYvxsQH72Iz83kJ/dyM8e5Gc78nM++VlIfvYnP3eQn1XIzybk5/Hk56n+
jJ99yc/+5GcV8rMx+TmZ/KxlyvhZmfz8lfxsTX7uJD9fJD+bkZ/XkZ99yM8y
5Ode8nMw+bnpP36OJD9zyc865OcE8rMJ+Vmb/FxJfv54kvGz9EbGz2/Iz7bk
ZxfyczD5uZf8nEZ+7iI/65Ofv5Kfv5Gfb5Cfv5KfbcnPf5OfFy1g/GxGfpZt
Zvy8h/x8j/w8zYjxszH5uYn8rLaF8bMe+XlXNuNnTWPGz07k5wDycyf52Yfy
WZb+b/wPTIpRvQ==
                 "]]}, {
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0]], 
                LineBox[CompressedData["
1:eJx1mGto11UYx/+a0Vquy8ysNElZEVlp9xs1suhFUUQvehVBdiEj0sTSTLrQ
yi4mZktNTU1tbv/pWv8tdX/npbHGWlul1KjoTUUhvogICZFRMfh+3nzgvzfj
w3PO83yf55zznPP/TZsz7/7HxhYKhbljCoXR/+3H1qxf9Nuh+kmF0b+D9Z3h
unAxPDlcCk8Md4TPCX8WPi+8I3xmuC18lubj/9PwRZpfG/5E3Byukj7HP1fx
pssf8ds1H66poId8qsOt4dNVP9erVv4u0HzWoyU8LrxT9YZPqZDfTsWDL5E+
6rc1fOS/0b8D9U3hv8LUa4L81Uj/ybJfrnzOUP2dL/O3hH9NfOo1Vet/aoX8
PB59U2Q/X/UYK/tNYeoxPrxd/ph/jebPqjC/SfHJ52Ktx/Hkj/1WxWf8x1qP
FuVD/rcpfp3iT5P+fxO/qHxbpA+eKT11Gs/+3ab6MP4Grf9s1WOW7Pj/KHyP
eLrmX6b594Y3hR8Ibw7fLn1nyx/9YmN4hvxfKb5F8chng3izxuP/qvCH4bs1
/3rZyXdV+GH5m6nxM6TvivDq8J3h9eHrwmt0XtbJP/M5H2vFjeE7pLc+vCJ8
l+xXh9/V+XgzPEfzZyvejeFlWv9Xwg+GV6r+q7ReLypeg+rVoPyWyd87Wr8G
5fOW7M+F71P8m8Nv6D59XvbF0gNz/pZqPV/XeVus/NFzbfjZ8KWys94LtT/n
iZ/U/iM/7vP5Gj9X/f8J9X/y4T5+XP0MPbxXHtH99Kju96fVb/HHffRC+J/0
R/Rwnz+l/vpQeEzsC8JHY385/GP4mfCh8KLwUPgl2YnfFV6u8ey3/WHWuzvM
ftodRt/W8GvhjvCS8Lrwe+F2jV8d5rxukz747fDK8Kvh+WH6Va/Grwh/EG4K
vy99nOflYfppUYx++mVzmH62JEx/LVXgxgrj14a3yD/2DWHuh43iBt3HI7q/
2V/4W6h41LtZ9eS+XhrmPizLPqB4P0tPUf77w7xP+sS9iveT7MfC27U+vAcX
hHnvfK35J6Ue6Pd7n/G89xvD2HuUD+8D/J9QvCPSO17jR+R/WPr/lB6/1wvS
j3/WY1Dz/wjz+6lT/n7XetLf2lQfv595338fO7+ndii+3/eHw/weba2gl3i/
SP+AuKj49E/qX6V8qGeXztsenY82xWO/sd87xCXVf6/6D/7+Vrw21eOHML+3
OT9lnR/sw+Lv5G9YjL1UoR7fyh/rf1D9C3890jcof+jfK3tJ692teu5S/Xdr
fqf0Ob7r1SV7t+bvUf77dT9ipz/tU38sq75l+TP36zyS79EK8bo1v0f5fCE9
3dJDPsdlJ16fzmef6ter9ejR+vXJTjy+L5QrxOf9tE/r3y897D/Ox+c6T8Tj
vYVe9veg/H2l+gypHsQ7IX0jik+8Axr/pe6vIdWL8dzX32g89aXfE++08IDi
Yef7Cvlz/1GfatmrZef7Dfrpn6zHOI0nHue7Rv55T5PPBPmrkp379bD82U7+
vOc5L3x/oL/UKh7vffRP1Hz8c56mKj7fc8pi/E2RP37PUA9+X3Fe+H5RUn2I
d6H8TRL7++xk6eP7Uafy2SXulP6y7K2qZ5f0cx/yvcTvn/8BsGR4ww==
                 "]]}, {
                Hue[0.1421359549995791, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]], 
                LineBox[CompressedData["
1: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

                 "]]}}}, {}}, {
            DisplayFunction -> Identity, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {0.2673646097811034, 0}, 
             PlotRange -> {{0.27057010139937077`, 
              0.475721564968486}, {-0.019461023130732447`, 
              0.18570449656103155`}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.2673646097811034, 0}, DisplayFunction :> 
             Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                GrayLevel[0], 
                
                PointBox[{{-1.118033988749895, 0}, {
                  1.118033988749895, 0}}]}, {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.38701176533650294`, 0.07692307692307686}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.27950849718747417`, 0.12500000000000064`}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.2795084971874749, 0.12500000000000178`}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=4, mid=(0.5,0.3)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0.27057010139937077`, 
              0.475721564968486}, {-0.019461023130732447`, 
              0.18570449656103155`}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], 
                 LineBox[CompressedData["
1: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
                  "]]}, {
                 Hue[0.9060679774997897, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 
                   NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                 LineBox[CompressedData["
1:eJx1mG1InmUYhm0ExWhsDGMxkD4YBLIxiaKIhvvh2BiTxnK5bEsxnU0zzblc
7n3uVzdFM0XLSrPWbLMmlk1sa2W0rG2s1qxYlmBBsQZG0J+ofgxGEZ1ncB/g
r5eD6/u6r/vjfW4trdlSviAjI2PXNRkZ//7WNu+cOjFxMbczOXLHX+FU7m5x
o7hO3CGuEbeIq8Q94sfE9dBvEFeKqxHP9kHcBf+F4v3iEfE+8ai4XlwHdn3N
4mPiRvF+6G+D/zbkm4J9D+R75rF3/BfFz4jPi58WbxanxYOIVwT/FejPJOz7
wG1Yn5XiJtTTBPuA/tpfC/KpRL2Wd4jPwD5f3CBeC/kGcYJ5cD8yoc/+0F8j
5ItQbwm4BfY5qGdI3Ab/rejHs+IycCfsXV+7uAnySnAB2PotyPeAOFvcjfo8
j9sQPx9cCP9rxF3Y7x3I1/q/pv7j58T3wP9y5Lcc/cqE/2zwenGveDX83Yl8
V0B/sfgFnFc9mKde1NcLf53iZeJX0K+XUL/t7wL3Q/96+HM+feKlkG8VvyzO
g/4m8SHxfbBfDftS8WHxlVRs7/36ungJ9D0/ryGfI5jnt+D/bXGG5Ecxn0PY
/28i3juYvxHMg+W3JLHc6/uuOCuJ89koHoX+ONb7hPhG8YeYZ8fzffSZeDoV
698g+afia8UnxVsQrwj9HRd/jPk4jXxPY/0db534lLgW+kWo3/fNOfEO8QWs
9wfiw+LzuE9nxdvFn4iH4f+QeA7r/x36+w3OyynxUfFF8YB4WnwQ+c3Afko8
g/vY8S6Lf4b8rOdTfBn+7e938SXxn+LvxX+LPxcvDHH8TPG3Pl8hzwnx/KwM
cT6bxF+K7w9x/ltCvB554h/Fe0M8LxtC3N865Nca4vUcFk943sST4gT5zoZ4
/6RD3M+pEM/XHPIbEI95nkO835yP53dI/IXPL/F7nq8Qz+8fyG8mxPtzVTo+
D8clPyb+RfyGuCfE5+NvWM+sdHweO96w+GqIz9Mz4oPiCyG+P9yPAfTT8r4Q
3wdfiwc9L+lYf1Lyfu+XEN9H7qfv4wqx3xML0jGPSP6876N0fP//FOL7emE6
1k9J7vfHYIjtL8He89IBfwcg93trCNwi9nu+P8T27k9AP1uxXs1YjzQ4JV6s
/PzePSn5Xt836dh+P/JpD7H9EOKdFft93w2egL9G5Of6/f/I8+T3exfk3cin
TLwH+9Xxj4ufRD727/PtKew/y0vE9fPkV496CuGvC/3uQn610K9FvHbIm8Q1
0Lf/YnA59N0f//8vQP/cz2rMax3qM28EV2O9csX+HuH7owr1kP//vgBOwHXz
6Dt/78cnsJ7u5xrET8Gf+/koziPX6/upAvaPi/Mht30l1qcK6+n8V0Fehn7m
Qf9usb/XrEM9rtffM1bAPgf53Yv814p3oJ5irK/9ZyH+MvQzH/m63lLxeuR3
Ve+fB9APx98Kf37/PDhPP5aKS1B/KfqzS7xI/Ig4G3yT+GHx7ZDfjPW8ksTy
29Dv61DfEuRj+x2QP+T7Ev22vuv1e7Nc7Pem59fv1c2w9/z9APu5JK7vK3GZ
eAb5ziZxftNJnL+5GPYFvg+TuN/nkM80/B+H/vvi7ZDv9P2WxPvhI/gbS+J5
G4X8IPoxBv9j0G8VF4lfTeL59/8Xz8cAeBD5+vsVv8da7u9T++C/AfXUwn43
8nV8fk/2/8N/AL4KrWA=
                  "]]}, {
                 Hue[0.1421359549995791, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], 
                 LineBox[CompressedData["
1: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
i7phhVpY/+//s8f//j//H4TaNfU=
                  "]]}}}, {}}, {
              Thickness[Large], 
              GrayLevel[0], 
              CircleBox[{0, 0}, {1.5, 1}]}, {
              Thickness[Large], 
              RGBColor[0.6, 0.4, 0.2], 
              CircleBox[{0, 0}, {1.326000501983965, 0.7129357132741541}]}}, {
            PlotRange -> {{-1.5, 1.5}, {-1, 1}}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.02], 
                Scaled[0.05]}}, AxesOrigin -> {0.2861686373749029, 0}, 
             PlotRange -> {{0.2880922198591087, 0.41120149884827834`}, {
               0, 0.1543697612448201}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.2861686373749029, 0}, DisplayFunction :> 
             Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                GrayLevel[0], 
                
                PointBox[{{-1.118033988749895, 0}, {
                  1.118033988749895, 0}}]}, {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.2928406557397447, 0.1060064191642745}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.29264588411935843`, 0.1191247819547156}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.4111966566827375, 0.09363329144341187}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=5, mid=(0.5,0.3)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0.2880922198591087, 0.41120149884827834`}, {
               0, 0.1543697612448201}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.02], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
         TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 0, 1]], 
                LineBox[CompressedData["
1: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
                 "]]}, {
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0]], 
                LineBox[CompressedData["
1:eJx1mG1InmUYhm0ExWhsDGMxkD4YBLIxiaKIhvvh2BiTxnK5bEsxnU0zzblc
7n3uVzdFM0XLSrPWbLMmlk1sa2W0rG2s1qxYlmBBsQZG0J+ofgxGEZ1ncB/g
r5eD6/u6r/vjfW4trdlSviAjI2PXNRkZ//7WNu+cOjFxMbczOXLHX+FU7m5x
o7hO3CGuEbeIq8Q94sfE9dBvEFeKqxHP9kHcBf+F4v3iEfE+8ai4XlwHdn3N
4mPiRvF+6G+D/zbkm4J9D+R75rF3/BfFz4jPi58WbxanxYOIVwT/FejPJOz7
wG1Yn5XiJtTTBPuA/tpfC/KpRL2Wd4jPwD5f3CBeC/kGcYJ5cD8yoc/+0F8j
5ItQbwm4BfY5qGdI3Ab/rejHs+IycCfsXV+7uAnySnAB2PotyPeAOFvcjfo8
j9sQPx9cCP9rxF3Y7x3I1/q/pv7j58T3wP9y5Lcc/cqE/2zwenGveDX83Yl8
V0B/sfgFnFc9mKde1NcLf53iZeJX0K+XUL/t7wL3Q/96+HM+feKlkG8VvyzO
g/4m8SHxfbBfDftS8WHxlVRs7/36ungJ9D0/ryGfI5jnt+D/bXGG5Ecxn0PY
/28i3juYvxHMg+W3JLHc6/uuOCuJ89koHoX+ONb7hPhG8YeYZ8fzffSZeDoV
698g+afia8UnxVsQrwj9HRd/jPk4jXxPY/0db534lLgW+kWo3/fNOfEO8QWs
9wfiw+LzuE9nxdvFn4iH4f+QeA7r/x36+w3OyynxUfFF8YB4WnwQ+c3Afko8
g/vY8S6Lf4b8rOdTfBn+7e938SXxn+LvxX+LPxcvDHH8TPG3Pl8hzwnx/KwM
cT6bxF+K7w9x/ltCvB554h/Fe0M8LxtC3N865Nca4vUcFk943sST4gT5zoZ4
/6RD3M+pEM/XHPIbEI95nkO835yP53dI/IXPL/F7nq8Qz+8fyG8mxPtzVTo+
D8clPyb+RfyGuCfE5+NvWM+sdHweO96w+GqIz9Mz4oPiCyG+P9yPAfTT8r4Q
3wdfiwc9L+lYf1Lyfu+XEN9H7qfv4wqx3xML0jGPSP6876N0fP//FOL7emE6
1k9J7vfHYIjtL8He89IBfwcg93trCNwi9nu+P8T27k9AP1uxXs1YjzQ4JV6s
/PzePSn5Xt836dh+P/JpD7H9EOKdFft93w2egL9G5Of6/f/I8+T3exfk3cin
TLwH+9Xxj4ufRD727/PtKew/y0vE9fPkV496CuGvC/3uQn610K9FvHbIm8Q1
0Lf/YnA59N0f//8vQP/cz2rMax3qM28EV2O9csX+HuH7owr1kP//vgBOwHXz
6Dt/78cnsJ7u5xrET8Gf+/koziPX6/upAvaPi/Mht30l1qcK6+n8V0Fehn7m
Qf9usb/XrEM9rtffM1bAPgf53Yv814p3oJ5irK/9ZyH+MvQzH/m63lLxeuR3
Ve+fB9APx98Kf37/PDhPP5aKS1B/KfqzS7xI/Ig4G3yT+GHx7ZDfjPW8ksTy
29Dv61DfEuRj+x2QP+T7Ev22vuv1e7Nc7Pem59fv1c2w9/z9APu5JK7vK3GZ
eAb5ziZxftNJnL+5GPYFvg+TuN/nkM80/B+H/vvi7ZDv9P2WxPvhI/gbS+J5
G4X8IPoxBv9j0G8VF4lfTeL59/8Xz8cAeBD5+vsVv8da7u9T++C/AfXUwn43
8nV8fk/2/8N/AL4KrWA=
                 "]]}, {
                Hue[0.1421359549995791, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]], 
                LineBox[CompressedData["
1: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
i7phhVpY/+//s8f//j//H4TaNfU=
                 "]]}}}, {}}, {
            DisplayFunction -> Identity, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.02], 
                Scaled[0.05]}}, AxesOrigin -> {0.2861686373749029, 0}, 
             PlotRange -> {{0.2880922198591087, 0.41120149884827834`}, {
               0, 0.1543697612448201}}, DisplayFunction -> Identity, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.2861686373749029, 0}, DisplayFunction :> 
             Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                GrayLevel[0], 
                
                PointBox[{{-1.118033988749895, 0}, {
                  1.118033988749895, 0}}]}, {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.2928406557397447, 0.1060064191642745}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.29264588411935843`, 0.1191247819547156}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.4111966566827375, 0.09363329144341187}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=5, mid=(0.5,0.3)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0.2880922198591087, 0.41120149884827834`}, {
               0, 0.1543697612448201}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.02], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], 
                 LineBox[CompressedData["
1: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
fEHbbrr0lQfK3abq5mS+RoryLXZKULC7OTWaR/qzf+3AgyySZ3Msuzjo536n
xmvo5zeDnqLo59XBb5vQz/xqm0LQz9GfZnxEP59eLWGGfua3Xt6Nfo7/m8tF
P7cIOHign9cNBu1CP7uo5hiin9tH48TQz9Fmy7LRz92Tg2/Qz027TIPQz2aO
8Uno54TiTmH08+wfVhnoZ97dovvo56HAn6yfw3z+5qKft1afLkY/D/uLt6Kf
9/KGWD/L1YjJop+nXg2yfuZzKLqAft68VD8Q/dz1PDUS/Tzr+f409HO0p5Uv
+pmv6Lo++vlTj4Aj+rm78JI5+vnAG4s16OfRzC096OdLZfkb0M/rbZMfoZ/j
5l63RD87cW210c+yhS/k0c9f6w1a0M+GY1dV0c9as7JZPwumKfqgn3vKM1g/
dzg+r0M/l6u9Z/2sl5sRjX62O6regX5+VFdUin7eaVPI+jmscpUw+nn9syzW
zx2KS1+jnw87+S9FP9ue13VCP895uMAP/dzQefsi+vnzvhDWz4smnP3Qz0Gh
G7TRz4Kii16gnyuWmMign62/RQ+jn00mY1g/+2+SFEE/N7StnId+ZuyX2qGf
b1nJLUY/2829Px/9bPzanvXz+WyREPSzXsiCjejnbKlnTehn1eQM1s/tZ8ce
oZ81ysWPoJ9du0qvo58D73ewfm5QPpGDfuavmyGKfvatrVuNfi7gFbN+bjO3
4KGfS6R3sX52Kv1LDv2c6WDF+rl94T3+x+S8ijv/lfWz+OSbTPRzSHkl6+dU
/aZP6Of9zwpYPy+6/EkE/RzT/Zb18/BGSwv0s4K0Auvn0D0yEuhn47UXWD9r
j9tUoJ/VFKZYP3u4M1noZwFRL9bP3bBXH/3sY6zH+rnGTHoV+lmx4c889PPu
L+GO6OdQ41Osn72f7PNCP9tuCmT9LN0h+Rv93OVxifWzYrPmMPq5Le4K6+fp
2UrG6OfQX29YP0faK1Sjn8dONbF+Tn/6RxP9LHRxhPVzgph7Jvp5d7YL6+fc
S/Ee6OdOL0XWzz/nXotBPzs0JLJ+zpu94Sz6ucbz8wf0s9zUtlD0c2jCGtbP
mW//eKGfxes1WT+neY2Lop85P5azfm4/ZaqBfv6gz8/6WW6xcQz6+cOGLgP0
87yCwK/o54ALvRz0c+F+9Vb0c2Mrxfq5cc4hM/RzmtVN1s+G3MJ69DNf9j7W
z0cTMp6in4MTZrJ+Xm1zQhX9HBpbxvp59031pejn/rmrWD+XPL5/CP3M6es+
jX7++tDiMPrZ9U8g6+f4n0c46Oft7RtYP+el/2lAP+t0ibN+rknhaKCfv3ev
ZP1sYyjih37Wze71RT9re04Vop91HIuE0c+N50o56OdOAzfWzz22DULo56rK
X1Ho53NUngH6maMSxvrZYI+ZDvp5xHQL6+c6d51v6Oda9ZWsn49J6euhnwVn
v32Cfu4s+HYb/TzR2fYW/ZwWVPsZ/ewZcvcH+rkjvVYI/Zx740Mr+nmbkpIp
+llS5HYk+jmrvOow+llJdQbrZ+U17YfRzxM/h9zQz1yvVFP0c/EhPtbPIj7C
vejnrKYqS/SzTrwpjX52HlzA+lmOUy2Nfo4Y7RtHP99YO3UX/ay1fj7rZzUn
T3v08667KVbo559erwPQzzP5Hjajn8elzCfRz0HLXpmjn41EH71FP38d7ghC
PzfP7OhBP4cUHdiEftau7+RfTfwsXCvG+nm5a9gk+tnulTrr552NRQfQz5ll
/Kyfw7TyvNDPF5t3e6Gfxeu2LkQ/L7vfnIt+zp7hNYV+dniXMIl+Th8dTkE/
q1gENqGfh6a3ZaGfFTV1XqKfdR3GxdDP1veynqGfC48mX0c/3zeN/YR+rkr/
Mwf9HHXkmzL6OfqIjBr6Wf7FxFL084n3JYHoZ18H+jH6uZuafwj93KDYX4Z+
1hWT2IZ+nvMgwhX9XGn5fBj93J3vmo1+1u5p7EI/y57T9EQ/Fz2d34t+DhoT
6kY/cyLSdqGfAzz6z6GfBYOKXqGfowRu30E/14nKrEA/L23yfoV+ltujshH9
nP8kygr9LMAxnEA/e1LGv9HPbWuqPqOf+QdcZNHPShED5uhntagkLvp5IPyX
Fvq546tzIvq5YL1nGfo5LG8sGP18bqqnCP2sH839hX4WWGhvg36uzxpNRD9f
nzfE+vnPk6EH6OeCT/EH0c/W5a1b0c8KCsvWoJ/jHa/nop+NagZYP1+a385F
PydW32H9nBBebId+NmoU1UU/v/kGw+hnEYl+1s9XdOu3oZ+9Mwzmo58zU250
oZ9tDE6zfo4+XqWLfva5mMn6ecuomxP6+fM5kxr0c3WtJB/6Wem3C+tnD8Gm
YvRzXX0Y62ef6Tmsn9v1FPzQzx2Hix6in+Pc8lg/Bz698xz9PC9Om/VzwF9O
7ujnioUprJ/lXpSXoZ8rR8tYP0sWc1ehnzuX3WL9XLJvbAr9PBHjzfo5Jv0K
H/q5Ssqd9fM9UH2Ffva+H8P6+bmpLOvnJdntrJ8nJ5+Ho5+/d3uwfu7ZH7cV
/ewSu5j1s0NC5VP0c+3N95vQz/Y5Qqyf+1xCWT+f/xH4EP28vVWX9fMdvn1n
0M/+4WtYP5fVG/DQz82fF7J+jtm36CX6ubDn6Sj6GezqN6GfLSIVWT9/9p4/
C/0cGXSRQT+nvrx7C/3caezE+jlqbV4K+tl6jzjr557gVYLoZ+0eb9bPN+KF
3NDPTguWsn7eUMlcQT8nzPUuRj8H7OJj/VzgllaCfvY/sKoR/dxpeygG/XzP
/IoD+nlFeAoP/fygIug2+tnQ9NUt9POxaN/l6OfJI7ourJ9zTdTQz8JuWwD9
HHQ2JQr9nMccaUc/n///35/j/v/35/8D+ToGNA==
                  "]]}, {
                 Hue[0.9060679774997897, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 
                   NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                 LineBox[CompressedData["
1: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
L7/59N0//x/RzEtv
                  "]]}, {
                 Hue[0.1421359549995791, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], 
                 LineBox[CompressedData["
1:eJwt2Hk0ldsbB3BTGZoQpWgg3GggDSrqQUTKL4mk6JoyFEKFijIL1S2lDIVc
FVIpwxkVcooS0nlPhEKJhFRImX7vs92/ztprr/c96+y9v9/9WUfZ+YjVQREh
ISFPYSEh/LyQV1CvzOdDgpB2wrUSNrxtCVtW85IPCzjpCruc2TAedUr0+TM+
bEj7fX2PKBt8pn7+uITHh+MWwS43M1lg0uJg2EXPS4zq3tY2YsH0gYRC0Wo+
iDXZPR/5yIQ209K3VvT7ldSqlTtimSBz1YCV8YEPrqtejtxby4R7LfXV2b18
0OmskejpYoB/rJHBvHE+POwKrBa6xYAzR30SE6Up2Dj/sczswwzYNDrbhaVK
was22XgpfQYEFc5bpLiRAuk1TZfPKzDgxt2Rt/+zpMDP0uWnkDADcmuEnne5
UTDlmrNP7GAx+GmdzzkTQkHrQ/7nmUPFcC+6kn//MgV5vsblBiIMYJbHj8zN
ocCQr7QjdR4Drv5+k+laQsFFO9uX3noMeP0ry9i0joKykz3ibW4MyEjdoBrc
RoHQhxLR8RQG8NyvNVT1U9Cdal1QKGBA3d1FV4THKTDv/hbfrsAE7+J07QkJ
ATTE2PP2OjJhnypPPEdGAB1qh9e132WCf97b9G9zBTAwz5Jt9ocJn/XM17xS
FMAmi6TZ+8xZsDdUR9lkAT1/JmtrTwoLDKXk17soCSDydK1nWzcLzK/xRPXm
CSB5IK1HcwMbdgUfFuqcLYB3OeV21ZFsaJORrY6ZLgCjW7bJLdVsKJFJ2L1F
VABzLCXY56Q5EMqVn9gyTIHcfTuzRTs5ULZpopXxlV4fmxa9nzEckAq78KW2
hYLR5drhZ9gcuPnTVPlJDQWey9ha1p854B1b85X1mIKpvHkH5k/jwmPvNOvB
exS0fZtVenkpF4aHG9xuX6fgmP7tH8mbuWDBU7wkHE9BiLPm5QUW9NhZc87G
E/R+UieV1ay5IN0nEh/mToHI4FjRy91cMKuudBbfQ4Ha0cAE2MEFZ1Pe2WFj
er8inl4p3cSFpE+XJc6soffLcntCGv19kONeUUafl76fzzN1Z3DhXZHWhk/y
9PMO6Y5DXzkQ+VnfcqoEBVfO1ala8jiQI9e1yXiEDx6SIsZPkzngmpLsVfyN
D0nSb3dRnhyQ9gg86tfBB+1pukdk1nHgxv3OudHNfFjbnX9n6gQbKvRE7YQp
PtyKTXXaymODyU6xyJ4aPmzyFP/kHMsGtkSRpcULPoSXiw/2bmdDWFiTmPpz
PlSytycEzmBD2oybN47T+VrYG8A7V8MC44eDY7r0ePFUtcTif1hgrz282I3O
29m7ErNP7GKBE//4zqFKPmwMVY2xkmNBRFymbTOdv7UZxQx2AxPkmzc8k6zn
w+CgnIVKOhNK3psv9mngwwuzw5Y/3JmgvkhswS86j+UF0yriVzMhU7Xr/cUu
PjjE1+w2FWHCR9nOZeo/+PCj7q3icT4Dluf3/psxSue1ZzTCPpcB9TbnB7vE
KdBYPrhCP5IBTk/8pTtn0/maCBrY5swApelHbcIXU3DQNuD3I2MGlLtMrbi5
goKgjLiy1GUM6Hebo7Zcj4IUN9H9i+cyoLZu9mqJbRSEJ3EvWIszwNjV6omS
LQUn8izmGY8WQ5RXId/yIAX7POW+/qDz/LiM8Tb+KAViP156OwwUQ1/Q2L9F
YXTepUNrgn4Vw/d1h+8U/0O/r7vGfPVEMXjckhwJvEHBgUvnQ49NY0C14NmJ
j7kU9FdNebJAiQE9N0yojwwKqkJU7aRWMWBI+lO2awUFa9dJD88yZ0Apd0m8
FZ1/i0MlveN0/qecu7EgtYmCP7A6JjOGAZuX5yqu+Eyf513/O1B2lwHS7zvc
h79RsHdxV+6CNwzo0ylU6KPzlfDN8fLxMXq9dnVECAkLIJ9KC47QZMLYWMq2
JXQ/1LXcsRu3Y4JFX8yB7TMF4C87cyQ5ngnB/HT5I3SeBzcfPSD+hAmOa8w1
oum+KFQJHB/4yYQT7moVsfMFUJHlvWSWJgtyrZxjj9H9IOK1Za2QEwvSNLnX
jej+CK4cm+mXxAKjPVK53+l5gY+ptWQdC7KHXXtC6b6RTg6pOiLOho4ptWu+
Kwhg73D+ffPNbJCesOo3lheA88ppCw2OsaHw0okVodICUF8s5jOUzQZhn5GM
bCkBaO98cU2umQ1FJbE5PLpfhNavyzSawYGE6nCr1hEKSu0SZDT1OZBZ5mwj
+pM+Hz1H7AM86H6pZs/T+0LndTz3IHWJA2lixwoS39P7P3Bn5BeDA+qXFn5Q
eUP3aRLDPuEdBwJOS47+fEav/02fUvvfHLj4d7OoEpuCCvHkjtlyXFAw9zzz
II+Cpae2ZZ3Q5ELdfq+gijS6r/+1i7DR58LiF73u/hcpiD4fanl8GxdKK0cX
19PnR6rlB+veLi7InwpmjPlTYPJ0e9c7uo9820qdpV0pOF5uOrfNigtLvEv3
q9tQ0G7+77J727mwrfxOsf1Wui+PrjdeC1yw252t+1qX7pvnhsYnVnBh9Win
SqYGBZ93HbeOmMOFoVsx4n2KFNx6HLzX4w8HRvWqot7MpPsyTn2PWSMHoir8
pP1EKDg0Lf7l/wo44LkgNefTEB9ONJh+f3SWAym+hqnbe/gQ1f65g2HHgTVp
P5aVt/NhplXUkzx1DhjrKlu6vONDiEVTaM83uo+4zL1mb/gQFNjW11LEhnzF
e+lnX9F9RQUb/wxiwwHr/as3VPHBe4mgLIe+P4yE88K86L65d/1/8rHDLGir
ExbToftoQa3TdZViFhi8l+tNpMc5GqtOSR9lQffQt8YMus8cir/HDmix4EuU
TYwt7QnZkdG5gb1MECl8f45dx4dM+8ZIkzwmXP6ttejZWz788dfMl/Zmgs7D
zHd+rXzY16hoFK/NhN6/nl7L7+bD/c7TNe6/GLDUdNzcl/79KgqnqD3lDMiM
et2fLErvT67tLbEEBpzNeRojI0uB8JQ45bnuDEjxc5hXrEzvd53g6DIjBugM
bn3jpEOfv6KfeW+W0Pd9ZfKq7i30fETxvivTGfBq1FFvMX2/zJx+en473Tf9
Per1dR4U+Oaqai2i+8ZR00aed4o+r+GBKsn0uK5n2rvyCxQ8E+44GT1eDJqS
P3XP36TgenbzBTFpBlwPs1/WUUA/r74uVF6TAUXVLTvieBQ4rOk6lLaDAQYR
Jml6AvSM45uDgQwYNI/wYnbQfkjqdZKl+7Wt/5FJGZ2P6d8qf2t8YoAcf1R4
npAAdGbE6smo0f0+z7Elis6biHxRxDQvJmw1Y6fXywrAqloxUI/JhLDaoNpa
Or8rfH+vzJJgQbGLVbc1nXeLtKY5y+xZoBahk2ZI90GAjsn5lIcsaOSvHDlN
599Td86eW3T+h24NJwrR/bJxhkd3tz0bbOoFF3mz6Oen3MwbfcCGH2mdZxqn
0P2UzhNype+/GYm2Sja/Kci3/dsgZxsHXknFsQ50U9BR+Chg/3kOxK2feUSz
kYLNajd5ClUc6HASdP+m16Of89Hk2ggH+pWyWxUfUnBBckT9/hIuXKwymfk1
hV5Pai3vgAEX1hf61VZHUOC1r+LvFksuPJuRaqjlRfugymZWMp3PC1U3RqOt
KVgf9iDJiM4jT22D145NdB+3OzNer+FCYad187A6BTdLd0SeleGCDs/WUpQ+
L6Hdh3MH2jjgE7ZwSwvtzzADpk7fbQ4sVJnw/Ub7tC5oevVlJw7wZq6ovUrf
l0K9WonGszlw+rrPG/Tzxf/83Dquvxz9rP1w0s+CDbpi6OelZZN+/nE38xP6
OVEqhPh5To2iEfp538AG4ueWCKsi9HPGewfiZ7/ysAb0816tN8TP1zeJsdHP
r1wExM9WX5NeoZ8dwj8QPzdrTjNEPw+Y/kP87Pxyw1X0s0deC/GzkUo78bPK
En3i58eF3cTPPdmzrqCfvWJqG9DP1qFZxM9+wW+Jn/9MfUT8bJDqlot+rmtd
3Yl+HkvIotDPvDeFxM8NZodG0c/19enEz9IvCv9FP+tv7yN+rmuKMUE/h2cl
SaCfTawXqqGfNfxCxdDP9Q9CGtHPDvkrC9HPL3TFE9HPleHt59DPX9acXYV+
Djrn8Qz9nAj3JdDPRq6XdNHP7ZJlGejnhC2XOOjnyuDVa9HPskMDcujnRiNF
FfSzyMIFZujnwi+jxM+tHq6H0c/yK/LE0M/hzpZ96GczR0th9HPvw4v70c/r
mwaIn2U3G6WinzVt/a3Rz3EWs7joZx35n8TPBk+DzdHPL4wa29DP0fJKm9HP
/GrXbvRzgkRcJPrZd8l8FfRz7tGVOuhnic3Xe9DPY3fvOKKfW7a726CfheKK
y9HParnX3dHPrWGug+jnTcONxM9tKycS0c9dL9uJn6/0uqqin7O2FRE/U+Kj
TPTz8eZjLujnIsWziehnN+pQLPpZf1vHNfRzR5mOJPq58n5wIvp574OJST/v
E7+NfhZ+Vkr8LLX6qwv6Oaj7GfGzt85fS9HPFuOHNqOfjd47maKfNVzlvdHP
9cc326CfNeR6iJ+rXLL80c8qpjYK6GeVdJW76OfUek/iZ5OZ0gfRz6FjLsTP
5/RDOtHPMX0zdqGfN/qHDKOfDXgrpqCfl7Y/SUQ//27qIX6W1e+qRD9v09cb
Rz9LQ0IS+lnzga4y+nnjbd856Oeg8AfEz62a0XHo5+A7AuJnbREZDvo5O9eD
+HnpMndL9HNK1jHi5+lxhbvRz4tVNYifYy23P0c/Gz2S+IB+TugTtUU/lx0V
XY5+9j8lsgj9fEdrahb6ue6kUgz6eR9kEj977JZchX5WPxBJ/Gx2PuwX+tk7
N4z4WVXr6Cj6udlclvjZ9/GpCvTzsfeLiJ/9m7sc0M+HFioSP3ecu3oJ/ez0
0pb42WqfkhL6eWwFk/h5/aKGXvRznCKb+LlkVpQv+rnj1jjx80xxrdfo50yf
ST9Tescs0M9sxUk/v6/WiEA//+DwiJ9lzyeXoZ83LzQmfl7gn78f/Zxv3U78
LCSd+Af9PNapTPzc3KXXj34++TiV+JmpkReLfvYPyyZ+Ngwod0Q/t3t9In5W
tdl7D/3cNqOA+HnBrJpE9LNh9Cfi5wuPJc+gn+dfnfRzpp+MPfrZ7D8/26wJ
HEM/H9DPIH5+VN/siH72nZj0c9C0dqFB2s8XzqkTP9tUvFNDP7966kL83J9R
oIt+PkSVED8r9/rJoJ95S6YTP2fuLd2DfvZ+5Ub8bDZ39CX6WbO8jvjZoX7t
Q/Rz6Wlr4ucQlWuL0c9xeSeJn+U+XvNFP7N/TfpZLN4tBf08FjXp5/6zTVno
57j0MOLnfEtDOfSzwN2R+FldSuNv9HOGFIP4ub3QxwP9fOyGD/GzSGbAOPo5
bstc4uecc5f+Rj//mSpE/KyvYP0U/Xw8qI74makW14V+fnF3H/HzH6utd9DP
EiX7iJ8ttZ2j0c8XWhuIn4sKr+xGP5ts+0T8LOslW4J+1p7vSPzc4R3wFf38
bncG8fNn1ZD56OeFHqnEz5Wd7SvRzwdHQ4ifvYvCTNHPjyNPED/Hjl02RT8b
fyggfpYoqLVFP9f8siB+HvV8vx/9vL4klvg5M+qCHfo5csNy4ufWLcM16Ge5
nTuJn/3/Yg2gnzuWf0tBPw9L7v+Cfj7JTCZ+VhAeKUc/i8SW7UQ/yyrvikQ/
H1GzIn52GLX5gX6eHwHEzylxfaboZ7Pszzro56hTW3jo55O62sTP80SKFdDP
izpPi6Kfv2SVpaOfrd/F9aCf3WpjTqOfX3w+QPz8On7TefRz25mSaPTzIyd9
RfRzugCInwM4UmfRz6cPxy1EP9ts2FGAfp5zc6gR/VwSttwE/by5WnrSz3+C
X6Of/VtMiJ/XrzrYgH6+bTWb+Pl7wPJs9LPP8EQ0+rlwm5kq+jnq8hUF9PPS
QyEB6OdigxP16Gef62EP0M8tSc+10c/eLzUd0M8iD+M2op8zO98qoZ+ndO14
jX7u8HRZhX72fx0oh35WTUpRRT873lnWiH4+PvE1GP1MgTTxs4Ph84vo5/Ab
gZro59aVYuHo56p1v7ajn09nJnuhn7n/OtxAPx+rHuSjn8PPphxGPwvpurmg
n+fkVxmjn3uvqY2gn7kBs4mfX617oY9+fjwW0Ix+Dt/dFIl+Tqt6nYZ+Hq37
Kwj9fGvLpRr0c7hEjxb6OVfR6wv6Of9R0Vz0s/MLixvo56EK8Qvo53f92/+g
n5c7lRM/G1BziZ/nTIwTPy/cMfwP+nlYVPUe+jkzYRrxs4HIOmH0s77GaUX0
843ox8TPkg4FTPTzd1WRQPTzK/uNPujnGTbtxM/nnKYQP7doK2xFP38eavyA
fh4yV/0L/Zzhd3IG+rnX3Yb4uUU2pwb9XM9qIn7eKkQZoJ93uboRP9cpvxtB
P8cVsImfDe8GHkY/v+/xJH4etk1sQj9vrLAkfrbnJ+9EP/9p9yZ+/tbkZIR+
rh+b9PNKny3Ezw2pk36u7vWrQT/z2yf9fPa//5/z/vPz/wEHB1tU
                  "]]}}}, {}}, {
              Thickness[Large], 
              GrayLevel[0], 
              CircleBox[{0, 0}, {1.5, 1}]}, {
              Thickness[Large], 
              RGBColor[0.6, 0.4, 0.2], 
              CircleBox[{0, 0}, {1.3747727085678447`, 0.800000000139355}]}}, {
            PlotRange -> {{-1.5, 1.5}, {-1, 1}}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, 
             AxesOrigin -> {0.29740186364137333`, 0.08831619063606912}, 
             PlotRange -> {{0.2981423965419268, 0.34553650217735093`}, {
              0.0896662133272415, 0.11666666715068937`}}, DisplayFunction -> 
             Identity, Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.29740186364137333`, 0.08831619063606912}, 
             DisplayFunction :> Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                GrayLevel[0], 
                
                PointBox[{{-1.118033988749895, 0}, {
                  1.118033988749895, 0}}]}, {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.32050307638054243`, 0.10666666652637763`}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.2981423966963861, 0.11666666644659235`}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.3254475171695014, 0.10445544547110533`}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=6, mid=(0.5,0.3)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0.2981423965419268, 0.34553650217735093`}, {
              0.0896662133272415, 0.11666666715068937`}}, PlotRangeClipping -> 
             True, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
         TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 0, 1]], 
                LineBox[CompressedData["
1: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
fEHbbrr0lQfK3abq5mS+RoryLXZKULC7OTWaR/qzf+3AgyySZ3Msuzjo536n
xmvo5zeDnqLo59XBb5vQz/xqm0LQz9GfZnxEP59eLWGGfua3Xt6Nfo7/m8tF
P7cIOHign9cNBu1CP7uo5hiin9tH48TQz9Fmy7LRz92Tg2/Qz027TIPQz2aO
8Uno54TiTmH08+wfVhnoZ97dovvo56HAn6yfw3z+5qKft1afLkY/D/uLt6Kf
9/KGWD/L1YjJop+nXg2yfuZzKLqAft68VD8Q/dz1PDUS/Tzr+f409HO0p5Uv
+pmv6Lo++vlTj4Aj+rm78JI5+vnAG4s16OfRzC096OdLZfkb0M/rbZMfoZ/j
5l63RD87cW210c+yhS/k0c9f6w1a0M+GY1dV0c9as7JZPwumKfqgn3vKM1g/
dzg+r0M/l6u9Z/2sl5sRjX62O6regX5+VFdUin7eaVPI+jmscpUw+nn9syzW
zx2KS1+jnw87+S9FP9ue13VCP895uMAP/dzQefsi+vnzvhDWz4smnP3Qz0Gh
G7TRz4Kii16gnyuWmMign62/RQ+jn00mY1g/+2+SFEE/N7StnId+ZuyX2qGf
b1nJLUY/2829Px/9bPzanvXz+WyREPSzXsiCjejnbKlnTehn1eQM1s/tZ8ce
oZ81ysWPoJ9du0qvo58D73ewfm5QPpGDfuavmyGKfvatrVuNfi7gFbN+bjO3
4KGfS6R3sX52Kv1LDv2c6WDF+rl94T3+x+S8ijv/lfWz+OSbTPRzSHkl6+dU
/aZP6Of9zwpYPy+6/EkE/RzT/Zb18/BGSwv0s4K0Auvn0D0yEuhn47UXWD9r
j9tUoJ/VFKZYP3u4M1noZwFRL9bP3bBXH/3sY6zH+rnGTHoV+lmx4c889PPu
L+GO6OdQ41Osn72f7PNCP9tuCmT9LN0h+Rv93OVxifWzYrPmMPq5Le4K6+fp
2UrG6OfQX29YP0faK1Sjn8dONbF+Tn/6RxP9LHRxhPVzgph7Jvp5d7YL6+fc
S/Ee6OdOL0XWzz/nXotBPzs0JLJ+zpu94Sz6ucbz8wf0s9zUtlD0c2jCGtbP
mW//eKGfxes1WT+neY2Lop85P5azfm4/ZaqBfv6gz8/6WW6xcQz6+cOGLgP0
87yCwK/o54ALvRz0c+F+9Vb0c2Mrxfq5cc4hM/RzmtVN1s+G3MJ69DNf9j7W
z0cTMp6in4MTZrJ+Xm1zQhX9HBpbxvp59031pejn/rmrWD+XPL5/CP3M6es+
jX7++tDiMPrZ9U8g6+f4n0c46Oft7RtYP+el/2lAP+t0ibN+rknhaKCfv3ev
ZP1sYyjih37Wze71RT9re04Vop91HIuE0c+N50o56OdOAzfWzz22DULo56rK
X1Ho53NUngH6maMSxvrZYI+ZDvp5xHQL6+c6d51v6Oda9ZWsn49J6euhnwVn
v32Cfu4s+HYb/TzR2fYW/ZwWVPsZ/ewZcvcH+rkjvVYI/Zx740Mr+nmbkpIp
+llS5HYk+jmrvOow+llJdQbrZ+U17YfRzxM/h9zQz1yvVFP0c/EhPtbPIj7C
vejnrKYqS/SzTrwpjX52HlzA+lmOUy2Nfo4Y7RtHP99YO3UX/ay1fj7rZzUn
T3v08667KVbo559erwPQzzP5Hjajn8elzCfRz0HLXpmjn41EH71FP38d7ghC
PzfP7OhBP4cUHdiEftau7+RfTfwsXCvG+nm5a9gk+tnulTrr552NRQfQz5ll
/Kyfw7TyvNDPF5t3e6Gfxeu2LkQ/L7vfnIt+zp7hNYV+dniXMIl+Th8dTkE/
q1gENqGfh6a3ZaGfFTV1XqKfdR3GxdDP1veynqGfC48mX0c/3zeN/YR+rkr/
Mwf9HHXkmzL6OfqIjBr6Wf7FxFL084n3JYHoZ18H+jH6uZuafwj93KDYX4Z+
1hWT2IZ+nvMgwhX9XGn5fBj93J3vmo1+1u5p7EI/y57T9EQ/Fz2d34t+DhoT
6kY/cyLSdqGfAzz6z6GfBYOKXqGfowRu30E/14nKrEA/L23yfoV+ltujshH9
nP8kygr9LMAxnEA/e1LGv9HPbWuqPqOf+QdcZNHPShED5uhntagkLvp5IPyX
Fvq546tzIvq5YL1nGfo5LG8sGP18bqqnCP2sH839hX4WWGhvg36uzxpNRD9f
nzfE+vnPk6EH6OeCT/EH0c/W5a1b0c8KCsvWoJ/jHa/nop+NagZYP1+a385F
PydW32H9nBBebId+NmoU1UU/v/kGw+hnEYl+1s9XdOu3oZ+9Mwzmo58zU250
oZ9tDE6zfo4+XqWLfva5mMn6ecuomxP6+fM5kxr0c3WtJB/6Wem3C+tnD8Gm
YvRzXX0Y62ef6Tmsn9v1FPzQzx2Hix6in+Pc8lg/Bz698xz9PC9Om/VzwF9O
7ujnioUprJ/lXpSXoZ8rR8tYP0sWc1ehnzuX3WL9XLJvbAr9PBHjzfo5Jv0K
H/q5Ssqd9fM9UH2Ffva+H8P6+bmpLOvnJdntrJ8nJ5+Ho5+/d3uwfu7ZH7cV
/ewSu5j1s0NC5VP0c+3N95vQz/Y5Qqyf+1xCWT+f/xH4EP28vVWX9fMdvn1n
0M/+4WtYP5fVG/DQz82fF7J+jtm36CX6ubDn6Sj6GezqN6GfLSIVWT9/9p4/
C/0cGXSRQT+nvrx7C/3caezE+jlqbV4K+tl6jzjr557gVYLoZ+0eb9bPN+KF
3NDPTguWsn7eUMlcQT8nzPUuRj8H7OJj/VzgllaCfvY/sKoR/dxpeygG/XzP
/IoD+nlFeAoP/fygIug2+tnQ9NUt9POxaN/l6OfJI7ourJ9zTdTQz8JuWwD9
HHQ2JQr9nMccaUc/n///35/j/v/35/8D+ToGNA==
                 "]]}, {
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0]], 
                LineBox[CompressedData["
1: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
L7/59N0//x/RzEtv
                 "]]}, {
                Hue[0.1421359549995791, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]], 
                LineBox[CompressedData["
1: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
KVgf9iDJiM4jT22D145NdB+3OzNer+FCYad187A6BTdLd0SeleGCDs/WUpQ+
L6Hdh3MH2jjgE7ZwSwvtzzADpk7fbQ4sVJnw/Ub7tC5oevVlJw7wZq6ovUrf
l0K9WonGszlw+rrPG/Tzxf/83Dquvxz9rP1w0s+CDbpi6OelZZN+/nE38xP6
OVEqhPh5To2iEfp538AG4ueWCKsi9HPGewfiZ7/ysAb0816tN8TP1zeJsdHP
r1wExM9WX5NeoZ8dwj8QPzdrTjNEPw+Y/kP87Pxyw1X0s0deC/GzkUo78bPK
En3i58eF3cTPPdmzrqCfvWJqG9DP1qFZxM9+wW+Jn/9MfUT8bJDqlot+rmtd
3Yl+HkvIotDPvDeFxM8NZodG0c/19enEz9IvCv9FP+tv7yN+rmuKMUE/h2cl
SaCfTawXqqGfNfxCxdDP9Q9CGtHPDvkrC9HPL3TFE9HPleHt59DPX9acXYV+
Djrn8Qz9nAj3JdDPRq6XdNHP7ZJlGejnhC2XOOjnyuDVa9HPskMDcujnRiNF
FfSzyMIFZujnwi+jxM+tHq6H0c/yK/LE0M/hzpZ96GczR0th9HPvw4v70c/r
mwaIn2U3G6WinzVt/a3Rz3EWs7joZx35n8TPBk+DzdHPL4wa29DP0fJKm9HP
/GrXbvRzgkRcJPrZd8l8FfRz7tGVOuhnic3Xe9DPY3fvOKKfW7a726CfheKK
y9HParnX3dHPrWGug+jnTcONxM9tKycS0c9dL9uJn6/0uqqin7O2FRE/U+Kj
TPTz8eZjLujnIsWziehnN+pQLPpZf1vHNfRzR5mOJPq58n5wIvp574OJST/v
E7+NfhZ+Vkr8LLX6qwv6Oaj7GfGzt85fS9HPFuOHNqOfjd47maKfNVzlvdHP
9cc326CfNeR6iJ+rXLL80c8qpjYK6GeVdJW76OfUek/iZ5OZ0gfRz6FjLsTP
5/RDOtHPMX0zdqGfN/qHDKOfDXgrpqCfl7Y/SUQ//27qIX6W1e+qRD9v09cb
Rz9LQ0IS+lnzga4y+nnjbd856Oeg8AfEz62a0XHo5+A7AuJnbREZDvo5O9eD
+HnpMndL9HNK1jHi5+lxhbvRz4tVNYifYy23P0c/Gz2S+IB+TugTtUU/lx0V
XY5+9j8lsgj9fEdrahb6ue6kUgz6eR9kEj977JZchX5WPxBJ/Gx2PuwX+tk7
N4z4WVXr6Cj6udlclvjZ9/GpCvTzsfeLiJ/9m7sc0M+HFioSP3ecu3oJ/ez0
0pb42WqfkhL6eWwFk/h5/aKGXvRznCKb+LlkVpQv+rnj1jjx80xxrdfo50yf
ST9Tescs0M9sxUk/v6/WiEA//+DwiJ9lzyeXoZ83LzQmfl7gn78f/Zxv3U78
LCSd+Af9PNapTPzc3KXXj34++TiV+JmpkReLfvYPyyZ+Ngwod0Q/t3t9In5W
tdl7D/3cNqOA+HnBrJpE9LNh9Cfi5wuPJc+gn+dfnfRzpp+MPfrZ7D8/26wJ
HEM/H9DPIH5+VN/siH72nZj0c9C0dqFB2s8XzqkTP9tUvFNDP7966kL83J9R
oIt+PkSVED8r9/rJoJ95S6YTP2fuLd2DfvZ+5Ub8bDZ39CX6WbO8jvjZoX7t
Q/Rz6Wlr4ucQlWuL0c9xeSeJn+U+XvNFP7N/TfpZLN4tBf08FjXp5/6zTVno
57j0MOLnfEtDOfSzwN2R+FldSuNv9HOGFIP4ub3QxwP9fOyGD/GzSGbAOPo5
bstc4uecc5f+Rj//mSpE/KyvYP0U/Xw8qI74makW14V+fnF3H/HzH6utd9DP
EiX7iJ8ttZ2j0c8XWhuIn4sKr+xGP5ts+0T8LOslW4J+1p7vSPzc4R3wFf38
bncG8fNn1ZD56OeFHqnEz5Wd7SvRzwdHQ4ifvYvCTNHPjyNPED/Hjl02RT8b
fyggfpYoqLVFP9f8siB+HvV8vx/9vL4klvg5M+qCHfo5csNy4ufWLcM16Ge5
nTuJn/3/Yg2gnzuWf0tBPw9L7v+Cfj7JTCZ+VhAeKUc/i8SW7UQ/yyrvikQ/
H1GzIn52GLX5gX6eHwHEzylxfaboZ7Pszzro56hTW3jo55O62sTP80SKFdDP
izpPi6Kfv2SVpaOfrd/F9aCf3WpjTqOfX3w+QPz8On7TefRz25mSaPTzIyd9
RfRzugCInwM4UmfRz6cPxy1EP9ts2FGAfp5zc6gR/VwSttwE/by5WnrSz3+C
X6Of/VtMiJ/XrzrYgH6+bTWb+Pl7wPJs9LPP8EQ0+rlwm5kq+jnq8hUF9PPS
QyEB6OdigxP16Gef62EP0M8tSc+10c/eLzUd0M8iD+M2op8zO98qoZ+ndO14
jX7u8HRZhX72fx0oh35WTUpRRT873lnWiH4+PvE1GP1MgTTxs4Ph84vo5/Ab
gZro59aVYuHo56p1v7ajn09nJnuhn7n/OtxAPx+rHuSjn8PPphxGPwvpurmg
n+fkVxmjn3uvqY2gn7kBs4mfX617oY9+fjwW0Ix+Dt/dFIl+Tqt6nYZ+Hq37
Kwj9fGvLpRr0c7hEjxb6OVfR6wv6Of9R0Vz0s/MLixvo56EK8Qvo53f92/+g
n5c7lRM/G1BziZ/nTIwTPy/cMfwP+nlYVPUe+jkzYRrxs4HIOmH0s77GaUX0
843ox8TPkg4FTPTzd1WRQPTzK/uNPujnGTbtxM/nnKYQP7doK2xFP38eavyA
fh4yV/0L/Zzhd3IG+rnX3Yb4uUU2pwb9XM9qIn7eKkQZoJ93uboRP9cpvxtB
P8cVsImfDe8GHkY/v+/xJH4etk1sQj9vrLAkfrbnJ+9EP/9p9yZ+/tbkZIR+
rh+b9PNKny3Ezw2pk36u7vWrQT/z2yf9fPa//5/z/vPz/wEHB1tU
                 "]]}}}, {}}, {
            DisplayFunction -> Identity, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, 
             AxesOrigin -> {0.29740186364137333`, 0.08831619063606912}, 
             PlotRange -> {{0.2981423965419268, 0.34553650217735093`}, {
              0.0896662133272415, 0.11666666715068937`}}, DisplayFunction -> 
             Identity, Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.29740186364137333`, 0.08831619063606912}, 
             DisplayFunction :> Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                GrayLevel[0], 
                
                PointBox[{{-1.118033988749895, 0}, {
                  1.118033988749895, 0}}]}, {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.32050307638054243`, 0.10666666652637763`}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.2981423966963861, 0.11666666644659235`}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.3254475171695014, 0.10445544547110533`}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=6, mid=(0.5,0.3)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0.2981423965419268, 0.34553650217735093`}, {
              0.0896662133272415, 0.11666666715068937`}}, PlotRangeClipping -> 
             True, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.006944444444444445], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], 
                 LineBox[CompressedData["
1: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
                  "]]}, {
                 Hue[0.9060679774997897, 0.6, 0.6], 
                 Directive[
                  PointSize[0.006944444444444445], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 
                   NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                 LineBox[CompressedData["
1:eJxd2H1M1VUcx/EraQ2JQgUFkQJhBlxZ4tDwKUCYDTYWA6nwofQyLXMsplDx
4DQ0JxIOCjQINqAkr9zL46UiZCJgqUBZYuqUIqIMGdP5GALV2n1/2875i732
Oef3O5zfOb/7/R0f01vxWxwMBsO2KQbDf393PJMQ/GvkhbBzlvaB4ty2sERc
iNNwM87GNrwXp+BMzeXYjD/Hn+ImXKW5FNfgrfgkzsD1+F1sxkbcgpNwh3a9
TrwGn8WxuB+X4DPYA/fgCHxZ+/8v4XDch1fgYW3813GU1t4dD+An8DV8o8bu
CfwG+RX8M/k9HEA+ggdq1Ov/gW/iq3gcO9N/DE+QT2IH8kf87Z6LHbGPRR3v
KP2dyCPJnf3V8Yov034m7sdP4mE8FVfVqPcv0drv167Xg+f5q/PhhWuxGzZj
V7wL++EDWr4A++AVOAhnYSPOw/NxrNY+HQfjULwMv6TlncftXomTycPxShyJ
o/AK7KS1/5HrRcn849XYg/axeIQ8EY/iBDym5YfwWpyNN+A9eCNOxSZ5PngT
3oy340ycims0r8bpeCPOwEF4N96K9+JlOAcPmu3Oxa7k+dgTf4in4xKZX/qX
a+OpxG+Tm7HjcdUXyRtwEf4SV+MTuBt/i3/CnfI8cS8+hi/jXvwLfg//jmPw
TeyP72j3u41PYIcA5hdPkrdiF/Ig7IEP4kA8CwdhV2zE0XgRXo9D8X4cjf3w
WhyI1+EUvAUvxttxPs7EiTgD5+B87f//BPvgIlyG63AAPoln4zbt+j14Dz6P
u/ANnIdvafNxHfuy/gyBdk/K88NG8ml4J16IXbARJ+Plger+jcaHcRj+ASfh
Xnlf4Vd5P6UFqu8rEy7AB7AJF+MKfATfwXlY6okiGa/UL7gcV+BR/DWeZrXb
JvfHBXgQm7FDLc8T+9Wq/dNwKz6FB/BpXIrfrLP7As7Fl3AjrsT+9exXnI4/
wx/Uq/e/q3lpgzof6xrU+TQ3qP9/K27GwY12f4zzGtX+p3Es7sIlOKnJ7vV4
c5O6vtbgOFlPOASP4XAZj81uT/wU9sJVeLrMD77N/tmBh/EgbscZuAFnYxtu
xJW4HpfiMVyFtzWr7sNp2BOny/ia1fdXdbP6/gvHcXgffk67nx/ut6m54xfM
D55C+6n4jk31TC1/iIekfqP9hPyeko9id+43gFPIe/BC3Cq/v/g8tuIWbMI1
+D73P44ncZnUm/gIvoc/kt9jXCj1I9eX+qOaXOqN93EaPoxTcB+WekfW4+v4
T5yszZ/UW104Hp/BCdr1pP6LZbwvSP1BLvVjIZb6sgkvlnofh+CDOBQfxVLv
Po8DpB7G3vgW+/Vp3EL+fz2PXaSewXPkewXL90kxfkzWi6xPbNTyJC0PwQ/4
PrI2qZ5Lfhc/JJfvRzdy+X7rJh/SLO2v4kGcj+V7cAbXu4g7yK9o/eX7Nxf3
4nYs38+n8Pc4C3fhEdyGj2luwR3aeG1y3qDZhK04Gct5w1JcoY1XzhMisJxH
uGA5fzDgAlyN5fzDW7OT1j4U5+PZmh3xbrwK52rX34f/blTdh3PwWZwlzxO/
I+PHG7Xrb8NHyV/D17T2vXgzbsRyvlSGN8l5DI7DqfgVvEF+r+U8Bb8s5yn4
RZk/vETrv1rOb/AqfJ/6IULOw3CwnG/gEFl/DWp/sRc+j2fib3AolnrmWRyP
A+T5YnccjX1wDPaV8yA8X/YP9dQcfAHPwN9hBy33xjnYFWfXq+Mx4bEFdmfi
CbwEj+NQ/ACHaP3H69T2V/AktuJZcl6G/yHfjkc0/4UT8BT6+2EP/GidOh+/
Uf86yXxhg5x/Yjcs9bSMf12t+ryW16rrYxGehx/XPE4974x7rOr6+8qqrudz
VnX97MLR+BCOwjut6n6Kt6r7zxvHYF8cKeOzqPvvtkXdr3c1d1vU98eQRd3/
efhfUJetIw==
                  "]]}, {
                 Hue[0.1421359549995791, 0.6, 0.6], 
                 Directive[
                  PointSize[0.006944444444444445], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], 
                 LineBox[CompressedData["
1:eJwtmHk4V9v/xbmoJC4ahRtKoVIZMkRvmUqlQqWSCilEUpIxGRqkQfOoW8RN
KKJu53MyZKwMiXPMlRAJJbmmkt/q+f7+8pznc84+++y9XmutTdnZ29b1DyEh
IXdhIaHff6WvLFdRI57u1Ay2xVwUUKRew44pS3ly1ej0ePtSQKsKjdS6DHla
KfHm2IsRAc2ROns1R5cnR2X91BFNlppMxtzO1ORpxVGFbqOtLImecy/5ocpT
3sjh2TsjWfon9nl6hTxPtwozZh5KZCnr2awJ/tI8xd3daZP4nKVe7XOnjUV5
6pNvf2/Hs8TdexrjM8DRrTvSc6d+YKm9NeDRrs8clU77c3N2K0vm6VHe3m85
ChD7or2miaVUk1P1DRUcNZ3aYSfEsXTiv+yQgQKOnpxZ84xyWfJaFuA/VsDR
LI1qtbsJLLm3eX5ckcbRI99g3S7Mr9Xk/fmv/3Dkqf3pSf82lkz/XiWreoej
7oDUw6wOS31v5yqPu8nR9TUxvNlYlnxsdNxTrnLEq534ElcjoINmlhemX+Ho
h4x6zJdEAU20qEpYh2vJ4f0a+n4Canp7IMH0GkeqXsNHj1kKaKfBJK8GjHdk
6eEFFdPwu/raRyN43+ZXDU/7uxmaoWajcfQeR4MDe9/lFTE0qbcufznmWyLx
8PKHeIYSBq90TmE4slxyVbz5KEM/L0m9yc3jaN/fO3fpeDEUJ+UWL1PG0cWX
jifUtzB0/sSnbK6Go3cROvbfVzN0zlm+kG/m6OWAeWmCBUN2Wno3PnRzpCvh
HKlvzpCQ0YlVxYMclcVKF55YwZDOwc/Fm0R4kjbe1Ohgy9DtqgOn9kjyZHl/
Tb6TE0MRik4qdVN4yv42rVvvIEMdtUqRoTN4+p6tqOl5mqF/A4Zcls3hqWSN
R1JoEkPxXmb2Y6AX07jMzI4XmL/iiU8CbZ6S7asTpncyJGwmfWGdPk9ip0cO
H/5TQMmqJ+9nLeGpzHOiT6iugD6J+i8aMebp5b4v809sFdCpfok7UtDvHvGX
YmMiBRSwfuTuf9CvwXSlMo9kAS28n1PG4P7w+WeiNCsFlOtgv2QXxhOy9/lY
MSCgZUk1puJ4X5f6/D318izVRjtLZ2I+mc+So94as5Qrs3Z5IOb79g/XnYcc
WZpQ2X7HR40n+baHPusCWUroEj6frsxTfFjAZ4WLLDE3D7fYTufpWgMjFXsf
+jK85eQty9MgzTCNzWJpbn9LqPJ46H2Vn2h/KUsVGapjI4V5ypWyeRldyxLv
YlacjvXfwWx79FvfDXdarQu/chQZ/WqBIfR/3DM8rraNowbf6qj1uDb92jVW
7B3uv5u98QHuDwjyyHfmORISvHjvVMeS+t/BHeOgB7+Juv7ny1my8125ULKQ
I69nN17sAR/Rl+OLI7LAj6isjPJDlqzWHl0c+oSj6D6rnV3XWaq0EVkqDf3Z
3X/0VhK8uIXvfW5xn6P0T4e4Vx4s6cWdyZiXwFHirmmSXmtZui+XM67iNviM
Uu1cpsVS5nY2VT+Wo7smN+9em8iSUnhruNd1jmLSVP2LvgsoT7jY4QB4klP2
bpevwv4eTPzDGvxcnZnc350uID31KvpxGbwqa+2PiRHQetnTrcH4XWXZX0s2
egso6S+9unI8v+dNwo2YNQIKS4/V7ML4yTpN8Wc0BTT30EStcrz/9Lroszeh
p0xNtUhP8CY5wU5XpJehoMqsRVmYv/9i8SNjqxmaH7HsdSa+756lRm8Hy1DU
y/JLlvh+4/fD2m3gL3i6WPhOrM/0fwNTtM4w1CW22Xf0Gfwj0kFVKIihIekU
27HwH8EnxcAAD4Y8Pg5o7CnhSKnawzZ/K0Mh+g0b5ao4sil/3P7DhiG5iNq/
R+uxPzZzqw1XMmSwZdpOiRb4gUz7YAz4bH8bzqp34vv5XTbjwGeXuVjs8u8c
NW5UH47H72WjdSK2PzhSyHKZtQPPX1mSPGkxeP2QlKmkBV79H7iZfoDeXpY8
3T/OkSGro/f3L4Me+bPOX19hfkuEgpUt5ODvn/s+bsH8zbPdIhvAr3NcqN0F
fF9q5z8pffBzj8MCJau7DG3ea3IvbC5PUifkPVY9Y0jhlVCc70KedBxFKl2w
fkzRLKHnOjxN+VbbuBHru70lLMwBfD3+1bmxFevfYi+72RD8BQX25hdjf6aV
Zi7fAD7FfL7VPMX+mUj8l5EAflsPbB3ag/09UvMwZzb47hdaWHoe+//5lpMD
j9/LE/IKG6GPEfPujWl43vTLyIsB8C0alOD9FOOv+Rz3Kgb6Stuyw6EH74/T
0AxZD/0ZaG6p2Ir86pzWKNKziKXC20lRoot4+iaqnyID/W6eIbaiB983aH8s
1R36TpW5Uq4xm6fmeUbd9yNY6vh1syEX6xMQcrE4GnxIvDil8HwaTyeD5jUU
PWBJaHaQopEMT39kuVbLgy+JZ6Ha5uI8rY9StFgH/mqu8E7dQjzVvZ/kuBB8
imoGGViD91b9+cVnwa/QBPmMQPCe/dzZZSX47u2UEjkD3jeUaIpZ4NqrZfPu
28i/xMVZqntx/7ktkV9LOI42tf4VlQ3/WPXPhqVzSznydXSpMihDflYHWdTl
g9czluO/wn+uXVv5o4eFX4i2jw7CnyRuVo8/nQkeBorjDsO/xPsrDxencjQu
dMmCDPjbKCPYzSAfo7v0llbD//b9GAwJjIMe886nai9l6fr57lylWxw1T73n
OFOBJTnRxom54E9U/3ruuEEBuSWJ1LuDT+upV/RssT/Kd+wuzAO/BrnfDf3h
z2+VnIIm4vrlhIMrf0YIaFAlcN5s3D9FuTR+N/x9+Pj7FW4Yr9tvTrYV/L+r
eNu8OvBs/DD35GLoyVP1/r0DmE+U8dGggs8MLUjqKp+P/NRy3mp78ne+RGi8
HHzAUcewYpYC8ue4vGhRLvjdGjWuQAL5dM1o95BnDkdWbS6yTb4MNbbdyHz/
giOJyiGVacg3IeW2K/2V8AMJha2q4Gnq86T3J7H+18JE1N2Rj13Zl8p9PoHv
3duUtMDn6apa3RDwqdP32ooBn5dic+SDf3Ek7Pn+0gxrhkqkHI8sgR4yD5rF
7kE+D1oL0/GJPK02PJJ1HPndeWvV+LmKPK3j1ieZHGNo3veLod/Bnz5tjjAH
fyuH1lo/nM/TpkLbqyrFDDXbVOxaCN6KGieUrfoC/zqbvdTagKcjL/iKiXIC
upjkKNRshPw8IKqSgf4RfDU7+w34ETOS77ZCP2FSZ8SMBV9Blxe8bEF/mfpM
OvoQeDryycw6GP1mvE/s9Rnof3VGdvtF0X9UFhf/NU73d14rpLqhHw2MSK81
Rz4+LT925wr6U1Ze7YZezPc/RmVFFPIiTjtHYYkCTxUHtTZYon95uR4osAEf
7h1u977msDSpvKFgvxje/+X20cIqln4sYx83gwcHr3YbTej7+N6w/C7433yj
htPPoP/Oi69rmpB3HxwXFmujH6praYbJYH869obSKfRH082WSW+Qb4Z3GKn/
0C/f/nSftx/9T/ZnwgUO/fPAqKQbwc+rw/wmFWN+KjvLaw5D37FfjCJvoL82
xXrXeSK/hr/0+K1ZwFJG/seHhjew38JpLiK/0EdOJDZMgD7Du495/EQ/9j3p
0zCEfLpQ/b/+nKThuVP8dx69VlOfuV1AHeGq8jp4fsgqn508V0DNi2a/ccH4
SZ9PxucOMVQxJsDcF+8/2Tp/zO5ShqKPH9ukg/nlrUu5PR/7PV9zsmA35n9r
TaiHbDhDuTWxDS/wfZt3pj/6uIsh49pUbQl8v3imS4+5HUNKXb1332J9Ps4m
jyvLMf6F2v7f61edff75BOhTRcbSsg3rm/Kx3j4W+i0w7LQPwPpnnNjrM2ED
Q8vT3J5uwf40H5rR3ukG/95lcN0C+7eyz2funQj0u8trXEewv5dKxbfvwfx0
+yJ61mD/lVZPmuvxCnl5aIGTDPQhdPvs1IQ+hrwUmtJmQz9MVcvkiSoCKv7z
aWMQ9HVKH7XXRkAOMy8XjIP+tL9ufW4cjvVJds97DX3um9+oVvNIQCUy50Te
Qr+ebzZ0ujcLaEKp5EML6Nv5rxHxP6Thzw1PWmZD/0x15KZcQ5YcAv2v3QUf
DvVhau+c0LdytPZ9wnzffjOYnIb9PvFm9KAS+GroWt/3Txz00Xy/OwT8XQtL
+m8Dy9JC3VEFHfBZvrpDyB1+fdffRf0Q+PV5Y+3yoAF+WTQ6Ngh8W+o8+iDd
wtIsndCj+8G/yec68yvQp3SRk9sZ+EOTlKqfM/RrsKv84U/sT31SnmlyNc43
f3/+2g5/6WDS63OKoe/qnhI/+E+8esYM4UyWhE+eOV0CfwoJLqt+fwP9Sz+8
VuQhR73OK8rqQjH/Q8P++vC3LGU1oUM7WJIXaVwZAv9LNllWZQk/jsyp0PsA
f+zdIOHyVo6l3S5VVnvhn4qO+4crkIetQRWv1aHPopWymf+Wgne5znOT4L/r
rWNWqyYISNFqQHYurg96zNdIChFQ9PrSRlfcby6x5GbpRgEtWqDBMxjvXWKZ
ncwiARXmSV2bBv/f7/hxcs8EAV3KPNy4D/NpyF2eWAM/TtveU/oA+l6Uu69j
bglDirse+z5DvhSVrFti8YCh3TO/KIYjfwzbhQe9LzJkb/08ow35NGVokXZX
CEMjarlKFcivC8IZ17vRVyZrn0qaiXy7fMr7yA0Hhu4ZjJgWIf/8XrSNlVmH
fmKq2XIT67/ykvUBR+g7tfJH6Snk55BiyKlI6H/q5L/5IORrkvs31VBcx+Zr
3l0HHsTTKG0J7m/K+fS5F/l8v/V60621DJ19bXx9FfRQNUbLNRJ+fdUqRdIC
fMyr8rqbAz52phzTKkH+9zavjVQIxHlpb8W9EvQDzVUH9HagP3kMu77TRX+4
sdxTcmUCQ/IyqbN+oF+0Tg4zv5jNUHql9HMp9I/bC3vq++oYmv49ZtAV/Kgk
Ltj21wDOT1MeTBlEfxHRLnySOxn+4//LOxv9xkL2+Nco5KFNy+MdmeDJ+Omy
gdnYn+h+j+U14Eepq83B/JCAMnin4N/9yS/2zK8zV5G37+9YxOP32e3pOZmM
gHpmyr1Yh+f3R82a6VqPvjw6oV8b4/c7uXfaDAtIsnVikB3e/6tRNmUB9JSU
VZHwL3h75P/N9slinCda7671QP8bCmv6544tS7c1Tub5/f4+tQn56Z7Qt61Z
bAf4s0y+GJAM/qJ1pZ5UYH1EnfxzN6E/PdUV+mmI/tmQ8UgsKpWlDWra9vro
pxc2HwmVyUZ/aWk7Xof+eldB4FNWwtJQHyO6EP326mo991vgKTVreq01+u/j
lDlenu9YkvSWCbEAnx1/2s2eDT6T/78/F17S+JkLPq8smBApiX49e8OlOQb4
nSm4UiLSwJH71B3sOTyffLh01wz086Y5i+M4jB/0MODjfvR3W5lx52VxXjvi
NXOvNPq962hBnzPmJ13BXRPH+enktNVFLZh/Sdz2dd7gd9eqkN0Mvs/eWTvB
Bn7+YsX6XVJHWYopGsjMwfmi023EcKIX8vNfuchinD8KEuuHRrB+UXrB7w7i
fFLmcGhYXI+l1X5h+tXgmTtx4MAhrL/E+PhzveBPJzFIIhr7k1tUuakKfCrO
2bf9NPYv07jJNhT8Sk3rCXmF/R3RUI74fX7aFHhq0zns/4q/Yqes+t239vzS
0IY+jrv8svHG81cjKmr/gH6uRUaH78b4t61ETddDX3y8V+9CvN9Ewf5sEPQ3
bsOJpiLkl6N2m19pP0Nx++YEq2D+S8r+DLwG/f6MKWo1xPeJRp5V1Ia+97vr
aIrh+ye+/E+hHXmxtcnG3RfrU1KZdX0U/SvuUVJ6ANYvaJPHmrwAnD9s5ExE
kW/zKvUeeYOvGaeyw4Vxfq0Lmq5lCv767OwNHXG+PSre7ugFPqdtMYgVRt69
M3+gpAh++1x+hdaAd7snIaO+4DuKHYgoAu9Ptn1wOotrbzHvVY/Be61sSlsw
7jfhUzKicP6OuZVZbAb/GPJInaQOve28tXXte/iLScfmY/7Qo6ZNvTPtwfMd
Y+c64nxvMnP7rBWHGXrq+vnwM5z/z21bl/YG/rXDWSwlWA3ne9fGwX/gb0ae
cs2RyEe7FLP8k/C/gcrG9Cxt8PhC89X8TobMAp54yICv1dY7xhlICqhmoXig
J/iTPdmvaQV/VRvtf5UFPsv6zVb2YH+CUjarDoDfTlnhq0/gz0a/wk5Kgu/7
tkbn5OHfVcnKZ4Zwv8TIV/Ur8PcOq8tJ/2K8yR7Hlt+A/0usunV8Bd6XG1i+
9xL0JG6y0TId8/FS67nXY8zSp1u6qT+Qny9bXscCCTpUcGf94jk8FUj/bPJD
/gh5XH7mC379Vzz1DEU+KUbUrH09hacdM36ZJ2Ugv6ar2rhIYv4tWw39fufb
gj/SbMEr438szxc8xS6uyMvH+pt/n1pvinwMembd2tTNkZtldVMM+HT27uut
aYb+FxpvnwU+p6aap9fVcPTm6eCdeuQv1144Rg56KBoon5yMfC4RclV5lceR
unzh6iTkt3NhS6gyg/GPylwcE89SmapRlS30VzCzVXgi+LuQqPbuLPLTL9G1
2diZpX//dtMdi7zyan/sOXkJS1o/C3423+QoLXF9sgX6xf2DJnHLryHP+O3H
L6N/eCxSi7MFP5VekZ2f0E/elL3eJofraB+XYS30l+KRU1Pvgacd/V5bg9Bv
4rU6xgtjvK6cxEdVygKS39byWh58Vwf9srBFP2pf6fmtFfnY9vHRZAn0p3Oy
A7wx5rtPOs1nHHgR/3N0+Ce+p3lpub0Z+pdd8suoL/CfnW8Mqm6AD28ueDlf
wVF+x4P4N+uRn82/3u1B/llacwdDoG+ZXJXQ3/8/tWje1j8e+he2vZTvO8CR
R8u2MZnohwvPyDSYifIUPPbn2hD0x9NLy+qOSPNU7TRmn85unI88p8xqkMf5
/5hPvTf65wrxb/VjkGdHquPPxGB+ybcctHOgb5O1a2IL0V/1Amtvv0B+eQrM
vGSGGTIdM/KsF/1vhWnc1XXov68uTa6Vg34zLxaomaIfD1z+3/+fL////5//
DwV5eWk=
                  "]]}}}, {}}, {
              Thickness[Large], 
              GrayLevel[0], 
              CircleBox[{0, 0}, {1.5, 1}]}, {
              Thickness[Large], 
              RGBColor[0.6, 0.4, 0.2], 
              
              CircleBox[{0, 0}, {1.4061428996297716`, 
               0.8527824190139134}]}}, {
            PlotRange -> {{-1.5, 1.5}, {-1, 1}}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, 
             AxesOrigin -> {0.30053426843126607`, 0.0978600287423805}, 
             PlotRange -> {{0.3010180455863593, 0.3319797835123248}, {
              0.098694343446218, 0.11538063752296812`}}, DisplayFunction -> 
             Identity, Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.30053426843126607`, 0.0978600287423805}, 
             DisplayFunction :> Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                GrayLevel[0], 
                
                PointBox[{{-1.118033988749895, 0}, {
                  1.118033988749895, 0}}]}, {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.31215003058253604`, 0.10957123036186481`}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.3010180455863668, 0.11538063752293506`}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.3319797835123248, 0.10382943762746645`}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=7, mid=(0.5,0.3)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0.3010180455863593, 0.3319797835123248}, {
              0.098694343446218, 0.11538063752296812`}}, PlotRangeClipping -> 
             True, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
         TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.006944444444444445], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 0, 1]], 
                LineBox[CompressedData["
1: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
                 "]]}, {
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[0.006944444444444445], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0]], 
                LineBox[CompressedData["
1:eJxd2H1M1VUcx/EraQ2JQgUFkQJhBlxZ4tDwKUCYDTYWA6nwofQyLXMsplDx
4DQ0JxIOCjQINqAkr9zL46UiZCJgqUBZYuqUIqIMGdP5GALV2n1/2875i732
Oef3O5zfOb/7/R0f01vxWxwMBsO2KQbDf393PJMQ/GvkhbBzlvaB4ty2sERc
iNNwM87GNrwXp+BMzeXYjD/Hn+ImXKW5FNfgrfgkzsD1+F1sxkbcgpNwh3a9
TrwGn8WxuB+X4DPYA/fgCHxZ+/8v4XDch1fgYW3813GU1t4dD+An8DV8o8bu
CfwG+RX8M/k9HEA+ggdq1Ov/gW/iq3gcO9N/DE+QT2IH8kf87Z6LHbGPRR3v
KP2dyCPJnf3V8Yov034m7sdP4mE8FVfVqPcv0drv167Xg+f5q/PhhWuxGzZj
V7wL++EDWr4A++AVOAhnYSPOw/NxrNY+HQfjULwMv6TlncftXomTycPxShyJ
o/AK7KS1/5HrRcn849XYg/axeIQ8EY/iBDym5YfwWpyNN+A9eCNOxSZ5PngT
3oy340ycims0r8bpeCPOwEF4N96K9+JlOAcPmu3Oxa7k+dgTf4in4xKZX/qX
a+OpxG+Tm7HjcdUXyRtwEf4SV+MTuBt/i3/CnfI8cS8+hi/jXvwLfg//jmPw
TeyP72j3u41PYIcA5hdPkrdiF/Ig7IEP4kA8CwdhV2zE0XgRXo9D8X4cjf3w
WhyI1+EUvAUvxttxPs7EiTgD5+B87f//BPvgIlyG63AAPoln4zbt+j14Dz6P
u/ANnIdvafNxHfuy/gyBdk/K88NG8ml4J16IXbARJ+Plger+jcaHcRj+ASfh
Xnlf4Vd5P6UFqu8rEy7AB7AJF+MKfATfwXlY6okiGa/UL7gcV+BR/DWeZrXb
JvfHBXgQm7FDLc8T+9Wq/dNwKz6FB/BpXIrfrLP7As7Fl3AjrsT+9exXnI4/
wx/Uq/e/q3lpgzof6xrU+TQ3qP9/K27GwY12f4zzGtX+p3Es7sIlOKnJ7vV4
c5O6vtbgOFlPOASP4XAZj81uT/wU9sJVeLrMD77N/tmBh/EgbscZuAFnYxtu
xJW4HpfiMVyFtzWr7sNp2BOny/ia1fdXdbP6/gvHcXgffk67nx/ut6m54xfM
D55C+6n4jk31TC1/iIekfqP9hPyeko9id+43gFPIe/BC3Cq/v/g8tuIWbMI1
+D73P44ncZnUm/gIvoc/kt9jXCj1I9eX+qOaXOqN93EaPoxTcB+WekfW4+v4
T5yszZ/UW104Hp/BCdr1pP6LZbwvSP1BLvVjIZb6sgkvlnofh+CDOBQfxVLv
Po8DpB7G3vgW+/Vp3EL+fz2PXaSewXPkewXL90kxfkzWi6xPbNTyJC0PwQ/4
PrI2qZ5Lfhc/JJfvRzdy+X7rJh/SLO2v4kGcj+V7cAbXu4g7yK9o/eX7Nxf3
4nYs38+n8Pc4C3fhEdyGj2luwR3aeG1y3qDZhK04Gct5w1JcoY1XzhMisJxH
uGA5fzDgAlyN5fzDW7OT1j4U5+PZmh3xbrwK52rX34f/blTdh3PwWZwlzxO/
I+PHG7Xrb8NHyV/D17T2vXgzbsRyvlSGN8l5DI7DqfgVvEF+r+U8Bb8s5yn4
RZk/vETrv1rOb/AqfJ/6IULOw3CwnG/gEFl/DWp/sRc+j2fib3AolnrmWRyP
A+T5YnccjX1wDPaV8yA8X/YP9dQcfAHPwN9hBy33xjnYFWfXq+Mx4bEFdmfi
CbwEj+NQ/ACHaP3H69T2V/AktuJZcl6G/yHfjkc0/4UT8BT6+2EP/GidOh+/
Uf86yXxhg5x/Yjcs9bSMf12t+ryW16rrYxGehx/XPE4974x7rOr6+8qqrudz
VnX97MLR+BCOwjut6n6Kt6r7zxvHYF8cKeOzqPvvtkXdr3c1d1vU98eQRd3/
efhfUJetIw==
                 "]]}, {
                Hue[0.1421359549995791, 0.6, 0.6], 
                Directive[
                 PointSize[0.006944444444444445], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]], 
                LineBox[CompressedData["
1:eJwtmHk4V9v/xbmoJC4ahRtKoVIZMkRvmUqlQqWSCilEUpIxGRqkQfOoW8RN
KKJu53MyZKwMiXPMlRAJJbmmkt/q+f7+8pznc84+++y9XmutTdnZ29b1DyEh
IXdhIaHff6WvLFdRI57u1Ay2xVwUUKRew44pS3ly1ej0ePtSQKsKjdS6DHla
KfHm2IsRAc2ROns1R5cnR2X91BFNlppMxtzO1ORpxVGFbqOtLImecy/5ocpT
3sjh2TsjWfon9nl6hTxPtwozZh5KZCnr2awJ/tI8xd3daZP4nKVe7XOnjUV5
6pNvf2/Hs8TdexrjM8DRrTvSc6d+YKm9NeDRrs8clU77c3N2K0vm6VHe3m85
ChD7or2miaVUk1P1DRUcNZ3aYSfEsXTiv+yQgQKOnpxZ84xyWfJaFuA/VsDR
LI1qtbsJLLm3eX5ckcbRI99g3S7Mr9Xk/fmv/3Dkqf3pSf82lkz/XiWreoej
7oDUw6wOS31v5yqPu8nR9TUxvNlYlnxsdNxTrnLEq534ElcjoINmlhemX+Ho
h4x6zJdEAU20qEpYh2vJ4f0a+n4Canp7IMH0GkeqXsNHj1kKaKfBJK8GjHdk
6eEFFdPwu/raRyN43+ZXDU/7uxmaoWajcfQeR4MDe9/lFTE0qbcufznmWyLx
8PKHeIYSBq90TmE4slxyVbz5KEM/L0m9yc3jaN/fO3fpeDEUJ+UWL1PG0cWX
jifUtzB0/sSnbK6Go3cROvbfVzN0zlm+kG/m6OWAeWmCBUN2Wno3PnRzpCvh
HKlvzpCQ0YlVxYMclcVKF55YwZDOwc/Fm0R4kjbe1Ohgy9DtqgOn9kjyZHl/
Tb6TE0MRik4qdVN4yv42rVvvIEMdtUqRoTN4+p6tqOl5mqF/A4Zcls3hqWSN
R1JoEkPxXmb2Y6AX07jMzI4XmL/iiU8CbZ6S7asTpncyJGwmfWGdPk9ip0cO
H/5TQMmqJ+9nLeGpzHOiT6iugD6J+i8aMebp5b4v809sFdCpfok7UtDvHvGX
YmMiBRSwfuTuf9CvwXSlMo9kAS28n1PG4P7w+WeiNCsFlOtgv2QXxhOy9/lY
MSCgZUk1puJ4X5f6/D318izVRjtLZ2I+mc+So94as5Qrs3Z5IOb79g/XnYcc
WZpQ2X7HR40n+baHPusCWUroEj6frsxTfFjAZ4WLLDE3D7fYTufpWgMjFXsf
+jK85eQty9MgzTCNzWJpbn9LqPJ46H2Vn2h/KUsVGapjI4V5ypWyeRldyxLv
YlacjvXfwWx79FvfDXdarQu/chQZ/WqBIfR/3DM8rraNowbf6qj1uDb92jVW
7B3uv5u98QHuDwjyyHfmORISvHjvVMeS+t/BHeOgB7+Juv7ny1my8125ULKQ
I69nN17sAR/Rl+OLI7LAj6isjPJDlqzWHl0c+oSj6D6rnV3XWaq0EVkqDf3Z
3X/0VhK8uIXvfW5xn6P0T4e4Vx4s6cWdyZiXwFHirmmSXmtZui+XM67iNviM
Uu1cpsVS5nY2VT+Wo7smN+9em8iSUnhruNd1jmLSVP2LvgsoT7jY4QB4klP2
bpevwv4eTPzDGvxcnZnc350uID31KvpxGbwqa+2PiRHQetnTrcH4XWXZX0s2
egso6S+9unI8v+dNwo2YNQIKS4/V7ML4yTpN8Wc0BTT30EStcrz/9Lroszeh
p0xNtUhP8CY5wU5XpJehoMqsRVmYv/9i8SNjqxmaH7HsdSa+756lRm8Hy1DU
y/JLlvh+4/fD2m3gL3i6WPhOrM/0fwNTtM4w1CW22Xf0Gfwj0kFVKIihIekU
27HwH8EnxcAAD4Y8Pg5o7CnhSKnawzZ/K0Mh+g0b5ao4sil/3P7DhiG5iNq/
R+uxPzZzqw1XMmSwZdpOiRb4gUz7YAz4bH8bzqp34vv5XTbjwGeXuVjs8u8c
NW5UH47H72WjdSK2PzhSyHKZtQPPX1mSPGkxeP2QlKmkBV79H7iZfoDeXpY8
3T/OkSGro/f3L4Me+bPOX19hfkuEgpUt5ODvn/s+bsH8zbPdIhvAr3NcqN0F
fF9q5z8pffBzj8MCJau7DG3ea3IvbC5PUifkPVY9Y0jhlVCc70KedBxFKl2w
fkzRLKHnOjxN+VbbuBHru70lLMwBfD3+1bmxFevfYi+72RD8BQX25hdjf6aV
Zi7fAD7FfL7VPMX+mUj8l5EAflsPbB3ag/09UvMwZzb47hdaWHoe+//5lpMD
j9/LE/IKG6GPEfPujWl43vTLyIsB8C0alOD9FOOv+Rz3Kgb6Stuyw6EH74/T
0AxZD/0ZaG6p2Ir86pzWKNKziKXC20lRoot4+iaqnyID/W6eIbaiB983aH8s
1R36TpW5Uq4xm6fmeUbd9yNY6vh1syEX6xMQcrE4GnxIvDil8HwaTyeD5jUU
PWBJaHaQopEMT39kuVbLgy+JZ6Ha5uI8rY9StFgH/mqu8E7dQjzVvZ/kuBB8
imoGGViD91b9+cVnwa/QBPmMQPCe/dzZZSX47u2UEjkD3jeUaIpZ4NqrZfPu
28i/xMVZqntx/7ktkV9LOI42tf4VlQ3/WPXPhqVzSznydXSpMihDflYHWdTl
g9czluO/wn+uXVv5o4eFX4i2jw7CnyRuVo8/nQkeBorjDsO/xPsrDxencjQu
dMmCDPjbKCPYzSAfo7v0llbD//b9GAwJjIMe886nai9l6fr57lylWxw1T73n
OFOBJTnRxom54E9U/3ruuEEBuSWJ1LuDT+upV/RssT/Kd+wuzAO/BrnfDf3h
z2+VnIIm4vrlhIMrf0YIaFAlcN5s3D9FuTR+N/x9+Pj7FW4Yr9tvTrYV/L+r
eNu8OvBs/DD35GLoyVP1/r0DmE+U8dGggs8MLUjqKp+P/NRy3mp78ne+RGi8
HHzAUcewYpYC8ue4vGhRLvjdGjWuQAL5dM1o95BnDkdWbS6yTb4MNbbdyHz/
giOJyiGVacg3IeW2K/2V8AMJha2q4Gnq86T3J7H+18JE1N2Rj13Zl8p9PoHv
3duUtMDn6apa3RDwqdP32ooBn5dic+SDf3Ek7Pn+0gxrhkqkHI8sgR4yD5rF
7kE+D1oL0/GJPK02PJJ1HPndeWvV+LmKPK3j1ieZHGNo3veLod/Bnz5tjjAH
fyuH1lo/nM/TpkLbqyrFDDXbVOxaCN6KGieUrfoC/zqbvdTagKcjL/iKiXIC
upjkKNRshPw8IKqSgf4RfDU7+w34ETOS77ZCP2FSZ8SMBV9Blxe8bEF/mfpM
OvoQeDryycw6GP1mvE/s9Rnof3VGdvtF0X9UFhf/NU73d14rpLqhHw2MSK81
Rz4+LT925wr6U1Ze7YZezPc/RmVFFPIiTjtHYYkCTxUHtTZYon95uR4osAEf
7h1u977msDSpvKFgvxje/+X20cIqln4sYx83gwcHr3YbTej7+N6w/C7433yj
htPPoP/Oi69rmpB3HxwXFmujH6praYbJYH869obSKfRH082WSW+Qb4Z3GKn/
0C/f/nSftx/9T/ZnwgUO/fPAqKQbwc+rw/wmFWN+KjvLaw5D37FfjCJvoL82
xXrXeSK/hr/0+K1ZwFJG/seHhjew38JpLiK/0EdOJDZMgD7Du495/EQ/9j3p
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
DwV5eWk=
                 "]]}}}, {}}, {
            DisplayFunction -> Identity, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, 
             AxesOrigin -> {0.30053426843126607`, 0.0978600287423805}, 
             PlotRange -> {{0.3010180455863593, 0.3319797835123248}, {
              0.098694343446218, 0.11538063752296812`}}, DisplayFunction -> 
             Identity, Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.30053426843126607`, 0.0978600287423805}, 
             DisplayFunction :> Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                GrayLevel[0], 
                
                PointBox[{{-1.118033988749895, 0}, {
                  1.118033988749895, 0}}]}, {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.31215003058253604`, 0.10957123036186481`}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.3010180455863668, 0.11538063752293506`}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.3319797835123248, 0.10382943762746645`}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=7, mid=(0.5,0.3)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0.3010180455863593, 0.3319797835123248}, {
              0.098694343446218, 0.11538063752296812`}}, PlotRangeClipping -> 
             True, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], 
                 LineBox[CompressedData["
1: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
8UM/6xedk0c/D/3/789f/v/35/8BSiY+zQ==
                  "]]}, {
                 Hue[0.9060679774997897, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 
                   NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                 LineBox[CompressedData["
1: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
xf/Onw3+d/78X5NI16Y=
                  "]]}, {
                 Hue[0.1421359549995791, 0.6, 0.6], 
                 Directive[
                  PointSize[0.008333333333333333], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], 
                 LineBox[CompressedData["
1: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
CvRz/OjLMPRzZ7BtAvpZ+f//Pz/938//AUVYLvE=
                  "]]}}}, {}}, {
              Thickness[Large], 
              GrayLevel[0], 
              CircleBox[{0, 0}, {1.5, 1}]}, {
              Thickness[Large], 
              RGBColor[0.6, 0.4, 0.2], 
              CircleBox[{0, 0}, {1.427246146277728, 0.8871479933272833}]}}, {
            PlotRange -> {{-1.5, 1.5}, {-1, 1}}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, 
             AxesOrigin -> {0.30241968705910083`, 0.10483449882159426`}, 
             PlotRange -> {{0.3027307305078676, 0.3226375112289462}, {
              0.1053002229046111, 0.11461470456494793`}}, DisplayFunction -> 
             Identity, Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.30241968705910083`, 0.10483449882159426`}, 
             DisplayFunction :> Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                GrayLevel[0], 
                
                PointBox[{{-1.118033988749895, 0}, {
                  1.118033988749895, 0}}]}, {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.31257876437241705`, 0.11021052338639944`}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.3027307316293998, 0.11461469722798603`}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.32121218225761444`, 0.10634954277379824`}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=8, mid=(0.5,0.3)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0.3027307305078676, 0.3226375112289462}, {
              0.1053002229046111, 0.11461470456494793`}}, PlotRangeClipping -> 
             True, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
         TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 0, 1]], 
                LineBox[CompressedData["
1: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
8UM/6xedk0c/D/3/789f/v/35/8BSiY+zQ==
                 "]]}, {
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0]], 
                LineBox[CompressedData["
1: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
xf/Onw3+d/78X5NI16Y=
                 "]]}, {
                Hue[0.1421359549995791, 0.6, 0.6], 
                Directive[
                 PointSize[0.008333333333333333], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]], 
                LineBox[CompressedData["
1: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
CvRz/OjLMPRzZ7BtAvpZ+f//Pz/938//AUVYLvE=
                 "]]}}}, {}}, {
            DisplayFunction -> Identity, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, 
             AxesOrigin -> {0.30241968705910083`, 0.10483449882159426`}, 
             PlotRange -> {{0.3027307305078676, 0.3226375112289462}, {
              0.1053002229046111, 0.11461470456494793`}}, DisplayFunction -> 
             Identity, Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.30241968705910083`, 0.10483449882159426`}, 
             DisplayFunction :> Identity, Epilog -> {
               Thickness[Large], 
               PointSize[Medium], {
                GrayLevel[0], 
                
                PointBox[{{-1.118033988749895, 0}, {
                  1.118033988749895, 0}}]}, {{
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.31257876437241705`, 0.11021052338639944`}]}, {
                 RGBColor[0, 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.3027307316293998, 0.11461469722798603`}]}, {
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0], 
                 Dashing[{Small, Small}], {}, 
                 PointBox[{0.32121218225761444`, 0.10634954277379824`}]}}}, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
             PlotLabel -> FormBox[
               StyleBox["\"a/b=1.50, N=8, mid=(0.5,0.3)\"", {
                 GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
             PlotRange -> {{0.3027307305078676, 0.3226375112289462}, {
              0.1053002229046111, 0.11461470456494793`}}, PlotRangeClipping -> 
             True, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
            FormBox[
             
             TemplateBox[{"\"orbit\"", "\"outer\"", "\"inner\""}, 
              "SwatchLegend", DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"mid pedals to:\"", {FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLabel", "\[Rule]", "\"mid pedals to:\""}], 
                   ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ),
               Editable -> True], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(GridBox[{{
              TagBox[
               ItemBox[
                PaneBox[
                 TagBox[#, "SkipImageSizeLevel"], 
                 Alignment -> {Center, Baseline}, BaselinePosition -> 
                 Baseline], DefaultBaseStyle -> "Labeled"], 
               "SkipImageSizeLevel"]}, {
              ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> Automatic, 
            BaselinePosition -> {1, 1}]& ),
          Editable->True,
          InterpretationFunction->(RowBox[{"Legended", "[", 
             RowBox[{#, ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7962938853166914`*^9}]
}, Open  ]]
}, Closed]]
},
WindowSize->{1280, 677},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 92, 1, 70, "Section"],
Cell[675, 25, 429, 9, 31, "Input"],
Cell[1107, 36, 12488, 367, 672, "Input"],
Cell[13598, 405, 8802, 278, 712, "Input"],
Cell[22403, 685, 744, 27, 26, "DisplayFormula"],
Cell[23150, 714, 714, 23, 72, "Input"],
Cell[23867, 739, 330, 8, 31, "Input"],
Cell[24200, 749, 4471, 131, 372, "Input"],
Cell[28674, 882, 1171, 33, 132, "Input"],
Cell[29848, 917, 1231, 30, 132, "Input"],
Cell[31082, 949, 594, 14, 52, "Input"],
Cell[31679, 965, 1615, 43, 172, "Input"],
Cell[CellGroupData[{
Cell[33319, 1012, 99, 1, 39, "Subsubsection"],
Cell[33421, 1015, 4799, 136, 292, "Input"],
Cell[38223, 1153, 1201, 30, 232, "Input"],
Cell[39427, 1185, 1084, 32, 72, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40548, 1222, 100, 1, 39, "Subsubsection"],
Cell[40651, 1225, 5944, 200, 292, "Input"],
Cell[46598, 1427, 1824, 48, 92, "Input"],
Cell[48425, 1477, 713, 23, 31, "Input"],
Cell[49141, 1502, 2924, 74, 226, "Input"],
Cell[52068, 1578, 99, 1, 30, "Text"],
Cell[52170, 1581, 2868, 85, 212, "Input"],
Cell[55041, 1668, 2160, 57, 232, "Input"],
Cell[57204, 1727, 1842, 47, 112, "Input"],
Cell[59049, 1776, 1239, 33, 132, "Input"],
Cell[60291, 1811, 1485, 37, 132, "Input"],
Cell[61779, 1850, 1235, 30, 172, "Input"],
Cell[63017, 1882, 3387, 93, 232, "Input"],
Cell[66407, 1977, 864, 27, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67308, 2009, 100, 1, 39, "Subsubsection"],
Cell[67411, 2012, 1823, 49, 152, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69271, 2066, 104, 1, 39, "Subsubsection"],
Cell[69378, 2069, 1354, 32, 132, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70769, 2106, 104, 1, 39, "Subsubsection"],
Cell[70876, 2109, 104208, 1713, 216, "Text"],
Cell[175087, 3824, 2053, 54, 92, "Input"],
Cell[177143, 3880, 530, 10, 31, "Input"],
Cell[CellGroupData[{
Cell[177698, 3894, 408, 12, 31, "Input"],
Cell[178109, 3908, 313, 6, 31, "Output"]
}, Open  ]],
Cell[178437, 3917, 672, 17, 52, "Input"],
Cell[179112, 3936, 657, 17, 52, "Input"],
Cell[179772, 3955, 621, 19, 31, "Input"],
Cell[180396, 3976, 1131, 32, 92, "Input"],
Cell[181530, 4010, 994, 28, 92, "Input"],
Cell[182527, 4040, 989, 29, 92, "Input"],
Cell[183519, 4071, 1106, 32, 92, "Input"],
Cell[184628, 4105, 772, 21, 92, "Input"],
Cell[185403, 4128, 1093, 31, 92, "Input"],
Cell[186499, 4161, 904, 27, 92, "Input"],
Cell[187406, 4190, 1107, 31, 92, "Input"],
Cell[188516, 4223, 759, 21, 92, "Input"],
Cell[189278, 4246, 1229, 29, 232, "Input"],
Cell[190510, 4277, 1179, 32, 112, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191726, 4314, 104, 1, 39, "Subsubsection"],
Cell[191833, 4317, 1185, 38, 72, "Input"],
Cell[193021, 4357, 938, 26, 92, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193996, 4388, 154, 2, 39, "Subsubsection"],
Cell[194153, 4392, 2995, 86, 152, "Input"],
Cell[197151, 4480, 2357, 58, 172, "Input"],
Cell[CellGroupData[{
Cell[199533, 4542, 731, 15, 31, "Input"],
Cell[200267, 4559, 1275, 22, 195, "Output"]
}, Open  ]],
Cell[201557, 4584, 3145, 91, 252, "Input"],
Cell[204705, 4677, 2962, 82, 212, "Input"],
Cell[207670, 4761, 812, 22, 112, "Input"],
Cell[208485, 4785, 2322, 78, 132, "Input"],
Cell[210810, 4865, 272, 7, 31, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[211131, 4878, 105, 1, 56, "Section"],
Cell[CellGroupData[{
Cell[211261, 4883, 203, 2, 49, "Subsubsection"],
Cell[211467, 4887, 78335, 1289, 94, "Input",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[289839, 6181, 123116, 2024, 332, "Subsubsection"],
Cell[412958, 8207, 343, 9, 36, "Input"],
Cell[413304, 8218, 1381, 36, 198, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414722, 8259, 350, 9, 49, "Subsubsection"],
Cell[415075, 8270, 14898, 249, 91, "Text"],
Cell[429976, 8521, 1463, 37, 175, "Input"],
Cell[431442, 8560, 1367, 41, 60, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[432846, 8606, 375, 10, 49, "Subsubsection"],
Cell[433224, 8618, 3258, 79, 278, "Input"],
Cell[436485, 8699, 973, 30, 83, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[437507, 8735, 157, 2, 56, "Section"],
Cell[437667, 8739, 3193, 75, 312, "Input"],
Cell[440863, 8816, 4971, 123, 572, "Input"],
Cell[CellGroupData[{
Cell[445859, 8943, 448, 9, 31, "Input"],
Cell[446310, 8954, 7918, 163, 70, "Output"]
}, Open  ]],
Cell[454243, 9120, 1475, 40, 112, "Input"],
Cell[455721, 9162, 777, 21, 92, "Input"],
Cell[456501, 9185, 980, 22, 92, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[457518, 9212, 223, 3, 56, "Section"],
Cell[CellGroupData[{
Cell[457766, 9219, 230, 4, 48, "Subsubsection"],
Cell[457999, 9225, 53793, 887, 262, "Text"],
Cell[511795, 10114, 1143, 33, 90, "Input"],
Cell[512941, 10149, 5348, 130, 465, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[518326, 10284, 336, 6, 48, "Subsubsection"],
Cell[518665, 10292, 255239, 4196, 245, "Text"],
Cell[773907, 14490, 612, 16, 115, "Input"],
Cell[774522, 14508, 830, 19, 115, "Input"],
Cell[775355, 14529, 1203, 28, 140, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[776595, 14562, 172, 4, 83, "Subsubsection"],
Cell[776770, 14568, 136244, 2238, 275, "Input",
 Evaluatable->False]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[913063, 16812, 197, 3, 56, "Section"],
Cell[913263, 16817, 224, 5, 30, "Text"],
Cell[913490, 16824, 27528, 456, 64, "Input",
 Evaluatable->False],
Cell[941021, 17282, 2527, 63, 212, "Input"],
Cell[943551, 17347, 661, 18, 31, "Input"],
Cell[944215, 17367, 4798, 113, 272, "Input"],
Cell[949016, 17482, 5146, 156, 212, "Input"],
Cell[CellGroupData[{
Cell[954187, 17642, 119, 1, 39, "Subsubsection"],
Cell[954309, 17645, 1297, 38, 52, "Input"],
Cell[955609, 17685, 1468, 38, 112, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[957126, 17729, 176, 2, 56, "Section"],
Cell[957305, 17733, 1227, 33, 92, "Input"],
Cell[958535, 17768, 313, 9, 31, "Input"],
Cell[958851, 17779, 9199, 192, 992, "Input"],
Cell[CellGroupData[{
Cell[968075, 17975, 169, 2, 39, "Subsubsection"],
Cell[968247, 17979, 2335, 54, 192, "Input"],
Cell[970585, 18035, 543, 15, 31, "Input"],
Cell[971131, 18052, 10825, 262, 912, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[982005, 18320, 260, 3, 56, "Section"],
Cell[982268, 18325, 14358, 309, 1072, "Input"],
Cell[996629, 18636, 1327, 42, 60, "Input"],
Cell[997959, 18680, 1300, 30, 152, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[999296, 18715, 259, 3, 56, "Section"],
Cell[999558, 18720, 3020, 55, 552, "Input"],
Cell[1002581, 18777, 2280, 53, 92, "Input"],
Cell[1004864, 18832, 2491, 65, 152, "Input"],
Cell[1007358, 18899, 311, 10, 31, "Input"],
Cell[1007672, 18911, 1059, 31, 52, "Input"],
Cell[1008734, 18944, 385, 9, 52, "Input"],
Cell[1009122, 18955, 1300, 35, 72, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1010459, 18995, 123, 1, 56, "Section"],
Cell[CellGroupData[{
Cell[1010607, 19000, 185, 4, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[1010817, 19008, 1851, 52, 152, "Input"],
Cell[1012671, 19062, 986, 21, 70, "Output"]
}, Open  ]],
Cell[1013672, 19086, 529, 14, 72, "Input"],
Cell[CellGroupData[{
Cell[1014226, 19104, 125, 2, 31, "Input"],
Cell[1014354, 19108, 575, 11, 57, "Output"]
}, Open  ]],
Cell[1014944, 19122, 544, 14, 72, "Input"],
Cell[CellGroupData[{
Cell[1015513, 19140, 132, 2, 31, "Input"],
Cell[1015648, 19144, 576, 11, 57, "Output"]
}, Open  ]],
Cell[1016239, 19158, 617, 19, 52, "Input"],
Cell[CellGroupData[{
Cell[1016881, 19181, 1683, 45, 92, "Input"],
Cell[1018567, 19228, 25813, 504, 393, "Output"]
}, Open  ]],
Cell[1044395, 19735, 149, 3, 31, "Input"],
Cell[1044547, 19740, 70, 1, 52, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1044654, 19746, 249, 4, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[1044928, 19754, 358, 8, 31, "Input"],
Cell[1045289, 19764, 640, 13, 70, "Output"]
}, Open  ]],
Cell[1045944, 19780, 533, 15, 72, "Input"],
Cell[1046480, 19797, 688, 20, 72, "Input"],
Cell[CellGroupData[{
Cell[1047193, 19821, 344, 11, 31, "Input"],
Cell[1047540, 19834, 622, 13, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1048199, 19852, 293, 7, 31, "Input"],
Cell[1048495, 19861, 701, 15, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1049233, 19881, 422, 11, 31, "Input"],
Cell[1049658, 19894, 621, 13, 71, "Output"]
}, Open  ]],
Cell[1050294, 19910, 3181, 82, 252, "Input"],
Cell[CellGroupData[{
Cell[1053500, 19996, 129, 2, 31, "Input"],
Cell[1053632, 20000, 1660, 29, 374, "Output"]
}, Open  ]],
Cell[1055307, 20032, 92, 1, 31, "Input"],
Cell[1055402, 20035, 94, 1, 31, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1055545, 20042, 100, 1, 56, "Section"],
Cell[1055648, 20045, 4315, 100, 392, "Input"],
Cell[1059966, 20147, 14463, 352, 932, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1074466, 20504, 154, 2, 56, "Section"],
Cell[1074623, 20508, 1546, 40, 132, "Input"],
Cell[1076172, 20550, 951, 24, 132, "Input"],
Cell[1077126, 20576, 1470, 37, 152, "Input"],
Cell[1078599, 20615, 1521, 38, 112, "Input"],
Cell[1080123, 20655, 248, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[1080396, 20664, 1173, 29, 92, "Input"],
Cell[1081572, 20695, 3301, 50, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1084910, 20750, 2384, 62, 132, "Input"],
Cell[1087297, 20814, 33249, 609, 394, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1120583, 21428, 74912, 1235, 191, "Subsubsection"],
Cell[CellGroupData[{
Cell[1195520, 22667, 282, 5, 31, "Input"],
Cell[1195805, 22674, 2969, 43, 70, "Output"]
}, Open  ]],
Cell[1198789, 22720, 364, 9, 38, "Input"],
Cell[CellGroupData[{
Cell[1199178, 22733, 348, 6, 38, "Input"],
Cell[1199529, 22741, 2847, 39, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1202413, 22785, 242, 5, 37, "Input"],
Cell[1202658, 22792, 2804, 38, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1205499, 22835, 260, 5, 31, "Input"],
Cell[1205762, 22842, 1121, 19, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1206932, 22867, 136, 1, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[1207093, 22872, 412, 12, 31, "Input"],
Cell[1207508, 22886, 2531, 34, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1210076, 22925, 634, 15, 31, "Input"],
Cell[1210713, 22942, 2929, 40, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1213679, 22987, 537, 14, 31, "Input"],
Cell[1214219, 23003, 1096, 19, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[1215342, 23026, 242, 5, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[1215609, 23035, 153, 2, 33, "Subsubsection"],
Cell[CellGroupData[{
Cell[1215787, 23041, 487, 11, 31, "Input"],
Cell[1216277, 23054, 3730, 64, 58, "Output"]
}, Open  ]],
Cell[1220022, 23121, 124, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[1220171, 23126, 587, 16, 31, "Input"],
Cell[1220761, 23144, 3628, 66, 60, "Output"]
}, Open  ]],
Cell[1224404, 23213, 170, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[1224599, 23219, 157, 3, 31, "Input"],
Cell[1224759, 23224, 1644, 40, 85, "Output"]
}, Open  ]],
Cell[1226418, 23267, 1034, 27, 140, "Input"],
Cell[CellGroupData[{
Cell[1227477, 23298, 162, 3, 38, "Input"],
Cell[1227642, 23303, 2841, 40, 31, "Output"]
}, Open  ]],
Cell[1230498, 23346, 1556, 43, 132, "Input"],
Cell[1232057, 23391, 256, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[1232338, 23400, 177, 4, 31, "Input"],
Cell[1232518, 23406, 3379, 64, 77, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1235946, 23476, 106, 1, 39, "Subsubsection"],
Cell[1236055, 23479, 383, 10, 24, "DisplayFormula"],
Cell[1236441, 23491, 1054, 27, 112, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1237532, 23523, 150, 2, 39, "Subsubsection"],
Cell[1237685, 23527, 105856, 1741, 256, "Input",
 Evaluatable->False],
Cell[1343544, 25270, 140, 1, 30, "Text"],
Cell[1343687, 25273, 15343, 256, 73, "Input",
 Evaluatable->False],
Cell[1359033, 25531, 94, 1, 31, "Input"],
Cell[1359130, 25534, 3183, 85, 372, "Input"],
Cell[1362316, 25621, 1056, 31, 112, "Input"],
Cell[CellGroupData[{
Cell[1363397, 25656, 531, 15, 31, "Input"],
Cell[1363931, 25673, 2535, 63, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1366503, 25741, 376, 10, 31, "Input"],
Cell[1366882, 25753, 1062, 22, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1367981, 25780, 180, 4, 31, "Input"],
Cell[1368164, 25786, 515, 10, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1368716, 25801, 344, 10, 31, "Input"],
Cell[1369063, 25813, 2476, 62, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1371576, 25880, 639, 16, 31, "Input"],
Cell[1372218, 25898, 11062, 188, 223, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1383317, 26091, 265, 4, 31, "Input"],
Cell[1383585, 26097, 2868, 39, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1386490, 26141, 174, 3, 31, "Input"],
Cell[1386667, 26146, 2742, 37, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1389446, 26188, 141, 2, 31, "Input"],
Cell[1389590, 26192, 1107, 19, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1390746, 26217, 191, 2, 49, "Subsection"],
Cell[CellGroupData[{
Cell[1390962, 26223, 1725, 34, 152, "Input"],
Cell[1392690, 26259, 23285, 392, 392, 12228, 217, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1416012, 26656, 389, 11, 31, "Input"],
Cell[1416404, 26669, 161215, 2623, 301, 129429, 2106, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[1577634, 29295, 2782, 75, 292, "Input"],
Cell[CellGroupData[{
Cell[1580441, 29374, 476, 12, 52, "Input"],
Cell[1580920, 29388, 37364, 618, 245, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1618345, 30013, 229, 3, 56, "Section"],
Cell[1618577, 30018, 1174, 32, 92, "Input"],
Cell[1619754, 30052, 1809, 44, 172, "Input"],
Cell[1621566, 30098, 2358, 61, 232, "Input"],
Cell[1623927, 30161, 11608, 262, 572, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1635572, 30428, 180, 2, 56, "Section"],
Cell[1635755, 30432, 7133, 137, 452, "Input"],
Cell[CellGroupData[{
Cell[1642913, 30573, 172, 3, 39, "Subsubsection"],
Cell[1643088, 30578, 768, 19, 72, "Input"],
Cell[1643859, 30599, 2639, 64, 232, "Input"],
Cell[1646501, 30665, 1547, 35, 132, "Input"],
Cell[1648051, 30702, 2351, 52, 232, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1650451, 30760, 157, 2, 56, "Section"],
Cell[1650611, 30764, 3463, 100, 92, "Input"],
Cell[1654077, 30866, 4525, 116, 352, "Input"],
Cell[1658605, 30984, 1405, 35, 31, "Input"],
Cell[1660013, 31021, 4116, 103, 312, "Input"],
Cell[1664132, 31126, 566, 17, 31, "Input"],
Cell[1664701, 31145, 703, 16, 52, "Input"],
Cell[CellGroupData[{
Cell[1665429, 31165, 7729, 192, 432, "Input"],
Cell[1673161, 31359, 8656, 170, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1681866, 31535, 251, 4, 56, "Section"],
Cell[1682120, 31541, 1790, 43, 132, "Input"],
Cell[CellGroupData[{
Cell[1683935, 31588, 147, 1, 39, "Subsubsection"],
Cell[1684085, 31591, 3194, 77, 232, "Input"],
Cell[1687282, 31670, 1551, 38, 152, "Input"],
Cell[1688836, 31710, 2436, 55, 292, "Input"],
Cell[1691275, 31767, 2022, 41, 132, "Input"],
Cell[1693300, 31810, 2542, 54, 232, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1695891, 31870, 284, 3, 56, "Section"],
Cell[1696178, 31875, 513, 14, 52, "Input"],
Cell[1696694, 31891, 2415, 62, 152, "Input"],
Cell[CellGroupData[{
Cell[1699134, 31957, 187, 4, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[1699346, 31965, 1988, 48, 112, "Input"],
Cell[1701337, 32015, 6006, 178, 207, "Output"]
}, Open  ]],
Cell[1707358, 32196, 1527, 39, 112, "Input"],
Cell[1708888, 32237, 1275, 35, 112, "Input"],
Cell[1710166, 32274, 1081, 30, 112, "Input"],
Cell[1711250, 32306, 2069, 57, 192, "Input"],
Cell[CellGroupData[{
Cell[1713344, 32367, 206, 4, 31, "Input"],
Cell[1713553, 32373, 2015, 30, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1715605, 32408, 205, 4, 31, "Input"],
Cell[1715813, 32414, 2019, 30, 31, "Output"]
}, Open  ]],
Cell[1717847, 32447, 1961, 54, 172, "Input"],
Cell[1719811, 32503, 6821, 164, 632, "Input"],
Cell[1726635, 32669, 2554, 67, 152, "Input"],
Cell[1729192, 32738, 1344, 36, 132, "Input"],
Cell[1730539, 32776, 8008, 191, 712, "Input"],
Cell[1738550, 32969, 3194, 78, 332, "Input"],
Cell[1741747, 33049, 1311, 34, 112, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1743095, 33088, 149, 1, 39, "Subsubsection"],
Cell[1743247, 33091, 2442, 60, 212, "Input"],
Cell[1745692, 33153, 3695, 87, 332, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1749424, 33245, 127, 1, 39, "Subsubsection"],
Cell[1749554, 33248, 2273, 54, 192, "Input"],
Cell[1751830, 33304, 1120, 30, 112, "Input"],
Cell[1752953, 33336, 1802, 46, 152, "Input"],
Cell[1754758, 33384, 1178, 31, 132, "Input"],
Cell[1755939, 33417, 1181, 33, 92, "Input"],
Cell[1757123, 33452, 22514, 480, 1012, "Input"],
Cell[CellGroupData[{
Cell[1779662, 33936, 3980, 96, 272, "Input"],
Cell[1783645, 34034, 9304, 150, 495, "Output"]
}, Open  ]],
Cell[1792964, 34187, 214, 4, 31, "Input"],
Cell[1793181, 34193, 373, 8, 31, "Input"],
Cell[CellGroupData[{
Cell[1793579, 34205, 2732, 68, 132, "Input"],
Cell[1796314, 34275, 30733, 678, 298, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1827108, 34960, 99, 1, 70, "Section"],
Cell[1827210, 34963, 2469, 62, 152, "Input"],
Cell[1829682, 35027, 2069, 56, 132, "Input"],
Cell[1831754, 35085, 1941, 54, 132, "Input"],
Cell[1833698, 35141, 159, 3, 30, "Text"],
Cell[1833860, 35146, 14983, 347, 792, "Input"],
Cell[CellGroupData[{
Cell[1848868, 35497, 3215, 87, 252, "Input"],
Cell[1852086, 35586, 5217, 91, 745, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1857352, 35683, 243, 3, 70, "Section"],
Cell[1857598, 35688, 1352, 38, 112, "Input"],
Cell[CellGroupData[{
Cell[1858975, 35730, 322, 8, 31, "Input"],
Cell[1859300, 35740, 178, 4, 31, "Output"]
}, Open  ]],
Cell[1859493, 35747, 469, 13, 31, "Input"],
Cell[1859965, 35762, 467, 14, 31, "Input"],
Cell[1860435, 35778, 1648, 44, 132, "Input"],
Cell[CellGroupData[{
Cell[1862108, 35826, 172, 3, 31, "Input"],
Cell[1862283, 35831, 769, 16, 31, "Output"]
}, Open  ]],
Cell[1863067, 35850, 569, 16, 31, "Input"],
Cell[1863639, 35868, 1545, 42, 132, "Input"],
Cell[CellGroupData[{
Cell[1865209, 35914, 401, 10, 31, "Input"],
Cell[1865613, 35926, 872, 23, 31, "Output"]
}, Open  ]],
Cell[1866500, 35952, 856, 25, 92, "Input"],
Cell[1867359, 35979, 421, 10, 31, "Input"],
Cell[CellGroupData[{
Cell[1867805, 35993, 155, 3, 31, "Input"],
Cell[1867963, 35998, 70, 1, 31, "Output"]
}, Open  ]],
Cell[1868048, 36002, 1797, 42, 152, "Input"],
Cell[1869848, 36046, 2876, 69, 192, "Input"],
Cell[1872727, 36117, 2021, 49, 152, "Input"],
Cell[1874751, 36168, 1364, 33, 112, "Input"],
Cell[1876118, 36203, 2211, 50, 212, "Input"],
Cell[1878332, 36255, 760, 16, 92, "Input"],
Cell[1879095, 36273, 1926, 48, 172, "Input"],
Cell[CellGroupData[{
Cell[1881046, 36325, 402, 7, 31, "Input"],
Cell[1881451, 36334, 267, 3, 52, "Output"]
}, Open  ]],
Cell[1881733, 36340, 1501, 38, 112, "Input"],
Cell[CellGroupData[{
Cell[1883259, 36382, 397, 9, 31, "Input"],
Cell[1883659, 36393, 425, 7, 52, "Output"]
}, Open  ]],
Cell[1884099, 36403, 164593, 3428, 9864, "Input"],
Cell[2048695, 39833, 532, 15, 31, "Input"],
Cell[CellGroupData[{
Cell[2049252, 39852, 36854, 785, 1892, "Input"],
Cell[2086109, 40639, 155661, 3249, 667, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2241807, 43893, 369, 9, 52, "Input"],
Cell[2242179, 43904, 1236, 30, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2243464, 43940, 158, 2, 70, "Section"],
Cell[2243625, 43944, 2207, 58, 292, "Input"],
Cell[CellGroupData[{
Cell[2245857, 44006, 541, 14, 31, "Input"],
Cell[2246401, 44022, 4581, 86, 266, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2251019, 44113, 543, 14, 31, "Input"],
Cell[2251565, 44129, 4225, 81, 262, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2255827, 44215, 543, 14, 31, "Input"],
Cell[2256373, 44231, 4793, 90, 253, "Output"]
}, Open  ]],
Cell[2261181, 44324, 1431, 38, 152, "Input"],
Cell[CellGroupData[{
Cell[2262637, 44366, 460, 12, 31, "Input"],
Cell[2263100, 44380, 16300, 280, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2279437, 44665, 407, 11, 31, "Input"],
Cell[2279847, 44678, 16217, 277, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2296101, 44960, 409, 11, 31, "Input"],
Cell[2296513, 44973, 16309, 279, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2312859, 45257, 408, 11, 31, "Input"],
Cell[2313270, 45270, 16340, 280, 238, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2329659, 45556, 102, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[2329786, 45561, 4929, 99, 452, "Input"],
Cell[2334718, 45662, 16044, 387, 485, "Output"]
}, Open  ]],
Cell[2350777, 46052, 206, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[2351008, 46060, 5035, 101, 452, "Input"],
Cell[2356046, 46163, 16244, 406, 880, "Output"]
}, Open  ]],
Cell[2372305, 46572, 266, 6, 31, "Input"],
Cell[2372574, 46580, 1552, 35, 739, "Subsubsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2374163, 46620, 101, 1, 56, "Section"],
Cell[CellGroupData[{
Cell[2374289, 46625, 785, 20, 52, "Input"],
Cell[2375077, 46647, 9244, 162, 361, "Output"]
}, Open  ]],
Cell[2384336, 46812, 2477, 59, 312, "Input"],
Cell[CellGroupData[{
Cell[2386838, 46875, 245, 4, 31, "Input"],
Cell[2387086, 46881, 413, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2387536, 46891, 357, 8, 31, "Input"],
Cell[2387896, 46901, 488, 10, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2388421, 46916, 352, 8, 31, "Input"],
Cell[2388776, 46926, 518, 10, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2389331, 46941, 1638, 43, 101, "Input"],
Cell[2390972, 46986, 7267, 133, 262, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2398276, 47124, 1044, 26, 132, "Input"],
Cell[2399323, 47152, 582, 12, 31, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2399954, 47170, 179, 2, 56, "Section"],
Cell[2400136, 47174, 2727, 64, 332, "Input"],
Cell[2402866, 47240, 6695, 164, 392, "Input"],
Cell[CellGroupData[{
Cell[2409586, 47408, 290, 5, 31, "Input"],
Cell[2409879, 47415, 51283, 970, 450, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2461199, 48390, 513, 13, 31, "Input"],
Cell[2461715, 48405, 298603, 5625, 1340, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2760355, 54035, 518, 13, 31, "Input"],
Cell[2760876, 54050, 353236, 6498, 1130, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3114149, 60553, 521, 13, 31, "Input"],
Cell[3114673, 60568, 384938, 7020, 1282, "Output"]
}, Open  ]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
