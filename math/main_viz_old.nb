(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    537483,      10427]
NotebookOptionsPosition[    533573,      10296]
NotebookOutlinePosition[    533922,      10311]
CellTagsIndexPosition[    533879,      10308]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["*** Viz Preliminaries [old]", "Section",
 CellChangeTimes->{{3.7660482399458723`*^9, 3.7660482578030624`*^9}, {
  3.76613191552491*^9, 3.7661319176552134`*^9}, {3.7663960087055473`*^9, 
  3.766396016049938*^9}, {3.766566024808996*^9, 3.7665660280413785`*^9}, {
  3.7714137857828207`*^9, 3.7714137868471947`*^9}},
 ExpressionUUID -> "d32bbffe-4505-4a8a-803a-ad601d747d94"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "@", "getShowable"}], ";", 
   RowBox[{
    RowBox[{"getShowable", "[", 
     RowBox[{"str_", ",", "showables_"}], "]"}], ":=", 
    RowBox[{"ListQ", "@", 
     RowBox[{"FirstPosition", "[", 
      RowBox[{"showables", ",", "str"}], "]"}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "when", " ", "not", " ", "found", " ", "returns", " ", 
    "\"\<Missing[]\>\""}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7662408594492784`*^9, 3.7662409468653774`*^9}, {
  3.7662409875695505`*^9, 3.7662409946416416`*^9}, {3.766241037817524*^9, 
  3.766241040697855*^9}, {3.7662412161149673`*^9, 3.7662412205151978`*^9}, {
  3.7662412913378983`*^9, 3.7662413392581096`*^9}, {3.7662414073535*^9, 
  3.766241485970231*^9}, {3.766241580786798*^9, 3.7662415970026283`*^9}},
 ExpressionUUID -> "d8fbdf21-5acc-4b55-969d-b00c25f10dd3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "drTriData"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "drTriData"}], "=", 
   RowBox[{"{", 
    RowBox[{"sameClr", "\[Rule]", "False"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drTriData", "[", 
    RowBox[{
    "a_", ",", "triData_", ",", "triStr_", ",", "clr_", ",", "showables_", 
     ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "tri", ",", "npc", ",", "inc", ",", "tps", ",", "npcClr", ",", "incClr",
        ",", 
       RowBox[{"lgt", "=", ".33"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tri", "=", 
       RowBox[{"triData", "[", "\"\<tri\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"npc", "=", 
       RowBox[{"triData", "[", "\"\<npc\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inc", "=", 
       RowBox[{"triData", "[", "\"\<inc\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tps", "=", 
       RowBox[{"triData", "[", "\"\<tps\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"npcClr", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "@", "sameClr"}], ",", "clr", ",", 
         RowBox[{"\"\<npc\>\"", "/.", "ptClrs"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"incClr", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "@", "sameClr"}], ",", "clr", ",", 
         RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FaceForm", "@", "None"}], ",", 
        RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"getShowable", "[", 
           RowBox[{"triStr", ",", "showables"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"clr", ",", "\[IndentingNewLine]", 
            RowBox[{"EdgeForm", "@", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "clr"}], "}"}]}], ",", 
            RowBox[{"Polygon", "@", "tri"}], ",", 
            RowBox[{"Point", "@", "tri"}]}], "}"}], ",", 
          RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"getShowable", "[", 
           RowBox[{
            RowBox[{"triStr", "<>", "\"\<npc\>\""}], ",", "showables"}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"npcClr", ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Point", "@", "npc"}], ",", 
              RowBox[{"drawOneNotable", "[", 
               RowBox[{"npcClr", ",", "npc", ",", 
                RowBox[{"OverBar", "[", "\"\<9\>\"", "]"}], ",", "0", ",", 
                RowBox[{"-", "1.5"}], ",", "16"}], "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", 
              RowBox[{"Circle", "[", 
               RowBox[{"npc", ",", 
                RowBox[{"triData", "[", "\"\<npcR\>\"", "]"}]}], "]"}]}], 
             "}"}]}], "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"getShowable", "[", 
           RowBox[{
            RowBox[{"triStr", "<>", " ", "\"\<incirc\>\""}], ",", 
            "showables"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"incClr", ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Point", "@", "inc"}], ",", 
              RowBox[{"drawOneNotable", "[", 
               RowBox[{"incClr", ",", "inc", ",", 
                RowBox[{"OverBar", "[", "\"\<I\>\"", "]"}], ",", "0", ",", 
                RowBox[{"-", "1.5"}], ",", "16"}], "]"}], ",", 
              RowBox[{"Point", "@", "tps"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Dashed", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{"inc", ",", "#"}], "}"}], "]"}], "&"}], "/@", 
               "tps"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", 
              RowBox[{"Circle", "[", 
               RowBox[{"inc", ",", 
                RowBox[{"triData", "[", "\"\<incR\>\"", "]"}]}], "]"}]}], 
             "}"}]}], "}"}], ",", 
          RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"getShowable", "[", 
           RowBox[{
            RowBox[{"triStr", "<>", "\"\<contact\>\""}], ",", "showables"}], 
           "]"}], ",", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", "ns", "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ns", "=", 
              RowBox[{"norm", "/@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ellGrad", "[", 
                   RowBox[{"a", ",", 
                    RowBox[{"Sequence", "@@", "#"}]}], "]"}], "&"}], "/@", 
                 "tps"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"incClr", ",", 
               RowBox[{"EdgeForm", "@", 
                RowBox[{"{", 
                 RowBox[{"incClr", ",", "Dashed"}], "}"}]}], ",", 
               RowBox[{"Point", "@", "tps"}], ",", 
               RowBox[{"Polygon", "@", "tps"}], ",", "\[IndentingNewLine]", 
               RowBox[{"MapThread", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "16"}], "]"}], ",", 
                    RowBox[{"#2", "-", 
                    RowBox[{".5", "*", "lgt", "*", "#3"}]}]}], "]"}], "&"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(C\), \(1\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(C\), \(2\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(C\), \(3\)]\)\>\""}], "}"}], 
                   ",", "tps", ",", "ns"}], "}"}]}], "]"}]}], "}"}]}]}], 
           "]"}], ",", 
          RowBox[{"{", "}"}]}], "]"}]}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7706570148059807`*^9, 3.770657251587192*^9}, {
  3.7706572862624955`*^9, 3.770657817756073*^9}, {3.7707419529789333`*^9, 
  3.770742036134069*^9}, {3.770742101083137*^9, 3.7707422053170967`*^9}, {
  3.770742242059901*^9, 3.7707422478686466`*^9}, {3.770742315500873*^9, 
  3.7707423164334097`*^9}, {3.770742346949026*^9, 3.7707424047066727`*^9}, {
  3.770742970821145*^9, 3.7707430001707087`*^9}},
 ExpressionUUID -> "8521c983-97e7-417a-8cbd-fb4015a645cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "subscrCtr"}], ";", 
  RowBox[{
   RowBox[{"subscrCtr", "[", "str_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "ds", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ds", "=", 
       RowBox[{
        RowBox[{"StringCases", "[", 
         RowBox[{"str", ",", 
          RowBox[{"DigitCharacter", ".."}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Subscript", "[", 
       RowBox[{"\"\<X\>\"", ",", "ds"}], "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.771274829331091*^9, 3.7712748457042103`*^9}, {
   3.7712749780340557`*^9, 3.7712750815533133`*^9}, {3.771275115306081*^9, 
   3.771275232760917*^9}, {3.7712752880738535`*^9, 3.771275346281678*^9}, 
   3.7712753904097147`*^9, {3.7712754207865624`*^9, 3.7712754260358887`*^9}, {
   3.7712754736665955`*^9, 3.7712754825777903`*^9}, {3.771275561866784*^9, 
   3.771275653545907*^9}, {3.7712756998829007`*^9, 3.771275702465969*^9}, {
   3.7712757502582245`*^9, 3.7712759165708075`*^9}},
 ExpressionUUID -> "b2c6a34f-2cf8-4e3a-aad1-fd6a19159909"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"drawNewCenters", "[", 
    RowBox[{"orbit_", ",", "sides_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "ctrs", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ctrs", "=", 
       RowBox[{"getNewCenters", "[", 
        RowBox[{"orbit", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "@", "Medium"}], ",", "Red", ",", 
         RowBox[{"Point", "[", 
          RowBox[{"Third", "/@", "ctrs"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"subscrCtr", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", "1.5"}]}], "}"}]}], "]"}], "&"}], "/@", 
          "ctrs"}]}], "}"}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.77127429553903*^9, 3.7712743410883617`*^9}, {
  3.771274383017358*^9, 3.771274445320212*^9}, {3.771274754498371*^9, 
  3.771274756904912*^9}, {3.771275929675784*^9, 3.771275961532523*^9}},
 ExpressionUUID -> "c56718af-7642-4ee8-a4f8-8fdae267b5c5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "@", "drawSimT"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"precompute", " ", "loci"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "drawSimT"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
     RowBox[{"labExtra", "->", "\"\<\>\""}], ",", 
     RowBox[{"showablesOpt", "\[Rule]", 
      RowBox[{"{", "}"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawSimT", "[", 
    RowBox[{
    "a_", ",", "t_", ",", "ellPlot_", ",", "causticPlot_", ",", "loci_", ",", 
     RowBox[{"opt", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "showables", ",", "incPlot", ",", "ellP", ",", "orbitData", ",", 
       "orbit", ",", "normals", ",", "notables", ",", "exc", ",", "npc", ",", 
       "\[IndentingNewLine]", "excNormals", ",", "excNotables", ",", 
       "excCircleData", ",", "excOrtFeet", ",", "medians", ",", "excTps", ",",
        "orthic", ",", "\[IndentingNewLine]", "sides", ",", "pl", ",", 
       "actData", ",", "medData", ",", "\[IndentingNewLine]", "x40", ",", 
       "x88", ",", "x144", " ", 
       RowBox[{"(*", "darboux", "*)"}], ",", "x168", ",", 
       "\[IndentingNewLine]", "x142", ",", "mosesPts", ",", "mosesOpts", ",", 
       "hasMoses", ",", "\[IndentingNewLine]", "toShowNeedsGr", ",", 
       "toShowGr", ",", 
       RowBox[{"lgt", "=", ".33"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"showables", "=", 
       RowBox[{"OptionValue", "@", "showablesOpt"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ellP", "=", 
       RowBox[{"N", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", " ", 
           RowBox[{"Cos", "@", "t"}]}], ",", 
          RowBox[{"Sin", "@", "t"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"orbitData", "=", 
       RowBox[{"getOrbitData", "[", 
        RowBox[{"a", ",", 
         RowBox[{"ellP", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"posY", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ellP", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ">", "0"}], ")"}]}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"orbit", "=", 
       RowBox[{"\"\<orbit\>\"", "/.", "orbitData"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sides", "=", 
       RowBox[{"RotateLeft", "@", 
        RowBox[{"triLengths", "@", "orbit"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"normals", "=", 
       RowBox[{"\"\<normals\>\"", "/.", "orbitData"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"notables", "=", 
       RowBox[{"getNotables", "[", 
        RowBox[{"orbit", ",", "normals"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"exc", "=", 
       RowBox[{"\"\<exc\>\"", "/.", "notables"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"medians", "=", 
       RowBox[{"\"\<medians\>\"", "/.", "notables"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"npc", "=", 
       RowBox[{"\"\<npc\>\"", " ", "/.", "notables"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"excNormals", "=", 
       RowBox[{"getTriBisectors", "@@", "exc"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"excNotables", "=", 
       RowBox[{"getNotables", "[", 
        RowBox[{"exc", ",", "excNormals"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"excOrtFeet", "=", 
       RowBox[{"getAltBases", "@@", "exc"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"excCircleData", "=", 
       RowBox[{"getExcircleData", "[", 
        RowBox[{"orbit", ",", "exc", 
         RowBox[{"(*", 
          RowBox[{"12", ",", "23", ",", "31"}], "*)"}], ",", "npc"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"excTps", "=", 
       RowBox[{"\"\<tps\>\"", "/.", "excCircleData"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"orthic", "=", 
       RowBox[{"getOrthicData", "@", "orbit"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"actData", "=", 
       RowBox[{"getAnticomplData", "[", 
        RowBox[{"orbit", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"medData", "=", 
       RowBox[{"getMedialData", "[", 
        RowBox[{"orbit", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"bar", " ", "+", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"bar", "-", "mitten"}], ")"}], "/", "2"}]}], " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", "bar"}], " ", "-", " ", "mitten"}], ")"}], "/", 
         "2"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"x142", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", 
           RowBox[{"(", 
            RowBox[{"\"\<bar\>\"", "/.", "notables"}], ")"}]}], "-", 
          RowBox[{"(", 
           RowBox[{"\"\<mitten\>\"", "/.", "excCircleData"}], ")"}]}], ")"}], 
        "/", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x144", "=", 
       RowBox[{"getX144Trilin", "[", 
        RowBox[{"orbit", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x40", "=", 
       RowBox[{"getBevanTrilin", "[", 
        RowBox[{"orbit", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x88", "=", 
       RowBox[{"getX88Trilin", "[", 
        RowBox[{"orbit", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x168", "=", 
       RowBox[{"getX168Trilin", "[", 
        RowBox[{"orbit", ",", "sides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mosesOpts", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"getShowable", "[", 
          RowBox[{"#", ",", "showables"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{
         "\"\<mosesptsto1k\>\"", ",", "\"\<mosesptsto4k\>\"", ",", 
          "\"\<mosesptsabove4k\>\""}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"hasMoses", "=", 
       RowBox[{"Or", "@@", "mosesOpts"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mosesPts", "=", 
       RowBox[{"If", "[", 
        RowBox[{"hasMoses", ",", 
         RowBox[{"getMosesTrilinears", "[", 
          RowBox[{"orbit", ",", "sides"}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pl", "=", 
       RowBox[{
        RowBox[{"OptionValue", "@", "labExtra"}], "<>", "\"\<a=\>\"", "<>", 
        RowBox[{"nf", "@", "a"}], "<>", "\"\<; t=\>\"", "<>", 
        RowBox[{"nf0", "@", 
         RowBox[{"toDeg", "[", "t", "]"}]}], "<>", "\"\<\[Degree]\>\""}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"toShowGr", "=", 
       RowBox[{"{", 
        RowBox[{"ellPlot", ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<orbit\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"drawOrbit", "[", 
            RowBox[{"orbitData", ",", 
             RowBox[{"2", "*", "lgt"}], ",", 
             RowBox[{"getShowable", "[", 
              RowBox[{"\"\<normals\>\"", ",", "showables"}], "]"}]}], "]"}], 
           ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<caustic\>\"", ",", "showables"}], "]"}], ",", 
           "causticPlot", ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<loci\>\"", ",", "showables"}], "]"}], ",", "loci", 
           ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<notablelines\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"drawNotableLines", "@", "notables"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"(*", " ", 
          RowBox[{"remove", " ", "excenters", " ", "from", " ", "here"}], " ",
           "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<basicnotables\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"drawBasicNotables", "@", "notables"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"(*", " ", 
          RowBox[{"remove", " ", "excenters", " ", "from", " ", "here"}], " ",
           "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<notables\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"drawNotables", "@", "notables"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"(*", " ", 
          RowBox[{"remove", " ", "excenters", " ", "from", " ", "here"}], " ",
           "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<exnotablelines\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"drawNotableLines", "@", "excNotables"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<exnotables\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"drawNotables", "[", 
            RowBox[{"excNotables", ",", "\"\<x\>\""}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<anticomplcircumb\>\"", ",", "showables"}], "]"}], 
           ",", 
           RowBox[{"drawCircumMit", "[", 
            RowBox[{
             RowBox[{"actData", "[", "\"\<tri\>\"", "]"}], ",", 
             RowBox[{
             "ctrLab", "\[Rule]", 
              "\"\<\!\(\*SubscriptBox[\(X\), \(7\)]\)\>\""}], ",", 
             RowBox[{"ps", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"\"\<anticompl\>\"", "/.", "ptClrs"}], ")"}]}]}], 
            "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<medialcircumb\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"drawCircumMit", "[", 
            RowBox[{
             RowBox[{"medData", "[", "\"\<tri\>\"", "]"}], ",", 
             RowBox[{
             "ctrLab", "\[Rule]", 
              "\"\<\!\(\*SubscriptBox[\(X\), \(142\)]\)\>\""}], ",", 
             RowBox[{"ps", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"\"\<med\>\"", "/.", "ptClrs"}], ")"}]}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<excentralcircumb\>\"", ",", "showables"}], "]"}], 
           ",", 
           RowBox[{"drawCircumMit", "[", 
            RowBox[{"exc", ",", 
             RowBox[{
             "ctrLab", "\[Rule]", 
              "\"\<\!\(\*SubscriptBox[\(X\), \(168\)]\)\>\""}], ",", 
             RowBox[{"ps", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"\"\<dar\>\"", "/.", "ptClrs"}], ")"}]}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<steinercircumell\>\"", ",", "showables"}], "]"}], 
           ",", 
           RowBox[{"drawCircumBar", "[", 
            RowBox[{"orbit", ",", 
             RowBox[{
             "ctrLab", "\[Rule]", 
              "\"\<\!\(\*SubscriptBox[\(X\), \(2\)]\)\>\""}], ",", 
             RowBox[{"ps", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", 
                RowBox[{"(", 
                 RowBox[{"\"\<steiner\>\"", "/.", "ptClrs"}], ")"}]}], 
               "}"}]}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<inccircumell\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"drawCircumInc", "[", 
            RowBox[{"orbit", ",", 
             RowBox[{
             "ctrLab", "\[Rule]", 
              "\"\<\!\(\*SubscriptBox[\(X\), \(1\)]\)\>\""}], ",", 
             RowBox[{"ps", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", 
                RowBox[{"(", 
                 RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}], ")"}]}], "}"}]}]}], 
            "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<hypx100\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"showHyp5vizapp", "[", 
            RowBox[{"a", ",", 
             RowBox[{"toDeg", "@", "t"}], ",", "getHypX100", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Symbol", "@", "\"\<lgt\>\""}], ")"}], "\[Rule]", 
              ".1"}], ",", 
             RowBox[{"ps", "\[Rule]", 
              RowBox[{"Darker", "@", 
               RowBox[{"(", 
                RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}], ")"}]}]}]}], "]"}], 
           ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<hypfeuerbach\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"showHyp5vizapp", "[", 
            RowBox[{"a", ",", 
             RowBox[{"toDeg", "@", "t"}], ",", "getHypFeuerbach", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Symbol", "@", "\"\<lgt\>\""}], ")"}], "\[Rule]", 
              ".1"}], ",", 
             RowBox[{"ps", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"\"\<feu\>\"", "/.", "ptClrs"}], ")"}]}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<trilinpts\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"drawNewCenters", "[", 
            RowBox[{"orbit", ",", "sides"}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"toShowNeedsGr", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", "circles", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<incircle\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}], ",", 
             RowBox[{"PointSize", "@", "Large"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"\"\<inc\>\"", "/.", "notables"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", 
               RowBox[{"Circle", "[", 
                RowBox[{
                 RowBox[{"\"\<inc\>\"", "/.", "notables"}], ",", 
                 RowBox[{"\"\<incRadius\>\"", "/.", "notables"}]}], "]"}]}], 
              "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"drawOneNotable", "[", 
              RowBox[{
               RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}], ",", 
               RowBox[{"\"\<inc\>\"", "/.", "notables"}], ",", "\"\<I\>\"", 
               ",", "0", ",", 
               RowBox[{"-", "1.5"}], ",", "16"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<circumcircle\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<cir\>\"", "/.", "ptClrs"}], ",", 
             RowBox[{"PointSize", "@", "Large"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"\"\<cir\>\"", "/.", "notables"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", 
               RowBox[{"Circle", "[", 
                RowBox[{
                 RowBox[{"\"\<cir\>\"", "/.", "notables"}], ",", 
                 RowBox[{"\"\<cirRadius\>\"", "/.", "notables"}]}], "]"}]}], 
              "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"drawOneNotable", "[", 
              RowBox[{
               RowBox[{"\"\<cir\>\"", "/.", "ptClrs"}], ",", 
               RowBox[{"\"\<cir\>\"", "/.", "notables"}], ",", "\"\<C\>\"", 
               ",", "0", ",", 
               RowBox[{"-", "1.5"}], ",", "16"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<excircles\>\"", " ", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<exc\>\"", "/.", "ptClrs"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"PointSize", "@", "Large"}], ",", 
               RowBox[{"Point", "@", "exc"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", 
               RowBox[{"MapThread", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Circle", "[", 
                   RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"exc", ",", 
                   RowBox[{"\"\<radii\>\"", " ", "/.", "excCircleData"}]}], 
                  "}"}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
           ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<ninepointcircle\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<npc\>\"", "/.", "ptClrs"}], ",", 
             RowBox[{"PointSize", "@", "Large"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"\"\<npc\>\"", "/.", "notables"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", 
               RowBox[{"Circle", "[", 
                RowBox[{
                 RowBox[{"\"\<npc\>\"", "/.", "notables"}], ",", 
                 RowBox[{"\"\<npcRadius\>\"", "/.", "notables"}]}], "]"}]}], 
              "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"drawOneNotable", "[", 
              RowBox[{
               RowBox[{"\"\<npc\>\"", "/.", "ptClrs"}], ",", 
               RowBox[{"\"\<npc\>\"", "/.", "notables"}], ",", "\"\<9\>\"", 
               ",", "0", ",", 
               RowBox[{"-", "1.5"}], ",", "16"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "lines", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<interfeuerline\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"Dashed", ",", "Gray", ",", 
             RowBox[{"Line", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<antifeu\>\"", ",", "\"\<feu\>\""}], "}"}], "/.", 
               "notables"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<feuerbachline\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "Dashed", ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\"\<feu\>\"", "/.", "notables"}], ",", 
                RowBox[{"\"\<npc\>\"", "/.", "notables"}]}], "}"}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<darbouxgergonneline\>\"", ",", "showables"}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<bar\>\"", "/.", "ptClrs"}], ",", "Thick", ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\"\<ger\>\"", "/.", "notables"}], ",", "x144"}], 
               "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<mittengergonneline\>\"", ",", "showables"}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<bar\>\"", "/.", "ptClrs"}], ",", "Thick", ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\"\<ger\>\"", "/.", "notables"}], ",", 
                RowBox[{"\"\<mit\>\"", "/.", "notables"}]}], "}"}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<mittenx142line\>\"", ",", "showables"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<bar\>\"", "/.", "ptClrs"}], ",", "Thick", ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\"\<mit\>\"", "/.", "notables"}], ",", "x142"}], 
               "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<x88antifeuerline\>\"", ",", "showables"}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"Dashed", ",", 
             RowBox[{"Darker", "@", "Cyan"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<antifeu\>\"", ",", "\"\<x88\>\""}], "}"}], "/.", 
               "notables"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<inc2nagel\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<nag\>\"", "/.", "ptClrs"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\"\<nagel\>\"", "/.", "excCircleData"}], ",", 
                RowBox[{"\"\<inc\>\"", "/.", "notables"}]}], "}"}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<darbouxlines\>\"", ",", "showables"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Dashed", ",", 
             RowBox[{"PointSize", "@", "Large"}], ",", "Red", ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"MapThread", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Line", "@", 
                   RowBox[{"{", 
                    RowBox[{"#1", ",", 
                    RowBox[{"ray", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{"#2", "-", "#1"}], ",", "5"}], "]"}]}], "}"}]}], 
                  "&"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"actData", "[", "\"\<tri\>\"", "]"}], ",", 
                   RowBox[{"RotateLeft", "@", "excTps"}]}], "}"}]}], "]"}], 
               ","}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{"#1", ",", "#2"}], "}"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"actData", "[", "\"\<tri\>\"", "]"}], ",", 
                 RowBox[{"actData", "[", "\"\<tps\>\"", "]"}]}], "}"}]}], 
              "]"}]}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{",", 
              RowBox[{"Point", "@", "dbx"}], ",", "Cyan", ",", 
              RowBox[{"Point", "@", 
               RowBox[{"getX144Trilin", "[", 
                RowBox[{"orbit", ",", "sides"}], "]"}]}]}], "*)"}], "}"}], 
           ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<antiorthicaxis\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"drawAntiOrthicAxis", "[", 
            RowBox[{"orbit", ",", 
             RowBox[{"RotateLeft", "@", "exc"}], ",", "False"}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<isotomicaxis\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"drawIsotomicAxis", "[", 
            RowBox[{"orbit", ",", "sides", ",", "actData", ",", 
             RowBox[{"Darker", "@", "Cyan"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"exc", " ", "objects"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<exbisectors\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\"\<exc\>\"", "/.", "ptClrs"}], ")"}], ",", 
             RowBox[{"FaceForm", "[", "None", "]"}], ",", 
             RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Arrow", "[", 
                 RowBox[{"{", 
                  RowBox[{"#1", ",", 
                   RowBox[{"ray", "[", 
                    RowBox[{"#1", ",", "#2", ",", ".5"}], "]"}]}], "}"}], 
                 "]"}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"exc", ",", "excNormals"}], "}"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<exfeuerbach\>\"", " ", ",", "showables"}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "@", "Medium"}], ",", 
             RowBox[{"(", 
              RowBox[{"\"\<npc\>\"", "/.", "ptClrs"}], ")"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"\"\<feus\>\"", "/.", "excCircleData"}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<exbaricenter\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "@", "Large"}], ",", 
             RowBox[{"drawOneNotable", "[", 
              RowBox[{
               RowBox[{"\"\<bar\>\"", "/.", "ptClrs"}], ",", 
               RowBox[{"\"\<bar\>\"", "/.", "excNotables"}], ",", 
               "\"\<xB\>\""}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<exnpc\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\"\<npc\>\"", "/.", "ptClrs"}], ")"}], ",", "Thick", 
             ",", 
             RowBox[{"Circle", "[", 
              RowBox[{"npc", ",", 
               RowBox[{"\"\<npcRadius\>\"", "/.", "excNotables"}]}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "triangles", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"drTriData", "[", 
          RowBox[{"a", ",", "actData", ",", "\"\<anticompl\>\"", ",", 
           RowBox[{"\"\<anticompl\>\"", "/.", "ptClrs"}], ",", "showables", 
           ",", 
           RowBox[{"sameClr", "\[Rule]", "True"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"drTriData", "[", 
          RowBox[{"a", ",", "medData", ",", "\"\<medial\>\"", ",", 
           RowBox[{"\"\<med\>\"", "/.", "ptClrs"}], ",", "showables", ",", 
           RowBox[{"sameClr", "\[Rule]", "True"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<extouchtri\>\"", " ", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"FaceForm", "@", "None"}], ",", 
             RowBox[{"EdgeForm", "@", 
              RowBox[{"{", 
               RowBox[{"Thick", ",", 
                RowBox[{"\"\<exc\>\"", "/.", "ptClrs"}]}], "}"}]}], ",", 
             RowBox[{"Polygon", "@", "excTps"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<excentral\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"FaceForm", "[", "None", "]"}], ",", 
             RowBox[{"EdgeForm", "[", 
              RowBox[{"{", 
               RowBox[{"Thick", ",", 
                RowBox[{"(", 
                 RowBox[{"\"\<exc\>\"", "/.", "ptClrs"}], ")"}]}], "}"}], 
              "]"}], ",", 
             RowBox[{"Polygon", "@", "exc"}], ",", 
             RowBox[{"(", 
              RowBox[{"\"\<exc\>\"", "/.", "ptClrs"}], ")"}], ",", 
             RowBox[{"PointSize", "@", "Large"}], ",", 
             RowBox[{"Point", "@", "exc"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<hexyltriangle\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", "hex", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"hex", "=", 
               RowBox[{"hexylTriangle", "[", 
                RowBox[{"orbit", ",", "sides"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"FaceForm", "@", "None"}], ",", 
                RowBox[{"EdgeForm", "[", 
                 RowBox[{"\"\<hex\>\"", "/.", "ptClrs"}], "]"}], ",", 
                RowBox[{"Polygon", "@", "hex"}], ",", 
                RowBox[{"PointSize", "@", "Medium"}], ",", 
                RowBox[{"\"\<hex\>\"", "/.", "ptClrs"}], ",", 
                RowBox[{"Point", "@", "hex"}]}], "}"}]}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<outernapoleon\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", "nap", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"nap", "=", 
               RowBox[{"outerNapoleonTriangle", "[", 
                RowBox[{"orbit", ",", "sides"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"FaceForm", "@", "None"}], ",", 
                RowBox[{"EdgeForm", "[", 
                 RowBox[{"\"\<nap\>\"", "/.", "ptClrs"}], "]"}], ",", 
                RowBox[{"Polygon", "@", "nap"}], ",", 
                RowBox[{"PointSize", "@", "Medium"}], ",", 
                RowBox[{"\"\<nap\>\"", "/.", "ptClrs"}], ",", 
                RowBox[{"Point", "@", "nap"}]}], "}"}]}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<morleytriangle\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"morley", ",", "c1"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"morley", "=", 
               RowBox[{"firstMorleyTriangle", "[", 
                RowBox[{"orbit", ",", "sides"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"c1", "=", 
               RowBox[{"getFirstMorleyTrilin", "[", 
                RowBox[{"orbit", ",", "sides"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"FaceForm", "@", "None"}], ",", 
                RowBox[{"EdgeForm", "[", 
                 RowBox[{"\"\<nap\>\"", "/.", "ptClrs"}], "]"}], ",", 
                RowBox[{"Polygon", "@", "morley"}], ",", 
                RowBox[{"PointSize", "@", "Medium"}], ",", 
                RowBox[{"\"\<nap\>\"", "/.", "ptClrs"}], ",", 
                RowBox[{"Point", "@", "morley"}], ",", "Black", ",", 
                RowBox[{"Point", "@", "c1"}]}], "}"}]}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<orthictriangle\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"EdgeForm", "@", "Black"}], ",", 
               RowBox[{"FaceForm", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\"\<ort\>\"", "/.", "ptClrs"}], ",", 
                  RowBox[{"Opacity", "@", ".3"}]}], "}"}], "]"}], ",", 
               RowBox[{"Polygon", "[", 
                RowBox[{"\"\<feet\>\"", "/.", "orthic"}], "]"}]}], "}"}], ",",
              "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"EdgeForm", "[", 
                RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}], "]"}], ",", 
               RowBox[{"FaceForm", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Lighter", "@", "Green"}], ",", 
                  RowBox[{"Opacity", "@", ".3"}]}], "}"}], "]"}], ",", 
               RowBox[{"Polygon", "[", 
                RowBox[{"\"\<intouch\>\"", "/.", "orthic"}], "]"}], ",", 
               "Gray", ",", 
               RowBox[{"Circle", "[", 
                RowBox[{
                 RowBox[{"\"\<inc\>\"", "/.", "orthic"}], ",", 
                 RowBox[{"\"\<inradius\>\"", "/.", "orthic"}]}], "]"}]}], 
              "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"FaceForm", "@", "None"}], ",", 
               RowBox[{"EdgeForm", "@", "Red"}], ",", 
               RowBox[{"Polygon", "[", 
                RowBox[{"\"\<intouchOrt\>\"", "/.", "orthic"}], "]"}], ",", 
               "Red", ",", 
               RowBox[{"Point", "[", 
                RowBox[{"\"\<intouchOrtInc\>\"", "/.", "orthic"}], "]"}]}], 
              "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"PointSize", "@", "Medium"}], ",", 
               RowBox[{"\"\<ort\>\"", "/.", "ptClrs"}], ",", 
               RowBox[{"Point", "[", 
                RowBox[{"\"\<feet\>\"", "/.", "orthic"}], "]"}], ",", 
               RowBox[{"PointSize", "@", "Large"}], ",", 
               RowBox[{"Point", "[", 
                RowBox[{"\"\<ort\>\"", "/.", "notables"}], "]"}]}], 
              RowBox[{"(*", 
               RowBox[{",", 
                RowBox[{"drawOneNotable", "[", 
                 RowBox[{
                  RowBox[{"\"\<ort\>\"", "/.", "ptClrs"}], ",", 
                  RowBox[{"\"\<ort\>\"", "/.", "notables"}], ",", 
                  "\"\<O\>\""}], "]"}]}], "*)"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Dashed", ",", "Gray", ",", 
                 RowBox[{"MapThread", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{"#1", ",", "#2"}], "}"}], "]"}], "&"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"orbit", ",", "ortFeet"}], "}"}]}], "]"}]}], 
                "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Dashed", ",", "Gray", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Line", "[", 
                  RowBox[{"{", 
                   RowBox[{"#", ",", 
                    RowBox[{"\"\<ort\>\"", "/.", "notables"}]}], "}"}], "]"}],
                  "&"}], "/@", "orbit"}]}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"PointSize", "@", "Large"}], ",", 
               RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}], ",", 
               RowBox[{"Point", "[", 
                RowBox[{"\"\<inc\>\"", "/.", "orthic"}], "]"}]}], "}"}]}], 
            "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<experimental\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"cir", "=", 
                RowBox[{"\"\<cir\>\"", "/.", "notables"}]}], ",", "rad", ",", 
               "equi", ",", "xfeus", ",", "xfeusCir", ",", "xtpsCir", ",", 
               "cirClr", ",", "medsCir"}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"cirClr", "=", 
               RowBox[{"\"\<cir\>\"", "/.", "ptClrs"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"rad", "=", 
               RowBox[{"\"\<cirRadius\>\"", "/.", "notables"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"xfeus", "=", 
               RowBox[{"(", 
                RowBox[{"\"\<feus\>\"", "/.", "excCircleData"}], ")"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"equi", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"cir", "+", "#"}], ")"}], "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{"rad", " ", 
                  RowBox[{"getEquilateral", "[", "0.", "]"}]}], ")"}]}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"xfeusCir", "=", 
               RowBox[{"getCircumcenter", "@@", "xfeus"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"xtpsCir", "=", 
               RowBox[{"getCircumcenter", "@@", "excTps"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"medsCir", "=", 
               RowBox[{"getCircumcenter", "@@", "medians"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"FaceForm", "@", "None"}], ",", 
                RowBox[{"PointSize", "@", "Large"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"cirClr", ",", 
                  RowBox[{"EdgeForm", "@", "cirClr"}], ",", 
                  RowBox[{"Polygon", "@", "equi"}], ",", 
                  RowBox[{"Polygon", "[", 
                   RowBox[{"flipX", "/@", "equi"}], "]"}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\"\<exc\>\"", "/.", "ptClrs"}], ",", 
                  RowBox[{"Point", "@", "xtpsCir"}], ",", "Dashed", ",", 
                  "Thick", ",", 
                  RowBox[{"Circle", "[", 
                   RowBox[{"xtpsCir", ",", 
                    RowBox[{"magn", "[", 
                    RowBox[{
                    RowBox[{"excTps", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "xtpsCir"}], "]"}]}],
                    "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}]}]}], "]"}],
            ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "quadrangles", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<quadcirx100\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"vtx", ",", "malts"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"vtx", "=", 
               RowBox[{"orderVertices", "[", 
                RowBox[{
                 RowBox[{"Prepend", "[", 
                  RowBox[{"orbit", ",", 
                   RowBox[{"\"\<antifeu\>\"", "/.", "notables"}]}], "]"}], 
                 ",", 
                 RowBox[{"\"\<mit\>\"", "/.", "notables"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"malts", "=", 
               RowBox[{"getMaltitudes", "[", "vtx", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"FaceForm", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\"\<cir\>\"", "/.", "ptClrs"}], ",", 
                   RowBox[{"Opacity", "@", ".1"}]}], "}"}]}], ",", 
                RowBox[{"EdgeForm", "@", 
                 RowBox[{"{", 
                  RowBox[{"Thick", ",", 
                   RowBox[{"\"\<cir\>\"", "/.", "ptClrs"}]}], "}"}]}], ",", 
                RowBox[{"Polygon", "@", "vtx"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"Dashed", ",", 
                  RowBox[{"\"\<cir\>\"", "/.", "ptClrs"}], ",", 
                  RowBox[{"Line", "/@", 
                   RowBox[{"malts", "[", "\"\<lines\>\"", "]"}]}]}], "}"}]}], 
               "}"}]}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<quadactpsx100\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"vtx", ",", "malts"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"vtx", "=", 
               RowBox[{"orderVertices", "[", 
                RowBox[{
                 RowBox[{"Prepend", "[", 
                  RowBox[{
                   RowBox[{"actData", "[", "\"\<tps\>\"", "]"}], ",", 
                   RowBox[{"\"\<antifeu\>\"", "/.", "notables"}]}], "]"}], 
                 ",", 
                 RowBox[{"actData", "[", "\"\<inc\>\"", "]"}]}], "]"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"malts", "=", 
               RowBox[{"getMaltitudes", "[", "vtx", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"FaceForm", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\"\<anticompl\>\"", "/.", "ptClrs"}], ",", 
                   RowBox[{"Opacity", "@", ".1"}]}], "}"}]}], ",", 
                RowBox[{"EdgeForm", "@", 
                 RowBox[{"{", 
                  RowBox[{"Thick", ",", 
                   RowBox[{"\"\<anticompl\>\"", "/.", "ptClrs"}]}], "}"}]}], 
                ",", 
                RowBox[{"Polygon", "@", "vtx"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"Dashed", ",", 
                  RowBox[{"\"\<anticompl\>\"", "/.", "ptClrs"}], ",", 
                  RowBox[{"Line", "/@", 
                   RowBox[{"malts", "[", "\"\<lines\>\"", "]"}]}]}], "}"}]}], 
               "}"}]}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "points", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<baricenter\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "@", "Large"}], ",", 
             RowBox[{"drawOneNotable", "[", 
              RowBox[{
               RowBox[{"\"\<bar\>\"", "/.", "ptClrs"}], ",", 
               RowBox[{"\"\<bar\>\"", "/.", "notables"}], ",", 
               "\"\<\!\(\*SubscriptBox[\(B\), \(2\)]\)\>\"", ",", "0", ",", 
               RowBox[{"-", "1.5"}], ",", "16"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<incenter\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "@", "Large"}], ",", 
             RowBox[{"drawOneNotable", "[", 
              RowBox[{
               RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}], ",", 
               RowBox[{"\"\<inc\>\"", "/.", "notables"}], ",", 
               "\"\<\!\(\*SubscriptBox[\(I\), \(1\)]\)\>\"", ",", "0", ",", 
               RowBox[{"-", "1.5"}], ",", "16"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<circumcenter\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "@", "Large"}], ",", 
             RowBox[{"drawOneNotable", "[", 
              RowBox[{
               RowBox[{"\"\<cir\>\"", "/.", "ptClrs"}], ",", 
               RowBox[{"\"\<cir\>\"", "/.", "notables"}], ",", 
               "\"\<\!\(\*SubscriptBox[\(C\), \(3\)]\)\>\"", ",", "0", ",", 
               RowBox[{"-", "1.5"}], ",", "16"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<orthocenter\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "@", "Large"}], ",", 
             RowBox[{"drawOneNotable", "[", 
              RowBox[{
               RowBox[{"\"\<ort\>\"", "/.", "ptClrs"}], ",", 
               RowBox[{"\"\<ort\>\"", "/.", "notables"}], ",", 
               "\"\<\!\(\*SubscriptBox[\(H\), \(4\)]\)\>\"", ",", "0", ",", 
               RowBox[{"-", "1.5"}], ",", "16"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<intouchpts\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "@", "Large"}], ",", 
             RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"\"\<tps\>\"", "/.", "notables"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<medians\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<med\>\"", "/.", "ptClrs"}], ",", 
             RowBox[{"PointSize", "@", "Medium"}], ",", 
             RowBox[{"Point", "@", "medians"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<nagel\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "@", "Large"}], ",", 
             RowBox[{"drawOneNotable", "[", 
              RowBox[{
               RowBox[{"\"\<nag\>\"", "/.", "ptClrs"}], ",", 
               RowBox[{"\"\<nag\>\"", "/.", "notables"}], ",", 
               "\"\<\!\(\*SubscriptBox[\(N\), \(8\)]\)\>\"", ",", "0", ",", 
               RowBox[{"-", "1.5"}], ",", "16"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<gergonne\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "@", "Large"}], ",", 
             RowBox[{"drawOneNotable", "[", 
              RowBox[{
               RowBox[{"\"\<ger\>\"", "/.", "ptClrs"}], ",", 
               RowBox[{"\"\<ger\>\"", "/.", "notables"}], ",", 
               "\"\<\!\(\*SubscriptBox[\(Ge\), \(7\)]\)\>\"", ",", "0", ",", 
               RowBox[{"-", "1.5"}], ",", "16"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<bevanpt\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "@", "Large"}], ",", 
             RowBox[{"drawOneNotable", "[", 
              RowBox[{
               RowBox[{"\"\<bev\>\"", "/.", "ptClrs"}], ",", "x40", ",", 
               "\"\<\!\(\*SubscriptBox[\(X\), \(40\)]\)\>\"", ",", "0", ",", 
               RowBox[{"-", "1.5"}], ",", "16"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<x142\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "@", "Large"}], ",", 
             RowBox[{"drawOneNotable", "[", 
              RowBox[{
               RowBox[{"\"\<dar\>\"", "/.", "ptClrs"}], ",", "x142", ",", 
               "\"\<\!\(\*SubscriptBox[\(T\), \(142\)]\)\>\"", ",", "0", ",", 
               RowBox[{"-", "1.5"}], ",", "16"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<x168\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "@", "Large"}], ",", 
             RowBox[{"drawOneNotable", "[", 
              RowBox[{
               RowBox[{"\"\<x88\>\"", "/.", "ptClrs"}], ",", "x168", ",", 
               "\"\<\!\(\*SubscriptBox[\(X\), \(168\)]\)\>\"", ",", "0", ",", 
               RowBox[{"-", "1.5"}], ",", "16"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<x88\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "@", "Large"}], ",", 
             RowBox[{"\"\<x88\>\"", "/.", "ptClrs"}], ",", 
             RowBox[{"Point", "@", "x88"}], ",", 
             RowBox[{"ellLabelTxt", "[", 
              RowBox[{"a", ",", "x88", ",", 
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(X\), \(88\)]\)\>\"", ",", "16"}], 
                "]"}], ",", ".1"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"not", " ", "implemented"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<x88complex\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"drawX88complex", "[", 
            RowBox[{
            "a", ",", "orbit", ",", "normals", ",", "notables", ",", "lgt"}], 
            "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], " ", ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<feuerbach\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
             RowBox[{"drawOneNotable", "[", 
              RowBox[{
               RowBox[{"\"\<feu\>\"", "/.", "ptClrs"}], ",", 
               RowBox[{"\"\<feu\>\"", "/.", "notables"}], ",", 
               "\"\<\!\(\*SubscriptBox[\(F\), \(11\)]\)\>\"", ",", "0", ",", 
               RowBox[{"-", "1.5"}], ",", "16"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<mittenpunkt\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\"\<mit\>\"", "/.", "ptClrs"}], ")"}], ",", 
             RowBox[{"PointSize", "@", "Large"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"\"\<mitten\>\"", "/.", "excCircleData"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"drawOneNotable", "[", 
              RowBox[{
               RowBox[{"\"\<mit\>\"", "/.", "ptClrs"}], ",", 
               RowBox[{"\"\<mitten\>\"", "/.", "excCircleData"}], ",", 
               "\"\<\!\(\*SubscriptBox[\(M\), \(9\)]\)\>\"", ",", "0", ",", 
               RowBox[{"-", "1.5"}], ",", "16"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"getShowable", "[", 
             RowBox[{"\"\<extouchpts\>\"", " ", ",", "showables"}], "]"}], "&&", 
            RowBox[{"getShowable", "[", 
             RowBox[{"\"\<excircles\>\"", ",", "showables"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\"\<exc\>\"", "/.", "ptClrs"}], ")"}], ",", "Dashed", 
             ",", "Thick", ",", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Line", "@", 
                 RowBox[{"{", 
                  RowBox[{"#1", ",", "#2"}], "}"}]}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"exc", ",", "excTps"}], "}"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<extouchptlabels\>\"", " ", ",", "showables"}], "]"}],
            ",", 
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"drawOneNotable", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\"\<exc\>\"", " ", "/.", "ptClrs"}], ")"}], ",", 
                "#1", ",", "#2"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"excTps", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\"\<t\>\"", ",", "#"}], "]"}], "&"}], "/@", 
                RowBox[{"{", 
                 RowBox[{"\"\<12\>\"", ",", "\"\<23\>\"", ",", "\"\<31\>\""}],
                  "}"}]}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<mittenfeet\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\"\<mit\>\"", "/.", "ptClrs"}], ")"}], ",", 
             RowBox[{"Thickness", "@", "Medium"}], ",", "Dashed", ",", 
             "\[IndentingNewLine]", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{"#1", ",", "#2"}], "}"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"exc", ",", 
                 RowBox[{"\"\<mittenFeet\>\"", "/.", "excCircleData"}]}], 
                "}"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<extouchpts\>\"", " ", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\"\<exc\>\"", "/.", "ptClrs"}], ")"}], ",", 
             RowBox[{"PointSize", "@", "Large"}], ",", 
             RowBox[{"Point", "@", "excTps"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<antifeuerbach\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"antifeu", ",", "nfeu"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"antifeu", "=", 
               RowBox[{"\"\<antifeu\>\"", "/.", "notables"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"nfeu", "=", 
               RowBox[{"norm", "@", 
                RowBox[{"ellGrad", "[", 
                 RowBox[{"a", ",", 
                  RowBox[{"Sequence", "@@", "antifeu"}]}], "]"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "@", "Large"}], ",", 
                RowBox[{"\"\<feu\>\"", "/.", "ptClrs"}], ",", 
                RowBox[{"Point", "@", "antifeu"}], ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{
                    "OverBar", "[", 
                    "\"\<\!\(\*SubscriptBox[\(F\), \(100\)]\)\>\"", "]"}], 
                    ",", "16"}], "]"}], ",", 
                  RowBox[{"ray", "[", 
                   RowBox[{"antifeu", ",", 
                    RowBox[{"-", "nfeu"}], ",", 
                    RowBox[{".5", "*", "lgt"}]}], "]"}]}], "]"}]}], "}"}]}]}],
             "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"getShowable", "[", 
            RowBox[{"\"\<darbouxpt\>\"", ",", "showables"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"Dashed", ",", 
             RowBox[{"PointSize", "@", "Large"}], ",", 
             RowBox[{"\"\<dar\>\"", "/.", "ptClrs"}], ",", 
             RowBox[{"drawOneNotable", "[", 
              RowBox[{
              "Red", ",", "x144", ",", 
               "\"\<\!\(\*SubscriptBox[\(D\), \(144\)]\)\>\"", ",", "0", ",", 
               RowBox[{"-", "1.5"}], ",", "16"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"hasMoses", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
             RowBox[{"showMosesPts", "[", 
              RowBox[{"a", ",", "mosesPts", ",", "\[IndentingNewLine]", 
               RowBox[{"drPeterMoses1k", "\[Rule]", 
                RowBox[{"mosesOpts", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"drPeterMosesAbove1k", "\[Rule]", 
                RowBox[{"mosesOpts", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"drPeterMosesAbove4k", "\[Rule]", 
                RowBox[{"mosesOpts", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"labelDist", "\[Rule]", ".1"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"toShowGr", ",", 
          RowBox[{"Graphics", "/@", 
           RowBox[{"Select", "[", 
            RowBox[{"toShowNeedsGr", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "@", "#"}], ">", "0"}], "&"}]}], "]"}]}]}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"AxesStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"RGBColor", "[", 
           RowBox[{".66", ",", ".66", ",", ".66"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{"pl", ",", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "20"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"{", "opt", "}"}], ",", 
          RowBox[{"Options", "@", "Plot"}]}], "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.765651052990243*^9, 3.765651065894415*^9}, {
   3.7656511155027046`*^9, 3.7656512446943164`*^9}, {3.7656513197750177`*^9, 
   3.7656513245031214`*^9}, {3.7656515029190984`*^9, 3.765651504110939*^9}, {
   3.7656515867746487`*^9, 3.765651618919859*^9}, {3.765651651638335*^9, 
   3.7656516549823885`*^9}, 3.7656517133017836`*^9, {3.7656532831640773`*^9, 
   3.7656532899655857`*^9}, {3.7656534907307367`*^9, 
   3.7656535009234705`*^9}, {3.7656536647090964`*^9, 
   3.7656536656346483`*^9}, {3.7657056527360945`*^9, 3.76570567303776*^9}, {
   3.7657068007278066`*^9, 3.7657068356296053`*^9}, {3.7657070149568567`*^9, 
   3.765707147932171*^9}, {3.765707195685401*^9, 3.7657072447964516`*^9}, {
   3.7657073299722066`*^9, 3.765707330644409*^9}, {3.765707366212261*^9, 
   3.765707381700246*^9}, {3.7657089343775654`*^9, 3.7657089544738417`*^9}, 
   3.7658022045964036`*^9, {3.765921670773984*^9, 3.765921789647607*^9}, {
   3.7659668543613367`*^9, 3.765966992337993*^9}, {3.7659671895170174`*^9, 
   3.765967373132802*^9}, {3.765967404914792*^9, 3.765967473340702*^9}, {
   3.765968287676338*^9, 3.7659684335704603`*^9}, {3.7659684918177075`*^9, 
   3.7659684936208825`*^9}, 3.765968537605605*^9, {3.7659685760919714`*^9, 
   3.765968763149073*^9}, {3.7659688528610535`*^9, 3.765969009684845*^9}, {
   3.765969048014492*^9, 3.765969180227496*^9}, {3.765969213863619*^9, 
   3.7659693422175703`*^9}, {3.765969372555425*^9, 3.76596941030604*^9}, {
   3.7659704204664536`*^9, 3.7659705143544507`*^9}, {3.7659709167867794`*^9, 
   3.7659709275679817`*^9}, 3.7659709620509243`*^9, {3.7659710010845184`*^9, 
   3.765971010210108*^9}, {3.765971046184887*^9, 3.7659710964555864`*^9}, {
   3.766048101488912*^9, 3.7660481020234976`*^9}, {3.7660482627998133`*^9, 
   3.766048266536543*^9}, {3.7660483013044777`*^9, 3.7660483499281855`*^9}, {
   3.7660487514084415`*^9, 3.7660488336813602`*^9}, {3.766048923086838*^9, 
   3.7660490918540154`*^9}, 3.7660491235262384`*^9, {3.7660491801616344`*^9, 
   3.7660491829421415`*^9}, {3.7660492917834525`*^9, 3.766049322197302*^9}, {
   3.76604936328821*^9, 3.766049426423747*^9}, {3.7660495063270054`*^9, 
   3.766049526494584*^9}, {3.7660495617429695`*^9, 3.766049570604162*^9}, {
   3.7660496096881657`*^9, 3.766049629032171*^9}, {3.766049742832179*^9, 
   3.7660497465920315`*^9}, {3.766050859173282*^9, 3.7660508595416107`*^9}, {
   3.7660518440295544`*^9, 3.766051892461007*^9}, {3.766051943683772*^9, 
   3.766052148628462*^9}, {3.766052225003973*^9, 3.766052246947422*^9}, {
   3.7660524073720083`*^9, 3.7660524712218943`*^9}, {3.7660525103081017`*^9, 
   3.766052515373473*^9}, {3.766052553118491*^9, 3.766052559405471*^9}, {
   3.7660526140471296`*^9, 3.7660526820874577`*^9}, {3.7660527153492208`*^9, 
   3.766052757045904*^9}, {3.766054226745352*^9, 3.7660542607019672`*^9}, {
   3.766054291336954*^9, 3.7660543416021633`*^9}, {3.766072951592512*^9, 
   3.766072977146017*^9}, {3.766073050475721*^9, 3.7660730745720625`*^9}, {
   3.7660731114583564`*^9, 3.7660731322098613`*^9}, {3.766073470692111*^9, 
   3.7660735002732058`*^9}, {3.7660738527465935`*^9, 
   3.7660739138982005`*^9}, {3.7660739453381796`*^9, 
   3.7660739793286657`*^9}, {3.766074107249628*^9, 3.766074154327441*^9}, {
   3.7660742182253036`*^9, 3.7660742491311655`*^9}, {3.76608978592638*^9, 
   3.76608979398139*^9}, {3.7660898266370535`*^9, 3.766089881189867*^9}, {
   3.7660899171003237`*^9, 3.7660899586831164`*^9}, {3.766135951632979*^9, 
   3.7661359534162483`*^9}, {3.7661365643665624`*^9, 
   3.7661365653499575`*^9}, {3.766136650980749*^9, 3.7661366515811725`*^9}, {
   3.7661368150125284`*^9, 3.7661368267585835`*^9}, {3.7662367974295344`*^9, 
   3.7662368434149218`*^9}, {3.766236923526735*^9, 3.766236951679056*^9}, {
   3.7662370662247763`*^9, 3.7662371080973606`*^9}, {3.766237287655397*^9, 
   3.7662373508771152`*^9}, {3.766238977312976*^9, 3.7662390266656537`*^9}, {
   3.766239064593504*^9, 3.7662390903682804`*^9}, {3.7662397146489515`*^9, 
   3.7662397431687*^9}, {3.7662397973129406`*^9, 3.7662397974745417`*^9}, {
   3.766240290921363*^9, 3.7662406536732283`*^9}, {3.7662406897527666`*^9, 
   3.7662407822716484`*^9}, {3.766240920951659*^9, 3.7662409240384073`*^9}, {
   3.766240956086722*^9, 3.7662410345751925`*^9}, {3.766241279911419*^9, 
   3.7662412844313335`*^9}, {3.7662416310725193`*^9, 
   3.7662418398013577`*^9}, {3.766241915641573*^9, 3.766242231346077*^9}, {
   3.7662422716423407`*^9, 3.766242320188942*^9}, {3.766242353556732*^9, 
   3.76624236167509*^9}, {3.766242423899725*^9, 3.7662425564663*^9}, {
   3.7662425876360493`*^9, 3.7662427716924615`*^9}, {3.76624281300329*^9, 
   3.766242935682083*^9}, {3.7662432265383587`*^9, 3.76624326095994*^9}, {
   3.7662438785735197`*^9, 3.7662439352906103`*^9}, {3.766244056216386*^9, 
   3.7662440611156816`*^9}, {3.7662446202013035`*^9, 
   3.7662447219891696`*^9}, {3.7662450081254177`*^9, 3.76624502412271*^9}, {
   3.766246134131422*^9, 3.766246196489866*^9}, {3.7662462323489923`*^9, 
   3.7662463379409523`*^9}, {3.766246471206139*^9, 3.76624648273132*^9}, {
   3.7662479926460395`*^9, 3.7662480632208548`*^9}, 3.766253188602934*^9, {
   3.7662536957438316`*^9, 3.7662537831479254`*^9}, {3.7662710597519155`*^9, 
   3.766271134276293*^9}, {3.766271167371709*^9, 3.766271167489394*^9}, {
   3.7662712008125362`*^9, 3.766271204698176*^9}, {3.7663427423995743`*^9, 
   3.766342818412242*^9}, {3.7663428981914377`*^9, 3.766342921156316*^9}, {
   3.7663429664003515`*^9, 3.7663430510085964`*^9}, {3.766343213381035*^9, 
   3.766343253285292*^9}, {3.766343434400993*^9, 3.766343445590727*^9}, {
   3.7663435791808834`*^9, 3.7663435885730305`*^9}, {3.766343634550398*^9, 
   3.766343638756197*^9}, {3.766344033766899*^9, 3.766344075632497*^9}, {
   3.766344305848033*^9, 3.766344310336006*^9}, {3.766347545987011*^9, 
   3.7663476076241035`*^9}, {3.7663945257980223`*^9, 
   3.7663945387683153`*^9}, {3.7663955403938417`*^9, 
   3.7663956123280334`*^9}, {3.766395757311022*^9, 3.7663957600060587`*^9}, 
   3.766395896669898*^9, {3.7663972470917873`*^9, 3.7663972735801196`*^9}, {
   3.7663973102590265`*^9, 3.766397316287908*^9}, {3.766397719495999*^9, 
   3.766397730903469*^9}, {3.7663995113448095`*^9, 3.7663995664521203`*^9}, {
   3.7663996185906935`*^9, 3.766399650214523*^9}, {3.7663997070864496`*^9, 
   3.766399717527564*^9}, {3.7663997874406414`*^9, 3.766399796176591*^9}, {
   3.7663998941191053`*^9, 3.766399894494075*^9}, {3.7664000318045416`*^9, 
   3.7664001262452955`*^9}, {3.7664002109897203`*^9, 
   3.7664002180279026`*^9}, {3.7664002618048334`*^9, 3.766400266397596*^9}, {
   3.7664005306677327`*^9, 3.766400530835285*^9}, {3.7664006071443872`*^9, 
   3.766400616912664*^9}, {3.7664012457287073`*^9, 3.7664012532246385`*^9}, {
   3.7664331414629164`*^9, 3.7664331826856117`*^9}, {3.766479876917915*^9, 
   3.766479888431103*^9}, {3.766480012678256*^9, 3.766480072321228*^9}, 
   3.76648178554387*^9, {3.7664820835428944`*^9, 3.7664820898462334`*^9}, {
   3.766565404653001*^9, 3.766565407387699*^9}, {3.7665666396119204`*^9, 
   3.7665666423785295`*^9}, {3.766566950110381*^9, 3.7665669573622875`*^9}, {
   3.766619454406767*^9, 3.766619474175907*^9}, {3.7666196095505934`*^9, 
   3.766619634287921*^9}, {3.7666199977027445`*^9, 3.766620000127262*^9}, {
   3.766620074108283*^9, 3.7666200784227753`*^9}, {3.7666202370497627`*^9, 
   3.7666203030650897`*^9}, {3.7666203371120615`*^9, 3.766620343697298*^9}, {
   3.766930391650193*^9, 3.76693042104324*^9}, {3.7669676890157785`*^9, 
   3.7669677398274946`*^9}, {3.766967778175906*^9, 3.7669678009380107`*^9}, {
   3.7669681101308327`*^9, 3.766968201449109*^9}, {3.7669682639620085`*^9, 
   3.7669682641615067`*^9}, {3.7669683328038483`*^9, 
   3.7669683588661556`*^9}, {3.7669684088105497`*^9, 3.766968410538926*^9}, {
   3.7669684842418156`*^9, 3.766968530876521*^9}, {3.766968661425312*^9, 
   3.766968663281351*^9}, {3.766969453392003*^9, 3.7669695883440757`*^9}, {
   3.76696968428685*^9, 3.7669696874000273`*^9}, {3.7669697899586725`*^9, 
   3.766969899638835*^9}, {3.7669699321309147`*^9, 3.7669699350241737`*^9}, {
   3.767000460519002*^9, 3.7670006462782893`*^9}, {3.767000676741768*^9, 
   3.767000778477416*^9}, 3.767000812643027*^9, {3.7670008640825768`*^9, 
   3.7670009471020374`*^9}, 3.7670009806204014`*^9, {3.7670010169791346`*^9, 
   3.7670010644724803`*^9}, {3.76700117952326*^9, 3.76700126796395*^9}, {
   3.76700129816415*^9, 3.767001327420191*^9}, {3.7670013832478456`*^9, 
   3.767001385032073*^9}, {3.7670014464578094`*^9, 3.7670014531726446`*^9}, {
   3.7670015948118114`*^9, 3.767001608553872*^9}, {3.767002385122675*^9, 
   3.767002424202472*^9}, {3.76700307317811*^9, 3.767003126145499*^9}, {
   3.7670031710812902`*^9, 3.7670032684157376`*^9}, {3.767003300682448*^9, 
   3.7670033013376956`*^9}, {3.767003331860632*^9, 3.7670033530898485`*^9}, {
   3.7670046969335876`*^9, 3.76700473583208*^9}, {3.76700586542029*^9, 
   3.767005895660369*^9}, {3.7670327874902377`*^9, 3.767032813634942*^9}, {
   3.767032847773617*^9, 3.767032882985518*^9}, {3.767032937433862*^9, 
   3.767033024923518*^9}, {3.767033055819916*^9, 3.7670330871285863`*^9}, {
   3.7670331667537785`*^9, 3.767033174699215*^9}, {3.767033394180143*^9, 
   3.7670334070197477`*^9}, {3.7670361270159845`*^9, 
   3.7670361684531293`*^9}, {3.7670362533746204`*^9, 3.767036294653988*^9}, {
   3.7670363594256763`*^9, 3.767036455861298*^9}, {3.7670365202789373`*^9, 
   3.7670365646859493`*^9}, 3.767036596527796*^9, {3.7670380001303816`*^9, 
   3.7670380942438755`*^9}, {3.7670381746607804`*^9, 3.767038197885067*^9}, {
   3.7670382555331125`*^9, 3.767038290435738*^9}, {3.7672605830807257`*^9, 
   3.7672606228390055`*^9}, {3.7672609642480936`*^9, 
   3.7672609768085256`*^9}, {3.7672610072809925`*^9, 
   3.7672610980235853`*^9}, {3.76726116026408*^9, 3.76726121091975*^9}, {
   3.7672612410013146`*^9, 3.7672612559204125`*^9}, {3.767261302816948*^9, 
   3.7672613090413322`*^9}, {3.7672617262099113`*^9, 3.767261786829341*^9}, {
   3.7672618595428514`*^9, 3.7672619635584855`*^9}, {3.7672622037175674`*^9, 
   3.76726223254768*^9}, {3.767262277806652*^9, 3.767262298027568*^9}, {
   3.767262656328616*^9, 3.7672627908127337`*^9}, 3.7672633548837013`*^9, {
   3.767284239815999*^9, 3.767284271691972*^9}, {3.7672843354209614`*^9, 
   3.767284351897889*^9}, {3.767355887457045*^9, 3.7673559949123526`*^9}, {
   3.767356053173552*^9, 3.7673560649894185`*^9}, {3.7673588853248005`*^9, 
   3.7673588914339504`*^9}, {3.7673607586610274`*^9, 
   3.7673608716217284`*^9}, {3.7691266583929405`*^9, 
   3.7691267665981393`*^9}, {3.770133554620427*^9, 3.77013356193188*^9}, {
   3.770133639547896*^9, 3.7701336676470184`*^9}, {3.770133868518669*^9, 
   3.770133871116722*^9}, {3.77013391114896*^9, 3.7701339122270455`*^9}, {
   3.770133968199526*^9, 3.7701339690522785`*^9}, {3.7701341546114407`*^9, 
   3.7701341574528446`*^9}, {3.7701341883394766`*^9, 
   3.7701343345474515`*^9}, {3.770134555176484*^9, 3.7701345600454655`*^9}, {
   3.7701346052527723`*^9, 3.770134606023711*^9}, {3.770134663635723*^9, 
   3.77013472264981*^9}, 3.7701347773715115`*^9, {3.770135034262191*^9, 
   3.770135034836654*^9}, {3.7701350836969028`*^9, 3.7701350893258657`*^9}, {
   3.770138109866692*^9, 3.7701382275531764`*^9}, {3.770139274265813*^9, 
   3.7701392789624643`*^9}, {3.770141244209671*^9, 3.7701412477536097`*^9}, {
   3.770142974892309*^9, 3.770143006499158*^9}, {3.7701430631017075`*^9, 
   3.7701430750417852`*^9}, {3.7701431369789166`*^9, 
   3.7701431382256107`*^9}, {3.7701432860996103`*^9, 3.770143317377984*^9}, {
   3.770388452609413*^9, 3.7703884630327225`*^9}, {3.770388540577094*^9, 
   3.7703886098492203`*^9}, {3.7703887528261995`*^9, 
   3.7703888521989098`*^9}, {3.7703888984638042`*^9, 3.770388949132103*^9}, {
   3.770388995703874*^9, 3.770389013730641*^9}, {3.770389430273741*^9, 
   3.7703894347308197`*^9}, {3.7703894781745796`*^9, 3.770389482396492*^9}, {
   3.7703895881421547`*^9, 3.7703896391003027`*^9}, {3.770389673572414*^9, 
   3.770389683691748*^9}, {3.7703897581969953`*^9, 3.7703898193158674`*^9}, {
   3.7703899176676817`*^9, 3.77038991907401*^9}, {3.770390027634751*^9, 
   3.770390254339101*^9}, {3.7703902930247393`*^9, 3.770390314034292*^9}, {
   3.7703904510189123`*^9, 3.7703904526973977`*^9}, {3.770390539715702*^9, 
   3.7703905408756013`*^9}, {3.7703908388789964`*^9, 3.770390940066781*^9}, {
   3.7703910831468935`*^9, 3.7703911732006955`*^9}, {3.770391215155512*^9, 
   3.7703912497230916`*^9}, {3.770392110394878*^9, 3.770392114772175*^9}, {
   3.7703925652186136`*^9, 3.7703925677298865`*^9}, {3.770392704395508*^9, 
   3.7703927154130507`*^9}, 3.770392838171526*^9, {3.7703929443775454`*^9, 
   3.770393098825637*^9}, {3.7703931404762793`*^9, 3.7703931436741056`*^9}, {
   3.7703931899035063`*^9, 3.7703931976926813`*^9}, {3.77039547744053*^9, 
   3.770395508031411*^9}, {3.770398374833867*^9, 3.770398375023388*^9}, {
   3.7703987016538515`*^9, 3.770398737725402*^9}, {3.770426964617763*^9, 
   3.7704270420974493`*^9}, {3.770453811802699*^9, 3.7704538195126686`*^9}, {
   3.7704538993735147`*^9, 3.770453902886155*^9}, {3.77045396416173*^9, 
   3.770454029186742*^9}, {3.7704542741197605`*^9, 3.7704543075063305`*^9}, {
   3.7704543546255865`*^9, 3.770454357911804*^9}, {3.770454798465709*^9, 
   3.7704548162156916`*^9}, {3.7704557722177444`*^9, 3.770455792161446*^9}, {
   3.7704558772806683`*^9, 3.7704558972099085`*^9}, {3.770456002273999*^9, 
   3.770456035514166*^9}, {3.770456405956788*^9, 3.770456407682205*^9}, {
   3.770481330897201*^9, 3.7704815394114976`*^9}, {3.770481689102536*^9, 
   3.7704816978830986`*^9}, {3.7704817391099205`*^9, 3.770481742142787*^9}, {
   3.770481802677294*^9, 3.7704818220917807`*^9}, 3.770586095661201*^9, {
   3.770586145138941*^9, 3.7705861455757732`*^9}, {3.7705861784569283`*^9, 
   3.770586292662018*^9}, {3.7705865037433205`*^9, 3.7705865216384964`*^9}, {
   3.7705867355182314`*^9, 3.770586762819605*^9}, {3.7705870126932383`*^9, 
   3.7705870176538005`*^9}, {3.77058711449675*^9, 3.77058715121181*^9}, {
   3.7705871841625605`*^9, 3.7705871859537735`*^9}, {3.770587247645917*^9, 
   3.770587349639551*^9}, {3.770587398567792*^9, 3.7705874016561694`*^9}, {
   3.7705874354488297`*^9, 3.770587444902899*^9}, {3.7705875296194973`*^9, 
   3.770587530370489*^9}, {3.7705876494248357`*^9, 3.770587811554045*^9}, {
   3.7705879002495403`*^9, 3.770587915575472*^9}, {3.7705880562083497`*^9, 
   3.770588084474779*^9}, {3.770588164081982*^9, 3.7705881719130535`*^9}, {
   3.7705949684900723`*^9, 3.7705949792729673`*^9}, {3.7705950441652627`*^9, 
   3.770595049539899*^9}, {3.7705962271617684`*^9, 3.7705962321076746`*^9}, {
   3.7705968375415506`*^9, 3.7705968429221725`*^9}, {3.7706316218132734`*^9, 
   3.7706316733381*^9}, {3.7706322168653054`*^9, 3.770632279670025*^9}, {
   3.770632317278613*^9, 3.7706323326346045`*^9}, {3.770632531450846*^9, 
   3.7706328319621754`*^9}, {3.7706328745114665`*^9, 
   3.7706329225997024`*^9}, {3.7706329541304398`*^9, 3.7706329688052187`*^9}, 
   3.7706333430949883`*^9, {3.77063380282371*^9, 3.7706338554467907`*^9}, {
   3.7706345080933695`*^9, 3.770634571271369*^9}, {3.7706346273305297`*^9, 
   3.7706347332303896`*^9}, {3.770634897535118*^9, 3.7706349571593204`*^9}, {
   3.7706350813903837`*^9, 3.770635090312567*^9}, {3.770635172663864*^9, 
   3.7706351780135946`*^9}, {3.7706352163839025`*^9, 
   3.7706352247711887`*^9}, {3.770635758146103*^9, 3.770635828655472*^9}, {
   3.770635889736794*^9, 3.7706359433355303`*^9}, {3.77063600313964*^9, 
   3.770636006487691*^9}, {3.7706360584142313`*^9, 3.770636061854039*^9}, {
   3.7706361445196548`*^9, 3.7706361866076984`*^9}, {3.7706363106026473`*^9, 
   3.770636310937752*^9}, {3.770636417872287*^9, 3.7706364181036696`*^9}, {
   3.770636473952589*^9, 3.770636475155966*^9}, {3.7706535039031305`*^9, 
   3.770653553327861*^9}, {3.770654134569236*^9, 3.7706541839370165`*^9}, {
   3.7706543531319914`*^9, 3.7706543620730963`*^9}, {3.7706550905035963`*^9, 
   3.7706551374419928`*^9}, {3.7706552334824767`*^9, 3.770655233688895*^9}, {
   3.770655858524974*^9, 3.7706558820610447`*^9}, {3.770656060354642*^9, 
   3.770656081153779*^9}, {3.770656150981889*^9, 3.7706561517967043`*^9}, {
   3.770656866450717*^9, 3.7706569694102955`*^9}, 3.7706570022026587`*^9, {
   3.7706578377780905`*^9, 3.7706578794150095`*^9}, {3.7706579515406065`*^9, 
   3.7706579616686115`*^9}, {3.770658071565894*^9, 3.7706580720376296`*^9}, {
   3.770659673886231*^9, 3.7706597696705465`*^9}, {3.7706599252718678`*^9, 
   3.77065993024757*^9}, {3.770660028986679*^9, 3.7706600336472387`*^9}, {
   3.7706633428104672`*^9, 3.7706633711487365`*^9}, {3.7706634107538934`*^9, 
   3.770663658093623*^9}, {3.7706637484164534`*^9, 3.7706637591258326`*^9}, {
   3.770663796958246*^9, 3.7706638010602765`*^9}, {3.7707198383665466`*^9, 
   3.770719923967004*^9}, {3.770720023751397*^9, 3.7707200908406506`*^9}, {
   3.770720121888604*^9, 3.770720265280582*^9}, 3.7707202982659383`*^9, {
   3.770720352304575*^9, 3.770720374368234*^9}, {3.7707254197548447`*^9, 
   3.770725520365288*^9}, {3.7707255702806864`*^9, 3.770725681512719*^9}, {
   3.770725748321204*^9, 3.770725771495272*^9}, {3.7707273527866697`*^9, 
   3.7707274022651343`*^9}, {3.770727435568307*^9, 3.7707274545572577`*^9}, {
   3.770727489651469*^9, 3.7707274916182423`*^9}, {3.7707276444432616`*^9, 
   3.7707276456730027`*^9}, {3.770727844582646*^9, 3.770727845017483*^9}, {
   3.770727880841773*^9, 3.770727882128334*^9}, {3.7707280246207027`*^9, 
   3.770728031286886*^9}, {3.770728063672308*^9, 3.7707281099968057`*^9}, {
   3.770728155891094*^9, 3.7707282153403215`*^9}, {3.7707288638047876`*^9, 
   3.7707289703634653`*^9}, {3.7707290139488773`*^9, 
   3.7707290141394014`*^9}, {3.7707290787327414`*^9, 3.770729090258909*^9}, {
   3.7707317153946834`*^9, 3.7707318488470573`*^9}, {3.7707320688138733`*^9, 
   3.7707321199412003`*^9}, {3.7707322260335083`*^9, 3.770732248703698*^9}, {
   3.7707323854193535`*^9, 3.7707324928857093`*^9}, {3.770732529591612*^9, 
   3.7707325682832174`*^9}, {3.7707411523897057`*^9, 
   3.7707411552919493`*^9}, {3.7707411858712263`*^9, 3.770741198937372*^9}, {
   3.7707415062143955`*^9, 3.7707415454846334`*^9}, {3.770741600555456*^9, 
   3.770741608009508*^9}, 3.770741737163618*^9, {3.770741820318494*^9, 
   3.770741821035577*^9}, {3.7707421088367853`*^9, 3.7707421126914835`*^9}, {
   3.7707430361515512`*^9, 3.7707432412454586`*^9}, {3.770743271398903*^9, 
   3.770743299204592*^9}, {3.770743336261277*^9, 3.770743345502981*^9}, {
   3.7707434239830875`*^9, 3.7707434248956385`*^9}, {3.770743464854864*^9, 
   3.7707436456689835`*^9}, {3.7707436888950186`*^9, 
   3.7707437587586517`*^9}, {3.7707438060702834`*^9, 
   3.7707438364050655`*^9}, {3.770744388838744*^9, 3.77074440912626*^9}, {
   3.770744690210823*^9, 3.7707446926622667`*^9}, {3.770744743016053*^9, 
   3.770744744542944*^9}, {3.770744778353621*^9, 3.770744783981546*^9}, {
   3.770745085995146*^9, 3.770745086822933*^9}, {3.7707451414958515`*^9, 
   3.770745171080888*^9}, {3.7707452433221445`*^9, 3.7707452435362763`*^9}, {
   3.7707452997611284`*^9, 3.770745301888215*^9}, {3.770745518141287*^9, 
   3.770745519900814*^9}, {3.7707460981720266`*^9, 3.7707462546987095`*^9}, {
   3.7707462859252295`*^9, 3.770746296337434*^9}, {3.7707463865786905`*^9, 
   3.7707463879302173`*^9}, {3.770746433700184*^9, 3.7707464761542683`*^9}, {
   3.770746717709343*^9, 3.7707467714745874`*^9}, {3.770746870885248*^9, 
   3.770746872153829*^9}, {3.770747968090904*^9, 3.7707479686085486`*^9}, {
   3.770800757755581*^9, 3.7708007583150616`*^9}, {3.770844272106303*^9, 
   3.770844272119258*^9}, {3.770844585306493*^9, 3.7708446610443125`*^9}, {
   3.7708447414747615`*^9, 3.7708447427892194`*^9}, {3.770844859859709*^9, 
   3.7708448654048595`*^9}, {3.7708460716775484`*^9, 
   3.7708460861269326`*^9}, {3.7708462006679196`*^9, 3.770846207255285*^9}, {
   3.770846389319172*^9, 3.7708463899674077`*^9}, {3.7708967959844007`*^9, 
   3.770896817313448*^9}, {3.7708971474264216`*^9, 3.7708971549862185`*^9}, {
   3.7708972256032877`*^9, 3.7708972541216736`*^9}, {3.7708973852743115`*^9, 
   3.7708973856184206`*^9}, {3.7708975059347105`*^9, 3.770897506930048*^9}, {
   3.77089763377767*^9, 3.7708976344249396`*^9}, {3.770900177082766*^9, 
   3.770900291611564*^9}, {3.7709003448673267`*^9, 3.770900413852123*^9}, {
   3.770900445802509*^9, 3.7709004886440153`*^9}, {3.770900521614006*^9, 
   3.7709006314039993`*^9}, {3.770900988600644*^9, 3.770900997964625*^9}, {
   3.77090108239983*^9, 3.7709011089344425`*^9}, {3.770901248479422*^9, 
   3.770901248624036*^9}, {3.7709026032645235`*^9, 3.770902712208892*^9}, {
   3.7709027648891735`*^9, 3.7709028376496954`*^9}, {3.771235270410266*^9, 
   3.771235291162692*^9}, {3.771235508220209*^9, 3.771235544923122*^9}, {
   3.7712355784719467`*^9, 3.77123558532164*^9}, {3.7712375626684456`*^9, 
   3.7712376881613054`*^9}, {3.7712382856573544`*^9, 3.771238325504981*^9}, {
   3.771238596615554*^9, 3.7712386032312794`*^9}, {3.7712388257741165`*^9, 
   3.771238842383751*^9}, {3.771239421527142*^9, 3.771239496224286*^9}, {
   3.771240212200905*^9, 3.7712402125768995`*^9}, {3.7712404483195877`*^9, 
   3.7712404784809837`*^9}, {3.771240534754629*^9, 3.771240545730296*^9}, {
   3.771240581791048*^9, 3.77124058416706*^9}, {3.771240639981479*^9, 
   3.771240642104833*^9}, {3.771240704965066*^9, 3.771240709527873*^9}, {
   3.771240754728144*^9, 3.77124075592494*^9}, {3.7712409891519637`*^9, 
   3.7712410502082415`*^9}, {3.771241094449012*^9, 3.771241272393992*^9}, {
   3.7712420785980597`*^9, 3.771242347822198*^9}, {3.7712423888934326`*^9, 
   3.771242426533825*^9}, {3.7712429476685066`*^9, 3.771242968741935*^9}, {
   3.7712430309192863`*^9, 3.771243045830858*^9}, {3.771243469902028*^9, 
   3.771243474493078*^9}, {3.771243685014263*^9, 3.771243686365652*^9}, {
   3.7712437481054163`*^9, 3.7712437546169844`*^9}, {3.771243930887893*^9, 
   3.771243944374697*^9}, {3.7712664565650053`*^9, 3.771266486299503*^9}, {
   3.771266782086341*^9, 3.771266816571139*^9}, {3.7712670085736804`*^9, 
   3.771267078878484*^9}, {3.771274456086442*^9, 3.771274484926366*^9}, {
   3.7712774059220076`*^9, 3.771277423419219*^9}, {3.771278680045989*^9, 
   3.7712786851483536`*^9}, {3.771278761757927*^9, 3.771278816876418*^9}, {
   3.7712791259663954`*^9, 3.771279181072042*^9}, {3.7712792394881907`*^9, 
   3.771279253077551*^9}, {3.771280591728795*^9, 3.7712805919930887`*^9}, {
   3.7713197594367013`*^9, 3.7713198114255295`*^9}, {3.7713199060356927`*^9, 
   3.771319937060596*^9}, {3.7713200544679394`*^9, 3.7713200671731524`*^9}, {
   3.771320359559901*^9, 3.7713203607736588`*^9}, {3.771346531346983*^9, 
   3.7713465315392447`*^9}},
 ExpressionUUID -> "b4464bae-66c9-4ef1-8d71-d06221103933"],

Cell["\<\
known results, verified below: incenter = orthocenter (ex - triangle), and \
circumcenter = npc (ex - triangle)
http://mathworld.wolfram.com/ExcentralTriangle.html\
\>", "Text",
 CellChangeTimes->{{3.7659712627631407`*^9, 3.7659713186065936`*^9}},
 ExpressionUUID -> "0e4c855d-796c-4614-a858-0d4b5223e0c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "@", "drawSimT"}]], "Input",
 CellChangeTimes->{{3.770138551947482*^9, 3.7701385573540325`*^9}},
 ExpressionUUID -> "cab9981a-58ee-4073-96bf-e27c904df8c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
   RowBox[{"labExtra", "\[Rule]", "\<\"\"\>"}], ",", 
   RowBox[{"showablesOpt", "\[Rule]", 
    RowBox[{"{", "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7701385577320175`*^9, 3.770144782137434*^9, 3.7701566180486016`*^9, 
   3.7701578397648935`*^9, 3.7703710907190065`*^9, 3.7704174963052535`*^9, 
   3.7704538484882884`*^9, 3.7704815114087253`*^9, 3.7705853868524075`*^9, 
   3.77063120126632*^9, 3.7706661626747894`*^9, 3.7708011070610476`*^9, 
   3.770809274585647*^9, 3.7708093991343613`*^9, 3.7708323049332514`*^9, 
   3.770843348338668*^9, {3.7708924428438425`*^9, 3.7708924689484496`*^9}, 
   3.7708965137534456`*^9, 3.7709360171437225`*^9, 3.7711530213625326`*^9, 
   3.7712400185679317`*^9, 3.7712661631089306`*^9, 3.771354994747889*^9, 
   3.7713559922102056`*^9},
 ExpressionUUID -> "817324b5-b921-435d-8bca-4798b800042c"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "movieFrame"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "movieFrame"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"labExtra", "->", "\"\<\>\""}], ",", 
     RowBox[{"showablesOpt", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "800"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"movieFrame", "[", 
    RowBox[{
    "a_", ",", "t_", ",", "ellPlot_", ",", "causticPlot_", ",", "loci_", ",", 
     "excenterLims_", ",", "clip_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "prX", ",", "prY", ",", "maxX", ",", "maxY", ",", "maxYort", ",", 
       "actMax"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"maxX", "=", 
       RowBox[{"Round", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"excenterLims", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", ".1"}], ",", ".1"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"maxYort", "=", 
       RowBox[{"Round", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"orthocenterMaxY", "[", 
           RowBox[{"a", ",", 
            RowBox[{"\[Pi]", "/", "1.2"}]}], "]"}], "+", ".1"}], ",", ".1"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxY", "=", 
       RowBox[{"Round", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"excenterLims", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "+", ".1"}], ",", ".1"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"{", "opts", "}"}], ",", 
           RowBox[{"Options", "@", "Show"}]}], "]"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"actMax", "=", 
       RowBox[{"anticomplMax", "[", 
        RowBox[{"a", ",", "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"prX", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{"clip", ",", "\[IndentingNewLine]", "\"\<anticompl\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"actMax", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"actMax", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "\"\<anticompl2\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"actMax", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"actMax", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "\"\<antiorthic\>\"", ",", 
         RowBox[{"3", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"actMax", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"actMax", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", "\"\<antiorthic2\>\"", ",", 
         RowBox[{"2", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"actMax", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"actMax", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", "\"\<antiorthic3\>\"", ",", 
         RowBox[{"3", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"actMax", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"actMax", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", "_", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "maxX"}], ",", "maxX"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"prY", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{"clip", ",", "\[IndentingNewLine]", "\"\<ell\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
         "\[IndentingNewLine]", "\"\<ort\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "maxYort"}], ",", "maxYort"}], "}"}], ",", 
         "\[IndentingNewLine]", "\"\<ortHalf\>\"", ",", 
         RowBox[{".5", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"1.1", "+", "maxYort"}], ")"}]}], ",", 
            RowBox[{"(", 
             RowBox[{"1.1", "+", "maxYort"}], ")"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", "\"\<excHalf\>\"", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "maxY"}], ",", "maxY"}], "}"}], "*", ".5"}], ",", 
         "\[IndentingNewLine]", "\"\<anticompl\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"actMax", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{"actMax", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "\"\<anticompl2\>\"", ",", 
         RowBox[{"1.5", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"actMax", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"actMax", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", "\"\<antiorthic\>\"", ",", 
         RowBox[{"1.5", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"actMax", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"actMax", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", "\"\<antiorthic2\>\"", ",", 
         RowBox[{"2", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"actMax", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"actMax", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", "\"\<antiorthic3\>\"", ",", 
         RowBox[{"3", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"actMax", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"actMax", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", "_", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "maxY"}], ",", "maxY"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"drawSimT", "[", 
         RowBox[{
         "a", ",", "t", ",", "ellPlot", ",", "causticPlot", ",", "loci", ",", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "opts", "}"}], ",", 
            RowBox[{"Options", "@", "drawSimT"}]}], "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"prX", ",", "prY"}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"{", "opts", "}"}], ",", 
          RowBox[{"Options", "@", "Plot"}]}], "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.766252160852866*^9, 3.7662522144997354`*^9}, {
   3.7662522585529833`*^9, 3.766252388613456*^9}, {3.7662524387583876`*^9, 
   3.7662524974299126`*^9}, {3.766252736063077*^9, 3.766252759670493*^9}, {
   3.7663975513494687`*^9, 3.766397560317585*^9}, {3.766828892184081*^9, 
   3.766828892191063*^9}, {3.766828960955616*^9, 3.7668289662115636`*^9}, {
   3.7670373795153027`*^9, 3.76703741353302*^9}, {3.7670376307980103`*^9, 
   3.7670376404364023`*^9}, {3.770137935795401*^9, 3.7701380062915306`*^9}, {
   3.770138057788632*^9, 3.7701380628501005`*^9}, {3.7701382371874185`*^9, 
   3.7701382413792105`*^9}, {3.7701382842519135`*^9, 
   3.7701383249554987`*^9}, {3.7701383881472387`*^9, 
   3.7701383917865086`*^9}, {3.7701385021952724`*^9, 
   3.7701385052022324`*^9}, {3.770138572371876*^9, 3.770138611827223*^9}, {
   3.7701428823962765`*^9, 3.7701428836832123`*^9}, 3.7701431641965485`*^9, {
   3.7701432022527943`*^9, 3.7701432033967147`*^9}, {3.770143239157*^9, 
   3.770143241668286*^9}, {3.7701433259405036`*^9, 3.770143327243021*^9}, {
   3.7701433829977713`*^9, 3.7701433844290113`*^9}, {3.770143444068329*^9, 
   3.7701434490433984`*^9}, {3.770389057873991*^9, 3.770389065241293*^9}, {
   3.770393399155386*^9, 3.770393529114126*^9}, {3.770393871619214*^9, 
   3.7703939725877085`*^9}, {3.7704275365135603`*^9, 
   3.7704275739892473`*^9}, {3.7704276308215604`*^9, 3.770427646258755*^9}, 
   3.7704276805639296`*^9, {3.7704277175663013`*^9, 3.77042774642717*^9}, {
   3.770454751432206*^9, 3.7704547576241956`*^9}, {3.7704563071274214`*^9, 
   3.7704563072949743`*^9}, {3.7707455850495663`*^9, 
   3.7707455980099306`*^9}, {3.7707456712019014`*^9, 3.770745713415952*^9}, 
   3.7707457524398932`*^9, {3.7707458361056943`*^9, 3.7707458366971292`*^9}, {
   3.770800683802165*^9, 3.7708007021127467`*^9}, {3.771346646949567*^9, 
   3.7713466643420515`*^9}},
 ExpressionUUID -> "1024e441-f097-43ef-bdc5-c751fed2f2e7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"showablesAll", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", "00", "*)"}], 
    RowBox[{"\"\<orbit\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "01", "*)"}], "\"\<loci\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "02", "*)"}], "\"\<normals\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "03", "*)"}], "\"\<medians\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "04", "*)"}], "\"\<baricenter\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "05", "*)"}], "\"\<mittenpunkt\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "06", "*)"}], "\"\<caustic\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "07", "*)"}], "\"\<notables\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "08", "*)"}], "\"\<notablelines\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "09", "*)"}], "\"\<incircle\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "10", "*)"}], "\"\<intouchpts\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "11", "*)"}], "\"\<ninepointcircle\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "12", "*)"}], "\"\<feuerbach\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "13", "*)"}], "\"\<feuerbachline\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "14", "*)"}], "\"\<excentral\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "15", "*)"}], "\"\<excircles\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "16", "*)"}], "\"\<exnotables\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "17", "*)"}], "\"\<exnotablelines\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "18", "*)"}], "\"\<extouchpts\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "19", "*)"}], "\"\<exbaricenter\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "20", "*)"}], "\"\<exfeuerbach\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "21", "*)"}], "\"\<antifeuerbach\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "22", "*)"}], "\"\<circumcircle\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "23", "*)"}], "\"\<experimental\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "24", "*)"}], "\"\<orthictriangle\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "25", "*)"}], "\"\<basicnotables\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "26", "*)"}], "\"\<outernapoleon\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "27", "*)"}], "\"\<hexyltriangle\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "28", "*)"}], "\"\<morleytriangle\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "29", "*)"}], "\"\<mittenfeet\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "30", "*)"}], "\"\<extouchtri\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "31", "*)"}], "\"\<anticompl\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "32", "*)"}], "\"\<anticomplcircumb\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "33", "*)"}], "\"\<anticomplnpc\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "34", "*)"}], "\"\<anticomplincirc\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "35", "*)"}], "\"\<anticomplcontact\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "36", "*)"}], "\"\<darbouxpt\>\"", ",", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"X", 
         RowBox[{"(", "144", ")"}]}], " ", "=", " ", 
        RowBox[{"anticompl", " ", "of", " ", "X", 
         RowBox[{"(", "7", ")"}]}]}], ",", " ", 
       RowBox[{"anticompl", "-", 
        RowBox[{"perspector", " ", "of", " ", "contact", " ", "tri"}]}]}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", "37", "*)"}], "\"\<darbouxlines\>\"", ",", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"X", 
         RowBox[{"(", "144", ")"}]}], " ", "=", " ", 
        RowBox[{"anticompl", " ", "of", " ", "X", 
         RowBox[{"(", "7", ")"}]}]}], ",", " ", 
       RowBox[{"anticompl", "-", 
        RowBox[{"perspector", " ", "of", " ", "contact", " ", "tri"}]}]}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", "38", "*)"}], "\"\<mittengergonneline\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "39", "*)"}], "\"\<darbouxgergonneline\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "40", "*)"}], "\"\<mittenx142line\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "41", "*)"}], "\"\<medial\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "42", "*)"}], "\"\<medialcircumb\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "43", "*)"}], "\"\<medialnpc\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "44", "*)"}], "\"\<medialincirc\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "45", "*)"}], "\"\<medialcontact\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "46", "*)"}], "\"\<x88\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "47", "*)"}], "\"\<x88antifeuerline\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "48", "*)"}], "\"\<interfeuerline\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "49", "*)"}], "\"\<antiorthicaxis\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "50", "*)"}], "\"\<isotomicaxis\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "51", "*)"}], "\"\<steinercircumell\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "52", "*)"}], "\"\<inccircumell\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "53", "*)"}], "\"\<quadcirx100\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "54", "*)"}], "\"\<quadactpsx100\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "55", "*)"}], "\"\<hypx100\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "56", "*)"}], "\"\<incenter\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "57", "*)"}], "\"\<circumcenter\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "58", "*)"}], "\"\<orthocenter\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "59", "*)"}], "\"\<gergonne\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "60", "*)"}], "\"\<nagel\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "61", "*)"}], "\"\<x142\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "62", "*)"}], "\"\<mosesptsto1k\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "63", "*)"}], "\"\<mosesptsto4k\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "64", "*)"}], "\"\<mosesptsabove4k\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "65", "*)"}], "\"\<bevanpt\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "66", "*)"}], "\"\<trilinpts\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "67", "*)"}], "\"\<hypfeuerbach\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "68", "*)"}], "\"\<x168\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "69", "*)"}], "\"\<excentralcircumb\>\""}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showablesExp", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<manual\>\"", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<all\>\"", ",", "showablesAll"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<none\>\"", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<mitten\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<medians\>\"", ",", "\"\<excentral\>\"", ",", 
         "\"\<mittenpunkt\>\"", ",", "\"\<mittenfeet\>\"", ",", 
         "\"\<excircles\>\""}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<caustic\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<medians\>\"", ",", "\"\<excentral\>\"", ",", "\"\<excircles\>\"",
          ",", "\"\<extouchpts\>\"", ",", "\"\<intouchpts\>\"", ",", 
         "\"\<incircle\>\"", ",", "\"\<ninepointcircle\>\"", ",", 
         "\"\<feuerbach\>\"", ",", "\"\<feuerbachline\>\"", ",", 
         "\"\<exfeuerbach\>\""}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<exfeuer\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<ninepointcircle\>\"", ",", "\"\<excentral\>\"", ",", 
         "\"\<excircles\>\"", ",", "\"\<extouchpts\>\"", ",", 
         "\"\<exfeuerbach\>\"", ",", "\"\<feuerbach\>\"", ",", 
         "\"\<incircle\>\""}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<touchpts\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<medians\>\"", ",", "\"\<incircle\>\"", ",", "\"\<intouchpts\>\"",
          ",", "\"\<excentral\>\"", ",", "\"\<excircles\>\"", ",", 
         "\"\<extouchpts\>\""}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<antifeuer\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<ninepointcircle\>\"", ",", "\"\<incircle\>\"", ",", 
         "\"\<feuerbach\>\"", ",", "\"\<baricenter\>\"", ",", 
         "\"\<antifeuerbach\>\""}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<feuerall\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<medians\>\"", ",", "\"\<incircle\>\"", ",", "\"\<caustic\>\"", 
         " ", ",", "\"\<excentral\>\"", ",", "\"\<excircles\>\"", ",", 
         "\"\<extouchpts\>\"", ",", "\"\<ninepointcircle\>\"", ",", 
         "\"\<feuerbach\>\"", ",", "\"\<baricenter\>\"", ",", 
         "\"\<antifeuerbach\>\"", ",", "\"\<exfeuerbach\>\""}], "}"}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<orthicinc\>\"", ",", 
       RowBox[{"{", "\"\<orthictriangle\>\"", "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<anticompl\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<caustic\>\"", ",", "\"\<baricenter\>\"", ",", 
         "\"\<feuerbach\>\"", ",", "\"\<antifeuerbach\>\"", ",", 
         "\"\<incircle\>\"", ",", "\"\<ninepointcircle\>\"", ",", 
         "\"\<excircles\>\"", ",", "\"\<extouchpts\>\"", ",", 
         "\"\<anticompl\>\"", ",", "\"\<mittenpunkt\>\""}], "}"}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<anticomplGergonne\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<caustic\>\"", ",", "\"\<baricenter\>\"", ",", 
         "\"\<mittenpunkt\>\"", ",", "\"\<anticompl\>\"", ",", 
         "\"\<anticomplcircumb\>\"", ",", "\"\<anticomplincirc\>\"", ",", 
         "\"\<darbouxgergonneline\>\"", ",", "\"\<darbouxpt\>\"", ",", 
         "\"\<darbouxlines\>\"", ",", "\"\<feuerbach\>\"", ",", 
         "\"\<antifeuerbach\>\"", ",", "\"\<extouchpts\>\""}], "}"}]}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<darboux\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<caustic\>\"", ",", "\"\<baricenter\>\"", ",", 
         "\"\<anticompl\>\"", ",", "\"\<extouchpts\>\"", ",", 
         "\"\<extouchtri\>\"", ",", "\"\<anticomplincirc\>\"", ",", 
         "\"\<darbouxpt\>\"", ",", "\"\<darbouxlines\>\"", ",", 
         "\"\<feuerbach\>\"", ",", "\"\<antifeuerbach\>\""}], "}"}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<medial\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<caustic\>\"", ",", "\"\<baricenter\>\"", ",", 
         "\"\<mittenpunkt\>\"", ",", "\"\<feuerbach\>\"", ",", 
         "\"\<antifeuerbach\>\"", ",", "\"\<incircle\>\"", ",", 
         "\"\<intouchpts\>\"", ",", "\"\<darbouxgergonneline\>\"", ",", 
         "\"\<darbouxpt\>\"", ",", "\[IndentingNewLine]", "\"\<anticompl\>\"",
          ",", "\"\<anticomplcircumb\>\"", ",", "\"\<anticomplincirc\>\"", 
         ",", "\[IndentingNewLine]", "\"\<medial\>\"", ",", 
         "\"\<medialcircumb\>\""}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<medialSimple\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<caustic\>\"", ",", "\"\<baricenter\>\"", ",", 
         "\"\<mittenpunkt\>\"", ",", "\"\<feuerbach\>\"", ",", 
         "\"\<antifeuerbach\>\"", ",", "\"\<incircle\>\"", ",", 
         "\"\<intouchpts\>\"", ",", "\"\<mittenx142line\>\"", ",", 
         "\"\<medialtri\>\"", ",", "\"\<medialcircumb\>\""}], "}"}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<anticomplSimple\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<caustic\>\"", ",", "\"\<baricenter\>\"", ",", 
         "\"\<mittenpunkt\>\"", ",", "\"\<feuerbach\>\"", ",", 
         "\"\<antifeuerbach\>\"", ",", "\"\<anticompltri\>\"", ",", 
         "\"\<anticomplincirc\>\"", ",", "\"\<anticomplcircumb\>\"", ",", 
         "\"\<mittengergonneline\>\""}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<x88\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<incircle\>\"", ",", "\"\<mittenpunkt\>\"", ",", "\"\<x88\>\"", 
         ",", "\"\<anticomplcontact\>\"", ",", "\"\<antifeuerbach\>\"", ",", 
         "\"\<x88antifeuerline\>\"", ",", "\"\<excentral\>\"", ",", 
         "\"\<antiorthicaxis\>\""}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<inccircum\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<circumcircle\>\"", ",", "\"\<steinercircumell\>\"", ",", 
         "\"\<inccircumell\>\"", ",", "\"\<antifeuerbach\>\""}], "}"}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<cyclicquads\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<circumcircle\>\"", ",", "\"\<quadcirx100\>\"", ",", 
         "\"\<quadactpsx100\>\"", ",", "\"\<anticomplincirc\>\"", ",", 
         "\"\<antifeuerbach\>\""}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<hypx100\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<baricenter\>\"", ",", "\"\<darbouxpt\>\"", ",", "\"\<x142\>\"", 
         ",", "\"\<hypx100\>\"", ",", "\"\<gergonne\>\"", ",", 
         "\"\<darbouxgergonneline\>\"", ",", "\"\<x88\>\"", ",", 
         "\"\<x88antifeuerline\>\"", ",", "\"\<bevanpt\>\""}], "}"}]}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<hypfeux100\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<gergonne\>\"", ",", "\"\<nagel\>\"", ",", "\"\<bevanpt\>\"", 
         ",", "\"\<hypfeuerbach\>\"", ",", "\"\<hypx100\>\"", ",", 
         "\"\<darbouxgergonneline\>\"", ",", "\"\<darbouxpt\>\""}], "}"}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<exccircumb\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<excentralcircumb\>\"", ",", "\"\<excentral\>\"", ",", 
         "\"\<hypx100\>\"", ",", "\"\<bevanpt\>\""}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7663447299280252`*^9, 3.766344814604505*^9}, {
   3.7663448891523395`*^9, 3.7663449812947474`*^9}, {3.7663450453992853`*^9, 
   3.7663450767492485`*^9}, {3.7663456681657076`*^9, 
   3.7663456736222663`*^9}, {3.7663462069984455`*^9, 3.76634620771852*^9}, {
   3.7663463376702986`*^9, 3.766346339430593*^9}, {3.76634774592653*^9, 
   3.766347751757967*^9}, {3.7664821732043667`*^9, 3.7664822455881057`*^9}, {
   3.766482286965479*^9, 3.766482294558173*^9}, {3.766564572741263*^9, 
   3.766564576173088*^9}, {3.7665671295646863`*^9, 3.7665672065496397`*^9}, {
   3.7666194943828535`*^9, 3.7666195435892706`*^9}, {3.766619655048196*^9, 
   3.766619665637912*^9}, {3.7668288921960497`*^9, 3.766828892212007*^9}, {
   3.766828967339548*^9, 3.7668289717567377`*^9}, {3.767001112101906*^9, 
   3.767001113309677*^9}, {3.7670015127564754`*^9, 3.767001521469593*^9}, {
   3.7670029859544764`*^9, 3.7670030388180294`*^9}, {3.767032612667634*^9, 
   3.7670326581957088`*^9}, {3.767033331004075*^9, 3.7670333622735243`*^9}, {
   3.7670361952065315`*^9, 3.767036205926381*^9}, {3.767037515988631*^9, 
   3.767037517139579*^9}, {3.7672843778574467`*^9, 3.767284386137087*^9}, {
   3.767355808054116*^9, 3.7673558178389397`*^9}, {3.7673608842738867`*^9, 
   3.767360892266509*^9}, {3.769126497591597*^9, 3.7691265062723823`*^9}, {
   3.7701332942971973`*^9, 3.7701333278336334`*^9}, {3.7701337281539993`*^9, 
   3.7701337295133743`*^9}, {3.770133759633753*^9, 3.770133767281273*^9}, {
   3.7701344040046706`*^9, 3.7701344075950775`*^9}, {3.7701347426505404`*^9, 
   3.7701347620749245`*^9}, {3.7701348273403473`*^9, 
   3.7701348293230467`*^9}, {3.7703881880421805`*^9, 3.770388198201584*^9}, 
   3.7703883478424273`*^9, {3.770388472082555*^9, 3.7703884725941586`*^9}, {
   3.77038850921017*^9, 3.770388513644417*^9}, {3.770388658954962*^9, 
   3.770388663570077*^9}, {3.7703893082361727`*^9, 3.77038931637621*^9}, {
   3.7703914932017426`*^9, 3.7703915065708694`*^9}, {3.7703921326344185`*^9, 
   3.77039217830505*^9}, {3.77039248377063*^9, 3.770392487105713*^9}, {
   3.770398005015238*^9, 3.7703980107149973`*^9}, {3.7704540511182947`*^9, 
   3.770454088782598*^9}, {3.7704542156392527`*^9, 3.770454228334611*^9}, {
   3.7704815583638783`*^9, 3.7704815684123583`*^9}, {3.7704816039623528`*^9, 
   3.770481607180751*^9}, {3.770481830020591*^9, 3.770481851651506*^9}, {
   3.770585788219619*^9, 3.7705858545500207`*^9}, {3.770585979222128*^9, 
   3.770586006340416*^9}, {3.770586048844285*^9, 3.7705860565567074`*^9}, {
   3.7705865729743032`*^9, 3.7705865871015787`*^9}, {3.7705868856216927`*^9, 
   3.770586948419321*^9}, {3.7705870501898203`*^9, 3.770587096796795*^9}, {
   3.7705878418470626`*^9, 3.770587847558798*^9}, {3.77058793120969*^9, 
   3.7705879616645985`*^9}, {3.770588010901402*^9, 3.7705880157594185`*^9}, {
   3.770634138916256*^9, 3.7706341430853343`*^9}, {3.7706342090992804`*^9, 
   3.7706342965729685`*^9}, {3.7706343318772316`*^9, 3.770634332068716*^9}, {
   3.770634394133309*^9, 3.7706344453499713`*^9}, {3.7706347494939003`*^9, 
   3.770634790854672*^9}, {3.7706349695272675`*^9, 3.770634971958769*^9}, {
   3.7706350522387033`*^9, 3.7706350599576626`*^9}, {3.770636195807967*^9, 
   3.7706362130408745`*^9}, {3.7706362889363003`*^9, 
   3.7706362925287037`*^9}, {3.7706365142246623`*^9, 
   3.7706365163191395`*^9}, {3.7706371614233556`*^9, 
   3.7706371693292246`*^9}, {3.770637202330037*^9, 3.7706372026751175`*^9}, {
   3.7706389314929457`*^9, 3.7706389338097525`*^9}, {3.770653441984914*^9, 
   3.770653448527404*^9}, {3.7706536027048435`*^9, 3.770653606014968*^9}, {
   3.7706540510962863`*^9, 3.770654084503139*^9}, {3.770654467079424*^9, 
   3.7706545157684946`*^9}, {3.770655147569955*^9, 3.770655153352686*^9}, {
   3.770655434276121*^9, 3.7706554748723125`*^9}, {3.7706555542326913`*^9, 
   3.7706555558795404`*^9}, {3.7706559827463026`*^9, 3.770656005865594*^9}, {
   3.7706562227634*^9, 3.770656225562913*^9}, {3.770656309235138*^9, 
   3.770656312081501*^9}, {3.7706564810669193`*^9, 3.770656550011075*^9}, {
   3.770656644907663*^9, 3.770656668250695*^9}, {3.770656708258775*^9, 
   3.770656713698356*^9}, {3.770656746567486*^9, 3.7706567533069553`*^9}, {
   3.7706579919247475`*^9, 3.77065799718834*^9}, {3.770658393791367*^9, 
   3.770658394053694*^9}, {3.7706587157517624`*^9, 3.7706587160629587`*^9}, {
   3.7706595606306176`*^9, 3.770659591952174*^9}, {3.770660047505213*^9, 
   3.7706600594552183`*^9}, {3.7706612065451164`*^9, 3.770661225571295*^9}, {
   3.7706621892155714`*^9, 3.7706621923621626`*^9}, {3.7706629635273976`*^9, 
   3.7706630742443743`*^9}, {3.770663167565426*^9, 3.770663216178789*^9}, {
   3.7706636751740017`*^9, 3.7706636755729103`*^9}, {3.7706639554514446`*^9, 
   3.7706640038458753`*^9}, {3.7706640555113115`*^9, 3.770664061740633*^9}, {
   3.770664108406614*^9, 3.7706641122144403`*^9}, {3.7707196855097985`*^9, 
   3.7707196947331486`*^9}, {3.770720556807029*^9, 3.7707206005780487`*^9}, {
   3.7707206618730497`*^9, 3.7707206879358397`*^9}, {3.7707279474981375`*^9, 
   3.7707279522744455`*^9}, {3.770731871231143*^9, 3.770731904639098*^9}, {
   3.7707326198194466`*^9, 3.7707326245353503`*^9}, {3.7707412026833925`*^9, 
   3.770741217155882*^9}, {3.7707416701544275`*^9, 3.770741715667948*^9}, {
   3.770741750193796*^9, 3.770741755532529*^9}, {3.770742799808603*^9, 
   3.770742810518011*^9}, {3.770742850854127*^9, 3.7707428631751995`*^9}, {
   3.770744082127657*^9, 3.7707440995805774`*^9}, {3.7708015293013515`*^9, 
   3.770801530955928*^9}, {3.770844669251379*^9, 3.7708446758996115`*^9}, {
   3.77084501042759*^9, 3.770845033852986*^9}, {3.7708452488119698`*^9, 
   3.7708452515406775`*^9}, {3.7708460453976316`*^9, 3.770846052541683*^9}, {
   3.770847073765*^9, 3.7708471257252812`*^9}, {3.7708472416386385`*^9, 
   3.770847327779744*^9}, {3.7708967372797985`*^9, 3.7708967465360627`*^9}, {
   3.770900088021535*^9, 3.770900116478321*^9}, {3.7709011615509663`*^9, 
   3.770901235780961*^9}, {3.770901282200274*^9, 3.7709013253959165`*^9}, 
   3.770901366557699*^9, {3.7709014208489175`*^9, 3.7709014210962296`*^9}, {
   3.7709028585189505`*^9, 3.770902859502327*^9}, {3.7712351924738097`*^9, 
   3.771235200274764*^9}, {3.7712370146614075`*^9, 3.7712371212838845`*^9}, {
   3.771237692996384*^9, 3.771237717003048*^9}, 3.7712377896534643`*^9, {
   3.771238174923306*^9, 3.7712382164945483`*^9}, {3.7712400554085054`*^9, 
   3.771240069199645*^9}, {3.771240802608326*^9, 3.771240865576874*^9}, {
   3.7712416956639385`*^9, 3.771241727138893*^9}, {3.771244869855438*^9, 
   3.77124487262307*^9}, {3.771266333241211*^9, 3.7712663449062233`*^9}, {
   3.771266882673535*^9, 3.7712668875774393`*^9}, {3.7712738810192485`*^9, 
   3.771273893972416*^9}, {3.771279161434608*^9, 3.7712792100123243`*^9}, {
   3.771279978188283*^9, 3.7712800251239862`*^9}, {3.7712803059592547`*^9, 
   3.771280306997557*^9}, {3.771319629152895*^9, 3.7713196378894577`*^9}, {
   3.7713201415399685`*^9, 3.7713201516838584`*^9}, {3.7713401136939263`*^9, 
   3.7713401307481184`*^9}, {3.7713464604641867`*^9, 3.771346497664444*^9}},
 ExpressionUUID -> "9d7d68f2-4d0c-49e5-b456-55570eeb575d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getExpShowables", "[", "exp_", "]"}], ":=", 
   RowBox[{
    RowBox[{"showablesExp", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"FirstPosition", "[", 
        RowBox[{
         RowBox[{"First", "/@", "showablesExp"}], ",", "exp"}], "]"}], "//", 
       "First"}], "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7663467814824033`*^9, 3.766346823762475*^9}},
 ExpressionUUID -> "4d5797b5-5cfe-4aec-8630-64f219407dab"]
}, Closed]],

Cell[CellGroupData[{

Cell["*** Main Viz App [old]", "Section",
 CellChangeTimes->{{3.7665660028340187`*^9, 3.7665660313051977`*^9}, {
  3.766664737988328*^9, 3.7666647383962374`*^9}, {3.7669682454284678`*^9, 
  3.7669682463640175`*^9}, {3.7714137882145405`*^9, 3.771413789703561*^9}},
 ExpressionUUID -> "759081a2-c72a-446a-b98e-87d6dc24fc41"],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "=", "1.5"}], ",", "ellPlot", ",", "causticPlot", ",", 
     "loci", ",", "excenterLims", ",", "showables", ",", "showableItems", ",",
      "ctrList", ",", "symbols"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ellPlot", "=", 
     RowBox[{"plotEll", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"causticPlot", "=", 
     RowBox[{"plotEllb", "[", 
      RowBox[{
       RowBox[{"Sequence", "@@", 
        RowBox[{"getTriCausticParams", "[", "a", "]"}]}], ",", 
       RowBox[{"\"\<feu\>\"", "/.", "ptClrs"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"loci", "=", 
     RowBox[{"precompLoci", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"excenterLims", "=", 
     RowBox[{"excenterMax", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "this", " ", "must", " ", "be", " ", "in", " ", "the", " ", "same", " ",
        "order", " ", "as", " ", "showablesAll"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"ctrList", "=", 
        RowBox[{"Hold", "[", 
         RowBox[{
         "drOrbit", ",", "drLoci", ",", "drNormals", ",", "drMedians", ",", 
          "drBaricenter", ",", "drMitten", ",", "drCaustic", ",", 
          "drNotables", ",", "drNotableLines", ",", "\[IndentingNewLine]", 
          "drIncircle", ",", "drIntouchpts", ",", "drNpc", ",", "drFeuerbach",
           ",", "drFeuerLine", ",", "\[IndentingNewLine]", "drExcentral", ",",
           "drExcircles", ",", "drExcNotables", ",", "drExcNotableLines", ",",
           "drExtouchpts", ",", "drExcBar", ",", "drExcFeuer", ",", 
          "\[IndentingNewLine]", "drAntiFeuerbach", ",", "drCircumcircle", 
          ",", "drExperimental", ",", "drOrthicTri", ",", "drBasicNotables", 
          ",", "drOuterNapoleonTri", ",", "drHexylTri", ",", "drMorleyTri", 
          ",", "\[IndentingNewLine]", "drMittenFeet", ",", "drExtouchTri", 
          ",", "\[IndentingNewLine]", "drAntiComplTri", ",", 
          "drAntiComplCircumb", ",", "drAntiComplNpc", ",", 
          "drAntiComplIncirc", ",", "drAntiComplContact", ",", 
          "\[IndentingNewLine]", "drDarbouxPt", ",", "drDarbouxLine", ",", 
          "drMittenGergonneLine", ",", "drDarbouxGergonneLine", ",", 
          "drMittenX142Line", ",", "\[IndentingNewLine]", "drMedial", ",", 
          "drMedialCircumb", ",", "drMedialNpc", ",", "drMedialIncirc", ",", 
          "drMedialContact", ",", "drX88", ",", "drX88AntiFeuerLine", ",", 
          "drInterFeuerLine", ",", "drAntiorthicAxis", ",", "drIsotomicAxis", 
          ",", "drSteinerCircumEll", ",", "drIncCircumEll", ",", 
          "drQuadCirX100", ",", "drQuadAnticomplTpsX100", ",", 
          "\[IndentingNewLine]", "drHypX100", ",", "\[IndentingNewLine]", 
          "drIncenter", ",", "drCircumcenter", ",", "drOrthocenter", ",", 
          "drGergonne", ",", "drNagel", ",", "drX142", ",", "drMosesPtsTo1k", 
          ",", "drMosesPtsTo4k", ",", "drMosesPtsAbove4k", ",", 
          "\[IndentingNewLine]", "drBevan", ",", "drTrilinPts", ",", 
          "drHypFeuerbach", ",", "drX168", ",", "drExcCircumb"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"&&", "&"}], " ", "FIX"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"showables", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"exp", "!=", "\"\<manual\>\""}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"showableItems", "=", 
            RowBox[{"Prepend", "[", 
             RowBox[{
              RowBox[{"getExpShowables", "[", "exp", "]"}], ",", 
              "\"\<orbit\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"assign", "[", 
               RowBox[{"ctrList", ",", 
                RowBox[{"First", "@", "#2"}], ",", 
                RowBox[{
                 RowBox[{"Count", "[", 
                  RowBox[{"showableItems", ",", "#1"}], "]"}], ">", "0"}]}], 
               "]"}], "&"}], ",", "showablesAll"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"exp", "=", "\"\<manual\>\""}], ";", "\[IndentingNewLine]",
            "showableItems"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Pick", "[", 
           RowBox[{"showablesAll", ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"List", "@@", "ctrList"}], "]"}]}], "]"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"movieFrame", "[", 
         RowBox[{
         "a_", ",", "t_", ",", "ellPlot_", ",", "loci_", ",", "excenterLims_",
           ",", "clip_", ",", 
          RowBox[{"opt", ":", 
           RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"movieFrame", "[", 
        RowBox[{"a", ",", 
         RowBox[{"toRad", "@", "tDeg"}], ",", "ellPlot", ",", "causticPlot", 
         ",", "loci", ",", "excenterLims", ",", "clip", ",", 
         RowBox[{"showablesOpt", "->", "showables"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "how", " ", "can", " ", "I", " ", "control", " ", "animation", " ", 
        "step", " ", 
        RowBox[{"here", "!"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"tDeg", ",", "30"}], "}"}], ",", 
        RowBox[{"-", "360"}], ",", "360", ",", ".1", ",", 
        RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}], ",", 
        RowBox[{"AnimationRate", "\[Rule]", "2"}], ",", 
        RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Row", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"clip", ",", "\"\<ort\>\"", ",", "\"\<\>\""}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<ell\>\"", ",", "\"\<ort\>\"", ",", "\"\<ortHalf\>\"", ",", 
              "\"\<excHalf\>\"", ",", "\"\<exc\>\"", ",", "\"\<anticompl\>\"",
               ",", "\"\<anticompl2\>\"", ",", "\[IndentingNewLine]", 
              "\"\<antiorthic\>\"", ",", "\"\<antiorthic2\>\"", ",", 
              "\"\<antiorthic3\>\""}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"exp", ",", "\"\<manual\>\"", ",", "\"\<\>\""}], "}"}], 
            ",", 
            RowBox[{"First", "/@", "showablesExp"}]}], "}"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"makeCtrlCol", "/@", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<basic\>\"", ",", "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drOrbit", ",", "True", ",", " ", "\"\<orbit\>\""}], "}"}],
                   ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drCaustic", ",", "False", ",", " ", "\"\<caustic\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"drLoci", ",", "False", ",", " ", "\"\<loci\>\""}],
                    "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drNormals", ",", "False", ",", "\"\<normals\>\""}], "}"}],
                   ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drIncenter", ",", "False", ",", 
                    "\"\<incenter \!\(\*SubscriptBox[\(X\), \(1\)]\)\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drBaricenter", ",", "False", ",", 
                    "\"\<baricenter \!\(\*SubscriptBox[\(X\), \(2\)]\)\>\""}],
                    "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drCircumcenter", ",", "False", ",", 
                    "\"\<circumcenter \!\(\*SubscriptBox[\(X\), \
\(3\)]\)\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drOrthocenter", ",", "False", ",", 
                    "\"\<orthocenter \!\(\*SubscriptBox[\(X\), \
\(4\)]\)\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drGergonne", ",", "False", ",", 
                    "\"\<gergonne \!\(\*SubscriptBox[\(X\), \(7\)]\)\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drNagel", ",", "False", ",", 
                    "\"\<nagel \!\(\*SubscriptBox[\(X\), \(8\)]\)\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drMitten", ",", "False", ",", 
                    "\"\<mittenpunkt \!\(\*SubscriptBox[\(X\), \
\(9\)]\)\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drFeuerbach", ",", "False", ",", 
                    "\"\<feuerbach \!\(\*SubscriptBox[\(X\), \(11\)]\)\>\""}],
                    "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drBevan", ",", "False", ",", 
                    "\"\<bevan \!\(\*SubscriptBox[\(X\), \(40\)]\)\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}]}], 
              "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\"\<points\>\"", ",", "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drBasicNotables", ",", "False", ",", "\"\<basic\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drNotables", ",", "False", ",", "\"\<notables\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drX88", ",", "False", ",", 
                    "\"\<\!\(\*SubscriptBox[\(X\), \(88\)]\)\>\""}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drAntiFeuerbach", ",", "False", ",", 
                    "\"\<anti-feuer \!\(\*SubscriptBox[\(X\), \
\(100\)]\)\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drX142", ",", "False", ",", 
                    "\"\<tabachnikov \!\(\*SubscriptBox[\(X\), \
\(142\)]\)\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drDarbouxPt", ",", "False", ",", 
                    "\"\<darboux \!\(\*SubscriptBox[\(X\), \(144\)]\)\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drX168", ",", "False", ",", 
                    "\"\<excentral mitten \!\(\*SubscriptBox[\(X\), \
\(168\)]\)\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drMosesPtsTo1k", ",", "False", ",", 
                    "\"\<moses \!\(\*SubscriptBox[\(X\), \(9\)]\)(<1k)\>\""}],
                    "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drMosesPtsTo4k", ",", "False", ",", 
                    "\"\<moses \!\(\*SubscriptBox[\(X\), \(9\)]\)(<4k)\>\""}],
                    "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drMosesPtsAbove4k", ",", "False", ",", 
                    "\"\<moses \!\(\*SubscriptBox[\(X\), \(9\)]\)(>4k)\>\""}],
                    "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drTrilinPts", ",", "False", ",", "\"\<trilins 100\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], 
               ","}], "\[IndentingNewLine]", "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\"\<lines\>\"", ",", "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drNotableLines", ",", "False", ",", "\"\<notables\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drFeuerLine", ",", "False", ",", "\"\<feuerbach\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drExcNotableLines", ",", "False", ",", 
                    "\"\<exnotable\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drMittenGergonneLine", ",", "False", ",", 
                    "\"\<mitten-gergonne\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drMittenX142Line", ",", "False", ",", 
                    "\"\<mitten-\!\(\*SubscriptBox[\(X\), \(142\)]\)\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drDarbouxGergonneLine", ",", "False", ",", 
                    "\"\<darboux-gergonne\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drDarbouxLine", ",", "False", ",", "\"\<darboux\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drX88AntiFeuerLine", ",", "False", ",", 
                    "\"\<x88-antifeuerbach\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drInterFeuerLine", ",", "False", ",", 
                    "\"\<feuer-antifeuer\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}]}], 
              "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\"\<circles\>\"", ",", "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drIncircle", ",", "False", ",", "\"\<incircle\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drCircumcircle", ",", "False", ",", 
                    "\"\<circumcircle\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"drNpc", ",", "False", ",", "\"\<nine point\>\""}],
                    "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drExcircles", ",", "False", ",", "\"\<excircles\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drSteinerCircumEll", ",", "False", ",", 
                    "\"\<steinercircumell\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drIncCircumEll", ",", "False", ",", 
                    "\"\<inccircumell\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}]}], 
              "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\"\<triads\>\"", ",", "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drMedians", ",", "False", ",", "\"\<medians\>\""}], "}"}],
                   ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drIntouchpts", ",", "False", ",", "\"\<intouch\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drExtouchpts", ",", "False", ",", "\"\<extouch\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drExcFeuer", ",", "False", ",", "\"\<exfeuer\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}]}], 
              "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\"\<tris\>\"", ",", "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drExcentral", ",", "False", ",", "\"\<excentral\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drOrthicTri", ",", "False", ",", "\"\<orthic\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drMorleyTri", ",", "False", ",", "\"\<morley\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drExtouchTri", ",", "False", ",", "\"\<extouch\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drOuterNapoleonTri", ",", "False", ",", 
                    "\"\<napoleon\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"drHexylTri", ",", "False", ",", "\"\<hexyl\>\""}],
                    "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}]}], 
              "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\"\<anticompl\>\"", ",", "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drAntiComplTri", ",", "False", ",", "\"\<tri\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drAntiComplIncirc", ",", "False", ",", 
                    "\"\<incirc \!\(\*SubscriptBox[\(X\), \(8\)]\)\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drAntiComplNpc", ",", "False", ",", 
                    "\"\<nine point\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drAntiComplCircumb", ",", "False", ",", 
                    "\"\<circumb \!\(\*SubscriptBox[\(X\), \(7\)]\)\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drAntiComplContact", ",", "False", ",", 
                    "\"\<contact\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}]}], 
              "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\"\<medial\>\"", ",", "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"drMedial", ",", "False", ",", "\"\<tri\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drMedialIncirc", ",", "False", ",", "\"\<incirc\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drMedialNpc", ",", "False", ",", "\"\<nine point\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drMedialCircumb", ",", "False", ",", 
                    "\"\<circumb \!\(\*SubscriptBox[\(X\), \(142\)]\)\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drMedialContact", ",", "False", ",", "\"\<contact\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}]}], 
              "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\"\<misc\>\"", ",", "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drMittenFeet", ",", "False", ",", "\"\<mittenfeet\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drExperimental", ",", "False", ",", 
                    "\"\<experimental\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drExcBar", ",", "False", ",", "\"\<exbaricenter\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drExcNotables", ",", "False", ",", "\"\<exnotables\>\""}],
                    "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drExcCircumb", ",", "False", ",", 
                    "\"\<excentralcircumb\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drAntiorthicAxis", ",", "False", ",", 
                    "\"\<isogonal axis\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drIsotomicAxis", ",", "False", ",", 
                    "\"\<isotomic axis\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drQuadCirX100", ",", "False", ",", 
                    "\"\<quad cir-\!\(\*SubscriptBox[\(X\), \(100\)]\)\>\""}],
                    "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drQuadAnticomplTpsX100", ",", "False", ",", 
                    "\"\<quad actTps-\!\(\*SubscriptBox[\(X\), \
\(100\)]\)\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drHypFeuerbach", ",", "False", ",", 
                    "\"\<Feuerbach hyperbola\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "drHypX100", ",", "False", ",", 
                    "\"\<\!\(\*SubscriptBox[\(X\), \(100\)]\) \
hyperbola\>\""}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}]}], 
              "\[IndentingNewLine]", "}"}]}], 
            RowBox[{"(*", 
             RowBox[{",", 
              RowBox[{"{", 
               RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], "*)"}], 
            "\[IndentingNewLine]", "}"}]}], ")"}], "//", 
         RowBox[{
          RowBox[{"Partition", "[", 
           RowBox[{"#", ",", "3"}], "]"}], "&"}]}], ",", 
        RowBox[{"Spacings", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}]}], ",", 
        RowBox[{"Alignment", "\[Rule]", "Right"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"SaveDefinitions", "\[Rule]", "True"}], ",", 
      RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7656512674754095`*^9, 3.7656513042703514`*^9}, {
   3.765651335467721*^9, 3.7656513527938595`*^9}, {3.765651409771124*^9, 
   3.765651480675603*^9}, {3.7656535276400237`*^9, 3.765653549081012*^9}, {
   3.765653642384804*^9, 3.765653647992844*^9}, {3.765653679112602*^9, 
   3.7656537609445095`*^9}, {3.765653863161049*^9, 3.765653876857726*^9}, {
   3.7656540012646704`*^9, 3.765654154746138*^9}, {3.765654314583809*^9, 
   3.7656543410736814`*^9}, {3.765659744154811*^9, 3.7656597630492663`*^9}, 
   3.765659994394142*^9, {3.765701459698557*^9, 3.765701460082012*^9}, {
   3.7657025144816003`*^9, 3.765702654633112*^9}, {3.7657057621413584`*^9, 
   3.7657058915405936`*^9}, {3.765705923484169*^9, 3.7657059504114895`*^9}, {
   3.7657068995635805`*^9, 3.7657069077083063`*^9}, {3.765706952650891*^9, 
   3.7657070285544786`*^9}, {3.7657071551478715`*^9, 
   3.7657071622259083`*^9}, {3.765709046088227*^9, 3.765709076401391*^9}, {
   3.765709373208974*^9, 3.765709410369849*^9}, {3.7657094404705515`*^9, 
   3.7657094705780973`*^9}, {3.7657095201135683`*^9, 3.765709552895441*^9}, {
   3.765803417293064*^9, 3.765803417453639*^9}, {3.7658035326052756`*^9, 
   3.765803600205597*^9}, {3.765803668373066*^9, 3.7658036687570376`*^9}, {
   3.7658037346064663`*^9, 3.765803735053298*^9}, {3.765914916826128*^9, 
   3.765914917914218*^9}, {3.765924227406006*^9, 3.7659242328334875`*^9}, 
   3.7659670985453405`*^9, {3.765970218088106*^9, 3.765970218886962*^9}, {
   3.765970750055938*^9, 3.7659707567021604`*^9}, {3.7660505827951946`*^9, 
   3.7660506080212774`*^9}, {3.7660506512129173`*^9, 3.766050744394695*^9}, {
   3.7660509154529915`*^9, 3.7660509167322655`*^9}, {3.7660511484099073`*^9, 
   3.7660511493050795`*^9}, {3.766053313896976*^9, 3.7660534245618887`*^9}, {
   3.766053511439967*^9, 3.7660535328983116`*^9}, {3.766054392639429*^9, 
   3.766054395368041*^9}, 3.7661313928247766`*^9, {3.7661314431986194`*^9, 
   3.766131443342264*^9}, {3.7662366756193223`*^9, 3.766236710243884*^9}, 
   3.7662398798389435`*^9, {3.7662430294530525`*^9, 3.7662431257737637`*^9}, {
   3.7662433983562083`*^9, 3.766243429407344*^9}, {3.7662436261549473`*^9, 
   3.7662437057171183`*^9}, {3.766243735843506*^9, 3.766243738214565*^9}, {
   3.7662437778605957`*^9, 3.7662438221732845`*^9}, {3.766243951741627*^9, 
   3.766243952188187*^9}, {3.7662440071564727`*^9, 3.766244040222148*^9}, {
   3.7662441015900884`*^9, 3.7662441656070666`*^9}, {3.7662443355596724`*^9, 
   3.766244377168005*^9}, {3.7662447740378957`*^9, 3.7662447988296127`*^9}, {
   3.766244938550023*^9, 3.766244979671486*^9}, {3.7662450484396696`*^9, 
   3.766245071452956*^9}, {3.7662465221728687`*^9, 3.766246525004731*^9}, {
   3.766247373437132*^9, 3.7662474094880447`*^9}, {3.7662479240316563`*^9, 
   3.766247960104139*^9}, {3.766252367310441*^9, 3.7662524317930117`*^9}, {
   3.766252490679966*^9, 3.7662525932736435`*^9}, {3.766252623975559*^9, 
   3.766252625304694*^9}, {3.766252739160823*^9, 3.7662527562984085`*^9}, {
   3.766252983927556*^9, 3.7662529866403027`*^9}, {3.7662531542475247`*^9, 
   3.766253177749147*^9}, {3.7662705694374495`*^9, 3.7662706657394247`*^9}, {
   3.766270760186445*^9, 3.766270801603572*^9}, {3.766342847159384*^9, 
   3.766342873328148*^9}, {3.7663431334474697`*^9, 3.7663431671137075`*^9}, {
   3.766343859335787*^9, 3.7663439142503223`*^9}, {3.766344084816942*^9, 
   3.766344107473367*^9}, {3.7663448416571493`*^9, 3.766344883729838*^9}, {
   3.766344998193567*^9, 3.76634501669729*^9}, {3.7663451813690147`*^9, 
   3.76634522415858*^9}, {3.766345375760144*^9, 3.766345494648381*^9}, {
   3.7663455677280245`*^9, 3.766345613145698*^9}, {3.766345735138842*^9, 
   3.76634581344339*^9}, {3.7663458694900265`*^9, 3.7663461507299433`*^9}, {
   3.7663462733529844`*^9, 3.7663462795953283`*^9}, {3.7663463442656655`*^9, 
   3.766346373720914*^9}, {3.7663468040657206`*^9, 3.7663468442513556`*^9}, {
   3.766347632298288*^9, 3.7663476758418713`*^9}, {3.766395627098544*^9, 
   3.766395627672039*^9}, {3.76639566255375*^9, 3.766395721567584*^9}, {
   3.7663958966848574`*^9, 3.7663958966918364`*^9}, {3.7663975381125574`*^9, 
   3.7663975467916813`*^9}, {3.7663975837768865`*^9, 
   3.7663975942079973`*^9}, {3.766399666993664*^9, 3.7663996972088614`*^9}, {
   3.766399816991938*^9, 3.7663998336573772`*^9}, {3.766433205657195*^9, 
   3.7664332487842674`*^9}, {3.7664799356807756`*^9, 3.766479991823984*^9}, {
   3.7664801127202168`*^9, 3.7664801840668287`*^9}, {3.7664802249375563`*^9, 
   3.7664803614956703`*^9}, {3.766480411800175*^9, 3.766480476865328*^9}, {
   3.7664805070735626`*^9, 3.7664805480111113`*^9}, {3.76648135588675*^9, 
   3.7664813754015756`*^9}, {3.766481406448554*^9, 3.76648140820785*^9}, {
   3.7664814590868196`*^9, 3.7664816801523705`*^9}, {3.766481728552968*^9, 
   3.766481787996313*^9}, {3.766481823168277*^9, 3.766481960984288*^9}, {
   3.7664820256405344`*^9, 3.766482030489936*^9}, {3.7664821572101297`*^9, 
   3.7664821577048063`*^9}, {3.7664993270127044`*^9, 3.766499327083512*^9}, {
   3.7665641773111696`*^9, 3.7665642267828407`*^9}, {3.7665642914708896`*^9, 
   3.7665643093431063`*^9}, {3.7665646403505316`*^9, 3.766564645758706*^9}, {
   3.7665647496898127`*^9, 3.766564751837184*^9}, {3.766564870655677*^9, 
   3.7665648953920774`*^9}, {3.7665650049693613`*^9, 3.766565106742551*^9}, {
   3.766565180305677*^9, 3.7665651842082753`*^9}, {3.7665654883028126`*^9, 
   3.7665655359297757`*^9}, {3.766571581408057*^9, 3.7665715827205205`*^9}, {
   3.766619687984166*^9, 3.766619766313542*^9}, {3.766619884585329*^9, 
   3.766619908484067*^9}, {3.7669304519482136`*^9, 3.766930479188006*^9}, {
   3.766930527364893*^9, 3.766930528570666*^9}, {3.766967574032055*^9, 
   3.7669676431499815`*^9}, {3.7669682773522167`*^9, 3.7669682777920413`*^9}, 
   3.767000821909237*^9, {3.7670011419300394`*^9, 3.7670011419479856`*^9}, {
   3.7670015329748163`*^9, 3.767001557287224*^9}, {3.7670016309689426`*^9, 
   3.7670016319114156`*^9}, {3.7670017565837936`*^9, 
   3.7670018306064606`*^9}, {3.7670024480376825`*^9, 3.767002667125476*^9}, {
   3.7670326920343046`*^9, 3.767032712372833*^9}, {3.7670335361411877`*^9, 
   3.767033575668212*^9}, {3.767033608918816*^9, 3.7670336100946703`*^9}, {
   3.767033716287771*^9, 3.7670337188678694`*^9}, {3.76703381382788*^9, 
   3.767033823237032*^9}, {3.7670338776125903`*^9, 3.7670338858116517`*^9}, {
   3.767033984066969*^9, 3.767033987909686*^9}, {3.767034856410812*^9, 
   3.7670348672837505`*^9}, {3.7670349250757165`*^9, 
   3.7670349386035266`*^9}, {3.7670355086706457`*^9, 3.767035669906397*^9}, {
   3.7670357092816772`*^9, 3.767035824265656*^9}, {3.767035856073577*^9, 
   3.7670358576164494`*^9}, {3.767035988677003*^9, 3.7670360201308947`*^9}, {
   3.7670374823529186`*^9, 3.7670374852810965`*^9}, {3.7670375250045404`*^9, 
   3.7670375464922004`*^9}, {3.7672843980841317`*^9, 
   3.7672844409804225`*^9}, {3.7673558229522376`*^9, 
   3.7673558496222134`*^9}, {3.7673561586329947`*^9, 
   3.7673561596007075`*^9}, {3.767356220689269*^9, 3.7673562363202066`*^9}, {
   3.767356311826935*^9, 3.767356324959836*^9}, {3.767356394729101*^9, 
   3.7673564002084475`*^9}, {3.7673565067032466`*^9, 
   3.7673565871673737`*^9}, {3.767356658404858*^9, 3.7673570327520733`*^9}, {
   3.7673570695197296`*^9, 3.76735726751204*^9}, {3.7673573087518578`*^9, 
   3.767357312064995*^9}, {3.767357348291215*^9, 3.7673573511445837`*^9}, {
   3.767357384539611*^9, 3.767357474695114*^9}, {3.767357533519832*^9, 
   3.76735758848003*^9}, {3.767357619763378*^9, 3.7673577304068546`*^9}, {
   3.76735778455162*^9, 3.7673577867836585`*^9}, {3.7673581275126905`*^9, 
   3.7673581556860495`*^9}, {3.7673581972549286`*^9, 3.767358298933755*^9}, {
   3.767358336275874*^9, 3.7673583518422685`*^9}, {3.7673584076892214`*^9, 
   3.767358411340455*^9}, {3.7673584424073315`*^9, 3.7673585339582415`*^9}, {
   3.7673586197865324`*^9, 3.767358641574256*^9}, {3.767358679583619*^9, 
   3.7673588194934225`*^9}, {3.7673589128381844`*^9, 3.767358989350727*^9}, {
   3.767359035870943*^9, 3.7673590520369034`*^9}, {3.767359085896311*^9, 
   3.7673591097635007`*^9}, {3.767359160206428*^9, 3.767359201050151*^9}, {
   3.767359241066454*^9, 3.767359253037447*^9}, {3.767359289904826*^9, 
   3.767359328262643*^9}, {3.767359370088566*^9, 3.7673593828768635`*^9}, {
   3.7673609010270767`*^9, 3.7673609306036477`*^9}, {3.7673609970360484`*^9, 
   3.767361036354179*^9}, {3.767361117607374*^9, 3.767361125348851*^9}, {
   3.76736136832695*^9, 3.7673613704362803`*^9}, {3.767361440410976*^9, 
   3.767361537427148*^9}, {3.7673615771403995`*^9, 3.7673615794412217`*^9}, {
   3.7673616538252926`*^9, 3.7673616838160458`*^9}, {3.7691265123920145`*^9, 
   3.769126577544707*^9}, {3.769127340249161*^9, 3.769127340389819*^9}, {
   3.76912923511432*^9, 3.7691292923925195`*^9}, {3.770134820077764*^9, 
   3.7701348232452946`*^9}, {3.7701380234456663`*^9, 
   3.7701380263508997`*^9}, {3.7701383579825277`*^9, 3.77013836653566*^9}, {
   3.7701384307500296`*^9, 3.770138436735057*^9}, {3.7701393044478517`*^9, 
   3.7701393180969715`*^9}, {3.770142014503284*^9, 3.770142048048006*^9}, {
   3.7701430243524466`*^9, 3.7701430249358654`*^9}, {3.7701433394563675`*^9, 
   3.7701433400727196`*^9}, {3.7703711154559045`*^9, 
   3.7703711172850122`*^9}, {3.7703882071795797`*^9, 
   3.7703882261970797`*^9}, {3.7703883647017236`*^9, 3.770388366669462*^9}, {
   3.7703884939879603`*^9, 3.770388503451755*^9}, {3.7703886895182424`*^9, 
   3.770388739431013*^9}, {3.7703890252428627`*^9, 3.7703890509411545`*^9}, {
   3.770389119765718*^9, 3.770389171775016*^9}, 3.7703892018057528`*^9, {
   3.770389326955925*^9, 3.77038934338912*^9}, {3.77038952813321*^9, 
   3.770389528396506*^9}, 3.7703898496094327`*^9, {3.7703939583595085`*^9, 
   3.7703939617122345`*^9}, {3.770427588993891*^9, 3.7704275947975283`*^9}, {
   3.770454107307064*^9, 3.7704541095487547`*^9}, {3.770454164865899*^9, 
   3.770454171539558*^9}, {3.7704816273907404`*^9, 3.770481655953176*^9}, {
   3.770481859567167*^9, 3.770481860694485*^9}, {3.7705854715245724`*^9, 
   3.7705854764952602`*^9}, {3.770585520759444*^9, 3.770585604670918*^9}, {
   3.7705856509458785`*^9, 3.770585653604767*^9}, {3.770585688469689*^9, 
   3.7705856945275*^9}, {3.7705857504224863`*^9, 3.770585768809492*^9}, {
   3.770585859903713*^9, 3.7705858954643173`*^9}, {3.7705859453964977`*^9, 
   3.7705859610376964`*^9}, {3.770586020350973*^9, 3.770586075992732*^9}, {
   3.7705879705548115`*^9, 3.770588004579298*^9}, {3.770633357830609*^9, 
   3.770633364142768*^9}, {3.7706344565271025`*^9, 3.770634490568205*^9}, {
   3.770634795785487*^9, 3.770634842538327*^9}, {3.7706362339948473`*^9, 
   3.770636250970544*^9}, {3.770651238474956*^9, 3.7706512515839214`*^9}, {
   3.7706513092039056`*^9, 3.770651458320054*^9}, {3.7706519293532276`*^9, 
   3.770652099127719*^9}, {3.77065215564565*^9, 3.770652178142124*^9}, {
   3.770652208197773*^9, 3.770652244664347*^9}, {3.770652376240714*^9, 
   3.7706525706566954`*^9}, {3.7706526144107933`*^9, 
   3.7706526669712143`*^9}, {3.7706527528427534`*^9, 
   3.7706527998142223`*^9}, {3.770652846160365*^9, 3.7706530366220913`*^9}, {
   3.770653117281533*^9, 3.770653150951523*^9}, {3.770653183322014*^9, 
   3.7706532929737635`*^9}, {3.770653347621538*^9, 3.770653351672716*^9}, {
   3.7706534240417137`*^9, 3.7706534358971825`*^9}, {3.7706534744179296`*^9, 
   3.770653474945492*^9}, {3.770653664334722*^9, 3.7706536742003846`*^9}, {
   3.770653716454486*^9, 3.7706537196409845`*^9}, {3.770653755382519*^9, 
   3.770653993765769*^9}, {3.7706540273477535`*^9, 3.770654035434143*^9}, {
   3.7706541009539914`*^9, 3.7706541135144005`*^9}, {3.7706551644669833`*^9, 
   3.7706551911688304`*^9}, {3.7706555179175944`*^9, 
   3.7706555185080433`*^9}, {3.7706560299123034`*^9, 
   3.7706560414561105`*^9}, {3.7706565538368797`*^9, 
   3.7706566203412423`*^9}, {3.7706566792253675`*^9, 
   3.7706567306690025`*^9}, {3.7706567614412136`*^9, 
   3.7706567661650867`*^9}, {3.7706580073342223`*^9, 3.77065803914351*^9}, {
   3.77065810698641*^9, 3.7706581395841265`*^9}, {3.770659601578477*^9, 
   3.7706596255369625`*^9}, {3.770659815091133*^9, 3.770659832154787*^9}, {
   3.7706598665555983`*^9, 3.7706598670034018`*^9}, {3.7706599064994698`*^9, 
   3.770659908498126*^9}, {3.7706601820110736`*^9, 3.7706601825955114`*^9}, {
   3.7706632317033277`*^9, 3.7706633087913857`*^9}, {3.7706639081792707`*^9, 
   3.7706639120528913`*^9}, {3.770719779529786*^9, 3.770719807786272*^9}, {
   3.770720804535232*^9, 3.77072083911493*^9}, {3.7707208841724844`*^9, 
   3.7707209359253154`*^9}, {3.770721036027822*^9, 3.7707211237882853`*^9}, {
   3.7707212157183914`*^9, 3.770721239450965*^9}, {3.7707213183391876`*^9, 
   3.7707213286595984`*^9}, {3.7707215117636433`*^9, 3.770721522772251*^9}, {
   3.7707215932300177`*^9, 3.7707217131345825`*^9}, {3.7707217498255005`*^9, 
   3.7707217502892613`*^9}, {3.7707319091948924`*^9, 
   3.7707319612881136`*^9}, {3.7707321385943503`*^9, 3.770732145554098*^9}, {
   3.7707412211332808`*^9, 3.7707412392508335`*^9}, {3.7707417668562665`*^9, 
   3.770741782078046*^9}, 3.7707423862450094`*^9, {3.7707428677669287`*^9, 
   3.770742919398158*^9}, {3.770744103664768*^9, 3.7707441512262106`*^9}, {
   3.7707456048705945`*^9, 3.7707456072432547`*^9}, {3.7708007258543277`*^9, 
   3.770800728308279*^9}, {3.770844682301502*^9, 3.770844707622489*^9}, {
   3.7708449493136806`*^9, 3.7708449522639728`*^9}, {3.7708460210876255`*^9, 
   3.770846041175943*^9}, {3.770846107265051*^9, 3.7708461086732883`*^9}, {
   3.7708461436212363`*^9, 3.770846165511707*^9}, {3.7708965540303793`*^9, 
   3.7708965699844894`*^9}, {3.7708966575379105`*^9, 3.770896718857005*^9}, 
   3.770896752435296*^9, {3.770899894757167*^9, 3.7709000793437243`*^9}, {
   3.7709001398409104`*^9, 3.770900140384426*^9}, {3.770903270965486*^9, 
   3.7709032753059163`*^9}, {3.770903343396787*^9, 3.7709033561975756`*^9}, {
   3.771235212067232*^9, 3.771235241712954*^9}, {3.771237152126459*^9, 
   3.771237335831362*^9}, {3.7712373969520187`*^9, 3.771237453752553*^9}, {
   3.771237501569764*^9, 3.771237506908498*^9}, {3.771237723502678*^9, 
   3.7712377627742977`*^9}, {3.771237807736167*^9, 3.771237826979565*^9}, {
   3.7712379019222775`*^9, 3.7712379294975557`*^9}, {3.771238458235371*^9, 
   3.7712384593274527`*^9}, {3.7712400737564416`*^9, 3.771240102235361*^9}, {
   3.77124087670015*^9, 3.771240952615921*^9}, {3.7712663523343716`*^9, 
   3.7712663805460176`*^9}, {3.771266413119943*^9, 3.7712664216930323`*^9}, {
   3.771273898432495*^9, 3.771273927914159*^9}, {3.771279215733039*^9, 
   3.7712792189430685`*^9}, {3.7712792699724016`*^9, 3.771279312190402*^9}, {
   3.771319641307296*^9, 3.7713196667909803`*^9}, {3.771319724830249*^9, 
   3.771319727870121*^9}, {3.771320156765289*^9, 3.7713201856211724`*^9}, {
   3.771320268921921*^9, 3.771320269734749*^9}, {3.7713204382236753`*^9, 
   3.771320438589697*^9}, {3.7713466852694063`*^9, 3.7713466904513545`*^9}},
 ExpressionUUID -> "79a6531e-adbf-4f56-a30e-fc378c41d3c5"]
}, Closed]],

Cell[CellGroupData[{

Cell["Circumbilliard (Old)", "Section",
 CellChangeTimes->{{3.7662738395447283`*^9, 3.76627385153003*^9}, {
   3.766273911974495*^9, 3.7662739162866073`*^9}, {3.7663443613067293`*^9, 
   3.766344371979205*^9}, {3.766344429283343*^9, 3.7663444361559677`*^9}, {
   3.76674623671449*^9, 3.7667462434591775`*^9}, 3.7681699161611414`*^9, 
   3.768171527440196*^9, {3.77042678103084*^9, 3.770426783484359*^9}},
 ExpressionUUID -> "340391ac-0abf-4a80-abd4-0c804db1afd8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getRho", "[", "a_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"z", ",", "num", ",", "denom"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"z", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"a", "^", "4"}], "-", 
         RowBox[{"a", "^", "2"}], "+", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"num", "=", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"z", "-", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"denom", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", "^", "2"}], "-", "1"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", "^", "2"}], "+", "z"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"num", "/", "denom"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.766273199501626*^9, 3.766273213192277*^9}, {
  3.7662737518733654`*^9, 3.766273764016876*^9}},
 ExpressionUUID -> "095377a0-a72f-4ab1-a958-7232b2ee19e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"getRho", "[", "a", "]"}], ",", 
   RowBox[{"a", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7662738241259522`*^9, 3.7662738283516817`*^9}},
 ExpressionUUID -> "beaf935a-1ca5-427c-bcdb-7262d0cab85d"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.7662738288672748`*^9, 3.7663426690446963`*^9, 
  3.76674626573094*^9, 3.767890805774496*^9, 3.7679040217582946`*^9, 
  3.768120740475174*^9, 3.768170018256901*^9, 3.7704224714187536`*^9},
 ExpressionUUID -> "239d9453-24aa-4bd8-bd45-cac3b8e0e6a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getRho", "[", "1.5", "]"}]], "Input",
 CellChangeTimes->{{3.766273214237483*^9, 3.766273227240033*^9}, {
  3.7662737715916457`*^9, 3.7662737991114993`*^9}},
 ExpressionUUID -> "c5c88542-057a-4078-8f85-02910d0e84e8"],

Cell[BoxData["0.36265966294292057`"], "Output",
 CellChangeTimes->{{3.7662737798480015`*^9, 3.7662737994476*^9}, 
   3.7663426690726213`*^9, 3.7678908057874613`*^9, 3.7679040227556267`*^9, 
   3.768120740487142*^9, 3.7681700182698717`*^9, 3.7704224719214115`*^9},
 ExpressionUUID -> "1179cbe1-6c21-428b-b585-46313bd2711d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Find the axis ratio which can be placed around a triangle with given \[Rho] = \
r/R ratio\
\>", "Subsubsection",
 CellChangeTimes->{{3.7662739498149304`*^9, 3.7662739808726616`*^9}},
 ExpressionUUID -> "d095044d-453c-4fb9-bedf-d679f195e7d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rhoSols", "[", "\[Rho]_", "]"}], "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"a", "/.", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"getRho", "[", "a", "]"}], "\[Equal]", "\[Rho]"}], ",", "a"}],
       "]"}]}], ",", 
    RowBox[{"\[Rho]", ">", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.766272792836685*^9, 3.7662728501852665`*^9}, {
  3.76627308159332*^9, 3.7662731513962617`*^9}, {3.7662738671113715`*^9, 
  3.76627388955941*^9}},
 ExpressionUUID -> "fcc5a1e6-4028-42d1-8919-4b69d0c4ce75"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    SqrtBox[
     FractionBox[
      RowBox[{"2", "+", 
       SuperscriptBox["\[Rho]", "2"], "-", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Rho]"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Rho]"}], ")"}]}]}], 
      RowBox[{"\[Rho]", " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", "\[Rho]"}], ")"}]}]]]}], ",", 
   SqrtBox[
    FractionBox[
     RowBox[{"2", "+", 
      SuperscriptBox["\[Rho]", "2"], "-", 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "\[Rho]"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Rho]"}], ")"}]}]}], 
     RowBox[{"\[Rho]", " ", 
      RowBox[{"(", 
       RowBox[{"4", "+", "\[Rho]"}], ")"}]}]]], ",", 
   RowBox[{"-", 
    SqrtBox[
     FractionBox[
      RowBox[{"2", "+", 
       SuperscriptBox["\[Rho]", "2"], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Rho]"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Rho]"}], ")"}]}]}], 
      RowBox[{"\[Rho]", " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", "\[Rho]"}], ")"}]}]]]}], ",", 
   SqrtBox[
    FractionBox[
     RowBox[{"2", "+", 
      SuperscriptBox["\[Rho]", "2"], "+", 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "\[Rho]"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Rho]"}], ")"}]}]}], 
     RowBox[{"\[Rho]", " ", 
      RowBox[{"(", 
       RowBox[{"4", "+", "\[Rho]"}], ")"}]}]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.766272838538147*^9, 3.7662728505692406`*^9}, {
   3.766273090448631*^9, 3.7662731521731844`*^9}, {3.7662738794538193`*^9, 
   3.766273890158808*^9}, 3.7663426693219547`*^9, 3.766739434918539*^9, 
   3.7667462706098957`*^9, 3.76789080604976*^9, 3.7679040245089397`*^9, 
   3.768120740735478*^9, 3.768170018510195*^9, 3.7704224732685413`*^9},
 ExpressionUUID -> "43f1b468-5b98-41aa-8481-f0f996aba7df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rhoD1", "[", "a_", "]"}], "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"getRho", "[", "a", "]"}], ",", "a"}], "]"}], ",", 
    RowBox[{"a", ">", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7663051593980303`*^9, 3.766305163118331*^9}},
 ExpressionUUID -> "a028156b-e108-4ae6-b6de-7faecd66b923"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "a", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "5"}], "-", 
     RowBox[{"5", " ", 
      SuperscriptBox["a", "4"]}], "+", 
     RowBox[{"4", " ", 
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox["a", "2"], "+", 
        SuperscriptBox["a", "4"]}]]}], "+", 
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"4", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["a", "4"]}]]}]}], ")"}]}]}], ")"}]}], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["a", "2"]}], ")"}], "3"], " ", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["a", "2"], "+", 
     SuperscriptBox["a", "4"]}]]}]]], "Output",
 CellChangeTimes->{3.7663051647499733`*^9, 3.7663426697827225`*^9, 
  3.766739436265937*^9, 3.7667462720799646`*^9, 3.767890806590314*^9, 
  3.7679040264517713`*^9, 3.7681207412481055`*^9, 3.768170018991906*^9, 
  3.7704224746502028`*^9},
 ExpressionUUID -> "3fe49116-6640-43a8-8331-ce1f6e493e3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rhoD2", "[", "a_", "]"}], "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"getRho", "[", "a", "]"}], ",", "a"}], "]"}], ",", "a"}], 
     "]"}], ",", 
    RowBox[{"a", ">", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.766305093430359*^9, 3.766305129456105*^9}},
 ExpressionUUID -> "b3a7d6cb-f2f9-4001-95a1-f465b6a24f84"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["a", "2"]}], ")"}], "4"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["a", "2"], "+", 
        SuperscriptBox["a", "4"]}], ")"}], 
      RowBox[{"3", "/", "2"}]]}]], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "5"}], "+", 
      RowBox[{"4", " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["a", "2"], "+", 
         SuperscriptBox["a", "4"]}]]}], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "19"}], "-", 
         RowBox[{"15", " ", 
          SuperscriptBox["a", "8"]}], "+", 
         RowBox[{"28", " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["a", "4"]}]]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"3", "-", 
            RowBox[{"4", " ", 
             SqrtBox[
              RowBox[{"1", "-", 
               SuperscriptBox["a", "2"], "+", 
               SuperscriptBox["a", "4"]}]]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["a", "6"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            RowBox[{"12", " ", 
             SqrtBox[
              RowBox[{"1", "-", 
               SuperscriptBox["a", "2"], "+", 
               SuperscriptBox["a", "4"]}]]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["a", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "26"}], "+", 
            RowBox[{"20", " ", 
             SqrtBox[
              RowBox[{"1", "-", 
               SuperscriptBox["a", "2"], "+", 
               SuperscriptBox["a", "4"]}]]}]}], ")"}]}]}], ")"}]}]}], 
     ")"}]}]}]}]], "Output",
 CellChangeTimes->{{3.7663050988137784`*^9, 3.7663051321947613`*^9}, 
   3.766342671559971*^9, 3.766739438509965*^9, 3.7667462740965986`*^9, 
   3.7678908087595387`*^9, 3.767904029960359*^9, 3.768120743249752*^9, 
   3.7681700209467087`*^9, 3.770422477674147*^9},
 ExpressionUUID -> "1d7ba808-b3a8-4069-9aad-1a1df3f1eb51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rhoD2", "[", ".5", "]"}]], "Input",
 CellChangeTimes->{{3.766305121122723*^9, 3.7663051235262976`*^9}},
 ExpressionUUID -> "12a105fe-abf1-4d89-b628-7c58d354ad1c"],

Cell[BoxData["0.5485096153508959`"], "Output",
 CellChangeTimes->{{3.7663051238822403`*^9, 3.766305132839039*^9}, 
   3.766342671682644*^9, 3.766739438602689*^9, 3.7667462749144163`*^9, 
   3.767890808923087*^9, 3.767904033469971*^9, 3.768120743322562*^9, 
   3.7681700209726405`*^9, 3.770422477754932*^9},
 ExpressionUUID -> "da255f0c-5688-493d-a84f-02fe573bd122"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"getRho", "[", "a", "]"}], ",", 
     RowBox[{"rhoD1", "[", "a", "]"}], ",", 
     RowBox[{"rhoD2", "[", "a", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "20"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<r/R\>\"", ",", "\"\<(r/R)'\>\"", ",", "\"\<(r/R)''\>\""}],
        "}"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesStyle", "\[Rule]", "20"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<a/b\>\"", ",", "\"\<r/R\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766305043210229*^9, 3.766305356710458*^9}, {
  3.7667394567265024`*^9, 3.7667394908035145`*^9}},
 ExpressionUUID -> "a602ffb8-4f1d-4321-aa61-15dd45077f66"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
y/B/L+hkEA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwdl3k4VP/bxy0zUSlZsqQSSkkpRSrqPSSpECoqVFJIhXwlSRKSQpZos6eU
NmRJojm2LC3MSIhI9j3LmDGDec7vmT/OXK/rc517ed/LOUfplJvlGSEBAQFh
8vK/f85+1wRzN/edtfz//+HonACpGlUzKDxZYzVDcnIkrMJVj6PBqvoIi+R5
4ieimuIdcVWdIdJLcunhxMvnVV1xpl3BoZ7knd+H3/IbPHB16KpLEclxFxcq
V8V7wdo7d1kyyRxpjdhoex+02F33vUby4XxTUVtVP5isDww+THLTm7yiaJY/
KtbY6a4h+dZ1o8vshgCc3B3/mDXLxxaLnxttC4JwYW1JahHJncqO/UR8MKI0
d1n5kxw9wUpddT0EBo7BWTtI1v980+6O/R3sudmVw5rhI/Hss9qDqndB61fI
OkxyWsKS3baUSMxfdvrFzDQffsF/U+6yIsGQfGmYTPK6Ix424w3RqEj3c67n
8SGsvz1/VdU9xGRIDTuR/EtNaPGRghiY07KlWVw+QnhR3wvj7yNrWxiNP8XH
ic6j6iPhD+DlYr/Ll+Qt35RClK4/RFeO999xDh9diVn6wfaPoeQp+Y/J5sPA
gJFzQDURLta3V5iz+JBXfyQRIJuEbCeH3ykTpH63N+ocoySjQcd17fA4H7Ue
nHthrGQo3hd39Roj4zcMMR1teIJ9zxyddo/w0b918Ood81S0PZrrcW6Y1Hu9
+UuVqlQE2HjOhA6R+cnIiVgVPIXp/uHwwgEyn57nREF8GiTeJR1u7uHDqGX+
yMHFzzGUOW91fTcfWbVuy4bCn0Pjjo9jVReZ7wcdH8XrLyAiILoqpYMPndCK
zUH2L9HnY3B4QRsfMRo9aaaqb6ForztV/4OPakrz+/npb5HB2nHOuo4Pgebv
lVXqGbjazpVjMvjI22XDeiKXCacqSZns73wo/zOQVVyehY6adFmVSj64xpI2
smrZGBLQF3r/gY/FWmEOXi7ZyBQU5Va952Oj4pzz9a+y8cCJaK3P5cORNeV7
TyMHP7M+HWnM4oOZ0p4orpWLdWktrrfS+XjJzfwrgvfYfjehM+QBH+Vdawcc
/d+jyKGtZ3UsH39qn46XF79H2L5jXvRoPmSeP6QEGebDS2ZUvjGcj4CD/qoC
+z7g3dM1BW8D+Tj2+oAL59BH3LrBkBq4QM7L8eHRXhc69h7o+H1Wjw+vesbU
2HM6DL6vW717Gx8dJrmCM510bNeSl5bfwkfrsk8hIRsIyBdxCl5uIPUQu/kw
Pp1An/dJZ09lMp9+yfyyhGLo2KpceDyHj6VplMK9hcVQ2bzaYlqIzM9+kv79
VzFWr792zIo/i51NTRWNsiU4mHDt4xh7FjKVyQ2DUSWYjZSp/NI7i8/PNNjS
waVYtNLkNLtyFr72K3iPnpZigZtOeEPZLDYtk+QvLy2F6R9pswxiFokxrDlq
AmXALj2P3fmz8AoslNnhU4Z2E6ru/OezULXft+WMazmS0GM5ETCLW0sdL+Va
VWBC42oya/Ms1mRkbUnxrEAtEmdrNGZRrT/DDosmmc8WS1GbxUKnGJ/T3ytQ
EdclvlpxFvezSq5LGVVCdioroHjuLNKMFO9c1K7CykM2d1V/z6DcvTFxvfQX
pCVajtv7zsBReOVJ+U1foBTxs2z60gxE77spUc2/wG7x88YwtxmYfJzztCX0
C7YUMmLDTs3gB1U7PVT4K+p9vs6dazyDzsdR2X1jXxFtUVnRv2gGwuX7Kp8x
vqNTe7315KNpyJlvL1ky9h3hQcXsS1HTWNesVhghWYONc59RekKmYTUqmnnl
YA1WXmxRSLg8jRfLKh6Y1tfAYP73PdaHpqH6MSXb53wt3lC3xY3Pm0a11PJA
ZXcG3idMDxqf5+FQ02IBO38GLjTQtjDteWhNXHDtQSQDIdnCkfuseRhXm/ES
y2LAKvvcKlEDHpbSWlwmRxkIr3Z+niPDg+v5x5bV/zFR0K9pXVzIhVS5jLLH
5Tp8LUpbJ8+bwruh3uMPgusQKM1YqTMyBXOZj3GFsXXQKUhYZtgxhbtOJxaL
5NThqNR/X9Z+mYLovBei8f9I9mjUUHs8hWmzbSPlZ39gQu5M7i+tKXQ22hTK
29bj3vXopzG2HAQIakztPFePlKw4f3czDpTWCmw57VOPoVHrVdtoHBy/+jTj
7cN6rPo74R+pwkHjsqEnu+rJc4HPIYf72Ph2yu/2BbOfuFExIad2kY28wWSr
YloD9F4dP+p9cRJ3Jco3qFs0YJXHGb7DiUk4bukTjbVvQMHxabctppOQ8df8
6BzQAOOr+VYRayZxSapEcVFZA3RM7pcvbGVBa3tH7/E9jVgSUpm20ZCFrFur
rk6bNkGnp9/EaXocIa/3HnI83gTRSU6YYM84TjIurK91bcJbf/f264xxLFLI
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
xdRAiSSHZL+PkdKnhrgoYXo9PTK3Dk/S71y5Okr2x/HpO29IrngQ1BrD4iLa
6U/zJMmDN/12vZ3iYmhD5GuteaQ/T+8XFTNcaN05KulEstYpjwXtgjyE8l2U
75J81Py8B5fKgzanbjSdZL+djg1S83h41BoUW0Dyk3Un9dYv5OH03gPKBMmf
lxxLMZLk4ezS7tf/Ox8QPTTnpAwPc7J+7335P39s03NXlvBgMfNqQcT//HXt
qY1ezoP9+xdiZ0k+Uqev/VqZh3++C2y2knytWPdxuSoPQmyW2Mz/8svQ5reu
5UFi9sSW9yR/TthwmqPBw6JS9QFHkvtD1aokNvNwZkwBYiSL+6hoqOuQ+TTU
735O6qXlvOyeoS4PyUHtkltJPmIly7EDD5qs9A+fSP19DSXsLu/igb/pmqku
ySmb5pdE7uHhxtWw9jdkvfoX8kNLD/DgzouxukTWd+EM51/LQR6sJuztqil1
2DwwdnjSmoejpZKZi0n2rehWVDtJxnciKjCC7J+U3D9BBqd5aFtnqfaJ7K/P
qb/6bJx58JD7fbpDgIzX/3v2XXceBJxEuiXIfpRM/+9fjCcPP7rXdimS/SrN
lFsf581DznSozCqyn+VWOqQ99+dBQU3v4GKy31dUsh8SkTzM5R+jRkwyoTwa
X/85hofmOcrOR8j5WbnEQPLbQx522IjfkCfna835sNCmZB4SQgIWB44ysXGR
kt9YJg/fnj8OYg0wsWnb5wJODg+rdiw47NfPJPvjHHs2nwf9HyFH+eS8b83J
dZ9fzEPN3xrd/i4maEf2OaxkkP1CXbDgTBsT5sn/GVuN8hD3/nsdr5bcP1Vy
N21ZPPQYr/+7sIaJQ2NFxaemSHvR28UVvjFxxFBU101wGhvzF8wsr2LiZG/8
+hCJachvzHzxk9x/7hs/SxZoToMVnkyRIPdlFCH3e5nHNB5OHv85/xZ5f0BO
VeulaUgMlCXeCSL1MDTPS7oyjfI4s6+UACbeVtyKULoxDT5FynfAl4nq75P6
qyKn4dF1aGOgBxNCv3+krXs7jdKempoOW/J5MBXprts/jcCdxk5pGkxYb5pL
OXpqBvf/qKgPVTCw7r8PsuccZ5BwfZHsjjIGhHLOql9zmcH6Ayu7bxMMvNau
tkzxmIEZ9arZkg/k+bbQlL6AGWTMF10r+5KBt1gAn9QZCJhfG7sVygDFVMIn
rnMGPyJbbHxMGHjnJP/vt+Ms7IyM9VdU1sLie03TwmN8UN25f9yDa7DGa23D
9pUCtAv7tbnxPt8w2j2tcu+ZAM3QfHmaw94vsHV/4qa/XJAW0dWTU2Jehejm
hgTpFEFarvzC1b77KuBy4k/1DgUh2mMJ8Yenb5ZjdKf5kOA9Idoup9/+t3pK
sUvAfKxfWpj2drmRdIRxCXR+KU+q3RWmjeotw8ZOAqzYmy3hEhQae6WAhCiF
Doc3B/LDoik09feRSga3C/Hf78Ho9nlUmtell4K25wpgOiJvbhNOpX1vjRzV
tcxHtfwSMXWRObRzrFuSBiF5mEy6URTrN4f2aJugVORgDoZErlisEhCh1dp9
Mpo5mI3gkF2d866I0LyXLNS2ZGehNC4qX/WqCM3E3v6A/2gWBDLawgyuidB4
OjNPMgeycKX+qrbPDRGaT9TJMdk/WTivnBPcd1uE5vJitZxgVRYsCleqVT4W
oVHtL2TrxWVh6T+q681CEdrPialGS/0sHBE+ZJDySYQWqVl47LNuFmJlnsgU
ESI099NCU7pbsrBwx076RJkIbYPPo1vr1bMgeMdr0elvIrSpU9d+qC3OQrdK
zzuDVhGaRW2sS3BfJlR0tG8d/yNCy7+01kShMxMn9wXa+PwVof3Z7aj3rjUT
Te6KlHfdIrRdOs67u+sy8bXI+rDSiAhNSrOg3fFTJkQZz9R2jIrQxh+9XCH2
IRO7O8dnjoyL0B6+9nTKzs7Ep3mRaZFsEdqym9pzRdMzwVvW6vN6SoT2b9b3
VG5qJrZqrjtQyROhnbwD4nRiJjwNfVQ6Z0RoksfSlGQeZSLLupLN54vQJiZ/
3ay6l4n/A6NYUUM=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"a/b\"", TraditionalForm], 
       FormBox["\"r/R\"", TraditionalForm]}, AxesOrigin -> {0, 0}, AxesStyle -> 
     20, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox["\"r/R\"", 20, StripOnInput -> False], 
       StyleBox["\"(r/R)'\"", 20, StripOnInput -> False], 
       StyleBox["\"(r/R)''\"", 20, StripOnInput -> False]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7663050463518534`*^9, 3.7663050841860743`*^9}, {
   3.7663051182573853`*^9, 3.7663051735241117`*^9}, {3.7663052238689814`*^9, 
   3.7663052908606653`*^9}, {3.7663053224766283`*^9, 3.766305357306706*^9}, 
   3.7663426718142915`*^9, 3.7667394391392546`*^9, {3.7667394753147793`*^9, 
   3.766739491465719*^9}, 3.7667462761431017`*^9, 3.767890809048738*^9, 
   3.7679040342718353`*^9, 3.7681207434442644`*^9, 3.7681700210932856`*^9, 
   3.770422477945139*^9},
 ExpressionUUID -> "c9abf7bc-c2ff-454c-a1b3-c4f2e1485679"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "/.", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{"rhoD1", "[", "a", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "1.1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7663057337846956`*^9, 3.7663057518164253`*^9}},
 ExpressionUUID -> "476e91f6-f792-4d27-ae79-942be67dcb7f"],

Cell[BoxData["0.9999999717256842`"], "Output",
 CellChangeTimes->{{3.766305744919083*^9, 3.7663057523958807`*^9}, 
   3.7663426720057793`*^9, 3.7678908091245356`*^9, 3.7679040377345743`*^9, 
   3.768120743482131*^9, 3.7681700211052947`*^9, 3.77042247941593*^9},
 ExpressionUUID -> "ee6e580c-92b3-47ed-a451-8d853b25b8b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"a", "/.", 
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{"rhoD2", "[", "a", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "#"}], "}"}]}], "]"}]}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{".5", ",", "1.5"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7663054683927097`*^9, 3.7663055244061875`*^9}},
 ExpressionUUID -> "f1d1e6ca-f356-40f8-987b-183d34565cfd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5599638547925565`", ",", "1.372851055417953`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.766305477672899*^9, {3.766305521685463*^9, 3.766305524996608*^9}, 
   3.766342672018746*^9, 3.7678908091375003`*^9, 3.7679040385254583`*^9, 
   3.7681207434940987`*^9, 3.7681700211182485`*^9, 3.770422479954491*^9},
 ExpressionUUID -> "d6448fdf-7393-4bfb-a3bd-6db55d2b7f61"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{"rhoD2", "[", "a", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", ".5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766305491766219*^9, 3.766305492656807*^9}},
 ExpressionUUID -> "5327fc3b-5a29-4dbb-8338-feded7c295e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", "\[Rule]", "0.5599638547925565`"}], "}"}]], "Output",
 CellChangeTimes->{3.7663054931175785`*^9, 3.766342672030713*^9, 
  3.7678908091514635`*^9, 3.767904039274458*^9, 3.768120743507064*^9, 
  3.768170021131213*^9, 3.7704224805015693`*^9},
 ExpressionUUID -> "6c1142d6-7ec6-4e5f-8187-20691944006c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rhoSols", "[", 
  RowBox[{"1", "/", "3."}], "]"}]], "Input",
 CellChangeTimes->{{3.766273138982991*^9, 3.766273177831564*^9}, {
  3.7662738976966543`*^9, 3.766273904224203*^9}, {3.7662740666400642`*^9, 
  3.766274067495755*^9}},
 ExpressionUUID -> "df97dcf4-ad4a-4be6-bbc2-11f3a85f8e6e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.6290159310351968`"}], ",", "0.6290159310351968`", ",", 
   RowBox[{"-", "1.5897848538657195`"}], ",", "1.5897848538657195`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.766273155316808*^9, 3.76627317815867*^9}, {
   3.76627389811654*^9, 3.7662739047488003`*^9}, 3.7662740678547955`*^9, 
   3.766342672044677*^9, 3.7678908091644287`*^9, 3.767904040227907*^9, 
   3.7681207435240507`*^9, 3.7681700211431837`*^9, 3.7704224810297375`*^9},
 ExpressionUUID -> "f195a9a1-da33-42a4-b5f9-a8c2f18c5422"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rhoSols", "[", "\[Rho]", "]"}], "[", 
   RowBox[{"[", "4", "]"}], "]"}], "//", "TeXForm"}]], "Input",
 CellChangeTimes->{{3.766303486910944*^9, 3.766303506469699*^9}},
 ExpressionUUID -> "4b5effe6-0fbc-4be5-8cad-a870727125ae"],

Cell["\<\
\\sqrt{\\frac{\\rho ^2+2 \\sqrt{1-2 \\rho } (\\rho +1)+2}{\\rho  (\\rho +4)}}\
\>", "Output",
 CellChangeTimes->{{3.766303493439252*^9, 3.766303506742969*^9}, 
   3.7663426720795817`*^9, 3.7678908091793885`*^9, 3.767904040974911*^9, 
   3.7681207435369844`*^9, 3.768170021156152*^9, 3.770422481558324*^9},
 ExpressionUUID -> "246d7218-47aa-4b9d-83c6-70faeb551a7e"]
}, Open  ]],

Cell["\<\
TODO: Solution : get the axis ratio. get the mittenpunk. draw ellipse with \
center on mittenpunkt, passing thru all vertices. but how to rotate it? over \
constrained?\
\>", "Text",
 CellChangeTimes->{{3.766274084087424*^9, 3.766274129390705*^9}, {
  3.767904042159296*^9, 3.7679040431087646`*^9}},
 ExpressionUUID -> "96373b6d-22fb-4066-bd09-085baee0622b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pA", ",", "pR"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pA", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"getRho", "[", "a", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "0", ",", "3"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<a/b\>\"", ",", "\"\<\[Rho]=r/R\>\""}], "}"}]}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", "16"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"pR", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"rhoSols", "[", "\[Rho]", "]"}], "[", 
         RowBox[{"[", "4", "]"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Rho]", ",", "0", ",", ".5"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<\[Rho]=r/R\>\"", ",", "\"\<a/b\>\""}], "}"}]}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", "16"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Green"}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"GraphicsRow", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pA", ",", "pR"}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7663028912731023`*^9, 3.7663030506549177`*^9}, {
  3.7663030915346217`*^9, 3.766303159386714*^9}, {3.766305003367749*^9, 
  3.7663050034226027`*^9}, {3.7667395378530593`*^9, 3.7667395804201813`*^9}},
 ExpressionUUID -> "61861c02-0f56-4dce-81fa-fb87a26d698e"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwVlnk4VV0bxslwREkpUiREiVQqSnEfkt4MxYuIohGV8KmIZIqoZG4Qkcwq
QxoMx5AhQ4UGhONsZQpnlKmEb7/rn3X9rr3XWtd1P/dzr6Vw0v3fMwv4+PjU
+Pn4/punTdwembt76Iny/Td4e44IB0u2qByErUQDd8zlmd7jaBy+o+KAxGqr
3ssuH/RElzjGdCY5YVlXBNdygtCrsU72dlVxA0XcYcc2F6aeXjM7b77DEwkv
vkfab53US/yfuGJjkhdGk/eFyEzM600v17gbe8IX2t62rOxKIVgXm4kcVfGH
dpWKJb/LInQ+f10eOxEI0L6fb/q9FGEBRt5THcHQyayR3bpVCloW7VuOlobg
7KlLItu7VqFf0WmkKukGTFz2uHwel0fs+ESackA4dCO0C0OrFKH/LvTYrRO3
YNK3Xci9UhnJZzNaLVUiIZmjrJrprI7MR6v2HRWMRq98kJuPyBb43/iRGjkR
jUcGjdKhv7dC3dbT/ldHLK4NLhR5v0ULAvo6xcqNcSi6wn4o6L0TXaoLVtiW
xsN8ncCKJ506CJ+JaaYl3cNiF1VFyjjg2H9EjXPnPvapBLEGrfWh9VEhXCHg
AcJ/m5yaqTTAQHKh/o0TD5HwzDvzdcU+GBh8enlIJRnt8Qes3Z1MIaOWsDRY
OgUZ0qE2X7cdxPTNLdp2go/x7WmH8kuKOVo9p+MiJh7DTlGj/860BfwNw814
HU/gpF3Sa7n5MEZ2Mq/eMk9DsobGzfKDNrDeZJ6r1JgGv6rMA7qXbaEutZJy
uDQd09mLTfw77NA1lFVVmpSJO83S9/h4jjCii3EsV2Rh9b2mzFvpx1HY6i7H
upOFA3VC2vJWJxBeou0rH5CNtvKr1wbLT0L7dv22kBO5mIlw3z1SdgbxGkOZ
Zip5kMhx1c454Yomwe43Yjl5+GKw+9XTIxfA193c0KiWjwqNMyVfrd3weq/9
xJOVBWj3cqk13eQBRa6BtPyaQoj2G2Dc2BN//llmL61aBJrhL6tXw15YsT3i
lNe5InTe9B7sueGNLfLCrm1Pi+C6R4cjrXIFThO//eI0XsLg37i+ynM++Jz6
PXnJ9ldY8Jma073ID7l/Cn5Q8AZWm4Xbl3YFom5g46hT4BsMpWoWqu4KQm9r
+q+6t29gGc1SOZAQBKmsB4IhhsXg/3Q+JvloMIItA1X4jEtw/pnD2lTOddg9
O3Ru2qoMTtKvDMeMwiDqwOb9PFcJHdVdpmtLI+HV9un3WFYlhjbcNvHfGoU+
01f8s/2V+LlEO6gyJwoMuYrw8M1VeBQdnnD5YDReLwp9kJRThSGH+5FjRjFw
GllWXPvoLULSzXtUzOLwLkNjavmNGnyL+i26Ju8+/E6snUlIr0HBmoE/Q1P3
oSm3bH5NTQ1Kuh0YCgYPkBw/IazKV4s63WN7BzoewOs6TUrXtxZ7zrm0Z4s8
hMoJY60zbnWQeLlOf0VAEsJknS6/OlwPQxOVphvEY2zIL9RKvVQPjY0Sgf6i
qWjSn52KiK3Hl7GKv7k7UiHuHO97upn8zpJReRKRinuF1QGSRg3YaDauJaL7
BJlG8rf+t6MR35gCi55mpaHO41vypuXvcWb6dLtQeiYE6owbMj41w0fihXiW
1nOsNNepXjXWjCs+XW27Lz6HercqLWpZC3zCUk+LFTzHYZ5IgY9lC0SzrsXa
bcxDtlz9fbO2Fnz5zNR5o5APlbLUIl/XVpxP7el6dqcATZJrrit6fEKKeboR
I+kFJOukFD29v8CiqeL1xiVv8Jr5+PBbagekDK/kCulU4Zliboq2fTcW0xz9
OwXfQV6LHRd6ksB5OWFaPj7AIuxMpX7sd+xZ/LPBQ/0Tyn0l8TWxD8dWb0na
EPiV7JfFpRXBA0hvWCt93bcDp+9miK44PoTjxa7KlgpdiB+TeKHuMgRvTSN9
UfUu1BzyO2LoMQSuKKWyRKsLiqKW2RcDhxDv7vGG37QLvf58Rp8fD8GW6xG4
3asL9i72QVHfhzCWMFci29iFf3cvnV546icOqveZv3TpRvADvxSF8z+hTt9R
dNqzG4UTQ0a7Lv6E6qyj0SK/bkgUVNx1uf4Tp84dp1OjutG8znVbfdpPlAtu
bNd71Y0D4vVuIf0/YRnzMvvGfDeo3/0G5s4MQyBeUk78Dh1/3NuYty8MY6hE
W1zgLh1Fc5vGV14eBt3lgi8niQ4VWWLBtpBhrGkQyct7RsciG/21zk+GwXpS
OlL3no7OD0L2LYxhrNRxULMU6YFncWRris0I0kzWr6n37YH6/qEOdccRvOoc
rE0N6sFAG4gSpxGsXe1pfjG8B7a/uKwvl0fAv+2r8MzdHkDDUkwkfgSLHa1v
JRX0YFG6tJFH6wjqaLLD6/p7kBH1uIx6YBRhUcdndhgy4CeruNTDYhQIKGYe
N2bg35w0p5Qjo7DI0K8INGdgrjpz6dzZUdgZGE8nH2Xg8OQz57Jbo9j/JfSm
9SUGRI6VSGp9GMWu/kCPnFQGGMM6Z898HUVjqZaHQhYDL71oFfH0URAhOtsi
nzFwIrry7C/mKBY0tc3te8NAaU1dZcFiJlZXJMRqfGDAdePn82qHmAjrkVLq
+8WAwRvLt3Y2TPh08vNnTTOw0rBN6pYjE+opjg8dZxmoO/bt7U93JjLCrPjy
hQmsiWFIZ0aTXNOY9m4lgdapkZq1n5mwqRH53qlDIDPEVca8i4kX2q2lw3oE
/Jay3QJ+MJFc3HiUbUBAVY0nwxhj4sJSg/k2YwLBDlPuiZIsDIUpMNfYEdhe
JyArZc1CZZjl8gQvAnX13Wvlj7FQHfosY9CHwOGmIuUNZ1iwJBJuqF4j4NNy
arPOZRYMbtjqR10nUNFZY+Bwl4XuYzsHuqIIHKIn7nd+xML03wjdL7EEehkX
TT0yWJjdHzhTdZfAgn6lw8GvWDjYFv7SL5HAfvb1s5ltLOSW5ly6nEngG9fe
Lb+HhZ6lwpYyOQTO/dp2sXiAhalLOwtfPCUQMd3n1zRBrp9xm6krIPVYYBjN
XsEGbeydhnspATtpwTdah9lgpOwKanlPYFSGXgYHNhaKJ2z8+JHUR/Zl1T9O
bLDDlsRXtRBIUTjdZOfFxi3lYyXhXwj0q9X2+N9jY4evXUtyF4HLGkk/wpLZ
6Mgb/WNMJyC89dJQdCYbDi91FrF6SH211vGevGajc4T5a9l3Am7UEMH6djaW
2EecGRwkMG9wdGErg41jOvdMDX4SiN63XbxzkA2bQVeD+GECRcb90qOTbCxd
NO++iknA0IwmOz7HhtzuhBcHWQTaD8UrzApz8Nm5XMaHTWDaylBtiTQHErbD
5wu4BG7ayG5ZKc/BYxPNk+U8AqvsxrcrrOcg8lRYXNUYgT2O6XrbtDk4mGBf
kTNO4OMJv717wAF/tW9N1AQBh9NW/+zbz0Hz8MAq10kCQWcF/7Wx4aDyqsM3
yjSBpEeNr9scONi7rLSglOTiT5GrrZw4WBIXrXnmNwH2LpkB88scDNv6GaX+
ISDqxjjQ4sfBJZE7PzRnCCg/ScszC+FA7uCSPTSSj4pqXDGO4+CQ15vdr/8S
8Nb7RW94yMGyoyuZKrMEYj2L9fc/4WDfy+NuUSTnZV7LrMvhQEnrbT2H5MYu
AzHDQg4mFT1n98+R9RIX8agu5iBiS9HyByTz7f34lVpF6uP5flkvyau9Y3dV
1pPn71s4Kz9PQOupTbJuCwdMnepvNiRbELICtHYOmY+WT8NIdpX84azD4MDT
Xt43n+Tw/Vkfigc40GLFGLeQnHbVdas2i4PX/8gqDpFckb/13qtxDmJrtYSn
SO7qm/yz7S8HsxeO/50j+Y8YY3MnPxcnmGtE50kWyaSefCDExbazc9v/+1+K
mhZvs5CL4Mcxwf/tt65LqF5qMRdzUf+b/u88zUsuv9skuHCK0E0qIBni79Xu
Ludi5arEizdJNs3e5GC1kotsxo4QO5LtDKKjJWW5eHqr8osSyS70serP8lzk
V3OcB0g9vLysJ2KUuNggGmKUQnKIRPF6i/VcFBbisgXJMbmr7CTUuPApG/09
Q+qdbHgtokWDi/SPh7uSSX7GICoiNbnQk7aW1SG59IoBz0yLi426VXUfyXo2
LMtQWqzDhaWRN/0IyX1G58Jv63NxLMjxrD1Zf27vh1LjfVy0DLmMtpJ+mfPd
zFp4gIsGd7cxPZJX5Y9bhJtzkRhunSVI+mvDAZuQ/VZcnBPXPnGU9N+OvpLX
wrZcjHotL342RcBcOmB1qCMXBwInrbRJ/zoUfjczPMVFte7arP+R/nY1MQwU
cObiFSsqL530f1jAwoEgNy4uXymbGCf7o2IoLs//GhcBD0KWgkPgQ9Bkr24Q
F7k+fKUg+61z9RHJ2RAuYhrXHthF9uP4oTVXrkZw0Y/926VHCagVZ+tfSSTX
i5Sz/Ml+3/9JPjE8hYvFpmKt6gMETo3cG3+QxsUKhkH85z4CibKhWSVPubjI
+PJDiMwLsaATi2fKuJC6sN5vUTeB9Q+/OYlVccFoNrHw7SSwt+hQ1epaLmJ1
bh3o7SBwdUD34p4PXNCvb62N/0rm24FVndfopP6ZjIbHZL5RTsVoRvZyISns
8aiVzD8lP5GI5H7ST+0KHdONBOzzJvUqmVx4Gcslar4j8H7Zl3S+WS4aTd0P
mlYQeNp92+O6HA8S+XkF8s8J1I8vaIpT4OF/h1srO3PJei72VUpX5kHNqbYk
IpvsL6pLe+0mHjQDKqJ60gjcTjfcI6zHQ5+tXb7aQ/JddWGWctOBh/G/1jJB
oaRe824pkSk83BlMcjOxIbCokJ59JI2HJe0NMi5WZJ6cNH6xLouH/oO1wQEW
BAreKdeV5vHgqKyTk2xC3leR9JHBch5aBHWFUkDmm5yxFug83N/ZT3+uQsBs
t/JHzsoxrBlJLNPkMeDu3f3HPHYMCq7M00Y+DDhkH1O7cG8MMVEtuVzyvj/Y
SdjffDiGglPtufc8GFDf3U97+2QMt1vlptucGRiZY/prFo1BeJlYsuJhBpxu
zC1Y/nUMprcni/9sZeDoXQWxjhW/0JNTLtY12IN/ipxXH0v4hVWfwy70GvUg
MLNaJSVxHO/PzRzL4XXjb1PN5jsRE0jhKAbeS+3C4qL+2dqYSTS2fUt23dKJ
kx+eNmaHTsGpdqNeDJ18tz7SD6y+NI1utq5JdkI7HLdOzShf+Y3zBS+JeuM2
sCb/vbzj3B8MuC/89lHxK5YENhdFeszgzyPrlIUTnxFTtbJHzvMv8kOEfyr1
foKN5kLBIydn4ZniNFLDbsULZxluj9McSgRChawmWmDR3NIpbjcPZXtvwXnT
Zmzw2tihs46Pqli+sy294QN4g3+V4jL4qA0zQn9XU9/jqMcTd/01/FR6Ib+3
2GgjYrs7Hi1P5ae+nxovyI9twDnH3ibd1Quoe3dpPlZxrgdPz5zFH7eA6iuw
Rf6m1Tvs5TMfG1kuQGWsOn3TSq8O2l2Kk6qRAtSKtVqGr01qMXE3lH5nqSA1
NXvf917rGpx6fqg4IlaQqjLOl+txqRoXe5ix30WFqDzTnzq6+W9hxpExt78j
RPXdI953d7AKTTKrFqlRhKnWVyuoBVpVmEwJKr/rL0w9ryfFsdxQCRbFx0KZ
j0Idnp7s200vx43wvf2iPhTq9fSZSRTTUJMYU6xylUJNvnPTz6yIBr58IsLg
GoV6Wl9P/2geDT5tV3f4BlGo38r9b1xLp8FV8eWN4ZsUqliS9ERzNA0WtHWq
DQ8p1J0awgufn6VBlivkFkqjUI3M3hhZytJgK2BlkFpBoVbqtIyGSdNwV+qJ
VHkVhaqddaGmfBkN4rp6leO15P68IpFNC2ngv+Ulcfojhbpgc3avzGQZBpWG
XhgwKNQd14s91FvLoKS9I8yhl0KVhK3EpfdlOG583d73B4W6doMznfauDJ0e
8oIvBinU9cUW0xblZfhQbmOtwKFQm43o22/llkHkU4aqLo9Cjfnhtak7owz7
+n/N2v6iUEubgg9tSi1DhWh0ZvQUhRpP9RRvu1+GGTmG77PfFKqvyIPcjXFl
2LlV/VDDDIWqGFPkFhRZhkuGvkr9sxRqgIWTXefNMhTaNEzNz1Oolv0WFzRD
y/B/L+hkEA==
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"a/b\"", TraditionalForm], 
        FormBox["\"\[Rho]=r/R\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      AxesStyle->16,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotRange->{{0, 3}, {0., 0.49999977100714516`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {192., -116.80842387373012`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}], InsetBox[
     GraphicsBox[{{}, {}, 
       {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
o1LYe0Mu7q6XEiwtfffdEsrxoHHxP8JaqSI=
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Rho]=r/R\"", TraditionalForm], 
        FormBox["\"a/b\"", TraditionalForm]},
      AxesOrigin->{0, 0.8},
      AxesStyle->16,
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotRange->{{0, 0.5}, {1.0000952426314773`, 6.230010861121692}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {576., -116.80842387373012`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}]}, {}},
  ContentSelectable->True,
  ImageSize->800,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.7663029262296705`*^9, 3.7663029633912926`*^9}, {
   3.7663029944394245`*^9, 3.7663030364100037`*^9}, {3.7663031058963203`*^9, 
   3.7663031597198224`*^9}, 3.7663050039332657`*^9, 3.766342672145406*^9, 
   3.7667394225095863`*^9, {3.7667395349747267`*^9, 3.7667395811093225`*^9}, 
   3.767890809244215*^9, 3.76790299680461*^9, 3.7679040444920564`*^9, 
   3.7681207436118193`*^9, 3.7681700212159586`*^9, 3.7704224835505395`*^9},
 ExpressionUUID -> "d4b1c7c0-6b03-4b6f-b4f4-ed72cb9b8223"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Draw It", "Subsection",
 CellChangeTimes->{{3.7667405271094227`*^9, 3.7667405319544415`*^9}},
 ExpressionUUID -> "b2d0c95c-b6d8-4792-aa32-d6759cf7200e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "drawCB"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawCB", "[", 
    RowBox[{"a_", ",", 
     RowBox[{"{", 
      RowBox[{"x0_", ",", "y0_"}], "}"}], ",", "theta_", ",", "x_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ellPlot", ",", "orbitData", ",", "orbit", ",", "normals", ",", "comb", 
       ",", "origin", ",", 
       RowBox[{"lgt", "=", ".5"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ellPlot", "=", 
       RowBox[{"plotEll", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"orbitData", "=", 
       RowBox[{"getOrbitData", "[", 
        RowBox[{
         RowBox[{"N", "[", "a", "]"}], ",", 
         RowBox[{"N", "[", "x", "]"}], ",", " ", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"{", "opts", "}"}], ",", " ", 
           RowBox[{"Options", "[", "getOrbitData", "]"}]}], "]"}]}], "]"}]}], 
      ";", 
      RowBox[{"(*", " ", 
       RowBox[{"N", " ", "for", " ", "speed"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"half", "-", 
        RowBox[{
        "angle", " ", "to", " ", "display", " ", "\[Alpha]", " ", "at", " ", 
         "bisector"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"orbit", "=", 
       RowBox[{"\"\<orbit\>\"", "/.", "orbitData"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"normals", "=", 
       RowBox[{"\"\<normals\>\"", "/.", "orbitData"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"origin", "=", 
       RowBox[{"Graphics", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "@", "Large"}], ",", "Blue", ",", 
          RowBox[{"Point", "@", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"Rotate", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<M\>\"", ",", "20"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.5"}], ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"-", "theta"}]}], "]"}], ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "a"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"comb", "=", 
       RowBox[{"Show", "[", 
        RowBox[{"{", 
         RowBox[{"ellPlot", ",", 
          RowBox[{"drawOrbit", "[", 
           RowBox[{"orbitData", ",", "lgt", ",", "False", ",", "20"}], "]"}], 
          ",", "origin"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"Graphics", "@", 
         RowBox[{"Translate", "[", 
          RowBox[{
           RowBox[{"Rotate", "[", 
            RowBox[{
             RowBox[{"comb", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "theta"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x0", ",", "y0"}], "}"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"AxesStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"RGBColor", "[", 
           RowBox[{".66", ",", ".66", ",", ".66"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"\"\<a=\>\"", "<>", 
            RowBox[{"nf", "@", "a"}], "<>", "\"\<; x=\>\"", "<>", 
            RowBox[{"nf", "@", "x"}]}], ",", "20"}], "]"}]}]}], "]"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.766740546118595*^9, 3.7667405591347713`*^9}, {
  3.7667406810140924`*^9, 3.766740781501887*^9}, {3.766740816147252*^9, 
  3.766740954527276*^9}, {3.766740984990827*^9, 3.7667410091492424`*^9}, {
  3.766741120959056*^9, 3.766741144479258*^9}, {3.766741183278713*^9, 
  3.766741270925004*^9}, {3.766741323446807*^9, 3.766741519806503*^9}, {
  3.7667416058808427`*^9, 3.766741615230961*^9}, {3.766741646951665*^9, 
  3.7667417503028955`*^9}, {3.7678917603165765`*^9, 3.7678917833818817`*^9}},
 ExpressionUUID -> "c930b5aa-092e-46c2-bb0e-81260b1d16ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"drawCB", "[", 
  RowBox[{"1.5", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", ".5"}], "}"}], ",", 
   RowBox[{"toRad", "[", "30.", "]"}], ",", ".3"}], "]"}]], "Input",
 CellChangeTimes->{{3.766740784129843*^9, 3.7667408019073315`*^9}, {
  3.7667412896600456`*^9, 3.7667413062757425`*^9}},
 ExpressionUUID -> "5ced3d93-eb5f-469b-a4e2-07521036ba72"],

Cell[BoxData[
 GraphicsBox[GeometricTransformationBox[GeometricTransformationBox[{{{}, {}, 
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], FaceForm[Opacity[
       0.3]], LineBox[CompressedData["
1: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
e3kZOFE99KryeC+erzBOmRVm4KfkPifu0R5ccDVykJVi4NbbP0tdXbvRSGlX
wDFTBp4/01g8m9iBxxr2tw1GMNAu3qPkvWsH2tp53rkVw8C/zvNrd53uQLti
5cCZeAauGDXNVp1vR5q16m1aGgP1dx5z2aTZjq/23dW7VsZALUXv999+teG/
3j8pq0cZqDKwYuAk2YLcYl9Oxu0kMLBreYZOSQsaS/ix3u8h0FO9/7iqbwsa
Sr9OspcicNmd12zrpFvQklPIjP8ggVZdFjyO1tS+cM34/JAmgb+uFOpua27E
rX1VJwYsCRyLPCuUG96INd7ZUcqXCTykNvPW2L4Rm6N2s7++SmApsyvZkbsR
cXVhFo8dgesOH7p1R60B51UWtkY8IpAtc6RY2LQOT5txzG/zIZBYXCmZNlWL
n2FpzYgfgcFS9zK1PWsxmsNjQ9QH6nlp176fLqhBF6e9HFwhBPZeCVPl3luN
HzgNpCyiCXwqxs6wKqnCSttzDe3fqM+3G8WmXKjCP+3zVgbxBLrTjv1U9avE
lN1CJ7f9IFAq+7oduViOjJp8hVPZBJ7zOpAg8KEc4+13qbzKITD2wC6ahGw5
7ncs3p2eR+BHD/Xww1fK0FF5Zx6zkEDzwLVhG2tKMHY8O3tZFYERx3erJAQV
oobgsZf2vwm8deJ2jKRKIV7SWKs7106gc90y95jOAtxge2fjw04CV7s8mPfe
XIDPj7l3WvUQmFRx8/v5w4hF2b87fg0QWCzJ6P/PJQ+LLp2Z2TpEYOOHwUc1
mIuV9CiBi8MExr86+X6Leg5q9d65WTVKYLkHn89NjSys0PV0UmNQ7/ef0vqp
55nYKrK/SYcg0O3agYd2xRmozWElrTdJINd/Y19Mj6ZjyKLB/IFpAttXHS8v
epmGTc8+2GydIdCypOntntJUlPpn18nGJHCkOSFzRCsFaxOmmuJmCWTey3BS
c09GryNypndZBA5e1f/iW/YDX7+X6jlIUnlo967Yp52ERvxBi+FUn/1at2A6
xJ+It32T3uv9ITDr1YD5jfff8dmD6j10ym1/6R8v+MSi3tJ9G+EFAiMNP/rX
rfuG/rSc1V8or9CwOaHoS52zsxxSty8S6Hdwx44QgSiU2/zwQgjlIysD7y34
fsXjCT/W8C0RODrrFWksGIFbV7HhA8q0l7/5v/mFo0iFjmM75ZCbGsJ/BMPQ
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
d0b9yPl/cZFrmg==
        "]]}}, 
     {PointSize[Large], Arrowheads[Medium], 
      {GrayLevel[0], 
       PointBox[{{0.3, -0.9797958971132712}, {-1.4754554408514322`, 
        0.18016195437797444`}, {1.4292058927359073`, 0.3035863532059213}}]}, 
      {EdgeForm[{GrayLevel[0], Thickness[Large]}], FaceForm[GrayLevel[0.95]], 
       PolygonBox[{{0.3, -0.9797958971132712}, {-1.4754554408514322`, 
        0.18016195437797444`}, {1.4292058927359073`, 
        0.3035863532059213}}]}, {}, {InsetBox[
        StyleBox[
         SubscriptBox["\<\"P\"\>", "\<\"1\"\>"],
         StripOnInput->False,
         FontSize->20], {0.3337099931231621, -1.2275127442667024`}], InsetBox[
        StyleBox[
         SubscriptBox["\<\"P\"\>", "\<\"2\"\>"],
         StripOnInput->False,
         FontSize->20], {-1.716522899570669, 0.2463924635610476}], InsetBox[
        StyleBox[
         SubscriptBox["\<\"P\"\>", "\<\"3\"\>"],
         StripOnInput->False,
         FontSize->20], {1.654767941093158, 0.41139063113996843`}]}}, 
     {RGBColor[0, 0, 1], PointSize[Large], PointBox[{0, 0}], 
      GeometricTransformationBox[InsetBox[
        StyleBox["\<\"M\"\>",
         StripOnInput->False,
         FontSize->20], {0, 0}, {-1.5, -1}], {{{0.8660254037844386, 
        0.5}, {-0.5, 0.8660254037844386}}, Center}], 
      {Dashing[{Small, Small}], LineBox[{{-1.5, 0}, {1.5, 0}}], 
       LineBox[{{0, -1}, {0, 1}}]}}}, {{{0.8660254037844386, -0.5}, {0.5, 
     0.8660254037844386}}, Center}], {1, 0.5}],
  AspectRatio->Automatic,
  Axes->True,
  AxesStyle->Directive[
    RGBColor[0.66, 0.66, 0.66]],
  Frame->True,
  ImageSize->Medium,
  PlotLabel->FormBox[
    StyleBox["\"a=1.50; x=0.30\"", 20, StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{{-2, 3}, {-1, 2}}]], "Output",
 CellChangeTimes->{
  3.7667413067145414`*^9, {3.766741340069394*^9, 3.7667413748947134`*^9}, 
   3.7667414148135605`*^9, {3.766741456829784*^9, 3.766741520827772*^9}, {
   3.7667416072830935`*^9, 3.766741616261177*^9}, 3.7667416492692785`*^9, {
   3.76674168483737*^9, 3.7667417511576023`*^9}, 3.7667462839426565`*^9, 
   3.767890809302061*^9, {3.76789175444528*^9, 3.767891784450025*^9}, 
   3.7678922119094844`*^9, 3.7679040486220136`*^9, 3.7681207436696296`*^9, 
   3.7681700212648487`*^9, 3.7704224864508305`*^9},
 ExpressionUUID -> "d6236be6-8152-41a6-99be-98928dfe1b81"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
n376adeuXbGNNUgcXYnCeRkKPfDh0KFDz58/Nz9aXl4eGRkZHx9PTGPD8zBt
Yg7pcjI5b+Lobh4uFoPdfBNmlpWVyUV3svzQ0JCe3VX+IjdD/G24dOlSIBCI
qkPaxsZGZ2enNKCgoODq1auWT+X+lIZ5Ph4QyUfaBAAAAGnHHKHT0NDgdXP+
LwpORDHY/v5+ieM8n2zFwpz3xEnfAD3woa6u7uXLl2G3dvz48cQ0NjwP0yZ6
hI4ctRx7kvdu0t08XBxcpieycT6/lTl5t7REHvD4mzE7O1tYWKi26bCn1sDA
gN/vD1ty5/Xr1xUVFeXl5a9evYq/bUgvpE0AAACQdkZGRvS76VQobKK/VLte
DFZiPYn4UmEoh4U5zGTb2hH6JX7YnMnmmwv6+eefJ6y9YXiVNlEBeAxDnBJB
d/NwcXCZ6ubhfPSceUJcvCJmnzQn51lVKo5UplglYWpraykPuwORNgEAAEDa
0e+m45moVGL5O3fuSLS4a9cuv98vEVNlZeXw8LAZFsky4+PjVVVVOTk5Egnu
2bPn9OnTll76OrORiGKwqjNAnJOtPHr0SM5YUVGRnq+5ubn58ePH8TTMjEm3
nfdEvcR///33l5aWwi4gzZPTe+HChXiaFC2v0iZmX6kYap/K7Sc3YUlJiaq/
ITen3KLbptRkgYcPH/75z3+2XAL1KLk7uEwVS3E+v5V5QnTnpfn5+a6uLnWY
Qh7Stra2aLty6bIt2dnZoYNuTKpSsfjxxx/DLqByQR999FFKZS+RHKRNAAAA
kF50msIXZbFH05MnT6qrq3WXFdPevXtVEkACzPr6+tBlSktLzSzB8+fP33nn
HXff12vd3d3x9El4/PhxpMOUQHJ4eHh1dVWC05ycHNnFxMREVBvXMal95U/Z
i+xLdlFXV9cYzsGDB1Xa6tatWzEcY8y8SpuYNTeinYfo4cOHaipqk1xfuYg2
4bw8MhLvq9uguLhY373//d//rR4lF4vBzs7Oyi580XQDMyu9SCP//d//va2t
TZ8ik/zw9OnTzhMXunC0z7aGjJwQOavShsrKyrC3qPweyM3N9aXMDOBIMtIm
AAAASC/m8JDCwkIJ06LdwsTEREFBgVq9v7//2bNnEojdvHlzz549arNFRUXf
f/+9mkFVlpSwbn19fWVl5Xe/+53qsNHQ0GCWSpBP7969OzMz4+qBbkokK0G9
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
9IS/iqV6cNjkmMNnJFpqHFBs8wEp9+7dU3ej3JbyJJp3keVAysvLnzx5EtXG
zczeDq8Hi3jIrXjs2DHzgZI70+tGAQAAANswu/c7fJOuijDI8nv27Ll9+7Z8
E56fn29paZF4TUKzgYGBs2fPqt4a8pP29valpaXNrVKZH374oYrd3nvvPfXD
RFBdCKQBo6OjMW9kamqqqKhInZbCwsJr166tr6+vrq7++c9/lqOWH8qByBf+
v/3tbzpzIovJP+VUqPfyEs47zAuZ9TxjqGuaCrxKm2wa1XRjqwoyMTFhdjg5
ffq0PAJy4b7//vuDBw+ag7Bi3oUT8vjI9isrK5eXl2PeiO5PIn92dHQsLCzI
TfvDDz/oA5E/5baM4dEzu+UkKHGEt488XI2G999/v7i42PJMqcLg5mIffPDB
w4cPvW47AAAA8CsqZPM5rgq7sbHR1dVl+faros7h4WG1QHd3t+U1vf6S/PHH
H8cTG25Ldu1zY7SLhIryJT/0EHxb4yBu3rypFjMnFdJk71NTUw53pHutJ65u
RqJ5mDYxI/oYqsJubvWA0nPfWOTm5ppTzTovmxyV2dlZdaeZE1jHQJ6706dP
h96N+qaNqkStSc8YJRu/dOlSPI3EzmHWDnIunj5XAAAAQILoUh7Oe2hI8DU+
Pl5VVaViNL/f//777z9+/Nhc5s6dO7W1tTqIk9i2ubnZskwkT548aWhoyMnJ
kS2Xl5fLphwei56jx5V34rK1zz77rKysTKWAJHLcu3fv8PDw+vq6uZgclGqt
WqalpeXly5cOd2FO2ZyguhlJ4GHaRF9xXxy9NWStgYEBWT0vL0+uoNyrctHl
0r969UoN+Nr2AsV8x26+eQDdSprNz8+3tbUVFhZmbCkoKGhqapKn1XLTRkVn
VtO09g48oX4tyE2Ym5tb4IDKf5I2AQAAQAoy62pGmjI4mSYmJtRX6Pb29r17
90b1RVqVasnKyrp8+XKCm+kO3Vkitnl/UoSHaZNNo6yx69VKLTP2WoqfaPHc
sbo8S21tbdgZcDxn/n6IuWItAAAAAKS1bafhSJq5uTmJ0YqKiu7du7dpDGA5
fPiwk9XVgaRR1Uo1pCgVznw8vE2bmMmNSJmNUCsrK1NTU3K/2Yxb0VfHtzVC
J+zETHHesXqy7KGhIYctTzLdGy0YDN66dcvr5gAAAACAB8xpOLzt8yBRp6or
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
9dfOMzyqD8P7778vmwq7QGtrq5yfCxcuxNxI5/RFUVOchL0oYUm0++c///nR
o0fmD9VUKT73isFuvgm3o5p6xizXo+5quQ+//fbb2tpaddWkkXJ/nj9/PlLS
Q5XqFT/++GPYBdSRfvTRR1EdpqUbTCp07kqOsIVNtKhmIlZnfqclnWCjoaHB
vH/OnTu37SrXr1/XCcxItyUAAACgmMUWYh418OTJk+rqav1+37R3797p6enN
rWxDfX196DKlpaVqAeX58+fvvPOOLzHFYNVwgGAwODk5GcPqy8vLnZ2dKi1g
Icf14Ycfrq6u/uUvf5EAX3bR09MTNqAeHh6Wr+sSvEsU2RjOwYMHVd4pCdNi
yhEdPXo09KJUVlYuLCzYrPgf//EfKuiQppp9Of7whz+o6qluFYOVFkpjonod
bCnXs2/fPrkoe/bsCb1qvq2yJ3L3WrYgN6TclnKryK7DXiO5k3Nzc33R598s
Y+KcvBZ/O+iMZdihZ1HNRExhE5gs9WB9MaVNoh1tBwAAgB3FnIcxtqErEiAX
FBT4trIu/f39z54929jYuHnzpg5Ui4qKvv/+exX8ypJjY2Pr6+sS2/7ud7+T
oFt+2NDQYNaskE/v3r07MzPj6oH+z/tudbCxzRb08OHDvXv3qiMKBAIff/yx
SjEtLCx0dHTIgWRkZNTU1ASDQbWMHGnoIahxH2Hjd4vQsQyu0/VVpEkjIyPy
T7PKhE1Ebym4ahkrISfkxo0bbqW8VHQjJ/zSpUsOV7HUh5TV1W0mN+Qf//hH
ufGkbXLTmvfn1NSU2X5VqndbMQz/sZw6J1N+vB3UdYw07bLzmYh1jExhEyiW
Z8oXU9ok7K9rAAAAYPNNWUv91TGGfMIPP/wgXzglfmxqarK8HTa/l6raFIWF
hQ8fPtzcipJOnz6tP5Ug1+xwkiDqjbZ9//9Irl27ZuZDLF0pdK0S86t76Nvw
+fn53bt3O4nHfUl5+9nX1ydtlkvzn//5n+on5iWzyaFNTk7qsxFVQiMG7e3t
speysjL73i8mS31I31aXGLlAlml9bt++rY/CnPTn6NGjDq9RDONELD1hYp7i
J+2okVY2T7rDmYh3ZmETeRJnkkIlvb0+3OiQNgEAAEBCSWAu4bn+6hjtu2/9
Xr6xsTF0qtkXL16UlpbqjUske/bsWfWRBLaqA4AOP5Mw/2N/f39Uk9hqZhcR
+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
5eXJwmHTJuLly5ctLS1+vz9S3mP37t03b960rKXSJjY7VS10mDZRZ+n8+fOW
cjEmaeGxY8fsa8beuXOnvLxc9pufnx+2ywoAAAAAAEialZWVCxcuTE5O2kfo
arG7d+9GVQw2mZaWlj7//PNDhw6pHItK2tTW1n777bfJTD7I+ZGz1NraumfP
npycHN/WOCP5e1dXV9iyKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AADS3cTERHl5eXFxcXd39+rqqtfNAQAAAAAASAmzs7PFxcW+N7q7u71uEby3
sbHx7Nmzubm59fV1r9sCAP9rdXVV/s9aXFz0uiEAAADYQcbGxjIzM3XapK6u
TkJmrxsFL62vr588edLv9xcXF//8889eNwcA/tef/vQn+dVUUFBw9epVr9sC
AACAnaK1tdVn6OjoIG2yk62urra3t2dkZASDwStXrnjdHAD4P/LfU2dnp/oF
NTY25nVzAAAA8PZbWVk5cOCAzpnIF9GJiQmvGwXP6JDE7/cPDAx43RwAsFpd
XW1sbFT/YX333XdeNwcAAABvufv37+fl5em0SU1NDSVhd6yNjY2urq6MLZ2d
nXQ6elvNzMy0trbu2rVLLnQgECgvLx8eHqaIDTy0vLz82WeflZWV+f1+uS0L
CwvlV9DLly8jLb+wsFBRUaEyJ3SKAwAAQEKNjIzId1SVM5G/0MFgJxsfH8/O
zpY7oaqqSqIYr5sD90kc2tLSoh9503vvvbe0tOR1AxEjubK9vb1ycb/66qv0
Sn2vr69/9tlnwWAw9J4sLCycnJyMtOLt27fVWsXFxdPT08lsMwAAAHYUs7AJ
9T93Mok71IRKEolIPOJ1c+A+iUD1nFkHDhy4c+eORKwTExP6h0eOHKGLUTqa
mpoqKirSv8krKioWFha8bpQjS0tL9fX1Ko9XUFDwxRdfrK6uzs/P6x+WlJTM
zc1FWr2np0ct1tjYmF7JIgAAAKSL169fq37OSltbG0HTziTXXUJmdRucOHHC
6+bAfd999516NS9hZnt7uxljXrx4MSsrSz6SP+XvHjYSsWlpabH00zh16pTX
jdre8+fP9X9A5eXlT5480R/Nz8+XlpZu+x/T4uLivn37ZBm/3z80NJSshgMA
AGAHMQubUAx2J9OBc3Fx8ezsrNfNgcuuXLmiB0GEvpfXsaeora1dW1vzqp2I
gXn5tPr6eq/btQ1dnEQUFRVNTU1ZFjhx4oT6ND8//8GDB5G2Mzo6mpmZuW2/
FAAAACA2Y2Nj6gunj2KwO9jy8nJVVRVdTd5W5giO0tLS+fn50GUaGhrUAnl5
effv309CqyRq5heOK9bW1g4dOmRJm7S2tnrdLjt6KhybPk5m3a0zZ85E2pT8
+qqsrOTXFwAAABJEFzaRb6d9fX1eNwfe0K9r7d/qIh2Z7/RtxuDoN/vyqyAJ
gx0uXLjg9/urq6tXVlYSva+dQC6ZnE+dM0nxroN6lnP7MTjXr19XFapV5xmb
AaT9/f1qa0VFRY8ePUpk2wEAALCzSMBy4MAB9aWUYrA7ltnVpLm5meI2bxO5
mh0dHTqabmhoiDQA5/9n731/qrq2/f8toAjySxGkIL+kiAUqxcqVXa+UwwlH
TDkeUarYUi6ltdqq1Qser7YpyIlWapDUSCyEkBqyYzTEmBgSb0JCch+chAc+
uI/4C/gD+BO+48O8Z3xH59p77bXWXnuv/eP9emBw77XnmmuuseaaY8zxg80m
xLFjx6LdsS+++IJO9M4777x+/Tra50oF6EafPXs2KytLTebffvut1z0ygyt2
mRs6pNmkpKTk1atXoRqcm5vjtMbHjx+PWscBAAAAAEDKMT09vWPHDvP9PpD0
XL9+XWU1SUtLGxoa8ro7wE2kfrp9+/bR0dFQR0qzSQzSYsBskrIsLi6WlJSw
sJlYOaTZJCcnZ2ZmxqRZTopbXFycKFWEAAAAAABA/MOJTeLcoxtEFQ7U2rlz
59OnT73uDnCN169fl5WVsX5qnuv1wIEDfGRpaembN2+i2jeYTVKWjo4ODs8x
jwpUQqLIzMy8ffu2SbP8OqN/6e8odBwAAAAAAKQix44dUytSJINNWZ4+fbpz
504r2QNAwsEJH8K6Esl4vdhYM2A2SU0mJyfZxTFsVOCJEyf4yG3btt28edOk
5SdPnuTm5qqDm5qaotB3AAAAAACQcrCihGSwqYwspWRSqwIkHIFAoKioiLVO
88iF58+fy4NhNgHRYH19vbW1lcVs69at169fNzmeHeGsmE1kOSE4zgEAAAAA
AFfgvTkkg01lWDEJ6wMPEgvpakL4/X6Tg8fHx7dv344gHRBVNFcTc1Oe5gFl
ZYLq6OhQB2dkZFy5csXt7gMAAAAAgJSDVpW0tvQhGWwKQ6oxl6ZNkf3Z1dVV
Utj37duXlZWlrAr0L/1NGhzpXNZLl66trQ0PDzc2Nubl5anniNQ6aqSzs3Nu
bs5Wf77++uva2trs7Gy2cmzfvp0++fHHH//nf/7n6NGjaWlpg4ODti5zeXm5
vLzc+ra+dDryISWsRywtLZ07d45unBTOHTt2HDx4cHJykr6l+0KyoVkPSBTn
5+cvXbrU3t7+7rvvkkDST9LT0z/++GPjKVZWVqanp0nkaNqn1goKCnJyckh0
6XbwMfQUUFOFhYUkkyQV6ukgwQ4EAhFe4PHjx30Cc1OejB/0WUgJu/FHMT5x
4kSEvQUAAAAAAIkLLZ57enpoHUvrZ1ob5+fnHzlyRFtPvnz5kta9tH5Wi15a
Ht+9e1dr529/+xutyZEMNpV58OABaUZKy6ioqCCVylk7bslkVFldXSWtTfpU
GKEnora29tmzZybtkJZ65swZVek1VCM1NTWPHz8274+qGMv9oV/RvSDdUH7C
ZUSkVmsFro6kKCoqev78ucnxnOZIkcQFiJUc5ubm2pJDuunj4+PfffddlHJA
UbPUK2V/I+gh2rFjhzJosDCoG6rFqtBTRocFlUOj2WRwcFA6IEmUgM3OzlZX
V4c6hrrX1dXl2Ma+uLhIU4Rszdwh5MaNGyz/vnAFiBXSaWr//v2pth1AUvr9
998rG6wSb/p7eHhYjgMdMzAwQINJ40/SRX/Qf+lDD7sNAAAAAOAump4VakF7
8eJF4zG0DiedUVtG0jr29u3bWDKlLOxx5HOaRNF1mYwS09PTe/bs4VOTpkl9
+/nnn2c2GRkZOXbsGA9FaWlpqNgB0iurqqr4AmnQxsbGlCo9Nzd34sQJ1mHp
21OnToW6Ovqc1GSlnxYWFpKyIx/DQCDw0UcfcX989s0mfr9fDrX5zZVJIRQx
yHLjidmENHGjkYHG+fz58ya/oh7W1NSog8vKylzvMMlPQ0ODar+iouLOnTtS
bB49etTY2MimjEjMJrIwjQZ9devWLWqKTkQSTu+FlZUV6sbDhw+pb3x2+uOT
Tz5xdpmaKS+sexsJoewhiahJHSiFdFAJaypMMu7duyfTEzHKFKwmNJq+2L1Q
QuKNks0AAAAASA5oaf3hhx9u2aS+vl4pa0tLS21tbaR+qtURKWJ9fX2kBdDf
77//PilftO69f/8+6SbG9TYAslBFR0eH3Z8nikxOTU1Jb/+6ujrqpDxgeXm5
srJSKhq9vb3m7ZCGQhql8Rhq6tChQxxh4ff7g/onXLhwQQ0RNTg/Px+029eu
XWNbky2ziZbflbrR399vcrwsQeKLVV6I2JtNRkZGaDxpNA4cODA3NyfjmPLz
803is2j02G4QjVi2rq4u1T4JIfXKeIAyTiqB0R6ZFy9etLS0NDQ0kDqsDmCM
ZpNbt241bELiobmUdHZ20iAEtWSSAMvi1OZjZYLM7+oLV7eLvpInJejnYU8h
ow6zs7MfPHjgoJ+JyMDAgPLMoTs7NDREz9Ta2hpNMmxSo2H54Ycf1PRVWFj4
448/0ggvLi7SqKqwpqAhXQAAAAAAicXbt29pbaxiarQcBfQVaays7yinbtJb
1Yp0dnZ27969vEKOge99PECLxpmYsLCwkNB+4E1NTayV2PVnSBSZJNVAbrAG
9STREqIS1H/tmEAgUFJSwprj1NRUqDNK5wG6TKM9isantrZWHUBaqknnSZdx
cHdIrZbRDaQWVVdXN4SGvpWJTXbs2DE9PW39dM6IsdmE6wo1NzezIYsVc3PL
knxMrPg82IJDV8wrRPMzZWJpJN1Z3kdzRfjs2bPyYPpbGTmDTmjSUSSUUdEc
usvKUsrs3r3bRCZVFhd5vLlHEMP3lAbqxo0bdvuZiHz11Vd0ser2ab6jNGjq
LqsYQN9mrJOaAOkp+Pd//3c2tVmJgQIAAAAAiHP6+vpoeUPLyJGREeO3mjMz
r4u0PXRfTDI9es78/Lx0LYgqtBbt7u72+oqdwyqGAweDhJBJ0gHb2tr4XNTb
sbEx42G3b9/mJBIKzWyiWULCFux+9OhRfn4+n1RLHzQ3N5eXl6e+NbeHsD3H
ltlEOhE5IAZldDZibjZRBiiWww1DaFIoI4PmuuO6lY9lL6znlcp3anKYFrBj
bjaZnp6WRW18oX1dNgzZWR0E9Bktk7awXudL+rTYNQUnIlNTUzTVhDJ5yexV
SsaGh4fVV+zjpLCScRcAAAAAIJ5RdgBa4dA6J+gBUkuSW4FGZTAVvE14WzkG
ZGRkJO7KXO7/2g2WSRSZHBsbk8rawYMHg26ma8YcUk61rW2OqfFtFuy2UitH
qm81NTUyVEcOgrlu++rVK+XiYl3M6AL3798fiVRbiYaInFiaTeh+0V3T3Dm0
0KRQQWpS36cWSBLc7RunaTVKnYYydLhlNtEONvd10XxFHBjW6NIikUnriUrY
QcuXAsV06GFvbm72hTZ5adaq2tpa5Sslo5kU8DYBAAAAQKKjdoWKi4tDJW2T
Cpp0sNd89cMWIQUphVSFrG/mKmImk6QX0Lm2bTIwMGC9hwqZGdVc56UekuKg
itccP35c+rprxXwtVuiQtVC1y5SDkJ2d/Y9//CNUI0q7oV5ZL0CsOQaE/a1m
PYiGZSAosTSbKN8n7VwyY4mJt5X0mzJJl0GDnJWV5SDLsUzTWlRU9Pvvv4c6
UjkpmTyqkZhNSAZIEkIdrJlNHNw1GejkCxYEJzEmNrHu39LR0WFxBJIAZRY2
mUVl0m+fCHQyxkyZFINeWloiqd61a5cyHZMEGgv0AAAAAAB4C0e+h8qBsLKy
UlFRwYsfWUaWlkZlZWWsPdF6EuscwMhQEVse2rGUSenmYVdZ0wwIjlN2aKYe
i7qYts8rHV20+Ag6jHRztyrbav481Dj1xOR4ad4Jqz67SMzMJhyMI8VVppch
TAyAnKXHF9rLQjo12Q120Mrs0iNJd8RZdbNIzCbmDiQRmk2Mvg3mfiBG0595
TmOJNEPFxm/KQ5RZuLy8PFR0lfT606YCmnvZbEgthJJ/LoJG/7a0tHz66acN
DQ3KFFNSUhK2zDoAAAAAQGy4d+8eLVeysrLu3r0b9ABNBdOWyktLS19//fVn
n33mrPYBSGKk3mRL14ulTMq949bWVlt2P22n1bEXunT791lOTamppbICi6az
K9LT00l5b29vHxkZicSSwEEfFq/aVn0TF4mZ2USZB7XYFi3ng8XEJqHUcDnm
WkBWWNgIKSG5LS0t7erqGh0dZZNjWCIxm5inGIrQbCIttD4LyVq1J9eWKU+a
TZI7l9c///nPqqoqk/xaWryedtfW1tboiejr66N/Q5npVAIr36aL3cuXL/nz
8fFxdUPp36AFxQAAAAAA4g25WRwzB3uQBDg2m4TFRZmcmpravXs3Ld2bmprk
ut0K0uTi+6PTi3W0xKE+y2lGNLVUUxWlF01QduzY0dnZqRVKtoKWD9Y8GkKL
P7K1rS+hX5lfjovQfYzc0qLtwo+OjgY9TLrumAzO4uJiZWUliXpNTY2D/Xct
OacGfVVQUPDpp5+GtcbErdlE87wiXds8O9Dx48flCNgy5blrNomBYLsiz0GJ
MJHvw4cPlW0kaOzY5cuXVXGluro6tzzlAAAAAACih9wKj5mDPUgComc2iROZ
lOEVjnUoTsrKODObaD8kNbC9vd1EWVaQsjkwMGDL/UPzjTGPhtD0WYvZbo10
d3eHvRa32LVrVyAQcNBJRjMWmcQ4yMQmYcOdHCPrNJlAOqy5k0bcmk20MDdz
A6YW4meeq9aIu2aTGAh25PIcCjnsDiyinBiKa8dLWCQcVGEDAAAAAIgx2la4
s/10kJpEyWwSPzKpZZV0pkOZWz9s/VCr1bK2ttbZ2Rl2L9tuViJpLArr6qPV
iTZJC2kOXcv8/PyMHU6dOkVn3LNnz8TEhK0fRi5Oo6Oj0lhkYlmSgxnVUiPL
y8uHDh0Kq6GTimoSIxa3ZhMtcMzc7UGLnzJJOxMUd80mDgTbLtGbHiMx+qni
Uz5Tews/HQ0NDUibBgAAAIB4RosZT4X6wsAtZqJjNokfmYw3s0lQNfbOnTvl
5eXm+nJ6err1QCd51SaVXzYMKVZMYlWiQSwr6WjIGBATdVJLbGI3xsEupHh+
9913dEZzYaAOj42NBW0hbs0m0pRBkDpvcnBvb68cgVB5p62cK7lzm4QlEqMf
B1qaJKJhx7aCggKTClAAAAAAAJ4jU+chsQmwhVSFHFeZMRI/MumK2UTLD+CL
wGxi4iewsrJy6dKl1tbW4uLioP4n1vfc5VXLPLRGJicnZeZeWesnBnhlNtFi
QEwidLQIJnNl30XoRg8ODh46dIhuX1ATSm1t7du3b40/TAizifmcoJnyHESN
0VPGP0/lfYQIjX40dOqHJtZUThAUto48AAAAAIC3yKSXLmq+iQ4t6aPqVs0s
LCwkrnOyVIW0OiORED8yySt/Z7qewlg71ZnZxLoFaW1t7Zdffjl48KC0n1jP
8CC3mM0vWfPhj6WryYZ3ZhOLNXQ2YpXYxJzV1dUffvihurpa2k9C3ay4NZvI
IB3zqUa7O3ZdTTb+mNvHYq3wpEQrRG6x/pdCluAxmcOlNezcuXMudRwAAAAA
wGVcTyJBi6Wurq5tmwwMDLjVzxjz5MmT3NxcX0wwKf4Y/8i1sVtmE1dkkjrW
19enttqzsrLa29tD+QOYo2VUMHe9MKGpqUnedC1FSSg0BVDGy5AaUlJSUlpa
Oj8/b9LCtWvXpLeDxf1iqTaa6MJaWtTm5uYYGwC9MpvIMk/m2SzlfS8qKnr+
/Ll2wNWrV+k+pqenk35KA2i30pOC1FuSzLq6OhMhp1tz9uxZaUYLmo8lbs0m
MjepeTygjJ+iYTF/QIIi5d88H3JyE4nRz6IjojSbpLJjDwAAAADihLW1NVp2
kiJJC2yp2mj2gSNHjoRqQaXEb2xsND+RLIrqSc4BV6Bul5WV+WICqV0WfQ/i
E/ZM2LJly+DgoPUfRk8mV1dXP/zwQ1Js6Sa2trYqgaR+Bo1KMEfrjGPTUH9/
vzS/mFyU5MaNG6Gqhygt0koFClKWWce3GGQkS+ua/EQ+7Hl5eQ8fPrTSuIt4
ZTax6A2lxThodZxJ5knBpwEsLCwkhVFZt5xdixoH8yw06oxtbW3cn6Amkbg1
m8hwJxOzyfz8PAfEkdiT8Fs/BSO9rRJ6crbIo0ePPvvsM3qcpdmNpEUG6wU1
+imuX7++devW/Px8aaGSwm/RbHL48GF3rwsAAAAAwBaLi4u8KaxqavBXctvU
RO2lFoqLi30WYvOlQkEaa+KGnwCLyDtuPXVDVGWyq6uLWiANcW1tjTU7ZyEk
JMAHDx70Caz4/FPfKisr8/LyLl++rD7hohIKiy40WpEaeWrefA8bRCAzq1g0
m8hbEOonpGHRNUaon0aIV2YT6Y1gkifTPLGJMjqRhk4jySYFGsmvv/7abn/U
OFipDyu7lFhmEynGJmYTevbZPkn9WV1dtX4KhfR2czHwMD6h+Y3mXh6xsrIy
vilaRibN6CdR5msaNGmXlrJh0Wyyf/9+LBgAAAAA4BW0DmlubpbKV2lp6Zs3
b9S3R44c4c9NvHCHhoZoPU+Ln8nJSfPTTU1N7d69m9SBpqYmZw7nILGQYSwW
vayjKpOPHj3Kz8+nBlX6UzYvmFRzMEftpXKXioqKAoGAlZ9ofZO6dljHgA3D
bq8WbsDXFTbRq1RXLd4gGRwUSpchDZ1dTRoaGhzop5ETD2YTk7NLq1dmZubt
27f5K3VTSFBpwtz4o1OTrQwSCtY9QyV6ZaQyG/REcWs2kdaMUGo4fcjGSR5b
u8h+ulgdLD6RDmOalMq83L7QwUrKIEyvgN7eXvk5zCYAAAAASCyMVTx4p5v3
682XiKQkKm9bv98f8+6DeEemDbTozBBVmaTlfVpaGufV4UQHDgpqKDQjDykI
7e3tJst70u+Uk78WFsR9tqKQEhMTE2y7MLpzsNkkbGVh9pa34o2gkJVignpT
uKKfRk48m02kN47PEOOg/Hk6OzuVICkboM+pTxTrniaVhRVsEAvlRxG3ZpMN
ETsW1ARKz1pjY6M6gB6Kvr4+W40z8qKkOTcp0XIuSTO18iFhggYrkfS2trb6
ghlvYTYBAAAAQGKhrWzlrtD58+fZFd8XQkVdXV1taGjwWdtkBymItIGYBCxI
oieTSt9nC4k0wpBKtba25uwaNYuHuVJ2+fLlrVu3BlVLR0ZGOESC/qD/hmqE
r1FhdOeQGTLZtSYo7C1jxVuM6e7uVk5ERscY2Tfzq4g28ZASNqhKSNpfe3u7
zGajJeOl/7KFRBbMlVES1pG6p7nnDz1oqlehnJToWmRFaXP3JO1gc7WXZgaa
H/hgi3OF5O7du1lZWernxtA8eiSV40RYw6Y5MqGQ3ZK7CYdWYJ29lZTPnvwq
qNlEjTlNLxyNyMBsAgAAAIDEgvTHvLw8tSzJyMjo6upSK5OpqSlaF9EKk3e0
jYuf5eXlQ4cO0THeKkcgnpGxJFZiTzaiLJMvXrzgms6s3gZd2NtiYmJC6hHU
7b/+9a9GO8z169epYyaK2/nz59n1ndSKoHFDfI3qsLq6uqWlJe0YaTYhampq
gmrB9CHXPrZVSlWm1pQ5VUgl9/v9qm90pdeuXbPeput4ZTaR5jhjWWc5RIym
5lOHaYSV/HC+EfpJT0+Pg/5I3ZMa+fDDD4NaTtTzpfosI3Ru3brV8C80NzCS
VRIt9RUdJg9+7733+CnmU9O9UN+S/K+srNDD2NLSoj4pLCyUY0J/l5SUqK8+
+OADK/mEpd9XeXm5zF9KTzqPoUpq5GAYFTQy3EOL3lmJi0zoXVtbq+YQtovS
kHIIj5apjP6mwaEpKNRcJ83pFs0mBw8ehNkEAAAAAF7BOS1pqfynP/2J9C9a
UtIiU614SaX69ddfeROwoKCAVsX0E1o4ffPNN2rZQ2sn8ygAkOJwDgeSMSui
EhuZlNlcqTXzBCBWIM1O+pz4NsvHdHV1/fzzzzMzMyMjI6SDbNmksbHRZMf/
22+/5X1YOpgUwHPnzpFKS42Mjo4ePXqUt9TpW9I6gzalmU18m0aYkydPLiws
qAPoj97eXlZsQ9lVTODtexrtK1eu0HhOTk5WV1cr5ZdOp/RoD/HKbLLxx9Qu
NBRfffUV3aaVlZXLly9rQuILV7yV48ionUePHjnojNQ9FYWFhZ9//rkaFrpx
v/32G52FDQuaXcX486AofwOLB6ubovmVhcJ65lW2/NBVHDt2jK6CZo+2tjZl
iqQ7QpcZoerNcSsWjcAJDUeHVVZWKtnjZ5ykZXh4mEsv0Qh3d3fTgNPwTkxM
1NXVqbnO7/cHnaBQgBgAAAAACQctNbU9RAVrUrSkMS71FaS0/vjjj15fAYhr
ZHkOi0vfGMgkrf85goCTSETI8vJye3u7Zq+Q0DicOXMm7Gb3y5cvSTuTyRiN
0OX//e9/D9UCm03q6+u//PJLE+WUVJvDhw/LrXmLaFU2JFVVVbOzs3YbdB0P
zSY0OAMDA7JQjiaiu3fv5v+aBKS4EkfGlXTo6Tt9+rSJfJLyS8+Cdhb+eVZW
Vk4w1GVKs0lmZmbQIwl66EiwpdmEThrqYPWtrYI19FAEHXZq6ttvv3UwehKp
7GulYZKS1dVVkjrjM85GUVXMPegkEMrjTqGl8P3111+DHsa+PcTJkyejd6UA
AAAAAFYgNY3UvdzcXLX+ycvLO3funFzwkFbV1dWlUuKrJTRpbX19fVaW8aRB
0JGkBauFN53IgY4GEhe63VxNWHOeNyGqMrkhfGCys7MnJiYcXlswlpaWqKt0
pay+kRZJym9PT48xmsa8HfpJaWkp59Sla6RxaGlpuXfvnrmd5/bt23R2dhug
sTpz5gz1gSOAqM3CwkIa4UhKgVAfvvvuO9L6lYWHGq+srBweHo4TX3oPzSYK
kuHu7m4adpr30tLS6F+SioGBgYWFBWn0M0mRwfVKIokjGxwcpEbY0YJ61dHR
sWvXLrbLkahQJ6mryVHd7PHjx/X19eqpoUeGXj2nTp1y5aUjLcChasckGTSd
ksTyM75t2zaaf6ScqElg7969LE47duxobW0NK0tcE82kihlnVyYBvnTpkpsX
BgAAAAAQT6jdKFIZysrKaCmlVlZaDRGQ9HCRC/N4hJghLTm8ib+ysjI3N+dJ
qVwQDTw3m4RCFq02Jj9hZBwZJ4Ml+SQpVYWlQIzhecxW/mQQlP7+fmXxpmeB
noigxxw7doz9W5xFqAEAAAAAJARdXV2kF6gsfBzJ7qyMJkhcZESMzCDqFay3
ymLER44cwZ5mMuGJ2YTO9csvv7x48SLUAdIY4gtds2YjRByZ8pJCwELskbZW
pCeNnCdPnuTm5qrxlCmIGRrh/fv3qwPq6uoiSeQLAAAAABDPqDKFXP+U8y2Y
OOWCpIQWwK2trWH1xJjh9/tVZ7hIsUoigTraycTg4OCWLVto/nnz5k0MTre6
unr06FEOGQtVLGlsbIwDPcyL43A5YI4jU8WIXQ8rA1YYHR1VN87EOwJYR74U
Dh8+bDzg+fPnKpaNBvzixYux7yEAAAAAQGw4ceKE3M3nkhAFBQVzc3Pe9g3E
GNYWTaISYoPM69jW1qZ0W9JeqWPOCryC+GRtbe2nn36KmR2MhEfmxszLyzPO
cqurq1yP27dZoMQk5wYfyVvtly9fJhVSK/YKYoDU8WtraxFk6goTExOqmnxO
To6xLNHZs2dVHZ99+/YhHxoAAAAAkpWVlZWKigq2kLhSEgIkLlLvqKmp8TCF
iCzioJzDR0ZGtm/fTuIab0kwQKKgpjufoKio6Pnz59phrAkS+fn5U1NTJm1y
zkxVf0pV1925c2c8VClKNThgylZZHxAWrmPOXqkKrohEMg/fKgAAAAAkNy9e
vFhYWFAboxcuXFD6QiQlIUBCMz09XVBQEA8y0N/fr9bqVVVVTU1NGRkZJSUl
jx8/9rBLIKGRLkwq+qajo0M7ZmBggIv/kkpoUj9acevWLaU5FhUV+f1++jsv
Lw8F32OPNPk2NzfD1cddBgcHlZzTvy0tLZ9++umBAwfU/Lxnz5779+973UEA
AAAAgBghsyCSfup5agvgFby3yJVBPEEVxVbFi9VaPTlKrwKvIInimJqsrKwz
Z85Ihzr69tSpU1z9OS8vz2I9qatXr5LmSFJKv62vr4dlzxPYfkUzxvT0tNfd
SUK4VLcqG02jXVtbS8KPumYAAAAASCmCloQAKQgtgxsaGtR2fFdXl9fdAcA1
VOIR5RwyNDSkagSTwLPpQ4l9TU3Ns2fPvO4ssMry8nJlZSXdu/T09AsXLnjd
HQAAAAAAkLSoopmyJARIWRYXF0tLS9WW4q1bt7zuDgDusL6+3t/fz2E4Glu2
bNmzZ8/w8DCMxolFR0fHlk1ClUYCAAAAAAAgcpaXl8vLy7VksCsrK3Nzc3DB
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
//33Jik+bJlNZGEa7eAnT57QZVIHaEA++ugjUm/p1KSPa/oyaaak9Dm7TLo0
eVLzWylTQCiSNacN6d00/kaxPH/+vMmvSAZqamrUwVE1JpMM8JysOkY3bmRk
ZGaTn3/++cyZM2xqo8eHvgraDj1Bn376KVsYSKjOnTu3sLCgTvGf//mfdXV1
fJbS0tLZ2dlQXaJTqOeUWvvkk0+kgZ2a+uyzz6Tpz67ZRDPuhXVvI7GUN46E
1qQylEI6qIQ1HiYHy8vLhw4dMprLysvLzaswf/XVV0pmaGrq7++PWYcBAAAA
AGIAq4G0+p2YmCD96+DBg2qZZJ4xj77idTUtjB0raCCZkIUqOjo67P6cNKkP
P/xQxQLU19ePjY3RJ6RqtbW1Kf8N+ry9vb2vr49UQvr7/fffDwQCpOXdv3//
nXfeCSu0EUIKRWVlpepGV1dXqGPYUUQzmwwODjY0NJBuKLMx+EKYTbq7u0Md
3NnZSaNBfxj9SR4+fCj1UOpJWMXQiJbflS7WXAmSBUd8yZsFQlkAaDTopszN
zck4JppCTXbYOdeTFdXeMfSkNDY28olIDIxzMgmtVIeDVpSmp4nr+ZKYkbAF
9SeRFqSg5yLm5+eVzYHaCVXA99mzZxzWZ9dsIvO7+sLV7aKvNFMk/TzsKWTU
YXZ29oMHD2z1MOEgKaJpR73Tab6i/w4NDXGY0scffxzqhzTRqRlYgYAmAAAA
ACQTtChS26BVVVW8kST3xE2WSVJBTvptOFoTzsSEhYWFhPYDb2pqYqn44osv
bP2W/Zdoxa5l0qCv2BZBWrlKJ9LW1qbGanZ2du/evawPRi9ChHe3CwoKSHEO
dRhp0MoUGaqgDH1YVlYmLSEmORboIZXqHl0maTEmrgLSUWTHjh2Tk5N2L1Na
RH2bpYerq6sbQkPfysQmdFLpe5YccF2h5uZmDrTh+2JuWZIPhRUPBwfQg9De
3s6PQFDx0BKi+jbNHUYxPnPmjGpHmShNpiP2JPEZHA4VnFW4vLzcJMSD5c2W
2UTT04ndu3ebSCk1rvmnmfsIMXyXqZNhI5sSnZ6eHrpl2dnZ//Vf/6U+kbOB
SYUsGc2UrIZTAAAAAKQstG4kfYcWzzKgRm7hhVrHam75yR30zXumMYCWrN3d
3V5fsXNYxXCwcu7r60tPTw9lENAc7EtKSpShjz1AmOjlI+WyGmEL7CpN2eQw
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
mqZSXaV48oNuKku7es+ePbr/In2ZaRs58T5ej7wgpiL7Vq0nsmTJkosXL6rw
iOzeXbt26TZ25IWh41c5PcS9q6sr7HsVa9UP+VKdnZ2Dg4Pucy727dsndU92
ux4fIv9K/TQPRGtrq7dOSid90aJF8t7u7m4zD+SVK1f0utuykdyvepyXsEk2
JglaIx/iTMRQ5LBKRbV6lwphk8ksXH8mY5xfGSVS5eTKk0qTFsmFmRY7NRU+
le8i38791Ovo6LBCSUrGsAnNPwBAUXNMbKKpW7ZmjlTPmNjkxYsXK1eulAaJ
dDmtz5IWiNy79WZ9l+lBiUk8bGIlNom/ConuIy9fvtxKEmvOWYs8X8Nkrm6Q
JdnIhON9vB6z+ykNeLlEyA73PnYcHBzU/cdo+zx+lVMpnnwTYjsyx8CbpLrO
nz+/s7MzeMVPlTDWd5iK6pXoDZpDARV19ZZzZO/evdbjcnOJ+WiD/zU56czR
QVn1zjvvRI60JB428Y58cFnGK5jq5MopVlNT895773V3d+uNJxs24fqjxDm/
Mopf5eKHbb/77jud38lSWVnZ1tYmpQqutGpqm+wlNWtJGnXq7cFhE5p/AIBi
px/WOD6jUQNEzVutXgIvY2ITtcxxRUWFvNI7QdjMlCgv++tf/xrzq6HAJR42
UYE7XTPjpyY22+TSpbWegpk5KOKsJqmMjY29/fbb7n2QCLKx7pI1diLm43Wd
bVUuI3//+9+9u9QM20ov7/nz56G2H7/Kqatc/FUwgg/Txo0bvauCKmrNbtnP
+/bt884UMOdRShfP/IKPHj3SqarlArt3717zjWZnyjFHQTpSx8LmF4pMTpmA
9BTBEg+b6CxhWvyRDxZzqECyYROuP0rk88tF/Cqnp1RHrq5mSth0h2nVqlXu
k/V0gqDg6wbNPwBAsXNPbKK8evWqqanJvMlK53R4eNglsYnZzfT2O6w1jlev
Xq2iMShViYdNvIlNglMTZ2SNZ7b6KWaLPf5nTU41qoNn5cf04MGDZBeM8E0s
EOcjpNVtNp69HUMzbBth0eqYVU7PUozwoFnTs5ACei5i3bp13keuUsekpunX
eNcmtuZRmovqmt/de6TMNYbcbwe+1DovoWrmJ598Ip+7ZMmSK1euhHpjnNVk
Eg+beEc+xNmNvrIXNpnk+hPv/HIRs8rpNlLM8RhqFlLw9UdORseApGPYhOYf
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
o3wXpwRFPr8CdHV1qbe0tLS4DzVRybVCLbuTe3IZ0QtLSWn/+c9/pnslzT8A
ANx1dHS43DRTOV/+EoXg1q1baqXFt95668SJE/kuzv9z8+bNhoYGVS2lBSsN
v+bmZp2JRX7T3d0dc2FcaL6rS6fjslzspDGOYsGCBe5LiOp5PVlavToa6c6/
/fbbjvvHm1ZRvpRUVxWVkr6J7JD169fX1taqcIH8Kz2gQp6iklXPnj2rq6tT
+2Hnzp35Ls7/c/bsWTni6VY3rqioUH+S18gr813Yohfz/PKlh5rI4Tt37px7
YVTYtnBmrWr9/f3zfmetaKwXhhZNTU3mnDuafwAAuNODOTMqwByMyAE90kD6
L3lJDulL+uaXLl3q7OysqamRfopqGUprdmBgoJCnnBej06dPS5vZ8SrhMnRE
94WlXoV6gqke9fqmTs0jK7NrMLne+oaVpG8oVVcqsFqEVK2ALNX7woUL0zwN
ox5pIDukQBYT12eE9E/n+VH5l+hpJiKR88v06tWrtra21FQ8obe3170kOmwb
aoBcbuglt+Rk8VbIuXPnqpu4FVai+QcAAJAUPY9AGpn9/f35Lg6KntQiNZSi
vb09VH4A1TWQngspa6YPvX5KhAoDeB05ckTFEFauXBnqSqLCZaGW3QEAAMD0
oWdAS4txaGgo38VBEZP6owYPeBeOCaZXpCUz4XSjI7dhhycBFj3ttLq6emRk
JNR7VToUwrYAAABIx0zEWmjTulEsdPwtQp/l5MmTb7311pw5c65evZql4qFg
xak5gKLjb7Nnzx4cHAz1Xh223bVrV5aKBwAAgBIwNDSk5phLy7NAVtVBEdF9
lqqqqgsXLoR9u3rU29TU5L7sBUqJWimVyC2i0bO9Zs+efeTIkbBvV2HbUKul
AwAAYHqS3m5NTY20PN9//30iJ3CnYyZSfyLETJ4+fbp06VIWwZzm7t69q8ac
NDY2EjmBOzNmcvTo0Qhb+PDDDx1TzgIAAADSc1m5cuWKFSvu3LmT77KgaEht
kTojNUfqT4S3S1elv79//fr1dJanufHx8dbW1traWtb2hbtnz541NzcvWbIk
QsxWGRoaqq+vJ7UXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
X1Vllkrusovktms+lch72OTx48f/+te/PvvsM7l9NzQ0SHnke1VXV+tSmVVd
Si5fWV4gHUk5prK7wn6crpZq76k6KTVfzsonT564bCFy5QxVyGxXA5O+KMmZ
nppaHVvOEamf33zzTag9LC+WgyKHRqczlXNf/vvFF1+Ezc6hv50qkmxK9oB5
/YkcNolwL/Clq6UUQ11P9BVYX8bjhE3MEaHmNHYAwPTkTWyihVqJWD86J7EJ
4GLz5s3qtJKzTLpREbYgjcZPP/1UupCpNKQl2djYePPmTd+3nz59etasWdK6
nudHtbqtdqZqJ6tOk3qZ7viIZcuW6S6/6fz583V1dbrb7i3kkiVLLl26ZL3r
zJkzqrnuJf2CW7duqXSaFul3BPS8pG/S2dmpx137kq8jrwkOv8Tc88+fPzcf
lJvUPpS+w549e6zxfibZY7IHAkpobUH1nvRhVb+Ro6/3p/le6SzIZVw/Zg1m
HfQEj5p0AKXHGnywVOWRChawK3RI38sbNgkov+oVShXauHFjQGWWypOunysH
RTqG0stL93aLdVyypKWlxffT9bl//PjxgMogfxoaGnL8LDmt5JjqiuclZ5/s
3qdPn6bbQpzK6S6r1cAiX3bTpk0B9dxxsWwVkAy4aMhu7+3tdSmVFCng26ki
yQVQTuewYZNo9wIv2RtHjx4NqAb6ChwnbDL5+yBqtfe+++67UO8FAJQSHUtf
u3at96YcaiViEpsA7sxkhtHOmrt37zY0NKgtSJNbWnfnzp1TTWI5Sbdv364b
tPLXTz75xHuCq7BJumanbzvTerxo8XZS5EPlo3WPQN67Y8cO1UG+ceOG2X+U
nWDFjgKKJy12aXunpnLCSJdt27ZtZjs8XXRXXmk2sxcuXLhz586RkZE7U44d
O9bR0aH/2tramq5/EX/PB3Tk5fdjY2Pvv/++upwODAyMjo7KFlRv0dz5ixYt
kj/5llBeL51TtU/ka1qjU2T7f/rTn8xumtk9N3sZLqyDntRRkxNEqof604wZ
M+TF8mXVt5B/pWPV3Nys3y59bXlBun5lqLBJQPllz+iwj/x74sQJ9cXloEvh
dfBQSiUVyVuY4HPHV27CJrITfD9dSnv79m3ZsfLVpLZInZFOqOx8qerffPON
1Cv9yjlz5rhcweSo6XdJ3d66detPP/0kG1TRJPmv7vLLD9Ip9m4hZuV0l71q
YJH9Js0q9RbZyfIWNeJifHxczn0zyCkbD4h4yEVJR2LlxevWrTt79qw6WJ9/
/rl53ZM/ycYDivTdd9+ZFVUO2RdffKG+o2zthx9+kC2UTVmyZIm5l4LDJnHu
BZYXL17IjtKvV/tN1SX564MHD2TL6ivIpqSQuoQRwiY6bbvYtWtXqPcCAEqJ
NIrmz5+fSj9HwH0lYvXonMQmgIv79+8vWLBAnVbSpg07m0Y6+/rt0nSXlrb3
NWbb0rfVLe967733Wltb169f731sJ7+R33d2dj5+/Fi/RX7etGmT98Vz586V
zpd01c1x4NJO7u3t1Y1badU/fPjQKuT+/ft1Q1qauIODg97iyRt1Z0RZtGiR
bFYPUbD6ffL758+fWx/0/fffB/dBpFeud2kqfRLsRPa87CXZV/LV1qxZYz0d
lkuoXEvlXbJx73iSU6dOufRTpNOh9pgUNV1o5dtvv9Uf7Rg2kd3e6mEd9KSO
mux8ne0z3Rc5ePCg3huyZSmJby9V7+2Ghgbrmb43bBJQfjkX5JfyQe+//751
QOVzu7u79St9F8YKCJvIN127dq1337qP4ohDuufyWbIrrOXzpLR9fX2yE+QH
b0lkR5nXgZaWluDMD+YJuHr1au+lQMgvdTBZPlc6v9YBjVk53WWvGqTbJ/KD
nJLWC8yrTUANN18mpfUOTZEzrr6+XhcsICZsTh9Tn+g7H9AKrSgBYZOY9wKT
NT9Lvrjv5HErtKKrdNiwiTmXVq7Mod4LACglOrFJusGHjisRk9hEkf1wJyce
PHgQagowCo1erTsV/pHo2NiYdK7Ve6urq6XNnO6V0jaWFrJuA0vDNWCb5uwJ
Oet//vnndC+W0uoZ39IQPXr0qG9tNJNepiun1dGoq6vz3RVWuEC1q4eHh9Vf
rVkGTU1NVg9OPloKENxrUBdDczve3ZWNPS89Gr3N1NTICnl9uo1bKacWL17s
ndtivmbbtm3pPnfS6ISmG9VgPXMPmz4izlGTPWb+VfaJNwGLVXlk4xnjDPIC
M07lm9skXflV9UjX5bTulQETWhUzapT33CaKfC+zVLLP5SsHdGDN5fbku8se
SLflq1ev6l528DQ6M9GrXD0OHDiQ7pUxK6e7LFUD86Ik31Sulhk/3beGm3ss
ILRihrnS7dhz585ZMZOAZsaVK1fMi2rwIUjqXiCvaW9v168Jvgi/fv1aNmhG
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
qegmpXfd5zj3ApMVgUl3fTt+/Li5+Lt5+KT6pTsrLWbEjHywAFDyvF1LX2Gj
HzrPW6jEJumYc5+DH+WgBFjjZjNOJUjHGp8vzaH+/v4I2/EONk43mz5Z5ooh
ERbGNZuF8t2l+S1dfmlS3rlzR07PDz74QHdq5K/SvI+WN1IHSCOHkqQDYs5t
kcLU1dX95S9/+de//iVFHRwclNO/bIqVUsbq/gdwHGX03XffmQ1p1X7euXOn
2mlSCRsaGnxLYom/533HXPlSo56s5UjSUVNOvPtNSrtjx44HDx6oT5cfpL+p
Jzik63foopoLhMmWP/nkE/mm+/fvl816T7pEjprs/G3btplXCTnTpXevyin/
6vKrzEhmWgb59Kampjlz5qjj6F4kFTtyfLEqfNjjaDlw4ID5HaX6yV1Yzgvp
0EnhA5Lh3Lhxw3qMnoqa433Sb9hewP7xjdh4efuYckw/++wzvW/li8vnHjp0
6NatW+o60N7erv86c+ZMqVcZh56GrZzuclYNrBBramoOy9atW2WHyJalMvT1
9anbnFxnAs7T169fyyvN6iRXIbn4HDt2TLYj54hccs1TJt12vJm+2trafvrp
J9m+/Onf//53T0+PKo/8293dnW4v+QYZIt8LLFZ6NPlecsTVx8lt9MSJE7JZ
tR2pY6tWrXI/HBYzwVeEpwYAgCLy22+/Wf1BuavOnTtX7vWqVal/H7afqMdR
R8tKYbGm9gePUUexk+bQ0aNHpdmjHgfLz5FnZp0/f149PpZa7fucztHTp0+l
0T5zivwQZ1GeUDZu3KiqfYQ515NTxZYtWGMVLNJMjZYpV9EBUpekhenIG6Wx
HdANka/vHfuhF9Kdl4a8S31398lZGfeYtMBdKmTMPa8Tfsp1ON23U7tdh03k
xdIPSvdi+ZPqI0waPT7pg3z11Ve+j1wVecumTZsyHta7d+/qcSnW299//30r
KJTUUVNXCTN5hffT5RCoU9UcOaPpR/N6h8guDdh7ZtgkoPxC/VX3l/Vd1ZdK
ge7bQZPvKN187yhQtXOCH4XLztEdOrmQSvkjPw2XauNSu8ywSbo9Oe/3pkW6
wty8ebOxsdF3oII+rA0NDdJPdyx8qMrpLsfVQI6mOfHZIlv+4IMPXC6/ckNc
smRJut2rLhEud7fjx48HlEe2IwdRDmVAcCldBYh2L/AaHx+XO3XAFVgqrWoS
BEQFM4ZN9LrzLuu5AwAQ36VLl9StXG7Ecjv2vsB6lhoqzwNQvHTykDjT09Rq
ztJ30GtUybkm/c3Ozk459WImC1JPGL/99tv445OlC/O3v/1NGrHz589XzV3p
fNXX10vbNcEVVF2MjY0NDAwsXrxY77FoJcnqno/szJkz8nV0n1H6KdJ9kC+r
u+dS2oULF0rnxT0RkPQ+Dh48KLtIbUQO34oVK/7+979n+zvK5546daqtrU3X
GV14K/OMDmSpcRp79+4tltXZ5Chs3rxZvqDqoEm3ccuWLS59Wzm+16acPHlS
+qFFNIlATsC+vj6zTsqBe/vtt72H1UW+KmeypLRy0ZCaINVbXU/k68jPvb29
YZP9yj6Ud8nuVYE12SHV1dWy5VD7Vp9686bG7ahTT7YpW9bbOX36tFzuGhoa
Nm3a9Nlnn8n1Uw26yzhyMql7gXUll3JKaWWzsnG9ndbWVqla69ev7+/v37dv
nxrG8+DBA5fqoZ9rqOl+7gUDACACa8FiuX172+pm2IT0Jpg+zOQhkVMTAJjO
VHbZyJN0AHiZd+d0WYYAAEiQWghSR0V8l9c0E7CkW0oDKEk6eUjYdWoAYPL3
NbmIuwIJ0mNBZ8+ePTw8nO/iAABK3/Pnz82px94U7tYygtL2K5bB1UB8em1c
7yKkABBM5xmLv9IuAOXNmzcbNmxQjdJoK/0BABDBzp07pUtYXl7e3t7unaGj
FgrUU3gYaoJpRZpncl6o+h8n7SqAaejatWtz584NuxYegAD6cUbkJeQAAIhg
YmKitbVVTcD57LPPzJRf0tLTayVIw4/bE6Yhs4V24sSJfBcHQNFQiy/zQBxI
kJ4829LSwpkFAMilFy9edHd3q5TpaqWD9evX19bWqgzt8u+qVauuXbuW72IC
+dHb26vOhcbGxhwvKwOgSF2/fr2qqoo86kCC9IOM2bNnnzt3Lt/FAQBMR3q1
uMrKSukkVlRU1NTUdHZ2XrhwgXwmmM6ePHmiUgCVl5cfOHAg38UBUOj0MM6V
K1cyuQ9IxKtXr9ra2tTjvN7e3nwXBwAAAH8wODg4e/Zsaa0tWLBgdHQ038UB
ULjevHnT09MjPTu5aAwNDeW7OECJOHLkiBoXTTQSAACgMO3bt0812Nra2phP
DSCdv/71r+VT5KKR77IAJeLWrVs1NTVqeYKRkZF8FwcAAAA+9BNkekMAAkj/
bvHixb29vXLRyHdZgFKgZ73Nnj17cHAw38UBAABAWtJye//999XYe1puAABk
mznr7ciRI/kuDgAAADKYmJj44IMPpP02b948shYAAJA9Zszk6NGj+S4OAAAA
nEgr7pNPPqmpqfmv//qvfJcFAICS9ezZs+bm5iVLlly4cCHfZQEAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACXo
/wACSMNc
    "], {{0, 700}, {1469, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{420.79999999999995`, Automatic},
  ImageSizeRaw->{1469, 700},
  PlotRange->{{0, 1469}, {0, 700}}]], "Input",
 ExpressionUUID -> "278b296b-41c2-4860-a60e-4fca0e4bd7eb"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
n376adeuXbGNNUgcXYnCeRkKPfDh0KFDz58/Nz9aXl4eGRkZHx9PTGPD8zBt
Yg7pcjI5b+Lobh4uFoPdfBNmlpWVyUV3svzQ0JCe3VX+IjdD/G24dOlSIBCI
qkPaxsZGZ2enNKCgoODq1auWT+X+lIZ5Ph4QyUfaBAAAAGnHHKHT0NDgdXP+
LwpORDHY/v5+ieM8n2zFwpz3xEnfAD3woa6u7uXLl2G3dvz48cQ0NjwP0yZ6
hI4ctRx7kvdu0t08XBxcpieycT6/lTl5t7REHvD4mzE7O1tYWKi26bCn1sDA
gN/vD1ty5/Xr1xUVFeXl5a9evYq/bUgvpE0AAACQdkZGRvS76VQobKK/VLte
DFZiPYn4UmEoh4U5zGTb2hH6JX7YnMnmmwv6+eefJ6y9YXiVNlEBeAxDnBJB
d/NwcXCZ6ubhfPSceUJcvCJmnzQn51lVKo5UplglYWpraykPuwORNgEAAEDa
0e+m45moVGL5O3fuSLS4a9cuv98vEVNlZeXw8LAZFsky4+PjVVVVOTk5Egnu
2bPn9OnTll76OrORiGKwqjNAnJOtPHr0SM5YUVGRnq+5ubn58ePH8TTMjEm3
nfdEvcR///33l5aWwi4gzZPTe+HChXiaFC2v0iZmX6kYap/K7Sc3YUlJiaq/
ITen3KLbptRkgYcPH/75z3+2XAL1KLk7uEwVS3E+v5V5QnTnpfn5+a6uLnWY
Qh7Stra2aLty6bIt2dnZoYNuTKpSsfjxxx/DLqByQR999FFKZS+RHKRNAAAA
kF50msIXZbFH05MnT6qrq3WXFdPevXtVEkACzPr6+tBlSktLzSzB8+fP33nn
HXff12vd3d3x9El4/PhxpMOUQHJ4eHh1dVWC05ycHNnFxMREVBvXMal95U/Z
i+xLdlFXV9cYzsGDB1Xa6tatWzEcY8y8SpuYNTeinYfo4cOHaipqk1xfuYg2
4bw8MhLvq9uguLhY373//d//rR4lF4vBzs7Oyi580XQDMyu9SCP//d//va2t
TZ8ik/zw9OnTzhMXunC0z7aGjJwQOavShsrKyrC3qPweyM3N9aXMDOBIMtIm
AAAASC/m8JDCwkIJ06LdwsTEREFBgVq9v7//2bNnEojdvHlzz549arNFRUXf
f/+9mkFVlpSwbn19fWVl5Xe/+53qsNHQ0GCWSpBP7969OzMz4+qBbkokK0G9
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
9IS/iqV6cNjkmMNnJFpqHFBs8wEp9+7dU3ej3JbyJJp3keVAysvLnzx5EtXG
zczeDq8Hi3jIrXjs2DHzgZI70+tGAQAAANswu/c7fJOuijDI8nv27Ll9+7Z8
E56fn29paZF4TUKzgYGBs2fPqt4a8pP29valpaXNrVKZH374oYrd3nvvPfXD
RFBdCKQBo6OjMW9kamqqqKhInZbCwsJr166tr6+vrq7++c9/lqOWH8qByBf+
v/3tbzpzIovJP+VUqPfyEs47zAuZ9TxjqGuaCrxKm2wa1XRjqwoyMTFhdjg5
ffq0PAJy4b7//vuDBw+ag7Bi3oUT8vjI9isrK5eXl2PeiO5PIn92dHQsLCzI
TfvDDz/oA5E/5baM4dEzu+UkKHGEt488XI2G999/v7i42PJMqcLg5mIffPDB
w4cPvW47AAAA8CsqZPM5rgq7sbHR1dVl+faros7h4WG1QHd3t+U1vf6S/PHH
H8cTG25Ldu1zY7SLhIryJT/0EHxb4yBu3rypFjMnFdJk71NTUw53pHutJ65u
RqJ5mDYxI/oYqsJubvWA0nPfWOTm5ppTzTovmxyV2dlZdaeZE1jHQJ6706dP
h96N+qaNqkStSc8YJRu/dOlSPI3EzmHWDnIunj5XAAAAQILoUh7Oe2hI8DU+
Pl5VVaViNL/f//777z9+/Nhc5s6dO7W1tTqIk9i2ubnZskwkT548aWhoyMnJ
kS2Xl5fLphwei56jx5V34rK1zz77rKysTKWAJHLcu3fv8PDw+vq6uZgclGqt
WqalpeXly5cOd2FO2ZyguhlJ4GHaRF9xXxy9NWStgYEBWT0vL0+uoNyrctHl
0r969UoN+Nr2AsV8x26+eQDdSprNz8+3tbUVFhZmbCkoKGhqapKn1XLTRkVn
VtO09g48oX4tyE2Ym5tb4IDKf5I2AQAAQAoy62pGmjI4mSYmJtRX6Pb29r17
90b1RVqVasnKyrp8+XKCm+kO3Vkitnl/UoSHaZNNo6yx69VKLTP2WoqfaPHc
sbo8S21tbdgZcDxn/n6IuWItAAAAAKS1bafhSJq5uTmJ0YqKiu7du7dpDGA5
fPiwk9XVgaRR1Uo1pCgVznw8vE2bmMmNSJmNUCsrK1NTU3K/2Yxb0VfHtzVC
J+zETHHesXqy7KGhIYctTzLdGy0YDN66dcvr5gAAAACAB8xpOLzt8yBRp6or
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
9dfOMzyqD8P7778vmwq7QGtrq5yfCxcuxNxI5/RFUVOchL0oYUm0++c///nR
o0fmD9VUKT73isFuvgm3o5p6xizXo+5quQ+//fbb2tpaddWkkXJ/nj9/PlLS
Q5XqFT/++GPYBdSRfvTRR1EdpqUbTCp07kqOsIVNtKhmIlZnfqclnWCjoaHB
vH/OnTu37SrXr1/XCcxItyUAAACgmMUWYh418OTJk+rqav1+37R3797p6enN
rWxDfX196DKlpaVqAeX58+fvvPOOLzHFYNVwgGAwODk5GcPqy8vLnZ2dKi1g
Icf14Ycfrq6u/uUvf5EAX3bR09MTNqAeHh6Wr+sSvEsU2RjOwYMHVd4pCdNi
yhEdPXo09KJUVlYuLCzYrPgf//EfKuiQppp9Of7whz+o6qluFYOVFkpjonod
bCnXs2/fPrkoe/bsCb1qvq2yJ3L3WrYgN6TclnKryK7DXiO5k3Nzc33R598s
Y+KcvBZ/O+iMZdihZ1HNRExhE5gs9WB9MaVNoh1tBwAAgB3FnIcxtqErEiAX
FBT4trIu/f39z54929jYuHnzpg5Ui4qKvv/+exX8ypJjY2Pr6+sS2/7ud7+T
oFt+2NDQYNaskE/v3r07MzPj6oH+z/tudbCxzRb08OHDvXv3qiMKBAIff/yx
SjEtLCx0dHTIgWRkZNTU1ASDQbWMHGnoIahxH2Hjd4vQsQyu0/VVpEkjIyPy
T7PKhE1Ebym4ahkrISfkxo0bbqW8VHQjJ/zSpUsOV7HUh5TV1W0mN+Qf//hH
ufGkbXLTmvfn1NSU2X5VqndbMQz/sZw6J1N+vB3UdYw07bLzmYh1jExhEyiW
Z8oXU9ok7K9rAAAAYPNNWUv91TGGfMIPP/wgXzglfmxqarK8HTa/l6raFIWF
hQ8fPtzcipJOnz6tP5Ug1+xwkiDqjbZ9//9Irl27ZuZDLF0pdK0S86t76Nvw
+fn53bt3O4nHfUl5+9nX1ydtlkvzn//5n+on5iWzyaFNTk7qsxFVQiMG7e3t
speysjL73i8mS31I31aXGLlAlml9bt++rY/CnPTn6NGjDq9RDONELD1hYp7i
J+2okVY2T7rDmYh3ZmETeRJnkkIlvb0+3OiQNgEAAEBCSWAu4bn+6hjtu2/9
Xr6xsTF0qtkXL16UlpbqjUske/bsWfWRBLaqA4AOP5Mw/2N/f39Uk9hqZhcR
+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
5eXJwmHTJuLly5ctLS1+vz9S3mP37t03b960rKXSJjY7VS10mDZRZ+n8+fOW
cjEmaeGxY8fsa8beuXOnvLxc9pufnx+2ywoAAAAAAEialZWVCxcuTE5O2kfo
arG7d+9GVQw2mZaWlj7//PNDhw6pHItK2tTW1n777bfJTD7I+ZGz1NraumfP
npycHN/WOCP5e1dXV9iyKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AADS3cTERHl5eXFxcXd39+rqqtfNAQAAAAAASAmzs7PFxcW+N7q7u71uEby3
sbHx7Nmzubm59fV1r9sCAP9rdXVV/s9aXFz0uiEAAADYQcbGxjIzM3XapK6u
TkJmrxsFL62vr588edLv9xcXF//8889eNwcA/tef/vQn+dVUUFBw9epVr9sC
AACAnaK1tdVn6OjoIG2yk62urra3t2dkZASDwStXrnjdHAD4P/LfU2dnp/oF
NTY25nVzAAAA8PZbWVk5cOCAzpnIF9GJiQmvGwXP6JDE7/cPDAx43RwAsFpd
XW1sbFT/YX333XdeNwcAAABvufv37+fl5em0SU1NDSVhd6yNjY2urq6MLZ2d
nXQ6elvNzMy0trbu2rVLLnQgECgvLx8eHqaIDTy0vLz82WeflZWV+f1+uS0L
CwvlV9DLly8jLb+wsFBRUaEyJ3SKAwAAQEKNjIzId1SVM5G/0MFgJxsfH8/O
zpY7oaqqSqIYr5sD90kc2tLSoh9503vvvbe0tOR1AxEjubK9vb1ycb/66qv0
Sn2vr69/9tlnwWAw9J4sLCycnJyMtOLt27fVWsXFxdPT08lsMwAAAHYUs7AJ
9T93Mok71IRKEolIPOJ1c+A+iUD1nFkHDhy4c+eORKwTExP6h0eOHKGLUTqa
mpoqKirSv8krKioWFha8bpQjS0tL9fX1Ko9XUFDwxRdfrK6uzs/P6x+WlJTM
zc1FWr2np0ct1tjYmF7JIgAAAKSL169fq37OSltbG0HTziTXXUJmdRucOHHC
6+bAfd999516NS9hZnt7uxljXrx4MSsrSz6SP+XvHjYSsWlpabH00zh16pTX
jdre8+fP9X9A5eXlT5480R/Nz8+XlpZu+x/T4uLivn37ZBm/3z80NJSshgMA
AGAHMQubUAx2J9OBc3Fx8ezsrNfNgcuuXLmiB0GEvpfXsaeora1dW1vzqp2I
gXn5tPr6eq/btQ1dnEQUFRVNTU1ZFjhx4oT6ND8//8GDB5G2Mzo6mpmZuW2/
FAAAACA2Y2Nj6gunj2KwO9jy8nJVVRVdTd5W5giO0tLS+fn50GUaGhrUAnl5
effv309CqyRq5heOK9bW1g4dOmRJm7S2tnrdLjt6KhybPk5m3a0zZ85E2pT8
+qqsrOTXFwAAABJEFzaRb6d9fX1eNwfe0K9r7d/qIh2Z7/RtxuDoN/vyqyAJ
gx0uXLjg9/urq6tXVlYSva+dQC6ZnE+dM0nxroN6lnP7MTjXr19XFapV5xmb
AaT9/f1qa0VFRY8ePUpk2wEAALCzSMBy4MAB9aWUYrA7ltnVpLm5meI2bxO5
mh0dHTqabmhoiDQA5/9n731/qrq2/f8toAjySxGkIL+kiAUqxcqVXa+UwwlH
TDkeUarYUi6ltdqq1Qser7YpyIlWapDUSCyEkBqyYzTEmBgSb0JCch+chAc+
uI/4C/gD+BO+48O8Z3xH59p77bXWXnuv/eP9emBw77XnmmuuseaaY8zxg80m
xLFjx6LdsS+++IJO9M4777x+/Tra50oF6EafPXs2KytLTebffvut1z0ygyt2
mRs6pNmkpKTk1atXoRqcm5vjtMbHjx+PWscBAAAAAEDKMT09vWPHDvP9PpD0
XL9+XWU1SUtLGxoa8ro7wE2kfrp9+/bR0dFQR0qzSQzSYsBskrIsLi6WlJSw
sJlYOaTZJCcnZ2ZmxqRZTopbXFycKFWEAAAAAABA/MOJTeLcoxtEFQ7U2rlz
59OnT73uDnCN169fl5WVsX5qnuv1wIEDfGRpaembN2+i2jeYTVKWjo4ODs8x
jwpUQqLIzMy8ffu2SbP8OqN/6e8odBwAAAAAAKQix44dUytSJINNWZ4+fbpz
504r2QNAwsEJH8K6Esl4vdhYM2A2SU0mJyfZxTFsVOCJEyf4yG3btt28edOk
5SdPnuTm5qqDm5qaotB3AAAAAACQcrCihGSwqYwspWRSqwIkHIFAoKioiLVO
88iF58+fy4NhNgHRYH19vbW1lcVs69at169fNzmeHeGsmE1kOSE4zgEAAAAA
AFfgvTkkg01lWDEJ6wMPEgvpakL4/X6Tg8fHx7dv344gHRBVNFcTc1Oe5gFl
ZYLq6OhQB2dkZFy5csXt7gMAAAAAgJSDVpW0tvQhGWwKQ6oxl6ZNkf3Z1dVV
Utj37duXlZWlrAr0L/1NGhzpXNZLl66trQ0PDzc2Nubl5anniNQ6aqSzs3Nu
bs5Wf77++uva2trs7Gy2cmzfvp0++fHHH//nf/7n6NGjaWlpg4ODti5zeXm5
vLzc+ra+dDryISWsRywtLZ07d45unBTOHTt2HDx4cHJykr6l+0KyoVkPSBTn
5+cvXbrU3t7+7rvvkkDST9LT0z/++GPjKVZWVqanp0nkaNqn1goKCnJyckh0
6XbwMfQUUFOFhYUkkyQV6ukgwQ4EAhFe4PHjx30Cc1OejB/0WUgJu/FHMT5x
4kSEvQUAAAAAAIkLLZ57enpoHUvrZ1ob5+fnHzlyRFtPvnz5kta9tH5Wi15a
Ht+9e1dr529/+xutyZEMNpV58OABaUZKy6ioqCCVylk7bslkVFldXSWtTfpU
GKEnora29tmzZybtkJZ65swZVek1VCM1NTWPHz8274+qGMv9oV/RvSDdUH7C
ZUSkVmsFro6kKCoqev78ucnxnOZIkcQFiJUc5ubm2pJDuunj4+PfffddlHJA
UbPUK2V/I+gh2rFjhzJosDCoG6rFqtBTRocFlUOj2WRwcFA6IEmUgM3OzlZX
V4c6hrrX1dXl2Ma+uLhIU4Rszdwh5MaNGyz/vnAFiBXSaWr//v2pth1AUvr9
998rG6wSb/p7eHhYjgMdMzAwQINJ40/SRX/Qf+lDD7sNAAAAAOAump4VakF7
8eJF4zG0DiedUVtG0jr29u3bWDKlLOxx5HOaRNF1mYwS09PTe/bs4VOTpkl9
+/nnn2c2GRkZOXbsGA9FaWlpqNgB0iurqqr4AmnQxsbGlCo9Nzd34sQJ1mHp
21OnToW6Ovqc1GSlnxYWFpKyIx/DQCDw0UcfcX989s0mfr9fDrX5zZVJIRQx
yHLjidmENHGjkYHG+fz58ya/oh7W1NSog8vKylzvMMlPQ0ODar+iouLOnTtS
bB49etTY2MimjEjMJrIwjQZ9devWLWqKTkQSTu+FlZUV6sbDhw+pb3x2+uOT
Tz5xdpmaKS+sexsJoewhiahJHSiFdFAJaypMMu7duyfTEzHKFKwmNJq+2L1Q
QuKNks0AAAAASA5oaf3hhx9u2aS+vl4pa0tLS21tbaR+qtURKWJ9fX2kBdDf
77//PilftO69f/8+6SbG9TYAslBFR0eH3Z8nikxOTU1Jb/+6ujrqpDxgeXm5
srJSKhq9vb3m7ZCGQhql8Rhq6tChQxxh4ff7g/onXLhwQQ0RNTg/Px+029eu
XWNbky2ziZbflbrR399vcrwsQeKLVV6I2JtNRkZGaDxpNA4cODA3NyfjmPLz
803is2j02G4QjVi2rq4u1T4JIfXKeIAyTiqB0R6ZFy9etLS0NDQ0kDqsDmCM
ZpNbt241bELiobmUdHZ20iAEtWSSAMvi1OZjZYLM7+oLV7eLvpInJejnYU8h
ow6zs7MfPHjgoJ+JyMDAgPLMoTs7NDREz9Ta2hpNMmxSo2H54Ycf1PRVWFj4
448/0ggvLi7SqKqwpqAhXQAAAAAAicXbt29pbaxiarQcBfQVaays7yinbtJb
1Yp0dnZ27969vEKOge99PECLxpmYsLCwkNB+4E1NTayV2PVnSBSZJNVAbrAG
9STREqIS1H/tmEAgUFJSwprj1NRUqDNK5wG6TKM9isantrZWHUBaqknnSZdx
cHdIrZbRDaQWVVdXN4SGvpWJTXbs2DE9PW39dM6IsdmE6wo1NzezIYsVc3PL
knxMrPg82IJDV8wrRPMzZWJpJN1Z3kdzRfjs2bPyYPpbGTmDTmjSUSSUUdEc
usvKUsrs3r3bRCZVFhd5vLlHEMP3lAbqxo0bdvuZiHz11Vd0ser2ab6jNGjq
LqsYQN9mrJOaAOkp+Pd//3c2tVmJgQIAAAAAiHP6+vpoeUPLyJGREeO3mjMz
r4u0PXRfTDI9es78/Lx0LYgqtBbt7u72+oqdwyqGAweDhJBJ0gHb2tr4XNTb
sbEx42G3b9/mJBIKzWyiWULCFux+9OhRfn4+n1RLHzQ3N5eXl6e+NbeHsD3H
ltlEOhE5IAZldDZibjZRBiiWww1DaFIoI4PmuuO6lY9lL6znlcp3anKYFrBj
bjaZnp6WRW18oX1dNgzZWR0E9Bktk7awXudL+rTYNQUnIlNTUzTVhDJ5yexV
SsaGh4fVV+zjpLCScRcAAAAAIJ5RdgBa4dA6J+gBUkuSW4FGZTAVvE14WzkG
ZGRkJO7KXO7/2g2WSRSZHBsbk8rawYMHg26ma8YcUk61rW2OqfFtFuy2UitH
qm81NTUyVEcOgrlu++rVK+XiYl3M6AL3798fiVRbiYaInFiaTeh+0V3T3Dm0
0KRQQWpS36cWSBLc7RunaTVKnYYydLhlNtEONvd10XxFHBjW6NIikUnriUrY
QcuXAsV06GFvbm72hTZ5adaq2tpa5Sslo5kU8DYBAAAAQKKjdoWKi4tDJW2T
Cpp0sNd89cMWIQUphVSFrG/mKmImk6QX0Lm2bTIwMGC9hwqZGdVc56UekuKg
itccP35c+rprxXwtVuiQtVC1y5SDkJ2d/Y9//CNUI0q7oV5ZL0CsOQaE/a1m
PYiGZSAosTSbKN8n7VwyY4mJt5X0mzJJl0GDnJWV5SDLsUzTWlRU9Pvvv4c6
UjkpmTyqkZhNSAZIEkIdrJlNHNw1GejkCxYEJzEmNrHu39LR0WFxBJIAZRY2
mUVl0m+fCHQyxkyZFINeWloiqd61a5cyHZMEGgv0AAAAAAB4C0e+h8qBsLKy
UlFRwYsfWUaWlkZlZWWsPdF6EuscwMhQEVse2rGUSenmYVdZ0wwIjlN2aKYe
i7qYts8rHV20+Ag6jHRztyrbav481Dj1xOR4ad4Jqz67SMzMJhyMI8VVppch
TAyAnKXHF9rLQjo12Q120Mrs0iNJd8RZdbNIzCbmDiQRmk2Mvg3mfiBG0595
TmOJNEPFxm/KQ5RZuLy8PFR0lfT606YCmnvZbEgthJJ/LoJG/7a0tHz66acN
DQ3KFFNSUhK2zDoAAAAAQGy4d+8eLVeysrLu3r0b9ABNBdOWyktLS19//fVn
n33mrPYBSGKk3mRL14ulTMq949bWVlt2P22n1bEXunT791lOTamppbICi6az
K9LT00l5b29vHxkZicSSwEEfFq/aVn0TF4mZ2USZB7XYFi3ng8XEJqHUcDnm
WkBWWNgIKSG5LS0t7erqGh0dZZNjWCIxm5inGIrQbCIttD4LyVq1J9eWKU+a
TZI7l9c///nPqqoqk/xaWryedtfW1tboiejr66N/Q5npVAIr36aL3cuXL/nz
8fFxdUPp36AFxQAAAAAA4g25WRwzB3uQBDg2m4TFRZmcmpravXs3Ld2bmprk
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
noigxxw7doz9W5xFqAEAAAAAJARdXV2kF6gsfBzJ7qyMJkhcZESMzCDqFay3
ymLER44cwZ5mMuGJ2YTO9csvv7x48SLUAdIY4gtds2YjRByZ8pJCwELskbZW
pCeNnCdPnuTm5qrxlCmIGRrh/fv3qwPq6uoiSeQLAAAAABDPqDKFXP+U8y2Y
OOWCpIQWwK2trWH1xJjh9/tVZ7hIsUoigTraycTg4OCWLVto/nnz5k0MTre6
unr06FEOGQtVLGlsbIwDPcyL43A5YI4jU8WIXQ8rA1YYHR1VN87EOwJYR74U
Dh8+bDzg+fPnKpaNBvzixYux7yEAAAAAQGw4ceKE3M3nkhAFBQVzc3Pe9g3E
GNYWTaISYoPM69jW1qZ0W9JeqWPOCryC+GRtbe2nn36KmR2MhEfmxszLyzPO
cqurq1yP27dZoMQk5wYfyVvtly9fJhVSK/YKYoDU8WtraxFk6goTExOqmnxO
To6xLNHZs2dVHZ99+/YhHxoAAAAAkpWVlZWKigq2kLhSEgIkLlLvqKmp8TCF
iCzioJzDR0ZGtm/fTuIab0kwQKKgpjufoKio6Pnz59phrAkS+fn5U1NTJm1y
zkxVf0pV1925c2c8VClKNThgylZZHxAWrmPOXqkKrohEMg/fKgAAAAAkNy9e
vFhYWFAboxcuXFD6QiQlIUBCMz09XVBQEA8y0N/fr9bqVVVVTU1NGRkZJSUl
jx8/9rBLIKGRLkwq+qajo0M7ZmBggIv/kkpoUj9acevWLaU5FhUV+f1++jsv
Lw8F32OPNPk2NzfD1cddBgcHlZzTvy0tLZ9++umBAwfU/Lxnz5779+973UEA
AAAAgBghsyCSfup5agvgFby3yJVBPEEVxVbFi9VaPTlKrwKvIInimJqsrKwz
Z85Ihzr69tSpU1z9OS8vz2I9qatXr5LmSFJKv62vr4dlzxPYfkUzxvT0tNfd
SUK4VLcqG02jXVtbS8KPumYAAAAASCmCloQAKQgtgxsaGtR2fFdXl9fdAcA1
VOIR5RwyNDSkagSTwLPpQ4l9TU3Ns2fPvO4ssMry8nJlZSXdu/T09AsXLnjd
HQAAAAAAkLSoopmyJARIWRYXF0tLS9WW4q1bt7zuDgDusL6+3t/fz2E4Glu2
bNmzZ8/w8DCMxolFR0fHlk1ClUYCAAAAAAAgcpaXl8vLy7VksCsrK3Nzc3DB
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
//33Jik+bJlNZGEa7eAnT57QZVIHaEA++ugjUm/p1KSPa/oyaaak9Dm7TLo0
eVLzWylTQCiSNacN6d00/kaxPH/+vMmvSAZqamrUwVE1JpMM8JysOkY3bmRk
ZGaTn3/++cyZM2xqo8eHvgraDj1Bn376KVsYSKjOnTu3sLCgTvGf//mfdXV1
fJbS0tLZ2dlQXaJTqOeUWvvkk0+kgZ2a+uyzz6Tpz67ZRDPuhXVvI7GUN46E
1qQylEI6qIQ1HiYHy8vLhw4dMprLysvLzaswf/XVV0pmaGrq7++PWYcBAAAA
AGIAq4G0+p2YmCD96+DBg2qZZJ4xj77idTUtjB0raCCZkIUqOjo67P6cNKkP
P/xQxQLU19ePjY3RJ6RqtbW1Kf8N+ry9vb2vr49UQvr7/fffDwQCpOXdv3//
nXfeCSu0EUIKRWVlpepGV1dXqGPYUUQzmwwODjY0NJBuKLMx+EKYTbq7u0Md
3NnZSaNBfxj9SR4+fCj1UOpJWMXQiJbflS7WXAmSBUd8yZsFQlkAaDTopszN
zck4JppCTXbYOdeTFdXeMfSkNDY28olIDIxzMgmtVIeDVpSmp4nr+ZKYkbAF
9SeRFqSg5yLm5+eVzYHaCVXA99mzZxzWZ9dsIvO7+sLV7aKvNFMk/TzsKWTU
YXZ29oMHD2z1MOEgKaJpR73Tab6i/w4NDXGY0scffxzqhzTRqRlYgYAmAAAA
ACQTtChS26BVVVW8kST3xE2WSVJBTvptOFoTzsSEhYWFhPYDb2pqYqn44osv
bP2W/Zdoxa5l0qCv2BZBWrlKJ9LW1qbGanZ2du/evawPRi9ChHe3CwoKSHEO
dRhp0MoUGaqgDH1YVlYmLSEmORboIZXqHl0maTEmrgLSUWTHjh2Tk5N2L1Na
RH2bpYerq6sbQkPfysQmdFLpe5YccF2h5uZmDrTh+2JuWZIPhRUPBwfQg9De
3s6PQFDx0BKi+jbNHUYxPnPmjGpHmShNpiP2JPEZHA4VnFW4vLzcJMSD5c2W
2UTT04ndu3ebSCk1rvmnmfsIMXyXqZNhI5sSnZ6eHrpl2dnZ//Vf/6U+kbOB
SYUsGc2UrIZTAAAAAKQstG4kfYcWzzKgRm7hhVrHam75yR30zXumMYCWrN3d
3V5fsXNYxXCwcu7r60tPTw9lENAc7EtKSpShjz1AmOjlI+WyGmEL7CpN2eQw
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
mqZSXaV48oNuKku7es+ePbr/In2ZaRs58T5ej7wgpiL7Vq0nsmTJkosXL6rw
iOzeXbt26TZ25IWh41c5PcS9q6sr7HsVa9UP+VKdnZ2Dg4Pucy727dsndU92
ux4fIv9K/TQPRGtrq7dOSid90aJF8t7u7m4zD+SVK1f0utuykdyvepyXsEk2
JglaIx/iTMRQ5LBKRbV6lwphk8ksXH8mY5xfGSVS5eTKk0qTFsmFmRY7NRU+
le8i38791Ovo6LBCSUrGsAnNPwBAUXNMbKKpW7ZmjlTPmNjkxYsXK1eulAaJ
dDmtz5IWiNy79WZ9l+lBiUk8bGIlNom/ConuIy9fvtxKEmvOWYs8X8Nkrm6Q
JdnIhON9vB6z+ykNeLlEyA73PnYcHBzU/cdo+zx+lVMpnnwTYjsyx8CbpLrO
nz+/s7MzeMVPlTDWd5iK6pXoDZpDARV19ZZzZO/evdbjcnOJ+WiD/zU56czR
QVn1zjvvRI60JB428Y58cFnGK5jq5MopVlNT895773V3d+uNJxs24fqjxDm/
Mopf5eKHbb/77jud38lSWVnZ1tYmpQqutGpqm+wlNWtJGnXq7cFhE5p/AIBi
px/WOD6jUQNEzVutXgIvY2ITtcxxRUWFvNI7QdjMlCgv++tf/xrzq6HAJR42
UYE7XTPjpyY22+TSpbWegpk5KOKsJqmMjY29/fbb7n2QCLKx7pI1diLm43Wd
bVUuI3//+9+9u9QM20ov7/nz56G2H7/Kqatc/FUwgg/Txo0bvauCKmrNbtnP
+/bt884UMOdRShfP/IKPHj3SqarlArt3717zjWZnyjFHQTpSx8LmF4pMTpmA
9BTBEg+b6CxhWvyRDxZzqECyYROuP0rk88tF/Cqnp1RHrq5mSth0h2nVqlXu
k/V0gqDg6wbNPwBAsXNPbKK8evWqqanJvMlK53R4eNglsYnZzfT2O6w1jlev
Xq2iMShViYdNvIlNglMTZ2SNZ7b6KWaLPf5nTU41qoNn5cf04MGDZBeM8E0s
EOcjpNVtNp69HUMzbBth0eqYVU7PUozwoFnTs5ACei5i3bp13keuUsekpunX
eNcmtuZRmovqmt/de6TMNYbcbwe+1DovoWrmJ598Ip+7ZMmSK1euhHpjnNVk
Eg+beEc+xNmNvrIXNpnk+hPv/HIRs8rpNlLM8RhqFlLw9UdORseApGPYhOYf
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
o3wXpwRFPr8CdHV1qbe0tLS4DzVRybVCLbuTe3IZ0QtLSWn/+c9/pnslzT8A
ANx1dHS43DRTOV/+EoXg1q1baqXFt95668SJE/kuzv9z8+bNhoYGVS2lBSsN
v+bmZp2JRX7T3d0dc2FcaL6rS6fjslzspDGOYsGCBe5LiOp5PVlavToa6c6/
/fbbjvvHm1ZRvpRUVxWVkr6J7JD169fX1taqcIH8Kz2gQp6iklXPnj2rq6tT
+2Hnzp35Ls7/c/bsWTni6VY3rqioUH+S18gr813Yohfz/PKlh5rI4Tt37px7
YVTYtnBmrWr9/f3zfmetaKwXhhZNTU3mnDuafwAAuNODOTMqwByMyAE90kD6
L3lJDulL+uaXLl3q7OysqamRfopqGUprdmBgoJCnnBej06dPS5vZ8SrhMnRE
94WlXoV6gqke9fqmTs0jK7NrMLne+oaVpG8oVVcqsFqEVK2ALNX7woUL0zwN
ox5pIDukQBYT12eE9E/n+VH5l+hpJiKR88v06tWrtra21FQ8obe3170kOmwb
aoBcbuglt+Rk8VbIuXPnqpu4FVai+QcAAJAUPY9AGpn9/f35Lg6KntQiNZSi
vb09VH4A1TWQngspa6YPvX5KhAoDeB05ckTFEFauXBnqSqLCZaGW3QEAAMD0
oWdAS4txaGgo38VBEZP6owYPeBeOCaZXpCUz4XSjI7dhhycBFj3ttLq6emRk
JNR7VToUwrYAAABIx0zEWmjTulEsdPwtQp/l5MmTb7311pw5c65evZql4qFg
xak5gKLjb7Nnzx4cHAz1Xh223bVrV5aKBwAAgBIwNDSk5phLy7NAVtVBEdF9
lqqqqgsXLoR9u3rU29TU5L7sBUqJWimVyC2i0bO9Zs+efeTIkbBvV2HbUKul
AwAAYHqS3m5NTY20PN9//30iJ3CnYyZSfyLETJ4+fbp06VIWwZzm7t69q8ac
NDY2EjmBOzNmcvTo0Qhb+PDDDx1TzgIAAADSc1m5cuWKFSvu3LmT77KgaEht
kTojNUfqT4S3S1elv79//fr1dJanufHx8dbW1traWtb2hbtnz541NzcvWbIk
QsxWGRoaqq+vJ7UXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
X1Vllkrusovktms+lch72OTx48f/+te/PvvsM7l9NzQ0SHnke1VXV+tSmVVd
Si5fWV4gHUk5prK7wn6crpZq76k6KTVfzsonT564bCFy5QxVyGxXA5O+KMmZ
nppaHVvOEamf33zzTag9LC+WgyKHRqczlXNf/vvFF1+Ezc6hv50qkmxK9oB5
/YkcNolwL/Clq6UUQ11P9BVYX8bjhE3MEaHmNHYAwPTkTWyihVqJWD86J7EJ
4GLz5s3qtJKzTLpREbYgjcZPP/1UupCpNKQl2djYePPmTd+3nz59etasWdK6
nudHtbqtdqZqJ6tOk3qZ7viIZcuW6S6/6fz583V1dbrb7i3kkiVLLl26ZL3r
zJkzqrnuJf2CW7duqXSaFul3BPS8pG/S2dmpx137kq8jrwkOv8Tc88+fPzcf
lJvUPpS+w549e6zxfibZY7IHAkpobUH1nvRhVb+Ro6/3p/le6SzIZVw/Zg1m
HfQEj5p0AKXHGnywVOWRChawK3RI38sbNgkov+oVShXauHFjQGWWypOunysH
RTqG0stL93aLdVyypKWlxffT9bl//PjxgMogfxoaGnL8LDmt5JjqiuclZ5/s
3qdPn6bbQpzK6S6r1cAiX3bTpk0B9dxxsWwVkAy4aMhu7+3tdSmVFCng26ki
yQVQTuewYZNo9wIv2RtHjx4NqAb6ChwnbDL5+yBqtfe+++67UO8FAJQSHUtf
u3at96YcaiViEpsA7sxkhtHOmrt37zY0NKgtSJNbWnfnzp1TTWI5Sbdv364b
tPLXTz75xHuCq7BJumanbzvTerxo8XZS5EPlo3WPQN67Y8cO1UG+ceOG2X+U
nWDFjgKKJy12aXunpnLCSJdt27ZtZjs8XXRXXmk2sxcuXLhz586RkZE7U44d
O9bR0aH/2tramq5/EX/PB3Tk5fdjY2Pvv/++upwODAyMjo7KFlRv0dz5ixYt
kj/5llBeL51TtU/ka1qjU2T7f/rTn8xumtk9N3sZLqyDntRRkxNEqof604wZ
M+TF8mXVt5B/pWPV3Nys3y59bXlBun5lqLBJQPllz+iwj/x74sQJ9cXloEvh
dfBQSiUVyVuY4HPHV27CJrITfD9dSnv79m3ZsfLVpLZInZFOqOx8qerffPON
1Cv9yjlz5rhcweSo6XdJ3d66detPP/0kG1TRJPmv7vLLD9Ip9m4hZuV0l71q
YJH9Js0q9RbZyfIWNeJifHxczn0zyCkbD4h4yEVJR2LlxevWrTt79qw6WJ9/
/rl53ZM/ycYDivTdd9+ZFVUO2RdffKG+o2zthx9+kC2UTVmyZIm5l4LDJnHu
BZYXL17IjtKvV/tN1SX564MHD2TL6ivIpqSQuoQRwiY6bbvYtWtXqPcCAEqJ
NIrmz5+fSj9HwH0lYvXonMQmgIv79+8vWLBAnVbSpg07m0Y6+/rt0nSXlrb3
NWbb0rfVLe967733Wltb169f731sJ7+R33d2dj5+/Fi/RX7etGmT98Vz586V
zpd01c1x4NJO7u3t1Y1badU/fPjQKuT+/ft1Q1qauIODg97iyRt1Z0RZtGiR
bFYPUbD6ffL758+fWx/0/fffB/dBpFeud2kqfRLsRPa87CXZV/LV1qxZYz0d
lkuoXEvlXbJx73iSU6dOufRTpNOh9pgUNV1o5dtvv9Uf7Rg2kd3e6mEd9KSO
mux8ne0z3Rc5ePCg3huyZSmJby9V7+2Ghgbrmb43bBJQfjkX5JfyQe+//751
QOVzu7u79St9F8YKCJvIN127dq1337qP4ohDuufyWbIrrOXzpLR9fX2yE+QH
b0lkR5nXgZaWluDMD+YJuHr1au+lQMgvdTBZPlc6v9YBjVk53WWvGqTbJ/KD
nJLWC8yrTUANN18mpfUOTZEzrr6+XhcsICZsTh9Tn+g7H9AKrSgBYZOY9wKT
NT9Lvrjv5HErtKKrdNiwiTmXVq7Mod4LACglOrFJusGHjisRk9hEkf1wJyce
PHgQagowCo1erTsV/pHo2NiYdK7Ve6urq6XNnO6V0jaWFrJuA0vDNWCb5uwJ
Oet//vnndC+W0uoZ39IQPXr0qG9tNJNepiun1dGoq6vz3RVWuEC1q4eHh9Vf
rVkGTU1NVg9OPloKENxrUBdDczve3ZWNPS89Gr3N1NTICnl9uo1bKacWL17s
ndtivmbbtm3pPnfS6ISmG9VgPXMPmz4izlGTPWb+VfaJNwGLVXlk4xnjDPIC
M07lm9skXflV9UjX5bTulQETWhUzapT33CaKfC+zVLLP5SsHdGDN5fbku8se
SLflq1ev6l528DQ6M9GrXD0OHDiQ7pUxK6e7LFUD86Ik31Sulhk/3beGm3ss
ILRihrnS7dhz585ZMZOAZsaVK1fMi2rwIUjqXiCvaW9v168Jvgi/fv1aNmhG
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
qegmpXfd5zj3ApMVgUl3fTt+/Li5+Lt5+KT6pTsrLWbEjHywAFDyvF1LX2Gj
HzrPW6jEJumYc5+DH+WgBFjjZjNOJUjHGp8vzaH+/v4I2/EONk43mz5Z5ooh
ERbGNZuF8t2l+S1dfmlS3rlzR07PDz74QHdq5K/SvI+WN1IHSCOHkqQDYs5t
kcLU1dX95S9/+de//iVFHRwclNO/bIqVUsbq/gdwHGX03XffmQ1p1X7euXOn
2mlSCRsaGnxLYom/533HXPlSo56s5UjSUVNOvPtNSrtjx44HDx6oT5cfpL+p
Jzik63foopoLhMmWP/nkE/mm+/fvl816T7pEjprs/G3btplXCTnTpXevyin/
6vKrzEhmWgb59Kampjlz5qjj6F4kFTtyfLEqfNjjaDlw4ID5HaX6yV1Yzgvp
0EnhA5Lh3Lhxw3qMnoqa433Sb9hewP7xjdh4efuYckw/++wzvW/li8vnHjp0
6NatW+o60N7erv86c+ZMqVcZh56GrZzuclYNrBBramoOy9atW2WHyJalMvT1
9anbnFxnAs7T169fyyvN6iRXIbn4HDt2TLYj54hccs1TJt12vJm+2trafvrp
J9m+/Onf//53T0+PKo/8293dnW4v+QYZIt8LLFZ6NPlecsTVx8lt9MSJE7JZ
tR2pY6tWrXI/HBYzwVeEpwYAgCLy22+/Wf1BuavOnTtX7vWqVal/H7afqMdR
R8tKYbGm9gePUUexk+bQ0aNHpdmjHgfLz5FnZp0/f149PpZa7fucztHTp0+l
0T5zivwQZ1GeUDZu3KiqfYQ515NTxZYtWGMVLNJMjZYpV9EBUpekhenIG6Wx
HdANka/vHfuhF9Kdl4a8S31398lZGfeYtMBdKmTMPa8Tfsp1ON23U7tdh03k
xdIPSvdi+ZPqI0waPT7pg3z11Ve+j1wVecumTZsyHta7d+/qcSnW299//30r
KJTUUVNXCTN5hffT5RCoU9UcOaPpR/N6h8guDdh7ZtgkoPxC/VX3l/Vd1ZdK
ge7bQZPvKN187yhQtXOCH4XLztEdOrmQSvkjPw2XauNSu8ywSbo9Oe/3pkW6
wty8ebOxsdF3oII+rA0NDdJPdyx8qMrpLsfVQI6mOfHZIlv+4IMPXC6/ckNc
smRJut2rLhEud7fjx48HlEe2IwdRDmVAcCldBYh2L/AaHx+XO3XAFVgqrWoS
BEQFM4ZN9LrzLuu5AwAQ36VLl9StXG7Ecjv2vsB6lhoqzwNQvHTykDjT09Rq
ztJ30GtUybkm/c3Ozk459WImC1JPGL/99tv445OlC/O3v/1NGrHz589XzV3p
fNXX10vbNcEVVF2MjY0NDAwsXrxY77FoJcnqno/szJkz8nV0n1H6KdJ9kC+r
u+dS2oULF0rnxT0RkPQ+Dh48KLtIbUQO34oVK/7+979n+zvK5546daqtrU3X
GV14K/OMDmSpcRp79+4tltXZ5Chs3rxZvqDqoEm3ccuWLS59Wzm+16acPHlS
+qFFNIlATsC+vj6zTsqBe/vtt72H1UW+KmeypLRy0ZCaINVbXU/k68jPvb29
YZP9yj6Ud8nuVYE12SHV1dWy5VD7Vp9686bG7ahTT7YpW9bbOX36tFzuGhoa
Nm3a9Nlnn8n1Uw26yzhyMql7gXUll3JKaWWzsnG9ndbWVqla69ev7+/v37dv
nxrG8+DBA5fqoZ9rqOl+7gUDACACa8FiuX172+pm2IT0Jpg+zOQhkVMTAJjO
VHbZyJN0AHiZd+d0WYYAAEiQWghSR0V8l9c0E7CkW0oDKEk6eUjYdWoAYPL3
NbmIuwIJ0mNBZ8+ePTw8nO/iAABK3/Pnz82px94U7tYygtL2K5bB1UB8em1c
7yKkABBM5xmLv9IuAOXNmzcbNmxQjdJoK/0BABDBzp07pUtYXl7e3t7unaGj
FgrUU3gYaoJpRZpncl6o+h8n7SqAaejatWtz584NuxYegAD6cUbkJeQAAIhg
YmKitbVVTcD57LPPzJRf0tLTayVIw4/bE6Yhs4V24sSJfBcHQNFQiy/zQBxI
kJ4829LSwpkFAMilFy9edHd3q5TpaqWD9evX19bWqgzt8u+qVauuXbuW72IC
+dHb26vOhcbGxhwvKwOgSF2/fr2qqoo86kCC9IOM2bNnnzt3Lt/FAQBMR3q1
uMrKSukkVlRU1NTUdHZ2XrhwgXwmmM6ePHmiUgCVl5cfOHAg38UBUOj0MM6V
K1cyuQ9IxKtXr9ra2tTjvN7e3nwXBwAAAH8wODg4e/Zsaa0tWLBgdHQ038UB
ULjevHnT09MjPTu5aAwNDeW7OECJOHLkiBoXTTQSAACgMO3bt0812Nra2phP
DSCdv/71r+VT5KKR77IAJeLWrVs1NTVqeYKRkZF8FwcAAAA+9BNkekMAAkj/
bvHixb29vXLRyHdZgFKgZ73Nnj17cHAw38UBAABAWtJye//999XYe1puAABk
mznr7ciRI/kuDgAAADKYmJj44IMPpP02b948shYAAJA9Zszk6NGj+S4OAAAA
nEgr7pNPPqmpqfmv//qvfJcFAICS9ezZs+bm5iVLlly4cCHfZQEAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACXo
/wACSMNc
    "], {{0, 700}, {1469, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{420.79999999999995`, Automatic},
  ImageSizeRaw->{1469, 700},
  PlotRange->{{0, 1469}, {0, 700}}]], "Output",
 CellChangeTimes->{3.768120743696557*^9, 3.7681700212977405`*^9},
 ExpressionUUID -> "be9ad773-a3fe-4530-9b50-abf34aeff829"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "@", "circumSystem"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"solve", " ", "for", " ", "b"}], ",", "t"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"circumSystem", "[", 
    RowBox[{"P1_", ",", "P2_", ",", "A_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ct", ",", "st", ",", "P1p", ",", "P2p", ",", "eqn1", ",", "eqn2"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"st", "=", 
       RowBox[{"Sin", "@", "t"}]}], ";", 
      RowBox[{"ct", "=", 
       RowBox[{"Cos", "@", "t"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"P1p", "=", 
       RowBox[{"rot", "[", 
        RowBox[{"P1", ",", 
         RowBox[{"-", "st"}], ",", "ct"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"P2p", "=", 
       RowBox[{"rot", "[", 
        RowBox[{"P2", ",", 
         RowBox[{"-", "st"}], ",", "ct"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eqn1", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"P1p", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"A", " ", 
            RowBox[{"P1p", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}]}], "==", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"A", " ", "b"}], ")"}], "^", "2"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eqn2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"P2p", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"A", " ", 
            RowBox[{"P2p", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}]}], "==", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"A", " ", "b"}], ")"}], "^", "2"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"eqn3", "=", 
         RowBox[{"FullSimplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"P2p", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"A", " ", 
                RowBox[{"P2p", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"A", " ", "b"}], ")"}], "^", "2"}]}], "\[Equal]", 
            "0"}], ",", 
           RowBox[{
            RowBox[{"A", ">", "0"}], "&&", 
            RowBox[{"b", ">", "0"}]}]}], "]"}]}], ";"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"eqn1", ",", "eqn2"}], "}"}]}]}], "]"}]}], ";", 
  RowBox[{"circumSystem", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x1", ",", "y1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x2", ",", "y2"}], "}"}], ",", "A"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"//", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"#", ",", 
       RowBox[{
        RowBox[{"A", ">", "1"}], "&&", 
        RowBox[{"b", "\[Element]", "Reals"}]}]}], "]"}], "&"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7667437575347986`*^9, 3.766743903988312*^9}, {
   3.76674393727534*^9, 3.7667440155467043`*^9}, {3.76674409872443*^9, 
   3.7667443557087083`*^9}, {3.7667443891749496`*^9, 3.766744744741939*^9}, {
   3.7667448796315765`*^9, 3.766744902877262*^9}, {3.766745458454606*^9, 
   3.766745525446246*^9}, {3.766747107574416*^9, 3.7667471599276104`*^9}, {
   3.7667475774953527`*^9, 3.7667475845828247`*^9}, {3.7667476455994043`*^9, 
   3.7667476800065165`*^9}, {3.7667482363031273`*^9, 
   3.7667482616927705`*^9}, {3.7667491637280703`*^9, 3.766749208510524*^9}, {
   3.7667509478006225`*^9, 3.766750950407628*^9}, {3.766750991136748*^9, 
   3.76675100723196*^9}, {3.766751588863964*^9, 3.766751591311679*^9}, {
   3.766751726392295*^9, 3.766751738407172*^9}, {3.7667518275468473`*^9, 
   3.76675184515574*^9}, 3.7667518807446165`*^9, 3.7667519311049633`*^9, {
   3.766751964895631*^9, 3.766752064033382*^9}, {3.766752128129016*^9, 
   3.766752160487501*^9}, {3.7667522695030375`*^9, 3.7667522709840765`*^9}, {
   3.7667523192001657`*^9, 3.766752320623361*^9}, {3.766752551992527*^9, 
   3.7667525778489065`*^9}, {3.7667546776663957`*^9, 
   3.7667546940833874`*^9}, {3.767891669925349*^9, 3.767891670637478*^9}, {
   3.767891745428398*^9, 3.767891746188366*^9}, {3.767901925092166*^9, 
   3.7679019725013576`*^9}, {3.7679022060676284`*^9, 
   3.7679022327213354`*^9}, {3.76790227033074*^9, 3.7679023137535954`*^9}, {
   3.7679024058891563`*^9, 3.767902412680991*^9}, {3.7679025518757114`*^9, 
   3.767902613151783*^9}, {3.7679030662812243`*^9, 3.7679030720308456`*^9}},
 ExpressionUUID -> "e724bffb-595f-4b2b-a509-e8cc817df517"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["A", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"y1", " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], "-", 
         RowBox[{"x1", " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}], "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x1", " ", 
         RowBox[{"Cos", "[", "t", "]"}]}], "+", 
        RowBox[{"y1", " ", 
         RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}], "2"]}], "\[Equal]", 
    RowBox[{
     SuperscriptBox["A", "2"], " ", 
     SuperscriptBox["b", "2"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["A", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"y2", " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], "-", 
         RowBox[{"x2", " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}], "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x2", " ", 
         RowBox[{"Cos", "[", "t", "]"}]}], "+", 
        RowBox[{"y2", " ", 
         RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}], "2"]}], "\[Equal]", 
    RowBox[{
     SuperscriptBox["A", "2"], " ", 
     SuperscriptBox["b", "2"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7667482623848915`*^9, {3.766749173734046*^9, 3.766749208998192*^9}, 
   3.766750392040416*^9, 3.7667504224262037`*^9, 3.7667504951544204`*^9, 
   3.7667509543660755`*^9, 3.7667510188558826`*^9, 3.766751850617139*^9, 
   3.766752012360586*^9, 3.7667520689631724`*^9, 3.7667521451255445`*^9, 
   3.766752277995303*^9, 3.7667523251482344`*^9, 3.7667525860230236`*^9, 
   3.767890817739499*^9, 3.76789106123321*^9, 3.767891680622769*^9, 
   3.767892395808597*^9, 3.767892513623473*^9, {3.767901950155128*^9, 
   3.7679019731226964`*^9}, {3.7679022390962844`*^9, 3.7679022779483657`*^9}, 
   3.7679023154769864`*^9, {3.7679023934075756`*^9, 3.7679024148222885`*^9}, {
   3.7679025682010136`*^9, 3.767902577033393*^9}, {3.7679026072595425`*^9, 
   3.7679026136594243`*^9}, 3.767902972147561*^9, {3.7679030687366567`*^9, 
   3.7679030724098325`*^9}, 3.7681207437334585`*^9, 3.768170021314727*^9, 
   3.770422492688095*^9},
 ExpressionUUID -> "eb1049cd-84b4-4d29-a36b-7b4a6b5ae381"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "solveCircum"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"solveCircum", "[", "orbit_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sides", ",", "mit", ",", "cos123", ",", "rhoCos", ",", "A", ",", 
       "sols0", ",", "sols", ",", "ts", ",", "bs", ",", "as", ",", 
       "circSys"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sides", "=", 
       RowBox[{"triLengths", "@", "orbit"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mit", "=", 
       RowBox[{"getMittenTrilin", "[", 
        RowBox[{"orbit", ",", 
         RowBox[{"RotateLeft", "@", "sides"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cos123", "=", 
       RowBox[{"getTriCosines", "[", "orbit", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rhoCos", "=", 
       RowBox[{
        RowBox[{"Total", "@", "cos123"}], "-", "1"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"r", "/", "R"}], "=", 
        RowBox[{"cosA", "+", "cosB", "+", "cosC", "-", "1"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<rhoCos: \>\"", " ", ",", "rhoCos", ",", "\"\<, r/R: \>\"", " ", 
          ",", 
          RowBox[{
           RowBox[{"getInradius", "[", "sides", "]"}], "/", 
           RowBox[{"getCircumradius", "[", "sides", "]"}]}]}], "]"}], ";"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"A", "=", 
       RowBox[{
        RowBox[{"rhoSols", "[", "rhoCos", "]"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"circSys", "=", 
       RowBox[{"circumSystem", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"orbit", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", "mit"}], ",", 
         RowBox[{
          RowBox[{"orbit", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "-", "mit"}], ",", "A"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"sols0", "=", 
       RowBox[{
        RowBox[{"NSolve", "[", 
         RowBox[{"circSys", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "b"}], "}"}]}], "]"}], "//", "Quiet"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sols", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"t", ",", "b"}], "}"}], "/.", "sols0"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"First", "[", "#", "]"}], "\[Element]", "Reals"}], "&&", 
            RowBox[{
             RowBox[{"Second", "[", "#", "]"}], "\[Element]", "Reals"}]}], 
           ")"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ts", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", "sols"}], ")"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"bs", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", "sols"}], ")"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"as", "=", 
       RowBox[{"A", "*", "bs"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "keep", " ", "only", " ", "those", " ", "sols", " ", "which", " ", 
        "pass", " ", "through", " ", "P3"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"P3ps", ",", "P3ok", ",", "errors"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"P3ps", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"rot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"orbit", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "-", "mit"}], ",", 
              RowBox[{"-", 
               RowBox[{"Sin", "@", "#"}]}], ",", 
              RowBox[{"Cos", "@", "#"}]}], "]"}], "&"}], "/@", "ts"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"errors", "=", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ellError", "[", 
              RowBox[{"#1", ",", "#2", ",", "#3"}], "]"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"as", ",", "bs", ",", "P3ps"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<errors: \>\"", ",", "errors"}], "]"}], ";"}], "*)"}],
          "\[IndentingNewLine]", 
         RowBox[{"P3ok", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Abs", "[", "#", "]"}], "<", 
              RowBox[{"10", "^", 
               RowBox[{"-", "6"}]}]}], ")"}], "&"}], "/@", "errors"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"sols", "=", 
          RowBox[{"Pick", "[", 
           RowBox[{"sols", ",", "P3ok"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ts", "=", 
          RowBox[{"Pick", "[", 
           RowBox[{"ts", ",", "P3ok"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"as", "=", 
          RowBox[{"Pick", "[", 
           RowBox[{"as", ",", "P3ok"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"bs", "=", 
          RowBox[{"Pick", "[", 
           RowBox[{"bs", ",", "P3ok"}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<rhoCos\>\"", "\[Rule]", "rhoCos"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<A\>\"", "\[Rule]", "A"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<mit\>\"", "\[Rule]", "mit"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<sols\>\"", "\[Rule]", "sols"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<ts\>\"", "\[Rule]", "ts"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<as\>\"", "\[Rule]", 
         RowBox[{"A", "*", "bs"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<bs\>\"", "\[Rule]", "bs"}]}], "\[IndentingNewLine]", 
       "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7667455346865125`*^9, 3.7667456258132553`*^9}, {
   3.766745656582189*^9, 3.7667457989164667`*^9}, {3.7667458473421497`*^9, 
   3.766745854908949*^9}, {3.7667458948784447`*^9, 3.76674594465322*^9}, {
   3.766746145662121*^9, 3.766746186038004*^9}, {3.766746399101822*^9, 
   3.766746505437299*^9}, {3.766746665174624*^9, 3.7667467162723045`*^9}, {
   3.7667468267979627`*^9, 3.7667471249923735`*^9}, {3.7667471649588404`*^9, 
   3.766747170919622*^9}, {3.766747292513753*^9, 3.7667472951596546`*^9}, {
   3.7667474173375874`*^9, 3.766747442064994*^9}, {3.766747508745639*^9, 
   3.766747560395072*^9}, {3.766747597951535*^9, 3.7667476036874595`*^9}, {
   3.7667477210894814`*^9, 3.7667477222404027`*^9}, {3.7667480028958516`*^9, 
   3.766748080871431*^9}, {3.7667482911559043`*^9, 3.7667483065866203`*^9}, {
   3.7667483437991567`*^9, 3.7667484042825613`*^9}, {3.7667484611795225`*^9, 
   3.7667484615704775`*^9}, {3.766748536472743*^9, 3.766748565834244*^9}, {
   3.766748659165367*^9, 3.766748732993973*^9}, {3.76674921266442*^9, 
   3.766749231624728*^9}, {3.7667493678968506`*^9, 3.7667493854645395`*^9}, {
   3.766749472306847*^9, 3.7667494752898426`*^9}, {3.7667496453684072`*^9, 
   3.766749705554409*^9}, {3.7667497945868645`*^9, 3.7667498697624006`*^9}, {
   3.766749907583553*^9, 3.766749909621078*^9}, {3.766750109131095*^9, 
   3.766750160914646*^9}, {3.7667502244550085`*^9, 3.7667502264875746`*^9}, {
   3.7667502672336073`*^9, 3.7667503010358143`*^9}, {3.7667503610720544`*^9, 
   3.76675037812961*^9}, {3.7667504562846527`*^9, 3.7667504737855806`*^9}, {
   3.766750532004383*^9, 3.766750550834934*^9}, {3.7667505920008764`*^9, 
   3.7667506682964096`*^9}, {3.766754336660782*^9, 3.7667543693379955`*^9}, {
   3.766754433610628*^9, 3.7667544559460764`*^9}, {3.7667545194914865`*^9, 
   3.766754545867177*^9}, {3.766754794922675*^9, 3.766754811107684*^9}, {
   3.7667548642989984`*^9, 3.7667548655624566`*^9}, {3.766755062742217*^9, 
   3.766755185483343*^9}, {3.7667552563649073`*^9, 3.766755618619026*^9}, {
   3.7667556504132385`*^9, 3.7667557056776896`*^9}, {3.767891001054173*^9, 
   3.7678910477053933`*^9}, {3.7678911213035374`*^9, 
   3.7678911249108877`*^9}, {3.7678912246491146`*^9, 3.767891232537016*^9}, {
   3.767891273007767*^9, 3.767891301272167*^9}, {3.767891356854499*^9, 
   3.7678913604139776`*^9}, 3.7678915408882837`*^9, 3.7678915970732102`*^9, {
   3.7678919465200973`*^9, 3.7678920303109818`*^9}, {3.7678920977246637`*^9, 
   3.7678921197796717`*^9}, {3.7678921531145105`*^9, 
   3.7678921558551807`*^9}, {3.767892245028894*^9, 3.7678922476798115`*^9}, {
   3.767892285695123*^9, 3.76789229230245*^9}, {3.7678925480304427`*^9, 
   3.7678925869204216`*^9}, {3.7678926238855486`*^9, 
   3.7678926340543504`*^9}, {3.767901998828938*^9, 3.767902043306007*^9}, {
   3.7679023541575265`*^9, 3.7679023650144863`*^9}, {3.767902451042384*^9, 
   3.7679025003594737`*^9}, {3.7679026205499945`*^9, 3.767902635792226*^9}, {
   3.76790303309402*^9, 3.7679030495808935`*^9}, {3.767903094746089*^9, 
   3.7679031728593445`*^9}, {3.767903261520214*^9, 3.767903317604225*^9}, {
   3.767903636101297*^9, 3.7679037028357997`*^9}, {3.7679037661087184`*^9, 
   3.7679037669724073`*^9}, {3.767903812109903*^9, 3.767903865052438*^9}, {
   3.767903912188362*^9, 3.7679039322028284`*^9}, {3.767904095685128*^9, 
   3.76790409576292*^9}, {3.7679041637965956`*^9, 3.767904221670797*^9}, {
   3.7679043762403636`*^9, 3.767904428571391*^9}, {3.7679045171634583`*^9, 
   3.7679045191481247`*^9}, {3.767904606379178*^9, 3.767904625467122*^9}, {
   3.767904689733227*^9, 3.767904698460911*^9}, {3.7679047658132524`*^9, 
   3.7679048068504877`*^9}, {3.7679048574923515`*^9, 
   3.7679051124654074`*^9}, {3.7679051429229155`*^9, 3.767905147338106*^9}, {
   3.767905826347146*^9, 3.767905925151869*^9}, 3.770386977228841*^9},
 ExpressionUUID -> "4c69287f-dc3f-4a36-ae73-ad4a63f2571f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tbSols", "=", 
  RowBox[{"solveCircum", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{".5", ",", 
       RowBox[{
        RowBox[{"Sqrt", "[", "3", "]"}], "/", "1.25"}]}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.76674731014861*^9, 3.766747435956321*^9}, {
  3.766748057838237*^9, 3.766748061117499*^9}, {3.766748146028956*^9, 
  3.7667481462782583`*^9}, {3.7667481789328833`*^9, 3.766748179086445*^9}, {
  3.766748465933159*^9, 3.766748511693808*^9}, {3.7667493280689774`*^9, 
  3.7667494098703227`*^9}, {3.766750383805463*^9, 3.7667503854151535`*^9}, {
  3.7667504794534264`*^9, 3.7667504796787963`*^9}, {3.766750577237319*^9, 
  3.766750577550482*^9}, {3.766754872126876*^9, 3.7667548817750797`*^9}, {
  3.767891189595872*^9, 3.767891203155604*^9}, {3.767902798423229*^9, 
  3.7679028085920296`*^9}, {3.7679033396243243`*^9, 3.7679033560234537`*^9}, {
  3.7679046302622967`*^9, 3.767904651527418*^9}, {3.7679047086690984`*^9, 
  3.7679047538542395`*^9}},
 ExpressionUUID -> "0a70c93c-7763-4967-9e7c-ce4b669d627f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"rhoCos\"\>", "\[Rule]", "0.4484294867583518`"}], ",", 
   RowBox[{"\<\"A\"\>", "\[Rule]", "1.2529133998355766`"}], ",", 
   RowBox[{"\<\"mit\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.5`", ",", "0.5512078501294805`"}], "}"}]}], ",", 
   RowBox[{"\<\"sols\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5707963267948966`"}], ",", 
        RowBox[{"-", "0.6659939913126688`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.5707963267948966`", ",", 
        RowBox[{"-", "0.6659939913126688`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5707963267948966`"}], ",", "0.6659939913126688`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.5707963267948966`", ",", "0.6659939913126688`"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"ts\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.5707963267948966`"}], ",", "1.5707963267948966`", ",", 
      RowBox[{"-", "1.5707963267948966`"}], ",", "1.5707963267948966`"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"as\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.8344327959256214`"}], ",", 
      RowBox[{"-", "0.8344327959256214`"}], ",", "0.8344327959256214`", ",", 
      "0.8344327959256214`"}], "}"}]}], ",", 
   RowBox[{"\<\"bs\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.6659939913126688`"}], ",", 
      RowBox[{"-", "0.6659939913126688`"}], ",", "0.6659939913126688`", ",", 
      "0.6659939913126688`"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7667493582467804`*^9, 3.7667494104413066`*^9}, 
   3.7667497065995893`*^9, 3.766750162826507*^9, 3.766750302029157*^9, {
   3.766750339735119*^9, 3.766750385880913*^9}, {3.7667504327676306`*^9, 
   3.7667504801026726`*^9}, {3.76675053473307*^9, 3.766750601398748*^9}, 
   3.7667506362824*^9, 3.766750669727583*^9, 3.766750962113332*^9, 
   3.766751027268391*^9, 3.7667520745602083`*^9, 3.7667522807599115`*^9, 
   3.7667523375221806`*^9, 3.7667525887038574`*^9, 3.7667543706035843`*^9, 
   3.7667544577153187`*^9, {3.766754521074491*^9, 3.766754551539013*^9}, {
   3.766754798583859*^9, 3.7667548122232504`*^9}, {3.7667548694351006`*^9, 
   3.766754882258815*^9}, {3.7667553429907303`*^9, 3.76675536632937*^9}, 
   3.766755560108479*^9, 3.7667556267794275`*^9, 3.766755673475628*^9, 
   3.7667557084981823`*^9, 3.7678908179948096`*^9, 3.767890981509478*^9, {
   3.767891014682749*^9, 3.76789104018052*^9}, 3.767891132887562*^9, {
   3.7678911902710667`*^9, 3.767891203676211*^9}, {3.767891282851438*^9, 
   3.767891302871888*^9}, 3.7678913633401527`*^9, 3.767891543176158*^9, 
   3.767891697234305*^9, 3.7678921278879843`*^9, 3.767892157888768*^9, 
   3.767892234747395*^9, {3.7678922721972246`*^9, 3.7678922869507637`*^9}, 
   3.767892635470562*^9, {3.767902029577693*^9, 3.767902044213546*^9}, 
   3.76790233351075*^9, 3.7679023695533457`*^9, 3.7679024572458415`*^9, 
   3.7679026744089394`*^9, {3.767902800599408*^9, 3.7679028091086493`*^9}, {
   3.767903100293251*^9, 3.7679031740072746`*^9}, 3.7679033215695887`*^9, 
   3.767903356510131*^9, 3.7679037039617867`*^9, 3.7679037696604443`*^9, 
   3.7679038669344044`*^9, {3.7679039153558893`*^9, 3.767903933401622*^9}, 
   3.7679041004254484`*^9, 3.7679041808739204`*^9, 3.7679042275730104`*^9, 
   3.7679044018039865`*^9, 3.7679044475506268`*^9, {3.7679046435946417`*^9, 
   3.767904651815647*^9}, {3.767904699897561*^9, 3.767904771821183*^9}, {
   3.767904904002948*^9, 3.767904930112112*^9}, {3.76790510252699*^9, 
   3.7679051143733044`*^9}, 3.767905148835101*^9, 3.7679058719950533`*^9, 
   3.768120743805296*^9, 3.7681700213795214`*^9, 3.770422494715761*^9},
 ExpressionUUID -> "0a34b9b1-c30e-405c-941c-5857fb1e1ac5"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "transfGr"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"transfGr", "[", 
    RowBox[{"gr_", ",", "scale_", ",", "theta_", ",", "trans_"}], "]"}], ":=", 
   RowBox[{"Graphics", "@", 
    RowBox[{"Translate", "[", 
     RowBox[{
      RowBox[{"Rotate", "[", 
       RowBox[{
        RowBox[{"Scale", "[", 
         RowBox[{
          RowBox[{"gr", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "scale"}], "]"}], ",", 
        "theta"}], "]"}], ",", "trans"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.766753735678844*^9, 3.766753818840638*^9}, {
  3.7667539006942286`*^9, 3.766753912926526*^9}, {3.766754303247262*^9, 
  3.766754328102508*^9}},
 ExpressionUUID -> "78ab7dff-0012-44ba-8086-ab4d5fdba5a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "drawSolCB"}], ";", 
  RowBox[{
   RowBox[{"drawSolCB", "[", 
    RowBox[{"tri_", ",", 
     RowBox[{"showCtrs_:", "False"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cbs", ",", "t", ",", "a", ",", "b", ",", "x0", ",", "y0", ",", "ell", 
       ",", "rotEll", ",", "gr", ",", "inc", ",", "cir", ",", "mit", ",", 
       "axes", ",", "rotAxes"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cbs", "=", 
       RowBox[{"solveCircum", "[", "tri", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x0", ",", "y0"}], "}"}], "=", 
       RowBox[{"\"\<mit\>\"", "/.", "cbs"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a", "=", 
       RowBox[{"First", "[", 
        RowBox[{"\"\<as\>\"", "/.", "cbs"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"b", "=", 
       RowBox[{"First", "[", 
        RowBox[{"\"\<bs\>\"", "/.", "cbs"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"t", "=", 
       RowBox[{"First", "[", 
        RowBox[{"\"\<ts\>\"", "/.", "cbs"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ell", "=", 
       RowBox[{"plotEll", "[", "1", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mit", "=", 
       RowBox[{"\"\<mit\>\"", "/.", "cbs"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rotEll", "=", 
       RowBox[{"transfGr", "[", 
        RowBox[{"ell", ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b"}], "}"}], ",", "t", ",", "mit"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"rotEll", "=", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"transfGr", "[", 
             RowBox[{"ell", ",", 
              RowBox[{"{", 
               RowBox[{"#1", ",", "#2"}], "}"}], ",", "#3", ",", "mit"}], 
             "]"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<as\>\"", "/.", "cbs"}], ",", 
             RowBox[{"\"\<bs\>\"", "/.", "cbs"}], ",", 
             RowBox[{"\"\<ts\>\"", "/.", "cbs"}]}], "}"}]}], "]"}]}], ";"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"axes", "=", 
       RowBox[{"Graphics", "@", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"rotAxes", "=", 
       RowBox[{"transfGr", "[", 
        RowBox[{"axes", ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b"}], "}"}], ",", "t", ",", "mit"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"inc", "=", 
       RowBox[{"\"\<inc\>\"", "/.", "cbs"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cir", "=", 
       RowBox[{"\"\<cir\>\"", "/.", "cbs"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"PointSize", "@", "Large"}], ",", 
          RowBox[{"FaceForm", "@", "None"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Red", ",", 
            RowBox[{"Point", "@", "mit"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<M\>\"", ",", "16"}], "]"}], ",", "mit", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.5"}], ",", 
                RowBox[{"-", "1.5"}]}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"Point", "@", "tri"}], ",", 
            RowBox[{"EdgeForm", "@", "Black"}], ",", 
            RowBox[{"Polygon", "@", "tri"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"showCtrs", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Darker", "@", "Green"}], ",", "Dashed", ",", 
                RowBox[{"Circle", "[", 
                 RowBox[{"inc", ",", 
                  RowBox[{"\"\<inradius\>\"", "/.", "cbs"}]}], "]"}], ",", 
                RowBox[{"Point", "@", "inc"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", "Dashed", ",", 
                RowBox[{"Circle", "[", 
                 RowBox[{"cir", ",", 
                  RowBox[{"\"\<circumradius\>\"", "/.", "cbs"}]}], "]"}], ",", 
                RowBox[{"Point", "@", "cir"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"rotEll", ",", "rotAxes", ",", "gr"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Axes", "\[Rule]", "True"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7667474768606243`*^9, 3.766747500068836*^9}, {
   3.7667476897651234`*^9, 3.766747802300845*^9}, {3.766747842725418*^9, 
   3.766747950190762*^9}, {3.7667480901416187`*^9, 3.766748120813341*^9}, {
   3.7667485274058027`*^9, 3.766748529949186*^9}, {3.766748590886292*^9, 
   3.766748654023144*^9}, {3.7667487425264854`*^9, 3.766748832584198*^9}, {
   3.766748864766958*^9, 3.7667489137826905`*^9}, {3.7667489781061573`*^9, 
   3.766749104928251*^9}, {3.766749725736453*^9, 3.7667497527128487`*^9}, {
   3.7667498801695027`*^9, 3.766749961711875*^9}, {3.7667501980093527`*^9, 
   3.766750234967901*^9}, {3.766750687545917*^9, 3.7667507215687237`*^9}, 
   3.7667510439617915`*^9, {3.7667523669943666`*^9, 3.7667523984168863`*^9}, {
   3.76675243346572*^9, 3.766752450376892*^9}, {3.7667530844891553`*^9, 
   3.766753087041304*^9}, {3.7667531288735948`*^9, 3.766753321729371*^9}, {
   3.766753401337322*^9, 3.766753440242797*^9}, {3.7667534705048885`*^9, 
   3.76675372469022*^9}, {3.766753821114586*^9, 3.766754104537312*^9}, {
   3.7667541414810553`*^9, 3.7667541815771985`*^9}, {3.7667542327144737`*^9, 
   3.7667542958580465`*^9}, {3.7667549034906693`*^9, 
   3.7667549283635125`*^9}, {3.766754960665133*^9, 3.7667549651452303`*^9}, {
   3.766755721155342*^9, 3.7667557816600404`*^9}, {3.766755950539875*^9, 
   3.7667559517626295`*^9}, {3.7667571869689417`*^9, 3.766757197785644*^9}, {
   3.767890924950731*^9, 3.767890959231039*^9}, {3.7678921918149977`*^9, 
   3.7678921927824087`*^9}},
 ExpressionUUID -> "8f197199-0505-43f5-8c4c-bed3d28f98a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"drawSolCB", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{".1", ",", ".2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.1", ",", ".3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.5", ",", "2.3"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7678908989542646`*^9, 3.767890917097736*^9}},
 ExpressionUUID -> "50a83b0e-4797-4ae4-9f99-364ca5bc95a9"],

Cell[BoxData[
 GraphicsBox[{
   GeometricTransformationBox[
    GeometricTransformationBox[GeometricTransformationBox[{{}, {}, 
       {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], FaceForm[Opacity[
        0.3]], LineBox[CompressedData["
1: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
+j/+kmeR
         "]]}}, {{{-1.2886117985169452`, 0.}, {0., -0.7050126696427241}}, 
       Center}], {{{-0.504383853218822, 
      0.8634795473038918}, {-0.8634795473038918, -0.504383853218822}}, 
      Center}], {0.897298257378761, 1.1638712464565009`}], 
   GeometricTransformationBox[
    GeometricTransformationBox[GeometricTransformationBox[
      {RGBColor[1, 0, 0], Dashing[{Small, Small}], LineBox[{{-1, 0}, {1, 0}}],
        LineBox[{{0, -1}, {0, 1}}]}, {{{-1.2886117985169452`, 0.}, {
       0., -0.7050126696427241}}, Center}], {{{-0.504383853218822, 
      0.8634795473038918}, {-0.8634795473038918, -0.504383853218822}}, 
      Center}], {0.897298257378761, 1.1638712464565009`}], 
   {PointSize[Large], FaceForm[None], 
    {RGBColor[1, 0, 0], PointBox[{0.897298257378761, 1.1638712464565009`}], 
     InsetBox[
      StyleBox["\<\"M\"\>",
       StripOnInput->False,
       FontSize->
        16], {0.897298257378761, 1.1638712464565009`}, {-1.5, -1.5}]}, 
    {GrayLevel[0], PointBox[{{0.1, 0.2}, {1.1, 0.3}, {1.5, 2.3}}], 
     {EdgeForm[GrayLevel[0]], 
      PolygonBox[{{0.1, 0.2}, {1.1, 0.3}, {1.5, 2.3}}]}}, {}}},
  AspectRatio->Automatic,
  Axes->True,
  Frame->True,
  PlotRange->{{-3, 3}, {-3, 3}}]], "Output",
 CellChangeTimes->{{3.7678909177001233`*^9, 3.767890961127966*^9}, 
   3.767892182187746*^9, 3.767892226061626*^9, 3.7679031892116117`*^9, 
   3.7679051601329117`*^9, 3.7679059316784306`*^9, 3.768120743879098*^9, 
   3.768170021456315*^9, 3.7704224975311074`*^9},
 ExpressionUUID -> "da4e1920-ce0f-4db6-bdca-b42ce9de3ec5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"drawSolCB", "[", 
    RowBox[{"{", 
     RowBox[{"P1", ",", "P2", ",", "P3"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"P1", ",", 
       RowBox[{"{", 
        RowBox[{"2.", ",", "0"}], "}"}]}], "}"}], ",", "Locator"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"P2", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "}"}], ",", "Locator"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"P3", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", "Locator"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7667478036671934`*^9, 3.7667478363016167`*^9}, {
   3.766749969470168*^9, 3.766749970499446*^9}, {3.7667500010929985`*^9, 
   3.7667500604851274`*^9}, {3.766753345287127*^9, 3.766753364061801*^9}, {
   3.766755957495304*^9, 3.766755957750705*^9}, {3.7667572026386957`*^9, 
   3.7667572157516994`*^9}, 3.7679028416635723`*^9},
 ExpressionUUID -> "a93374a9-0e93-48ec-92fd-7295e38f3260"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`P1$$ = {2., 0}, $CellContext`P2$$ = {-1, 
    2}, $CellContext`P3$$ = {1, -2}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`P1$$], {2., 0}}, Automatic}, {{
       Hold[$CellContext`P2$$], {-1, 2}}, Automatic}, {{
       Hold[$CellContext`P3$$], {1, -2}}, Automatic}}, Typeset`size$$ = {
    291., {3., 9.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`P1$$ = {2., 0}, $CellContext`P2$$ = {-1, 
         2}, $CellContext`P3$$ = {1, -2}}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`drawSolCB[{$CellContext`P1$$, $CellContext`P2$$, \
$CellContext`P3$$}], 
      "Specifications" :> {{{$CellContext`P1$$, {2., 0}}, Automatic, 
         ControlType -> Locator}, {{$CellContext`P2$$, {-1, 2}}, Automatic, 
         ControlType -> Locator}, {{$CellContext`P3$$, {1, -2}}, Automatic, 
         ControlType -> Locator}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{348., {40., 46.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7667478306586795`*^9, 3.766747858476331*^9}, {
   3.7667479027071557`*^9, 3.7667479511781282`*^9}, 3.766748797112137*^9, 
   3.7667488340408716`*^9, {3.7667488702172804`*^9, 3.766748882702512*^9}, 
   3.766748915578868*^9, 3.766749106144997*^9, 3.7667497538976526`*^9, 
   3.766749914885615*^9, 3.7667499628079805`*^9, {3.766750033152506*^9, 
   3.7667500611333933`*^9}, 3.7667501702241354`*^9, 3.766750239004114*^9, {
   3.766750678090207*^9, 3.766750689461012*^9}, 3.766752080165251*^9, 
   3.766752282957065*^9, 3.766752400408591*^9, {3.7667524366106644`*^9, 
   3.766752451631505*^9}, 3.766752591577174*^9, 3.7667530882121725`*^9, 
   3.766753164712836*^9, 3.766753364634424*^9, 3.7667534415104113`*^9, {
   3.7667534968142176`*^9, 3.7667535206355286`*^9}, 3.7667536767025414`*^9, {
   3.7667540314333954`*^9, 3.766754112664667*^9}, 3.7667542708189926`*^9, 
   3.766754376914219*^9, 3.76675455618761*^9, 3.7667549141276455`*^9, 
   3.766755728331128*^9, 3.7667557830353627`*^9, 3.7667559581117387`*^9, {
   3.766757191661046*^9, 3.7667572165585203`*^9}, 3.767890818064623*^9, {
   3.7678908515899515`*^9, 3.7678908704614744`*^9}, 3.767902844999649*^9, 
   3.767905163748213*^9, 3.767905935258854*^9, 3.768120743916995*^9, 
   3.768170021474267*^9, 3.7704224988215914`*^9},
 ExpressionUUID -> "30934436-fe38-4148-b11f-b295e0422fe6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Circumbilhar Ronaldo", "Subsubsection",
 CellChangeTimes->{{3.7672901048759303`*^9, 3.76729011064849*^9}},
 ExpressionUUID -> "363bd9ea-f7b3-443b-96d3-7dd8a4c631e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"circRon", "[", 
    RowBox[{"a_", ",", "b_", ",", "x_", ",", "y_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"b", "^", "2"}]}], "*", 
     RowBox[{"(", 
      RowBox[{"a", "+", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"a", "^", "2"}], "+", 
         RowBox[{"b", "^", "2"}]}], "]"}]}], ")"}], 
     RowBox[{"x", "^", "2"}]}], "+", 
    RowBox[{"b", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", "^", "2"}], "+", 
       RowBox[{"a", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], "^", "2"}], "+", 
          RowBox[{"b", "^", "2"}]}], "]"}]}], "+", 
       RowBox[{"a", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"a", "^", "2"}], "+", 
          RowBox[{"b", "^", "2"}]}], "]"}]}], "-", 
       RowBox[{"b", "^", "2"}], "+", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], "^", "2"}], "+", 
          RowBox[{"b", "^", "2"}]}], "]"}], 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"a", "^", "2"}], "+", 
          RowBox[{"b", "^", "2"}]}], "]"}]}], "-", "a", "-", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"a", "^", "2"}], "+", 
         RowBox[{"b", "^", "2"}]}], "]"}]}], ")"}], "*", "x", "*", "y"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"a", "^", "2"}]}], "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], "^", "2"}], "+", 
          RowBox[{"b", "^", "2"}]}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"b", "^", "2"}], "*", "a"}], "-", 
       RowBox[{"a", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], "^", "2"}], "+", 
          RowBox[{"b", "^", "2"}]}], "]"}], "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"a", "^", "2"}], "+", 
          RowBox[{"b", "^", "2"}]}], "]"}]}], "-", 
       RowBox[{"b", "^", "2"}]}], ")"}], "*", 
     RowBox[{"y", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"b", "^", "2"}], 
     RowBox[{"(", 
      RowBox[{"a", "+", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"a", "^", "2"}], "+", 
         RowBox[{"b", "^", "2"}]}], "]"}]}], ")"}], "*", "x"}], "+", 
    RowBox[{
     RowBox[{"b", "^", "3"}], "*", "y"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.767290115492546*^9, 3.7672902179194884`*^9}, {
  3.76729024843432*^9, 3.7672903326184716`*^9}},
 ExpressionUUID -> "493f52d4-1a98-4331-a1d8-2ee27b7e1a89"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"circRon", "[", 
    RowBox[{"a", ",", "b", ",", "x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7672903336826277`*^9, 3.7672903514256372`*^9}},
 ExpressionUUID -> "fb970bf3-9cfa-4d6c-900f-5d4cb84dcf22"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["b", "2"]}], " ", 
   RowBox[{"(", 
    RowBox[{"a", "+", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["a", "2"], "+", 
       SuperscriptBox["b", "2"]}]]}], ")"}], " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["b", "3"], " ", "y"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["b", "2"]}], "+", 
     RowBox[{"a", " ", 
      SuperscriptBox["b", "2"]}], "-", 
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "a"}], ")"}], "2"], "+", 
        SuperscriptBox["b", "2"]}]]}], "-", 
     RowBox[{"a", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "a"}], ")"}], "2"], "+", 
        SuperscriptBox["b", "2"]}]], " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["a", "2"], "+", 
        SuperscriptBox["b", "2"]}]]}]}], ")"}], " ", 
   SuperscriptBox["y", "2"]}], "+", 
  RowBox[{"x", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["b", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"a", "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["b", "2"]}]]}], ")"}]}], "+", 
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "a"}], "+", 
        SuperscriptBox["a", "2"], "-", 
        SuperscriptBox["b", "2"], "+", 
        RowBox[{"a", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "a"}], ")"}], "2"], "+", 
           SuperscriptBox["b", "2"]}]]}], "-", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["b", "2"]}]], "+", 
        RowBox[{"a", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["b", "2"]}]]}], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "a"}], ")"}], "2"], "+", 
           SuperscriptBox["b", "2"]}]], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["b", "2"]}]]}]}], ")"}], " ", "y"}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.767290343815452*^9, 3.7672903517183757`*^9}, 
   3.768120744264039*^9, 3.768170021699664*^9},
 ExpressionUUID -> "bdb45c29-d57d-4a10-9f11-3999af85109a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]]
},
WindowSize->{1264, 661},
WindowMargins->{{-100, Automatic}, {Automatic, 177}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 377, 5, 70, "Section"],
Cell[960, 29, 875, 19, 72, "Input"],
Cell[1838, 50, 7261, 172, 552, "Input"],
Cell[9102, 224, 1152, 24, 72, "Input"],
Cell[10257, 250, 1379, 34, 72, "Input"],
Cell[11639, 286, 86578, 1731, 3872, "Input"],
Cell[98220, 2019, 316, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[98561, 2029, 189, 3, 31, "Input"],
Cell[98753, 2034, 933, 17, 31, "Output"]
}, Open  ]],
Cell[99701, 2054, 9487, 229, 612, "Input"],
Cell[109191, 2285, 22363, 429, 2132, "Input"],
Cell[131557, 2716, 524, 14, 31, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[132118, 2735, 322, 4, 56, "Section"],
Cell[132443, 2741, 54544, 1113, 2552, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[187024, 3859, 463, 6, 56, "Section"],
Cell[187490, 3867, 1105, 32, 112, "Input"],
Cell[CellGroupData[{
Cell[188620, 3903, 274, 6, 31, "Input"],
Cell[188897, 3911, 316, 5, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189250, 3921, 239, 4, 31, "Input"],
Cell[189492, 3927, 322, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189851, 3936, 251, 5, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[190127, 3945, 583, 15, 31, "Input"],
Cell[190713, 3962, 2083, 62, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192833, 4029, 390, 10, 31, "Input"],
Cell[193226, 4041, 1178, 36, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194441, 4082, 456, 13, 31, "Input"],
Cell[194900, 4097, 2350, 70, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197287, 4172, 186, 3, 31, "Input"],
Cell[197476, 4177, 365, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197878, 4187, 1076, 27, 52, "Input"],
Cell[198957, 4216, 40031, 725, 370, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239025, 4946, 325, 8, 31, "Input"],
Cell[239353, 4956, 320, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239710, 4965, 426, 12, 31, "Input"],
Cell[240139, 4979, 406, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240582, 4991, 292, 7, 31, "Input"],
Cell[240877, 5000, 342, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241256, 5011, 311, 6, 31, "Input"],
Cell[241570, 5019, 553, 10, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242160, 5034, 273, 6, 31, "Input"],
Cell[242436, 5042, 374, 6, 31, "Output"]
}, Open  ]],
Cell[242825, 5051, 368, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[243218, 5062, 1682, 42, 92, "Input"],
Cell[244903, 5106, 12311, 224, 278, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[257263, 5336, 158, 2, 49, "Subsection"],
Cell[257424, 5340, 5501, 136, 332, "Input"],
Cell[CellGroupData[{
Cell[262950, 5480, 370, 8, 31, "Input"],
Cell[263323, 5490, 20681, 350, 260, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284041, 5845, 93599, 1539, 216, "Input"],
Cell[377643, 7386, 93666, 1540, 216, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[471346, 8931, 4970, 125, 290, "Input"],
Cell[476319, 9058, 2328, 59, 42, "Output"]
}, Open  ]],
Cell[478662, 9120, 10277, 217, 865, "Input"],
Cell[CellGroupData[{
Cell[488964, 9341, 1210, 25, 38, "Input"],
Cell[490177, 9368, 3834, 72, 65, "Output"]
}, Open  ]],
Cell[494026, 9443, 790, 20, 65, "Input"],
Cell[494819, 9465, 7571, 174, 590, "Input"],
Cell[CellGroupData[{
Cell[502415, 9643, 408, 11, 31, "Input"],
Cell[502826, 9656, 19921, 333, 379, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[522784, 9994, 1271, 35, 112, "Input"],
Cell[524058, 10031, 3316, 57, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[527411, 10093, 171, 2, 39, "Subsubsection"],
Cell[527585, 10097, 2844, 87, 92, "Input"],
Cell[CellGroupData[{
Cell[530454, 10188, 341, 8, 31, "Input"],
Cell[530798, 10198, 2723, 92, 99, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
