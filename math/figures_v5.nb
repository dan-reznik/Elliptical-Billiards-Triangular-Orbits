(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3098362,      58242]
NotebookOptionsPosition[   3084651,      57831]
NotebookOutlinePosition[   3084995,      57846]
CellTagsIndexPosition[   3084952,      57843]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
*** Figures for Intelligencer and L\[CloseCurlyQuote]Enseignement Math\
\[EAcute]matique (EPS, PDF)\
\>", "Section",
 CellChangeTimes->{{3.774972053030554*^9, 3.7749720590903482`*^9}, {
  3.776790757813053*^9, 3.7767907586815004`*^9}, {3.786260991288394*^9, 
  3.7862610013730106`*^9}, {3.7862676782074633`*^9, 3.7862676797104406`*^9}, {
  3.7902789396649003`*^9, 3.7902789399951353`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"singleOrbitPlot", "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "=", "1.5"}], ",", "ons", ",", 
       RowBox[{"deg1", "=", "25"}], ",", "poly1", ",", "ell", ",", "gr", ",", 
       "grads1", ",", 
       RowBox[{"clr", "=", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick"}], "}"}]}], ",", 
       RowBox[{"incClr", "=", 
        RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}]}], ",", 
       RowBox[{"lgt", "=", ".2"}], ",", "inc", ",", 
       RowBox[{"fontSize", "=", "20"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ell", "=", 
       RowBox[{"plotEll", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ons", "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", 
         RowBox[{"toRad", "@", "deg1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"poly1", "=", 
       RowBox[{"ons", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"inc", "=", 
       RowBox[{"getIncenterTrilin", "[", 
        RowBox[{
         RowBox[{"First", "@", "ons"}], ",", 
         RowBox[{"Third", "@", "ons"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"grads1", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"ellGrad", "[", 
          RowBox[{"a", ",", 
           RowBox[{"Sequence", "@@", "#"}]}], "]"}], "&"}], "/@", "poly1"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{"clr", ",", 
          RowBox[{"FaceForm", "@", "None"}], ",", 
          RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", "Gray", ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "a"}], ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"a", ",", "0"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", "Black", ",", 
            RowBox[{"Point", "@", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", "clr"}], ",", 
            RowBox[{"Polygon", "@", "poly1"}], ",", 
            RowBox[{"Point", "@", "poly1"}], ",", 
            RowBox[{"ellLabelPoints", "[", 
             RowBox[{"a", ",", "poly1", ",", "\"\<P\>\"", ",", 
              RowBox[{"{", "fontSize", "}"}], ",", "lgt"}], "]"}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"incClr", ",", 
            RowBox[{"Point", "@", "inc"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(X\), \(1\)]\)\>\"", ",", 
                "fontSize"}], "]"}], ",", "inc", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "1.5"}]}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", "incClr", ",", "Thick", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Line", "@", 
               RowBox[{"{", 
                RowBox[{"#", ",", "inc"}], "}"}]}], "&"}], "/@", "poly1"}]}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Black", ",", "Thick", ",", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Arrow", "@", 
                RowBox[{"{", 
                 RowBox[{"#1", ",", 
                  RowBox[{"#1", "+", 
                   RowBox[{"2", "lgt", "*", 
                    RowBox[{"norm", "@", "#2"}]}]}]}], "}"}]}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{"poly1", ",", "grads1"}], "}"}]}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"{", 
        RowBox[{"ell", ",", "gr"}], "}"}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.774971336734252*^9, 3.774971337965957*^9}, {
  3.774971505243142*^9, 3.774971730829714*^9}, {3.774971768733331*^9, 
  3.7749719121730194`*^9}, {3.774971972701637*^9, 3.7749720063896413`*^9}, {
  3.774972066893476*^9, 3.774972228367654*^9}, {3.7749725446214056`*^9, 
  3.774972547189536*^9}, {3.7749725845743575`*^9, 3.7749726607087307`*^9}, {
  3.7749735646704445`*^9, 3.7749736071420555`*^9}, {3.7749737165274887`*^9, 
  3.774973718255866*^9}, {3.7749780773699665`*^9, 3.7749782438009934`*^9}, {
  3.7749782814094*^9, 3.7749782842089124`*^9}, {3.7802572198365564`*^9, 
  3.7802572439640884`*^9}, {3.780257275263175*^9, 3.7802573568693085`*^9}, {
  3.7802574509017196`*^9, 3.7802574959883423`*^9}, {3.787588927081934*^9, 
  3.7875889415682583`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
    {RGBColor[0, 0, 1], Thickness[Large]}, 
    {PointSize[Large], FaceForm[None], 
     {GrayLevel[0.5], Dashing[{Small, Small}], LineBox[{{-1.5, 0}, {1.5, 0}}],
       LineBox[{{0, -1}, {0, 1}}], 
      {GrayLevel[0], PointBox[{0, 0}]}}, 
     {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
      PolygonBox[{{1.3594616805549748`, 0.4226182617406997}, {
       0.7111069087873177, -0.8804864726766917}, {-1.4920187064290165`, 
       0.10302142099989509`}}], 
      PointBox[{{1.3594616805549748`, 0.4226182617406997}, {
       0.7111069087873177, -0.8804864726766917}, {-1.4920187064290165`, 
       0.10302142099989509`}}], {InsetBox[
        StyleBox[
         SubscriptBox["\<\"P\"\>", "1"],
         StripOnInput->False,
         FontSize->20], {1.523349516357965, 0.5372514911107746}, {0, 0}], 
       InsetBox[
        StyleBox[
         SubscriptBox["\<\"P\"\>", "2"],
         StripOnInput->False,
         FontSize->20], {0.7786752096465699, -1.06872707594547}, {0, 0}], 
       InsetBox[
        StyleBox[
         SubscriptBox["\<\"P\"\>", "3"],
         StripOnInput->False,
         FontSize->20], {-1.689647903163859, 0.13372485074220497`}, {0, 0}]}}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], 
      PointBox[{0.4673450887520413, -0.2013829363465682}], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->20], {0.4673450887520413, -0.2013829363465682}, {0, -1.5}]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
      Dashing[{Small, Small}], 
      LineBox[{{1.3594616805549748`, 0.4226182617406997}, {
       0.4673450887520413, -0.2013829363465682}}], 
      LineBox[{{0.7111069087873177, -0.8804864726766917}, {
       0.4673450887520413, -0.2013829363465682}}], 
      LineBox[{{-1.4920187064290165`, 0.10302142099989509`}, {
       0.4673450887520413, -0.2013829363465682}}]}, 
     {GrayLevel[0], Thickness[Large], 
      ArrowBox[{{1.3594616805549748`, 0.4226182617406997}, {1.031686008948995,
        0.19335180300055}}], 
      ArrowBox[{{0.7111069087873177, -0.8804864726766917}, {
       0.5759703070688136, -0.504005266139135}}], 
      ArrowBox[{{-1.4920187064290165`, 
       0.10302142099989509`}, {-1.0967603129593317`, 
       0.04161456151527529}}]}}}}]], "Output",
 CellChangeTimes->{{3.7749716144475503`*^9, 3.7749716730989122`*^9}, {
   3.774971705676774*^9, 3.7749717312126904`*^9}, {3.7749718689346523`*^9, 
   3.7749719128402343`*^9}, {3.7749719891188293`*^9, 3.774972006729724*^9}, {
   3.7749720718931036`*^9, 3.7749720770882206`*^9}, {3.774972129449515*^9, 
   3.774972228764606*^9}, 3.7749725475994406`*^9, {3.7749726234658165`*^9, 
   3.774972660995962*^9}, {3.7749735869132557`*^9, 3.774973607470178*^9}, 
   3.774973718850277*^9, 3.7749781082139907`*^9, {3.77497819313947*^9, 
   3.7749782453618183`*^9}, 3.775066146164836*^9, 3.7750672761417036`*^9, 
   3.7752171194031105`*^9, 3.775897861330925*^9, 3.7760669037026834`*^9, 
   3.7802572661255903`*^9, {3.780257296849511*^9, 3.7802573572662735`*^9}, {
   3.780257451536994*^9, 3.7802574962576513`*^9}, {3.7862609855694523`*^9, 
   3.786261014478921*^9}, 3.787479351835826*^9, 3.7875876628494663`*^9, {
   3.787588931882071*^9, 3.7875889419113073`*^9}, 3.788075593608634*^9, 
   3.7881668192971635`*^9, 3.789722122699646*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"export3", "[", 
  RowBox[{"\"\<0000_single_orbit\>\"", ",", "singleOrbitPlot"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.786269950074583*^9, 3.7862699653350706`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "drThreeOrbits"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "drThreeOrbits"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"drX1locus", "\[Rule]", "False"}], ",", 
     RowBox[{"drX1s", "\[Rule]", "True"}], ",", 
     RowBox[{"drNorms", "\[Rule]", "False"}], ",", 
     RowBox[{"normLgt", "\[Rule]", ".33"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drThreeOrbits", "[", 
    RowBox[{"a_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ons", ",", 
       RowBox[{"deg0", "=", "20"}], ",", 
       RowBox[{"degStep", "=", "10"}], ",", 
       RowBox[{"degRange", "=", "3"}], ",", "degs", ",", "poly1", ",", 
       "caustic", ",", "ell", ",", "gr", ",", "grads1", ",", 
       RowBox[{"clr", "=", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"Thickness", "@", ".0075"}]}], "}"}]}], ",", 
       RowBox[{"incClr", "=", 
        RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}]}], ",", 
       RowBox[{"lgt", "=", ".33"}], ",", "incs", ",", 
       RowBox[{"fontSize", "=", "20"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"degs", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"deg0", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "-", "1"}], ")"}], "*", "degStep"}]}], ")"}], "&"}],
         "/@", 
        RowBox[{"Range", "@", "degRange"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ell", "=", 
       RowBox[{"plotEll", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ons", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"orbitNormals", "[", 
          RowBox[{"a", ",", 
           RowBox[{"toRad", "@", "#"}]}], "]"}], "&"}], "/@", "degs"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"poly1", "=", 
       RowBox[{"ons", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"incs", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"getIncenterTrilin", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"First", "/@", "ons"}], ",", 
           RowBox[{"Third", "/@", "ons"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"caustic", "=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"o", ",", "n", ",", "s"}], "}"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"o", ",", "n", ",", "s"}], "}"}], "=", 
             RowBox[{"orbitNormals", "[", 
              RowBox[{"a", ",", 
               RowBox[{"toRad", "@", "i"}]}], "]"}]}], ";", 
            RowBox[{"getFeuerbachTrilin", "[", 
             RowBox[{"o", ",", "s"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "359"}], "}"}]}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"grads1", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"ellGrad", "[", 
          RowBox[{"a", ",", 
           RowBox[{"Sequence", "@@", "#"}]}], "]"}], "&"}], "/@", "poly1"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{"clr", ",", 
          RowBox[{"FaceForm", "@", "None"}], ",", 
          RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", "Gray", ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "a"}], ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"a", ",", "0"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", "Black", ",", 
            RowBox[{"Point", "@", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", "clr"}], ",", 
            RowBox[{"Polygon", "@", "poly1"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"First", "/@", 
              RowBox[{"First", "/@", "ons"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Brown", ",", "Thick", ",", 
            RowBox[{"Line", "@", "caustic"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ellLabelTxt", "[", 
               RowBox[{"a", ",", "#1", ",", 
                RowBox[{"Style", "[", 
                 RowBox[{"#2", ",", "fontSize"}], "]"}], ",", ".16"}], "]"}], 
              "&"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"First", "/@", 
                RowBox[{"First", "/@", "ons"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<P\>\"", ",", "\"\<P'\>\"", ",", "\"\<P''\>\""}], 
                "}"}]}], "}"}]}], "]"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drNorms"}], ",", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "Thick", ",", 
              RowBox[{"Arrowheads", "@", "Large"}], ",", 
              RowBox[{"MapThread", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Arrow", "@", 
                  RowBox[{"{", 
                   RowBox[{"#1", ",", 
                    RowBox[{"#1", "+", 
                    RowBox[{
                    RowBox[{"OptionValue", "@", "normLgt"}], " ", 
                    RowBox[{"norm", "@", "#2"}]}]}]}], "}"}]}], "&"}], ",", 
                RowBox[{"{", 
                 RowBox[{"poly1", ",", "grads1"}], "}"}]}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drX1s"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"incClr", ",", 
                RowBox[{"MapThread", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "fontSize"}], "]"}], ",", "#2", ",", 
                    "#3"}], "]"}], "&"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(X\), \(1\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(X\), \(1\)]\)'\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(X\), \(1\)]\)''\>\""}], "}"}], 
                    ",", "incs", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.25"}], ",", ".5"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1.5"}]}], "}"}]}], "}"}]}], "}"}]}], 
                 "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"incClr", ",", 
                RowBox[{"Point", "@", "incs"}]}], 
               RowBox[{"(*", 
                RowBox[{",", "Thick", ",", 
                 RowBox[{"Line", "@", "incs"}]}], "*)"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", 
             RowBox[{"{", 
              RowBox[{"Dashed", ",", 
               RowBox[{"Sequence", "@@", "clr"}]}], "}"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Polygon", "[", 
               RowBox[{"First", "@", "#"}], "]"}], "&"}], "/@", 
             RowBox[{"Rest", "@", "ons"}]}]}], "}"}], ","}], 
         "\[IndentingNewLine]", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"{", 
        RowBox[{"ell", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "@", "drX1locus"}], ",", 
           RowBox[{"incenterLocus", "[", 
            RowBox[{"a", ",", "\[Pi]", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<exc\>\"", "/.", "ptClrs"}], ",", "Thick"}], 
              "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "gr"}], "}"}], "]"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.788387104555689*^9, 3.788387170814426*^9}, {
  3.788387215357322*^9, 3.7883873103112545`*^9}, {3.788387348295094*^9, 
  3.7883873668384824`*^9}, {3.7883874018211493`*^9, 3.788387402693785*^9}, {
  3.7883878538124237`*^9, 3.78838808694845*^9}, {3.788388117606431*^9, 
  3.7883881477009115`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"threeOrbitsPlot", "=", 
  RowBox[{"drThreeOrbits", "[", 
   RowBox[{"1.5", ",", 
    RowBox[{"drX1locus", "\[Rule]", "False"}], ",", 
    RowBox[{"drX1s", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7883874485670843`*^9, 3.7883874549270687`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
    {RGBColor[0, 0, 1], Thickness[0.0075]}, 
    {PointSize[Large], FaceForm[None], 
     {GrayLevel[0.5], Dashing[{Small, Small}], LineBox[{{-1.5, 0}, {1.5, 0}}],
       LineBox[{{0, -1}, {0, 1}}], 
      {GrayLevel[0], PointBox[{0, 0}]}}, 
     {EdgeForm[{RGBColor[0, 0, 1], Thickness[0.0075]}], 
      PolygonBox[{{1.4095389311788624`, 0.34202014332566916`}, {
       0.45108693133427213`, -0.9537110161840732}, {-1.4825275309807053`, 
       0.1521871945032789}}], 
      PointBox[{{1.4095389311788624`, 0.34202014332566916`}, {
       1.299038105676658, 0.5000000000000001}, {1.149066664678467, 
       0.6427876096865394}}]}, 
     {RGBColor[0.6, 0.4, 0.2], Thickness[Large], LineBox[CompressedData["
1:eJxV2HlYzfkXB/AwkWEUjSGibFmSmbErOimZIgyyjG0oEqPsSRKyREkTY7KF
ohlUltIgzEldqdyaVCKFFpS03HuzpeJn7nn//pi/PJ6ebvf7/Zxz3q/P6eGy
ctqS5jo6Ou7NdHT+/TcuSFGhN0HDe4em5mTMKBjt2N5iVtteGh4SW7ClbuEJ
erAwWL3pgpqT3FytRrS5QEedQvssq1Px3HOv7158+hcVmL3ctb6ylrMt8z7G
JN8kZerbCTN9qtmwpip3q14yBZQaW889W8n99uwJ+PaRgiw7WXB4UDm7F4Xv
aj7lDuk2Kza2G/aM9fW67xjtmk7FaZ1aB1wr5gTb584u39yl6riur/ScH/GU
Li06XV6upP1JS8L9Buay7rGrLQ4uzqQwm/3xURZpnOqt71TXOovCz53yvxV5
maNeKXxuLMqiy4N6DhquPESD6WnukrVZ1N/xSWEHDZP38WnFQeOzaJjHqcdL
LJW0oPOzXmdLM8kg5sP4gIpcOrHNpqZkcib9cH1x58w5BXRk5PJepaFKKjtb
Zui65gmtv5m8Kf3SXco2NFSfDiuhXXrrC3pezqDCPq90F6WXUdvA2riy8HRy
sWyI9f3nOVVYn2q/em0aefYZu9I1upy8On3oe2bkHcpf6dwiccFL0hxK+VCh
uk36ba1OObyqJK/NVs17nlBQtpH+wMppVRQ2Y0JDoX0K6RocddgSVk1NGw+4
2pfforfKHiXPEmvIKfKI05idSZQze4559d+1ZNvYNzbR9m963+GtW+w0FVVb
9vHR9blOs+rH3qu5oqIRp31KY+Ku0pjfN8zVM1DTT07dQs/UJJCtS8eTN+aq
KfBSv2OR38ZTXm6DacpRNc07UhbSfMNFilaNnZ+W/fn/GvsONUHRFDfb/BvP
BjWdUsW1bbT8g4Zuibg80VhDPu9CBzxsPEmzF+ooaoZoyNPNt0VGVBgF+fDG
QlsNTe9m97F3fSAZB5yyC3bU0MT8Vj33fvqFhqqyZ21w0JDLqZFqY8uN3MPB
xU7XRkPx5Y2HuxWGcEhe7/VHv9PQO/eyg0bzDrMy/mlyWBcNPTUPvv+nUwQr
rbpVTP2oJpMDZva2OVG8fE5RU9ciNS2bMbX1IetzPGF0SaXtZTUdevB43LrQ
8zzpcZiyXYCarM+fXzRrySXeFhQ1O8VZTbsdN1R8vT6eLQpcR5zspibXbU2D
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
+Q==
       "]]}, {InsetBox[
       StyleBox["\<\"P\"\>",
        StripOnInput->False,
        FontSize->20], {1.5499726468924968`, 0.41869068193641645`}, {0, 0}], 
      InsetBox[
       StyleBox["\<\"P'\"\>",
        StripOnInput->False,
        FontSize->20], {1.4199867370396106`, 0.6047445873132765}, {0, 0}], 
      InsetBox[
       StyleBox["\<\"P''\"\>",
        StripOnInput->False,
        FontSize->20], {1.248597363542975, 0.7680618687485775}, {0, 0}]}, {}, {
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], InsetBox[
        StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)\"\>",
         StripOnInput->False,
         FontSize->
          20], {0.30542292639874086`, -0.2607778980496586}, {-1.1, 1.1}], 
       InsetBox[
        StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)'\"\>",
         StripOnInput->False,
         FontSize->
          20], {0.5667693891484438, -0.13416331091005987`}, {-1.25, 0.5}], 
       InsetBox[
        StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)''\"\>",
         StripOnInput->False,
         FontSize->
          20], {0.6349761031542811, -0.00427219116345908}, {-1, -1.5}]}, 
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], 
       PointBox[{{0.30542292639874086`, -0.2607778980496586}, {
        0.5667693891484438, -0.13416331091005987`}, {
        0.6349761031542811, -0.00427219116345908}}]}}, 
     {EdgeForm[{RGBColor[0, 0, 1], Thickness[0.0075], 
      Dashing[{Small, Small}]}], 
      PolygonBox[{{1.299038105676658, 0.5000000000000001}, {
       0.8995352945247652, -0.8002322590360164}, {-1.4969411981678697`, 
       0.06382980574323183}}], 
      PolygonBox[{{1.149066664678467, 0.6427876096865394}, {
       1.1369992214601714`, -0.6522551547086338}, {-1.49999717808049, 
       0.0019397308594383267`}}]}}}}]], "Output",
 CellChangeTimes->{
  3.78838745546161*^9, 3.788387940516363*^9, {3.7883879945080214`*^9, 
   3.788388028175014*^9}, {3.7883881215508456`*^9, 3.7883881488141637`*^9}, 
   3.7897221251875916`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{"\"\<0010_three_orbits\>\"", ",", "threeOrbitsPlot"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7883874642301784`*^9, 3.788387467919314*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"threeOrbitsPlotProof", "=", 
  RowBox[{"drThreeOrbits", "[", 
   RowBox[{"1.5", ",", 
    RowBox[{"drX1locus", "\[Rule]", "False"}], ",", 
    RowBox[{"drX1s", "\[Rule]", "False"}], ",", 
    RowBox[{"drNorms", "\[Rule]", "True"}], ",", 
    RowBox[{"normLgt", "\[Rule]", ".4"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.774972266942477*^9, 3.7749725671499624`*^9}, {
   3.774972703853329*^9, 3.774972706405922*^9}, {3.7749727373740892`*^9, 
   3.774972762645495*^9}, {3.7749728028938513`*^9, 3.774972893214055*^9}, {
   3.774972937944426*^9, 3.7749730991972957`*^9}, {3.7749732252682924`*^9, 
   3.7749734210381937`*^9}, {3.7749734995262594`*^9, 3.774973526916995*^9}, {
   3.774976161548345*^9, 3.774976166596842*^9}, {3.7749814345674257`*^9, 
   3.774981551872037*^9}, {3.774981592897341*^9, 3.774981605045847*^9}, {
   3.7752170790121417`*^9, 3.7752170845293846`*^9}, {3.7752171744169617`*^9, 
   3.775217243015777*^9}, {3.7802574095345993`*^9, 3.780257413174863*^9}, {
   3.780257444057374*^9, 3.7802574482248726`*^9}, {3.780257518011528*^9, 
   3.7802576973051653`*^9}, {3.787588916995587*^9, 3.787588922107216*^9}, 
   3.788387103853545*^9, {3.788387175472316*^9, 3.788387184562625*^9}, {
   3.7883872765832405`*^9, 3.788387316014426*^9}, {3.7883874332819805`*^9, 
   3.7883874349195943`*^9}, {3.7883879479418335`*^9, 3.7883879775514*^9}, {
   3.788388031958918*^9, 3.7883880546937995`*^9}, {3.78838809195805*^9, 
   3.7883880920617723`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
    {RGBColor[0, 0, 1], Thickness[0.0075]}, 
    {PointSize[Large], FaceForm[None], 
     {GrayLevel[0.5], Dashing[{Small, Small}], LineBox[{{-1.5, 0}, {1.5, 0}}],
       LineBox[{{0, -1}, {0, 1}}], 
      {GrayLevel[0], PointBox[{0, 0}]}}, 
     {EdgeForm[{RGBColor[0, 0, 1], Thickness[0.0075]}], 
      PolygonBox[{{1.4095389311788624`, 0.34202014332566916`}, {
       0.45108693133427213`, -0.9537110161840732}, {-1.4825275309807053`, 
       0.1521871945032789}}], 
      PointBox[{{1.4095389311788624`, 0.34202014332566916`}, {
       1.299038105676658, 0.5000000000000001}, {1.149066664678467, 
       0.6427876096865394}}]}, 
     {RGBColor[0.6, 0.4, 0.2], Thickness[Large], LineBox[CompressedData["
1:eJxV2HlYzfkXB/AwkWEUjSGibFmSmbErOimZIgyyjG0oEqPsSRKyREkTY7KF
ohlUltIgzEldqdyaVCKFFpS03HuzpeJn7nn//pi/PJ6ebvf7/Zxz3q/P6eGy
ctqS5jo6Ou7NdHT+/TcuSFGhN0HDe4em5mTMKBjt2N5iVtteGh4SW7ClbuEJ
erAwWL3pgpqT3FytRrS5QEedQvssq1Px3HOv7158+hcVmL3ctb6ylrMt8z7G
JN8kZerbCTN9qtmwpip3q14yBZQaW889W8n99uwJ+PaRgiw7WXB4UDm7F4Xv
aj7lDuk2Kza2G/aM9fW67xjtmk7FaZ1aB1wr5gTb584u39yl6riur/ScH/GU
Li06XV6upP1JS8L9Buay7rGrLQ4uzqQwm/3xURZpnOqt71TXOovCz53yvxV5
maNeKXxuLMqiy4N6DhquPESD6WnukrVZ1N/xSWEHDZP38WnFQeOzaJjHqcdL
LJW0oPOzXmdLM8kg5sP4gIpcOrHNpqZkcib9cH1x58w5BXRk5PJepaFKKjtb
Zui65gmtv5m8Kf3SXco2NFSfDiuhXXrrC3pezqDCPq90F6WXUdvA2riy8HRy
sWyI9f3nOVVYn2q/em0aefYZu9I1upy8On3oe2bkHcpf6dwiccFL0hxK+VCh
uk36ba1OObyqJK/NVs17nlBQtpH+wMppVRQ2Y0JDoX0K6RocddgSVk1NGw+4
2pfforfKHiXPEmvIKfKI05idSZQze4559d+1ZNvYNzbR9m963+GtW+w0FVVb
9vHR9blOs+rH3qu5oqIRp31KY+Ku0pjfN8zVM1DTT07dQs/UJJCtS8eTN+aq
KfBSv2OR38ZTXm6DacpRNc07UhbSfMNFilaNnZ+W/fn/GvsONUHRFDfb/BvP
BjWdUsW1bbT8g4Zuibg80VhDPu9CBzxsPEmzF+ooaoZoyNPNt0VGVBgF+fDG
QlsNTe9m97F3fSAZB5yyC3bU0MT8Vj33fvqFhqqyZ21w0JDLqZFqY8uN3MPB
xU7XRkPx5Y2HuxWGcEhe7/VHv9PQO/eyg0bzDrMy/mlyWBcNPTUPvv+nUwQr
rbpVTP2oJpMDZva2OVG8fE5RU9ciNS2bMbX1IetzPGF0SaXtZTUdevB43LrQ
8zzpcZiyXYCarM+fXzRrySXeFhQ1O8VZTbsdN1R8vT6eLQpcR5zspibXbU2D
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
+Q==
       "]]}, {InsetBox[
       StyleBox["\<\"P\"\>",
        StripOnInput->False,
        FontSize->20], {1.5499726468924968`, 0.41869068193641645`}, {0, 0}], 
      InsetBox[
       StyleBox["\<\"P'\"\>",
        StripOnInput->False,
        FontSize->20], {1.4199867370396106`, 0.6047445873132765}, {0, 0}], 
      InsetBox[
       StyleBox["\<\"P''\"\>",
        StripOnInput->False,
        FontSize->20], {1.248597363542975, 0.7680618687485775}, {0, 0}]}, 
     {GrayLevel[0], Thickness[Large], Arrowheads[Large], 
      ArrowBox[{{1.4095389311788624`, 0.34202014332566916`}, {
       1.0584546418947762`, 0.15034379679880086`}}], 
      ArrowBox[{{0.45108693133427213`, -0.9537110161840732}, {
       0.36879993691967683`, -0.5622664472471515}}], 
      ArrowBox[{{-1.4825275309807053`, 
       0.1521871945032789}, {-1.0927883079133913`, 
       0.062168651952943854`}}]}, {}, 
     {EdgeForm[{RGBColor[0, 0, 1], Thickness[0.0075], 
      Dashing[{Small, Small}]}], 
      PolygonBox[{{1.299038105676658, 0.5000000000000001}, {
       0.8995352945247652, -0.8002322590360164}, {-1.4969411981678697`, 
       0.06382980574323183}}], 
      PolygonBox[{{1.149066664678467, 0.6427876096865394}, {
       1.1369992214601714`, -0.6522551547086338}, {-1.49999717808049, 
       0.0019397308594383267`}}]}}}}]], "Output",
 CellChangeTimes->{{3.788387179325009*^9, 3.78838718518001*^9}, {
   3.7883872240639057`*^9, 3.788387316507079*^9}, 3.788387369131067*^9, 
   3.788387404094039*^9, 3.7883874385448685`*^9, {3.788387946269281*^9, 
   3.7883879780430713`*^9}, {3.7883880127282753`*^9, 3.788388092597309*^9}, {
   3.788388124697427*^9, 3.788388151888937*^9}, 3.7897221262025843`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{"\"\<0010_three_orbits_proofs\>\"", ",", "threeOrbitsPlotProof"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7802574189354815`*^9, 3.7802574287293015`*^9}, {
  3.780257764922157*^9, 3.780257768570408*^9}, {3.78626103628267*^9, 
  3.7862610400504627`*^9}, {3.7862698224869604`*^9, 3.7862698259117813`*^9}, {
  3.7862699897996407`*^9, 3.7862699978550777`*^9}, {3.7883874253841147`*^9, 
  3.788387441270605*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"incenterLocusPlot", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "1.5"}], ",", "ons", ",", "o1", ",", "n1", ",", "s1", 
      ",", "inc1", ",", 
      RowBox[{"deg1", "=", "20"}], ",", 
      RowBox[{"deg0", "=", "0"}], ",", 
      RowBox[{"degStep", "=", "1"}], ",", 
      RowBox[{"degRange", "=", "359"}], ",", "degs", ",", "poly1", ",", "ell",
       ",", "gr", ",", "grads1", ",", 
      RowBox[{"clr", "=", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Thick"}], "}"}]}], ",", 
      RowBox[{"incClr", "=", 
       RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}]}], ",", 
      RowBox[{"lgt", "=", ".22"}], ",", "incs", ",", 
      RowBox[{"fontSize", "=", "20"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"degs", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"deg0", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "-", "1"}], ")"}], "*", "degStep"}]}], ")"}], "&"}], 
       "/@", 
       RowBox[{"Range", "@", "degRange"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ell", "=", 
      RowBox[{"plotEll", "[", 
       RowBox[{"a", ",", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Black"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ons", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"orbitNormals", "[", 
         RowBox[{"a", ",", 
          RowBox[{"toRad", "@", "#"}]}], "]"}], "&"}], "/@", "degs"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"o1", ",", "n1", ",", "s1"}], "}"}], "=", 
      RowBox[{"orbitNormals", "[", 
       RowBox[{"a", ",", 
        RowBox[{"toRad", "@", "deg1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"inc1", "=", 
      RowBox[{"getIncenterTrilin", "[", 
       RowBox[{"o1", ",", "s1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"incs", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"getIncenterTrilin", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"First", "/@", "ons"}], ",", 
          RowBox[{"Third", "/@", "ons"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"grads1", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ellGrad", "[", 
         RowBox[{"a", ",", 
          RowBox[{"Sequence", "@@", "#"}]}], "]"}], "&"}], "/@", "poly1"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"gr", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"clr", ",", 
         RowBox[{"FaceForm", "@", "None"}], ",", 
         RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "@", "clr"}], ",", 
           RowBox[{"Polygon", "@", "o1"}], ",", 
           RowBox[{"Point", "@", "o1"}], ",", 
           RowBox[{"ellLabelPoints", "[", 
            RowBox[{
            "a", ",", "o1", ",", "\"\<P\>\"", ",", "fontSize", ",", "lgt"}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Dashed", ",", "incClr", ",", "Thick", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Line", "@", 
              RowBox[{"{", 
               RowBox[{"#", ",", "inc1"}], "}"}]}], "&"}], "/@", "o1"}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Dashed", ",", "Gray", ",", 
           RowBox[{"Line", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "a"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "0"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Line", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", "Black", ",", 
           RowBox[{"Point", "@", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"incClr", ",", "Thick", ",", 
           RowBox[{"Line", "@", "incs"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"incClr", ",", 
           RowBox[{"Point", "@", "inc1"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(X\), \(1\)]\)\>\"", ",", "fontSize"}],
               "]"}], ",", "inc1", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", "1.5"}]}], "}"}]}], "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"{", 
       RowBox[{"ell", ",", "gr"}], "}"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.774976138498996*^9, 3.7749764410025177`*^9}, {
  3.780257824165101*^9, 3.780257872462299*^9}, {3.7802579210966682`*^9, 
  3.7802579232778683`*^9}, {3.787588908497475*^9, 3.7875889126982393`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
    {RGBColor[0, 0, 1], Thickness[Large]}, 
    {PointSize[Large], FaceForm[None], 
     {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
      PolygonBox[{{1.4095389311788624`, 0.34202014332566916`}, {
       0.45108693133427213`, -0.9537110161840732}, {-1.4825275309807053`, 
       0.1521871945032789}}], 
      PointBox[{{1.4095389311788624`, 0.34202014332566916`}, {
       0.45108693133427213`, -0.9537110161840732}, {-1.4825275309807053`, 
       0.1521871945032789}}], {InsetBox[
        StyleBox[
         SubscriptBox["\<\"P\"\>", "1"],
         StripOnInput->False,
         FontSize->20], {1.6026352902851098`, 0.44744213391544674`}, {0, 0}], 
       InsetBox[
        StyleBox[
         SubscriptBox["\<\"P\"\>", "2"],
         StripOnInput->False,
         FontSize->20], {0.49634477826229956`, -1.1690055290993802`}, {0, 0}],
        InsetBox[
        StyleBox[
         SubscriptBox["\<\"P\"\>", "3"],
         StripOnInput->False,
         FontSize->20], {-1.696884103667728, 0.20169739290596317`}, {0, 0}]}}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
      Dashing[{Small, Small}], 
      LineBox[{{1.4095389311788624`, 0.34202014332566916`}, {
       0.30542292639874086`, -0.2607778980496586}}], 
      LineBox[{{0.45108693133427213`, -0.9537110161840732}, {
       0.30542292639874086`, -0.2607778980496586}}], 
      LineBox[{{-1.4825275309807053`, 0.1521871945032789}, {
       0.30542292639874086`, -0.2607778980496586}}]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], LineBox[{{-1.5, 0}, {1.5, 0}}],
       LineBox[{{0, -1}, {0, 1}}], 
      {GrayLevel[0], PointBox[{0, 0}]}}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
      LineBox[CompressedData["
1:eJxV2HlczXkXB/CEsdRkmiYVkUqMh5Bd4iSMZVRkG4ZIaIghaxSV0ihLSChL
WqwlS6bIzRkNldJ2U9qXW/NMhRHzxCjyPM89n/lj/uqPXrfu7/c953ze52u6
cqPTak0NDQ23Dhoa//8Z0pz62M6pnhN2Dt5z2L9W8fDtuqmvB9RzolbDsFNn
YnhlpU5y0MU6dunXd5+mWyLvuDrsm6NFKrYset1+5qSCu4wYUtr/Xi1fj51q
Eh+exkdHz3n6w4oavjaooWtUcDrnp2UlpURW8urn7mvvfZHFux5WNC8eVMae
86Z9/atZDmtbOyTobi1mvWCLC1qKPDYyfHTbNkzJd2f22PbxZT63zdfc8dI2
h/c0uxy+kVbAcwaP66Syf8QHXOaZVTor+ZlOYMbKyhQ+FhfUY1y6kk2jBh5N
eXmRHfXuPdH/qOTBaSf3Hz10gHx+co816VrIH3Z75S3nm6QXM3K9wQsl77Jd
kTp/GZNdyI9JV64p+Xy5+4i8vumkMbdhlP1cJa+3aJ+nMeQJrXY1W2hZXsBJ
idpaY5vyaV3S4pd9HAvYZ4R+hPbBQlpu0ZgRdiOf7e+YNo34UEQOSUWOCZr5
bJz3oLJ6Qgnd0tFeaH8kl681D15+aXYZ2Z/9y0r5WQ4XL5/8+9LhFTTaZ+t4
8w3Z/OWdrivaGirp96VZe5vSH3Nu3bO1xzyrqa3JuNXJIJNtnOu1zmyqoT3f
eSp6uqRztUfqQJ8va+nZrAeRBy8+5M4VFUEt0bV0+eO4+NuNaVwVWHL4vZmK
cqYuWj9lyANO4dWmXqEqGmFv1Pu76vtcUh1wzrlFRfMjV/3stO4e700zsPWe
WUevKkdMOdCWzKd2pj2PPFJHDb4VI389fpv3KYd8G5RdR17J7tlbx97kjOYo
wxetdRQQX93j3uM4vq7KC9lkUk+rto0ZrWNzgU87jH+bOL6eHu/5PsAm5CwX
jXhtNXNWPY1709g3ufwIP7ENd7s7t56e1U4NS/bx4AkrtkcEzPnf53MDLWP3
+1Bea9Uss+n1pK07yfdNQyil5rl8oTmmnrLtlraZJEaScZ8Ky4N96mn4juas
gsgLVO+8uK9Zex39Mm5TsfKbOOo4Q7eXSUkd+RcpO5u43aBDA0aGlsTVUfHF
7nENvRJpS+nGq+d21lHJ4l7W1+7/TB1OrzytmFxHmsZhZkuc7lDraSPTnZ3q
6DOVglRFKcRT9At7pqlox+noGpuZqRQcZub1dJeKTmzyebsqnmndU+9VL4eq
KOSvp1bxn34hjr0QG15VS+83WSZqmaZRZMlKZ53gWuqjcfxzJ+tfSTfV4dNu
q1r67nlpN79vH5JtmaunYVENbTaf9Sli/iPyH97gobWthpSbmxOiF6TTMc+e
Xnt1a6jvfWOL0w4ZdH+4wt1hQTVpm488/xNl0gFzo3Y7vyo6ueWDl/vXj2lB
zJIBwy5V0nrLzH6zumXRnxa5K5ZmVND+xVktA1RZ1Gph5a6rKqdpzqMXdk7M
pgR71e5j78rI5Zvo/Q1eT6gla6evadcyqspYe6fQJodajYdZt+uVkmnJ2ebH
LTmUYrtuz5reJWRnutww92IuFSwoXnCi7zOaeGJes8oxj65cm9o/s08xxeRo
6Wq9zqOh5y9njzIqorZuPbf1n5ZPu/x+fKKn+5SCvu7lkncon96ErnM93bmQ
9oe7fv+TMp9sik5e0HhXQBW5V53t9QpocWtp+I7f8ik+SsvJbE4BTYqui1oT
nUfDF5zr1iWogPy0I99lb80hru4//UNqAXWvK9LYa5dNc6c/StF8VUAO2od7
NWk9phkvsjr2NlbSjRP7Fq0qSKffgtbenDZNSa3x16MdQx/SLs/dU/zXKclo
YGZ1N6c08t8wbfDTA0qa4D26e/Pnv5B+8JdPxl1R0sU/ymIVh+/RhS4vvG6m
KWmVpfHWFR+T6NW0/gGTSpQUWHNrmd8Pt+jc95WmNY1KSmnrFHo5Ko66x3gF
nninpL0nExW9fowm0y6dS1w6FJIyxijHd+MxMjFcb2XXpZB+dz1ksIaTbZYM
TY8e262QvKPVv2cD/B6fZyN8Hn+fDfH3veX/81n8/0ny/bgB32+HfH++iu8/
SJ6P/36+Pwaon5+34vnr5f3wBrwfH3l/XI73ZyLvl6fi/T5Xqd8/z8H7ny3n
w8k4nzFyfjwI5zdRzpdP4Xwt5Pz5Gc6/VOqDfVAfm6V+2Bv1M1zqi9tRX1el
/jgB9fdU6pNtUJ8XpX55NOq3Ux91ffMo1HeW1D/fR/1fl/7gZegPlfQPD0H/
vJD+4gPor8HSfzwB/Rco/cnh6M+r0r/cZCb9e1T6m03R377S/5yD/p8k84G3
Yz68VajnB+tjfhyX+cJfYb6kyPzhN5g/W2Q+8U3Mp4Myv/gu5leIzDeOipD5
1iTzj9NrZf5VRqjnI9v2lvm4SOYnO2N+esh8ZXfM1xfT1fOXNTF/M2U+sxXm
c7uxen4zbZf5fVnmO0dMlvmukPnPlT1k/htKPvDidMmHBMkPDv+35Eee5Auf
R76ESf5wBvJnl+QTZ26XfCqU/OL2OMkvN8k3LkO+bZf8Ywc/yT9/yUcuRT4e
lPxknfOSn0clXzka+XpX8pffIH9by9X5zPHI5zzJb65Bfn8l+c7nkO8zJP95
1HPJ/4BktQ+4zzLxwSLxA7vCD1fFFzwXvvDMVfuD8+CPkeITngufuFmp/cI7
4Zfb4ht2g28cxT+8Cv5JL1P7iDXho/ek9hPbwk/m3mpfsTZ8lXNH7S/2gr8+
ic9oBnx2XlftN/KA334Q31EAfNck/qNd8B98SInw4RLxI1UEiR9Xiy/pBHxZ
Jv4kV/jzlviUpsOn48WvpAO/uotvaS58u178S/km4t9M8TH5dxcfw88EP9vA
zwQ/E/xM8DPBzwQ/E/xM8DPBzwQ/E/xM8DPBzwQ/U/F4ef5h4mf6+/3AzwQ/
E/xM8DPBzwQ/E/xM8DPBzwQ/M/xM+/fI+X4l50vHJsv5w8/UIn7mDlIfBD8z
/EzwM8PP5CF+ZlepP4KfGX4m+JnhZ7qE+l4i9U3ZqP+JUv/UUfzM/xE/UzX6
p1n8TLPRX2ukv6gR/fdI+o/gZ4afCX5m+JngZ4afCX5m+JngZ4afCX5m+JkC
MV8iZb4Q/MzwM93AfNonfib4mR/K/CL4meFngp8ZfiZrzMd48TPDzww/M/zM
8DPDzww/M/zM8DN3ET/zbJnffBDzHX7mbZj/OTL/+SPywUz8zC3Ij4HiZ05F
voSLnzkI+ZMq+cPwM4dLPvED5Nc7yS+ORr7pS76xvviZ50v+8WTko7vkIwf+
Mz85DPn6heQrK5C/GuJnDkY+h0o+8zzkt4vkN8PPDD/zR+T/ZMl/joMPVooP
+E/44U/xA38UP7OO+IKT4Y+Z4g8uh0+sxSecAr8cEr/wSPjmvfiGfeEfX/EP
N8JH8DOPg5/gZ54HX90UX/Es+GuY+Iv94bMH4jPuLX5mB/Ebj4HvnMR3nAT/
wc/c9Zr4cKv4kNvhx/3iRx4OXxqKL1kBf4aLP3kDfPpSfMrR8OsZ8SuPhm97
im/5HPyrL/5l+JnhZ37pGFsd8OmWYqn4mQ+Ln6kffj8T/u6Pz/v90+d8AH6P
xf9fAt+/wPc7Bf9fwfcfif1AD8/XLM9Pnnj+DOwXLng/m7B/VOH9GWA/mY33
2yZ+Jke8f1vsN7dxPkOx/xjh/GyxHx3H+Zpjf8rB+Zdhv4KfeSP2rz2oH33s
Z42orwvY306i/rKw35mjPmOx/xHq9xX2Qz3Udyb2x4eo/xDslwPRHzXYP/+F
/mnCfhqC/hqE/bU3+m8L9lt39Kcv9t9L4mc+jv14FPp7LfbnQPS/NfZrD8yH
rti/rTE/TmI/N8B8+Xt/7+4h88cN+70f5hP8TBGYXxG4H8gWP3MV7g+OiJ/5
ncxHKhc/8xLcP8DPHIz7CSXma4v4mcZg/t7H/cZvY2U+d8T9x3bxM5/C/Ui7
rcx3+JngZzbG/cqGTMmHY7h/CW6W/ICfqRT5Aj8T/ExBuN9ZKH4m+JngZ9qI
+yEF8u0c7o/ikH/rcb9kVSX5GIP7p0Lk50HcT8UjX5/g/kqF/C0RP1Mx8hl+
JviZ4GeCn2kz7s+Mxc8UKn6mfuJngp8JfqZ7uJ+bDl/AzwQ/Uxfc79nDJ/Az
wc8EPxP8TPAzwc9kgPvFz+Aj+JngZ4KfCX4m+JngZ4KfGX6mMNx/BsNv8DPD
zwQ/M/xME3G/mgAfws8MP9OYR3I/W+0kvoSfGX4m+JnhZzLA/e8++BV+ZviZ
4GeGn+m/5DjaAg==
       "]]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], 
      PointBox[{0.30542292639874086`, -0.2607778980496586}], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->
         20], {0.30542292639874086`, -0.2607778980496586}, {0, -1.5}]}}}}]], \
"Output",
 CellChangeTimes->{{3.7749761782077885`*^9, 3.774976186363973*^9}, {
   3.774976230250946*^9, 3.774976266789624*^9}, 3.7749763122121305`*^9, 
   3.774976372463475*^9, {3.774976404312068*^9, 3.774976441628333*^9}, 
   3.7750661468589797`*^9, 3.775067276846816*^9, 3.775217120159088*^9, 
   3.7758978621138306`*^9, {3.780257832516879*^9, 3.7802578733299804`*^9}, 
   3.7802579247309575`*^9, 3.7862609902602262`*^9, 3.7862610503605657`*^9, 
   3.7875876736117773`*^9, 3.7875886087894087`*^9, 3.7875889131460133`*^9, 
   3.788075599054656*^9, 3.7881668238500443`*^9, 3.7897221271442857`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"incenterLocusPlotClean", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "1.5"}], ",", "ons", ",", "o1", ",", "n1", ",", "s1", 
      ",", "inc1", ",", 
      RowBox[{"deg1", "=", "20"}], ",", 
      RowBox[{"deg0", "=", "0"}], ",", 
      RowBox[{"degStep", "=", "1"}], ",", 
      RowBox[{"degRange", "=", "359"}], ",", "degs", ",", "poly1", ",", "ell",
       ",", "gr", ",", "grads1", ",", 
      RowBox[{"clr", "=", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Thick"}], "}"}]}], ",", 
      RowBox[{"incClr", "=", 
       RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}]}], ",", 
      RowBox[{"lgt", "=", ".22"}], ",", "incs", ",", 
      RowBox[{"fontSize", "=", "20"}], ",", "caustic"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"degs", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"deg0", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "-", "1"}], ")"}], "*", "degStep"}]}], ")"}], "&"}], 
       "/@", 
       RowBox[{"Range", "@", "degRange"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ell", "=", 
      RowBox[{"plotEll", "[", 
       RowBox[{"a", ",", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Black"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ons", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"orbitNormals", "[", 
         RowBox[{"a", ",", 
          RowBox[{"toRad", "@", "#"}]}], "]"}], "&"}], "/@", "degs"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"o1", ",", "n1", ",", "s1"}], "}"}], "=", 
      RowBox[{"orbitNormals", "[", 
       RowBox[{"a", ",", 
        RowBox[{"toRad", "@", "deg1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"inc1", "=", 
      RowBox[{"getIncenterTrilin", "[", 
       RowBox[{"o1", ",", "s1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"incs", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"getIncenterTrilin", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"First", "/@", "ons"}], ",", 
          RowBox[{"Third", "/@", "ons"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"caustic", "=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"o", ",", "n", ",", "s"}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"o", ",", "n", ",", "s"}], "}"}], "=", 
            RowBox[{"orbitNormals", "[", 
             RowBox[{"a", ",", 
              RowBox[{"toRad", "@", "i"}]}], "]"}]}], ";", 
           RowBox[{"getFeuerbachTrilin", "[", 
            RowBox[{"o", ",", "s"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "359"}], "}"}]}], "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"gr", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"clr", ",", 
         RowBox[{"FaceForm", "@", "None"}], ",", 
         RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"EdgeForm", "@", "clr"}], ",", 
             RowBox[{"Polygon", "@", "o1"}], ",", 
             RowBox[{"Point", "@", "o1"}], ",", 
             RowBox[{"ellLabelPoints", "[", 
              RowBox[{
              "a", ",", "o1", ",", "\"\<P\>\"", ",", "fontSize", ",", "lgt"}],
               "]"}]}], "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Dashed", ",", "incClr", ",", "Thick", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Line", "@", 
                RowBox[{"{", 
                 RowBox[{"#", ",", "inc1"}], "}"}]}], "&"}], "/@", "o1"}]}], 
            "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Dashed", ",", "Gray", ",", 
           RowBox[{"Line", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "a"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "0"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Line", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", "Black", ",", 
           RowBox[{"Point", "@", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"incClr", ",", "Thick", ",", 
           RowBox[{"Line", "@", "incs"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<feu\>\"", "/.", "ptClrs"}], ",", "Thick", ",", 
           RowBox[{"Line", "@", "caustic"}]}], "}"}]}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{",", 
          RowBox[{"{", 
           RowBox[{"incClr", ",", 
            RowBox[{"Point", "@", "inc1"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(X\), \(1\)]\)\>\"", ",", 
                "fontSize"}], "]"}], ",", "inc1", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "1.5"}]}], "}"}]}], "]"}]}], "}"}]}], "*)"}], 
        "\[IndentingNewLine]", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"{", 
       RowBox[{"ell", ",", "gr"}], "}"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7875886554965787`*^9, 3.787588719089303*^9}, {
  3.7875889000289*^9, 3.7875889033233166`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
    {RGBColor[0, 0, 1], Thickness[Large]}, 
    {PointSize[Large], FaceForm[None], 
     {GrayLevel[0.5], Dashing[{Small, Small}], LineBox[{{-1.5, 0}, {1.5, 0}}],
       LineBox[{{0, -1}, {0, 1}}], 
      {GrayLevel[0], PointBox[{0, 0}]}}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
      LineBox[CompressedData["
1:eJxV2HlczXkXB/CEsdRkmiYVkUqMh5Bd4iSMZVRkG4ZIaIghaxSV0ihLSChL
WqwlS6bIzRkNldJ2U9qXW/NMhRHzxCjyPM89n/lj/uqPXrfu7/c953ze52u6
cqPTak0NDQ23Dhoa//8Z0pz62M6pnhN2Dt5z2L9W8fDtuqmvB9RzolbDsFNn
YnhlpU5y0MU6dunXd5+mWyLvuDrsm6NFKrYset1+5qSCu4wYUtr/Xi1fj51q
Eh+exkdHz3n6w4oavjaooWtUcDrnp2UlpURW8urn7mvvfZHFux5WNC8eVMae
86Z9/atZDmtbOyTobi1mvWCLC1qKPDYyfHTbNkzJd2f22PbxZT63zdfc8dI2
h/c0uxy+kVbAcwaP66Syf8QHXOaZVTor+ZlOYMbKyhQ+FhfUY1y6kk2jBh5N
eXmRHfXuPdH/qOTBaSf3Hz10gHx+co816VrIH3Z75S3nm6QXM3K9wQsl77Jd
kTp/GZNdyI9JV64p+Xy5+4i8vumkMbdhlP1cJa+3aJ+nMeQJrXY1W2hZXsBJ
idpaY5vyaV3S4pd9HAvYZ4R+hPbBQlpu0ZgRdiOf7e+YNo34UEQOSUWOCZr5
bJz3oLJ6Qgnd0tFeaH8kl681D15+aXYZ2Z/9y0r5WQ4XL5/8+9LhFTTaZ+t4
8w3Z/OWdrivaGirp96VZe5vSH3Nu3bO1xzyrqa3JuNXJIJNtnOu1zmyqoT3f
eSp6uqRztUfqQJ8va+nZrAeRBy8+5M4VFUEt0bV0+eO4+NuNaVwVWHL4vZmK
cqYuWj9lyANO4dWmXqEqGmFv1Pu76vtcUh1wzrlFRfMjV/3stO4e700zsPWe
WUevKkdMOdCWzKd2pj2PPFJHDb4VI389fpv3KYd8G5RdR17J7tlbx97kjOYo
wxetdRQQX93j3uM4vq7KC9lkUk+rto0ZrWNzgU87jH+bOL6eHu/5PsAm5CwX
jXhtNXNWPY1709g3ufwIP7ENd7s7t56e1U4NS/bx4AkrtkcEzPnf53MDLWP3
+1Bea9Uss+n1pK07yfdNQyil5rl8oTmmnrLtlraZJEaScZ8Ky4N96mn4juas
gsgLVO+8uK9Zex39Mm5TsfKbOOo4Q7eXSUkd+RcpO5u43aBDA0aGlsTVUfHF
7nENvRJpS+nGq+d21lHJ4l7W1+7/TB1OrzytmFxHmsZhZkuc7lDraSPTnZ3q
6DOVglRFKcRT9At7pqlox+noGpuZqRQcZub1dJeKTmzyebsqnmndU+9VL4eq
KOSvp1bxn34hjr0QG15VS+83WSZqmaZRZMlKZ53gWuqjcfxzJ+tfSTfV4dNu
q1r67nlpN79vH5JtmaunYVENbTaf9Sli/iPyH97gobWthpSbmxOiF6TTMc+e
Xnt1a6jvfWOL0w4ZdH+4wt1hQTVpm488/xNl0gFzo3Y7vyo6ueWDl/vXj2lB
zJIBwy5V0nrLzH6zumXRnxa5K5ZmVND+xVktA1RZ1Gph5a6rKqdpzqMXdk7M
pgR71e5j78rI5Zvo/Q1eT6gla6evadcyqspYe6fQJodajYdZt+uVkmnJ2ebH
LTmUYrtuz5reJWRnutww92IuFSwoXnCi7zOaeGJes8oxj65cm9o/s08xxeRo
6Wq9zqOh5y9njzIqorZuPbf1n5ZPu/x+fKKn+5SCvu7lkncon96ErnM93bmQ
9oe7fv+TMp9sik5e0HhXQBW5V53t9QpocWtp+I7f8ik+SsvJbE4BTYqui1oT
nUfDF5zr1iWogPy0I99lb80hru4//UNqAXWvK9LYa5dNc6c/StF8VUAO2od7
NWk9phkvsjr2NlbSjRP7Fq0qSKffgtbenDZNSa3x16MdQx/SLs/dU/zXKclo
YGZ1N6c08t8wbfDTA0qa4D26e/Pnv5B+8JdPxl1R0sU/ymIVh+/RhS4vvG6m
KWmVpfHWFR+T6NW0/gGTSpQUWHNrmd8Pt+jc95WmNY1KSmnrFHo5Ko66x3gF
nninpL0nExW9fowm0y6dS1w6FJIyxijHd+MxMjFcb2XXpZB+dz1ksIaTbZYM
TY8e262QvKPVv2cD/B6fZyN8Hn+fDfH3veX/81n8/0ny/bgB32+HfH++iu8/
SJ6P/36+Pwaon5+34vnr5f3wBrwfH3l/XI73ZyLvl6fi/T5Xqd8/z8H7ny3n
w8k4nzFyfjwI5zdRzpdP4Xwt5Pz5Gc6/VOqDfVAfm6V+2Bv1M1zqi9tRX1el
/jgB9fdU6pNtUJ8XpX55NOq3Ux91ffMo1HeW1D/fR/1fl/7gZegPlfQPD0H/
vJD+4gPor8HSfzwB/Rco/cnh6M+r0r/cZCb9e1T6m03R377S/5yD/p8k84G3
Yz68VajnB+tjfhyX+cJfYb6kyPzhN5g/W2Q+8U3Mp4Myv/gu5leIzDeOipD5
1iTzj9NrZf5VRqjnI9v2lvm4SOYnO2N+esh8ZXfM1xfT1fOXNTF/M2U+sxXm
c7uxen4zbZf5fVnmO0dMlvmukPnPlT1k/htKPvDidMmHBMkPDv+35Eee5Auf
R76ESf5wBvJnl+QTZ26XfCqU/OL2OMkvN8k3LkO+bZf8Ywc/yT9/yUcuRT4e
lPxknfOSn0clXzka+XpX8pffIH9by9X5zPHI5zzJb65Bfn8l+c7nkO8zJP95
1HPJ/4BktQ+4zzLxwSLxA7vCD1fFFzwXvvDMVfuD8+CPkeITngufuFmp/cI7
4Zfb4ht2g28cxT+8Cv5JL1P7iDXho/ek9hPbwk/m3mpfsTZ8lXNH7S/2gr8+
ic9oBnx2XlftN/KA334Q31EAfNck/qNd8B98SInw4RLxI1UEiR9Xiy/pBHxZ
Jv4kV/jzlviUpsOn48WvpAO/uotvaS58u178S/km4t9M8TH5dxcfw88EP9vA
zwQ/E/xM8DPBzwQ/E/xM8DPBzwQ/E/xM8DPBzwQ/U/F4ef5h4mf6+/3AzwQ/
E/xM8DPBzwQ/E/xM8DPBzwQ/M/xM+/fI+X4l50vHJsv5w8/UIn7mDlIfBD8z
/EzwM8PP5CF+ZlepP4KfGX4m+JnhZ7qE+l4i9U3ZqP+JUv/UUfzM/xE/UzX6
p1n8TLPRX2ukv6gR/fdI+o/gZ4afCX5m+JngZ4afCX5m+JngZ4afCX5m+JkC
MV8iZb4Q/MzwM93AfNonfib4mR/K/CL4meFngp8ZfiZrzMd48TPDzww/M/zM
8DPDzww/M/zM8DN3ET/zbJnffBDzHX7mbZj/OTL/+SPywUz8zC3Ij4HiZ05F
voSLnzkI+ZMq+cPwM4dLPvED5Nc7yS+ORr7pS76xvviZ50v+8WTko7vkIwf+
Mz85DPn6heQrK5C/GuJnDkY+h0o+8zzkt4vkN8PPDD/zR+T/ZMl/joMPVooP
+E/44U/xA38UP7OO+IKT4Y+Z4g8uh0+sxSecAr8cEr/wSPjmvfiGfeEfX/EP
N8JH8DOPg5/gZ54HX90UX/Es+GuY+Iv94bMH4jPuLX5mB/Ebj4HvnMR3nAT/
wc/c9Zr4cKv4kNvhx/3iRx4OXxqKL1kBf4aLP3kDfPpSfMrR8OsZ8SuPhm97
im/5HPyrL/5l+JnhZ37pGFsd8OmWYqn4mQ+Ln6kffj8T/u6Pz/v90+d8AH6P
xf9fAt+/wPc7Bf9fwfcfif1AD8/XLM9Pnnj+DOwXLng/m7B/VOH9GWA/mY33
2yZ+Jke8f1vsN7dxPkOx/xjh/GyxHx3H+Zpjf8rB+Zdhv4KfeSP2rz2oH33s
Z42orwvY306i/rKw35mjPmOx/xHq9xX2Qz3Udyb2x4eo/xDslwPRHzXYP/+F
/mnCfhqC/hqE/bU3+m8L9lt39Kcv9t9L4mc+jv14FPp7LfbnQPS/NfZrD8yH
rti/rTE/TmI/N8B8+Xt/7+4h88cN+70f5hP8TBGYXxG4H8gWP3MV7g+OiJ/5
ncxHKhc/8xLcP8DPHIz7CSXma4v4mcZg/t7H/cZvY2U+d8T9x3bxM5/C/Ui7
rcx3+JngZzbG/cqGTMmHY7h/CW6W/ICfqRT5Aj8T/ExBuN9ZKH4m+JngZ9qI
+yEF8u0c7o/ikH/rcb9kVSX5GIP7p0Lk50HcT8UjX5/g/kqF/C0RP1Mx8hl+
JviZ4GeCn2kz7s+Mxc8UKn6mfuJngp8JfqZ7uJ+bDl/AzwQ/Uxfc79nDJ/Az
wc8EPxP8TPAzwc9kgPvFz+Aj+JngZ4KfCX4m+JngZ4KfGX6mMNx/BsNv8DPD
zwQ/M/xME3G/mgAfws8MP9OYR3I/W+0kvoSfGX4m+JnhZzLA/e8++BV+ZviZ
4GeGn+m/5DjaAg==
       "]]}, 
     {RGBColor[0.7411764705882353, 0.7176470588235294, 0.4196078431372549], 
      Thickness[Large], LineBox[CompressedData["
1:eJxV2HlYzfkXB/AwkWEUjSGibFmSmbErOimZIgyyjG0oEqPsSRKyREkTY7KF
ohlUltIgzEldqdyaVCKFFpS03HuzpeJn7nn//pi/PJ6ebvf7/Zxz3q/P6eGy
ctqS5jo6Ou7NdHT+/TcuSFGhN0HDe4em5mTMKBjt2N5iVtteGh4SW7ClbuEJ
erAwWL3pgpqT3FytRrS5QEedQvssq1Px3HOv7158+hcVmL3ctb6ylrMt8z7G
JN8kZerbCTN9qtmwpip3q14yBZQaW889W8n99uwJ+PaRgiw7WXB4UDm7F4Xv
aj7lDuk2Kza2G/aM9fW67xjtmk7FaZ1aB1wr5gTb584u39yl6riur/ScH/GU
Li06XV6upP1JS8L9Buay7rGrLQ4uzqQwm/3xURZpnOqt71TXOovCz53yvxV5
maNeKXxuLMqiy4N6DhquPESD6WnukrVZ1N/xSWEHDZP38WnFQeOzaJjHqcdL
LJW0oPOzXmdLM8kg5sP4gIpcOrHNpqZkcib9cH1x58w5BXRk5PJepaFKKjtb
Zui65gmtv5m8Kf3SXco2NFSfDiuhXXrrC3pezqDCPq90F6WXUdvA2riy8HRy
sWyI9f3nOVVYn2q/em0aefYZu9I1upy8On3oe2bkHcpf6dwiccFL0hxK+VCh
uk36ba1OObyqJK/NVs17nlBQtpH+wMppVRQ2Y0JDoX0K6RocddgSVk1NGw+4
2pfforfKHiXPEmvIKfKI05idSZQze4559d+1ZNvYNzbR9m963+GtW+w0FVVb
9vHR9blOs+rH3qu5oqIRp31KY+Ku0pjfN8zVM1DTT07dQs/UJJCtS8eTN+aq
KfBSv2OR38ZTXm6DacpRNc07UhbSfMNFilaNnZ+W/fn/GvsONUHRFDfb/BvP
BjWdUsW1bbT8g4Zuibg80VhDPu9CBzxsPEmzF+ooaoZoyNPNt0VGVBgF+fDG
QlsNTe9m97F3fSAZB5yyC3bU0MT8Vj33fvqFhqqyZ21w0JDLqZFqY8uN3MPB
xU7XRkPx5Y2HuxWGcEhe7/VHv9PQO/eyg0bzDrMy/mlyWBcNPTUPvv+nUwQr
rbpVTP2oJpMDZva2OVG8fE5RU9ciNS2bMbX1IetzPGF0SaXtZTUdevB43LrQ
8zzpcZiyXYCarM+fXzRrySXeFhQ1O8VZTbsdN1R8vT6eLQpcR5zspibXbU2D
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
+Q==
       "]]}}}}]], "Output",
 CellChangeTimes->{{3.787588658892495*^9, 3.787588685310543*^9}, 
   3.7875887197924314`*^9, 3.7875889039875107`*^9, 3.7880755999379377`*^9, 
   3.7881668258719945`*^9, 3.789722127702197*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"excenterLocusPlot", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "1.5"}], ",", "ons", ",", 
      RowBox[{"deg1", "=", "20"}], ",", "poly1", ",", "ell", ",", "gr", ",", 
      "grads1", ",", 
      RowBox[{"clr", "=", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Thick"}], "}"}]}], ",", 
      RowBox[{"incClr", "=", 
       RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}]}], ",", 
      RowBox[{"lgt", "=", ".33"}], ",", "inc", ",", "exc", ",", "incExc", ",",
       "grExc", ",", 
      RowBox[{"fontSize", "=", "20"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ell", "=", 
      RowBox[{"plotEll", "[", 
       RowBox[{"a", ",", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Black"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ons", "=", 
      RowBox[{"orbitNormals", "[", 
       RowBox[{"a", ",", 
        RowBox[{"toRad", "@", "deg1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"exc", "=", 
      RowBox[{"excentralTriangle", "[", 
       RowBox[{
        RowBox[{"ons", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"ons", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"poly1", "=", 
      RowBox[{"ons", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"inc", "=", 
      RowBox[{"getIncenterTrilin", "[", 
       RowBox[{
        RowBox[{"First", "@", "ons"}], ",", 
        RowBox[{"Third", "@", "ons"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"incExc", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"o", ",", "n", ",", "s"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"o", ",", "n", ",", "s"}], "}"}], "=", 
             RowBox[{"orbitNormals", "[", 
              RowBox[{"a", ",", 
               RowBox[{"toRad", "@", "i"}]}], "]"}]}], ";", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"getIncenterTrilin", "[", 
               RowBox[{"o", ",", "s"}], "]"}], ",", 
              RowBox[{
               RowBox[{"excentralTriangle", "[", 
                RowBox[{"o", ",", "s"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "359"}], "}"}]}], "]"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"grads1", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ellGrad", "[", 
         RowBox[{"a", ",", 
          RowBox[{"Sequence", "@@", "#"}]}], "]"}], "&"}], "/@", "poly1"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"gr", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"clr", ",", 
         RowBox[{"FaceForm", "@", "None"}], ",", 
         RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Dashed", ",", "Gray", ",", 
           RowBox[{"Line", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "a"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "0"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Line", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", "Black", ",", 
           RowBox[{"Point", "@", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "@", "clr"}], ",", 
           RowBox[{"Polygon", "@", "poly1"}], ",", 
           RowBox[{"Point", "@", "poly1"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"incClr", ",", 
           RowBox[{"Point", "@", "inc"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(X\), \(1\)]\)\>\"", ",", "16"}], 
              "]"}], ",", "inc", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1.5"}], ",", ".75"}], "}"}]}], "]"}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Dashed", ",", "incClr", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Line", "@", 
              RowBox[{"{", 
               RowBox[{"#", ",", "inc"}], "}"}]}], "&"}], "/@", "poly1"}]}], 
          "}"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"grExc", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", 
         RowBox[{"FaceForm", "@", "None"}], ",", 
         RowBox[{"EdgeForm", "@", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", "incClr"}], "}"}]}], ",", "incClr", ",", 
         RowBox[{"PointSize", "@", "Large"}], ",", 
         RowBox[{"Point", "@", "exc"}], ",", 
         RowBox[{"Polygon", "@", "exc"}], ",", 
         RowBox[{"Line", "@", 
          RowBox[{"incExc", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", "Dashed", ",", 
         RowBox[{"Line", "@", 
          RowBox[{"incExc", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"{", 
       RowBox[{"grExc", ",", "ell", ",", "gr"}], "}"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7749782936556444`*^9, 3.7749783967105427`*^9}, {
  3.774978434330022*^9, 3.774978660094971*^9}, {3.7749786926319437`*^9, 
  3.7749787086401258`*^9}, {3.775059211045282*^9, 3.7750592335329475`*^9}, {
  3.7750592875010366`*^9, 3.7750592934373646`*^9}, {3.7802578104387474`*^9, 
  3.7802578122868395`*^9}, {3.7862698520012608`*^9, 3.7862698583875203`*^9}, {
  3.787588558456287*^9, 3.7875885967544894`*^9}, {3.7875887498759813`*^9, 
  3.787588837945937*^9}, {3.7875888920342855`*^9, 3.7875888926187224`*^9}, {
  3.787590418609023*^9, 3.787590424296809*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], PointSize[Large], Thickness[
    Large], EdgeForm[{RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], Thickness[Large]}], FaceForm[
    None], PointBox[{{-1.8496674116814404`, -1.4373610008734705`}, \
{-0.5919388093995908, 4.0080300751792315`}, {
     1.9454466991430635`, -0.6395761842689748}}], 
    PolygonBox[{{-1.8496674116814404`, -1.4373610008734705`}, \
{-0.5919388093995908, 4.0080300751792315`}, {
     1.9454466991430635`, -0.6395761842689748}}], LineBox[CompressedData["
1:eJxV2HlczXkXB/CEsdRkmiYVkbKNxxqyJE7CWEZFtmGIlLUMWSNUSqMsIaEs
kYRKloyomzMaWrXdlPbl1jyTaMQ8MYo8z3PPxx/zV3/0unV/v+855/M+X9OV
Gx1WaWpoaKxtp6Hx/59BTckZNg51HLdz8N4jvjWKR2/XT309oI7jteqHnz57
iVdW6CQERNWyU5/e+zXXxPOO6OHfHStU8dDC121nTym408ghJf2SavhG5FST
2NAUPmYx5+naFdV8fVB954uBqZyXknk3MbyCV71wXZf0VSbvelTetHhQKXvM
m/btb2bZrG1pF6e7tYj1Avtf1lLkspHh4zvWIUq+P7Pbto+Nedw6X3NHo3U2
721yOnIzJZ/nDB7XQWX7mA86zTOrcFTyMx3/tJUViXw8JqDbuFQlm14ceCyx
MYrt9ZKe6H9U8uCUUweOHT5IXj+7Rpp0LuAPezxzl/Mt0rs0ys3gpZJ3Wa9I
nr+MySbop7vXriv5QpnryNzeqaQxt3607Vwlu/Vvm6cx5AmtcjZbOLQsn+/G
a2uNbcij9XcXN/ayz2evkfph2ocKaHn/52khN/PY9p5pw8gPhWR3t9A+TjOP
jXMfVlRNKKbbOtoLbY/m8PWmwcuvzC4l23N/myu/yOai5ZP/WDqinCy8to7v
uyGLv77XeUVrfQX9sTRzX0NqBufUPlt33KOKWhuMWxwM0tnKsU7r7KZq2vuD
h6K7UypXuScP9Pq6hp7Nehh+KOoRdywvD2iOqKGrH8fF3nmewpX+xUfem6ko
e+oitylDHnIirzL1DFbRSFujnj9UPeDiKr/zjs0qmh/u8ovD+iTel2JgvXtm
Lb2qGDnlYGsCn96Z8iL8aC3Ve5eP+u3EHd6vHPJ9QFYteSa4Zm0de4vTmi4a
vmypJb/Yqm5JGTF8Q5UbtMmkjly2jbHQsbrMZ+zGv40fX0cZe3/0swo6x4Uj
X5vPnFVH4948751QdpSfWIeuuT+3jp7VTA1J8HLnCSu2h/nN+d/nc/yHRh7w
otyWyllm0+tIW3eS95v6YErOdfpKc0wdZdksbTWJDyfjXuVDD/WqoxE7mjLz
wy9TnePi3mZttfTruE1Fyu9iqP0M3R4mxbXkW6jsaLLmJh0eMCq4OKaWiqK6
xtT3iKctJRujz++speLFPSyvP/iF2p1ZeUYxuZY0jUPMljjco5YzRqY7O9TS
FyoFqQoTiafoF3RPUdGOMxHVVjOTKTDEzPPpLhWd3OT11iWWaf3T3S6Nw1QU
9PdT89hPvxJHXo4Mrayh95uGxmuZplB48UpHncAa6qVx4ksHy99IN9nu0x7z
GvrhRUkXn+8fkXWps4dhYTVt7jvrU9j8x+Q7ot5da1s1KTc3xUUsSKXjHt09
9+lWU+8Hxv3P2KXRgxEKV7sFVaTdd9SFnymdDvY1arPxqaRTWz54un6bQQsu
LRkw/EoFuQ1N7zOrSyb91T9nxdK0cjqwOLN5gCqTWvqbu+qqymiao8XCjvFZ
FGer2nP8XSk5fRdxoN7zCTVn7vQ27VxKlWnr7hVYZVOL8XDLNr0SMi0+15TR
nE2J1uv3ru5ZTDamyw1zonIof0HRgpO9n9HEk/OaVPa5dO361H7pvYroUraW
rtbrXBp24WrWaKNCau3SfVu/aXm0y+enJ3q6Tyng2x5OuYfz6E3weuczHQvo
QKjzjz8r88iq8NRljXf5VJ4T7Wirl0+LW0pCd/yeR7EXtRzM5uTTpIjai6sj
cmnEgvNdOgXkk492+LusrdnEVf2mf0jOp661hRr7bLJo7vTHiZqv8slO+0iP
Bq0MmvEys31PYyXdPLl/kUt+Kv0esO7WtGlKaom9EWEf/Ih2eeyZ4rteSUYD
06u6OKSQ74Zpg58eVNKE3RZdm778lfQDv34y7pqSov4sjVQcSaLLnV563kpR
kstQ460rPt6lV9P6+U0qVpJ/9e1lPmtv0/kfK0yrnyspsbVD8NWLMdT1kqf/
yXdK2ncqXtHjpwgy7dSx2KldASkvGWV7bzxOJoZu5jadCugP58MGqznBasmw
1IixXQpod4T692yA3+PzbITP4++zIf7+bvn/fA7/f5J8P67H99sh35+j8f0H
yfPx5+f7c4D6+Xkrnr9O3g9vwPvxkvfHZXh/JvJ+eSre7wuV+v3zHLz/2XI+
nIDzGSPnx4NwfhPlfPk0zre/nD8/w/mXSH2wF+pjs9QP70b9jJD64jbUV7TU
H8eh/p5KfbIV6jNK6pctUL8deqnrm0ejvjOl/vkB6v+G9AcvQ3+opH94CPrn
pfQXH0R/DZb+4wnoP3/pTw5Ff0ZL/3KDmfTvMelvNkV/e0v/czb6f5LMB96O
+fBWoZ4frI/5cULmC3+D+ZIo84ffYP5skfnEtzCfDsn84vuYX0Ey3/himMy3
Bpl/nFoj868iTD0f2bqnzMdFMj/ZEfPTXeYru2K+vpyunr+sifmbLvOZzTGf
24zV85tpu8zvqzLfOWyyzHeFzH+u6Cbz31DygRenSj7ESX5w6L8lP3IlX/gC
8iVE8ofTkD+7JJ84fbvkU4HkF7fFSH6tkXzjUuTbdsk/tvOR/POVfOQS5OMh
yU/WuSD5eUzylSOQr/clf/kN8relTJ3PHIt8zpX85mrk9zeS73we+T5D8p9H
v5D890tQ+4B7LRMfLBI/sDP8EC2+4LnwhUeO2h+cC3+MEp/wXPhkjbnaL7wT
frkjvuE18I29+Idd4J/UUrWPWBM+ek9qP7E1/NR3t9pXrA1fZd9T+4s94a9P
4jOaAZ9d0FX7jdzht7XiO/KD7xrEf7QL/oMPKR4+XCJ+pPIA8eMq8SWdhC9L
xZ/kDH/eFp/SdPh0vPiVdOBXV/EtzYVv3cS/lGci/k0XH5NvV/Ex/EzwsxX8
TPAzwc8EPxP8TPAzwc8EPxP8TPAzwc8EPxP8TPAzFY2X5x8ufqbP7wd+JviZ
4GeCnwl+JviZ4GeCnwl+JviZ4Wc6sFfO9xs5Xzo+Wc4ffqZm8TO3k/og+Jnh
Z4KfGX4md/EzO0v9EfzM8DPBzww/0xXU9xKpb8pC/U+U+qf24mf+j/iZqtA/
TeJnmo3+Wi39Rc/Rf4+l/wh+ZviZ4GeGnwl+ZviZ4GeGnwl+ZviZ4GeGn8kf
8yVc5gvBzww/003Mp/3iZ4Kf+ZHML4KfGX4m+JnhZ7LEfIwVPzP8zPAzw88M
PzP8zPAzw88MP3Mn8TPPlvnNhzDf4WfehvmfLfOfPyIfzMTP3Iz8GCh+5mTk
S6j4mQOQP8mSPww/c6jkEz9Efr2T/OII5Ju+5Bvri595vuQfT0Y+uko+sv8/
85NDkK9fSb6yAvmrIX7mQORzsOQzz0N+O0l+M/zM8DN/RP5PlvznGPhgpfiA
/4If/hI/8EfxM+uILzgB/pgp/uAy+MRSfMKJ8Mth8QuPgm/ei2/YG/7xFv/w
c/gIfuZx8BP8zPPgq1viK54Ffw0Xf7EvfPZQfMY9xc9sJ37jMfCdg/iO78J/
8DN3vi4+3Co+5Db48YD4kUfAl4biS1bAn6HiT94AnzaKTzkCfj0rfmUL+La7
+JbPw7/64l+Gnxl+5kb7yCq/T7cVS8XPfET8TH3w+5nwdz983uefPueD8Hsk
/v8S+P4lvt9p+P8avv8o7Ad6eL4meX7ywPOnYb9wwvvZhP2jEu/PAPvJbLzf
VvEz2eP9W2O/uYPzGYb9xwjnZ4396ATOty/2p2ycfyn2K/iZN2L/2ov60cd+
9hz1dRn72ynUXyb2u76oz0jsf4T6fYX9UA/1nY798RHqPwj75UD0RzX2z3+h
fxqwnwahvwZhf+2J/tuC/dYV/emN/feK+JlPYD8ejf5eh/3ZH/1vif3aHfOh
M/ZvS8yPU9jPDTBfPu/vXd1l/qzBfu+D+QQ/UxjmVxjuB7LEz1yJ+4Oj4md+
J/ORysTPvAT3D/AzB+J+Qon52ix+pjGYvw9wv/H7WJnP7XH/sV38zKdxP9Jm
LfMdfib4mY1xv7IhXfLhOO5fApskP+BnKkG+wM8EP1MA7ncWip8Jfib4mTbi
fkiBfDuP+6MY5J8b7pfMKyUfL+H+qQD5eQj3U7HI1ye4v1Ihf4vFz1SEfIaf
CX4m+JngZ9qM+zNj8TMFi5+pj/iZ4GeCnykJ93PT4Qv4meBn6oT7PVv4BH4m
+JngZ4KfCX4m+JkMcL/4BXwEPxP8TPAzwc8EPxP8TPAzw88UgvvPQPgNfmb4
meBnhp9pIu5X4+BD+JnhZxrzWO5nqxzEl/Azw88EPzP8TAa4/90Pv8LPDD8T
/MzwM8HPDD/TfwHs2+Lj
     "]], 
    {Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxV2HtczfcfB/AmWSmnE49cwuQyYzWWYah5f9zva+6RSoUotpTrzKXctWyr
Hilz/8ltm1xjsd/7Y24LhVwiuS2EhsSpdDu//c771R/5xx/ncTrnfD/vz+v1
/HxaB30zamodKyur6e9ZWf3//59HdE2ft8TMrfrtj1sb+c/JzIRWAV6Lzexb
3NA6/dwh/ubelGmxC83c/Y+ypOqzf3Lvzd83C40085j8K6EdP7rEx1d98CY7
1Mwvhoa0cDqdzU42SVv+CjBzmEmVNZ6dwxk5/mXDRpl58cLivMEt8/hOfmoD
/77/vj9k0amdwQ+4brd1Law+NfPWZQML/I79zRs9EuM/a25mc+TisO12j9nK
2q5hubWZR796XKImFvDTritCxj6vZl5kM9qw9xk/jn0dPyirmgfbnZx1x1TI
Hdr5ns9OrebwHXcmfatectRBDny3vpo7Rd874N+/iE0d84v/CKvmK9Onz/MM
ec05Sc17tR1YzW2+T7xyck0xuw12ae/+QTWfjrB3v7TnDa/tfvD6nTdVnHO5
X8PR59/ytAcJcd3OV/GuV+PcPB+ZeESgyx2vpCp2/vMIfW0u4THFr8ebplVx
iP/DnjeblnHlhbsPgj6r4sT7n3Tw+/Qdp4dOXbS2qpJHzP2694sB5ezz1cqJ
s85Wsu+a33LCJ1SwT3vfew1jKnn2lTvzs0MruWpGVvySLyvZqefizMqFVbwp
oVvXo46V3GzuqMO5q6p5TWbpzhNZFRz7gdlj/E9m3ufuVpoYU8GzW9/U+4db
6ZyEziHDB1Zwy83XVs68bKXtOg2c9LC6nO3HVh/N/eo9nbz6w+m+R8tZZazu
+erKe9oUum6gnlHOQ9smNtrmXUd/GnI2z7lFOS9Jsg/Ov1RHX/9gQM+gS+/Y
f8ew4NTB1vrg5Jbxv3z7jptWV80s/9Naz3WOGVLW/h1fCb5cku5ZV3e3n5v/
5dUyDnzSObHgUF29f+8zQ9rCMg5+YbCa38FGq6TkbV1dy7hueoLd5E022i/Q
O/7qmVI2T7+9J9lQT6e2mPJ+QkgpHwhKNrksraft3D36Lrct5VK3go53XtTT
Y52X/rZrdwl7rs3dcXXi+3rqytc3bQaU8PknXg9NZ9/XdVaHf7PngYnbl3VZ
R51t9Xfv1g9N/NbE1tH5IbsSbXXJ6Jd+OQ1N/GGf5qFtKm11fb1VR+59y7kP
X+z6JcBORyRH74vs/ZaHVIz27XXKTu/y3xZ5/+obHlDnXOE51/p6RKtV8Rz8
hrd9dP3RkCX19U9zf97W4m0xf9H4RMWJ2/X1mSbzvc3RxWy10mRo/Jm97uTo
ERFuLOZpP11oP3Kdvc7Zfqh0wabXbMq5NXfafXsdVmVd2Pqj1/wJbZng3cVB
ux/YEDHnQBFvDa2caLPcQTc2x19e2KOIiy/+3in6qoOOsuzfV7xxkPkot2yg
w9yatFq59iX/GJxdfSykgV4xaWOBR9wLDiiJ6T81tYHeQU5+Pyb9wxNHDCs6
9baB3pCRU3J4UyF/cWpq8l+fG/TuwkyfA1ues/FAts2cBQadvvTyyOQtz7j5
9fiPOc2gY/M65EZvespORc3cU4oN2tvNtmFUUgFnnk/xb+3uqK+nFNKeuCfc
JyBlYOdgR93wmsNlh5jH7DK/QfKFDY764LO/RpyOesQXVKrnqwxH/Siy3swH
8/J5Qb91A5LfOWr3sUnvFoT+zUO7xS4NamTU18ZsebR90kPe3GLk7GMdjPrh
4PzPw0c84A2xPbIyvIy6uEFEl+KF93hXQZxNkrdRO4Xv/OE/4/J4d0TJVtdA
ozaEdO3WyiOXh6b4UdBsoz5Z4Vz1g90tnhLed6vvMqM+29b6ueuDGxwVeyzB
fr1RR7Vp3a7qyDUekrXUMHujUV+s3mHyXnOVG4W1dY5JMeoje7PXrz2Sxd29
rS/6pBp1wnfkaRh3gV0DQ2fePmbUBz0PdFhpOssDzm7ydmCjDm48+PiA+FMc
7fL4UdEZo3bYeCj3y4B0Lty/NW1VhvHfeWqXaZ14kPv92m9G5iWjvp+9ddLh
xO3cwzP0xJkso7YybZiQNTnXq4ll/xo15Vhep+54PTLA8n4ivD872fL3qQh/
f698Pq3A50/0snw/6ofv136x5ftTG3z/evssv4+64feFmy2/n4z4/ZnyfKg/
ns+KdpbnR0vw/IZWWp4vBeP5Bsrzp0F4/k9kfWg71qeZwbJ+tBPr13uIZX3p
B6xvo7GW9adkrP8smQ8agvl4LvNDszA/p2W+6BLmyyDzR80xfzdkPqkv5nO5
zC9lYH7nyHxTc8x3u2WW+af6mP8zsj+oPvZHruwf6oL984vsLxqP/XVI9h8N
wv6bL/uT4rA/j8r+pVjsXxfZ31SI/e0m+582Yv8jH8gd+VAl+UH3kB89JF8o
CPlyVfKHyldI/iCfaBjy6SvJL9qB/Lol+UYuyLflkn/0BfKvk+QjpSMfHcdY
8pMMyM9EyVcqjJJ8bSr5Swbk7zLJZzqCfJ4h+U3tkd9NJN/pKfL9lOQ/7UL+
R0g/0N/oh7HSH/Tmd+mPNOkX8kO/9Jb+IV/0zzrpJ/oV/XRY+ovaor/uS7/R
EPRbT+k/CkP/vZV+pBHox8PSn9QM/dlI+pVMY6Rf86V/yR79u1/6mcLQzzHS
37QI/b1b+p0q50i/24Ra+p9yekj/B4oPqDt84C9+IDf44bj4ggbBF3YXLf6g
QPhjvPiEAuCTAPELnTwlfgkW39AO+Ab+oWz4x118RHvgozzxE7nATyXiK0qF
r5aKv6gF/NVZfEYz4LOn4jd6Zit+KxDfURp8B//RSPhvs/iQbOaID+uJH2kB
/HhLfEnB8OU58SfNgz8bik/JFj6FX6kP/EriW/oOvo0U/9J/T4p/L4uPKfi1
+Bh+JvjZC34m+JngZ4KfCX4m+JlqPh9+JviZ4GeCnwl+JviZ4GeCn4nl9xP8
TPAz1Tw/+JngZ4KfCX4m+JngZ4KfCX4m+JneYn3zZH3pOta/l6w/fYL5uCHz
QTXzAz8T/EzwM3lj/gziZ4KfCX4m+JngZzqB+R4u800TMP9jZP5pHPbHNNkf
VC1+JlfxMyVgf7mJn2kV9l+S7D+Cnwl+VvAzwc8Kfib4WcHPBD8r+JngZwU/
E/ysspEvvpIvCn4m+FmFI5+yJJ9UV+RXkOSXgp8JflbwM8HPKgD5CD8r+Jng
ZwU/E/ys4GeCnxX8TPCzKl0l+d1S8lutRr7XET+rMvEztZH8Vw7ohzzpB7UA
/TFa+kPBzzRE+kWNQ//slv5RceinPtJP6jT6q0r6S3VEv8HP6gH6r1T6T01G
P3pIPypX9Gey9Keqj359Lv2qQtC/SdK/amTtflZh6G8f6W8FPxP8rLag/72k
/9V2+AB+VtfFz9Ra/KDmwhcO4gvlD39cEH+o/No+UeXZ4hdH8YtKgW8yxDfq
CvwzT/yjmtf2kTotfqafxU/KJH4m+FldEz9TivhLucFnKeIz9SH8Nlj8ph6J
nwl+VmfEz7RU/KdGwoeDxIcqR/xMzuJHlSZ+ph7iS1W5SPzZTPyp9oufqb/4
VE2GX5eJX9UO8TO9FN+qIj/xrxL/KviZ4GdlhX9Nxc/K54b4uhdeD6ztb3W3
ts/VKPg9Cp+/06uW75Wv+JnhZzV8X63zgRovfmZH/P4KnC/64vnAz1zz/FzE
zxyE5xuC88twPP88nG92Yn1mi595C9YPfuYYrO/H4meOw/pH4HxVMx8FOH+F
Y37u4nx2EvPlhvObM+bvOc53PTCfC3H+05jfNTgf2mK+G4uf2Yj5L8b5sipV
9kc2zp/ws9qJ86kP9tc1nF8V9t9GnG9XYX8+w/k3Avu3Kc7HFdjffXB+jsb+
n4nzdSfkwzOcv18gP3rifD4Z+XKh9vldpeB874l88sH5fzvy6zLuB1yRb7G4
P+iK/EM+8jXkI/zM9sjPWNxP1OSrE+4vmiJ/Y3C/kYp8nor7Dw/ktxPuR24i
3+Fnhp/VLNyvPEc/TMX9S674WR3H/cwk9Av8zPCzWov7nePoJ/iZ4Wd1G/dD
o9Fv7rg/ikb/WYXJ/ZJCP+7B/VN79Gcz3E+9Fj+ru7i/ckL/puF+awL6GX5m
+JngZ4afyVb8zMXiZ5qC+7Xe8AH8zPAzpeF+zhu+gJ8ZfqaJuN8bA5/Azww/
E/zM8HONfxh+pk64X0yFj+Bnhp8Jfmb4meBnhp8Jfmb4ucZvPAp+g58Zfq7x
H8PPBD9zAXwIPzP8XONLfjhNfAk/M/xM8DPDzzV+5XPwK/zM8DPBzww/E/zM
8DP9DwfFoHM=
      "]]}}, 
   {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
    {RGBColor[0, 0, 1], Thickness[Large]}, 
    {PointSize[Large], FaceForm[None], 
     {GrayLevel[0.5], Dashing[{Small, Small}], LineBox[{{-1.5, 0}, {1.5, 0}}],
       LineBox[{{0, -1}, {0, 1}}], 
      {GrayLevel[0], PointBox[{0, 0}]}}, 
     {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
      PolygonBox[{{1.4095389311788624`, 0.34202014332566916`}, {
       0.45108693133427213`, -0.9537110161840732}, {-1.4825275309807053`, 
       0.1521871945032789}}], 
      PointBox[{{1.4095389311788624`, 0.34202014332566916`}, {
       0.45108693133427213`, -0.9537110161840732}, {-1.4825275309807053`, 
       0.1521871945032789}}]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], 
      PointBox[{0.30542292639874086`, -0.2607778980496586}], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->
         16], {0.30542292639874086`, -0.2607778980496586}, {-1.5, 0.75}]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], Dashing[{Small, Small}], 
      LineBox[{{1.4095389311788624`, 0.34202014332566916`}, {
       0.30542292639874086`, -0.2607778980496586}}], 
      LineBox[{{0.45108693133427213`, -0.9537110161840732}, {
       0.30542292639874086`, -0.2607778980496586}}], 
      LineBox[{{-1.4825275309807053`, 0.1521871945032789}, {
       0.30542292639874086`, -0.2607778980496586}}]}}}}]], "Output",
 CellChangeTimes->{{3.787588793689288*^9, 3.7875888384794817`*^9}, 
   3.78758889314631*^9, {3.7875904205886993`*^9, 3.7875904248622684`*^9}, 
   3.7880756029527884`*^9, 3.7881668279985156`*^9, 3.7897221279919715`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{"\"\<0019_excenter_locus\>\"", ",", "excenterLocusPlot"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.786269874455552*^9, 3.7862698806250467`*^9}, {
  3.786270003215742*^9, 3.7862700105202084`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{"\"\<0020_incenter_locus\>\"", ",", "incenterLocusPlot"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.78025787498057*^9, 3.780257886010412*^9}, {
  3.7862610547857165`*^9, 3.7862610579858885`*^9}, {3.786269839143426*^9, 
  3.786269843607734*^9}, {3.786270038911316*^9, 3.7862700452812524`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"incenterLocusQuad", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Show", "[", 
             RowBox[{"#", ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], "}"}], "&"}], 
          "/@", 
          RowBox[{"{", 
           RowBox[{
           "singleOrbitPlot", ",", "threeOrbitsPlot", ",", 
            "incenterLocusPlotClean"}], "}"}]}], ",", 
         RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}], ",", 
       RowBox[{"Show", "[", 
        RowBox[{"excenterLocusPlot", ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "4.5"}], ",", "4.5"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], "}"}], "}"}], 
    ",", 
    RowBox[{"Spacings", "\[Rule]", "3"}], ",", 
    RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.787587686525782*^9, 3.7875877230141335`*^9}, {
  3.787587756991682*^9, 3.787587757294872*^9}, {3.7875878212706804`*^9, 
  3.787587896815096*^9}, {3.787587995454661*^9, 3.7875884406941957`*^9}, {
  3.7875884953340406`*^9, 3.787588517717258*^9}, {3.787588851533592*^9, 
  3.7875888786859894`*^9}, {3.7875890006213417`*^9, 3.787589004916995*^9}, {
  3.787589341342785*^9, 3.7875893537326727`*^9}, {3.787673406141657*^9, 
  3.7876734085821*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         GraphicsBox[{
           {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
            {RGBColor[0, 0, 1], Thickness[Large]}, 
            {PointSize[Large], FaceForm[None], 
             {GrayLevel[0.5], Dashing[{Small, Small}], 
              LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}], 
              {GrayLevel[0], PointBox[{0, 0}]}}, 
             {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
              PolygonBox[{{1.3594616805549748`, 0.4226182617406997}, {
               0.7111069087873177, -0.8804864726766917}, \
{-1.4920187064290165`, 0.10302142099989509`}}], 
              PointBox[{{1.3594616805549748`, 0.4226182617406997}, {
               0.7111069087873177, -0.8804864726766917}, \
{-1.4920187064290165`, 0.10302142099989509`}}], {InsetBox[
                StyleBox[
                 SubscriptBox["\<\"P\"\>", "1"],
                 StripOnInput->False,
                 
                 FontSize->
                  20], {1.523349516357965, 0.5372514911107746}, {0, 0}], 
               InsetBox[
                StyleBox[
                 SubscriptBox["\<\"P\"\>", "2"],
                 StripOnInput->False,
                 
                 FontSize->
                  20], {0.7786752096465699, -1.06872707594547}, {0, 0}], 
               InsetBox[
                StyleBox[
                 SubscriptBox["\<\"P\"\>", "3"],
                 StripOnInput->False,
                 
                 FontSize->
                  20], {-1.689647903163859, 0.13372485074220497`}, {0, 0}]}}, 
             {RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0], 
              PointBox[{0.4673450887520413, -0.2013829363465682}], InsetBox[
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)\"\>",
                StripOnInput->False,
                
                FontSize->
                 20], {0.4673450887520413, -0.2013829363465682}, {0, -1.5}]}, 
             {RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
              Dashing[{Small, Small}], 
              LineBox[{{1.3594616805549748`, 0.4226182617406997}, {
               0.4673450887520413, -0.2013829363465682}}], 
              LineBox[{{0.7111069087873177, -0.8804864726766917}, {
               0.4673450887520413, -0.2013829363465682}}], 
              LineBox[{{-1.4920187064290165`, 0.10302142099989509`}, {
               0.4673450887520413, -0.2013829363465682}}]}, 
             {GrayLevel[0], Thickness[Large], 
              ArrowBox[{{1.3594616805549748`, 0.4226182617406997}, {
               1.031686008948995, 0.19335180300055}}], 
              ArrowBox[{{0.7111069087873177, -0.8804864726766917}, {
               0.5759703070688136, -0.504005266139135}}], 
              ArrowBox[{{-1.4920187064290165`, 
               0.10302142099989509`}, {-1.0967603129593317`, 
               0.04161456151527529}}]}}}},
          ImageSize->400,
          PlotRange->{{-2, 2}, {-1.2, 1.2}}]},
        {
         GraphicsBox[{
           {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
            {RGBColor[0, 0, 1], Thickness[0.0075]}, 
            {PointSize[Large], FaceForm[None], 
             {GrayLevel[0.5], Dashing[{Small, Small}], 
              LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}], 
              {GrayLevel[0], PointBox[{0, 0}]}}, 
             {EdgeForm[{RGBColor[0, 0, 1], Thickness[0.0075]}], 
              PolygonBox[{{1.4095389311788624`, 0.34202014332566916`}, {
               0.45108693133427213`, -0.9537110161840732}, \
{-1.4825275309807053`, 0.1521871945032789}}], 
              PointBox[{{1.4095389311788624`, 0.34202014332566916`}, {
               1.299038105676658, 0.5000000000000001}, {1.149066664678467, 
               0.6427876096865394}}]}, 
             {RGBColor[0.6, 0.4, 0.2], Thickness[Large], 
              LineBox[CompressedData["
1:eJxV2HlYzfkXB/AwkWEUjSGibFmSmbErOimZIgyyjG0oEqPsSRKyREkTY7KF
ohlUltIgzEldqdyaVCKFFpS03HuzpeJn7nn//pi/PJ6ebvf7/Zxz3q/P6eGy
ctqS5jo6Ou7NdHT+/TcuSFGhN0HDe4em5mTMKBjt2N5iVtteGh4SW7ClbuEJ
erAwWL3pgpqT3FytRrS5QEedQvssq1Px3HOv7158+hcVmL3ctb6ylrMt8z7G
JN8kZerbCTN9qtmwpip3q14yBZQaW889W8n99uwJ+PaRgiw7WXB4UDm7F4Xv
aj7lDuk2Kza2G/aM9fW67xjtmk7FaZ1aB1wr5gTb584u39yl6riur/ScH/GU
Li06XV6upP1JS8L9Buay7rGrLQ4uzqQwm/3xURZpnOqt71TXOovCz53yvxV5
maNeKXxuLMqiy4N6DhquPESD6WnukrVZ1N/xSWEHDZP38WnFQeOzaJjHqcdL
LJW0oPOzXmdLM8kg5sP4gIpcOrHNpqZkcib9cH1x58w5BXRk5PJepaFKKjtb
Zui65gmtv5m8Kf3SXco2NFSfDiuhXXrrC3pezqDCPq90F6WXUdvA2riy8HRy
sWyI9f3nOVVYn2q/em0aefYZu9I1upy8On3oe2bkHcpf6dwiccFL0hxK+VCh
uk36ba1OObyqJK/NVs17nlBQtpH+wMppVRQ2Y0JDoX0K6RocddgSVk1NGw+4
2pfforfKHiXPEmvIKfKI05idSZQze4559d+1ZNvYNzbR9m963+GtW+w0FVVb
9vHR9blOs+rH3qu5oqIRp31KY+Ku0pjfN8zVM1DTT07dQs/UJJCtS8eTN+aq
KfBSv2OR38ZTXm6DacpRNc07UhbSfMNFilaNnZ+W/fn/GvsONUHRFDfb/BvP
BjWdUsW1bbT8g4Zuibg80VhDPu9CBzxsPEmzF+ooaoZoyNPNt0VGVBgF+fDG
QlsNTe9m97F3fSAZB5yyC3bU0MT8Vj33fvqFhqqyZ21w0JDLqZFqY8uN3MPB
xU7XRkPx5Y2HuxWGcEhe7/VHv9PQO/eyg0bzDrMy/mlyWBcNPTUPvv+nUwQr
rbpVTP2oJpMDZva2OVG8fE5RU9ciNS2bMbX1IetzPGF0SaXtZTUdevB43LrQ
8zzpcZiyXYCarM+fXzRrySXeFhQ1O8VZTbsdN1R8vT6eLQpcR5zspibXbU2D
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
+Q==
               "]]}, {InsetBox[
               StyleBox["\<\"P\"\>",
                StripOnInput->False,
                
                FontSize->
                 20], {1.5499726468924968`, 0.41869068193641645`}, {0, 0}], 
              InsetBox[
               StyleBox["\<\"P'\"\>",
                StripOnInput->False,
                
                FontSize->
                 20], {1.4199867370396106`, 0.6047445873132765}, {0, 0}], 
              InsetBox[
               StyleBox["\<\"P''\"\>",
                StripOnInput->False,
                
                FontSize->
                 20], {1.248597363542975, 0.7680618687485775}, {0, 0}]}, {}, {
              {RGBColor[0, 
                NCache[
                 Rational[2, 3], 0.6666666666666666], 0], InsetBox[
                StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)\"\>",
                 StripOnInput->False,
                 
                 FontSize->
                  20], {0.30542292639874086`, -0.2607778980496586}, \
{-1.1, 1.1}], InsetBox[
                StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)'\"\>",
                 StripOnInput->False,
                 
                 FontSize->
                  20], {0.5667693891484438, -0.13416331091005987`}, \
{-1.25, 0.5}], InsetBox[
                
                StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \
\\(1\\)]\\)''\"\>",
                 StripOnInput->False,
                 
                 FontSize->
                  20], {0.6349761031542811, -0.00427219116345908}, \
{-1, -1.5}]}, 
              {RGBColor[0, 
                NCache[
                 Rational[2, 3], 0.6666666666666666], 0], 
               PointBox[{{0.30542292639874086`, -0.2607778980496586}, {
                0.5667693891484438, -0.13416331091005987`}, {
                0.6349761031542811, -0.00427219116345908}}]}}, 
             {EdgeForm[{RGBColor[0, 0, 1], Thickness[0.0075], 
              Dashing[{Small, Small}]}], 
              PolygonBox[{{1.299038105676658, 0.5000000000000001}, {
               0.8995352945247652, -0.8002322590360164}, \
{-1.4969411981678697`, 0.06382980574323183}}], 
              PolygonBox[{{1.149066664678467, 0.6427876096865394}, {
               1.1369992214601714`, -0.6522551547086338}, {-1.49999717808049, 
               0.0019397308594383267`}}]}}}},
          ImageSize->400,
          PlotRange->{{-2, 2}, {-1.2, 1.2}}]},
        {
         GraphicsBox[{
           {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
            {RGBColor[0, 0, 1], Thickness[Large]}, 
            {PointSize[Large], FaceForm[None], 
             {GrayLevel[0.5], Dashing[{Small, Small}], 
              LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}], 
              {GrayLevel[0], PointBox[{0, 0}]}}, 
             {RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
              LineBox[CompressedData["
1:eJxV2HlczXkXB/CEsdRkmiYVkUqMh5Bd4iSMZVRkG4ZIaIghaxSV0ihLSChL
WqwlS6bIzRkNldJ2U9qXW/NMhRHzxCjyPM89n/lj/uqPXrfu7/c953ze52u6
cqPTak0NDQ23Dhoa//8Z0pz62M6pnhN2Dt5z2L9W8fDtuqmvB9RzolbDsFNn
YnhlpU5y0MU6dunXd5+mWyLvuDrsm6NFKrYset1+5qSCu4wYUtr/Xi1fj51q
Eh+exkdHz3n6w4oavjaooWtUcDrnp2UlpURW8urn7mvvfZHFux5WNC8eVMae
86Z9/atZDmtbOyTobi1mvWCLC1qKPDYyfHTbNkzJd2f22PbxZT63zdfc8dI2
h/c0uxy+kVbAcwaP66Syf8QHXOaZVTor+ZlOYMbKyhQ+FhfUY1y6kk2jBh5N
eXmRHfXuPdH/qOTBaSf3Hz10gHx+co816VrIH3Z75S3nm6QXM3K9wQsl77Jd
kTp/GZNdyI9JV64p+Xy5+4i8vumkMbdhlP1cJa+3aJ+nMeQJrXY1W2hZXsBJ
idpaY5vyaV3S4pd9HAvYZ4R+hPbBQlpu0ZgRdiOf7e+YNo34UEQOSUWOCZr5
bJz3oLJ6Qgnd0tFeaH8kl681D15+aXYZ2Z/9y0r5WQ4XL5/8+9LhFTTaZ+t4
8w3Z/OWdrivaGirp96VZe5vSH3Nu3bO1xzyrqa3JuNXJIJNtnOu1zmyqoT3f
eSp6uqRztUfqQJ8va+nZrAeRBy8+5M4VFUEt0bV0+eO4+NuNaVwVWHL4vZmK
cqYuWj9lyANO4dWmXqEqGmFv1Pu76vtcUh1wzrlFRfMjV/3stO4e700zsPWe
WUevKkdMOdCWzKd2pj2PPFJHDb4VI389fpv3KYd8G5RdR17J7tlbx97kjOYo
wxetdRQQX93j3uM4vq7KC9lkUk+rto0ZrWNzgU87jH+bOL6eHu/5PsAm5CwX
jXhtNXNWPY1709g3ufwIP7ENd7s7t56e1U4NS/bx4AkrtkcEzPnf53MDLWP3
+1Bea9Uss+n1pK07yfdNQyil5rl8oTmmnrLtlraZJEaScZ8Ky4N96mn4juas
gsgLVO+8uK9Zex39Mm5TsfKbOOo4Q7eXSUkd+RcpO5u43aBDA0aGlsTVUfHF
7nENvRJpS+nGq+d21lHJ4l7W1+7/TB1OrzytmFxHmsZhZkuc7lDraSPTnZ3q
6DOVglRFKcRT9At7pqlox+noGpuZqRQcZub1dJeKTmzyebsqnmndU+9VL4eq
KOSvp1bxn34hjr0QG15VS+83WSZqmaZRZMlKZ53gWuqjcfxzJ+tfSTfV4dNu
q1r67nlpN79vH5JtmaunYVENbTaf9Sli/iPyH97gobWthpSbmxOiF6TTMc+e
Xnt1a6jvfWOL0w4ZdH+4wt1hQTVpm488/xNl0gFzo3Y7vyo6ueWDl/vXj2lB
zJIBwy5V0nrLzH6zumXRnxa5K5ZmVND+xVktA1RZ1Gph5a6rKqdpzqMXdk7M
pgR71e5j78rI5Zvo/Q1eT6gla6evadcyqspYe6fQJodajYdZt+uVkmnJ2ebH
LTmUYrtuz5reJWRnutww92IuFSwoXnCi7zOaeGJes8oxj65cm9o/s08xxeRo
6Wq9zqOh5y9njzIqorZuPbf1n5ZPu/x+fKKn+5SCvu7lkncon96ErnM93bmQ
9oe7fv+TMp9sik5e0HhXQBW5V53t9QpocWtp+I7f8ik+SsvJbE4BTYqui1oT
nUfDF5zr1iWogPy0I99lb80hru4//UNqAXWvK9LYa5dNc6c/StF8VUAO2od7
NWk9phkvsjr2NlbSjRP7Fq0qSKffgtbenDZNSa3x16MdQx/SLs/dU/zXKclo
YGZ1N6c08t8wbfDTA0qa4D26e/Pnv5B+8JdPxl1R0sU/ymIVh+/RhS4vvG6m
KWmVpfHWFR+T6NW0/gGTSpQUWHNrmd8Pt+jc95WmNY1KSmnrFHo5Ko66x3gF
nninpL0nExW9fowm0y6dS1w6FJIyxijHd+MxMjFcb2XXpZB+dz1ksIaTbZYM
TY8e262QvKPVv2cD/B6fZyN8Hn+fDfH3veX/81n8/0ny/bgB32+HfH++iu8/
SJ6P/36+Pwaon5+34vnr5f3wBrwfH3l/XI73ZyLvl6fi/T5Xqd8/z8H7ny3n
w8k4nzFyfjwI5zdRzpdP4Xwt5Pz5Gc6/VOqDfVAfm6V+2Bv1M1zqi9tRX1el
/jgB9fdU6pNtUJ8XpX55NOq3Ux91ffMo1HeW1D/fR/1fl/7gZegPlfQPD0H/
vJD+4gPor8HSfzwB/Rco/cnh6M+r0r/cZCb9e1T6m03R377S/5yD/p8k84G3
Yz68VajnB+tjfhyX+cJfYb6kyPzhN5g/W2Q+8U3Mp4Myv/gu5leIzDeOipD5
1iTzj9NrZf5VRqjnI9v2lvm4SOYnO2N+esh8ZXfM1xfT1fOXNTF/M2U+sxXm
c7uxen4zbZf5fVnmO0dMlvmukPnPlT1k/htKPvDidMmHBMkPDv+35Eee5Auf
R76ESf5wBvJnl+QTZ26XfCqU/OL2OMkvN8k3LkO+bZf8Ywc/yT9/yUcuRT4e
lPxknfOSn0clXzka+XpX8pffIH9by9X5zPHI5zzJb65Bfn8l+c7nkO8zJP95
1HPJ/4BktQ+4zzLxwSLxA7vCD1fFFzwXvvDMVfuD8+CPkeITngufuFmp/cI7
4Zfb4ht2g28cxT+8Cv5JL1P7iDXho/ek9hPbwk/m3mpfsTZ8lXNH7S/2gr8+
ic9oBnx2XlftN/KA334Q31EAfNck/qNd8B98SInw4RLxI1UEiR9Xiy/pBHxZ
Jv4kV/jzlviUpsOn48WvpAO/uotvaS58u178S/km4t9M8TH5dxcfw88EP9vA
zwQ/E/xM8DPBzwQ/E/xM8DPBzwQ/E/xM8DPBzwQ/U/F4ef5h4mf6+/3AzwQ/
E/xM8DPBzwQ/E/xM8DPBzwQ/M/xM+/fI+X4l50vHJsv5w8/UIn7mDlIfBD8z
/EzwM8PP5CF+ZlepP4KfGX4m+JnhZ7qE+l4i9U3ZqP+JUv/UUfzM/xE/UzX6
p1n8TLPRX2ukv6gR/fdI+o/gZ4afCX5m+JngZ4afCX5m+JngZ4afCX5m+JkC
MV8iZb4Q/MzwM93AfNonfib4mR/K/CL4meFngp8ZfiZrzMd48TPDzww/M/zM
8DPDzww/M/zM8DN3ET/zbJnffBDzHX7mbZj/OTL/+SPywUz8zC3Ij4HiZ05F
voSLnzkI+ZMq+cPwM4dLPvED5Nc7yS+ORr7pS76xvviZ50v+8WTko7vkIwf+
Mz85DPn6heQrK5C/GuJnDkY+h0o+8zzkt4vkN8PPDD/zR+T/ZMl/joMPVooP
+E/44U/xA38UP7OO+IKT4Y+Z4g8uh0+sxSecAr8cEr/wSPjmvfiGfeEfX/EP
N8JH8DOPg5/gZ54HX90UX/Es+GuY+Iv94bMH4jPuLX5mB/Ebj4HvnMR3nAT/
wc/c9Zr4cKv4kNvhx/3iRx4OXxqKL1kBf4aLP3kDfPpSfMrR8OsZ8SuPhm97
im/5HPyrL/5l+JnhZ37pGFsd8OmWYqn4mQ+Ln6kffj8T/u6Pz/v90+d8AH6P
xf9fAt+/wPc7Bf9fwfcfif1AD8/XLM9Pnnj+DOwXLng/m7B/VOH9GWA/mY33
2yZ+Jke8f1vsN7dxPkOx/xjh/GyxHx3H+Zpjf8rB+Zdhv4KfeSP2rz2oH33s
Z42orwvY306i/rKw35mjPmOx/xHq9xX2Qz3Udyb2x4eo/xDslwPRHzXYP/+F
/mnCfhqC/hqE/bU3+m8L9lt39Kcv9t9L4mc+jv14FPp7LfbnQPS/NfZrD8yH
rti/rTE/TmI/N8B8+Xt/7+4h88cN+70f5hP8TBGYXxG4H8gWP3MV7g+OiJ/5
ncxHKhc/8xLcP8DPHIz7CSXma4v4mcZg/t7H/cZvY2U+d8T9x3bxM5/C/Ui7
rcx3+JngZzbG/cqGTMmHY7h/CW6W/ICfqRT5Aj8T/ExBuN9ZKH4m+JngZ9qI
+yEF8u0c7o/ikH/rcb9kVSX5GIP7p0Lk50HcT8UjX5/g/kqF/C0RP1Mx8hl+
JviZ4GeCn2kz7s+Mxc8UKn6mfuJngp8JfqZ7uJ+bDl/AzwQ/Uxfc79nDJ/Az
wc8EPxP8TPAzwc9kgPvFz+Aj+JngZ4KfCX4m+JngZ4KfGX6mMNx/BsNv8DPD
zwQ/M/xME3G/mgAfws8MP9OYR3I/W+0kvoSfGX4m+JnhZzLA/e8++BV+ZviZ
4GeGn+m/5DjaAg==
               "]]}, 
             {RGBColor[
              0.7411764705882353, 0.7176470588235294, 0.4196078431372549], 
              Thickness[Large], LineBox[CompressedData["
1:eJxV2HlYzfkXB/AwkWEUjSGibFmSmbErOimZIgyyjG0oEqPsSRKyREkTY7KF
ohlUltIgzEldqdyaVCKFFpS03HuzpeJn7nn//pi/PJ6ebvf7/Zxz3q/P6eGy
ctqS5jo6Ou7NdHT+/TcuSFGhN0HDe4em5mTMKBjt2N5iVtteGh4SW7ClbuEJ
erAwWL3pgpqT3FytRrS5QEedQvssq1Px3HOv7158+hcVmL3ctb6ylrMt8z7G
JN8kZerbCTN9qtmwpip3q14yBZQaW889W8n99uwJ+PaRgiw7WXB4UDm7F4Xv
aj7lDuk2Kza2G/aM9fW67xjtmk7FaZ1aB1wr5gTb584u39yl6riur/ScH/GU
Li06XV6upP1JS8L9Buay7rGrLQ4uzqQwm/3xURZpnOqt71TXOovCz53yvxV5
maNeKXxuLMqiy4N6DhquPESD6WnukrVZ1N/xSWEHDZP38WnFQeOzaJjHqcdL
LJW0oPOzXmdLM8kg5sP4gIpcOrHNpqZkcib9cH1x58w5BXRk5PJepaFKKjtb
Zui65gmtv5m8Kf3SXco2NFSfDiuhXXrrC3pezqDCPq90F6WXUdvA2riy8HRy
sWyI9f3nOVVYn2q/em0aefYZu9I1upy8On3oe2bkHcpf6dwiccFL0hxK+VCh
uk36ba1OObyqJK/NVs17nlBQtpH+wMppVRQ2Y0JDoX0K6RocddgSVk1NGw+4
2pfforfKHiXPEmvIKfKI05idSZQze4559d+1ZNvYNzbR9m963+GtW+w0FVVb
9vHR9blOs+rH3qu5oqIRp31KY+Ku0pjfN8zVM1DTT07dQs/UJJCtS8eTN+aq
KfBSv2OR38ZTXm6DacpRNc07UhbSfMNFilaNnZ+W/fn/GvsONUHRFDfb/BvP
BjWdUsW1bbT8g4Zuibg80VhDPu9CBzxsPEmzF+ooaoZoyNPNt0VGVBgF+fDG
QlsNTe9m97F3fSAZB5yyC3bU0MT8Vj33fvqFhqqyZ21w0JDLqZFqY8uN3MPB
xU7XRkPx5Y2HuxWGcEhe7/VHv9PQO/eyg0bzDrMy/mlyWBcNPTUPvv+nUwQr
rbpVTP2oJpMDZva2OVG8fE5RU9ciNS2bMbX1IetzPGF0SaXtZTUdevB43LrQ
8zzpcZiyXYCarM+fXzRrySXeFhQ1O8VZTbsdN1R8vT6eLQpcR5zspibXbU2D
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
+Q==
               "]]}}}},
          ImageSize->400,
          PlotRange->{{-2, 2}, {-1.2, 1.2}}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], 
     GraphicsBox[{
       {RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0], PointSize[Large], 
        Thickness[Large], EdgeForm[{RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0], Thickness[Large]}], 
        FaceForm[None], 
        PointBox[{{-1.8496674116814404`, -1.4373610008734705`}, \
{-0.5919388093995908, 4.0080300751792315`}, {
         1.9454466991430635`, -0.6395761842689748}}], 
        PolygonBox[{{-1.8496674116814404`, -1.4373610008734705`}, \
{-0.5919388093995908, 4.0080300751792315`}, {
         1.9454466991430635`, -0.6395761842689748}}], LineBox[CompressedData["
1:eJxV2HlczXkXB/CEsdRkmiYVkbKNxxqyJE7CWEZFtmGIlLUMWSNUSqMsIaEs
kYRKloyomzMaWrXdlPbl1jyTaMQ8MYo8z3PPxx/zV3/0unV/v+855/M+X9OV
Gx1WaWpoaKxtp6Hx/59BTckZNg51HLdz8N4jvjWKR2/XT309oI7jteqHnz57
iVdW6CQERNWyU5/e+zXXxPOO6OHfHStU8dDC121nTym408ghJf2SavhG5FST
2NAUPmYx5+naFdV8fVB954uBqZyXknk3MbyCV71wXZf0VSbvelTetHhQKXvM
m/btb2bZrG1pF6e7tYj1Avtf1lLkspHh4zvWIUq+P7Pbto+Nedw6X3NHo3U2
721yOnIzJZ/nDB7XQWX7mA86zTOrcFTyMx3/tJUViXw8JqDbuFQlm14ceCyx
MYrt9ZKe6H9U8uCUUweOHT5IXj+7Rpp0LuAPezxzl/Mt0rs0ys3gpZJ3Wa9I
nr+MySbop7vXriv5QpnryNzeqaQxt3607Vwlu/Vvm6cx5AmtcjZbOLQsn+/G
a2uNbcij9XcXN/ayz2evkfph2ocKaHn/52khN/PY9p5pw8gPhWR3t9A+TjOP
jXMfVlRNKKbbOtoLbY/m8PWmwcuvzC4l23N/myu/yOai5ZP/WDqinCy8to7v
uyGLv77XeUVrfQX9sTRzX0NqBufUPlt33KOKWhuMWxwM0tnKsU7r7KZq2vuD
h6K7UypXuScP9Pq6hp7Nehh+KOoRdywvD2iOqKGrH8fF3nmewpX+xUfem6ko
e+oitylDHnIirzL1DFbRSFujnj9UPeDiKr/zjs0qmh/u8ovD+iTel2JgvXtm
Lb2qGDnlYGsCn96Z8iL8aC3Ve5eP+u3EHd6vHPJ9QFYteSa4Zm0de4vTmi4a
vmypJb/Yqm5JGTF8Q5UbtMmkjly2jbHQsbrMZ+zGv40fX0cZe3/0swo6x4Uj
X5vPnFVH4948751QdpSfWIeuuT+3jp7VTA1J8HLnCSu2h/nN+d/nc/yHRh7w
otyWyllm0+tIW3eS95v6YErOdfpKc0wdZdksbTWJDyfjXuVDD/WqoxE7mjLz
wy9TnePi3mZttfTruE1Fyu9iqP0M3R4mxbXkW6jsaLLmJh0eMCq4OKaWiqK6
xtT3iKctJRujz++speLFPSyvP/iF2p1ZeUYxuZY0jUPMljjco5YzRqY7O9TS
FyoFqQoTiafoF3RPUdGOMxHVVjOTKTDEzPPpLhWd3OT11iWWaf3T3S6Nw1QU
9PdT89hPvxJHXo4Mrayh95uGxmuZplB48UpHncAa6qVx4ksHy99IN9nu0x7z
GvrhRUkXn+8fkXWps4dhYTVt7jvrU9j8x+Q7ot5da1s1KTc3xUUsSKXjHt09
9+lWU+8Hxv3P2KXRgxEKV7sFVaTdd9SFnymdDvY1arPxqaRTWz54un6bQQsu
LRkw/EoFuQ1N7zOrSyb91T9nxdK0cjqwOLN5gCqTWvqbu+qqymiao8XCjvFZ
FGer2nP8XSk5fRdxoN7zCTVn7vQ27VxKlWnr7hVYZVOL8XDLNr0SMi0+15TR
nE2J1uv3ru5ZTDamyw1zonIof0HRgpO9n9HEk/OaVPa5dO361H7pvYroUraW
rtbrXBp24WrWaKNCau3SfVu/aXm0y+enJ3q6Tyng2x5OuYfz6E3weuczHQvo
QKjzjz8r88iq8NRljXf5VJ4T7Wirl0+LW0pCd/yeR7EXtRzM5uTTpIjai6sj
cmnEgvNdOgXkk492+LusrdnEVf2mf0jOp661hRr7bLJo7vTHiZqv8slO+0iP
Bq0MmvEys31PYyXdPLl/kUt+Kv0esO7WtGlKaom9EWEf/Ih2eeyZ4rteSUYD
06u6OKSQ74Zpg58eVNKE3RZdm778lfQDv34y7pqSov4sjVQcSaLLnV563kpR
kstQ460rPt6lV9P6+U0qVpJ/9e1lPmtv0/kfK0yrnyspsbVD8NWLMdT1kqf/
yXdK2ncqXtHjpwgy7dSx2KldASkvGWV7bzxOJoZu5jadCugP58MGqznBasmw
1IixXQpod4T692yA3+PzbITP4++zIf7+bvn/fA7/f5J8P67H99sh35+j8f0H
yfPx5+f7c4D6+Xkrnr9O3g9vwPvxkvfHZXh/JvJ+eSre7wuV+v3zHLz/2XI+
nIDzGSPnx4NwfhPlfPk0zre/nD8/w/mXSH2wF+pjs9QP70b9jJD64jbUV7TU
H8eh/p5KfbIV6jNK6pctUL8deqnrm0ejvjOl/vkB6v+G9AcvQ3+opH94CPrn
pfQXH0R/DZb+4wnoP3/pTw5Ff0ZL/3KDmfTvMelvNkV/e0v/czb6f5LMB96O
+fBWoZ4frI/5cULmC3+D+ZIo84ffYP5skfnEtzCfDsn84vuYX0Ey3/himMy3
Bpl/nFoj868iTD0f2bqnzMdFMj/ZEfPTXeYru2K+vpyunr+sifmbLvOZzTGf
24zV85tpu8zvqzLfOWyyzHeFzH+u6Cbz31DygRenSj7ESX5w6L8lP3IlX/gC
8iVE8ofTkD+7JJ84fbvkU4HkF7fFSH6tkXzjUuTbdsk/tvOR/POVfOQS5OMh
yU/WuSD5eUzylSOQr/clf/kN8relTJ3PHIt8zpX85mrk9zeS73we+T5D8p9H
v5D890tQ+4B7LRMfLBI/sDP8EC2+4LnwhUeO2h+cC3+MEp/wXPhkjbnaL7wT
frkjvuE18I29+Idd4J/UUrWPWBM+ek9qP7E1/NR3t9pXrA1fZd9T+4s94a9P
4jOaAZ9d0FX7jdzht7XiO/KD7xrEf7QL/oMPKR4+XCJ+pPIA8eMq8SWdhC9L
xZ/kDH/eFp/SdPh0vPiVdOBXV/EtzYVv3cS/lGci/k0XH5NvV/Ex/EzwsxX8
TPAzwc8EPxP8TPAzwc8EPxP8TPAzwc8EPxP8TPAzFY2X5x8ufqbP7wd+JviZ
4GeCnwl+JviZ4GeCnwl+JviZ4Wc6sFfO9xs5Xzo+Wc4ffqZm8TO3k/og+Jnh
Z4KfGX4md/EzO0v9EfzM8DPBzww/0xXU9xKpb8pC/U+U+qf24mf+j/iZqtA/
TeJnmo3+Wi39Rc/Rf4+l/wh+ZviZ4GeGnwl+ZviZ4GeGnwl+ZviZ4GeGn8kf
8yVc5gvBzww/003Mp/3iZ4Kf+ZHML4KfGX4m+JnhZ7LEfIwVPzP8zPAzw88M
PzP8zPAzw88MP3Mn8TPPlvnNhzDf4WfehvmfLfOfPyIfzMTP3Iz8GCh+5mTk
S6j4mQOQP8mSPww/c6jkEz9Efr2T/OII5Ju+5Bvri595vuQfT0Y+uko+sv8/
85NDkK9fSb6yAvmrIX7mQORzsOQzz0N+O0l+M/zM8DN/RP5PlvznGPhgpfiA
/4If/hI/8EfxM+uILzgB/pgp/uAy+MRSfMKJ8Mth8QuPgm/ei2/YG/7xFv/w
c/gIfuZx8BP8zPPgq1viK54Ffw0Xf7EvfPZQfMY9xc9sJ37jMfCdg/iO78J/
8DN3vi4+3Co+5Db48YD4kUfAl4biS1bAn6HiT94AnzaKTzkCfj0rfmUL+La7
+JbPw7/64l+Gnxl+5kb7yCq/T7cVS8XPfET8TH3w+5nwdz983uefPueD8Hsk
/v8S+P4lvt9p+P8avv8o7Ad6eL4meX7ywPOnYb9wwvvZhP2jEu/PAPvJbLzf
VvEz2eP9W2O/uYPzGYb9xwjnZ4396ATOty/2p2ycfyn2K/iZN2L/2ov60cd+
9hz1dRn72ynUXyb2u76oz0jsf4T6fYX9UA/1nY798RHqPwj75UD0RzX2z3+h
fxqwnwahvwZhf+2J/tuC/dYV/emN/feK+JlPYD8ejf5eh/3ZH/1vif3aHfOh
M/ZvS8yPU9jPDTBfPu/vXd1l/qzBfu+D+QQ/UxjmVxjuB7LEz1yJ+4Oj4md+
J/ORysTPvAT3D/AzB+J+Qon52ix+pjGYvw9wv/H7WJnP7XH/sV38zKdxP9Jm
LfMdfib4mY1xv7IhXfLhOO5fApskP+BnKkG+wM8EP1MA7ncWip8Jfib4mTbi
fkiBfDuP+6MY5J8b7pfMKyUfL+H+qQD5eQj3U7HI1ye4v1Ihf4vFz1SEfIaf
CX4m+JngZ9qM+zNj8TMFi5+pj/iZ4GeCnykJ93PT4Qv4meBn6oT7PVv4BH4m
+JngZ4KfCX4m+JkMcL/4BXwEPxP8TPAzwc8EPxP8TPAzw88UgvvPQPgNfmb4
meBnhp9pIu5X4+BD+JnhZxrzWO5nqxzEl/Azw88EPzP8TAa4/90Pv8LPDD8T
/MzwM8HPDD/TfwHs2+Lj
         "]], 
        {Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxV2HtczfcfB/AmWSmnE49cwuQyYzWWYah5f9zva+6RSoUotpTrzKXctWyr
Hilz/8ltm1xjsd/7Y24LhVwiuS2EhsSpdDu//c771R/5xx/ncTrnfD/vz+v1
/HxaB30zamodKyur6e9ZWf3//59HdE2ft8TMrfrtj1sb+c/JzIRWAV6Lzexb
3NA6/dwh/ubelGmxC83c/Y+ypOqzf3Lvzd83C40085j8K6EdP7rEx1d98CY7
1Mwvhoa0cDqdzU42SVv+CjBzmEmVNZ6dwxk5/mXDRpl58cLivMEt8/hOfmoD
/77/vj9k0amdwQ+4brd1Law+NfPWZQML/I79zRs9EuM/a25mc+TisO12j9nK
2q5hubWZR796XKImFvDTritCxj6vZl5kM9qw9xk/jn0dPyirmgfbnZx1x1TI
Hdr5ns9OrebwHXcmfatectRBDny3vpo7Rd874N+/iE0d84v/CKvmK9Onz/MM
ec05Sc17tR1YzW2+T7xyck0xuw12ae/+QTWfjrB3v7TnDa/tfvD6nTdVnHO5
X8PR59/ytAcJcd3OV/GuV+PcPB+ZeESgyx2vpCp2/vMIfW0u4THFr8ebplVx
iP/DnjeblnHlhbsPgj6r4sT7n3Tw+/Qdp4dOXbS2qpJHzP2694sB5ezz1cqJ
s85Wsu+a33LCJ1SwT3vfew1jKnn2lTvzs0MruWpGVvySLyvZqefizMqFVbwp
oVvXo46V3GzuqMO5q6p5TWbpzhNZFRz7gdlj/E9m3ufuVpoYU8GzW9/U+4db
6ZyEziHDB1Zwy83XVs68bKXtOg2c9LC6nO3HVh/N/eo9nbz6w+m+R8tZZazu
+erKe9oUum6gnlHOQ9smNtrmXUd/GnI2z7lFOS9Jsg/Ov1RHX/9gQM+gS+/Y
f8ew4NTB1vrg5Jbxv3z7jptWV80s/9Naz3WOGVLW/h1fCb5cku5ZV3e3n5v/
5dUyDnzSObHgUF29f+8zQ9rCMg5+YbCa38FGq6TkbV1dy7hueoLd5E022i/Q
O/7qmVI2T7+9J9lQT6e2mPJ+QkgpHwhKNrksraft3D36Lrct5VK3go53XtTT
Y52X/rZrdwl7rs3dcXXi+3rqytc3bQaU8PknXg9NZ9/XdVaHf7PngYnbl3VZ
R51t9Xfv1g9N/NbE1tH5IbsSbXXJ6Jd+OQ1N/GGf5qFtKm11fb1VR+59y7kP
X+z6JcBORyRH74vs/ZaHVIz27XXKTu/y3xZ5/+obHlDnXOE51/p6RKtV8Rz8
hrd9dP3RkCX19U9zf97W4m0xf9H4RMWJ2/X1mSbzvc3RxWy10mRo/Jm97uTo
ERFuLOZpP11oP3Kdvc7Zfqh0wabXbMq5NXfafXsdVmVd2Pqj1/wJbZng3cVB
ux/YEDHnQBFvDa2caLPcQTc2x19e2KOIiy/+3in6qoOOsuzfV7xxkPkot2yg
w9yatFq59iX/GJxdfSykgV4xaWOBR9wLDiiJ6T81tYHeQU5+Pyb9wxNHDCs6
9baB3pCRU3J4UyF/cWpq8l+fG/TuwkyfA1ues/FAts2cBQadvvTyyOQtz7j5
9fiPOc2gY/M65EZvespORc3cU4oN2tvNtmFUUgFnnk/xb+3uqK+nFNKeuCfc
JyBlYOdgR93wmsNlh5jH7DK/QfKFDY764LO/RpyOesQXVKrnqwxH/Siy3swH
8/J5Qb91A5LfOWr3sUnvFoT+zUO7xS4NamTU18ZsebR90kPe3GLk7GMdjPrh
4PzPw0c84A2xPbIyvIy6uEFEl+KF93hXQZxNkrdRO4Xv/OE/4/J4d0TJVtdA
ozaEdO3WyiOXh6b4UdBsoz5Z4Vz1g90tnhLed6vvMqM+29b6ueuDGxwVeyzB
fr1RR7Vp3a7qyDUekrXUMHujUV+s3mHyXnOVG4W1dY5JMeoje7PXrz2Sxd29
rS/6pBp1wnfkaRh3gV0DQ2fePmbUBz0PdFhpOssDzm7ydmCjDm48+PiA+FMc
7fL4UdEZo3bYeCj3y4B0Lty/NW1VhvHfeWqXaZ14kPv92m9G5iWjvp+9ddLh
xO3cwzP0xJkso7YybZiQNTnXq4ll/xo15Vhep+54PTLA8n4ivD872fL3qQh/
f698Pq3A50/0snw/6ofv136x5ftTG3z/evssv4+64feFmy2/n4z4/ZnyfKg/
ns+KdpbnR0vw/IZWWp4vBeP5Bsrzp0F4/k9kfWg71qeZwbJ+tBPr13uIZX3p
B6xvo7GW9adkrP8smQ8agvl4LvNDszA/p2W+6BLmyyDzR80xfzdkPqkv5nO5
zC9lYH7nyHxTc8x3u2WW+af6mP8zsj+oPvZHruwf6oL984vsLxqP/XVI9h8N
wv6bL/uT4rA/j8r+pVjsXxfZ31SI/e0m+582Yv8jH8gd+VAl+UH3kB89JF8o
CPlyVfKHyldI/iCfaBjy6SvJL9qB/Lol+UYuyLflkn/0BfKvk+QjpSMfHcdY
8pMMyM9EyVcqjJJ8bSr5Swbk7zLJZzqCfJ4h+U3tkd9NJN/pKfL9lOQ/7UL+
R0g/0N/oh7HSH/Tmd+mPNOkX8kO/9Jb+IV/0zzrpJ/oV/XRY+ovaor/uS7/R
EPRbT+k/CkP/vZV+pBHox8PSn9QM/dlI+pVMY6Rf86V/yR79u1/6mcLQzzHS
37QI/b1b+p0q50i/24Ra+p9yekj/B4oPqDt84C9+IDf44bj4ggbBF3YXLf6g
QPhjvPiEAuCTAPELnTwlfgkW39AO+Ab+oWz4x118RHvgozzxE7nATyXiK0qF
r5aKv6gF/NVZfEYz4LOn4jd6Zit+KxDfURp8B//RSPhvs/iQbOaID+uJH2kB
/HhLfEnB8OU58SfNgz8bik/JFj6FX6kP/EriW/oOvo0U/9J/T4p/L4uPKfi1
+Bh+JvjZC34m+JngZ4KfCX4m+JlqPh9+JviZ4GeCnwl+JviZ4GeCn4nl9xP8
TPAz1Tw/+JngZ4KfCX4m+JngZ4KfCX4m+JneYn3zZH3pOta/l6w/fYL5uCHz
QTXzAz8T/EzwM3lj/gziZ4KfCX4m+JngZzqB+R4u800TMP9jZP5pHPbHNNkf
VC1+JlfxMyVgf7mJn2kV9l+S7D+Cnwl+VvAzwc8Kfib4WcHPBD8r+JngZwU/
E/ysspEvvpIvCn4m+FmFI5+yJJ9UV+RXkOSXgp8JflbwM8HPKgD5CD8r+Jng
ZwU/E/ys4GeCnxX8TPCzKl0l+d1S8lutRr7XET+rMvEztZH8Vw7ohzzpB7UA
/TFa+kPBzzRE+kWNQ//slv5RceinPtJP6jT6q0r6S3VEv8HP6gH6r1T6T01G
P3pIPypX9Gey9Keqj359Lv2qQtC/SdK/amTtflZh6G8f6W8FPxP8rLag/72k
/9V2+AB+VtfFz9Ra/KDmwhcO4gvlD39cEH+o/No+UeXZ4hdH8YtKgW8yxDfq
CvwzT/yjmtf2kTotfqafxU/KJH4m+FldEz9TivhLucFnKeIz9SH8Nlj8ph6J
nwl+VmfEz7RU/KdGwoeDxIcqR/xMzuJHlSZ+ph7iS1W5SPzZTPyp9oufqb/4
VE2GX5eJX9UO8TO9FN+qIj/xrxL/KviZ4GdlhX9Nxc/K54b4uhdeD6ztb3W3
ts/VKPg9Cp+/06uW75Wv+JnhZzV8X63zgRovfmZH/P4KnC/64vnAz1zz/FzE
zxyE5xuC88twPP88nG92Yn1mi595C9YPfuYYrO/H4meOw/pH4HxVMx8FOH+F
Y37u4nx2EvPlhvObM+bvOc53PTCfC3H+05jfNTgf2mK+G4uf2Yj5L8b5sipV
9kc2zp/ws9qJ86kP9tc1nF8V9t9GnG9XYX8+w/k3Avu3Kc7HFdjffXB+jsb+
n4nzdSfkwzOcv18gP3rifD4Z+XKh9vldpeB874l88sH5fzvy6zLuB1yRb7G4
P+iK/EM+8jXkI/zM9sjPWNxP1OSrE+4vmiJ/Y3C/kYp8nor7Dw/ktxPuR24i
3+Fnhp/VLNyvPEc/TMX9S674WR3H/cwk9Av8zPCzWov7nePoJ/iZ4Wd1G/dD
o9Fv7rg/ikb/WYXJ/ZJCP+7B/VN79Gcz3E+9Fj+ru7i/ckL/puF+awL6GX5m
+JngZ4afyVb8zMXiZ5qC+7Xe8AH8zPAzpeF+zhu+gJ8ZfqaJuN8bA5/Azww/
E/zM8HONfxh+pk64X0yFj+Bnhp8Jfmb4meBnhp8Jfmb4ucZvPAp+g58Zfq7x
H8PPBD9zAXwIPzP8XONLfjhNfAk/M/xM8DPDzzV+5XPwK/zM8DPBzww/E/zM
8DP9DwfFoHM=
          "]]}}, 
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
        {RGBColor[0, 0, 1], Thickness[Large]}, 
        {PointSize[Large], FaceForm[None], 
         {GrayLevel[0.5], Dashing[{Small, Small}], 
          LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}], 
          {GrayLevel[0], PointBox[{0, 0}]}}, 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{1.4095389311788624`, 0.34202014332566916`}, {
           0.45108693133427213`, -0.9537110161840732}, {-1.4825275309807053`, 
           0.1521871945032789}}], 
          PointBox[{{1.4095389311788624`, 0.34202014332566916`}, {
           0.45108693133427213`, -0.9537110161840732}, {-1.4825275309807053`, 
           0.1521871945032789}}]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          PointBox[{0.30542292639874086`, -0.2607778980496586}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             16], {0.30542292639874086`, -0.2607778980496586}, {-1.5, 0.75}]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], Dashing[{Small, Small}], 
          LineBox[{{1.4095389311788624`, 0.34202014332566916`}, {
           0.30542292639874086`, -0.2607778980496586}}], 
          LineBox[{{0.45108693133427213`, -0.9537110161840732}, {
           0.30542292639874086`, -0.2607778980496586}}], 
          LineBox[{{-1.4825275309807053`, 0.1521871945032789}, {
           0.30542292639874086`, -0.2607778980496586}}]}}}},
      ImageSize->350,
      PlotRange->{Automatic, {-4.5, 4.5}}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{3}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.787587723544716*^9, {3.7875878439927235`*^9, 3.7875878979340744`*^9}, {
   3.787587999258486*^9, 3.7875880082653656`*^9}, {3.787588082208911*^9, 
   3.7875881320097303`*^9}, {3.7875882118458376`*^9, 3.787588252532633*^9}, {
   3.7875882827907295`*^9, 3.787588441095093*^9}, {3.7875885031844926`*^9, 
   3.7875885181132307`*^9}, 3.787588611664783*^9, {3.787588842720167*^9, 
   3.787588879213578*^9}, 3.7875889527293973`*^9, 3.7875890053787613`*^9, {
   3.787589343004342*^9, 3.7875893541266193`*^9}, 3.78759044407388*^9, 
   3.7876734089102216`*^9, 3.788075605112094*^9, 3.789722129664652*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{"\"\<0021_incenter_locus_quad\>\"", ",", "incenterLocusQuad"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.787588988381032*^9, 3.787589008733783*^9}}],

Cell[CellGroupData[{

Cell["X26", "Subsubsection",
 CellChangeTimes->{{3.787737903157382*^9, 3.7877379068802085`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stereo26plot", "=", 
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"showX26", "[", 
          RowBox[{"#", ",", 
           RowBox[{"\"\<proj\>\"", "->", "\"\<stereo\>\""}]}], "]"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", ".7"}], ",", ".7"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", ".5"}], ",", ".5"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "True"}], ",", 
         RowBox[{"Ticks", "\[Rule]", "None"}], ",", 
         RowBox[{"FrameTicks", "\[Rule]", "None"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "190"}]}], "]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"1.3", ",", "1.55", ",", ".05"}], "]"}]}], ",", "1"}], "]"}], "//", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], "&"}]}]}]], "Input",
 CellChangeTimes->{{3.787738025441394*^9, 3.787738094514926*^9}, {
  3.7877381418760266`*^9, 3.78773816105867*^9}, {3.787738191251251*^9, 
  3.787738339627125*^9}, {3.7877384056513233`*^9, 3.7877384835625973`*^9}, {
  3.7877385731868296`*^9, 3.7877385777863436`*^9}, {3.787738640035609*^9, 
  3.787738646065456*^9}, {3.787738769969984*^9, 3.7877387704734726`*^9}, {
  3.7877388414416156`*^9, 3.7877388428019333`*^9}, {3.787738895321106*^9, 
  3.7877388955930767`*^9}, {3.7877390361483617`*^9, 3.7877390386983643`*^9}, {
  3.787739196096836*^9, 3.787739268544942*^9}, {3.7877452689308386`*^9, 
  3.787745274301386*^9}, {3.7877453049566555`*^9, 3.7877453054825797`*^9}, {
  3.7877453468527513`*^9, 3.7877453650909867`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
7mb/yVXS61Cpf9CqpbcP2WJ9Y6oryVj9V0H7UG0f/hdBMrRMIiPFy7h1S1Yf
xii3qhZpUTB9u9Kny259WH3TYGzj5Xqc6Lq5rcy6D3sCIhaXTdTjVQ/OZNKh
PtQ9902Y/3EDbhXM9vsr0IeXfp7eEXWiEfcVHTbTecXG9fqW2xLOUlHPdiRz
2pGN7En5nGXRVNQ5Rr5vdIqN0cJPLSxZVNwuERJeIMzG0a9hXblmTWgY8VOy
81cvKl12eV3wqgkV7zleS6L0Yu7a4VUJdU0oV1K7uD6wFy8UNTktO9CMTy+u
zGiy60WXQgnrR/cI3hZ0kalh0IuiKg1/yRnN6ACKSYKLPfgvhD3WL05DG6P/
ePY49uCPkZKFFiYNX8ZdeB9+rAfJn0PaaXx0rODN78nf2oM71Z85RKvTsTj+
757jbd0YEiU96f6Mjj1GEx3lX7rx5reM61E5dHR+7actENyNaqzvge4tdDy6
PV6O53A31iwwPcK3MtD5rv3uIulu1LweP1R7lIFdF2WXxv3qwn1JH02qbjGw
aZmcv5B5F84IKRevzmLgcnaF0RX+LmyNWedlXc/AszUh+z2+daJb3v1U52EG
lrs2rZHY2Im80Qr8c/JMPH288A29qQPtHB5s+HyAiWl8EQL3AzpQ/9/hr9YW
TPz++futy9Pt6D8xdjP4MRMnOuJL8j+0o5nz3dx1r5m4U6EjZf5KO5Y5jXRE
pzPxcMpet2sNbai4ds1OXwoT9c10bwf7teGnGzs0xjuYOFVN4SvSacOvNkbt
ViOEvfRm5aHxVhQ4xv+jfJ6JR9Y9/iab1oqvjfmzlQVZ+EpzyvPqxVa8kHDf
JlyChbUqE4fy1rSi/6+4PB5ZFgaHJ35bS2pB2jK3hHvbWbj79MkXIY9b8E7f
HoXRPSy8XCBrvXVfC+68QLJyPsDCyA0TXxm/WNh1IvDaUgMW+j/jl0lPYaFO
7ruH746zMLeVLZhwgYViMdl9JqdZmDm5ob1EnIV/Vpr+EbFkId8GmdHlJCb2
KGXI9Z9j4SVXyRePfZjocXeymUbMux/xeXy7NhPzHFaFtV9kYXOnyLGVEwzs
KOObXHKJhfzCEXlyGQzUKs0OP0xg+Qck3ftXGJjwQVUhw4aFSmLGo3wbGFj2
3vvKHmJ+6sXUHGYzHX1vSIlyz7Nwqkn3xshzOk532/OVnyXsz50cPmpIx+zv
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
         "]]}},
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Medium,
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->190,
      Method->{"ScalingFunctions" -> None},
      PlotLabel->FormBox[
        StyleBox["\"a/b=1.30\"", 16, StripOnInput -> False], TraditionalForm],
      PlotRange->{{-0.7, 0.7}, {-0.5, 0.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.05], 
         Scaled[0.05]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->None]},
    {
     GraphicsBox[{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
         "]]}},
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Medium,
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->190,
      Method->{"ScalingFunctions" -> None},
      PlotLabel->FormBox[
        StyleBox["\"a/b=1.35\"", 16, StripOnInput -> False], TraditionalForm],
      PlotRange->{{-0.7, 0.7}, {-0.5, 0.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.05], 
         Scaled[0.05]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->None]},
    {
     GraphicsBox[{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJwUWHc81e8Xl1IpKQ0jCpUGiYaVdJT2kFCRSomvSPZeWcne3GuVPZK953Hd
a9xr7+1eUojMMkr5+f31eb1f5znrGed9zkdQy0hZh5mJienXViam/39LnN65
sR1hwPiOK9/8SBvlpEw1HYYFGaDCtj3/tdw7GL0i6KHFy4CEyKBX5hKhkHTl
I1PYLga88aLMKJV9hGPT24zdNzBA5IZkb9m+RNg/PvTdbYAO8xc5N8fKfYIH
jdG3itPpIM1cuoNLORN4ZmtJXZZ0kNqtboHHciB2Uu02hzQdRFg5ekXD88Dq
7nJa/NwQUDQlRT//KQCDvsHFpvghECVFb066Wwwlm69t7VMcAvr2qL8ffEvh
3pMXS7sWBkHp8+YH50rKYXpnkTMlYBDcye0aB9sQFvT+mdw8PggLDzdSuL9X
wnVJpU3LxQPgJf40MZNOgl03i2+KXBsAlj089zSoVZCa3uMj39gPort/HMtJ
IkPMmzvFYff6weqXq5u6FQUoK29qfRv74F7KNl8W2WrYtaVc1P16H+RYs222
mauGGbYT6ozyXvj6b+OaW0QN2M7LiK6K9wJhSUZvq2Qt8JiP+0jH9sCzbRnh
M+RaOPS9ZmqevQeEF3uKzl6pg87hqWl3227If8B3uK+gDmovTG1VHO2Ce0lp
ZQu8VJix+XH2450u+OmWJBtlRgVa/2RSU24nOPz5q79SToU7TuMRovs7gesf
8dX5P1QYa2vi3ubUAWEha4wwERpIf0hryfjaDigXf0vxHg0sB8grWrfbwSMq
6VDyfzRY7tkiq5/dBsHeLSenTWiwZUU5chN3G4gJChRZrOO3BXRrw7et4Hj3
0kSIDg3+k1V+zxhrgWX7H9uTFdftvShu97/fAqdyOaa2idJg4F5jpIZNM5CT
taUObaBBVena5xblJvjYPTmmVE8FDQXtuHaxRjDNqClc9aYC0WrMPGdXAzz6
ZfrBR4EKreHBTnm/aKBYEv3o1Xwd3Jo+ULqfTgVstFpYItYBr6nLNH9jHXTV
GxjHS9UBvbZhcRlrgXXzlmdtTbWgbi3P3FlYA2KEYo/JZ7VwuzKIWbqQAr/X
uM6bvq4BK94ohY1IhiX5DduSx6vBYlo36XFDFdhf8ZJRfV4NCbIPTTYtV8Js
48P7QfIUSFKO5bPmrITWg9Gi/alkOFW+OmhhUQGkTpV9bDvJ8O9mhVzwiVKI
rXfltm8iAWObkbRUaDE84mv6q3mCBKvHLOhBbEUwFZD12sK5EljU+fTvHcyH
iX3SmhTVCpCkKTowEzPh98/VqKHGIjB8lbeneeEzfGj//mTieiHkZCZKBet9
godMbGX3K/PhhmYqZ0hsIjQb3X2tl5EDDiWj+dtfxsNWFkUCv1A2tNdt/Tt3
IRb+uqr3uUhngo0e29kY4wjYfpWsc4Q3FRwSqFLV2WGw7yrVVIwjCWTTc8TO
CQQDUcZhwmB7PPC3CwcqMnvCp4oWXsrBCHjdbjvn+MUFfFonZ7+cC4GjJaJ6
J8VsIbNq99awbB84GOukwPNOBUpDdzNtN/8PFkx1jD6ZqiBF4r6099R/eFbp
kigLqwHeZTmnCTNOyHTJ72hIrCP63P9Rccg0GKMtl8vv7HRFevPM8cUWIkJs
hKGvlztuctA/4Lz/A7p7eJJnK3xw2Tz67XuJBHzUvDNvwM4fDz6kJhsUJWHY
u00XfP4FYFjfFwNzsVQUtHU5dfFQEE5NpTQ+i0hD8oZO4o8TwfiYTl2dXU7H
G9bLzM6cIchHYgTaCmXhh0scv/vHQ/BvFtPeAzeycaPS9+Wh2FAMFJEsvqmd
g0kbeFR1L4fhnwSPJ1M2uXhrxvTEvfowXF72/jrvkYe0Ag/lN3IElFF5JXY3
MB/zaEPqoeEElG2fnJ0KKkDW6ThTAoOA2d+iE6t9C1FBOc5Ufg8R++80WDU4
F+GBDTeb1M8QcYuhp8iyYTEKLlqFpV4k4peJ4G2XHpRgv9JG63lpIirs4m+N
OVeKi7syyhYEiWgiZx65e0cZfpe3v6v3m4B/5rQ7gobKMHhJqmA7mYBTY++O
8KeWo5fZVuEAewLGyIloFRhUYGrEX4+UYwQcunrQRe0EYnKs+X8bq8PwmxuL
52Y64jC33K47D8Jwrb/04vC1SuSk6oYJ94biTVP19NqISnze9qld4X4oHn20
7Cw9WYmr2jcsZSpCUKroOJ+kNAk5tumyfhIIwcO9aQpkZxIOCDX8E7cJRt7l
xUNfaknYnfS96L+6IFR+tXwpfFsV/pKVCWWwB6ErC5/zxM0qPBtKWRS/G4jm
yj57e95VIcvtBaUx1wDUI6a/1auowv3so9oCuv54wrMlIG6hCle/OsboF/ti
7xLPUw8hMmrZxQiWrnljqFL0BQFVMiZkeZzaL+uFg7HJNUZvyRh3TzHay8AD
f7DKNNknk1H5oP531lB3fPbu07O7DWRsS7p8LyDfDZOPOBaN/SDjdYvMnl3N
Ltje9UhRmY2CrMWLpTc3OqPbZPvVISEKhn9xHmPoOCJT6YhKxgUKvov6wOVY
bosKnT2CdUoU3HRJpLqb3QrT7W5YndaiYOfvGBMVDTM8SHwgPWtMwdsrPzd+
vGGEdv8d1N7mQEHheUrJtS5dPDUltcfdnYL0VCku0HqO3SZylnq+FOR5b39H
aug+Es+adpQEUtC/7PSg8OIxHPE093IKpmDTmPhzWup1YG/ewEoKoiDXVX73
GcJjqFSltbv4U3C14SdzY5w2RJSrOjV4UvBOedS3D1OvwYRrNi/BmYJWxj84
goNNIF4w79huKwp+H2TK2nPcAgwE/KN59SlYYkO0L86xBpui5xO1jylYtHr2
lekZe/hzSXDywE0KVrKLbzuT9BaKOff5H5GgIMflO2Rrd2ewU9veOHKQgmn6
4iXdZ1zBsTQ5WXMzBa9vZR4p7HaDp/QCkbjJ9fN5f6092twdftX6GGU3kVF4
o1vJLlYPCGd7ExSSSUZ1VrE7ESGeYK6+WqrsR8bl9saiGk5vcB0q4V3QJ2P5
6fuxR/x9QFj5/bj9VTI+covffvWvL4yfEH6+dICMBA7DR6XP/WFn4XiN3s8q
TLX0Cvd7EgD1Lfy6/XVVmN17q8klPhDMBXLDe19XoZLMU7VhuSDI1to9YH5+
/b656xydag2CkKoHhSe3VGHZYb93ZprBsFFJxX9rGwkvWofV3/gWDNEDRxt2
RpJQTmSP8sX/QmDUc6X3phYJQ91oJsfoIeBX3nS84hgJ/ZlFHXuUQqFf5uFJ
8/X3FHD3e+XR0lDwFCdrmKVX4m6fOIvxA2GQyZpymvymEm0v5VX/tA6DtpIu
kdcnK5FcepRyuCEMEnu8wr62IS6eydZT5CLAhaDpY+SbiEfShwIUHxPg7bs2
HsfyCkwpVpz/F0IAJlkWJ6FTFRjKv0dQtpYArWd2m9dFlqNZqPB7+iwBHvOd
3me5uRwJodxaVA4iGEbJesgZluGqTgR2nSBConLqkmh7KSqa2dh+kyZCaFtg
8EOJUnTfaifVc5EIKfJ5gTUhJfjk/RstH1ki/LrlJuo7V4x54ioio6eIQDx7
IaX4djH+DPvkSuImQmbiwg2N+CIc7+jg3bJCgMzdpU+clwsxIiL8ObGZAHP3
SiVlbxfi7pNUa/UoAmieVRcnRhaglt7qZTFNAnyceZKaPJGPzLOmKmvr+deP
8221kcjHRbud85k1YbCzNa2Y920eynmbch9/HQa1haxnPtbkYqveWeN7LGFg
O/poajdbLu7Ik7rPHhoK6WI7X7vfy8H2oyvHW/hCgZfttw0tJBt1Jz2mdCJC
QDs1qQl6snBtKOdYmWUwVJRfkJ3PzUDys6qoB51BcOxwnXC+eDrOZhUtmp8I
gvLplCilT2nodGPH/N/sANh/lD37fUgK+s7HlXg1+AMYRLY/Y0nG/suJTlH8
fnB50snmnVkiBu/8t6PRzQtEhIq5ZG7E4U3ZDPKlGy5wMlIwd2s6AU/84XqF
G5zgjoBgioJ+CKZN7r3edNMOlhzb25mOBCLnwPsdFfdMgP61gPMH7zt8P/1e
8NgOFZyTPsOSNqkDzJrc7S1mOkg/krS99IE1aD8+tvf2kDHWHdW0nRl0gZ8/
BEKLsxwwwyyosVwoANoCsy150Qd18twzzkVGQ7e+a7G8TAASW3PkXtrHgMBZ
1HA5GITcT47nLQrHwYkxntjc7WF4wp3QsuqeCF/91SXyjT/gngxV0qrkZ7B5
uN9bWyUGrzICugIZ6eCZRfU9ZR6LpgUsCz88MkHoyra9yzXxyCEy3Fuqnw3Z
02U/17JSMGmCtZknPQ+6ls7/SFtJxWsszLOn7fLBaI2Dbfl6GgbVac4fv1EA
z80katR+paPFoGqo8VAhJLb7xMlRs/HO8bd+/r9L4PudvVfyXXPwsri+ZF15
KaiQw3bS5XPRXJCZVf1tGVwyFUmRIOdhTttvO/hbDh/FpK6ojRViEvFF1SGT
SvhWtUXlbV0RHnp7/FxdWyVUS7FzRH0uxjtbehoPnyWBkNZ8RZBDKRoQnpq2
zZDgmWhErbp+GU4X/N2y604VUF5pZsyql+O18iuDPUlVYJ6kMPLyEuLDG2dy
hh+R4ZKwz5ZQvkr0vsznzJZBBsVqt0lqeCVeja8QJzJTYEZqPn0XkYT14/xP
U5Io8HdFkl0jnozBZdlZXr3VEPpreIXzBAVfXJdejhCsgX9GsqenMykYZXBM
qUS3Bvj2yrA1V1ajpXbkz38/asAuK+dl3a0a/LP3xPddp2qh0Hi/YVlnDfIk
9V7dblAL/kbKLibTtfi7IOlL8HAtPKdcfiNgX4f7mdd6d/LUgdmuF42J26h4
gDS1TrV1QKvpPrlDmIam2tqNS9l1IPlfxvn+Ehr2+P0RvceoA9Udp/of3alH
R0OXlzfYqHDAPN/qjEkDSg7qPWd6SgX5DVGFtpsa8cJx3/xMZyo0bPu9+xqx
EW88IawNx1Ph7mdNAc+TTdi9kLEngEyFLWk9IE1qwoxdcxtzGVT4Oloaef1h
M47HFAheWZ+PDhwLOJE22YzN+/rXLuxZn29euT5Ik2/BH0UbLQjHaVD+0L37
g3cLtn7+Fn1XlgZHs62pqV0teIcYQFe/TYMH9DZStWArrkwlTxSo0eDURw+Y
MmjFoIrPRZovaeBvg584i1rxJss54r3XNLDYGvjg4sY2lBM/IORiTINs/l77
J4ptqNhdeW/BlAbDoztv6oe34fUnXM8+ruOPQ2LNz0fb0OZS1w8XIxrcWknm
kBFrR/5ll8UIPRqs2ahvmLJpx/vDNvWjz2kw2hrraEppxzHZ8QPPHtBA67zx
42r2DkzMLvy36ToNPv3+79GgWgf2SugzuiVo8PTMVpHcuA50/DZK7BSkwd2V
H44w1YGvo4+//LuNBjZRO+ZtJTrxz/AiQ3GOCidLWPY/c+zElu8v+GgdVKif
t3QbrunEfK1rnkb5VFig/1f0l70LrZLSN8sHU+Hjz89SaQ+7MO4cF+OCIRWa
vr1yGonuwv0cKU2616iwcs6FPWq0C52HL/6uWp9vp7d5j1sZd2P1vZvdeyvq
gGm8t28hqxtv25oE+/ut348NZUHjs93IlrXVOe5JHVw/tGnnEaMePHCfW/Xj
XC30dAtUPkvvwbfCTFcDi2ohejBh9+/vPeiraeYo4lALSjeCWs5r92LHKlus
wVoNvBK5bdLxsRe3v6lWPFheA+lfXQQK+3px9FJKo691DRwpME6SV+zDG2ou
jrg+H/6WyG6uEenHu8sFG05nUuBumMq27S/60ZFrXDhIgwK3ikQOGIT2IxdZ
49QUCwXWDLkVjP/049yv0QcZqmSI7vtwn1V0ADXEb246sVIFH9DndNrTAQz0
jfhAiqwCOb7TvoulA6isFzho3k+CH/y+Y2ETA3g3mPwwwZoEEFncJso5iKtD
V17w7iVB480y61MGgxhxWLiA7VollJa5a7JtH0Jtr4SnrqfK4VfZy/I5sSH0
OVB8ZeReGbitElwzVYZQmeeZtZ9hKcSkcm9MIQyt17O7CRIJxTAuY/FvoHAI
c2OzRrVLi+B6sMPYUNcQuvJ3Ld5sKYTx1sxm4KDjizffX8Qu5IPkA6pmxEk6
jm78pXCLOR88DC8yFV+jo2Tq3X/7duaBF3PS13BNOvqUOGoI7M+FymRtY1kr
Osa3LCq9O5wDvKvfTkb50pF+cPPKc5FsyItrai+Jo+NUU4dP8+ks2Jq5I1aU
SsfxBJ2EdIvPcLLai9Opj44OuV65SnafIL8pb6/vdzrabGfpW3VMgf6STWdU
V+jItza3ddIpCcYH/Yj6Gxm443nCUVXnBLgRp8jkwcrA4NVyZhOnOMjdY/SU
eScDXzx6ecvWMQZEXLrbevcw8EMx34rSUhQk8v8jsnMz0NmWtVx3lgg/Bgr+
xvAysI42xUgZD4Ert1ZfBh5k4BxXIMWVEQCiMTkKDAEGmm65dqgpyxPOceuc
8DvEwAdpQtedY53BF//mRx5mYD7hw+CvY2bgPGv1gfUIA03OWF06E3gDRON8
03rW5e53JLydVvTwBWoWs65jw7grjzg3OuAfqStC1oIMVJVSW0wWfo/DbRza
YvwM7NSu0Khs8EfjJxw94nwMlFmps3t1NgQNxfesOqzHv6+jWOiHHREXCDQt
7r0MDOcQtzbGKMy/d7hgw3r+HYrOJqWOMZgRE1ggu74/hmkr78kR6/2F5dPz
dcwMLE/lWA3JTUBebFVXXqLjwfnT9r/qklC3eZSXNEZHt93i82l9KfjtVfIw
o4uOlm13fZzGP+GuDJulfAod02pjqy/Mf8Yrdr2NV7LpuHxh/E3aUgZyv2xa
CoyiY8jMU7U79lmYlpojYWtER6cKO5U9ljlYnrOyg/8RHVn2NDw+a5SL3Ptv
YKgcHT0FSDtzdPLQp15Oe8cWOlZcXRswvVWAmmwss9zfh/DBipuDl3Qhvhrp
dN7eMIRcskz0tMNFqOW2r7nUZwjf6u+RxdliZA1Ir3J7PYRhmeI1Pm0laLzB
9sTtm0N4n+vvWd7sUjwb9l5rbMMQ7j+1du68djmOXnNW3fBqEJt0shrMlCox
wePSLXUYxB/+/3X45VaiarNG5eC+QdQfrAtq30tCXb7znG6VAygZ3jNQ3UrC
C7bik9khA/he5+khfdH1+aFI+/iRVwPYFMoaIPS+CnsEpDN/sA1gVJiWWPs5
Mi4lBncrDfXjvYoVeoUHGbPlTQ7vyuxHyova3Lw+Mr5QHYsoUezHfR7ZmvnW
FPzjfen8i/d92FXa6tYXVY16np6D11X7kPTTs2iUUY0Ou1bcigT68NsY+ez0
oRoUisz7creoF9Fm39a1mBr01f5m6eDai46W82xbBmuwR7GOckexF1tNT6fv
5KrFQ22MEPpID3IG3Wg/+q4W+TYmvEn/3IP4yWZZqrgWj6rIpItZ9mDiy00/
FSdrUT1W6IrO1h5Ms5/mDLtZh/WLEk8PtXajpFduKM2iDvsF+jSTw7ux89Zk
6I6YOjw2rFbPK9yN/rr8I9TpOuSm/by6f6EL57Z9W4nbTcX9rO+kfpZ2oeqx
vqLkc1RMTCSS0t268NPSfoV+1fU+Y/Pp+Vt3u/DtbhpD3oyK5WEJ5OZ9XSi6
02a135+Ks/ff88kPdaJldpRg1icqduYURc4bduLy3+f3d/dTce+OIZELUp2o
NF/CmjJLRY8BTi6ntQ7cVrTjiPsmGvLt9mKQajuwnq29OIuThg5Cb5c2BXRg
0qsPqyLHaBg3qVd4Z51fDbgqzq1K0FAv+bdulEAH6sV/QSEFGg4ePCO3NN6O
7PntO9MVaUh3sXn0PLsdlZ0PpIap0ZC8XE7uW+fzLHqv4NhzGu4P8bfTu9yO
kvtNBeJ1aagQqKCzc3s79rkbPm42oOGZOB7V5vY25P55J9jYmIY1/NpbP0e1
4drcs0hvUxp+ns0RS9Fpw71LmYpCZjQMXmPSqTnVhsK6C8GX1+XOO0fFWZdb
cbuprca4EQ3lqBWsZqRWHKs7/YF33X5E30+Vzd6teFwg+cnwfzRk/i2gVa3a
ig2GnB8ursf3JueORc7BVhwecTSSXo//JfVEefN4Cw6Z4Uj7en7ih+6q8ee2
YCBL6Q7OKzTUWdFXjXdowSVmN9ZN0jTsVQvJeHqjBQlP/efi1vtCcqyFitKe
FszumB5Z4qWh95GT8LusGWWNgv5sYaPh47viWK/SjEGsgeo9v6moY/orhnuy
CVv7rfYbjlNRKiAfRl2a8G1fzOOmDirWeL3uOc3bhD1t/uf+IRWH/3k90rzb
iHtmVncPB1FRjPpS6OpYA55M/SX3wZaKTrMHy4ucG9B/IEARXlBR9FrUV5Wi
enypDhcviVDx9/lRrw8nabix5dOP5pw6HLf6OyBVT0WhgZEVqaA6HLww5mOi
T8Wvll890ozrcOeffIfGT3UoEn3Isk64Dt8oim94dLYWB85lRD8LqUWi/KHr
h7tr0Huzz+YUg1o8Vf0sLsquBg2MN4cfulKLtcQhw8iaarTjpaqVz9Zg3bsz
p8a0KXguLqKJ5VIN7op9tXfrXgo2Q/CgAWcNhjWeeVpDJuMp9qk7Fyer8RRH
/I0DQmT8e2JtSjS4GkcEjv53aYaEvS9f5kYPUHDLsmjY43gSRo/JOOenU/AK
f7TBXjUS3q2/vFPZkYJ8cfu/65MrMY2p7pfQQQre3pLzXFEBseGKE9lPjYwH
WAMowfkVeI7NJfnQUTISvsXx8J2owJMlf21UFqqwm1P71K895bhw89Bjgk8V
xs9c/lG1XIIbJL6LLJaQkN+KpmL8rwCDp/K/abNW4i3VZLEytwJM9WCU8yQg
Pl9h1lVgK0Dqa/aLS+cQy12ojkz8+RhL4At886ACzz/ydedVycUPFmn2NYFl
WEd/PNI7kYkPXS7JTf8pwtH830wzfJlYBfqzQh5FqGlvR1RTzsC+y6OVp/YW
oeLvnMmDlM9YOfA6okqkEJubGo+fIqfiZMVuVTX1fHzJscFq6mQCHhGTDZHJ
zsbsQJNvAxbxmCR489PVM9mYGfqy4wEpDl0u2o2o52ZhuCd2t2rGIux7IqXy
OhM7OLfPb7eIxvqJ4z9CLdPQoHr8Qk9NMM6oxXfvjYxHTYv7LQeSgnA0WrHK
KDYONSJXJ395BmLMNDH0SkosehosdtlW+OFPNl+5r4Yf8aWgALOfozu+rFod
mi8i4MqI0kZ7E0P0+OXpX8zpjBVBt3YRw3Qx0lfv4HyWLW5njxS9OPAcP5/n
Z1SeN8NH2VmX5C9dRJbfZQrq7++j+6HGE96j2rD3h/0Rt3/WULBndwZflT4c
HPjRb3bICVSnJjYEyhuDRf1A9SrJFZr+OIlfbrOAI2+yOnt+ecGeisTdw4JO
kIp6iqGEEFA4nm4++tQZNuFX7ir1MJBNJTaSglxg0zXp1BEeIkhWD265MeYG
/CZ7/b4GR8JtfrsHYnKeMLbo9feQVCwI3zexzbzkBbkj0t3ZO+NgolMwwBW8
QfVeisOhsThw233b7+UxXzikHCfyISgB3N9rTbSqBoD8WfuCvP5k+HygNFOj
IAAcKOIit6JTIDbz8SvxfYGwLWmvXMfTVLCUDtBuowVCQ1CEXUX/JxDgWLkc
zRkMM+zfOAtp6UCRqbI7/DIYsvOHJ8pcMyCi7o7T4fRgeLmtpThFNhOen46Y
TZYJAW2Xiw37VLOA8+FNVS2JUGipqLXoKc6GdlHO5YeGoeBoNug2wJEDbQbM
jPmEUNidTJO5q5cDQrWMZsntYZAmEpxmwpkLc5X/FibOh8ED9ok/hw1yob4x
MuTxqzCo/DnDLU/KhfwH09e9ysJgIPLGxly9PLiz3fK26pcwYJu3cNhangef
f4mkz20hwNXAuQPVO/Oh5RFnj64wAb4zZV4ef5EPIS8mT5fdIsAzO987Jrn5
oOnNxfvzFQESP9/+qLmpAPLOU6b3viPAYpJdbI5qATz8fTDlaCEBuORUnrgt
FIBt407hQ40EkJfumtlwuRCWk/c18w6v+5vWHx/2LwS3Wcse7gUC7HjGWXJ4
sBAuLL50ObiRCGciDPprThTBPYm1jWc4iODL6l5NsyiC2CYdf7UDREjq+Llw
ilQEuySK7hOOEWHju5LR+e3FcGLDYbMFMSLw1Mlxcz4shk8LY5ymkkQw0ZTn
IH5cn0+EdTW4ZYkQo9Cpaj1eDFFmxx9PyhHB78tD/QLxErBvGj02e5EIRRFP
++9blwDvnoAOkXVse6Pg7C0sAaY8rdfx6/qk7eobPrKUAmvRl3kNKSJkyj7v
uHe7FPLz5w0en16PX2ft4pOAUjjN1tYVf4IIDwNtO8kdpWB84vQJOQEiGH44
cMqduwwMJyXVRPYRQbz87HCcRhm8E/VRMdtKBPZjax48H8qg+eF/m/f/Xt+f
/izSBL0MhPcHPTrynQBvop+f2CNYDgmyjicIPQRo3MjyPPRFOTSZX3tsVb1+
PlmvtxjHloOsYQWZmkWAgMzT5DhGOfyotpcNjiAAz1SptCh/BQRIfgvqcSFA
cZ/Yzp1PK6ACpQkf9AjAd8pg5npEBeyeCuP4rkiAI+Ub3Lq7KkD42J5aPEOA
UI+TNuW7EVJ3xX/hWwyDnpfPL3p7IGwR1fZQ7QqDDKKEjRIJ4cZJJg6p/DDQ
irr81mQFoTvyoS27URiU9CiMj5ythBTJj8fZboVB0rjDjVXFSlA59/NBzeEw
CNP12kjWqwRypna8c3soEEWqNqt9qAQdLWZL79RQcFP7wn60qBJu3qg5+dIx
FGpiyudiWitBlFPAw/dIKDg8cmmK2kgCj0CLXddehsDO1YSC1JckaOvRk5AS
D4E/eWZa/bYkkKUdN+FeDYZH6iqbiwNJQAhY3lEWEAwvBvubrSpIkDNl1eOu
HgwFVp/Jah0kECPl+SgLBkO/Ru/trxMkGNQ4p/s3PQhkLuuVMu2tggBN+eFR
0yCY8Rey8D9eBfRjOVODkkEQxfRDl3qhCgwCTijsK1uvJyuNcRe1q+Dpypdz
bGUBIF52QPxkZhUsbE0KWrAJgPpdS8a7SVXgWCX0eIdUADRX+tyOb6sC72Lx
ppan/nBQZN6d8rMKBBIO+79s9wOljsfVqixkOFjR7W933Q+IPRlq/vvIsMnT
1l9DxBf6lH7JbZQgg78kR8LZSB+wdxkyvnCFDKctRg9ns/rA0lR0Cb8KGYi7
TuiWjXiBxKG/aqNGZNi15YLCwjsPMGfKUdBOJMMLcbU9XZPvwVHpx+epbDKk
MX4vRyu9B//MKvLBCjIk3hyIWuV0B2J3ScPbTjLcTezgj7d+BwXdG1MzGGQw
6Z+7pNjrBivWp7e8nyTD2WFqUyvBFahjeoLnmCiQ/illvPiXC8xw6NO2bqPA
QWF+phplF/BakGp230MBLsr713rbnKFh4CvVUYgCW+YKNHbpOIHQc+PMZVEK
FLpf3fTL4S08FOZr4ZWkgDS711GjYXsgK9QnPr1KAS2bFbMAczvY3s0ju+cu
Bf55U1nkN9uu198MTy1VCtCVv6UFhlmDTGCf520NCsgrNZ0OF7KCxbmn55pe
UEDIs+2Zfq4FmPS8cvmuSwFZ74eL3PLmcIUR/ibmDQUkrG88f/rQBKw52Tf1
WlHgx8WzShKVRlDClpOgYU+B2sgX3lvbDGDbhwuNVk4U4OHd36sxogeLpQY2
om4UcHB3jHw49x8wSg0S7d9ToPqvirjA2ksY/9V6V8eLAoPuLnP07S+gWT/K
aMyHAoZcJ17bij2BAUvJrRv9KfA3zyCm4upDSPAx31cUQIFVqddC/Y+VQGEt
JHRzEAVM/zGfkRu6Ar/a4P30Ot4mfPbps+1nwJroPmEUTIEzYroP8iI48eej
0VKvdfxJTMr3jZocrjrJ/bu4jkX2uN1XdbuFvyfoWT7r+tcMY357iKpgZadL
h1kgBfbNRspOcKnjsS3X9X+ux/Ph3qnbq0yaeIdeYMbuR4GulDtVMuZaeNWt
Zp7kTYG+HwsHmXR10IazY4LdkwItb62+pKq9wkMTyRq/3lHgse2xvJ03X2N0
m/ltCxcKXNx+/vQ2aUOMtO4p83Nc9z8p9KcoyBils/tzL9muxy8+2+C/1RQj
p+bP+Vms77+oSZeFgxk2pfy7Ym5MgaRVjqeP5szRbfr2xII+BcZ9ZuIEtC1x
w1DIsR06FEgsj/hW3mmFzrBhc+UzChzQ79HivWaDDieOebOpUeC6/gtFoXxb
rEnaXjGvtH7e4fbSM34OyBmjctvnEgVIOzb5vV9xxLDo+XyQoUBeoIDTxdNO
eKWjbtpHnAKSfPw9BIIzMuvYz/48QIFYz+u+Wjdd8KmoaOPOvevrH/L+Pfvb
BWd2VHyksFKg4ZM3F1nNDVNELqisLpAhOVgGDTa/w+H6vNtvx8nwjd+C91fO
u/X8jupFDZChUuMlxWbre4wcU72eSCbDvyfjsy+y32Pee9vDgQVksJ57Fsik
7oFC8YYaXKlkaGIZqZRO8ESLcS7eBR8yrL6yZK+47oUHheSrbjiS4ZZk/Z3W
CS/ceVhgk8x6PeCtV/xmfcIHOZXzoibukSFc9KJrRqgf2qrdEfBlIwObWJaj
3SF/vJ189sD0nyq4M5Hni+n+aL7z1oOl71XAHpqZVK0ZgGNPpcqZ66rgP/Mz
ezbEB+D53bc4WAqqoKey9rTu1wDkD948kRlfBdPK4iFxuoHYp77HZM2hClg5
PNWNkgORg/XFzQT9Kkj7N9b+4FsgCpIe/pp7WAXhfa+bn70Iwozi6AMep6rg
WkJg4vjtYPTd800wrpcEkmH649vcgrEr+8HmADIJRnTC9Y+UBuOd0BzLY+kk
yP6uXC5yNATH/xFeqLwlAZkzu2nX4xBcu1Oxa1yXBFbff8b0+4SgdBdH/lEl
EjBddh3fNROCprI/7sTxk4BTR8Td9GAo2k022tA3k+Dp86cSKXdCMeZyEHvt
j0rwc2385ZAYiuJXlCZCSypBrtBl376WUPQW/PTGIaYSfJeILw1XQvGpdHrX
TvdKiCYGujy4EYbLkkV9EkqVQPoXeq3vTRjuOWdbTD1XCWk1x/l3BoXhziOa
m1h5KuET/6ZGy64wtNbw79+7zr+mZhnWMYtheMbWOC38PcKsbMhX3X0EzL71
yMbyLsIrcrp7uSIB2xJMrsp0V8Dmo3xml/UImOieMMIfWQEqZ4UClV0IeCJz
vFTzWQVkOwuenQgn4EHXsiMrAhUgn/EmeUMWAfMcFUynRsph1VVTmkAhoOzO
u39kEspBVFr2ZGI3AaWDNbhHtMvBMu149dEJAnLpph3+eqQcnrccv8S1QsAn
YudtFEbL4Arn9j6TLUTkEW2y/BtXBp7ftKpP7yXi1ey/dntelMHFaw7nlPmJ
eL5W8vu7g2Www+2hatNxIn6bqznyoL8UTi35340VJ+LNTV8CnAmloDOuc6VG
kohKZzNDt6uUwm3XRDVpWSKOn70etbCjdJ0/4hLn5Yh42b9m5/m6ErjkJnZ5
vf/Ds+z3n9KdS2CYLUD+5Dqmq/L+/HK+BEzkzTJi1/U9w8yu3lgohlOK4yG3
pYhY7EijsKUVww+fB8tHThNR+FzZ2GmtYnBRNuo5foKI9d48R4u4i2Hh+ynx
/8d/QGNu5WNTEXAVU39F7iFizFI4fcK1CBYoyuY1m9Yx6xz7hTNFEPVHgD17
gYBb+35/66QXQtQH2asPGAQcuGq1s8inEDac+xrymUbAjXVuZ79IF8LeOH+T
rBwC7lrN3KA2WrDOTy03HhMJ2PRw40ku/4J1vu23ffeEgPdkDhlZjeRDLUnA
b+U8AW/RWf/xeOfD5xsDbCucBLz/xqyT9Ww+rBRLGb+tDcMTze/NOpzywOty
Y8dyZBguvOtpyjqaB2+v5iaMrN/HBfr+qMH6XKC1PpGaYg1DCWHlEZG9ucCs
bif/rz0U79ws2HWvMAce1Qdd0okMxb0Tu/hq1HPgjeTJV5yHQrHb/rl2blQ2
MPMSwpWHQ1DedtFGRC4bqJ3kvtroEBxVmj7wZyALXp86oXKJPQR5az7+Stif
BXaXbmlIVQVjbIbTPWaTTDj15vfeW2bBSHOzoZmkZUCYlv6PlIYgpHK8NHDk
S4edLQ01zhqBmNtt7eI9kwqNRgmHg5cC8I+iio2MYCr8dsna/T4gALWZtr7J
up8Ch9oOcs+b+KPIK8M9GzOTwNP/tahejTfSQjfYuWjEwz8F7to99V44ucvp
GLrGAY3fLHY71RN168Zjez/FwsxFIk9S1nvs9Hhe9t/kR9hh2SXUc9IVVfT5
ecJXicB9cEUCfjuj4bGeumBZApSKsZy0rnRC2aOa+rbWoXCJFHTnsqE9lvs8
YwhNBcLdE7eMThJMUM8j6oy+1Tso9mJa3jSmAVXdfp6sM0ZoW5LA6fBeGxwl
kpl4lKzwc673m7/nX4Nb8Ykj9AxHfDUb1VblZA5aL2J65dAdz8u4qQy6OcOi
qFywd08Q/jnSKS/YEgCbWDWkdTbG4o7rW1dvfw0E9YCcjvLlWGzj4lD+8i8I
Nr09kh8wHYcP1zoqLSEUlvcoy/r3J2Dob47ErUvhMOOnV3+vJAWXXUaqrhyO
A2u2ldmay1k4khnUta09DkRdP4YwMAudDU//VXgXDyh8UZdFLhuP5HgePTiX
AMZrh09rSeVgmmvOcte3ZDj8loWf6WQe5lvRHfTuZsB+TtWvDzmK8LZ3/Mut
RzPB58B9JWXfIjTp2hSdwpQFZw6yznOxFuOxmEK7RXoWMMekys2sFaOniXRU
c0YOdBwdJF7/Xoq0A7/GEv0K4PSTjvGT6Yg++3Q7ubcWgqTScmzljko0ei57
rMalECgSr15kXqlEeoDCcptdEYRMIUtrdiWGRypz1NmXwGp+9HGGBwn5WTcf
EWQqhf1c+OJ7OQlrZr3eFbuVgl74RsnEeRKecAhsSA0sgy92ZvsOaVShkJJo
SkBJBTD3xxOmjpHxynZp8tR1hLvnKxrEHpNxg03YomcXwrOUGo8dPmTsYPle
SLarBHN+zjGfaTJmpsqSriSQQEvVwO96BgW97/y8cmi9T95VbeE0v68Gt4ik
XyS/XO9z/nKlvpGvwauuw9xM+RSYHjibqaRfgwXM+dRb6tUQfKfdUb6sBpOf
szSxp9bAbG5bgLZaLdrstW+2+VcDVk66V8scatHpQwiHrWotFAUMPNGMq0XP
5PC/Esx1UH3IbNR6ohZrXKdjbLSp8M8omDPAsA4XfkxIvamgwncW9p5e3zq8
+IuNNMlNA/oljhSlz3Wokc244tpMg6Fv1s353+pwnv04gyhSD4EO8deimKl4
S3R7xhmPeuB4psMWc4CKnVGnHkxebgBaHsVrRomKVcGRUptjG6BXxUv2rB4V
21MuPYteawA+y04RNycqfm1v/SxV0QiH3TYHyH2mom5b1XnJg03gZaI2FF1J
xbigiz3Jjk1wjpci+Kedivs3L/P3yTeDpfsFwaglKu6YkuWhf2qG3WzeCcKs
NKQdMXqcua0FzPskssx5aNhUcz1eWL4F3Cpfb7Q4TkOZ2FAnukULNDnoPD0q
SUP3FO4/9WktwHXxiKPrZRoaOcZsmx5uAZKT1LH3d2nYuEILVeBuBb9QL76T
j2jIVUc2oSm2Ql65jNAbTRo6P2HRcnrXCt3cRmxX/6PhD1le7pdlraD56npc
xmsaVgzpnDVeaAX/poqyBCMaxlxgyCcKt8HVgETpQ6Y03CA+VrL2og1i5qJ+
C5rR0JLBzOoQ3gYR8nyzH9bl5Tdz3u5vbYPt7I67QoxpePCwzPPOre1wMnPf
s1WDdTkY93ySb4f7G+6OtenS8EsEkZlo3Q4Ua1rt7hc07FU4/TU8qx1c7D+e
KFSjYZ5ii2n6eDsc3Pz2WqkiDTdvXfNsFuiAJPfVV/sVaPjPk+fXqloHjC61
/WiWoCH532n9M4EdsJ/v3NXuozS0+rTkZUDtgI01/D9FOGmYwxI3mryhE+b4
yKHUjTSksDNmGDKd0FtIH0iboaILZ8OuvaadwGxyPrSpl4php0fD5D51Al8N
R6JoFRUz/beUq490Qjkhkr06hYr5M9ap2vu7gIfLay7Al4qHwi23SHl1wXZ1
Hii8T8UAtoFni6Qu+MBB9Np2moqMjYY3Qla6YN7GaK8bOxULdxtVPH7VDSYb
iBKD5DoM4Vvzs/3YDYU2ib0FkXV49spTW92ubhguHev5ZFKHqsTp+2EKPSBg
dnKwm6sOmyP9vjXZ9ID8kRkltvFaVI4wHiNl9sBNsXEm5YJaPO9kmEve3wtv
F9X3b7tbiwKrnDc+TfVC2FTq/a0va3D2kleYsEAfWFIVXsccrsFU8rGECyp9
QLwcHnBppBoPBVu8ZSrqg6Xw69Yf1avxpBjzm+SJPtiwdUXg6e5qPGA5+Ji2
vx+uHrNJFKJSMN/328Ibu344ueEJ34A4Bb0ybV9++dQPsjAn0ThMxkf+I08r
evshWHLQvjmAjOFd5gf8JAZgmIV6jmOiCt/wGUctjA7A3QsUpyEXEt41PS13
im0QRG/ev71BhITCx4zflJwZhM3Vsu0+rZV42cQ/Is9hEFi+j+hN81TiueE4
YZ64QXDhXA2OsEK8++eVaVn1IOz9Qea8W1SB8ZJqFp+3DQGrcmV4sXg56ixy
j86IDAGBsRDk+aoMm5uzzTTvDIGH2N7LttGl+Hr0UHqW1xDcixipnvlXjD5F
Src8U4bAjGa25idSjFWxnHN21UNgHDVd5PqgCO2m/mL06hD4G/7yT4ktwNu/
TS9QOOnAkPd0XiLno0aF0psFMTo4ft4U0fslD3lq+S5raNLhdcH9mQi+XPyi
P1LubbEu/7f7WbREDjpfmfuY50Vff+9HH9jcycZfz34eZmTTIc12p+je8Qzs
alK80k+mQ/tB/6AG1nScejlJxQ46ZG5IjOs8loYRISjuNbq+funALfXLqRil
usoutUAHVBY1clFPxiQWdu8XTAy4ki45Zf8mEU09Fz1DNzOAtVvay8IxHrV5
G1Yk2BjwvLrvd7hPLLo8v695iYMB3FoSCafFP2Ji7S/Fgn0MwJuX1i5fjsQj
6vffBPMwwG/va/+6ewT08Is26uZjwFwDWh1RD8aT88J8zvwM+DL7scG83A9F
b7bf8hdkgKrM3q10kjvuY3v1lekwA7Jc0/1TnRzwzQzfeMc6TvZ65EP4po+9
V6ZfbDvCAAMFHf68fVdh9wqzRcy63OBIX0EumsLnRdZHYYcYMGGsNPDP2Bme
FQXdnxRgwOFesYNzrp5wpft51YeDDAi9M0/5Xh8AnS9KeLN4GXD7ZGrMWGcI
fKJljR7kZoD/Rfavb+lEuHJFu/j7HgYU/IyJUhiPAtVnl27v2cmAyZEvXMNW
MVBWLP2CyMoAjp58uWrbOEjOme222ciAipNLZqH2CbCaO6xgtEKHiQDpSm6H
JHh93c8//jsdjFTOsHDap8CY6t2WgD46KGmksavafALJb2tGUlQ6UBtto8PN
PwMpY1Y5N44ONZpnxUXOZMFiqvJNL186mBy/nyR6Mhtk7BY2HbSiw9udxvGk
IznQIJN5wPkaHc7+7mo7yZEHnyqpQSon6VBXw5JavykfloeLV8d3rftjEnns
vZgPbm93k7W7hkBUdNjjX3shfNpuTEjJG4KGwgWene1FYJZp/80lcAh4fw3W
6DUXw9Wizsqt14cgWJR52QJLQTPEr7KUfwje3jrfM5pTBoX8vwT3Lg2C4EJl
FHd8OTyt36xUEzsI0vFDe+7ZIBRRuhVOWAxC8rJhiqdYJWTrSnxVuD4IRzSm
aP7r8+q91YmUvLEBmFo+z9FoTwIvZWPHfQUDoK+7z2NsjARV7CvaCq4DwJyi
lzmlVAUu4vyFB/YPAE1DOtuZjwzBP9+d7frSD+9tltuWHMnr716Sbva5H4Qq
VqSF6GRwdiV6WZ/vhz+eV9stiRTYLHWIMrXWB8Mbs8Lc5iiwp4w7+jmlD/pd
/Cr5blSD81P+Za1bfdBHvH2O8qMaLsdfTVjb3gdXZxRCKi/UwNvH9+SLGnrB
5LuTp6BnDfDknI+LuN0LdlZBBrM8teCz+fz1dtZesNBQFLz3rBb4dSLCrtb2
QLH8f78XPtZCVeHbpF/QA/HfFjsW99dBlLIxXv7TDdP8VVo3VevgmtuM2Hh+
N+QKBorWe9WBtMCr0h9G3VBJ/JNqVVEH4inKIhonuqHvDHv1rZk6yDQ2uys9
0gXOlbVf5A9Q4WwT/7xPRBfI001HHt6gwtcDvFvKWLtgIOeNfE8oFdy8a/cl
VXbCtwf7E6GICnXTbxlHrTpBaBzmK7qpoJ4VLXJNtBMeDWjcevCTCkKBmnnb
v3TAvluf5JnZafBxu7HYW2IHSEFqd/URGoj0WV5PudsBt6tc3sZI0yB1JT/S
j7kDgn4/2xt8kwY/zHIqZArbwWvi48CHRzQYlp44l/26HSYOb31frUWDjEsB
Zqv87dC90nic9TUNgk5q0w91tMGQW5SsgTEN+B1d6kU82oBvk1vknCkNbsYr
WR+80AbRK31uUeuY0Gy0m3m2FdaMOYKMjdZxZXn2YHwr3O+2KjbRW19vpqVW
9KgVHPH3rYTnNDCs/j5H3N4KhksdP9ge0GBtxUjZHVvg6EWZD1nXaCC1t0Hi
vVkL3Pz281OIBA0aJvsuxh1rgcAMttwKQRr41fv/KC1shhTWB/HnttPA+0oL
0VmgGYLYtuStzlFBe+PlY3GeTXBVWOW/A11U+OKTzyq80AjujHnn6EIqbFHs
iKJrNsLNrrFLRwhU2GN/4cfOxgZQvqj8UtycChsO/RSoOd8ALQV5rFTFdXvb
so/tSK2H/c3igb+OUiFZ52LJDFc9bFJX8ylfrQNF31/q1u9p4LPMXHW8pQ7e
1L7MSHhFBbMdVbNbjevgumHHnSd9dRBcnqHnd6EOQruU6ofv1IH59zjuns11
UFA9S7U7Vwul9s/m+0JqgbaJ79coezW4lQ81RRBqwIOd6c5mDwroCicxyanU
QDR9yOo8MwWYjzQVT7HVwLEa64CVlSrgSUjJirSthoS6CY5gqypoy9WPyzhV
DRt9jYOeLJKg3UzHaZFBgaCfA2oRS5XwoH2j8l15CnzNsbPlta2ECjX5SOMf
ZHj2UyS54Q9Cy4W/1nNEMiz+pp4c3l0BE64JVyQmqyBHZUMZ/UUJxH40nxl3
IMGGgPFX2fbF8JinQoGPnwS8F/VL9CKKQO3vpSEmrIQIwwyXrKECsJTrCti1
iBB26XeYiXcu2CpphJjSyoCltnvzw4ocsK1f3Cj/e72+rbUcefIzGwxl7eZ5
jpeCrscTtVG9LPiUHSZ/w7EYSD3b+78urtftNS5mBmcBxP5jYZr0T4WGXwYD
WjL5cC/vYZKjWAoomci8jHycB7+1qy1fuySCnPvv+87hOZB+vk1jbp1HCkfo
qa2cGbAyv6eH1ecD3Dr5cgv59meYnU7eFC4RBdMNEs8M3n6CfrJKHVM2AXIM
E7Z6f0mCJN2Ec4ZBfsBqWrW1/9pHMHxg8Sp+1AsCeE7Fen+JhB/hMnEXFd/D
x5H6+tNORFhtFjoepOsE3F1aVlolgbBLPmjSwu8pTOZEOPh8NYa5QIfF0Xop
kOxaUF0Mvw05RR8kimeUsCx88smL6Zcod6iU88k1Q5TRjGGVV3NBnv/YWuL/
c0ZJsx/XHv4XhlsmHWXk413xO9Fh5ebncDz1Knr1BfUdjuCkh9J0FJLS+i9H
tXmihZ6JQXNOLHrFm5yYzPfGd9b5KRJ347HtbJXYSVdf7EXbbcJfE3D/X42n
a28CcDfXze7LO1LwQd6AyPjZQGSwPQLh6FRMjmM/vG0mEGs1l6qFhNOw7U16
k+XHIOS8IcjNlfcZw2MEHslfDca/TU4/6ecz8JMgn4sNIxivLf4W1qrIxK/P
nuZKmIRgiytPE3zMwkT/He3vzULRVejohm37c5AY/zT5+tdQ5HJecU3uyMGi
xqV7Q3fC8C/DIe+hby7Sp6sfaH0Kw6NW+qlbr+RhpKTzt+9/w/DQjL1TxnIe
Hrkn2eV/nYDZjKvPZNLycbDoa4zeewLucVt6E6FRgFFi8gaB5QSEAcnhKtZC
fMv9llXwOwEzg2dm4vML0bJLbenMDiJuQ+GeU5pFGLa6S3vkKBH31Y4Pqm4u
RifpBLH//y+s//zv1pa0Ygz9tXPa8yIRjb4uGkrdLcHH/vkTpReImL9j8UPX
VAm+3NYrtHaaiMwZ8RJdnqVoKi37wvQgESvucgUfO1KG3ySbuSWYiVi8n8ZX
VlqGBie9vXQHCWj+zFfunVI5KkqpFglnEdBul7uO+Ug5uuizvI6xJeDWQtFt
diYVaEcPlJi8QMDUObUkr78VeDjmkvWppTA0G1coCXFHnLNl1fZLDcMN1m06
VzdXYrn3379iqmHI1TFyJvN6Jeq/HzoksxSKzLatPk7vK9E3iOTVEhSKvBu3
QU51Jb6KbGs4cCwUw8xWueSYSYiyp1/ezAvBmzrSEzxyJPzvy1iG/fkQTAef
95csSUhT/PtnuDgYqfnH6z+nk/ArxLxLOBOMT3Pq/FW/kDDpQxPTwq4gLD1X
dUDuZhUe2Ee0jNALxMUj3768cqjCTWXVr5RKA/CDwbd2zcwqZOxQe6m8OQDZ
pBqnuelV6Cs3VFMR6of/jlpe8GYjI22zQrnRbl9csd7YkC5FxrdqKyGyrt7Y
qPk0z+o5GZtHntxIHffEWzvL9jLcyegpnTl7WcEDb89e2Df0iYy879i7QoPd
UeGd69irBjI6G5a/PdPnhrbu/9VaTZLxfVAp5TOXK8qSU/9s2ErBZPGMgcg7
znj6eXXXP0EK2meKj5xbcMQWttJCHRkKXv1Cfup70Q692la2nVKkoBjn4yw3
eyuUFL9/+95zCjqkzX7WyTDDOcGfzCQjCn5TkDnHkmaET777NNjaU9DuzFqG
/jdd3HBLS9XcnYLxD+K3IMdzFFn1U0/0peBnyUXfT5pK+OXenUyWIAqaOWz5
dniUCXcVK130DaagoBr/bcNKRTh3XWHzuXX5seNm+Q+UNGFo8Qr//Lp++7Xw
pfexupAwFFCK6/ZlHv87zxZuBKzXzp0IXfffezEqDqvNwKOM3q6/Hl/3A2O1
+hIrYDxvuyajuW4vsHrod6od9NszTq3cpuDZsnb7sMC3MNAU9iRegoJfRsZs
pwudYabCrkacj4Kh5oEZzrGukD1r5B2xRsZbX05YRLi9gyyC2K9eOhljZx/8
d/P5e+AWWLQdLyNjCI/KWvhZT/iYf5WCYWS88D+Krjwc6u8LSypLSBRRkbRn
KVlKHKEUlRBlC1Gyk5QtCdn3bUQUQrJk3zljZiwzIvu+R/LNUpZSid/8/jzP
ufece++5c973fZ7PfeZUQkjUvyAI0OrK1rMl46WiR9xnakKAwP9GKV+RjGeS
QuXcHMNgknKys2YHGWWdlF/lbo+ApS2zkx7DJLQ58an/c38EKE13wNcMEs4l
lOp3v46EicP7v/+xIaHP9HTjslEU/CKqquWLk1A1fNNkAXc0MH0RX9i8UIcu
ar5ersRo8C9wb/vxvg53l0s4lZjFQBrvSanHZnR9nJIQ/HEtBnaG29eG8tXh
3xdrAcLBsZAuXGAjRSNigumtHXwccXArc/qtlQsROcu+pbK+iIN/y0ekTxwk
YoQNf+zNhTjIP/an9r8YxM9aNVuuXSWAPSt3TvhQLV5dZO5RTSSAstFMnPK+
WiwdZk2NHSQA86DGzJZbNSj0sb/CZ3s8mG2uOdAbWI3ZVWEChqLxoPCNd6K8
pAoDcoTs7snHw6fdZzdyByqxdhv8m5CLhxNfD0dWrlZgl/aVUp6j8RC5ZxfT
JGcFyg29OCyzKR602cWPnxIqxyHOajefBgJkLJ25/v5YGbqX6HuJPyGAftLS
Jb2TpejXpfPOdicB7kq/Dr5ytARZD8+y2RLi4B3znisB+4rR4niAk96WOLj2
6KiLyPYiXI9dMTYwiIUj4h+WxZYLcH4PTfdqRgxdL99XnP+ajxY8Hf++D0SD
Qtf46LH8D5hzIt8hajUK5Fz0L1r75OKn/+Q9nqxHQqD9o3tU9Wzk1Kv7MPkt
AiYCT0Y5sND19uSbcVmvcOAzZ5mKqM7AqIylgW7JINgTEnediykVa3/cYfwt
5w+r177wfjz1GgennIWT2HwheVeftNzlBPS37Ogz+ukKPkUZDinyEci3qKi1
KP4QmI7uHn4p54crFoKCv3vNgLLEX5Zc/AT5lXc7BimZoDtbU0dP2ENIMDdI
/fHdEY/t6B2qY/IF8yODtC9qHmhb1XrddzgMPlo8uSqpE4g/TQSWN9kmQH0b
i/xBg3As3v7v2Ozaa0gq4I2+2BOFatnaNzSbU6HyuE3s78SXyLhRaubs+A48
t0n88zyXhFv59ioFXMmGj5aZq5NebzDFqLeRRyQPBHNVzJv83mKv8NizmfkC
+Pdh24ZpXC72bL519FxmGZwo4XwhwJKPS9OnbobvrIDuxBMr7loFeKe/IGPM
vRJ4jdOmeJiLUYPhzB3XSzXAWmOm5fWoBPev2BkVZ9RC6DTHQMNsKQr4Sl+1
3ESE6hfWLwQ3VSJ300f907p1kExNY1ROqsLRfz2eN9bqoCaM56nZxRpc21Pz
/uhrEkQdKY8jGhKx/8zbxYJ+MsgnfA7PV6rDSoZfPwscKLBnh8Hl52IkPBe7
6RfL5nrIebpnxJOXgt9ZaRQVvgbIFtXY5clTj0qBes5mCQ3goxAoxcjbgNes
MmS0djeC2rvol1/3N6K0cIjk++BGaP7x5C7LySZktB/btvkPXR9KR0jIKFBR
jCtj+5JJEyi2qwwr6NCwKByTOIlN4H9ov/S0QzNeWwizm9tNBQvTrxXfIz5i
/IGpL0L3qODZW3V7V0kLnRfFBSq8p4LP3XYZ5uFW5E38Yz44RYWCCM6ac0xt
+OKDT2goLw28vt7f9jyxDRPlQ1NnFWiwlUWHfOhMO3bH6RpFGdAgevPn1aWW
djT+yXxcwJYGfkqqnwsfdGDPylPaYScazLq2zxxi6sS3ttqMenS/0fQJibVX
nSg9LK3TSZ9/64bfvU3SXVg675p/mR5/6N5Ey4/WLtyX+MPSkYcGDSpcqn4W
3Xi3evXS9hEqOLBomD3a6EY7Ezbp0QQqkLdxhtjF9eC2lQTWcjUqPJ2zERU5
2Yvn3tudtZ1rgsK59P8uEHuxL70gesS7CWDb10FHrT7cdyBlfYW1CX5Z5nQb
TPThhYw3h969aIQd/4or0u37ceKLtsjKYgOkar5tX/rdjwYv5A/PaNHrN8Ao
OeM1gDQ7td+v0uuhbtnw5FGmQaw3TYuQ/kaBobN/K7V8BrGjUMB55iAFcrqD
mNnWB3HaNVnolwYZdqeOLCw5DeHdMG6lD/YkSBGr9y+YHMIhDcNpe586YBon
F85oDKNEpUJwejARVNnvFKqUDKNeUAlrHBfCLPlBtS3PCFqlSpd0/KyGPxzN
Edy2I9gXNdcv1lQJ28bn2WdqR/Doi0DuJb9ykN7NTUpnGcU/Yh05z8+UwqX2
1Cdbr41ioNUZGZ2OItgoKapsCRjFSp1DY+umBaDyp0OHUj2KA66SO67QckFI
Xp9S8XUUr8q1yf+rfAdi9RpXlbaOoUjhptjsl2nQeOe81SaeMYx7nvJkU9cr
yGIy3BO6bwxVjssleRpHgc8PBYkh4TH8HEVobXd+Bve7qqNmDo6hfeXAZy7t
e/hl8px8sdAY8rVb6fqYBKFs1swl2DOGxrJf91nmELBN58dAJPsYZkptPIpm
S8FwCU1Nu7+jaHS2ReThmQykqJ+M8+gcxXtXuuz4rmXjxAjceJRGty0/2i0d
zccd8T3h3tajOCK1spr7ms7Pr+xVGzwxiuH7BHy2s5Tg3HjMbPnkCDoxc953
MivDh87KUwZxI7hehzmGuRVYUHX+AOuFEdQy5h7Rm6pCq25nH46pYdxv2Oq3
i7UWv/+XrVPuPYwW73IVj7MT8dCIUok+/zCmnZN46s5ah8kNP/6p5wzhKuuO
lx5rdWhUuvnMlOwQPpFp/1cxQcf3e4P2z4mDOLOd9rSVzh+mdqtdfao8iL9X
m2+aBVHwkfBhPWnSAL4SJLFJqNfjufJ70azyA/g3+/qFP+v1eDuz9/Ot4n6U
G8zVi01vwDx3i3T3o/0oeu4m34RCI4pZ5Ep2vOxD3w9Dh1ppjVjQaeRdytyH
1O2zvtpXmvDHu021z517UVeyaPVJZROO28n8DBrrwWjXfOOr+6l4NI7Qflit
B/M75LfMPqKiRLykemZhN4ayGM2611Ixpj7A1YC/G22KOXcf/0tFI6+3d8Kf
d2HxVuP6kydoGNsgVBf8tRPTPrCQ667TMNqnQSZZqRMVCdnOSRY0XDgbyL4r
qQPl9ElbAh/SUBcrH8NqO17vsrH8Zk/DzwxKJIub7fi5imPh1P/fazSq3u4s
aMODw2vKn5Rp6PNkpo60ow23UR74nxOg4WONDsfPE624xynWav4LFVVGPniI
vWvBU4U7jR9kUum65blds+NH/FDzpPOIERWf7qXt3a3YjBsdfZ65zFT0YzUo
NuWm4enQf5Vu75uwLGOF7fe3JhQoF5/bodyEBN0za/vp5zj/QPvf945GrJ2+
XcWR14DGo30DCfqN6KPFGsITQMGl3kYDFe0GvBTnLePpScbt/63cl6uvxzXZ
6gw9dxJaiek6/CdRj5z8+hu0ACKK+ghxqPwi47iqZ9V2SUSvvoC97Vpk3Muk
KL9uWoOj42sfB7JI6GXS2er9tQIdP+3v33K1Dof4fX/yK5bjrcCqlAUCEeuP
SKidTS9FH1uFxBa63JGeeedPJRShiNeMYltPNTq+6jnAcagQX/tNMSsYVCHq
llx8hvl4oWIjxXWoAhMluxaLpHOwg43tCKm3FMVZCi9Pl2eh8VSF7aJWCfoO
fMqUupmJziyLbjItRfhnofJgalcqvkTrZwx1+bj1Ps/PpfI32GhlLPrtcR7q
uok1RVkmIaUqk4tim42bju5r95yIxfa2AdkA83SskIzwXDKNwnMdR/L+3ktF
jWdcIvl7wjDjx8Xp4b5k3J+6LdeU9BxXZi/tmNsVjRpny4PXhV1QJitiK1dk
EG4oqg+moxV2P/wWcfyoJ1rlS06oPNCDJFG2S4U77GCTuz/DXL4dMJ7qGExM
9AZR0cn++MYnQL5zKSY0NBQucQ8lZfr4wHGDcwGqT1/CbP2CY8WCH2ybOTCu
W5EMH77Y3SkXCALBnGuvBhZSIKzhgcZkZTgoHvrF776cAQLziblDfJFwa2Xf
fZN7WYBSog+nZKIgosv0zU1aNrS8UeBykIuGRjGej/sP5sG8nJGhkUgMVMyh
fr1MPoQt5yoGL8VAlucVo+JbBTD5iZDflRULDFWGtEuOhXD56kQE1+U4cKPY
7rT0LYKOwN/vdn+i8/GCijcskcWQcDpaZESWAM0XbjU1vyiBr0Fdg83hBPh+
/dh12qNSICS2iL/oIoCL6+yRv0ZlIC9rwZK7LR7aWSICdS6Ug2Hz457Px+Jh
Tq67p31/BVQJMAQ00vl10DnvWMufFZD6JDByic6/k7eLmPDS8SWm/sEMw6l4
8C/V7++JrgLmnz9Y/HbFg/jA+9dv9aphRcpxafcsAf5ItF3w3FMDFf8NiV0s
IYCEaojk3c4aiDkt2v7akQCX+eZIGv610MB4+VnRAQIkcm7jUJVCePHo4UPW
hjhwkd3/+/IwQijz2acnjePA/WxSVDYQoXGkbsfruVj4qBa5VBFKBNEFD6Up
x1govmIk2N5HhEz9Ix3PZmNgzNZkelGoDlg/8krMGdHPN9rJ6sD9OjCh0Xyy
GqJh85sDXMbv6oArIaNQ7Eg0EHhZg/Km68By+8L95WdRYKRi07BThASJqhO7
HdojIeNK/88wIxI4i6yy7dobCdnxbAGHY0gQY6JgddMkAhwvTwgON5LgU268
/Tn5cIjp9EwoXSXB+bmopvK8UGD4z2db2WEycB1jSvm9KwSqZ50yJzTJQL3K
ntPqFATDvaIz8m5kqA1PS9pCDQCXW/4WLa/JYBz++eyD3f6wuZdxOpZEhoLA
e+bVhi+gzfKN9qsJMmhqhopTXvlAj31T7dQGGZhPtn+T730OF+auGz3hp0Dp
4SXpye1ewBEW9kL3NAW4+zV3D3l4gI5JQm6AKgVMWYxe7et3gfibLyy59Sng
bvGcOCvuDBfSai3XLCmwX35VJ9XbESpkvV2vPKEAzLsShdKt4YuO4VMGbwqU
zyaZMCmZg3wyOh4JosCr4Yqti9V6cK4jx5ISToFnkn7ls0sXQd/NOnQ4igJH
j/85rMMghkbtWntcoylgFhJqrmajhRaqqYZJkRTABQM7dh8TrPj9oPxGKAWc
jZt3OVEsMNDDPfmlHwXY1l5z867a4ZrNkwjPpxSQq8tcm2B3Qnvxrv1bH1Lg
iczPyey4x3hYn+GrtDkF7K2YP9/a5YablIIJvDfp+VyV9o4EPMUuMf2pvAsU
kDkyE7HPxQuJ1V9jNotSQPjGuLXsIW90XY5+tHc3BWQ7ZMSUm32Q8GHBkOEf
GTwExFfJli9Qqf+QROk4GTSU5OyVGfzR5KhxvwqFDPU2moVXwwLw2fyZq0Vv
yZBcbXndljsITd6c8GX2IYMByxlJqfBghHIpX3VjMlzDjUzpTaHIlaqg63OW
DK9FehW3Wobhzts1rGVcZPi6WblMOiQC36zcdBerJsHugf+IrPKRSP7ptSsu
iAT7n4R2zn2JxFGrj4Q6XRLcDC7MSA2MwrdDnCKVQiQ41txiOCcSjcJXDSYC
vtZBPMsZj+jyaBTrjGeQyaPbTnJfDVRiUPmobGGLYx10svgPcDTFoFDkhLiu
ZB1M+TwdclaOxRfT0mX9i0TwaPxGNCiNxYvaoUGm+UQQZu9MChGKw2RD0vef
1kQQnL7b0P08DnczskilHSLC0gXB+i0Dcbhn3e/aaCWCbeBp3dmjBOwepZxu
PoxwWmDWVN+OgE47Y5r2hteC5CHrXwfeEzDwpFv9l6UaCOF5rLp7iIDWkwnT
cjo1cLne8zUbUzze80hbFiuqhtKgTvPeA/FYy0ms6GCvhqfK/zhvSMWjl1oC
27l7VSAeo3b0mkI8/mI0bXhSUQmLjwMg83w82sr1tSSzVgKP0tc5GYl4lNjl
yE66XQHftbhb+/ni0Ure0mU5jc6f3WxcH/wk4LjxD5Yrs2XwSO+ZL7GJgP/E
9Os7TpUBW0eSO4YTkDNatfQtvd9qFmaPKqsTsD5u5nt7cQkA8h0U/RuHbCnn
omwXi4FFjSXT4HUcViYoEYNEi2HZOrc8XyYOP0fceX/+fhFk8TSGcVBiccUp
JDDuVSEMchmr3laJRZ2IyjfZbQUwJpQ15Vgeg3I3+OXDGQvgmwrvDUWhGFxa
cS69eTof7Pz3B0bTonBnRVFOOm8uMKrw+X3ZHoW5AuJUc2s6HhlZZQUpRaJV
9jfwqcoCnonkZ30c4fj5su0XN80M+LlTJvjfyVDsKPqcnUp4Cxyrqif3nArG
bXXuqw0DqXAtu1wx8T8/3Fd56N+lgmQwO6Xi90veDS/t3djOYRcBGb3q2ivt
j/CeaZJ8cXogFJrO82Ub22HyH1sr+QfeoEQQ/9esrIbOSa/E73TfgUXy+D8V
3ifAectB7oRrIC60tumMyXrC54XpnXusI/DzIuHPeJM3yPM5ccTw0+/ln/nJ
/kdBcIiVSeOgeyLeuel64XNILDAxMy5W701Hbq5f76sqCDD1KG6l4L8MvN+W
IL689BIS2WolBsre4RGxaW23iGRwyr+rLayRgycqHsq/P/MWmAxQPKy0APUO
683peqXD3msWUQLxhfj4g/2pxI4MeGvqtZbsUoRC/Cx7uoKyYPX6tq1S0iVo
J1c/pnblA2T9Hth5K6Uc9cPqq56a54OT1KLcdZcKjH52bMLnSAFwq5l4xVyr
RAP+6HWmskI4/KxGpnKxCpNuLUxL/y2BFkEx472HELn0DLKGOkuhdfZKssIs
Iocqp6DnhzKwnfL74HObiLpbN57G2FdAhp0g96s9dejFHVO/d2cNtAUM3ZkK
JiHHcJ1R/qZaWLPgcvlvkoRR5KzEn0u1cH5/GI/9eTIKfGmOlHEgwvrz+NCW
L2T0uid8/uIcERwMZT9HnaWgZcakUqx1HXwOH8rPo+uPE/eNT3y2JoFA0odL
dUfqkdnXYqZzjgTPe/I2v3Wqx9hD8VWzDmRQtLp8qKSmHvmap/+6ulFA7RuX
idzVBty09aaJWEIDjD6tf0nTbERHzfNFISKN0Cw22LczrBGvbt842fWhEci+
DGT5pkasMhpb+NPUBLPXv3PwSTehmvJMX6MuFf7b3MZaatmE3C0tR/WmqFBX
2zvDndiE/6Q3t6cwNUOqWK7m/M8mtD/wdNvF2GYItwpv0T9Axdin7aa+hz9C
QMe33RZXqPhKd1lFp/wjyPOkpLHZUzFg6eFojloL1LwQELwQRcWXdizHvYZb
YKPe3YahiIp2gepfyQ6tsDBDfKfUTkV+CdMsG6ZPoGO5cnLTHBWPH+xtsov/
BJzrRhFSW2n4SYpz1oSrDch6srYPBP7/Xn5QPVO3DWRFCoMNxGiosHd7xJZX
bZCws+smK9Bwy47OwsfjbXDrlIiFwzUaXu4ivVo53A6nucXiA/VoGGp58dBT
m3Ywzmf+qWlGQ6NnfNzMhe1Qd7W/qd6Khh332/dG/mqHu0StmHG6XvJwfTCz
U74Dphwk9qTS9VTEv+YdAd4d0HM1R5fJiYYcAW57vzV2wB3OheAtjjTMmhAJ
kGbvhNv8bmfTbGjoaHeLZK7VCdeOBAkP3qMhy9pxUQdCJ8zseHg925CGvlz/
9msPdcKWv7MsOzVpeDFQ/PO2A13gvcPiKztdj5V5LFQG3OuCKwLn65NO0/CK
4eaRT1ldwC32jUIUpOGYwBv33rku6EpW0H3MStdz2herXp7qBmK4hWTtIhUX
j72p2eHcDQ9hu1l8HxUVvjxKki7vBo97l89uqaaiDXfZ5SfyPVCQPVj40p2K
Mh8/nPF71gMfdb8Ekm9RUV9P5sLJuh5Qeu/t4HuKihn6nG5mjL1w8T6D+ghd
383ks3w7pNwLd5z6NDqHm/ChNn+KrU8v1IvJMN/Pb0LtVtvsM+ReiBBxuvHS
qwm3qWqwHbvQB5uv/Zc2v6cJh47oxqg964MTC0WsfJ8bMae8f6Czug8uF3aU
f89qxK3lSzpbpfuBrfC+IkmiESsoR/6lOfZDNHVhd/33BjRRsL8SldMP1WkJ
YsF03fg6vlJWTWgA5L/dK3Y52IA1YkeKmPUGoARMqnIG6rHVpd9nU+QA8FVz
n6kJr8eYDavQkPUBWO13FY9YoiD3yzUd50+DwBFo+64vlYyficRDTpuGQLzX
+WbTFTKqZOuc9T49BLoS/m3d8yT8euKaTV3kEHSt+bk5SJJwX2yX41ccAq9o
PReuzjq0Ww8I5JgbAqVQwsQvhzoMnijaoqoyDB7PPFwwk4gp1ecvatoNw6d0
pmelikRUv/H9uhphGByXr6rK5yNmHjD97/fUMPAo/tk8zlSL5bavLLPYRmCS
p5v4+XgNtn8LDz8rMQKnWW2Vj1yvxnGKx4UF5xG4pKFo2xlSiUYOv4xaXo4A
MSPbnzm2AvUdoh6oV4/As75Gc/eEcnQ9muLD/28ELvqNH3+dVIqys2m19wRG
wTZvwSA6sQRpT0QVLsqOwqq/1Cd1QjF++hTeV2Y7CizmjVejAwpxUsJ69pLf
KHw5sqPdwrMA2W1cZe4mjYJCgapb8MN87DQvvsJcNAppVm/HlGh5GLPJdF6m
cRTOnzOdfZmTg6E3+E9+7x+FqL540t2Q9/iIs0lF4tso/J4MPzBp+Q4HC71K
fv0ZhcThXKr5xQzcG3pCII1pDGqjVW1OCL7FBW7WYXa2MRjfEpzg+SsF0xXn
pat3jIHRzmOWV5JeY5G5qWHerjEweW5V0HglEedvpyVN7hmDlYrJ9M0rcTiU
bmJhvG8MbnoH7gl4HYVnXhgrCQqNgUKw13JNdAhuXzvYKSI8BuV5wmbCMz7Y
fiO43+HgGHh0zvEmeD3Gk0eMJZhExqDGZEvbrY6beCZ07OMo3f9L23DHfcEH
8OCqei0T3Ub5oGOn1Z5CYoem6KMD9Hg7c4Lsz/vDT7YoA3HBMVB6ObVn6GM4
EAI2p8nsHYOcsvL6/OMx0HDV2DmMj76eCkMZH6t4kMh5biDFMwYNCqFvrdJf
wYWohmVRTvp5sPZLPLF9AxuvTH66sozBxKsbK+ovUuGsffZxgc1jQA1Ncf/9
8i28vLA0dnh1FAYxovFSdgYwWdU8on4dhSsP59nXyt+B4d//BIT7RsEqRqlm
gvQe6ngK/LbS62d/7o2pAy0P5HckcSUmj0ISEa71meUDK9Vf7lfAKMwsFT44
blIAvDcVdPboj4KLVtTlF5pFEH1GnWFGcRTUxYoETS4Vw5BSZU304VFwyioU
jJQtATU3vrWw+RFo7XONTOEpg7vzD/7MtI1A1v2VltvrZRDZTmaUKhyBaZZ/
tF1T5YBSA//yHUdg1w2HzNtZldCxOWR9VmME2N8JiFX7VcF4rqSwuOgIxM3t
pIyZVNN12O2nQ5PD4Bp7w1eCrRb+0MwOauMwMB/PlobBWuhPym74Ej8MZl4z
W3syEZ4f337a48owUCV9/aQSiRCv5/mOMWUILGWlFzfxkMDvz5++n0+GQPN+
0ecsCxLc/97geu36EFTFkJ/nVJDg/e3M72d+D4K2jmFl6W0ynEh4Lf6pZRCc
Uwl2FelkaOeX+jCSMggKD4cZ2H+QYfK4G4vD5UFofHwj7jVd/zV7uQr95R+E
Skuul4NNFHjabrfAPjcAFYc6H99lr4eqjpC+ofAB8OAPk74WWQ+8qXebXrX1
wzFOaQz0bQCtysn6idf9cPYYbZ29pgEOfzxN6rTrB40/ercHlxqgU/udfyNb
P4x+1Ra+adgIJprxLzv6++DhD0uLTWGNMG1zRu5lZh+wn1ez/VvTCPEi9qKW
Sn3wrnW/zCBfE9gqPjZw4+yD3w8e76UoN4F8xuNO3aFemKD2MjLYNsFW3vxa
L+decE2XzHepbAL2lA+J3Rd6ofPLVHXFSBMELw7EMnH0wsvYeG3dTVRwn7jP
uZHeAypcwRw5F6iwqUDhWbtjD1xYvelsZUwFrSt/Z4Pp+BSU0vE1zJ0KTtNb
3p9i6YF9FRUae+Oo8OOU4Gp9VzdQKu3f7/pABR5GbZarb7rB+9g0l2cDFQx/
L2w0WHeDkNDz0ttDVLgy1dWbydgNvyQlpx030yDky3wed2sXVFWaQxkPDWyb
993yetkFO3I+WXmI0GBf2t+07+ZdMEPsW6ecpsEar7uehUQXXLBmSI0BGsj2
rZyY/tsJwaQvrAtqNBiulCc+bOwED7y50XuTBlTX/Ozt0Z3A3KumrW1Eg5ip
a4/K7nRCMuOur+bmNAh1aItwPt4JCObZO6zo9o/GB1d+doBvhG2cvh0N4p6X
3pQidUDxc47cS440YLwpniwX1gFd536t9T2kgbrtr2d39Dsgh2/g1S4nGqzy
Hz385nAHzHe8yWag+9O5tPMYl9rh/tFMjWR7GuRxvzsSgO0gyfG3ZNGaBiSW
vdGnQ9phwzCVi9GCBv52kZ8367UDbWEqoc2EBgq/N63/O9QOvhKpYXf1aPDM
KqtCeKkNtjImiVbfoEHyg1NjTsQ2UN8Yqxq/RF+vxojoUmgbnNnY59UrR4PC
8WrNVIM2+NXKQU4Rp8EfUtuc97E2iOKebFURptF590bEwR+fYJYpum0H/fwz
lAOuZIR/glOs4WpUJnp+gR/tEWKfYOXFo8sPl6kg23VubKqlFTgOXuzm/EyF
ezfYeN7ZtoLKn59/0tuowKax7Vc/eytwTW0jydZQYX5A9EWcRgv0kJ2vmkdT
QSmjue/Qj4+gKD60a8tTKsR+PiUqFv0RWvR+BRfeo0ILjU49+pqhcmnGQvkM
FapYWHaiJQ3GOdZMsxuagKST1nCNkwbvFrYcF8pqgto+CWvzEiqYTYpvqgtq
gpzjn1PFN1PhH/tr0Tj1JvjROLhmnt4Ilpe6jFfJjcAleXNYX6MRpGMOvJN5
0whay4bKn383wG9VuX9E90ZI4TJv+HCjASQmyOpEiUa45nE7VXPL/7/jM7/a
HdUArnaKO38WUSB9tmy9ybIBiqv6v0uaUUB//d6KsGIDmGVS3DzJZPDf0SjN
+60eXjx4XG0UTILz0te+G52rhx8vWJaHFEig8UR8cmx7PVw6+PTx78U6SKrb
dnNyhAKKfczebEZ14O56X8T1OQWu8oTnvpQlQpxF9i6JOjIUhQf82TmBkPxN
pXB7BBnyVXlnxW8ieG6cnX5+hwxHLMbGDpyvhd3rEX4X/pDA4E6F92f+ajD6
LldqJkoCH+7Lu15xl0OZ4Z/9gb5E8MyNY6wPLYN7Ouc3R10hgoSkfIMhSxmU
kA+Wa3EQgXGNZ6WLqRTiMhOYOMUQwh/MStC2F4N4qp+boHoN6GcKvCgxzofE
60qpjE4VcFjENN5r7APEvjxrnPezHLif3uRQZ/oAVpSTeYJu5UB9v3/XonYu
ZK5ZUe55lcGe5112otzvYbpzaNdGUAl0PI1NNeB4C78Nrk4delUAfv068qJ6
afBs488l2f0FMB/uY+iRkQr2d2RB+w0d/5rvi/leTgHuXP2Ju3Tdmnl+SPmN
dhIolT/4O26YDWS2ln8/q6LBVVSAVh2ZBjZC3QklSVEg3PLozr6EVCCaajYs
+USCFqvozp+pKVB/9ZF7clUYnDWhflG3eQ11pAf71UP8QETdXfl4AwGO3NLy
keC2h/OzemtX7J5DxeP3D4TKHoDka492nnl3uDpwtmn18V3AN0UNq0zOkLFX
7LvR4StgLxJ/2IDdCEjWkl/WaSaY4RmkUPzHCa1eyV65de0+7ok9Wypd5Ya0
lGdtBiXW2MfdMEuu9MLmo6d64gWc0G2G0z3R2h/XSH43SJuf4lXOIQ4u7Sjc
sT3zid6dZzgcU3hW9Gc0etzbXHupxwt/J5r8DifEIqvpiDDvTh8ciJW35emO
x9DIOaZnF/xxTrbbJeTca+x6n9K/GhiGl096WIR0p6O2C9WyTy8cGSe+m4rG
Z2DUl0TpgzsjUPFkY8tHvUwkb9sn69kVgY0X5Lk3+t+h5NzIxaCzUUi2/DXz
tyUb1ac6uHRDorDBRrhePyAHUwhDEoShKOyruSGUdSEXjfqP7IhwjkYmzcgn
7AV52PvjCfF3YAyG71MXMKvLx+xHamXs1BiUiyiWPMtfgIfe3Gogb4lFLQWT
UK+HBZh52/z4SZdYVJ+NYjY5UIiqUOswkxuLnSk+xT+fFKLFdvbCO+OxeNLQ
rvRvSyEqb+du9bsQh4N7ipevuRThIfYZexW7OGw2Ptr98mMRTvz4nfApPg7N
z3zQ1hQqxvis0HGz6Tj8/CEmhqGhGC1cXROesBHQwnsv9y/eEpRke8prJ0rA
tLHvmbqWJaiWvM2Ez5qAmywO5FxnLcXYO4d7uQMJGHF0OS3cpBS1T5Nu5bwl
YEH2e/u9paV48nq969caAvLpqt5eZi2j11uytbWLgJXhxu93G5dhx7DU6L0Z
Ak6ms5V6F5bhiXYRieK/BHy40tMqs6UcxXfFyhPZ4pFPP19d6lY5vtlp9jRi
Tzze/G/Az+1dOS4o4Z0Th+Kx+evI8Nbf5ejddU6NIBaPcTzuBf2XK/D1k66U
Aal4PLM/7t4ioQJrX2yp+3suHnOdJUxvfKnA5Nuf1hgU4nFMXZdjSbISs2aa
0v7/fpt7mGug36sSv6WdXG+Tj0f/JaMzTC2VqG7/5do7+vzwbL4IR74q7FlJ
afWgxy90+Xn3gFkV8nP2l9yk5/+u73yIO7cKD9tMnJamr0/3bpvWpZ9VeOUu
g/0R/nj8a7D0oFKhGjOm7EPF2ONxsMbuq51fNZLyn2RrrhNwuc36pllLNcZG
PhmLmyOgE1fKaQJ3DVp2/5JnGiTg8dpLbKx6NfhptPzT6wYC7shis6xKqsHa
IVKifT4BJaVZ+9+P1+CmWOdU13gC9kTW/NcrUovFpvEjZE8Ckvb/EleyqMUn
Z6wu3jQjIBN71/mZd7XYTi5okLhEr69EUebHmVqsuFFfPbWVgEM1G38vWSI+
kL79kzoZh8vLe/YNZyJeI3B2cdXF4ZUFD7a8KUT903c/fn4Uh08Czls/Eyfi
g5fR3q5X41BQIeOfwjUintOU4QkSjkPllimFRCsiWlpQaadpscjVOix07C0R
X9LOmPckxtLrYWurTySikZ0Yic0mFheTXIhHhogYcfrxcyXmWKT+Lh+M3VmH
ORGxLJ4SMdhJLCNXudXhDckXk9d+RSNDUww/NboO90y/9hiqjsYLuq80HXPq
8OEF+R1XVaJRWjdqKHKoDs8ul/HKbo3Gno+p31mW6/DMVYfl1YYoPBYocG8v
Gwn9RLkFOC9Goc73+l+csiQ8GG2tZc9I94dvG/p+jYQvxjfOVtZGYkxyc461
GQnj2mRbDp2JxKHR0kyxUBJGEXVPfqP3EzJxXnJ6kIQXUpnazBLCcUxZR9Rg
joQKjUzHb7OH46lHMa7O6yQsbFOWjp8PxW/88uRXgmQc5feTWjEMRVGb/clZ
4mR8zJJVMEgNQTJ3vZ8hkPFARmWwxetgbFq8dKHYiIzjXdy79jMHo52P6PJt
GzIOWmk/9LIPouvSucdpbmTcbpLXZXUuENMeNhYeiyOjIKk0lVLnh94XO4J+
N5ExVzP4RpOQH35ptVNs7iJjBP+uT1WeLzD5o+gdpTEyrhMz1qNlfLHyLy1d
6CcZvV2DAwKjfJDvp1ulPwMFgx5wxkbMeuMq58L2GFYKqjZ6UZeTnmPrt1mV
V/somPa7o/juihc2nbzMF3+YguPstVmbr3qh0X/MW86KU1DE6vw5hvmn2Nlw
h9UKKJgXyPSyL84D2Rmzuf9comC9Of8nPQV31Iui8opfpyDPRT69l4EumFvU
suJvQMGLO5YWXESfYMTaWXK2KQVvfjOZVG5zRq//fB8+sqDP/53/ifXhI3y3
+/r6uA0F35qqXB7Z6YT3r4aYLjtSUFKgdry10BEDuUMJ2Y8pmFJwWnRO0wEv
KS0nbnOnYPre/IfRY7YYk1hlxfyMghl6Vof+E7DGcPvTDHneFBwsSvPf0HmA
PKr/bq++oOAb8sf3y2H38GTMrofTARQUCt2d9F/DXTRxoF52D6ZgZVBaJ9Oa
MQrdqhooCqWggeMrycoH+jixMn4oMpyCmUKPLGS6bmLfqv9R7kgK3tdkWvR4
eh2bJ9XHz0ZRUOzjhxFhTWVUXBHU2BJNQR39NXmqqgTuZ1ZzdKbbbFs9TrZe
4wNXfzPVILqdLysQ+cDuPCyb67Ur0+2tLMc+bzW/Aik8Npyp9Hhj23UaelS1
wDlGnDGdnk+g331vx9AtGHENfn81goK+wqHWRQ5GkLeliuVlGAXnChe0Xz03
hRilaweCQij4+/78GKeaOZAOH1oSDKLgxxupWtFcFmBOcn2u70/Bp7elX23p
s4RRu57Ws74U3Lhel3sxyQa+cwqM1HhRMC7yi9NpU3s4ecOj8IsHBV9pVll3
czlC+ncfjWIXCmqrGzMOtzuB39vbS/L2FDwgWzSZdcwZ6gR8NXZZUZD1Xoyt
r9djWMkkcMaa0+MnBkwePOEKzevWn0Jv0/M/POtL9XQD87wf/Vu16PfT2VBU
od0diMf+MzqqTsH43J1DOg894SgofTM/T0GNqn6XfuIzSEhf3eR15v//rxKZ
8dPPC0ReteUon6Sg9Z9tN8jtz8HSXGKYwk/BmO4NNjMjX2heehH+YYmMP28L
DTCv+8Jjl+4TO2bIeLKfL7Qs6QVUKGen7Bkh46ET/T2cA37gWX1a+UgjGd8f
U3ue9dgf1DTtfE9UkdExr0Lm5M4AiO66SOvLI6NS9u1PHy8GguS/8SixWDL2
+vLkDAwHQrCOsFivPxkFKqqCCx4FQfLe1fWj9N/7/rSIwwnJwbCbLexxE70/
SK+yNz2aCIUwqQjVVSEysueT277ah0H0tU28szvIuModc3DqbxgUQmVEIAMZ
55nHGbK3RUA+w6n6uhF6fzKa4TVSjwB1rj2phi0knPmR+FMpLALqTN/YplSR
8BZ7b+xLrkjYbV+z5xiBhHLxh3czatHtTRxCNr4kXJaJHw6NjITfbx+b6DmS
cG00O3OdPQq+Bx0eO61Gwo6xQIu2v1GQ8Fni+OSvOuSXOeowciYazPrPXHOf
qMPbsTfU5m2iIeTKxds1H+tQdSDRj3EgGo7fPeev9KYO9xu5W69zxIDhs9ah
F4F1mL6seuSbUgwM8nU8ffSwDn/gWxa/zBjQkk9iu6lch7saOhJP9MXA98wQ
sYsn6OOtuYfyt8XC1VpgmaDjS9rg271XzGKhKqPstuA4EUX3cDtoh8eCbr0Z
M7GRiAZD5bwnK2Ph+Y+Mqe15RHS9mfxFenscKFx4k57tSsSEv9SUVOk4qCi6
6FJmSMTLHPpvIo3jYIXj3kVTIGL/5tHWiZw4ONx5yCN8MxH7vlplnG2PAw7H
+0+P0hDb+h7s+LcUB5YfpQzsQxBbf2QVF54hwDjrjYRSDsQQUq3dSy0CXJo0
qylrrcW9O6iV3XYEuGDXVv0rtBYbTlGaTQPp4y1q1h9frcXWG2afZFIJ4PPc
85sUay0SSzbNa1YQYJQpae5MYw1qK0SrvW8lwPWGccdHPjV461sMo9wEAfKV
jKeXFWpwxfef6PoSAQqn3bH0dzWyGIiNzm2Oh5CwNdvKomrMOzYpzLQzHv4T
57RksK3Gxn1HGeT2x4N3s86xwEPVmLSs6BLy/++93X4c0xmuwjDVt36LEvGQ
TAr9ah5ThT9+TQtZyMSDzi6bqXK1KhRvLpKelIuHw9H2aZoMVXhWuKjATCEe
BBePvhMvqcSEOT/nUbr9smDCXduyEn2byow15ePh3dPcrJq9lfhR5Z1q0dl4
UGyxQbtPFbhk7r++LhkPR4s/X7N4XoGChsoaYifjwZWJ9DXzdAVKPPFYPycc
D9GJBYdPfS7HGEUX2v7d8bA2Y5ayObocQ5d4rDu3xUNh2+sVQaVydBaoidT6
RYDPbzXIft/LcPsLg5nYSQL0+4TnyiaX4Yylxm7CJwKQB6r0pdXLsOqPSalG
OQFeqno98vpVign7S00qkgmwL+1LJm9aKUaHN6a3eBMgyuB++tq1UtRwNRUa
UibA3mKujsKUEjyusleHKkQAW8kRpxdqJXgsZ1JY9W8c9D0+XP9usRgfRpSc
H3gXBzpXj/hOKhbjtdKNGxPucVDy8rH3+pciTCqghZlcjYPHe6I0bUKKMP9p
Nu3tVCwwZHB+uNRdiPruXHpGebHwiFVsvtilEDXNQk45PooFrvpSYzeBQhR4
ExQdvhoDqx5mVhzGBXh49d2jkNIYmK4g9oxs5GPRA1YNqmMMQI/wXtY3+Xh3
17kb06PRcKjIYtd/1R+wus8xtjIqGsIXJW/b/s7D58I1OwqVooHv6XmxvDN5
6HDXm/DjZRRUXcQxh8wc1BnX6pkViYR/J0vLpD2zUGvr6Pu5hgi48yajLan2
HYZZfVuE+xHAszRy/e+/TNyxnpjlfTYc7n5/cj3FNQMT/zIuCrcHA7fTCE+H
eRq+qFHS/P41CIbylXtFklKR6vGf6aa/gbCdvS3SsysFc55KydSyB4BsB9ec
huIbfHTbYvjarA/07dNu1N2TgFtlD52f7PKGWT7ruDm3eLyeOhhoWPYcHpx3
vVc+EIe/5IRLvDs94cmNirfrMdHI6XTq/r8tzvB1aFiiYSYQtRKPJQQ9oePz
3TnlY4LKYLW9d7MK7w10j/Atkwi5C9Lhnq1fVA0xv5JJdIuYA1wnzV+59M4K
y1Itg19zeIK+w6BKlrcbFs+bak9uC4XWbwf5Ez4FI//2ytTVmlewa3BAU58c
ihLeHS2bgpLhgf7BSx214Tj1bG/EsxNvwFausSzsSyTWEsv8+n+nQAPxkdIl
kTj8LZ7X6ZWYDkSF43s5zF7jj22r3mbzOTAuc8prr+EbXHm+V9NvLhc6UxJK
T7Ok4He7if6B2TzYzs9794dVKl5g89y57pwPtQvX+Q9fS8ex2qOLGc6F4Kgg
kEENz8b4a0tHXjqVwmOGAs7z5jnIduhYzufFUuiViq6xlsvF+rplty0Py6Cf
703OjsU8tP2Vv6favhz4d1sJWSgWoHPH/Z82Dyrh375IXwvuEpTYtLCqq1YL
df22jldiSvD5hKZwKYXetLcvtqTsLsVeWW0aQQFBiPTNqFKwDG00xaXu8RGh
4jLHm0zlCnT7u+um4LY6CN/6+aB+WwV+pwpyMSrVAeervoqgO5V4g+d0YYhH
HViqFDU8eFaFq+2lO0K+18GzaqLwkc4anB20T2/vJEGwncP9futajO0+IB/F
RoY/vGEn2bciGubL6I8okeFx05VKD0EibqSasLDmk0H2hH26g2kdVj/lr1Xy
pUBLtdSl1iI6LmVvNVgqo4BraFTqt60kNAkXY9jxjQI86eNc5h9ISA2fKPHQ
qIfeYsUjCiwUPMa6cStnRwME3eTPmzemYPBbwSt2Cg2wcvLMe+0yClK2Wmp5
WTeAS6JVqcyDekyRdnfyITeAToyc+rWOBsw/svIryKoRxu8K8PqLNaKUwNwm
7ahGiP2Rv2wT3Ij136xeqlY0wlszHXUZ1SZU/+L1NY2pCUQu2SQnNFCRx6/+
fHpEE+x3+lPGQgeql7y/xa8XNMHhoGAv3iAasuzmL/rX1gRkoYrKrTeaUXP9
6kdDdirs2B9Z/bmoGVPrhbwZj1OB2bEnRJfvI5qcEWNOvEgFm5rVpKWJj6hy
l+gZ4UqFdLmHyXxXWrBBPezO50gqSCZ4f2v60IJnOPbN82RRoelb4OtNvK2o
9CJjjxBS4a+NWDl6tuLbKgp1o5MKA2rduximW3EobNNk3jQVBBn3uqPGJ5yv
tFE/+ocKnqlu07pcbViwzfDFPQEapD2P7bK61IaEfgVeweM04N7/RqLMvQ37
uB48DpOhwRaHaI5zBW3IsSjtk6dMo/Omvw4/vrShHiFF0O06Derfll0Z3NuO
F7n/is/eosF2aq3rilY7drUTEzeMaSC+PtYmH9iONjb21z/cp8FenVD2QmxH
ntU7sj+tafBqe/yQxs92rFnI0PhkT4OT/oz9PKId6FXDEin1kAaBnPXB62Yd
6LH1K4OIEw3WXBKsWRM7MKVILieW7i8ZbRmS6uhAi76ErBcONNgXw3rKk6UT
z9oo8S/Y0EDnoVjmmGInXpo7eqLFggZxpP3W+i6deGaab7eAKQ3utr+O/fqh
E4/d6RTuuk0DVSfxkwHTnfjkwLl3S/T9/Y2eEJIW7MKy5efszvT9f+K8pLWg
24V+oTbN2tI0+PpXKTg/rAtTtIJsg4/QICZyq8/jhi6MpPpE8/LSIGRxbkh+
vQv5k6wWl5ho8Ou789HN0t3It3+n7t4fVCDvEh8n2XYjQcg+NWSQCuI8pXau
6d2osn2jS5FChZTP+SIHh7vx5i+prVLZVDD50KZUzdODKy+XrO5FUGG1t29Z
8WoPSk2t67Q6UUFAOlsr16cH7274n7XRoYKBhwKH6GIPas7z6Z3lpsJkMiOj
/6Fe3JK+9Uj/jyZg3q1QX3O7Fx06Pz4daW2ClvRsSlFtLxJlLQg7fJuAqsA5
Yf2jF3d1nOY6a9gErm1JkYsH+/BGsoBv7ekm2OiwazUM6MOAR2ln+gca4UU2
c4tsZR+umi7KWec0wsLpJcWub30owH+wQ9ujEfhXZ/rPXu9HSxfHyYO8jZD6
3vy6BucAftilpZop2wC/cKSzVGEAt5Gpd7vW6oG07ZhMje0AOro4DWphPYg2
H3WNpQ1gYf6nMhWohxvWf/LvrA7gTMZfxoo1CrTytruWHBrEI4oxHl7lFHja
lLzzj+cgSgtXsrGfoMClAwx/Rt4PIv9D38KucTI8mLJIhZ5BvHf+Zs5yHBm0
dh0RuntiCPnfPTx5cY0EVPdHUjmtQ9gf6XvPqqgOLijWVSysDOGyRMh+KaM6
aCpudwzaO4zM7v2PbLfUwbpA8a4ii2E0NIq5KK1JBGqoR5tMyDBuqCzuTJ5B
OPIu+86m/GFsivf/1yyKQJYZL7ixMowfbmX1KOfWwP6yBpOW3SNIvr/JN/Vr
NYyH5pR7yIzgjK0k95ED1SD1QM3T9PEIvslZFG0PrISQt24cYTEj2Jv9oIqz
sgI0s2LDBgtGUPTYgljGdDlATequppkRFLqeXbBTrgye558j3GEaxQpV9u1b
TUvB5gEfw5b9oziRzDoR7FsCUi/27XW8PooNyxb24ZQiUJv/RxK7N4o/dp3L
ExsvhC0hH87Nuo1iX4GDc9rfAuD1Pq15K20URRIt9XWP5wM46Xr+KxlF5Qap
M4+e5oE/cVtiTOMoukQeufg0NQcmXPYd2dM3ijcI7RsL5Pew5PCz0n96FFn4
fjqsjL+DPB5P5uGVUczLOxdbtpYBHMK880GbxjDUne+mKU86bJ7ZGk7YNoZ/
jz50238sDVTCdWZ2so8ha3dbsYBcCsz6/Kq5s3MM7x8eleW/kAxn0Fl3bfcY
bjSvH7LYmgCz40vM//GPoci+7RlxDbGw9PDvhcP7xzAutUb9oHckSK0Kv/gg
NIZuql2m3E5BoB//wdZXeAyprtM1EQPPobRf4kPawTEsdSP1eT55CMEHd+/e
LjKG4otMu52XT8P7BPmAarr/fQsr3+MDDniBwWNLMX2+NzMe0Kr2Qq0z+979
oMdX8VU4zWMViH9ZjdIf0fNfuJuZ5LI9Emd5+66dFxhD/QPXbb+ZxeJ/x5bZ
L/OOYc+M78W+ypd4/aCiHYG+PxUs/FG0Ixkz5mncx+n717r5Usr1dApaqDkS
N7aO4b2KJQ8fgzTcekpYm49hDKe0s4+f9knH81clI6a/j+LMyj4zhaxMzLY7
+FBkbBSbo5RETFuy8BF7Z+V0yyjq7+nS1V7IRj87X57TlaMYEv1mtIUjD98Y
67Qah41imQbH/GvhArSueZx78fEoCug8bu8SLcRn/l6JZYajuG9HloqiTBGO
Guw9pXpoFF8N8FaLqZTgy6N5py230e8f+bysjWopVp81/yn4dQStX2hd1Llc
hpGCXqu66SPIa9LFkapUgVL7PxgPPx/BCHbBDJJcJRariPczGY1gmmNODPPp
KuTvelx+kXMEN9wDsrx31aCVTMDG/S/D2H5fd/cTxloUYvfZc7Z6GP07Kx9z
zdaikd0KaZP5MDK8fS9rrE9Ex93RHzdJD6ODo2w/jUpEdeYvCfVbh3Hm4pUD
12Xq8FzSV8/ct0No3vqzzWw7Cff/N5eb0DGIw2ZudreTyPi4d65XO3EQTajd
bWxrZLw9J/xj/e4gKgomJTjcpuC622+aysIAznmtZwqz1uPFU78bZosG8Ml+
sz0GxvV4qsz+UMqTAZz/dlxToLAexZlXi9TW+lHEzl2U40YDur5ZW7lW049c
C89dxRMb0Ce7sdL1aT/WeTMOl3xuwDuaL7ot/vZh+h3l4102jdjyjTQgW9GH
gru+697JbUTX4cYajcd9mB9NPXD6WyOqZLVz2c73YrPRJ8E3d5qQn8LIIpDX
i1/98VNZRBOyaBjFK9r2ouQhyncTYhNmT40sfD7RiylfPK7FzzXh+bIUJbb/
evCQRgOzAR8VUxry6qsze3D/lctJGYpUFPvXlbdu3oO3ty0Mudyn4jWxEv+r
I93YULmk8/49FSvGKEPmCd3IcTxpfCuVPj7WzuSwbjeK6VlUTU5SUflbhRyB
qxvdpCbuKK9TsWrxZ2TNxy68IcmbILyLhgdn8dlr/y5kyPcM8T5Gw5xjjPzK
Sl24njOVbiZHQ1EFDtu8tU7cUq+S3qBGw7fpH9ynSztR9UQgIecWDc9zXVVY
dujE4yE3enbfpaGvM2vqwPFOPJETv3WbFQ311zYFvJnswNtRZrzP7GlY+Z8D
RT25A7cc0FR8/pCGl2L+7pu41YGcc3S+6kTDZKulq5ZcHdh98JmAmCM9/4mM
P19o7ahs8CthxIaGd8+VEE182zFj5ypV5D4NbxxxPjok345XSv+dYTKioYW2
zvs7v9rwwjzbOy9NGn6q1sidy29D5t/cosnKNOQaNPELs2rDhAFdVlNJGjJ5
b3O5JNKGsrwUYosQDdttX5pJVX/CjEId1hk2Grp+zHgtJPEJ9Y5b9ZUtU/F1
8Wjx7betqMOzTwsGqchXGxo8zdeKMWyvO3yRipeHvk70hLYgZ2TodGgKFc3C
nG5IbG7Bn0/UNUyeU1Hk1T345/IR97no/9pkTEVpzkPfLy0046xL6R+Xc1S8
e6jlye77zSi9R/JNMzcVP3bovrDSoWG47e3affT7I/LLSY+hlYqbI7Uij0c3
4cSS/hsFVSo+2pgoEzVvQoNX89Ldck1Y/vbnFUmGJjSsjnG5KNaAR7VmS5kP
NOLpcgnOvzn1WO6brRsz2YDi77zGY0/Wo/npy9u0MhrwqslTpTgxCj65ceSZ
j0gDOt7ynWIuICP3JTmHbeP1aC2oPed25n8N13c0FQ4UB3ARCi1KtH5JRcqm
/Kxrlag0jCgrkb0ejwgZyd6891TICEmysh6uN4wno6zKiETlhxAqpfr58/5z
zz3nnu+958NAMTjBGLnfjObzxk5EdTpulDOuz+Frxjd/NydtbKZh1haXgzl0
Jg5HyAZXnqWheP4v9x2+TKyaN1eztWpCx7ryQb8hBkqc9D7geagBOxMaW4+m
0DGO49BguF49npB40usCdNxlYdS96k7FnNLqJq//aPjR2fq8DLMWrd4ORy+p
0lBRl7ZIjK7Csz4fpy4/RjzckzR3g/4crY4sjvPONyKd1lAyv1qJy3XnU14p
NOKwfnbehF8FdpQ4XOuvqcddOYuRQyml6JZ7OyytuBbZ/BQOatOf4aDmz+9P
J2vweEtd1FmbEqRWK9y13FuDDxS2Hlwqf4J2lQF97ZFVWCT60UKXnI+fK/mn
cy5WYM/MmBDB8hF2OuZzng8pR75BXdvTR/PwbwXlX6HSMmxXUm/jGsjGze4v
UJu3FAv5TLpVx+7hAXyhn+L1GJeKvcx+sChoWhh07VJbAS5ICGvJIwmd9LY8
u7AnH3OU/P+R7EhGXyPb0hh6DirEzPrfGLuL62NP6X0TpOC8lL/QuHMYpgpJ
zTpQUzFJNl36wuZg5N78YO6ydRKmqj12bpP2QoGiXPJZs3AkqU8ntgpfgjBv
tt1w0Q5udbMXCHDags8KsWRp2hd6dkzmruS4gfvYZh1Wcij4mxmNhTr4gU2O
z8QUNQH2tLjZfpAJggtdd5/kiqaAfEnmjPmNEPjomXhh3o4Ei00X+xoxHPyE
NLg9Rx9AxMCDWrsXEcDeGnhMkPchDL+J5xSnRcG+j748+nnZcG+s/6iLcxx0
0Icj67vzwOL0z4di+xMgkijhgtfyIfC3/Nsaq0SIJ3psFFkogORYjXGh0STY
d/llSxT3E1DWNhV0ykiGneR5YdtnxXDFzfKw6/kUEPJdX0o2LAFRw2XPf5dT
4ETu9V9/Fp9BsfnJY5/iU6FP5ZqWclspnMlRtkjYkwbsXzWJjqllEJ75ZfxM
Zhr8VuD28Lcsh3huda8T20lgFpRMunK4Ag6kRWe4BpEgRzzH5Pt0BUiXF3bw
jJDgHjVUTP1ZJQRP/zh9TIYMRlKMqD0ez2Hd72LleV8yiPrPcAVLVYGKg1Ix
sZIM02Oqsib/VcGUw0zs8CQZiOr2ubG51UAUxYqTfBSwazJh23alBvSX1cZ7
xCgg6vn968tNtXADi1rzlShQP84hVddYC9+4ddZPqlOgzPuNc51LHXgxqo+V
K1Og+PZZN9xJhW30pk75YxQ4Npb0pwqpIOjzxT1RgALa2rtn423rYZKHfH9u
ngy77kdtU+RqAJPcxWE/Jhm4ZbP1yXkNQEi40WYaTwYN2qmgXGgEusv0nyoD
MpwRCE/Xfd0IJculck2cZGCPvp/o6YzQSRw+ml1BgiARQastqwj783w6I0xJ
YPD0e1iEThNceh+yK3cpDYLPvtOXjmqCFsq/KqKRaUCoJ2z69qIJRmr8Q/8V
SAOzi4tvevhosEPI2EuIlAqFFi8b68/QoPNhc8vi1lSQ+/m2ryiSBpKH0z3Z
7qTARm9vxVQGDexafIu855Khrbj3r/sqDQILheYjDJPhNKqZKsrToZ09c4tX
aRJk6Ro7DNnTYaOS8FEPriQwz3S2MrtHh5Svx5vqjBNhu9sQIb+dDopODqFX
6HFQ8bxhIvogA2bHLa7lq8RC1BR2bzVgwD6jMcvwx9Ew8UtmQYu4Vl+3GAng
iwKTfPFcoXsMEGRxn9thFwGxp5+ejqpngPucscpgRTjMkI0MYocZsFLXaXNl
JQz6lOYlhH8yIHR6D1XseCgIvTxlLbaDCcmBgVGvnYIhRGDwVokkE0T2vBhf
LxMIYYF1O/O1mRCstZ43KmAtnycchzgvMyFi/nuZfz0R9o63BTTbM8HHgvfA
/gVP8J7eSxsmMsG/mDUYd8IF+A79E6QdwgQF6/MHI2/Zwm+jnfcXopgQV7IU
8PKaGRjFCvGPJjDBlKbcOeioDdt5tBY4UpjAfu/kYLaYErolCJubrtXPdf3j
xvqMkbL8I7YvkQlZtXsG1vfaIIs9acAjhgmy5mbPCqlO6O0R+uhQGBMIhO7e
hxc8UWbv5tBpXyYU9FgfuaRBRHrUyDaqIxPO2X1+o3fUDwXLJ4TjTJmQecfF
Y2xLILo6WwZf0VmbR6bmo55xMI4eZhXTpZgwLkBYctkXihHAERQkuNa/094z
ZzwMGdbuEZG/GDBFf/lCOjscT54+EzA0woDLkew0E7MIHJwLkiU0MEA9Vt/A
mCcKfxBDs3TX9rW4hZptVxGNn4qvTph4M0Cvf46n0TAWS65Unrx/hgHf1Lun
E/+Lww5FHvmt+xlA9Tv3mM83AVmVK7plC3Tgb9vdJRmQiBODeQb+TXTQDuNa
13M8CTOOnNCyj6WDWcb3bxzTSZizEnHR25gOaadeP7hEScbhoOH3GbvpcH79
baq+ego+ft2eNPaOBn6Pned9hlOw7xao/ptFA47K2HwrQio+jM7/lWdOA+KH
41ti/qaimquypMhOGvB7a+wODEvDL7Z+3k+6muDqr3Pe1b/T8DqJ0agZ1gSH
ky/71LqSsERbVHdcoQkUn7sdYeslYfFEiMLOVgQ+7i4VLkky3gnkUfTbh5Cy
WW1V+xYZr7v3bZhybwT9/h4j6QYyLpitTtpRG6CXKNqi8pWMGQx51hxbA1By
J20GhSnoakW5HaFRD74O+zr85CnoqfazVMqfCh8KxiXvqlOQopf236endfBU
C1UdlSnYcFGrqGqoFqTPDcpHH6ZgmfRBpyyOWuBXft97jp2Cq9f7iwsO1UBA
11sbwU4y3lq/m2dAsxp+Gc0Wa98lI8FHRFXOtAqwUJdLfm1+I9SVbHZ4DmEt
hwyARsLtkkFc6V6VwDshu9ikScInO9XUa29WwPfAcyubStLwr69QodzNcuh1
nGHz50zD0d9LdwQIZVDz+fAFE91UVLf7kOJ8oxRGfZ6MLBBSsKjwrC6lqARY
lHqL9Ihk9H/cpZcYWAxzfE4XyXeS8GO/mv/nk0XQHKMkpOCYiO037Ss7OQrB
e25kg4tjPIrHFsZ5VD+C86qRE/SOGDTq2XOb81ouMEO2S/p/DUcjr0H+N5IZ
wPoq7DRYFopuB7bK+OpSYHlMuHS3exC63irlXzRIgeY/kXKq4Ibh8a1f0DAU
HMmjq/DzCop0N/l0LblDo+HJBv1tmlDWGi/3imGInr2t5bzuRDgTA6kHqRG4
M5R4w+X9bah07whw1UpC1e15mV/dw2FBYp1ScgUJY2QkCBa5iRDKwe5HGHqI
m1qc59ZpZEKxl6D21LZirHcjPkf1bJihzvgfVHmGkc4BRvy+a5+iwb5mr3wZ
zqdt3HfxeCEw8lIe/LCsxDjZyUP7G4tAqVmwV37pOdqIy5jqXnsKm2SK9ipE
VmOIl4lOQmAZ5GQl/OUpqkNHxSodtZVyuEurnU86Xo8rwc9ttcIqoTH2qrU6
NqBzv/5IC70aJmtk0zdca8JMEruq581aeMIkcRrtpWHZiPLdVlUqbP3CyDow
QMPMaqZSwEIjvG1MEIlTYaBOB++lDx5NwO92ak7jEwPLDXKoeh400EzvHiuI
Y6JuzJnQUR86uHbNmulINSPnfNdM7J213GumSae1NeOOcxNz8ulrd/FWyMgO
8xbU+qed+qyyGQTGz7Sqf27B1do+3b6BFhAnst0NX/OlrMiLYde/rRAnIKVt
8bkVq3v5sjSkWDAd63zgxNU2pMznCW+43g6v7DXrQpltaJ1z74VPxgvYL2eW
USK65j2j1RrFkQ6YtmtYEr/JwuSnF9dNiHRBlcvro9Y0Fv4yOx8o6NwNBcSK
Esaa/7aLTJcfNX8JTNZ4HVN6zTeCyhwp61/BX9ij/dpwzU9+4+q3Sl5B+Sbf
ScKa37y/7W6lmPXAjz+diwJrPrM6NKtxj7MXujmC41Rd2/Hz99kk8fJeuHDe
ikU0bUeJ2lNTHy374HuU3JcLCu04f0pvgMDbD99mK6sd2NoxyuCHq211P0iI
3HlkU89CSltDsIHNAMRf/3Rh3p6FEmnE9428r2F0vL/5JTsLpxtYjeoVr2FI
eO/Qq9g2FDN8ssXQ9A1sHuMOf8XZhg1e3gKBP9/A7FP3vejaimydy5PK6W+B
GVlz/wGzBSlh5mIbFAZBf+p91W2eFlzkCqy2bB+E11Pp08nQjL4d+WHVV4dA
vOMfa0FbJu5gr7SL+TQEWZ9bsqxvMvC6Siq/keswRKZsFx8NoONXlV2CcTPD
oGTAogkSaPjlvfXbStsRyCkreJhr2oSRi8Wl5/pHgCfwWzTBphHvZ5+dfaf2
DhxZt9V0Vqgo1pM1t5zxDmaT8toDfWux+5W0otjyOyAKhdjzjlahjnOC5Rbt
UdCt0yxdJ1eJpKgCcaOIUTB4Q2DcI5RhYNFu40e0Udh4+kOl3amneESIFNiw
MAoJiayuyNgCvDrPZV/GOwZKlD8RrfXZyKWn+kpeeAymRwd+TdWQkSzvFGos
Mgadv8sZ/MwIrAsOv8N3cAw+b9L5GE/jUPsfeMbqpw==
         "]]}},
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Medium,
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->190,
      Method->{"ScalingFunctions" -> None},
      PlotLabel->FormBox[
        StyleBox["\"a/b=1.40\"", 16, StripOnInput -> False], TraditionalForm],
      PlotRange->{{-0.7, 0.7}, {-0.5, 0.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.05], 
         Scaled[0.05]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->None]},
    {
     GraphicsBox[{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJwUW3c81e8Xj/ClIQkpDcqIREqR0SGEVFpKJaOSPTIKWZllZmVmb/da2eu4
99r7XvuWpJSR2VBR+t3fX/f1fj3Pc97nnM/znHPef1yhu3ZXTJk3bNiwlWPD
hv//4pWT48vf6DDpOxHGEzpVt/D52n8uC3RQinl600HSD45arM5uf0cH1/HN
t0mC0ZAx+7lskEyH5WchPEw8yXBfwXPTdBIdQm7ykLW/ZkDNVGfCE2s6rF/4
71YRJRfcRSd8+2TooFzxSmPQhQjke8sRx+dHQeSvS/AFthKQolwz+Js8Cs1P
lt5wK7+G6w4nNSI0R2Fhuzirk2E53HktYWIwNQJHB5Ik9MwrgU1E9vyA5wh4
Ob450aZfDb8F3i87c45AdGeP6japWjh5cNfFppfDYBh3yiD5cx0w2e6X1OQf
hlCvlJQ9TxtAoKx5+nnUEGR93ldw/w/CNtsMpd0cQ/DD5rYKuaARWA0tuANd
B0Gu4bHlOy0SvOpcsjb6NABRytYLMEgCWY8NxjIXBsDK+/5A5SUy2IDgvucl
/aDom75VqpYMzttk9y5x94O10HeNVB4KIM/6lbmHNDCtFooSvEMBJtmdQf96
qHChSnDTQDQFSt2terMlqMAl46W6XEsBC/LAz5v+fZCSwNrWQKNAzBivGx/2
gmfd75iIUQp8fJg6ccGxB/z2tHt29lFg8N+f56KHumHypkzuaBUF9roMXjB+
1wnEv5qbj0dSoCblo37hyw7wFNy28QaDv6P5rVDl5XagPIj50rmbAjd0Urx5
uNqg7uvv/r2dZFj8wjd2ldYCtR3cGmO2ZKh4cM9xJa4ZtvVN7U1mI0Oly3Le
w/tNUDFZEbASSQKiiekj6RMUuD7SuurBQ4KJJeuesM1k8Pvvl3lXcCMUjnUK
TU41guFjycGvXxHunHXqFDKrh+iKYZ9wp3rYIPDHgny2Fnx0WS2F9taBkFpi
kqxsNSRY7vuypbIGJHm01mtPlUP7WWLpZUoltHi2uKtfeQ3xvoP0drkKWFQ/
IB/oWgLjm20MRtLKQLJxSlp2pgBmRG59TL5VAgY11X/WX+TCwvmRBIvrReDA
U9P28noWGBsq8ZyaLYC50r5Nvs7JYBC718J1KRNKzwke+lESB8+s75jsepAG
/54X6aQcioJLBS6Lj/ISIafXMeye31Oou+/+9GVQELztlxMv32sHfk9X+pKE
XeCnLXXws4UW/vXdm/jL9Cq28Wbfannrg37eAom11uFYfK5h5ul0EEaIfrri
//UlhgmebNI4G4HmdxVzbMSTMUPs6/f6K3F47ES+7xaVbHzVT9lWS0vEzXUx
pV6781FSTjONuDsFUwzfj9bNE5HNrSntJ28abj7LxG35thgvOkmdWvBNx2N/
isod6kvxkVRK1cxwBo5cdiWHx5dh1cGKnHjuLDy97NdqZF+Br3zIBgOnc7D5
8Of8si01+Ff8uXudTC7qpmbejaXWotWS7O4dnHlIdf8iMh1ej3rFHbx+A3mo
ZBdofF8TMevln7pq/3z8EO13d+pJI3L7ZsUaHChAzVQv38eXSJj+4YLijoIC
bFln79ISIuN9g/9EfAQJuNj857XaAhlfVK7F6fgScCAyrf9KJQVpNrsCtw0Q
cO2OVctd9ybcq6vnZLWDiG8meLfdVW5Gr38s5quqRFTct/WvymozcitMvL1m
TMT0xF1Ry6Ut+ExHu5zLjohdsRp2ZmatqPjW8hjJlog2XxZfx+5sw8a/v+dX
jIi4XZ7pqwulDaejjwyBGhEVxuV4Nlq141h57WGxXUQskffSkebsQOXbcU9P
fCBgUuHZPz8JHSgmCA1LyQTUcekm6Gt2osqF6/ve6hKw/fuN7xfGOtGp2lPe
5UcBPp1Usxq07cKU14eY1V4UoMqO5cT5tS6cMjs3WCnIyMc1p+8xft2Yumnk
kW5OPm7etLm6h70HSxIn9noL56MmTeNn3LMenJVUflIfl4fT2hOuKxt78dPD
HJILSx6jIqjXz7j14tzy2UJB81xM3pg46Tzfi0a23hFCTTkYvEi50XukD5kV
tup/4s9BpZij8mV3+9Dhe0zg5cIs3GM1bfK7uQ+/Vm2RJC9m4h23NTWj733Y
3styOuBwJp4vDOpIFaRiX/+wxh+TDIw4uu0C6RwV9X7FpXlHpeOypei1Jgcq
auzqC7NpTMOuTPWXxDgqkhSPygrMpKIK08vv3nVUjHorxrPPMBlL7kVcXPlL
xSNL+qMr8UnI8sGmLVWAhl6WF//O9CagysUmvbNyNIwt2ssRvSEeL0cr+X25
RMOXXaYdoZKx+G5v159ocxoSpimm1tdisBeTn2p60vC1KY8FySUKK//unfsv
koaOjp5juxMisI2H9/CbDBoG/X1RyuYQjmrXllRaXtPwN+v0ARZCMOYa8p3p
IdGQngZDJz4G4tH1m1d/ddPwY6vRrlf8fnj3sm+u9ggNSS+dxmQveKM0/6JP
63saCtZ+KP240RVvb1I7+niKhu9rf+n52z3EZcGTHIZzNJxKCXkDDffwMNXK
/ukiDT04nSLaMs5giZYJ9fMSDT1Z+XgEGq7AbOjl3GwG7sjfEK95wwwiJ2qH
ZhdoaEQfgcBkB+hITRyq/ELDBcnRZx8CXEH+61cRbgYfxmYEVcp4gw278tl1
hj9LjZl8j+N9oeP0TK33KA0zD8qa8qwGADn73dbkPhoqFkZX/rwSBF2Z/zXf
aqGhcnHGv5CMUPgq/8mqtoaGW1sEP6c5v4DvieJhTUSGf7UbE1t5IkGKfrPK
LYWGXD+FP38tjIKgnY8efwinYer0cdJ7tRj4JJOrv8GLYe93aY9u/0u45PRr
esSahv/i/hMqex8PPKpUrS51GlqmXMmWMkwEViNr6SUpGlZOJ3fLDiZBrj39
6/udNNy9nbYhVCMZRGUHBDL+Me7Tjth9/wpTgOfDKxnFz1TUlxE4lf8sFfou
jFcTO6loy94xePhkGhjKesv/K6Ji63REQZd/OtxIYNl/2ZmK0/O889ViGRDb
Med36zoV/X1oEgnNGbAwwjV27SQVMZKePPQ9E9Spu7WkvvWh3I9To6wBWTBa
r6nJ19eHGip823u4s6Hll8R2JkIfKjuO0Af35cDibCplybgPtz/WWJ97lQMa
Fzz910/14fXQ74rn+XOheTS3SZC7D78F3S96H5oLQ9EZvZW0XuzXllqJXc8F
qkhmtrlXL57SFT5ibJkH30mmNAOJXozYGjAvRs2Ds8fsuV/192DsNfNuh/B8
6KKbVAoL9eBZNQvnwc/5sFM22t+juRsD9VtLV+QL4KjBtIKGeTeKhceYtvoX
ALvPzFM/jm4clxZ9I99dAP18RkzqeV24PtXWqbSNAEfCXQxCNLvw3GKSfrMO
AUrr1o49mOxE20uPOZp9CPA8w1mI7tWJmXfHOqTKCKCTYUNa2tWJAj475n6M
E6CzJyGvtLQDVXeq7OVkI8LpywK2h851oPm/dBsrUSLEk4ipt9634yWTCW1m
VSIcUp7ru+zcjikbHri16hHh25HnIXwc7RgmMCRUfJ8Im+JCjUoS29DsU0Jt
iQ0ROGlxAxJH2tCG4LWbbE8EsUAh5+D6VlQpu282zFg/NVHZ/uZ8K0a+YROc
ZpxXJmvdEn7Tgud53vJ+Ydh/MGVSaGPeggr1LDbDKkTIG310ofF7M+rPX07M
FCHClnBRFPZuxtZqY7NzLEQIjn8anLGpGW8Edkw1viVAW8clRY3oJuS3sfTZ
UMTIh4iBPvfeJgySFLHjcyeAd57+F7scCh5uVsgTUSNAvcSfh9tlKFijeXdC
jIUAN2bU/6xXk7GRlrJtJxZAy3GhJJUzZDRLWXWYdywAumOR6bt2EhqsaERk
HSiAD2897N4z+mPbnMzjbJt8mLtXXyBzpxF/c4cXfOLIh6waw+MHmhHz9ayd
vqXkgbBUnedsTwNSd1nmWFbnAtPG2uSR8Tq81Glc3qWUy5i74oT3T9XiXsFj
qQvVOTA3csGjeL4G2c6C1YO0bPB+bG7541cVFhqfl6ncnA2TW57+av9biScb
BdLq7bKgb2PahcPMlfibt8RtUjgTXuwYKh3iKEcOzkhB5kcZMFXwevuZrWVY
46wx29uYDrZx1EF3rtfo6rqn2lUtDdSEKIQMvhKMOahmq/ckFZTbp2xKdhWj
Wa7BVdLNFODOGviQcaoQk8ntSttXE+EqNeLyPs18fM65Lyg4Ixqmm3mUSyzS
UaHjnJ1/YSSEloTXljmlohc14csa4QUsSZ489p7pFe5+6qO7wv4c7v6JVzyu
GIPkyJNXin5Yg7NRs42hwWNcqCnaIWF+Df5btjvFf8YYX1WtaNx/dxkdpbIf
/t1nADN58Q2Bki7ot1EgKyfMB+LHsuJDnF/g0MnOw2qccVCRk5nRcCQK50UP
950qToRXE//NpCzH4JV0U8/LOikg3LJ51+4kxjxWmfRk4kQGqB57crqgLgOV
3uZUTIjmA9s3PedTZ7Ow76OziPVIAehnhn5XGMzGUZRyNPUnwl0tf8Ktjfk4
vtth/rl5MYh09ars1y3Gb+PdhhUxr8HY+1WioWIJqjSKujdZlsETC97L3hKl
2L9d/OljpXJwXE+8dXJ7GZ4oPJT4cLACprc8US9iL8c71Pz04CSGPop6XNLP
XIHJ3MkeS0ZVYHWr/t2H9Up8d/Ls9jNvqqE5IV2tcEM15rzX/MQcVQMfVC86
fGapQU1zwc4Kxhxey85M1+epw5esR8TT0+pgm5H+iSzRRtzjyLxX+SDCNE1X
5ExxI9qwJAnqVCE4X7l2s0OBhPYhZiNXhRtBqCnw58MrZBTB/k3exEb4bTBh
/WScjHeMWa5bLTSCgNmSkroNBd+5+heOSJLgxznc8ymoCZf8NsbxpZPA/OPt
vVm7m5Fpi5PG0AgJeNQ8b3/Pb8bImpLTK1vIYH9T53CLYguqI6nU9jQZlHKD
Urd2t2BRFj+fvA0ZNIUjw+sNW/Ffm6uITjwZaq/phrUtMerIl9HpVDIZLiel
TFTxtiPhaJ3s6hYKPFD7I+uT244bHogZLR+hgHx5UJytYgfKLB0K5D5Pgfme
Dx52PR1Ylsakr2/G0GdFXwUfmXRiL6vZaL0XQ9/JTj53/N6JxbFXHU7HUMDJ
9WC4fmAXBn/p/jKYQwExu4Bh3t3dGMKU5ehdSYHq0pi3iYRujPizP0WhiQIS
YStz9NM92GKcYsPUQ4GGPStSlL4eZGOT0qENUODbxRMZ6nd7kaXvH3fBCAWm
o5zFdL/1ouL5t9uDGHpwZIysNKPah75nHNlthylgfl5s7/jzPhS8EH/kOkM/
ppp6/fKm9uHhAMujZzoo4OcpEdjCT0Ung8sKx5ACPR83uuQYUXElc3FJtIQC
PyVEHASyqWj2b+qxUCoFNhhW8O2eo2Jwob/DwRAK8DzsZE6UoWHbZlVWaWcK
3DK9SI15REP5tn3DZ29TwMr8xx7mWho2yk9z256mgJ6cus/wOg17VxXMc/dR
4Md6bNrWM/34Qdd2y+oaQy+PKwkl+fXjXNL5WrMhMlyVDSlya+nHhZiUyhUi
GRqLuVnT/hvAJUJoJ8GHDPf06j+zaQ3ga7dWrRfXyPD95JZDmYED+POLL3vu
QTI0s58j2rcM4If956zWFkkgysT/6LHqIBqXfFd29iZBoWOpTZbrIJKZz7gg
Q9/frbf2ZS4ZROvvEtYNnCSYglg5mb1DKMfVeHgtqhESOYJzVi4PIYn32Jlz
VxtBlavtDc1/CGt33cyy52qENr+Q61WzQxiseI11gB3BlCtWu0JgGKsIrS7p
jxpAanreoExnGBfTW9zt39fDse8y6Ym5w/iiIX7oXm4d+J7UDXYbHMZnF60P
VrLVwdrYEKsG0wgqWAd/MjWpBWkOM3yuN4IeZz/GyG+pgUABzrlVjxHs2vnE
KNygGgLKKIEaWSPorvVDOyevCqTcg/D60gg2eTaKBShUAuu29SxenlGcl8k+
5OdZAU9dITL55CgaL3Tol2A5HJqc42VyGUWuR37KWxTKYPuj7U4DL0cx7Uiw
qZPja4g0WX5gWjaKU2dSYrzzS0FCYe1iSd8ofr+RO35xvATeeCOWfxlFlaW5
5L/bS2DHJQdve1Y67nubbl9wphjydt4OGd9Lx4qxQf2FD4WgftDatf8cHS91
eNi2RxVAlK+Dvp4RHT+cOCcRNJUHBZc7PP0d6Mj0YWrIWz4Xjo6JLd31oyMf
KSNgLiAbrh6z/zQXTUeT2pz7W/ozgSKc23Ugk45rmalZ+/dmwCd+qhZLKR2f
3HvkYmqaBu8rXstENDD4VhUWTumnwGR9XFR7Ox1fh3BLb/qYCI5KS4XEfjqK
WgSfqraKgzznqZ/Kb+l4xtqLq+lrNMxQ53mffKRjkrM/X45LBGicFP9oOkNH
+/HWD7VrwfBPhm71b56Ocrmcb1tY/UHOuXhea5mOLq8PRDcLusPIVq5htW90
1CvzXGdxsAbNJc2WZQauVDY0aHjGC2y3ap5dY+A9X5i5/222Qt7Un7tsGec9
N1cxR9x8gtWsXekqC3RshJxkkwg/VFZUdelh8N8RPLBzyi4YrSSid++eZORD
5SBP3cEIJNXslxUdY/BvJjQkBkcjQUk57scAHWu+XSeILMYiSVLgTHAnHQ2I
0WMLFxKRa2Pw1dlGOi4oTKuH5SRjZUvLDr5yOv6xN7bu+ZuK/gLSC9tz6Wjh
LkWjZ6bjPX/mhxPxdOQ4MfqlRisTV2M5zz8LoqP0jiNWp2eycKX7tu4mNzq+
utFw4GRADq5bzOQU6dGR8phXt7MsHx11L8eIqNDRnRL697EZAS/8CdO4IU5H
omrbK1HeQnyXf+way69R/GrSrXynuBiFnY6dCB4bxff1f07t8yrBFE5O+iRp
FLsuuS38OVeKkOqRfShwFD3zs75Xj75Gw7Jk4f3mo3jy6ut6m6Qy5Nv6ahuT
1ig2PbGTnr1djgeX2otTWUYRNZ9/XO6rwB+63JesJkaQKJ9FvRlQiSZN/hKK
9SOoq9jToCZfhfwmwpMsDiOodPZFi3FENcr2VWzYojOC3IbDRY/la/C9cm7v
sYMj+KOJ9djImxrsUhQ6uto3jDenDI9p7qxDuYH2XbnZwyjBFmSpUlSHHPxD
d188Ybz/nfvy9dXqUVvIqUDi4DCjX90ebDJqwBX1XbMzP4bwXtcc56bpBuwJ
dNq43jqEFWWZk5esEUWo9LnTlkO4nWn7WTPZRtQILSx3URjC+39emnnaN6JA
w30toU1DWP7zVlNofiNq256SHskZRNnR62Ev+Ek4Ou6/7ZvzIPZdNfbzOU/C
4n6Bvhi1QTRN7SZbeJLQmyhwKXhsAAs2WlfwvyWhqX7rttm8AYz13eAx8R8Z
v+lWFU47D6CQL2d+mgwZ+ZxMiG+3DGDdMtlrqxcZm498MR8b7ke9cY/Hdelk
lJZXqolO78eIpb12Fk1kvMa7bye7TT/W7fQr5Jsk40+tre+U5Prx46xzdQsT
BQmSND15pn48d1zzgvteCpqPCxP/ddCw/GOgoYIcBavXb6/GRtMw/0wlH4su
BW17RRTZDGk4wfaX+vY+BQ/66lzTFaNh9e6ZPW0uFDyu5LndZYmK1/IVStuD
GPO7+xER/2oqPuAvcvmUQEHupAeHnvhQ8ZjpqPf+PAo++12XYKhDxfUg5o3u
5RTMdVP4cJyHilUaO+78Qwq6btXX+fe2DzuKArkK2yi40vmXvTmrD0l8No0h
vRTkNw+SfW7bh/TbltKpAxQ88WyiW1euD5kl+5Xnhym4ud67ds+GPky72jLl
Msqwb38iZiqiF+3v31DTYmD+SXvDkoO9ODFO8TRm7L/ahezJ5T0YubnsXUs/
Bd8f944r0+zBoxGBdd49FKQcaXq/NtqNJf+IflGtFNzW7KjoatuNRUYshkcZ
/kpT7m46trEbVyd8fgEjnoUfUQqScV14Za0/vZURb6XtSojNkS4MzSJWdiUx
8tv48eUauRNPKfsnXQujoMr2TPIb/U5sZL/YeN+Tgv8F/9TdsdiBxTfPJDAz
5jjFusxrOf4deEymMvf4LQq6uW2uT9rTge1XV+3+alDw8Zva879et+MFgoKr
6VEK7nzWI/b9Yxs+4wh7Jsr43nnx5OOv3Ntwl9i+4qApMj41MJ+p523DwOS6
WxldZCzYsi79SLsV/x6M9mGPIuNDV5FrvJMteMYvVMjYiYxxdSRtRa8W1DVx
8fe5xsB977XFK5uxU/wZSXk7GV92PO79ebUZzU9T0ybmSRgdyrbv1nITzt/5
o/eAocfyjJgzPx1pwlOuuVsPeZDwxMKGazzdFOxXPTJrp0fC1ClHnLCmIFz3
1SmUJDHu9127u4VkVL2+7/fBkUZEMk+k/CkS9vvcCQs42IjusccvJY414l8t
Z4LkNGKt7FUdok8jyvwo7ggJRFz9EJPc8QpxXkl06iSpAd2ej5bHM3TcNM1w
7qxQPVY+i/udfrwOdV7uHPYqr0PCJaL3/ue1+CP3tLamVh0W6tDTXRl1x7yZ
9jHbohaFt0nvHcutxCZZK86cpGrcVjH8hMBeiXqRsqxXRavxAXPJ5lWLCoTi
Eq7Bwipk06xHbplyFH8wfdijrhJ5Aq8IalNLMd+bZVKtsxz/myjzpr4m4BEO
bX3/eoae28ofVlxegC6Z4uNaqiV45LvyFfEaRh0XxwTHpmK8aeR9/2NHLgbc
zLguHlmE6CM2fXVzFl6MUXh5Iq4AtRN0bt3emoTUam37c08yUNn/oN6buwn4
6Ujki3CndHzKbtqgVx+HZa6azao2afjsMnOm6NMYpNuFagrWJKM8XvLXDwzD
V6fiCN62L/HBpwEK0d0Gd9ZF+LFMPUIpyUciOpF30TZSVujsFhs8x56lwiar
izYLMfrSkfp4W1eKZXvyLTjyri1kFExBqv9f7JEZN1ikzYZI8AQA6/zTLWfY
XgCLut+dLZREEN+zuk17TwTYD7UEK4+8gkNb78twS0VCfIL717dzKXDhqPQP
Fo1oeHSjPGffpnQQ13shJqwaB4clvhyQO5IN/7lmzW9ySQHWMvbpE4aFsDJo
zBIinQqvD0+ITj8uApHfCxdoqalgnhZi9lirGNwjFlsL3dMgXexll4NxCdhT
tAcFdmfAT+fMP7+DX4O6wlw7j3sGTGi/eDvBWwaWhJGChTcZoH7X1dAkpQxq
eH+m6cVkgucNEm1fSTkcpZrF3V3MgvHLbkG3eitBiZ9LZ1AlG6Rlryu26FWB
3NF0W+0X2bAjfS2/+k0V+F2o5zgrngObtTtCjn6uBnkJt+Z/arlADc6vPfKj
FrTMfl+Y988F8eqPT7Mf14Eoof/TWnMujPGGPY7/XQcSXm4twSp5wC9p3za1
Vg/x3I+/TuzPBznt6Og/vxFm1AOq1a7mQ50/IY5TqRF6cu6KfvLLhwKWcPkh
t0aw482c+fEhH37/d7rn2c9G4GieK7beVsDQRUc8HE6Q4IVa4z8ZBcacKEJZ
5HIkQSmqTlYEFUDe4alyi3kSPHSoavEoLoAyv3NvD0iQoST1bEfaQAEs9o5b
hT0gQ7+vbNI2fgIQ/exD3d6RQffhj0hjOQLweO/YtLqLAne6w9f26BEgJ12g
WVyPAsdtvql8DibAPat7s7EMvfSzhii0mkmAUXlDvUGWJvDMFnUPrCPACcfd
G0inm0Bm/3pLBI0Apa8cHt5yaYKRhxed9kwRwG+VfCytpAkUxIqWJVYJsKI9
1hs92wSfteRzGzcTgaf9z5DswWYI/e7/570AEW7fqxnxvt0My6frLoZLEGH/
TiZzl6hmsLEJXu2RI4LES+bdAp3NEOYgeyNDjXGeRzLAnLkFAkpCK7ddJEK1
psBZ41MtQN7CbrnzBhHOZUb9YLJvAX7psqp6QyJwoOOxC9ktELtDa4bVlAh+
n/OTVN+2AE+XsPI3CyKYzUkNvdveCsxuBsvPbIigvvurj7BmK0Tu32FSaEcE
h3t/i1+4tIJKrjeJaE+EKY6Ha0V5rWCWfKDgOQMn9c4K+NBbwZym9lqdsX/Q
zbabbXMbXFZgsp6wJkLoRaMuZcU28Pl+8f5dBp9qluuQqFUbHDD5K9ZxnwgX
M7vySQltUHGjAQSMiACcZRycHW0wZC0ho69PBGtxWtnm321QqN/i6XuJCF/a
OexqxNrhjRV7boomEYztXf7sut4OevyG4kXKRBDxsT8g4dcOgmEy7mXHiLCS
6JgzW9IONraLfKWiRDjMdOTq7fF2WAjYYpO/iwgpe6wXnmzpAKf0zYspjO/z
du9+tfOnOuCoue+mmD8ESCq8sKfLtAPGtIQlQuYIYII7zq5FdMD7d5rcQe0E
2PV2D+nBTAfU6X9Ii6kgQHxwb1E6TydIp01QCOkEGD+5KB4KnUCVcZf6z4UA
O4gabDbRnXBAZElM14QA1pLtW+82dMIjYgAvQZsAovPaX1imO+FGh8D2wp0E
CLnL7HFVoQu6T5nQuPMK4Lxgsce2N12QNnSr7UxwAeTuYC6xZe6Gy6crV+Kt
C2Bmv4ibm3g3aHW4LbRIFsCXFzrKsY+6gWO1VCJtcwHMmc8v5SR1w/rbP34F
M/lw9V0M8T65G/b7rxvezMiHZAud+oktPfCK6HCaySsfHGhNvWkyPWAu7Lk2
cTMf/qbyWW693gNnc/zKrm/NhxO7Y+s+v+qBoXPnj2pb5cFyXmBesngv7JFP
3/2dUR9aFFxaKnV6YX044Mc0bx7437v57IlNLwik08aq6nNhkelDNHNxL7Rx
aRMOs+bCrNsYdwB/H/wzLbxjPJgDvMz3xhQP9YGh9O7QxcwcuMJmlNgi1wfb
VkcDRc7kgIqcQOut631wVqbI4ZBzNohuDWp0j+gDJqXwWifVbKDV1QtGpPSB
REWmkczWbEjjbx58QuyDR/6eRzZmZEHa3sk9A219sEahVyi1ZcITzmUI/9sH
zuecauFFJjQXzpvqbaJCdcnVt6QbmeB8KD99mY8KrnM/Ks99yoA/NVnqBGkq
THAdtk1bTYf2bueH4kZUyDqotdLbkA5vVbmiUiypoLBtJ3OITzpEbGaJ++JM
BQtpycbX7OlwMYD/BGsIFaKm3175ti0NygZCDp6uoEKl0V8P7EuFTQT/lruN
VLg4x6khFpEK2pZxB+50UEFZjf6qjysV/C/d/EYbo0KHtsk/553JUEtneUJm
psEj2wvS4lGv4MTbPIvozTR4ERasLM35CtZusS4q8tBg44xvhipzEmzc0Fy4
WYQGA7z1P999iIdYU6NkojoNXKhNz5/djIfonKWxw+dp0BAlKZHaGwfv+RLj
vK7SIPbZoW1iNbHgOKzomGNCg+k52wfLz2Kg+3Wm7a8nNPicL+VosRYNLa8v
yR3woQEXJ99tS5to2P1e31ToGQ0OK1zj4LkUBbKVx6dTomgw+F3QkdIYCazZ
UfL742kg77bjH7tMJDwstPjkmEyDzv7OyntcEfDnlsX5V7k0YLm808vL6wV4
b6lldiDS4Os3HUWPt+Hw2Zy2dU8pDWZo8rzmMaHQI2QjsFRDA+ZHzsMT9iFw
aiJ/926kwbjxyag6nWAwTDhgvotCg7hXStJF/54Bv8WPqdgOGth+2+hcj4Ew
FjciZ9JDA1Fi04ajXgFg8RNO/6LSQDj2ocS20/7QG5P122CQBg+kD2vd++ML
7RoJ5uEjNLh5+FahbI0PGBk0Pw9/Q4Pw5fai4MdPYYPb5O0772jQ1XHuxfCE
B3zxuMd59yMNtiyyrm269QS+ahLm4j7RoCLAkS+E6gKbA2oev5qigdCLPU+s
tB5BkV1Vod0MDdzsg7G6wRHGXT+92PaFBqecvF0CZR/Ci1Mv93rM0SDo7HmH
jqs2kHlG9lrVPA0s7gaLtiqbgzj3aVnSAg1uRa9IiYrdg/ifZ+tjF2mgfjNP
b7ugAdxj+rmguESDJOlWu/3Ll2FlcVM7kYE97rG9/MgGUHroms48AweHfAza
YHcQK4qqnFcZ+DjrxSc0BW2cEzquNcjAIQ82mKd2XccvZTSyBwNX7GQhpHkY
40GF2k/fGHzvJZpnAqNN8fZBkRI5BtYUGu6ZyLfEmNA7ItoM/9ZnuBXDGu3Q
+ELLmUMM/zew72SrsHTA+X+DHIOMePn48jiJ350way//E91ZGtTx3soQ8HyM
IjuOxMZO02CsOUZqmc0N8293GBI/M/ylTPLvDXfHoeQa2otJGmzdVNUWxueF
Bv1j31Q/MOyd3E1N6PFGM1NxSuM4DQ5t8PL13u6DnQa5qlvHaHCvnOnw0lVf
zAx5Yi9Gp8Gx2EzniRg/vEYevbRtmAZN5vRt54f90eTXtsmmfhqo/LPKFOMP
xLXwp4e1+mjAKjJoyBX3HF2beMcq2xjvj329b8twED4+8/BcZhMNzu9ZGtTn
DUFHKzcHw0Ya8Jg939UQHoa+gptWFStpcP/RpqiWznBUPRx4x4hxvzMNLII8
fV/gd58URlukgcKKr4ZFfQSavkwRTEpn5J+z4UrxzUg06tVIWklixDv5X5DH
j0hk2sk6uS+WBlHiISHxh6NRpcP6w0gQjdF3i96NN0cjkTk32dKPwXck1jzR
KAYLWg4c6/CgQcHi1D6TiJfYXnv0y1c7GvBuMWu6Kx6LfZdP7awzp8FCeF1U
W2MsWqrZiF1l1IPc37yhRfNxmHoqhPnLZRrs6c/zdYBEPFn+Zyv5KA36tVgi
r7QlosFVwfLIQzTYIUORDL2UhCtvuYflBGlw/bbMx41Gr7D8jErCP04aBIg+
mYtyTMGx0c5g/1kqJFxg3vhpJQVTHPHR6nsqHD4Ux1ujlIpvWvj/qg1TgT4j
Ibq/IRXzr3ksXKNQYXbA4DxnXRrOyyfN2cZToaJ/43P31TQc6His8DyMCi4i
X88/kU9H7eLt5118qaBaq7fj4Ot0nP10mjpgTYXVlzWLU+kZOJEzvemZMhV2
lsU0ZY9loFaQ+F5tGSo0q9+4NLUzE5nvBwuPC1PhTVPsps9BmSjXc08qaDMV
ojvPH86yzMKP4m9+vx3qA4Gb6h+U0rLwwOIjr7PtfXA4d15EczgL3z8TOelf
2wcWUfvSClSzMSPjpL4Po3/dzLCX9NyWg8TZhvvupn0QxXVtl5NqDrLanjR7
weh/sVnPNnY75KDSmc0fXTX7oPxCzlRKfw6ejdli183on4siFdKRobnY3RK2
vkjrhWkFnWvmNbn4dXDp48PSXpA6+NM54nMutvz2skiJ6IV/VKOQAaU8PG/t
XP73Yi+8VJCKm3yfh1sePt/e0dwDLduKNHax52NodUB5QXoP6MXIO76Qysfa
HHrbKa8esJKVnFZ2zcfH+84X35brgad3rL/dZC3Aix/s26szumHxncNTYfEC
fHXhRGG/Wzf03EyU/qNTgFfkmZ+FXGbMIyrsb1vDCrCAY7jtzd8uMPT4qV1R
WIAcDW7PHfq7oGpMpzK7uwAd71h8zc3tgl6RgnM+7AScbmZ1/3G5CzzP2DSb
CRMw0uHT+mbRLuB4uTStBgRU8vdaIP/uhATKWeLAQwKmVX6Z5E7thP9GKgN8
nxNwL7vqDYJDJ0Q84XHbm0pAa9K9rVPqnWD+g/6TrYOAtzR7xVWnOyDqRu6r
S2MEPBZXwWpS3QH5SXzRrosEdPpRznUwqAOmftiMe24gYsf2tWeBtzqg8fcB
7ztcRCy7vKswTKIDin93O3DvJ6Im53aS/Go7fLI8UJwgScT7f6+zBLS3g+SD
z5Lf5Il4Bt/UPoprBx+l2VF+dSJGhO84stmsHXYLbchkv0hE/l3ryWon2mF4
6ZsjXifihKPULcGN7VDB5SulYEjEAo3+3LS+Nrhlc63M+T4RhbbiUOurNhiJ
XJqwtfi/PXuZKMs24FioDj9gQ0SXxwLsLHJtwCr6KSLUjoh83CUFuze2QWrW
wyqCPRGlzszYDve0QpvigV53Bs4M1clWSGgFym/nV6u2RGywks9VN22F4kNp
nw9YE3Et/2vXD+lWaHALsPhqRkQx7jzbi6st8OJe8XvTu0QUFfWeudjUAg45
55jdbhMZ/SMp8WdoC3QJ7vE+fJWI1/cf/qR1g6Ffarz/e6xNxDdWdofUBFtg
MeOe6s3TRLyytaP983QzFPScovXIEPGYX7O0bEkzJMb+uTlwkIg38wUph12b
QadN2OkBDxEfjY4udKs0w+xQVuXTjUQ8p6QgKMDeDAsPZyoOLBPwwvWJlh29
TdDnGiMw3UpAi60upzkMmkAj4U8YawkBQ/eSVtkONEEsy156QhwB31/bs7F0
igIGhKX3++4R8CtWzm53oMCIeac/21kCKhrNtbeepIDr2/yBG2IEXDQ++UNy
jQxzTUPbxD8VoNa45MX/fMnwdVyhMY1UgN3TnJEeZxnrLP3pzkkFuKs29GIW
BxmOPaVdFbxQgCWnbT03h5Og7Gl1xa6EfLQabfRVe9kI4gJ/5RYs8pEkKenp
od8IBsQHvlzy+Vi9gynAfncjLD+Y3nq0Nw/f3q5NYldECB+P2es8nYtM68of
Z1Xq4Z9S0akr+bkofoYwwUOqg6FEzXEjy1yMU0hZrFWpAzayIP3vZA62/Neg
HHi6Fuzbbym/oWSjWsE7+9Oy1XDQ2ty+/1E2sryc9XcvrgJ95e3LY2LZeIW9
xltdsgr6vxW77PbLwrArXjKuByphZ+34yWbhTORhMajL5SgHkapfF502pmHl
819Jo03FEBywzaM+JhVZ/u4gJCkUw5TJ/X10kVRMZTp+gce4CEpq46zWPJPx
MpfvxzfHiaBIz81cK0pATTFlDuWBXLjb8Ndnsjgej6mFP/tekwO606LMssQ4
fB3xNUM8LRsyJ9VLPse+RLnQn18PWGeCS2VvVbVsJP6peeQ29TsFIob+Baxs
i8C5g1VmDo2vYMjb0fd1VzjWniYq3AhIhFuL8hpT7MEY4WUpc5crFs66nqdL
bXqKd3R/PppWDgG9Z19cIpzvQb56KNnIyhZfRR4a7rtlC/M7L23WePEY3ymG
dUaWOoGB04aw2RkvrHsgEvHpuxe8fRDE1XT+GXJ/3eW7sTAYXGzuSy67ROOJ
Rb2skYcJsN3ysMEbj3S8voMv5qxAEqwKlpZ2+2agWFv8dUL7K5jIMfkg/DwT
XXhcXlYlpAKTpwrbu4hsnFXtWMsXzgRxiFR0Zdyb/TqvjcZLC4B5dCX+E5Qw
+mDugkIxAWoV1VNaa0vwa776jSPFRNihfUh1i1wpGs8cl6VXFoFjc19X9uHX
aLV/G9vxbyXwQfx+m+eWcnTt93iu4V4KY9JOGwZ8yvFkwOD9LLbXILluVmLw
qxzfQMLQ+f1l0Gkrab34vgK1DqZekzWugFgvz0sPcqrw5vBHLPhWASysuTMZ
fNV4ZPnGhM2zSlC7FN303q8ajzu73+wtr4KQ0ZUUJcMa9PT5d3Z+fy1gkalg
5cY6jPP3OpRWz8CTX4LELevwhurk1ViDOug7tX/OpLcON9jfO6+eXA8XhMlO
bC/r8fCcppIcfyNkxzala+5AlLq6z2q/YyOU9MndbnmEeO5v/mBtTyOcH/7V
+HwEcbR6S+2mZyRY/V4Xe0unEU9Jv82s/kQCJ3kuUT/XRrT+xpLDq04G+ezY
/bXZjTjbL0PoYqZARULOkuJ6I/bvH1A/eI8CVjfE/7odIuGtY8T9+5oowFdU
MF5ymYScyoK+K4FNYHNY4vByKgkrr9a4TvIx6tzXEZXdx8iYsmO3BZd7C3TX
OmS5XyXj6R9UkfaJFthV+N+RfEcyzr/3aaEVtoLKPdUPusVkVC1rltrD1wa5
zqPZdV1kjL0XZvXRow2kTy3Vj02R8TWHRQf9YjvcnnjDJLqbgjLWAqeZq9qB
+L2rQVWGgjbPlQ69FOoA/4PGS6tnKajbaNQVEdwBWvZMkzq3Kfhh2EZ96UcH
XHIR/CJlS8HXkRu9CcadkGR1ziDZi4JeMKBG6uwE5u6L0dHhFEwO5xIXl+uC
+S12PzcnU1BUm5b0Lr0LlsXjv67nU/DHwdDxN5zdoHWX+MesgoI51v4sAk+6
QXJXb6xqIwW7SOeXY6a6QXy58UpAGwVfJmvcOXutBzIUzncc7aXgIrMUVYTU
Ax/zX+crDlDwwYeS7CNSvWBrIVOSNkzB+klW9huJvVBi6028M0rBr4+bH19g
6QPTgw99LRl4KbZ+x2+FPpg69VySwtj/IaQvM/9hH2hmFFbfZdjb6BViZJjb
B/ufjl1TZ/BN/+Y05hrvA7bV6TP3GP5EqC7n1fFSQbrs7KcapOCpzwqHjM5T
obttsvZsOQVJC7eI33yoDF3JYcacR8H4t2LfnKup8LsI8mYSGPle+JwwsUgF
/78aFr+CKNj68daRY6I0WLrPVSbhSkF6Fn33PQMa5H/qbHA3ZeRH2L7WLpKh
26/PT8/qUnCg8t/FqwxdQSdrNjyUp6CLsctf9nUazCpK/N66n4Irri4DQ+b9
QPDh9nT7TMYNYlrDk6/64ZBgiLxGKxl/CZ3IL6b1g2rTG+Xd2WRc7XJ8Yq04
APxj/x7S75DRWaA49bLdAPwZr3tLOklGw+qRyXfpA/DBJZ2TsJWM9/MCj71h
HwRWQvwmv3ISdr5RKvssNwjmPuFsGc9JyDcYtBbxYBCsf/x9tNGAhFmvrMLL
yIMgqrLR9tlaI7I9vsF3YGkQVnLPmBLbGvGmacuIwN4hsGK9V84T3YjapF1s
qc5DwC17YpEo0oi/zdOvCKYNQYdJcmDTMOLqA6cU/q4hYH2+IbrWGPG58ZVk
A8FhOMfLZXjfvAHz5o4+SyUNg42LHFVStw5Zjc1sdaeHwY2p9seLxlpsqymK
PM85Aj8N7CxKpGpRNDLMe4/+CJx+9jJAm6kG5WqOkyefjEAANehjv2k1jijq
yn5OHoGjm3/9htYqlPT/U+/1YQSKAzSqZ7wrsZzpg83WjaPwO7j8GIxWoJ/b
vad4YBSeNhezZ0tVIIvk8h13o1HIj12Nf9dXhuwGVv95uI+CRG6HSffeMswy
/m8kNG4UHKzDU/4zf40FQ1FqXd2jwL02REv5XoLaVXEyS59H4VHCCp+gXAl6
SRctcv0bBZLfnPXRx8X4d1R1SJyPDi0nQuRbLYpwsxzz1ZOSdDj4jvtAwnsi
rsRdnpVRpcPSimUZ01UCjp7Jl+fXo8O49n+XxEj5WEDTnY9ypcOj+9X6+hE5
+Fq+fLtQEB3UldIJdd+ykLV8r/WzeDospK52vbiSiXmB3qItOXQYeF4iyFKY
jnGlZ4KHyugg97pCRpMtDWfOhbFVNNLhRvaCzs7KZPx0L1PMpJMOyFpmx26Q
iH/HDqUPDNChVN/ZoH0tFjNvmuluHaND5EJvDuVlNApEvJBmn6TDIYLm2N0j
EbjPbNGSPMM4r5I5dMg7GMc/8Vw9tUCHTX4T+8KT/fCTz+o9y2U6cEy5s5bb
PMFds7s0rn6jQxhhYrZRzAp35bp2/P//Tz83dFmXZuyA3evEH2oM/Ec3wNLP
zhroZ7pXNBnn71x/Th0TcQefAzeO/Jmnw0njmbPem/0hVIxT3IjBn/CgSi+d
JQQ8f5Hz7T7S4S7bB45izwg4WsaVJfmWDkHd49omq9EguMChHNPPiGf/7/hp
pzjoaBrsyG2nQ8yeB1/a5hNBOF2J/qCBsf5MLczvfgoMygof7i2hg2yVTc5F
6zQgL5afzk2ng6VbiESAdgbcOGeitBRBB69YabuXwlmwQhvOzPGiw609eelS
f7NBYvHBmV4rOnzfq7zwl5YLXCmi4ubX6aCkcTTsdVY+sN/YVOkIdAj9uTS9
7kQAk/XPxTNb6DAXrfdxE0sxPLzJpK2/PAq7f/KNpX4qBvb3feOqA6OQdWJS
8UNTCdwRrn0aETMKkoMHCR1PXsPgZNLaX8dR2ODHaS18tQx+5x649PXSKOxL
V2YJFyuH+vEDD3zYRuFnx6vdTK0VcE9FAkXHR+BBwpogRlTC0C6H/fcrRsCs
OFV4Tb8KlL7HLtUbj0BkSdcGk7fVYB3CvTp5fAQyL372OxtXA34jTfI1rCNQ
+JVkJ3SpFvw2NW0NzBqGKGeNU3Kv62BsTztHsOMwNC94b5Y1rIcCoUjm6yrD
EPxru2I+SwPceCc9c3toCFRUHhi9UEPgG2zvzEwZgsr7q/7tbxDO1F970Wc2
BOZcPUqBco1gbEb0WPg+CGVfy30lKY1gp0ucXKweBOGsOzM7WUmQvH4j66vH
IFy0mre8pU4C9YKTr9dVBsGiPix7xpsEiXpX9+/ZOAhK87FNtTUk6FIf4L3a
NACbWcZdWpdJkHn15ZsCvwF4aUPbyCJKBtvbPnqTzAPAqeVwb9GfDBz1Nr8H
GvvhtmSRZ3gJGb57GGpyePbDj18G62foZDCe+ffmuUI/1LYHzW7cQIGnq08N
jVZo0CTVP9p1gAK5J3U9I0to0CD0bSnuDAXe7OpcOmxNg45sqQ/3jChwc+9u
O1lGv6mO9ZsTd6XAA53vr8vGqTCu9Zo+FU4BrXO+ruVxVOAu38acmEEB9fLz
j+EyFULZZVRVyygg9ULc+DYHFQKNHdZHSBTQCNd5v53UB9/Lz4uadFEgfvRS
opVLH3gsBImP9lOgc+6BxEPpPri249aayggFKGqrste7euFhp9y2+FEK3Cdy
Dqqd6oUZYdL1D8MUYLqcvqMuqwdUuu/BPsb5yyebCL3be8Br5FvRxU4KHFj7
dDLcoxv2yx5ie9RIgasJM/s3z3RByft/O2JLKaATdCX/6rUusOHh3luexog3
MGHWBTshXa+zvz+UAg3H85uCJDrhflL89Z+PKHAuznkmLqYDVp5zHBG+Q4E7
LOQ8840dsP3Gj+1zKgx7/EpyVx62w+fdKQ8/CFHguClT373xNhDZEUHYwsj/
TPblJwUX2oAWveZq/4YMlpeZ2OXqWqEvfWZyRxkZeNY3beY53Apuwg7af5+T
QcqFO+UnRwssbGb9XneEDKajgUf43ZohJFPINm2NBA9NTh1umG0CzyFD9ekW
EigXvqrv7KZA4zjz3To9EjSxnrmuw/DrjWD6j5u7SMAb1X/f+zUZXkTddHGj
N4Ls28o98kkkMHxwxMhMrxEmaSfq+7aTYNTgdJ/Gtkb46hlIOveMoSMTFINe
hiJUJmRu519qALrNWtWHOw3w13GPYc+HejDbpvrtHNbD8Njrfy+H62Bhgo1P
d089kByH9ua11sBjZdVT7u21oFD9Cvgo1eD0SdC+Z1ctWGzwYB5rrGK84+hv
nA9qQNp+SKiaUgEnRwbJRV+rgL/U+uft6VJIqDP71PWuHB59tfis/asExkad
L85xlcOBEMUD7JtLoF5lgScXyoDntk2srkMhEEakZS5GlQI1T8bL2SEHnKOi
b788XAgWgbVOs6Qs2NisFxpgSAARH79jpTszIfJvYQF/SD7oxTJx+A6lQpua
btnIcDaYZLqbrGrEwP6jxwr9bJLhQkB1GPlCJJDnU1YfByYAi+PuOv2WMJBx
m48PiH8J1/jCncNsfWGPXksmXgyF5OdZnFyCumjJscAhQNZHh/e+C2NbrfFi
M/6iv3qEj6SaVTuWHuPc8I51crgvnuPknpQJ8ccq9clv0XyRSB60sH1IiMJu
Ny7Nz/ZpeNZXqPNGcgwekF6tq7bIwJgvzimBvrFINv0sHn0vC3842tUXiSWi
uc4HberNPKy4ZzKR8jkJbZd6vs7rFWCORbVEe1wyqncoefpfIeKgZOIloy+p
qKHBdvhCdjH+fvVsr3pJGkpHyZyaySzB/laWKbJ9OqqJyz7zyChFUZB4Ev42
A3+16mudSy3DC+xmJR5m2Sg2MZHx8mUVpu3K2qe9mo3bJ24X8kVV46EHAzVV
ATk4PmK0zBZeg9JqF66Hh+TiYx3i4ne/Olw7e+HJH9Y8jO6Lk6B61qPhbMKu
3a552CLunER/3IDaKUNyj87n4zWdd2fijzei5u7vh+oJ+Zi1reB9UWEj9o2e
c25mK8AdvpljiuIkHA/9tCn6VgGOJOR9k80goXOaiqBUbgHa2hSNR+4hY0SO
nmz8YgHWtXubXIghI69TDeebowQ03+uhaLCVgrJz/fjbioDyA9ePVfpRMNZj
T9paKgFlNKhbrq9R8Iucp95ULwH/6XlGHX3YhJahje2UXwR8NPvkxenPTbgj
ieNEnAARL6rI9D6+1YytXI67rOWJKHRty56B7mb09y9V19Ql4h0bUNdRaUHO
O4N9MsZEdPriyTtY0oKPuLhEZK2IqOqIdywOtOLCcOrKdXsitkV/n/0X0Yq1
Vc3aGXZETN/SF/RiQxtaDDY7HLAgYnbZ0007bNswnY1z5zsDItqqu5z0oreh
eLKx1PtzROTfcJDepdGOFw35WY4fJ+JPyzL8VtSOwe6e8hO8RBQW/Fz0hb8D
2+uOk398JaDEfP1DgncHw1/C4pMOAhLOXus4MtWBoZ/Q3CuJgAGKSe5m5zvx
kKf20S0WBBRZl9S+XNyJYmffZUkx8qkuvHXhA3cXunBGB35bLsBw9BLlcerC
6aY338wKC3C/aX/+2/4uzL1raxVvWoDFF48flT3WjXCy75FVUz5WXdvEbDfb
jeFHaRzi1vm4+j41R1W9B4PPvM8f48xHuuOJDT5JPfhGMPBTHCEP8+QGC8W+
9eAu3sIyS408dGj1vSKh1YsH9rP63xvNxUMZ+wKeJvbiLzV/uWjzXPzvjdp7
4flerDrdL/DRJQedeZ1EYzX68Fr6e1P1xWyUzHYcmLftw4c+LpF3jLNxcPr6
pqOxfajHOX1ZsysLXb7euKPf0IfX1XK2CBzPwq0NoUYmk314+h996mt0Jj6w
XUjR4KBiMdf39pnlDGyx1Mv/J0nFqaX4/Zmv0nE00Eh53J6Kv1iLL6fNpaHt
ZGbP7xdUPPGuebuMXBp6vDBSHCiiItV+83UHj1Q0ejK0waKbgQvEpjm8UtDm
VmV86QwV2z66nd+x9gpTPit7FrDQMFjB5oC6XRI+HzIWvriPhuZSz18fU43H
Xzwnfd0u0FAkdD3MOyUWK9+Y7ft9l4ZB+udl+X7GoOnPWpXNj2mouUGTpKIV
jabvLukXPKeh9FUtO92oSOTvjaX1J9Cwc3tbStTICwxjeb3HK5+GDndu00hH
w1DX8W1GThWDL6JCc3d2EIp6Dw5qNtOQZjC58H57IAaKGQvd6qPhVkJaX4eT
L97YRl4ZGaVhfoBEzMEUL8zluNLWMEHDE9Gm12c0XDA3jGsz2zQN+UOEk2zH
7fE0WUcub46GCuuLH4LodzExWbc9fZGG/wWI/s3mAqyZOHBmfomG+y9K8llf
vA69dpcP+TKw2uzDTcvKliA03MRutEBD+2umdy8VOcG3/1Fw3fFUv19cSUmL
MpKiQkNUki9STsmohDKLIqOSImUVZe89svde98reHO61573XvkKFIgoZTfrd
35/v1/N8POe8n+ec836/XvelLM/e8QtjnZxqOSz/Cp7SrDh6J2nIx3f/7vis
K5CTSI73RhnY1T5vV5kn8PxHeMDfR8Nb0UWsW5x94Y9bfeCWNhounLOIbVUM
BCbSrUruGhpWFt0LzfYIAW7pz6hEpOHIRZ2nKqZhwHzD0DssnobRcaOFCpfe
wP0zJZtXGPzea0uuY+WLhAzOp8qPbGm4hxTiwboYBfruBg+/GNBwZjuHeSEp
BszXDGOtlWhofOzrOYvgOAi4rijKJErD36683Kk6CXD24KCb/y4aXpPjvr5u
lgyNr8bSAihUNIhbqrKQTwHmbp+eX0Qqmsl9pdF4UuF7rqS3li/jPWbofh6Y
ToVOo3390cZUdF8PPH+oNA2yhqTmSDJU9OFSXdd5lQ75z/RP9OykYvSuLf/x
yWXAw7jrB6s+UDB4PluZ8jYTuiRWjARcKSj29Zv4X4Ms2Feu1xeuSkFr67Ik
0S3ZwBSdqT7CQ0FU1TP4lZUNjv6rLJ+xB3eK+Iz/uJgDL0U8W0pUetDzBdfp
amoO7Npab7q/txtlgnfM997OhckHauv7dLrRVXqLImUoF74anzXM7+tCjiTq
iKxaHmQyf97Sr9aFfa6vdtCK8oCuOuI/2tWJH8Ls5JV3EsAxjLaB7WonfiYf
afzvHgFKr0Vx6dd34LmzUR9ksgnQs7LzME2iAyE7aPbzFAHcFJ7LPktrx8UG
efGBvUT4Qdp2TnZXO04fr1yLukgEE1H3Jgn7NpQ2XYiou0OEQaaae4YjrXgp
f1Zq+AkR/pFU7ciyrRhypX6frRURqmnx9x9Et6BrddPTAw+JoBkXG6K+2IwF
53fe179BBJQ6a+6t1IzOB28cLztBhHdOdp480U1o+spisegnAdajLTPYGPNl
Z2rHv74yAkid6O56croRr24qJCbcJ0Arq56Wij0Z1R5O2QVsIkC5tMhSSRUJ
Tyz2bxEIzwP9zoaRyt8NGDnvoUZlz4Pv3Zs6Hks1YEZBeNCB17lg+o2Df8yq
Hl/9qH7xajAH/NnZKCpqiPHi3Er3BXJg8aMqR0lJLcZLbqfn2mbBxJBR2dDT
KhS84Do/75YJlKnRa5uaKnCYp2c02DEDPljt1vnMWY7MmEj+a5AOYst8ro2G
pSjNsVErWzQNRq3uKk1kFOO7D2a8myZTwPvD8omQz4UYPBRV7+qRDMWSH//t
Fy7At9MgfGstFmROcW63FslBCW72Vuf8KGBra3y3OzQDh69UvvIVewNeCU4P
bL6noICURj7HYV+wf7RyY49GBLJ0/lV4/8kFhr4LBsQwBaBukey5105W0P6j
+yTmO6CocObTrEobtCkNIAcuO4P2FTe1Ni0PfGd6fFUkJgjsZUx6xOuDkO+Z
YrJmRCRUEeWl/Bxj8VcstWbUPRVCkywE5cWT8YKurUsrVyZwHf5pPSCfhkOX
K108EnPgP0dt6d/1OSgln6z7RakARE8nnKoTI+KZcUVHO4aOPXZHLdX5TgHu
b2nXnk8pBjlzE35t8SI02ZK8bCBfCtMX1WVVuEpwU4ba4+ahMjDYEbl+ibUM
Ew2v7uI3rYATu+ZJ29kqsObEkXbtiUpQpI3wHpGpwbAPR/LXKmrgP64eF9r9
Ojxhpfb+6A6Gv6X9OrH5Rj22JnhkZt1A2Pz8YkWedQPKUUKLhS/Vw0H9aZGw
BBLuvvir0pJSDw+HJqIedpHx4w5MCWP4ic/6Njo9G5uwZH3KfLmnAZJuXXpl
dKEZn/XLCP6QI8GWjb/v5b5qQcOsieb1FBLUSIsZNFe2ouSuffFjqyRot3M+
/vh3G95TubZrL5Dhq1d4PqtcBxqmCb846MDwa34r1Rs9OlHC4g3f8ywyVKes
fSjo6ML0pe3Ggc1kkLo7am7A2YP8GRUHfw+QobIvWirjJAW97RyXrjD8oqqz
FEsfjYKbfutncLaTwV3yzG11OyquPTyRzkwgg2W0lV7GXhpWDGY6tr0mAzzg
nzeopGHPvxTNY4x4FocChJlu9SK3t9CT7/Mk+OQSU8y63IvDX0mh20JIINF1
KnA5oA/LHs+4mwsw8kvnCTt/uB/fBd9Q2pfYAHJmVA3d4n70LrLSkd3eAGfZ
G2YrYQBv9/nUbjKvB11Hw5Wh5gGcu/F03vcpQhJblPfxK4MYrOp8s2m2Fjo2
0lUPkwfR7yGerLpaA6TTs9nnpYbQ+JMZNdqvCowI9fSVtCEc8Kg+QX5bAX8s
TKQprMN47JTayc6qMni2InNX6/4w0uwM3OyIJXDpc7fe7sphXCv/nVbkWwS/
xSbGU5np+GqcXz/+ZgHU5jrczFag45e+UtF5Rp/0aIuk9DjScWGLs95t/Syw
E359lJZNR1n19WM+gakQXFAdY9NBR7HDvIpe2nHgfyYizHeCjjGS9d//WIXC
mbcCJxcX6JgREVds/vE1OMruj41ZouOzQpcTavKmKBNudt15lo6S747nRW73
xS0uAzuIQ3Q8NhB2jM0uEp9LnhiWraZjgpzYq8NHktHv8MZgjXA6xtcxvfy5
no420hddhI3oKBIXoXOMUVfpf7KoK0J0zG26Ou9hmo8yhC/V7OPDyBMqeyfI
uhCl4y4RuoOHsf1rjGVKSjHuYzp6LUxqGFXWXqarVJWi8h7Rhy0DQ7isp9rk
VV2OrtRjYx8shjCN5xu8TKtE5428D++sDeKbau57L6yqkWgya1ruOYheogMf
tx6qxcOiOkX2WwZx/f6bucniOixcsX4u7D6AMqeOSvzaU48Bt9xmrv3qx0vD
p+4fqavH8I8JRtbm/bjtb0WpwK0GVHrcwS8y2IeSH38lp35oQI1Etvu/oA9R
ZSrTXY+Ebt8iwx5l9KIg6wNVIomEPT8/qTOx9uLCMYc//PvIKMP5ZADMGO/Z
J7tk9h4ZcxyC1DKbqah0+2CNdBQZBc2+KBAFqShj73zkfC0ZiRUP/2tzpuC1
wvZ7sr1k1FrpN6WV9eBG+5gi32EyGmYcEfpq0Y17/3tX70Uh4+uTDl45wl3Y
dZKJO6GCjC0B2SqksQ48PexXfDGMjB9qm5amYtpx47fEgq93yXjJ37yyTLcN
3SXPTR/ZT8Ykwaq5qbUW3E6e8JJoJmH98JGHcdkMn6OZH4xGjHzGjJzsbjUx
/FyCjPt8A5pK/2rcvLMRP2YtJshYNeCRutDEzjYSfmlJ1U+arEfh//KmZAIa
cKGAfveZaj1OtYYnFmnX452Jx76DOoj5IZcf8qnWoYTk3rHQ9Vqc/OhoeWK9
Gn1VLJVdw2vQfPPzm3uwEu+o8hfu5KlGy0/Zz2VDypFL9apInF8lyhpG8/98
Vor/jWiMOc2XYyozP5u/aTFqmg6eZ1Uuw4pSzWYhs0KsMQu67hhWgoN/P8mQ
FfPwjinR78fWQlw4dH5JuiQLlfUHtFOs8jE1VUL7oGI6vvJem7hfl4vBAxeV
rsfFoUjUST4TyTRUoMc4BvlGIPv+qz/XGxOxVrBiZ6BtMPLG/9k3xx6F6ySV
51b+1ihQlSj1QcwJ3yqKKnzZKQTatntPGjWfgvOrbHmiPdbA/Mz4s9JeF1hg
jRYzSvMHEa6MtX1JUfD8vNL3i59CweGkRqzZvSSQkVGVFa+PAG2B46rBAWkQ
OFMSodgWD8bUjzY8Z/OA1Vx+68Y/SdBa/cXi6lo+FNqFyGU6poDmVqMZPsNC
iC9rG6oZT4WSHo9VFtliSOyJ+vpUJB18Gq8R1jlKoTlC4J35nQyAM0eI2RNl
8PPf4vgtu0yQuUE+QGT0q6dH4+QrTLMhe0wz2EeyBnZqP7n96lwO8NYXp/Z8
q4Xtv5gth37nwNL0noobKQhmOzJNn2fmAptTnZtZZj1saCPc+3YhD6rS3ysG
vmiAQ4Z747415AHt5f3ZNSUSZP9hhT0SBLDjvfE+jYMMxd/9VH6HEuCakG+c
OWM+MPGLOMA4Afzvb3KDuEYw8+o6/oqPCF9NRTs59JqgqfShqrIyEd4X+T2h
cTbDc7fdBpImRGDfk/bDuqMZqqf+uzH0lAjMV34EfHndAqFy5v5oQQTp+mMN
J0Rb4Xht0aT9XSKs2Ij5nhxohTOH5mL9gbH/V8CRWcc2qNm4Q9uNkwjZy7Gc
+gfa4QXHnsMf3hHA/mz66ouqdihJNHYQiSHA80Zm74uaHXDnp7n82FUClKVx
eed/7gDllfvdL+fz4MD637f19p1w/tGOz/Z+eXBp69l0W+YueHZauOcGXx50
/R350OnXBeT9NVcdUnMh9we5tHlHNwxd3pry8GAuLH88cMo0oBvOJi06cSbl
QOPa7onE9W74dvJk5nPuHNB6e/gLu0UPyM7/46F7ZcPjUyLlNYM98DeBeUfK
QhYM7LgfrSFAgfbDt//waWWBw7xe/6cbFDCw+RqfUJgJbhcJ8/EuFNiU8lfv
h34GvHy97aA9nQKRgUovnuSkw/5NEwNJm6jgwBege/h7GkSU3c5aEqVCiPrG
hyb/pcHpbg5FW00qfHj10fmFXSos8+7wPvqCCu56W75mF6VArKnd/R1xVLAL
8Xp2bjYZ1Mu8fxyvoQKf2FrswYxEmDv05zDnLyp01SU4FTIngNqtfJtpThpI
agEn1904uLEu+pnpFA1oTCdutRbGgNv9XRxGyjSYNO31UNwYDRf07BO2G9Ag
kPeJwCb1SLDak3BtizUNbukabXoZ/Qb2xD+d1vKiwaJvvjX3eBgcblfW/RVF
g9zU3QeuC4YCZYzg9TOLBqOl8rd2dgSB75/jNjplNDA8Z5Rtet0f+BIkRHjI
NGDffbnicYc3PLm7H+W6afBAc6vW/BUPKIO9WtRBGtSynEkoa3KBnBFVzt5x
GrxkipJn9XSA4ppliSufaDDoWfn+hIs1TN1ymT87S4MxT7bOyL9mYMk66Jfw
jQb7p7ZvVGLWAbYnb254LdCgkscy8ZeFFI7X6IQuMfCWjf82vOu+h4vO3Gkz
8zSQCy94vyvJEncc8Xn/5CsN1u03Jk6I2aHaAe9s1xkasKQOccCG16g043tX
dJIGV/3z109NumJTL//9Z6M0GD7P3b71kic60KyOavfTwHm/25moSB+Mhb6d
7zpoML4vn1dp0h8L2PS92RpooJbbNu19PBgb2azWJ0sYOHa2bvpMKHrwvfz4
lMEfy43cANXOMBysdE59G02Ds9e5jxTce4N7qOPEbB8ahF39+b1nPgLbn/+1
NrSnwVQ2cdHiZRTqSvw2GTKlgfjXwPzra9HoO+s0x3OTBhZ6NrKnGfo9OMHO
8fB5GjCXWRwd+x6HT5VGX/8VpkHIET+7A6YJaG0YaJi7kwYjB3tjyroT8djI
bv/Tq1QQLS8qluFNRkVzt0fh76ggef3R7svPUzBITWmEKZMK22IjzsnypuIW
DRlpTl8q+FX/DTGsScVTmgdGuB5TgT269GD3ahqeJkparZyggn2es++XwHQc
ke/le8dGBYvixBeDBzNQ7guPC2maApC+P7tLJhNbLcY6k1IoMNbvt7GoPRPD
8p09HV4y8OnTM1d0srBI/OHKeUb99W9n+vDyXRY+PcgVNSdMAbLgm8Nid7PR
hVxFPrDSA/6sExEqQ9l4RnMsXCO+B6azOLvrVHOQmIgubpd6QD3Og1f1aC7K
trHz/fPshg0ex7zl/HOxLnPW0ki4G37y/HggPpOLztr5ol9IXVDrm/5o96U8
fDb0hjfdoAvEXQP7usPycLN1ykrMz06Q8L/npDWWhz3xg44DIZ1QpfGpI1SQ
gExnHI1Nj3aCNXmaYGtMwMokTX21mg7gPCkTMx9LwL/d3/ckqXdAjUd/4Hwn
Ab1C/0kafWiHHT2ibA9+ElBG3/1h0rN2ODbjtkPhABGvsciqmDK1Q3qeNaej
LBHbn31xqQpsg9LgCO41DSLWthRlEHjbYP+SrEeNCRG/Cz7WUkxvhZtbbisQ
LIh4weGPcLBYKySGOBehFRGTnSsL35S2QLDrpoQvT4h4405L4L3zLfA68uLl
Q8ZErGSyUV9raAap9UXNWzeISB+N97dVaoYykbpZDykiDvSzD/a2NcHM+97w
eB5GPCeXmw9fbwKJKOLFiAUCimkKLz7paoR2WL5xn0TANInUuRrVRnju5RbA
HEjA4G3fbh7oIoNpvI/gwxsEHDGwr45WIQNXGoXovZ2A2T/XmmTaSHClRlDk
bkMe9hf9ZN/GmH9bh3rWxi3zEAZ/y/GQGkBdQW2ZlSsPt43tXTW70ADF27cB
tTgXY3Suv2erqIeafHhzZCQHiySUePp0EBJd+P5lmeTgxITK05dX6qBE97lz
4WQ2DpvY0zllaiFK79zMVUoWqmu57vLgqQbvmB+PKOey8L228jZ3liqQvnT5
dHdCJg6b6zt3f68AlqB/FwVVMzBS+XhnSkcZ8HlpP7ONSceLzVZXtMtLoYbX
o/TsWBqm/FDyJKSWgKqN09ryjVQsZA+XSXxRBNYR1XeXnVKQ4vtyyNSkEBq2
SQTdzUjGMam33kfVCuBvJu3sWFkCuqYN6S4rE6BghnujxEAcTlleLbHgz4UX
t66mm3yKwQdRx3jCVrJA1p5J6/FwBPLxuDiEZKaBgHfjjgwuPyz2YtlacToS
jHcuWxW+9ETZbVUVXJvDwF/RynBbgwvuFmk+vVrnD/TsSIX/ph9jvaeX0zcn
O0g6eEBzpNsRguq+ewZe9ESPtzuKau67Q9pIsBy7fCD+m1X5r+yfD+i+VFtc
iw3DW97OH37Lh4Gd4cepgy9jkWs7RxzX40TYFPrIVPpLOqo4RrHwdiTD2fjB
zW6MOr8MYH7kYSp00Jk51zOycW9oBr9jUQYkZA1QhlQJeE+4L3PzGwLU+PE3
c+YXosLI1PdA/XzgNJyo9PcpwshzKbyvOAsYdcVD/mxYjFKHBt76fymEPdV1
gyubSnHK30tulHEPN3pLRdaFK5AsKN3aWVgGryn9IeJTFejsbpJ/Ob8cYl2c
T8QmV2L0R6KTb34lkDUXEkq3VaOSVqeQdFEV+Njky8pVV+P4zwsJYhXVsLyt
MyXrQQ1+7fn0J7O9Fl5/XSpsL6hF5+G16M2DdcBNpS7oq9chd/KUjekUQrhK
iMjrmTp0mLDQ/8TcAAvPb86ys9Zj/J2HdwcDG+DCyz2MIV6PpuGx+5P2kuDB
VXV59rB6nF/7Fu99mgzITb5hvbsBf07bCITVkmGLtPzJZbUGnKW++aik0ggH
1P/OLfk0YG6nyaSzWRPs1ZC5p77SgCEhL97P/miCH09RN+4oCVul1WKo3s3A
Y/6zWkmXhMwzQjsHs1sgEtdPJ+WT8NFV45h3Mq2w4PoiV26AhExL7G5HO1qB
nuv/8PAfEkrcazmQe6cN/tx9ZaBwgIz6ynv9dL61wRcfgaHE82SG3+PO53dp
B3nZhOeit8kYfuiH7DJHB5wzPCk0/ZyMwh97i1rTOkD+St+FLl8yxgn53wuU
7ISJ16yWgwlkdJnkPWBW2wk+KjMnvxPJ6JE2scKn2AXpJ1er/arJWKz5Ljy+
swt2zv11TGwm4xsFTtdRzW6YUuEROtFDxl8X7UVo9G6ItrhfebKfjPzXkj9Y
GPVAlGVNWNYQGa2xYSztcw/sUrqi94bhB9ve3Ugp/o8CPyoEdi0PkpHtuHaA
NmPu7FRq2/z//z8wXOMlWlhNgU8zb79t7SLjt3+vV3CNMYfivbqQTMYz2faa
jkCF2scxm6bLybha5EZ450IFb/ZtN91zyHhZvNxotIEKkd/XOsOiycgdZkux
28jQIS+zFng8yWjLk6+ZKs+Y66nXwzmfkvHR7tOKt91oENx/ZM5Ph4wRLkz/
3jB0hP7MqfDXsmSUSix/p8bUCzzP+lznGfynLU6ed5HrBYkb/nsm10jIovfS
7fCrXqiruLnZcISE0tH/cZ+q7IXVYjZH0zISfry4efGJeB/MaXXdPXSfhFdO
j0mEPumDje8G1z5Kk1Db+gGyZPXBo3sk98tsJLxZdexUM28/xMfd/vwrowFV
i/hesmj0A8ey5M67DP/6/ep5uqNvP1A6ZAgvpRswcM9t+5WVflA5jjvWG+ox
fS2ueE5kAGTucB20c6/HReZENmbDAbC14FZsla9HnuEmLrvGAbj3qLJLzo7h
b49PvGlZGYC4SdsTT6frcF98eMuhI4NgqOdmlaxTh1YF3CIj7oPwU9vux+2j
tdibRj5wunAQnu98s7bDrwardB6ovxwdhPS63+b7Zqoxvdv2Vf+ZIegIau+J
ja/CUjdjw3H9IVAZfWIKi5UYUpt+s8N9CA6JvQhJkK/EmsvFC9KUIajiNxv6
OlKO+918u4uWh+C1V3ETp1A5HjrWLPCPZxgSmRU+GDwqQ9kisUcb9Ifhtd32
sx2zJXhNLvNPgcMwlGceKxI+XoLz23KkjsQMw4UrnON7GD77gtb0Nx3aMBA7
1FMFegvRU/+k146vw3BxKubQiy2F+K94L5PLZjqwxTrtocsU4LULsQ8J/HTY
gIs7WvryUb5I/XeIJB1cPWPt758hog17yzFRFToYf7f+rzMgD9k8SyNfGdIh
blXWSHoyBzV23q6X9qCDN/9DDW7/TLw6d0l3NYIOau5iRyzK0lHChzImkkmH
cm2DJ+bjqRg0L/ulv4QOXn8H0u9sTsGkG6c0fzTQgbxLyUhINxELwFAmuIsO
nj3dL4oSY/HER+aNiYN0mLqzT+ffRCR+9ZLWFXpPB155yw2ZR8NR/9Klo4Kf
6bA19qy0a18Q8pwqT4ubo8OenuSnlFveKC4UfzF4gQ49z5WraVXO+MpDp/jf
dzp86eJeXmy2QkWhyMVvS3T4uLfI7YjnBfzHLXjakIFVMhXvvj5gDjZ3oz5o
LNKhMOTItT+zjrDXZlNp51c6iNnxhoYZeEJ6u+ebnmk61F1Z38tcHwBmUg1p
Bh/p8KGcSy1+exjcctORe02nA19mZkBISQQUHYfVk1Q6nI12K9HVjQFPH4Ew
+2Y6OOdMVFksx8M9f79t+lV0eNJzNj5bMRm4hWQCRwl0eLR1Z0PDjlRwJ/73
jDmRDreV7e4p0NKgwIYZqIF02DwyzLwclgED0fk5Kq/oMD9PK45QzwIx2+lA
+0d0EDyXuGFhSw7INu1cuK1Nhwrvtl0d1bnwIF/i9w+gQ8AiX+yCOQGO0w/+
1jnOyE+i4u8Jrnwoq9c1fMVBB66jDueuVb2F5vL/Sk6PDYOlXx5d0qEQzqmY
83aQhqE+7b8SH4UiEGNba5fPHAaDZ9ts57cVww2TvRwfHw0DW7NCYnpoCewQ
mx3iujYMCf5Zoh3qpbD/cIc6HB8G4SXp+VK2MtjA3mcRMDkEDv9ZrobalYMK
J6mlpn4Ixr981zM+WgHfbaPO/I0bAu20JvHSvgq4mnpiG0l9CDz/ui3nCFXB
sT3KVtrHhsB92PG9eEsVUEySqBxMQ3CVf5ss64NqaD7XFClAHIS6830WttE1
DP15l8nJbRDU9nnM/DxRC65HSJYCuoPAJbyHK726Fs5phF9UXB8AXahy0uyp
g84bLd4DlAGYrvyTc00TQcSvKLoxdQAKS41vqfciGPitOlEUBmD9lH5SuUk9
cIyuzP7mHACux7GJDQn1MP2tQT1ush/qZFcOdfTXwwKzX7SOWz/I7jaTGoYG
+MMSnvH6Rj/ohRwbfvesATjfl/44w98PCcU/ecdSGqD0Qvc/w4o+yAzZtUL/
0wDXrasmNHz6IMhrYGm/IAkaB9nDV3X7oOWcjVjKFRK4fUnyN17tBYENciy2
QSSwcklslWhi9O+Onhct+SRG3xoobwnvhfjd7d1GXSTQmsh9d+V0L8zYDbba
spDhy1Wqk9w6DXb9I+Yt8ZPhnR85b0snDZp+XZlt+I8MClV3LLJjaPD9g/y2
ietkyKrQqRZ6yPDdg04lt43I0P3ioKPLWRroLiYVH7Mhww8rRhFuoAFtn+cP
DU8ytDDH+E51U+HWRFvwyBsypOcGKK3GUeGxz/W8plQy0Are3lwxowJXcGUk
51sybFW8LfFJkgpp4geqOyrJ8LSAy6hzIxWYJhziv5HI0OaYdiGvh+H7BB8P
ubSTYUJ9Za9XPAW8RlDIi0KGJX3p0/ceUeCQ1Sm1jf1kMN41TjzPmM/JJZul
fg0ydM/3tzn8zBQw+vSh33KYDFKDBTd3J/eAFOXJ2YcMHOWz+fy6TA88PSVi
+YmxP+LBFG1zXzeo2sq/XegjA3jLFolbdkP+8m0JP8Z5LrSUmx6s3ZARYKlQ
zojnL3/apk1pXbBxuEbmFZkM7Kusf0ovdMH17wS70SoyHIgXu5Q01AnDNc2P
xgsYfG/XrG+07gSDdqK/VwaD76h1uRO7OuFgm5DBYDQZ7JtuGQ3mMnyew97H
A35kCFIMzelS6gA9kaLLPo5kuOWi9GL3RDvwvXnmvGjOiD9hYXuuczuUn1Wr
5r5NBkfTdx8/VLaByWBQbZY4GVRPnt/gp9sGYi/bqfv3k+F1WFnym5VWuNSh
7HKP8R7Cv3E3j59phZC2d3cf9JGgpuyn+FFaC7BWXfssXkWCzMNTs2PPWoBD
XrNuLJEEtJmR3ryiZshx4d44b0qCpI8XmFo0m2Eo4mG9PsNvqdzUe2Gw0gQH
Fw0ta46QoF/NfP+Oc00wL3aW78lkA3iNZsm+bWPE0cSiyaLVAM0ag4FLlmRI
7BaQCxNrgPsqhTItnGQg1zQnSm1ugDrCubtCxiRQSIkPGy2ph+qOX3KfGXpY
r93UiIO1Hp7FHOrweVsPfLfqjnqVI1QbCb6v16+HQ/sM9Z7eRRBNerxt6THC
D6OD1O/pdbDVcqONzkQNSHToDUYJ1oI068C2iwo14Ci/fZ65vgaiSpKmH2RW
A4dQhZ6Efg307p9Xem5ZBTf/6rz5FVgN21W/WafuqIBpx/xjX6cqYemJw3jM
i3KI3tD558LLSjiYe8hvcLIMmB5QfvhtqwQaU7nisYZSyPKVMTwrVgEb3piI
ivkWQ1r2hNzr+2Wgr6R5dpKYDx81ZXXN3hZBBH2K7xOBCAqNwOMoWQTXfH3Z
XuQT4KRAWOdcVSHI5PBqX6nMhZOZUrzMjQUgMbNf0fFrJvA9P/Tf4SQitD/y
rG1MSIIxZuOBKykZsOvrwVjfuQRQ+Fv99mhiOgThr+vnL8aDS969XJPYNNjt
/9n69mo0iK0WfucKTQHhhWyJhfgw8OTI4U5diIUfWT66qecd4XyIsr5nnweQ
tszetRa3hacsAmRJLReQ1Fq1nrO3hDGS9bGnmfYQ5B9QNxhwHSYb9XUpr3Xg
uuKTyDnyc8x1Hl+XsXbCtoa+/EGhF8ipoCtbUu2OqcGFZZuevcbLrNXCNhd8
cLfYXTXqlDvyslpNVyWFYLJbkFFJcyDWVO99JJIQg5oiIPdjdwhWSf37cXEk
Dp8Y/ipPvxCKImml1lV7E3GIR8Dipkc4NlFrBahXUhB1m0QGBqPwnYug7lJN
Bn44FKNXlpiEFlx5p1kC81Hc+OOBqEvJGPSu0+tW+lt8LzqXG1+YjOp7Lgm4
3i3A5C+bP3H6M3TN6e6Ow9aFqFXgEHhCKA3rXeVOssQW44M9bHuPeKbhpOWn
iy2HS/BAwIY0tsk0lN9MsjycV4I6/bswJS4dvw6sj8ZVlaL+Y55g++8Z+OZP
po9JXzm+2miRL345EyP3KOWU3a7Acu8TviuhmXi3c7tZ+FgFOug07so9noXf
WdWLP36qRNWVK1/PyDN8b+HDHTmL1eh+/KN/lns27nq0+QmvdQ3euNhDUiBn
4+mrd0Q3L9eghPRZftYLOVimMdKltlyLocovMvj4cvH9J759Nt8Q9w1f/G/8
Wi7e2C5ilyxej3soc+KHX+ZivrxTaevjetwaw6NyhpqLteutyXfG65H+3+8b
LH9yETcvK7fsbUC1ny5hJoJ5mKiaW714swH3ayzbdD3Nw/auUF4PcgO6e1Em
xsLzsHTPX47ZPw2YZSIq4l2Wh3qC6ku7zpLww++okqwfeQgCbRmhaSQc8/mc
J8xNwPe1k5Ff6STcaSP5QVGCgMcUsYBlNxkv3XVXfvGIgClmEaVmzmS8X8/M
EeJGwMy57dSiUjL2lnhc1Y4lYPfe43bls2Ts+/OtpL2AgP9ktsrbHWrEo3qD
e5aaCOgZW9D7TacRW8RdBKnDBBz9vdZxMKAR398aSXg4R8DvJ9O6tjU0YkfT
TE7rDiKu3st12SbShO2RG5Ki9xPxW5eii4BBE078imk6IULEPp544dnQJrzO
L9ni8R8RlXVZ9ls2NWEnN+e1zEtEXJF4zZ79swnjOc4thqkQUcA8rjD6RDOu
1z29o6pFxIPWAW/BoBmdPygdG9Inou11tpr4kGaM2Mj/TdKYiGZ3tP3ekprx
mZqQwqOHRFS1FeuxX27G+si7tTaPibjzV/vFFeEWvPc8c0bPkohj3EORR3Vb
cNalQpvfiog6R8z9dvq0oHLnSf8GBi4W+NOfU9GCRdf92JUZmHbGRPLXdAsG
uv73qJDx/WMb2v2/e1tR6XgQF/MTIp7IaRcuvtKKcdzvw+TMiCh+klfywItW
TOSy0X9gQsSyFYrWuaxWPLoY/OnVXQYf6QrKbAOteM/3VbaHDiOeJiZKwKY2
/PvXb7eLGhHT9jQXN5xpwxNfecOfKRKx5YN7Rfa9Ngztio3QlyVibLRGxqWg
Nvx8Lcrt4mki7lO1lA+obkNpLMPDQkQkWojf9pluw7VS8ttNPEQ857WrRJKr
HbWdC4umWYnItT+E/82ldgzrTRGm/iKgWcrV+2kW7Sjs+sW4foaAL1+/0zaJ
acdDgnykiiECXj76ra63sR1vvSz7r7uYgONWB8817evAtKSIr/NJBEyNcvim
qNiBKQY3twr5EzD4ca2h3dMOdBkcedNpQMAxz9aWKVIHihEGQxSVCajzRcZM
aK4D+VW42egnCSiUNbp3N1cnuovctDL4k4eam7K3/L7fiYH6ftSNY3n4zb3S
8XpoJ34tlbiXgXlIOdW9B2o6UVya6/KCcx5+/uW9yMzRhT9GPcUSDfJw0COR
3n+uC5PWZp5pn89D2q/gk8qmXfhyqJN9djkXL6zKPNpS1oVZ3fc+d/fkokmQ
5x/tsS7cuU+YvSUnF7fNtqhf3tyNMoOdYv/0cpHLvSnpl1Y3ntoT2TRclIOy
X9arKF+7MfFmy9M8rxxU21ogwbGnB7fN/2vNvJ2DxEL1K/NSPag2Gv5PaC0b
kyr3kdxdenBIpEzQ51w2ujXRFT03U7BnL5FpYUs2lkuzyMTyUFCQ+lkisi8L
QS3I5fUxCqqIt9dlPc5C5sC4gfyrFFytf9kszOh/b4prJKt9KXjz+KeW5luZ
mPYh7N6lGAqWsV4SrBLIxJyf+Y4R2RScmxmrScnLQLqCuk5WMwVzGxJ6K6rT
cXuGi60VExUTnoRuF3dKR5VS6k/TnVTsdT7KsetiOl55+HLf0f1UvHLAYedm
UhpqC0VxckpRcdnA+P5hTEXzx+ZLweZUBr/GEdtepyL07LNfsKOiY8Cwq8W5
VGSf99bhd6eir9HsVHpxCnZturHtYywVr3Gd7zucnIx9MzZ+rK1UjOPY/G23
XjIeUHxxrJdGxfr1eoWgPcloqxE2Zz5KxehDvZGGbEmMOk7o2fCdir+sAqqq
m+ORu0LpQedeGjaEbhALuRCPyN505v4hGrLUD+tVFMchz6Zwd+pxGv4NtHHb
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
/93DfoNhG0I/V/8P64eJ9Q==
         "]]}},
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Medium,
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->190,
      Method->{"ScalingFunctions" -> None},
      PlotLabel->FormBox[
        StyleBox["\"a/b=1.45\"", 16, StripOnInput -> False], TraditionalForm],
      PlotRange->{{-0.7, 0.7}, {-0.5, 0.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.05], 
         Scaled[0.05]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->None]},
    {
     GraphicsBox[{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
jO8/WRK+z5LsvvSgDwVeHzj+nykJT1arH41g6UNVd/YTQoEkHF1LTTZP6MUZ
G8bvHLkknLLcn9Ip2Ysv7CuLtrWR8PlgjkZnRw/yymSf3fKBhKb/tRbaG/ag
43alCvZFEgo8TLVsX+jGOSOvgbMsdcgi2scwRufV2iJy0W7sdTjwkVJNONSN
LsDwZIqnDoNYvycalnVhkWfslecCdZjZ1uLySakLDXl+iukeqUNhbZcxFfo8
rDoxU/KYvj4n5sCTZN+JrkX3k8fp5wXavG5PM3WiLqcFRwLd/vb//hhKxHag
OoOgUx39fgO1d5PeJztQcLfvvetLJJzbEFX51NCODT6+qD5Bf++cAElXqx0P
/6tLo3WSUNwp7dTCtzZM+c1j8KOIhGYO6frlnm1I08mxSQwjoa1UTlPavjak
aLm4/HpAQulq5ZyOnFbkja/SWlah71dp4TkJrWiuOPqvUoCE1blJCxRKC7Io
j7orLtdi8+Gr/W3WLSjuWbo7rb0WUxw7uNg2taD16vvNk1G1WKHovSk7uhnr
G3ZU7zWpRa23kwEpYs3IbDqeI3uiFltfPLNq1m9CV7ikX1hSgw7Peev+LDai
WGGO+p6HNej7sz8nOaQRXySVvk0+WYMyu2QPGTY04GIAaD9JrMZdjrP7OU/W
o6rBb7f7RlUYXWcj/ygKceyV46AIWxUm7LbwHRusw4fcO3a+JlRizPlrBWK3
SBjKYmL2clMlcsVEpPjpV+P+fWZ/9DyJqFr8IyQ4rQorOVV2ph8g4q8sQafP
3yqRb8Nk6EcJARnudEXEeVRg104G28axcuRg7LELLivH7Y47VQJ5yrByYPlO
GFM5XuzoYxHNLkUQsGFkvlOGa3mbP5yQKMVj6+ZzVxhKMWmvaIY5vX+0yx8L
/91eiBl/HAu/xhfiLpuLaPgtHSNSbTKm1TKx/OKNb9dq09D7hLYow/kMVAgM
f6sSloo79OeSNx1NR0UGt3GfS8movCbry7qQgo9MJGoGkqLx9ssE8t/fcdj3
tHX266NIFPi4/eWTwhgs5qekHbkZgYkqphfIZlH4x0Xr2jaJEJyXqXIN7ApD
5VuKqSH9bhipsull+IwXXrQI/eT31RFfbXVJPH//CZ3tsY/bi1tiZ6Tfi4yv
tqh39XTZ59/K8OeNYunDazfhyqfzWwrMveDh3nqjCjlfKBPaeLPtQyR8KcpM
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
pV7KsbAJRBe2ML/8f79ZW3LXpyDCnOZ/I70sBw==
         "]]}},
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Medium,
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->190,
      Method->{"ScalingFunctions" -> None},
      PlotLabel->FormBox[
        StyleBox["\"a/b=1.50\"", 16, StripOnInput -> False], TraditionalForm],
      PlotRange->{{-0.7, 0.7}, {-0.5, 0.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.05], 
         Scaled[0.05]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->None]},
    {
     GraphicsBox[{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJwUWHc8lf8Xr9AwEi0jZYQiCkkyTlkpRRlNkayUshKFyp6ZGSF7k33vNe69
x97j3mvPq2+lFJVEJern99fzer/O5znPmZ/zPo/ILQdD6w3r1q3r2Lxu3f+f
ju8aN1/5woAZ4oHdxR6sanhTRn/lPQOcJaEuh90HomKIsNrFgKmRlVuGC1GQ
dD+fFpfJgCezClMsFYkwHr7lkfQdBowvyR/giU+HGkUefg0RBmTHudmQcrOh
+Axd1LedDqVccmJPvPPBIOa3OMGSDuP/dD2PC74G6nryZNU3GrANf5QwOFYK
ewPqP/s50aBlMiv2CKkMxiws0jR6esF/avMzIa4K8Ct506md3QMjZjGHPRQr
4XxBceP5O93AGdh567gsAcKIityv9nXBYDAxo3ORACTCqfMPWzug/iuP4OFQ
Ioxdr5/eYdUOz1fSL47OEcHaTyA+52crCDp1C9cIkcD/fMqYtl8L/KQqmUoK
kqDjeOnFRY5mkIho9R2fJkKtrs2G5MhGWPK48/aTNxGeH2OP2bCjARrufnxQ
MkeAC8Rd5+jxdbBzq2xPqzQBaBY72oRUqDBE9762Sb0SipeU5uF8LfDcH992
T6IC9lW2qIffrgJaNqWb/0MZ/Io+Pnc2ggBnGM13T/uUgpm5s7pbYzm4PGFe
8f7xGjgWtXcObiwF5tLlhYqMAuiQfi88SSgA15JBlsHtuaBaFrlhv0823Ocr
Mo4+lwmsk92qhAdpMKpBVObITAGpsLiX8/qhoHtsaoOqbigcuDd59tMuZ7Di
PzdQVe4Mzi7FtqG8Trhj0Dn1sboz2u99OVJrH4yqeYEzxTxhmFu7oF3U8wKd
ZlIkb5Hi8U+1f43M82TMuWt68197GipsI/F/+5WO1rr9Lu86s7GX43hj2VAe
fjIYvxG5WoKRFxu7GKxFyEaJ/VEYU479jmGPHmwsQfmDS5zXDxFw5KNpVOKX
UrQ1/JYf1krChHVfLd9qlWNAz5lJTqsazD8c9M01oAKHeUPGa9dRMFzho2ZN
RSUmqSwfWDMDP0de27W9j4gNJzrEp2wacOg3twB3Cwm/q67ylpU2Yshi8vaQ
nCp8nZZgYPirCSXZjKZXH1QjOXFPiK1aC7J1MVPfy9Xgd66bEUlPW/EEv840
eaIGhUxq3qZS23Aph+vxP/datK9LNj+03I47f7l2HGAlY6DffO9fuU4MtMp9
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
LWaLEkqxxdjybNezF/ZV2BbwQHlrTzGaCSzeOl9XhQb5DN7N20pwo7FveJq7
Gv/9qpJStypBQdWfiUNZ1ej8JMvb8Vwp7iBcTOQarsHi6cm5H8FluNCXdmry
dD3+VRIMiP5chl8SZ+x9vOpxnxP7F7mZMtx9rc7wZ089nu9nbFSVJWFt4Vvx
w7YNeP9XVOlaCwk3PQzrrSY0oglr+rc7CyR8djhoe9DmJlw+S1sr3FmOUSb6
uSKaTWjXnxr+SqMch3+uMHnPNWH60QVvmZpyhN8tL2RFWtDJYdm0mlaOUy0v
nmy8bMF/3E4p+r/oelqsuNuZ3IIv/TzrasTIeFxhSSdPqxU7rrU/CqHHQak9
V9QgvhWDdpwecbxD1/M6jk2131sRtkvnBDqT8eZi6RmKWxvy/mzNrAkko/Fu
plbVljYk1nk08SSTsV7EZrF+WzvybbeP2FVHxvBlWmqMVjtuaH3tqe0h48Tr
QBUN+3aMfF6jHv2VjKJBdvwjMe344V/EApmBgva7t8p5TrXj9s9bP2xjpyDr
yr6dsds60OvVtKYHHwVn08X3BEp14MLniCUxYQruMA0T0L/VgSIz0fv+SVCw
jyg3xGjbgQ/GvFwZz1DwcfENEZeIDhyLY26QUaBghoMxuZvcgccJPyITlCiY
FWz+avNYB36el4q9oEpBqZqoHWxbqBh5Z9qKV5OC15tfG00eomLTMb1yUW0K
bjz5fC5SmYq6Z7ZwPb9PQU/bZyaHn1JRgNN7x5I+BbvEs4g+H6jYSqq7XviA
gt9ed21U51Fx/srXe4UPKRgS83BXD5WK+R8VW5eNKWhSt1JP/o+KpOOu0jYm
FCT0wLLD7k68YBvBf56ODW+ymXHKdOJFn3bmq/T1j40OMTnodCKEkd3CjCh4
efuraJJ9J6oIa+88aUhBMZP67dTITqw0WD7Fo0dB3GCQpJR3Imea2pNLOhT8
Y/5tyHm4E40YAo5RblPwRxes7v7XiY2Zt357qVPwUVm2tvv+LoxuS7kSq0xB
5dpKWrVCF/Ic4vVmvURBbsr8s0H9LjxFKjxWLUfBm36uX2rfdKFGEXdG5ykK
CppF7feO6UK7I7pPZI7S47Pr7Ja9lC5UX1TqWT5IwSXx3Taew13YpTilbUWP
b925GL9ugW6MML1E2rSZjpPNHDJlupGmm/iGYY2MblOnZe5rdWORclLYnVEy
+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
pr9lVwGMQMVYlQIJL5MWGcIOFEIj6Z4GC6EcBcYvuWbkF8KW4NH9pS/IqHju
Y7P7aiEY5ZoK7pKg4PM0r7/9MgQQS+uUif3/c5w9ff2dRQToJrnG6p38jFdb
9nA8XCBA86WjR7ICPuPdk6nnrhwpgofVrTWnFz+jPE1IxVKvCMSdEgb/u1mB
31bLLo76FwGx+WDceF4FvncbUXDHIsjw9t37l7MSr1A4rTW/F8GbW7udAjoq
0eByGqO6PBHeLxr7bTpZhZrBEk+ePCCCjtbxbNfAKiz/rCzp40aEM7Ic61uX
q9C60Fk+LY4ICwmMz0NuVSOZ7UpeGYkI+c8UK/YSqrEr2qOjpJMI62sr3iG7
atCXRfhgxDQRJDMOCf+1qsE3xBztO7+JoDEWUKXUXYNbeHnNvrIWg7JS2hNz
et9gUnf2g13FIDLh/9U4uBYlOkXk9PYWg46ETK/YSi1Ky9+TPnuwGLLOv8nJ
v12H/+yCvWqFiqH3hVHmcmEdbrX/6L+FblftUx+Z5KrH2w8dNs0KFMPRpzZH
3CzqMeQYTFlyFwPtk8z58rZ69LVuSwtnKYbGiaxo32MNyHnRZ4f2GhG0aqUT
J30a0Fw7SSX1KxFkoo/YVE01YIB/3LJnGxGMb0Vw811uxFsp7VzzRUQQb5K8
MRDbiLPEYWFaGBFKVzkaN343YmT0nT23XhNB+MoiyxutJhxRvvjo2m0iWLTL
6arkNuHo98K1cgkikA57bunc0YwbupfZv64XgY7y28YXL5pRmrO2dbaxCMoF
tJ25WpvRr96rpv1TEXi436nOOtqCr389vxJ0twjI6p/Zj79twbExgt1Z/iJQ
uqaZ7Dfegu4Uuwfl3QQQcuwSigppxamBd2h7kQBfvJ2+SM614h316CLiUiFY
bHuQYXC5DQsyOJ5OxxTCO37d/YLhbTh8x8ST+2oh7BEsaNL73oY7s6gJMFsA
hi7Ou5kF2/GVYdwTa98CiL57VJv9ajsOx+u+pRwuADhv1PA+qB0D/c52Eul9
deHYqzsrpfQ5+0Su6M3XPCi4o5z7fKQdy67uf+j7Kg/+Gr5jWdzUgeo7ZH/1
/swFl7qCcCuRDiyZWPZ8sDkXbhyqSV9U6sAhpntne1hy4OTagrfhow4ck75I
l4TZ8Cto8vxKYgeezUrMOP09A54fEdq6vaIDNSi87GPd6aA1IRK2OtSBN/h/
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
NdGy1XqODtPkA+LlwTw6/wORWOti
         "]]}},
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Medium,
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->190,
      Method->{"ScalingFunctions" -> None},
      PlotLabel->FormBox[
        StyleBox["\"a/b=1.55\"", 16, StripOnInput -> False], TraditionalForm],
      PlotRange->{{-0.7, 0.7}, {-0.5, 0.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.05], 
         Scaled[0.05]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->None]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.787738080145199*^9, 3.7877381015801735`*^9}, {
   3.787738155139812*^9, 3.7877381679341583`*^9}, {3.7877382156890106`*^9, 
   3.7877382985780563`*^9}, {3.7877383298951454`*^9, 
   3.7877383462280245`*^9}, {3.787738417757352*^9, 3.787738492379365*^9}, 
   3.787738584557287*^9, 3.7877388507589164`*^9, 3.7877389042324915`*^9, {
   3.787739209433138*^9, 3.787739276820532*^9}, 3.787745282991888*^9, 
   3.7877453142791247`*^9, {3.7877453562637444`*^9, 3.787745373685052*^9}, 
   3.789722140352479*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x26plot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"plotX26", "[", 
     RowBox[{"1.25", ",", "5.", ",", 
      RowBox[{"xdispl", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.5"}], ",", "0"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"Inset", "[", 
      RowBox[{"stereo26plot", ",", 
       RowBox[{"{", 
        RowBox[{"3.5", ",", ".4"}], "}"}], ",", 
       RowBox[{"Background", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"White", ",", 
          RowBox[{"Opacity", "@", ".8"}]}], "]"}]}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7877378709853077`*^9, 3.7877378814590015`*^9}, {
  3.7877379166823864`*^9, 3.7877379218576856`*^9}, {3.787738513192992*^9, 
  3.787738545154958*^9}, {3.7877385966109934`*^9, 3.7877386299924545`*^9}, {
  3.787738661968543*^9, 3.787738824618987*^9}, {3.7877389157131553`*^9, 
  3.7877389304084797`*^9}, {3.7877390535302596`*^9, 3.7877390622183976`*^9}, {
  3.7877390983542547`*^9, 3.7877391873861303`*^9}, {3.7877392915690002`*^9, 
  3.7877393374644575`*^9}, {3.787745325586521*^9, 3.7877453392819843`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.25, 1.}]}, {
    {RGBColor[0, 0, 1], Thickness[Large]}, 
    {PointSize[Large], FaceForm[None], 
     {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
      PolygonBox[{{1.2452433726146819`, 
       0.08715574274765797}, {-0.6459978214972959, -0.8561072137047314}, \
{-0.9619942060347545, 0.6385318899127588}}], 
      PointBox[{{1.2452433726146819`, 
       0.08715574274765797}, {-0.6459978214972959, -0.8561072137047314}, \
{-0.9619942060347545, 0.6385318899127588}}], {InsetBox[
        StyleBox[
         SubscriptBox["\<\"P\"\>", "1"],
         StripOnInput->False,
         FontSize->20], {1.4639394797311787`, 0.11107253041008869`}, {0, 0}], 
       InsetBox[
        StyleBox[
         SubscriptBox["\<\"P\"\>", "2"],
         StripOnInput->False,
         FontSize->20], {-0.7416699148603813, -1.0542153926159643`}, {0, 0}], 
       InsetBox[
        StyleBox[
         SubscriptBox["\<\"P\"\>", "3"],
         StripOnInput->False,
         FontSize->20], {-1.114697491310649, 0.7969039413168773}, {0, 0}]}}, 
     {GrayLevel[0], Dashing[{Small, Small}], LineBox[{{-1.25, 0}, {1.25, 0}}],
       LineBox[{{0, -1}, {0, 1}}], PointBox[{0, 0}]}, 
     {RGBColor[1, 0.5, 0.5], Thickness[Large], LineBox[CompressedData["
1:eJwUl3k8VV8Xxs3zvZcimZqVFD9DQqV9ooGSZMyURAMSoSiSSlKUIkWETBVS
opBYWxkyZJ6VeZ5n7sR737/u5/s5e5+7z9prPetZm8+7Gl3gYGNj4+NlY/v/
b5B78WDaOSbqXyZl7DU7j/jaMx3DWTz5pnUpbm8UOnusWtyIxWPsY35uIu+R
uc2egSFbJsJ5UWtovzKR/OPQQhMWf9n5m+/BnRwkcFD6UeRZJoozTnvvtr8A
vVB/vyXLhomKqNZqoz5FqHQwzC7JmomCRv+121sWo6rhP6JXrJjoe33yhJJm
GXKJ+ccpYMlEh5TlBWzWVyDthrbJ22eY6ERuSeHcUhWSiL36tMyMiVzM5h6x
tdYgg/3/wgdNmOhqpvaVY9Z1iC7LfN9uxERG6RPsTVX16M1xLbdEQybaGsH/
PkOrEd2zTw4gDJiok1N6oS2jCe2823Iz8wQTGajv9bDe1ILMikT+LugykeIX
vrj9Ya2oUlNJiXSUiRLl5wd9udqRgcSnuUVtJpLyXZ8q69WBOrk+xnxBTMR3
0U59/+hf1Js9EYUOMNHMqWdVP206kU/rX6M3Gkz0flQnoqiuC93Rfr6jcg8T
5V1cMdmQ2I1yL9a6/VZiok2ZoQ9jbHrQd4U1/i92M9H9S9Q2m/W9aG7rgzhF
OSbKv1ad69DQi44Irl3zcisTXb5GepD1tA+lNV1YW7GBibyDosP1j/cjSeGJ
lnIJJpr3KditwjOAbH/1hbwQZSK5baHBF38OIKNGszM7KUzUIXfz35jfIGob
2WXxkJ+JKheSDhXvH0I/u+XefeRkIp2Rq79nlodQVxPdKJrJQPnfmt1vfBtG
d2p0Lp5aYiC+gQllE88RFEh63fd7moGGgg8PhqiMoliBmFKeUQaqkzGx3TIz
ioL3LnLy9TGQse2w5brPY2jWw/VRZQcDJXgGBji5jqOV8wtaho0MpChe77np
vwn04d4H9ogqBno0OP1Zc2oC1alMfYwsZqCDbWMfcj5NIu6EW2KWPxgorof8
I9ptCi19PsfVmsVAoiZbX82tn0ZezTsIkTQG+nW0MPLPzWmEKO0PuRIY6Irr
suvf9mmU3S/+4nMkA317rxe76cAM+h2xW1w0lIFO9u+Oev1mBgm6bC1QeMBA
KlBRfnx1BqUZdu5i3GIg0unEEGW7WZT9UoHTz42BphXVlU/9mkV0+ZG/mRcY
SOPnJ2qi7By6KCJ48qUlA80NB0oqBc2hFcPKnp2nGMiWrvB9bnQOsZkUbHXW
YSA31ezpyZPzqLF8MuKMOiuer66Ubc6cRyfE+L5NyzOQpHW4RojoArpvcpWh
vIGB7MdmFRW9F1Aj+dJfSREGqg0MesD7dwE9Dtcq/sDJQKnv5HjXE4toWtxJ
5t8CHYnIb71qm7SIjsR8188aoqN0syH7f3xLKPn97S/ybXTkOfDO/7nLEvoy
nJF6qIKOjvOsHvepX0LT2bJPFr/TUVFkmPpr9WXkGFby8VgaHfW/yn0/EbOM
dn/9bK0aTUey/VKTnhxUlBbqO5jzmI7y79sd/u8yFSV7X37RcJOO8q5VN0pV
U9HQtZfpAZfpyGHTZLbmHhqykDzqXm5GRzU1moMPX9NQUp3I9vjDdLTciE25
2ekoer0iD68KHV1fquv4fImO+NXSDBgb6Oi2QMr+R9V0dGJjnqafIB09GxLc
+kSNgYp+Tqw+XqKh9ikx+fwYBrr84knrpj4aWnOwvF6Ei4maHjRTtapp6GdG
dVCoMxNZW56M6s6lIfqc7FuVBiaatSGN8yTSUFxzuwV13woqeSC541MIDd1o
+NHWk7CCbJe+3mm5TkNnDSSURgVWUSc1e5ffWRrS9vE2EfZYRWqn2u3eHqWh
g/tstht1rCKZBWVLpEhDfoIB35o3sxGix10NzMRoyKw8doxixkb8Djt5q59O
RUWcQbeNH7MRVztmpYZ7qGg1plk+vpCNKNxl6mlbRkUdc6+S52fZiHb+hDLd
dCraV7gv/NQOdqLu4HubhGdU1CXqG/LJip3Ib9C55+RJRRHVZjJrn7ETW/ZX
PYgzpyJHtFDsXcxO2L0KKED7qMj5XvJC5zI7kUYhB+hJU5GWXa3oYQUOwmnz
X8185jKiMGZvpdhxEJv+ph4J71xGn49He3C95CCMpxdFawuXEVfkJS3rCg7i
s5+XtFvsMooT5BdIX+EgcHBU67Xby+j6Rb2VGRVO4u0q40+D1TKa4hNV2X2J
k/gpOvfoheYyem177/OZaE4iVnwl4cu6ZRRfM+Z1vYaTeGRhlLd7bgnJEtSb
/pxcxEmlM17sNUtIyvRHtJc6F9HZpxj2X+oSCvCt+HrGmYvYe06p4mvAEjrX
bvVicxwXkfLw+ljY2SUkqn51qaaei+BZtqwuUV9CiYyxMDsebuKOJM+Zk8JL
qM+yhdyoyU20nhq9JTe8iOLf3eSVdeEmTvEbqJvBIlITeEUyiucmnsXWRDdF
LKKuwJSUMw3cRO7HkZJk50U0e418ci8PD7Gn9kZvCavObttfcBvW4CEuX9uj
qCa2iCpSc65fceYhVEMOL84OL6Bl07oceMNDlElkRK7ks+q4OuRhVw0P4bbQ
EWD+dAGdFd2+u5ydl7jDkDjAtF1AKVFhfTdVeYmFncJGU0oLyKvoX++kAy9h
5bnfRYF9AR1jPjKTfclLjCo4HMupnUdfniyelyzjJdaliGSExM2j/KbybZVL
vMSmGtq9jy7zqBmdy9wjx0dYpXj8kNg/jxLfI3GTM3zED5mWC3W88wjvDz27
PYiPyDg6EdfYMIcK8sMfvc/hI/j8Tr7dGjeHmtcpRbQM8hG7TX98K3ScQ3qa
Tjc/i/ET7YwAnRTVOfSHbX6n0mF+InP8T1E7Yxapq+e+NHbnJ3SfDP+0LplF
u9yc08Xj+Qnzt9FTu5/MopH0TaY3//ATEnsv8+mbzKL2mB7v6zR+oqT998B3
yVm0anJ8hW+HALE65OR9q3sGlRnKVSoZCxDSMXblwckz6F2odMmInwDB1WZE
m3KcQQaxRL1SqgARePzNkfcKM4jDrLqNo0mAGCjzWvk6PY0iZSqKrVcFiLEC
/ueSWdNIyfWT3/6dgkTUdd97LZ7TqMp542K0kSCRROK+Nqk2jdo1nsv4+AgS
69mrd/wcn0I6o5zjTYmCxAXZzhvnr0yhyexMmw+VgkSK6J+3RaOTKGFbsefs
rCDhJ8tM77s0ifoF+fdlSAgRQU6Xqqv6JtDQyLuCNiRENL41crl7dgJd9GwR
d78gROjz0DbztI4jcfZwR8/HQgRtcOtXW8NxxO1z6t+/DCEia+HdxvCyMfQs
8tO7tHoholB/4FGy1hgS51Dn61gQIiS2yZ2I+TKKYD1Dz3E9iTh5cnXYd/so
eiNwpth4H4mICLi77mTUCFIZfdHxyopEqOfey1ojOIL2ukWxq/qSiBueeZUN
PsNITCrs25YYEiHwpjHi5dgQOn321SOHfBLhmXPX3c5yCB15Yiix2EYi9gs5
jO37PYjq9oSLNi2RiIMjjMydaoOo/vXKvlVRMrHd/kHsnrcDaIESbuOuTCZU
5vMyzgsNoE81h213nyQTUhciufJv9KPYrY/Vdl0mE9pewgOHu/uQY0D/8JV7
ZGJf0btvvHp9SOy6Q8RUNJnwMhZhE8xk+ZzGHc6Z2WRCIiHvohnLB6m41Gd8
riITy4bHPs749SBpf7bvY31kgnJL5Et/fzc6sy6Lfo5GJlZEQ1zUj3cj0sDX
ZbIwhaAgs54+my7EDF05Mb+NQpzzv1Wqsb0TeWzkfkfRpBDqMre5/Cb+ooe+
YvW2+hTixT3dA8VZHcipNiq97yyFyJvUUZG+2Y6+JNoovHajEK7l9RUvtdqQ
RXz5+Xt3KYSTbgXPEfZWlNAh7hH9nELUDXeuqhc3I7sI/5j+eArRZCo44B/Y
hAzO2KrZfKIQ2SdmF5V0G1Gip2E6VwGFOCyjFWDB34CSi48GtZdTiPVWywOC
FXXI+FfU5c4mCvHp1LSPxeNaVDQqyC3cQyHWxsoYvXtRjTIvlSu4jlGIpyte
ceKiVax+b1tJn6cQJnsexmwPL0fCZ1M7vzIpBOmW/+KiSBlCqudwNYcwcemx
9OG0Z8Xoa9alaxY8woTG+dCVC5SfKOEnfbsPvzDBIya/ECYNSNHrqcgeIWHi
l+HuX1OS35GXs4VLAFmY8DSvNt0u+RVll6J7V4SFCdpxPflbkp/R1FB64riI
MFE+VuBnrZGC3v52VeJeK0w4J1huEfWLRO7/hYd9Y/Hrpr3SPPruaFuVCmIX
FSaI7cTIXOxToJ85+W2A9bw0bFBc8cVbWO0Mv+fAYmVrXbqRTxq4qu/V9Fsj
TPCXvq80y/gChZPpN1VZ//dlIRF3R+fA80T/iQCKMDF1tY1DIPAHfOOl6HqQ
hIm4ZUnKiW8YlONPHl0VYJ0vZLk0accv2OT0OGMnnzCRpdzXO/+yBC4GyhvO
cQkTMn52bzZw/QYP8iVOG3Zh4o5Zw1du1wpodBU2qqFRiFSys+fTliowadQy
kZulEHr3Jz++0aqBa/U3p0qHKURSc5x9SG0t7Pc2F/vYSSEc15v9nWWrh8a+
w6V/G1j7m+8GLfzXAM2188JnfrPu23gf46FNI0TdKBXZ/INC1M+8koh91ARq
i7tmNVn50kKMiOzOboZjKZThpLcUwsOt8uL2fy3wyk9DzSGcQpw/uX3sLlcb
vOz9uP1WAIXwlBAqVpVvh01iUqIjnhTipcttR2WDDhgPU7HNcqAQzvdE3rm5
/YVvYSIeHcYUQlrzfszQs3/wazjxl702hegz21oY8qkTFoL5/hgoUQiqnVKT
WVUXSMwtromToRCvTAT8Yz26weaB7CZzAQqx8dYRCym2HtA5nfng5iKZeK/T
1P4muAdeEQ/b+XpZ9e47sXbLul64vFD9nfcPmUg/ceZgUlwvUAPNy7xzyMRB
DovCTXJ9cEWbJ/nsWzLxsvn+lhef+iAj/hgj/zGZ0Jp7vJWu1g8XX9zzDvdg
7VdmTzLK7wdRy6dlQ1Zk4mvfms+v0ACYDslH5euQiQ6S2u2ynwPAv8E3VmQX
mRD3qXTsOjwIq70PH42LkAl+3lLG35JBUN6dI3RqmUQMP1cbKDgyBKFylu37
O0kEc6GVeqd4CL4+/y/p6y8S4e2doLFZexjuoSlJeE8iNpP3lsYVDkMeuXXC
8gmJSOo/N0HVHAHFnYcqgq+RiB0RjzcoZo/AS1C0MjElEZ2XNk3tUxiFgoOj
ujkaJOKdEH39xuRRCOOP1ciRIhGbVOFmm9QYOOD5SrMVIaLaRnON4/MxEJf8
ER/ZLUQctPzK/Yd7HNSNgg3v/BQivuafjuK6OQ7H/nNxIyUJEYnZp1QpY+Ow
J/bJsyMPhAi+LFvLcasJ6BsY3S9/UYhwWTuWHV05ASccBZYLjgoR345Z8cns
mwQu6ufDnDuECP+Ssxpu7yZh9UNsNINHiDgktvtoxNopaNpl4JY+KEjYHv91
KsRvClLCc/4TKxUk2AjFUNPhKUh8sY7QTBYkTCa60r3lpuH0umw2qQBBwt3w
A0XJehq+b8wq/3FekDju9WvP6dBpWMvfM7bpkCAxdN/f5W/RNGj0B33W28h6
3ztj8fq5abhDOW6hyRQgGhzdolVkZyCte2bjbLsAcfeI09UV0xmoNT2z90au
ALGc0kjZGzgDlUWotCxCgPh3o4+//esMHLdUnxl2FyCaDwnNjPbPgNBr/9qO
UwKEwvr39o5rZ8Hr/JJnwm4BwkjrJb/ZoVmoqWQMHuQXINCPrvDMq7PA99Rh
e9YAP7Ft3uqHb/QsrEw5yLP/5Cd+qJgdyS2bBfGdj3rkY/kJf+c9VIe5WZDc
nKKscoufGJfZmHp/wxyE36xbWm/GTxz1SVUW05uDxhpLvh5lfkK22d9N0mMO
OGTKFENI/ASbC9ngRcwc0HdUK0iP8BGjUYq590vm4NmkBYQV8xEtru0JIxNz
cHrh4YuZOD5ioLGVt0xsHhKd0k33+fARp6XdBqW15sGU1zzhqhkfYScvoTNu
Pw/MKAuRZ8p8RLb8nh17H8/Dqd21SvFCfMSJ9sJ4+qd5CEiTD4wf4iV2ugn9
1GqaBy4ejadhP3mJkc133jKp8zCerFLg9YaXiNPXsTiwYQGeHaj2O+3NSwgc
FuKlH1qAvoqjezcb8xK5JfWV+y4sQHG928FhBV6iTyyikvFwAXiTK0be8fES
tOL1CtqpC+Cc9/SeXR8PQZNkuaKqBTi+Wnp8XSEPYb974YfVxAKwS9j5lkXy
EO5hSYdVyIvwzl1H74YHD+FYfrr7meIiSG+z79hqwPLXCvuLvA0WIexZu0md
HA/x79VayTGXRXD7ylZ7h5OHKHxZs2EkZBFUpO/aKnVyEyL7PLk80xYh9awn
uT+Xm/h2Y4jtSfkiSKnd7I4O5yY0xX4eVxti8eqfujNXuYnz8lslrnItQcV3
pxYpPW5irfiDRI3NS+BjL9U1sJWbSGZ/sfml1hLcSXpdk7PCRfyp5q58aLEE
F7vSg8LauAjtRx4t5OtLwHTf33cjm4sw1Njjt/vZEkRquWVeCOUiSmU0F3tS
lwAb1hXaOnERLcZj15VKlsCkyrr2whEuIrdYQFWiawnKW5OSvDdxEWU3np5/
s7wEnHljc5F0TuLDlkCNQpFlsBlFbmXNnISlCHPIV34ZdE5GlnB94SRW1TsT
2rWX4cfJ6ajTTziJj4/aolotl6GA2+FJxmVOAvkeZ3i5L0O8kf4+6cOcxMGs
jct5j5bBq8VSLXojJ6Fa+ysvLn4Zsoa+knbTOYgaK94r8jnLsNFI9GRNMwdx
66eghtWfZdjD3+b14AsHcezcf0dU+5ahOVGRdOopBxEcSsvNWl6G3E9bHu52
4iCIXFLOPxIVdBqx5YajHMRzU2G7L1uoMFGosLxtCwfRNB7frKJOhbiWogpi
hZ34OXFE7dwJKhTlbNV0b2cnbnnZRu63pcIp+/PJed/YibYFCYlSdyrsPUBx
EQ9nJ75F2lWzBVJBI8t8JNiVnSBeNVeNR1KhPmODq7g+O8Gj9XN7cBoVyt+J
nfoux06M5AqN/y2gwtpbTU2e3OxES4qqfF8NFfr7F08c62Ujek4fGo/toUJK
gfyiMrARGgnF+0TmqNBTdVpMLYaNqMspl9rPRYMXli8GDW+y1G9HQ5iMGA3K
HW4mPmDN86UNDfF5sjTQu8O826DKRvg57DwsvJcGvGc/ZO8TYSMk9F55bzlK
AzLJsOnGv1UkYaCtPmNKgwijvLi0yFW0PTf9xu0LNJjVmZYQNVlFW/q+yP/2
pMFWLenQz5RVxHk26HD9fRrYtRgfvlu5glLufv0SE0aD/XUl3oEPWewtZif3
lgbZWj0XsM4Kyspr1LjxiQbHOG6j/9hW0Psx100PC2jQE7+i2vCDiQT/y6Jb
VdJA8IT/lfSbTDRamZe20EoDtSOLQvl7mShq3yTZdJAGTuHGe1bnGEjosQC7
zxwNvi9/ZHhnMlC7uITVZTY6GBB2PnKuDMT25vqcDIkO2h3KRSQFBup8WP0m
RoIO5yqvtsuN0VFO/PZdA7J0aOtfU3PzAx2Nzjc7LivTwd92IIHtMh094X4u
26JFBxKOMi3YTkeZe+123NOjg4j4VO+nARrS9MlUo5nQ4WdUtXZrEg292Kcv
Spyjg3W4o+NeBxqyu2IbYOJMh7wss2MVW2nIcOTOYY0bdCjJzygP76OikrF0
4XF/Oqw8kmsPS6QiTjBOcAumw4GgPbZl9lQk89r4c2kEHWi3xQ8ob6OioQT2
qck4OqSXcZ2u7V9GlRIKwqMf6FCwrO6TlLyMlFO2/srNooNjPyni48VlFFj2
NduqgA65ojI3xnYso/sO+0MbSumQ8fnknM3IEjrtHUnbVEsH3frpTq60JSTW
cSjmcBsddhm28HVfWULLW7TFUS8dntAvHZxSXELCsQeFRMbosOnM1+MqM4vI
/JyvRP4cHYiKsMX3WYvoz8WBdi0GHfYe+cBnfGMRvakkjUZxMeCbZ/ARJc1F
9ERQs7NGiAEkx3JXgrGA1lra6neLMiCwhFP3PiwgCQ7VskppBtz1WAlZvreA
KI2yXWHbGHCg8ws97ugC0nxzdcve3QxIybE7dVNgAY2/J8t8U2XAFr2kQwHV
84j9eMuZtfsZsMb49mMcNo/SHF1tDLQZ8MvHsVvBfB7dkrH4fEmPAf1GrsuV
UvNoiVhqtDVkQPmgYuDr7jlktCZcX92cAZ/mp/dHJc8hSr3dy0kbBix+/FpR
5jSH6uwf/xfowFovpdMrqzSHnk7Jh684MSB7g6py1sIsOnTv7L4z1xiQQ2K/
4Jo/i1591I4J92LA2aV18pZ3Z1HaNqZC5m0GGD9o3+VxbBadNS86n3mfATOB
eaLfSbNokq857cUjBlRu2ftUsXEG2fS+9rYKZYDu51mi9vUMimd7upcnggHr
UEFjrN0MMvU9fTriNYsrXk9Hyc0gs/HPKvzxDOiWqN9XNDWNPnanaJ9PZgDz
zOIZ0Zxp9N7s/FB8KgP+WcxMhflNIyyr/6DkEwOeh5GSDhydRo/she7UZjOA
s3p1vQh5Gp2AULWfeQxIle/p25g+hbIahfiiCxkg+14g8dqBKVTryW9i9YsV
nyv1Wev+TCKzQdvrnL8ZkBySZkE+O4lCJQ6XhlcxgC94b4v51AS616gbJ1TH
gMSw01dn/SdQS52D+dUmVvwU5c79WzOBLrUs6eS1MYD8VHtCPHkcVRTW5E78
Y0DVyRemb9XHEYenAp9QLwNcah63eleMIbGR8nuigwxw2yb19Y3NGCLT2714
R1nxCKzZSZkZRXEG69UGJhjgdKnRsypgFHlIY56MGQYMSHI3Nq4fRa/no9XP
LzDgxPrlgB0fR5C1B7cIB5UB0CFQ8uvQCNowOtr+hMGAhxdd6t43D6MOWkMH
NxsTNp5XGGpyHkbtOwbPOHEywWKY0DnOPozkTEci8nmYQJ57toX71RC6dVC/
icrPBAkvzp/cCkPo5z+5M7IkJvhuf3D2xK9BFFSme/agMBPMh9eoNVkMom9e
O7cfWcuEN/Sf9xKmB1D+c7YJzXVMePvnT8CXhwOoThRPSkswoe7RS2+ujSz2
l7w4KcUEQcus6Fff+lHtVGBIxgbWeS4s7HI26Efsm4+8ttnMBNGHbpf8BvvQ
Ri+7UvpWJrz6eS+k1q8PvRrJPfpoOxOivTvazon3IZdhximenazzWd57qvi5
F1Wo5Ih57GKC5+bOEQ29XkR+e7KiRoEJ9QL5u+709iBaN3ectBIT2taffsHm
24OOy/IXW6gwgU3quMMPsR40/vvS5Yd7mEAKKPub+akb2fRLf0/eywQTrsuo
W68bHWsWGczWYILuRFTMk99dKA9vXv91HxMuKqHIcmYnWlyS9kk5wASXbbuX
3VU7Ud6FKo1HB5kQnzStE+T4Dz3vmr9pQzAhzE2Piy/+L9K4ZnlxqzYTvuza
+Wu6uQPNRP3a1qHDhEq+IsFD5A6U58doDzjCBLntj5yWjrSjdZT2j5uOMaH0
ha7LGr829HyDVlGGLhNCxWQSn31rRWfcxTT+O86El4/vxbhNtaDUnw57Ek4w
oWSj5dhnuRY09/lQC+9JJtxXntlieL4ZlWe2E+cMmBAwwNuqH9OEeMe9n6Wd
YoJCWEt8cnMjahS83z9iyIRzDevFLEQaUbmAv6WUESsenvzVF/QbkNyEBIUw
ZsKDte4XKx7WIyWPTRvOmDDhytO0Ww9+1aHPODjB3pQJgVpJ7yNWa9HJZb9v
582YkD7dH0rdX4u+/TnuYWrOhEMPdyXazlSjFkG3mf1nmJDnyr35qvMf9FQk
QXedBRNajhK9UoOV6KlOeWg/izMGZVQv2lWgDg/ufymWrPu9fcj++L/fiJ34
fMTGigk69jklJRZl6J+9bSevNSu/oxmfm5pLkCvX0PcUFn8U4rnjZVKMbKes
JjVtmBDhfOzJ+/qfSKtOLLiIxQWteQcuni5C9eczE7TOsvLpXnGf1VtAQSFr
jmawmG8iYyct/gf67n/xwVpbJuzb+GxLwts89LtK1s2FxdbsbB8NEr+hG3br
xH6w+CDf3wxachbCz0/eW2WxyOPTYm8/fEZT/Col6ueYUOhY8+GmdRpq+3F7
1IHFF2TXNDy/lIwyy9FKIIsp/KqW7COxCJ3pFIxlsXUt47U3Tzg6dHX9hlQW
V/5OLW1+44sE83lRGosdn/CNOte6Q771Fu+3LP7lLNKvH/IM0qIP1Iew+KOW
2iVVuxhIiXts6sLi8EfN3W4SSTAjncCvw+JPlSaPvrKlQs2yzwKJxRtrzihc
G/wEUsPXN1azzs8+3xNrNvAFVLlNntxncaMF19O85q9gZat9WJHF52wppItl
uTB3r1m3mhWvuyf3F5zLyQdRmnCcPYu/KC6pZ6QUgkrZ2eOTrHinPrv28EMF
humW1yevspjhMTDw4dBPILlT0vpY95VIGHpb5v6CfVFeDgYsTvPL9ylQLIEt
rmw+Gaz7rk89uLMpqRTago9PcbI4LovxNVHyN8Sddi4yYOXHA//NxruelcOq
xuT0U1b+vA3pUrjKXQmz4s2+xax8877h4nr1VhU0no+1n2Llo0Yyp5bi1B/4
evFAIoXFHxbbcj7Z14DWnU2asqz8rf8c5kdzroW/R9S3KLHyu7dJYC3b9jpw
+DFqqcTK/5bgkcSRrjrYfW1rlyyrPmhChZq5UfUQEquXKsyqn9YAkY4rxg2w
5sjRnGlWfYWPXgjhIzWCMRHAVsqqP9mmPYYhpY2ww3zmzjNWfSqaTm6n3mmC
c0dXFQ1Z9fvt1xLZULMZFkqTeLj1mWAUmcoVNtsMvaFnVzNY9V+rasyB01rg
jpGSiIEeEzw+/MfW4dAKUlnJqr0s/TgXdHW+T6YNXA402DgfZYL9a4WGjuY2
UD9lHjhymJWvb72f/gpth3qSVaI1S4+4ybrrYnQ7wFU7PLX4EBOcsu6cucj+
FzK1Dz3fzNKzpqsTxNbvf+F0taq+B0vvWqqP5TW4/4PVkbKaPJYeLn3a/cF7
Vyfo5oxQFlh6ub1h4+Ka/k5YPirGJqvJup8rj+4nxnTBWSfzcD11Vj8xtYyK
kO8GMz+DH+fVWPopeelaU2A3TOzZ5eKmyso3g2u5In3dEGmZ+cpdmQmnHSc7
jqMeaI/UUHD8jwn8hLbu3egeuLnn4wYTlv7XqRZe/rrUAwYVz6xVWf0h/kz8
uyHjXgjnpTf/v39wRa25uv5zL6w79/p2Nau/9Nft3KYr1AdUnI0eb2Pp73i/
ktflPqg6JCe0bwsT8OQuWnJxH1jVOdf928iEGIGa/sZN/bCmJ/T2dRkm/Et8
YMJ1ux/sSGiFjdXv6k9NpO1p64cNxYWE/3omjDUE6V9UG4AfQ1PKc2KsfBaH
l1HPB2DE7VShBauf9oi1j1RPDEAfaakui9Vv535yJ/EcH4QH8OYMO5kJYjMG
Ww6lDALyjNTSFmTCrl0J2I9jCBTftjvf4GPCxMOKNjg7BAlti3/ecDPhjo9b
GVf+ELA7bDTI5WDCw+j1vSfFh2Fd9fbmklUGCJ/fcjfaYxhi/fxPlbL8A89A
KW2iZhjkjx5KzGP5i1PB4klHdo+A+OTG73GLDIjMZtQmBI0Ao+S6r/ccA0zt
9jRyD4wArxKq15lm+a9Kw9Wrh0ZBbbd0IjvLz1Sy5SR0vhmFyh7D5swRBnx3
fkMypY3CP7lSIxOWH4qyEXhabzYGciICq8Msv3QzpN7NPGsM3B0Ni1y7GLA5
+BV7P2UcfI943BnuYPkv9dLH3lfGWfoyt8G4lQG5shGmYuXjsHqSGvCpkQEe
DI7U77IToJls8pJZywCzusbqy/cmIP/vbXWtPwyI9XrBv6lrAoY2vdS/Ws6A
lfKnsd37J+EI9VLesxKW3xqrq02NnIT28kt2SUUMuHR3V6/fwiQcNc3e8aGA
ATq929faGE1ByUHxqViW33x+SDDxyKcp2BXM/frBVwZYD49fkuaZBpMt8QI2
mQzYMybrHL1nGoJOZ2+R/cgAdbvh5Y320yCk/+PXv/cMUJY8qpj6fBqoH7uq
A5MYoL/6Ycc+PA3TzLltm1j+2I/SwlY7OQ0H/rud8iGaARTzoUZnmRlgymao
bn3FAMbA8UKS/gxYaDqmh4QxQKuwtPnrrRngyyWmB54w4GORh7rDhxnQcPHq
VGT59d9RBcvrW2egTZbd7FIAA9xj7FQaeWbh1t77aqF3GHA9zYUeoTYLBzlN
rVJuMYAqgpzOOszCYqB/cvp11n1a3X2hED4L+//9nHnrxoAOeYVQzp+z8KEy
RCbQmfU9PA+vdk/Pgq4BJ4/FRdbzHRuOFm+cA95tbEGSdqz9hyvlPhnMQa/V
Gv8KKwb4Gn6Se3t7Dh4M+FVcNmOdH6mYv06fg1+bD+kssOadDT/ZS153zAHH
dcFS1xMs/8smfC9BYB7sOo4pth5hrT8R9iZTcx4s7qw3VyQYUFC3Kvv78jwo
GJ6Rct/H8t8nhHcOvpqHtJho08Q9DPiR9D1LsGwe2DOUuosUGXAxUbVeY3Ee
nl/YFPFHjgHOj8ZDXWQXIPCvokHpFtb7s58vfTBZgGzuv/1prHnvvjr/2sn7
CzBw2kHFbx0DAq5fG9PMWoBR0yKKljArX79sfPSkdwGaPVJNh/kZkJkUOzcs
sgjDDyL+3uFkQD7XR2X9Q4vA8STHl5NJh7WiB/Ry3Bah9Rw32WORDl6yV5F8
/CIY2u+5XD1FB75NEeuTaxbBa2/+ebEROqyuKLXuWF2Epuv1jcdY8+6DU5P+
rJ4KUdeuR1zooEPyhyTRI2eX4PnkeZ+rjXSwlzN90fVkCdYPydic/0MH3r9y
bPcKlqDHcFL4EGu+zj/gar57YglCB3quCAAdnCJjIjull6F7oupoYQ4dTG7r
FkXqL0O6yAlP68900Nu2u9rSdxmqd+KK/vd0uNa0KX9b+jLkrbPYaP6WDuP6
G+4vdiyD3WuhY1lRdCiV0txUK0iFFrWYddTndFjD+zY4cz8V9AQizss9psNG
h7iC185UcCk0XCXu0cHPPeJjcDQV2C4vYu1bdDD6RjsdUEll+X4fHwV3OsTq
W8UH0KmgnJHEwe5EZ03iZk9CdtFAXIBXvsCODh/+RgvFWNHAppyvxM6CDgfZ
xoWzgmnQfb43ZdKQDpscRUPq8mmw5nFcgr0uHaS4p64ujdHgmNqmYIzoEKx1
7sM2aTqYfpBQ5VanwydtU3kLfTp0B4m7KCvS4anpz64XvqxzjfgKHpGlQ6jI
228t6XSQvfKgG7H2hWZPvt78jw5W1kcLN6+lg/DFVC93EgOO1X+6McpPh0G/
hr0VWgwIan/SEcVGh8vVl4rkrjLAPvFR4X9LNNDvsVt9EsuAyxnyM2kTNPhy
NKeFWs0AI77Ww+R+GhxuMVO6wtLtd/fbHpu106B5aftkP6vvSTPOvAiopYFS
H+eCPcu32cbYq0SW0kB7omDHyDMm3JYfU3v+gwYGleKXPYuYsMayzNX1Cw1W
2otfcs+y5rCtOZ9V3tMAO10Kj9myAtc3ni9vf0ODnRyhBzSNV0Bs3OLxpXAa
BH785tpxfwUaw6SKW4NosF9Ph/9+9gocXxI+puhHA1L13f7/BlZA90RY3yUP
GnTGJ3f0iK1C18MhxweXaUDuKy2LPLoKThN6qYE2NOgt7vY38VoF1UcDns5G
NHjTUfNP9P0qZOL2KNVjNBi4YZjd1roKOX1opHM/DV75+V2p42LDz39tUXVR
okHWlhSKhgwbjjv9+FjnNhrMMsrS49XYcICO96KyBA2u+t7cLWjAhoMKRimX
STQ41Zl/w+siG97B2Wnvz06Dt3Z09wE/NlyuaPDz1gIVft0h85m+YsOmkxp0
sxEqOGxVky79xIb/6cZ1iv6jwrcB8QiN32xY8tLDA9m1VCjXKzNP72bD3BdX
+vcUUyGM+V13M5X1/wqS71/mUOGHVN2JVyLsmDCgm7alUmG/68nDZHl2nDdY
Xch4QwWTH62igdrsmPG09gvbcyrYCvjHrViy1uvpcwzcp8Lh6awSLw927OYT
f/vDDSrYDxy7PBPMjm9NooWTjlQwjLh2yTmJHZ9vyNKst6JCvtrvhIEf7Niv
9o3UXgMqqPfoUG2b2PFxse/ONwkq3Fk4oNc+wY5TPHpo0SqsOvJ0djPh4cC5
/oKv32yjwobLgyeqN3DgfQWGkn7rqJB8amvuMXUOvP/XuL4WHxX2PFp4hk9x
4MM+BGcHdRlWi59kalzmwOpnGsnmY8uAfW7Of/LnwC+jLA9l/l2GnMsJqtuj
OPDdiMwrI3+WwZLfQDc6kwNr8g2eXy1cZs3rMoKUCg4s7KS2OPtpGXboCJrc
7eXAzgbC1F/xLF05e5U2Q+PAv0qkD7o/X4b7JouN59Zy4ulyjUjm3WUwf5qe
92cXJ07J8G2/4L4Me2Lnbmsc5sQCUVqtqeeXgdwTuBhvzYmNVigXqoyWIWLn
rSWe65zYUa7CpEKbpWOumiZOTzjxuqJAnySVZXgaGNRVkcyJC+zffbTcsgza
rfec5Qo58XW1FhgXWYYLO6PL7zVz4qJ7pIeW7MvgZxdd0TbJiT85PGtNnF6C
i1ZJBxV4uTCH89Kj311LIPBDYcF3Ixdef1Lx2u/qJbhey13wW50LK771ckhk
6fABj9MOwoZcuOaV6z6L9CU4shyca3yZCxcAuWLk9RLc3PwwMMyfC2+pTh81
ebQEZZLOr6siubDQFU7P115LYH77G7BncuFHAsoHv19YAhGrg0XK5Vx4JD9/
c7bxEjwzUnS07uHCdmteLD08tASeaXx371K58Gmu9VFq/y3BTp+UungRbpzZ
KNb9Q3oJvOvUt37fyY2FOGpSZASWgGdKR+vPIRZr0svMlxZh+f6HwTYLbux7
snKDc/8izC/HDnRd48ame8cDzesWIRW+rHY+4saXKI//ShcuwsLHSmrzW27c
tcGY8T11EfjP74wsy2P9X9etX8qvFuHzZ4fYz3XcmE24gHL3/iIMyrjVPB/h
xujXOXjvughmZyMnnNh58G7v/ZnvrRYhpi/g+34JHvxcJbvY/9gi1LhrLHEq
8+DqyNI2JdVFUCoVcfily4M/ivLU5W5YBH+NKnzzHA++vRgfvF5gEe77+Fdt
9+bB4m/sx04tLICzZfKRilAezBGbX3+2ewFqAoRH7d/x4KLZ79uOVC6w6mHp
xlwhD76xXaqE49sCnBaZfu/dzIP5g4jIV/ELoC8zu39uggdzWmnd5wxegMeZ
5mPnuXmxNrnJ+ej1BfC633mtTJoXi7rd0ThnuwCdI+8fbdrDizmGnGsN9RZg
knZw3OUEL377IUBqveoCvPoWavTpPC/WX77G8U16AQ5ozXr23+TFqWZvrsrz
LMAbkR2CpOe8WL5sz/HrU/Nwy8miSu49Lx7lVPR/2ToP3sGbXNWBFyd912M8
KZqHEqW7HzSaeXFFybo0q9R5kOacUto9wYu1Li7cXA2bh3FJg+8iXHw4w0fS
/KbPPPwLnacOS/Lhp/lhyuX285Arlp6YqcyHR4eOUCdPzEN5SpaTsy4fXstB
ix1VnYfEfUXs62z5sNptM9EfUvPQ9ZhTKvM6H3a6OnTCnnMenAa3Xj4Qwodt
8jZpdo/Owbiw7uucBD7Mv8+uVqV+Dk79J3p+Sx4f5htf4LHKm4MfxemuvjWs
95FlGs7Ez0Hn91z3kgE+/JPg37374RykeNlLMums5wn9/E0uc2DOZSu2dQ0/
zupvuGBsMgdCBwdF1OX48a1zVM13++bgqTgUaBzkxy83ed+t3TQH4kMHSneY
8GOh0RsaNTxzYFWs3crpxI81tbZaJ47PQv3MkfiqO/z4rWH2qH79LFBNDSvu
RvBjDZ6rfZU5szDCwcmxNY0fm7UmHt30ZhYSyyNnP2F+vILzxY7fm4XpzuGj
cs382G29srHepVm4Euz4IXiMH6+/8opjg/4syI2pFLexCWDZk2/kfivNgut3
9kNr1glg6jpK5TGxWQhU3le+Z5cAjktrm46hzoDlxCj3IUIAX9lBSij7NwPN
gzVxe00FcGBw11BZ0QyUeJsiMScB7GD9qepN8gwcvRYd8tdPAGN1Hmu9RzOg
rOr9X0i4ALY7G51QcWUG7Pp9ara+F8Ab9phlbDacgdzUubWJPwTw20zDpwaq
M0DMjSfy1wngz1VtRqfXzUBZhcZ28wEBbN3gRZKnTsNGbddDwVQBHJI3Wtva
MQ0+XbPRySRBbGepmGlTOA03pec7kjcLYqs031+58dNwZtbzXbCaIM7pPbVh
9N40XHPXTzLTE8RVTxzaZhymYYOzvDePjSC+8jqfVHt0Gg5JRv9+7SaIG0/F
NAXITcPksMD+tQGCWGHfS31hAdZcta/C0/WVIGbj4dk40DwFnFoiUp9SBfEJ
H+Gb5lFTUF/H2VBXIIgLDqoMellNAf+Nr4daagWxtdH0u6MyUyBBKAhBnyBO
9bvGUdw5Ce96HVuCFgXxbpu7B6bjJuFj/gXdPfxC+LZOeFzluUlYnZHkKpIS
wq2cJV5mmyfB/9XDT4qKQvjAk561z3smQK8jc8qXEMLl5+1LfN5OQOWhdMc0
IyG8Mnaje53dBMBQ1M88ByEc9JaRf37TBGxv+BL37oYQ3isUnGnbNQ4GR3RT
PIOEsGK8mww5dhyMZMp9Nr0WwpbOX89etR6HHai0JDVNCEdGS7f4S47DM66l
nWsLhPD9dtmxI61jsO2bloFFtRAGXzJHYcQY8Amlt/p2CWH/B/UPRozGwOrr
Q9fb00LY6I5C32/KGEwPG+RZspPwlGz0I+uqUVCk/bAWXUPCRJ/5WFLQKNAX
qtlSt5Dwow12txMOj8KfI7/1pVRJ2ML6eo4p2yhImqsPX9IhYaQkKgr5I2Bw
nHYr1JiEO5i3hbtujIBess7H5/Yk7P04a/c35REYFIjbcdWDhFutr48dHh8G
2/mFsG33SXjzlHZ9cMow6F9/EZkdRsKLqRaOweeGQYCm0CuTQMJj37L2H5Yc
hu3CvRLnMkk47TlPy7eGIXBWPDR6C5Owj1dRZV/IEIzfPr3iUkPCR6MEP1Ye
GYK29+Hsmp0knCL9U9h1ZRCUUnjjO8ZJ2GT0emj1t0H4E6QcaEonYRddx+LR
q4MQa7DBLoWfjDWIJyeLtw/C40+XO/+Ik7FirV+lVecAmIxqpVfKknHm8P2e
zIgBWAg/fzNOlYyr1ILUyvQHgN1efUH3EBlvyJRwi+EcALblgpoyAzLuYr9w
QOV7Pzi9e5MnZU3G5inKuo/c+kFWS87hsCMZJw7900nY3g9ihWfvHrpBxuNR
lr23//YB347FX2vuk7FE8vY26bA+mN9i3ZUTSsaXLI933znWBzd+5T9UiiHj
/nCjL+8YvfBGgcPd9z0ZR745IRSR2QvaOn3G0dlkzBzL/6h7sRee6Hb2hWAy
zn0de+aXZC888NVuM6xifV+eTR13TQ9wZ6mOD7aQcaltVafw/R6Q68xoMugj
46dhm44P7O2BjxFPTwVNknHS5Hjn/dFuaAoLFQ2nkvHDrZLOE2+64dsW0+6r
XBRsodlduOV0N2x87uIqRaHgwwmQvo2rG9ICze5ESlBwjtr8mmGXLoi2uVs9
sJWCSz6sO7O1oRN0nc2lORUpeLVPu4Oh3glrDhzcOa1OwaYv5Y1vxPyD/NLo
b+mHKHgfpeTWc7Z/QHnWHqhxgoL72ZCIocNfEChysQk3oeDcyZG2rLIOiFFp
WvlhQ8HbVHbFFMp3sPr3W6WvFylY453TVvcn7cDr45Xn40rBbUtsqHaqDf6j
i9oJe1Nw92PZn+2n22BtvvG0uz8Fe0r+vR+e1QrvnikoJwZR8O7RnrMM0VYY
ZcJk/DMKxumvlcVvtIBy46kF50gKfkJi/htobobOfP01XPEUbNbrp+ek3gzv
MkxEHd9R8G1hdpuUV02QZKte+TqDgovF87lilhqhN5TKG/WVgjmMtiudNG+E
2NOtMfY/KPi/ruG6/G8NwKWqb0P7ScFfjuGuEbEG0LcR2mBTTsHydc5GbZ71
MP1K5GtwDQXbP34pG9JQB+hAFPVBEwVLkYrMuVTq4BBFrvhEBwUHrMqP6jyr
BVPSk8m/3RR8Pcy7KOpvDQyJ9xtrDlJwpczf+9qR1WAXFll7boyCaQ0XFQKN
/wBt+JK28TTrvvCvxsvkKvCg2wcJL1Dw8ZOqEZO/K+CO98K9SCoFa+taPZW6
Xw5vpTrXjjEpuMl/Xf/cgd/g5SRD4WIXxhxMnUKfxVLgntT+tcQhjMtLI3Rz
PpWAv7F+VC2XMJ41s/2SerkYlvqbA57yCGOXVHtFy82/wMFW+ZYynzDWpyXM
lrcVwZcK66t5/MJ4brucxspzDPraJPPtgsI4/G3a9cXwQuD7mirvLSSMf565
6P6Y8wfkR5zuziAJY8aOa8PYPQ/W3WlwrSAL46DP6mcTer4Bf1VOXQVFGK9L
1zirbpgNzzcdWP0kLIwFit7cCCrMhPphk9mbIsJ4qTj52gGLDBD7/TFZbo0w
vta1z51D7QOk0D+I/mCxCPtFaU/hJAjJdNi/Z60w7m1BOkda3sDbU5nrnrM4
2lrd5eCTcHiZIZVUz+LGDVV64w/uga7ecM8yiw2L04+s8TJEB61EazhFhXFJ
+OWlD4mBaHXW1HmO9by84ebkmpgIJECTyilj8Vr3umC+wTjEK/80y5/FJjUK
WeXiySh8OeT8BhZ7eE881j2QisI9M0vjWeebCnaJcT33CW0XO9nHy2LFjoh/
67S/oClfxx/GrO/bIdbalduQjTwVfpsFsL4/hvbfYbELOWitcm9OFCs+DsY7
bm9dzEOnsoYGwlnxc/nCy94R+AMph8KQOyu+oyHax1XFAZnU8JTsZcWf/874
2PMGjD5vEg7sEhDGvvd61hlJ/USnNPpUXVj3FyOXNtp0/he6qnCgtYtXGG8+
0KwokVqM/v56fFuddf9VRlwZ4jMlyDRjRtGTlR86Jhv2/lEvQ+EFR5YjWPlz
ISMwUs3vN3ouQBqMYRPGd5RPpOoXl6OnUgyBNaz8C3pmdpgsUImOWTF/Zy+z
9MHnrc6NU1Vo0u/o1i3zFPzD1v6R/4s/SIduqWE5RcGkj9p0ubZqFNO9Ts5m
lIL3W/8s+kquRVtfpq/dNUDBW8Jj+RI+1yIrvwSZ4i4K/uZyUN/cqA7dvV/r
KNdOwS4HiEcNc3Uo5amNzJlGCn68bapQNKIeaQ79OGtcTcGn/llMrd/bgFx9
00wlf1Pw/GbHjZ3NDUhQSmHXxyLWeboWzM57NaLdwY/4hfIpOE6mKz5RvAnp
RetJq2dTcPaLjYLxOU0Ii+55pviRgiW5+1JMzZtRY+zx8NlkCk5TjQ76udiM
VoJLTe7Hsur3jejv/ogWFPRcjLvnJUvv/j72/76nFT31aG4SDGXpUeaP2kMN
rSj8ZROV8yEF38Or7d7X2tDgXf7kcj8KZls0LrGhtKNco1AhmxsUnPz8Rt5k
eju6L/nuYqELBVv+ne/febwDOSt8Hp1woGDpOwdvkoY60IbzsnVjVhS8KyAn
7dX9v+gmijLONaLgyMXyr6Ub/6F/Ul/SjfUo+Ou2pcbI/H/ot8L29YWIpf8B
w8eFzDtRTnBO/ZIaBedp+ttsnO1Em7coSbLvZump6ohZbUgX+htpo9C+mYJ3
ejX8fLq2G0XsJOnfF6fgP5eNYu+d60ahrrw5DCFW/MITRrQ/dqOE7UKfj3JQ
8N7mnPpqajfq/Pvnpt0SGRf11DySPdqDYt9OmJ8cJ+NYqZuHjob1IIG4xacC
PWS83yBKUamzB33PtHCIaiJjp22eQb07exH77OUNtHIyXnLPDLK+3os41Y25
FArJmHLc3vkN7kVloRvPqnwh46EmQdckwT5k9eW9p0AKGVN5ExvdzPpQ7qXI
51+jyDhbKKaL/W0f2jJ2flX1CRkfCxltMhvrQ2v0tPkD/cnY9isvm6taP/qV
qUxP8yBjnzVL7/Xu9KNt5cObUy6S8c5dJzYM/u5H72ebKzwtWPund37WWTOA
0iM2HF6vT8YPpgwz7awGUOPZZ3+fHSTjzRYSXihpAO29m9LXqUTGCyU+Fn/H
B5Dz2J0PHFvJuKRubZa62iD6eb/DjyFKxhm+W3sMbw+iXdZrv1bxsOJh9lJn
R8kgMh4Qj/VYJmEtby6t70JDyG+rc8jMCMvv6X5V4TcZQrL/pBqOdpBwAl9C
yNroIeT9B5d4VJEwl4r319aeITTY6JHrXUDCubHRkmfkhtFaxT+rphkkTLol
t/v51WH0OqpzWjCOhKV5FqzvZw+jX1GKPa9DSVhie/gWRdow4kvI2s7pT8J9
P04vPEMj6LJxjfgRNxJeaNQyTAsYQUXZeoJ251j+9dXWTN/yEUS5pn/G3JCE
HcVCI7nIo6hf4qyZHMFa31b1SNtoFMk529g0/kfCvw1HBfa+HEWKL3xLrDaS
8Df616TOtlFkFXRgqJBMwlJe0LtfZgxtMbwstcIUwsqG5sYnz42hYTvhfIkJ
IZz08enDNYljqJk9cOOav0K45/fetcEDY6gp2SxhqEIIW+3rDvm2YxwV2h57
8zpPCG+TaH/ywnEcZRgaOu16L4TXTyp92ZY2juS3RNq/fimEHX0+Rl4cH0dy
D137hgKE8NSZhl4LhQn0+5f+YVEPIbzzYteeFZcJdJko695oJ4RdhEvVjDMm
0I6N4WsFTwlhdU/l0DOTrPW9vurNB4TwrdN3JkiKk2ib+IV3d+WFcGNb4aq7
yySS4TlQSFovhB+cyfB6mD6Jtngxm29xC2Hnz7n8J8Ymkf/1dP3yWUF8Km/2
SsHOKVSw7dQtapcgNnJfb9V5aQpNRI9+F/wjiM1FHz/7mDyFblT7ObJ9F8Td
TN0q+b4pFOLL0dOSIojPHaQNyQtPI20VW9+wcEFcur/vv1eK0yjR0OWlkr8g
pi4d29yuP40mN04/+nJFEM9lt8fPOU0j9pnnmestBLF4ZMSLvqBpdE2v+5L9
EUE88SO370PKNCqU0uUNVxbEheq/bxwtnkYL/GtG38kI4vcCj9XzeqYRyj3r
lMAviLUEuUQ4VqdR1M6tvfcWBHD495tTm6RnUIG8bJpejwDuJzlhMc0ZxFe2
tGGpSgC77nri3m06gwz/LL0MzhXA6ZL1C/7uM6jfXvcKb5IAnnOw3r/0dAal
v61ZcgoVwI4f76rppM2gdwdVw77dEsCG+8paHMpm0LbjTeGjFwSwpWfXOuu+
GTQ0W2vCe1oAH7Z4Nyy3OoOSLZd2kw4I4LaBrYcrJWeR5s0qD8Z2Abzb485m
nb2zKFUwwL9JRADfEuS99ez0LLoRtvIhksGP/8veoZt1ZRatsS49enSIH7/4
5Pww7eEsOhcv9LGzjh/7ZHvtuZkwi2RSUlTO/+BnzXN8J6ULZlEiTUChLoUf
C4tN1rxomUWXsgxmdj3nxz2pQgW9M7PIrmhLo7sPP167aCrGIzSHvpyq25ly
gR+Xbf7dviI7hwZU9h8tPcWPx647Cf9Bc0jyfJNvgyY/1jh7/LubxRy68iBl
U/VWfszt4P1vxH0O/Q06HPCNxFovx+2vETKHLI7VU0OW+DDDbOW9dfIcmt7H
rD/dw4eFQp3PmRXOoQ3a9HPclXxY+PSJT7Itc0j7atD8u2w+7NUZGlcxNYc+
dff/+18F5x3P9ffFcXuvjCgqZUQyQojq3JJCGlIkK6JSKTIyUhpGEd+MIrto
SKSNuB9lryIjyV7Z87PfH36f35/Px33fde45577O4/P43B0ZAiR/BYWdZgJL
sFjceqk0UoCU6kX6L0lxCVTFE+e2+giQXGIM80qNlkCH8u9z7CkBkrGz0qPP
R5dA45HoqgFTAdKmWsEz984vgcjhLxbKmgKki6HWitvClsBmSLbw5GoBklTT
7t6Cx0twDbc8uLHCTzp5ee4NV+EScO3i0H30j58UZuGYvbV6CeSXdcYyW/hJ
eciqYWvPEjQdO0NLLeEnPaOeAu6lJTj+hu/t/Wf8JM8nc6veCpFBeSPd7lIM
P0ngKZzU20gG79nwHXv8+UmrU/eoPTAkg/9G93RBZ37SzMT75LJDZODS/thQ
tZ+f9CdRuqLyDBnm33KLBGjzkwo5M4ufBpHBYdPe3LVy/KToSvNUuzgyaOTV
9bzn4CfRz5TfHMohQzz5JHPPOB/p5KbTt/aXkEFbXsq0qoWPNFWzuzTsBxnK
o2/Qd5Xwkc5flrOIHyZDl+hdt/ynfKT9R04cCKGTYbzaq0Iimo+0Es/zy0SM
AgaHR09e9OUj2Sl1CbZtokBrI/XCVwc+kucNVaF9hhR4piK8g2cfH+lSXM9C
9EEKhGmNcZtu5SPJRd4beu1CgZLpQuEgaT5Szxcr4pkvBaLGRuKeE7ykwyE9
Tn6RFBjx9fjRMMxLogrdUV+XSoGBDWcFxht5SXd8JG9lFFBgm1xw4PIHXhKH
92QErYICVzMfOIqk85JkLpOdNNopkBs7OicZzktyvJSmbviPAhW9Sj6SXrwk
G0aTqAKTAj9MdskJn+AlbdelaP0RpYLIs9uKrJ28pP4vRJGPIhWQcNr3f8q8
JA/Snq+DulRQl7xn3CzCSyIkU301zajgWJxV9maJh+S+3nrZ2o4KnqoP70b+
5SFFCircOepJBXcfl2qHSh5Scp2iunoIFTivnSveks9DikAzsn9jqDD/0SFh
KYGH9MIl+JpnBhXyDMzuFYfwkB4c3uDdUkiFAf87P4LO8JBupCRvka6ggpdT
Y8r2gzyk9DMcP7e1UqEMbZWf1uUhqWc13tsyRIWSQd6IrLXs/kcbby0vUsHl
jqTIUS4eUmyd8uAbHhp0Lrn2Mse5SedYh9uNZGhA+nxKM6eFmzTUIB2RqUKD
sPUlahbF3KQI+9gNg9tpkH8tcWUii5s0d3FDE8d+GkTBif57Udyk4Ea/EuYJ
GiTYYZqKNzdJ4f0tqV8eNBjeP+2P7bhJ03qhPJH+NCi5bn3XFrhJvz71FcuG
04Ca/unIpCo3Kdz39OnwRBr4tAP3DTFuEtfSgvLPZzSw1vCsE6NwkV5lVurT
3tHAeYi/Mb2Hi/TY3LiMVUGDAz2W+hpVXKT5qunJ/p80wBylWz7nc5HEYl/P
ZPfRIO2FSeeeRC6Sp6P3IpqhQbWksGtDCBfJtvusWjlBg6yBbzM2Z7hIdSdG
StcI0+FL7Mnn3ZZcpOdXLv61WUOH7Qvr3rjpcpHShjK/XNpMh9rqis3ja7hI
4ZaHb7pvp8NLg6PGVzi5SNXD7i4mpnQIO6cnQP7HSbLxXoicP0oHxVX6H4J/
cpIQp7JapDMdrkkFn+b4wkkSGdh7hbhIhw6JB1oRmZykgMB3MdZBdBCTOAEi
kZykcuOZwogIOkgoyL+Pv8xJ2p8WKZCWQIeWqXuv1thykk6KKlc/zKKD5X8F
e7J3cZIeEMFy59/QYVaWnqKuwh6v10Z7QwkdRM13/Xwnwkk6s/uu8edqOhRY
vefctcRBGvg17anziw45l2mWtd0cpMOZ16fv99HhVZN47fHvHCQQVSFXT9Jh
vfyZxME8DlKv4uDbYSodtp36Xu8Tz0HSfvb+6DA3A+wzPMO5gjlIdqfSeKrF
GXDgJ7Un0ZWDdPJAFnFPngGOV4Om1Sw4SD3j387rbGaAoad7Y7kOB6ktijeo
WJcBl7+nxNvKcZC0wj2cVHYzgE+sqaB/ZQXfLPhj5mfBgAS6wBm5Hys4JvuE
2/PjDFDjNLh8PGMFV24pHyx1Yc+ffZOZ6LWCfxbOUz5cYIByxaz+n50reE9m
RfNDfwbcs/M2VRZZwXdG5lOOhTFgRqrpsG/3Mg73NIyi3mdAp/DH0Jq8Zbwz
1qAuLIkBiue/khWDlzHHl1sxM5kMSJZw7r5psYxLeh5z7sljgLkHy3pYbhl/
kxuyC/zAgGMTYyGH/7HwRvhcnljOAB0Ou+DyzyxscPuox6NaBtxO9vHSj2Th
JsnW4NBWBnDOHPJ7a8vCkg37tCz/MuCQyWK+rioL1/QkFRAjDGjzc9AvJRM4
MDppS9Ise35Of1XLKgI/7Cb/lKIzgOGrnNGXSODLThY/A7mYcHj//o8h7gR+
MMlpVynMBOP4t3fX6xN4LOBKAkWaCUea9ZVruQm8s738vfh6JrSGZ+cF/mJi
mSTaiPhmJjRIVmrqPGPiz50rdlRtJjy2v/Bt5ioTN2g9NKw2YoJDmPv1D3vZ
7Tf2vLu+hwlBLyIu35Jk4pTR6+S1lkwQzsrLOzHIwGoF4VrZx5hw/HnRnm3v
GLhA3/e+uAMTCqUiTKVvM7D8mI7B2TNMKJVch5etGVhjZ6hz7kUmmNkFfpvb
yMA73v7TbvJlglX9i1MT83SsXN/W0RPCBLS7IWGygo4HFX1vdt5hwte10kFL
D+n4qGfliZJoJuiJ1kjzurH5zuPwiAQmnHi7y3udLh2XxkYZ70xlgrjhv4Rd
XHTsws2R1f2UCSIyRyI9WmlYtmHbgHseE2qypK2TntKw8hkF9d9FTNhXTKE0
XqXhh6zIp9uLmaDi8TNUxJSGD73iDQwlMeGVT+q4jRQNfw+Z+VVYw4Rnold3
PRui4iLs1t/YzARJ9/9CGO+peFbFoqatnQlHt9nm2t+l4t3MQ+9q/jJh5aR5
Kek4Fce7DNbnDjFBzF+yTFuFintvmRhfmWBCokfUq+dkClbqtVZXnmfCnz8v
bqhUU/C7sH5SJZUJhv0pO/IfUbCChbu69TITlFw+dBifo+BDevLRdTwEBD4L
sW4xpGDvLG4xLWECMn4/y7kiQMEGud1dN1YR8CtCsl6mi4ytTimu/ipLwEWR
/pLvr8i4VlN0YmQdAd2r7K8EBZOx6o7U64QSAW+IlV6Dg2TsnRy2tKJOgJNT
LAchT8bvKrUD57QJcHGg1NVOLWGuuQ7N5u0E8Cu466SXLeHnZ1xMUkwIkFIF
taDYJew+eKnaeg8Bld81ch1dlvAvQacl6n4CeF1EnhzQWcKKn/dPRFsRAL+5
6Ds4l/DnK/RG0WME+Pb7vNdrXcTmNQQp1I6AYLPlYv1ni3ihMW6i25GA9Wb/
ETv9FrGy/0svNTcC9v46fsHKbBFPCSx6nTlHwLbB8nm31YvYILFF7MElAqRz
osLCxhZwo52Db64PAcn1H7hzvyxgbWPH8vwAAlpx3Lmf9xZw087jks9CCIjt
e/uYy2EBh80EPIwKI2Akl3nDZOsC/jKc5+QUTgB1KIs/hDWPT2nfS954nwCl
kQ3yFc3z+EWr45n2WAKKkw88Fc2ax81oU19gAgE5Hw3DT/vMY7+WiK0iyQTo
dLi+Lt47j9t3/7sYl0YASrrPlJOex0cVj5dxZRNgmlvvcGNkDpufjURncwno
HYgrGv80h8c7pqVLXhFw3Tlj4FTUHDaNzrZffkNAwtVVP1vs53Co1wVNvXcE
bMeOpw9rzOG5D2UFJz8RwO36ZCKLPotlz5UxL5cQsJlDerAwbRYf/GWoG1BO
QLOtxoU6mMVrpV5cufyNAO3u9H3TgzOYI1Knxa6abS/noW3yETM42DbHV7ee
gEMz2vPH1Gfw9+nrvstNBHx46Y8SG6fx25DeqdIWAsoiz/7tvTLNPs9HzAvt
BGxQCwjTlZrGNdS1pcJdBPhFdI/GfprC1Ov392f8JYDvQ3ztov0UHlF8/WVT
P9t/Ipx7TrMmcaHRhEbKEAESO+q727Mm8ao6hxLOMQL8JTSCju2bxGMcJaGO
EwTQJ7M9O8YmsOV797hX0wSY/FY47Ro9gV1/nhYYnyMgJeGk2KLWBP7x145T
fomAapFB5ejWcUzyfBwPVALiemVt1APGsfF9iTZbBgFJXzUONK0Zx+bmdux1
ELDYq1QQUPYPX5N9WuXEwYLF03/1VFz/YcqBumeHuFlQniFw5zfPP/xfwP5Y
HT4WGETom/33cgwnE3qpfIIs6Bqu2mRlNYa1naz6fwiz4Hc+65vw3CjuKhy/
GiP2//8N0huaE0bxK1He8ztXsWCT/fvBRMNRLETd3tYnxQKZAd7XTt0j+Ghp
UUPAahZs9s6rUbs5gkv+WrpxrmFBQJXJH/KmEUz28359U54FCR0Gdyqrh7H/
Q82S+XUsqOlhuiZeGMaTSWrZdoos0Lj6Q9pDbBjLJT29WrSJBVYx3UYG74aw
1esAtKLMgqT7Ohf4bYfwdds1Cns2s0BJt9r0N30Qn6h9vPqaOgsWsq67vEwf
xGbGj1G2BgvC962zvbZnEEuaHM/DmizY+N0B7xsZwO1E9plWbRbIjnVsk7g3
gE+njYd0bWNBQ9Aa066tA7jEU52rXY8FfiqpkZk/+7HuliWequ0sdn1cEe/m
148V7b3jXxmy4F1zH2WjXD9e9rD7cnsH294jvvdLrvVh/qmlO0dNWCCqxKeg
hnux3qQKl9QuFrxpLydF8/Xig3Q7qN/NXm9FXeLwoR4seTXqQABiQbKn4btt
SX+x6zNTVdm9LLh2Y1nn6t9uLL30bDTflAUTpizVXKVubCNonWBoxoIyKuNF
3YU/2H70hsHn/SwwV31V1VvUhd8KTHdpmLPAhCM3boj2G6uEjUQkWbAAvQiU
6oTf+Df3zv1LliyYu5bm+CWiE7evWCmaW7HtcyDQL6KpA3s+IxQeHmJB2Et3
NyTdgVOGP5r+OMyChwr5GiOn2vHvu56pXEfZ9joU88s3uw2niT7YomHNgju7
DB0mx35hl7o1VPNj7PMOaKuw1PqFj32J5nO0YUGM4W2eh36tODO038n9OAvW
pNiuLytpweUHH3G6nWDByNfTAs0cLfhYTR75uC0L3s+8Kv62/yc2+Jeya5cd
C35meB3WX/MDm7c6/l17kgWnZySinuc04RP559um2Xzc0oTrj3Yj1vB6s/mT
PQt6SseeNJbUY9fniZ2+p1iQabBq63WzOixtzjGi6sCC50sfokd/1OAZZ4uj
P9h8uqktWvBUNZZs3L3Gy5EFf3KCGINDlXgnVQk4nFgg+OdjtrfXdzwZVEiK
YvPejy8OvKVU4EPVgml8zix4zXG9IPMmCbdVNjQHsTlCfEAtSKIcL3uxTgyy
WS72zTnBjaU4wUFaC7mw4IGCZsSkzhfMOr5wLIHNqWmu42vRR3yhdQh3s9mp
7u5M/OF3+F1IxpU1p9nnJa/Qkf6lAG/PAEcrNqto+Ngntr7E9FTLm35sjv0k
ubgy8RQ/OP6i5SGbM57aQgH3E6wYnnUwh837GFa6exxj8LWNg8P/f/+xzGQw
dF2eG/71/FriSzbriDiUU0XvwBH3+qNP2DwusTWx6GwSnCvLFL/FZqderkha
ThbUuMtWO7I5T6KO51zyc6iLeXVek82GU406BQ/y4bKkyuQCe/3cc/ncl/YW
gUfGG/SGzTaXai2ouz/AjfJiB0c2x43mUUN3fgZJsoQWx//3q52xkdekBMS+
1b38/3uS/sSOoYfGZXAg68BXFTaPfcovTFxHgscso5Mv2PbvkxY4fT6jAtxU
ky6uY7N6xJHU6g3fIWDLk+FI9vmpb/nAKsquhFWf6t+Oss/XqGheVVO5GgKG
J7/uYPOdkQMlxi9qQF6AmxzG9o9qLj/nni11oHPWZt9Xtv9MkV6VyRbWQ+q0
Q9Ik27++cMeET+k1QnhfW4sYm7fbqJxzLm6CWO83gyps/zw31bfaG35As7Pg
Wx22/wrU7FaVPPMT9EJ3b9Rm+zfNN3KgXLUFTAxaFTay/f/rEf80PNECl7mu
RfGx4+MPT+tnmcJW2NgmaNHHjif7co5H33x/AVdI3N7X7HjD0vQnNUZtUEfb
dvLCERbUtu3ZqrrcBrY/dl1SYMfnxdDJt33f22EJNpyuYMfzvsT7D8n3OqDr
lou0/UEWJL7fZuR5tBNEp7LPD7HzgajrRYmdsr/hrXS2yWl2vhB+qhd5pfc3
qA5rXPzBzicZh+eFeJ93wYn0TW067HzDqXhFeNnrD6zp8j12l52PLIPa6A4G
3UAErKmo28OCt2Pp5oor3RAXJsPgYOezMNuki1a1f2EL15UOdXa+46DXdQ48
7AG+31pa+3ay4HtnJPegQy/oXHL8fcSYBTfkj5w9rNoHVhcYeVZGLLhF1Aeq
zffB7DnuEGMDFohvdv9j5NwPpaFnFdbos8BsIKleprIfBtq53f6x83dT/2K9
xpYB+LT11bqX7PyutkBLCflvADL2iymeZOf/yzxpFF7qAHDYthjRtrDHu2uZ
1eA0CIW2vgZRaiwgBw3aNlUOgqTj8VF+VbY/BOb/Ed46BBkthdLXlFgwfPjE
VGTCEKQXJMe0s++rsZtjVnuZQ3AxjSyrtJ4F1rcry0zODMMtidCbLuz7zuVr
Ood/wzAMnSy6f1+OBZ/3eXXO6I1AT8rflWcy7PvC9TJPXtoIKH8TyXktyYLz
FTKWL3hH4YSXuEm2OAsKvQUvjl0ehfdfvSLvirCgNUpuy8Xfo8CveN7yBPv+
rkrStdTbOwau0gumUuz7fTbPORblj0Fp6xvdci52ftJ9V5yw+h94zY/9OrFC
wJjngTjNW/8ggIgf6mISMByh1yo29Q+0GXsVLGkEhCRcNzOyG4faCTXD52w9
YjYqlp/3bRz8dMWmptl6pcHqXe1ZrQkoYB2ZV2TrmYq2ZSevJxOgmvSHuXuc
rc8NrLUw3yRk5CrjAyMEaI2UMx19J+HI9S3TxgMEHCwSjDrQPwmD+p4Gcj0E
fJVKSLx5aAoEeros+n4T0MZ5ZJC3dAruRk+1xbUR8Mj107ZutWlQv3jnjvpP
AnwEivdyPJ6G+OLpldcN7P6HC9v8eWegqnRwYXUNAVjj4POdfjOwkHud+wJb
L676G+V/YmgGwoL1OnPKCNCXyFwhHZsFtb+dq2q+EBCdMsMR9m0WFtofnPj5
ngDrH4FPLNbMgUdqzV5SAQHnlGReh1rPQcFOFPiIrW8zrwjE/b03B3+tKfHH
cgjgKgt7evbbHPSkq2otZRAQflN6jwJzDta83D8UnELAVNuXKpbePEQcWbEY
ZettzpDP94W95iHLZjNtO1uPewXnjJs9nwfxrrJbnlEEaNy2MXnTNw8vh4cD
w24ToEpp7NyzZgE02rq9gq8T4Ji3dzWPzQKsbqLP2LLrA1srnkNLMQuQp/Ey
SsabAFKAb4tkzQJM/3Os+uhJQNUVKtWFcxFSOJM0Dc8QcCt6TuqvySJs7Gg+
kMKuVzIMXl+LDFgEzpi7yd0n2PXE02N+bkWL4O+l+pR1mIAIqSF7r6lFOHpA
ZmT5AAG5DfLXXm5eArvatL5exK7vHnmvkT6zBPJD06LpOwi4P8mIeZuxBKI6
ayaMdNl69c0FhRt/lmDEVnCqaAtbz4ZQJEJXkyH0Wug9fnY9tyX14Ls3x8jA
mcFtsEOered9QvdLxJHh1o5Ft/1SBIw/WFqV20CGlvRzN/9fP1btcbK7JECB
khhj2hwXAe2VSXZnzSiQ3bBs+IDBhNz+VOuE2xRoqWQ851pgwrhK8O1FTIEz
25VeHx1nwqpcfZVIFgVuT8m8DOhngoDax6uHTahgkyK94tvJhMLZT9kWQVTo
zl8RM2fXz2unikYDP1NhxxFr/YVKJly/WuX7l0yFhAtydT6lTLh64Wmgnz4N
Cn4sKlez63Vbst+mPb408PURTZ95wYStkU2pe9/RoLxc5u5EOhNi/O+JBM3T
oEEWthQnMOH+YknKsA4ddp3d0WN/jwnRN/7zCPemw6o2zX8NN5hg+skkzuEt
HXbmlSSI+TEhPL1T99wcHapPzKps9GSCtelhz5c6DAiONx/kcmaC569d5ht8
GDBRky/4/hj7e76egYYiBpT/d/6PzgEmpFJ79xUsMEDFX+O/EBMmONjZXq/W
Y0JkJ497vDYTwpiP46T9mZCs4Brjp8SEw80Kt5M/McFFiH/XRlkmmEiesTlG
YwKvh8yLx0JM8OL+sbzHmB2nPzjoHSwGyDfeDznH9tMrkw+de+cYMN3s8fUb
u447UjnE8WaIAXFm7wttOFnAF+HGt7eD3a6tBmv3sUDqZn18Wi0Dzj3+cmR1
JAsuBG2uKS1hgPV6v4oD9Wwd6NFWkZHPANTneqVAdBlMPEIy9mUwYCjVQdvS
ehlqtVcH5McxIN3gX8vapGXg65lxbg9jQEiwzCbFrmUwWJ19qZxtF2NN6xH7
dSvg8E7+7Vk3Bny+vKe7xnUFMiqfGjYdY0DOmbQyz+crMKPQKja/lwHnt6wA
TK4AfV/W7hZdBlwSH+RXluNA95iuTZc2MeC73tR4hTEH2q7fXP5tFQM6zpuv
DnLiQHfTuaRbORhAZpXbW4RxoPMlUQ0ps3QYGM0M1X3GgR5GOwzI9dIhe2P+
Af1qdv/W6cOHG+kgXbkcdHicA6mRdYR3lNAh9AO5NUyEE32PShP6/YIOamJr
RRu0OdH6WwawJYkO+ToCfVttOJGJTFqy1m06FN+0Y+YGcKJIe2Ge4ct0KGu5
JWHwhBNlJ3tdsnCgw5O4+tq/ZZyI95JbidMBOgTcU6lPGeBE6c8Otm3Qo4N9
2LpPl3i5kBTVPiN2Pbv9fIn6CXUuVJLwhPFSkA7pZ8+VHTvEhYIieOu8lmgQ
EP2bx8OHC/ELPBjr7qXBrSNzsdFJXGj2o6buQi0NHH7ljFQVcyGv8pXbhew4
WBkbfiDVy/6ey+KdZBoN0OB1fj8ubmRu/N+jteE0MNjNbBxV5Ua3lIp4qr1o
ICebZHPxIDfy/TD/Q8qWBq7XhIQ5vblRpZdcPdduGqyLuO/0IpEbPa268/2h
Cg3Mkh8XOhVzo5UPe6OxCA2uqk+6KPVyo8ErWrP3F6kw8N2+hsrFg2qseb8u
dFHBs/uT0Z/NPEidI7KMjKnwKPcLR70VD5ppelgen0uFwbluj2ofHqR7ds+9
2vtUcBQwf9n8iAelV4qNJV2hQk3OO87BUh5keGs+i25DhTGqae5KPw+6Enj7
5oIhFTZ0BWNVPl4k1rHh4E15KsyvXRVgq8GLVCMlGzOWKRAn1T/24CgvipP9
WH9kgALmrlVbG/150VqRNPGH3ynQQY48IZHKizQL8BnXXAqc9ym7aE/iRcjp
xX84ggIKfwp9no/wola3R6fzzlFA5IupG0WID/keK8lQNKdAck6vjrkOHyLo
p2Q3qlFA3u5w3ZMTfEhhUDg5j58C4zvfik8H86Ejnn2zpaNkuPDcvn9XFh8y
up46a1NFBuoTknhMFR+KHJv19HlGhhgnjwsdE3xI5WiBntQtMnC9+/pBXoIf
vWrmVjZyJkP//NrXp7bzIyntD9J9xmSoZmVyxp/iRx+6bAf5ZMlgt07ZnXST
HzFcky4VLCxBT7dKwHAOP5KouPiorWkJnOe/tBJ1/GhU98L+wJdL8MkyQERg
lh9VYdrZ5NtLQAOvNzzSAuiNe9qonuMSXBNebThvJICeDe36YrF9CZTizTY1
Ogmgoa1Xf/0WXYLAuE19CbcF0H2PSv3+kUWw3qHQvv+FAPK8y9nrXLYI/y4O
ug01CKCKkPAOm8RF8PN26T03J4Bkpu5plF9YhNP+7xNbpQXRefuAuTS0CCer
t9Vv3CGItNu3wazMInj3uJTYOAmiarkAow8TC7B8ivL47C1BVLmixDNZvgDh
y0MxJ3MFkZFTSkt8/ALYFh4r2VwniAakBX7neSzA5OsCo9YpQRTm12yra8S+
1xcLZW0lhFD4p59JakILIMjycC7SE0LSmb9GYrrn4WibmfCgrRDS3Pg7yzl/
HnKfG0uPBgmhr8S1LenX50G/78vZ0jQh1GloOnfAah4U+36NuWAhVHx2/QVn
+XkwOGvr1zIghBxzs9f2j8+BG6mnX5RHGIlvDYxr/DwHCbVUuqSqMBJzJ7kq
hc/Bcrvp3d4Dwuj46UsGw2wddOjpo52XPYUR99On5WLr58B818bf+L4wesK5
29vs1yw0rUnlaXktjIwsN3eD5yz4Wlw5n9kojFZVSV0WWZ6Bybmpp2rTwsjl
W/hS3sMZCOEPsbogKoLW1WrbyivPgO2FHxRXTRE0t+7DY6eP03DZRl1T9JAI
+iN+ptvHbBo2oDg/z0siyDGY6nqybQp0D0pY+UWLIFawdfQqtynYICyoqZEn
gjIbtTrTZyaBRL4YHV0rghJv9I+wgiZB7LhoR/yoCNKoZgXq8kzCy+qFgN08
oijPU8pv54MJyHV9/it6oygSvHOkR0FmAuqdHhwK3C2KtmxX721LHQeZM3v3
cjqIIs5h7kqPjeOQ5rEorHxNFM0+b+Joyf0Hl2W+c/bGi6Ln/skacur/oOi3
ZuDWAlF0p0KTc9frMXCyvFohUieKxjjS3PdsHQMNHZbm9SFRZNZX5rI5fxT+
Df4WCWSJoviIEqX5LaOQtkoxn7VaDBmRbghmvxwBo05feyEdMfTujFb8DpUR
SBT2d0s1F0Ok2gfnyrKGIboMyRScFkM8FW6O2vLD8LBslgSBYuj2x8ZL8YlD
8HHdmk+H4sSQyIOE8nGRIRCKszvQniuGZqYvZRvdHYTRoJa6X6VsDjSMu80Y
AO7335P2t4ghySyNrQ1X2PxCjF9jVAx5FHMeWD3cD7e6qkJvMMRQJ0Wk65xd
P3DGVTjvFhNHr98liUQl9IGFr670+Y3iSP1nk7FzQC+8kjEUo+uJo7WB7toO
dj2wltf3+4yZOHpgtk43yuAvHHV+UbTfThz9k37SNyPVDZGPrZyXz4kjRQpL
LWW2C9bZaNpJBYqjxRh/m4d1v6GNxal3J1IcEa9yqAPZnfCPVzT+4CNxVH+D
xvEosAM8z35efyFHHOVq9uZ/OdQOhJVm7N8icRR3pOfeiY1tsD6VkZVVLo6C
rB8FBC62wsnl50of6sVRokVOlmZlCzS7WM9Kd4ijSA23O7cSfoK+m+UEqZ/d
v1a1ifN7M6wreiPwaUIcbTPvK/ZxbISuFrrVwqI4ujGiFO61WAdz+s9rfQlx
lBrwKEAiqgYeZzocVuCSQEWZb10D1laBDYdaaCavBGq6Tc0uzfsGZ/KyHn4T
kED8/tTVLCMSZIse/HhXWAI1Kq5Cb++XwjuV2LUjohLIVq1Euz3zEzy3IBOD
4hKo4uKHzNyiIuhe55MdukoCWbxf3Foe9grORzyy/SApgeTXOf9c0cmEzQHd
fhFSEohzr/cuk/wI0L/W4rzIZqsk7+7jCrfwlyanWww2p5dXPGsPTsPqkrM2
qWx2Zxw/fMXwJTZUenuynT2ekzzl1JG1RXjg2BeFl+z57kfOL+5Y+wk7FRgZ
SUlIINNjAvb68qXYxez54dViEmhF+2lwqBgJ69gNiBWx98N7zWcwJ+4b1rew
1xti79en22bbjAQ7y1tr3s5n2+PmwAchw/gaPIUtmkTY9krWnJhxlKrHybHc
I/xse+ZIaOzdldiIXR8c/KzEtndfQZrNR+kf2KxHg3VpXBy5kgx1ret/4uqQ
pyVDveLI+n1455xgK06I5hSJ+iWOdsQrGapZ/MILdssqp2rEkfim4wsjkW04
r+zLiVMl4shmQ1uRXHU7npgr4biXL46kh0LVC7k7sefD+ZzRdHHUdX5KPhn9
xhOiab99Y8WRx1EF52/Xu3CG9XbLbTfEkdwqwW6FL39w8bfjpA1ebP8Y2ff4
0UI39n8SuQY5iKOF5nsf1m/twc+zN1klmIujk4p7/XPce3HWOZGza7eLo3Q+
fiSb1oc38oTFdCiKI8vv96z1PPvx9tu1zFphccSn165RwT2AgyXJfItkMfSr
9tOmN+kDWGxzhKxtnxh6Vtu6d9ZgEMekSb1ZrBFDCz9M3t/8MYgrFaccmwrF
kF4oz2fbc0O4haugZfiRGNq6qabg0vIQTk7vqjcJFUOpNZvWliQO460PnRTa
3NjjLW1NMdwygrNF1xUUHhBDd190TveUj+BHjt4hPzXEUM68JSv32Ci+v5AZ
byQuhqrfbmuJGhnFRRanpCfmRVHKHC355rUxvKpGWW/slygSCOd8fUfgH86e
rtHV/SiKdpz5Hh6b/A//1v18rilJFPF7D/5M2TyOEz76GZT6i6IGR33nzI/j
OFJ5XnL5uChCVp+3pOydwImq/24m64kiA1qgy63mCRwZt0PswSpR5LT+8rFj
9pNY9z049s6IoGpe40i+oUn8R1lJJq5BBJ2ijRQmX5zCoXpb57JfiKC7d6Pe
cC9O4atBkm/X3BFB3RF//9sbNI3nayw30Z1EkOxIzZOjy9P4+Heb9aZGImiI
1rJT/fYM/nKbM5yxSgSdL7u3ppZnFjsF1sKmSWGUXtrNox4xix9wCaCy78Ko
mqzBpcw9h7v+Hr/RnCqMWDXvX/y3dw5HN32nn/QVRqG5xS9O3prDWp36n10s
hVFiHXEkGM9hLq1M0oiiMHo6bMm/RMzhvWbOyjMUIdQoc/1Q5Y557LIlbCmk
UQjJBp4rHfefxzW3ZPbHZwuhsxd+cp0pmscBtnd09AOEkG+Z1YzW1DyW4u5s
dLcUQo+XlFytVBdwiJfC9s3rhVBJ7Wa7EpcFrNz46c6NeUEkohgxfC15Aevq
fm31qhRE8C5x+92fC7hc8LgJ7ZEguhrzKLaXfxH3fpFrV/QURKgw5GDE7kXc
kXz944SxIDrLldoX7LeIXS/ozp4UEUSyXWfbS18tYj3vlIeXewRQ316FZvPe
Rexup/lSq0AA6V3yurVR8v/v0zJ2pN0QQP7mm8vMzJbwuutSFiWHBVBzbav7
x2tLWKxtVWv0egGk02vt4/1qCdfHPGyQmuFHA/cD5wL+LOELG76onCjjRwnw
lKdOiIzT+crqjsXwI9Va0+GzxmTsb3wtRdyBH/EKBXcd9SRjWb3Zy7Hq/Gh/
c9KeyMdkfPkGWb6VyoeGenJihKrI+NlcmWcPW/8mvqHt7J4n45TLN+XeJ/Ah
3ba8Ufo6CvZ0kus74cqHtsds0D5nQcG7Pn2+UKvFh35ej2hU8qPgrg/3nUUJ
XtTGdSpcJ4OClzdfsdlcx4s6tvdox9ZQ8B3bvE65R+z2weSiXXMUnOyVc3nY
jRcNFnQugxwVm4a8/C9GmxeNpm5c+wioOKPrZZ4UwYM4Nn2W2nOWin/wCqy/
XsuDJMREBPfGUHFUqweqTeRBpif3Kj8pomKvfm8HxmkeVLg+N9Wyg4pFjn3N
l9bkQdRFpaLjDComZaR4rKFzo9a85qLidTT8xpeSJ1TFjb5UW5ODEQ3L/rc7
aeI/bhTy1bcnxY2GcegenVJHbtSjlNAue5eGO6UVQm6ocSNpTtVjlBwahgKV
8wZLXEjBzPinQRUNZ0/2/x3GXMj0ObXtzzAN1zFmi6KjuVDO9KbpIW46DjQR
eb/Vjgt9b3uab7OJjm3VODPrNnGhr3F8BRqIjpM98za7z3AiQTmxeC8nOv5G
XZpnFXOy7xf9lbXBdOyrOZSUHM6JJDeaZG9/RMcebxIytltzouVrxWq4iI6n
uA/e71DgRPtuvrYsbqRjvaGb9df/caD2Lh6SyhgdB/0d/67+gQPJyJmZ8XEy
2Pk1vrn3Jge6eFbsieNaBl7d+G97+kEOZBxWHrZFj4EnX3YYnZXlQGhesNzn
IAN/Ni2SCqhegYNvUuT0zzDwm26tjB3OK0Dnfn3SN5iBjav4zNZQlqGWXHRg
20MGrjcbUpKNXQaeGVbhlRcMLDPqv3u76jK0D5921CljYHvtL2H+5SyoGv8t
69/KwBpHtHHX/38HW73zDYwxcKS37uczswQcmhodfchkYKtkPXGZKAJuSXvF
eokzsXKnkN2sIgG0SKtLbZuYOD3HVGCpmAl/pJ4dqN3OxDf0L0Uo2zDhr8no
iKU5Exc9Pbvh9hQDrH3ShZxPMfGf8lJhsQgGtD1Zf437EhOrusxertvAADRi
NbEzlIl/8HXYfSymw+kOe0WRWCYuqZ0ktdrQQehJVOvVDCaOVMv/b9MMDZ6H
LX66WsDEm5gTKblRNNidaxMmWs7ELF6tNEclGoy/r+/Z18TEcJh/n3k5Ff59
Lwhe+5eJEeWKhqc9FdbuOrkcN8HEvhFKf/ASu04umxd+QWPiezHMKqv/KHBk
yWKvKx+B1/octJHYSgFvjxcmJCkCx17d2S5US4YI0YwHVYoElshSj93pTob0
ztHaq5oE9mlmFuZysOvQP0ZBdTsIbOMa7rg/fQmCjyqrNJgR2H2gJ3e98RK8
R7OHgqwJfN60LFarcxEqa3yvtDsS+GJHh1CA3yKsMFZW+s8RuKZCb2Vp1SL0
HTf0Tr9K4GbeB3tfFy5AfyZ5i0gogcMpOenJhxZA/YReklYkgc9KZzV8nZwH
4dOTonwPCXzNyilY9v48OO3imkl4QuDNN5osX6rNQ+d5raiuZwRWP2LZcrlm
DvJEBtV+5xNYymAq6cLZOQj9t331w48EvlfeJ53KOwePz7TH8ZYTeJ7sG7pi
MQumeLLZoJrA/DrJ89r3ZuC1oySfajN7fdumjKtrp+GxKHJtayfwuyPzNJLA
NLS6FfOa9rD3vyrm03qLKdg1wynpO0zgRf2ciZ577DrpcnO6xySBW9u+0Yj6
Cdj3h1osv8C2X0XBtmCRCXi664r3Ixp7/DG+NpvD4zDnoVvZsUzgVf1/RKL+
+wdOVnuKenhYODlzD0361xhw70jcmi/Ewl27ZrJpMmNwP1FS2VSChYtnv/Fu
sx8Fpsv9G89k2CzrJvE1bQSY5i/lm9ey8IfosszH/cNQdWzu1/cNLJwvnnOn
QnkYrgt/DgxXZuEnK1Y3DD2HoHq/fJuUOgsPosF91DeDoHGc49UVTRZm+AiE
LS8MwMfXAu9TtrGw8C2PRkujASgXePg8fjsLV95UKe0K7Qed6dc6DjtYeBWZ
mWMd2Qdtd9ZRF3ey5zvponBRqhd8+uyS//8+ZlCMKImR+Rfwg2uvk01ZuMT8
/Wnm1m6wD0Kk3P3/f/9TpOxcSRdwy8i7hFuwsNuOv7eNzX8DvWGVoJEVC2vu
GDxyuaMD8Ntmw/LDLPyzpekdy70dFM+lOMlZs3B8lNbWocVfULvvxMh+GxZ+
HuumveZOK2g8u6lreYKFLedvKz2RbIGG01rZm+xY+PFSai1p3w+IiRGL+HmS
hS/pb4hodG+EGaMzWsdPsfCd0xLiVuF1EOnL0//GgYX/Vjwb0HteDUecnbt6
HFk4kBJ5KbDmO3Sd87YedmLh1rTXEmLjJGjOarxW4cyer3XZrFXmK/RoPPbz
d2HhmReX/zLtP4FUbfh5jtMsvP+1hOetjLcg6NN3yY3Ng0cyqh5V58JduesJ
qWxWXr/hj0B2IvwPe+cYtA==
       "]]}, 
     {RGBColor[1, 0.5, 0.5], 
      PointBox[{1.780277778473253, 1.1463363726578748`}], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(26\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->20], {1.780277778473253, 1.1463363726578748`}, {-1.5, 0}], 
      {EdgeForm[{RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
       Dashing[{Small, Small}]}], 
       PolygonBox[{{-1.4430241804986736`, -0.2438909050912049}, {
        1.2022678591642495`, 4.6087505500332915`}, {
        1.2681833893717636`, -2.326438704878915}}], 
       {RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0], 
        PointBox[{{-1.4430241804986736`, -0.2438909050912049}, {
         1.2022678591642495`, 4.6087505500332915`}, {
         1.2681833893717636`, -2.326438704878915}}]}}, 
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
       CircleBox[{1.780277778473253, 1.1463363726578748`}, 
        3.5103286744277775`]}}, 
     {RGBColor[0.5, 0, 0.5], Thickness[Large], 
      CircleBox[{0.06996626456540667, 0.07598531741817606}, 
       1.175330191523518], 
      PointBox[{0.06996626456540667, 0.07598531741817606}], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(3\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->
         20], {0.06996626456540667, 0.07598531741817606}, {-1.5, 0}]}}}},
  Epilog->InsetBox[
    BoxData[
     FormBox[
      TagBox[
       GridBox[{{
          GraphicsBox[{{{}, {}, {
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               FaceForm[
                Opacity[0.3]], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
              LineBox[CompressedData["
1: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
7mb/yVXS61Cpf9CqpbcP2WJ9Y6oryVj9V0H7UG0f/hdBMrRMIiPFy7h1S1Yf
xii3qhZpUTB9u9Kny259WH3TYGzj5Xqc6Lq5rcy6D3sCIhaXTdTjVQ/OZNKh
PtQ9902Y/3EDbhXM9vsr0IeXfp7eEXWiEfcVHTbTecXG9fqW2xLOUlHPdiRz
2pGN7En5nGXRVNQ5Rr5vdIqN0cJPLSxZVNwuERJeIMzG0a9hXblmTWgY8VOy
81cvKl12eV3wqgkV7zleS6L0Yu7a4VUJdU0oV1K7uD6wFy8UNTktO9CMTy+u
zGiy60WXQgnrR/cI3hZ0kalh0IuiKg1/yRnN6ACKSYKLPfgvhD3WL05DG6P/
ePY49uCPkZKFFiYNX8ZdeB9+rAfJn0PaaXx0rODN78nf2oM71Z85RKvTsTj+
757jbd0YEiU96f6Mjj1GEx3lX7rx5reM61E5dHR+7actENyNaqzvge4tdDy6
PV6O53A31iwwPcK3MtD5rv3uIulu1LweP1R7lIFdF2WXxv3qwn1JH02qbjGw
aZmcv5B5F84IKRevzmLgcnaF0RX+LmyNWedlXc/AszUh+z2+daJb3v1U52EG
lrs2rZHY2Im80Qr8c/JMPH288A29qQPtHB5s+HyAiWl8EQL3AzpQ/9/hr9YW
TPz++futy9Pt6D8xdjP4MRMnOuJL8j+0o5nz3dx1r5m4U6EjZf5KO5Y5jXRE
pzPxcMpet2sNbai4ds1OXwoT9c10bwf7teGnGzs0xjuYOFVN4SvSacOvNkbt
ViOEvfRm5aHxVhQ4xv+jfJ6JR9Y9/iab1oqvjfmzlQVZ+EpzyvPqxVa8kHDf
JlyChbUqE4fy1rSi/6+4PB5ZFgaHJ35bS2pB2jK3hHvbWbj79MkXIY9b8E7f
HoXRPSy8XCBrvXVfC+68QLJyPsDCyA0TXxm/WNh1IvDaUgMW+j/jl0lPYaFO
7ruH746zMLeVLZhwgYViMdl9JqdZmDm5ob1EnIV/Vpr+EbFkId8GmdHlJCb2
KGXI9Z9j4SVXyRePfZjocXeymUbMux/xeXy7NhPzHFaFtV9kYXOnyLGVEwzs
KOObXHKJhfzCEXlyGQzUKs0OP0xg+Qck3ftXGJjwQVUhw4aFSmLGo3wbGFj2
3vvKHmJ+6sXUHGYzHX1vSIlyz7Nwqkn3xshzOk532/OVnyXsz50cPmpIx+zv
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
               "]]}}}, {
           PlotRange -> {{-0.7, 0.7}, {-0.5, 0.5}}, Axes -> True, Ticks -> 
            None, FrameTicks -> None, ImageSize -> 190, DisplayFunction -> 
            Identity, Axes -> {True, True}, AxesLabel -> {None, None}, 
            AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
            Frame -> {{True, True}, {True, True}}, 
            FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Medium, 
            FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], Method -> {"ScalingFunctions" -> None}, 
            PlotLabel -> FormBox[
              StyleBox["\"a/b=1.30\"", 16, StripOnInput -> False], 
              TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> 
            True, PlotRangePadding -> {{
               Scaled[0.05], 
               Scaled[0.05]}, {
               Scaled[0.05], 
               Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]}, {
          GraphicsBox[{{{}, {}, {
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               FaceForm[
                Opacity[0.3]], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
              LineBox[CompressedData["
1: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
               "]]}}}, {
           PlotRange -> {{-0.7, 0.7}, {-0.5, 0.5}}, Axes -> True, Ticks -> 
            None, FrameTicks -> None, ImageSize -> 190, DisplayFunction -> 
            Identity, Axes -> {True, True}, AxesLabel -> {None, None}, 
            AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
            Frame -> {{True, True}, {True, True}}, 
            FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Medium, 
            FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], Method -> {"ScalingFunctions" -> None}, 
            PlotLabel -> FormBox[
              StyleBox["\"a/b=1.35\"", 16, StripOnInput -> False], 
              TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> 
            True, PlotRangePadding -> {{
               Scaled[0.05], 
               Scaled[0.05]}, {
               Scaled[0.05], 
               Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]}, {
          GraphicsBox[{{{}, {}, {
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               FaceForm[
                Opacity[0.3]], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
              LineBox[CompressedData["
1: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
               "]]}}}, {
           PlotRange -> {{-0.7, 0.7}, {-0.5, 0.5}}, Axes -> True, Ticks -> 
            None, FrameTicks -> None, ImageSize -> 190, DisplayFunction -> 
            Identity, Axes -> {True, True}, AxesLabel -> {None, None}, 
            AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
            Frame -> {{True, True}, {True, True}}, 
            FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Medium, 
            FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], Method -> {"ScalingFunctions" -> None}, 
            PlotLabel -> FormBox[
              StyleBox["\"a/b=1.40\"", 16, StripOnInput -> False], 
              TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> 
            True, PlotRangePadding -> {{
               Scaled[0.05], 
               Scaled[0.05]}, {
               Scaled[0.05], 
               Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]}, {
          GraphicsBox[{{{}, {}, {
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               FaceForm[
                Opacity[0.3]], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
              LineBox[CompressedData["
1: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
uv73qJDx/WMb2v2/e1tR6XgQF/MTIp7IaRcuvtKKcdzvw+TMiCh+klfywItW
TOSy0X9gQsSyFYrWuaxWPLoY/OnVXQYf6QrKbAOteM/3VbaHDiOeJiZKwKY2
/PvXb7eLGhHT9jQXN5xpwxNfecOfKRKx5YN7Rfa9Ngztio3QlyVibLRGxqWg
Nvx8Lcrt4mki7lO1lA+obkNpLMPDQkQkWojf9pluw7VS8ttNPEQ857WrRJKr
HbWdC4umWYnItT+E/82ldgzrTRGm/iKgWcrV+2kW7Sjs+sW4foaAL1+/0zaJ
acdDgnykiiECXj76ra63sR1vvSz7r7uYgONWB8817evAtKSIr/NJBEyNcvim
qNiBKQY3twr5EzD4ca2h3dMOdBkcedNpQMAxz9aWKVIHihEGQxSVCajzRcZM
aK4D+VW42egnCSiUNbp3N1cnuovctDL4k4eam7K3/L7fiYH6ftSNY3n4zb3S
8XpoJ34tlbiXgXlIOdW9B2o6UVya6/KCcx5+/uW9yMzRhT9GPcUSDfJw0COR
3n+uC5PWZp5pn89D2q/gk8qmXfhyqJN9djkXL6zKPNpS1oVZ3fc+d/fkokmQ
5x/tsS7cuU+YvSUnF7fNtqhf3tyNMoOdYv/0cpHLvSnpl1Y3ntoT2TRclIOy
X9arKF+7MfFmy9M8rxxU21ogwbGnB7fN/2vNvJ2DxEL1K/NSPag2Gv5PaC0b
kyr3kdxdenBIpEzQ51w2ujXRFT03U7BnL5FpYUs2lkuzyMTyUFCQ+lkisi8L
QS3I5fUxCqqIt9dlPc5C5sC4gfyrFFytf9kszOh/b4prJKt9KXjz+KeW5luZ
mPYh7N6lGAqWsV4SrBLIxJyf+Y4R2RScmxmrScnLQLqCuk5WMwVzGxJ6K6rT
cXuGi60VExUTnoRuF3dKR5VS6k/TnVTsdT7KsetiOl55+HLf0f1UvHLAYedm
UhpqC0VxckpRcdnA+P5hTEXzx+ZLweZUBr/GEdtepyL07LNfsKOiY8Cwq8W5
VGSf99bhd6eir9HsVHpxCnZturHtYywVr3Gd7zucnIx9MzZ+rK1UjOPY/G23
XjIeUHxxrJdGxfr1eoWgPcloqxE2Zz5KxehDvZGGbEmMOk7o2fCdir+sAqqq
m+ORu0LpQedeGjaEbhALuRCPyN505v4hGrLUD+tVFMchz6Zwd+pxGv4NtHHb
zfDVDZlb04TO0TDCwadb83E0jr3rsS25RcMCpR0/ToxGIdebp0wzhjR0KhwZ
t1GLwpCN80sLD2gYunFQ6+GpSAxXq9rqaEPDSwuyxyVmw9FP+3uqfSANjx5+
WrNyKxwrN948ohxOQ4nn7/MVm8PQWfvK2kw0DauXpT7HJYXijUaWhJw0GuY9
XVLI2RaKWwXcjZqzaci/kieuYR+CBWubn5URaai84F22NS4IHyc9f8ReTsOF
OnG1E1aBWGxTouZQzYgvsheSFQLQwqzAvhxp+F7llm7yrC8a194Lymth5Bs6
6y9T54OWfltfGnfQcFPxPyn5EG+sG9VKmeum4X83/m2oO+OJRo3eGQ79NNzh
9v4QMHsgYW3VyWmIhs9ytGtVet2wJ48nVHuEhr7C69Qvqa6YfZhO/zdKQ8Fj
incEn7ugncxF/dfvaThC/5L/09UJpwXvcnR/pOHVdzGOv/hfYYGa9t/FSRoO
Ch3i0K1+iWEXDfhmPtGwPx3uCeja4wGHOoviaRqO17PfuvfdBn/rdX2/8YWG
xp4Sn44GPsfDW5dyGmZpWPxucdX9qBU66GWHsXyloZh2z5dN7o9xR50dYf83
GlawaUUZlz1AOPlzdfM8De94vGs6P2OEzQcGnzUycNH5xiADKT38aNG9X3uB
hrJcdoN5cTeQyTjnRwUD+7Rf3mW6Lovfoi9vXGDg4tzSl7unhODgZt/zvxn4
k8x5toRnV6BpwTZzkIE3HJPeUNKnDaQF7os+DGy9xn6Ez8oQtiz5bN3OwLUs
j0QeeJqCv+yvjSaM8/unNVaVNR5BhUWGaCAj3gP1O4Sj+C2BJ2LEy4+Rz/m8
1EU+22dQKf6bQ3+OhpM4KuZNt4ZTClbd6ww+dsy+0ncGOzhiVFtjO8OIv9g1
cDXtBRSRno3iZxpePuXeP7bFEe7cPSk+OkXDd61el0Uev4buX+kVXRM0fLXP
2nSYxxVG+d7dPzZOw61n7d88l3cDUht9Oekd4z2yZxdkPHGHS/GcL+aGGeu+
37UQPcG757jhpj4aLiZ1EqOnvaCc5UhTz/9/jx17+s0iuw880k0StOqiYVxm
WvyWe35gU7ah51QzI9/tER7lXv7AdS+UX51EQ/uJAs9OQgCY18w+vlxHwyOt
SarbfgQxfNr2zXmljPu/tHU5pCEUBFjPP7BLpWH4OZbrBzXC4L+6T9QLCTT8
tR4SpvwxDNztr1+lR9EwcLrd58aGNzDAm2USFkBD6P0u/E0mElw8/D3/WdNQ
JmXP5vHmSFjVcQx8akFDzraF+euaUcCVsFRcwqjnedoj7TDzaPiVa/+wjlH/
DieKFEzDYoE6Hl/Vw+gPd+Yibo/tiwNKCivrzJn/r0/LVKXGgXGaSsCgCA3v
yzEl+RbEw9YD15XP7qPhqEjvgyONieDRmPhtbpWKoUsxamrKSeCS5ny74CsV
vW5+1KlpS4KPvwd4r05SsZnF7eHJB8nAaqxK+E2hom1eiu8R0xSg+JRFG2RT
8R2P8oeU1BQ4Ov3+ZFcCFc1NgyWK3qfAq21PL3KEU5H+dD3LTz8VNI7sneV9
TcWx3d2EaZU02PJ57Y+YOhXLv/6tHfZKg0Wruq1XL1NRlGvy0c2GNBj5odYg
w+jfSX8irnadTYd0t8/K8fxUjFk88pHMlQGk9ePPH8xS8Nuv2XrdmxmguHOR
a9coBV+v8qmpBGRAfsI7Ua9uCnpVSH5VZsoEZsqjd+MFFKQlHObVep8Jj16s
mMtbU7Bgr4ZWKncWVPwldxuaUFDJxPzn+etZsGx6fk1Fk4LRE5lE1dIsOGur
NhtyhoLsAeqZUU7ZUER//iV+tAelaod2b3qbDVvtj5xoqerBO+KxO3LGssFs
6eRAcFQPwkvLkDDZHDBtsPv4V70Hi/KlmGlmORBwQMA15UQPvrd4MwwROcB8
enXT1OYe9FyLNYufzQFVlctwtaYbnR/uXfXkygWSn5SMeWQ33pqtCwmXy4W7
6oZJIlbdaPaWYs8elAuyg+cv+h3uRmoOnFY+nAc+T1mXW926cP7aAYMtinnw
TK/z0cztLvwSJnJv4EEeiG2MdMs93YVyvp+2RmblgeFz3Wu7RjtRcJVfzrU5
D5QfG2gUF3Xi7W4fQ6vJPKjnePP2p3cnSnNzGqofIICd1MGjZuKdiKpP38pI
E2CN72dqGEsnTs/cpe7XIADL+HYpw+EOfHF55QrJjQDkzQb2484d6OhlueIU
QwBJG4WgcI0OPDrKduj4WwIk87aGfRHqQONE/VfnBhnfR9sou7W2Y1Cv0ae4
GQJY9p19Qmbou6OlBxTGfxPgg1r3w2zzdtR4EJCzYRsRqvVG7MVl29F7dOEI
0z4iTGtojxhsa8eSuI7WwaNEuJgdRzs90oa99rQoz7NEAE7HpKzcNszymY7e
fJEIV36e9SS/bEPeXdxduteI4Nbm1epxpQ27Q1zE7TSJ8Luq8O0sdxue/2OM
BvpEUHNwc/s52YqmUyxPdhoT4Svnbb+8olY0Wio/5vaQCI1bxXezuLRioVrz
x7LHRBi1y3nAotqKw0q27jmWRPhsu2OAwNuKyVy/5nWsiLAh7U7Bn6kWrC2z
3FrDwFurNJW/F7agyciM+fxTIrDu3/qTw7UFn5097f7PgghPX/ZpTam3oKAA
C86YE6HH5HH6E/4WdMpa8857QARR8vzJ7LlmTN75SkHeiAiSPqsXoquakdsu
TzdPjwgE56D9F3ya8UK246FJDSLwXlTmidJuRk6WhPWZq0RIlpR+lXm4Gdkj
X12pAiL4dm+JezzfhMHXLmprMPj71/K98VN1E3rqkO3fMvidiOi9vtenCX+Q
wv518xIhZ/64N5NWE/4T/iKdz0YEQYfD7UkCTagaVPDkGuP+DkclWqx+acT2
GsuB/H4CyD42kOtwacTxbpvAZw0EEI0+K3RNpRGHSzZc+pRHgGed5BFXrkZc
7ytwoL8iANXaSfFADhlfDdMfaJkQoP/QCXR9TkY9o2g+2ysEaPqbHpMsS0ad
jY6eSTsJ8COjh2tXFwkzBK090+bzQFNhW7BhBAlvcqZPyPfkwYDX+b1P7pLw
Jcc7kSt+eRD5dO1g9VwDipzSkOKbz4XRQ7B6gbUB53xywrMbc6GQI7fdsbse
P4krD1RG58K8oLj9yzf1mGkns/vO+VxQmVt7VCZQj2eNFpuuPcuBb39lXfwf
1KGuMl9X6rkcUPj5Je7wfC0OHX745MHGHCiKipWUt69F1ZWEnUKB2cCeeKBI
wKsGneI9rQ4FZ4FuXQDZLrEKgyrNx5xUsuCCHUu8jWAVvs22bj+5OQtmtNnE
WLIrMZJLVPelXSbESUbumHxbgaccLOQM5TPA+PuoVkNVGUZL/4uK8EiFe25i
Ddp1RXj7w0vDF/tTgeWdXKbJmSIUmgrmES5KgQ0Xg6x3ZRaiiMWwXsdAMii8
nbpxLaAAK94PhmRtTYSbQVd3COcQsPX5FrcDXAkQPSwWm+Ofh0uvbq1/5IuH
BMFdmWEWuShvJQ3n+GLhhc0+1+xT2cg8z6R1/H0ERGhGqHkS03BDCafAiaY3
cJ5jSbDHPxWD2o41SWWEgwXpxRfCoxR0L600U9cJhedvJ21fXUlETduO7t0/
fOBVztPZaZEI5N0+ZxxEuAN3i/Px4PQDZNq5eVvYQSlwv5SXZK8jj7tP7lVf
tL6JL2xlVx+80IfNSpynlS9Y4ZePU5faxV6CzSW+O4c9PXBy5EznvbEgSLwq
bspe7Y1C3698GCwLhd8/BAiWf/3QiPWXWf9aOFw8WPyOTglB3hZJXTffaPja
1qj8uzoK7999NZffngy3x3iN7TxjcIJDVrDySwpMfHJg+6AVhwSO04942dLA
UDvSPpYlCb3WbfbnK2XAwP0ZpyTdNJSeHPxHL82Ba7mqcQPheRi02j8edboQ
ilvk6GLpBNz5mTz/tbQQtJ3HlD3KifjoLO+hoHNFIJf2fovE57eYNTFICblU
DF9a2sZ1JIuQz9n+a59iKXz6qujr11aEFke0rhY1lsJPJcuNFw2LsXezzHii
fBmsd6W3nwouwdWb5vJesuUgabFeuXdDObazZuXkHayEPYkxQTdTytHnj/ut
Q1GVILRN9D/WyxXYGFvvb7q9CrzuBDZ/8atElaZzCaeXquBt1uqyoWgNGjvE
60wV1MCXZwryJkM12DKp0tu1vxYuVI8aDHnWYtXS4Vuy3rUwXmF+atdUHeq1
9F5z1q2D1O1ZPyXo9UjmRK7YSYQLOTEtw5IN+NZE8kHXoXrgH6CYiYU14JuG
A8NmN+rB1f1I38B1Ev6+fsfmXW49iN02LDuWR0IJ01GZ3IF62LnWFHOQjYzH
tjJpOG1oANcGF7NfbWSMidC/KqTVAP0q3kH9Io04urL0ctaxAV45tR9XC2jE
wlP05LRUBpa8M7f1ZhO2UIb2U+caIJHj1/StD80omnrqqbc1CQ6UdPU0K7Wg
89jFkxfCSKDbwCpdQWjB+WjxifK3JGA1YvLmdmjFbV4HP059IsF0sFCw44dW
9Le/vzGIiQwabKJ6WlfbcEastXlyLxn0SdRh9X3t6NL/d9ZbkQx8p7JePXJv
x9+/jUTabpPBXTSodnKuHSlyW9tTn5ChxjA6v0anA9fMqJd3OZGhPOOW9Fx9
B95hC+HeGkQGyyR1XssTnehz8GyrXzwZ5lrvTJ2P7MQfZ5Y+BeWQ4brjWRbN
DV1Y9NeFjb2UDDY6I6W5T7qwq+pmPyuSYXBYL3IjtQuzZ083zzcz1leXH/hK
dmPRnX/3X3SRwej2XY5zsd2oIHH8ZSKNDAG0kTu7/nWjsO85yt0BMpS1s3xj
Nu1B7Z7PV4qGyHD06Gul3W09+FPpQE/UMBnsrfWM9/FQkNeTy4CNgWUXRqlF
VynY+Mduw+ZBMjz/4fVa/RUFm21fDHj1kkFkWdLwaz4FmZ9v3+HbTYamO6MG
vh8oGKe8Z4a1lQxLLLYaBzmp2PQrnLyxngwehotr+UpU1I74s826jAwn38nt
OfOSihf/Gl/VySPD+bhLZzLzqOg6S+fLSWTcR9rw9JYxKorx1F0wCyFDbeNs
kSY7Q4cf2uoZ4kKGT0ZPf3vK0/CndMUk/1My3Fd15Ylj+GymvSKW7HfIkDXn
eCM4k4ZLJ300jJXJsIXKSTdg+NR/SRKTHOJkWPjjPMjC1ovLLf9F7+dl8PuL
w7T9SS8e2uy2KDPJeD/yORPjCb3or20ie6WFBKJDphU13b3oMdWxlJ3NWO+6
4199qg8Xd07V6j0gwYVj7qt9hn3IuXe9MVueBHlfroSmB/dhi8nrY5cPkEAm
RNdL61sfTpPWVm91NUD5uVd9Jw70Y1s68zCN8b5zdtDPZan0I5K9WSPtGuAU
m3mKfVY/GjhRfX7sbYBdECZC7utH95+bmCM/10PSng3jSRsGUGg64KBTST34
Le66++v2ACpOMwufvFoPf5OGdZ54DqBPgBbPT/Z6YDFNHr1TMICP9PYGCuQj
PDL1CU3dNIj7zrx3MKipA+8ae06JzEG8b3P54QijX8j93ivD0jWIq+ct3jUJ
14CD3nYt0aVBPOep5m4bVQ2xEdMfTS8M4ZlcPy6FZ1XQEaa++4nREJqhkq7N
cCU4jB0rLPYYwrVRmkOAXCVcvdHaNd86hEf/urYn/CuHA6IWAvSZIYx1fiNJ
1C8Hk7g4v4Wtw7g/1nYjtaQMPjfNpAQqDyNN68sxX4NSKF0cNmS7P4xUp/wO
6bclMKLkcDfJdRhTFzVNJNaKgTNqpm69fBh1Qgw2KIcWQbvrhvXx3mGMVzcX
r2opBEJEx3TMt2FMUaA9uv6nAE4kS2UcYaVjfPuSGadoAby01rRxOUjHDJ+p
cM2SfKhUvFGSIkXH9X/RLNcYulZn0uejhyqdcT5Xo9zdPMgK2JblaEtHwmOF
hZXvWfCocesnD286si65DAtLZUKVDNFMNpqORnKbfp60T4dncjcexGbR0TbW
eV2lOBXcG60uJZTSMfnZd6HK2WQQskzwBRIde/oUL5hdSgTn63prr7ro+Lk+
if9neiwwCfz1vznIiE9I9l/qxiiI632hWzlOx+5vTilzeuHwdK9oWcEnOtp/
9K4tuxMMgeSgs2fn6CgeacCz8NsbZj+NR15coKP0JqmyuFAXyLhTR6d9p+Ms
xWw9+/JzeJZVKD29RMeh83usYzquwUfmFGEnBj6S89BJ+cxD1AqX0gpbpKPi
52+c3aEO6B90tuzwNzqaX3FL4GvxwJsOma/FZuj4MA6ENyoF4I8H7PyFH+l4
vOHMccmPobig+EKVQKfjgfG+tJDkCKQ43WXhp9LxXXbV8ou7MfhlJtKdpZmO
Yky5URp7E1DYjkfFuJKOckfrEi6aJSOpMVrobB4dtwWIrBbLp6KYwAkBxzgG
HyibdJYvHcekc0Ok/OhYSqLWWC9m4HUlbm5z+/9//9z4cFMWnmGihu8xoWPj
df2cxYgcfKhcJynJuM+sIxXNYSZ5ePr4lacUSTpOED8fKhcj4h4BpT+f9tMx
s7PDnH05H1U2NtwO+jSMUV4V57jOFWJRb8ImobZhrCgZMc3mLkK3tuJCudxh
7Msxzq9eKEJdIYuGXWbDmLWTqbcjvgSDRN4LdykM46/ilJtOlqUYcl0j6MDB
YdzNVaKy/0IZEjQ0lX1oQ3hVTvKxP6Uc57TTMvJyhjDX4scd7ogKrK3sPmjj
PIT8n//ZMulU4s5QENl6dAhzCAt9TzqrUOTs76z3Pwfx7CSnfL5rNRofF+S3
bhvENnK1ZNeZGuRKCxf98GAQ+fyWI0V8atGUs/Jem8QgOh+/GXZStA77fQ43
eP4bQI2CxAtxHXWooO2nEBk+gJGJQWGX/yL+/ZD47Kf+AKom9m7OVKrHBxMD
9GuCA/hJeK91XkA9zqrl8Y/l9+PEecr27RwNyO14zlTUvh9zzZ7vUFBpwBYj
H1qWXD/GZxEOibg34DcXSq8OSz+yEXe7lFU0YGnQqU/Q0YfeAlNNH2YZ+v7S
hthHIX1o3En5kb6fhJtPyIXQtfrwl7Gv269rJGSeFuYgjvSiytCqoVwyCY15
Tx3en9iLMPQ2SrCFhIF+x5y/GvZil67jd/dZEsbo05iPHWLs32Iyo7eDjHfZ
p8NoH2iYG3DWIF2UjPuehnMup9AwufhE3J2rZPyPdcom3IiG2pKvNVxMyPjt
r0Zq+UEaHvlNStjuSMYXwXIBD8epmDV0bW09mIyWm10P5SZQsbz9iq52Khlb
DJnUvfSpWFnwdXVHERljla+vb+SlIqnCxP8okvEZ6TLn0QEKvvApPJLC0EHF
38hPf4VRMErL87wDlYzC5+5Nu6hTkLJnJrlogIzmhkKqjdsoOMf0wevaMBk/
zNc3vwnuwb/pK07yDLy/bb1dYksPMiXl2sYx9leE9DBbO3WjkeVEoQ7j73G8
6Sk2XOnCUmupXlvGeeZeuhu2MPSFlcV/lN91ZBzc7rJs+7ETwzMSlz8XMvJP
krWtvNWJIhxe48DIx2fV6+pYdwcuhdu7soSQ8Rp7wZ5FhQ4sSPLcd57Bh/P7
4hvrVe0ocEdT+jODL2dCkc5u8XZ08OAqYbtGRqUVB02ZrDY8IRBQkCtGRpf3
Iir/q+DMo6lQnDieLJX3QimRFkVUSEmPChOSSpREKi2ioqiEIp59q+xLZItr
v4t9u7a5C679LqRItiSRpZA8lZ/fn98z58yZ75n5Yz7nzBmvrU1YqPwjrkWE
if3znyWmoxtR0H7F5kcTy/3jo1jHCTei9cGCPelNDLyoyzlX/rMB3wGsrHzK
wGPhVTYnHjbgM3eBKeJZBjoqLPZpjNZjxrQgRXMnAwXOeHc/6q5D3dJgmys0
OiboF5xgn69DvbVVJ+de0HHOqvd7RSsT89/bsE+Z0dE4r6/wCoOBuxOnarQH
aXgiV0pytzYDt0r+iZlIpyF73tM6p5KOGdA/6mRDw0nrbeu+lNKQZ0+5aViL
mHjxnmyVGg2lc24W01URTbndc422iJupevW70mvxiKepUrV9DRKOtI//XOZL
IcuCJg/HarSVz3Z91luNSBrZquRahWep6wtOa1UjRbskIeoFFZkNb60zZirx
hVbRQeHWUmzbv4aWfqgCLRZnaNYjJVggU/qXkU85uu8UM+bjL0G3oBPDb5rK
0EDg4Vs1vSJUJXBHWkxKceLoVKcunYL2S6PRh6AID5QcdPbdQsabylqfGpwK
kW+T1d4xDyJelVUUrs8sQNWNz51djLKR9z1qMkUgD/U8wvarqqThY5ehcgXI
xkj9HW7v775G+VOJPwT8MlGkaXdxpG8SsrvGHd4z0pfzrBHf2vkS+0REp/nV
UzHz3xX6mgLB2HHPrcJqLBJtDOzz1nT5olC02V4JpxC8E/K15ZSXOxocHB5o
FAzAFymWpw91XcOIK9HxW/fa4toilVi9+H8h5NU7Y6nrwaBbEEMo1PAD/1i+
B7KrIuBeb4BjSkgQPBsI8TQbigZKr/ar42Ph4FncR3AmJMKBMtKv4Jo4mDed
viCYlgm9Nzocb0e8Ah///MVHcdlw7Il5f5V5IhxXmZdJCMsF+QPjCvSaFLgW
/qk9xJMCbv3HTT2fEsAtTMs2p6AIAoUfiucdSAfeYOLNcXIxHJ65MRwzlA4f
nlw0E8gtgf8OL+i8OJAJZ2VnyS6pZZAwLWGazM4Ew4ijM+TEcri8Q8Dj3p0s
yMoWnn3ysgJ80M78uH82SG1YcyPoeSVwI+r7TdfkwJi02EqSXxV8Drujsic4
B7JYwS0yHtXQ8T187IBTLlwS+pVLv1sL0sV37O37c0Ho84x26w2E94IOA0/1
iTByQPP3zF4auPxp4cktEeE8DGx5to0O1fmtAUmXSFBB0x3H/9/LTTuWjpBJ
EBM0cUVPjgF2bXePCC+QIFJRR3FNFgMEnSONRbTJoP/qb6lVCky4raQe+p87
GdTD9o2qZjOBRAub6Soiw6DjP9d85etA+vShQdIQGe7UCuiNZ9TB0/Pdkr7L
e9TPvfduWO+sB36DFfSbyhRQbGn1GUipB6mdYzYXT1Jgx8laJ4vNDeCmHz1n
Z0mB34+y+OkxDfDLrrM5w44CF82vL4mKsGAmKTVj/UMKsGbeqh0NZIHjQSty
7QMKRI6UOWr8ZkFbwoPHJbYUaF37x/f3o0Y4vUjmX3GFAmlP8tW8PzcCOUqd
STlBgcAiJ5Oyy02wq0grplmRAia1OoTY1ibYcHKSZS1Mga+M1ZPiWs3gMBwo
G7Tsp6r2yoI8uRnMNnkN6ZaQod96e2CdVAuoKHArMr3I4H3yiOlQQAu4fLz+
pvY4GRJzDbY8nm4BT5LbcDI/GY6PnnnlcqkV3Gxd15tWk+DhgqNnF60VAtw9
Rabuk6D1d7V7mHwb1HqeW+snTYIiNa5m9PM2mGcZtsowiPDav9C252sbTIa6
xfTcJIInJzDtklE7yKfVajF/58I/pnf9hcjtUGtp4vhgZy4kfTMmoDUbKiQn
o6+Qc4CvJuxXWTUbyhVus1n7c+CKR9D27jUcsLoRu9CUnw3qEs9dTNU4cOBw
Rojrnmz4MbugVX91Of79F3EsOQuWyf3gnkAONGVYymqszYL0B8y1TykcyPlv
vIPVmwHxyW+h7ScHhMpMlLW0MuCMHmu+bgsX3nmKKM3Gp8N1C+qFGODCpuET
WqunCXBpi9HSISsu0J22xsbqEuCXiU5yhg8Xwun+B6kRabC2MZjbk8qFDRyl
LxE9qaDoZa3ZUcuFB/782wqYKTDyeu3euR9cuGa4v04EkmH+X6FB8XU88PIu
P/ymKBGKxo+q9+/hwWZqxpDB9gSgSifSTXR4kF0pIUDxj4frb63Fb1/kQc2q
OPaZjy/BT8SuVsKeB/ys7PuOR2Nhx2EL02tePHAYCRK5ExoNSx9X3VSP5IFg
sfJX9+5IkGO2uSWl8WD045MbK2QioDSvd09wAQ/MNPZ2hzJCwHCCyDdXw4N5
k+OhJ48+AzEtq8gPTTyQZf1u7SMGgOsq07uanTw4KF2yi3+9L7A1vbf//YEH
hDEOtXvIA65d2HHCYJgH3vl3JAqiXeDTrNbj0S88iPPK6ZN4aA/EDmPDsQke
/JSaChzWuQqRXzbsVZrmgW3O/hef90qCyi9/88VlrTopx1KyuIzvms88NV3W
ro2/Awly9/Bz7qje/kkezHQ90amLcsYAf907oWM8ENcTs1qIdUePtssptz/x
wKSwOVHbyAcvdC7mlvfxYGGlDcuO7Y/hq13Pe3TxYJ3GraSqc8H4PcfJtqCV
B0rjVd/sOS9w/mll/Vk6D1LeR88VGoUjd+NOY/OS5Xo2qf/1wToSvWzdpjGT
B6cezc+93RaNP7cGZgfH8uBRc0G45dsY/BUq5k7248FE7397FkNeov7sH2+F
hzz4w3c5SAfiMbbEu2/uMg+eyW9iV068wn33TzeJH+fBvS9z3lNxiVhS+zH4
X0UetHxpsr2llYwG0atcVZbnY+nD18jXH1Kw7NsmIfk5LhDdDbeKaqbiSY2s
iqtvuRBXHWqtIpSGpd1iyh3lXLCO2WkgFEHAx10G5+86ccF8cGZC9Ww6NrBT
6wKMl7VqWoiScAZGGXR48RS4MNx10ZRIy8BfeVXFRksciJZS77N6lIkaIdTi
2U4OJPFX71u1PQs3bhRcqMvhAGfX/swzDVkI2XK7qp9yoFf3nbobfw5W3FWK
lJDigK/wn+Lq+BycdzAeH29mwxuLfWsuKeSi8aWl7V+us6HsSZ3Yz7xc7JUZ
+bLjWzvYq2KvjgoRsy9EjUR7toOeKK+wN5uIhK/F+7RWt4NMD5HPQZKEGwn+
V7eEtcEg1eVWrDcJt45Hx+8Xa4N6NVL8j34Smlj/F+cW1gqEGTVnlX/IuJK0
kDe/uhWI4fNfen3JKNu79g3JqwVeWHBXJNSTMUX6cX7c92Y4OLCdu/SbjFq0
w4k1Vs3gLzTgk6lIQdnP+eUybU3ACPA8IWNMwQCn8G91ak2wwszxKv8tCgoH
hYrkxzeC9McS0YEHFFzDiKAO/2RBgoBhof59Cq6ne4Xbm7HAN7aXQL9OwXvX
C5WM8xqgUolwoV+PgqgmeDSKvwG8RatP795MQd3DJG9ds3rY/HiXrNwQGS1/
pE7ZpddBHcUp2SKRjHmrx0s3TDLB7fzLjFP6ZNxlE2l87hATgr/zLrst+4+m
2EQrujHg0NjR3bZ2JNyRE8Uuo9LhrOFoS8wQEVcFi3bwz9MgmaXx0OM0Effs
6xaSP0CDxiQPRkJqLk5uURW4xakF4/BzIneHc3B44dwxb40aEG6Tumq9MQcf
xM3uYydUQfTN1VVFmlmooDsfMGhcAaVvXLVersvEH8wi2fb7ZaD2yNvwWGs6
Xnd4EV8SXAI6JPbA1D0CrvY0of5MKgLLprFvH6dS8c2kvaQQuQBWWlcOlOel
oFyXRVeqPQVeE57jfr1ElPi74GO2ay70evf96CiLRj3tyexT7mlw1VDPSEU+
HKeoD6tsRhPA2aaRqnYtEEn+TrfMeVGgTHpGOCF6GUUrFZUHW21gLumC0MFr
9nBK/Gmi69+PMV9bzY6x6AMm7sVG6eov0JsWtO55WQxs3PGKrFycjPzabky+
pQTYncczUn5DQAexCNL5xlToLr0XrMfKwg4HOb7xxmxYEYWCRoF5eP998SYJ
HxK01H/bbqZQiB8OpWxPvJYPmW9eP1FeWYzdBitVKHXFMH4/5TnlZRne0n1Q
/dd4KbiPS3KSjCoQNsLES9kKKCwVq6mfo2JnWn/RkkMl+O3eSSWHVqGnZGbV
QFM1CBe787WI1+CQx77k6n8Qbr3zpoUH1uLIXxqLv7tpMGM6cdNqGDGWX4/l
IsMA5+Mr49mxNNx8Rfvo1ftM+FdmY6yJMh2PxeVv1mTWgeYJ521D5XQ8ox3g
92xbA5Dk7K+R1Rio043SJC8WmD0OSeklMFCyvfP87KdGqG5y70vjY6LWaF91
5rlmOHIkKE7lHBPb/SDsa20LzPshGUOZmCPD0R5SaYNcuSeBMVQmys7LW4YQ
2qHUvM18kcfEromLpyaFOTB9LNXPeJkH2cmlTy3qOLB9W9P+ny1M5Ev9oz/m
wYU0mYmPzkQm6n7btWmFGg/ui3oeNndmoqKLVM/EKA+I3U2p+nuYSBGwwaWE
DtiSCuKrlvlrIiNVxf1UJywcc6C6mzJwZ8+nydcznVDaWXs/o5GOFlLwMDf+
DSwRueIZu+k4lSxqwVHvAgO6UQrdiYZSf/XsPcPpgp7F+NyOC4hGAg5yZlZv
oWvd4GmrhBp0Dxo7ID/2Fr6YSa7NoFZhfULMqiW7d5CarJphU0JFvw72KfmB
d2CaXbO1OqQcb/e74LhhN7Dedxxer1+KlkJOvkRyN8Q7jHlsHijCLa6dO1v4
egDNK2fZNwowfmYmv/50D2zaMHy7P4aE2vqWibJBPUBbyZIePpaFPbI2dj5l
PdC9Rv62YFsqit2+IBfxrgdO/xKc7fN5iTlZh4MlJnqA0+i1GaICEc//0///
/93DfoNhG0I/V/8P64eJ9Q==
               "]]}}}, {
           PlotRange -> {{-0.7, 0.7}, {-0.5, 0.5}}, Axes -> True, Ticks -> 
            None, FrameTicks -> None, ImageSize -> 190, DisplayFunction -> 
            Identity, Axes -> {True, True}, AxesLabel -> {None, None}, 
            AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
            Frame -> {{True, True}, {True, True}}, 
            FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Medium, 
            FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], Method -> {"ScalingFunctions" -> None}, 
            PlotLabel -> FormBox[
              StyleBox["\"a/b=1.45\"", 16, StripOnInput -> False], 
              TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> 
            True, PlotRangePadding -> {{
               Scaled[0.05], 
               Scaled[0.05]}, {
               Scaled[0.05], 
               Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]}, {
          GraphicsBox[{{{}, {}, {
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               FaceForm[
                Opacity[0.3]], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
              LineBox[CompressedData["
1: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
jO8/WRK+z5LsvvSgDwVeHzj+nykJT1arH41g6UNVd/YTQoEkHF1LTTZP6MUZ
G8bvHLkknLLcn9Ip2Ysv7CuLtrWR8PlgjkZnRw/yymSf3fKBhKb/tRbaG/ag
43alCvZFEgo8TLVsX+jGOSOvgbMsdcgi2scwRufV2iJy0W7sdTjwkVJNONSN
LsDwZIqnDoNYvycalnVhkWfslecCdZjZ1uLySakLDXl+iukeqUNhbZcxFfo8
rDoxU/KYvj4n5sCTZN+JrkX3k8fp5wXavG5PM3WiLqcFRwLd/vb//hhKxHag
OoOgUx39fgO1d5PeJztQcLfvvetLJJzbEFX51NCODT6+qD5Bf++cAElXqx0P
/6tLo3WSUNwp7dTCtzZM+c1j8KOIhGYO6frlnm1I08mxSQwjoa1UTlPavjak
aLm4/HpAQulq5ZyOnFbkja/SWlah71dp4TkJrWiuOPqvUoCE1blJCxRKC7Io
j7orLtdi8+Gr/W3WLSjuWbo7rb0WUxw7uNg2taD16vvNk1G1WKHovSk7uhnr
G3ZU7zWpRa23kwEpYs3IbDqeI3uiFltfPLNq1m9CV7ikX1hSgw7Peev+LDai
WGGO+p6HNej7sz8nOaQRXySVvk0+WYMyu2QPGTY04GIAaD9JrMZdjrP7OU/W
o6rBb7f7RlUYXWcj/ygKceyV46AIWxUm7LbwHRusw4fcO3a+JlRizPlrBWK3
SBjKYmL2clMlcsVEpPjpV+P+fWZ/9DyJqFr8IyQ4rQorOVV2ph8g4q8sQafP
3yqRb8Nk6EcJARnudEXEeVRg104G28axcuRg7LELLivH7Y47VQJ5yrByYPlO
GFM5XuzoYxHNLkUQsGFkvlOGa3mbP5yQKMVj6+ZzVxhKMWmvaIY5vX+0yx8L
/91eiBl/HAu/xhfiLpuLaPgtHSNSbTKm1TKx/OKNb9dq09D7hLYow/kMVAgM
f6sSloo79OeSNx1NR0UGt3GfS8movCbry7qQgo9MJGoGkqLx9ssE8t/fcdj3
tHX266NIFPi4/eWTwhgs5qekHbkZgYkqphfIZlH4x0Xr2jaJEJyXqXIN7ApD
5VuKqSH9bhipsull+IwXXrQI/eT31RFfbXVJPH//CZ3tsY/bi1tiZ6Tfi4yv
tqh39XTZ59/K8OeNYunDazfhyqfzWwrMveDh3nqjCjlfKBPaeLPtQyR8KcpM
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
pV7KsbAJRBe2ML/8f79ZW3LXpyDCnOZ/I70sBw==
               "]]}}}, {
           PlotRange -> {{-0.7, 0.7}, {-0.5, 0.5}}, Axes -> True, Ticks -> 
            None, FrameTicks -> None, ImageSize -> 190, DisplayFunction -> 
            Identity, Axes -> {True, True}, AxesLabel -> {None, None}, 
            AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
            Frame -> {{True, True}, {True, True}}, 
            FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Medium, 
            FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], Method -> {"ScalingFunctions" -> None}, 
            PlotLabel -> FormBox[
              StyleBox["\"a/b=1.50\"", 16, StripOnInput -> False], 
              TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> 
            True, PlotRangePadding -> {{
               Scaled[0.05], 
               Scaled[0.05]}, {
               Scaled[0.05], 
               Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]}, {
          GraphicsBox[{{{}, {}, {
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               FaceForm[
                Opacity[0.3]], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
              LineBox[CompressedData["
1:eJwUWHc8lf8Xr9AwEi0jZYQiCkkyTlkpRRlNkayUshKFyp6ZGSF7k33vNe69
x97j3mvPq2+lFJVEJern99fzer/O5znPmZ/zPo/ILQdD6w3r1q3r2Lxu3f+f
ju8aN1/5woAZ4oHdxR6sanhTRn/lPQOcJaEuh90HomKIsNrFgKmRlVuGC1GQ
dD+fFpfJgCezClMsFYkwHr7lkfQdBowvyR/giU+HGkUefg0RBmTHudmQcrOh
+Axd1LedDqVccmJPvPPBIOa3OMGSDuP/dD2PC74G6nryZNU3GrANf5QwOFYK
ewPqP/s50aBlMiv2CKkMxiws0jR6esF/avMzIa4K8Ct506md3QMjZjGHPRQr
4XxBceP5O93AGdh567gsAcKIityv9nXBYDAxo3ORACTCqfMPWzug/iuP4OFQ
Ioxdr5/eYdUOz1fSL47OEcHaTyA+52crCDp1C9cIkcD/fMqYtl8L/KQqmUoK
kqDjeOnFRY5mkIho9R2fJkKtrs2G5MhGWPK48/aTNxGeH2OP2bCjARrufnxQ
MkeAC8Rd5+jxdbBzq2xPqzQBaBY72oRUqDBE9762Sb0SipeU5uF8LfDcH992
T6IC9lW2qIffrgJaNqWb/0MZ/Io+Pnc2ggBnGM13T/uUgpm5s7pbYzm4PGFe
8f7xGjgWtXcObiwF5tLlhYqMAuiQfi88SSgA15JBlsHtuaBaFrlhv0823Ocr
Mo4+lwmsk92qhAdpMKpBVObITAGpsLiX8/qhoHtsaoOqbigcuDd59tMuZ7Di
PzdQVe4Mzi7FtqG8Trhj0Dn1sboz2u99OVJrH4yqeYEzxTxhmFu7oF3U8wKd
ZlIkb5Hi8U+1f43M82TMuWt68197GipsI/F/+5WO1rr9Lu86s7GX43hj2VAe
fjIYvxG5WoKRFxu7GKxFyEaJ/VEYU479jmGPHmwsQfmDS5zXDxFw5KNpVOKX
UrQ1/JYf1krChHVfLd9qlWNAz5lJTqsazD8c9M01oAKHeUPGa9dRMFzho2ZN
RSUmqSwfWDMDP0de27W9j4gNJzrEp2wacOg3twB3Cwm/q67ylpU2Yshi8vaQ
nCp8nZZgYPirCSXZjKZXH1QjOXFPiK1aC7J1MVPfy9Xgd66bEUlPW/EEv840
eaIGhUxq3qZS23Aph+vxP/datK9LNj+03I47f7l2HGAlY6DffO9fuU4MtMp9
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
LWaLEkqxxdjybNezF/ZV2BbwQHlrTzGaCSzeOl9XhQb5DN7N20pwo7FveJq7
Gv/9qpJStypBQdWfiUNZ1ej8JMvb8Vwp7iBcTOQarsHi6cm5H8FluNCXdmry
dD3+VRIMiP5chl8SZ+x9vOpxnxP7F7mZMtx9rc7wZ089nu9nbFSVJWFt4Vvx
w7YNeP9XVOlaCwk3PQzrrSY0oglr+rc7CyR8djhoe9DmJlw+S1sr3FmOUSb6
uSKaTWjXnxr+SqMch3+uMHnPNWH60QVvmZpyhN8tL2RFWtDJYdm0mlaOUy0v
nmy8bMF/3E4p+r/oelqsuNuZ3IIv/TzrasTIeFxhSSdPqxU7rrU/CqHHQak9
V9QgvhWDdpwecbxD1/M6jk2131sRtkvnBDqT8eZi6RmKWxvy/mzNrAkko/Fu
plbVljYk1nk08SSTsV7EZrF+WzvybbeP2FVHxvBlWmqMVjtuaH3tqe0h48Tr
QBUN+3aMfF6jHv2VjKJBdvwjMe344V/EApmBgva7t8p5TrXj9s9bP2xjpyDr
yr6dsds60OvVtKYHHwVn08X3BEp14MLniCUxYQruMA0T0L/VgSIz0fv+SVCw
jyg3xGjbgQ/GvFwZz1DwcfENEZeIDhyLY26QUaBghoMxuZvcgccJPyITlCiY
FWz+avNYB36el4q9oEpBqZqoHWxbqBh5Z9qKV5OC15tfG00eomLTMb1yUW0K
bjz5fC5SmYq6Z7ZwPb9PQU/bZyaHn1JRgNN7x5I+BbvEs4g+H6jYSqq7XviA
gt9ed21U51Fx/srXe4UPKRgS83BXD5WK+R8VW5eNKWhSt1JP/o+KpOOu0jYm
FCT0wLLD7k68YBvBf56ODW+ymXHKdOJFn3bmq/T1j40OMTnodCKEkd3CjCh4
efuraJJ9J6oIa+88aUhBMZP67dTITqw0WD7Fo0dB3GCQpJR3Imea2pNLOhT8
Y/5tyHm4E40YAo5RblPwRxes7v7XiY2Zt357qVPwUVm2tvv+LoxuS7kSq0xB
5dpKWrVCF/Ic4vVmvURBbsr8s0H9LjxFKjxWLUfBm36uX2rfdKFGEXdG5ykK
CppF7feO6UK7I7pPZI7S47Pr7Ja9lC5UX1TqWT5IwSXx3Taew13YpTilbUWP
b925GL9ugW6MML1E2rSZjpPNHDJlupGmm/iGYY2MblOnZe5rdWORclLYnVEy
+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
pr9lVwGMQMVYlQIJL5MWGcIOFEIj6Z4GC6EcBcYvuWbkF8KW4NH9pS/IqHju
Y7P7aiEY5ZoK7pKg4PM0r7/9MgQQS+uUif3/c5w9ff2dRQToJrnG6p38jFdb
9nA8XCBA86WjR7ICPuPdk6nnrhwpgofVrTWnFz+jPE1IxVKvCMSdEgb/u1mB
31bLLo76FwGx+WDceF4FvncbUXDHIsjw9t37l7MSr1A4rTW/F8GbW7udAjoq
0eByGqO6PBHeLxr7bTpZhZrBEk+ePCCCjtbxbNfAKiz/rCzp40aEM7Ic61uX
q9C60Fk+LY4ICwmMz0NuVSOZ7UpeGYkI+c8UK/YSqrEr2qOjpJMI62sr3iG7
atCXRfhgxDQRJDMOCf+1qsE3xBztO7+JoDEWUKXUXYNbeHnNvrIWg7JS2hNz
et9gUnf2g13FIDLh/9U4uBYlOkXk9PYWg46ETK/YSi1Ky9+TPnuwGLLOv8nJ
v12H/+yCvWqFiqH3hVHmcmEdbrX/6L+FblftUx+Z5KrH2w8dNs0KFMPRpzZH
3CzqMeQYTFlyFwPtk8z58rZ69LVuSwtnKYbGiaxo32MNyHnRZ4f2GhG0aqUT
J30a0Fw7SSX1KxFkoo/YVE01YIB/3LJnGxGMb0Vw811uxFsp7VzzRUQQb5K8
MRDbiLPEYWFaGBFKVzkaN343YmT0nT23XhNB+MoiyxutJhxRvvjo2m0iWLTL
6arkNuHo98K1cgkikA57bunc0YwbupfZv64XgY7y28YXL5pRmrO2dbaxCMoF
tJ25WpvRr96rpv1TEXi436nOOtqCr389vxJ0twjI6p/Zj79twbExgt1Z/iJQ
uqaZ7Dfegu4Uuwfl3QQQcuwSigppxamBd2h7kQBfvJ2+SM614h316CLiUiFY
bHuQYXC5DQsyOJ5OxxTCO37d/YLhbTh8x8ST+2oh7BEsaNL73oY7s6gJMFsA
hi7Ou5kF2/GVYdwTa98CiL57VJv9ajsOx+u+pRwuADhv1PA+qB0D/c52Eul9
deHYqzsrpfQ5+0Su6M3XPCi4o5z7fKQdy67uf+j7Kg/+Gr5jWdzUgeo7ZH/1
/swFl7qCcCuRDiyZWPZ8sDkXbhyqSV9U6sAhpntne1hy4OTagrfhow4ck75I
l4TZ8Cto8vxKYgeezUrMOP09A54fEdq6vaIDNSi87GPd6aA1IRK2OtSBN/h/
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
NdGy1XqODtPkA+LlwTw6/wORWOti
               "]]}}}, {
           PlotRange -> {{-0.7, 0.7}, {-0.5, 0.5}}, Axes -> True, Ticks -> 
            None, FrameTicks -> None, ImageSize -> 190, DisplayFunction -> 
            Identity, Axes -> {True, True}, AxesLabel -> {None, None}, 
            AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
            Frame -> {{True, True}, {True, True}}, 
            FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Medium, 
            FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], Method -> {"ScalingFunctions" -> None}, 
            PlotLabel -> FormBox[
              StyleBox["\"a/b=1.55\"", 16, StripOnInput -> False], 
              TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> 
            True, PlotRangePadding -> {{
               Scaled[0.05], 
               Scaled[0.05]}, {
               Scaled[0.05], 
               Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]}}, 
        AutoDelete -> False, 
        GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
      TraditionalForm]], {3.5, 0.4}, Background -> Directive[
      GrayLevel[1], 
      Opacity[0.8]]],
  ImageSize->800,
  PlotLabel->FormBox[
    StyleBox["\"a=1.25, t=5.0\[Degree]\"", 20, StripOnInput -> False], 
    TraditionalForm],
  PlotRange->All]], "Output",
 CellChangeTimes->{{3.787739106769293*^9, 3.7877393078708463`*^9}, 
   3.787739338946703*^9, 3.7877452870963244`*^9, {3.7877453172047253`*^9, 
   3.7877453757579455`*^9}, 3.7897221416205597`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"export3", "[", 
  RowBox[{"\"\<0051_x26\>\"", ",", "x26plot"}], "]"}]], "Input",
 CellChangeTimes->{{3.7877393201718793`*^9, 3.787739343375102*^9}, {
  3.787739398967622*^9, 3.7877394021594725`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["X59", "Subsubsection",
 CellChangeTimes->{{3.787587743480854*^9, 3.7875877470453176`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "plotX59"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "plotX59"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"drX4", "\[Rule]", "False"}], ",", 
     RowBox[{"deg1", "\[Rule]", "20."}], ",", 
     RowBox[{"x59displ", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1.5"}]}], "}"}]}], ",", 
     RowBox[{"lgt", "\[Rule]", ".22"}], ",", 
     RowBox[{"degStep", "\[Rule]", ".1"}], ",", 
     RowBox[{"degMax", "\[Rule]", "180."}], ",", 
     RowBox[{"thickness", "\[Rule]", "Large"}], ",", 
     RowBox[{"drPs", "\[Rule]", "True"}]}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"plotX59", "[", 
    RowBox[{"a_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ons", ",", "o1", ",", "n1", ",", "s1", ",", "x59", ",", "x4", ",", 
       RowBox[{"deg0", "=", "0.1"}], ",", "degs", ",", "poly1", ",", "ell", 
       ",", "gr", ",", "grads1", ",", 
       RowBox[{"clr", "=", "Blue"}], ",", ",", 
       RowBox[{"pclr", "=", 
        RowBox[{"\"\<x59\>\"", "/.", "ptClrs"}]}], ",", "ps", ",", 
       RowBox[{"fontSize", "=", "20"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"degs", "=", 
       RowBox[{".01", "+", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"OptionValue", "@", "degMax"}], "-", 
           RowBox[{"OptionValue", "@", "degStep"}]}], ",", 
          RowBox[{"OptionValue", "@", "degStep"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ell", "=", 
       RowBox[{"plotEll", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "@", 
            RowBox[{"OptionValue", "@", "thickness"}]}], ",", "Black"}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ons", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"orbitNormals", "[", 
          RowBox[{"a", ",", 
           RowBox[{"toRad", "@", "#"}]}], "]"}], "&"}], "/@", "degs"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"o1", ",", "n1", ",", "s1"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", 
         RowBox[{"toRad", "@", 
          RowBox[{"OptionValue", "@", "deg1"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x59", "=", 
       RowBox[{"getX59Trilin", "[", 
        RowBox[{"o1", ",", "s1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x4", "=", 
       RowBox[{"getOrthocenterTrilin", "[", 
        RowBox[{"o1", ",", "s1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ps", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"getX59Trilin", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"First", "/@", "ons"}], ",", 
           RowBox[{"Third", "/@", "ons"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"grads1", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"ellGrad", "[", 
          RowBox[{"a", ",", 
           RowBox[{"Sequence", "@@", "#"}]}], "]"}], "&"}], "/@", "poly1"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FaceForm", "@", "None"}], ",", 
          RowBox[{"PointSize", "@", "Large"}], ",", 
          RowBox[{"Thickness", "@", 
           RowBox[{"OptionValue", "@", "thickness"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Thickness", "@", 
                RowBox[{"OptionValue", "@", "thickness"}]}], ",", "clr"}], 
              "}"}]}], ",", 
            RowBox[{"Polygon", "@", "o1"}], ",", 
            RowBox[{"Point", "@", "o1"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"OptionValue", "@", "drPs"}], ",", 
              RowBox[{"ellLabelPoints", "[", 
               RowBox[{"a", ",", "o1", ",", "\"\<P\>\"", ",", "fontSize", ",", 
                RowBox[{"OptionValue", "@", "lgt"}]}], "]"}], ",", 
              RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Dashed", ",", "pclr", ",", "Thick", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Line", "@", 
                 RowBox[{"{", 
                  RowBox[{"#", ",", "p1"}], "}"}]}], "&"}], "/@", "o1"}]}], 
             "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", "Gray", ",", "Thick", ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "a"}], ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"a", ",", "0"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], 
           RowBox[{"(*", 
            RowBox[{",", 
             RowBox[{"Point", "@", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}]}], "*)"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"pclr", ",", 
            RowBox[{"Line", "@", "ps"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"pclr", ",", 
            RowBox[{"Point", "@", "x59"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(X\), \(59\)]\)\>\"", ",", 
                "fontSize"}], "]"}], ",", "x59", ",", 
              RowBox[{"OptionValue", "@", "x59displ"}]}], 
             RowBox[{"(*", 
              RowBox[{",", 
               RowBox[{"Background", "\[Rule]", 
                RowBox[{"Directive", "[", 
                 RowBox[{
                  RowBox[{"Opacity", "@", ".66"}], ",", "White"}], "]"}]}]}], 
              "*)"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drX4"}], ",", 
            RowBox[{"{", 
             RowBox[{"Purple", ",", 
              RowBox[{"Point", "@", "x4"}], ",", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(X\), \(4\)]\)\>\"", ",", 
                  "fontSize"}], "]"}], ",", "x4", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"-", "1.25"}]}], "}"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ell", ",", "gr"}], "}"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"\"\<a/b=\>\"", "<>", 
            RowBox[{"nfn", "[", 
             RowBox[{"a", ",", "2"}], "]"}], "<>", "\"\<, t=\>\"", "<>", 
            RowBox[{"nfn", "[", 
             RowBox[{
              RowBox[{"OptionValue", "@", "deg1"}], ",", "1"}], "]"}], "<>", 
            "\"\<\[Degree]\>\""}], ",", "20"}], "]"}]}]}], "]"}]}]}], "]"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.786344111805152*^9, 3.7863441257049065`*^9}, {
  3.786344308688177*^9, 3.786344314928455*^9}, {3.7876509114436164`*^9, 
  3.787650934127784*^9}, {3.78765105251367*^9, 3.7876510956337953`*^9}, {
  3.787651145305481*^9, 3.787651246778925*^9}, {3.78765142229585*^9, 
  3.7876514948619947`*^9}, {3.7876527623946753`*^9, 3.7876528072727976`*^9}, {
  3.787652951864583*^9, 3.7876529646887016`*^9}, {3.787653556385378*^9, 
  3.7876535566004515`*^9}, {3.7877323846298995`*^9, 3.78773239998905*^9}, {
  3.787732579203128*^9, 3.787732594466483*^9}, {3.787847139163178*^9, 
  3.7878471398263764`*^9}, {3.7878481944596386`*^9, 3.7878482083608174`*^9}, {
  3.787848260141283*^9, 3.787848285052678*^9}, {3.7900627161986923`*^9, 
  3.7900627167889624`*^9}, {3.7900628452878056`*^9, 3.790063110002401*^9}, {
  3.7900632182248964`*^9, 3.7900632356659937`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ellPerimeterRamanujan", "[", 
  RowBox[{"1.5", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.787995340539529*^9, 3.7879953710894876`*^9}}],

Cell[BoxData["7.9327187877819805`"], "Output",
 CellChangeTimes->{{3.787995345502226*^9, 3.7879953717188272`*^9}, 
   3.789722143401743*^9, 3.790062645455268*^9, 3.79006271825644*^9, {
   3.7900628671013265`*^9, 3.7900629031086273`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x59Plot", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "as", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Show", "[", 
          RowBox[{
           RowBox[{"plotX59", "[", 
            RowBox[{"#1", ",", 
             RowBox[{"deg1", "\[Rule]", "#3"}], ",", 
             RowBox[{"x59displ", "\[Rule]", "#2"}], ",", 
             RowBox[{"lgt", "\[Rule]", ".15"}]}], "]"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.4"}], ",", "1.4"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.3"}], ",", "1.1"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1.001", ",", "1.25"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1.5", ",", 
              RowBox[{"-", ".5"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.5", ",", "0"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"11", ",", "11"}], "}"}]}], "}"}]}], "]"}], "}"}], "]"}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.786270869306602*^9, 3.786271021330514*^9}, {
   3.786271202749304*^9, 3.7862713108030243`*^9}, {3.7862714025326295`*^9, 
   3.786271403555893*^9}, 3.786276959107125*^9, {3.7862770273780947`*^9, 
   3.7862770524893413`*^9}, {3.7862771062171555`*^9, 
   3.7862771658334455`*^9}, {3.7863441327430677`*^9, 3.786344160221531*^9}, {
   3.786344318549531*^9, 3.786344321628964*^9}, {3.7863444844142995`*^9, 
   3.786344731678322*^9}, {3.7876511045581274`*^9, 3.7876511061257067`*^9}, {
   3.787651253813544*^9, 3.7876512809018116`*^9}, {3.787651419406392*^9, 
   3.787651420356679*^9}, {3.7876528125037465`*^9, 3.7876528421409535`*^9}, {
   3.787847136528211*^9, 3.7878473312100625`*^9}, {3.787847479784651*^9, 
   3.787847496303465*^9}, 3.787847561345546*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.001, 1.}]}, {
        {RGBColor[0, 0, 1], Thickness[Large]}, 
        {PointSize[Large], FaceForm[None], 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{0.9826088106311115, 
           0.19080899537654478`}, {-0.3261209256604316, -0.9454403909940616}, \
{-0.6577455981274614, 0.7538134321754963}}], 
          PointBox[{{0.9826088106311115, 
           0.19080899537654478`}, {-0.3261209256604316, -0.9454403909940616}, \
{-0.6577455981274614, 0.7538134321754963}}], {InsetBox[
            StyleBox[
             SubscriptBox["\<\"P\"\>", "1"],
             StripOnInput->False,
             
             FontSize->
              20], {1.1298475248877868`, 0.21945792247759177`}, {0, 0}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"P\"\>", "2"],
             StripOnInput->False,
             
             FontSize->
              20], {-0.37494654977387604`, -1.0872714821903597`}, {0, 0}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"P\"\>", "3"],
             StripOnInput->False,
             
             FontSize->
              20], {-0.7562528872339737, 0.8669342259885086}, {0, 0}]}}, 
         {GrayLevel[0.5], Dashing[{Small, Small}], 
          LineBox[{{-1.001, 0}, {1.001, 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
         {RGBColor[1., 0.27058823529411763`, 0], Thickness[Large], 
          LineBox[CompressedData["
1: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
uuKH8D/INVAZ
           "]]}, 
         {RGBColor[1., 0.27058823529411763`, 0], 
          PointBox[{0.5048522443887892, -0.03553319786747835}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(59\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {0.5048522443887892, -0.03553319786747835}, {1.5, -0.5}]}, \
{}}}},
      ImageSize->400,
      PlotLabel->FormBox[
        StyleBox["\"a/b=1.00, t=11.0\[Degree]\"", 20, StripOnInput -> False], 
        TraditionalForm],
      PlotRange->{{-1.4, 1.4}, {-1.3, 1.1}}], 
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.25, 1.}]}, {
        {RGBColor[0, 0, 1], Thickness[Large]}, 
        {PointSize[Large], FaceForm[None], 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{1.22703397930958, 
           0.19080899537654478`}, {-0.39341173930876083`, \
-0.9491814421697229}, {-1.0774252881233641`, 0.5070099003450161}}], 
          PointBox[{{1.22703397930958, 
           0.19080899537654478`}, {-0.39341173930876083`, \
-0.9491814421697229}, {-1.0774252881233641`, 0.5070099003450161}}], {InsetBox[
            StyleBox[
             SubscriptBox["\<\"P\"\>", "1"],
             StripOnInput->False,
             
             FontSize->
              20], {1.3727930814506404`, 0.22622486954381432`}, {0, 0}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"P\"\>", "2"],
             StripOnInput->False,
             
             FontSize->
              20], {-0.4318712167543783, -1.0941671952443268`}, {0, 0}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"P\"\>", "3"],
             StripOnInput->False,
             
             FontSize->
              20], {-1.1982740913292511`, 0.595866902115866}, {0, 0}]}}, 
         {GrayLevel[0.5], Dashing[{Small, Small}], 
          LineBox[{{-1.25, 0}, {1.25, 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
         {RGBColor[1., 0.27058823529411763`, 0], Thickness[Large], 
          LineBox[CompressedData["
1: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
kpPDtUoxOYXupdc4iEF2RgWL3aV4v3F9sT73EMo3hD688LAMWTkmfjSpDeHy
Pskso6Iy9FdRCIkJG8KlVg/FgpPlaFrXxT84OISXO5rjbrqUY9ZJK5r1iWEM
d/7+eN9gOZYskGPePh/GykPHVtQvkfCtod6ViphhZHbapnDSnoSLeooB5hPD
uJ7Hhu0rhYTqrxR6zAVGkPmqw1jxVjJuuioGZIMRrJf4FlAhScYFFXMWw+gR
PFySUEl+R8bmmsuxyiMjKL7p0LH2n2Sk9e+K9Do6ir8bxS/uqWHIz4DPLs1R
LMmYsAmdJmP1Cuf59uBRHJm6ZezKRsH4XW/kB1tG8bBJ36P5YxT0bBJuPLtz
DOOdBg1XLlHQfINfXvbdMbxjaEvKkaQg52T6kY/2Y6gW5/Lszj0Kxh7bes4p
dwwj2C9zl8pS0HKk5kTp7Bi25HL73mLIOSY8NUX5x7EyildnjHE+cDhMevTp
OBqIzYyWi1AwPCRQg+IzjktPeVWXT1Bw7uPAlV7SOK7vbaZ838noO/SLNnzL
4/i5Uoaz5i8Zb83wT4SdmUDVkl9T39sZ8XifK3VXYwLdq3Obz2aS8bNc11te
zwlMP7GT19eTjCxyG56fLJzAcvfR2TFdMjKfx/2qxATyp2uJ3BYhI1LuRWUf
mMQFo6K40o1kFPvKLyB5bxJ/6+a0fagh4Q1SZuv8u0mcu9i+y9mXhEzudTON
kZNY/GXFYvkxCePz9CntNZM4bTmyMMNFQkrMqYIti5OYn1Z782N9OT6XOSmm
zjuFgbSD3SWM7yPmk1FZ+90pPC55eFuNWDlahSd3fzCdwurquv7M6TL0LNt4
8HbgFI59y7ge8L0MRRNMBS7iFNafKSt1vFeGjpCeemdoCle/yY58nSvFRaHB
t/bMVHw5t9jRH1SKqiFHrg+comJ0UsOPD2Kl+MBUqVNXjoqmbHLbrXtLUK1j
QIjdhIrq957/XrAuwVrl+6c7Pam49qp0cCNPCZKKOYqqkqjYP9TUlJFajHWE
xMxALRU9rLeZH71XjHZHFMgHaFQ8fXOHnUZfEf7mbFC13kbDldRVGxuzIqSl
n6tcd5KGj1qjS/w3FmGQkTnESdLw1HDv8zyfQgyfY5u0eEpDa6JIad2RQryI
n7a+ek9DF0/uT3PKiKnVGr3OXjSsejH0xNyoAA+vx2xSDA1fyBMY9yEf/dtl
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
8Y+O3SLfBhpz9eF/L4aRLQ==
           "]]}, 
         {RGBColor[1., 0.27058823529411763`, 0], 
          PointBox[{-0.15053952856983197`, -0.6016444101152502}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(59\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {-0.15053952856983197`, -0.6016444101152502}, {1.5, 0}]}, \
{}}}},
      ImageSize->400,
      PlotLabel->FormBox[
        StyleBox["\"a/b=1.25, t=11.0\[Degree]\"", 20, StripOnInput -> False], 
        TraditionalForm],
      PlotRange->{{-1.4, 1.4}, {-1.3, 1.1}}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.786344601505686*^9, 3.786344661769661*^9}, {
   3.786344693890256*^9, 3.7863447353804893`*^9}, {3.786522354517779*^9, 
   3.786522383798545*^9}, 3.7876505755435343`*^9, 3.787650938898659*^9, {
   3.787651090079558*^9, 3.7876511100408964`*^9}, 3.7876512115405593`*^9, {
   3.787651251263604*^9, 3.7876512845933*^9}, 3.7876514367708526`*^9, {
   3.7876514858677945`*^9, 3.787651499897991*^9}, 3.7876527786847024`*^9, {
   3.787652812464437*^9, 3.7876528458585553`*^9}, 3.7876529788371277`*^9, 
   3.787653562935667*^9, {3.7878471338394194`*^9, 3.787847209189333*^9}, {
   3.787847263635519*^9, 3.787847333499937*^9}, {3.7878474859441442`*^9, 
   3.78784749861528*^9}, 3.7878475637840233`*^9, 3.7878482119023438`*^9, {
   3.787848271508876*^9, 3.7878482893791075`*^9}, 3.7897221456765313`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{"\"\<0050_x59_locus\>\"", ",", "x59Plot"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.78627145086981*^9, 3.7862714656148043`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x59crossPlot", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], "&"}], "/@", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"plotX59", "[", 
        RowBox[{"1.5", ",", 
         RowBox[{"deg1", "->", "29.085"}], ",", 
         RowBox[{"drX4", "\[Rule]", "True"}], ",", 
         RowBox[{"x59displ", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1.5"}]}], "}"}]}], ",", 
         RowBox[{"lgt", "\[Rule]", ".15"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"plotX59", "[", 
        RowBox[{"1.58005", ",", 
         RowBox[{"deg1", "\[Rule]", "27.9211"}], ",", 
         RowBox[{"drX4", "\[Rule]", "True"}]}], "]"}]}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7876526245149918`*^9, 3.7876526798117228`*^9}, {
  3.7876528662510424`*^9, 3.7876529418193693`*^9}, {3.7876529934434557`*^9, 
  3.7876530346596217`*^9}, {3.787847525638995*^9, 3.787847529622402*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
        {RGBColor[0, 0, 1], Thickness[Large]}, 
        {PointSize[Large], FaceForm[None], 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{1.3108492730927532`, 0.4861066107265866}, {
           0.869449353809201, -0.8148777198412487}, {-1.496272798665225, 
           0.07045159717307492}}], 
          PointBox[{{1.3108492730927532`, 0.4861066107265866}, {
           0.869449353809201, -0.8148777198412487}, {-1.496272798665225, 
           0.07045159717307492}}], {InsetBox[
            StyleBox[
             SubscriptBox["\<\"P\"\>", "1"],
             StripOnInput->False,
             
             FontSize->
              20], {1.4260234396064653`, 0.5822050569568549}, {0, 0}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"P\"\>", "2"],
             StripOnInput->False,
             
             FontSize->
              20], {0.9337203353573518, -0.9504108926471609}, {0, 0}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"P\"\>", "3"],
             StripOnInput->False,
             
             FontSize->
              20], {-1.6454380621828715`, 0.08625426023064357}, {0, 0}]}}, 
         {GrayLevel[0.5], Dashing[{Small, Small}], 
          LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
         {RGBColor[1., 0.27058823529411763`, 0], Thickness[Large], 
          LineBox[CompressedData["
1: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
u0yZVilrxhcG+ecNhahQLs2yvrypBX/SgrcX8VPB6so7r0SxFtxr0X56EycV
XE4VRkhptODZ2dcF0puoYKgU3xRo24Jf1FPD1P5SICfge3RjYAuKTxoSLsxQ
gBLnHd3/qwUvMX29d3SUAoe3aOrWE1uQN8bh0lI3BSJI2up+qy0oUjXrlUSg
gK3xZZZD+wioZCe4R6WaAsIRYuwh5wjIWby2qaqQAuNFkqMkYwL+YIhSksyg
AG/82K4FDwI2tm8nuCbS59/Zc2QogYBqCroZOV8oYPm++3NCDQH1MtyHOz9Q
oKz70aziJAFvXw1/0PuGAkoXzX9+29aKxqS00/UvKOAc4n5zVLwVjw4334yy
o4B7WI7ZkmYr1kxtLr99nwL3XsuZEG1akenR/RcM+hT4IGpa8y6gFZ/xrbm8
u0KBAulaXq60VpQp7mn4p0w/v71wrWlLKx78JmCqe5ruj/9o3/GeaUXhD3Xn
Q49RQP4/8xvOXG3I0sb0sGQ/BRpV/Q6ek2rDGY9uYvMOCryo4L5IuNqGa19s
fKtYKUDdaSwnZduGF3iIHnGr03R/xmJ3278N6zdOlVrQpuHijc/3dX60oUbN
t3N8Q9NQE9keINBAX++MNlNy5zRcN3xu+n2yDdNy9VlE66bhjMLtW6xb2zFX
f0zNq2gajmnc7pM43I4Bu0UaWtKmYVfPXat9F9rRa/GsP2Mcffy/m4+Ixu1o
s9/Cf/enaTj75ugdA7d23HWwq36XzzS43ayLT/jajiw8pRc2XtL3f7k3Ky+/
HeN+Gq822E7DRCzzn6CudrwasTrlbjwNF2a0fp9caEd3v2a+fTrToBFc1xrO
1YFj5of+V6F5h2P5tnFcyFYykjIqlZmiUKKTrKQoUWlISyGyQshsUUpFfpEt
ZGWEEKctez7T3ttjP0bp9f75Oe77Ou/r+p7zOo7bPUZ3Ekauiav/liVgx6uz
O7hUJiH64PK7/NME/DzwYeqG7Mb3feulH90lILe64eon0UmwbGVxHfUiIFh2
quXxTMLh1cmufeEE/O9OWF4x4ySIf4guFc8lYE3stEXawgQkntz1crCZgHYa
Wvp+wxNAn5d+bzFBwKjjXHfVyRPgcdhW49tmItIjizIGayZgRub8cooYEZcp
hMN2hRPQu8YsYHuciMRB8kB/6gQspj5fnDYi4kP/CzWqkRPQf+HN0sGHRNwZ
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

           "]]}, 
         {RGBColor[1., 0.27058823529411763`, 0], 
          PointBox[{-3.115011788164212*^-6, -0.2797200931384104}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(59\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {-3.115011788164212*^-6, -0.2797200931384104}, {0, -1.5}]}, 
         {RGBColor[0.5, 0, 0.5], 
          PointBox[{0.8565586680538013, -0.7278205995752848}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(4\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {0.8565586680538013, -0.7278205995752848}, {1, -1.25}]}}}},
      ImageSize->400,
      PlotLabel->FormBox[
        StyleBox["\"a/b=1.50, t=29.1\[Degree]\"", 20, StripOnInput -> False], 
        TraditionalForm]], 
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.58005, 1.}]}, {
        {RGBColor[0, 0, 1], Thickness[Large]}, 
        {PointSize[Large], FaceForm[None], 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{1.396121511879945, 0.46825524200648333`}, {
           0.990531539907985, -0.7791006497069894}, {-1.5775756250657154`, 
           0.0559425479078115}}], 
          PointBox[{{1.396121511879945, 0.46825524200648333`}, {
           0.990531539907985, -0.7791006497069894}, {-1.5775756250657154`, 
           0.0559425479078115}}], {InsetBox[
            StyleBox[
             SubscriptBox["\<\"P\"\>", "1"],
             StripOnInput->False,
             
             FontSize->
              20], {1.5647974682457917`, 0.6094941238487969}, {0, 0}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"P\"\>", "2"],
             StripOnInput->False,
             FontSize->
              20], {1.0903669503521618`, -0.9751437338018965}, {0, 0}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"P\"\>", "3"],
             StripOnInput->False,
             
             FontSize->
              20], {-1.7967185154920373`, 0.07534341323895145}, {0, 0}]}}, 
         {GrayLevel[0.5], Dashing[{Small, Small}], 
          LineBox[{{-1.58005, 0}, {1.58005, 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
         {RGBColor[1., 0.27058823529411763`, 0], Thickness[Large], 
          LineBox[CompressedData["
1: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
N9bS4GHpm9LyzAn4fjODGlmVCkaun58ES06CwYkDFXIhKeBRYRVYlDcJd4ac
PY3Nk8G/pVPknDQNCuOFuffKJsEXudu8f4ppkLXTUeYZ92fQGbcuXFGYgqL/
1BSz/nwCpuAxulD1FAh7eB+uHk4ALUnWUw6XpkHUgny3qyMeJnvP+HU3TcO4
iwbfat1HEP015aGoMwNIYPR74xcHZzS4pJK6Z2DUsy8sKyAWFAKVry7dokPN
9XK6V3Q0nO+6vukwlQ5bY63rxH9EQoQI1/Ogk7Pg4vpfXf9ABExkVmhaO8yC
nXHhCnK/A8sT2Q0H8mY3RtbjifOG4bDTIj4ldmkWDr5TOhP7NRSUri1cGz47
BzJJv/cO7gyBh8F8bOMuc3DL/8CxysUgcB1Ta40rmAPG8BJLB1oABIWwm276
PQf8xVkSrGt+8JDJTptZZh54PrWXoagvLBtWLcW7zoP4xKk/hY+9wSBxv3PD
j3k4MJwneoToCZwxvmUuy/Pw7byHPRQ/hZvKRW/izixAqptjW8AfZwgO+vnw
jMMCjOtwcd987AAz1/aUn8haAI20CoaXmrYQX3s/23tqAcSjPCJyjtwBW+7b
akeFf4G8ixH57qAhXHSrtmA1/wUqUttC81EDtgw+LBON/QUvhc3W1e+ygCcP
z4Jj9y/gmyLNyY+r4kSQq+PgrkX4UvmIV632OjIREhItVBbB5OQXyRIDU2T6
5VE9+3QRhqpoBQfN7+Dx3iAWt5xFSL31n1zub2vkH214vTy6CBSmvXJ+h+3w
2I2Wu7f2LwHN45SLld0j7Mrh/RyhsQT5Su6b5vY64PW+aPVP7kvgn1wnLPjq
MXqcu2L2KGMJjPZ7yTbWOGIM76E/i8QlODXXkN/X6oS4Z1b8yLZlSJTPeHEp
xRmTFzKOLZxeBmtHZjFRLRd8//KHkN7tZegS7F5NqHRBPYWLnuf9luGh5BEh
+jZXnJCYy/2YuQzfjLl6jQ+5ov+stblj1zJIo7fC9V2uKPbg1I3M1WXYP979
TKfFBY8+fRSidGAFrJ+bvqPeccGpqg7lY3IrICzOqZ7Q7YzdV56OXDFcgasX
mKZ0BJxRpXtW5JvrCuitRfKXXnTCz9nbOVTfrkB35qRvlZoj3hAYmGLMXIHP
1lcf3vrvMQ6ZpBj31ayAe+mkyUu6PSbt8rxTS1qB6OS/HywjHuHeTf9ZlM2u
wHyYYrLgkYdInE7jK9m0Cl1e2sILZx5gErGgKo9jFdre3phyWbqHnpm8fxME
VsE17K9MWPAd5CCXk9zFVmFcJSDt4DZzPPSy6DdIrcKLU3eVJH8aY4fB1L0h
uVXg1Iw8LqZ7Hf0SfCrMlFYhy+Rnx367KxjId+ZIgcoqiHBOfmzYrICfwnhg
UHUV+No8FXVcZkov8upr9m2sV7w6WlR6Uh5WvAwEPmycV1vlZrL5oAUtz4f4
/5NfhROhI0zAcB0edLmreWzcb1YSNqcZbgxnPJrORm74Z7+76AsLgzmcA2Mh
lw3//66O7eCKuQPe1/YO827EV/nq39EwbmvQvac45cO4YY+wS7bJ7gE0Z0jq
5M6sgPZWtY9btB7CCT73hnTCCvz15oO6hkfgTCzLeFCxAg+VvgTdEHcArvCd
M39TVuBM3GvjfvvHYMXSd9Do9Qp8eqLl9eadI3C8D3EItVuBV1cC2WPeOQEX
S0Fu/JUVgByGb0oPnaHV6Itq8PEVkJLTbm4UcAHWPStHLbatwJKYa83Lzy5w
x1W7//DQMrQb1Bxt/eMCquaiId2Fy9C2fKZup6ArEFlWB72Dl+Gq05XpPA5X
GPzHtfW0xTJs73ukq9HsAvFU7Rz6mWXY9DbnnMVVF/B3VeAuY1oGth+O+vGR
ziCednb0a8cS7IxcrfuR6AQ2uszyNXFLsOP1oZVHDx1hTdg5a7f1EhxbHzVK
/u0ALScjzkZKLkHzUIuGqqI9SO5ulLi/ughbWffG6114CE4aeC20dBHU0n5V
Ny/fhzNUoaL9zxfBq25Pzq3eO8B+1bxst/Ii9MjKcHUdMoVrbYc5vbYsgvtH
y6LRZH0od2/95FL5C/YLhojVKwOoSmz9uMXrFzCePpUtzS6HRkRmG0m5DX7x
kBTg/nAd3/rxxbCtLEA7xwvexI8WWFxyYCY1ewFeaIoIafHYYu1vwgU26wX4
rV/kFMP3GL9GlkVoCi5AjKjI+5M+rkgyfcLg0DMP+kPKRE1FD9zv8+3j68B5
uFBfbtGf9hx98d/ndIV5KB65zyc48AJ3EciKxIU54A61VylQeoX7n8x/Ek3a
4HNJG4fp9kB8ttXgV/L1OVjYrW3mphqMB5vltUxZ5uAli5Y/4/lQ/PsksNDi
xyxYPQp8u181HCufTouWWc3Cxeh7T9rvvkO2pNnHXntnIfPdX+qJ+Pe4sEyM
snlFh4/PrORPz0YhW5q6X+/wDHSq72Ek6cfidpD0MIUZ+HzgWxp/exzudtSY
F4ycBmsmA3dnyXi8pv1t/tT8FHzu4vfne5mAuV0sItnqUyDYzqG7NPoJfex4
W3ISaHBcntX/19XP2JjBnHb19yR45Mu2stQlYahny5akq5NQYuDUIHgpBYmt
T9JrUyZAbCfKinWlIm9qzGjT+jh4Hf67m9MmHYUIRs4t18ZB7V6NJ+7MwKzc
xbDBjDHwXZE/wFP4Fc22vh0+wDQGDu7T88/PZeF1QM8ww1EINvU/dYYnGzNt
d03fyh2BIo/VQa71bJTzNeZ5yToCyVP/TXNM5uAfbsPb/1kOg77Mi/iDfd+w
O9Le61bpECg+Olsi2pKLNfv3ph3lHoJjbg8dD9fnYaOpxf14+0GIbtf1Wqn9
jkJEbiQ2DUDMf8WH3zfko7t5C/OoyABU25adnu34gcF6Iaytvv3glb8iOtNf
gEEHrm7VqaeCxC8PIY/5QvRSvsu57kuBXJNM+huWYmzI+nWlUoUMwlYhnDsP
l2C19lhqAQsJRsS39w4qlmKSyp6pP419YDf2TXPNApFhG09lQhgBLi98FxVS
Kdt438DyasNeCC1v7ughlqGDVYSFm3APyAgGP3jjUI4fY8u4CUtd8MptOU9h
ZwV6q+2AhY25lLDyw2QgpQIvmKtJkqM7QEhaab+VSiUGBMZppNq3Q/6WaP/a
kUo8YnJx+q5GG9Sf331jxbcKRYJvPhMTaQXh540idJFqtKhsXGTmaAbp6+fT
4purcbViZWKlpwGCd+u+YnKsQcm1urPqifVg75/2bDdfLX45WevD5VwLblc8
Lv+oqUX9U3t+2mlXw/ge/+L5R3VI1+EztZeohIvm+el5/PVYqKa+++S+cqBd
L2VcbqxHXVf3E8+2lYJUaET+l6c/0fTF9qeG8wVgwt7V03i8ARN/mRXwTeRB
2UWSh2Z/A/4J7SVQp7NB69zmAaHwRoyNfnvlKeMXONIconjpUhOm+oYWJygl
Ap9aylrWehNSjbKYUDkS7rGw+unkN+McY2POPWcfCHtHtBZ62IL8KX+11bXs
cfTZnsRde1qxP7UigCAchpSfytOR9q1o2MtptFj+EZ22FTzJbG3FJ0ci7mu0
J+MCa0eF+ok2tLX6evR29Vc0ZitSswpqQ68Tv8+9acrBDG23GIaZNkx3+XQL
Rb5jJIndgEOrHbfN9hBknQuQn+Yq/v5rO3KsJ5/c9L0YZa9mNL1m68A4M2Fz
9lFERtsPf2cedqD90tm5XO9ylGH+LzC/vQMTY3dWMO+sxJLHLLeGTneiVGh6
3npQFVaHpmrbRnTi69PSf+O31WBXNb+V3u9O3Hr4j8Hs01pc8Zz9GGLUhUrD
h0RmxutQN/bXzkPlXWhdOiAXp/kTYyf4fzIe6cYbHKXzW9Mb0Pi05prYq248
XiW67zhjEwYJsxHjpruRetBkklO7Gf/Tt064ptODlvyOXBURLWjoHxWrmd+z
ETephd+mFaP/Ngt6HejF+9FCrjUsbViuNBw07dWLaLVoToxvw00feK+8GetF
YS/WvaZn2/Hy25ZuM00CCtiKyhjUt+OwxtFEi28E7Am8Ftt0vQPvZJbLh/D0
oUsRiBUPduBC6oOzIx59yL/0Y1bUuhMtUhqPGY324YjiVTb+mU50c9+Us6hB
xLhLzNWRtl14dtLIM/0bES/M7bZMoHWhJ5Hhott+ErLpNFw7b9mN5KiXBaZe
JAy+nclpQ+zGbsbMDwbjJCREPjgipdWDFqTVIssrZOzh5xWKK+nB1Lf61Kff
yejk5JSbLtKLh66UkmL5KKhrf8HXJLQXDd0GX1f7UFD68XediuVe7N9Z0zZL
o2Dh683ErpsEjHpoGXhAl4qrP6ZH434QcEjsRtLFQirapbsoHeHqQ7MKad/c
3f1YEZpcbm3Th/Ou33sUlftRQ/zKGcfyPtQ0LFWsd+7Hn4mrDpc4iVh/kkHh
Uno/bg8n6k6ZEvFnQ9CVMko/ShUS0swyiOjnkDMjxjGAV4s/aGYvEtHWrTDm
9cUBvOFctossQ0INejOh32UAGYx/lUw+JWH2/YqjR74M4D0LnWPUIhJ+Ojq8
5SZ1AK1/febAZdJGHbQvPuEYxAi3xgtvJMioFnDZ7dXFQVTfJ+iod4eM9Q82
7/N2GcSFhV8mnJFk7H7ioH4nfRCrJzjzW+vIeP9I5ruTlEG0WdQTDFkk46cl
qadDu4ew4LDUhZsHKfj4cOOTJ0pDaBvknXtchYKpd5TZFx2H0GT7th2c1hSM
3G9ccjVlCI1OarXuDKDg7g/hf4L6hpDfxtD3UCoFb67/UklnHcZX6UFJ+lUU
tKLNc3+WH0Y/L+v4dBIFu2lyE08eDmO5xnOK8DwFJSffHf8vYRhHxE2K27ZQ
cWzt883cjmGk+rkGp3FRMTiwlcLFNIIehaLJ+YJUzEhlE7ssNYJMo4VKa/9R
cb6xJkPfagQfe1h99DhFxZGWqCbJ9yNYZO08c+EcFdtkL833142guYv+tcsy
VLzc7+FhvDqCFdtzlmOkqThcnNuVKjKKyvnpE7JSVPxw5t/V8pujaJn3T0ZM
goo172man16NIuOizPyjYxvn6UYHtQpGkSmbYRf7ASqGHjblLhsfxUfGSi92
7qLiR3uml8v7xnC8M1T1/hoF30tK582rjKFfiLWc+ORGPscTxjMdx7Bo1Vft
VicF2XPczI4njuGcp4LyQhEFlTdb377XPoZy8VNMax8paPPdcJ8Zwzg2v1A2
cvOm4DaXOyV7xMexwKKNy96cgg7PIz2eG4yjtJXx/LACBY8VDvkm+Y2jqODD
/B5eCl7ipy155I1jhke5oNYvMt6NnpxmHRxHTcka2uWfZGSUeuNzedcE9jpJ
NnXGkpEY29UkLTOBolf93KZsyXjw4Hh3l+UE/hBOS3snR0br5b9JfCETaFVm
v7NnGxm9eM4AW/EEWofqXMvuIOH7m25RKaMTKBQ5f1YkmoRvNltkjO2exIxH
JMsLJiTMnWa981NmEresH3vLcJiEhotr6VoWkxjgJO5uNUREpfVtJvavJ1Fn
+ULvk3giRthJGJ76Pok5Xx5ayBsRkf2oh8MbyiSqBMgP5+0lYivj4iMfZhoy
FbgcHGna4KFZiwO7xWlY+219qOV5HxLe3JSQ0KdhwaVY5idn+jDp9qr5oBsN
1W2p5mMjBJSLplkKJdCQZc9qP284ARPT5cgLtTSc5Em14VUgoIvqpXta0zS8
aHiMYXKiFyUVo+NPckyhtxD3x4CQXvy3g7gnWmoK8+ZfGG0524vs6zmafrem
8F33wLUbfT0YZlxQt+Q+hZ9dthcEuPXgiMStf0Mfp9Bn+mZZwv4etKWVG2lW
TmH408KC+PxuvLdepykxMoU33lVsfq3TjVpq/WL+zNNI/d3Ddm+DPwMc/mnf
ODaNZXdvmcs870Jbw6Ct71WnkXe06z3Tvi48/ND4rYrVNP7uP2/aktqJnQdD
pEx9pzFLT/RFjEwn/nwQxD+SOI0M4mKjj+o7UCxuybmlYhqLhfd66l3rwHi+
dxZ8/dP4WN/I+tJAO5Iibq01/J1GsaCnBH3rdvxsfUmnl3sGs/jMBDzmNv5Z
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
k13FLZY7dyo9uQn/A6cMILE=
           "]]}, 
         {RGBColor[1., 0.27058823529411763`, 0], 
          PointBox[{-5.0031362729963995`*^-6, -0.24951647309614786`}], 
          InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(59\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {-5.0031362729963995`*^-6, -0.24951647309614786`}, \
{0, -1.5}]}, 
         {RGBColor[0.5, 0, 0.5], 
          PointBox[{0.9905318263457132, -0.7791027155639598}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(4\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {0.9905318263457132, -0.7791027155639598}, {1, -1.25}]}}}},
      ImageSize->400,
      PlotLabel->FormBox[
        StyleBox["\"a/b=1.58, t=27.9\[Degree]\"", 20, StripOnInput -> False], 
        TraditionalForm]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7876526420314283`*^9, 3.787652682481186*^9}, 
   3.787652879357402*^9, {3.787652916233659*^9, 3.787652944603506*^9}, {
   3.7876529860999327`*^9, 3.7876530371896315`*^9}, 3.787653565731824*^9, {
   3.787848277071027*^9, 3.787848292155649*^9}, 3.7897221494016395`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x59crossPlot3", "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2", ",", "p3", ",", "gr1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p1", "=", 
       RowBox[{"plotX59", "[", 
        RowBox[{"1.001", ",", 
         RowBox[{"deg1", "\[Rule]", "11"}], ",", 
         RowBox[{"x59displ", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1.5", ",", 
            RowBox[{"-", ".66"}]}], "}"}]}], ",", 
         RowBox[{"lgt", "\[Rule]", ".15"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{"plotX59", "[", 
        RowBox[{"1.3", ",", 
         RowBox[{"deg1", "\[Rule]", "32.52"}], ",", 
         RowBox[{"drX4", "\[Rule]", "True"}], ",", 
         RowBox[{"x59displ", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], ",", 
         RowBox[{"lgt", "\[Rule]", ".15"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p3", "=", 
       RowBox[{"plotX59", "[", 
        RowBox[{"1.58005", ",", 
         RowBox[{"deg1", "\[Rule]", "27.9211"}], ",", 
         RowBox[{"drX4", "\[Rule]", "True"}], ",", 
         RowBox[{"lgt", "\[Rule]", ".1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gr1", "=", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", "#", "}"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Show", "[", 
              RowBox[{"#", ",", 
               RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1.5"}], ",", "1.3"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1.2"}], ",", "1.1"}], "}"}]}], "}"}]}]}], 
              "]"}], "&"}], "/@", 
            RowBox[{"{", 
             RowBox[{"p1", ",", "p2"}], "}"}]}], ")"}]}], ",", 
         RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"gr1", ",", 
           RowBox[{"Show", "[", 
            RowBox[{"p3", ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "}"}], 
         "}"}], ",", 
        RowBox[{"Spacings", "\[Rule]", "1"}], ",", 
        RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7878476312146845`*^9, 3.787847919856633*^9}, {
  3.7878479499451513`*^9, 3.7878480739367733`*^9}, {3.787848108560652*^9, 
  3.7878481109751935`*^9}, {3.787848157175366*^9, 3.7878481601594143`*^9}, {
  3.7878482256954193`*^9, 3.7878482430709696`*^9}, {3.7878483013111887`*^9, 
  3.7878483855429316`*^9}, {3.7878485399192066`*^9, 3.78784854095142*^9}, {
  3.7878571502067537`*^9, 3.787857155342844*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         GraphicsBox[{
           {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.001, 1.}]}, {
            {RGBColor[0, 0, 1], Thickness[Large]}, 
            {PointSize[Large], FaceForm[None], 
             {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
              PolygonBox[{{0.9826088106311115, 
               0.19080899537654478`}, {-0.3261209256604316, \
-0.9454403909940616}, {-0.6577455981274614, 0.7538134321754963}}], 
              PointBox[{{0.9826088106311115, 
               0.19080899537654478`}, {-0.3261209256604316, \
-0.9454403909940616}, {-0.6577455981274614, 0.7538134321754963}}], {InsetBox[
                StyleBox[
                 SubscriptBox["\<\"P\"\>", "1"],
                 StripOnInput->False,
                 
                 FontSize->
                  20], {1.1298475248877868`, 0.21945792247759177`}, {0, 0}], 
               InsetBox[
                StyleBox[
                 SubscriptBox["\<\"P\"\>", "2"],
                 StripOnInput->False,
                 
                 FontSize->
                  20], {-0.37494654977387604`, -1.0872714821903597`}, {0, 0}],
                InsetBox[
                StyleBox[
                 SubscriptBox["\<\"P\"\>", "3"],
                 StripOnInput->False,
                 
                 FontSize->
                  20], {-0.7562528872339737, 0.8669342259885086}, {0, 0}]}}, 
             {GrayLevel[0.5], Dashing[{Small, Small}], 
              LineBox[{{-1.001, 0}, {1.001, 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
             {RGBColor[1., 0.27058823529411763`, 0], Thickness[Large], 
              LineBox[CompressedData["
1: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
uuKH8D/INVAZ
               "]]}, 
             {RGBColor[1., 0.27058823529411763`, 0], 
              PointBox[{0.5048522443887892, -0.03553319786747835}], InsetBox[
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(59\\)]\\)\"\>",
                StripOnInput->False,
                
                FontSize->
                 20], {0.5048522443887892, -0.03553319786747835}, \
{1.5, -0.66}]}, {}}}},
          ImageSize->400,
          PlotLabel->FormBox[
            StyleBox[
            "\"a/b=1.00, t=11.0\[Degree]\"", 20, StripOnInput -> False], 
            TraditionalForm],
          PlotRange->{{-1.5, 1.3}, {-1.2, 1.1}}]},
        {
         GraphicsBox[{
           {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.3, 1.}]}, {
            {RGBColor[0, 0, 1], Thickness[Large]}, 
            {PointSize[Large], FaceForm[None], 
             {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
              PolygonBox[{{1.0961649939365363`, 0.5375939747589333}, {
               0.5617207809787692, -0.9018290960439022}, {-1.28880056914593, 
               0.13097967900820695`}}], 
              PointBox[{{1.0961649939365363`, 0.5375939747589333}, {
               0.5617207809787692, -0.9018290960439022}, {-1.28880056914593, 
               0.13097967900820695`}}], {InsetBox[
                StyleBox[
                 SubscriptBox["\<\"P\"\>", "1"],
                 StripOnInput->False,
                 
                 FontSize->
                  20], {1.2116535876796182`, 0.6333143211605494}, {0, 0}], 
               InsetBox[
                StyleBox[
                 SubscriptBox["\<\"P\"\>", "2"],
                 StripOnInput->False,
                 FontSize->
                  20], {0.6135939447251667, -1.0425741665896922`}, {0, 0}], 
               InsetBox[
                StyleBox[
                 SubscriptBox["\<\"P\"\>", "3"],
                 StripOnInput->False,
                 
                 FontSize->
                  20], {-1.4366359070827968`, 0.15637087545682773`}, \
{0, 0}]}}, 
             {GrayLevel[0.5], Dashing[{Small, Small}], 
              LineBox[{{-1.3, 0}, {1.3, 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
             {RGBColor[1., 0.27058823529411763`, 0], Thickness[Large], 
              LineBox[CompressedData["
1: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
C5laTqF7NknYI9C+VFVcC/GkwKipARLKjShVs+2rg2yNobOXSki4o+dgRYNh
HeDzQ4s7PpNQgKEFFvPq4ENXvr6GHQn5GvmTrXbUw4xBsfBhHRK68aS631Ov
B71PI7VvJEn4txNfu0XWg6uL+4jsfhJertzO/Xe0HuwVshk+/5rDTqKmQoZw
A9gG8De9a51D1eoPQ9GGDdDjI9Q6ljqHN79fIBZ9aYABSWJi+/s5XH79jpd2
pAEeMzROqxjM4elnU3PPDhDgSvKHk9rX5rBb5KrJsDIBAv47vHeJZw7ZDPUp
L5wIcOOD9mnu1VkcFDlRv5VGAJbL2Ufam2Yx+J/Um08DBCA7mXgJJM3iTfI2
E8EdRBgrcv67zXkW+6X9dOLEiEA8m8Rjpz2Lwyc85lhUiXCGUc/N98ws2vvs
G9E2JYLP3V/dl5hmcc1hmNPNlwjWMdY5jiMz+OrYzreu34ig59pW8ixvBk18
+HerIRHy/SoDp3xnUDr05PxkKxFEX012MenP4JJJ7hWpMSJwXcw+2Sw5g5u0
1dduLxAhfNcnqUu7qf3Inz9Ku/4Qwbm79avcxDSeORrT8JamEZpvZu3dpPYz
KndLL/pta4R7q2bHH/hO49viGyIyVLZpVAx8qjeNH3n2XPffIsKUh8Ma1/lp
7DaQuGG6ToTGh1q0tjun8bPW9n8D80RYJ0nqePdPoWPDA+2WISLcOxGdpfRz
Ch8tVGjINhIhNkgwr9xpCm8EZWw7m08EJdP3HCT1KTQwqPkQEkOEztOEdw1C
U/j0PttZI1ciVP7eF623NonckkpKX59R159rOZlZO4n60XJyN68Roe921lBJ
2CQqsfAmynATQVG/1MDDaBIzI0N2RlII4HNV2Zb18iT2HAk6LFdGgFkujlYN
5kl8M/G4/OpHAjT6nTn6qG8CNcYFCC5aBGjLOHNW9PsEjm7JX2XmJ8Dxca7s
EtsJrCbSX2wdbQD+ST3D/QoTyKhZNtkW2wDbm7mZLh+YQK3Gz+HMug3Avb1D
V2R6HMMk6YrN9zVALnfxkdGccXS7c7CNqbYe/iuNFDRyG0d3XWf7Oqt6mHYa
4y1XH8c3HsV2KYfrYZdrau+cwDimX1tJ+dlQB/cEmo/MUMYw9LQ3Q5NJHUQ9
76oqLB7DnW9b4xl214GOI9d7fe8xvPExr1gtpRZq21JhWnMM73q6/PgpUwsJ
Ir45ssJjOCnoP3+gpwaaLRxKHZZH8Yf+QW7f5zVw3lv0dGjpKCbS7F5iXK0G
eXuhQb8Po/j5TfN9D/tqMOya/PxCexS9/vGrMWyrhlmbIcXjR0exxIFml4tL
FbDfsKxoXB5BPoHA3j9blSCvyTasXTqCwbTsZ19YV4IM/x7nZp8RLG4qK2gh
VYDJ8PT701ojWKm9cFFUtwL+W2cddBAaQS2R33HWdeUQmsP0pHhxGJO2qe7P
Pl0OO4otNuaKh7E5KHR8KKgMWJf/Be96P4yy69mOa79K4cAf40NH7g2jtsKv
wD+qpRDBH+N8WnAYbRwezzapI5iFHn1i0j+E26/9vm+3UQw9CSXnTc2HkOZZ
xdhGeBHQmBm/MmYZwgCmY4YKZwphOqdp5VnCIF4+YHnkv7J86MOigodSg7h7
/UXdXfk80N0rma3bPoCHY0dNd9fkgGLI2wF94wG8PWuZHHElG5iv94u/3T6A
rBWyZmvfM0FOsjMtNrIfR29mXRdiz4BzD37rDZztR1l1Gcajr9NAfOewyhli
H5aVzT785/0D3soKeibo96Fnjp7sk6PJcGPpJvfFf71YdOF9pF3GVyg/k8m7
GNyLAQa1Nx+IxQNTd8i3tlO91PofNGYQj4bp6v7esdoeNI3tm/o3HgL3ZZna
hfR60JnlpHyOjR9w84nnRW1045u+uUvv+50gyKM+9U5QN8aw3Ld9JnoXPhQk
jMKpbpyv4uqPF7TFzyL5Tm/quvAMZ8dYy5QPTl5hK56jzvPr1orOXfbBaBEZ
XPvzXyfyPnb7cyfpM1YUb/WWh3Xi/ivKPkE28cgy6y927FwnHhLUf3coNRGP
mP7bmGzuwOYXv1xOLX3HcvbTrjQvO9A72HqzUzAN+10PMtju7EDD/M2Zq3cz
sIHhfcX9r+34ZLNWQf5DFqbMd25F3WjHpZrwY0PEHPTYX7GlMtKGsq9vta1y
5OO2a2I7LRzaMFb6fruDfiFmsbTqsfK14e6W97+eFxWjbx/DXYHiVtyfJMur
tqsUhS6ZHsnQaUWGqqtGrFfLsHemgKfqbwsSoh+FPbYsxza7604Po1qwhyH3
l3RaBe57WhvhLN2CDCGHn0TPV+L1Z/vTzw03Y19LsqrVyWqc9fxJ/865GcU5
RpsK39SgnPLDfi2hZvST07F4UlCLMncb5776N6HJCt8LHfp6NEk4I9Db04jH
Kg79F6PegI9Mm5o0Djei56/6n/xfCGjpsm4o+IqIAxuBu5t/E/HdFV81eerc
vDHgNxqj2oQ6SfsWmnYQ8Efhbpfr95oxrKY8pOxeAwplqi6ep2/BOaH3wUKJ
9TgxEHbma3YLHkznPLn9N3UOi0MHT8NWPNRaHaivWIclCqptHdxt2ECMoKjG
1uI5rV0zbk1teMVG8EHLWg3alT+94ufWjmtKd4fn7tQgw3uaXSSpDmq8Xlsn
JVVjo+Lju36/OlCXo5mJnTpn1cuZNJn97MSzT1NeiOlVodRjid8+Rl245DOp
va2sEntqnJhbhbvRIb7MOUKgEpULS/9dHO/Gd/KhlpsuFdi0ke2VG9eDzcze
6eLT5djkpSdwQ68XI46KBEkpl6O4BGm9WbAPXzSy/CeSU4YNvkG098b7cLeU
492NQ2WYMF45W/21Hzd6GA2LvEsxJ5lbcL/RAF5WXDswsYRYxxjaduXkIKbb
sQjfai1BW7bOmRPLg6gUbCiXkV2McxzKrJ15Q7ik3OstFlWEMNvTHgLDyKY+
k1PjWYg4LL7EET+MR4sLpT9YF+DsfuO2QYYRNFffduu9cT5uDB8lzhmNYNfj
wcT6Z3koWPpz3/mmERTendWp9SQXBZIelOZIjCJIsqxd18vBMx5rNQaho3gx
4inRzzAbzdTP0cPmKLr7bxYrmWahxq9jZy/qjeHcnaw6F4dMvM7WsaxQM4Zn
WmrfSwVkoOJiZrWJKPXdCMg87ZSUjvNtj/ZG+4/jE701J+2qNGxwuyDUsjqO
SuPkqNiGn6idtE/s34MJpOxKWOziSMV9X1iu85VN4GN251aD5ykopHVF75jw
JMpWbRPQqU7GlPQvZlzek6jA4lNZKZqEtvxMssOUScyVePAlJTIRx3ZN+L69
O4X5tyK+8nF+Re4LT1eG86bwbo17zJGwBHSiN97OeHAaaaVTtGuE4vEOIVty
2nEaF++oubMWxaLwwASNzfg01rJt5dHoxKCxftHPdLkZbAy83XiT+TMSSLf9
vJJnkE5os/iXaQSua0oNrLHMYrQ2h8c+Uii23DpQufxqFsN++bMl2gRjWuh3
A/PmWbTxuNyeyv0Jlat1+1+fnsPZvpGh403+eJ79u8Sw/xyGJXK5nzr5EW+u
hprlL84h0eva/qHx90iXLRm1rELCyNLDjurl7rgnVvqH208SDsvsTbSsdsaC
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
               "]]}, 
             {RGBColor[1., 0.27058823529411763`, 0], 
              PointBox[{0.0004755644561523307, -0.3772618030427876}], InsetBox[
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(59\\)]\\)\"\>",
                StripOnInput->False,
                
                FontSize->
                 20], {0.0004755644561523307, -0.3772618030427876}, {0, -2}]}, 
             {RGBColor[0.5, 0, 0.5], 
              PointBox[{0.4987940968500652, -0.5327373641144079}], InsetBox[
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(4\\)]\\)\"\>",
                StripOnInput->False,
                FontSize->
                 20], {0.4987940968500652, -0.5327373641144079}, \
{1, -1.25}]}}}},
          ImageSize->400,
          PlotLabel->FormBox[
            StyleBox[
            "\"a/b=1.30, t=32.5\[Degree]\"", 20, StripOnInput -> False], 
            TraditionalForm],
          PlotRange->{{-1.5, 1.3}, {-1.2, 1.1}}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], 
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.58005, 1.}]}, {
        {RGBColor[0, 0, 1], Thickness[Large]}, 
        {PointSize[Large], FaceForm[None], 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{1.396121511879945, 0.46825524200648333`}, {
           0.990531539907985, -0.7791006497069894}, {-1.5775756250657154`, 
           0.0559425479078115}}], 
          PointBox[{{1.396121511879945, 0.46825524200648333`}, {
           0.990531539907985, -0.7791006497069894}, {-1.5775756250657154`, 
           0.0559425479078115}}], {InsetBox[
            StyleBox[
             SubscriptBox["\<\"P\"\>", "1"],
             StripOnInput->False,
             FontSize->20], {1.472792401137148, 0.5324547337529895}, {0, 0}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"P\"\>", "2"],
             StripOnInput->False,
             
             FontSize->
              20], {1.0359112719280654`, -0.8682111424774017}, {0, 0}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"P\"\>", "3"],
             StripOnInput->False,
             
             FontSize->
              20], {-1.6771860298049526`, 0.06476112305832966}, {0, 0}]}}, 
         {GrayLevel[0.5], Dashing[{Small, Small}], 
          LineBox[{{-1.58005, 0}, {1.58005, 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
         {RGBColor[1., 0.27058823529411763`, 0], Thickness[Large], 
          LineBox[CompressedData["
1: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
N9bS4GHpm9LyzAn4fjODGlmVCkaun58ES06CwYkDFXIhKeBRYRVYlDcJd4ac
PY3Nk8G/pVPknDQNCuOFuffKJsEXudu8f4ppkLXTUeYZ92fQGbcuXFGYgqL/
1BSz/nwCpuAxulD1FAh7eB+uHk4ALUnWUw6XpkHUgny3qyMeJnvP+HU3TcO4
iwbfat1HEP015aGoMwNIYPR74xcHZzS4pJK6Z2DUsy8sKyAWFAKVry7dokPN
9XK6V3Q0nO+6vukwlQ5bY63rxH9EQoQI1/Ogk7Pg4vpfXf9ABExkVmhaO8yC
nXHhCnK/A8sT2Q0H8mY3RtbjifOG4bDTIj4ldmkWDr5TOhP7NRSUri1cGz47
BzJJv/cO7gyBh8F8bOMuc3DL/8CxysUgcB1Ta40rmAPG8BJLB1oABIWwm276
PQf8xVkSrGt+8JDJTptZZh54PrWXoagvLBtWLcW7zoP4xKk/hY+9wSBxv3PD
j3k4MJwneoToCZwxvmUuy/Pw7byHPRQ/hZvKRW/izixAqptjW8AfZwgO+vnw
jMMCjOtwcd987AAz1/aUn8haAI20CoaXmrYQX3s/23tqAcSjPCJyjtwBW+7b
akeFf4G8ixH57qAhXHSrtmA1/wUqUttC81EDtgw+LBON/QUvhc3W1e+ygCcP
z4Jj9y/gmyLNyY+r4kSQq+PgrkX4UvmIV632OjIREhItVBbB5OQXyRIDU2T6
5VE9+3QRhqpoBQfN7+Dx3iAWt5xFSL31n1zub2vkH214vTy6CBSmvXJ+h+3w
2I2Wu7f2LwHN45SLld0j7Mrh/RyhsQT5Su6b5vY64PW+aPVP7kvgn1wnLPjq
MXqcu2L2KGMJjPZ7yTbWOGIM76E/i8QlODXXkN/X6oS4Z1b8yLZlSJTPeHEp
xRmTFzKOLZxeBmtHZjFRLRd8//KHkN7tZegS7F5NqHRBPYWLnuf9luGh5BEh
+jZXnJCYy/2YuQzfjLl6jQ+5ov+stblj1zJIo7fC9V2uKPbg1I3M1WXYP979
TKfFBY8+fRSidGAFrJ+bvqPeccGpqg7lY3IrICzOqZ7Q7YzdV56OXDFcgasX
mKZ0BJxRpXtW5JvrCuitRfKXXnTCz9nbOVTfrkB35qRvlZoj3hAYmGLMXIHP
1lcf3vrvMQ6ZpBj31ayAe+mkyUu6PSbt8rxTS1qB6OS/HywjHuHeTf9ZlM2u
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
cWzt883cjmGk+rkGp3FRMTiwlcLFNIIehaLJ+YJUzEhlE7ssNYJMo4VKa/9R
cb6xJkPfagQfe1h99DhFxZGWqCbJ9yNYZO08c+EcFdtkL833142guYv+tcsy
VLzc7+FhvDqCFdtzlmOkqThcnNuVKjKKyvnpE7JSVPxw5t/V8pujaJn3T0ZM
goo172man16NIuOizPyjYxvn6UYHtQpGkSmbYRf7ASqGHjblLhsfxUfGSi92
7qLiR3uml8v7xnC8M1T1/hoF30tK582rjKFfiLWc+ORGPscTxjMdx7Bo1Vft
VicF2XPczI4njuGcp4LyQhEFlTdb377XPoZy8VNMax8paPPdcJ8Zwzg2v1A2
cvOm4DaXOyV7xMexwKKNy96cgg7PIz2eG4yjtJXx/LACBY8VDvkm+Y2jqODD
/B5eCl7ipy155I1jhke5oNYvMt6NnpxmHRxHTcka2uWfZGSUeuNzedcE9jpJ
NnXGkpEY29UkLTOBolf93KZsyXjw4Hh3l+UE/hBOS3snR0br5b9JfCETaFVm
v7NnGxm9eM4AW/EEWofqXMvuIOH7m25RKaMTKBQ5f1YkmoRvNltkjO2exIxH
JMsLJiTMnWa981NmEresH3vLcJiEhotr6VoWkxjgJO5uNUREpfVtJvavJ1Fn
+ULvk3giRthJGJ76Pok5Xx5ayBsRkf2oh8MbyiSqBMgP5+0lYivj4iMfZhoy
FbgcHGna4KFZiwO7xWlY+219qOV5HxLe3JSQ0KdhwaVY5idn+jDp9qr5oBsN
1W2p5mMjBJSLplkKJdCQZc9qP284ARPT5cgLtTSc5Em14VUgoIvqpXta0zS8
aHiMYXKiFyUVo+NPckyhtxD3x4CQXvy3g7gnWmoK8+ZfGG0524vs6zmafrem
8F33wLUbfT0YZlxQt+Q+hZ9dthcEuPXgiMStf0Mfp9Bn+mZZwv4etKWVG2lW
TmH408KC+PxuvLdepykxMoU33lVsfq3TjVpq/WL+zNNI/d3Ddm+DPwMc/mnf
ODaNZXdvmcs870Jbw6Ct71WnkXe06z3Tvi48/ND4rYrVNP7uP2/aktqJnQdD
pEx9pzFLT/RFjEwn/nwQxD+SOI0M4mKjj+o7UCxuybmlYhqLhfd66l3rwHi+
dxZ8/dP4WN/I+tJAO5Iibq01/J1GsaCnBH3rdvxsfUmnl3sGs/jMBDzmNv5Z
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
k13FLZY7dyo9uQn/A6cMILE=
           "]]}, 
         {RGBColor[1., 0.27058823529411763`, 0], 
          PointBox[{-5.0031362729963995`*^-6, -0.24951647309614786`}], 
          InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(59\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {-5.0031362729963995`*^-6, -0.24951647309614786`}, \
{0, -1.5}]}, 
         {RGBColor[0.5, 0, 0.5], 
          PointBox[{0.9905318263457132, -0.7791027155639598}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(4\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {0.9905318263457132, -0.7791027155639598}, {1, -1.25}]}}}},
      ImageSize->Large,
      PlotLabel->FormBox[
        StyleBox["\"a/b=1.58, t=27.9\[Degree]\"", 20, StripOnInput -> False], 
        TraditionalForm]]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7878476534412427`*^9, 3.7878477785037394`*^9, {3.787847838473159*^9, 
   3.787848065776226*^9}, 3.7878481147710667`*^9, 3.7878481641985817`*^9, {
   3.787848219174892*^9, 3.787848246311276*^9}, {3.7878482974036117`*^9, 
   3.7878483123197136`*^9}, {3.7878483426444263`*^9, 3.7878483891911745`*^9}, 
   3.787848544355315*^9, 3.787857159042677*^9, 3.789722153153618*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{"\"\<0050_x59_center\>\"", ",", "x59crossPlot3"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7876528930994487`*^9, 3.7876529233985243`*^9}, 
   3.7878485454863186`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "x88motion"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "x88motion"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"drX4locus", "\[Rule]", "False"}], ",", 
     RowBox[{"x4disp", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.25"}], ",", "1.25"}], "}"}]}], ",", 
     RowBox[{"drSides", "\[Rule]", "False"}]}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"x88motion", "[", 
    RowBox[{"a_", ",", "tDeg_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "o1", ",", "n1", ",", "s1", ",", "x88", ",", "x4", ",", "x100", ",", 
       "x1", ",", "poly1", ",", "ell", ",", "rho", ",", "gr", ",", 
       RowBox[{"clr", "=", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick"}], "}"}]}], ",", 
       RowBox[{"lgt", "=", ".2"}], ",", 
       RowBox[{"incClr", "=", 
        RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}]}], ",", 
       RowBox[{"x100Clr", "=", "Black"}], ",", 
       RowBox[{"x88Clr", "=", 
        RowBox[{"\"\<x88\>\"", "/.", "ptClrs"}]}], ",", 
       RowBox[{"ortClr", "=", 
        RowBox[{"\"\<ort\>\"", "/.", "ptClrs"}]}], ",", "x4locus", ",", "mid",
        ",", "sidesLab"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ell", "=", 
       RowBox[{"plotEll", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"o1", ",", "n1", ",", "s1"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", 
         RowBox[{"toRad", "@", "tDeg"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x1", "=", 
       RowBox[{"getIncenterTrilin", "[", 
        RowBox[{"o1", ",", "s1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x100", "=", 
       RowBox[{"getX100Trilin", "[", 
        RowBox[{"o1", ",", "s1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x88", "=", 
       RowBox[{"getX88Trilin", "[", 
        RowBox[{"o1", ",", "s1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x4", "=", 
       RowBox[{"getOrthocenterTrilin", "[", 
        RowBox[{"o1", ",", "s1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x4locus", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "@", "drX4locus"}], ",", 
         RowBox[{"Quiet", "@", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", "ons", "}"}], ",", 
            RowBox[{"ParametricPlot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ons", "=", 
                RowBox[{"orbitNormals", "[", 
                 RowBox[{"a", ",", "t"}], "]"}]}], ";", 
               RowBox[{"getOrthocenterTrilin", "[", 
                RowBox[{
                 RowBox[{"ons", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"ons", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "0.01", ",", "\[Pi]"}], "}"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Thick", ",", "ortClr"}], "}"}]}]}], "]"}]}], "]"}]}],
          ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rho", "=", 
       RowBox[{
        RowBox[{"magn", "[", 
         RowBox[{"x1", "-", "x100"}], "]"}], "/", 
        RowBox[{"magn", "[", 
         RowBox[{"x1", "-", "x88"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mid", "=", 
       RowBox[{"medialTriangle", "[", 
        RowBox[{"o1", ",", "s1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{"clr", ",", 
          RowBox[{"FaceForm", "@", "None"}], ",", 
          RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", "incClr"}], ",", 
            RowBox[{"FaceForm", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Opacity", "@", ".1"}], ",", "incClr"}], "}"}]}]}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", "clr"}], ",", 
            RowBox[{"Polygon", "@", "o1"}], ",", 
            RowBox[{"Point", "@", "o1"}]}], 
           RowBox[{"(*", 
            RowBox[{",", 
             RowBox[{"ellLabelPoints", "[", 
              RowBox[{"a", ",", "o1", ",", "\"\<P\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"Bold", ",", "16"}], "}"}], ",", ".15"}], "]"}]}], 
            "*)"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Dashed", ",", "incClr", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Line", "@", 
                 RowBox[{"{", 
                  RowBox[{"#", ",", "inc1"}], "}"}]}], "&"}], "/@", "o1"}]}], 
             "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", "Gray", ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "a"}], ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"a", ",", "0"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", 
            RowBox[{"Darker", "@", "Red"}], ",", "Thick", ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{"x100", ",", "x88"}], "}"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"incClr", ",", 
            RowBox[{"Point", "@", "x1"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(X\), \(1\)]\)\>\"", ",", "20"}], 
               "]"}], ",", "x1", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "1.5"}]}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"ortClr", ",", 
            RowBox[{"Point", "@", "x4"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(X\), \(4\)]\)\>\"", ",", "20"}], 
               "]"}], ",", "x4", ",", 
              RowBox[{"OptionValue", "@", "x4disp"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"x100Clr", ",", 
            RowBox[{"Point", "@", "x100"}], ",", 
            RowBox[{"ellLabelTxt", "[", 
             RowBox[{"a", ",", "x100", ",", 
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(X\), \(100\)]\)\>\"", ",", "20"}], 
               "]"}], ",", "lgt"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"x88Clr", ",", 
            RowBox[{"Point", "@", "x88"}], ",", 
            RowBox[{"ellLabelTxt", "[", 
             RowBox[{"a", ",", "x88", ",", 
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(X\), \(88\)]\)\>\"", ",", "20"}], 
               "]"}], ",", "lgt"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drSides"}], ",", 
            RowBox[{"{", 
             RowBox[{"Blue", ",", 
              RowBox[{"Point", "@", "mid"}], ",", "\[IndentingNewLine]", 
              RowBox[{"ellLabelPointsSuffixb", "[", 
               RowBox[{"a", ",", "a", ",", "mid", ",", "\"\<s\>\"", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\"\<=\>\"", "<>", 
                   RowBox[{"nfn", "[", 
                    RowBox[{"#", ",", "2"}], "]"}]}], "&"}], "/@", "s1"}], 
                ",", "16"}], "]"}]}], "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"ellLabelPoints", "[", 
               RowBox[{"a", ",", "mid", ",", "\"\<s\>\"", ",", "20", ",", 
                RowBox[{"OptionValue", "@", "lgt"}]}], "]"}], "*)"}], "}"}], 
            ",", 
            RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sidesLab", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "@", "drSides"}], ",", 
         RowBox[{
         "\"\<\\n(\!\(\*SubscriptBox[\(s\), \
\(1\)]\),\!\(\*SubscriptBox[\(s\), \(2\)]\),\!\(\*SubscriptBox[\(s\), \
\(3\)]\))=(\>\"", "<>", 
          RowBox[{"nfn", "[", 
           RowBox[{
            RowBox[{"s1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], "<>", 
          "\"\<,\>\"", "<>", 
          RowBox[{"nfn", "[", 
           RowBox[{
            RowBox[{"s1", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "2"}], "]"}], "<>", 
          "\"\<,\>\"", "<>", 
          RowBox[{"nfn", "[", 
           RowBox[{
            RowBox[{"s1", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", "2"}], "]"}], "<>", 
          "\"\<)\>\""}], ",", "\"\<\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ell", ",", "x4locus", ",", "gr"}], "}"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"\"\<a=\>\"", "<>", 
            RowBox[{"nfn", "[", 
             RowBox[{"a", ",", "2"}], "]"}], "<>", "\"\<, t=\>\"", "<>", 
            RowBox[{"nfn", "[", 
             RowBox[{"tDeg", ",", "2"}], "]"}], "<>", 
            "\"\<\[Degree], \[Rho]=\>\"", "<>", 
            RowBox[{"nfn", "[", 
             RowBox[{"rho", ",", "2"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "20"}], "}"}]}], "]"}]}]}], "]"}]}]}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwlyjtIQgEAhWGLFHSQEIfQFqPBIapBygcEOgYVCDoIlWVaEGIgSW8MpEAK
wcLETIrEfCSliVlBCooUlE25lGXREGQUPZSmuuc2HD44/LxBg1xbTaFQuMTg
rmFPv9JWknJyMQOksM1GWHJ3TcKntZ85yA8em2HWNmuBAzJ6ALqWjQeQq0sn
YXdKcg3zL7Y8zFjivauEsYRdAy9oGZqTULGtrIWsgKZvg7B9PGyA2QBzCs47
pAvkvx+Ow/JOkXSiIj6FLO/rOXw38nKw9aFyC+3q+29oCmxVoEAf0noIrbKZ
URg9CR6qhSXp5l2E1M0RX0Fq4yWpa/HoBjJ9qX+/PKIhQnZ9iwQyOqbjOkJT
nTANm0LOMyhM/hagfF35CP3WqmfoKCiow4QjNQ0MSI9+NsOxYkQAE2WxFLKM
/E7oX1LJYY/zQ0V2Il8/5HnfdPAPpA7Xlw==
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x88at15unalignedplot", "=", 
  RowBox[{"x88motion", "[", 
   RowBox[{"1.5", ",", "22", ",", 
    RowBox[{"x4disp", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1.25", ",", "0"}], "}"}]}], ",", 
    RowBox[{"drSides", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.787661690761178*^9, 3.787661824386256*^9}, {
  3.7876618574019423`*^9, 3.787661865280839*^9}, {3.7876669450211425`*^9, 
  3.7876669470846505`*^9}, {3.7876680971629176`*^9, 3.7876680976346345`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
    {RGBColor[0, 0, 1], Thickness[Large]}, 
    {PointSize[Large], FaceForm[None], 
     {EdgeForm[RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0]], FaceForm[{RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], Opacity[0.1]}]}, 
     {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
      PolygonBox[{{1.3907757818501811`, 0.3746065934159119}, {
       0.5650556233620118, -0.9263337873351334}, {-1.4870761066562261`, 
       0.13098711219413883`}}], 
      PointBox[{{1.3907757818501811`, 0.3746065934159119}, {
       0.5650556233620118, -0.9263337873351334}, {-1.4870761066562261`, 
       0.13098711219413883`}}]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], LineBox[{{-1.5, 0}, {1.5, 0}}],
       LineBox[{{0, -1}, {0, 1}}]}, 
     {RGBColor[
       NCache[
        Rational[2, 3], 0.6666666666666666], 0, 0], Thickness[Large], 
      Dashing[{Small, Small}], 
      LineBox[{{-0.8944007145653385, -0.8027860824196394}, {1.456606425025125,
        0.23879114312211563`}}]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], 
      PointBox[{0.37865444808925175`, -0.2387787504340984}], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->
         20], {0.37865444808925175`, -0.2387787504340984}, {0, -1.5}]}, 
     {RGBColor[1, 0.5, 0], PointBox[{0.5869901363363483, -1.185443934315534}],
       InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(4\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->20], {0.5869901363363483, -1.185443934315534}, {1.25, 0}]}, 
     {GrayLevel[0], PointBox[{-0.8944007145653385, -0.8027860824196394}], 
      InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(100\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->20], {-0.9831494721042295, -0.9820168220691291}, {0, 0}]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      PointBox[{1.456606425025125, 0.23879114312211563`}], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(88\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->
         20], {1.6442484738497047`, 0.3080043030912575}, {0, 0}]}, {}}}},
  PlotLabel->FormBox[
    StyleBox["\"a=1.50, t=22.00\[Degree], \[Rho]=1.18\"", {
      GrayLevel[0], 20}, StripOnInput -> False], TraditionalForm]]], "Output",
 CellChangeTimes->{{3.787661692931381*^9, 3.787661824823059*^9}, 
   3.7876618660128818`*^9, 3.787666887647989*^9, {3.7876669430481796`*^9, 
   3.787666947347946*^9}, 3.7876670465886297`*^9, {3.7876670768466587`*^9, 
   3.787667083566684*^9}, {3.7876671781088443`*^9, 3.787667185570898*^9}, {
   3.787667253262997*^9, 3.787667265225031*^9}, 3.7876675397668066`*^9, {
   3.7876678172071943`*^9, 3.7876678435360546`*^9}, {3.787667917943921*^9, 
   3.7876679387053933`*^9}, {3.787667985567765*^9, 3.7876680296644783`*^9}, 
   3.7876680979508176`*^9, {3.787668165172346*^9, 3.787668184539529*^9}, 
   3.78766824092277*^9, 3.787668280853137*^9, 3.78972215496161*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x88at15plot", "=", 
  RowBox[{"x88motion", "[", 
   RowBox[{"1.5", ",", "20.432", ",", 
    RowBox[{"drSides", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.786719072898738*^9, 3.7867190822717094`*^9}, {
  3.7867193761844096`*^9, 3.7867194430641313`*^9}, {3.7867303965573187`*^9, 
  3.786730405022289*^9}, {3.7876546820967855`*^9, 3.787654682425587*^9}, {
  3.7876547142007637`*^9, 3.7876547382601967`*^9}, {3.787655458440694*^9, 
  3.787655501312907*^9}, {3.7876681959789596`*^9, 3.7876681977811413`*^9}, {
  3.78766829026593*^9, 3.787668290810502*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
    {RGBColor[0, 0, 1], Thickness[Large]}, 
    {PointSize[Large], FaceForm[None], 
     {EdgeForm[RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0]], FaceForm[{RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], Opacity[0.1]}]}, 
     {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
      PolygonBox[{{1.4056307459439883`, 0.3490954699454306}, {
       0.4769105910696313, -0.94811070336412}, {-1.4836139902634011`, 
       0.147406509572389}}], 
      PointBox[{{1.4056307459439883`, 0.3490954699454306}, {
       0.4769105910696313, -0.94811070336412}, {-1.4836139902634011`, 
       0.147406509572389}}]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], LineBox[{{-1.5, 0}, {1.5, 0}}],
       LineBox[{{0, -1}, {0, 1}}]}, 
     {RGBColor[
       NCache[
        Rational[2, 3], 0.6666666666666666], 0, 0], Thickness[Large], 
      Dashing[{Small, Small}], 
      LineBox[{{-0.7611666579390144, -0.8616844792077513}, {
       1.4056409191557246`, 0.349077263905253}}]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], 
      PointBox[{0.3222483346358982, -0.256297347100907}], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->20], {0.3222483346358982, -0.256297347100907}, {0, -1.5}]}, 
     {RGBColor[1, 0.5, 0], 
      PointBox[{0.49954937763599516`, -1.2724169757550827`}], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(4\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->
         20], {0.49954937763599516`, -1.2724169757550827`}, {-1.25, 1.25}]}, 
     {GrayLevel[0], PointBox[{-0.7611666579390144, -0.8616844792077513}], 
      InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(100\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->20], {-0.8342554661041655, -1.0478511414246954`}, {0, 0}]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      PointBox[{1.4056409191557246`, 0.349077263905253}], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(88\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->
         20], {1.5802339196320059`, 0.44663383305715226`}, {0, 0}]}, {}}}},
  PlotLabel->FormBox[
    StyleBox["\"a=1.50, t=20.43\[Degree], \[Rho]=1.00\"", {
      GrayLevel[0], 20}, StripOnInput -> False], TraditionalForm]]], "Output",
 CellChangeTimes->{{3.786719078432943*^9, 3.7867190826846066`*^9}, {
   3.7867193649115467`*^9, 3.7867194433174496`*^9}, {3.7867303068947525`*^9, 
   3.786730366941493*^9}, {3.7867303978335066`*^9, 3.7867304059400167`*^9}, 
   3.786730462238843*^9, {3.7867305008903413`*^9, 3.786730547433921*^9}, 
   3.786730936539442*^9, 3.786730966652398*^9, {3.786730998318742*^9, 
   3.786731024303198*^9}, {3.7867310553366036`*^9, 3.786731089496743*^9}, {
   3.7867311283339176`*^9, 3.7867312411354065`*^9}, {3.7867314506074753`*^9, 
   3.7867314546556807`*^9}, 3.7867361268864536`*^9, {3.7876545715826426`*^9, 
   3.7876545904306955`*^9}, 3.787654682902734*^9, {3.7876547150367575`*^9, 
   3.7876547386716523`*^9}, 3.7876547835129833`*^9, 3.787654879080615*^9, 
   3.787655464255149*^9, 3.7876555016781983`*^9, 3.7876618676056495`*^9, 
   3.7876671945613728`*^9, 3.7876681980633554`*^9, {3.787668282431913*^9, 
   3.7876682911146593`*^9}, 3.7897221549845486`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["at 3:4:5 configuration", "Subsection",
 CellChangeTimes->{{3.7867322552254925`*^9, 3.78673226071869*^9}, {
  3.786732317412713*^9, 3.7867323216523714`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x88rightPlot", "=", 
  RowBox[{"x88motion", "[", 
   RowBox[{"1.3924", ",", "23.934", ",", 
    RowBox[{"drSides", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7867098952265577`*^9, 3.7867098993878284`*^9}, {
  3.786710348484523*^9, 3.786710349044736*^9}, {3.786710534589535*^9, 
  3.7867106087963734`*^9}, {3.7867117756847525`*^9, 3.7867117797403426`*^9}, {
  3.787655504584614*^9, 3.787655511096061*^9}, {3.7876733202767324`*^9, 
  3.7876733232367764`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.3924, 1.}]}, {
    {RGBColor[0, 0, 1], Thickness[Large]}, 
    {PointSize[Large], FaceForm[None], 
     {EdgeForm[RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0]], FaceForm[{RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], Opacity[0.1]}]}, 
     {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
      PolygonBox[{{1.2726722281112182`, 0.40568404463362256`}, {
       0.43477572491529903`, -0.9500002444905129}, {-1.3728088705328658`, 
       0.16715897267943158`}}], 
      PointBox[{{1.2726722281112182`, 0.40568404463362256`}, {
       0.43477572491529903`, -0.9500002444905129}, {-1.3728088705328658`, 
       0.16715897267943158`}}]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      LineBox[{{-1.3924, 0}, {1.3924, 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
     {RGBColor[
       NCache[
        Rational[2, 3], 0.6666666666666666], 0, 0], Thickness[Large], 
      Dashing[{Small, Small}], 
      LineBox[{{-0.7482620388874482, -0.8433337603186137}, {
       1.2726502954220065`, 0.4057195316721882}}]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], 
      PointBox[{0.26217638504158314`, -0.21881808077340922`}], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->
         20], {0.26217638504158314`, -0.21881808077340922`}, {0, -1.5}]}, 
     {RGBColor[1, 0.5, 0], 
      PointBox[{0.4347795009828611, -0.9500421248483344}], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(4\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->
         20], {0.4347795009828611, -0.9500421248483344}, {-1.25, 1.25}]}, 
     {GrayLevel[0], PointBox[{-0.7482620388874482, -0.8433337603186137}], 
      InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(100\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->20], {-0.8314891184431371, -1.025194292674128}, {0, 0}]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      PointBox[{1.2726502954220065`, 0.4057195316721882}], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(88\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->
         20], {1.4427769377803392`, 0.5108714482494906}, {0, 0}]}, {}}}},
  PlotLabel->FormBox[
    StyleBox["\"a=1.39, t=23.93\[Degree], \[Rho]=1.00\"", {
      GrayLevel[0], 20}, StripOnInput -> False], TraditionalForm]]], "Output",
 CellChangeTimes->{{3.786710554960078*^9, 3.7867106094855037`*^9}, 
   3.786711780287878*^9, {3.7867118321200123`*^9, 3.7867118406667404`*^9}, 
   3.786719157192833*^9, 3.786730380305765*^9, 3.7876546624438667`*^9, 
   3.7876547863050632`*^9, 3.7876548815495663`*^9, 3.7876555114127717`*^9, 
   3.7876618689889345`*^9, 3.787667196065021*^9, 3.7876733236117744`*^9, 
   3.78972215501048*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x88both", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Show", "[", 
         RowBox[{"#", ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1.7"}], ",", "1.8"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1.5"}], ",", "1.1"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{
        "x88at15unalignedplot", ",", "x88at15plot", ",", "x88rightPlot"}], 
        "}"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"#", ",", "20"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"\"\<(a)\>\"", ",", "\"\<(b)\>\"", ",", "\"\<(c)\>\""}], 
        "}"}]}]}], "}"}], ",", 
    RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.787655516779891*^9, 3.787655626471978*^9}, {
  3.7876618735936036`*^9, 3.787661933076482*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
        {RGBColor[0, 0, 1], Thickness[Large]}, 
        {PointSize[Large], FaceForm[None], 
         {EdgeForm[RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0]], FaceForm[{RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], Opacity[0.1]}]}, 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{1.3907757818501811`, 0.3746065934159119}, {
           0.5650556233620118, -0.9263337873351334}, {-1.4870761066562261`, 
           0.13098711219413883`}}], 
          PointBox[{{1.3907757818501811`, 0.3746065934159119}, {
           0.5650556233620118, -0.9263337873351334}, {-1.4870761066562261`, 
           0.13098711219413883`}}]}, 
         {GrayLevel[0.5], Dashing[{Small, Small}], 
          LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
         {RGBColor[
           NCache[
            Rational[2, 3], 0.6666666666666666], 0, 0], Thickness[Large], 
          Dashing[{Small, Small}], 
          LineBox[{{-0.8944007145653385, -0.8027860824196394}, {
           1.456606425025125, 0.23879114312211563`}}]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          PointBox[{0.37865444808925175`, -0.2387787504340984}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {0.37865444808925175`, -0.2387787504340984}, {0, -1.5}]}, 
         {RGBColor[1, 0.5, 0], 
          PointBox[{0.5869901363363483, -1.185443934315534}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(4\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {0.5869901363363483, -1.185443934315534}, {1.25, 0}]}, 
         {GrayLevel[0], PointBox[{-0.8944007145653385, -0.8027860824196394}], 
          InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(100\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {-0.9831494721042295, -0.9820168220691291}, {0, 0}]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 
           NCache[
            Rational[2, 3], 0.6666666666666666]], 
          PointBox[{1.456606425025125, 0.23879114312211563`}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(88\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {1.6442484738497047`, 0.3080043030912575}, {0, 0}]}, {}}}},
      ImageSize->400,
      PlotLabel->FormBox[
        StyleBox["\"a=1.50, t=22.00\[Degree], \[Rho]=1.18\"", {
          GrayLevel[0], 20}, StripOnInput -> False], TraditionalForm],
      PlotRange->{{-1.7, 1.8}, {-1.5, 1.1}}], 
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
        {RGBColor[0, 0, 1], Thickness[Large]}, 
        {PointSize[Large], FaceForm[None], 
         {EdgeForm[RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0]], FaceForm[{RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], Opacity[0.1]}]}, 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{1.4056307459439883`, 0.3490954699454306}, {
           0.4769105910696313, -0.94811070336412}, {-1.4836139902634011`, 
           0.147406509572389}}], 
          PointBox[{{1.4056307459439883`, 0.3490954699454306}, {
           0.4769105910696313, -0.94811070336412}, {-1.4836139902634011`, 
           0.147406509572389}}]}, 
         {GrayLevel[0.5], Dashing[{Small, Small}], 
          LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
         {RGBColor[
           NCache[
            Rational[2, 3], 0.6666666666666666], 0, 0], Thickness[Large], 
          Dashing[{Small, Small}], 
          LineBox[{{-0.7611666579390144, -0.8616844792077513}, {
           1.4056409191557246`, 0.349077263905253}}]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          PointBox[{0.3222483346358982, -0.256297347100907}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {0.3222483346358982, -0.256297347100907}, {0, -1.5}]}, 
         {RGBColor[1, 0.5, 0], 
          PointBox[{0.49954937763599516`, -1.2724169757550827`}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(4\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {0.49954937763599516`, -1.2724169757550827`}, \
{-1.25, 1.25}]}, 
         {GrayLevel[0], PointBox[{-0.7611666579390144, -0.8616844792077513}], 
          InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(100\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {-0.8342554661041655, -1.0478511414246954`}, {0, 0}]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 
           NCache[
            Rational[2, 3], 0.6666666666666666]], 
          PointBox[{1.4056409191557246`, 0.349077263905253}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(88\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {1.5802339196320059`, 0.44663383305715226`}, {0, 0}]}, {}}}},
      ImageSize->400,
      PlotLabel->FormBox[
        StyleBox["\"a=1.50, t=20.43\[Degree], \[Rho]=1.00\"", {
          GrayLevel[0], 20}, StripOnInput -> False], TraditionalForm],
      PlotRange->{{-1.7, 1.8}, {-1.5, 1.1}}], 
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.3924, 1.}]}, {
        {RGBColor[0, 0, 1], Thickness[Large]}, 
        {PointSize[Large], FaceForm[None], 
         {EdgeForm[RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0]], FaceForm[{RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], Opacity[0.1]}]}, 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{1.2726722281112182`, 0.40568404463362256`}, {
           0.43477572491529903`, -0.9500002444905129}, {-1.3728088705328658`, 
           0.16715897267943158`}}], 
          PointBox[{{1.2726722281112182`, 0.40568404463362256`}, {
           0.43477572491529903`, -0.9500002444905129}, {-1.3728088705328658`, 
           0.16715897267943158`}}]}, 
         {GrayLevel[0.5], Dashing[{Small, Small}], 
          LineBox[{{-1.3924, 0}, {1.3924, 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
         {RGBColor[
           NCache[
            Rational[2, 3], 0.6666666666666666], 0, 0], Thickness[Large], 
          Dashing[{Small, Small}], 
          LineBox[{{-0.7482620388874482, -0.8433337603186137}, {
           1.2726502954220065`, 0.4057195316721882}}]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          PointBox[{0.26217638504158314`, -0.21881808077340922`}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {0.26217638504158314`, -0.21881808077340922`}, {0, -1.5}]}, 
         {RGBColor[1, 0.5, 0], 
          PointBox[{0.4347795009828611, -0.9500421248483344}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(4\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {0.4347795009828611, -0.9500421248483344}, {-1.25, 1.25}]}, 
         {GrayLevel[0], PointBox[{-0.7482620388874482, -0.8433337603186137}], 
          InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(100\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {-0.8314891184431371, -1.025194292674128}, {0, 0}]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 
           NCache[
            Rational[2, 3], 0.6666666666666666]], 
          PointBox[{1.2726502954220065`, 0.4057195316721882}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(88\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {1.4427769377803392`, 0.5108714482494906}, {0, 0}]}, {}}}},
      ImageSize->400,
      PlotLabel->FormBox[
        StyleBox["\"a=1.39, t=23.93\[Degree], \[Rho]=1.00\"", {
          GrayLevel[0], 20}, StripOnInput -> False], TraditionalForm],
      PlotRange->{{-1.7, 1.8}, {-1.5, 1.1}}]},
    {
     StyleBox["\<\"(a)\"\>",
      StripOnInput->False,
      FontSize->20], 
     StyleBox["\<\"(b)\"\>",
      StripOnInput->False,
      FontSize->20], 
     StyleBox["\<\"(c)\"\>",
      StripOnInput->False,
      FontSize->20]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{0}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7876555734821143`*^9, 3.787655626797762*^9}, {
   3.7876618781975574`*^9, 3.7876618938177743`*^9}, {3.7876619252733545`*^9, 
   3.7876619338145075`*^9}, 3.7897221550553627`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x88both2", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Show", "[", 
             RowBox[{"x88at15unalignedplot", ",", 
              RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Show", "[", 
             RowBox[{"x88at15plot", ",", 
              RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], "}"}]}], 
          "}"}], ",", 
         RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}], ",", 
       RowBox[{"Show", "[", 
        RowBox[{"x88rightPlot", ",", 
         RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}], "}"}], "}"}], 
    ",", 
    RowBox[{"Frame", "\[Rule]", "All"}], ",", 
    RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7876731945970325`*^9, 3.787673308676758*^9}, {
  3.787673344102971*^9, 3.787673385981456*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         GraphicsBox[{
           {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
            {RGBColor[0, 0, 1], Thickness[Large]}, 
            {PointSize[Large], FaceForm[None], 
             {EdgeForm[RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0]], FaceForm[{RGBColor[
              0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0], Opacity[0.1]}]}, 
             {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
              PolygonBox[{{1.3907757818501811`, 0.3746065934159119}, {
               0.5650556233620118, -0.9263337873351334}, \
{-1.4870761066562261`, 0.13098711219413883`}}], 
              PointBox[{{1.3907757818501811`, 0.3746065934159119}, {
               0.5650556233620118, -0.9263337873351334}, \
{-1.4870761066562261`, 0.13098711219413883`}}]}, 
             {GrayLevel[0.5], Dashing[{Small, Small}], 
              LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
             {RGBColor[
               NCache[
                Rational[2, 3], 0.6666666666666666], 0, 0], Thickness[Large], 
              Dashing[{Small, Small}], 
              LineBox[{{-0.8944007145653385, -0.8027860824196394}, {
               1.456606425025125, 0.23879114312211563`}}]}, 
             {RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0], 
              PointBox[{0.37865444808925175`, -0.2387787504340984}], InsetBox[
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)\"\>",
                StripOnInput->False,
                
                FontSize->
                 20], {0.37865444808925175`, -0.2387787504340984}, \
{0, -1.5}]}, 
             {RGBColor[1, 0.5, 0], 
              PointBox[{0.5869901363363483, -1.185443934315534}], InsetBox[
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(4\\)]\\)\"\>",
                StripOnInput->False,
                FontSize->20], {0.5869901363363483, -1.185443934315534}, 
               {1.25, 0}]}, 
             {GrayLevel[0], 
              PointBox[{-0.8944007145653385, -0.8027860824196394}], InsetBox[
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(100\\)]\\)\"\>",
                StripOnInput->False,
                
                FontSize->
                 20], {-0.9831494721042295, -0.9820168220691291}, {0, 0}]}, 
             {RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 
               NCache[
                Rational[2, 3], 0.6666666666666666]], 
              PointBox[{1.456606425025125, 0.23879114312211563`}], InsetBox[
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(88\\)]\\)\"\>",
                StripOnInput->False,
                
                FontSize->
                 20], {1.6442484738497047`, 0.3080043030912575}, {0, 0}]}, \
{}}}},
          ImageSize->400,
          PlotLabel->FormBox[
            StyleBox["\"a=1.50, t=22.00\[Degree], \[Rho]=1.18\"", {
              GrayLevel[0], 20}, StripOnInput -> False], TraditionalForm]]},
        {
         GraphicsBox[{
           {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
            {RGBColor[0, 0, 1], Thickness[Large]}, 
            {PointSize[Large], FaceForm[None], 
             {EdgeForm[RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0]], FaceForm[{RGBColor[
              0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0], Opacity[0.1]}]}, 
             {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
              PolygonBox[{{1.4056307459439883`, 0.3490954699454306}, {
               0.4769105910696313, -0.94811070336412}, {-1.4836139902634011`, 
               0.147406509572389}}], 
              PointBox[{{1.4056307459439883`, 0.3490954699454306}, {
               0.4769105910696313, -0.94811070336412}, {-1.4836139902634011`, 
               0.147406509572389}}]}, 
             {GrayLevel[0.5], Dashing[{Small, Small}], 
              LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
             {RGBColor[
               NCache[
                Rational[2, 3], 0.6666666666666666], 0, 0], Thickness[Large], 
              Dashing[{Small, Small}], 
              LineBox[{{-0.7611666579390144, -0.8616844792077513}, {
               1.4056409191557246`, 0.349077263905253}}]}, 
             {RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0], 
              PointBox[{0.3222483346358982, -0.256297347100907}], InsetBox[
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)\"\>",
                StripOnInput->False,
                
                FontSize->
                 20], {0.3222483346358982, -0.256297347100907}, {0, -1.5}]}, 
             {RGBColor[1, 0.5, 0], 
              PointBox[{0.49954937763599516`, -1.2724169757550827`}], InsetBox[
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(4\\)]\\)\"\>",
                StripOnInput->False,
                
                FontSize->
                 20], {0.49954937763599516`, -1.2724169757550827`}, \
{-1.25, 1.25}]}, 
             {GrayLevel[0], 
              PointBox[{-0.7611666579390144, -0.8616844792077513}], InsetBox[
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(100\\)]\\)\"\>",
                StripOnInput->False,
                
                FontSize->
                 20], {-0.8342554661041655, -1.0478511414246954`}, {0, 0}]}, 
             {RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 
               NCache[
                Rational[2, 3], 0.6666666666666666]], 
              PointBox[{1.4056409191557246`, 0.349077263905253}], InsetBox[
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(88\\)]\\)\"\>",
                StripOnInput->False,
                
                FontSize->
                 20], {1.5802339196320059`, 0.44663383305715226`}, {0, 0}]}, \
{}}}},
          ImageSize->400,
          PlotLabel->FormBox[
            StyleBox["\"a=1.50, t=20.43\[Degree], \[Rho]=1.00\"", {
              GrayLevel[0], 20}, StripOnInput -> False], TraditionalForm]]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], 
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.3924, 1.}]}, {
        {RGBColor[0, 0, 1], Thickness[Large]}, 
        {PointSize[Large], FaceForm[None], 
         {EdgeForm[RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0]], FaceForm[{RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], Opacity[0.1]}]}, 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{1.2726722281112182`, 0.40568404463362256`}, {
           0.43477572491529903`, -0.9500002444905129}, {-1.3728088705328658`, 
           0.16715897267943158`}}], 
          PointBox[{{1.2726722281112182`, 0.40568404463362256`}, {
           0.43477572491529903`, -0.9500002444905129}, {-1.3728088705328658`, 
           0.16715897267943158`}}]}, 
         {GrayLevel[0.5], Dashing[{Small, Small}], 
          LineBox[{{-1.3924, 0}, {1.3924, 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
         {RGBColor[
           NCache[
            Rational[2, 3], 0.6666666666666666], 0, 0], Thickness[Large], 
          Dashing[{Small, Small}], 
          LineBox[{{-0.7482620388874482, -0.8433337603186137}, {
           1.2726502954220065`, 0.4057195316721882}}]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          PointBox[{0.26217638504158314`, -0.21881808077340922`}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {0.26217638504158314`, -0.21881808077340922`}, {0, -1.5}]}, 
         {RGBColor[1, 0.5, 0], 
          PointBox[{0.4347795009828611, -0.9500421248483344}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(4\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {0.4347795009828611, -0.9500421248483344}, {-1.25, 1.25}]}, 
         {GrayLevel[0], PointBox[{-0.7482620388874482, -0.8433337603186137}], 
          InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(100\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {-0.8314891184431371, -1.025194292674128}, {0, 0}]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 
           NCache[
            Rational[2, 3], 0.6666666666666666]], 
          PointBox[{1.2726502954220065`, 0.4057195316721882}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(88\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {1.4427769377803392`, 0.5108714482494906}, {0, 0}]}, {}}}},
      ImageSize->600,
      PlotLabel->FormBox[
        StyleBox["\"a=1.39, t=23.93\[Degree], \[Rho]=1.00\"", {
          GrayLevel[0], 20}, StripOnInput -> False], TraditionalForm]]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{0}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7876733090138254`*^9, 3.787673386301571*^9}, 
   3.7897221550970173`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"export3", "[", 
  RowBox[{"\"\<0052_x88_both\>\"", ",", "x88both2"}], "]"}]], "Input",
 CellChangeTimes->{{3.787655639358899*^9, 3.787655658231377*^9}, 
   3.7876733968932714`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"introPlot", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "1.5"}], ",", "ons", ",", "o1", ",", "n1", ",", "s1", 
      ",", "inc1", ",", "peds1", ",", "deg100", ",", 
      RowBox[{"deg1", "=", "30"}], ",", 
      RowBox[{"degStep", "=", "1"}], ",", 
      RowBox[{"degRange", "=", "360"}], ",", "degs", ",", "poly1", ",", "ell",
       ",", "gr", ",", 
      RowBox[{"clr", "=", "Blue"}], ",", 
      RowBox[{"incClr", "=", 
       RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}]}], ",", 
      RowBox[{"lgt", "=", ".33"}], ",", "incs", ",", "peds", ",", 
      RowBox[{"pedClr", "=", 
       RowBox[{"Darker", "@", "Orange"}]}], ",", "delta", ",", "a1", ",", 
      "b1", ",", 
      RowBox[{"thick", "=", ".005"}], ",", 
      RowBox[{"rho", "=", ".33"}], ",", "convexComb"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"degs", "=", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "degRange", ",", "degStep"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ell", "=", 
      RowBox[{"plotEll", "[", 
       RowBox[{"a", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "@", "thick"}], ",", "Black"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ons", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"orbitNormals", "[", 
         RowBox[{"a", ",", 
          RowBox[{"toRad", "@", "#"}]}], "]"}], "&"}], "/@", "degs"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"o1", ",", "n1", ",", "s1"}], "}"}], "=", 
      RowBox[{"orbitNormals", "[", 
       RowBox[{"a", ",", 
        RowBox[{"toRad", "@", "deg1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"inc1", "=", 
      RowBox[{"getIncenterTrilin", "[", 
       RowBox[{"o1", ",", "s1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"peds1", "=", 
      RowBox[{"intouchTriangle", "[", 
       RowBox[{"o1", ",", "s1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"incs", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"getIncenterTrilin", "[", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "&"}], "/@", "ons"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"peds", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"intouchTriangle", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", "ons"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"delta", "=", 
      RowBox[{
       RowBox[{"a", "^", "4"}], "-", 
       RowBox[{"a", "^", "2"}], "+", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a1", ",", "b1"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"delta", "-", "1"}], ")"}], "/", "a"}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", "^", "2"}], "-", "delta"}], ")"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"convexComb", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "rho"}], ")"}], "inc1"}], "+", 
       RowBox[{"rho", " ", 
        RowBox[{"peds1", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gr", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"FaceForm", "@", "None"}], ",", 
         RowBox[{"PointSize", "@", "Large"}], ",", 
         RowBox[{"Thickness", "@", "thick"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Dashed", ",", "incClr", ",", 
           RowBox[{"Circle", "[", 
            RowBox[{"inc1", ",", 
             RowBox[{"magn", "[", 
              RowBox[{
               RowBox[{"peds1", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", "inc1"}], "]"}]}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "@", "thick"}], ",", "clr"}], "}"}]}], ",", 
           RowBox[{"Polygon", "@", "o1"}], ",", "Blue", ",", 
           RowBox[{"Point", "@", "o1"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Dashed", ",", "incClr", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Line", "@", 
                RowBox[{"{", 
                 RowBox[{"#", ",", "inc1"}], "}"}]}], "&"}], "/@", "o1"}]}], 
            "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Dashed", ",", "Gray", ",", "Thick", ",", 
           RowBox[{"Line", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "a"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "0"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Line", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"incClr", ",", 
           RowBox[{"Line", "@", "incs"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"pedClr", ",", 
           RowBox[{"Point", "@", "peds1"}], ",", 
           RowBox[{"Line", "@", "peds"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "@", "Large"}], ",", "Gray", ",", "Dashed", 
           ",", 
           RowBox[{"Line", "@", 
            RowBox[{"{", 
             RowBox[{"inc1", ",", 
              RowBox[{"peds1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"Point", "@", "convexComb"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(Y\), \(1\)]\)(\[Rho])\>\"", ",", 
               "16"}], "]"}], ",", "convexComb", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1.25"}], ",", ".5"}], "}"}]}], "]"}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"pedClr", ",", 
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"#1", ",", "20"}], "]"}], ",", "#2", ",", "#3"}], 
               "]"}], "&"}], ",", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(I\), \(1\)]\)\>\"", ",", 
                 "\"\<\!\(\*SubscriptBox[\(I\), \(2\)]\)\>\"", ",", 
                 "\"\<\!\(\*SubscriptBox[\(I\), \(3\)]\)\>\""}], "}"}], ",", 
               "\[IndentingNewLine]", "peds1", ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{".5", ",", 
                   RowBox[{"-", "1.5"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "1.25"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1.25", ",", 
                   RowBox[{"-", "1.5"}]}], "}"}]}], "}"}]}], 
              "\[IndentingNewLine]", "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"incClr", ",", 
           RowBox[{"Point", "@", "inc1"}], ",", 
           RowBox[{"ellLabelTxtb", "[", 
            RowBox[{"a1", ",", "b1", ",", "inc1", ",", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(X\), \(1\)]\)\>\"", ",", "20"}], 
              "]"}], ",", ".1"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
        "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ell", ",", "gr"}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7760669415555067`*^9, 3.776067677932294*^9}, {
  3.786709978635043*^9, 3.7867099809236083`*^9}, {3.788168193991885*^9, 
  3.788168194159832*^9}, {3.789988700430239*^9, 3.789988722999034*^9}, {
  3.7899887624082856`*^9, 3.789988815831929*^9}, {3.78998884987792*^9, 
  3.789989157957034*^9}, {3.7899891904268293`*^9, 3.789989353907447*^9}, {
  3.7899913071090593`*^9, 3.7899913968359175`*^9}, {3.790066305568524*^9, 
  3.790066311834382*^9}, {3.7900663739394417`*^9, 3.790066677186867*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], Thickness[0.005], CircleBox[{0, 0}, {1.5, 1.}]}, 
   {PointSize[Large], Thickness[0.005], FaceForm[None], 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], Dashing[{Small, Small}], 
     CircleBox[{0.5667693891484438, -0.13416331091005987`}, 
      0.5137168076344588]}, 
    {EdgeForm[{RGBColor[0, 0, 1], Thickness[0.005]}], 
     PolygonBox[{{1.299038105676658, 0.5000000000000001}, {
      0.8995352945247652, -0.8002322590360164}, {-1.4969411981678697`, 
      0.06382980574323183}}], 
     {RGBColor[0, 0, 1], 
      PointBox[{{1.299038105676658, 0.5000000000000001}, {
       0.8995352945247652, -0.8002322590360164}, {-1.4969411981678697`, 
       0.06382980574323183}}]}}, 
    {GrayLevel[0.5], Thickness[Large], Dashing[{Small, Small}], 
     LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], LineBox[CompressedData["
1:eJxd2HlczvkWB/CEsdRkmiYVkSLGJWSXOFkay6iUbRgiWYYYskZRKY0SIaGi
SNlKlkyRJ2c0VErbk9K+PDV3EkbMjavIvfc5n/lj7l/90eup5/f7nnM+7/M1
XbnJabWmhobGug4aGv/7GdKc9miqUwMn7hqy97BfneLB2/XTXw9s4CStxuGn
Tp/nlVU6KYEX6tmlX9/9mmuTeOeV4d8cLVaxRfHr9tMnFdxl5NCyAXfr+Frs
dJOE8HQ+Ombukx9W1PLVwY1dzwVlcEF6dnJqdBWvfu627u4X2bz7QWXz4sHl
7DHP9utfzXJZ28o+UXdbCesFmcdpKfLZyPDhLZswJd+Z1WP7x5cF3DZfc+dL
m1ze2+xy+Hp6Ic8dMr6Tyu4hH3SZZ1blrOSnOgGZK6tS+Vh8YI/xGUo2PTfo
aOrLC+ygd/ex/kclD0k/eeDooYPk/ZNbrEnXIv6wxzN/Od8gvfOjNhi8UPJu
mxVp85cxTQ35MfnyVSWfrXAbmd83gzQcG0fbOSp5g3n7PI2hj2m1q9lCi4pC
Tk7S1hrXVEDrkxe/7ONQyN4j9SO0g4toufmzzLDrBWx327Rp5Idisk8udkjU
LGDj/PtVNRNL6aaO9kK7I3l8tXnI8otzysnuzL8tlZ/lcsnyKb8vHVFJY7y3
Tei/MYe/vN11RVtjFf2+NHtfU8Yjzqt/uu6YRw21NRm3OhlksbVzg9bpzbW0
9zsPRU+XDK5xTxvk/WUdPZ19Pzr4wgPuXFkZ2BJTR5c+jk+49SydqwNKD783
U1Hu9EUbpg29z6m82tQzVEUj7Yx6f1dzj0tr/KOcW1Q0P3rVz07r7/K+dAMb
r1n19Kpq5LSDbSl8alf68+gj9dToUznq1+O3eL9y6LeBOfXkmeKWs23cDc5s
Pmf4orWe/BNqetx9FM/XVPkhm00aaNX2sWN0rOM40n7C26QJDfRo7/f+1iFn
uHjka8tZsxto/JtnfVMqjvBjm/C1dxwb6Gnd9LAUb3eeuGJHhP/c/34+L8Ai
9oA35bdWzzab0UDaupN93jSGUlq+yxeaYxsoZ+rSNpOkaDLuU2kR3KeBRuxs
zi6MjqMG58V9zdrr6Zfxm0uU38RTx5m6vUxK68mvWNnZZO11OjRwVGhpfD2V
XOge39gribaWbboStaueShf3srp672fqELkyUjGlnjSNw8yWON2m1kgj012d
6ukzlYJUxanE0/SLeqaraGdkTK31rDQKCjPzfLJbRSc2e79dlcC0/onXqpfD
VBTy7yeWCZ9+IY6Niw2vrqP3my2StEzTKbp0pbNOUB310Tj+uZPVr6SbZv9p
j2Udffe8rJvvtw/IptzVw7C4lrb0n/0pYv5D8hvR6K61vZaUW5oTYxZk0DGP
np77dGup7z1j80j7TLo3QuFmv6CGtPuPOvsTZdHB/kbtU32r6eTWD55uXz+i
BeeXDBx+sYo2WGT1m90tm/40z1uxNLOSDizObhmoyqZWc0s3XVUF2TqPWdg5
KYcS7VR7jr0rJ5dvYg40ej6mluxdPqZdy6k6c93tIutcajUebtWuV0ampWea
H7XkUqrN+r1repfSVNPlhnkX8qhwQcmCE32f0qQT85pVDvl0+er0AVl9Suh8
rpau1ut8Gnb2Us5oo2Jq69Zz+wDbAtrt++NjPd0nFPh1L5f8QwX0JnS9a2Tn
IjoQ7vr9T8oCsi4+GafxrpAq86442+kV0uLWsvCdvxVQwjktJ7O5hTQ5pv7c
mph8GrEgqluXwELy1Y5+l7Mtl7hmwIwPaYXUvb5YY9/UHHKc8TBV81Uh2Wsf
7tWk9Yhmvsju2NtYSddP7F+0qjCDfgtcd8PWVkmtCddiHEIf0G6PPdP81ivJ
aFBWTTendPLbaDvkyUElTfQa0735819IP+jLx+MvK+nCH+WxisN3Ka7LC88b
6UpaZWG8bcXHZHplO8B/cqmSAmpvLvP94SZFfV9lWvtMSaltnUIvnYun7uc9
A068U9K+k0mKXj/GkGmXzqUuHYpIed4o12fTMTIx3GA5tUsR/e56yGANp1gv
GZYRM65bEXnFqH/PBvg9Ps9G+Dz+Phvi73vJ/+cz+P+T5ftxI77fTvn+fAXf
f7A8H//1fH8MVD8/b8PzN8j74Y14P97y/rgC789E3i9Px/t9rlK/f56L9z9H
zodTcD5j5fx4MM5vkpwvn8L5msv581Ocf5nUB3ujPrZI/bAX6meE1Be3o76u
SP1xIurvidQnW6M+L0j98hjUb6c+6vrm0ajvbKl/vof6vyb9wcvQHyrpHx6K
/nkh/cUH0V9DpP94IvovQPqTw9GfV6R/uclM+veo9Debor99pP85F/0/WeYD
78B8eKtQzw/Wx/w4LvOFv8J8SZX5w28wf7bKfOIbmE/BMr/4DuZXiMw3Phch
861J5h9n1Mn8q4pQz0e26S3zcZHMT3bG/HSX+cpumK8vZqjnL2ti/mbJfGZL
zOd2Y/X8Ztoh8/uSzHeOmCLzXSHzn6t6yPw3lHzgxRmSD4mSHxz+T8mPfMkX
Pot8CZP84Uzkz27JJ87aIflUJPnF7fGSX2sl37gc+bZD8o/tfSX//CQfuQz5
GCz5yTpnJT+PSr5yDPL1juQvv0H+tlao85kTkM/5kt9ci/z+SvKdo5DvMyX/
efRzyX//FLUPuM8y8cEi8QO7wg9XxBfsCF945Kn9wfnwxyjxCTvCJ2st1X7h
XfDLLfENr4VvHMQ/vAr+yShX+4g14aP3pPYT28BP/b3UvmJt+Cr3ttpf7Al/
fRKf0Uz47Kyu2m/kDr/9IL4jf/iuSfxHu+E/+JCS4MMl4keqDBQ/rhZf0gn4
slz8Sa7w503xKc2ATyeIX0kHfnUT35IjfLtB/EsFJuLfLPEx+XUXH8PPBD9b
w88EPxP8TPAzwc8EPxP8TPAzwc8EPxP8TPAzwc8EP1PJBHn+4eJn+uv9wM8E
PxP8TPAzwc8EPxP8TPAzwc8EPzP8TAf2yvl+JedLx6bI+cPP1CJ+5g5SHwQ/
M/xM8DPDz+QufmZXqT+Cnxl+JviZ4We6iPpeIvVNOaj/SVL/1FH8zP8SP1MN
+qdZ/Exz0F9rpL/oGfrvofQfwc8MPxP8zPAzwc8MPxP8zPAzwc8MPxP8zPAz
BWC+RMt8IfiZ4We6jvm0X/xM8DM/kPlF8DPDzwQ/M/xMVpiPCeJnhp8Zfmb4
meFnhp8Zfmb4meFn7iJ+5jkyvzkY8x1+5u2Y/7ky//kj8sFM/MwtyI9B4mdO
Q76Ei585EPmTJvnD8DOHSz7xfeTXO8kvjkG+6Uu+sb74medL/vEU5KOb5CMH
/D0/OQz5+oXkKyuQvxriZw5CPodKPvM85LeL5DfDzww/80fk/xTJf46HD1aK
D/hP+OFP8QN/FD+zjviCU+CPWeIProBPrMQnnAq/HBK/8Cj45r34hn3gHx/x
Dz+Dj+BnHg8/wc88D766Ib7i2fDXcPEX+8Fn98Vn3Fv8zPbiNx4L3zmJ7zgZ
/oOfuetV8eE28SG3w48HxI88Ar40FF+yAv4MF3/yRvj0pfiUY+DX0+JXHgPf
9hTfchT8qy/+ZfiZ4Wd+6RBb4//ppmKp+JkPi5+pH34/C/4egM/7/t3nfBB+
j8X/XwLfv8D3OwX/X8b3H4X9QA/P1yzPTx54/kzsFy54P5uxf1Tj/RlgP5mD
99smfiYHvH8b7De3cD7DsP8Y4fxssB8dx/n2x/6Ui/Mvx34FP/Mm7F97UT/6
2M+eob7isL+dRP1lY7/rj/qMxf5HqN9X2A/1UN9Z2B8foP5DsF8OQn/UYv/8
B/qnCftpCPprMPbX3ui/rdhv3dCfPth/L4qf+Tj249Ho73XYnwPQ/1bYr90x
H7pi/7bC/DiJ/dwA8+Wv/b27u8yftdjvfTGf4GeKwPyKwP1AjviZq3F/cET8
zO9kPlKF+JmX4P4BfuYg3E8oMV9bxM80FvP3Hu43fhsn87kj7j92iJ/5FO5H
2m1kvsPPBD+zMe5XNmZJPhzD/UtQs+QH/ExlyBf4meBnCsT9zkLxM8HPBD/T
JtwPKZBvUbg/ikf+bcD9kmW15ON53D8VIT+DcT+VgHx9jPsrFfK3VPxMJchn
+JngZ4KfCX6mLbg/MxY/U6j4mfqJnwl+JviZ7uJ+bgZ8AT8T/ExdcL9nB5/A
zwQ/E/xM8DPBzwQ/kwHuFz+Dj+Bngp8Jfib4meBngp8Jfmb4mcJw/xkEv8HP
DD8T/MzwM03C/WoifAg/M/xMYx/K/WyNk/gSfmb4meBnhp/JAPe/++FX+Jnh
Z4KfGX4m+JnhZ/r/++f/AIbC7J4=
      "]]}, 
    {RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 0], 
     PointBox[{{0.3925260005858717, -0.6174274208834492}, {
      0.48758772039470466`, 0.37341448783562264`}, {
      1.0578294571673341`, -0.2850439526220511}}], LineBox[CompressedData["
1:eJxd2HlYznkXBvDIjG0yBtllzWDINoZJuskekZgsMdkja+O1ZIY0tiFLUpct
jSVb4w0x2RqnmpD2TSktT0nG0oVmZMnb8877nHv+8P7lcnX19Px+33PO/fme
9rOXucyraWZmtrCGmdn//o3wi/ujjmOFNLLudDTE+0VUYJLjTaNNhXjNWWZX
FH5JHlodaJ1X+FLSOlmd2OoTJ4mOTWznTn8poe1Hhh8bkyJvvc3HfnT2hYQ6
bF3aLCFT5g7/vXvSyefSLDEy3L71PakefdHRIqJcloZP+aT803xZPvqjBke3
PpWwi+fHVwQXyYnro/Jm93ssj/e5hu12LxbXWU+9d8aXSdzMkpTyayXydlqP
boOcSmVTQkfP+OIHEubxn6FWKcVivefdft/sUllvVjFw2+lCuVNuVTUp+KGk
7o1LHpWSK6eO/ZZRr3+ZDIusfWdki7ti7NGoc2RYmUx3WLz0+4A0md9v2XGf
qr9/bt/owIUN8fK7+a8j1vV4JLU3du8wf1y0+LuahQQNeyRfFztendP5glw5
VV6x+O//h7zu7uBtuVnC2/VfNK3XI8l02Tg6IP8E9qddGDqn/iOZdaf35Ge7
L2Nq8wPrbe+Vya2370uahsZgW/T40KEHyiQ99ciLBZ/eRpXnqPX7nMvktkXf
U4saJOHeiz2Vdc3K5I/gK0VGlzSs9Lvq0+vMQwm5uOuH4CUZOFTfdt8Cp4cy
0egy7/DULHQ1N2tRWF4ql146193dIhvX4p/02+NXKgufDa/x/FwONj/o/qfb
56WS1Cnb3bptLrp09Ov8OuaBHHzqaLdhYR7M2jUtr3Z7IKHdrP/qtec+PGcO
PFL5qkR+qfa56rg/H7VtC5zH+peI1e64FrEbClA66+sMty9KxDbAwnbJ2ELc
qRjv7nW7WGYO7xdU6z+F8HQ+/DBxbrGkx7o27hRYhI12B40h5sWSOKm6x8m6
Bow5nXC6SahBPDflWlcMMmDF5xMujRthkEkhCYMOexjg2bxf67SsIhH7Wh5D
txoweOuJQ0/bFUnfwxeqVh424Jl35dCGXoUyv7NxXVSYATMt5/R2vVkgjc2P
jQ86Z8DxHe+CUtoUiF3xdzNXnTVgxovwgk1r88U6b2Rm8lEDOvRpdsrn/n2x
8Tizv6a/AdWrO+6LGXxfjNXjjf9abUDFlA4WjmF5YjMywNZnigGW+yKuWzbP
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
H6Kfj+P8fHf6fQD/vhd9H8zvF0z/R/H7/877QSSfbxbvD458/lfb9H6xj+9n
Cu8f6/n+4vX9ogvf7xLeX1z4/ifzfhPN81nF+88Enp8L70dN1c+4on5GzUd6
/vQz6GcU8/5FP6MT72d5rK8JvL81Z/0Z9+r9zp71uZT3vzas32LeDwNY39Xq
Z/Rl/bfl/XIp+4N+hhP7p5L3U/oZGepnuLL/OvB+u5j9eUr9jHHs3z68H/uz
v3fx/lzN/p/E+/U/88GF9++bnB9beD9fwflSi/d3K86fSbzfJ3M+zf3w/o8v
uR/oon5Gd+4PnDj/2nO/0IXzMY/7hzbqZ1hzP1FD/QwL7i8Gcv7W4n5jG+fz
S/UzEji/+3M/soPznX4G/Yy93K94MB/MuH8R5gf9jNXMF/oZ9DMWcr9zkPlE
P4N+hhn3QznMt57cH+Uz/5Zzv9SI+WjJ/ZMv89OK+yn6GUe4v7Jh/lY+1f1W
IPOZfgb9DPoZ9DOsuD87yfwfxv3aZvqAfgb9jDppup97S1/Qz6CfUXFb93vT
6BP6GfQz6Gehn0E/C/2MmA/3i6CfhX4G/Sz0M+hnoZ9BPwv9jKXcf96i3+hn
oZ9BPwv9jGXcr0bSh/Sz0M94yP3s+wj1Jf0s9DPoZ6GfYaZ+Fm/6lX4W+hn0
s9DPoJ+Ffsb/75//C+bG9aQ=
      "]]}, 
    {GrayLevel[0.5], Thickness[Large], Dashing[{Small, Small}], 
     LineBox[{{0.5667693891484438, -0.13416331091005987`}, {
      0.3925260005858717, -0.6174274208834492}}], 
     PointBox[{0.5092690709227949, -0.29364046720127834`}], InsetBox[
      StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(Y\\), \\(1\\)]\\)(\[Rho])\"\>",
       StripOnInput->False,
       FontSize->
        16], {0.5092690709227949, -0.29364046720127834`}, {-1.25, 0.5}]}, 
    {RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 0], InsetBox[
      StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(1\\)]\\)\"\>",
       StripOnInput->False,
       FontSize->20], {0.3925260005858717, -0.6174274208834492}, {0.5, -1.5}],
      InsetBox[
      StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(2\\)]\\)\"\>",
       StripOnInput->False,
       FontSize->
        20], {0.48758772039470466`, 0.37341448783562264`}, {-1, 1.25}], 
     InsetBox[
      StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(3\\)]\\)\"\>",
       StripOnInput->False,
       FontSize->
        20], {1.0578294571673341`, -0.2850439526220511}, {1.25, -1.5}]}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], 
     PointBox[{0.5667693891484438, -0.13416331091005987`}], InsetBox[
      StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)\"\>",
       StripOnInput->False,
       FontSize->20], {0.6614215131645839, -0.1664274615920977}]}}},
  ImageSize->Large]], "Output",
 CellChangeTimes->{{3.789989135087841*^9, 3.789989158561415*^9}, {
   3.7899892772203083`*^9, 3.789989354528701*^9}, {3.7899913283126993`*^9, 
   3.7899913974781947`*^9}, 3.7900663126545086`*^9, {3.7900663809299927`*^9, 
   3.7900664923622828`*^9}, {3.790066570898143*^9, 3.790066595211301*^9}, {
   3.7900666315282803`*^9, 3.790066677914383*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{"\"\<1020_incenter_locus\>\"", ",", "introPlot"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.776067683583185*^9, 3.7760677183203106`*^9}, {
  3.7862610663866205`*^9, 3.7862610804355016`*^9}, {3.786270050583102*^9, 
  3.7862700569421024`*^9}, {3.78998940332754*^9, 3.7899894373045597`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x59Plot1", "=", "\[IndentingNewLine]", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"plotX59", "[", 
     RowBox[{"1.5", ",", 
      RowBox[{"deg1", "\[Rule]", "30."}], ",", 
      RowBox[{"x59displ", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", ".25"}], ",", 
         RowBox[{"-", "1.5"}]}], "}"}]}], ",", 
      RowBox[{"lgt", "\[Rule]", ".15"}], ",", 
      RowBox[{"degStep", "\[Rule]", ".5"}], ",", 
      RowBox[{"thickness", "\[Rule]", ".005"}], ",", 
      RowBox[{"drPs", "\[Rule]", "False"}]}], "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "None"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.790000933359126*^9, 3.7900009794309406`*^9}, {
  3.790062728468079*^9, 3.790062793014483*^9}, {3.7900629191717634`*^9, 
  3.790062942595359*^9}, {3.7900631535786276`*^9, 3.790063187802786*^9}, {
  3.790063241930678*^9, 3.7900632445536404`*^9}, {3.7900634255463114`*^9, 
  3.790063430842961*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], Thickness[0.005], CircleBox[{0, 0}, {1.5, 1.}]}, 
   {PointSize[Large], Thickness[0.005], FaceForm[None], 
    {EdgeForm[{RGBColor[0, 0, 1], Thickness[0.005]}], 
     PolygonBox[{{1.299038105676658, 0.5000000000000001}, {
      0.8995352945247652, -0.8002322590360164}, {-1.4969411981678697`, 
      0.06382980574323183}}], 
     PointBox[{{1.299038105676658, 0.5000000000000001}, {
      0.8995352945247652, -0.8002322590360164}, {-1.4969411981678697`, 
      0.06382980574323183}}], {}}, 
    {GrayLevel[0.5], Thickness[Large], Dashing[{Small, Small}], 
     LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
    {RGBColor[1., 0.27058823529411763`, 0], LineBox[CompressedData["
1:eJwVl3k4FA4Txx3JEdKBiBQRP1ehS2ncKR3OypFEKSVRQiJ0F6Uicl8pVyI5
IoZlkZBd7IWs+9xd93ao3t6/5plnnpnnO/98Zr6b3C7bnOXj4eE5z8vD8/94
wbxKZ/wvF9bP91hx+lQgVWDp5y85LrTlj3nPk0JAPUR8y66yeRAwoeQ7hATA
5p8WnESLGTgVphz6/NEd3LBK+t6rmgmo8mxsHrXMwpdlxncT2QNwZFVupLlT
KXYE3HNUDaDCnvd80vleBAwu7+BNmSCCygsp/YSXzdjzfHWKWEs4rDz/1sYp
k4QrrRKnrqkgpn9S8mFKUJCTs+6BTlgLarRHz3P9GPh5/ZGggys78F5lrkp1
+TecKxSu6L9CwTp79emNHv2ocMmDEZ9BQz0Jp61ONoO475Tnbtl2Op7S/Btz
V34Y03TtKE9UGHjAYPVzX+IIPqbdC1nxhY7Bq0oeTVqMoUHoESWDXhrWfc3O
CHgzjobf4ap6IBVVCUU/NvVP4Hc/x2T2+y7kFGsddl6cxB6hvcNH0jvwi+Cz
z0OjU5gjKM22tCPhhpbnmsWlLJS8OzorW9KK+4xtbSfc2XiPPmcVHt6Eirf8
aS3TbJwWmRFrVqrD9yMnRT+4cNCAUXB3m0slChsyooXecVDV4Q8Fzhcigb/R
de8gB08TisJIK2KRSDpXQVziYAF76IIVMwY+xC2orP/NQcLpZGb2mXdwb5/b
msJhDpJMYjdOUz9CocetDbNlHCyS732W86UW4uP/mzW/xsGkb0pcb58GiD/k
81JEgYN8xwoohzua4Whzh8GTUjbGUPVe8LDbwPiyiK20ARvn+yoavE6S4HHS
e76+YhYeY38st5PtgGKX6OlVcizcanjNyC6vE3zUYHe7/xT+N6mmvk2cAtUl
4rmaxEkUilqaJRlSYVLH7z8doUkcF9AY3m5EA57ONCuG4QSyqlsNvMXosO6M
i9w6n3GsWE4zf5lJh5QHpI6O2DE8JyVzlcbLAAmnmD9TJaPIcCIGH1NhgDxx
Z/CethFMP178Qn8lA+67lhU/ZQ5j+SpLzKugw39ytfRy1hCmJ5af/6pCB10C
1TJ4cRDlTGRuNFvTYEjc9E/arwEM05UQqN9NhQ85l39O/u7H1lKoHe/pgiXF
hAnFP0xMitSt8t/dCf0KMSfX/+zDrTV4+dNhMhxTKJ7gLPZiF4X8QmtdOyQV
j6Scne/GxqFx9yGtL3D+t7u3xjwd+WooUswYIjz2eDq37DsVXfMJK/NrqyHY
02iMwEvBmocSmhc2F8F+zcfSR9d0okO67mn1+FvwQ/TOs2wtMq6/rGSy1zkP
15Os+4bs29HN75DxKLUad02fo56UasW4F+TVR6OasH2fx4sH6Z+R0xNww1+O
hKTPgyv6rRvwW0/njwktCsq7yaqIatRhHtf82lJAN3p/KzfN0atB9ajvfgEB
TPQe19t8hVmBo3JXbySYDuJA1tcPS8QSTBgKua8tP4ItW7cZvN9UhPsGpS3F
f47hocGUxCvzORiS4Nun1jGJfrqusg9yMjAzUm9Hbiob3Vdd2tRMfonSP+9Y
iORNY/ETSK2lR+LJ0z61Rosz6HL+Y/Enn0CkaDeR/DXmsEpD9yLP2y1w9LGm
0SeLeXRZW5klbHYFfgzdYXiaL2DlmHbWUUIwEJY6tC03LWJedhHr5c0wsM8g
GrV0LWLT0e4G4lAoTFnF3914mothnlObdR4EQSuFIXC6loubnV9ezxa7ArbE
EytSF7jYpl3ezU51gRXPg5rGf3NxN1PisFemJX77QySYd3MxvjlA78cuL5xv
ov5KjuKihoACw2VXAEbf3D6XKM9Fx2iRgeEvIbjeocsl8sEibvyTFORzMwxf
3iju3Nq5gM1Z/AGJK8Lw3Zh6TOyyBSy0iuDWPAnCgtYDe9jy8yj4nmdR889l
jK7+FXtu8xxKy1wbHGlfhtf0G5etkZtFBS3W9Cuxa8BObVL+LDSDzbG72Ork
+1AdWy+g08NBY1KAzPO+aCjOn3wUmMLCPMNQ/2eyyUC5pvZ6k8skDrbXGdHq
M6GKT4+iuXEcKaknVtZH5kBLeH/O8NgIPhQt6bFmvAOMELowUDmE+sUJ5ySt
i4E35K+nbNIAfhSREnGcKoVQTatYTgQTzX9bGal/rIC1IZp7bsr2ouCmjgPd
RdUQfenNqwFjOl7gvZEUcL4WEtRZRquju7Bdt3JZ3IM6OPVpm81ZUTKe0Rq1
7SolQsSQYIvxqVZcGym0ODTdCIvh7y8p/WzAcw6H8jP0mqF1j0/a7vEaXJTl
5kuGtYDGNuZBl+OlKC0s0+lNaoOeetrdtzxv0NKWGH07uh0Upt3655P9MPep
/GwBksBJ7fcyk7Q0sJUbUYiYIoO7cHLVLpsi+Cy6FBok0wl+SqZ2ZrUfwYed
wcMx64J0mJHVItVApDIf87wvBVSJPZ9OhNTD4zNJgdcSqSD86A6LMNoIqsyb
sgV1NDhinDK9Ys0X8PQ2ni8dp4PXBy+JFt42kGgrFdsn1g2hOioCFk7/dJXI
2//U7IGgw4zGiXgStNuoYq5lL0QVL9gvqybDD3PP65Ie36AvizFb09QBPKXR
WoIhfXDzCoQYV3b+u8NkTTULJvD7LYikxXbBScXrjqNfmXCCt7B02IkCMTt5
Dufb98PCyuQXa0WpYDtwy/I8vR9OcBxaFLOpsEIw+LqY0wCUZ5h++rWVBr0L
D15FMQbgfYGHSdgbGjRWuksNHR8EB3dDkfuidMjsenmRt2MQSIMJ3T2udDgY
eMe7z3II7rw14jfLooOmi8aiP2EIPHIUiq4z6JBQHd1Uu2MYNjV9ctH4x+dP
MdphFdnD4F5xe/tyWQboXVDzc143ArquUX7Zygzouq+SmXl3BBSqBLvyNzNg
y22rtMjpEVC7aT2VJc0Akyq3W2sdRoFz4naEwl86DF+617kLR2G6rnJ9ajcd
NpxqecBVHINxnVXczLd0CLq9burInTFwvDZd9eYaHcQUTiQaDI5B7AZS9gY9
OkTa910nwDjwf99JCRinwa6ctuye+HGgiou+kI+lwSbzM6ERM+OwVHQo75o+
DRYXFO60mU/A10374vspVDDZn+mRFT8BtB2q9OqLVOjo3P1z5cQEPD3csP7c
DwpcJXK3iu+ahJnbj8K3hlFgKdxFOu32JBgo0dov8VDgrMP1dmLLJLSJOeZ4
B3VB6tGzz0PXTEGSV8KHUHYn7PqwK7P1+BRoVfJ0Tjh3goGN4bHC+ClwYTge
4hI7oFzpobAqfQpIKyU542odYHKhQGm7FAtW95sYCTwkQ93E0CqaFQuIqelp
DwdJoEHea77qIQt4zNI8SnaT4HbA2h391Sy4uFggTIxoB9620hMWsywIvJdx
faT4K7BGNqrsV2LDy/cH1s9atIGO64TkN2s2rLEd4JWjtgBT7HCK2E02zJ0s
dWp3+QJPn1roUt6woSA7/10g8zMwh7+Z7frKBt+nneLBzk3gbXXORG+eDa8H
m0ygowFKDRZimqU4oGEnyaNsRgTrVaSUXzs4cP1To+CT93Xgz+WpabTjgPcb
Oyf6egLESjGttX04cODr/Kkz4TUw+prwRuchB0xPgZhUYxWMpGeJk1M5cDsj
YvDo3QrIHRprEfvAgXBDmq7avjKYrF2tOELkQEHH0wGb2WJgKSaZO3VxoE9y
STQ4oxCs/eovXhrggFyye8KrlFwwLPOqlGNxoLso6gf/XCZU//fjuOcCB+rC
q+j0ewmQL73b2fYXBwiHyCVk00dg5WbXzfjDgeqerTUmqtuwLb6a+fcvB16X
HiTuOR6BO2y1fQj/6t03X8QPr0zEtKLUu4r/+t0SZbrO7XyF5asPS278N39J
1qWeNpCLZuM1KyqnOODvn+0ZUF+I5KHew3P9HJC06kpUXfsBs+Jny5s6OUBu
vmBFPlWGeTMkxT3/9hNjGTgQX1fg2foZh4PFHJC2gGqrsSp8t+Kp8mLKP/3e
3yuZz2qw3aTPbN8DDnT9FF27TYOA35L1/RQvc4DuYnC+ilCHU5/d3DNsOWBe
kGqiak/ERv16rNrOgTf9ATGrBxuwb6RR20+SAxXnvtxe79WE7gXadsRZNvjp
elkyOZ/RpCS0qbCVDdbh9iJLl77gNg1/pR2v2cAm68QJjrSgnm401y6YDbtr
R63ij7dhRcn7DlErNjgcZE2ZEr7iDacKk5Ob2FAWlZfe+rwdNSZOksymWaCY
oir6wpCE4tVLyxo+sYDQ7TtjMEFC56OJHr33WPBM+UxTRBQZA6WWbkYcYUGr
+WMlw60dOH2nm/Z1DQuaUjujZFv+5fq2fLmUKVDfe8yX5taJ3gqeT2TipsBs
2uqb3nwnhj/+KrXBfgo8ycsDx0K7EDx7DMokpiB4q7dRjgAFuSlVhUOfJ0Fv
+dOr/92lYKj9rNrrsEmYFvA5KveHgvuXJPx+6U3C23sOLHUfKnLsB72GRiZA
VtdLmL+bilvLB4ROx06AgZFJ6/59NFw2p3Dc12QCsl2fxybF0zD7XeZdSfY4
+MbEVKRO0XAw3X7kcOw4xPCom0/uoCM7OWhedu84VN6KrFgbSMfS592OIX1j
kPfnQkP+Ozr+icr5eS1sDIaYgb/29dLR0nP7nIDCGPjTDcOseRjosiMmV6ty
FLoKLKvPrGNgw/wh6ozdKOypShKd28zAiSGtCOupEVCdST7mo8xAr8WrYBU+
ApkR2XhAhoE7Px4bmF4zAuKvfU2G/9LRg75/ZMerYahzr7VNp9HRbPe8jYrO
MFw14ffrzKBj5H4bWl3VELQUeHe0nKSjltHc4Nr9QzDzlDDyVYiOUTnd5Qpt
g6CcQOWTzaRhjqfmo0mbQajxyfrRq07DY7kLL8O6BoDnKaHSNIOKqamB9mP2
A5DlO8ZzSYCKlosn72h29kOyZMbPC3YU7Dusdt7Zqh/CScslLZ504aeBK5xb
zUwI1DRt5nvfiRa8J8cKjZkwGE988qS6A1/IvLg67dsHZcaCvR3vyaiRQDBj
OH6DjyPxnoWPSXhzsZXvsGEvFErGP+Qebsfk/ashWLEHQqrL3w0PteJO7q41
GbzdMHlO4mjDXDP6jefT/vbSQdm0Ipe/oRF1mga438poELfy3joBh3pUapf9
/CyKCn+vaf2nnluD1u3D9/3OUoAvbmBH3qWPaP9cz4G9uwtSROJSur4XolM2
v/sVsU546tCtI1yXikylmrkwJhm2ibR9fLcYBHMWe0uzi0lwi+Ff7E97A8ZX
3Fn377eDW+9REuFzKWz4c+N04sc2EFu83FCpXAvH7I4Z+p9vAcGPe6t49Bth
4AaZ/4B8Mzinlr8Ny2gFt+N8fkP0RigfPJ5YrE0G5WSiiEkaESR0h4JFyrvg
kFJ/xcMrdQA3ZYSDPOmQJjVSL2hbC2fHkuMyjXtBt+rS8wsPqmFQ+PvApzQm
WFJafFyfVUDpJsGXz4oGwND72UXvhlLQ2nW2kkUaAjfx2XETzWLwMm3/5Pl3
BE5T6m0c496BjZSAsPDOcVD8/WSCdSQH3hJmI9SvTUJr4Vf+F5GZ8GcCboaX
sOCRzgEp/tIkSJLZNc43x4GM5VI7P9yPhg0agmaLa2ZALuXbyh9770PHFeZ8
v8osuB2hzzNl/OBx+ojZe605EFe2toip18ALzOwfEVvmIfLHinDGHR/U37OH
7Sy2AELHKU0v+oLwg0HQ2/nuBXD51Xh22/ow9PbbfkApahEGNJ8ykwLCkLg5
oKpXkQuuRlfIPXEh6K31xdEjmguzixmi34f9ceXXp3wBvVzYGcONd71wEUXz
+twv/OGC6T93FiVtgQaJvwVPz3NhRlv18W9tVyBpFS24VHNh45nEqu+Xr4C1
6a01p5y54Jd5nP9yexB8V7ba7fh1ESzJvCKX+MPgENdryVBmEfhC54L7/cPA
Wans/tjeBYhaR57YFBAMexLSV00ZzIOl4z5J2xJfWJDFiLsb52Bd6zOh5Lnf
1WYZ+ztdx2cgS9CAI5R8HVd4rOZ4JU/DlscjCesSHiPV7t32k7fZEKBRKRJg
EY8XaYT1WqWTYPPl0JYNnAzccLqRWNszBpaqFifiTHMxx2lf29jfYYhz9ljd
d+SfP+RPd3qzZRCcAqS9l38vQblZI2M5JyYUFiXvEJeuxNL01v8mDbvhziFG
kJRNDfYtp/D0/+iCkrZh94uWdSh1d+PPuvF2eEPIdOO/2oAzJst+Sms3wYOt
a7z21X9G8dBGZqxiNbS7/GgJ0G/FB/PLQ2aEciHy7eucyPPtqOCqkcp77z6m
3NkS12lERjPuXevakiKU8hiOGVfpRBGNdy9fmyM2D3KWSiUpSD/5NlObRESz
K1tf7xOl4dEb5Uarzn5BI/28Vy+FGEi689PcYGs7huX8Ep0V6kHdv3SZdjcy
MiI2LD1a8Q3HOpXPpFh24hn9AVFHQSYKaH1fsWOqC0+oRTPPCvVjyIJxibk5
Fa+WRl+XFxrAjs2q/LFONCRcOib1UWAQlw/8l7SoScdf3kTZqzxDWOEanmCE
//iqH3fjHncIQ4L6ZGxWMTDGVkJXc2IYfw09T+ZTYaBBrXFdCnUEF1O712j8
43NZCrlJHEdxx83rZq9T6DjskZqWlzqGPS3Sjw4sp6PDYWfF5MBxpGq7Zc7s
pKEWV+IK/4EJXI4SOeHbqXhjLnNiYeUkNl9S+j7GQ8Ed3qNKt1omsWJhcoNa
UidCsIJ0XsgUtuo9aXAW7sC7B+PPnldk4caywHQ8SEK7h6+JWR9ZuGtbMMOb
2IZE682JxsZsNDBh6X9604yuG5JrV1WyMVX4YYKscQOa8ktE0RU5KH3EbS8l
oRbvqVyVtgvk4OmUVuqA70fUnleu0K7goGyhbPvaZwW4dk01v8QoB53OajzS
1YzGmeB5zpPfHJwK9/kY2hgHXivF4vctcTBqUd/PgVYI+w1FzuT1c1CFz+6D
a1sluGBipUs+B++eSbQ45FQHzq/OXR5w5ODFKUd6aVkTtOkTyPWTbOxiWzhv
G28F+T3bq5NPstFXh3Wjzevff71C5NXadyzcsK5gWVVZB9ymcn+NfpvCmk0D
Pq8bukDRXcRzcXISg1stJnweUOG0epnGwa4JXGugt2z7P/9xUCi1bkvCOELo
pxslJDpsPGXxfaP+GCoq+BZVqzBALurDKa2SEdTjY633aaIDDCeokVcM47H7
MvlBz2iQt+nLIwsYxALP62t9j1HAW1mH8cW6H4M8pz97DpMh+2W86fjjb8g8
osYdFm0BP98HMaEWDKwWhNdK3CpY8Bq48HCwCyXeTKcUkB7jgdaxa3v9Sagk
r0Y1ojSgjM4X8SajZozj8q77xUtDlbnja1TkCUigLry5tHcQma3yR9Z1luCY
vUKz2OpJ9BTK2nsi7BVe9ls04b88gz7LKvunU29hq2VqbVvXPK7XppvtrgsE
39zZZHktLtpgCrtjUwj8D7WzIiM=
      "]]}, 
    {RGBColor[1., 0.27058823529411763`, 0], 
     PointBox[{-0.11909773621060972`, -0.22779573889448967`}], InsetBox[
      StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(59\\)]\\)\"\>",
       StripOnInput->False,
       FontSize->
        20], {-0.11909773621060972`, -0.22779573889448967`}, {-0.25, -1.5}]}, \
{}}},
  ImageSize->Large,
  PlotLabel->None,
  PlotRange->All]], "Output",
 CellChangeTimes->{
  3.790000981162016*^9, 3.7900626475218716`*^9, {3.7900627200832148`*^9, 
   3.7900627946430483`*^9}, {3.790062868751582*^9, 3.790062965350547*^9}, {
   3.790063001725814*^9, 3.790063083891153*^9}, 3.79006311563348*^9, {
   3.79006315537926*^9, 3.7900631893222437`*^9}, 3.790063245956534*^9, 
   3.790063431409358*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"X1X59Plot", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"introPlot", ",", "x59Plot1"}], "}"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.790062810672536*^9, 3.790062826866291*^9}, {
  3.790063262426502*^9, 3.7900632697612762`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {GrayLevel[0], Thickness[0.005], CircleBox[{0, 0}, {1.5, 1.}]}, 
       {PointSize[Large], Thickness[0.005], FaceForm[None], 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Dashing[{Small, Small}], 
         CircleBox[{0.5667693891484438, -0.13416331091005987`}, 
          0.5137168076344588]}, 
        {EdgeForm[{RGBColor[0, 0, 1], Thickness[0.005]}], 
         PolygonBox[{{1.299038105676658, 0.5000000000000001}, {
          0.8995352945247652, -0.8002322590360164}, {-1.4969411981678697`, 
          0.06382980574323183}}], 
         {RGBColor[0, 0, 1], 
          PointBox[{{1.299038105676658, 0.5000000000000001}, {
           0.8995352945247652, -0.8002322590360164}, {-1.4969411981678697`, 
           0.06382980574323183}}]}}, 
        {GrayLevel[0.5], Thickness[Large], Dashing[{Small, Small}], 
         LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], LineBox[CompressedData["
1:eJxd2HlczvkWB/CEsdRkmiYVkSLGJWSXOFkay6iUbRgiWYYYskZRKY0SIaGi
SNlKlkyRJ2c0VErbk9K+PDV3EkbMjavIvfc5n/lj7l/90eup5/f7nnM+7/M1
XbnJabWmhobGug4aGv/7GdKc9miqUwMn7hqy97BfneLB2/XTXw9s4CStxuGn
Tp/nlVU6KYEX6tmlX9/9mmuTeOeV4d8cLVaxRfHr9tMnFdxl5NCyAXfr+Frs
dJOE8HQ+Ombukx9W1PLVwY1dzwVlcEF6dnJqdBWvfu627u4X2bz7QWXz4sHl
7DHP9utfzXJZ28o+UXdbCesFmcdpKfLZyPDhLZswJd+Z1WP7x5cF3DZfc+dL
m1ze2+xy+Hp6Ic8dMr6Tyu4hH3SZZ1blrOSnOgGZK6tS+Vh8YI/xGUo2PTfo
aOrLC+ygd/ex/kclD0k/eeDooYPk/ZNbrEnXIv6wxzN/Od8gvfOjNhi8UPJu
mxVp85cxTQ35MfnyVSWfrXAbmd83gzQcG0fbOSp5g3n7PI2hj2m1q9lCi4pC
Tk7S1hrXVEDrkxe/7ONQyN4j9SO0g4toufmzzLDrBWx327Rp5Idisk8udkjU
LGDj/PtVNRNL6aaO9kK7I3l8tXnI8otzysnuzL8tlZ/lcsnyKb8vHVFJY7y3
Tei/MYe/vN11RVtjFf2+NHtfU8Yjzqt/uu6YRw21NRm3OhlksbVzg9bpzbW0
9zsPRU+XDK5xTxvk/WUdPZ19Pzr4wgPuXFkZ2BJTR5c+jk+49SydqwNKD783
U1Hu9EUbpg29z6m82tQzVEUj7Yx6f1dzj0tr/KOcW1Q0P3rVz07r7/K+dAMb
r1n19Kpq5LSDbSl8alf68+gj9dToUznq1+O3eL9y6LeBOfXkmeKWs23cDc5s
Pmf4orWe/BNqetx9FM/XVPkhm00aaNX2sWN0rOM40n7C26QJDfRo7/f+1iFn
uHjka8tZsxto/JtnfVMqjvBjm/C1dxwb6Gnd9LAUb3eeuGJHhP/c/34+L8Ai
9oA35bdWzzab0UDaupN93jSGUlq+yxeaYxsoZ+rSNpOkaDLuU2kR3KeBRuxs
zi6MjqMG58V9zdrr6Zfxm0uU38RTx5m6vUxK68mvWNnZZO11OjRwVGhpfD2V
XOge39gribaWbboStaueShf3srp672fqELkyUjGlnjSNw8yWON2m1kgj012d
6ukzlYJUxanE0/SLeqaraGdkTK31rDQKCjPzfLJbRSc2e79dlcC0/onXqpfD
VBTy7yeWCZ9+IY6Niw2vrqP3my2StEzTKbp0pbNOUB310Tj+uZPVr6SbZv9p
j2Udffe8rJvvtw/IptzVw7C4lrb0n/0pYv5D8hvR6K61vZaUW5oTYxZk0DGP
np77dGup7z1j80j7TLo3QuFmv6CGtPuPOvsTZdHB/kbtU32r6eTWD55uXz+i
BeeXDBx+sYo2WGT1m90tm/40z1uxNLOSDizObhmoyqZWc0s3XVUF2TqPWdg5
KYcS7VR7jr0rJ5dvYg40ej6mluxdPqZdy6k6c93tIutcajUebtWuV0ampWea
H7XkUqrN+r1repfSVNPlhnkX8qhwQcmCE32f0qQT85pVDvl0+er0AVl9Suh8
rpau1ut8Gnb2Us5oo2Jq69Zz+wDbAtrt++NjPd0nFPh1L5f8QwX0JnS9a2Tn
IjoQ7vr9T8oCsi4+GafxrpAq86442+kV0uLWsvCdvxVQwjktJ7O5hTQ5pv7c
mph8GrEgqluXwELy1Y5+l7Mtl7hmwIwPaYXUvb5YY9/UHHKc8TBV81Uh2Wsf
7tWk9Yhmvsju2NtYSddP7F+0qjCDfgtcd8PWVkmtCddiHEIf0G6PPdP81ivJ
aFBWTTendPLbaDvkyUElTfQa0735819IP+jLx+MvK+nCH+WxisN3Ka7LC88b
6UpaZWG8bcXHZHplO8B/cqmSAmpvLvP94SZFfV9lWvtMSaltnUIvnYun7uc9
A068U9K+k0mKXj/GkGmXzqUuHYpIed4o12fTMTIx3GA5tUsR/e56yGANp1gv
GZYRM65bEXnFqH/PBvg9Ps9G+Dz+Phvi73vJ/+cz+P+T5ftxI77fTvn+fAXf
f7A8H//1fH8MVD8/b8PzN8j74Y14P97y/rgC789E3i9Px/t9rlK/f56L9z9H
zodTcD5j5fx4MM5vkpwvn8L5msv581Ocf5nUB3ujPrZI/bAX6meE1Be3o76u
SP1xIurvidQnW6M+L0j98hjUb6c+6vrm0ajvbKl/vof6vyb9wcvQHyrpHx6K
/nkh/cUH0V9DpP94IvovQPqTw9GfV6R/uclM+veo9Debor99pP85F/0/WeYD
78B8eKtQzw/Wx/w4LvOFv8J8SZX5w28wf7bKfOIbmE/BMr/4DuZXiMw3Phch
861J5h9n1Mn8q4pQz0e26S3zcZHMT3bG/HSX+cpumK8vZqjnL2ti/mbJfGZL
zOd2Y/X8Ztoh8/uSzHeOmCLzXSHzn6t6yPw3lHzgxRmSD4mSHxz+T8mPfMkX
Pot8CZP84Uzkz27JJ87aIflUJPnF7fGSX2sl37gc+bZD8o/tfSX//CQfuQz5
GCz5yTpnJT+PSr5yDPL1juQvv0H+tlao85kTkM/5kt9ci/z+SvKdo5DvMyX/
efRzyX//FLUPuM8y8cEi8QO7wg9XxBfsCF945Kn9wfnwxyjxCTvCJ2st1X7h
XfDLLfENr4VvHMQ/vAr+yShX+4g14aP3pPYT28BP/b3UvmJt+Cr3ttpf7Al/
fRKf0Uz47Kyu2m/kDr/9IL4jf/iuSfxHu+E/+JCS4MMl4keqDBQ/rhZf0gn4
slz8Sa7w503xKc2ATyeIX0kHfnUT35IjfLtB/EsFJuLfLPEx+XUXH8PPBD9b
w88EPxP8TPAzwc8EPxP8TPAzwc8EPxP8TPAzwc8EP1PJBHn+4eJn+uv9wM8E
PxP8TPAzwc8EPxP8TPAzwc8EPzP8TAf2yvl+JedLx6bI+cPP1CJ+5g5SHwQ/
M/xM8DPDz+QufmZXqT+Cnxl+JviZ4We6iPpeIvVNOaj/SVL/1FH8zP8SP1MN
+qdZ/Exz0F9rpL/oGfrvofQfwc8MPxP8zPAzwc8MPxP8zPAzwc8MPxP8zPAz
BWC+RMt8IfiZ4We6jvm0X/xM8DM/kPlF8DPDzwQ/M/xMVpiPCeJnhp8Zfmb4
meFnhp8Zfmb4meFn7iJ+5jkyvzkY8x1+5u2Y/7ky//kj8sFM/MwtyI9B4mdO
Q76Ei585EPmTJvnD8DOHSz7xfeTXO8kvjkG+6Uu+sb74medL/vEU5KOb5CMH
/D0/OQz5+oXkKyuQvxriZw5CPodKPvM85LeL5DfDzww/80fk/xTJf46HD1aK
D/hP+OFP8QN/FD+zjviCU+CPWeIProBPrMQnnAq/HBK/8Cj45r34hn3gHx/x
Dz+Dj+BnHg8/wc88D766Ib7i2fDXcPEX+8Fn98Vn3Fv8zPbiNx4L3zmJ7zgZ
/oOfuetV8eE28SG3w48HxI88Ar40FF+yAv4MF3/yRvj0pfiUY+DX0+JXHgPf
9hTfchT8qy/+ZfiZ4Wd+6RBb4//ppmKp+JkPi5+pH34/C/4egM/7/t3nfBB+
j8X/XwLfv8D3OwX/X8b3H4X9QA/P1yzPTx54/kzsFy54P5uxf1Tj/RlgP5mD
99smfiYHvH8b7De3cD7DsP8Y4fxssB8dx/n2x/6Ui/Mvx34FP/Mm7F97UT/6
2M+eob7isL+dRP1lY7/rj/qMxf5HqN9X2A/1UN9Z2B8foP5DsF8OQn/UYv/8
B/qnCftpCPprMPbX3ui/rdhv3dCfPth/L4qf+Tj249Ho73XYnwPQ/1bYr90x
H7pi/7bC/DiJ/dwA8+Wv/b27u8yftdjvfTGf4GeKwPyKwP1AjviZq3F/cET8
zO9kPlKF+JmX4P4BfuYg3E8oMV9bxM80FvP3Hu43fhsn87kj7j92iJ/5FO5H
2m1kvsPPBD+zMe5XNmZJPhzD/UtQs+QH/ExlyBf4meBnCsT9zkLxM8HPBD/T
JtwPKZBvUbg/ikf+bcD9kmW15ON53D8VIT+DcT+VgHx9jPsrFfK3VPxMJchn
+JngZ4KfCX6mLbg/MxY/U6j4mfqJnwl+JviZ7uJ+bgZ8AT8T/ExdcL9nB5/A
zwQ/E/xM8DPBzwQ/kwHuFz+Dj+Bngp8Jfib4meBngp8Jfmb4mcJw/xkEv8HP
DD8T/MzwM03C/WoifAg/M/xMYx/K/WyNk/gSfmb4meBnhp/JAPe/++FX+Jnh
Z4KfGX4m+JnhZ/r/++f/AIbC7J4=
          "]]}, 
        {RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 0], 
         PointBox[{{0.3925260005858717, -0.6174274208834492}, {
          0.48758772039470466`, 0.37341448783562264`}, {
          1.0578294571673341`, -0.2850439526220511}}], LineBox[CompressedData["
1:eJxd2HlYznkXBvDIjG0yBtllzWDINoZJuskekZgsMdkja+O1ZIY0tiFLUpct
jSVb4w0x2RqnmpD2TSktT0nG0oVmZMnb8877nHv+8P7lcnX19Px+33PO/fme
9rOXucyraWZmtrCGmdn//o3wi/ujjmOFNLLudDTE+0VUYJLjTaNNhXjNWWZX
FH5JHlodaJ1X+FLSOlmd2OoTJ4mOTWznTn8poe1Hhh8bkyJvvc3HfnT2hYQ6
bF3aLCFT5g7/vXvSyefSLDEy3L71PakefdHRIqJcloZP+aT803xZPvqjBke3
PpWwi+fHVwQXyYnro/Jm93ssj/e5hu12LxbXWU+9d8aXSdzMkpTyayXydlqP
boOcSmVTQkfP+OIHEubxn6FWKcVivefdft/sUllvVjFw2+lCuVNuVTUp+KGk
7o1LHpWSK6eO/ZZRr3+ZDIusfWdki7ti7NGoc2RYmUx3WLz0+4A0md9v2XGf
qr9/bt/owIUN8fK7+a8j1vV4JLU3du8wf1y0+LuahQQNeyRfFztendP5glw5
VV6x+O//h7zu7uBtuVnC2/VfNK3XI8l02Tg6IP8E9qddGDqn/iOZdaf35Ge7
L2Nq8wPrbe+Vya2370uahsZgW/T40KEHyiQ99ciLBZ/eRpXnqPX7nMvktkXf
U4saJOHeiz2Vdc3K5I/gK0VGlzSs9Lvq0+vMQwm5uOuH4CUZOFTfdt8Cp4cy
0egy7/DULHQ1N2tRWF4ql146193dIhvX4p/02+NXKgufDa/x/FwONj/o/qfb
56WS1Cnb3bptLrp09Ov8OuaBHHzqaLdhYR7M2jUtr3Z7IKHdrP/qtec+PGcO
PFL5qkR+qfa56rg/H7VtC5zH+peI1e64FrEbClA66+sMty9KxDbAwnbJ2ELc
qRjv7nW7WGYO7xdU6z+F8HQ+/DBxbrGkx7o27hRYhI12B40h5sWSOKm6x8m6
Bow5nXC6SahBPDflWlcMMmDF5xMujRthkEkhCYMOexjg2bxf67SsIhH7Wh5D
txoweOuJQ0/bFUnfwxeqVh424Jl35dCGXoUyv7NxXVSYATMt5/R2vVkgjc2P
jQ86Z8DxHe+CUtoUiF3xdzNXnTVgxovwgk1r88U6b2Rm8lEDOvRpdsrn/n2x
8Tizv6a/AdWrO+6LGXxfjNXjjf9abUDFlA4WjmF5YjMywNZnigGW+yKuWzbP
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
H6Kfj+P8fHf6fQD/vhd9H8zvF0z/R/H7/877QSSfbxbvD458/lfb9H6xj+9n
Cu8f6/n+4vX9ogvf7xLeX1z4/ifzfhPN81nF+88Enp8L70dN1c+4on5GzUd6
/vQz6GcU8/5FP6MT72d5rK8JvL81Z/0Z9+r9zp71uZT3vzas32LeDwNY39Xq
Z/Rl/bfl/XIp+4N+hhP7p5L3U/oZGepnuLL/OvB+u5j9eUr9jHHs3z68H/uz
v3fx/lzN/p/E+/U/88GF9++bnB9beD9fwflSi/d3K86fSbzfJ3M+zf3w/o8v
uR/oon5Gd+4PnDj/2nO/0IXzMY/7hzbqZ1hzP1FD/QwL7i8Gcv7W4n5jG+fz
S/UzEji/+3M/soPznX4G/Yy93K94MB/MuH8R5gf9jNXMF/oZ9DMWcr9zkPlE
P4N+hhn3QznMt57cH+Uz/5Zzv9SI+WjJ/ZMv89OK+yn6GUe4v7Jh/lY+1f1W
IPOZfgb9DPoZ9DOsuD87yfwfxv3aZvqAfgb9jDppup97S1/Qz6CfUXFb93vT
6BP6GfQz6Gehn0E/C/2MmA/3i6CfhX4G/Sz0M+hnoZ9BPwv9jKXcf96i3+hn
oZ9BPwv9jGXcr0bSh/Sz0M94yP3s+wj1Jf0s9DPoZ6GfYaZ+Fm/6lX4W+hn0
s9DPoJ+Ffsb/75//C+bG9aQ=
          "]]}, 
        {GrayLevel[0.5], Thickness[Large], Dashing[{Small, Small}], 
         LineBox[{{0.5667693891484438, -0.13416331091005987`}, {
          0.3925260005858717, -0.6174274208834492}}], 
         PointBox[{0.5092690709227949, -0.29364046720127834`}], InsetBox[
          
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(Y\\), \
\\(1\\)]\\)(\[Rho])\"\>",
           StripOnInput->False,
           
           FontSize->
            16], {0.5092690709227949, -0.29364046720127834`}, {-1.25, 0.5}]}, 
        {RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 0], 
         InsetBox[
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(1\\)]\\)\"\>",
           StripOnInput->False,
           
           FontSize->
            20], {0.3925260005858717, -0.6174274208834492}, {0.5, -1.5}], 
         InsetBox[
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(2\\)]\\)\"\>",
           StripOnInput->False,
           
           FontSize->
            20], {0.48758772039470466`, 0.37341448783562264`}, {-1, 1.25}], 
         InsetBox[
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(3\\)]\\)\"\>",
           StripOnInput->False,
           
           FontSize->
            20], {1.0578294571673341`, -0.2850439526220511}, {1.25, -1.5}]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], 
         PointBox[{0.5667693891484438, -0.13416331091005987`}], InsetBox[
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)\"\>",
           StripOnInput->False,
           FontSize->20], {0.6614215131645839, -0.1664274615920977}]}}},
      ImageSize->Large], 
     GraphicsBox[{
       {GrayLevel[0], Thickness[0.005], CircleBox[{0, 0}, {1.5, 1.}]}, 
       {PointSize[Large], Thickness[0.005], FaceForm[None], 
        {EdgeForm[{RGBColor[0, 0, 1], Thickness[0.005]}], 
         PolygonBox[{{1.299038105676658, 0.5000000000000001}, {
          0.8995352945247652, -0.8002322590360164}, {-1.4969411981678697`, 
          0.06382980574323183}}], 
         PointBox[{{1.299038105676658, 0.5000000000000001}, {
          0.8995352945247652, -0.8002322590360164}, {-1.4969411981678697`, 
          0.06382980574323183}}], {}}, 
        {GrayLevel[0.5], Thickness[Large], Dashing[{Small, Small}], 
         LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
        {RGBColor[1., 0.27058823529411763`, 0], LineBox[CompressedData["
1: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
39zZZHktLtpgCrtjUwj8D7WzIiM=
          "]]}, 
        {RGBColor[1., 0.27058823529411763`, 0], 
         PointBox[{-0.11909773621060972`, -0.22779573889448967`}], InsetBox[
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(59\\)]\\)\"\>",
           StripOnInput->False,
           
           FontSize->
            20], {-0.11909773621060972`, -0.22779573889448967`}, \
{-0.25, -1.5}]}, {}}},
      ImageSize->Large,
      PlotLabel->None,
      PlotRange->All]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7900628273354015`*^9, 3.7900631297664084`*^9, 3.7900632053534145`*^9, {
   3.790063247341945*^9, 3.790063270261856*^9}, 3.790063436214999*^9, 
   3.7900666893833294`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{"\"\<1021_x1_x59\>\"", ",", "X1X59Plot"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7900632728581605`*^9, 3.7900632856905737`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x12345Plot", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "1.5"}], ",", "ons", ",", "o1", ",", "n1", ",", "s1", 
      ",", "inc1", ",", "bar1", ",", "cir1", ",", "ort1", ",", ",", "npc1", 
      ",", 
      RowBox[{"deg1", "=", "20"}], ",", 
      RowBox[{"deg0", "=", "0"}], ",", 
      RowBox[{"degStep", "=", "1"}], ",", 
      RowBox[{"degRange", "=", "359"}], ",", "degs", ",", "poly1", ",", "ell",
       ",", "gr", ",", 
      RowBox[{"clr", "=", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Thick"}], "}"}]}], ",", 
      RowBox[{"lgt", "=", ".33"}], ",", "incs", ",", "bars", ",", "cirs", ",",
       "orts", ",", "npcs", ",", "clrs", ",", 
      RowBox[{"fontSize", "=", "20"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"degs", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"deg0", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "-", "1"}], ")"}], "*", "degStep"}]}], ")"}], "&"}], 
       "/@", 
       RowBox[{"Range", "@", "degRange"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ell", "=", 
      RowBox[{"plotEll", "[", 
       RowBox[{"a", ",", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Black"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ons", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"orbitNormals", "[", 
         RowBox[{"a", ",", 
          RowBox[{"toRad", "@", "#"}]}], "]"}], "&"}], "/@", "degs"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"o1", ",", "n1", ",", "s1"}], "}"}], "=", 
      RowBox[{"orbitNormals", "[", 
       RowBox[{"a", ",", 
        RowBox[{"toRad", "@", "deg1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"inc1", "=", 
      RowBox[{"getIncenterTrilin", "[", 
       RowBox[{"o1", ",", "s1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"bar1", "=", 
      RowBox[{"getBarycenterTrilin", "[", 
       RowBox[{"o1", ",", "s1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cir1", "=", 
      RowBox[{"getCircumcenterTrilin", "[", 
       RowBox[{"o1", ",", "s1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ort1", "=", 
      RowBox[{"getOrthocenterTrilin", "[", 
       RowBox[{"o1", ",", "s1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"npc1", "=", 
      RowBox[{"getNinepointCenterTrilin", "[", 
       RowBox[{"o1", ",", "s1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"incs", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"getIncenterTrilin", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"First", "/@", "ons"}], ",", 
          RowBox[{"Third", "/@", "ons"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"bars", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"getBarycenterTrilin", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"First", "/@", "ons"}], ",", 
          RowBox[{"Third", "/@", "ons"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cirs", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"getCircumcenterTrilin", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"First", "/@", "ons"}], ",", 
          RowBox[{"Third", "/@", "ons"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"orts", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"getOrthocenterTrilin", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"First", "/@", "ons"}], ",", 
          RowBox[{"Third", "/@", "ons"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"npcs", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"getNinepointCenterTrilin", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"First", "/@", "ons"}], ",", 
          RowBox[{"Third", "/@", "ons"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"clrs", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "/.", "ptClrs"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{
        "\"\<inc\>\"", ",", "\"\<bar\>\"", ",", "\"\<cir\>\"", ",", 
         "\"\<ort\>\"", ",", "\"\<npc\>\""}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"gr", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"clr", ",", 
         RowBox[{"FaceForm", "@", "None"}], ",", 
         RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "@", "clr"}], ",", 
           RowBox[{"Polygon", "@", "o1"}], ",", 
           RowBox[{"Point", "@", "o1"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"PointSize", "@", "Medium"}], ",", 
           RowBox[{"Point", "@", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Dashed", ",", 
           RowBox[{"Line", "@", 
            RowBox[{"{", 
             RowBox[{"cir1", ",", "ort1"}], "}"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#1", ",", "Thick", ",", 
              RowBox[{"Line", "@", "#2"}]}], "}"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"clrs", ",", 
             RowBox[{"{", 
              RowBox[{
              "incs", ",", "bars", ",", "cirs", ",", "orts", ",", "npcs"}], 
              "}"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#1", ",", 
              RowBox[{"Point", "@", "#2"}], ",", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\"\<X\>\"", ",", "#3"}], "]"}], ",", "fontSize"}],
                  "]"}], ",", "#2", ",", "#4"}], "]"}]}], "}"}], "&"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"clrs", ",", 
             RowBox[{"{", 
              RowBox[{
              "inc1", ",", "bar1", ",", "cir1", ",", "ort1", ",", "npc1"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1.25"}], ",", "1.2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1.25"}], ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1.25", ",", 
                 RowBox[{"-", ".6"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1.25", ",", 
                 RowBox[{"-", "1."}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{".25", ",", "1.25"}], "}"}]}], "}"}]}], "}"}]}], 
          "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"{", 
       RowBox[{"ell", ",", "gr"}], "}"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.774976616523549*^9, 3.7749771420749154`*^9}, {
  3.7749796510499167`*^9, 3.774979890023861*^9}, {3.774979920503337*^9, 
  3.774979927551485*^9}, {3.780257954021723*^9, 3.7802580998976607`*^9}, {
  3.786709989216467*^9, 3.786709992203453*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
    {RGBColor[0, 0, 1], Thickness[Large]}, 
    {PointSize[Large], FaceForm[None], 
     {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
      PolygonBox[{{1.4095389311788624`, 0.34202014332566916`}, {
       0.45108693133427213`, -0.9537110161840732}, {-1.4825275309807053`, 
       0.1521871945032789}}], 
      PointBox[{{1.4095389311788624`, 0.34202014332566916`}, {
       0.45108693133427213`, -0.9537110161840732}, {-1.4825275309807053`, 
       0.1521871945032789}}]}, 
     {GrayLevel[0], PointSize[Medium], PointBox[{0, 0}]}, 
     {GrayLevel[0], Dashing[{Small, Small}], 
      LineBox[{{-0.04768414888480663, 0.4175787479967822}, {
       0.4734666293020426, -1.2946611743486895`}}]}, {
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
       LineBox[CompressedData["
1:eJxV2HlczXkXB/CEsdRkmiYVkUqMh5Bd4iSMZVRkG4ZIaIghaxSV0ihLSChL
WqwlS6bIzRkNldJ2U9qXW/NMhRHzxCjyPM89n/lj/uqPXrfu7/c953ze52u6
cqPTak0NDQ23Dhoa//8Z0pz62M6pnhN2Dt5z2L9W8fDtuqmvB9RzolbDsFNn
YnhlpU5y0MU6dunXd5+mWyLvuDrsm6NFKrYset1+5qSCu4wYUtr/Xi1fj51q
Eh+exkdHz3n6w4oavjaooWtUcDrnp2UlpURW8urn7mvvfZHFux5WNC8eVMae
86Z9/atZDmtbOyTobi1mvWCLC1qKPDYyfHTbNkzJd2f22PbxZT63zdfc8dI2
h/c0uxy+kVbAcwaP66Syf8QHXOaZVTor+ZlOYMbKyhQ+FhfUY1y6kk2jBh5N
eXmRHfXuPdH/qOTBaSf3Hz10gHx+co816VrIH3Z75S3nm6QXM3K9wQsl77Jd
kTp/GZNdyI9JV64p+Xy5+4i8vumkMbdhlP1cJa+3aJ+nMeQJrXY1W2hZXsBJ
idpaY5vyaV3S4pd9HAvYZ4R+hPbBQlpu0ZgRdiOf7e+YNo34UEQOSUWOCZr5
bJz3oLJ6Qgnd0tFeaH8kl681D15+aXYZ2Z/9y0r5WQ4XL5/8+9LhFTTaZ+t4
8w3Z/OWdrivaGirp96VZe5vSH3Nu3bO1xzyrqa3JuNXJIJNtnOu1zmyqoT3f
eSp6uqRztUfqQJ8va+nZrAeRBy8+5M4VFUEt0bV0+eO4+NuNaVwVWHL4vZmK
cqYuWj9lyANO4dWmXqEqGmFv1Pu76vtcUh1wzrlFRfMjV/3stO4e700zsPWe
WUevKkdMOdCWzKd2pj2PPFJHDb4VI389fpv3KYd8G5RdR17J7tlbx97kjOYo
wxetdRQQX93j3uM4vq7KC9lkUk+rto0ZrWNzgU87jH+bOL6eHu/5PsAm5CwX
jXhtNXNWPY1709g3ufwIP7ENd7s7t56e1U4NS/bx4AkrtkcEzPnf53MDLWP3
+1Bea9Uss+n1pK07yfdNQyil5rl8oTmmnrLtlraZJEaScZ8Ky4N96mn4juas
gsgLVO+8uK9Zex39Mm5TsfKbOOo4Q7eXSUkd+RcpO5u43aBDA0aGlsTVUfHF
7nENvRJpS+nGq+d21lHJ4l7W1+7/TB1OrzytmFxHmsZhZkuc7lDraSPTnZ3q
6DOVglRFKcRT9At7pqlox+noGpuZqRQcZub1dJeKTmzyebsqnmndU+9VL4eq
KOSvp1bxn34hjr0QG15VS+83WSZqmaZRZMlKZ53gWuqjcfxzJ+tfSTfV4dNu
q1r67nlpN79vH5JtmaunYVENbTaf9Sli/iPyH97gobWthpSbmxOiF6TTMc+e
Xnt1a6jvfWOL0w4ZdH+4wt1hQTVpm488/xNl0gFzo3Y7vyo6ueWDl/vXj2lB
zJIBwy5V0nrLzH6zumXRnxa5K5ZmVND+xVktA1RZ1Gph5a6rKqdpzqMXdk7M
pgR71e5j78rI5Zvo/Q1eT6gla6evadcyqspYe6fQJodajYdZt+uVkmnJ2ebH
LTmUYrtuz5reJWRnutww92IuFSwoXnCi7zOaeGJes8oxj65cm9o/s08xxeRo
6Wq9zqOh5y9njzIqorZuPbf1n5ZPu/x+fKKn+5SCvu7lkncon96ErnM93bmQ
9oe7fv+TMp9sik5e0HhXQBW5V53t9QpocWtp+I7f8ik+SsvJbE4BTYqui1oT
nUfDF5zr1iWogPy0I99lb80hru4//UNqAXWvK9LYa5dNc6c/StF8VUAO2od7
NWk9phkvsjr2NlbSjRP7Fq0qSKffgtbenDZNSa3x16MdQx/SLs/dU/zXKclo
YGZ1N6c08t8wbfDTA0qa4D26e/Pnv5B+8JdPxl1R0sU/ymIVh+/RhS4vvG6m
KWmVpfHWFR+T6NW0/gGTSpQUWHNrmd8Pt+jc95WmNY1KSmnrFHo5Ko66x3gF
nninpL0nExW9fowm0y6dS1w6FJIyxijHd+MxMjFcb2XXpZB+dz1ksIaTbZYM
TY8e262QvKPVv2cD/B6fZyN8Hn+fDfH3veX/81n8/0ny/bgB32+HfH++iu8/
SJ6P/36+Pwaon5+34vnr5f3wBrwfH3l/XI73ZyLvl6fi/T5Xqd8/z8H7ny3n
w8k4nzFyfjwI5zdRzpdP4Xwt5Pz5Gc6/VOqDfVAfm6V+2Bv1M1zqi9tRX1el
/jgB9fdU6pNtUJ8XpX55NOq3Ux91ffMo1HeW1D/fR/1fl/7gZegPlfQPD0H/
vJD+4gPor8HSfzwB/Rco/cnh6M+r0r/cZCb9e1T6m03R377S/5yD/p8k84G3
Yz68VajnB+tjfhyX+cJfYb6kyPzhN5g/W2Q+8U3Mp4Myv/gu5leIzDeOipD5
1iTzj9NrZf5VRqjnI9v2lvm4SOYnO2N+esh8ZXfM1xfT1fOXNTF/M2U+sxXm
c7uxen4zbZf5fVnmO0dMlvmukPnPlT1k/htKPvDidMmHBMkPDv+35Eee5Auf
R76ESf5wBvJnl+QTZ26XfCqU/OL2OMkvN8k3LkO+bZf8Ywc/yT9/yUcuRT4e
lPxknfOSn0clXzka+XpX8pffIH9by9X5zPHI5zzJb65Bfn8l+c7nkO8zJP95
1HPJ/4BktQ+4zzLxwSLxA7vCD1fFFzwXvvDMVfuD8+CPkeITngufuFmp/cI7
4Zfb4ht2g28cxT+8Cv5JL1P7iDXho/ek9hPbwk/m3mpfsTZ8lXNH7S/2gr8+
ic9oBnx2XlftN/KA334Q31EAfNck/qNd8B98SInw4RLxI1UEiR9Xiy/pBHxZ
Jv4kV/jzlviUpsOn48WvpAO/uotvaS58u178S/km4t9M8TH5dxcfw88EP9vA
zwQ/E/xM8DPBzwQ/E/xM8DPBzwQ/E/xM8DPBzwQ/U/F4ef5h4mf6+/3AzwQ/
E/xM8DPBzwQ/E/xM8DPBzwQ/M/xM+/fI+X4l50vHJsv5w8/UIn7mDlIfBD8z
/EzwM8PP5CF+ZlepP4KfGX4m+JnhZ7qE+l4i9U3ZqP+JUv/UUfzM/xE/UzX6
p1n8TLPRX2ukv6gR/fdI+o/gZ4afCX5m+JngZ4afCX5m+JngZ4afCX5m+JkC
MV8iZb4Q/MzwM93AfNonfib4mR/K/CL4meFngp8ZfiZrzMd48TPDzww/M/zM
8DPDzww/M/zM8DN3ET/zbJnffBDzHX7mbZj/OTL/+SPywUz8zC3Ij4HiZ05F
voSLnzkI+ZMq+cPwM4dLPvED5Nc7yS+ORr7pS76xvviZ50v+8WTko7vkIwf+
Mz85DPn6heQrK5C/GuJnDkY+h0o+8zzkt4vkN8PPDD/zR+T/ZMl/joMPVooP
+E/44U/xA38UP7OO+IKT4Y+Z4g8uh0+sxSecAr8cEr/wSPjmvfiGfeEfX/EP
N8JH8DOPg5/gZ54HX90UX/Es+GuY+Iv94bMH4jPuLX5mB/Ebj4HvnMR3nAT/
wc/c9Zr4cKv4kNvhx/3iRx4OXxqKL1kBf4aLP3kDfPpSfMrR8OsZ8SuPhm97
im/5HPyrL/5l+JnhZ37pGFsd8OmWYqn4mQ+Ln6kffj8T/u6Pz/v90+d8AH6P
xf9fAt+/wPc7Bf9fwfcfif1AD8/XLM9Pnnj+DOwXLng/m7B/VOH9GWA/mY33
2yZ+Jke8f1vsN7dxPkOx/xjh/GyxHx3H+Zpjf8rB+Zdhv4KfeSP2rz2oH33s
Z42orwvY306i/rKw35mjPmOx/xHq9xX2Qz3Udyb2x4eo/xDslwPRHzXYP/+F
/mnCfhqC/hqE/bU3+m8L9lt39Kcv9t9L4mc+jv14FPp7LfbnQPS/NfZrD8yH
rti/rTE/TmI/N8B8+Xt/7+4h88cN+70f5hP8TBGYXxG4H8gWP3MV7g+OiJ/5
ncxHKhc/8xLcP8DPHIz7CSXma4v4mcZg/t7H/cZvY2U+d8T9x3bxM5/C/Ui7
rcx3+JngZzbG/cqGTMmHY7h/CW6W/ICfqRT5Aj8T/ExBuN9ZKH4m+JngZ9qI
+yEF8u0c7o/ikH/rcb9kVSX5GIP7p0Lk50HcT8UjX5/g/kqF/C0RP1Mx8hl+
JviZ4GeCn2kz7s+Mxc8UKn6mfuJngp8JfqZ7uJ+bDl/AzwQ/Uxfc79nDJ/Az
wc8EPxP8TPAzwc9kgPvFz+Aj+JngZ4KfCX4m+JngZ4KfGX6mMNx/BsNv8DPD
zwQ/M/xME3G/mgAfws8MP9OYR3I/W+0kvoSfGX4m+JnhZzLA/e8++BV+ZviZ
4GeGn+m/5DjaAg==
        "]]}, 
      {RGBColor[0.6, 0.4, 0.2], Thickness[Large], LineBox[CompressedData["
1:eJxV2HtczfcfB/Aj91x+2Q8jtsUKO6sRYmvV+yCXlVJxGml+oX7uNCpkOEw2
DSPLJUO1SlpR6SSp3qdT5+ji5GzTkB/DXJLLhMhcfj+/8371R/3j4dGj+p7v
5/1+v57vz4A5ywLCrBQKxbw2CsX//42JmP32EoOZFZavC0WO06vqM5PMvDC+
/KOczns461KPdnmjzWz95xBrrkpjp93jTNG9z3JqRHaBY3U2H5y2PH+Kp4l3
dJnlveWilqMH5ZtfdazmunnFz0qjCzlxmOfguuUVvF15zzPyYAmbKj7oNHWP
gZ9+eDTsdv9SVq49cfzaN3o2jbm9NP0nPbc/NW9OQGYJz+oc7Pf+n2XsUpdb
/KN9ATvEr2z33/+Us9p9yYve8TmctWHGiIgfDKyreTWo/sM03nh8oOZyNyPr
Fj/c9dm9ON6i3dnR39fIGbNsIqcUR1Fz/qPvJs00cq1vB5W39wGKfeGTEuRq
5KtOqSv2Xz9Cjyauv9+u0cC1L6t9No3JJScrz8KYTQaOp9okG9UJUgfYPNE/
L+eG3cWdI+6eophbnfZ/qi7nwvK+O84P0NHDrYMXtNlfxpq399x5bK+nVc0r
Qgtq9OyeVmfuriinYTl1WxIel3Ls6JJDkXkGqth4w3Zd11KOdPOyzxh3mrI/
PfTl5X46jnlw/KTvsQpqdj/UkyeWsGvy0N96P68kDb09u3RyEaveCRh1amA1
uT/Zfqnps0L2mtV1VKPTGSraonvWb2wBVwyyCQztbyJntxTnbaPzOfLIntqc
v0zkYDP8cy/HPA6ICc4PO1JDys/7LO04MJdd9tvWN3udpYG9tTTKNpubghv9
zbVnKfH5IXrPMZNnbzysOuhgpqtfT7MZ7ZTOzlav6t0CzaRY86tX+CcpnOc5
Pmr6WjMN+3TZDQpI5Iszx+rW7DdTpP2DxlONezm/+nTckBwzVQVfLzwQvJNr
rAYoL5SYSdm1d+bPpq857lSk9kW5mTLWrvklYHsovzPydt3Lsje/f+zij1fG
LKeiRj9XjyIzxf+1223O3G/o2uIN9/odNVOTPv29RQfjyHfql6/u7jOT2jbQ
+/6/95F/4+arr9ebSev46Kvg9okUEjj9yqEQM7luuNJf6/kTNX99ZE0vNzNl
l8dqZ3yZRslhCReT3jJTe91cveN3R0gZ6vFuh8qzlNC+OKJPXCYtOdr47Nbc
s/TrNx2Cu20+RqqRDcppT2soc8uUJM2IHDIXxAVpNTWkTTb2W5mQS9Fr9GGL
29bQ0oXj/qh/dpxCfnt+pXadie785G/zu7eW4lKaoj97fIYGxUTco935VDjN
J8p29hkqTPfeOuT8CWq/quLRnopqujjx3LG47iepSd3Dp5uymib3mrBrg1sh
+U0OWaSPqaLebcZVN4ecIrvI3PYvL1VS6U3V4JdrishpaM/6F46VVHXdbd/3
24qpcOW6oW1WV1Dus4YBJ+JLqDahaMMk3WmKVebqon5gyigxqrq2PU1XViwb
ccdTR3YeTSc3jTHSxvWGp7cKdbTRMN+/fo2Bdu66tXmUYynFJL44sii3nJzv
zs+6uLeUXAo6V425WUY5/zK++6tCT6opge4/9iyjgudXVg0I1VNYit/In1V6
ulbScWylXk+1zo8TDywopejIrfVV/ctI7RPhn/S9jryzt+sHLy8jB+OTHsYw
ptX7h3a/pi8jpamt0zuHi6nz0SeNz7qX09Usj3MH/jxFA7JmrF0SWE6u+771
/7FfITUv2HRk7L5ySrgfuHbRlAI65mcTtOp8+Zvn6XsteH0+vZp654t/9DBQ
ld2y87qf8+jCi4/CO00wkNlubsatc7mUt7LvJ6FRBlI/vnas/4tsKo665Pt+
soGst39SGeJ+lHxmfjVqQqWBVKO6drm8PoPmdzkcarproIaKwX4TStLIy2Wh
x8nORmo4/EfyiOfJVDjvdl/r942kym4cHjXnILlUP/DQjTZS7UNfqxum3VSX
E3P70kQjaZL6vJe3aDutjg1UfTHVSGrvYPu2S9eR1T87L/AMevN/y5fWLeXh
hoidwUbKmGD5Pje+Jd9Xys/zYvy8Tn4/P8LvV8jf5+H4+1XyfJyF59PK87Ma
z9/kYvl8vBCfL3ab5fOzCz7/eHk/nI73Eyvvj9Px/hLl/fJFvF87ef+smCbv
P0TOh7NwPko5P76H88uQ82VrnK9Czp+7tJy/wVIfHI76mCT1w6NQPyapL16H
+kL9cQPqz0Pqk1vqc6DUL2ehfuOkvtkV9e0r9c+xqP8+0h+8Gf0RK/3Dv6N/
aqS/OB79tUX6j6PQf/bSn2xCf76OsPQvp6F/J0l/8yD0d730P6vQ/3+vtMwH
voH5sFnmB8/H/Fgt84XtMF/UMn/4b8yfjTKfOAPzqULmF1/F/Lo5wjLfWIX5
ppb5xzsw/67NtcxHTm0n83GzzE+OZpmfF2S+shrzdbLMX07UyPz1kPnMOzCf
nWV+s11fmd8mme8cifmeLvOfVQ9k/r8eYckHVntIPkRJfnCGRvKjSvKF45Ev
2ZI/vBD5kyn5xFcdJJ9OSn6x1lXyq7fkG4ch3zwk/9h1k+TfQ8lHDkc+ZidY
8pOjkZ+9JF95PvLVXfKX3ZG/yZLP7IB8/kDym4uR3/f7W/KdpyPfTUmW/Gct
8r+T+IDtPMQH1uIHLocf4As+A18kp1r8wSPhj3DxCbf4RFdm8Qu/hF/gG94I
30SKf9gX/rEVH/EQ+ChE/MT3W/zkbfEVR8NXGZ9b/MVP4K/4JRaf0VfwmfUv
Fr+RD/wWIr6jVPjOQfxHtvBfD/Eh+cOHS8WPlAo/5osvqauj+DJL/Enb4M+j
4lPyg08fiF/JZC1+7SO+JR18WyT+JdV18a+z+JgadomP4WeCn93gZ4KfCX4m
+JngZ4KfCX4m+JngZ4KfCX4m+JngZ4KfSYHPXyefn+Bngp8Jfib4meBngp8J
fib4meBngp8Jfmb4mTKmyPluk/Olqo/k/J/L+VOvV1If8DPBzww/U0t9wc+U
JX7mR1J/pGldnwQ/M/xMMajvX6S+KRz1nyP1Txr0RwfpD3IXP/Ny6R9Si5/Z
QfqLgtB/adJ/BD8z/EzwM8PPBD8z/EzwM8PPBD8z/EzwM8PPb/YKmS/jZb4Q
/MzwM13BfNKJn0mL+dUg84vgZ4afKa5l/omfCX7mDPEzw88MPzP8zPAzw88M
PzP8zPAzz8H81sn85ibM9yqZ75yK+d8k858dxM9cK37mOciP+5IfPF78zGbJ
F27Jn3rJH9YgnzZJPjH8zPclvzgB+dZV8o11yL88yT+Gn7lI8pGbW+cn+yBf
nyos+cp9xM+cIvnLw5HP+ZLPnIv83iv5zfAzw8+civyHn7kXfKARH7AGfsgU
P/C38IWt+IKV8EeR+IPHt/YJh8MvZ8QvXAffRIpveHpr/7Ct+JlXiI8YfuZu
4ieuha+Gia/YC/56Iv7ibPjspPjszfOI35rFz6yF7x6I77gO/oOfORw+zBYf
shZ+VIsfWSl+5qXiS7arFH86iz+5CT7NF5+yurVfWQnfNopvWQ3/hol/GX5m
+Bn3GtlF6eJnVkxq5WtWwN9r8fMLW/ucG46J31X4+zr4PhfPVwX/B+D57bAf
hOHzwc/kgc/viv0iDu8nBvtHBt5fLPaTW3i/rq33F1Zjv0nD+dhi/znXcn7Y
j6xwvlfPyP6kwPnDzwQ/83jsXx+jfgqxn81GfQVhf7uA+huO/S4V9dkT+18+
6jca+6E96nsa9scdqP8md9kvZ6I/tmH/PIf+MWE/3Yv++hb7qxf6rwf22+3o
zzrxM01G/7bsxx7iZy7B/nylp/Q//EwXMB8ysX/vw/yIwX5uj/nyBfb3viky
f5Ziv5+P+WTC/l+B+fVa/ExBmG+euD9QYf69i/uFEMzHWNw/xGB+PsH9RMt8
9cf9RR3m7zDcb4RgPqtw/6ESP3Mp7kdcMN/hZ4KfuT3uV9Qk+TCj5f5lq+RH
Je5ndMgX+JngZyrA/U6I+JngZ4KfyQ73Q17It1DcH2mQfxW4X6pDPl4WP1MQ
8tMK91MLka/TcX81BPm7HPdbauQz/EzwM8HPBD/TTfEzJSD/e+F+zQk+gJ8J
fqZ43M8Z4Av4meBnUuF+bzF8Aj8T/NziG4KfCX4m+JlCcL84HD6Cnwl+JviZ
4GeCnwl+JviZ4WfS4P4zHH6Dnxl+JviZ4Wcag/tV+JngZ4afaX6l3M/uhS/h
Z4afCX5m+JmKcP8bBL/Czww/E/zM8DP9DxvQu10=
        "]]}, 
      {RGBColor[0.5, 0, 0.5], Thickness[Large], LineBox[CompressedData["
1:eJxV2GlczWkbB/DGkslYpmXKlLXEWCZLSCYukZFRtlAjSyXTMpGx1EiRZAmZ
wgyqkfSkRdq0HduVoUaMg1aVTlJGVHpsaRg885zrNy+86sX5VOf/v+/r9/ve
9yA33wWrOmloaHh8pKHx/59uTVnbY10VNKIj/eGpqgdWg3OWZ4eOUJDpgj/M
3TzSKfrJe5PBe/PpoftnSw9pM4WkdxiY7Myjg/frR7o2FtHyiJl1K01zyTLo
m6Kiqzfo96nax+dvyCbt0iVm5j1K6EWYskIrOIuUacklG1VldPqn/mVbFmfQ
gGPuimKHSvKNGe62+JNUshk97fZazypaUXq+Sjk+kWJba8vbjGoo42B1ZrnN
CWrXdXXetfYu6U0YMPDP6ChyiLLfFu1dS41Xes9pLYqgrssfpBt9qqKvDYMc
v4kPpBITv9p2DxU1N1zseD7Ole3mepXHb1KRx4aGoNThO9mh1TijwE5Fa+sc
e8//5SCbRKs2FTfVUpRJllHV8WiOfKz7V8PCWmq+d6St8XAcK7fc871w+C5Z
lLYbrR2YwA7mXe/45dXQjcZ3u3p5J/G1k2ETYhTV1Hyg8ddjG09xv0MGmoPj
q6j3he1e8TZpXKRVMGHDj3dIp9owe49PBje5Zhd6T66kWRmZVseiMpk97nt6
viynSeEP6q6ezmJLq2Vjl8aXUdlKl/4LE8/w5oHd3W/OKqWhtme2hu/O5kN9
tJ789/Ftela2t40X5LD1QR2b47tvUXGoU6tZt1we5n8y+4mtkqJPnR2pm5jL
fpGPPRK3Xqd+fomLjpjncW/Tt2/P512ldUMfxtWczuM9LTphQ58X0qs1/sbN
+vm8NjvWL9L8MvmoRocU+ubzmwvHYtwCCujzIzqDlyjyWWtUzamDkedovnl7
SNiLfJ46dmDKHsqlH5zcLpoaK3j8lJyTDhqZlNv00ub5NAXb6s/WiE9JpMkG
qRHJjgoe9Z/i4NR3UTT24ZiW5y4KfjRW03dW10AaWFoxad0KBQ8xn3nLlsI4
w3DNRYWDgpPDWpwS6mP5WWll5aIpCh5ou8PHzjWZu2e389UBCm7d1CPNfF4m
b0mNt9jXkc9L+rD3uYocdl1U/KVOcT7f6Pza/q/pZznCYppzYWQ+G/rk+eYf
vsjWnh5lWg75/JNTwqwmz0v8/op/xOSe+Rxev+y99qbLzK++eJhfkMfmtjql
cwIL+UGessvN1XlsPHHlzcPrfuff//h5kVIvj0v0Uh42ORezYdW3TRq5uWyQ
Yek9deJ19qk9Xpw6P5cXT2vYfazbDR4wb6ajXlMOv7byf9HlmpK/Pe8e7rcp
h589tbQ5R7d4SnuzXW/NHN7VfUrIG93bvK92e4zB/mxOab/iWVh/m13zezUW
amez/pH9nkbJJbz5+RyTOZFnOGzcekMN71LuG//p4Ps9zvDExFIzv8FlHFBm
kZQZmsVho/q4BN8pY5PYHoced2Sys2GRx6Cd5dy/l8FnCq9Mti0rfOn8ZQX3
DqsonFmZwcMU25LHKis41C5KydYZvD7mQI8kz0o2ytrY7cCCdN5Roth/8e9K
fvS0tpNe3zQ2+e1pyI977vCQuY175t1L5eS2Vf3uaFfxhMnO4RGxp9h7wvB1
dQeq2HCHsb7RkhQeemb/hoie1Xwrba//+E+TObjqWXvLtmq26HrB1+S3RI5c
8y6lva2aC985zR669iQrrg03Tnes4fS+KV1DDBPYpiFMaaCoYd0Z+79bfyme
X9uf6zxW7y53vu/Yf9KqE5x07qOOd553eXtLRZ2uZhz/4La6cGveP5+vWfs0
wDaWl4Vof5/z/i4HtFy/9WBrDNsmWCmPW9eyocq4WZV1lI9uTj03LaiW7bvo
76ip/4VX2eU1RWfVckiz/qW5PQ/xpbpVL1Lra9l2Yv8raeMjufznTZ5+3VV8
dNSuzPLcfWyp53y2Y6SKvZwbBjW/3cmz9z2ZPW6WipVna/7Yar2Nv/lits+w
FSo+Oy/B61EXf3ZPcHC6s0bF1Sv9TyRpevCf4WZfWf+o4qSkzqVpqZetrjfF
mLlvVvHhderP6T4+v+6g/n1ywu8Hy98nZ/z9uKXq/08L8f+DRqu/H43D91tm
qf7+VIfv79Wifj46i+eL0FQ/Pznj+dPk/VAw3o9Om/r90US8P0df9fslB7zf
Unn/5IH3XyTrQ3uwPl/L+lEb1m97P/X6Uj+sr8V79fpTIta/q6Z6f1Ao9odh
unr/0Grsn0DZXzQM+2u67D9a8+/+k/1JCdifDs/U+5f6Yf9eyFTvb4rG/ja2
V+9/mon9/5XMBxljPpxkfmgo5sdU5oucMF9XZP7ICfM3RuaTLDGff8r8khvm
N1Dmm7pjvhNk/ikJ8z9H8oECkQ+pkh9UgPyYJflC9ciXpZI/NA35Yyr5RPbI
p0rJL7qB/FqUr843Wm8h+dYm+Uc9kX9LC9X5SD2Qj9GSnzQS+flW8pWMv5d8
jZD8pe7I3xjJZ2owkHx2kPymhchv0zJ1vpPuTMn355L/NGO35P8q6QfyHSH9
4CX9QUFTpD9spF+oW4L0S4n0Dz1F/xRJP9F+kn7ylP6iv8dIf42RfqNy9Ntx
6T9yuij9N8BX3Y8UhH4Mlv6koa3Sn39tVPcrOaJfY6V/6TT6t1n6mb5DPxuU
q/ubFqK/Sfqd8tDvN6T/6SL630p8QKHwgaX4gV7AD1riC3oFX8wWf9Ar+EMp
PiFd+CRO/EIfJ4pfpotvyB6++U38Q3XwT6L4iKLgI0/xE/WBnwLXq31Fi+Gr
y9VqfxHBX1V91D7j6/DZu0K137hkmfhthfiObeC7LPEfa+iJ/0aJDzkKPtwi
fuRB8GOK+JJN4ctW8Scr4M/74lO+WSI+PSx+5fGB4tcg8S3HwbdJ4l+eC/9a
iI9Za574GH5m+Pk8/MzwM8PPDD8z/MzwM8PPDD8z/MzwM8PPDD8z/MzwMxvi
+ZfL8zP8zPAzw88MPzP8zPAzw88MPzP8zPAzw88EP3P8RllfF1lfvoL1/1zW
n50Hy/4Il/3B8DPBzww/E/zMOdh/SvEzw88EPzP8TPAzw8/0WvY3T8b+V8r+
Z3PMh53MB+u5y/zAz2yJ+dor88VamL9xMn8MPxP8zPAzwc8MPxP8zPAzwc8M
PxP8zPAzwc/8JfLFWvKF4WeCnzkA+eQtfuYC5NcQyS+Gnwl+ZviZ4GcegHys
Ej8T/EzwM8HPBD8T/EzwM8HPBD/TAuT3T5LfdBL53ln8TF8j/0Ml/6kT+uG4
9APdQX8slf6gAvEz2YifqRb90yL9Q73QT6Okn8ga/TVZ+osmoN+eSb+RO/rv
qfQffYV+PCD9SC7ozzjpT3JBv/aSfqUg9O826V96e0L62Ur6mZagvzdLfxP8
TPAzWaD/p0n/kzZ8MFJ8QCfEzxQkfiAD8TMFiC9oAvyhL/6gqfDJKfEJWcMv
zuIXGgXfmIhv6KT4mULFP9TRRXx0QHxEu8TPlCR+ok7wFYmv6JGN+Oul+Iuu
1YvPjorPKBh+8xa/UYD4mb4V35Gm+JmmiP9oYa34MFx8SAXiZ/ISP9JW8TNd
E19SqYX484L4k16ZfeBT6gK/zhC/Urfz4ttF4lsKmPuBfwl+JviZktV+jj9/
TfxMq33E14/x+QX4+3v8fs458bkt/r6W/H+2wf8/O0Z8T/h+5eJnrsD37yN+
/icX5fl8xM/shOd/g/PFdryfw0/k/PHv+2vB+QR+JviZQ/H+X+N8E431ycX5
pxrrlyLryz2xvq3iZ47E+sPPDD/TUvEz+2P/nMb57GPsrzic39yw/1xwvovC
/jwq+5c/xv4dgfOhL/Z3N/EzO2L/J+J82Rnz4YLz5xeYn8k4ny7EfDXi/GqP
+fPG+bY/5nPSCzn/mmN+g3E+Ho35vofzsz/m3/3D8zVtxvm7EfkxEufzBuSL
Pc7vDsgfJ5zv9ZFPjTj/30R+fS5+5gPiZ3qF+4O6mZJ/H0k+chDy8STuHwyR
n+dxP2GEfN2J+4sVyN883G+cED+TEe4/7iK/zcTPXDZD8h1+ZviZFuN+xcNM
+iEJ9y/Ns6U/FuF+5rb4meFnhp85Dvc7fcTPDD8z/Myf4H5oDvrNC/dHLei/
/uJnTkQ/LsH902P05wDcT/mjX+Nwf5WD/n2I+60j6Gf4meFnhp8ZfuYnuD+L
Qf/b4H5tDXwAPzP8zH1xP/cMvoCfGX7mrgflfm8IfAI/M/zM8DPDzww/M/zM
LcYf3C8y/MzwM8PPDD8z/MzwM8PPBD9zPO4/34ifGX4m+JnhZ4KfORr3q3vh
Q/iZ4Gc2jJD72dhfxZfwM8HPDD8T/Mx+uP/VhF/hZ4KfGX4m+Jn/Bz/p6tI=

        "]]}, 
      {RGBColor[1, 0.5, 0], Thickness[Large], LineBox[CompressedData["
1:eJxV2HtAzfcbB/BI2H5olcn151bR5FS2/QzjEZNbyMpdCU0xyl0l02pExcrK
5aeQmMvIImFaD4VyGZIuIjndb+ecos6hkm09b3/4yx9Hdb7fz/M879fz6b/E
+9vv2urp6Xm00dP799/yipag0AAN6w78MeCEkf6fYbYTQ9xHa7in0jvUaU4G
W93saThno5r3dsjPzOyax0HPagvdh6m4ufeFBYtTlBwRd+JapH811wd6Fmo/
LWdDVdgN46WV3CbfrnpUYzU33LIwsdCWsVtfu7Jaq1oObLRo6jOxhMMOZx29
2vUlr6zrYuLsoeS7D4fv2Zfwinu1GR2QcP8ZO/kZWZrrN/CujOTG02dyWLPY
ZcbA/2j55uMovelBD/m2S4XTm3tadnJIXX3q0Q12Pv+ufOw0HafXF/seuZnA
by9GZM6L0PEUveaorxZEkd0Z676dD+t41P4tPw8MukotifGzxvnreHh+RP6O
GRm0s+O7qFsKHX867oHLGPNM6rVx6QCzZC2XDrK/aJCTTdNcN2YFW2q5bdnU
Lhe+yqeetea3EjY38Aw3i0b7ac+JTl44qk6q55ZiVeqKj5U0YuKlwaaFr3j6
+sc7D2cU0ewOxoaRupescMsu8VtSQvpFmjPu+i/Zs4f7Zx5PSmlCVScaZFDH
X84eO16lKCf/V93zx7do+NijJvNf3SvIMW9txb4yFb/xOJ1h7V9JikTXfmdv
VfPrUStLzDZVkepW47UVsZU8YUxRU7c51TTkUa2Dg285669wGxLSp4bSu5yM
9HYs5S121q4v79aQ4sLESbGDi3lsyq69CUtVtMt1VW9PfSX7KY3bm5apyPD8
ZkWfGwU8dHPwdVdnNXl7p4ybE/qEnSwDyhLOqSl2W3Odk2s2l6wzNx70Rk0L
H1yZEjMmk6v6Nhum2WroVahX/8b5dzhlyPKzvvM11LRq5K+d5qZyh5CFcYr1
GkrupjqysSaRLU1GhyZt1dDPnka39C9HsS7wk9zcLRpyHebQJyEijqbWdU2f
6q2h488VQaZJl2lG98tz2VlDRqr+S7qcSaO3pwZZPVZoSJvmcPpezh0ynXXB
tX+Lmtq6jHR3Uz0kTY527hdpalq29mHEtQWPKS9renjED2p6wJqnLkm5tGPt
j6Mu2qgp/FqIcY+3+bQ4+V6jSb6KrqWZDXlq/ZxuB/C6XptVtN/lTtXkEy/I
ctZS5bCuKkr0tjaLtiqi+1ucDlw9XkMewfRf5YliKvrWc7uRTQ296Zuzw7RH
KRVExR0IvVBNMWPCQyigjHwMPx7mb1NNKxzL184vKKc4hYm/7Ykqsp+Z47PC
ppIi58y83WBaRT7Hh/601reKsnWqF4ZBlXR6zLt3Gy5Xk1N56OS0igradDk9
0UdVQ5cie+xynFxB50KGnPqhu5osHUw2NRwrJ3v/KR3DRmio6P6ZaaqmMhpm
4bn928G1VHXQsf2a6WVksaHd67L4Wgp8lL/hUnQpRV608tpmU0cF4Sr/hrIS
8qyZUmd9to7GDbpo4zq0hMJvFvpUmL2kM17f6w1cXUzr7Nwrft/3kjw6Fueu
O1dE6m/0O4cavCKnCS60tVpJvlHto328XlFDUbnPWjMlpbXNs9386BV1SPI7
6Dv/BcUa+M+MtK2nK4uM5m7tVUhKtZf7zdB6qsxetrzAv4D2G2X+Yaisp5Ae
BxIXPXlKMRaZoettGyhy54EXs23zKWyPvbbev4Gs2t3pZrwtjxKne7fZk9ZA
pz7bZ174OIe6Nd+KcTDQUkhSxpGP+2fTVRv1cfNxWpq+7Pq7wuVZFL3o/4V9
/LRklVN85dS5TAouDG7+8qyWgo8dTF1S+oCcQjwPej3VUvRvNj5bl90j70l3
JmW001Fk8e7LI4ozaHBk3dbxljrKcjdf1W/hTao8dOy3F5N0pIybu/p65nVq
O7PE4shSHQ3uFe/ltDOZXB6Fjw701dG4gS/r76y4SNlJOqvgEB0t+uvqmjZ7
zlCs/RSzc3t19IlRcZBVZDR9Gt/4TWOMjhY4z/+l+/Gg5FjFu6OeR3T0WD7n
9vj8L/l53o+f/1x+P1fg94+Vv8/z8Pdb5Ptxs6N8vwL5/lyD74/nYzM833V5
fl6I54+R98Pf4P2QvD/ehPe3QN4vH8T73SPvny/h/d+Q8+GPcD6fy/lxPM4v
Vs6XV+F8f5Hz5304/zqpDw5HfZyX+uGHqJ9OUl98DPWF+uO7qD/UJ29EfXpK
/XIF6veU1Df/gPqeIPXPm1H/SukPdkd/bJP+4R3onwrpL37fXznSf9wV/TdI
+pPt0J9XpH85CP3rLP3NAejvx9L/fBT9j/nAmzAfImV+cLWjzI+1Ml94MeZL
rswfPoL5UyPziRX9ZD79JfOL/TC/2sl8Y2vMt2sy/3g15t8kmY+ckirz0Vvm
J2tY5ud1ma88DPP1qcxfTlkj81df5jMfWijz+bnMb+ZUmd9jZL7z6hqZ7yNl
/rNHgcz/bMkH3jFU8qGT5Acbe0t+tJF84Vmmki9Jkj9s4iX5kyD5xOd3ST7V
Sn5xy33JL4XkGyu2S74ZSP5xCfJvq+Qjv02QfCz9szU/2WCR5Oc0yVf2Qr7m
Lm/NX9Ygf/8n+cxfIZ9LJL9ZP13yO13ynZcg3x0k//kw8j9vVqsPOB0+6Cp+
YDf4wVJ8wV3gixfrWv3B38MfleIT/gI+uefa6hdeDL80l7b6hnvBNw/FP+wI
/2yza/UR94SP8p60+omD4aezUa2+Yh18Ffem6V9/8Qj4a3ZDq8+oHj6bN73V
bzQYfssS31EqfLdD/Edq+K+b+JAc4cM48SOdgB/XiS/pF/iySfxJC+FPO/Ep
7XwiPn0mfiUL+HWj+JZ69xHffi3+JV178W+k+Jh2F4qP4WeCn0fDzwQ/E/xM
8DPBzwQ/E/xM8DPBzwQ/E/xM8DPBzwQ/kx2ev1Cen+Bngp8Jfib4meBngp8J
fib4meBngp8Jfmb4mWwPyPnqX2w9X+r8VM4ffiYn8TObSn0Q/MzwM8HPDD/T
cPEzj5P6I/iZ4WeCnxl+JgvUd0epb3JB/cPP9Jn4mcOkP+h39I+99A8Zekp/
dZf+onZfS/9li58Jfmb4meBnhp8Jfmb4meBnhp8Jfmb4meBnhp/JEfMlW/xM
8DPDzwQ/c++w1vlE8DO/Fj8T/MzwM8HPDD+TFvNRLX5m+JnhZ4afGX5m+Jnh
Z4afGX5mNeZ3b/Ezw898V+Y778T8DxQ/sxvyIVf8zGnIj1OSHzwA+XJb8oXv
In9CJX+4BPnUWfKJ4WeOlvxi+JndJN/4JPJvlPiZI5CP8DPnIj+PS37y+3xd
KfnK55G/hyR/eSDyeaTkMz9Dfg+R/OaqD/OdtyP/oyT/+Ql84CE+4Pd+OCx+
4Pe+WC6+4OXwR4P4g+d/6BN+Db8kiV+4PXwTI77hC/BPlviHc+GjveIj/hF+
ihY/8T74KkJ8xQr4K0n8xUnwWXfxGR+E3/4Qv/E0+O6k+I6t4b+fxH8cCB9O
FB/ydvjRR/zIQfDlUPElJ8OfmeJPhp+5RXzKM+BX+JmHwrfl4lv+CP6NFP9y
9ifiY/iZ8z7SBGywSUiOEz9ztXxOpvi8+p74+yh+ftmHPmcL+N0df7/XMfG9
nvie38L/Ffj+8dgPLPB8Sdgf3PD8P2O/+ALvZwT2Dz+8vynYT2Lxfvdhf7mM
95+C/QZ+5knYf2Jwfr9hP1qJ8z2E/Wknzr8W+9Vu1Ec89q8HqB8D7GehqK83
2N8Y9eeM/c4D9fkd9j/4mY9jP/RAfdthfwxE/T/Dfjke/fEj9s9g9E8Z9lNz
9FcB9td26D/4mYzQn+ew/yrQv7OxH8egv9OxPzuj/3djv/bFfDiC/XsA5sd6
7OcLMV/e7+8pmD/l2O/rZL/nh9j/12B+dcb9wGTMt0TcH8zE/JuH+4XDmI/r
cP9QJn7mXNxP3MZ8VeL+4q34mXXOcr/hLX7mUtx/zMf8Hor7EVW1zHf4meBn
zsf9yh2F5IPKWO5f7P0kP9rifiZV/EzwM8HPdA33OybiZ4KfCX6m4bgfKkO+
fYn7o7HIvyW4X3JBPurh/ikL+WmP+6ltyFeV+JmUyN/OuN/yRD7DzwQ/E/xM
8PM//0/uzzYh/4vEz5QKH8DPBD//4xG5nzOAL+Bngp/p0Yf3ewQ/E/xM8DPB
zwQ/E/xM8eJn6gsfwc8EPxP8TPAzwc8EPxP8zPAz9cP951T4DX5m+JngZ4af
aQ7uVyfCh/Azw89k1CT3sxbwJfzM8DPBzww/0wnc/6bAr/Azw88EPzP8TH8D
SutOVA==
        "]]}, 
      {RGBColor[0.8588235294117647, 0.4392156862745098, 0.5764705882352941], 
       Thickness[Large], LineBox[CompressedData["
1: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
fOSxmI9+Mj+5xlLmZ7bMV16M+Won85cVmL9LZT5zIOazj8xv7oj5fUnmOy9z
kvmuk/nPIVdk/i+WfOCEbMmHbpIfvI0lP7pIvnA18iVO8oc/5k+s5BO/fyr5
tFHyi99vkvzqK/nG81dIvjlK/nEu8u+w5CPnIR8bNKb85JUekp/bJV95hEry
dZ7kLzerkPw9IPnMOchnN8lvno78zpR853fI9/IcU/4zIf8dxQccBR+0ET9w
IfwAX3B7+MJM/MG/wx/h4hMOhE8cfzL5hd3gl2jxDW+Gb1LFP+wA/8R8afIR
P4GPGqtMfuIf4SdnW5OveCx81b+7yV8cDH8d8zD5jBTwWfR0k99oPvymFd+R
P3zXVvxHGvgPPqRC+PA38SN5wo/rxJfUBb7MFH/SNPjTKsfkU7KFTwvEr+SU
K36NEN+SEb5dLP6lx8ni32fiY1pXKD6Gnwl+doGfCX4m+JngZ4KfCX4m+Jng
Z4KfCX4m+JngZ4KfCX6mpnj+vfL89PH9wM8EPxP8TPAzwc8EPxP8TPAzwc8E
PzP8TMEOcr5z5HzJ0ijnv0XOn6xcpT7uS30Q/MzwM8HPDD/TEfEzw88EPzP8
TPAzw890F/XdReqbZqH+k6X+KQL9ESz9QX3Fz2wu/UMtP0h/lUt/0Xz033Dp
P4KfGX4m+JnhZ4KfGX4m+JnhZ4KfGX4m+JnhZxqP+dJS5gvBzww/UxXmk0Lm
Ex3H/FLK/CL4meFngp8ZfqZdmI+Xxc8MPzP8zPAzw88MPzP8zPAzw8/sjvnt
J/Ob72G+F8p85w2Y/8PFz3wV+aAoN+UD5yA/+oifua/4mdeIn7k/8ucXyR++
jnx6J37mwcivVpJfDD9zd8k3/lz8zG6Sfww/8yDJR7ZGfo6T/OSvkK9zJV95
FPLXT/KX85HP8ZLPDD/zPslvhp8ZfubryP9W4me+AB/Az5wGP3wQP3AEfLFL
fMEf/aEXf3AwfPK5+IQnwi9jxS+8EL5JFt9wFfzzWPzDI+GjavERp8FPNeIn
fg1fbRJf8U746zvxF6+Cz2aJz7iZVvzWX/zGAfCdtfiOS+G/heI/vgUfFogP
uQ5+PC9+5A7wZbj4khn+zBZ/cgN8elt8yvnw6xbxK++Gb+PEt2wD/4aJfzlM
/MzwMy/T3gl86JBwdZn4mY+Kn+k/+P3dXuLvPfj7e//0OUfB73vx/9/A9/fw
/W7A/w/w/W2wH3yL58Pz0wE8fxL2i7N4P4ewf8zF+5uJ/aQT3m8Lef/kivc/
D/vNeJxPNPafSTi/l9iPxuF8j2N/uonzH4T9Cn7mLOxftaifCdjPolFfbtjf
fFB/c7DffYL6dMH+V4L63YT9cCfq+yj2x0rUfxL2y5boj/PYPxvFz6zAfmqD
/hqF/TUA/XcZ++0m9KcN9t9O6F8P7MeR6G9z7M+W6P8c7NfwM1ti/+6P+RGM
/dwW88UR+/uXmD+Xsd/rMZ8+7v/hmF+f4H6gUPzMF3B/kCx+/jgf6Yb4mf1x
/1Alfua7uJ9QYr4OxP2FD+avH+43rDCfA3D/sRzzOxH3I7FDZL7DzwQ/8wrc
r2zJlXz4s0LuX0JKJT86435m9TeSL3H/vL+hJNzv7EE+wc8EP5Mz7oe6IN8W
4f7IA/kXhvulJhrJxw64fxoifqb1uJ+aKH6mNbi/eo38XYb7rVaLJJ/hZ4Kf
CX4m+JmeiJ/JDvk/HPdr2+AD+JngZ6rH/Vw7+AJ+JviZXHG/FwCfwM8EPxP8
TPAzwc8EP9Mf4md6Bh/BzwQ/E/xM8DPBzwQ/E/zM8DP9hPvP3fAb/MzwM8HP
DD/TPdyvXocP4WeGn6mtvdzPbnguvoSfGX4m+JnhZzqA+99m8Cv8zPAzwc8M
P9P/AO56DVc=
        "]]}}, {
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], 
       PointBox[{0.30542292639874086`, -0.2607778980496586}], InsetBox[
        StyleBox[
         SubscriptBox["\<\"X\"\>", "1"],
         StripOnInput->False,
         FontSize->
          20], {0.30542292639874086`, -0.2607778980496586}, {-1.25, 1.2}]}, 
      {RGBColor[0.6, 0.4, 0.2], 
       PointBox[{0.12603277717747635`, -0.15316789278504173`}], InsetBox[
        StyleBox[
         SubscriptBox["\<\"X\"\>", "2"],
         StripOnInput->False,
         FontSize->
          20], {0.12603277717747635`, -0.15316789278504173`}, {-1.25, -1}]}, 
      {RGBColor[0.5, 0, 0.5], 
       PointBox[{-0.04768414888480663, 0.4175787479967822}], InsetBox[
        StyleBox[
         SubscriptBox["\<\"X\"\>", "3"],
         StripOnInput->False,
         FontSize->
          20], {-0.04768414888480663, 0.4175787479967822}, {1.25, -0.6}]}, 
      {RGBColor[1, 0.5, 0], 
       PointBox[{0.4734666293020426, -1.2946611743486895`}], InsetBox[
        StyleBox[
         SubscriptBox["\<\"X\"\>", "4"],
         StripOnInput->False,
         FontSize->
          20], {0.4734666293020426, -1.2946611743486895`}, {1.25, -1.}]}, 
      {RGBColor[0.8588235294117647, 0.4392156862745098, 0.5764705882352941], 
       PointBox[{0.21289124020861805`, -0.4385412131759537}], InsetBox[
        StyleBox[
         SubscriptBox["\<\"X\"\>", "5"],
         StripOnInput->False,
         FontSize->
          20], {0.21289124020861805`, -0.4385412131759537}, \
{0.25, 1.25}]}}}}}]], "Output",
 CellChangeTimes->{
  3.7749768393413386`*^9, {3.774976898906776*^9, 3.774976925921523*^9}, {
   3.77497706183739*^9, 3.7749771427680616`*^9}, {3.774979664797146*^9, 
   3.774979762140904*^9}, {3.7749798262188644`*^9, 3.774979891219663*^9}, {
   3.774979922853052*^9, 3.774979928176812*^9}, 3.7750661471761312`*^9, 
   3.77506727716696*^9, 3.77521712047624*^9, 3.775897862443948*^9, {
   3.7802579633208466`*^9, 3.7802580698090706`*^9}, 3.7802581005180025`*^9, 
   3.7862609914624*^9, 3.786266914666977*^9, 3.7867099934531126`*^9, 
   3.788075624214677*^9, 3.7897221576335535`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{"\"\<0030_x12345_locus\>\"", ",", "x12345Plot"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.78025810265629*^9, 3.780258108970422*^9}, {
  3.7862669187440658`*^9, 3.7862669222561383`*^9}, {3.786270063031785*^9, 
  3.7862700681830344`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotX40single", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Phi]", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"Sqrt", "@", "5"}]}], ")"}], "/", "2."}]}], ",", 
      RowBox[{"gold", "=", 
       RowBox[{"RGBColor", "@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"212", ",", "175", ",", "55"}], "}"}], "/", "255"}], 
         ")"}]}]}], ",", "pl"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pl", "=", 
      RowBox[{"plotX40", "[", 
       RowBox[{"\[Phi]", ",", "20.", ",", 
        RowBox[{"lgt", "\[Rule]", ".35"}], ",", 
        RowBox[{"shortLabel", "\[Rule]", "True"}], ",", 
        RowBox[{"ellStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"gold", ",", 
           RowBox[{"Thickness", "@", ".01"}]}], "}"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"pl", ",", 
       RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"gold", ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\[Phi]\>\"", ",", "20"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Phi]", "+", ".2"}], ",", ".2"}], "}"}]}], "]"}], ",",
           "Purple", ",", "Dashed", ",", 
          RowBox[{"Line", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "\[Phi]"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"Line", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", "\[Phi]"}]}], "}"}]}], "}"}]}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\[Phi]\>\"", ",", "20"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"\[Phi]", "+", ".25"}]}], "}"}]}], "]"}]}], "}"}]}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7881201532801085`*^9, 3.788120181696105*^9}, {
  3.7881203889201126`*^9, 3.7881204199595613`*^9}, {3.7881204548495054`*^9, 
  3.7881207957274227`*^9}, {3.788120833506041*^9, 3.7881210587068014`*^9}, {
  3.7881210977145743`*^9, 3.7881211223474116`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[
     NCache[{
       Rational[212, 255], 
       Rational[35, 51], 
       Rational[11, 51]}, {0.8313725490196079, 0.6862745098039216, 
      0.21568627450980393`}]], Thickness[0.01], 
    CircleBox[{0, 0}, {1.618033988749895, 1.}]}, 
   {PointSize[Large], FaceForm[None], 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{-1.618033988749895, 0}, {1.618033988749895, 0}}], 
     LineBox[{{0, -1}, {0, 1}}]}, 
    {RGBColor[0.5, 0, 0.5], 
     PointBox[{-0.6395572311304545, 1.2438530898634679`}], InsetBox[
      StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(40\\)]\\)\"\>",
       StripOnInput->False,
       FontSize->20], {-0.9205154863613969, 1.452569305854427}], 
     {Thickness[Large], 
      CircleBox[{0, 0}, {0.9999999999999999, 1.618033988749895}]}}, {
     {EdgeForm[{RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], Thickness[Large]}], 
      PolygonBox[{{-1.9096880274005066`, -1.6780464519948632`}, \
{-0.8815296078931272, 4.420672024148099}, {
       2.021305576621805, -0.5084420595523726}}]}, {}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
      Dashing[{Small, Small}], 
      CircleBox[{-0.6395572311304545, 1.2438530898634679`}, 
       3.186020899546254], 
      PointBox[{{-1.9096880274005066`, -1.6780464519948632`}, \
{-0.8815296078931272, 4.420672024148099}, {
       2.021305576621805, -0.5084420595523726}}]}}, {}, 
    {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
     PolygonBox[{{1.5204545994090657`, 0.342020143325669}, {
      0.7018558673485775, -0.9010232568338562}, {-1.609322212156945, 
      0.10363087736586285`}}], 
     {RGBColor[0, 0, 1], 
      PointBox[{{1.5204545994090657`, 0.342020143325669}, {
       0.7018558673485775, -0.9010232568338562}, {-1.609322212156945, 
       0.10363087736586285`}}]}}}},
  Epilog->{
    RGBColor[
     NCache[{
       Rational[212, 255], 
       Rational[35, 51], 
       Rational[11, 51]}, {0.8313725490196079, 0.6862745098039216, 
      0.21568627450980393`}]], 
    InsetBox[
     FormBox[
      StyleBox["\"\[Phi]\"", 20, StripOnInput -> False], TraditionalForm], {
     1.8180339887498949`, 0.2}], 
    RGBColor[0.5, 0, 0.5], 
    Dashing[{Small, Small}], 
    LineBox[{{0, 1}, {0, 1.618033988749895}}], 
    LineBox[{{0, -1}, {0, -1.618033988749895}}], 
    InsetBox[
     FormBox[
      StyleBox["\"\[Phi]\"", 20, StripOnInput -> False], TraditionalForm], {
     0, 1.868033988749895}]},
  ImageSize->400,
  PlotLabel->FormBox[
    StyleBox["\"a/b=1.618, \[Theta]=20.00\[Degree]\"", {
      GrayLevel[0], 20}, StripOnInput -> False], TraditionalForm],
  PlotRange->All]], "Output",
 CellChangeTimes->{{3.7881201740712495`*^9, 3.7881201820302916`*^9}, {
   3.7881204698186073`*^9, 3.7881205981836767`*^9}, 3.7881206424067*^9, 
   3.7881206804248667`*^9, {3.7881207303675823`*^9, 3.788120796186693*^9}, {
   3.7881208406945534`*^9, 3.788120846551648*^9}, {3.7881208903085012`*^9, 
   3.7881209520940385`*^9}, {3.7881209847874866`*^9, 3.7881210262524633`*^9}, 
   3.7881210592504597`*^9, {3.788121098817273*^9, 3.788121122988303*^9}, 
   3.7881862664778204`*^9, 3.7897221584859343`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"export3", "[", 
  RowBox[{"\"\<00071_x40\>\"", ",", "plotX40single"}], "]"}]], "Input",
 CellChangeTimes->{{3.7881202090473366`*^9, 3.788120210759672*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "showTwoIsosceles"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "showTwoIsosceles"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"fontSize", "\[Rule]", "20"}], ",", 
     RowBox[{"dist1", "\[Rule]", ".1"}], ",", 
     RowBox[{"dist2", "\[Rule]", ".1"}], ",", 
     RowBox[{"drMirror", "\[Rule]", "False"}], ",", 
     RowBox[{"drMirrorLabels", "\[Rule]", "False"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"showTwoIsosceles", "[", 
    RowBox[{"a_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ons0", ",", "ons1", ",", "ell", ",", "gr", ",", "locus", ",", "inc0", 
       ",", "inc1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ell", "=", 
       RowBox[{"plotEll", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ons0", "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", "0."}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ons1", "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", 
         RowBox[{"\[Pi]", "/", "2."}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"locus", "=", 
       RowBox[{"incenterLocus", "[", 
        RowBox[{"a", ",", "\[Pi]", ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", 
           RowBox[{"\"\<exc\>\"", "/.", "ptClrs"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inc0", "=", 
       RowBox[{"getIncenterTrilin", "[", 
        RowBox[{
         RowBox[{"ons0", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"ons0", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inc1", "=", 
       RowBox[{"getIncenterTrilin", "[", 
        RowBox[{
         RowBox[{"ons1", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"ons1", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FaceForm", "@", "None"}], ",", 
          RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", "Gray", ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "a"}], ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"a", ",", "0"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Red"}], "}"}]}], ",", 
            RowBox[{"Polygon", "@", 
             RowBox[{"ons0", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", "Red", ",", 
            RowBox[{"Point", "@", 
             RowBox[{"ons0", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"Point", "@", "inc0"}], ",", 
            RowBox[{"ellLabelTxt", "[", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"inc0", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", "inc0", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\!\(\*SubscriptBox[\(X\), \(1\)]\)(0)\>\"", ",", 
                RowBox[{"OptionValue", "@", "fontSize"}], ",", 
                RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
              RowBox[{"OptionValue", "@", "dist1"}]}], "]"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\!\(\*SubscriptBox[\(P\), \(1\)]\)(0)\>\"", ",", 
                RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
              RowBox[{"ons0", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.5"}], ",", "0"}], "}"}], ",", 
              RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drMirror"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"EdgeForm", "@", 
                 RowBox[{"{", 
                  RowBox[{"Thick", ",", "Dashed", ",", "Red"}], "}"}]}], ",", 
                RowBox[{"Polygon", "@", 
                 RowBox[{"(", 
                  RowBox[{"flipX", "/@", 
                   RowBox[{"ons0", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ",", "Red", 
                ",", 
                RowBox[{"Point", "@", 
                 RowBox[{"(", 
                  RowBox[{"flipX", "/@", 
                   RowBox[{"ons0", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"OptionValue", "@", "drMirrorLabels"}], ",", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(P\), \
\(1\)]\)(\!\(\*SuperscriptBox[\(t\), \(*\)]\))\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    RowBox[{"flipX", "@", 
                    RowBox[{"ons0", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "3"}], "]"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(P\), \
\(1\)]\)(-\!\(\*SuperscriptBox[\(t\), \(*\)]\))\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    RowBox[{"flipX", "@", 
                    RowBox[{"ons0", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.15"}], ",", "1"}], "}"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(P\), \
\(1\)]\)(\[Pi]-\!\(\*SuperscriptBox[\(t\), \(*\)]\))\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    RowBox[{"ons0", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "3"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"EdgeForm", "@", 
                 RowBox[{"{", 
                  RowBox[{"Thick", ",", "Dashed", ",", "Blue"}], "}"}]}], ",", 
                RowBox[{"Polygon", "@", 
                 RowBox[{"(", 
                  RowBox[{"flipY", "/@", 
                   RowBox[{"ons1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ",", "Blue", 
                ",", 
                RowBox[{"Point", "@", 
                 RowBox[{"(", 
                  RowBox[{"flipY", "/@", 
                   RowBox[{"ons1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"OptionValue", "@", "drMirrorLabels"}], ",", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(P\), \
\(1\)]\)(\!\(\*SuperscriptBox[\(t\), \(**\)]\))\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    RowBox[{"flipY", "@", 
                    RowBox[{"ons1", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.15"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(P\), \
\(1\)]\)(-\!\(\*SuperscriptBox[\(t\), \(**\)]\))\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    RowBox[{"ons1", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.15"}], ",", "1"}], "}"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(P\), \
\(1\)]\)(\[Pi]-\!\(\*SuperscriptBox[\(t\), \(**\)]\))\>\"", ",", 
                    RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                    RowBox[{"flipY", "@", 
                    RowBox[{"ons1", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "3"}], "]"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.15", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], 
                   "\[IndentingNewLine]", "}"}], ",", 
                  RowBox[{"{", "}"}]}], "]"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Blue"}], "}"}]}], ",", 
            RowBox[{"Polygon", "@", 
             RowBox[{"ons1", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", "Blue", ",", 
            RowBox[{"Point", "@", 
             RowBox[{"ons1", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"Point", "@", "inc1"}], ",", 
            RowBox[{"ellLabelTxtb", "[", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"inc0", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"inc1", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "inc1", ",", 
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(X\), \(1\)]\)(\[Pi]/2)\>\"", ",", 
                RowBox[{"OptionValue", "@", "fontSize"}], ",", 
                RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
              RowBox[{"OptionValue", "@", "dist2"}], ",", 
              RowBox[{"inward", "\[Rule]", "True"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(P\), \(1\)]\)(\[Pi]/2)\>\"", ",", 
                RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
              RowBox[{"ons1", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "1.5"}]}], "}"}], ",", 
              RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}], "}"}]}], 
         "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ell", ",", "locus", ",", "gr"}], "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.788121333431425*^9, 3.7881215581831045`*^9}, {
   3.7881216000111012`*^9, 3.788121600785987*^9}, {3.78812163172165*^9, 
   3.7881220269556026`*^9}, {3.78812210734953*^9, 3.7881222837720604`*^9}, {
   3.7881223584856467`*^9, 3.788122508093773*^9}, {3.788205123103693*^9, 
   3.7882052208407965`*^9}, 3.7882052777757244`*^9, {3.788205318056897*^9, 
   3.7882054258168945`*^9}, {3.7882516174563956`*^9, 
   3.7882517074358783`*^9}, {3.788251741480893*^9, 3.788251792223692*^9}, {
   3.7882529651750546`*^9, 3.788253188910231*^9}, {3.7902694821275806`*^9, 
   3.790269585019105*^9}, {3.790269617539281*^9, 3.7902696340966034`*^9}, {
   3.7902696800901756`*^9, 3.7902697477971125`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotTwoIsosceles", "=", 
  RowBox[{"showTwoIsosceles", "[", 
   RowBox[{"1.5", ",", 
    RowBox[{"dist1", "\[Rule]", ".2"}], ",", 
    RowBox[{"dist2", "\[Rule]", ".15"}], ",", 
    RowBox[{"drMirror", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7881213642946105`*^9, 3.7881213671516466`*^9}, {
  3.788121873481668*^9, 3.7881218928716216`*^9}, {3.7881221301530657`*^9, 
  3.788122134184597*^9}, {3.7881221676406727`*^9, 3.7881221720646544`*^9}, {
  3.78812225713138*^9, 3.7881222618720407`*^9}, {3.788122311720722*^9, 
  3.7881223168322678`*^9}, {3.788122354120637*^9, 3.78812237451272*^9}, {
  3.7881225327226706`*^9, 3.788122540543691*^9}, {3.788205269658959*^9, 
  3.7882052734597955`*^9}, {3.788251814647725*^9, 3.788251819087867*^9}, {
  3.788251861448536*^9, 3.788251861865033*^9}, {3.7882528156793814`*^9, 
  3.788252824193318*^9}, {3.7882528811031775`*^9, 3.788252881583956*^9}, {
  3.78825293247871*^9, 3.788252932851902*^9}, {3.7882532531593084`*^9, 
  3.7882532536542587`*^9}, {3.790269471449504*^9, 3.7902694719701433`*^9}, {
  3.790269765241807*^9, 3.790269765665674*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {{}, {}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], Opacity[1.],
      FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
      "]]}}, 
   {PointSize[Large], FaceForm[None], 
    {GrayLevel[0.5], Dashing[{Small, Small}], LineBox[{{-1.5, 0}, {1.5, 0}}], 
     LineBox[{{0, -1}, {0, 1}}]}, 
    {EdgeForm[{RGBColor[1, 0, 0], Thickness[Large]}], 
     PolygonBox[{{1.5, 
      0.}, {-1.1430749027719944`, -0.6475182594260426}, {-1.1430749027719989`,
       0.6475182594260386}}], 
     {RGBColor[1, 0, 0], 
      PointBox[{{1.5, 
       0.}, {-1.1430749027719944`, -0.6475182594260426}, \
{-1.1430749027719989`, 0.6475182594260386}}], 
      PointBox[{-0.6350416126511095, -1.9444327279798947`*^-15}], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)(0)\"\>",
        StripOnInput->False,
        FontSize->20,
        Background->GrayLevel[
         1]], {-0.8350416126511095, -2.191391867033484*^-15}, {0, 0}], 
      InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)(0)\"\>",
        StripOnInput->False,
        FontSize->20], {1.5, 0.}, {-1.5, 0},
       Background->GrayLevel[1]]}}, {}, 
    {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
     PolygonBox[{{9.184850993605148*^-17, 1.}, {
      1.4569160837085917`, -0.23795006481866898`}, {-1.4569160837085908`, \
-0.23795006481866995`}}], 
     {RGBColor[0, 0, 1], 
      PointBox[{{9.184850993605148*^-17, 1.}, {
       1.4569160837085917`, -0.23795006481866898`}, {-1.4569160837085908`, \
-0.23795006481866995`}}], 
      PointBox[{3.2956486914913466`*^-16, 0.2974375810233362}], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)(\[Pi]/2)\"\>",
        StripOnInput->False,
        FontSize->20,
        Background->GrayLevel[
         1]], {3.2956486914913466`*^-16, 0.14743758102333618`}], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)(\[Pi]/2)\"\>",
        StripOnInput->False,
        FontSize->20], {9.184850993605148*^-17, 1.}, {0, -1.5},
       Background->GrayLevel[1]]}}}},
  ImageSize->Large]], "Output",
 CellChangeTimes->{{3.788121367414317*^9, 3.7881214087724333`*^9}, 
   3.7881214849803553`*^9, {3.7881215167886267`*^9, 3.7881215595010586`*^9}, 
   3.788121643370072*^9, {3.78812172030175*^9, 3.7881217398160505`*^9}, {
   3.7881218445646524`*^9, 3.7881219193632197`*^9}, {3.7881219819425583`*^9, 
   3.7881220458796096`*^9}, {3.7881221170755625`*^9, 3.78812217288033*^9}, {
   3.788122218141957*^9, 3.7881223209464693`*^9}, {3.788122356135393*^9, 
   3.788122375546565*^9}, {3.7881224139604797`*^9, 3.7881225096444254`*^9}, 
   3.788122541542515*^9, 3.7882052227059345`*^9, {3.788205264470928*^9, 
   3.788205279447737*^9}, {3.788205359777917*^9, 3.7882053866738014`*^9}, 
   3.7882054275524883`*^9, {3.788251698277547*^9, 3.7882517099529886`*^9}, 
   3.788251748080038*^9, {3.7882517818850594`*^9, 3.7882518201356025`*^9}, 
   3.7882518628354516`*^9, 3.7882519867487607`*^9, {3.7882528171034927`*^9, 
   3.788252825307169*^9}, 3.78825288269033*^9, 3.7882529339929686`*^9, {
   3.7882529779575043`*^9, 3.788253032787013*^9}, {3.7882531499207387`*^9, 
   3.788253190549227*^9}, 3.788253254659069*^9, 3.788253849459853*^9, 
   3.789722159434692*^9, {3.790269465503769*^9, 3.7902694729186063`*^9}, 
   3.790269526095808*^9, 3.7902695743048344`*^9, 3.790269636153878*^9, {
   3.7902697168535194`*^9, 3.7902697665409274`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"export3", "[", 
  RowBox[{"\"\<0072_two_isosceles\>\"", ",", "plotTwoIsosceles"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7881225243917046`*^9, 3.7881225497917857`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"getJoachimsthal", "[", "a", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", "\[Rule]", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.790270633694957*^9, 3.790270633758753*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   SqrtBox["3"], "2"], "}"}]], "Output",
 CellChangeTimes->{{3.7902706343362083`*^9, 3.7902706485675917`*^9}, 
   3.7902707649955373`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"getJoachimsthal", "[", "a", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", "\[Rule]", "\[Infinity]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.788285763949464*^9, 3.788285782562258*^9}}],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellChangeTimes->{
  3.7882857829803686`*^9, 3.789722161344713*^9, {3.790270625575029*^9, 
   3.790270649403313*^9}, 3.7902707657943754`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"getJoachimsthal", "[", "a", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1.01", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.788285508495221*^9, 3.7882855089788914`*^9}, 
   3.788285574355076*^9, {3.7882856263961153`*^9, 3.7882856402023897`*^9}, {
   3.788285710923379*^9, 3.788285735020336*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVink01AkcwEXuI8og5PpJNq1QqVS+39BOSZGxWsLroBAlilqVssyql0ib
Y3Mukq0kIb85kCNiJhO5F9E8YRzjGJtobPvH533e572P4cnzrn6SEhISh77z
v2upLbMiUyF4rXe41Z4kgBHmgNberUIoX80Nn4kTgJKFcM8dEEKx/3ET+SgB
uGmpxRm5C+HluKKP8VkBDI+46jr/JoTc3gvmGvYCULjd4fC4Twhlax0psjNj
4MLpe+CZNA1ahP9LyqEx6HcZ3161OAMKpfw2kXgEPPb5RropzgMt0cZae/8w
1DRvubk0/AV4Mwn7HinzwfboC2/H0kUQSxautrYYAu13t3b6Voohtpftkhf5
EUIF/5zd3ySBVaxLjSup/UD3+4tRR5NEGocuF8bpBeOhyrk1HVLooLfyqnlF
N5AbZBODbKVxr8D2GU2+C8RDSxvN6mVwR2B02fOQDrA5o7dh1lIOmcYB1+sN
2kFiMlnlboo83jgcQ1gttsGlMZboro4i+praqIb3t8LgcxXbtFglvAotGZyp
9/BtTJkur6KCllIHsu1l3kOuqS/plLAKb4YUdI9b8yBLc/aRU6Qq0h1o6quU
W6C+XWF6va0aGmR4H2MXceHM5QqB1JwapnpEHAyP5sBg++5hdXI1ngue+4Pp
3gzZpUHuCb+uwVp3k0uh1CboibCKUNmsjns93Bpzvd7CuOhdSvWMOnYSzvZD
5xvhyi8rAiIKKShrxfPk5zTAwd0Dz1O8NNDUVuprMf8NiHruz4/paWJuL/uD
j/Eb0PHpn7D7oImZPXLTU5H1oJW+zOemauGugIedbrw68DzGOVLjsRbzFpn/
iizrQGvZ/DxTWRvTbyhfi3pUC0Xe/nc+87RxUNF9U4xmLVRlb/fU+l0Hac+i
FS3SaoDiV5JRslMX/V5cnaYTNWDPlxqMWtTFpMDEbXZ/v4ZxquDDkeJ1mHJ/
QKHY9jUEny5sdL+oh/o+ruFlLdUQGPAt6LiZPnbkU7ZIBFfD04klelu/Pg7Q
RpPpqtVwMjmAx3IxwFSN+bnAE1Ww6XHWtqQnBri/6QojtLwSTmq+1l6hYojH
d0xabpWuBBtqBSPvnCFuYQdGNPuwwSXga0lToyF6O3ZQJt+yoHVkg9ntjUbI
VgWQ38yCJM/sxeZYI+wumWq1yGPC3J1Jut2AEVKpQac3GjKhRtc0yRUJ/LJH
1HAqlQHvMp+K+H8SGMJ8LBm3jgHeTuwTV9IJ/PzK81qwDgPGF7hc5UwCD5+u
P0xbywCFn6fyrXMITNe7INKnMOAnRSv3uAIC2727ndlKDKiMeFVuVkpglVql
idwSCUUuNRGh3O8/weL09ZCwR9z6SaaFwKKJsHluFwmcJ5+cH/IIPLiLdrGy
g4QxGWnTujYCHYTbg7JbSTBhU7soPQQGq/k7+jeRkPkDdwc5TGBq8liRLIOE
Hzv78g6NEJhzj6H27RUJrJhJ1aFRAu+ZhzXMlJHQM7BqVGGCwMuhzmYDL0jQ
SHZN85olMOF6fCuzkIR8+1PS03METldENr0sIGHrdNiF2PnvHVWm/jSfBFen
BweKFghUzmJnZeSQMLiQX2a3SOC2Jd+PyVkkhBSUG3YuEagqlA9LzCBB7NYQ
f1ZMYJxS2tHbD0mIl+xaWF4msGBUHB+TRsJ/KLFUEw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2., 0.06},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{1.01, 10}, {0.09999874560063536, 0.8616740876179096}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.788285640479077*^9, {3.7882857147810197`*^9, 3.7882857353652143`*^9}, 
   3.789722161452058*^9, 3.790270767392737*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "showTwoIsoscelesPosition"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "showTwoIsoscelesPosition"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"fontSize", "\[Rule]", "20"}], ",", 
     RowBox[{"dist1", "\[Rule]", ".1"}], ",", 
     RowBox[{"dist2", "\[Rule]", ".1"}], ",", 
     RowBox[{"drMirror", "\[Rule]", "False"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"showTwoIsoscelesPosition", "[", 
    RowBox[{"a_", ",", "pos_", 
     RowBox[{"(*", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "*)"}], ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ell", ",", "onsList", ",", "locus", ",", "incList", ",", "\[Delta]", 
       ",", "a1", ",", "b1", ",", "gr", ",", "ts", ",", "tss", ",", "tsStr", 
       ",", "tsVal"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Delta]", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"a", "^", "4"}], "-", 
         RowBox[{"a", "^", "2"}], "+", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"a1", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Delta]", "-", "1"}], ")"}], "/", "a"}]}], ";", 
      RowBox[{"b1", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", "^", "2"}], "-", "\[Delta]"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ts", "=", 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{"Sqrt", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"a", "^", "2"}]}], "+", "2", "+", 
            RowBox[{"2", "*", "\[Delta]"}]}], ")"}]}], "/", 
         RowBox[{"a", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tss", "=", 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{"Sqrt", "@", "3"}], "*", 
         RowBox[{
          RowBox[{"Sqrt", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], "*", 
              RowBox[{"a", "^", "2"}]}], "+", "1", "+", 
             RowBox[{"2", "\[Delta]"}]}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"3", "*", "a"}], ")"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tsStr", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<-\!\(\*SuperscriptBox[\(t\), \(*\)]\)\>\"", ",", 
         "\"\<-\!\(\*SuperscriptBox[\(t\), \(**\)]\)\>\"", ",", "\"\<0\>\"", 
         ",", "\"\<\!\(\*SuperscriptBox[\(t\), \(**\)]\)\>\"", ",", 
         "\"\<\!\(\*SuperscriptBox[\(t\), \(*\)]\)\>\""}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tsVal", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ts"}], ",", 
         RowBox[{"-", "tss"}], ",", "0.", ",", "tss", ",", "ts"}], "}"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"ell", "=", 
       RowBox[{"plotEll", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"onsList", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"orbitNormals", "[", 
          RowBox[{"a", ",", "#"}], "]"}], "&"}], "/@", "tsVal"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"locus", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", 
          RowBox[{"\"\<exc\>\"", "/.", "ptClrs"}], ",", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"a1", ",", "b1"}], "}"}]}], "]"}]}], "}"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"incList", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"getIncenterTrilin", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "&"}], "/@", 
        "onsList"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FaceForm", "@", "None"}], ",", 
          RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", 
             RowBox[{"{", 
              RowBox[{"Dashed", ",", "Blue", ",", "Thick"}], "}"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Polygon", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}], "/@", 
             RowBox[{"Drop", "[", 
              RowBox[{
               RowBox[{"Drop", "[", 
                RowBox[{"onsList", ",", 
                 RowBox[{"{", "pos", "}"}]}], "]"}], ",", 
               RowBox[{"{", "1", "}"}]}], "]"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Point", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "&"}], "/@", 
             RowBox[{"Drop", "[", 
              RowBox[{"onsList", ",", 
               RowBox[{"{", "pos", "}"}]}], "]"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Thickness", "@", ".005"}], ",", "Red"}], "}"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Polygon", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}], "/@", 
             RowBox[{"Part", "[", 
              RowBox[{"onsList", ",", 
               RowBox[{"{", "pos", "}"}]}], "]"}]}], ",", "Red", ",", 
            RowBox[{"Point", "@", 
             RowBox[{"onsList", "[", 
              RowBox[{"[", 
               RowBox[{"pos", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ellLabelTxt", "[", 
                RowBox[{"a", ",", 
                 RowBox[{"#1", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{
                   "\"\<\!\(\*SubscriptBox[\(P\), \(1\)]\)(\>\"", "<>", "#2", 
                    "<>", "\"\<)\>\""}], ",", 
                   RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
                 RowBox[{"OptionValue", "@", "dist2"}]}], "]"}], "&"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Drop", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"{", "pos", "}"}]}], "]"}], "&"}], "/@", 
               RowBox[{"{", 
                RowBox[{"onsList", ",", "tsStr"}], "}"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", "Red", ",", 
            RowBox[{"ellLabelTxt", "[", 
             RowBox[{"a", ",", 
              RowBox[{"onsList", "[", 
               RowBox[{"[", 
                RowBox[{"pos", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"\"\<\!\(\*SubscriptBox[\(P\), \(1\)]\)(\>\"", "<>", 
                 RowBox[{"tsStr", "[", 
                  RowBox[{"[", "pos", "]"}], "]"}], "<>", "\"\<)\>\""}], ",", 
                RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
              RowBox[{"OptionValue", "@", "dist2"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Black", ",", 
              RowBox[{"ellLabelTxt", "[", 
               RowBox[{"a", ",", 
                RowBox[{"o", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(P\), \(1\)]\)(t)\>\"", ",", 
                  "fontSize"}], "]"}], ",", 
                RowBox[{"OptionValue", "@", "lgt"}]}], "]"}]}], "}"}], ","}], 
           "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Darker", "@", "Green"}], ",", 
            RowBox[{"Point", "@", 
             RowBox[{"incList", "[", 
              RowBox[{"[", "pos", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"ellLabelTxtb", "[", 
             RowBox[{"a1", ",", "b1", ",", 
              RowBox[{"incList", "[", 
               RowBox[{"[", "pos", "]"}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"\"\<\!\(\*SubscriptBox[\(X\), \(1\)]\)(\>\"", "<>", 
                 RowBox[{"tsStr", "[", 
                  RowBox[{"[", "pos", "]"}], "]"}], "<>", "\"\<)\>\""}], ",", 
                RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
              RowBox[{"OptionValue", "@", "dist1"}]}], "]"}]}], "}"}]}], 
         "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ell", ",", "locus", ",", "gr"}], "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQfeHUDp5WyzeOfI52tiB6Td8PTxC9paEuEEy3cUWA
6CW9Cg0guqyEtQ1E1zSI9oNpzUMLQbSQ3PVdIDqtyuEgiBb5s/E4iJaZveMM
iO7rX3sHRM9hnfsARLdMTfgCojuvR/0E23vHibkNSLvlBnGA6Hfy6WDaIdiX
B0SrptWBabOF74VB9J87hWIg+nzxIikQvfXFJx0QHeOSWQaifdgbwXRPh1gN
iD4Srw+mPwmwNIHoqoNdXSC6YdekqSB6g+2qaSA660/NHBBda7dwOYiWVXZe
A6LPvA4C0xtCdmwC0QrCs/aB7SmccAbszsRZZ0H05+WXJrUDafH1zFNB9M+Y
KdodQHphiJ0hiAYAgPGy2A==
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotTwoIsoscelesTstar", "=", " ", 
  RowBox[{"Grid", "@", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"showTwoIsoscelesPosition", "[", 
        RowBox[{"1.5", ",", "#", ",", 
         RowBox[{"dist1", "\[Rule]", ".2"}], ",", 
         RowBox[{"dist2", "\[Rule]", ".25"}]}], "]"}], "&"}], "/@", 
      RowBox[{"Range", "[", "5", "]"}]}], ",", "2"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.788254220988557*^9, 3.7882542236291227`*^9}, {
  3.7882545234765615`*^9, 3.7882545240283384`*^9}, {3.788255115923831*^9, 
  3.7882551278598413`*^9}, {3.788255595513079*^9, 3.788255600978153*^9}, {
  3.7882558030178328`*^9, 3.788255839594926*^9}, {3.7882561694339857`*^9, 
  3.788256187314273*^9}, {3.788256237361518*^9, 3.78825623796073*^9}, {
  3.788256356409577*^9, 3.78825638925667*^9}, {3.7882568299534063`*^9, 
  3.788256835176957*^9}, {3.790269793153227*^9, 3.7902698202653885`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, 
       {RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
        CircleBox[{0, 0}, {0.6350416126511089, 0.2974375810233365}]}, 
       {PointSize[Large], FaceForm[None], 
        {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large], 
         Dashing[{Small, Small}]}], 
         PolygonBox[{{1.5, 
          0.}, {-1.1430749027719944`, -0.6475182594260426}, \
{-1.1430749027719989`, 0.6475182594260386}}], 
         PolygonBox[{{1.4569160837085917`, 0.237950064818669}, {
          1.7763568394002505`*^-15, -1.}, {-1.456916083708592, 
          0.23795006481866832`}}], 
         PolygonBox[{{1.1430749027719964`, 0.6475182594260408}, {
          1.1430749027719966`, -0.6475182594260404}, {-1.5, \
-1.3322676295501878`*^-15}}]}, 
        {RGBColor[0, 0, 1], 
         PointBox[{1.4569160837085917`, -0.237950064818669}], 
         PointBox[{1.5, 0.}], 
         PointBox[{1.4569160837085917`, 0.237950064818669}], 
         PointBox[{1.1430749027719964`, 0.6475182594260408}]}, 
        {EdgeForm[{RGBColor[1, 0, 0], Thickness[0.005]}], 
         PolygonBox[{{
          1.1430749027719964`, -0.6475182594260408}, {-1.5000000000000007`, \
-5.551115123125783*^-16}, {1.1430749027719929`, 0.6475182594260435}}], 
         {RGBColor[1, 0, 0], 
          PointBox[{{
           1.1430749027719964`, -0.6475182594260408}, {-1.5000000000000007`, \
-5.551115123125783*^-16}, {1.1430749027719929`, 0.6475182594260435}}]}}, {
         {RGBColor[0, 0, 1], InsetBox[
           
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(1\\)]\\)(-\\!\\(\\*SuperscriptBox[\\(t\\), \\(**\\)]\\))\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {1.6915734093441162`, -0.32418195871868377`}, {0, 0}], 
          InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)(0)\"\>",
            StripOnInput->False,
            FontSize->20], {1.75, 0.}, {0, 0}], InsetBox[
           
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(1\\)]\\)(\\!\\(\\*SuperscriptBox[\\(t\\), \\(**\\)]\\))\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {1.6915734093441162`, 0.32418195871868377`}, {0, 0}], 
          InsetBox[
           
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(1\\)]\\)(\\!\\(\\*SuperscriptBox[\\(t\\), \\(*\\)]\\))\"\>",
            StripOnInput->False,
            FontSize->20], {1.297392952508301, 0.8442056752044362}, {0, 0}]}, 
         {RGBColor[1, 0, 0], InsetBox[
           
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(1\\)]\\)(-\\!\\(\\*SuperscriptBox[\\(t\\), \\(*\\)]\\))\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {1.297392952508301, -0.8442056752044362}, {0, 0}]}}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], 
         PointBox[{0.6350416126511067, 1.2193900158517979`*^-15}], InsetBox[
          
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \
\\(1\\)]\\)(-\\!\\(\\*SuperscriptBox[\\(t\\), \\(*\\)]\\))\"\>",
           StripOnInput->False,
           FontSize->20], {0.8350416126511067, 2.9699747381573688`*^-15}]}}},
      ImageSize->Large], 
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, 
       {RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
        CircleBox[{0, 0}, {0.6350416126511089, 0.2974375810233365}]}, 
       {PointSize[Large], FaceForm[None], 
        {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large], 
         Dashing[{Small, Small}]}], 
         PolygonBox[{{1.5, 
          0.}, {-1.1430749027719944`, -0.6475182594260426}, \
{-1.1430749027719989`, 0.6475182594260386}}], 
         PolygonBox[{{1.4569160837085917`, 0.237950064818669}, {
          1.7763568394002505`*^-15, -1.}, {-1.456916083708592, 
          0.23795006481866832`}}], 
         PolygonBox[{{1.1430749027719964`, 0.6475182594260408}, {
          
          1.1430749027719966`, -0.6475182594260404}, {-1.5, \
-1.3322676295501878`*^-15}}]}, 
        {RGBColor[0, 0, 1], 
         PointBox[{1.1430749027719964`, -0.6475182594260408}], 
         PointBox[{1.5, 0.}], 
         PointBox[{1.4569160837085917`, 0.237950064818669}], 
         PointBox[{1.1430749027719964`, 0.6475182594260408}]}, 
        {EdgeForm[{RGBColor[1, 0, 0], Thickness[0.005]}], 
         PolygonBox[{{
          1.4569160837085917`, -0.237950064818669}, {-1.4569160837085908`, \
-0.23795006481867112`}, {-1.176836406102666*^-14, 0.9999999999999999}}], 
         {RGBColor[1, 0, 0], 
          PointBox[{{
           1.4569160837085917`, -0.237950064818669}, {-1.4569160837085908`, \
-0.23795006481867112`}, {-1.176836406102666*^-14, 0.9999999999999999}}]}}, {
         {RGBColor[0, 0, 1], InsetBox[
           
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(1\\)]\\)(-\\!\\(\\*SuperscriptBox[\\(t\\), \\(*\\)]\\))\"\>",
            StripOnInput->False,
            FontSize->20], {1.297392952508301, -0.8442056752044362}, {0, 0}], 
          InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)(0)\"\>",
            StripOnInput->False,
            FontSize->20], {1.75, 0.}, {0, 0}], InsetBox[
           
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(1\\)]\\)(\\!\\(\\*SuperscriptBox[\\(t\\), \\(**\\)]\\))\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {1.6915734093441162`, 0.32418195871868377`}, {0, 0}], 
          InsetBox[
           
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(1\\)]\\)(\\!\\(\\*SuperscriptBox[\\(t\\), \\(*\\)]\\))\"\>",
            StripOnInput->False,
            FontSize->20], {1.297392952508301, 0.8442056752044362}, {0, 0}]}, 
         {RGBColor[1, 0, 0], InsetBox[
           
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(1\\)]\\)(-\\!\\(\\*SuperscriptBox[\\(t\\), \\(**\\)]\\))\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {1.6915734093441162`, -0.32418195871868377`}, {0, 0}]}}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], 
         PointBox[{-8.582960212960958*^-15, 0.2974375810233356}], InsetBox[
          
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \
\\(1\\)]\\)(-\\!\\(\\*SuperscriptBox[\\(t\\), \\(**\\)]\\))\"\>",
           StripOnInput->False,
           FontSize->20], {-9.849032686337858*^-15, 0.49743758102333563`}]}}},
      ImageSize->Large]},
    {
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, 
       {RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
        CircleBox[{0, 0}, {0.6350416126511089, 0.2974375810233365}]}, 
       {PointSize[Large], FaceForm[None], 
        {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large], 
         Dashing[{Small, Small}]}], 
         PolygonBox[{{
          1.4569160837085917`, -0.237950064818669}, {-1.4569160837085908`, \
-0.23795006481867112`}, {-1.176836406102666*^-14, 0.9999999999999999}}], 
         PolygonBox[{{1.4569160837085917`, 0.237950064818669}, {
          1.7763568394002505`*^-15, -1.}, {-1.456916083708592, 
          0.23795006481866832`}}], 
         PolygonBox[{{1.1430749027719964`, 0.6475182594260408}, {
          1.1430749027719966`, -0.6475182594260404}, {-1.5, \
-1.3322676295501878`*^-15}}]}, 
        {RGBColor[0, 0, 1], 
         PointBox[{1.1430749027719964`, -0.6475182594260408}], 
         PointBox[{1.4569160837085917`, -0.237950064818669}], 
         PointBox[{1.4569160837085917`, 0.237950064818669}], 
         PointBox[{1.1430749027719964`, 0.6475182594260408}]}, 
        {EdgeForm[{RGBColor[1, 0, 0], Thickness[0.005]}], 
         PolygonBox[{{1.5, 
          0.}, {-1.1430749027719944`, -0.6475182594260426}, \
{-1.1430749027719989`, 0.6475182594260386}}], 
         {RGBColor[1, 0, 0], 
          PointBox[{{1.5, 
           0.}, {-1.1430749027719944`, -0.6475182594260426}, \
{-1.1430749027719989`, 0.6475182594260386}}]}}, {
         {RGBColor[0, 0, 1], InsetBox[
           
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(1\\)]\\)(-\\!\\(\\*SuperscriptBox[\\(t\\), \\(*\\)]\\))\"\>",
            StripOnInput->False,
            FontSize->20], {1.297392952508301, -0.8442056752044362}, {0, 0}], 
          InsetBox[
           
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(1\\)]\\)(-\\!\\(\\*SuperscriptBox[\\(t\\), \\(**\\)]\\))\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {1.6915734093441162`, -0.32418195871868377`}, {0, 0}], 
          InsetBox[
           
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(1\\)]\\)(\\!\\(\\*SuperscriptBox[\\(t\\), \\(**\\)]\\))\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {1.6915734093441162`, 0.32418195871868377`}, {0, 0}], 
          InsetBox[
           
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(1\\)]\\)(\\!\\(\\*SuperscriptBox[\\(t\\), \\(*\\)]\\))\"\>",
            StripOnInput->False,
            FontSize->20], {1.297392952508301, 0.8442056752044362}, {0, 0}]}, 
         {RGBColor[1, 0, 0], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)(0)\"\>",
            StripOnInput->False,
            FontSize->20], {1.75, 0.}, {0, 0}]}}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], 
         PointBox[{-0.6350416126511095, -1.9444327279798947`*^-15}], InsetBox[
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)(0)\"\>",
           StripOnInput->False,
           FontSize->20], {-0.8350416126511095, -4.7359056635482254`*^-15}]}}},
      ImageSize->Large], 
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, 
       {RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
        CircleBox[{0, 0}, {0.6350416126511089, 0.2974375810233365}]}, 
       {PointSize[Large], FaceForm[None], 
        {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large], 
         Dashing[{Small, Small}]}], 
         PolygonBox[{{
          1.4569160837085917`, -0.237950064818669}, {-1.4569160837085908`, \
-0.23795006481867112`}, {-1.176836406102666*^-14, 0.9999999999999999}}], 
         PolygonBox[{{1.5, 
          0.}, {-1.1430749027719944`, -0.6475182594260426}, \
{-1.1430749027719989`, 0.6475182594260386}}], 
         PolygonBox[{{1.1430749027719964`, 0.6475182594260408}, {
          1.1430749027719966`, -0.6475182594260404}, {-1.5, \
-1.3322676295501878`*^-15}}]}, 
        {RGBColor[0, 0, 1], 
         PointBox[{1.1430749027719964`, -0.6475182594260408}], 
         PointBox[{1.4569160837085917`, -0.237950064818669}], 
         PointBox[{1.5, 0.}], 
         PointBox[{1.1430749027719964`, 0.6475182594260408}]}, 
        {EdgeForm[{RGBColor[1, 0, 0], Thickness[0.005]}], 
         PolygonBox[{{1.4569160837085917`, 0.237950064818669}, {
          1.7763568394002505`*^-15, -1.}, {-1.456916083708592, 
          0.23795006481866832`}}], 
         {RGBColor[1, 0, 0], 
          PointBox[{{1.4569160837085917`, 0.237950064818669}, {
           1.7763568394002505`*^-15, -1.}, {-1.456916083708592, 
           0.23795006481866832`}}]}}, {
         {RGBColor[0, 0, 1], InsetBox[
           
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(1\\)]\\)(-\\!\\(\\*SuperscriptBox[\\(t\\), \\(*\\)]\\))\"\>",
            StripOnInput->False,
            FontSize->20], {1.297392952508301, -0.8442056752044362}, {0, 0}], 
          InsetBox[
           
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(1\\)]\\)(-\\!\\(\\*SuperscriptBox[\\(t\\), \\(**\\)]\\))\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {1.6915734093441162`, -0.32418195871868377`}, {0, 0}], 
          InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)(0)\"\>",
            StripOnInput->False,
            FontSize->20], {1.75, 0.}, {0, 0}], InsetBox[
           
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(1\\)]\\)(\\!\\(\\*SuperscriptBox[\\(t\\), \\(*\\)]\\))\"\>",
            StripOnInput->False,
            FontSize->20], {1.297392952508301, 0.8442056752044362}, {0, 0}]}, 
         {RGBColor[1, 0, 0], InsetBox[
           
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(1\\)]\\)(\\!\\(\\*SuperscriptBox[\\(t\\), \\(**\\)]\\))\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {1.6915734093441162`, 0.32418195871868377`}, {0, 0}]}}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], 
         PointBox[{1.3182594765965387`*^-15, -0.2974375810233367}], InsetBox[
          
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \
\\(1\\)]\\)(\\!\\(\\*SuperscriptBox[\\(t\\), \\(**\\)]\\))\"\>",
           StripOnInput->False,
           FontSize->20], {1.5127159338881347`*^-15, -0.4974375810233367}]}}},
      ImageSize->Large]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7882542264711237`*^9, {3.788254267545622*^9, 3.788254274287059*^9}, {
   3.7882543059539814`*^9, 3.788254330465887*^9}, {3.7882545170618176`*^9, 
   3.7882545446731997`*^9}, {3.788254577947098*^9, 3.7882546341791*^9}, {
   3.7882546688661327`*^9, 3.7882546816260242`*^9}, 3.7882547371461596`*^9, 
   3.78825478344256*^9, {3.7882548235664735`*^9, 3.7882548687175245`*^9}, {
   3.788254903451125*^9, 3.788254918954957*^9}, {3.7882549538570495`*^9, 
   3.7882549624114933`*^9}, {3.7882550018762417`*^9, 3.788255047145011*^9}, {
   3.7882551039224024`*^9, 3.7882551399690466`*^9}, 3.7882552672279425`*^9, 
   3.7882553004181204`*^9, {3.7882553934811764`*^9, 3.7882553990490417`*^9}, {
   3.7882554970999937`*^9, 3.7882556013864765`*^9}, {3.788255804631241*^9, 
   3.788255839883129*^9}, 3.7882559385450225`*^9, {3.788256181240966*^9, 
   3.7882561877432885`*^9}, {3.788256228666091*^9, 3.78825623839428*^9}, {
   3.788256311816867*^9, 3.788256389979261*^9}, {3.7882564300480137`*^9, 
   3.788256438277938*^9}, 3.788256511258786*^9, 3.788256548767974*^9, 
   3.7882566119529996`*^9, {3.788256668327961*^9, 3.788256757740098*^9}, 
   3.788256835555828*^9, {3.788256869700015*^9, 3.788256877749771*^9}, 
   3.7882569400745134`*^9, 3.7882584732999616`*^9, {3.788259678275094*^9, 
   3.7882597242242937`*^9}, 3.789722161665681*^9, {3.790269789830345*^9, 
   3.790269821736889*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"export3", "[", 
  RowBox[{"\"\<0073_two_isosceles_tstar\>\"", ",", "plotTwoIsoscelesTstar"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7882568156088686`*^9, 3.788256838949841*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotX40duo", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Phi]", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Sqrt", "@", "5"}]}], ")"}], "/", "2."}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Show", "[", 
          RowBox[{"#", ",", 
           RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Automatic", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "3.25"}], ",", "5"}], "}"}]}], "}"}]}]}], "]"}], 
         "&"}], "/@", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"plotX40", "[", 
           RowBox[{"\[Phi]", ",", "20.", ",", 
            RowBox[{"lgt", "\[Rule]", ".35"}], ",", 
            RowBox[{"shortLabel", "\[Rule]", "True"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"plotX40", "[", 
           RowBox[{"\[Phi]", ",", "0.", ",", 
            RowBox[{"lgt", "\[Rule]", ".33"}], ",", 
            RowBox[{"shortLabel", "\[Rule]", "True"}], ",", 
            RowBox[{"topBotVtx", "\[Rule]", "True"}], ",", 
            RowBox[{"inward0", "\[Rule]", "True"}]}], "]"}]}], "}"}]}], "}"}],
       ",", 
      RowBox[{"Spacings", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"3", ",", "0"}], "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "None"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.788094650681385*^9, 3.7880947995710287`*^9}, {
   3.788094850194725*^9, 3.7880948836281996`*^9}, {3.788094917315145*^9, 
   3.7880949432593083`*^9}, 3.7880952305160103`*^9, {3.788095263827611*^9, 
   3.788095306498067*^9}, {3.788095337899123*^9, 3.7880953436029043`*^9}, {
   3.7880969077321053`*^9, 3.7880969425093784`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], 
        CircleBox[{0, 0}, {1.618033988749895, 1.}]}, 
       {PointSize[Large], FaceForm[None], 
        {GrayLevel[0.5], Dashing[{Small, Small}], 
         LineBox[{{-1.618033988749895, 0}, {1.618033988749895, 0}}], 
         LineBox[{{0, -1}, {0, 1}}]}, 
        {RGBColor[0.5, 0, 0.5], 
         PointBox[{-0.6395572311304545, 1.2438530898634679`}], InsetBox[
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(40\\)]\\)\"\>",
           StripOnInput->False,
           FontSize->20], {-0.9205154863613969, 1.452569305854427}], 
         {Thickness[Large], 
          CircleBox[{0, 0}, {0.9999999999999999, 1.618033988749895}]}}, {
         {EdgeForm[{RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], Thickness[Large]}], 
          PolygonBox[{{-1.9096880274005066`, -1.6780464519948632`}, \
{-0.8815296078931272, 4.420672024148099}, {
           2.021305576621805, -0.5084420595523726}}]}, {}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
          Dashing[{Small, Small}], 
          CircleBox[{-0.6395572311304545, 1.2438530898634679`}, 
           3.186020899546254], 
          PointBox[{{-1.9096880274005066`, -1.6780464519948632`}, \
{-0.8815296078931272, 4.420672024148099}, {
           2.021305576621805, -0.5084420595523726}}]}}, {}, 
        {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
         PolygonBox[{{1.5204545994090657`, 0.342020143325669}, {
          0.7018558673485775, -0.9010232568338562}, {-1.609322212156945, 
          0.10363087736586285`}}], 
         {RGBColor[0, 0, 1], 
          PointBox[{{1.5204545994090657`, 0.342020143325669}, {
           0.7018558673485775, -0.9010232568338562}, {-1.609322212156945, 
           0.10363087736586285`}}]}}}},
      ImageSize->400,
      PlotLabel->FormBox[
        StyleBox["\"a/b=1.618, \[Theta]=20.00\[Degree]\"", {
          GrayLevel[0], 20}, StripOnInput -> False], TraditionalForm],
      PlotRange->{Automatic, {-3.25, 5}}], 
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], 
        CircleBox[{0, 0}, {1.618033988749895, 1.}]}, 
       {PointSize[Large], FaceForm[None], 
        {GrayLevel[0.5], Dashing[{Small, Small}], 
         LineBox[{{-1.618033988749895, 0}, {1.618033988749895, 0}}], 
         LineBox[{{0, -1}, {0, 1}}]}, 
        {RGBColor[0.5, 0, 0.5], 
         PointBox[{0.9999999999999916, -2.1247595697337106`*^-7}], InsetBox[
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(40\\)]\\)\"\>",
           StripOnInput->False,
           FontSize->20], {0.6699999999999926, -1.8569362102872063`*^-7}], 
         {Thickness[Large], 
          CircleBox[{0, 0}, {0.9999999999999999, 1.618033988749895}]}}, {
         {EdgeForm[{RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], Thickness[Large]}], 
          PolygonBox[{{-2.03224755112299, 7.310926212410287*^-8}, {
           1.6180340603244634`, 2.968595265451315}, {
           1.6180339171753162`, -2.9685957202055504`}}]}, {}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
          Dashing[{Small, Small}], 
          CircleBox[{0.9999999999999916, -2.1247595697337106`*^-7}, 
           3.0322475511229947`], 
          PointBox[{{-2.03224755112299, 7.310926212410287*^-8}, {
           1.6180340603244634`, 2.968595265451315}, {
           1.6180339171753162`, -2.9685957202055504`}}]}}, 
        {RGBColor[0.5, 0, 0.5], PointBox[{0, 1.618033988749895}], 
         PointBox[{0, -1.618033988749895}]}, 
        {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
         PolygonBox[{{
          1.618033988749895, -1.4901161193847656`*^-8}, \
{-1.2882456682569465`, -0.6050603527444359}, {-1.2882455542845195`, 
          0.6050604454326381}}], 
         {RGBColor[0, 0, 1], 
          PointBox[{{
           1.618033988749895, -1.4901161193847656`*^-8}, \
{-1.2882456682569465`, -0.6050603527444359}, {-1.2882455542845195`, 
           0.6050604454326381}}]}}}},
      ImageSize->400,
      PlotLabel->FormBox[
        StyleBox["\"a/b=1.618, \[Theta]=0.00\[Degree]\"", {
          GrayLevel[0], 20}, StripOnInput -> False], TraditionalForm],
      PlotRange->{Automatic, {-3.25, 5}}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> None, "Rows" -> None},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{3}}, "Rows" -> {{0}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.78809471851283*^9, 3.7880948011368427`*^9}, {
   3.7880948522960806`*^9, 3.788094883966323*^9}, {3.7880949186166973`*^9, 
   3.7880949226520977`*^9}, 3.788095045637598*^9, {3.7880950970174685`*^9, 
   3.788095230895999*^9}, {3.788095270013082*^9, 3.788095306864089*^9}, 
   3.7880953442112494`*^9, {3.7880969138082533`*^9, 3.7880969427667227`*^9}, 
   3.788122169258463*^9, 3.788122313508629*^9, 3.7897221638336263`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ons", ",", "exc", ",", 
     RowBox[{"phi", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Sqrt", "@", "5"}]}], ")"}], "/", "2"}]}], ",", "mtx"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ons", "=", 
     RowBox[{"orbitNormals", "[", 
      RowBox[{"phi", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"exc", "=", 
     RowBox[{"excentralTriangle", "[", 
      RowBox[{
       RowBox[{"ons", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"ons", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"mtx", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Append", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"exc", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"exc", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "phi"}], "}"}]}], "}"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"mtx", "//", "MatrixForm"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.788119738608864*^9, 3.7881197840714054`*^9}, {
  3.7881198205356355`*^9, 3.788119870543597*^9}, {3.788119901240597*^9, 
  3.788120004183472*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.6180340603244634`", "2.968595265451315`", "1"},
     {
      RowBox[{"-", "2.03224755112299`"}], "7.310926212410287`*^-8", "1"},
     {"0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox["5"]}], ")"}]}], "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.788119784419417*^9, 3.788119871256682*^9, {3.7881199124592915`*^9, 
   3.788119955163541*^9}, 3.7881200044601364`*^9, 3.7881201177507195`*^9, 
   3.789722163851578*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"frameX40combo", "[", 
    RowBox[{"a_", ",", "tDeg_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"touch", ",", "golden", ",", "combo"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"touch", "=", 
       RowBox[{"plotX40touch", "=", 
        RowBox[{"Show", "[", 
         RowBox[{"plotX40", "[", 
          RowBox[{
           RowBox[{"Sqrt", "@", "2."}], ",", "tDeg", ",", 
           RowBox[{"shortLabel", "\[Rule]", "True"}], ",", 
           RowBox[{"lgt", "\[Rule]", ".25"}]}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"golden", "=", 
       RowBox[{"Show", "[", 
        RowBox[{"plotX40", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Sqrt", "@", "5."}]}], ")"}], "/", "2"}], ",", "tDeg", 
          ",", 
          RowBox[{"shortLabel", "\[Rule]", "True"}], ",", 
          RowBox[{"lgt", "\[Rule]", ".25"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"combo", "=", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Show", "[", 
             RowBox[{"#", ",", 
              RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "4"}], ",", "2.75"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "2.5"}], ",", "4.7"}], "}"}]}], "}"}]}]}], 
             "]"}], "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{"touch", ",", "golden"}], "}"}]}], "}"}], ",", 
         RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "combo"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7880814837543106`*^9, 3.7880815462120094`*^9}, {
  3.7880890260243225`*^9, 3.788089040207408*^9}, {3.788089070241362*^9, 
  3.7880890717143955`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"frameX40single", "[", 
    RowBox[{"a_", ",", "tDeg_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "golden", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"golden", "=", 
       RowBox[{"Show", "[", 
        RowBox[{"plotX40", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Sqrt", "@", "5."}]}], ")"}], "/", "2"}], ",", "tDeg", 
          ",", 
          RowBox[{"shortLabel", "\[Rule]", "True"}], ",", 
          RowBox[{"lgt", "\[Rule]", ".25"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"golden", ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4.5"}], ",", "4.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}]}], "]"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.788093687298132*^9, 3.788093770099537*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"frameX40single", "[", 
  RowBox[{"1.5", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7880937397666273`*^9, 3.7880937798005757`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], Thickness[Large], 
    CircleBox[{0, 0}, {1.618033988749895, 1.}]}, 
   {PointSize[Large], FaceForm[None], 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{-1.618033988749895, 0}, {1.618033988749895, 0}}], 
     LineBox[{{0, -1}, {0, 1}}]}, 
    {RGBColor[0.5, 0, 0.5], 
     PointBox[{0.9999999999999916, -2.1247595697337106`*^-7}], InsetBox[
      StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(40\\)]\\)\"\>",
       StripOnInput->False,
       FontSize->20], {1.2499999999999907`, -2.3276560541628803`*^-7}], 
     {Thickness[Large], 
      CircleBox[{0, 0}, {0.9999999999999999, 1.618033988749895}]}}, {
     {EdgeForm[{RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], Thickness[Large]}], 
      PolygonBox[{{-2.03224755112299, 7.310926212410287*^-8}, {
       1.6180340603244634`, 2.968595265451315}, {
       1.6180339171753162`, -2.9685957202055504`}}]}, {}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
      Dashing[{Small, Small}], 
      CircleBox[{0.9999999999999916, -2.1247595697337106`*^-7}, 
       3.0322475511229947`], 
      PointBox[{{-2.03224755112299, 7.310926212410287*^-8}, {
       1.6180340603244634`, 2.968595265451315}, {
       1.6180339171753162`, -2.9685957202055504`}}]}}, {}, 
    {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
     PolygonBox[{{
      1.618033988749895, -1.4901161193847656`*^-8}, {-1.2882456682569465`, \
-0.6050603527444359}, {-1.2882455542845195`, 0.6050604454326381}}], 
     {RGBColor[0, 0, 1], 
      PointBox[{{
       1.618033988749895, -1.4901161193847656`*^-8}, {-1.2882456682569465`, \
-0.6050603527444359}, {-1.2882455542845195`, 0.6050604454326381}}]}}}},
  ImageSize->Large,
  PlotLabel->FormBox[
    StyleBox["\"a/b=1.618, \[Theta]=0.00\[Degree]\"", {
      GrayLevel[0], 20}, StripOnInput -> False], TraditionalForm],
  PlotRange->{{-4.5, 4.5}, {-5, 5}}]], "Output",
 CellChangeTimes->{{3.788093744555829*^9, 3.788093780149673*^9}, 
   3.789722163909466*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"frameX40combo", "[", 
  RowBox[{"1.5", ",", "27"}], "]"}]], "Input",
 CellChangeTimes->{{3.7880815479802675`*^9, 3.788081552642768*^9}, {
  3.7880816085618787`*^9, 3.7880816650582485`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], 
        CircleBox[{0, 0}, {1.4142135623730951`, 1.}]}, 
       {PointSize[Large], FaceForm[None], 
        {GrayLevel[0.5], Dashing[{Small, Small}], 
         LineBox[{{-1.4142135623730951`, 0}, {1.4142135623730951`, 0}}], 
         LineBox[{{0, -1}, {0, 1}}]}, 
        {RGBColor[0.5, 0, 0.5], 
         PointBox[{-0.5053439332326077, 0.6994676677945822}], InsetBox[
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(40\\)]\\)\"\>",
           StripOnInput->False,
           FontSize->20], {-0.7109147590098097, 0.8417372555119833}], 
         {Thickness[Large], 
          CircleBox[{0, 0}, {0.7071067811865478, 1.0000000000000004`}]}}, {
         {EdgeForm[{RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], Thickness[Large]}], 
          PolygonBox[{{-1.7212924262112006`, -1.6943156111815736`}, \
{-0.8367059869868819, 3.3638490807335217`}, {
           1.9172479811558307`, -0.45801993068002184`}}]}, {}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
          Dashing[{Small, Small}], 
          CircleBox[{-0.5053439332326077, 0.6994676677945822}, 
           2.6849076565652585`], 
          PointBox[{{-1.7212924262112006`, -1.6943156111815736`}, \
{-0.8367059869868819, 3.3638490807335217`}, {
           1.9172479811558307`, -0.45801993068002184`}}]}}, {}, 
        {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
         PolygonBox[{{1.260073510670101, 0.45399049973954664`}, {
          0.612511293471463, -0.901340644642722}, {-1.403522932914925, 
          0.12272607054307116`}}], 
         {RGBColor[0, 0, 1], 
          PointBox[{{1.260073510670101, 0.45399049973954664`}, {
           0.612511293471463, -0.901340644642722}, {-1.403522932914925, 
           0.12272607054307116`}}]}}}},
      ImageSize->Large,
      PlotLabel->FormBox[
        StyleBox["\"a/b=1.414, \[Theta]=27.00\[Degree]\"", {
          GrayLevel[0], 20}, StripOnInput -> False], TraditionalForm],
      PlotRange->{{-4, 2.75}, {-2.5, 4.7}}], 
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], 
        CircleBox[{0, 0}, {1.618033988749895, 1.}]}, 
       {PointSize[Large], FaceForm[None], 
        {GrayLevel[0.5], Dashing[{Small, Small}], 
         LineBox[{{-1.618033988749895, 0}, {1.618033988749895, 0}}], 
         LineBox[{{0, -1}, {0, 1}}]}, 
        {RGBColor[0.5, 0, 0.5], 
         PointBox[{-0.8960828045112593, 0.7182241414226246}], InsetBox[
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(40\\)]\\)\"\>",
           StripOnInput->False,
           FontSize->20], {-1.1351308409152077`, 0.7914090872203537}], 
         {Thickness[Large], 
          CircleBox[{0, 0}, {0.9999999999999999, 1.618033988749895}]}}, {
         {EdgeForm[{RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], Thickness[Large]}], 
          PolygonBox[{{-1.8107458268164156`, -2.227404327475311}, \
{-1.2973928182058085`, 3.776374856162315}, {
           2.029415861226562, -0.2589109965806252}}]}, {}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
          Dashing[{Small, Small}], 
          CircleBox[{-0.8960828045112593, 0.7182241414226246}, 
           3.0843695500303454`], 
          PointBox[{{-1.8107458268164156`, -2.227404327475311}, \
{-1.2973928182058085`, 3.776374856162315}, {
           2.029415861226562, -0.2589109965806252}}]}}, {}, 
        {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
         PolygonBox[{{1.4416788403346845`, 0.4539904997395469}, {
          1.0329576608209012`, -0.7697023333416282}, {-1.6157794550955233`, 
          0.05277134971670361}}], 
         {RGBColor[0, 0, 1], 
          PointBox[{{1.4416788403346845`, 0.4539904997395469}, {
           1.0329576608209012`, -0.7697023333416282}, {-1.6157794550955233`, 
           0.05277134971670361}}]}}}},
      ImageSize->Large,
      PlotLabel->FormBox[
        StyleBox["\"a/b=1.618, \[Theta]=27.00\[Degree]\"", {
          GrayLevel[0], 20}, StripOnInput -> False], TraditionalForm],
      PlotRange->{{-4, 2.75}, {-2.5, 4.7}}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{0}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7880815529442368`*^9, {3.788081596863857*^9, 3.788081665319942*^9}, 
   3.7880887234310293`*^9, {3.788089020558919*^9, 3.7880890430879517`*^9}, 
   3.788089073580408*^9, 3.789722163950158*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotX40touch", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"plotX40", "[", 
     RowBox[{
      RowBox[{"Sqrt", "@", "2."}], ",", "30", ",", 
      RowBox[{"shortLabel", "\[Rule]", "True"}]}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"plotX40golden", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"plotX40", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Sqrt", "@", "5."}]}], ")"}], "/", "2"}], ",", "20", ",", 
      RowBox[{"shortLabel", "\[Rule]", "True"}]}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.788080945163627*^9, 3.788080947674698*^9}, {
   3.788081028699966*^9, 3.788081039572036*^9}, {3.788081104243146*^9, 
   3.7880811367469378`*^9}, {3.788081197530935*^9, 3.788081198699067*^9}, {
   3.788081231574457*^9, 3.7880812538190413`*^9}, 3.7880813885100946`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotX40combo", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Show", "[", 
        RowBox[{"#", ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "4"}], ",", "2.75"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2.25"}], ",", "4.7"}], "}"}]}], "}"}]}]}], "]"}], 
       "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"plotX40touch", ",", "plotX40golden"}], "}"}]}], "}"}], ",", 
    RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.788081202497704*^9, 3.788081363964167*^9}, {
  3.7880814012039723`*^9, 3.7880814014527617`*^9}, {3.788081449420925*^9, 
  3.7880814540026703`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], 
        CircleBox[{0, 0}, {1.4142135623730951`, 1.}]}, 
       {PointSize[Large], FaceForm[None], 
        {GrayLevel[0.5], Dashing[{Small, Small}], 
         LineBox[{{-1.4142135623730951`, 0}, {1.4142135623730951`, 0}}], 
         LineBox[{{0, -1}, {0, 1}}]}, 
        {RGBColor[0.5, 0, 0.5], 
         PointBox[{-0.581010985731587, 0.5699583045437812}], InsetBox[
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(40\\)]\\)\"\>",
           StripOnInput->False,
           FontSize->20], {-0.6707926825333503, 0.6139951858978946}], 
         {Thickness[Large], 
          CircleBox[{0, 0}, {0.7071067811865478, 1.0000000000000004`}]}}, {
         {EdgeForm[{RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], Thickness[Large]}], 
          PolygonBox[{{-1.6730326074756148`, -1.8660254037844402`}, \
{-0.9867378622093053, 3.2085021361487454`}, {
           1.9230780595329433`, -0.3552799906986606}}]}, {}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
          Dashing[{Small, Small}], 
          CircleBox[{-0.581010985731587, 0.5699583045437812}, 
           2.669555740118001], 
          PointBox[{{-1.6730326074756148`, -1.8660254037844402`}, \
{-0.9867378622093053, 3.2085021361487454`}, {
           1.9230780595329433`, -0.3552799906986606}}]}}, {}, 
        {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
         PolygonBox[{{1.2247448713915892`, 0.5000000000000001}, {
          0.722342248889109, -0.8597155562945874}, {-1.407790846499081, 
          0.09519698659464249}}], 
         {RGBColor[0, 0, 1], 
          PointBox[{{1.2247448713915892`, 0.5000000000000001}, {
           0.722342248889109, -0.8597155562945874}, {-1.407790846499081, 
           0.09519698659464249}}]}}}},
      ImageSize->Large,
      PlotLabel->FormBox[
        StyleBox["\"a/b=1.414, \[Theta]=30.00\[Degree]\"", {
          GrayLevel[0], 20}, StripOnInput -> False], TraditionalForm],
      PlotRange->{{-4, 2.75}, {-2.25, 4.7}}], 
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], 
        CircleBox[{0, 0}, {1.618033988749895, 1.}]}, 
       {PointSize[Large], FaceForm[None], 
        {GrayLevel[0.5], Dashing[{Small, Small}], 
         LineBox[{{-1.618033988749895, 0}, {1.618033988749895, 0}}], 
         LineBox[{{0, -1}, {0, 1}}]}, 
        {RGBColor[0.5, 0, 0.5], 
         PointBox[{-0.6395572311304545, 1.2438530898634679`}], InsetBox[
          StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(40\\)]\\)\"\>",
           StripOnInput->False,
           FontSize->20], {-0.7198310183392952, 1.3034862944323133`}], 
         {Thickness[Large], 
          CircleBox[{0, 0}, {0.9999999999999999, 1.618033988749895}]}}, {
         {EdgeForm[{RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], Thickness[Large]}], 
          PolygonBox[{{-1.9096880274005066`, -1.6780464519948632`}, \
{-0.8815296078931272, 4.420672024148099}, {
           2.021305576621805, -0.5084420595523726}}]}, {}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
          Dashing[{Small, Small}], 
          CircleBox[{-0.6395572311304545, 1.2438530898634679`}, 
           3.186020899546254], 
          PointBox[{{-1.9096880274005066`, -1.6780464519948632`}, \
{-0.8815296078931272, 4.420672024148099}, {
           2.021305576621805, -0.5084420595523726}}]}}, {}, 
        {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
         PolygonBox[{{1.5204545994090657`, 0.342020143325669}, {
          0.7018558673485775, -0.9010232568338562}, {-1.609322212156945, 
          0.10363087736586285`}}], 
         {RGBColor[0, 0, 1], 
          PointBox[{{1.5204545994090657`, 0.342020143325669}, {
           0.7018558673485775, -0.9010232568338562}, {-1.609322212156945, 
           0.10363087736586285`}}]}}}},
      ImageSize->Large,
      PlotLabel->FormBox[
        StyleBox["\"a/b=1.618, \[Theta]=20.00\[Degree]\"", {
          GrayLevel[0], 20}, StripOnInput -> False], TraditionalForm],
      PlotRange->{{-4, 2.75}, {-2.25, 4.7}}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{0}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.78808122168209*^9, {3.788081256897098*^9, 3.788081402099835*^9}, 
   3.788081454340234*^9, 3.7897221640016003`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"export3", "[", 
  RowBox[{"\"\<0070_x40\>\"", ",", "plotX40combo"}], "]"}]], "Input",
 CellChangeTimes->{{3.788081439291215*^9, 3.788081469306563*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"orthicLociPlot", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "orts", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"orts", "=", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"showOrt", "[", 
         RowBox[{"1.3", ",", 
          RowBox[{"-", "7"}], ",", 
          RowBox[{"drP1", "\[Rule]", "False"}], ",", 
          RowBox[{"p1Dist", "->", ".25"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"showOrt", "[", 
         RowBox[{"1.352", ",", 
          RowBox[{"-", "17.1"}], ",", 
          RowBox[{"drP1", "\[Rule]", "False"}], ",", 
          RowBox[{"p1Dist", "->", ".25"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"showOrt", "[", 
         RowBox[{"1.51", ",", 
          RowBox[{
           RowBox[{"-", "9.0"}], "+", "4.5"}], ",", 
          RowBox[{"drP1", "\[Rule]", "False"}], ",", 
          RowBox[{"p1Dist", "->", ".25"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"showOrt", "[", 
         RowBox[{"1.51", ",", 
          RowBox[{
           RowBox[{"-", "9.0"}], "+", "1.5"}], ",", 
          RowBox[{"drP1", "\[Rule]", "False"}], ",", 
          RowBox[{"p1Dist", "->", ".25"}], ",", 
          RowBox[{"drAlts", "\[Rule]", "True"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Grid", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Show", "[", 
                  RowBox[{"#1", ",", 
                   RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.6"}], ",", "1.6"}], "}"}], ",", "#3"}], 
                    "}"}]}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], "}"}], 
                ",", 
                RowBox[{"{", "#2", "}"}]}], "}"}], ",", 
              RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"orts", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", 
                  RowBox[{"Black", ",", "24"}], "}"}]}], "]"}], "&"}], "/@", 
              RowBox[{"{", 
               RowBox[{
               "\"\<(a)\>\"", ",", "\"\<(b)\>\"", ",", "\"\<(c)\>\"", ",", 
                "\"\<(d)\>\""}], "}"}]}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1.1"}], ",", "1.2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1.1"}], ",", "1.2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1.6"}], ",", "1.6"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1.6"}], ",", "1.6"}], "}"}]}], "}"}]}], 
            "}"}]}], "]"}], ",", "2"}], "]"}], ",", 
       RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7752410374765253`*^9, 3.7752410513723693`*^9}, {
   3.775241116988845*^9, 3.7752411193974023`*^9}, {3.7752411511813664`*^9, 
   3.775241198501894*^9}, {3.7752412399498367`*^9, 3.775241254636554*^9}, {
   3.7752412884858427`*^9, 3.7752413356704025`*^9}, {3.7752420615968323`*^9, 
   3.7752421039658465`*^9}, {3.7752421917668076`*^9, 
   3.7752421960702963`*^9}, {3.775242790588937*^9, 3.7752428585653353`*^9}, {
   3.7862670142728996`*^9, 3.786267016160879*^9}, {3.7872459309434853`*^9, 
   3.7872459790399814`*^9}, {3.7872460527681074`*^9, 3.787246074072669*^9}, {
   3.7872461103360443`*^9, 3.7872461318255095`*^9}, {3.7872978559109917`*^9, 
   3.7872978878307543`*^9}, 3.7872979238159943`*^9, 3.787593221827982*^9, {
   3.787669882724012*^9, 3.7876699910178475`*^9}, {3.7876700335311804`*^9, 
   3.787670037057797*^9}, {3.7876701204196653`*^9, 3.7876701595311565`*^9}, {
   3.787670202068405*^9, 3.787670348026066*^9}, {3.7876704110424075`*^9, 
   3.787670411730564*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         GraphicsBox[{
           {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.3, 1.}]}, {
            {RGBColor[0, 0, 1], Thickness[Large]}, 
            {PointSize[Large], FaceForm[None], 
             {GrayLevel[0.5], Dashing[{Small, Small}], 
              LineBox[{{-1.3, 0}, {1.3, 0}}], LineBox[{{0, -1}, {0, 1}}], 
              PointBox[{0, 0}]}, 
             {RGBColor[1, 0.5, 0], Thickness[Large], LineBox[CompressedData["
1:eJwt2nVY1ecbBnBbJ9ZUZvcMFEWxZ9wyi6EOczZzttgdoFjYxUwcU6YYiO0E
Cx9FEAuVVkLgnEMdZqDM9sfPfZ/7H728uJDDN97nvj/v22D87MGTihUpUuTx
1z/++9s54dG2gcctMgjRU04NqRR6dn9oQ79DFrGptmh4ypvDsrt/k6C1PhZp
HnuhpuPzC1Luzm8ray20yMANfb61jw2Vc+WbuS0fYJHFy/N9j8fckndOtg1i
aloE1TtE7z99R4Y6N53eP9Usp5aWqt5vWZR89r3c2m63WZr94z55RI1omVEk
w+HMj2a5mfS+7xz3WBk1aeTQVlkmedXOrlaZM/HytP6ysoVeJvn3bGX7qMxE
uZKduGZVJZOc/WnJ5ZXlk6TPi7Gvau/LEF9v//4fvk+RjPzLp7tXy5AFy9/H
N2rxTIq/er9o5LZ0WX//bp/VFdOl1S6XEnc/pUnvYlH3kwvT5ciwThMuPngm
s77EBXfKypCVAYPmzt+RKneWrFuPMJM0u+S9u5hzisTvbPvl0E6zHGjT+K+J
BUnSYFf1jw1GWeTLwa79/PY8lbo7835eb5spkb7LbwQ5PBGH9+Y5gRGZ8urp
JJedNxKk6fp1td3ds2RGZkTFgS7x4lLLL/ti8WwpXN7tVVJUrKy+GR6+xidb
7Pdd92jaP0Zup1fziKuSI3MrnyjV6PZjqZnWvur5TTmyLabfxSlLH0rqxRo9
Hd7mSLHWd0vP/e2+DL6TFDH5l1wZOmL+ggp97kjpP9zDlwXlisfkb+8lNYuQ
jMmtW+36N1dan7gw180mTPYO71jd1M4qNz4f/7vOs1DxKLWwju80q8you6eR
34kQuX5gedjrnVYp8HCrGL/inJRsez/V/m+rLDx2IMnjylExF99ecuM9q3iE
d127s/5uOe6fULx/olUOby65L/XuFDSZHTAoNMkqcQmzi81/vB8V78z3bRJv
lZYjomvFtgpE1eueTrG3rZLcpVpFr8nnUbd03peKZ62yaOOqK/fqXULanLrT
m/tY5e3tD74pN0MR9Sj/zBx3qyRccS154chNrHF92bRNV6u4RFRs7zc2HK6T
+theKWWVfs5lkxuUiUSpOs6jRt7LlcSxmTvuBdzFT5YGP4xZnyuNGtaNbd72
Aeyqetev2D1XlhUk9LWcf4g3xUyzQ1/kSFDYx9UxPo9RreGTYed8c8R/4ctZ
O8Oike669Ehb5MjAk0sG782LQUTc5+DNaV/vX+zwsIhycbjUZ0X/wmXZUmNu
+6Y2TeIxe9Ukj5hvs2XH3jLuIzomIDjlu/19A7Lkqd3Qw4d6JCJz19Y2Bx2z
pMo/M6NMTk/Q757362qhmbK8ytultl2eou/stFMvemZKy0r7N/1gn4Tm97Jd
3SItMtbs+HyobTKe3+zy7GBfi7i37TPa/W0yfjR9WGwNN8uQhbm11zxKwYZ7
hcPnwywlHxY+DPRPxYQ1b57MDDFJzMEI+7xpz+CXl7rMpqVJAkvuSxnWIg1b
ytS3evhnyCA/Ez5a0nBrqU/p599myKG55Rst7JeOzL378zetSpf80sP/8vNP
h9NFp9pF0tLk51Ym05f8dNws0qO5NeSZlIhMvXoYGfjYyq9jw22psjzSz8N3
YwaOZw/v8ea3FFkfmZxifZSB8/ui7I60TZZj7xzfHa5sQvyUzCTP4kmy7FJA
m+hBJly6tmPotegn0hydO3htNeHw0Mn3Dh1IlMjCvVlXIkzYuKTb1RnuCbKl
YPsgn48m1Gke9M3Q9vFy2WVlYEV7M9YXd666ozBWMpbs7NJzlBnFSwRGDbsb
I49dZEpnbzOGXn8fm/h7tDz74OlbeNKMwvYNNvQZ81j+/GTvdDjajBoXXjv7
93soq8JrPmzzxgzLyYQjTmn3JcfVNvDStxb4tP7OO2L+XWkW5+PQu6UFI/rY
L/X8JlIO7P/5jKW3BY/anJl7wT9czqyZMT5gtAUpvz01XegcJp1d3k73mWVB
61C/xPWBIkMaRsVdWmHBuKaO7/pbrsiN6Ncbmm6xIHlVRG6H74Pl+jO7YdY9
FoxsEukv085JdJ7FUv6gBfbLur0Pdg+U93dW3DgQYEH8qTJV31Twl7ptL/YL
PGZBq9LfNapbYrN0+mtceOfjFrS5UqOnzev58DFPcBpz1IJyhRu9BozZixXB
D8/VPmRBnrv/4FdRAah2q1XKuj8ssLaoNuFFyinEJ5d1O/q7BSHpTge6zryA
8r+vDVq33oJf65R1f28KQadNtSu2XWbBdz/e6uDmeg1Xu+wJDHa3wOabDzsq
j7yBhmXez6090oJF99ZFrfEOQ1JsQPvZX6/PjPlxf2acDMfo1Vv2XXawIPDA
3wPLPboNm+dzbEtVt+DVtuSAzLw7qFun2//c/mdGxrstIQOL34ezzPB8aDLj
5anvCtrYRqHJ61U+bhFm7K9ZqcTsBo8w5tL6ajWOmpHq1GLcu52PMcnz4M3S
X+/3hla/+vTfFY2SHfbVbjfejKM2nf2CfGJgm7F1+7FuZjxa77Hpmy2xaFdl
x5jp1cz4FJpjGr0mDm77fv5rw0sTznQYd3jf4nh0r35/eJnbJmz4o3eX4KkJ
yEupMPzNfhOamuzXBf2SiHm55iGDZ5kwJvbO7dlf32unQzsyWvYwIT2v+qGP
zZ7i3ujd87ZV+vq8X4yt2at8EvzaTR/pmZaBYbFlt/Z6kYTLZ3reLTyZAVQs
daLgfjI++dxJqL80A9lZgxcMOJqCf35PXpLdMwPdvyvV1Xl5KmI9h20cXT4D
vR7Z//Fs4DP4TwiPWBufjiYjp88r2yANfoebPXb3+/rvgtuZEc/TUHrCWQfb
8enYuujBSe/R6Rg7cu6gzU3S0XVxXIj79XR4ujpVDoxNw9UhHVZvr5eBhs18
Gr0anobwVe335K/IQI8i72t/fPoMs/an79uWkoG1/1b4Ln7kM3T6aHae2MmE
LwfwYVtiKuLOT18+53cTzn6s5d1+SCpOVara+JzVBJuS5wYkPEiBR2F2r++d
zIhKiQ1d0SsF8w7OeBe52ww3t2nVu15JxrWpl6fvzzHDt+nxpbVaJSMEfhbf
zhac+zT0iZ1/Eqpa7oSEb7Dgy5oPpRZUSkJbhyoDaiRYcGu27cVSXk9h73uh
zp4GmWj+4ac5L/KeoIj37gudp2eic5LXkY7Dn2Bi8unjxS5kYqmUPvTiRiK6
rBh39OX7TPRwubirnl0iTjZLm1jYNQuewQXbErYnIHpIwInWXlko1iXZu96/
8bC7mtVvtWQhv5vjkFIj41G2cc3mb75kodqS5cF7rsZhW9VFbVf/kI3b338e
llI7Dg0rrxnfamE2Do05IibPWBzsdDr07alsFLtWz/1icgyuh5p+SbJk483C
vy/+2jkGu+zt+j2pkYPFb7s9/2d3NKZW6B/2sn8OsjtW7js1/zFOh616UW9F
Doq8zMlM6fcYjX6qVW7qqRx0mOJxIcjlEf4N7/hbZFIOOu8e43TtUxTWr/bs
1q1ULn6ec8K1aNADbPg5+sMdh1x0W+m0b8eI+5j7T/3304bn4ua7/sFeJe5h
w6o6h+stz4XNyOymltN30P9umVm5/rlwNP3tGjs8Eg55XnG3w3LhUWnJovGF
ERgV5TIqxJSLHpv8Hxw9Eo5ZYa02Xylixf3rcdMvutxCnTnhHx/VtqLZlkUj
Dr+4iYCYgb3edbDi7g+N1nj73MDMHn+Vbe1qxczubrsyJl/HqyHWd0snWRH/
2w9v3xy/ivJHAkPjllpx+2Hj49NzL2FQl01Ve2yxYuUIn7LzmgXj1ZF+1676
WeE2+cXE1pMvwHIsyKNvkBV55dbmPDp0FolTBtc3h1jxfvyKyW+uBWFz1Zsr
toVZERf0OeCU41EUFPw476f7VvQaeWFz/WP+aBSXnlIlxopj/fxLd22/Bwj/
5djzBCtubiy3L639OgxyKHcz4akVg5c9WfJPUkTXFIcK9R8lWTF5vfF1cebX
XV2M75e+/P4/Rhj/v9Ti/39If778jz9/i34+WcPPd0o/v1zi57fV30+S+Pv9
qL+/vObvP02vj7Tn9Vmj108+BOj1K6/XVxJ5fQP1+ss8Xv+Sen/kEO9PgN4/
seH9a6L3V37l/R2i918G8P4X1edDbPl8JI0wnh+x4/NzQJ8v8eTzVUmfP3Hl
81dHn0+Zzefz313G8ytT+fwW0edbEvh857wwnn+x4fMfoe+HLOL7MV3fH3Hj
+xOr75cs4vuVddV4/ySI7982fT9lM9/PQH1/5d23+v4W1/db1vL9TtT3X15+
r+9/8g/G+iDvruj6MFjXD/Hn+lFT1xdZxfVltK4/UpPrTzldn6Qt1ycbXb8k
aa2uX766volln65vSbr+SQWuf9t1fZTnZl0fF+j6KVu5frbQ9VXWcn09oOuv
tOP6+7iEsT5LT67P83X9luVcv6/q+i6Lub7/pOu/vPig6//nwnf/zQdpwPnw
vKkxP2Q750dTnS8ygfOlq84fKVik8+fZeGM+SQ/Op/k6v2TBG51fq3W+ydMR
Ot9O6/yTAw91/j3S+ShZtjof43R+ylDOz606X+V8BZ2vC3T+ytUYnb++Op+l
PedzOZ3f0ozzu6fOd7kfo/P9os5/2ZCh8/8bzQcSul/zQWfND+LE/PC5spEv
pDvzRXq6kT/EjvnjcXsjn0hF5pPWml/E3FLzS3PNNzKM+SY738g/sqCG5h8b
zUdy4KTmo8TaRn6SpW81Pz34x8hXcmKr5it7zV9y9k/NX16az2TxXM1nltJG
fpP1dzW/LdJ8J8GlNd+93GjkP3GE5r/7PkY+FMdamg+3aX6UnamaH8PCjHwp
/o01X/bR/CneUzR/jtV8Kj3faT5N9TfyqwzfoPn1saORb6VXPc23gZp/ZdEF
zb/TNR+LdaXm4980P8tgO83PQzVfy7m1mq+LaP6Wq3aavx/+ZORzaX1D8/lA
ze9Sb4Lm996a77/mbM33IbFG/pfovpr/52g/kNdttB8U1f4gs05rf7DTfiFb
/9Z+4aL9Q5I6aP9YpP1EwthPRmh/kVvsL92030j1Etpv7LX/yDH2n9Haj6SQ
/ejv7kZ/ks7DtD/V1H4ltqHarxpq/5IZU7V/Zd02+pkM8tV+lnXb6G/ikKP9
zfu20e9khoP2O3NLo/9J1aLa/3ZrP5St7IcttD9KnX3aH/v+YfRL+cR+ObeE
0T/lOvvnjgNGP5U49tOCB0Z/lY3srwsWGP1WTrHfVnQ0+q/MY/8dbzL6sZQO
0378pYLRn6UX+3Otyka/lhns1w+tRv+Wqezf85oZ/VwK2M8n7zH6u0SwvyfM
Nvq9eLHfz4ox+r9Esv//e8LwAblDH1i0wPADyaAf/HDT8AUpQ18Ynm/4gzyl
PwyqZ/iE2NAnTKMMv5C29IuzvQ3fkOe11Tciwwz/kJb0j/GXDB+RYfSR4JuG
n8gB+knTtYavyDn6SvX2hr/Ik1LqL9Guhs9IWqj6TEiY4TcSEal+E/y6xH++
I2mz1HfOJRn+g1H0n7HnDR/CEvrQH6sNP8J6R/Wj3EaGL2EMfSm/aOB//oQy
9KfzJw2fggN9auY0w68wlH717WjDt7B4v/pWlbaGfyEoUv2reLzhY3Cmj22u
YvgZ1j5TP+vta/gaHOlr47wMf8PFG+pvY7MMn8PFmupze5IMv8O5dep3IfsN
34PnO/W9Rn8Z/gf8rv630tHwQUzcqT6YoX6IpvTDcUcMX8T7xeqLm34x/BHb
Pqs/flGfxPCi6pOr1C/hfk/9suVrwzdR0lN9c7f6JzLXqH9+UR9FHWf10eYN
DD9F6mn106Pqq7jkqL4arf6K3Ynqr3b7DZ+Fm1V91lv9FhsXqt/a/mj4LorY
qu8+Vv/FzSXqv3bqwzi/XH34sPoxDt9XP/5bfRmNbNSX6c+gP3ejP4P+DPoz
6M+gP4P+DPoz6M+gP4P+DPoz6M+gP4P+DPoz6M+gP4P+DPoz6M/Yw+s7ysW4
vqA/g/4M+jPoz6A/g/4M+jPoz6A/g/4M+jPoz6A/g/4M+jPoz6A/g/4M+jPo
z6A/g/6M3erP6KL+DPoz6M+gP4P+DPoz6M+gP4P+DPoz6M+Yo/6MSurPGKP+
jGf6/oL+DPoz6M+gP4P+DPoz6M+gP4P+DPoz6M+gP2PMUcOfpb36M+jPQn8G
/Vnoz3BVfxZb9Wf0U3+WbF0fQX8W+jNeqz/LXF1fQX8W+jO6qz9LefVn/Kn+
LIN0/UZ2A13f6c9wUn+WfF3/QX8W+jO2qz+LWecH2qg/ywOdLygep/PnvM4f
tFR/llk6n3Bc/VlO6/wC/Vnoz6A/C/0Z9GehP6O5+rM01vkJ+rPQn0F/Fvoz
6M/ipfMZ9GehP4P+LPRnnFB/Fl+d/xit/iyRmg9Afxb6M+jPQn8G/Vnozyiq
/ixFNJ9gqfqzXFZ/xir1Zzmr/gz6s9CfsZj5KEr9GU3Un+W8+jPuMV+5a77C
Duav6pq/EMx8Nk39GfRnoT+D/iz0Z9Cfhf6Mg8yHNdWfsZr5kf4M+rPQn0F/
Fvoz6M9Cfwb9WXLUn9FR/Vnyrhn5FvRnoT+D/iz0ZwjzM/0Zj5mvU9Sf8YH5
++BpI3+jvvqzBH5j5HN0Vn8Wh1Ajv8tO5vv8L0a+Fy/m/4rTjfwv36k/i0NL
ox/IU/aHLerPUkH9Wa6qP0tH9Wdpqf4s9GdxUH+WuurP8lj9WZ6y3/RSf5Yx
7D871J+lrPqzBKs/C/1ZstWfpTf7VevTRr8S+rMcVH8W+rMkaz+TqexvS9Wf
hf4s9GehP8td7X/SXv1ZUrQfCv1ZErQ/Sk/2y1nqz2Jl/2ys/izz2U9/UX8W
+rN80v4qd9hvC7Tfii/77xj1Z6E/S2/1Z6E/S4r2Z8lmvx6h/ixx7N9t1Z/F
j/28l/qzHGR/r67+LCXUn2Wv9nsZx/7fWv1ZltIHrqsPSD31Z7mlfiC91Z9l
svqCrKM/tFZ/lhIH1SeuqE/IOfrFFfULqaj+LN7qGxJN/5iv/iFj6SOX1Efk
MP0kSP1EztNXbNSfxWat+ksd9Re5TJ9prP4sLeg3xdSfpTV9Z6r6jiyn/3RU
//na79SHzqgPyRz6UbL6kRRVfxb6s+TSn+jPUo8+tVt9SsLpVy3Un2Uvfeuk
+pbQn+WB+pfk0scC1cfEk342Rf1MLPS14+prUkH9WezU36Q7fS5ffU5aqD/L
DvU7GU3f81Tfk170v2nqf5JAH9ytPihV1J/lF/VDcaEv1ldflPH0R3f1R+lN
n5ypPimh9Es79UspRd8MUt+UcPrnVPVPAX205FDDR+Up/bSK+rMcp6+OUV+V
/fTXAvVXGUCfLVCflVD67X31W/l2gvrudvVduUL//aj+K9PVn6Wd+rCsUH+W
XurHMm2z+vKP6stSfu03m21e3L2Wof4s0zaoT/fj1+N/Ur925vefUH8G/VmK
0r9f8Oe70cd9+PnO0c+D+fnb0dfN/P060d/pz7KFPt+H1+c6/b4Mr18N+j79
Wa7S/914/T9v1v0BP96f89w/KM/7V5r7C0N4f525/9CD978C9ycq8fmIUn9G
az4/9Gcs4vNVnPsfg/j80Z+xhM9nivozJvL5/TBZ91ei+Xy/UX+GLZ//G9yf
Wcb3Yzz3b0bx/bnL/Z0tfL+s6s/YyfdvJfeHZvH9PM39owL1Z/l3se4vTeH7
ncT9J4v6s6SqPyNN/VmGc/8qkOtHPe5vzeH6MoL7XzW4/lTh/lhHrk//e6/7
Z/Hqz7KP+2tZ6s+SwP23z610/fPi/ly6+rMs5v7dRq6fTbm/58319U/u/3Xk
+hut/owOXJ9ncP9wPtfv69xfXMb1fQD3H0ty/S/G/UkHzod/1J+xm/PDmfub
GzlfenD/swjnD/0Z3Tif6M+gP8sK7q8GqD/Lde6/ivqzxHJ/tijnYzz3b504
P3dyfzdF/Vnmc//3uvqzHOL+sCvncxXuHw/j/O7F/eV76s9yjfvPJ9WfpTT3
p6+qPwv9GeOZH4pzf3sc80WG+jMaMH88VH9GceYTe+6fh6s/S0Pur7sw3+Tl
c/9d/VnKcH8+QP1ZstSfEar+LPRn0J+lCff/3dWf5RDPB1Sep/ksWf0Z9urP
Mp/nC9aoP8sL9We0VX+WUPVnDK2p+XAtzy9MVH+WW+rPeKP+LB14/mHPJM2f
fXk+YvYbzacF6s+w7tH8mqD+jJBamm+P8/zFNvVnLOT5jK1emo89eH6jYjPN
z8483zHaW/N1SZ7/8FN/RrT6M8reYD7n+ZGc8Zrfm/F8ib/6M66pP+OI+jNm
8nxKM0ftB7Y8v1JJ/RnVeb4lT/0ZfXn+5aX6M1byfEww+8lInp95yP7iyvM1
+ew3zXn+JpD9ZyLP5ySzH11Rf4ad+jM+h+j5nj7qz6A/g/6MF+rPGKX+jFfq
z6il/gz6M+jPeK7+jDLqz5jH80nB7If0Z9CfsVz9GXnsl/Rn0J9Bfwb9GbfU
n3GQ/fW0+jP+Yr992kbPX3mx/9KfQX8G/Rn0ZzioP2M++zX9GfRnLFN/xif2
c/oz6M/4fo6eL1vMfr9X/RnC/k9/Bv0Z9urPyKQf0J9Bfwb9GfRnJKg/ozR9
4oT6M9rQLx6qPyNL/Rn0Z9Cf8TFEz+cNpo8E3tLze4foJ7Jaz/fRn0F/Bv0Z
9GfQn0F/Bv0Zy9IMf0aq+jPoz0J/xoSLej5xOn3Ia42eX1yp/gz6s9CfQX8W
+jPoz0J/Bv1Z6M9Yr/4ss9SfQX8W+jPoz0J/Bv1Z6M+gPwv9GRXUnyVG/Rn0
Z6E/g/4s9GfQn4X+DPqz0J9Bfxb6Mxpc1vOrxeiH9GehP4P+LPRn0J+F/gxP
np+dq/6M0erP4uKhvkl/Fvoz6M9Cfwb9WejPoD8L/RlHeP43+Yn6K/1Z6M+g
Pwv9GfRnoT+D/iz0Z9Cfhf4M+rPQn0F/Fvoz/g9QHZnC
               "]]}, 
             {RGBColor[1, 0.5, 0], 
              PointBox[{-0.5173766444854807, 0.5018931753714473}], InsetBox[
               StyleBox[
                SubscriptBox["\<\"X\"\>", "4"],
                StripOnInput->False,
                
                FontSize->
                 20], {-0.5173766444854807, 0.5018931753714473}, \
{1.25, -1.25}]}, {}, {}, 
             {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
              PolygonBox[{{
               1.2903099971337186`, -0.12186934340514771`}, \
{-1.0854162434723003`, -0.5503476998889569}, {-0.5877292092052995, 
               0.8919675666904934}}], 
              PointBox[{{
               1.2903099971337186`, -0.12186934340514771`}, \
{-1.0854162434723003`, -0.5503476998889569}, {-0.5877292092052995, 
               0.8919675666904934}}]}}}},
          ImageSize->400,
          PlotLabel->FormBox[
            StyleBox["\"a/b=1.300\"", 20, StripOnInput -> False], 
            TraditionalForm],
          PlotRange->{{-1.6, 1.6}, {-1.1, 1.2}}]},
        {
         StyleBox["\<\"(a)\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->24,
          FontColor->GrayLevel[0]]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         GraphicsBox[{
           {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.352, 1.}]}, {
            {RGBColor[0, 0, 1], Thickness[Large]}, 
            {PointSize[Large], FaceForm[None], 
             {GrayLevel[0.5], Dashing[{Small, Small}], 
              LineBox[{{-1.352, 0}, {1.352, 0}}], LineBox[{{0, -1}, {0, 1}}], 
              PointBox[{0, 0}]}, 
             {RGBColor[1, 0.5, 0], Thickness[Large], LineBox[CompressedData["
1:eJxV2nVclvf3BnAsdGLnxBYL3OyOXeYQp3MGYMzAmrlZqBjoVECdiEyxC3Um
YGBhHbEQsRCQVB7yAREerNn683efa398/9n+4CVxP/fnnHO9z6f+uD8GTyxq
ZWX14Ot//v//tX6rPGDlQbNE3/v5XmhahUsfqif2OLHbLB3KooTZ6ohEb2rv
0HOVWTzL5nk4/Rsmv21qbu3sZpY+9TZkLZ52TY77vZ9Vs5lZJHnZrMp3IiXP
JrBSUla2bFud7P3M5oG8Dip7x+yfLY87ekW8bBgjn9u+uh7UIlsa2pfzvNH8
kfhVuNItULLE13WmuWGTRLG+srN7/55ZcizE0vRfmxTJ2N2nVc9zmXJgWMCf
PZKfSHaDgF52DTJl9JOfPmyLNMmNqDamrcsyZMe2F+er1kgXn/Aln4fFpktm
B7/2g0dmSEil8wtt66TL3kV1px30yxTvt73+2Dk6TZY9fzl6+eksafbk9qb9
m0zS9m5sw0l3smV43WELc31T5XyRX/flxZhl4fYJPgdMj8XbdX2j8Kgcsb7u
5fFNkxQp1mfm+cOhuTK3+5Tem8clyc8j/5qy+K+nss1r5aB7GxPku1mletkN
yZPlwasnNJRHknhx1aBtpZ+Jb8JgKZ4RKyFHe8wtOPFMPj6N87pXJEamfJzR
pKtTvtg3W+4WUytarswwdQ95kC9bX4VfD5p6T1pOqXpgcd8CCX6S077a1tvy
wGOfVd7xAul3qm2BfcRNKStu7o6lLZJzYtTSsm+uypk6ZcflDrVILVNlt9XO
l8Xa8Z+GLf0tcs7PYeW4W2ckxv17y59ikQmjRlfrvzFEphx8fbifySKD5zV/
0GPB7q+/X8Xs9y8tMrfv3A+rMsZKm7XN06w/WGT51p4dnqduQ80ba7dnvbbI
pWtWdovCjuJggo9VhSyLrBt7rVhO5ilUSgmvbxVpkZY5n1+537sAS9C1lS33
WuSxncP8Oz+Fo2fpQ8trzrLI5UP3lozcfR2VW3YM69zeIqt7bi9skxaBAy/O
r7V+USANj/jYhVWIwuO728Je7y+QOqX2zpzw/T00Tn/xavHAAtkZ62p22/4A
mYtKbC/3Il8m9djQvmu1hzi/dPNUW998mTO7aJCtTwyqF3PoX7Z+vgSnR1VK
zY/FDP+yDQeFPJNqlfLiZ/d7hFujfgnp3+6ZdPLrP+Pmjnhsq+s/fvyZPDEV
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
xd0CDPE423nXqwi8z90TOLCwANYJiaOdFt1ERli74C0VLNiSca3jHasb+KH1
pVV3m1uwwmtxbmeva+hwP/NTfj8LtiYnLDlc6ipGFHNPejfBgtxZJQqb/XUF
7Y91LSxcbEFcxyqDg2pcxsLfP1eJ+duC6Cv+xRfUvICyh8c02HPAgiehhb7p
Nc/hgHPia9dzFpSs1nZa5ZqngVFHZr6PsKDX58SirWucROiGqPk+cRZsDps7
MOq7EFRsn/Xys8kCm6ZXOhxtdAhzsvtEj31qwd5p5xsPrr0X62yTvwQ9t6BD
0vSUWk23oNkrhzkZ/1rg3wbdwpquQsLSgQ2Kv7eg0dhRJUY03NI1ZdDLkuU/
WOCgX5dj/Po3+u+lJ//9av3+sorf30l/vnjw5x/W30+s+ft11d9f7vP3L6d/
n7Tj35emf7+s599/XZ+P/Pd8EvT5yWQ+vzR9vtKGz9dPn7/8xOe/QD8fsePn
46+fn3Ti51deP195xM93sH7+8pKff7C+H7KM78cYfX8kge8P3y+Zw/drs75/
Mp/v33N9P2UC388n+v7Km0R9fyP1/RYrvt8P9P2XYL7/aXo+ZBrPR1k9P/K+
qZ6fSXq+RHi+MvX8SSDPX2k9n9Ke5zNNz6948Pz21/MtH47q+Z6k51928vx/
Km3UB/k4WuvDvx+N+iENWD/aaX2R3DJaX5pq/RF71p/8AqM+SX3Wp0itX3LV
Q+tXgNY3mcz6tlDrn7Ri/bPV+iierI+2Wj+lC+vnhw1GfZV9rK+rtf6K6U+t
v+u1PosX6/MFrd9SkvX7mNZ3+ZoGjfqerfX/a07U+u+l/UGGsT900P4hZdg/
jmh/kXbsL321/8izRtp/vtX+JBvYn6D9S6591P41VvubfDmh/W2O9j/ZxP73
h/ZHsThqf3TR/ild2T+LaX+VnKraX921/8rDgdp//9T+LPfZn2O1f4sL+/cm
7e+ygv39bXmj/8uHCO3/q3U+kN6cD+x1fpBynB+66HwhxThftND5Q4Lsdf7I
1flEXDifeOv8Im6cX6x0vpHmnG/etjbmH+nJ+SdI5yOJKK7zUW2dn8R3vc5P
BSZjvhIbzleuOn/JEs5f23Q+kxd/63zmqfObOD7V+e2GzndS6pLOd9Y6/8mo
ZJ3/mul8KAtydD48rPOjNNqu82N5nS9lvaPOl7t0/pS1b3T+bKvzqVzsqPNp
M51f5XxvnV8fvzHmW1l7W+fbSJ1/xb6Tzr9TdT6WWr/pfNxL52fxqXbCmJ/n
6XwtjyvqfG1KN+ZvafZK5++pOp/LxQM6n786Zczvkv2Nzu+VdL6X1dY63+/S
+V9So3T+76L5QDo5aT4QzQ9iG675wVHzhWzZrPkifI+RP+SvWM0fR6cb+UTG
rdd8ErzHyC/yXarmFxfNN3KK+SbC28g/ks7801/zkTTapPmopuYnGflO81OI
5itxHK/5qqLmLwlh/uqh+UwGd9d81kPzm3S+pPmtteY76R2u+a6P5j/ZzPyX
MM3Ih/Ka+fBVGyM/ygPmR1/NlxLNfHla86csYP6so/lUrAs0n7prfpVizTS/
Omm+lQjm29qaf6W2jebfupqPZT/zcWXNz3Kc+bm75msJY76+fMXI3/Lnf/m7
lJHP5SPz+YeqRn6X1czvprFGvpcg5vuGt438L1uY/23UBySUPpBrZfiBFNIP
Jq4zfEH20BcKKxj+IKn0h25phk/IPPrEqlmGX0gt+gW6G74hQt+YFWP4h0TT
P4pZGz4iNegjfQ8ZfiL/+UkKDF+RDfSVyH8Mf5FXLdRfUuobPiMt6TORGYbf
yF36TaeRhu9IZrL6zqOLhv+IN/1n/grDh8R0XX1o2jnDj/DqL/WjHj6GL2EG
fenuVMOf8OmA+tOlAMOn4E2feptl+BW2/ah+lRJq+BbG0LcKzhj+hQ2X1b8K
TYaP4Vf6mOO/hp/h4WT1s2++M3wNw+hr0XmGv6HIf/6WZPgcEo+oz8WFGH6H
avS7Y96G78Fzpvre4R6G/2HlCPW/0jcMH4Rrb/XBR+qH6EU//L2e4Yu4a6W+
uEr9Eb531B8/q09iW6H6ZPvKhl/Cd6H6ZbL6JurRN2vdMfwTV7eqf7ayM3wU
yx6rjzbZY/gpvnFVP+2gvgq3YPXVi+qvaOCi/urQzvBZBDRRn60VbPgtmndQ
vy1dxvBdfPRR341W/8X2ePXfJerD+FxLfThR/RhLS6kfW31r+DIiiqgv059B
f+5Gfwb9GfRn0J9Bfwb9GfRn0J9Bfwb9GfRn0J9Bfwb9GfRn0J9Bfwb9GfRn
0J/xUP0ZXurPoD+D/gz6M+jPoD+D/gz6M+jPoD+D/gz6M+jPoD+D/gz6M+jP
oD+D/gz6M+jPoD+D/ozH6s9Yof4M+jPoz2it/owbej5Afwb9Genqz7ip5wv0
Z9CfMeCkns8gPZ/4mKrnt4T6M+jPoD+D/gz6M+jPoD9jTnetH/bqz6A/C/0Z
9GehP8PNTetTTfVnXFF/lmdav0B/Fvoz9qg/S231Z9Cfhf4M+vN/9RMT1Z+l
ltZX0J+F/oxf1J8lQusz6M9Cf0ag+rPM1PoOa/VnSdP6D/qz0J9Bfxb6M8LZ
X/Zrf8Fa9WeZoP0HMerPslL7ExzVn8VZ+xfoz0J/xgv1Z+mn/Q/0Z6E/g/4s
9GccYH+lP4P+LPRn+LE/059Bfxb6M+jPQn9GHvv/KO3/yOF8sEXnA9Cfhf4M
+rPQn0F/FvozAjmf/KP+jHOcX/5Wf8Y2zjdP1J9Bfxb6M15xPrKoP2MQ5ycr
nZ+wm/OVp/ozyqs/S3+dv0B/Fvoz6M9Cfwb9WejPoD8L/RkrOR/OU39GAedH
Z/Vn0J+F/gz6s9CfQX8W+jO6qT+Lj/ozIjnfnlN/Bv1Z6M+gPwv9GQs5P9vn
Gf6M45yv284y5muxcP5e0dWYv4X+LEPVn4X+LE7qzzKX8/0L9WdJ5vy/Qf1Z
nJgPflZ/FvqzzFF/lqHMF9vVn6U188dl9WcpZD75Tf1Z6M/irf4sUcw3furP
4s7880Xzj1RSf5aFmo+kB/NTM/VnSWK++kf9WejPMkPzl9RgPjuk+Uz2M7+d
0/wm9GehP4sz81979WdxZj6covlQ+jM/3tT8KPuYL3dpvpTq6s+yQP1ZjjOf
Rmo+FfqzbNP8Kv7Mt0VbG/lW1jD/NlV/lqbMx0PUn2Ui8/Mfmp9lIfN1ffVn
oT/LKc3fMpn5/Dv1Z3Fhfq+o/iwNme8va76XX5n/66k/yxn6wAz1AelMP6in
fiAb6QvL1BfkJf2B/iy36BOt1Z/lNv2isfqFXKBvHFHfEPqzvFX/kGLqz3JM
fUTa0U+c1U+kOX1lt/qKBNJfXNVfZAt9ZpP6jKTQb4qqP8s7+o6L+o50of8M
UP+RvvQhe/VnKar+LMPVj6SM+rPYqz/LXPrTHfUnGUOfslN/llz61V71KylK
3+qrviX59K9L6l8ynj52R31MbOlnbdWfJZ++tl19TUz0t83qbxJHn6M/i4l+
V0X9WUrdU99br7739Tmq/3mr/8lK+uBy9UFxox8mqh9KLH0xQH1RutIfSz81
/FFs6JMp6pPiS78cqH4po+ib36tvykb6J/1ZHtBHHdVHJZl+Okz9VI7TV4up
r8oX+iv9WT5XVZ+lP0sF+u1Z9VsJoe8WV9+Vd03Uf+eq/4qZPrxLfVjK0o8b
qh+LYzv15evqy3Lv57GBUW9OXIxTfxb7turTd/h1z0T166b891vo27/x+x/T
nw93/vxJ9PEv7fT3+8/Pz/P3b05f/4F/XwL9fRv//if0+feH9PlU6KR+P53P
L5O+34TP9xD9vx+f/1zuB5ry89nJ/UFDfn7v4nW/kMvPdyD3Dx/Vn+US9xPe
fD96c39xhu/PDO43FvH98uT+w4XvXx73I5P4fj7k/sSG7+8t7lfK8P1+yP3L
Gr7/qdzPrOP5KMH9jRXPz8/c7wTzfBVw/7OR568k90OteT4zuD/6jee3L/dL
9Gf5nfunAJ7///ZT5Vgf3qk/oxbrxw/cb2WqP0tz7r9+Yv1hfUIr1ifh/uyW
+rP4cr82hvVtFfdvjqx/5bmfm8H6WJv7O/qz5Ko/Yznrqzf3f+msvwHcD85j
fT7F/WHuWa3fodwvflJ/lkzuH9PVn8WT+8l+7A+tuL/8UEn7xyHuNxuzv/Tm
/jNT/Vmqcz86n/2J/gz6s4zifjVb/VncuX+dw/43i/vZt+rPMoj72xrsnyW4
332r/iwzuP8V9WehP+OK+rPEc388lv17I/fL09nf89SfcUr9WdZyPz2B80FL
7q8ncX7oxP12ec4Xbbn/Pqn+LCbux1twPlnF/fl4zi/vnut+3YHzzRv1Zwzg
/BPK/fxr9Wex4/7eW/1Z6M+gP8tw7v8Xcv7ay/sBaerPspj3Bz7k6vx2n/cL
hqg/iw3vH2xTf5bmvJ/ws/qz7OH9herqz1KV9xvOqD/LFd5/GPFO589WvB9x
UP1ZmvP+xDn1ZzGpP2NDlM63obx/UdBe59/feT/jx6k6H4P3N0JbG/6MBbzf
cbmSzteZ6s+Ie6nz93TeDzmg/ozn6s8IU39Gcd4vcS2p8z39GfRntOL9lJXq
zwjj/ZWm6s+gP4P+jEfqzxio/ox49eevOV3zyT71ZwxRfwb9GfRn0J9Bf8Yv
vJ9jrf6Myry/M475KYz3e5zUn0F/Bv0ZzXk/yEv9GUN4f8hK/RkuvF/0hvlu
BO8fuTP//av+jETmQ/oz6M9YwftNd5kvV/H+ky/zJ/0Z9Ge48f5UVfVnDOD9
qnDm20a8f9VQ/Rm9eD9rLfMx/RmhzM8/8n5XOPM1/Rn0Z1xTf4aVi+Zz+jPo
z6A/g/6M1erP8GL+pz+D/gz6M+jPoD+D/gz6M+jPWJ32P/fjQH8G/RkTu//P
/TrQn0F/xmL1Z9SmjwxQf8Zd+klEd73ft5e+Qn8G/Rn0Z9CfQX8G/Rlh6s/I
UX8G/Rn0Z9CfQX/GpEruxv3FVPVn0J+F/gz6s9CfcXeD3o9cR5+iPwv9Gb1O
6f3KUfQt+rPQn5Gcpvczu9PH6M9Cfwb9WejP8FF/llr0N/qz0J9Bfxb6M+jP
Qn8G/VnozzjN+6lL1J8xcofeX7W4qB/Sn4X+DPqz0J9Bfxb6M+jPQn8G/Vno
z6A/C/0Z9GehP4P+LPRn0J+F/gz6s9CfQX8W+jPc1J+lTDv1W/qz0J9Bfxb6
M+jPQn8G/Vnoz6A/C/0Z/wcyeqbm
               "]]}, 
             {RGBColor[1, 0.5, 0], 
              PointBox[{0.0036300702445077704`, 0.9993847649420661}], InsetBox[
               StyleBox[
                SubscriptBox["\<\"X\"\>", "4"],
                StripOnInput->False,
                
                FontSize->
                 20], {0.0036300702445077704`, 0.9993847649420661}, \
{1.25, -1.25}]}, {}, {}, 
             {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
              PolygonBox[{{
               1.2922321560073424`, -0.29404032523230367`}, \
{-1.2931136852806895`, -0.29191248330481867`}, {0.0036305736398192234`, 
               0.9999963944800393}}], 
              PointBox[{{
               1.2922321560073424`, -0.29404032523230367`}, \
{-1.2931136852806895`, -0.29191248330481867`}, {0.0036305736398192234`, 
               0.9999963944800393}}]}}}},
          ImageSize->400,
          PlotLabel->FormBox[
            StyleBox["\"a/b=1.352\"", 20, StripOnInput -> False], 
            TraditionalForm],
          PlotRange->{{-1.6, 1.6}, {-1.1, 1.2}}]},
        {
         StyleBox["\<\"(b)\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->24,
          FontColor->GrayLevel[0]]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         GraphicsBox[{
           {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.51, 1.}]}, {
            {RGBColor[0, 0, 1], Thickness[Large]}, 
            {PointSize[Large], FaceForm[None], 
             {GrayLevel[0.5], Dashing[{Small, Small}], 
              LineBox[{{-1.51, 0}, {1.51, 0}}], LineBox[{{0, -1}, {0, 1}}], 
              PointBox[{0, 0}]}, 
             {RGBColor[1, 0.5, 0], Thickness[Large], LineBox[CompressedData["
1:eJxV2nlYzfkXB/CyFLKlIWsYJDP2NcvM0QxZB5MxGUaDIUNZisiUNY3MJEnE
iMpWISWhiIMkWSsk7ft+722/N8LP7563P2b+mHk885S63+/nnPN+nU/f5eut
VjbT0dFJ+vSv//+3o03ukKE6VTy+1rfffYeWt7wV0y7HKlXs8uvrhRnWMTzu
YaZS/4aKD40zmpE8NZGDZ014fXO5iien/mtZm5XC+Zmzc8+VKXmgY3/LrR/S
+Jt9doEFc5XccXfSboumbO4zadiFlCMK7p/RryhxVT5fGLilp9GdSvZpVfU0
xLyI2zhVd//zaQX7uht8564oYZcF+UGt75bz0OaJae5u5Tyib2JBsX8ZJ0W/
/2GMppK7lA4+PO/3Ul7+zn+F+wwV+/R5+cfhLiXce3b7myU3qvidd/T7NjFF
3Opy/vqyW9X8elybTS1/KOTDB1slLAyr4TmnHVKev8xnZd1w53qPWp5t+PPC
s1Z5bNNtVcr5eXUcfqjouPXBHJ41z76LZ4t6Xm0+NCLLIZONLUNck87Us3Vh
ll/0zDe8eJqewfMRDZxh91i5u3cqX99Pi99eaOAjlcuP+dSmcF71P2szjdR8
8uq3axWHnvMJ07STndaoubm7tUYxM5FnnOGXM8LV/Mxe5WNmGMdfWGVVTihU
84b3NxvNUmN4sc4t5+DWGh4wYcqX+x0v8MRbisc/99FwK4ORu7PNtnHX+Vtt
jAZpeNA518E9I07T6m6/uoX01/DjX1sNcrW4SuPct23INdJw1L9J390eeYe2
/Gjku1ut5r2dJ/SbHhhPt46aj7RKUvOqVIVdXckjGn4hYUq7ADV7nLGtWNAi
ifZ80cfPboWaL5x5ePL5zhRqylxmbNJXzWOCzuv1KXtJ011if372qoHbPL7k
3fOb19QUGjbSxK2BLS1e6Ue5vqHUG7ZBwYMa+Enpvc0VwRkUML3peFNiPV9q
ZzUt43YWhc1z7Ru8op7vBc8MuHg3h5a4us0Z9LaO31jtcp2Vlkt26bbu7/+u
401eJW+V8Xm0QrHj9BHjOh70V+KVktB80p18fPLSwFoe9cA0YemeAvq6WV39
7QG1vG5rvziPBYV018fjfMeQmk+fU1i1d68iGlZQkX9xYA1HHi27cTGziE7N
0DMqOlPNbuUXuxseKib/4m1VLfpU8y8nZg6sm1xCJeE371sdq+JhbXuGeBaX
0DLj67c6GFbxW/exNwz3lNKS47y1qr2KD+rn7LrRrYy++TBtmkejgvfeXlFy
K7iMEs6tmDAnv5KDdg+wsRpaTn5jVj4KSqzgErtjUWFh5fRnf68uGeHl7KVa
XNnCtIKCJ2y2nXW4jMsHWHTz9Kug/YeDT3/zZyl/SPK33Nyski5kuz9psCnh
+CkNy+ptK2nEFweWXvu+mDOWOH81Ib6SRt/r8eCaWRG3m7ij/6ZeCjJZ9jx0
SPtC9nS85p28XkEHf6ixnl2Xz3fbzLTdEaug1p3rO0zOyOOoMzfmhjZXUnrd
UquRcbmsMa4J3TpVSfGJaiufhTl8wMrCvdtuJQ0d9/zNnCFZrIp+GxwRoyTz
+pa66S0yePLRlT4rK5U0Ijek17qcNB5x7Lnbku4qqg3es33yrVRWHfLYGfu9
ijZviE7adfIlL318fOHZP1Q0blOFq41bCiu29A4fv09Fo2yD3n+wS+JX8Rrd
f8+qqO2EaTYdLz9h51bqy0W3Pv15SvbIcT4POalxsMHEFBUF+PVbHe5yn3Wd
HH+4nq+i7LZX50asvcOBU5qiNqtUtHJwZce0pGieveLtbl+Nil62fVbaOy2C
F7oN0/v6g4pymqf9+kVBEGsW30wepFNF+yf5rmif6sC2g4dmm35UUchtW8OV
3v+S0bAdS2PfqmiMV+8H885epJxN25p/Xauiq5ffXemivEqTjnR97VGqoshW
z3qO3nyLAjIzBlWkq8hcv0vaGqd7FGqz1dv2kYqCzi86WT7gAd0ZYaJof11F
oYGbHT2eJFLIl16b1YEqKnYO+23M6qfk0tiSR3qoKJYP9K7ZlkR+iQU3UuxV
1PeAT8KU71IoamznhNI5Kmp4X3Nuv+5Lulw9K9x9qIp0DTfbPbz5iuZrNFdi
DFS0bEjssuoNr+nrZR28fYuV9CI0wrZl3ze079KB7QNYSY8CB6TrPkmn548z
yeWwki4l7PEpdMgk88YMkzOrlbQxbUfyhU7ZlNEsrz5sopKm37w4/udLOdRn
1B+jzhkoaeShbcsdTuVS9PaA7GNvFBRq27jEzC6PJjncOX74rIKUU16lzh2R
Tw9XTYo4++n9+7rtmKiSunzaGxKrlzpOQYu9NjWqrhbQ3mL1yJEfKunJkQ5x
f2wqpB63bZzi71XS8EdPvrcaXkQJlwNv/+teSWmmpvculhWR3yCDK7GWlVRo
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
JObrszJ/86CtMn8/k/mcRwbJfP6vzO/cBfO7h8z3bKEn8725zP/shPn/tuQD
7hwu+aCd5Aeet1/yw3jJFzwlQvJFmeQP/vE3yR9zJZ+wYwvJJ6Mlv7BHe8kv
RyTfsOkQyTfZm7T5h4e0l/zzRvIRr0U+Wi/56dPXSX5Kk3zFY5Gv7kn+Yt1V
kr96SD77lKsknwVJfmMPB8lvjUe1+Y6vhEi+e+unzX9snCf5Tyn5kPWRD1dL
fuRLyI/Jki95wiPJl5GSP7kM+dNX8il/j3z6k+RXfon8+nCCNt/yauTbI5J/
2Q35d77kYz6LfFwk+ZnjkZ99JF+zAvl6jeRvfoX8HSX5nGOQz2dJfudi5Pcl
ku/5PfK9leR/3or8v1Z8gJ/DB8oNtH7A2+EHhf5aX2DDCPGFHuIP/BD+MFd8
guPgEwFWWr/gRfCLSeIb/Aq+4R+v9Q+eCf8Ictf6CH8JHxkpfsKb4Cc3xVfY
Hr7SIP7Ci+AvTW21PsM34TN/it/wRfiNhfgOp8F3nB5p/YebnRf/MQjU+hDP
hw+1ED/i9/Cjg6e1vsTu8KU1r7T+xEPhT5ZGWp/iGPiU+TGtX/E6+FWjtda3
eAh8a9tprX/xGvhXj5+0PkbN4WONU7R+Rt3hZ5bNYv/vazQavma8XutvVPWj
+FvxXq3PUWf4XGS01u9oKfwuWKH1vU+5W3zP117rf3QQ/qco0vogvbMUHzQe
r/VDUk4VPywQX6Tx8MXD4o80Bv5YIz5JLvDJfeZav6R28MvZB7W+SQ8ixDc1
4p90Z5b45yrxUYp6Kz66X/yUyq+Ln4aIr9LNZuKr9uKvtGeP+OtvZlqfpfl6
4rMW4rd0Ml381kp8l4bvEt/VydL6Ly3ZIP57RXyYlr8SH54kfkxDxoof+4kv
011r8WX4M8Gfv4E/E/yZ4M8Efyb4M8GfCf5M8GeCPxP8meDPBH+mNPFn6ib+
TPBngj8T/JngzwR/JvgzFZTI53tb/JngzwR/JvgzwZ8J/kzwZ4I/E/yZjPH8
/5TnT/Bngj8T/JngzwR/JvgzwZ8J/kzwZ4I/E/yZ4M/0QvyZJsr7TfBngj9T
qvgzLZTzQfBngj9Tz3ZyvkzkfBH8meHP5LZYzue3cj7pm+Nyfp3l/BL8meHP
BH9m+DPBnxn+TPGoH2qpHwR/ZvgzwZ8Z/kw7/lufqHOZ1K8TUr8I/szwZ4I/
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
+DPDnwn+zPBn+h9LwOp+
               "]]}, 
             {RGBColor[1, 0.5, 0], 
              PointBox[{-0.8360641633795938, 0.8285550340734383}], InsetBox[
               StyleBox[
                SubscriptBox["\<\"X\"\>", "4"],
                StripOnInput->False,
                
                FontSize->
                 20], {-0.8360641633795938, 0.8285550340734383}, \
{1.25, -1.25}]}, {}, {}, 
             {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
              PolygonBox[{{
               1.5053451739370232`, -0.0784590957278448}, \
{-1.3384294984415614`, -0.4629638708133354}, {-0.8365964491558452, 
               0.8324917883273601}}], 
              PointBox[{{
               1.5053451739370232`, -0.0784590957278448}, \
{-1.3384294984415614`, -0.4629638708133354}, {-0.8365964491558452, 
               0.8324917883273601}}]}}}},
          ImageSize->400,
          PlotLabel->FormBox[
            StyleBox["\"a/b=1.510\"", 20, StripOnInput -> False], 
            TraditionalForm],
          PlotRange->{{-1.6, 1.6}, {-1.6, 1.6}}]},
        {
         StyleBox["\<\"(c)\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->24,
          FontColor->GrayLevel[0]]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         GraphicsBox[{
           {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.51, 1.}]}, {
            {RGBColor[0, 0, 1], Thickness[Large]}, 
            {PointSize[Large], FaceForm[None], 
             {GrayLevel[0.5], Dashing[{Small, Small}], 
              LineBox[{{-1.51, 0}, {1.51, 0}}], LineBox[{{0, -1}, {0, 1}}], 
              PointBox[{0, 0}]}, 
             {RGBColor[1, 0.5, 0], Thickness[Large], LineBox[CompressedData["
1:eJxV2nlYzfkXB/CyFLKlIWsYJDP2NcvM0QxZB5MxGUaDIUNZisiUNY3MJEnE
iMpWISWhiIMkWSsk7ft+722/N8LP7563P2b+mHk885S63+/nnPN+nU/f5eut
VjbT0dFJ+vSv//+3o03ukKE6VTy+1rfffYeWt7wV0y7HKlXs8uvrhRnWMTzu
YaZS/4aKD40zmpE8NZGDZ014fXO5iien/mtZm5XC+Zmzc8+VKXmgY3/LrR/S
+Jt9doEFc5XccXfSboumbO4zadiFlCMK7p/RryhxVT5fGLilp9GdSvZpVfU0
xLyI2zhVd//zaQX7uht8564oYZcF+UGt75bz0OaJae5u5Tyib2JBsX8ZJ0W/
/2GMppK7lA4+PO/3Ul7+zn+F+wwV+/R5+cfhLiXce3b7myU3qvidd/T7NjFF
3Opy/vqyW9X8elybTS1/KOTDB1slLAyr4TmnHVKev8xnZd1w53qPWp5t+PPC
s1Z5bNNtVcr5eXUcfqjouPXBHJ41z76LZ4t6Xm0+NCLLIZONLUNck87Us3Vh
ll/0zDe8eJqewfMRDZxh91i5u3cqX99Pi99eaOAjlcuP+dSmcF71P2szjdR8
8uq3axWHnvMJ07STndaoubm7tUYxM5FnnOGXM8LV/Mxe5WNmGMdfWGVVTihU
84b3NxvNUmN4sc4t5+DWGh4wYcqX+x0v8MRbisc/99FwK4ORu7PNtnHX+Vtt
jAZpeNA518E9I07T6m6/uoX01/DjX1sNcrW4SuPct23INdJw1L9J390eeYe2
/Gjku1ut5r2dJ/SbHhhPt46aj7RKUvOqVIVdXckjGn4hYUq7ADV7nLGtWNAi
ifZ80cfPboWaL5x5ePL5zhRqylxmbNJXzWOCzuv1KXtJ011if372qoHbPL7k
3fOb19QUGjbSxK2BLS1e6Ue5vqHUG7ZBwYMa+Enpvc0VwRkUML3peFNiPV9q
ZzUt43YWhc1z7Ru8op7vBc8MuHg3h5a4us0Z9LaO31jtcp2Vlkt26bbu7/+u
401eJW+V8Xm0QrHj9BHjOh70V+KVktB80p18fPLSwFoe9cA0YemeAvq6WV39
7QG1vG5rvziPBYV018fjfMeQmk+fU1i1d68iGlZQkX9xYA1HHi27cTGziE7N
0DMqOlPNbuUXuxseKib/4m1VLfpU8y8nZg6sm1xCJeE371sdq+JhbXuGeBaX
0DLj67c6GFbxW/exNwz3lNKS47y1qr2KD+rn7LrRrYy++TBtmkejgvfeXlFy
K7iMEs6tmDAnv5KDdg+wsRpaTn5jVj4KSqzgErtjUWFh5fRnf68uGeHl7KVa
XNnCtIKCJ2y2nXW4jMsHWHTz9Kug/YeDT3/zZyl/SPK33Nyski5kuz9psCnh
+CkNy+ptK2nEFweWXvu+mDOWOH81Ib6SRt/r8eCaWRG3m7ij/6ZeCjJZ9jx0
SPtC9nS85p28XkEHf6ixnl2Xz3fbzLTdEaug1p3rO0zOyOOoMzfmhjZXUnrd
UquRcbmsMa4J3TpVSfGJaiufhTl8wMrCvdtuJQ0d9/zNnCFZrIp+GxwRoyTz
+pa66S0yePLRlT4rK5U0Ijek17qcNB5x7Lnbku4qqg3es33yrVRWHfLYGfu9
ijZviE7adfIlL318fOHZP1Q0blOFq41bCiu29A4fv09Fo2yD3n+wS+JX8Rrd
f8+qqO2EaTYdLz9h51bqy0W3Pv15SvbIcT4POalxsMHEFBUF+PVbHe5yn3Wd
HH+4nq+i7LZX50asvcOBU5qiNqtUtHJwZce0pGieveLtbl+Nil62fVbaOy2C
F7oN0/v6g4pymqf9+kVBEGsW30wepFNF+yf5rmif6sC2g4dmm35UUchtW8OV
3v+S0bAdS2PfqmiMV+8H885epJxN25p/Xauiq5ffXemivEqTjnR97VGqoshW
z3qO3nyLAjIzBlWkq8hcv0vaGqd7FGqz1dv2kYqCzi86WT7gAd0ZYaJof11F
oYGbHT2eJFLIl16b1YEqKnYO+23M6qfk0tiSR3qoKJYP9K7ZlkR+iQU3UuxV
1PeAT8KU71IoamznhNI5Kmp4X3Nuv+5Lulw9K9x9qIp0DTfbPbz5iuZrNFdi
DFS0bEjssuoNr+nrZR28fYuV9CI0wrZl3ze079KB7QNYSY8CB6TrPkmn548z
yeWwki4l7PEpdMgk88YMkzOrlbQxbUfyhU7ZlNEsrz5sopKm37w4/udLOdRn
1B+jzhkoaeShbcsdTuVS9PaA7GNvFBRq27jEzC6PJjncOX74rIKUU16lzh2R
Tw9XTYo4++n9+7rtmKiSunzaGxKrlzpOQYu9NjWqrhbQ3mL1yJEfKunJkQ5x
f2wqpB63bZzi71XS8EdPvrcaXkQJlwNv/+teSWmmpvculhWR3yCDK7GWlVRo
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
JObrszJ/86CtMn8/k/mcRwbJfP6vzO/cBfO7h8z3bKEn8725zP/shPn/tuQD
7hwu+aCd5Aeet1/yw3jJFzwlQvJFmeQP/vE3yR9zJZ+wYwvJJ6Mlv7BHe8kv
RyTfsOkQyTfZm7T5h4e0l/zzRvIRr0U+Wi/56dPXSX5Kk3zFY5Gv7kn+Yt1V
kr96SD77lKsknwVJfmMPB8lvjUe1+Y6vhEi+e+unzX9snCf5Tyn5kPWRD1dL
fuRLyI/Jki95wiPJl5GSP7kM+dNX8il/j3z6k+RXfon8+nCCNt/yauTbI5J/
2Q35d77kYz6LfFwk+ZnjkZ99JF+zAvl6jeRvfoX8HSX5nGOQz2dJfudi5Pcl
ku/5PfK9leR/3or8v1Z8gJ/DB8oNtH7A2+EHhf5aX2DDCPGFHuIP/BD+MFd8
guPgEwFWWr/gRfCLSeIb/Aq+4R+v9Q+eCf8Ictf6CH8JHxkpfsKb4Cc3xVfY
Hr7SIP7Ci+AvTW21PsM34TN/it/wRfiNhfgOp8F3nB5p/YebnRf/MQjU+hDP
hw+1ED/i9/Cjg6e1vsTu8KU1r7T+xEPhT5ZGWp/iGPiU+TGtX/E6+FWjtda3
eAh8a9tprX/xGvhXj5+0PkbN4WONU7R+Rt3hZ5bNYv/vazQavma8XutvVPWj
+FvxXq3PUWf4XGS01u9oKfwuWKH1vU+5W3zP117rf3QQ/qco0vogvbMUHzQe
r/VDUk4VPywQX6Tx8MXD4o80Bv5YIz5JLvDJfeZav6R28MvZB7W+SQ8ixDc1
4p90Z5b45yrxUYp6Kz66X/yUyq+Ln4aIr9LNZuKr9uKvtGeP+OtvZlqfpfl6
4rMW4rd0Ml381kp8l4bvEt/VydL6Ly3ZIP57RXyYlr8SH54kfkxDxoof+4kv
011r8WX4M8Gfv4E/E/yZ4M8Efyb4M8GfCf5M8GeCPxP8meDPBH+mNPFn6ib+
TPBngj8T/JngzwR/JvgzFZTI53tb/JngzwR/JvgzwZ8J/kzwZ4I/E/yZjPH8
/5TnT/Bngj8T/JngzwR/JvgzwZ8J/kzwZ4I/E/yZ4M/0QvyZJsr7TfBngj9T
qvgzLZTzQfBngj9Tz3ZyvkzkfBH8meHP5LZYzue3cj7pm+Nyfp3l/BL8meHP
BH9m+DPBnxn+TPGoH2qpHwR/ZvgzwZ8Z/kw7/lufqHOZ1K8TUr8I/szwZ4I/
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
+DPDnwn+zPBn+h9LwOp+
               "]]}, 
             {RGBColor[1, 0.5, 0], 
              PointBox[{-0.5884780035240722, 1.2209372229547444`}], InsetBox[
               StyleBox[
                SubscriptBox["\<\"X\"\>", "4"],
                StripOnInput->False,
                
                FontSize->
                 20], {-0.5884780035240722, 1.2209372229547444`}, \
{1.25, -1.25}]}, {}, 
             {PointSize[Medium], Thickness[Large], 
              PointBox[{{-0.43764319888514736`, 
               1.1231947723864522`}, {-0.7026682697357736, 
               0.9984419893531052}, {-0.46466706113286366`, \
-0.2911552372541334}}], 
              {RGBColor[0, 0, 1], 
               Dashing[{Small, Small}], {
                LineBox[{{
                 1.4970817406744537`, -0.1305261922200509}, \
{-0.7026682697357736, 0.9984419893531052}}], 
                LineBox[{{-1.403996289576875, -0.3680680187471345}, \
{-0.46466706113286366`, -0.2911552372541334}}], 
                LineBox[{{-0.5644516714712553, 
                 0.9275056825603072}, {-0.43764319888514736`, 
                 1.1231947723864522`}}]}, 
               {RGBColor[1, 0.5, 0], 
                LineBox[{{
                 1.4970817406744537`, -0.1305261922200509}, \
{-0.5884780035240722, 1.2209372229547444`}}], 
                LineBox[{{-1.403996289576875, -0.3680680187471345}, \
{-0.5884780035240722, 1.2209372229547444`}}], 
                LineBox[{{-0.5644516714712553, 
                 0.9275056825603072}, {-0.5884780035240722, 
                 1.2209372229547444`}}]}}}, 
             {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
              PolygonBox[{{
               1.4970817406744537`, -0.1305261922200509}, \
{-1.403996289576875, -0.3680680187471345}, {-0.5644516714712553, 
               0.9275056825603072}}], 
              PointBox[{{
               1.4970817406744537`, -0.1305261922200509}, \
{-1.403996289576875, -0.3680680187471345}, {-0.5644516714712553, 
               0.9275056825603072}}]}}}},
          ImageSize->400,
          PlotLabel->FormBox[
            StyleBox["\"a/b=1.510\"", 20, StripOnInput -> False], 
            TraditionalForm],
          PlotRange->{{-1.6, 1.6}, {-1.6, 1.6}}]},
        {
         StyleBox["\<\"(d)\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->24,
          FontColor->GrayLevel[0]]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{0}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.787593224610607*^9, 3.787669841348656*^9, {3.787669953767194*^9, 
   3.7876699931155033`*^9}, {3.7876700391541896`*^9, 3.7876700507042947`*^9}, 
   3.787670088179882*^9, {3.78767014689396*^9, 3.7876701625879803`*^9}, {
   3.7876702266922207`*^9, 3.7876702624968767`*^9}, {3.787670302164547*^9, 
   3.7876703499678736`*^9}, 3.7876704769566913`*^9, {3.7876705548238573`*^9, 
   3.7876705964764433`*^9}, {3.787670646090127*^9, 3.787670673767128*^9}, {
   3.7876707305403023`*^9, 3.7876707571052685`*^9}, {3.7876708093210135`*^9, 
   3.787670840962536*^9}, 3.7876711241987467`*^9, {3.7878547500586967`*^9, 
   3.78785475331033*^9}, 3.7881927609868298`*^9, 3.7881927988275757`*^9, 
   3.789722166848844*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"orthicLociPlot3", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ort1", ",", "ort2", ",", "ort3"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ort1", "=", 
      RowBox[{"showOrt", "[", 
       RowBox[{"1.3", ",", 
        RowBox[{"-", "7"}], ",", 
        RowBox[{"drP1", "\[Rule]", "False"}], ",", 
        RowBox[{"p1Dist", "->", ".25"}], ",", 
        RowBox[{"x4displ", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ort2", "=", 
      RowBox[{"showOrt", "[", 
       RowBox[{"1.352", ",", 
        RowBox[{"-", "17.1"}], ",", 
        RowBox[{"drP1", "\[Rule]", "False"}], ",", 
        RowBox[{"p1Dist", "->", ".25"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ort3", "=", 
      RowBox[{"showOrt", "[", 
       RowBox[{"1.51", ",", 
        RowBox[{
         RowBox[{"-", "9.0"}], "+", "1.5"}], ",", 
        RowBox[{"drP1", "\[Rule]", "False"}], ",", 
        RowBox[{"p1Dist", "->", ".25"}], ",", 
        RowBox[{"drAlts", "\[Rule]", "True"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Show", "[", 
                RowBox[{"ort1", ",", 
                 RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Show", "[", 
                RowBox[{"ort2", ",", 
                 RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "}"}]}], 
             "}"}], ",", 
            RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}], ",", 
          RowBox[{"Show", "[", 
           RowBox[{"ort3", ",", 
            RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}], "}"}], "}"}], 
       ",", 
       RowBox[{"Spacings", "\[Rule]", "0"}], ",", 
       RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7876712655866337`*^9, 3.7876712749618196`*^9}, {
  3.7876713071457343`*^9, 3.78767155869678*^9}, {3.7876734251826954`*^9, 
  3.787673430894101*^9}, {3.787854822144182*^9, 3.78785482843493*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         GraphicsBox[{
           {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.3, 1.}]}, {
            {RGBColor[0, 0, 1], Thickness[Large]}, 
            {PointSize[Large], FaceForm[None], 
             {GrayLevel[0.5], Dashing[{Small, Small}], 
              LineBox[{{-1.3, 0}, {1.3, 0}}], LineBox[{{0, -1}, {0, 1}}], 
              PointBox[{0, 0}]}, 
             {RGBColor[1, 0.5, 0], Thickness[Large], LineBox[CompressedData["
1:eJwt2nVY1ecbBnBbJ9ZUZvcMFEWxZ9wyi6EOczZzttgdoFjYxUwcU6YYiO0E
Cx9FEAuVVkLgnEMdZqDM9sfPfZ/7H728uJDDN97nvj/v22D87MGTihUpUuTx
1z/++9s54dG2gcctMgjRU04NqRR6dn9oQ79DFrGptmh4ypvDsrt/k6C1PhZp
HnuhpuPzC1Luzm8ray20yMANfb61jw2Vc+WbuS0fYJHFy/N9j8fckndOtg1i
aloE1TtE7z99R4Y6N53eP9Usp5aWqt5vWZR89r3c2m63WZr94z55RI1omVEk
w+HMj2a5mfS+7xz3WBk1aeTQVlkmedXOrlaZM/HytP6ysoVeJvn3bGX7qMxE
uZKduGZVJZOc/WnJ5ZXlk6TPi7Gvau/LEF9v//4fvk+RjPzLp7tXy5AFy9/H
N2rxTIq/er9o5LZ0WX//bp/VFdOl1S6XEnc/pUnvYlH3kwvT5ciwThMuPngm
s77EBXfKypCVAYPmzt+RKneWrFuPMJM0u+S9u5hzisTvbPvl0E6zHGjT+K+J
BUnSYFf1jw1GWeTLwa79/PY8lbo7835eb5spkb7LbwQ5PBGH9+Y5gRGZ8urp
JJedNxKk6fp1td3ds2RGZkTFgS7x4lLLL/ti8WwpXN7tVVJUrKy+GR6+xidb
7Pdd92jaP0Zup1fziKuSI3MrnyjV6PZjqZnWvur5TTmyLabfxSlLH0rqxRo9
Hd7mSLHWd0vP/e2+DL6TFDH5l1wZOmL+ggp97kjpP9zDlwXlisfkb+8lNYuQ
jMmtW+36N1dan7gw180mTPYO71jd1M4qNz4f/7vOs1DxKLWwju80q8you6eR
34kQuX5gedjrnVYp8HCrGL/inJRsez/V/m+rLDx2IMnjylExF99ecuM9q3iE
d127s/5uOe6fULx/olUOby65L/XuFDSZHTAoNMkqcQmzi81/vB8V78z3bRJv
lZYjomvFtgpE1eueTrG3rZLcpVpFr8nnUbd03peKZ62yaOOqK/fqXULanLrT
m/tY5e3tD74pN0MR9Sj/zBx3qyRccS154chNrHF92bRNV6u4RFRs7zc2HK6T
+theKWWVfs5lkxuUiUSpOs6jRt7LlcSxmTvuBdzFT5YGP4xZnyuNGtaNbd72
Aeyqetev2D1XlhUk9LWcf4g3xUyzQ1/kSFDYx9UxPo9RreGTYed8c8R/4ctZ
O8Oike669Ehb5MjAk0sG782LQUTc5+DNaV/vX+zwsIhycbjUZ0X/wmXZUmNu
+6Y2TeIxe9Ukj5hvs2XH3jLuIzomIDjlu/19A7Lkqd3Qw4d6JCJz19Y2Bx2z
pMo/M6NMTk/Q757362qhmbK8ytultl2eou/stFMvemZKy0r7N/1gn4Tm97Jd
3SItMtbs+HyobTKe3+zy7GBfi7i37TPa/W0yfjR9WGwNN8uQhbm11zxKwYZ7
hcPnwywlHxY+DPRPxYQ1b57MDDFJzMEI+7xpz+CXl7rMpqVJAkvuSxnWIg1b
ytS3evhnyCA/Ez5a0nBrqU/p599myKG55Rst7JeOzL378zetSpf80sP/8vNP
h9NFp9pF0tLk51Ym05f8dNws0qO5NeSZlIhMvXoYGfjYyq9jw22psjzSz8N3
YwaOZw/v8ea3FFkfmZxifZSB8/ui7I60TZZj7xzfHa5sQvyUzCTP4kmy7FJA
m+hBJly6tmPotegn0hydO3htNeHw0Mn3Dh1IlMjCvVlXIkzYuKTb1RnuCbKl
YPsgn48m1Gke9M3Q9vFy2WVlYEV7M9YXd666ozBWMpbs7NJzlBnFSwRGDbsb
I49dZEpnbzOGXn8fm/h7tDz74OlbeNKMwvYNNvQZ81j+/GTvdDjajBoXXjv7
93soq8JrPmzzxgzLyYQjTmn3JcfVNvDStxb4tP7OO2L+XWkW5+PQu6UFI/rY
L/X8JlIO7P/5jKW3BY/anJl7wT9czqyZMT5gtAUpvz01XegcJp1d3k73mWVB
61C/xPWBIkMaRsVdWmHBuKaO7/pbrsiN6Ncbmm6xIHlVRG6H74Pl+jO7YdY9
FoxsEukv085JdJ7FUv6gBfbLur0Pdg+U93dW3DgQYEH8qTJV31Twl7ptL/YL
PGZBq9LfNapbYrN0+mtceOfjFrS5UqOnzev58DFPcBpz1IJyhRu9BozZixXB
D8/VPmRBnrv/4FdRAah2q1XKuj8ssLaoNuFFyinEJ5d1O/q7BSHpTge6zryA
8r+vDVq33oJf65R1f28KQadNtSu2XWbBdz/e6uDmeg1Xu+wJDHa3wOabDzsq
j7yBhmXez6090oJF99ZFrfEOQ1JsQPvZX6/PjPlxf2acDMfo1Vv2XXawIPDA
3wPLPboNm+dzbEtVt+DVtuSAzLw7qFun2//c/mdGxrstIQOL34ezzPB8aDLj
5anvCtrYRqHJ61U+bhFm7K9ZqcTsBo8w5tL6ajWOmpHq1GLcu52PMcnz4M3S
X+/3hla/+vTfFY2SHfbVbjfejKM2nf2CfGJgm7F1+7FuZjxa77Hpmy2xaFdl
x5jp1cz4FJpjGr0mDm77fv5rw0sTznQYd3jf4nh0r35/eJnbJmz4o3eX4KkJ
yEupMPzNfhOamuzXBf2SiHm55iGDZ5kwJvbO7dlf32unQzsyWvYwIT2v+qGP
zZ7i3ujd87ZV+vq8X4yt2at8EvzaTR/pmZaBYbFlt/Z6kYTLZ3reLTyZAVQs
daLgfjI++dxJqL80A9lZgxcMOJqCf35PXpLdMwPdvyvV1Xl5KmI9h20cXT4D
vR7Z//Fs4DP4TwiPWBufjiYjp88r2yANfoebPXb3+/rvgtuZEc/TUHrCWQfb
8enYuujBSe/R6Rg7cu6gzU3S0XVxXIj79XR4ujpVDoxNw9UhHVZvr5eBhs18
Gr0anobwVe335K/IQI8i72t/fPoMs/an79uWkoG1/1b4Ln7kM3T6aHae2MmE
LwfwYVtiKuLOT18+53cTzn6s5d1+SCpOVara+JzVBJuS5wYkPEiBR2F2r++d
zIhKiQ1d0SsF8w7OeBe52ww3t2nVu15JxrWpl6fvzzHDt+nxpbVaJSMEfhbf
zhac+zT0iZ1/Eqpa7oSEb7Dgy5oPpRZUSkJbhyoDaiRYcGu27cVSXk9h73uh
zp4GmWj+4ac5L/KeoIj37gudp2eic5LXkY7Dn2Bi8unjxS5kYqmUPvTiRiK6
rBh39OX7TPRwubirnl0iTjZLm1jYNQuewQXbErYnIHpIwInWXlko1iXZu96/
8bC7mtVvtWQhv5vjkFIj41G2cc3mb75kodqS5cF7rsZhW9VFbVf/kI3b338e
llI7Dg0rrxnfamE2Do05IibPWBzsdDr07alsFLtWz/1icgyuh5p+SbJk483C
vy/+2jkGu+zt+j2pkYPFb7s9/2d3NKZW6B/2sn8OsjtW7js1/zFOh616UW9F
Doq8zMlM6fcYjX6qVW7qqRx0mOJxIcjlEf4N7/hbZFIOOu8e43TtUxTWr/bs
1q1ULn6ec8K1aNADbPg5+sMdh1x0W+m0b8eI+5j7T/3304bn4ua7/sFeJe5h
w6o6h+stz4XNyOymltN30P9umVm5/rlwNP3tGjs8Eg55XnG3w3LhUWnJovGF
ERgV5TIqxJSLHpv8Hxw9Eo5ZYa02Xylixf3rcdMvutxCnTnhHx/VtqLZlkUj
Dr+4iYCYgb3edbDi7g+N1nj73MDMHn+Vbe1qxczubrsyJl/HqyHWd0snWRH/
2w9v3xy/ivJHAkPjllpx+2Hj49NzL2FQl01Ve2yxYuUIn7LzmgXj1ZF+1676
WeE2+cXE1pMvwHIsyKNvkBV55dbmPDp0FolTBtc3h1jxfvyKyW+uBWFz1Zsr
toVZERf0OeCU41EUFPw476f7VvQaeWFz/WP+aBSXnlIlxopj/fxLd22/Bwj/
5djzBCtubiy3L639OgxyKHcz4akVg5c9WfJPUkTXFIcK9R8lWTF5vfF1cebX
XV2M75e+/P4/Rhj/v9Ti/39If778jz9/i34+WcPPd0o/v1zi57fV30+S+Pv9
qL+/vObvP02vj7Tn9Vmj108+BOj1K6/XVxJ5fQP1+ss8Xv+Sen/kEO9PgN4/
seH9a6L3V37l/R2i918G8P4X1edDbPl8JI0wnh+x4/NzQJ8v8eTzVUmfP3Hl
81dHn0+Zzefz313G8ytT+fwW0edbEvh857wwnn+x4fMfoe+HLOL7MV3fH3Hj
+xOr75cs4vuVddV4/ySI7982fT9lM9/PQH1/5d23+v4W1/db1vL9TtT3X15+
r+9/8g/G+iDvruj6MFjXD/Hn+lFT1xdZxfVltK4/UpPrTzldn6Qt1ycbXb8k
aa2uX766volln65vSbr+SQWuf9t1fZTnZl0fF+j6KVu5frbQ9VXWcn09oOuv
tOP6+7iEsT5LT67P83X9luVcv6/q+i6Lub7/pOu/vPig6//nwnf/zQdpwPnw
vKkxP2Q750dTnS8ygfOlq84fKVik8+fZeGM+SQ/Op/k6v2TBG51fq3W+ydMR
Ot9O6/yTAw91/j3S+ShZtjof43R+ylDOz606X+V8BZ2vC3T+ytUYnb++Op+l
PedzOZ3f0ozzu6fOd7kfo/P9os5/2ZCh8/8bzQcSul/zQWfND+LE/PC5spEv
pDvzRXq6kT/EjvnjcXsjn0hF5pPWml/E3FLzS3PNNzKM+SY738g/sqCG5h8b
zUdy4KTmo8TaRn6SpW81Pz34x8hXcmKr5it7zV9y9k/NX16az2TxXM1nltJG
fpP1dzW/LdJ8J8GlNd+93GjkP3GE5r/7PkY+FMdamg+3aX6UnamaH8PCjHwp
/o01X/bR/CneUzR/jtV8Kj3faT5N9TfyqwzfoPn1saORb6VXPc23gZp/ZdEF
zb/TNR+LdaXm4980P8tgO83PQzVfy7m1mq+LaP6Wq3aavx/+ZORzaX1D8/lA
ze9Sb4Lm996a77/mbM33IbFG/pfovpr/52g/kNdttB8U1f4gs05rf7DTfiFb
/9Z+4aL9Q5I6aP9YpP1EwthPRmh/kVvsL92030j1Etpv7LX/yDH2n9Haj6SQ
/ejv7kZ/ks7DtD/V1H4ltqHarxpq/5IZU7V/Zd02+pkM8tV+lnXb6G/ikKP9
zfu20e9khoP2O3NLo/9J1aLa/3ZrP5St7IcttD9KnX3aH/v+YfRL+cR+ObeE
0T/lOvvnjgNGP5U49tOCB0Z/lY3srwsWGP1WTrHfVnQ0+q/MY/8dbzL6sZQO
0378pYLRn6UX+3Otyka/lhns1w+tRv+Wqezf85oZ/VwK2M8n7zH6u0SwvyfM
Nvq9eLHfz4ox+r9Esv//e8LwAblDH1i0wPADyaAf/HDT8AUpQ18Ynm/4gzyl
PwyqZ/iE2NAnTKMMv5C29IuzvQ3fkOe11Tciwwz/kJb0j/GXDB+RYfSR4JuG
n8gB+knTtYavyDn6SvX2hr/Ik1LqL9Guhs9IWqj6TEiY4TcSEal+E/y6xH++
I2mz1HfOJRn+g1H0n7HnDR/CEvrQH6sNP8J6R/Wj3EaGL2EMfSm/aOB//oQy
9KfzJw2fggN9auY0w68wlH717WjDt7B4v/pWlbaGfyEoUv2reLzhY3Cmj22u
YvgZ1j5TP+vta/gaHOlr47wMf8PFG+pvY7MMn8PFmupze5IMv8O5dep3IfsN
34PnO/W9Rn8Z/gf8rv630tHwQUzcqT6YoX6IpvTDcUcMX8T7xeqLm34x/BHb
Pqs/flGfxPCi6pOr1C/hfk/9suVrwzdR0lN9c7f6JzLXqH9+UR9FHWf10eYN
DD9F6mn106Pqq7jkqL4arf6K3Ynqr3b7DZ+Fm1V91lv9FhsXqt/a/mj4LorY
qu8+Vv/FzSXqv3bqwzi/XH34sPoxDt9XP/5bfRmNbNSX6c+gP3ejP4P+DPoz
6M+gP4P+DPoz6M+gP4P+DPoz6M+gP4P+DPoz6M+gP4P+DPoz6M/Yw+s7ysW4
vqA/g/4M+jPoz6A/g/4M+jPoz6A/g/4M+jPoz6A/g/4M+jPoz6A/g/4M+jPo
z6A/g/6M3erP6KL+DPoz6M+gP4P+DPoz6M+gP4P+DPoz6M+Yo/6MSurPGKP+
jGf6/oL+DPoz6M+gP4P+DPoz6M+gP4P+DPoz6M+gP2PMUcOfpb36M+jPQn8G
/Vnoz3BVfxZb9Wf0U3+WbF0fQX8W+jNeqz/LXF1fQX8W+jO6qz9LefVn/Kn+
LIN0/UZ2A13f6c9wUn+WfF3/QX8W+jO2qz+LWecH2qg/ywOdLygep/PnvM4f
tFR/llk6n3Bc/VlO6/wC/Vnoz6A/C/0Z9GehP6O5+rM01vkJ+rPQn0F/Fvoz
6M/ipfMZ9GehP4P+LPRnnFB/Fl+d/xit/iyRmg9Afxb6M+jPQn8G/Vnozyiq
/ixFNJ9gqfqzXFZ/xir1Zzmr/gz6s9CfsZj5KEr9GU3Un+W8+jPuMV+5a77C
Duav6pq/EMx8Nk39GfRnoT+D/iz0Z9Cfhf6Mg8yHNdWfsZr5kf4M+rPQn0F/
Fvoz6M9Cfwb9WXLUn9FR/Vnyrhn5FvRnoT+D/iz0ZwjzM/0Zj5mvU9Sf8YH5
++BpI3+jvvqzBH5j5HN0Vn8Wh1Ajv8tO5vv8L0a+Fy/m/4rTjfwv36k/i0NL
ox/IU/aHLerPUkH9Wa6qP0tH9Wdpqf4s9GdxUH+WuurP8lj9WZ6y3/RSf5Yx
7D871J+lrPqzBKs/C/1ZstWfpTf7VevTRr8S+rMcVH8W+rMkaz+TqexvS9Wf
hf4s9GehP8td7X/SXv1ZUrQfCv1ZErQ/Sk/2y1nqz2Jl/2ys/izz2U9/UX8W
+rN80v4qd9hvC7Tfii/77xj1Z6E/S2/1Z6E/S4r2Z8lmvx6h/ixx7N9t1Z/F
j/28l/qzHGR/r67+LCXUn2Wv9nsZx/7fWv1ZltIHrqsPSD31Z7mlfiC91Z9l
svqCrKM/tFZ/lhIH1SeuqE/IOfrFFfULqaj+LN7qGxJN/5iv/iFj6SOX1Efk
MP0kSP1EztNXbNSfxWat+ksd9Re5TJ9prP4sLeg3xdSfpTV9Z6r6jiyn/3RU
//na79SHzqgPyRz6UbL6kRRVfxb6s+TSn+jPUo8+tVt9SsLpVy3Un2Uvfeuk
+pbQn+WB+pfk0scC1cfEk342Rf1MLPS14+prUkH9WezU36Q7fS5ffU5aqD/L
DvU7GU3f81Tfk170v2nqf5JAH9ytPihV1J/lF/VDcaEv1ldflPH0R3f1R+lN
n5ypPimh9Es79UspRd8MUt+UcPrnVPVPAX205FDDR+Up/bSK+rMcp6+OUV+V
/fTXAvVXGUCfLVCflVD67X31W/l2gvrudvVduUL//aj+K9PVn6Wd+rCsUH+W
XurHMm2z+vKP6stSfu03m21e3L2Wof4s0zaoT/fj1+N/Ur925vefUH8G/VmK
0r9f8Oe70cd9+PnO0c+D+fnb0dfN/P060d/pz7KFPt+H1+c6/b4Mr18N+j79
Wa7S/914/T9v1v0BP96f89w/KM/7V5r7C0N4f525/9CD978C9ycq8fmIUn9G
az4/9Gcs4vNVnPsfg/j80Z+xhM9nivozJvL5/TBZ91ei+Xy/UX+GLZ//G9yf
Wcb3Yzz3b0bx/bnL/Z0tfL+s6s/YyfdvJfeHZvH9PM39owL1Z/l3se4vTeH7
ncT9J4v6s6SqPyNN/VmGc/8qkOtHPe5vzeH6MoL7XzW4/lTh/lhHrk//e6/7
Z/Hqz7KP+2tZ6s+SwP23z610/fPi/ly6+rMs5v7dRq6fTbm/58319U/u/3Xk
+hut/owOXJ9ncP9wPtfv69xfXMb1fQD3H0ty/S/G/UkHzod/1J+xm/PDmfub
GzlfenD/swjnD/0Z3Tif6M+gP8sK7q8GqD/Lde6/ivqzxHJ/tijnYzz3b504
P3dyfzdF/Vnmc//3uvqzHOL+sCvncxXuHw/j/O7F/eV76s9yjfvPJ9WfpTT3
p6+qPwv9GeOZH4pzf3sc80WG+jMaMH88VH9GceYTe+6fh6s/S0Pur7sw3+Tl
c/9d/VnKcH8+QP1ZstSfEar+LPRn0J+lCff/3dWf5RDPB1Sep/ksWf0Z9urP
Mp/nC9aoP8sL9We0VX+WUPVnDK2p+XAtzy9MVH+WW+rPeKP+LB14/mHPJM2f
fXk+YvYbzacF6s+w7tH8mqD+jJBamm+P8/zFNvVnLOT5jK1emo89eH6jYjPN
z8483zHaW/N1SZ7/8FN/RrT6M8reYD7n+ZGc8Zrfm/F8ib/6M66pP+OI+jNm
8nxKM0ftB7Y8v1JJ/RnVeb4lT/0ZfXn+5aX6M1byfEww+8lInp95yP7iyvM1
+ew3zXn+JpD9ZyLP5ySzH11Rf4ad+jM+h+j5nj7qz6A/g/6MF+rPGKX+jFfq
z6il/gz6M+jPeK7+jDLqz5jH80nB7If0Z9CfsVz9GXnsl/Rn0J9Bfwb9GbfU
n3GQ/fW0+jP+Yr992kbPX3mx/9KfQX8G/Rn0ZzioP2M++zX9GfRnLFN/xif2
c/oz6M/4fo6eL1vMfr9X/RnC/k9/Bv0Z9urPyKQf0J9Bfwb9GfRnJKg/ozR9
4oT6M9rQLx6qPyNL/Rn0Z9Cf8TFEz+cNpo8E3tLze4foJ7Jaz/fRn0F/Bv0Z
9GfQn0F/Bv0Zy9IMf0aq+jPoz0J/xoSLej5xOn3Ia42eX1yp/gz6s9CfQX8W
+jPoz0J/Bv1Z6M9Yr/4ss9SfQX8W+jPoz0J/Bv1Z6M+gPwv9GRXUnyVG/Rn0
Z6E/g/4s9GfQn4X+DPqz0J9Bfxb6Mxpc1vOrxeiH9GehP4P+LPRn0J+F/gxP
np+dq/6M0erP4uKhvkl/Fvoz6M9Cfwb9WejPoD8L/RlHeP43+Yn6K/1Z6M+g
Pwv9GfRnoT+D/iz0Z9Cfhf4M+rPQn0F/Fvoz/g9QHZnC
               "]]}, 
             {RGBColor[1, 0.5, 0], 
              PointBox[{-0.5173766444854807, 0.5018931753714473}], InsetBox[
               StyleBox[
                SubscriptBox["\<\"X\"\>", "4"],
                StripOnInput->False,
                
                FontSize->
                 20], {-0.5173766444854807, 0.5018931753714473}, {-1, 1}]}, \
{}, {}, 
             {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
              PolygonBox[{{
               1.2903099971337186`, -0.12186934340514771`}, \
{-1.0854162434723003`, -0.5503476998889569}, {-0.5877292092052995, 
               0.8919675666904934}}], 
              PointBox[{{
               1.2903099971337186`, -0.12186934340514771`}, \
{-1.0854162434723003`, -0.5503476998889569}, {-0.5877292092052995, 
               0.8919675666904934}}]}}}},
          ImageSize->300,
          PlotLabel->FormBox[
            StyleBox["\"a/b=1.300\"", 20, StripOnInput -> False], 
            TraditionalForm]]},
        {
         GraphicsBox[{
           {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.352, 1.}]}, {
            {RGBColor[0, 0, 1], Thickness[Large]}, 
            {PointSize[Large], FaceForm[None], 
             {GrayLevel[0.5], Dashing[{Small, Small}], 
              LineBox[{{-1.352, 0}, {1.352, 0}}], LineBox[{{0, -1}, {0, 1}}], 
              PointBox[{0, 0}]}, 
             {RGBColor[1, 0.5, 0], Thickness[Large], LineBox[CompressedData["
1:eJxV2nVclvf3BnAsdGLnxBYL3OyOXeYQp3MGYMzAmrlZqBjoVECdiEyxC3Um
YGBhHbEQsRCQVB7yAREerNn683efa398/9n+4CVxP/fnnHO9z6f+uD8GTyxq
ZWX14Ot//v//tX6rPGDlQbNE3/v5XmhahUsfqif2OLHbLB3KooTZ6ohEb2rv
0HOVWTzL5nk4/Rsmv21qbu3sZpY+9TZkLZ52TY77vZ9Vs5lZJHnZrMp3IiXP
JrBSUla2bFud7P3M5oG8Dip7x+yfLY87ekW8bBgjn9u+uh7UIlsa2pfzvNH8
kfhVuNItULLE13WmuWGTRLG+srN7/55ZcizE0vRfmxTJ2N2nVc9zmXJgWMCf
PZKfSHaDgF52DTJl9JOfPmyLNMmNqDamrcsyZMe2F+er1kgXn/Aln4fFpktm
B7/2g0dmSEil8wtt66TL3kV1px30yxTvt73+2Dk6TZY9fzl6+eksafbk9qb9
m0zS9m5sw0l3smV43WELc31T5XyRX/flxZhl4fYJPgdMj8XbdX2j8Kgcsb7u
5fFNkxQp1mfm+cOhuTK3+5Tem8clyc8j/5qy+K+nss1r5aB7GxPku1mletkN
yZPlwasnNJRHknhx1aBtpZ+Jb8JgKZ4RKyFHe8wtOPFMPj6N87pXJEamfJzR
pKtTvtg3W+4WUytarswwdQ95kC9bX4VfD5p6T1pOqXpgcd8CCX6S077a1tvy
wGOfVd7xAul3qm2BfcRNKStu7o6lLZJzYtTSsm+uypk6ZcflDrVILVNlt9XO
l8Xa8Z+GLf0tcs7PYeW4W2ckxv17y59ikQmjRlfrvzFEphx8fbifySKD5zV/
0GPB7q+/X8Xs9y8tMrfv3A+rMsZKm7XN06w/WGT51p4dnqduQ80ba7dnvbbI
pWtWdovCjuJggo9VhSyLrBt7rVhO5ilUSgmvbxVpkZY5n1+537sAS9C1lS33
WuSxncP8Oz+Fo2fpQ8trzrLI5UP3lozcfR2VW3YM69zeIqt7bi9skxaBAy/O
r7V+USANj/jYhVWIwuO728Je7y+QOqX2zpzw/T00Tn/xavHAAtkZ62p22/4A
mYtKbC/3Il8m9djQvmu1hzi/dPNUW998mTO7aJCtTwyqF3PoX7Z+vgSnR1VK
zY/FDP+yDQeFPJNqlfLiZ/d7hFujfgnp3+6ZdPLrP+Pmjnhsq+s/fvyZPDEV
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
xd0CDPE423nXqwi8z90TOLCwANYJiaOdFt1ERli74C0VLNiSca3jHasb+KH1
pVV3m1uwwmtxbmeva+hwP/NTfj8LtiYnLDlc6ipGFHNPejfBgtxZJQqb/XUF
7Y91LSxcbEFcxyqDg2pcxsLfP1eJ+duC6Cv+xRfUvICyh8c02HPAgiehhb7p
Nc/hgHPia9dzFpSs1nZa5ZqngVFHZr6PsKDX58SirWucROiGqPk+cRZsDps7
MOq7EFRsn/Xys8kCm6ZXOhxtdAhzsvtEj31qwd5p5xsPrr0X62yTvwQ9t6BD
0vSUWk23oNkrhzkZ/1rg3wbdwpquQsLSgQ2Kv7eg0dhRJUY03NI1ZdDLkuU/
WOCgX5dj/Po3+u+lJ//9av3+sorf30l/vnjw5x/W30+s+ft11d9f7vP3L6d/
n7Tj35emf7+s599/XZ+P/Pd8EvT5yWQ+vzR9vtKGz9dPn7/8xOe/QD8fsePn
46+fn3Ti51deP195xM93sH7+8pKff7C+H7KM78cYfX8kge8P3y+Zw/drs75/
Mp/v33N9P2UC388n+v7Km0R9fyP1/RYrvt8P9P2XYL7/aXo+ZBrPR1k9P/K+
qZ6fSXq+RHi+MvX8SSDPX2k9n9Ke5zNNz6948Pz21/MtH47q+Z6k51928vx/
Km3UB/k4WuvDvx+N+iENWD/aaX2R3DJaX5pq/RF71p/8AqM+SX3Wp0itX3LV
Q+tXgNY3mcz6tlDrn7Ri/bPV+iierI+2Wj+lC+vnhw1GfZV9rK+rtf6K6U+t
v+u1PosX6/MFrd9SkvX7mNZ3+ZoGjfqerfX/a07U+u+l/UGGsT900P4hZdg/
jmh/kXbsL321/8izRtp/vtX+JBvYn6D9S6591P41VvubfDmh/W2O9j/ZxP73
h/ZHsThqf3TR/ild2T+LaX+VnKraX921/8rDgdp//9T+LPfZn2O1f4sL+/cm
7e+ygv39bXmj/8uHCO3/q3U+kN6cD+x1fpBynB+66HwhxThftND5Q4Lsdf7I
1flEXDifeOv8Im6cX6x0vpHmnG/etjbmH+nJ+SdI5yOJKK7zUW2dn8R3vc5P
BSZjvhIbzleuOn/JEs5f23Q+kxd/63zmqfObOD7V+e2GzndS6pLOd9Y6/8mo
ZJ3/mul8KAtydD48rPOjNNqu82N5nS9lvaPOl7t0/pS1b3T+bKvzqVzsqPNp
M51f5XxvnV8fvzHmW1l7W+fbSJ1/xb6Tzr9TdT6WWr/pfNxL52fxqXbCmJ/n
6XwtjyvqfG1KN+ZvafZK5++pOp/LxQM6n786Zczvkv2Nzu+VdL6X1dY63+/S
+V9So3T+76L5QDo5aT4QzQ9iG675wVHzhWzZrPkifI+RP+SvWM0fR6cb+UTG
rdd8ErzHyC/yXarmFxfNN3KK+SbC28g/ks7801/zkTTapPmopuYnGflO81OI
5itxHK/5qqLmLwlh/uqh+UwGd9d81kPzm3S+pPmtteY76R2u+a6P5j/ZzPyX
MM3Ih/Ka+fBVGyM/ygPmR1/NlxLNfHla86csYP6so/lUrAs0n7prfpVizTS/
Omm+lQjm29qaf6W2jebfupqPZT/zcWXNz3Kc+bm75msJY76+fMXI3/Lnf/m7
lJHP5SPz+YeqRn6X1czvprFGvpcg5vuGt438L1uY/23UBySUPpBrZfiBFNIP
Jq4zfEH20BcKKxj+IKn0h25phk/IPPrEqlmGX0gt+gW6G74hQt+YFWP4h0TT
P4pZGz4iNegjfQ8ZfiL/+UkKDF+RDfSVyH8Mf5FXLdRfUuobPiMt6TORGYbf
yF36TaeRhu9IZrL6zqOLhv+IN/1n/grDh8R0XX1o2jnDj/DqL/WjHj6GL2EG
fenuVMOf8OmA+tOlAMOn4E2feptl+BW2/ah+lRJq+BbG0LcKzhj+hQ2X1b8K
TYaP4Vf6mOO/hp/h4WT1s2++M3wNw+hr0XmGv6HIf/6WZPgcEo+oz8WFGH6H
avS7Y96G78Fzpvre4R6G/2HlCPW/0jcMH4Rrb/XBR+qH6EU//L2e4Yu4a6W+
uEr9Eb531B8/q09iW6H6ZPvKhl/Cd6H6ZbL6JurRN2vdMfwTV7eqf7ayM3wU
yx6rjzbZY/gpvnFVP+2gvgq3YPXVi+qvaOCi/urQzvBZBDRRn60VbPgtmndQ
vy1dxvBdfPRR341W/8X2ePXfJerD+FxLfThR/RhLS6kfW31r+DIiiqgv059B
f+5Gfwb9GfRn0J9Bfwb9GfRn0J9Bfwb9GfRn0J9Bfwb9GfRn0J9Bfwb9GfRn
0J/xUP0ZXurPoD+D/gz6M+jPoD+D/gz6M+jPoD+D/gz6M+jPoD+D/gz6M+jP
oD+D/gz6M+jPoD+D/ozH6s9Yof4M+jPoz2it/owbej5Afwb9Genqz7ip5wv0
Z9CfMeCkns8gPZ/4mKrnt4T6M+jPoD+D/gz6M+jPoD9jTnetH/bqz6A/C/0Z
9GehP8PNTetTTfVnXFF/lmdav0B/Fvoz9qg/S231Z9Cfhf4M+vN/9RMT1Z+l
ltZX0J+F/oxf1J8lQusz6M9Cf0ag+rPM1PoOa/VnSdP6D/qz0J9Bfxb6M8LZ
X/Zrf8Fa9WeZoP0HMerPslL7ExzVn8VZ+xfoz0J/xgv1Z+mn/Q/0Z6E/g/4s
9GccYH+lP4P+LPRn+LE/059Bfxb6M+jPQn9GHvv/KO3/yOF8sEXnA9Cfhf4M
+rPQn0F/FvozAjmf/KP+jHOcX/5Wf8Y2zjdP1J9Bfxb6M15xPrKoP2MQ5ycr
nZ+wm/OVp/ozyqs/S3+dv0B/Fvoz6M9Cfwb9WejPoD8L/RkrOR/OU39GAedH
Z/Vn0J+F/gz6s9CfQX8W+jO6qT+Lj/ozIjnfnlN/Bv1Z6M+gPwv9GQs5P9vn
Gf6M45yv284y5muxcP5e0dWYv4X+LEPVn4X+LE7qzzKX8/0L9WdJ5vy/Qf1Z
nJgPflZ/FvqzzFF/lqHMF9vVn6U188dl9WcpZD75Tf1Z6M/irf4sUcw3furP
4s7880Xzj1RSf5aFmo+kB/NTM/VnSWK++kf9WejPMkPzl9RgPjuk+Uz2M7+d
0/wm9GehP4sz81979WdxZj6covlQ+jM/3tT8KPuYL3dpvpTq6s+yQP1ZjjOf
Rmo+FfqzbNP8Kv7Mt0VbG/lW1jD/NlV/lqbMx0PUn2Ui8/Mfmp9lIfN1ffVn
oT/LKc3fMpn5/Dv1Z3Fhfq+o/iwNme8va76XX5n/66k/yxn6wAz1AelMP6in
fiAb6QvL1BfkJf2B/iy36BOt1Z/lNv2isfqFXKBvHFHfEPqzvFX/kGLqz3JM
fUTa0U+c1U+kOX1lt/qKBNJfXNVfZAt9ZpP6jKTQb4qqP8s7+o6L+o50of8M
UP+RvvQhe/VnKar+LMPVj6SM+rPYqz/LXPrTHfUnGUOfslN/llz61V71KylK
3+qrviX59K9L6l8ynj52R31MbOlnbdWfJZ++tl19TUz0t83qbxJHn6M/i4l+
V0X9WUrdU99br7739Tmq/3mr/8lK+uBy9UFxox8mqh9KLH0xQH1RutIfSz81
/FFs6JMp6pPiS78cqH4po+ib36tvykb6J/1ZHtBHHdVHJZl+Okz9VI7TV4up
r8oX+iv9WT5XVZ+lP0sF+u1Z9VsJoe8WV9+Vd03Uf+eq/4qZPrxLfVjK0o8b
qh+LYzv15evqy3Lv57GBUW9OXIxTfxb7turTd/h1z0T166b891vo27/x+x/T
nw93/vxJ9PEv7fT3+8/Pz/P3b05f/4F/XwL9fRv//if0+feH9PlU6KR+P53P
L5O+34TP9xD9vx+f/1zuB5ry89nJ/UFDfn7v4nW/kMvPdyD3Dx/Vn+US9xPe
fD96c39xhu/PDO43FvH98uT+w4XvXx73I5P4fj7k/sSG7+8t7lfK8P1+yP3L
Gr7/qdzPrOP5KMH9jRXPz8/c7wTzfBVw/7OR568k90OteT4zuD/6jee3L/dL
9Gf5nfunAJ7///ZT5Vgf3qk/oxbrxw/cb2WqP0tz7r9+Yv1hfUIr1ifh/uyW
+rP4cr82hvVtFfdvjqx/5bmfm8H6WJv7O/qz5Ko/Yznrqzf3f+msvwHcD85j
fT7F/WHuWa3fodwvflJ/lkzuH9PVn8WT+8l+7A+tuL/8UEn7xyHuNxuzv/Tm
/jNT/Vmqcz86n/2J/gz6s4zifjVb/VncuX+dw/43i/vZt+rPMoj72xrsnyW4
332r/iwzuP8V9WehP+OK+rPEc388lv17I/fL09nf89SfcUr9WdZyPz2B80FL
7q8ncX7oxP12ec4Xbbn/Pqn+LCbux1twPlnF/fl4zi/vnut+3YHzzRv1Zwzg
/BPK/fxr9Wex4/7eW/1Z6M+gP8tw7v8Xcv7ay/sBaerPspj3Bz7k6vx2n/cL
hqg/iw3vH2xTf5bmvJ/ws/qz7OH9herqz1KV9xvOqD/LFd5/GPFO589WvB9x
UP1ZmvP+xDn1ZzGpP2NDlM63obx/UdBe59/feT/jx6k6H4P3N0JbG/6MBbzf
cbmSzteZ6s+Ie6nz93TeDzmg/ozn6s8IU39Gcd4vcS2p8z39GfRntOL9lJXq
zwjj/ZWm6s+gP4P+jEfqzxio/ox49eevOV3zyT71ZwxRfwb9GfRn0J9Bf8Yv
vJ9jrf6Myry/M475KYz3e5zUn0F/Bv0ZzXk/yEv9GUN4f8hK/RkuvF/0hvlu
BO8fuTP//av+jETmQ/oz6M9YwftNd5kvV/H+ky/zJ/0Z9Ge48f5UVfVnDOD9
qnDm20a8f9VQ/Rm9eD9rLfMx/RmhzM8/8n5XOPM1/Rn0Z1xTf4aVi+Zz+jPo
z6A/g/6M1erP8GL+pz+D/gz6M+jPoD+D/gz6M+jPWJ32P/fjQH8G/RkTu//P
/TrQn0F/xmL1Z9SmjwxQf8Zd+klEd73ft5e+Qn8G/Rn0Z9CfQX8G/Rlh6s/I
UX8G/Rn0Z9CfQX/GpEruxv3FVPVn0J+F/gz6s9CfcXeD3o9cR5+iPwv9Gb1O
6f3KUfQt+rPQn5Gcpvczu9PH6M9Cfwb9WejP8FF/llr0N/qz0J9Bfxb6M+jP
Qn8G/VnozzjN+6lL1J8xcofeX7W4qB/Sn4X+DPqz0J9Bfxb6M+jPQn8G/Vno
z6A/C/0Z9GehP4P+LPRn0J+F/gz6s9CfQX8W+jPc1J+lTDv1W/qz0J9Bfxb6
M+jPQn8G/Vnoz6A/C/0Z/wcyeqbm
               "]]}, 
             {RGBColor[1, 0.5, 0], 
              PointBox[{0.0036300702445077704`, 0.9993847649420661}], InsetBox[
               StyleBox[
                SubscriptBox["\<\"X\"\>", "4"],
                StripOnInput->False,
                
                FontSize->
                 20], {0.0036300702445077704`, 0.9993847649420661}, \
{1.25, -1.25}]}, {}, {}, 
             {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
              PolygonBox[{{
               1.2922321560073424`, -0.29404032523230367`}, \
{-1.2931136852806895`, -0.29191248330481867`}, {0.0036305736398192234`, 
               0.9999963944800393}}], 
              PointBox[{{
               1.2922321560073424`, -0.29404032523230367`}, \
{-1.2931136852806895`, -0.29191248330481867`}, {0.0036305736398192234`, 
               0.9999963944800393}}]}}}},
          ImageSize->300,
          PlotLabel->FormBox[
            StyleBox["\"a/b=1.352\"", 20, StripOnInput -> False], 
            TraditionalForm]]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], 
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.51, 1.}]}, {
        {RGBColor[0, 0, 1], Thickness[Large]}, 
        {PointSize[Large], FaceForm[None], 
         {GrayLevel[0.5], Dashing[{Small, Small}], 
          LineBox[{{-1.51, 0}, {1.51, 0}}], LineBox[{{0, -1}, {0, 1}}], 
          PointBox[{0, 0}]}, 
         {RGBColor[1, 0.5, 0], Thickness[Large], LineBox[CompressedData["
1:eJxV2nlYzfkXB/CyFLKlIWsYJDP2NcvM0QxZB5MxGUaDIUNZisiUNY3MJEnE
iMpWISWhiIMkWSsk7ft+722/N8LP7563P2b+mHk885S63+/nnPN+nU/f5eut
VjbT0dFJ+vSv//+3o03ukKE6VTy+1rfffYeWt7wV0y7HKlXs8uvrhRnWMTzu
YaZS/4aKD40zmpE8NZGDZ014fXO5iien/mtZm5XC+Zmzc8+VKXmgY3/LrR/S
+Jt9doEFc5XccXfSboumbO4zadiFlCMK7p/RryhxVT5fGLilp9GdSvZpVfU0
xLyI2zhVd//zaQX7uht8564oYZcF+UGt75bz0OaJae5u5Tyib2JBsX8ZJ0W/
/2GMppK7lA4+PO/3Ul7+zn+F+wwV+/R5+cfhLiXce3b7myU3qvidd/T7NjFF
3Opy/vqyW9X8elybTS1/KOTDB1slLAyr4TmnHVKev8xnZd1w53qPWp5t+PPC
s1Z5bNNtVcr5eXUcfqjouPXBHJ41z76LZ4t6Xm0+NCLLIZONLUNck87Us3Vh
ll/0zDe8eJqewfMRDZxh91i5u3cqX99Pi99eaOAjlcuP+dSmcF71P2szjdR8
8uq3axWHnvMJ07STndaoubm7tUYxM5FnnOGXM8LV/Mxe5WNmGMdfWGVVTihU
84b3NxvNUmN4sc4t5+DWGh4wYcqX+x0v8MRbisc/99FwK4ORu7PNtnHX+Vtt
jAZpeNA518E9I07T6m6/uoX01/DjX1sNcrW4SuPct23INdJw1L9J390eeYe2
/Gjku1ut5r2dJ/SbHhhPt46aj7RKUvOqVIVdXckjGn4hYUq7ADV7nLGtWNAi
ifZ80cfPboWaL5x5ePL5zhRqylxmbNJXzWOCzuv1KXtJ011if372qoHbPL7k
3fOb19QUGjbSxK2BLS1e6Ue5vqHUG7ZBwYMa+Enpvc0VwRkUML3peFNiPV9q
ZzUt43YWhc1z7Ru8op7vBc8MuHg3h5a4us0Z9LaO31jtcp2Vlkt26bbu7/+u
401eJW+V8Xm0QrHj9BHjOh70V+KVktB80p18fPLSwFoe9cA0YemeAvq6WV39
7QG1vG5rvziPBYV018fjfMeQmk+fU1i1d68iGlZQkX9xYA1HHi27cTGziE7N
0DMqOlPNbuUXuxseKib/4m1VLfpU8y8nZg6sm1xCJeE371sdq+JhbXuGeBaX
0DLj67c6GFbxW/exNwz3lNKS47y1qr2KD+rn7LrRrYy++TBtmkejgvfeXlFy
K7iMEs6tmDAnv5KDdg+wsRpaTn5jVj4KSqzgErtjUWFh5fRnf68uGeHl7KVa
XNnCtIKCJ2y2nXW4jMsHWHTz9Kug/YeDT3/zZyl/SPK33Nyski5kuz9psCnh
+CkNy+ptK2nEFweWXvu+mDOWOH81Ib6SRt/r8eCaWRG3m7ij/6ZeCjJZ9jx0
SPtC9nS85p28XkEHf6ixnl2Xz3fbzLTdEaug1p3rO0zOyOOoMzfmhjZXUnrd
UquRcbmsMa4J3TpVSfGJaiufhTl8wMrCvdtuJQ0d9/zNnCFZrIp+GxwRoyTz
+pa66S0yePLRlT4rK5U0Ijek17qcNB5x7Lnbku4qqg3es33yrVRWHfLYGfu9
ijZviE7adfIlL318fOHZP1Q0blOFq41bCiu29A4fv09Fo2yD3n+wS+JX8Rrd
f8+qqO2EaTYdLz9h51bqy0W3Pv15SvbIcT4POalxsMHEFBUF+PVbHe5yn3Wd
HH+4nq+i7LZX50asvcOBU5qiNqtUtHJwZce0pGieveLtbl+Nil62fVbaOy2C
F7oN0/v6g4pymqf9+kVBEGsW30wepFNF+yf5rmif6sC2g4dmm35UUchtW8OV
3v+S0bAdS2PfqmiMV+8H885epJxN25p/Xauiq5ffXemivEqTjnR97VGqoshW
z3qO3nyLAjIzBlWkq8hcv0vaGqd7FGqz1dv2kYqCzi86WT7gAd0ZYaJof11F
oYGbHT2eJFLIl16b1YEqKnYO+23M6qfk0tiSR3qoKJYP9K7ZlkR+iQU3UuxV
1PeAT8KU71IoamznhNI5Kmp4X3Nuv+5Lulw9K9x9qIp0DTfbPbz5iuZrNFdi
DFS0bEjssuoNr+nrZR28fYuV9CI0wrZl3ze079KB7QNYSY8CB6TrPkmn548z
yeWwki4l7PEpdMgk88YMkzOrlbQxbUfyhU7ZlNEsrz5sopKm37w4/udLOdRn
1B+jzhkoaeShbcsdTuVS9PaA7GNvFBRq27jEzC6PJjncOX74rIKUU16lzh2R
Tw9XTYo4++n9+7rtmKiSunzaGxKrlzpOQYu9NjWqrhbQ3mL1yJEfKunJkQ5x
f2wqpB63bZzi71XS8EdPvrcaXkQJlwNv/+teSWmmpvculhWR3yCDK7GWlVRo
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
JObrszJ/86CtMn8/k/mcRwbJfP6vzO/cBfO7h8z3bKEn8725zP/shPn/tuQD
7hwu+aCd5Aeet1/yw3jJFzwlQvJFmeQP/vE3yR9zJZ+wYwvJJ6Mlv7BHe8kv
RyTfsOkQyTfZm7T5h4e0l/zzRvIRr0U+Wi/56dPXSX5Kk3zFY5Gv7kn+Yt1V
kr96SD77lKsknwVJfmMPB8lvjUe1+Y6vhEi+e+unzX9snCf5Tyn5kPWRD1dL
fuRLyI/Jki95wiPJl5GSP7kM+dNX8il/j3z6k+RXfon8+nCCNt/yauTbI5J/
2Q35d77kYz6LfFwk+ZnjkZ99JF+zAvl6jeRvfoX8HSX5nGOQz2dJfudi5Pcl
ku/5PfK9leR/3or8v1Z8gJ/DB8oNtH7A2+EHhf5aX2DDCPGFHuIP/BD+MFd8
guPgEwFWWr/gRfCLSeIb/Aq+4R+v9Q+eCf8Ictf6CH8JHxkpfsKb4Cc3xVfY
Hr7SIP7Ci+AvTW21PsM34TN/it/wRfiNhfgOp8F3nB5p/YebnRf/MQjU+hDP
hw+1ED/i9/Cjg6e1vsTu8KU1r7T+xEPhT5ZGWp/iGPiU+TGtX/E6+FWjtda3
eAh8a9tprX/xGvhXj5+0PkbN4WONU7R+Rt3hZ5bNYv/vazQavma8XutvVPWj
+FvxXq3PUWf4XGS01u9oKfwuWKH1vU+5W3zP117rf3QQ/qco0vogvbMUHzQe
r/VDUk4VPywQX6Tx8MXD4o80Bv5YIz5JLvDJfeZav6R28MvZB7W+SQ8ixDc1
4p90Z5b45yrxUYp6Kz66X/yUyq+Ln4aIr9LNZuKr9uKvtGeP+OtvZlqfpfl6
4rMW4rd0Ml381kp8l4bvEt/VydL6Ly3ZIP57RXyYlr8SH54kfkxDxoof+4kv
011r8WX4M8Gfv4E/E/yZ4M8Efyb4M8GfCf5M8GeCPxP8meDPBH+mNPFn6ib+
TPBngj8T/JngzwR/JvgzFZTI53tb/JngzwR/JvgzwZ8J/kzwZ4I/E/yZjPH8
/5TnT/Bngj8T/JngzwR/JvgzwZ8J/kzwZ4I/E/yZ4M/0QvyZJsr7TfBngj9T
qvgzLZTzQfBngj9Tz3ZyvkzkfBH8meHP5LZYzue3cj7pm+Nyfp3l/BL8meHP
BH9m+DPBnxn+TPGoH2qpHwR/ZvgzwZ8Z/kw7/lufqHOZ1K8TUr8I/szwZ4I/
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
+DPDnwn+zPBn+h9LwOp+
           "]]}, 
         {RGBColor[1, 0.5, 0], 
          PointBox[{-0.5884780035240722, 1.2209372229547444`}], InsetBox[
           StyleBox[
            SubscriptBox["\<\"X\"\>", "4"],
            StripOnInput->False,
            
            FontSize->
             20], {-0.5884780035240722, 1.2209372229547444`}, \
{1.25, -1.25}]}, {}, 
         {PointSize[Medium], Thickness[Large], 
          PointBox[{{-0.43764319888514736`, 
           1.1231947723864522`}, {-0.7026682697357736, 
           0.9984419893531052}, {-0.46466706113286366`, \
-0.2911552372541334}}], 
          {RGBColor[0, 0, 1], 
           Dashing[{Small, Small}], {
            LineBox[{{
             1.4970817406744537`, -0.1305261922200509}, {-0.7026682697357736, 
             0.9984419893531052}}], 
            LineBox[{{-1.403996289576875, -0.3680680187471345}, \
{-0.46466706113286366`, -0.2911552372541334}}], 
            LineBox[{{-0.5644516714712553, 
             0.9275056825603072}, {-0.43764319888514736`, 
             1.1231947723864522`}}]}, 
           {RGBColor[1, 0.5, 0], 
            LineBox[{{
             1.4970817406744537`, -0.1305261922200509}, {-0.5884780035240722, 
             1.2209372229547444`}}], 
            LineBox[{{-1.403996289576875, -0.3680680187471345}, \
{-0.5884780035240722, 1.2209372229547444`}}], 
            LineBox[{{-0.5644516714712553, 
             0.9275056825603072}, {-0.5884780035240722, 
             1.2209372229547444`}}]}}}, 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{
           1.4970817406744537`, -0.1305261922200509}, {-1.403996289576875, \
-0.3680680187471345}, {-0.5644516714712553, 0.9275056825603072}}], 
          PointBox[{{
           1.4970817406744537`, -0.1305261922200509}, {-1.403996289576875, \
-0.3680680187471345}, {-0.5644516714712553, 0.9275056825603072}}]}}}},
      ImageSize->500,
      PlotLabel->FormBox[
        StyleBox["\"a/b=1.510\"", 20, StripOnInput -> False], 
        TraditionalForm]]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{0}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.787671437620393*^9, 3.78767156048899*^9}, 
   3.787673432324276*^9, {3.7878548150407763`*^9, 3.787854830494619*^9}, 
   3.7881927734963474`*^9, 3.7881928067663364`*^9, 3.7897221683464565`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{"\"\<0045_ort_loci\>\"", ",", "orthicLociPlot3"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7862669850076447`*^9, 3.786267007184881*^9}, {
   3.7862671127441835`*^9, 3.786267115447952*^9}, {3.786267161906032*^9, 
   3.786267162623744*^9}, {3.7862700736633544`*^9, 3.7862700800631804`*^9}, {
   3.7867003953689203`*^9, 3.786700396200282*^9}, 3.7876715751357822`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"orthicLociKinkPlot", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Show", "[", 
        RowBox[{"#", ",", 
         RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], "&"}], "/@", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"showOrt", "[", 
         RowBox[{"1.51", ",", 
          RowBox[{"-", "1"}], ",", 
          RowBox[{"drP1", "\[Rule]", "False"}], ",", 
          RowBox[{"p1Dist", "->", ".25"}], ",", 
          RowBox[{"drOrthic", "\[Rule]", "True"}], ",", 
          RowBox[{"x4displ", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.5"}], ",", "0"}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"showOrt", "[", 
         RowBox[{"1.51", ",", 
          RowBox[{
           RowBox[{"-", "9.1"}], "+", "4.5"}], ",", 
          RowBox[{"drP1", "\[Rule]", "False"}], ",", 
          RowBox[{"p1Dist", "->", ".25"}], ",", 
          RowBox[{"drOrthic", "\[Rule]", "True"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"showOrt", "[", 
         RowBox[{"1.51", ",", 
          RowBox[{
           RowBox[{"-", "13.1"}], "+", "4.5"}], ",", 
          RowBox[{"drP1", "\[Rule]", "False"}], ",", 
          RowBox[{"p1Dist", "->", ".25"}], ",", 
          RowBox[{"drOrthic", "\[Rule]", "True"}], ",", 
          RowBox[{"drOrthicLocus", "\[Rule]", "True"}]}], "]"}]}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "24"}], "}"}]}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<(a)\>\"", ",", "\"\<(b)\>\"", ",", "\"\<(c)\>\""}], 
       "}"}]}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7752414372134604`*^9, 3.775241598030326*^9}, {
  3.7752418011331515`*^9, 3.775241804941723*^9}, {3.7752421114059467`*^9, 
  3.775242115806177*^9}, {3.775242909452265*^9, 3.7752429511081324`*^9}, {
  3.7752430085325375`*^9, 3.7752431173000116`*^9}, {3.786267026408477*^9, 
  3.7862670278815365`*^9}, {3.7862671211766043`*^9, 3.7862671268085723`*^9}, {
  3.787854844280919*^9, 3.7878548602096806`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.51, 1.}]}, {
        {RGBColor[0, 0, 1], Thickness[Large]}, 
        {PointSize[Large], FaceForm[None], 
         {GrayLevel[0.5], Dashing[{Small, Small}], 
          LineBox[{{-1.51, 0}, {1.51, 0}}], LineBox[{{0, -1}, {0, 1}}], 
          PointBox[{0, 0}]}, 
         {RGBColor[1, 0.5, 0], Thickness[Large], LineBox[CompressedData["
1:eJxV2nlYzfkXB/CyFLKlIWsYJDP2NcvM0QxZB5MxGUaDIUNZisiUNY3MJEnE
iMpWISWhiIMkWSsk7ft+722/N8LP7563P2b+mHk885S63+/nnPN+nU/f5eut
VjbT0dFJ+vSv//+3o03ukKE6VTy+1rfffYeWt7wV0y7HKlXs8uvrhRnWMTzu
YaZS/4aKD40zmpE8NZGDZ014fXO5iien/mtZm5XC+Zmzc8+VKXmgY3/LrR/S
+Jt9doEFc5XccXfSboumbO4zadiFlCMK7p/RryhxVT5fGLilp9GdSvZpVfU0
xLyI2zhVd//zaQX7uht8564oYZcF+UGt75bz0OaJae5u5Tyib2JBsX8ZJ0W/
/2GMppK7lA4+PO/3Ul7+zn+F+wwV+/R5+cfhLiXce3b7myU3qvidd/T7NjFF
3Opy/vqyW9X8elybTS1/KOTDB1slLAyr4TmnHVKev8xnZd1w53qPWp5t+PPC
s1Z5bNNtVcr5eXUcfqjouPXBHJ41z76LZ4t6Xm0+NCLLIZONLUNck87Us3Vh
ll/0zDe8eJqewfMRDZxh91i5u3cqX99Pi99eaOAjlcuP+dSmcF71P2szjdR8
8uq3axWHnvMJ07STndaoubm7tUYxM5FnnOGXM8LV/Mxe5WNmGMdfWGVVTihU
84b3NxvNUmN4sc4t5+DWGh4wYcqX+x0v8MRbisc/99FwK4ORu7PNtnHX+Vtt
jAZpeNA518E9I07T6m6/uoX01/DjX1sNcrW4SuPct23INdJw1L9J390eeYe2
/Gjku1ut5r2dJ/SbHhhPt46aj7RKUvOqVIVdXckjGn4hYUq7ADV7nLGtWNAi
ifZ80cfPboWaL5x5ePL5zhRqylxmbNJXzWOCzuv1KXtJ011if372qoHbPL7k
3fOb19QUGjbSxK2BLS1e6Ue5vqHUG7ZBwYMa+Enpvc0VwRkUML3peFNiPV9q
ZzUt43YWhc1z7Ru8op7vBc8MuHg3h5a4us0Z9LaO31jtcp2Vlkt26bbu7/+u
401eJW+V8Xm0QrHj9BHjOh70V+KVktB80p18fPLSwFoe9cA0YemeAvq6WV39
7QG1vG5rvziPBYV018fjfMeQmk+fU1i1d68iGlZQkX9xYA1HHi27cTGziE7N
0DMqOlPNbuUXuxseKib/4m1VLfpU8y8nZg6sm1xCJeE371sdq+JhbXuGeBaX
0DLj67c6GFbxW/exNwz3lNKS47y1qr2KD+rn7LrRrYy++TBtmkejgvfeXlFy
K7iMEs6tmDAnv5KDdg+wsRpaTn5jVj4KSqzgErtjUWFh5fRnf68uGeHl7KVa
XNnCtIKCJ2y2nXW4jMsHWHTz9Kug/YeDT3/zZyl/SPK33Nyski5kuz9psCnh
+CkNy+ptK2nEFweWXvu+mDOWOH81Ib6SRt/r8eCaWRG3m7ij/6ZeCjJZ9jx0
SPtC9nS85p28XkEHf6ixnl2Xz3fbzLTdEaug1p3rO0zOyOOoMzfmhjZXUnrd
UquRcbmsMa4J3TpVSfGJaiufhTl8wMrCvdtuJQ0d9/zNnCFZrIp+GxwRoyTz
+pa66S0yePLRlT4rK5U0Ijek17qcNB5x7Lnbku4qqg3es33yrVRWHfLYGfu9
ijZviE7adfIlL318fOHZP1Q0blOFq41bCiu29A4fv09Fo2yD3n+wS+JX8Rrd
f8+qqO2EaTYdLz9h51bqy0W3Pv15SvbIcT4POalxsMHEFBUF+PVbHe5yn3Wd
HH+4nq+i7LZX50asvcOBU5qiNqtUtHJwZce0pGieveLtbl+Nil62fVbaOy2C
F7oN0/v6g4pymqf9+kVBEGsW30wepFNF+yf5rmif6sC2g4dmm35UUchtW8OV
3v+S0bAdS2PfqmiMV+8H885epJxN25p/Xauiq5ffXemivEqTjnR97VGqoshW
z3qO3nyLAjIzBlWkq8hcv0vaGqd7FGqz1dv2kYqCzi86WT7gAd0ZYaJof11F
oYGbHT2eJFLIl16b1YEqKnYO+23M6qfk0tiSR3qoKJYP9K7ZlkR+iQU3UuxV
1PeAT8KU71IoamznhNI5Kmp4X3Nuv+5Lulw9K9x9qIp0DTfbPbz5iuZrNFdi
DFS0bEjssuoNr+nrZR28fYuV9CI0wrZl3ze079KB7QNYSY8CB6TrPkmn548z
yeWwki4l7PEpdMgk88YMkzOrlbQxbUfyhU7ZlNEsrz5sopKm37w4/udLOdRn
1B+jzhkoaeShbcsdTuVS9PaA7GNvFBRq27jEzC6PJjncOX74rIKUU16lzh2R
Tw9XTYo4++n9+7rtmKiSunzaGxKrlzpOQYu9NjWqrhbQ3mL1yJEfKunJkQ5x
f2wqpB63bZzi71XS8EdPvrcaXkQJlwNv/+teSWmmpvculhWR3yCDK7GWlVRo
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
JObrszJ/86CtMn8/k/mcRwbJfP6vzO/cBfO7h8z3bKEn8725zP/shPn/tuQD
7hwu+aCd5Aeet1/yw3jJFzwlQvJFmeQP/vE3yR9zJZ+wYwvJJ6Mlv7BHe8kv
RyTfsOkQyTfZm7T5h4e0l/zzRvIRr0U+Wi/56dPXSX5Kk3zFY5Gv7kn+Yt1V
kr96SD77lKsknwVJfmMPB8lvjUe1+Y6vhEi+e+unzX9snCf5Tyn5kPWRD1dL
fuRLyI/Jki95wiPJl5GSP7kM+dNX8il/j3z6k+RXfon8+nCCNt/yauTbI5J/
2Q35d77kYz6LfFwk+ZnjkZ99JF+zAvl6jeRvfoX8HSX5nGOQz2dJfudi5Pcl
ku/5PfK9leR/3or8v1Z8gJ/DB8oNtH7A2+EHhf5aX2DDCPGFHuIP/BD+MFd8
guPgEwFWWr/gRfCLSeIb/Aq+4R+v9Q+eCf8Ictf6CH8JHxkpfsKb4Cc3xVfY
Hr7SIP7Ci+AvTW21PsM34TN/it/wRfiNhfgOp8F3nB5p/YebnRf/MQjU+hDP
hw+1ED/i9/Cjg6e1vsTu8KU1r7T+xEPhT5ZGWp/iGPiU+TGtX/E6+FWjtda3
eAh8a9tprX/xGvhXj5+0PkbN4WONU7R+Rt3hZ5bNYv/vazQavma8XutvVPWj
+FvxXq3PUWf4XGS01u9oKfwuWKH1vU+5W3zP117rf3QQ/qco0vogvbMUHzQe
r/VDUk4VPywQX6Tx8MXD4o80Bv5YIz5JLvDJfeZav6R28MvZB7W+SQ8ixDc1
4p90Z5b45yrxUYp6Kz66X/yUyq+Ln4aIr9LNZuKr9uKvtGeP+OtvZlqfpfl6
4rMW4rd0Ml381kp8l4bvEt/VydL6Ly3ZIP57RXyYlr8SH54kfkxDxoof+4kv
011r8WX4M8Gfv4E/E/yZ4M8Efyb4M8GfCf5M8GeCPxP8meDPBH+mNPFn6ib+
TPBngj8T/JngzwR/JvgzFZTI53tb/JngzwR/JvgzwZ8J/kzwZ4I/E/yZjPH8
/5TnT/Bngj8T/JngzwR/JvgzwZ8J/kzwZ4I/E/yZ4M/0QvyZJsr7TfBngj9T
qvgzLZTzQfBngj9Tz3ZyvkzkfBH8meHP5LZYzue3cj7pm+Nyfp3l/BL8meHP
BH9m+DPBnxn+TPGoH2qpHwR/ZvgzwZ8Z/kw7/lufqHOZ1K8TUr8I/szwZ4I/
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
+DPDnwn+zPBn+h9LwOp+
           "]]}, 
         {RGBColor[1, 0.5, 0], 
          PointBox[{-0.9914588609010546, 0.19744316166036083`}], InsetBox[
           StyleBox[
            SubscriptBox["\<\"X\"\>", "4"],
            StripOnInput->False,
            
            FontSize->
             20], {-0.9914588609010546, 0.19744316166036083`}, {-1.5, 0}]}, \
{}, 
         {EdgeForm[{RGBColor[0.5, 0, 0.5], Thickness[Large]}], 
          PolygonBox[{{-1.1376470727125685`, 
           0.21000306734121899`}, {-0.8751416004900201, 
           0.6275373873915528}, {-0.8372157787400416, -0.5211930954754322}}], 
          {RGBColor[0.5, 0, 0.5], 
           PointBox[{{-1.1376470727125685`, 
            0.21000306734121899`}, {-0.8751416004900201, 
            0.6275373873915528}, {-0.8372157787400416, \
-0.5211930954754322}}]}}, {}, 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{
           1.5097700196861508`, -0.01745240643728146}, {-1.207292892662071, \
-0.6006238702544453}, {-1.0966278227514905`, 0.6874374489384041}}], 
          PointBox[{{
           1.5097700196861508`, -0.01745240643728146}, {-1.207292892662071, \
-0.6006238702544453}, {-1.0966278227514905`, 0.6874374489384041}}]}}}},
      ImageSize->400,
      PlotLabel->FormBox[
        StyleBox["\"a/b=1.510\"", 20, StripOnInput -> False], 
        TraditionalForm]], 
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.51, 1.}]}, {
        {RGBColor[0, 0, 1], Thickness[Large]}, 
        {PointSize[Large], FaceForm[None], 
         {GrayLevel[0.5], Dashing[{Small, Small}], 
          LineBox[{{-1.51, 0}, {1.51, 0}}], LineBox[{{0, -1}, {0, 1}}], 
          PointBox[{0, 0}]}, 
         {RGBColor[1, 0.5, 0], Thickness[Large], LineBox[CompressedData["
1:eJxV2nlYzfkXB/CyFLKlIWsYJDP2NcvM0QxZB5MxGUaDIUNZisiUNY3MJEnE
iMpWISWhiIMkWSsk7ft+722/N8LP7563P2b+mHk885S63+/nnPN+nU/f5eut
VjbT0dFJ+vSv//+3o03ukKE6VTy+1rfffYeWt7wV0y7HKlXs8uvrhRnWMTzu
YaZS/4aKD40zmpE8NZGDZ014fXO5iien/mtZm5XC+Zmzc8+VKXmgY3/LrR/S
+Jt9doEFc5XccXfSboumbO4zadiFlCMK7p/RryhxVT5fGLilp9GdSvZpVfU0
xLyI2zhVd//zaQX7uht8564oYZcF+UGt75bz0OaJae5u5Tyib2JBsX8ZJ0W/
/2GMppK7lA4+PO/3Ul7+zn+F+wwV+/R5+cfhLiXce3b7myU3qvidd/T7NjFF
3Opy/vqyW9X8elybTS1/KOTDB1slLAyr4TmnHVKev8xnZd1w53qPWp5t+PPC
s1Z5bNNtVcr5eXUcfqjouPXBHJ41z76LZ4t6Xm0+NCLLIZONLUNck87Us3Vh
ll/0zDe8eJqewfMRDZxh91i5u3cqX99Pi99eaOAjlcuP+dSmcF71P2szjdR8
8uq3axWHnvMJ07STndaoubm7tUYxM5FnnOGXM8LV/Mxe5WNmGMdfWGVVTihU
84b3NxvNUmN4sc4t5+DWGh4wYcqX+x0v8MRbisc/99FwK4ORu7PNtnHX+Vtt
jAZpeNA518E9I07T6m6/uoX01/DjX1sNcrW4SuPct23INdJw1L9J390eeYe2
/Gjku1ut5r2dJ/SbHhhPt46aj7RKUvOqVIVdXckjGn4hYUq7ADV7nLGtWNAi
ifZ80cfPboWaL5x5ePL5zhRqylxmbNJXzWOCzuv1KXtJ011if372qoHbPL7k
3fOb19QUGjbSxK2BLS1e6Ue5vqHUG7ZBwYMa+Enpvc0VwRkUML3peFNiPV9q
ZzUt43YWhc1z7Ru8op7vBc8MuHg3h5a4us0Z9LaO31jtcp2Vlkt26bbu7/+u
401eJW+V8Xm0QrHj9BHjOh70V+KVktB80p18fPLSwFoe9cA0YemeAvq6WV39
7QG1vG5rvziPBYV018fjfMeQmk+fU1i1d68iGlZQkX9xYA1HHi27cTGziE7N
0DMqOlPNbuUXuxseKib/4m1VLfpU8y8nZg6sm1xCJeE371sdq+JhbXuGeBaX
0DLj67c6GFbxW/exNwz3lNKS47y1qr2KD+rn7LrRrYy++TBtmkejgvfeXlFy
K7iMEs6tmDAnv5KDdg+wsRpaTn5jVj4KSqzgErtjUWFh5fRnf68uGeHl7KVa
XNnCtIKCJ2y2nXW4jMsHWHTz9Kug/YeDT3/zZyl/SPK33Nyski5kuz9psCnh
+CkNy+ptK2nEFweWXvu+mDOWOH81Ib6SRt/r8eCaWRG3m7ij/6ZeCjJZ9jx0
SPtC9nS85p28XkEHf6ixnl2Xz3fbzLTdEaug1p3rO0zOyOOoMzfmhjZXUnrd
UquRcbmsMa4J3TpVSfGJaiufhTl8wMrCvdtuJQ0d9/zNnCFZrIp+GxwRoyTz
+pa66S0yePLRlT4rK5U0Ijek17qcNB5x7Lnbku4qqg3es33yrVRWHfLYGfu9
ijZviE7adfIlL318fOHZP1Q0blOFq41bCiu29A4fv09Fo2yD3n+wS+JX8Rrd
f8+qqO2EaTYdLz9h51bqy0W3Pv15SvbIcT4POalxsMHEFBUF+PVbHe5yn3Wd
HH+4nq+i7LZX50asvcOBU5qiNqtUtHJwZce0pGieveLtbl+Nil62fVbaOy2C
F7oN0/v6g4pymqf9+kVBEGsW30wepFNF+yf5rmif6sC2g4dmm35UUchtW8OV
3v+S0bAdS2PfqmiMV+8H885epJxN25p/Xauiq5ffXemivEqTjnR97VGqoshW
z3qO3nyLAjIzBlWkq8hcv0vaGqd7FGqz1dv2kYqCzi86WT7gAd0ZYaJof11F
oYGbHT2eJFLIl16b1YEqKnYO+23M6qfk0tiSR3qoKJYP9K7ZlkR+iQU3UuxV
1PeAT8KU71IoamznhNI5Kmp4X3Nuv+5Lulw9K9x9qIp0DTfbPbz5iuZrNFdi
DFS0bEjssuoNr+nrZR28fYuV9CI0wrZl3ze079KB7QNYSY8CB6TrPkmn548z
yeWwki4l7PEpdMgk88YMkzOrlbQxbUfyhU7ZlNEsrz5sopKm37w4/udLOdRn
1B+jzhkoaeShbcsdTuVS9PaA7GNvFBRq27jEzC6PJjncOX74rIKUU16lzh2R
Tw9XTYo4++n9+7rtmKiSunzaGxKrlzpOQYu9NjWqrhbQ3mL1yJEfKunJkQ5x
f2wqpB63bZzi71XS8EdPvrcaXkQJlwNv/+teSWmmpvculhWR3yCDK7GWlVRo
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
JObrszJ/86CtMn8/k/mcRwbJfP6vzO/cBfO7h8z3bKEn8725zP/shPn/tuQD
7hwu+aCd5Aeet1/yw3jJFzwlQvJFmeQP/vE3yR9zJZ+wYwvJJ6Mlv7BHe8kv
RyTfsOkQyTfZm7T5h4e0l/zzRvIRr0U+Wi/56dPXSX5Kk3zFY5Gv7kn+Yt1V
kr96SD77lKsknwVJfmMPB8lvjUe1+Y6vhEi+e+unzX9snCf5Tyn5kPWRD1dL
fuRLyI/Jki95wiPJl5GSP7kM+dNX8il/j3z6k+RXfon8+nCCNt/yauTbI5J/
2Q35d77kYz6LfFwk+ZnjkZ99JF+zAvl6jeRvfoX8HSX5nGOQz2dJfudi5Pcl
ku/5PfK9leR/3or8v1Z8gJ/DB8oNtH7A2+EHhf5aX2DDCPGFHuIP/BD+MFd8
guPgEwFWWr/gRfCLSeIb/Aq+4R+v9Q+eCf8Ictf6CH8JHxkpfsKb4Cc3xVfY
Hr7SIP7Ci+AvTW21PsM34TN/it/wRfiNhfgOp8F3nB5p/YebnRf/MQjU+hDP
hw+1ED/i9/Cjg6e1vsTu8KU1r7T+xEPhT5ZGWp/iGPiU+TGtX/E6+FWjtda3
eAh8a9tprX/xGvhXj5+0PkbN4WONU7R+Rt3hZ5bNYv/vazQavma8XutvVPWj
+FvxXq3PUWf4XGS01u9oKfwuWKH1vU+5W3zP117rf3QQ/qco0vogvbMUHzQe
r/VDUk4VPywQX6Tx8MXD4o80Bv5YIz5JLvDJfeZav6R28MvZB7W+SQ8ixDc1
4p90Z5b45yrxUYp6Kz66X/yUyq+Ln4aIr9LNZuKr9uKvtGeP+OtvZlqfpfl6
4rMW4rd0Ml381kp8l4bvEt/VydL6Ly3ZIP57RXyYlr8SH54kfkxDxoof+4kv
011r8WX4M8Gfv4E/E/yZ4M8Efyb4M8GfCf5M8GeCPxP8meDPBH+mNPFn6ib+
TPBngj8T/JngzwR/JvgzFZTI53tb/JngzwR/JvgzwZ8J/kzwZ4I/E/yZjPH8
/5TnT/Bngj8T/JngzwR/JvgzwZ8J/kzwZ4I/E/yZ4M/0QvyZJsr7TfBngj9T
qvgzLZTzQfBngj9Tz3ZyvkzkfBH8meHP5LZYzue3cj7pm+Nyfp3l/BL8meHP
BH9m+DPBnxn+TPGoH2qpHwR/ZvgzwZ8Z/kw7/lufqHOZ1K8TUr8I/szwZ4I/
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
+DPDnwn+zPBn+h9LwOp+
           "]]}, 
         {RGBColor[1, 0.5, 0], 
          PointBox[{-0.8291547302947813, 0.8442379008786433}], InsetBox[
           StyleBox[
            SubscriptBox["\<\"X\"\>", "4"],
            StripOnInput->False,
            
            FontSize->
             20], {-0.8291547302947813, 0.8442379008786433}, {1.25, -1.25}]}, \
{}, 
         {EdgeForm[{RGBColor[0.5, 0, 0.5], Thickness[Large]}], 
          PolygonBox[{{-0.8254843429577923, 
           0.8427843368395572}, {-0.8317417425034926, 
           0.8376512797736556}, {-0.6674168466211138, -0.3696652712830567}}], 
          {RGBColor[0.5, 0, 0.5], 
           PointBox[{{-0.8254843429577923, 
            0.8427843368395572}, {-0.8317417425034926, 
            0.8376512797736556}, {-0.6674168466211138, \
-0.3696652712830567}}]}}, {}, 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{
           1.5051361064689333`, -0.08019892432885793}, {-1.3411966559722643`, \
-0.45943826382943914`}, {-0.8280858229753446, 0.8362153525656637}}], 
          PointBox[{{
           1.5051361064689333`, -0.08019892432885793}, {-1.3411966559722643`, \
-0.45943826382943914`}, {-0.8280858229753446, 0.8362153525656637}}]}}}},
      ImageSize->400,
      PlotLabel->FormBox[
        StyleBox["\"a/b=1.510\"", 20, StripOnInput -> False], 
        TraditionalForm]], 
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.51, 1.}]}, {
        {RGBColor[0, 0, 1], Thickness[Large]}, 
        {PointSize[Large], FaceForm[None], 
         {GrayLevel[0.5], Dashing[{Small, Small}], 
          LineBox[{{-1.51, 0}, {1.51, 0}}], LineBox[{{0, -1}, {0, 1}}], 
          PointBox[{0, 0}]}, 
         {RGBColor[1, 0.5, 0], Thickness[Large], LineBox[CompressedData["
1:eJxV2nlYzfkXB/CyFLKlIWsYJDP2NcvM0QxZB5MxGUaDIUNZisiUNY3MJEnE
iMpWISWhiIMkWSsk7ft+722/N8LP7563P2b+mHk885S63+/nnPN+nU/f5eut
VjbT0dFJ+vSv//+3o03ukKE6VTy+1rfffYeWt7wV0y7HKlXs8uvrhRnWMTzu
YaZS/4aKD40zmpE8NZGDZ014fXO5iien/mtZm5XC+Zmzc8+VKXmgY3/LrR/S
+Jt9doEFc5XccXfSboumbO4zadiFlCMK7p/RryhxVT5fGLilp9GdSvZpVfU0
xLyI2zhVd//zaQX7uht8564oYZcF+UGt75bz0OaJae5u5Tyib2JBsX8ZJ0W/
/2GMppK7lA4+PO/3Ul7+zn+F+wwV+/R5+cfhLiXce3b7myU3qvidd/T7NjFF
3Opy/vqyW9X8elybTS1/KOTDB1slLAyr4TmnHVKev8xnZd1w53qPWp5t+PPC
s1Z5bNNtVcr5eXUcfqjouPXBHJ41z76LZ4t6Xm0+NCLLIZONLUNck87Us3Vh
ll/0zDe8eJqewfMRDZxh91i5u3cqX99Pi99eaOAjlcuP+dSmcF71P2szjdR8
8uq3axWHnvMJ07STndaoubm7tUYxM5FnnOGXM8LV/Mxe5WNmGMdfWGVVTihU
84b3NxvNUmN4sc4t5+DWGh4wYcqX+x0v8MRbisc/99FwK4ORu7PNtnHX+Vtt
jAZpeNA518E9I07T6m6/uoX01/DjX1sNcrW4SuPct23INdJw1L9J390eeYe2
/Gjku1ut5r2dJ/SbHhhPt46aj7RKUvOqVIVdXckjGn4hYUq7ADV7nLGtWNAi
ifZ80cfPboWaL5x5ePL5zhRqylxmbNJXzWOCzuv1KXtJ011if372qoHbPL7k
3fOb19QUGjbSxK2BLS1e6Ue5vqHUG7ZBwYMa+Enpvc0VwRkUML3peFNiPV9q
ZzUt43YWhc1z7Ru8op7vBc8MuHg3h5a4us0Z9LaO31jtcp2Vlkt26bbu7/+u
401eJW+V8Xm0QrHj9BHjOh70V+KVktB80p18fPLSwFoe9cA0YemeAvq6WV39
7QG1vG5rvziPBYV018fjfMeQmk+fU1i1d68iGlZQkX9xYA1HHi27cTGziE7N
0DMqOlPNbuUXuxseKib/4m1VLfpU8y8nZg6sm1xCJeE371sdq+JhbXuGeBaX
0DLj67c6GFbxW/exNwz3lNKS47y1qr2KD+rn7LrRrYy++TBtmkejgvfeXlFy
K7iMEs6tmDAnv5KDdg+wsRpaTn5jVj4KSqzgErtjUWFh5fRnf68uGeHl7KVa
XNnCtIKCJ2y2nXW4jMsHWHTz9Kug/YeDT3/zZyl/SPK33Nyski5kuz9psCnh
+CkNy+ptK2nEFweWXvu+mDOWOH81Ib6SRt/r8eCaWRG3m7ij/6ZeCjJZ9jx0
SPtC9nS85p28XkEHf6ixnl2Xz3fbzLTdEaug1p3rO0zOyOOoMzfmhjZXUnrd
UquRcbmsMa4J3TpVSfGJaiufhTl8wMrCvdtuJQ0d9/zNnCFZrIp+GxwRoyTz
+pa66S0yePLRlT4rK5U0Ijek17qcNB5x7Lnbku4qqg3es33yrVRWHfLYGfu9
ijZviE7adfIlL318fOHZP1Q0blOFq41bCiu29A4fv09Fo2yD3n+wS+JX8Rrd
f8+qqO2EaTYdLz9h51bqy0W3Pv15SvbIcT4POalxsMHEFBUF+PVbHe5yn3Wd
HH+4nq+i7LZX50asvcOBU5qiNqtUtHJwZce0pGieveLtbl+Nil62fVbaOy2C
F7oN0/v6g4pymqf9+kVBEGsW30wepFNF+yf5rmif6sC2g4dmm35UUchtW8OV
3v+S0bAdS2PfqmiMV+8H885epJxN25p/Xauiq5ffXemivEqTjnR97VGqoshW
z3qO3nyLAjIzBlWkq8hcv0vaGqd7FGqz1dv2kYqCzi86WT7gAd0ZYaJof11F
oYGbHT2eJFLIl16b1YEqKnYO+23M6qfk0tiSR3qoKJYP9K7ZlkR+iQU3UuxV
1PeAT8KU71IoamznhNI5Kmp4X3Nuv+5Lulw9K9x9qIp0DTfbPbz5iuZrNFdi
DFS0bEjssuoNr+nrZR28fYuV9CI0wrZl3ze079KB7QNYSY8CB6TrPkmn548z
yeWwki4l7PEpdMgk88YMkzOrlbQxbUfyhU7ZlNEsrz5sopKm37w4/udLOdRn
1B+jzhkoaeShbcsdTuVS9PaA7GNvFBRq27jEzC6PJjncOX74rIKUU16lzh2R
Tw9XTYo4++n9+7rtmKiSunzaGxKrlzpOQYu9NjWqrhbQ3mL1yJEfKunJkQ5x
f2wqpB63bZzi71XS8EdPvrcaXkQJlwNv/+teSWmmpvculhWR3yCDK7GWlVRo
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
JObrszJ/86CtMn8/k/mcRwbJfP6vzO/cBfO7h8z3bKEn8725zP/shPn/tuQD
7hwu+aCd5Aeet1/yw3jJFzwlQvJFmeQP/vE3yR9zJZ+wYwvJJ6Mlv7BHe8kv
RyTfsOkQyTfZm7T5h4e0l/zzRvIRr0U+Wi/56dPXSX5Kk3zFY5Gv7kn+Yt1V
kr96SD77lKsknwVJfmMPB8lvjUe1+Y6vhEi+e+unzX9snCf5Tyn5kPWRD1dL
fuRLyI/Jki95wiPJl5GSP7kM+dNX8il/j3z6k+RXfon8+nCCNt/yauTbI5J/
2Q35d77kYz6LfFwk+ZnjkZ99JF+zAvl6jeRvfoX8HSX5nGOQz2dJfudi5Pcl
ku/5PfK9leR/3or8v1Z8gJ/DB8oNtH7A2+EHhf5aX2DDCPGFHuIP/BD+MFd8
guPgEwFWWr/gRfCLSeIb/Aq+4R+v9Q+eCf8Ictf6CH8JHxkpfsKb4Cc3xVfY
Hr7SIP7Ci+AvTW21PsM34TN/it/wRfiNhfgOp8F3nB5p/YebnRf/MQjU+hDP
hw+1ED/i9/Cjg6e1vsTu8KU1r7T+xEPhT5ZGWp/iGPiU+TGtX/E6+FWjtda3
eAh8a9tprX/xGvhXj5+0PkbN4WONU7R+Rt3hZ5bNYv/vazQavma8XutvVPWj
+FvxXq3PUWf4XGS01u9oKfwuWKH1vU+5W3zP117rf3QQ/qco0vogvbMUHzQe
r/VDUk4VPywQX6Tx8MXD4o80Bv5YIz5JLvDJfeZav6R28MvZB7W+SQ8ixDc1
4p90Z5b45yrxUYp6Kz66X/yUyq+Ln4aIr9LNZuKr9uKvtGeP+OtvZlqfpfl6
4rMW4rd0Ml381kp8l4bvEt/VydL6Ly3ZIP57RXyYlr8SH54kfkxDxoof+4kv
011r8WX4M8Gfv4E/E/yZ4M8Efyb4M8GfCf5M8GeCPxP8meDPBH+mNPFn6ib+
TPBngj8T/JngzwR/JvgzFZTI53tb/JngzwR/JvgzwZ8J/kzwZ4I/E/yZjPH8
/5TnT/Bngj8T/JngzwR/JvgzwZ8J/kzwZ4I/E/yZ4M/0QvyZJsr7TfBngj9T
qvgzLZTzQfBngj9Tz3ZyvkzkfBH8meHP5LZYzue3cj7pm+Nyfp3l/BL8meHP
BH9m+DPBnxn+TPGoH2qpHwR/ZvgzwZ8Z/kw7/lufqHOZ1K8TUr8I/szwZ4I/
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
+DPDnwn+zPBn+h9LwOp+
           "]]}, 
         {RGBColor[1, 0.5, 0], 
          PointBox[{-0.48353528695352993`, 1.3218165237780588`}], InsetBox[
           StyleBox[
            SubscriptBox["\<\"X\"\>", "4"],
            StripOnInput->False,
            
            FontSize->
             20], {-0.48353528695352993`, 1.3218165237780588`}, \
{1.25, -1.25}]}, {}, 
         {EdgeForm[{RGBColor[0.5, 0, 0.5], Thickness[Large]}], 
          PolygonBox[{{-0.2912457143171204, 
           1.1786759205510127`}, {-0.6358069881892228, 
           1.0520361224575399`}, {-0.38013401699466925`, \
-0.2711258819878617}}], 
          {RGBColor[0.5, 0, 0.5], 
           PointBox[{{-0.2912457143171204, 
            1.1786759205510127`}, {-0.6358069881892228, 
            1.0520361224575399`}, {-0.38013401699466925`, \
-0.2711258819878617}}]}}, 
         {RGBColor[0.5, 0, 0.5], Thickness[0.0125], LineBox[CompressedData["
1:eJxd2nlYjvn3B/BiJKKFse/7viQ7dRTGvkx2Y18iEZEQso+dJCKD7LJURKI4
KZUsaZuEUGl/lpuplP3b7znv549+88fM5erS1HPfn3PO+3U+LeYtt19YycDA
IKH8X//3X4tZGV26GnzkxRnbVT7rqtw/pBl2I1yrsPuMl1PfTLnLfR+na6ve
U9i7T+0RiUPj2H9U/5dh8xS2TfX9o+htEmemj864WKDlNitb/7HuZxrTbie/
D+O0bL41Yavt93fcfGC3q0lHNdz2TaucuEVZ7N9uTePaEWr2NP74/HLfHK62
+lND9+cq9t5hYrdDk8fuk7LOVHtYyJ0rx6Xt2FbICwYef/5yQQEXBZ+bvb2f
iqNeFFyy+JbHS+aUnP8Yq+K+kcN8bXfnsmXRkvOuY9VsrIy0PGuewxlz1Ku9
nql5+nj3QlevD1z1cpp5jq2GW+w8X/TdLIvbLg1Y2DxAw7vafBjlvieDnxkH
vTK30HJcs9mPRxq942xVxADfJVo+OfLapcmfX3PixY6jQ+5p+aq10dRJeS/Z
ebbXp5WGCkd+7vZm7psUvqva2vOjjcJXTdYMcElJ5B83NfVnrVJ4cUGHh6cv
P+fParslX08p3PftYw3djeXLD47sNY1UePjCd9433j7kShc+TtOkK9zMfnNS
I8tQXr7kYadPisLnZn1OcQzy57GZg0rWfVP4l9f7GI8R63l9BxMf1S+FMyc5
nHq59Cz9+hY/7doPhVdEGYypnxtMfW9ZHGtVonCgdZZtn6kPqFrdzUdCcxWO
UMerdg59RAFlDbYmJin8om7legE2cfT1t8CLSXcVVibvdWpWL54Kuh660+Qf
hRNq1Ww+dlEiGd2vPtLCXeHirUXrd95MponWPxcbT1R4d61+Jwdr/qWPY38f
Or1j+e/3z8I7vvXSaPL64u/Tfmh5bd71QcGWr6nDMSv3yc+1nPKr2XcekE4T
HqXP9vXV8qee+Z1+9npHLcPDqy5dqOVjt6NLpplnUOjjt3trdtVy3TzfqfV+
ZtD0uIJX4cUaPuw05euc7ExatHBZfPBdDY8KMf0xLyqLRof0m9x+o4ZPFw2a
PerEB1Idmu09mjR8Li9hy4il2VRl8VqTcQYajpj9d/j+3jmUW6d13PTy9/Cf
Acqv4V9zaGbdRC+fTeV/Tli97dqdXLLpUbN2Rxs176i036PAOY/q7Y0w6vld
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
pND+lBjVgv5xdHKx2qvwrkKXbF1nmh6IpT02Z9t8jCyvi496DrLLjKYpS0f1
nPJUoayBdT4a93xEsYvKvJslK0R7Bj9d8nckXfJJbD6ivI7aRGdbrkiLoHN1
6t9KzlDoSX6qyeCJD+j6nLZdOVeh9k5vJpmW3qOSXytcTNQK1Yz4bDLh+B0a
Xnfn/NCPCn0bmP+1xYBb1Di3lia6WKE1RmGf9qYHUenQ11+syvtCm2nZWwd/
u0KLqvDaSt8U6ufuuC5/4HlaZcd/Wf5QyLBP3tvx331pT2CJT0R53/D7da6X
9/c9FB93vE1QeZ+oXqnziZsj/Ab+0v2jUFf5Or/A1xN76/4+78bfryffn1fj
+y+S/z874P+/VX4+/oyfTy0/PzfBz19Pfj8eid/PSn5/LsXvf18+Hw7A52Mn
nx+fxec3QD5fvojP97V8/qz//LvI82H98zktz4934/mdkufLJ/B8feX58zo8
/wR5P1j/fijy/vBfeH+i5P1iV7xfQ+X9Y/37ZyzvJ+vfz37y/nIk3t8seb/Z
DO/3LXn/Wf/+j5PzwaE4H+Zyflh/fgbJ+WL9+Wou54/b4vyNk/PJNXE+m8v5
5bo4vxlyvrkyzndnOf+8Bee/kdQHfoj6kCH1g5uifoRKfeFM1JdOUn/410Sp
Pyz1iVuhPt2S+sVPUb/ypL6xH+rbMql/3Aj1767UR96I+ugp9ZMro34ukPrK
t1Bfz0r95Smov4FSn3k46jPqNzujfneV+s7tUN93SP3nY6j/e6U/cDj6w2rp
H7wQ/QP9he+iv9yU/sNx6D/oT1yG/pQg/YuXo3/VkP7GLuhv3aT/sTH63xfp
j3wM/RH9k6PRP1dJf+VI9NfO0n9Z33+fSX9mfX9uKf2b09G/50h/Z1v092Lp
/zwU/b+ZzAfsiflgnswPrJ8fPGW+YP18ocj8wT+dZf4wlvmETTCfhMv8wnGY
X6rJfMMRmG+Wy/zDsZh/fGQ+4mTMR09lfuJCzE9mMl9xVcxXm2T+4sOYv9xl
PuOGmM+CZH7jSBOZ33rJfMfRmO/8Zf7jhZj/6sp8yI0xHybK/Mhl92R+7C3z
JU/FfBkj8yfPxPzpLPMp/zwt82lrmV85BPPrIJlvObWzzLe+Mv/yBHOZf6/J
fMxhmI/XyvzMuw7I/Owm8zWfxHyN+Zs7rpP5O17mc+5xRubzEzK/cx3M77tl
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
6wzehg==
           "]]}, {}, 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{
           1.4930221353809787`, -0.1495353434437098}, {-1.420763957390347, \
-0.33867537844463347`}, {-0.45956611348471177`, 0.9525607799672648}}], 
          PointBox[{{
           1.4930221353809787`, -0.1495353434437098}, {-1.420763957390347, \
-0.33867537844463347`}, {-0.45956611348471177`, 0.9525607799672648}}]}}}},
      ImageSize->400,
      PlotLabel->FormBox[
        StyleBox["\"a/b=1.510\"", 20, StripOnInput -> False], 
        TraditionalForm]]},
    {
     StyleBox["\<\"(a)\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontSize->24,
      FontColor->GrayLevel[0]], 
     StyleBox["\<\"(b)\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontSize->24,
      FontColor->GrayLevel[0]], 
     StyleBox["\<\"(c)\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontSize->24,
      FontColor->GrayLevel[0]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7752415682779055`*^9, 3.775241599318006*^9}, 
   3.775241738455223*^9, 3.7752418059260902`*^9, {3.775241894914394*^9, 
   3.7752419825747995`*^9}, 3.775242117442605*^9, 3.775242151770786*^9, {
   3.7752429112674103`*^9, 3.7752429528644342`*^9}, {3.7752430191066723`*^9, 
   3.7752431189226713`*^9}, 3.7758978652793636`*^9, 3.786260994943616*^9, 
   3.7862670309682865`*^9, 3.7862671288620524`*^9, {3.7875932092265472`*^9, 
   3.7875932298702297`*^9}, 3.7878547701331043`*^9, {3.7878548422644386`*^9, 
   3.787854884240556*^9}, 3.7878553741439395`*^9, 3.788192779811482*^9, 
   3.7897221711465936`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{"\"\<0045_ort_loci_kink\>\"", ",", "orthicLociKinkPlot"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.786267141328744*^9, 3.7862671592640715`*^9}, {
  3.7862700841991353`*^9, 3.7862700898308673`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "showMit"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "showMit"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"drEll", "\[Rule]", "True"}], ",", 
     RowBox[{"drNormals", "\[Rule]", "False"}], ",", 
     RowBox[{"drVtx", "\[Rule]", "False"}], ",", 
     RowBox[{"drExt", "\[Rule]", "False"}], ",", 
     RowBox[{"drFeuTri", "\[Rule]", "False"}], ",", 
     RowBox[{"lgt", "\[Rule]", ".33"}], ",", 
     RowBox[{"drMs", "\[Rule]", "True"}], ",", 
     RowBox[{"mSize", "\[Rule]", "12"}], ",", 
     RowBox[{"drCaustic", "\[Rule]", "False"}], ",", 
     RowBox[{"drExcPerps", "\[Rule]", "False"}], ",", 
     RowBox[{"drAxes", "\[Rule]", "True"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showMit", "[", 
   RowBox[{"a_", ",", "deg1_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ons", ",", "poly1", ",", "ell", ",", "gr", ",", "ext", ",", "meds", ",",
       "grads1", ",", "x5", ",", "feuTri", ",", 
      RowBox[{"clr", "=", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Thick"}], "}"}]}], ",", 
      RowBox[{"incClr", "=", 
       RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}]}], ",", "exc", ",", "mit", ",",
       "grExc", ",", "caustic"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ell", "=", 
      RowBox[{"plotEll", "[", 
       RowBox[{"a", ",", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Black"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ons", "=", 
      RowBox[{"orbitNormals", "[", 
       RowBox[{"a", ",", 
        RowBox[{"toRad", "@", "deg1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"exc", "=", 
      RowBox[{"excentralTriangle", "[", 
       RowBox[{
        RowBox[{"ons", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"ons", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ext", "=", 
      RowBox[{"extouchTriangle", "[", 
       RowBox[{
        RowBox[{"ons", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"ons", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x5", "=", 
      RowBox[{"getNinepointCenterTrilin", "[", 
       RowBox[{
        RowBox[{"ons", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"ons", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"feuTri", "=", 
      RowBox[{"feuerbachTriangle", "[", 
       RowBox[{
        RowBox[{"ons", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"ons", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"poly1", "=", 
      RowBox[{"ons", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"meds", "=", 
      RowBox[{"getMedians", "@@", "poly1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"grads1", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ellGrad", "[", 
         RowBox[{"a", ",", 
          RowBox[{"Sequence", "@@", "#"}]}], "]"}], "&"}], "/@", "poly1"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"caustic", "=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"o", ",", "n", ",", "s"}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"o", ",", "n", ",", "s"}], "}"}], "=", 
            RowBox[{"orbitNormals", "[", 
             RowBox[{"a", ",", 
              RowBox[{"toRad", "@", "i"}]}], "]"}]}], ";", 
           RowBox[{"getFeuerbachTrilin", "[", 
            RowBox[{"o", ",", "s"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "359"}], "}"}]}], "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"gr", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"clr", ",", 
         RowBox[{"FaceForm", "@", "None"}], ",", 
         RowBox[{"PointSize", "@", "Large"}], ",", 
         RowBox[{"Arrowheads", "\[Rule]", "Medium"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"OptionValue", "@", "drAxes"}], "&&", 
            RowBox[{"OptionValue", "@", "drEll"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"Dashed", ",", "Black", ",", 
             RowBox[{"Line", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "a"}], ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"a", ",", "0"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"Line", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"-", "1"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "@", "drNormals"}], ",", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Arrow", "@", 
                 RowBox[{"{", 
                  RowBox[{"#1", ",", 
                   RowBox[{"#1", "+", 
                    RowBox[{
                    RowBox[{"OptionValue", "@", "lgt"}], "*", 
                    RowBox[{"norm", "[", "#2", "]"}]}]}]}], "}"}]}], "&"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"poly1", ",", "grads1"}], "}"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "@", "clr"}], ",", 
           RowBox[{"Polygon", "@", "poly1"}], ",", 
           RowBox[{"Point", "@", "poly1"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "@", "drExcPerps"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Darker", "@", "Green"}], ",", "Dashed", ",", "Thick", 
             ",", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Line", "@", 
                 RowBox[{"{", 
                  RowBox[{"#1", ",", "#2"}], "}"}]}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"exc", ",", "ext"}], "}"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "@", "drCaustic"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<feu\>\"", "/.", "ptClrs"}], ",", "Thick", ",", 
             RowBox[{"Line", "@", "caustic"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "@", "drExt"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Darker", "@", "Green"}], ",", 
             RowBox[{"Point", "@", "ext"}], ",", "\[IndentingNewLine]", 
             RowBox[{"ellLabelPointsbInward", "[", 
              RowBox[{
               RowBox[{"2", "a"}], ",", "a", ",", "ext", ",", "\"\<e\>\"", 
               ",", 
               RowBox[{"OptionValue", "@", "mSize"}], ",", 
               RowBox[{
                RowBox[{"OptionValue", "@", "lgt"}], "/", "2"}]}], "]"}], ",",
              "\[IndentingNewLine]", 
             RowBox[{"ellLabelPoints", "[", 
              RowBox[{
               RowBox[{"2", "a"}], ",", "exc", ",", "\"\<P'\>\"", ",", 
               RowBox[{"OptionValue", "@", "mSize"}], ",", 
               RowBox[{
                RowBox[{"OptionValue", "@", "lgt"}], "/", "2"}]}], "]"}], ",",
              "\[IndentingNewLine]", "Dashed", ",", "Thick", ",", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Circle", "[", 
                 RowBox[{"#1", ",", 
                  RowBox[{"magn", "[", 
                   RowBox[{"#1", "-", "#2"}], "]"}]}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"exc", ",", "ext"}], "}"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Dashed", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Line", "@", 
              RowBox[{"{", 
               RowBox[{"#", ",", 
                RowBox[{"ray", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"-", "#"}], ",", "1.5"}], "]"}]}], "}"}]}], "&"}], "/@",
             "exc"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "@", "drFeuTri"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Pink", ",", "Thick", ",", 
             RowBox[{"Circle", "[", 
              RowBox[{"x5", ",", 
               RowBox[{"magn", "[", 
                RowBox[{
                 RowBox[{"feuTri", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", "x5"}], "]"}]}], "]"}],
              ",", 
             RowBox[{"PointSize", "@", "Large"}], ",", 
             RowBox[{"Point", "@", "feuTri"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", 
           RowBox[{"Point", "@", "meds"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "@", "drMs"}], ",", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\"\<M\>\"", ",", "#2"}], "]"}], ",", 
                    RowBox[{"OptionValue", "@", "mSize"}]}], "]"}], ",", "#1",
                   ",", "#3"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"meds", ",", 
                 RowBox[{"Range", "@", 
                  RowBox[{"Length", "@", "meds"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1.5"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.5"}], ",", 
                    RowBox[{"-", "1.25"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.5"}], ",", "1.2"}], "}"}]}], "}"}]}], 
                "}"}]}], "]"}], ",", 
             RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"Point", "@", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<\!\(\*SubscriptBox[\(X\), \(9\)]\)\>\"", ",", 
               RowBox[{"OptionValue", "@", "mSize"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1.5"}], ",", 
               RowBox[{"-", "1.25"}]}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "@", "drVtx"}], ",", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"ellLabelPoints", "[", 
              RowBox[{"a", ",", "poly1", ",", "\"\<P\>\"", ",", 
               RowBox[{"OptionValue", "@", "mSize"}], ",", 
               RowBox[{
                RowBox[{"OptionValue", "@", "lgt"}], "/", "2"}]}], "]"}]}], 
            "}"}], ",", ",", 
           RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"grExc", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", 
         RowBox[{"FaceForm", "@", "None"}], ",", 
         RowBox[{"EdgeForm", "@", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", "incClr"}], "}"}]}], ",", "incClr", ",", 
         RowBox[{"PointSize", "@", "Large"}], ",", 
         RowBox[{"Point", "@", "exc"}], ",", 
         RowBox[{"Polygon", "@", "exc"}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"grExc", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "@", "drEll"}], ",", "ell", ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", "gr"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2.2"}], ",", "2.2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4.2"}], ",", "4.2"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdylsoQwEAh/HTTK01rdBccmThAUtRtJB2LHOZB+Q6UrSNEEJbuW2JUqZF
Wi6FvEzyRKSUFAohJLTCLCYcTTNLWpvzPw9fv5dP3NRZruEQBBHLBA1PpFkV
R1NjT7msPNI/DXX8mAU4OnK+Bt3D0R7YGF7sg9xkb1AdY2RWtQ5W2JL1MP21
96E7gaZsg4QDkjUTTvhMlbxCYl7zCzus+cE9jHqOMgSWly5HwMfgm3goUgiy
YUsSXw5P8rYUULI9XQqNhcus4i51JSS379Uw7NQ+YMGv+GENbebUzzB6Qt60
UJS43gpVLZvt8MPcp4POujY9fPcf1a4wXqVYG2CsdmUHVsm+d6Fz0XUEBT9F
x5CY/TyrSKQpiyTnAraOy66hL4e+hVZvwA2NJO8b3vXnuvKkNBUlNLF6CjY8
kGPe+4OXQ74AtDsyCTnjV/8UF/6dTAqh9rBPDOeW9llNZatpUPSyx2qQHmTA
VKUyG/4D2bnhGw==
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"showMit", "[", 
      RowBox[{"1.5", ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"25", ",", "35"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7750598744461575`*^9, 3.775059927432098*^9}, {
  3.775059990471907*^9, 3.77506004083895*^9}, {3.775060075607952*^9, 
  3.775060095887042*^9}, {3.7750609244009666`*^9, 3.775060927448815*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0], PointSize[Large], 
        Thickness[Large], EdgeForm[{RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0], Thickness[Large]}], 
        FaceForm[None], 
        PointBox[{{-1.7839535413535454`, -1.7760796243647088`}, \
{-0.9331500154489336, 3.7002993604883865`}, {
         1.9579014937833288`, -0.4329539522437339}}], 
        PolygonBox[{{-1.7839535413535454`, -1.7760796243647088`}, \
{-0.9331500154489336, 3.7002993604883865`}, {
         1.9579014937833288`, -0.4329539522437339}}]}, 
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
        {RGBColor[0, 0, 1], Thickness[Large]}, 
        {PointSize[Large], Arrowheads[Medium], FaceForm[None], 
         {GrayLevel[0], Dashing[{Small, Small}], 
          LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}]}, {}, 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{1.3594616805549748`, 0.4226182617406997}, {
           0.7111069087873177, -0.8804864726766917}, {-1.4920187064290165`, 
           0.10302142099989509`}}], 
          PointBox[{{1.3594616805549748`, 0.4226182617406997}, {
           0.7111069087873177, -0.8804864726766917}, {-1.4920187064290165`, 
           0.10302142099989509`}}]}, {}, {}, {}, 
         {RGBColor[1, 0, 0], Dashing[{Small, Small}], 
          LineBox[{{-1.7839535413535454`, -1.7760796243647088`}, {
           0.8919767706767727, 0.8880398121823545}}], 
          LineBox[{{-0.9331500154489336, 3.7002993604883865`}, {
           0.4665750077244668, -1.850149680244193}}], 
          LineBox[{{
           1.9579014937833288`, -0.4329539522437339}, {-0.9789507468916645, 
           0.2164769761218669}}]}, {}, 
         {RGBColor[0, 0, 1], 
          PointBox[{{-0.39045589882084936`, -0.3887325258383983}, \
{-0.0662785129370208, 0.2628198413702974}, {
           1.0352842946711462`, -0.22893410546799597`}}], {InsetBox[
            StyleBox[
             SubscriptBox["\<\"M\"\>", "1"],
             StripOnInput->False,
             
             FontSize->
              12], {-0.39045589882084936`, -0.3887325258383983}, {1, -1.5}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"M\"\>", "2"],
             StripOnInput->False,
             
             FontSize->
              12], {-0.0662785129370208, 0.2628198413702974}, {-1.5, -1.25}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"M\"\>", "3"],
             StripOnInput->False,
             
             FontSize->
              12], {1.0352842946711462`, -0.22893410546799597`}, \
{-1.5, 1.2}]}}, 
         {RGBColor[1, 0, 0], PointBox[{0, 0}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(9\\)]\\)\"\>",
            StripOnInput->False,
            FontSize->12], {0, 0}, {-1.5, -1.25}]}}}},
      ImageSize->Large,
      PlotRange->{{-2.2, 2.2}, {-4.2, 4.2}}], 
     GraphicsBox[{
       {RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0], PointSize[Large], 
        Thickness[Large], EdgeForm[{RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0], Thickness[Large]}], 
        FaceForm[None], 
        PointBox[{{-1.6123983609303894`, -2.4104907758194676`}, \
{-1.3599470074132454`, 3.0382505342291823`}, {
         1.9674366330173225`, -0.12974700826897181`}}], 
        PolygonBox[{{-1.6123983609303894`, -2.4104907758194676`}, \
{-1.3599470074132454`, 3.0382505342291823`}, {
         1.9674366330173225`, -0.12974700826897181`}}]}, 
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
        {RGBColor[0, 0, 1], Thickness[Large]}, 
        {PointSize[Large], Arrowheads[Medium], FaceForm[None], 
         {GrayLevel[0], Dashing[{Small, Small}], 
          LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}]}, {}, 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{1.2287280664334876`, 0.5735764363510463}, {
           1.0363475288493083`, -0.7229519115551901}, {-1.4992849586642263`, 
           0.03087330902763008}}], 
          PointBox[{{1.2287280664334876`, 0.5735764363510463}, {
           1.0363475288493083`, -0.7229519115551901}, {-1.4992849586642263`, 
           0.03087330902763008}}]}, {}, {}, {}, 
         {RGBColor[1, 0, 0], Dashing[{Small, Small}], 
          LineBox[{{-1.6123983609303894`, -2.4104907758194676`}, {
           0.8061991804651947, 1.2052453879097338`}}], 
          LineBox[{{-1.3599470074132454`, 3.0382505342291823`}, {
           0.6799735037066228, -1.5191252671145916`}}], 
          LineBox[{{
           1.9674366330173225`, -0.12974700826897181`}, {-0.9837183165086614, 
           0.06487350413448592}}]}, {}, 
         {RGBColor[0, 0, 1], 
          PointBox[{{-0.23146871490745902`, -0.34603930126378}, \
{-0.13527844611536932`, 0.3022248726893382}, {
           1.132537797641398, -0.07468773760207192}}], {InsetBox[
            StyleBox[
             SubscriptBox["\<\"M\"\>", "1"],
             StripOnInput->False,
             
             FontSize->
              12], {-0.23146871490745902`, -0.34603930126378}, {1, -1.5}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"M\"\>", "2"],
             StripOnInput->False,
             
             FontSize->
              12], {-0.13527844611536932`, 0.3022248726893382}, \
{-1.5, -1.25}], InsetBox[
            StyleBox[
             SubscriptBox["\<\"M\"\>", "3"],
             StripOnInput->False,
             
             FontSize->
              12], {1.132537797641398, -0.07468773760207192}, {-1.5, 1.2}]}}, 
         {RGBColor[1, 0, 0], PointBox[{0, 0}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(9\\)]\\)\"\>",
            StripOnInput->False,
            FontSize->12], {0, 0}, {-1.5, -1.25}]}}}},
      ImageSize->Large,
      PlotRange->{{-2.2, 2.2}, {-4.2, 4.2}}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7750598773355246`*^9, 3.775060041544064*^9}, {
   3.7750600777998257`*^9, 3.7750600963528*^9}, 3.775060927833785*^9, 
   3.7750661472678857`*^9, 3.7750672772676897`*^9, 3.775217120537077*^9, 
   3.7758978653451877`*^9, 3.7772060005196323`*^9, 3.7772060332071753`*^9, 
   3.77720665396239*^9, 3.77720702733475*^9, 3.7862609950432234`*^9, 
   3.786267218959735*^9, 3.787593256285738*^9, 3.789722173122368*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mittenExcPlot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"showMit", "[", 
     RowBox[{"1.25", ",", "45", ",", 
      RowBox[{"drEll", "\[Rule]", "False"}], ",", 
      RowBox[{"drNormals", "\[Rule]", "True"}], ",", 
      RowBox[{"lgt", "\[Rule]", ".125"}], ",", 
      RowBox[{"drVtx", "\[Rule]", "True"}], ",", 
      RowBox[{"drExt", "\[Rule]", "True"}], ",", 
      RowBox[{"drFeuTri", "\[Rule]", "False"}], ",", 
      RowBox[{"drMs", "\[Rule]", "False"}]}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "3"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"ImageMargins", "\[Rule]", "10"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7772060453776236`*^9, 3.7772060537702055`*^9}, {
  3.777206100754509*^9, 3.777206128977049*^9}, {3.7772061654016*^9, 
  3.777206169954423*^9}, {3.777206289673244*^9, 3.7772062930492115`*^9}, {
  3.77720633062571*^9, 3.7772063371871405`*^9}, {3.7772064513463497`*^9, 
  3.777206454860917*^9}, {3.777206656905517*^9, 3.7772066609137964`*^9}, {
  3.777206853075513*^9, 3.77720688077141*^9}, {3.777207152611666*^9, 
  3.7772071612166452`*^9}, {3.7772828815873985`*^9, 3.7772828840588546`*^9}, {
  3.7772829271157207`*^9, 3.7772829365076027`*^9}, {3.777315392720087*^9, 
  3.777315423006545*^9}, {3.777315465120203*^9, 3.777315511479044*^9}, {
  3.7773155546238933`*^9, 3.777315556719987*^9}, {3.77731634872899*^9, 
  3.7773163704869432`*^9}, {3.788075677160611*^9, 3.788075702601478*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], PointSize[Large], Thickness[
    Large], EdgeForm[{RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], Thickness[Large]}], FaceForm[
    None], PointBox[{{-1.3410885459127793`, -2.0741082468084064`}, \
{-1.1491307299784599`, 2.3335181463558636`}, {
     1.8954355266460945`, -0.10213485894378113`}}], 
    PolygonBox[{{-1.3410885459127793`, -2.0741082468084064`}, \
{-1.1491307299784599`, 2.3335181463558636`}, {
     1.8954355266460945`, -0.10213485894378113`}}]}, {
    {RGBColor[0, 0, 1], Thickness[Large]}, 
    {PointSize[Large], Arrowheads[Medium], FaceForm[None], {}, 
     {GrayLevel[0], 
      ArrowBox[{{0.8838834764831844, 0.7071067811865475}, {0.8057965955388814,
        0.6094981800061687}}], 
      ArrowBox[{{0.7573680855321236, -0.7955450289777068}, {
       0.6923286317617763, -0.6887982751476496}}], 
      ArrowBox[{{-1.2492420040776673`, 
       0.034819904634105114`}, {-1.1243603803892992`, 
       0.029381148806086478`}}]}, 
     {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
      PolygonBox[{{0.8838834764831844, 0.7071067811865475}, {
       0.7573680855321236, -0.7955450289777068}, {-1.2492420040776673`, 
       0.034819904634105114`}}], 
      PointBox[{{0.8838834764831844, 0.7071067811865475}, {
       0.7573680855321236, -0.7955450289777068}, {-1.2492420040776673`, 
       0.034819904634105114`}}]}, {}, {}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], 
      PointBox[{{-0.5825491555952859, -0.24106745671031832`}, \
{-0.4991655013815056, 0.2712179007990554}, {
       0.8233493372963328, -0.01187083206719419}}], {InsetBox[
        StyleBox[
         SubscriptBox["\<\"e\"\>", "1"],
         StripOnInput->False,
         FontSize->12], {-0.5502306689828469, -0.18757198565826008`}, {0, 0}],
        InsetBox[
        StyleBox[
         SubscriptBox["\<\"e\"\>", "2"],
         StripOnInput->False,
         FontSize->12], {-0.4730410203176854, 0.2144397228682156}, {0, 0}], 
       InsetBox[
        StyleBox[
         SubscriptBox["\<\"e\"\>", "3"],
         StripOnInput->False,
         FontSize->
          12], {0.7609530142832222, -0.008272377615132342}, {0, 0}]}, {
       InsetBox[
        StyleBox[
         SubscriptBox["\<\"P'\"\>", "1"],
         StripOnInput->False,
         FontSize->12], {-1.3475200763461006`, -2.136276449422647}, {0, 0}], 
       InsetBox[
        StyleBox[
         SubscriptBox["\<\"P'\"\>", "2"],
         StripOnInput->False,
         FontSize->12], {-1.1540399710452758`, 2.39582504286137}, {0, 0}], 
       InsetBox[
        StyleBox[
         SubscriptBox["\<\"P'\"\>", "3"],
         StripOnInput->False,
         FontSize->
          12], {1.9546667210968223`, -0.12208268097878215`}, {0, 0}]}, 
      {Thickness[Large], Dashing[{Small, Small}], 
       CircleBox[{-1.3410885459127793`, -2.0741082468084064`}, 
        1.9837894406480385`], 
       CircleBox[{-1.1491307299784599`, 2.3335181463558636`}, 
        2.1622990314035575`], 
       CircleBox[{1.8954355266460945`, -0.10213485894378113`}, 
        1.0758793575222412`]}}, 
     {RGBColor[1, 0, 0], Dashing[{Small, Small}], 
      LineBox[{{-1.3410885459127793`, -2.0741082468084064`}, {
       0.6705442729563897, 1.0370541234042032`}}], 
      LineBox[{{-1.1491307299784599`, 2.3335181463558636`}, {
       0.5745653649892299, -1.1667590731779316`}}], 
      LineBox[{{
       1.8954355266460945`, -0.10213485894378113`}, {-0.9477177633230471, 
       0.05106742947189055}}]}, {}, 
     {RGBColor[0, 0, 1], 
      PointBox[{{-0.24593695927277182`, -0.38036256217180087`}, \
{-0.18267926379724142`, 0.3709633429103263}, {
       0.820625781007654, -0.04421912389557969}}], {}}, 
     {RGBColor[1, 0, 0], PointBox[{0, 0}], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(9\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->12], {0, 0}, {-1.5, -1.25}]}, 
     {GrayLevel[0], InsetBox[
       StyleBox[
        SubscriptBox["\<\"P\"\>", "1"],
        StripOnInput->False,
        FontSize->12], {0.9229269169553359, 0.7559110817767368}, {0, 0}], 
      InsetBox[
       StyleBox[
        SubscriptBox["\<\"P\"\>", "2"],
        StripOnInput->False,
        FontSize->12], {0.7898878124172973, -0.8489184058927355}, {0, 0}], 
      InsetBox[
       StyleBox[
        SubscriptBox["\<\"P\"\>", "3"],
        StripOnInput->False,
        FontSize->
         12], {-1.3116828159218514`, 0.037539282548114436`}, {0, 0}]}}}},
  ImageMargins->10,
  ImageSize->Large,
  PlotRange->{{-2, 2}, {-2, 3}}]], "Output",
 CellChangeTimes->{{3.7772060541541495`*^9, 3.7772061292602654`*^9}, 
   3.777206170467081*^9, 3.7772062934700603`*^9, {3.7772063342928734`*^9, 
   3.7772063375062785`*^9}, {3.777206449468369*^9, 3.7772064650067816`*^9}, {
   3.777206661160138*^9, 3.7772067482791653`*^9}, {3.777206830936701*^9, 
   3.77720688105565*^9}, 3.77720692074649*^9, 3.7772070303795786`*^9, {
   3.7772070620817857`*^9, 3.7772070834321594`*^9}, 3.7772071615676937`*^9, 
   3.777219966440707*^9, {3.7772828790860543`*^9, 3.7772829369185023`*^9}, {
   3.777315399776178*^9, 3.7773154235934854`*^9}, {3.7773154675914307`*^9, 
   3.7773155120054197`*^9}, 3.7773155572638702`*^9, 3.777315598689561*^9, {
   3.777316351580147*^9, 3.7773163899400992`*^9}, 3.786260995086114*^9, 
   3.7862672316946497`*^9, 3.7875932963450356`*^9, 3.787593384813616*^9, {
   3.7880756578136997`*^9, 3.7880756782945547`*^9}, 3.7897221733664474`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{"\"\<0036_mittenExcPlot\>\"", ",", "mittenExcPlot"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7772071654333544`*^9, 3.777207176217533*^9}, {
  3.7862672372238913`*^9, 3.78626724443361*^9}, {3.7862700972879267`*^9, 
  3.786270103758654*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mittenExcPerpPlot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"showMit", "[", 
     RowBox[{"1.25", ",", "39", ",", 
      RowBox[{"drEll", "\[Rule]", "True"}], ",", 
      RowBox[{"drNormals", "\[Rule]", "False"}], ",", 
      RowBox[{"lgt", "\[Rule]", ".25"}], ",", 
      RowBox[{"drVtx", "\[Rule]", "True"}], ",", 
      RowBox[{"drExt", "\[Rule]", "True"}], ",", 
      RowBox[{"drMs", "\[Rule]", "False"}], ",", 
      RowBox[{"mSize", "\[Rule]", "20"}], ",", 
      RowBox[{"drCaustic", "\[Rule]", "True"}], ",", 
      RowBox[{"drExcPerps", "\[Rule]", "True"}], ",", 
      RowBox[{"drAxes", "\[Rule]", "False"}]}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2.2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2.2"}], ",", "3"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"ImageMargins", "\[Rule]", "10"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7875934064330873`*^9, 3.787593406821687*^9}, {
  3.787593437305953*^9, 3.7875935619937696`*^9}, {3.787593695097509*^9, 
  3.7875936990867796`*^9}, {3.7875938633295875`*^9, 3.787593867188898*^9}, {
  3.7875941491679926`*^9, 3.7875941527600174`*^9}, {3.787594218104796*^9, 
  3.7875942182726116`*^9}, {3.7875942579690027`*^9, 3.7875942584646807`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], PointSize[Large], Thickness[
    Large], EdgeForm[{RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], Thickness[Large]}], FaceForm[
    None], PointBox[{{-1.4739238473479732`, -1.8459427171252132`}, \
{-0.9559307344621458, 2.533396645731163}, {
     1.888151317866728, -0.2763224257674763}}], 
    PolygonBox[{{-1.4739238473479732`, -1.8459427171252132`}, \
{-0.9559307344621458, 2.533396645731163}, {
     1.888151317866728, -0.2763224257674763}}]}, 
   {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.25, 1.}]}, {
    {RGBColor[0, 0, 1], Thickness[Large]}, 
    {PointSize[Large], Arrowheads[Medium], FaceForm[None], {}, {}, 
     {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
      PolygonBox[{{0.9714324518212135, 0.6293203910498374}, {
       0.6300339999387912, -0.8636877802247299}, {-1.2444411340687795`, 
       0.09420408088862275}}], 
      PointBox[{{0.9714324518212135, 0.6293203910498374}, {
       0.6300339999387912, -0.8636877802247299}, {-1.2444411340687795`, 
       0.09420408088862275}}]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
      Dashing[{Small, Small}], 
      LineBox[{{-1.4739238473479732`, -1.8459427171252132`}, \
{-0.6402508583800556, -0.21454845316538398`}}], 
      LineBox[{{-0.9559307344621458, 
       2.533396645731163}, {-0.41524226261248137`, 0.29444918661532005`}}], 
      LineBox[{{1.888151317866728, -0.2763224257674763}, {
       0.8201851840519161, -0.03211613690572479}}]}, 
     {RGBColor[0.7411764705882353, 0.7176470588235294, 0.4196078431372549], 
      Thickness[Large], LineBox[CompressedData["
1:eJxV2GlczWkbB/AyaZHJNkSppDLKkp2SrkyKjGWoJ4YoGckyYZDBZBxGtjIJ
mZmSikoSk2TPpZosTWk7J0po1TKWjGVC6XnmXD8vnle96HPqf/73df9+3/s2
9101e0kHDQ0Nf00NjX9/pq0cubTFq4ltKqJM4htrrq7oww8TJjVx7oYdF19G
HqEZl7iu/X0ja0UsnHl2cwqdmtdrTNP2Rl704I+6zFfp9NnRLLdHDxrYd/+e
CUGtV6l73C3zKv0GNk3uEjunJpO28tIzK7vW808h5oH6Fjn0aXtb8LJndayX
nxjgM/YWBWw/EWWYVMuKS/pzDI3/JMXai6r3zjXcbVJSl0u38yndnMfmZVXx
+OJ03QKzQkr46uYqL+tK1rTN79biUERDDi9N6vVPBUdpzfZ1H19M++2Hlyze
VMYLL97fREYl1Lb3QPDAWhUbLQmI3FBWQreOTbZMGl/MByvOTe68UUmBjfFZ
sV3y2fQHb573VkmmcSZ/TYzO4Q9D7xd/Ml9F41z35YUtvMrRinXfVUerSHdx
W+7osclsOef9lA43VKTMOB8yW2cVVegHHY8oUlHm0ye61w6dJqPgssoXWSoq
n+Heaea0DOqaen1jUKSKng9P6+a8IYcqdp+tOOulor5Uffxc9zxK9PPU7amr
Il5m3zPZrogstI3abI4qyfrayCcrpyrJ12ff+00WSnI3jP67wu4uuTrO3Bkc
UUKmMftLD2iX00gXR/Obb4sp7Nh176AzFVSwaGJS8oxictZMMyoc+YgaD7l5
RkQUkcvA7IRttysp2fzpiPvFhWTSKfWE/+MqyjQ1/ZS1Csnr3O/D9zVXk9L3
UNjTeXeI9Dxb2+prSCM4QWtGVB55za+cXppXS/o/jH53syCXWn8bZeN6tI60
wop+XPzPLerUYp23x/sx2cfF5er2vEmfHy/zfvppPT00DDNU2OTQjKj099dP
1tOXivzrG+yyacLaEKXPmAYK0PTfuNk5k0J3TTwxNLWBVidsc2k/cI2mrVHO
22/cSDsDmxdfibpMf77+MvPl+kb6rtXSPuXYefpmgm1E9vVG8hl1Inxg8llq
3ep7YHVrIzn0si9NXp5ClmvXp6ywbqIF4wLXLN8VTy1uaSsHTGki84fG87b5
RVLn9j0+3b9uokKXn24EXt5JGcVDT8Z4NZF96InjZLWSXazDIye6N9GlQ+6h
bpfC2TpnhP83E5qoucvoYdEPYtilx4K6QOMmMhu2uM+1L06wd3PZnLqnjdTd
J6vu7O4zrBs5dLpReiMd+9rxr0Fz01hnSP6WLWsaqVeJYcnc8vPsq5GT8b1F
I8XnV/2+fuplrik/Xfftnw30Iik/Iykxg+3LL6quL2uglMp9LhHfX+dBfcoD
ij/U0+tT5T79e2Rx7WDPCM299TTP1jbI4lg2O49VjU82qKeQkKOeUwfmsCIh
wNdmz2OKnrk1cnrcDX5laTz4XlsdfRbde2Nj11sc9q5nvf7yOiqtzhj+aO1t
vhl0s69xQS1luJ++8io3l4curor9ekgtnf9Gx/9Vzzweb7A4sc+OGjow2nH/
KY98Tj48OS+5tJo+LNn91fPgO2zlm2Tr3b+ajCrO2YWfKuAUpe12hX8VjUtc
bXDBt5B11h8z8U6qpFDjB35nGgrZcFEv4+DcR+SRWb7B3L+II5MC5zwb95Bi
XX+oaass4s8n7py/K7qCTFuygse4F/MSM6/VNe/L6ejPtn7XrhXzj9N1qkJm
lZHRO6uo3RYlbGtnZto15i51Umi4hSpKeMDdC5Vv6lWk8TT1J75Xws+H3552
21pJb0aUzTK0VvLrMs0eBn7FpNt5cHjId0oub9cOn3qkkLZt7NdqmK7kyHXT
n3WMyadv07lbWrOS+1zUzljXdpv0lvzce66VioN8FHV17jdoitHW7h3cVZw6
cnNvr+NZdN6t+MKpjSoOPXeYUh9lUE1p7RqPX1Wc2xA/5kLAeXrgVO35JlXF
0wcPfx32PIWuTHEeEJatYn0P++G7Xh6hA6fNXPvdUXHV1D+6UGLCVf3ZkzPj
i1RsIr/nffj97SHqz3M6Pv+P/H2+g7+/Vv4/P8b/V8jzMeP5fpfnZyc8/zj5
fvwJvp/HevX35xn4/qYaOv++H16F9/Ne3h93/Pj+5P1yK96vg7x/7oD3P07W
h7WxPomyfqyD9QuW9eUDWN9Bsv5siPW/KPPBYZgPW5kfdsL8GMp8sQLzlSfz
x50xf8NkPlkH85kq88tNmF8HmW/+DfPtJPPPfpj/G7I/OBf744TsHz6I/fNa
9hd3xv7aLvuPj2D/Ocn+5CPYnw9l//Ia7N/Rsr/5HPY3yf7ncOz/eskHfoV8
WCb5wUeRH3qSLxyCfNGW/OEC5I+f5BNv8ZZ8cpb84mbkl53kG5sh3+ZJ/rHN
r5J/yEfW2yv5+JnkJ8/8QvLzneQr/418NZP85YV2kr+aCnU+8xrk8xrJb3ZC
ft+TfGcD5Lun5D+PQ/5HSz/w/Xj0g/QHO6M/XKVfeAH6xUr6h5+jf3pIP7Ee
+qlN+ot10V+B0m9csFn6bYH0H2ftkP7zkH7kBvTjCOlPjkd/LpF+5T3oV2/p
Xy5F/26RfuZS9HOa9De3TJL+DpZ+Z1v0+yzpf/ZE/69crvYBP+soPugtfuCj
8MOAEWpfcCl80T5T7Q/WhT82PVH7hAfAJyqtC//6hYvgFytvtW+oL3zTOlnt
H4qBf2bEqH1E7+Ajtwa1n8gKfjojvqJI+GqF+IsGwV+G4jMKgM+Gid8oFn6L
Et9R+1Dx3QXxHznCfxvEh2QOH34rfqS98KOB+JLa8sSXO8SfFAt/GohPyRE+
7SB+Jbdw8Wu0+JbGPBTfwr80Ev5dID4m1yDxMfxM8LMD/EzwM3/8PPzM8DPB
zww/E/zM8DPBzww/E/zM8DPBzww/E/zM8DPBzww/E/zM8DPBzww/E/zM8DPB
zww/E/zMp7G+cbK+PF/8TMay/qwlfqY2mQ+Gnwl+Zv9FMl8WMl/cL17tZ66T
+WP4meFnhp8Zfmb4meFnrnaU+T8u889J4me2Ej/zNOwfH9k/7Iv95Sj7iydi
/1mKnzkS+7NQ9ifDzww/M/zM8DP3xP6Hnxl+ZviZ4WeGn9kD+dJD/MzwM8PP
3BH55CT5xJbIL83e6vxi+JnhZ4afGX7mQ8jHbuJnhp8ZfuYC5KuZ5CvDzww/
8zvxMxsYqvOZ+yG/X0h+8xvk+13J9//No+T/FvEzX0E/9P9V3Q80Cf1xMELd
H2SLfrlgoO4X+gL9Eyj9Q/AzzxU/0yforw/SX/Sx3zSl32gJ+m+X9B/Bz/xI
+pFc0J+LpD/JBv2qmaLuV6pA/+6V/qVR6Ods6Wf62N9h0t/0/P/7naLR/4nS
/3QJPmgSH5AN/AA/ky18kSG+oJPwh6af2h9kAZ+YiE+I4Rcb8Qu9XSe+iRTf
0Aj4Z7L4h8LgowTxEb10Ej8NET8R/MzwM+2Gv/qKv8gUPtMXn9Ew+O3tE7Xf
qAi+axPf0WP4T1v8R3+Jn1khPqRs8TOvEj/SEPiyo/iSJsOfruJPegSfws8U
Ab9Wil+pP3x7T3xLp8TPfE38S/Azw8/0Wu3nCAcD8TNpwNch+P0u8TOl4fPt
9eLzWvz9Zvj9Hv4/no/S8Xxn4X/C85vgfKCP7/cY54cAfP8WnC+24P204/zx
QV/eXyXOJ814v7NxfnmD9z8Y5xstrM9pnH/0sX4KnI/gZ5qE81NHrH82zleh
mI9ROH9NwPwY4Hy2FfOVhfObFeZvNM53bfdlPjNw/jsrfiZnnA+XYr7tcX7c
gPnPwfkSfqYEnD+3YP/Az/Rxf4Xj/DoL+88R59tfsD/hZ/oR+3cMzseXxc8E
PxP8TGU4X5uclHzwx/n7MvJDF+fzMcgX5A9VIH9W4Hwfhnxyw/m/HPk1AfcD
08XP5IH7g46HJf/ycb/wS6zkI/xMs5Gf7bifKHkg+doX9xdPkL964mcK6in5
/D3uP96OlPxW4n6kL/LdG/cnnyP/FbhfOYh+cMb9yzL0x5e4n5n1sV9wf5Mk
fmZt3O/YoZ/gZ4Kf2R/3Q8/Ez+yE+yM99N9XuF96gX6civunfejPabifikO/
OuD+qgH9Cz8T/MzwM8HPDD8T/MwJuD+biP63Fz9Ti/iZ4WeCnxl+JviZ4WeC
n3ntM7nf6wefwM8EPzP8zPAzw88MP/N/YuV+8Q18BD8z/MzwM8PPDD8z/Mzw
M8PP/HeE3H8mw2/wM8PPDD8z/MxLcb86Fz6Enxl+Zkvcz14VPzP8zPAzw88M
PzP8zPAzF+F+eN198e3H+2P4meFnhp/5v/9K/Sk=
       "]]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], 
      PointBox[{{-0.6402508583800556, -0.21454845316538398`}, \
{-0.41524226261248137`, 0.29444918661532005`}, {
       0.8201851840519161, -0.03211613690572479}}], {InsetBox[
        StyleBox[
         SubscriptBox["\<\"e\"\>", "1"],
         StripOnInput->False,
         FontSize->20], {-0.5655047260210199, -0.11435855498515074`}, {0, 0}],
        InsetBox[
        StyleBox[
         SubscriptBox["\<\"e\"\>", "2"],
         StripOnInput->False,
         FontSize->20], {-0.3736798653754596, 0.17656124348324226`}, {0, 0}], 
       InsetBox[
        StyleBox[
         SubscriptBox["\<\"e\"\>", "3"],
         StripOnInput->False,
         FontSize->
          20], {0.6966908217077791, -0.01277337419676838}, {0, 0}]}, {InsetBox[
        StyleBox[
         SubscriptBox["\<\"P'\"\>", "1"],
         StripOnInput->False,
         FontSize->20], {-1.4897644360068811`, -1.96993495781365}, {0, 0}], 
       InsetBox[
        StyleBox[
         SubscriptBox["\<\"P'\"\>", "2"],
         StripOnInput->False,
         FontSize->20], {-0.9634636515429725, 2.6581694599186028`}, {0, 0}], 
       InsetBox[
        StyleBox[
         SubscriptBox["\<\"P'\"\>", "3"],
         StripOnInput->False,
         FontSize->20], {1.9803877573368482`, -0.3606873428472366}, {0, 0}]}, 
      {Thickness[Large], Dashing[{Small, Small}], 
       CircleBox[{-1.4739238473479732`, -1.8459427171252132`}, 
        1.8320638354096002`], 
       CircleBox[{-0.9559307344621458, 2.533396645731163}, 
        2.3033084353321884`], 
       CircleBox[{1.888151317866728, -0.2763224257674763}, 
        1.095531092436443]}}, 
     {RGBColor[1, 0, 0], Dashing[{Small, Small}], 
      LineBox[{{-1.4739238473479732`, -1.8459427171252132`}, {
       0.7369619236739866, 0.9229713585626065}}], 
      LineBox[{{-0.9559307344621458, 2.533396645731163}, {
       0.47796536723107297`, -1.2666983228655817`}}], 
      LineBox[{{1.888151317866728, -0.2763224257674763}, {-0.9440756589333639,
        0.13816121288373812`}}]}, {}, 
     {RGBColor[0, 0, 1], 
      PointBox[{{-0.3072035670649942, -0.3847418496680536}, \
{-0.136504341123783, 0.3617622359692301}, {
       0.8007332258800024, -0.11718369458744626`}}], {}}, 
     {RGBColor[1, 0, 0], PointBox[{0, 0}], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(9\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->20], {0, 0}, {-1.5, -1.25}]}, 
     {GrayLevel[0], InsetBox[
       StyleBox[
        SubscriptBox["\<\"P\"\>", "1"],
        StripOnInput->False,
        FontSize->20], {1.059281965370068, 0.7182443077946009}, {0, 0}], 
      InsetBox[
       StyleBox[
        SubscriptBox["\<\"P\"\>", "2"],
        StripOnInput->False,
        FontSize->20], {0.6829127162052714, -0.9769522555292537}, {0, 0}], 
      InsetBox[
       StyleBox[
        SubscriptBox["\<\"P\"\>", "3"],
        StripOnInput->False,
        FontSize->
         20], {-1.3685758020412553`, 0.10888686697857121`}, {0, 0}]}}}},
  ImageMargins->10,
  ImageSize->Large,
  PlotRange->{{-2, 2.2}, {-2.2, 3}}]], "Output",
 CellChangeTimes->{
  3.787593407447834*^9, {3.787593437791978*^9, 3.7875935624755754`*^9}, {
   3.787593692149268*^9, 3.787593699609999*^9}, 3.787593733530716*^9, {
   3.7875938597534475`*^9, 3.787593867759739*^9}, 3.787594002313403*^9, 
   3.787594130931626*^9, {3.7875942077781982`*^9, 3.7875942189945607`*^9}, 
   3.7875942593157883`*^9, 3.789722174642533*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{"\"\<0037_excenter_perps\>\"", ",", "mittenExcPerpPlot"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7875942507518096`*^9, 3.7875942732728367`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "showMitScaled"}], ";", 
  RowBox[{
   RowBox[{"showMitScaled", "[", 
    RowBox[{"a_", ",", "deg1_", ",", "xScale_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ons", ",", "poly1", ",", "ell", ",", "gr", ",", "meds", ",", 
       RowBox[{"clr", "=", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick"}], "}"}]}], ",", 
       RowBox[{"incClr", "=", 
        RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}]}], ",", 
       RowBox[{"lgt", "=", ".33"}], ",", "exc", ",", "mit", ",", "grExc"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ell", "=", 
       RowBox[{"plotEll", "[", 
        RowBox[{
         RowBox[{"a", "/", "xScale"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ons", "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", 
         RowBox[{"toRad", "@", "deg1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"exc", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "/", "xScale"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
        RowBox[{"excentralTriangle", "[", 
         RowBox[{
          RowBox[{"ons", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"ons", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"poly1", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "/", "xScale"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", " ", 
        RowBox[{"ons", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"meds", "=", 
       RowBox[{"getMedians", "@@", "poly1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{"clr", ",", 
          RowBox[{"FaceForm", "@", "None"}], ",", 
          RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", "Black", ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "a"}], "/", "xScale"}], ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"a", "/", "xScale"}], ",", "0"}], "}"}]}], "}"}]}], 
            ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", "clr"}], ",", 
            RowBox[{"Polygon", "@", "poly1"}], ",", 
            RowBox[{"Point", "@", "poly1"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Red", ",", "Dashed", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Line", "@", 
               RowBox[{"{", 
                RowBox[{"#", ",", 
                 RowBox[{"ray", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"-", "#"}], ",", "1.5"}], "]"}]}], "}"}]}], "&"}], 
             "/@", "exc"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{"Point", "@", "meds"}], ",", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\"\<M\>\"", ",", "#2"}], "]"}], ",", "20"}], 
                  "]"}], ",", "#1", ",", "#3"}], "]"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{"meds", ",", 
                RowBox[{"Range", "@", 
                 RowBox[{"Length", "@", "meds"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{".75", ",", 
                    RowBox[{"-", "1.5"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1.5", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1.25", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], 
             "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Red", ",", 
            RowBox[{"Point", "@", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\!\(\*SubscriptBox[\(X\), \(9\)]\)\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"Bold", ",", "20"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.5"}], ",", 
                RowBox[{"-", "1.25"}]}], "}"}]}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"grExc", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", 
          RowBox[{"FaceForm", "@", "None"}], ",", 
          RowBox[{"EdgeForm", "@", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "incClr"}], "}"}]}], ",", "incClr", ",", 
          RowBox[{"PointSize", "@", "Large"}], ",", 
          RowBox[{"Point", "@", "exc"}], ",", 
          RowBox[{"Polygon", "@", "exc"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"grExc", ",", "ell", ",", "gr"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2.75"}], ",", "3.75"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7750610050911417`*^9, 3.7750611437092505`*^9}, {
  3.7750612024594717`*^9, 3.775061206772934*^9}, {3.775061257552162*^9, 
  3.7750612907922535`*^9}, {3.7750706440021563`*^9, 3.775070644320306*^9}, {
  3.7750707070275803`*^9, 3.775070831392595*^9}, {3.7775356599679313`*^9, 
  3.777535662903763*^9}, {3.777535698768485*^9, 3.7775357617332554`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"showMitScaled", "[", 
        RowBox[{"1.5", ",", "#1", ",", "#2"}], "]"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"25", ",", "35", ",", "35"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1.5"}], "}"}]}], "}"}]}], "]"}], "}"}], 
   "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7750609405427914`*^9, 3.7750609648228483`*^9}, {
  3.7750610156870317`*^9, 3.775061021575282*^9}, {3.77506117656636*^9, 
  3.7750612234304295`*^9}, {3.775061301327075*^9, 3.775061308558733*^9}, {
  3.775070619543577*^9, 3.7750706206157093`*^9}, {3.7750706789676332`*^9, 
  3.775070684870844*^9}, {3.777535721946972*^9, 3.777535723034794*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"olgaPlot", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"showMitScaled", "[", 
        RowBox[{"1.5", ",", "#1", ",", "#2"}], "]"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"35", ",", "35"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1.5"}], "}"}]}], "}"}]}], "]"}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.777535644723198*^9, 3.7775356461546783`*^9}, {
  3.7775356811700687`*^9, 3.7775356855149794`*^9}, {3.7775357712810297`*^9, 
  3.7775357732736826`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0], PointSize[Large], 
        Thickness[Large], EdgeForm[{RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0], Thickness[Large]}], 
        FaceForm[None], 
        PointBox[{{-1.6123983609303894`, -2.4104907758194676`}, \
{-1.3599470074132454`, 3.0382505342291823`}, {
         1.9674366330173225`, -0.12974700826897181`}}], 
        PolygonBox[{{-1.6123983609303894`, -2.4104907758194676`}, \
{-1.3599470074132454`, 3.0382505342291823`}, {
         1.9674366330173225`, -0.12974700826897181`}}]}, 
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
        {RGBColor[0, 0, 1], Thickness[Large]}, 
        {PointSize[Large], FaceForm[None], 
         {GrayLevel[0], Dashing[{Small, Small}], 
          LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{1.2287280664334876`, 0.5735764363510463}, {
           1.0363475288493083`, -0.7229519115551901}, {-1.4992849586642263`, 
           0.03087330902763008}}], 
          PointBox[{{1.2287280664334876`, 0.5735764363510463}, {
           1.0363475288493083`, -0.7229519115551901}, {-1.4992849586642263`, 
           0.03087330902763008}}]}, 
         {RGBColor[1, 0, 0], Dashing[{Small, Small}], 
          LineBox[{{-1.6123983609303894`, -2.4104907758194676`}, {
           0.8061991804651947, 1.2052453879097338`}}], 
          LineBox[{{-1.3599470074132454`, 3.0382505342291823`}, {
           0.6799735037066228, -1.5191252671145916`}}], 
          LineBox[{{
           1.9674366330173225`, -0.12974700826897181`}, {-0.9837183165086614, 
           0.06487350413448592}}]}, 
         {RGBColor[0, 0, 1], 
          PointBox[{{-0.23146871490745902`, -0.34603930126378}, \
{-0.13527844611536932`, 0.3022248726893382}, {
           1.132537797641398, -0.07468773760207192}}], {InsetBox[
            StyleBox[
             SubscriptBox["\<\"M\"\>", "1"],
             StripOnInput->False,
             
             FontSize->
              20], {-0.23146871490745902`, -0.34603930126378}, {0.75, -1.5}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"M\"\>", "2"],
             StripOnInput->False,
             
             FontSize->
              20], {-0.13527844611536932`, 0.3022248726893382}, {1.5, -1}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"M\"\>", "3"],
             StripOnInput->False,
             
             FontSize->
              20], {1.132537797641398, -0.07468773760207192}, {1.25, 1}]}}, 
         {RGBColor[1, 0, 0], PointBox[{0, 0}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(9\\)]\\)\"\>",
            StripOnInput->False,
            FontSize->20,
            FontWeight->Bold], {0, 0}, {-1.5, -1.25}]}}}},
      ImageSize->Large,
      PlotRange->{Automatic, {-2.75, 3.75}}], 
     GraphicsBox[{
       {RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0], PointSize[Large], 
        Thickness[Large], EdgeForm[{RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0], Thickness[Large]}], 
        FaceForm[None], 
        PointBox[{{-1.0749322406202595`, -2.4104907758194676`}, \
{-0.9066313382754969, 3.0382505342291823`}, {
         1.3116244220115483`, -0.12974700826897181`}}], 
        PolygonBox[{{-1.0749322406202595`, -2.4104907758194676`}, \
{-0.9066313382754969, 3.0382505342291823`}, {
         1.3116244220115483`, -0.12974700826897181`}}]}, 
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}]}, {
        {RGBColor[0, 0, 1], Thickness[Large]}, 
        {PointSize[Large], FaceForm[None], 
         {GrayLevel[0], Dashing[{Small, Small}], LineBox[{{-1., 0}, {1., 0}}],
           LineBox[{{0, -1}, {0, 1}}]}, 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{0.8191520442889917, 0.5735764363510463}, {
           0.6908983525662055, -0.7229519115551901}, {-0.9995233057761508, 
           0.03087330902763008}}], 
          PointBox[{{0.8191520442889917, 0.5735764363510463}, {
           0.6908983525662055, -0.7229519115551901}, {-0.9995233057761508, 
           0.03087330902763008}}]}, 
         {RGBColor[1, 0, 0], Dashing[{Small, Small}], 
          LineBox[{{-1.0749322406202595`, -2.4104907758194676`}, {
           0.5374661203101299, 1.2052453879097338`}}], 
          LineBox[{{-0.9066313382754969, 3.0382505342291823`}, {
           0.45331566913774846`, -1.5191252671145916`}}], 
          LineBox[{{
           1.3116244220115483`, -0.12974700826897181`}, {-0.655812211005774, 
           0.06487350413448592}}]}, 
         {RGBColor[0, 0, 1], 
          PointBox[{{-0.15431247660497266`, -0.34603930126378}, \
{-0.09018563074357955, 0.3022248726893382}, {
           0.7550251984275986, -0.07468773760207192}}], {InsetBox[
            StyleBox[
             SubscriptBox["\<\"M\"\>", "1"],
             StripOnInput->False,
             
             FontSize->
              20], {-0.15431247660497266`, -0.34603930126378}, {0.75, -1.5}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"M\"\>", "2"],
             StripOnInput->False,
             
             FontSize->
              20], {-0.09018563074357955, 0.3022248726893382}, {1.5, -1}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"M\"\>", "3"],
             StripOnInput->False,
             
             FontSize->
              20], {0.7550251984275986, -0.07468773760207192}, {1.25, 1}]}}, 
         {RGBColor[1, 0, 0], PointBox[{0, 0}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(9\\)]\\)\"\>",
            StripOnInput->False,
            FontSize->20,
            FontWeight->Bold], {0, 0}, {-1.5, -1.25}]}}}},
      ImageSize->Large,
      PlotRange->{Automatic, {-2.75, 3.75}}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.777535647640932*^9, 3.777535774174063*^9}, 
   3.7862609955386543`*^9, 3.786267249832147*^9, 3.788075726150786*^9, 
   3.789722175746984*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{"\"\<0051_mitten_proof\>\"", ",", "olgaPlot"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.777535777431443*^9, 3.7775357825293903`*^9}, {
  3.777535827080839*^9, 3.777535836921753*^9}, {3.786267252663603*^9, 
  3.786267257871647*^9}, {3.786270109583076*^9, 3.7862701130707493`*^9}, {
  3.7862703995594683`*^9, 3.7862704004391155`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "showConstrs"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "showConstrs"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"drVtx", "\[Rule]", "False"}], ",", 
     RowBox[{"drX1", "\[Rule]", "False"}], ",", 
     RowBox[{"drX2", "\[Rule]", "False"}], ",", 
     RowBox[{"drX3", "\[Rule]", "False"}], ",", 
     RowBox[{"drX4", "\[Rule]", "False"}], ",", 
     RowBox[{"drX5", "\[Rule]", "False"}], ",", 
     RowBox[{"drX11", "\[Rule]", "False"}], ",", 
     RowBox[{"lgt", "\[Rule]", ".33"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"showConstrs", "[", 
    RowBox[{"a_", ",", "deg1_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "o", ",", "n", ",", "s", ",", "gr0", ",", "xn", ",", "feet", ",", 
       RowBox[{"clr", "=", "Blue"}], ",", 
       RowBox[{"txtStyle", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Background", "\[Rule]", "White"}], ",", "30"}], "}"}]}], 
       ",", 
       RowBox[{"txtStyle2", "=", 
        RowBox[{"{", "30", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"o", ",", "n", ",", "s"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", 
         RowBox[{"toRad", "@", "deg1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gr0", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{"clr", ",", 
          RowBox[{"FaceForm", "@", "None"}], ",", 
          RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "clr"}], "}"}]}], ",", 
            RowBox[{"Polygon", "@", "o"}], ",", "clr", ",", 
            RowBox[{"Point", "@", "o"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drX1"}], ",", 
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", "int", "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"xn", "=", 
                RowBox[{"getIncenterTrilin", "[", 
                 RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"int", "=", 
                RowBox[{"intouchTriangle", "[", 
                 RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"feet", "=", 
                RowBox[{"incentralTriangle", "[", 
                 RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Black", ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"Dashed", ",", 
                   RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{"#1", ",", "#2"}], "}"}]}], "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"o", ",", "feet"}], "}"}]}], "]"}]}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Darker", "@", "Green"}], ",", 
                   RowBox[{"PointSize", "@", "Medium"}], ",", 
                   RowBox[{"Point", "@", "int"}], ",", "Thick", ",", 
                   RowBox[{"Circle", "[", 
                    RowBox[{"xn", ",", 
                    RowBox[{"magn", "[", 
                    RowBox[{"xn", "-", 
                    RowBox[{"int", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}]}], "}"}],
                  ",", "\[IndentingNewLine]", 
                 RowBox[{"Darker", "@", "Green"}], ",", 
                 RowBox[{"PointSize", "@", "Large"}], ",", 
                 RowBox[{"Point", "@", "xn"}], ",", 
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(X\), \(1\)]\)\>\"", ",", 
                    "txtStyle"}], "]"}], ",", "xn", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.25"}], ",", 
                    RowBox[{"-", "1.25"}]}], "}"}]}], "]"}]}], "}"}]}]}], 
             "]"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drX2"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"xn", "=", 
              RowBox[{"getBarycenterTrilin", "[", 
               RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"feet", "=", 
              RowBox[{"medialTriangle", "[", 
               RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Black", ",", "Dashed", ",", 
               RowBox[{"MapThread", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Line", "@", 
                   RowBox[{"{", 
                    RowBox[{"#1", ",", "#2"}], "}"}]}], "&"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"o", ",", "feet"}], "}"}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"EdgeForm", "@", 
                  RowBox[{"{", 
                   RowBox[{"Thick", ",", "Red"}], "}"}]}], ",", 
                 RowBox[{"FaceForm", "@", "None"}], ",", 
                 RowBox[{"Polygon", "@", "feet"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"PointSize", "@", "Medium"}], ",", 
                 RowBox[{"Point", "@", "feet"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"PointSize", "@", "Medium"}], ",", 
                 RowBox[{"Point", "@", "feet"}]}], "}"}], ",", 
               "\[IndentingNewLine]", "Brown", ",", 
               RowBox[{"PointSize", "@", "Large"}], ",", 
               RowBox[{"Point", "@", "xn"}], ",", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(X\), \(2\)]\)\>\"", ",", 
                   "txtStyle"}], "]"}], ",", "xn", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1.25"}], ",", 
                   RowBox[{"-", "1.25"}]}], "}"}]}], "]"}]}], "}"}]}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drX3"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"xn", "=", 
              RowBox[{"getCircumcenterTrilin", "[", 
               RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"feet", "=", 
              RowBox[{"medialTriangle", "[", 
               RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Black", ",", 
               RowBox[{"{", 
                RowBox[{"Dashed", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{"xn", ",", "#"}], "}"}]}], "&"}], "/@", 
                  "feet"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"PointSize", "@", "Medium"}], ",", 
                 RowBox[{"Point", "@", "feet"}]}], "}"}], ",", 
               "\[IndentingNewLine]", "Purple", ",", 
               RowBox[{"PointSize", "@", "Large"}], ",", 
               RowBox[{"Point", "@", "xn"}], ",", "Thick", ",", 
               RowBox[{"Circle", "[", 
                RowBox[{"xn", ",", 
                 RowBox[{"magn", "[", 
                  RowBox[{"xn", "-", 
                   RowBox[{"o", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(X\), \(3\)]\)\>\"", ",", 
                   "txtStyle"}], "]"}], ",", "xn", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1.25"}], ",", 
                   RowBox[{"-", "1.25"}]}], "}"}]}], "]"}]}], "}"}]}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drX4"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"xn", "=", 
              RowBox[{"getOrthocenterTrilin", "[", 
               RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"feet", "=", 
              RowBox[{"orthicTriangle", "[", 
               RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Black", ",", "Dashed", ",", 
               RowBox[{"MapThread", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Line", "@", 
                   RowBox[{"{", 
                    RowBox[{"#1", ",", "#2"}], "}"}]}], "&"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"o", ",", "feet"}], "}"}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"EdgeForm", "@", 
                  RowBox[{"{", 
                   RowBox[{"Thick", ",", "Orange"}], "}"}]}], ",", 
                 RowBox[{"FaceForm", "@", "None"}], ",", 
                 RowBox[{"Polygon", "@", "feet"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"PointSize", "@", "Medium"}], ",", 
                 RowBox[{"Point", "@", "feet"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Darker", "@", "Orange"}], ",", 
               RowBox[{"PointSize", "@", "Large"}], ",", 
               RowBox[{"Point", "@", "xn"}], ",", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(X\), \(4\)]\)\>\"", ",", 
                   "txtStyle"}], "]"}], ",", "xn", ",", 
                 RowBox[{"{", 
                  RowBox[{"1.25", ",", ".5"}], "}"}]}], "]"}]}], "}"}]}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drX5"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"orthic", ",", "euler"}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"xn", "=", 
                RowBox[{"getNinepointCenterTrilin", "[", 
                 RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"feet", "=", 
                RowBox[{"medialTriangle", "[", 
                 RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"orthic", "=", 
                RowBox[{"orthicTriangle", "[", 
                 RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"euler", "=", 
                RowBox[{"eulerTriangle", "[", 
                 RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Black", ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"Dashed", ",", 
                   RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{"#1", ",", "#2"}], "}"}]}], "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"o", ",", "orthic"}], "}"}]}], "]"}]}], "}"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"Pink", ",", 
                   RowBox[{"PointSize", "@", "Large"}], ",", 
                   RowBox[{"Point", "@", "xn"}], ",", "Thick", ",", 
                   RowBox[{"Circle", "[", 
                    RowBox[{"xn", ",", 
                    RowBox[{"magn", "[", 
                    RowBox[{"xn", "-", 
                    RowBox[{"feet", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
                   RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(X\), \(5\)]\)\>\"", ",", 
                    "txtStyle"}], "]"}], ",", "xn", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.25"}], ",", 
                    RowBox[{"-", "1.25"}]}], "}"}]}], "]"}]}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"PointSize", "@", "Medium"}], ",", 
                   RowBox[{"Point", "@", "feet"}], ",", 
                   RowBox[{"Point", "@", "orthic"}], ",", 
                   RowBox[{"Point", "@", "euler"}]}], "}"}]}], "}"}]}]}], 
             "]"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drX11"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x1", ",", "x5", ",", "intouch", ",", "medial"}], 
               "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"x1", "=", 
                RowBox[{"getIncenterTrilin", "[", 
                 RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"intouch", "=", 
                RowBox[{"intouchTriangle", "[", 
                 RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"medial", "=", 
                RowBox[{"medialTriangle", "[", 
                 RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"x5", "=", 
                RowBox[{"getNinepointCenterTrilin", "[", 
                 RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"xn", "=", 
                RowBox[{"getFeuerbachTrilin", "[", 
                 RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Black", ",", "Dashed", ",", 
                   RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{"x5", ",", "xn"}], "}"}]}]}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Darker", "@", "Green"}], ",", 
                   RowBox[{"PointSize", "@", "Large"}], ",", 
                   RowBox[{"Point", "@", "intouch"}], ",", 
                   RowBox[{"Point", "@", "x1"}], ",", "Thick", ",", 
                   RowBox[{"Circle", "[", 
                    RowBox[{"x1", ",", 
                    RowBox[{"magn", "[", 
                    RowBox[{"x1", "-", 
                    RowBox[{"intouch", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
                   RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(X\), \(1\)]\)\>\"", ",", 
                    "txtStyle2"}], "]"}], ",", "x1", ",", 
                    RowBox[{"{", 
                    RowBox[{".5", ",", "1.25"}], "}"}]}], "]"}]}], "}"}], ",",
                  "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"Pink", ",", 
                   RowBox[{"PointSize", "@", "Large"}], ",", 
                   RowBox[{"Point", "@", "medial"}], ",", 
                   RowBox[{"Point", "@", "x5"}], ",", "Thick", ",", 
                   RowBox[{"Circle", "[", 
                    RowBox[{"x5", ",", 
                    RowBox[{"magn", "[", 
                    RowBox[{"x5", "-", 
                    RowBox[{"medial", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
                   RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(X\), \(5\)]\)\>\"", ",", 
                    "txtStyle2"}], "]"}], ",", "x5", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.25"}], ",", 
                    RowBox[{"-", "1.25"}]}], "}"}]}], "]"}]}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"Black", ",", 
                   RowBox[{"PointSize", "@", "Large"}], ",", 
                   RowBox[{"Point", "@", "xn"}], ",", 
                   RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(X\), \(11\)]\)\>\"", ",", 
                    "txtStyle"}], "]"}], ",", "xn", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".75"}], ",", "1.15"}], "}"}]}], "]"}]}], 
                  "}"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drVtx"}], ",", 
            RowBox[{"{", 
             RowBox[{"Black", ",", 
              RowBox[{"ellLabelPoints", "[", 
               RowBox[{"a", ",", "o", ",", "\"\<P\>\"", ",", "txtStyle", ",", 
                RowBox[{
                 RowBox[{"OptionValue", "@", "lgt"}], "/", "2"}]}], "]"}]}], 
             "}"}], ",", ",", 
            RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"gr0", ",", 
        RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzk0ow3EcBvA1Q62ZUjQpy2yEctDamoR/E9GQRYvkfeSlNCOpiYv3icM2
JsII7SBZSKO22gmRcZANS9TKdkCEWP7P7/Dtc3mep29SU7dSzWQwGHz64Hm8
RmEQBqgGwy3xPTGmEua61VUwNG6phvPhP71QGTdkhzWRrCcomY7yk95vNfHL
vMQ10t44XSIoL1pIh8+XvAwoafZmQod4XQali+4K2GNqUUKXWFpLcmOT9dDT
l9oGZ/QXA3C362EQcrNip+BjaY0BesccK3DnVbAJ2c2zNpiTlnsL9fyUO/LH
NfeJ7B8GiQKtww+32DaWifZs8TQB+ixOPrQoW1OhkbNeDnmuj+852i69/Rda
T7KZ87QFx8nRUHIgoMy0w5z6MjhqCqq3aD9Vy+0wr+T9sFIUoHrz445gmNbq
h4rGe+LVy+ofLFSkheBpdF23PD1AvflsxIgBfT+MDPMQj/b2R6BvQzgBVcWi
jkxZgFrrMBB1nWsauK2zEv8B22nuOw==
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"constrPlot", "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "=", "1.25"}], ",", 
       RowBox[{"ang", "=", 
        RowBox[{"-", "35"}]}], ",", "mit", ",", "gr1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mit", "=", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"showMit", "[", 
          RowBox[{"a", ",", "ang", ",", 
           RowBox[{"drEll", "\[Rule]", "False"}], ",", 
           RowBox[{"drNormals", "\[Rule]", "True"}], ",", 
           RowBox[{"lgt", "\[Rule]", ".33"}], ",", 
           RowBox[{"drVtx", "\[Rule]", "True"}], ",", 
           RowBox[{"drExt", "\[Rule]", "True"}], ",", 
           RowBox[{"drFeuTri", "\[Rule]", "False"}], ",", 
           RowBox[{"drMs", "\[Rule]", "False"}], ",", 
           RowBox[{"mSize", "\[Rule]", "30"}], ",", 
           RowBox[{"drExcPerps", "\[Rule]", "True"}], ",", 
           RowBox[{"drCaustic", "\[Rule]", "True"}]}], "]"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.7"}], ",", "2.1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "2"}], "}"}]}], "}"}]}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"gr1", "=", 
       RowBox[{"Grid", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"showConstrs", "[", 
             RowBox[{"a", ",", "ang", ",", 
              RowBox[{"drX1", "\[Rule]", "True"}]}], "]"}], ",", 
            RowBox[{"showConstrs", "[", 
             RowBox[{"a", ",", "ang", ",", 
              RowBox[{"drX2", "\[Rule]", "True"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"showConstrs", "[", 
             RowBox[{"a", ",", "ang", ",", 
              RowBox[{"drX3", "\[Rule]", "True"}]}], "]"}], ",", 
            RowBox[{"showConstrs", "[", 
             RowBox[{"a", ",", "ang", ",", 
              RowBox[{"drX4", "\[Rule]", "True"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"showConstrs", "[", 
             RowBox[{"a", ",", "ang", ",", 
              RowBox[{"drX5", "\[Rule]", "True"}]}], "]"}], ",", 
            RowBox[{"showConstrs", "[", 
             RowBox[{"a", ",", "ang", ",", 
              RowBox[{"drX11", "\[Rule]", "True"}]}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"gr1", ",", "mit"}], "}"}], "}"}], ",", 
        RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQzZ//6fAUlTeOP+4rHQfRM5Il7oNoFYe5YDqgctlL
EC2ntAtMW4SsVJsKpBftstYE0TvkHpmAaK15v0xBtJJaXjCIPpB9IQpEG38U
TADRq7wUEkG0wa2vhSB63a9NRSB6AcfebhD9/yDnRBB9aHblP7B5uRz/QfT8
5ee4pwHpsOcpkiD6yAsPRRDdUH9XBUR7cesEgeij/Y4hINrumGIkiC7JLADT
e6tjikC0aox4MYj2q+svnAGks2QfgGnJKweTVgDp1vnMySD6h1f3MRB9YoXg
CRBtsv3liRBVoL7FyidBdNqFN89BtNaaT2Bap8/0G4g+UL3vF4g+t+XuDGet
N47RDN/ngGi7DIt0Pcs3jnkfezNBNNfEzhIQfVPlPJgGADhrupM=
  "]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         GraphicsBox[
          {RGBColor[0, 0, 1], PointSize[Large], FaceForm[None], 
           {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
            PolygonBox[{{
             1.0239400553612397`, -0.5735764363510462}, \
{-1.2381520817994582`, -0.13735658082096958`}, {0.5279896969711388, 
             0.9064133732084321}}], 
            {RGBColor[0, 0, 1], 
             PointBox[{{
              1.0239400553612397`, -0.5735764363510462}, \
{-1.2381520817994582`, -0.13735658082096958`}, {0.5279896969711388, 
              0.9064133732084321}}]}}, {
            {GrayLevel[0], 
             {Dashing[{Small, Small}], 
              LineBox[{{
               1.0239400553612397`, -0.5735764363510462}, \
{-0.1853305933544334, 0.48484909360703204`}}], 
              LineBox[{{-1.2381520817994582`, -0.13735658082096958`}, {
               0.7616024003144789, 0.2092782376394168}}], 
              LineBox[{{0.5279896969711388, 0.9064133732084321}, {
               0.046513539431588174`, -0.38509036782809575`}}]}, 
             {RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0], PointSize[Medium], 
              PointBox[{{-0.03530486061683599, 0.573512616572755}, {
               0.735889551399237, 0.28600921227330894`}, {
               0.13377496541884634`, -0.40191778436528786`}}], 
              {Thickness[Large], 
               CircleBox[{0.23400163150486222`, 0.11782461253112123`}, 
                0.5293179986797562]}}}, 
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], PointSize[Large], 
             PointBox[{0.23400163150486222`, 0.11782461253112123`}], InsetBox[
              StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)\"\>",
               StripOnInput->False,
               FontSize->30,
               
               Background->GrayLevel[
                1]], {0.23400163150486222`, 0.11782461253112123`}, \
{-1.25, -1.25}]}}, {}, {}, {}, {}, {}},
          ImageSize->300], 
         GraphicsBox[
          {RGBColor[0, 0, 1], PointSize[Large], FaceForm[None], 
           {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
            PolygonBox[{{
             1.0239400553612397`, -0.5735764363510462}, \
{-1.2381520817994582`, -0.13735658082096958`}, {0.5279896969711388, 
             0.9064133732084321}}], 
            {RGBColor[0, 0, 1], 
             PointBox[{{
              1.0239400553612397`, -0.5735764363510462}, \
{-1.2381520817994582`, -0.13735658082096958`}, {0.5279896969711388, 
              0.9064133732084321}}]}}, {}, 
           {GrayLevel[0], 
            Dashing[{Small, Small}], {
             LineBox[{{
              1.0239400553612397`, -0.5735764363510462}, {-0.3550811924141597,
               0.38452839619373125`}}], 
             LineBox[{{-1.2381520817994582`, -0.13735658082096958`}, {
              0.7759648761661891, 0.16641846842869298`}}], 
             LineBox[{{0.5279896969711388, 
              0.9064133732084321}, {-0.10710601321910931`, \
-0.3554665085860078}}]}, 
            {EdgeForm[{RGBColor[1, 0, 0], Thickness[Large]}], FaceForm[None], 
             PolygonBox[{{-0.3550811924141597, 0.38452839619373125`}, {
              0.7759648761661891, 
              0.16641846842869298`}, {-0.10710601321910931`, \
-0.3554665085860078}}]}, 
            {PointSize[Medium], 
             PointBox[{{-0.3550811924141597, 0.38452839619373125`}, {
              0.7759648761661891, 
              0.16641846842869298`}, {-0.10710601321910931`, \
-0.3554665085860078}}]}, 
            {PointSize[Medium], 
             PointBox[{{-0.3550811924141597, 0.38452839619373125`}, {
              0.7759648761661891, 
              0.16641846842869298`}, {-0.10710601321910931`, \
-0.3554665085860078}}]}, 
            {RGBColor[0.6, 0.4, 0.2], PointSize[Large], 
             PointBox[{0.10459255684430675`, 0.06516011867880545}], InsetBox[
              StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(2\\)]\\)\"\>",
               StripOnInput->False,
               FontSize->30,
               
               Background->GrayLevel[
                1]], {0.10459255684430675`, 0.06516011867880545}, \
{-1.25, -1.25}]}}, {}, {}, {}, {}},
          ImageSize->300]},
        {
         GraphicsBox[
          {RGBColor[0, 0, 1], PointSize[Large], FaceForm[None], 
           {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
            PolygonBox[{{
             1.0239400553612397`, -0.5735764363510462}, \
{-1.2381520817994582`, -0.13735658082096958`}, {0.5279896969711388, 
             0.9064133732084321}}], 
            {RGBColor[0, 0, 1], 
             PointBox[{{
              1.0239400553612397`, -0.5735764363510462}, \
{-1.2381520817994582`, -0.13735658082096958`}, {0.5279896969711388, 
              0.9064133732084321}}]}}, {}, {}, {
            {GrayLevel[0], 
             {Dashing[{Small, Small}], 
              LineBox[{{-0.060520835056504775`, -0.11389115640080227`}, \
{-0.3550811924141597, 0.38452839619373125`}}], 
              LineBox[{{-0.060520835056504775`, -0.11389115640080227`}, {
               0.7759648761661891, 0.16641846842869298`}}], 
              LineBox[{{-0.060520835056504775`, -0.11389115640080227`}, \
{-0.10710601321910931`, -0.3554665085860078}}]}, 
             {PointSize[Medium], 
              PointBox[{{-0.3550811924141597, 0.38452839619373125`}, {
               0.7759648761661891, 
               0.16641846842869298`}, {-0.10710601321910931`, \
-0.3554665085860078}}]}}, 
            {RGBColor[0.5, 0, 0.5], PointSize[Large], 
             PointBox[{-0.060520835056504775`, -0.11389115640080227`}], 
             {Thickness[Large], 
              CircleBox[{-0.060520835056504775`, -0.11389115640080227`}, 
               1.1778650090093437`], InsetBox[
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(3\\)]\\)\"\>",
                StripOnInput->False,
                FontSize->30,
                
                Background->GrayLevel[
                 1]], {-0.060520835056504775`, -0.11389115640080227`}, \
{-1.25, -1.25}]}}}, {}, {}, {}},
          ImageSize->300], 
         GraphicsBox[
          {RGBColor[0, 0, 1], PointSize[Large], FaceForm[None], 
           {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
            PolygonBox[{{
             1.0239400553612397`, -0.5735764363510462}, \
{-1.2381520817994582`, -0.13735658082096958`}, {0.5279896969711388, 
             0.9064133732084321}}], 
            {RGBColor[0, 0, 1], 
             PointBox[{{
              1.0239400553612397`, -0.5735764363510462}, \
{-1.2381520817994582`, -0.13735658082096958`}, {0.5279896969711388, 
              0.9064133732084321}}]}}, {}, {}, {}, 
           {GrayLevel[0], 
            Dashing[{Small, Small}], {
             LineBox[{{1.0239400553612397`, -0.5735764363510462}, {
              0.24731375019086324`, 0.7405370412007402}}], 
             LineBox[{{-1.2381520817994582`, -0.13735658082096958`}, {
              0.6641435111203123, 0.5001100929213904}}], 
             LineBox[{{0.5279896969711388, 0.9064133732084321}, {
              0.27060401697160674`, -0.42830377816286164`}}]}, 
            {EdgeForm[{RGBColor[1, 0.5, 0], Thickness[Large]}], FaceForm[
             None], PolygonBox[{{0.24731375019086324`, 0.7405370412007402}, {
              0.6641435111203123, 0.5001100929213904}, {
              0.27060401697160674`, -0.42830377816286164`}}]}, 
            {PointSize[Medium], 
             PointBox[{{0.24731375019086324`, 0.7405370412007402}, {
              0.6641435111203123, 0.5001100929213904}, {
              0.27060401697160674`, -0.42830377816286164`}}]}, 
            {RGBColor[
              NCache[
               Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 0], 
             PointSize[Large], 
             PointBox[{0.43481934064593, 0.4232626688380209}], InsetBox[
              StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(4\\)]\\)\"\>",
               StripOnInput->False,
               FontSize->30,
               
               Background->GrayLevel[
                1]], {0.43481934064593, 0.4232626688380209}, {1.25, 0.5}]}}, \
{}, {}},
          ImageSize->300]},
        {
         GraphicsBox[
          {RGBColor[0, 0, 1], PointSize[Large], FaceForm[None], 
           {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
            PolygonBox[{{
             1.0239400553612397`, -0.5735764363510462}, \
{-1.2381520817994582`, -0.13735658082096958`}, {0.5279896969711388, 
             0.9064133732084321}}], 
            {RGBColor[0, 0, 1], 
             PointBox[{{
              1.0239400553612397`, -0.5735764363510462}, \
{-1.2381520817994582`, -0.13735658082096958`}, {0.5279896969711388, 
              0.9064133732084321}}]}}, {}, {}, {}, {}, 
           {GrayLevel[0], 
            {Dashing[{Small, Small}], 
             LineBox[{{1.0239400553612397`, -0.5735764363510462}, {
              0.24731375019086324`, 0.7405370412007402}}], 
             LineBox[{{-1.2381520817994582`, -0.13735658082096958`}, {
              0.6641435111203123, 0.5001100929213904}}], 
             LineBox[{{0.5279896969711388, 0.9064133732084321}, {
              0.27060401697160674`, -0.42830377816286164`}}]}, 
            {RGBColor[1, 0.5, 0.5], PointSize[Large], 
             PointBox[{0.18714925279471267`, 0.15468575621860928`}], 
             {Thickness[Large], 
              CircleBox[{0.18714925279471267`, 0.15468575621860928`}, 
               0.5889325045046719], InsetBox[
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(5\\)]\\)\"\>",
                StripOnInput->False,
                FontSize->30,
                
                Background->GrayLevel[
                 1]], {0.18714925279471267`, 0.15468575621860928`}, \
{-1.25, -1.25}]}}, 
            {PointSize[Medium], 
             PointBox[{{-0.3550811924141597, 0.38452839619373125`}, {
              0.7759648761661891, 
              0.16641846842869298`}, {-0.10710601321910931`, \
-0.3554665085860078}}], 
             PointBox[{{0.24731375019086324`, 0.7405370412007402}, {
              0.6641435111203123, 0.5001100929213904}, {
              0.27060401697160674`, -0.42830377816286164`}}], 
             PointBox[{{
              0.7293796980035848, -0.07515688375651268}, \
{-0.40166637057676413`, 0.14295304400852568`}, {0.48140451880853435`, 
              0.6648380210232265}}]}}, {}},
          ImageSize->300], 
         GraphicsBox[
          {RGBColor[0, 0, 1], PointSize[Large], FaceForm[None], 
           {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
            PolygonBox[{{
             1.0239400553612397`, -0.5735764363510462}, \
{-1.2381520817994582`, -0.13735658082096958`}, {0.5279896969711388, 
             0.9064133732084321}}], 
            {RGBColor[0, 0, 1], 
             PointBox[{{
              1.0239400553612397`, -0.5735764363510462}, \
{-1.2381520817994582`, -0.13735658082096958`}, {0.5279896969711388, 
              0.9064133732084321}}]}}, {}, {}, {}, {}, {}, {
            {GrayLevel[0], Dashing[{Small, Small}], 
             LineBox[{{0.18714925279471267`, 0.15468575621860928`}, {
              0.6500045319579487, -0.20946597783310175`}}]}, 
            {RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], PointSize[Large], 
             PointBox[{{-0.03530486061683599, 0.573512616572755}, {
              0.735889551399237, 0.28600921227330894`}, {
              0.13377496541884634`, -0.40191778436528786`}}], 
             PointBox[{0.23400163150486222`, 0.11782461253112123`}], 
             {Thickness[Large], 
              CircleBox[{0.23400163150486222`, 0.11782461253112123`}, 
               0.5293179986797562], InsetBox[
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)\"\>",
                StripOnInput->False,
                
                FontSize->
                 30], {0.23400163150486222`, 0.11782461253112123`}, \
{0.5, 1.25}]}}, 
            {RGBColor[1, 0.5, 0.5], PointSize[Large], 
             PointBox[{{-0.3550811924141597, 0.38452839619373125`}, {
              0.7759648761661891, 
              0.16641846842869298`}, {-0.10710601321910931`, \
-0.3554665085860078}}], 
             PointBox[{0.18714925279471267`, 0.15468575621860928`}], 
             {Thickness[Large], 
              CircleBox[{0.18714925279471267`, 0.15468575621860928`}, 
               0.5889325045046719], InsetBox[
               StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(5\\)]\\)\"\>",
                StripOnInput->False,
                
                FontSize->
                 30], {0.18714925279471267`, 0.15468575621860928`}, \
{-1.25, -1.25}]}}, 
            {GrayLevel[0], PointSize[Large], 
             PointBox[{0.6500045319579487, -0.20946597783310175`}], InsetBox[
              StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(11\\)]\\)\"\>",
               StripOnInput->False,
               FontSize->30,
               
               Background->GrayLevel[
                1]], {0.6500045319579487, -0.20946597783310175`}, \
{-0.75, 1.15}]}}},
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     GraphicsBox[{
       {RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0], PointSize[Large], 
        Thickness[Large], EdgeForm[{RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0], Thickness[Large]}], 
        FaceForm[None], 
        PointBox[{{-1.5535919795785196`, 1.682432764701251}, {
         1.8786091370392362`, 
         0.4028987199869865}, {-0.8011021291915981, -2.6587207228225678`}}], 
        PolygonBox[{{-1.5535919795785196`, 1.682432764701251}, {
         1.8786091370392362`, 
         0.4028987199869865}, {-0.8011021291915981, -2.6587207228225678`}}]}, {
        {RGBColor[0, 0, 1], Thickness[Large]}, 
        {PointSize[Large], Arrowheads[Medium], FaceForm[None], {}, 
         {GrayLevel[0], 
          ArrowBox[{{1.0239400553612397`, -0.5735764363510462}, {
           0.7756216734665041, -0.356233432752632}}], 
          ArrowBox[{{-1.2381520817994582`, -0.13735658082096958`}, \
{-0.9130007280618329, -0.08099527172874219}}], 
          ArrowBox[{{0.5279896969711388, 0.9064133732084321}, {
           0.4127148255149018, 0.5972019503748828}}]}, 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{
           1.0239400553612397`, -0.5735764363510462}, {-1.2381520817994582`, \
-0.13735658082096958`}, {0.5279896969711388, 0.9064133732084321}}], 
          PointBox[{{
           1.0239400553612397`, -0.5735764363510462}, {-1.2381520817994582`, \
-0.13735658082096958`}, {0.5279896969711388, 0.9064133732084321}}]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
          Dashing[{Small, Small}], 
          LineBox[{{-1.5535919795785196`, 
           1.682432764701251}, {-0.6748575242114834, 0.19554417581470768`}}], 
          LineBox[{{1.8786091370392362`, 0.4028987199869865}, {
           0.8160402009331416, 0.04682772458407718}}], 
          LineBox[{{-0.8011021291915981, -2.6587207228225678`}, \
{-0.34798699185706494`, -0.3090152328067278}}]}, 
         {RGBColor[
          0.7411764705882353, 0.7176470588235294, 0.4196078431372549], 
          Thickness[Large], LineBox[CompressedData["
1:eJxV2GlczWkbB/AyaZHJNkSppDLKkp2SrkyKjGWoJ4YoGckyYZDBZBxGtjIJ
mZmSikoSk2TPpZosTWk7J0po1TKWjGVC6XnmXD8vnle96HPqf/73df9+3/s2
9101e0kHDQ0Nf00NjX9/pq0cubTFq4ltKqJM4htrrq7oww8TJjVx7oYdF19G
HqEZl7iu/X0ja0UsnHl2cwqdmtdrTNP2Rl704I+6zFfp9NnRLLdHDxrYd/+e
CUGtV6l73C3zKv0GNk3uEjunJpO28tIzK7vW808h5oH6Fjn0aXtb8LJndayX
nxjgM/YWBWw/EWWYVMuKS/pzDI3/JMXai6r3zjXcbVJSl0u38yndnMfmZVXx
+OJ03QKzQkr46uYqL+tK1rTN79biUERDDi9N6vVPBUdpzfZ1H19M++2Hlyze
VMYLL97fREYl1Lb3QPDAWhUbLQmI3FBWQreOTbZMGl/MByvOTe68UUmBjfFZ
sV3y2fQHb573VkmmcSZ/TYzO4Q9D7xd/Ml9F41z35YUtvMrRinXfVUerSHdx
W+7osclsOef9lA43VKTMOB8yW2cVVegHHY8oUlHm0ye61w6dJqPgssoXWSoq
n+Heaea0DOqaen1jUKSKng9P6+a8IYcqdp+tOOulor5Uffxc9zxK9PPU7amr
Il5m3zPZrogstI3abI4qyfrayCcrpyrJ12ff+00WSnI3jP67wu4uuTrO3Bkc
UUKmMftLD2iX00gXR/Obb4sp7Nh176AzFVSwaGJS8oxictZMMyoc+YgaD7l5
RkQUkcvA7IRttysp2fzpiPvFhWTSKfWE/+MqyjQ1/ZS1Csnr3O/D9zVXk9L3
UNjTeXeI9Dxb2+prSCM4QWtGVB55za+cXppXS/o/jH53syCXWn8bZeN6tI60
wop+XPzPLerUYp23x/sx2cfF5er2vEmfHy/zfvppPT00DDNU2OTQjKj099dP
1tOXivzrG+yyacLaEKXPmAYK0PTfuNk5k0J3TTwxNLWBVidsc2k/cI2mrVHO
22/cSDsDmxdfibpMf77+MvPl+kb6rtXSPuXYefpmgm1E9vVG8hl1Inxg8llq
3ep7YHVrIzn0si9NXp5ClmvXp6ywbqIF4wLXLN8VTy1uaSsHTGki84fG87b5
RVLn9j0+3b9uokKXn24EXt5JGcVDT8Z4NZF96InjZLWSXazDIye6N9GlQ+6h
bpfC2TpnhP83E5qoucvoYdEPYtilx4K6QOMmMhu2uM+1L06wd3PZnLqnjdTd
J6vu7O4zrBs5dLpReiMd+9rxr0Fz01hnSP6WLWsaqVeJYcnc8vPsq5GT8b1F
I8XnV/2+fuplrik/Xfftnw30Iik/Iykxg+3LL6quL2uglMp9LhHfX+dBfcoD
ij/U0+tT5T79e2Rx7WDPCM299TTP1jbI4lg2O49VjU82qKeQkKOeUwfmsCIh
wNdmz2OKnrk1cnrcDX5laTz4XlsdfRbde2Nj11sc9q5nvf7yOiqtzhj+aO1t
vhl0s69xQS1luJ++8io3l4curor9ekgtnf9Gx/9Vzzweb7A4sc+OGjow2nH/
KY98Tj48OS+5tJo+LNn91fPgO2zlm2Tr3b+ajCrO2YWfKuAUpe12hX8VjUtc
bXDBt5B11h8z8U6qpFDjB35nGgrZcFEv4+DcR+SRWb7B3L+II5MC5zwb95Bi
XX+oaass4s8n7py/K7qCTFuygse4F/MSM6/VNe/L6ejPtn7XrhXzj9N1qkJm
lZHRO6uo3RYlbGtnZto15i51Umi4hSpKeMDdC5Vv6lWk8TT1J75Xws+H3552
21pJb0aUzTK0VvLrMs0eBn7FpNt5cHjId0oub9cOn3qkkLZt7NdqmK7kyHXT
n3WMyadv07lbWrOS+1zUzljXdpv0lvzce66VioN8FHV17jdoitHW7h3cVZw6
cnNvr+NZdN6t+MKpjSoOPXeYUh9lUE1p7RqPX1Wc2xA/5kLAeXrgVO35JlXF
0wcPfx32PIWuTHEeEJatYn0P++G7Xh6hA6fNXPvdUXHV1D+6UGLCVf3ZkzPj
i1RsIr/nffj97SHqz3M6Pv+P/H2+g7+/Vv4/P8b/V8jzMeP5fpfnZyc8/zj5
fvwJvp/HevX35xn4/qYaOv++H16F9/Ne3h93/Pj+5P1yK96vg7x/7oD3P07W
h7WxPomyfqyD9QuW9eUDWN9Bsv5siPW/KPPBYZgPW5kfdsL8GMp8sQLzlSfz
x50xf8NkPlkH85kq88tNmF8HmW/+DfPtJPPPfpj/G7I/OBf744TsHz6I/fNa
9hd3xv7aLvuPj2D/Ocn+5CPYnw9l//Ia7N/Rsr/5HPY3yf7ncOz/eskHfoV8
WCb5wUeRH3qSLxyCfNGW/OEC5I+f5BNv8ZZ8cpb84mbkl53kG5sh3+ZJ/rHN
r5J/yEfW2yv5+JnkJ8/8QvLzneQr/418NZP85YV2kr+aCnU+8xrk8xrJb3ZC
ft+TfGcD5Lun5D+PQ/5HSz/w/Xj0g/QHO6M/XKVfeAH6xUr6h5+jf3pIP7Ee
+qlN+ot10V+B0m9csFn6bYH0H2ftkP7zkH7kBvTjCOlPjkd/LpF+5T3oV2/p
Xy5F/26RfuZS9HOa9De3TJL+DpZ+Z1v0+yzpf/ZE/69crvYBP+soPugtfuCj
8MOAEWpfcCl80T5T7Q/WhT82PVH7hAfAJyqtC//6hYvgFytvtW+oL3zTOlnt
H4qBf2bEqH1E7+Ajtwa1n8gKfjojvqJI+GqF+IsGwV+G4jMKgM+Gid8oFn6L
Et9R+1Dx3QXxHznCfxvEh2QOH34rfqS98KOB+JLa8sSXO8SfFAt/GohPyRE+
7SB+Jbdw8Wu0+JbGPBTfwr80Ev5dID4m1yDxMfxM8LMD/EzwM3/8PPzM8DPB
zww/E/zM8DPBzww/E/zM8DPBzww/E/zM8DPBzww/E/zM8DPBzww/E/zM8DPB
zww/E/zMp7G+cbK+PF/8TMay/qwlfqY2mQ+Gnwl+Zv9FMl8WMl/cL17tZ66T
+WP4meFnhp8Zfmb4meFnrnaU+T8u889J4me2Ej/zNOwfH9k/7Iv95Sj7iydi
/1mKnzkS+7NQ9ifDzww/M/zM8DP3xP6Hnxl+ZviZ4WeGn9kD+dJD/MzwM8PP
3BH55CT5xJbIL83e6vxi+JnhZ4afGX7mQ8jHbuJnhp8ZfuYC5KuZ5CvDzww/
8zvxMxsYqvOZ+yG/X0h+8xvk+13J9//No+T/FvEzX0E/9P9V3Q80Cf1xMELd
H2SLfrlgoO4X+gL9Eyj9Q/AzzxU/0yforw/SX/Sx3zSl32gJ+m+X9B/Bz/xI
+pFc0J+LpD/JBv2qmaLuV6pA/+6V/qVR6Ods6Wf62N9h0t/0/P/7naLR/4nS
/3QJPmgSH5AN/AA/ky18kSG+oJPwh6af2h9kAZ+YiE+I4Rcb8Qu9XSe+iRTf
0Aj4Z7L4h8LgowTxEb10Ej8NET8R/MzwM+2Gv/qKv8gUPtMXn9Ew+O3tE7Xf
qAi+axPf0WP4T1v8R3+Jn1khPqRs8TOvEj/SEPiyo/iSJsOfruJPegSfws8U
Ab9Wil+pP3x7T3xLp8TPfE38S/Azw8/0Wu3nCAcD8TNpwNch+P0u8TOl4fPt
9eLzWvz9Zvj9Hv4/no/S8Xxn4X/C85vgfKCP7/cY54cAfP8WnC+24P204/zx
QV/eXyXOJ814v7NxfnmD9z8Y5xstrM9pnH/0sX4KnI/gZ5qE81NHrH82zleh
mI9ROH9NwPwY4Hy2FfOVhfObFeZvNM53bfdlPjNw/jsrfiZnnA+XYr7tcX7c
gPnPwfkSfqYEnD+3YP/Az/Rxf4Xj/DoL+88R59tfsD/hZ/oR+3cMzseXxc8E
PxP8TGU4X5uclHzwx/n7MvJDF+fzMcgX5A9VIH9W4Hwfhnxyw/m/HPk1AfcD
08XP5IH7g46HJf/ycb/wS6zkI/xMs5Gf7bifKHkg+doX9xdPkL964mcK6in5
/D3uP96OlPxW4n6kL/LdG/cnnyP/FbhfOYh+cMb9yzL0x5e4n5n1sV9wf5Mk
fmZt3O/YoZ/gZ4Kf2R/3Q8/Ez+yE+yM99N9XuF96gX6civunfejPabifikO/
OuD+qgH9Cz8T/MzwM8HPDD8T/MwJuD+biP63Fz9Ti/iZ4WeCnxl+JviZ4WeC
n3ntM7nf6wefwM8EPzP8zPAzw88MP/N/YuV+8Q18BD8z/MzwM8PPDD8z/Mzw
M8PP/HeE3H8mw2/wM8PPDD8z/MxLcb86Fz6Enxl+Zkvcz14VPzP8zPAzw88M
PzP8zPAzF+F+eN198e3H+2P4meFnhp/5v/9K/Sk=
           "]]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          PointBox[{{-0.6748575242114834, 0.19554417581470768`}, {
           0.8160402009331416, 
           0.04682772458407718}, {-0.34798699185706494`, \
-0.3090152328067278}}], {InsetBox[
            StyleBox[
             SubscriptBox["\<\"e\"\>", "1"],
             StripOnInput->False,
             
             FontSize->
              30], {-0.5670705201545784, 0.07061634962519633}, {0, 0}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"e\"\>", "2"],
             StripOnInput->False,
             FontSize->30], {0.6552223232214374, 0.0099141741140484}, {0, 0}],
            InsetBox[
            StyleBox[
             SubscriptBox["\<\"e\"\>", "3"],
             StripOnInput->False,
             
             FontSize->
              30], {-0.3032729097066823, -0.15018938208509988`}, {0, 0}]}, {
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"P'\"\>", "1"],
             StripOnInput->False,
             
             FontSize->
              30], {-1.577708465089381, 1.8456608110860693`}, {0, 0}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"P'\"\>", "2"],
             StripOnInput->False,
             
             FontSize->
              30], {1.9772734092712856`, 0.5351498499818567}, {0, 0}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"P'\"\>", "3"],
             StripOnInput->False,
             
             FontSize->
              30], {-0.8090475149571442, -2.8235293113276474`}, {0, 0}]}, 
          {Thickness[Large], Dashing[{Small, Small}], 
           CircleBox[{-1.5535919795785196`, 1.682432764701251}, 
            1.727139808704037], 
           CircleBox[{1.8786091370392362`, 0.4028987199869865}, 
            1.1206423594282238`], 
           CircleBox[{-0.8011021291915981, -2.6587207228225678`}, 
            2.3929958665848696`]}}, 
         {RGBColor[1, 0, 0], Dashing[{Small, Small}], 
          LineBox[{{-1.5535919795785196`, 1.682432764701251}, {
           0.7767959897892598, -0.8412163823506253}}], 
          LineBox[{{1.8786091370392362`, 
           0.4028987199869865}, {-0.9393045685196182, \
-0.20144935999349328`}}], 
          LineBox[{{-0.8011021291915981, -2.6587207228225678`}, {
           0.40055106459579903`, 1.3293603614112839`}}]}, {}, 
         {RGBColor[0, 0, 1], 
          PointBox[{{-0.3550811924141597, 0.38452839619373125`}, {
           0.7759648761661893, 
           0.16641846842869296`}, {-0.10710601321910929`, \
-0.35546650858600787`}}], {}}, 
         {RGBColor[1, 0, 0], PointBox[{0, 0}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(9\\)]\\)\"\>",
            StripOnInput->False,
            FontSize->30], {0, 0}, {-1.5, -1.25}]}, 
         {GrayLevel[0], InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "1"],
            StripOnInput->False,
            
            FontSize->
             30], {1.1480992463086075`, -0.6822479381502533}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "2"],
            StripOnInput->False,
            
            FontSize->
             30], {-1.400727758668271, -0.16553723536708326`}, {0, 0}], 
          InsetBox[
           StyleBox[
            SubscriptBox["\<\"P\"\>", "3"],
            StripOnInput->False,
            
            FontSize->
             30], {0.5856271326992574, 1.0610190846252068`}, {0, 0}]}}}},
      ImageSize->Large,
      PlotRange->{{-1.7, 2.1}, {-3, 2}}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.788075823870292*^9, 3.7880758351128535`*^9}, {
   3.7880759110818214`*^9, 3.7880759430132294`*^9}, 3.7897221769548817`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"export3", "[", 
  RowBox[{"\"\<0039_constr\>\"", ",", "constrPlot"}], "]"}]], "Input",
 CellChangeTimes->{{3.7880759536014805`*^9, 3.7880759945365133`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"get12345plot", "[", 
   RowBox[{"a_", ",", "deg1_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ons", ",", "o1", ",", "n1", ",", "s1", ",", "inc1", ",", "bar1", ",", 
      "cir1", ",", "ort1", ",", ",", "npc1", ",", 
      RowBox[{"deg0", "=", "0"}], ",", 
      RowBox[{"degStep", "=", "1"}], ",", 
      RowBox[{"degRange", "=", "359"}], ",", "degs", ",", "poly1", ",", "ell",
       ",", "gr", ",", "grads1", ",", 
      RowBox[{"clr", "=", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Thick"}], "}"}]}], ",", 
      RowBox[{"lgt", "=", ".33"}], ",", "incs", ",", "bars", ",", "cirs", ",",
       "orts", ",", "npcs", ",", "clrs", ",", 
      RowBox[{"fontSize", "=", "20"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"degs", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"deg0", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "-", "1"}], ")"}], "*", "degStep"}]}], ")"}], "&"}], 
       "/@", 
       RowBox[{"Range", "@", "degRange"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ell", "=", 
      RowBox[{"plotEll", "[", 
       RowBox[{"a", ",", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Black"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ons", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"orbitNormals", "[", 
         RowBox[{"a", ",", 
          RowBox[{"toRad", "@", "#"}]}], "]"}], "&"}], "/@", "degs"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"o1", ",", "n1", ",", "s1"}], "}"}], "=", 
      RowBox[{"orbitNormals", "[", 
       RowBox[{"a", ",", 
        RowBox[{"toRad", "@", "deg1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"inc1", "=", 
      RowBox[{"getIncenterTrilin", "[", 
       RowBox[{"o1", ",", "s1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"bar1", "=", 
      RowBox[{"getBarycenterTrilin", "[", 
       RowBox[{"o1", ",", "s1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cir1", "=", 
      RowBox[{"getCircumcenterTrilin", "[", 
       RowBox[{"o1", ",", "s1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ort1", "=", 
      RowBox[{"getOrthocenterTrilin", "[", 
       RowBox[{"o1", ",", "s1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"npc1", "=", 
      RowBox[{"getNinepointCenterTrilin", "[", 
       RowBox[{"o1", ",", "s1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"incs", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"getIncenterTrilin", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"First", "/@", "ons"}], ",", 
          RowBox[{"Third", "/@", "ons"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"bars", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"getBarycenterTrilin", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"First", "/@", "ons"}], ",", 
          RowBox[{"Third", "/@", "ons"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cirs", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"getCircumcenterTrilin", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"First", "/@", "ons"}], ",", 
          RowBox[{"Third", "/@", "ons"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"orts", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"getOrthocenterTrilin", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"First", "/@", "ons"}], ",", 
          RowBox[{"Third", "/@", "ons"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"npcs", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"getNinepointCenterTrilin", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"First", "/@", "ons"}], ",", 
          RowBox[{"Third", "/@", "ons"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"grads1", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ellGrad", "[", 
         RowBox[{"a", ",", 
          RowBox[{"Sequence", "@@", "#"}]}], "]"}], "&"}], "/@", "poly1"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"clrs", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "/.", "ptClrs"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{
        "\"\<inc\>\"", ",", "\"\<bar\>\"", ",", "\"\<cir\>\"", ",", 
         "\"\<ort\>\"", ",", "\"\<npc\>\""}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"gr", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"clr", ",", 
         RowBox[{"FaceForm", "@", "None"}], ",", 
         RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Dashed", ",", "Gray", ",", 
           RowBox[{"Line", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "a"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "0"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Line", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "@", "clr"}], ",", 
           RowBox[{"Polygon", "@", "o1"}], ",", 
           RowBox[{"Point", "@", "o1"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"PointSize", "@", "Medium"}], ",", 
           RowBox[{"Point", "@", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Thick", ",", "Dashed", ",", 
           RowBox[{"Line", "@", 
            RowBox[{"{", 
             RowBox[{"cir1", ",", "ort1"}], "}"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#1", ",", "Thick", ",", 
              RowBox[{"Line", "@", "#2"}]}], "}"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"clrs", ",", 
             RowBox[{"{", 
              RowBox[{
              "incs", ",", "bars", ",", "cirs", ",", "orts", ",", "npcs"}], 
              "}"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#1", ",", 
              RowBox[{"Point", "@", "#2"}], ",", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\"\<X\>\"", ",", "#3"}], "]"}], ",", "fontSize", 
                  ",", 
                  RowBox[{"Background", "\[Rule]", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"White", ",", 
                    RowBox[{"Opacity", "@", ".5"}]}], "]"}]}]}], "]"}], ",", 
                "#2", ",", "#4"}], "]"}]}], "}"}], "&"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"clrs", ",", 
             RowBox[{"{", 
              RowBox[{
              "inc1", ",", "bar1", ",", "cir1", ",", "ort1", ",", "npc1"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1.25"}], ",", "1.2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1.25"}], ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1.25", ",", 
                 RowBox[{"-", ".6"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1.5", ",", 
                 RowBox[{"-", "1."}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{".5", ",", "1.25"}], "}"}]}], "}"}]}], "}"}]}], 
          "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"{", 
       RowBox[{"ell", ",", "gr"}], "}"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.774976616523549*^9, 3.7749771420749154`*^9}, {
  3.7749796510499167`*^9, 3.774979890023861*^9}, {3.774979920503337*^9, 
  3.774979927551485*^9}, {3.780257954021723*^9, 3.7802580998976607`*^9}, {
  3.7878527277602634`*^9, 3.7878527613668213`*^9}, {3.787853045074662*^9, 
  3.787853045562733*^9}, {3.787853163291304*^9, 3.7878531639718375`*^9}, {
  3.7878531997289224`*^9, 3.787853257677225*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "showX11andX100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "showX11andX100"}], "=", 
   RowBox[{"{", 
    RowBox[{"lgt", "\[Rule]", ".125"}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"showX11andX100", "[", 
    RowBox[{"a_", ",", "deg1_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "o", ",", "n", ",", "s", ",", "ell", ",", "gr", ",", "x11", ",", "x100",
        ",", "x2", ",", 
       RowBox[{"clr", "=", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick"}], "}"}]}], ",", "mit", ",", "ctrs", 
       ",", "rhat", ",", "rads", ",", "caustic", ",", "act", ",", "actSides", 
       ",", "actCtrs", ",", "actRads", ",", "extouch", ",", 
       RowBox[{"fontSize", "=", "20"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ell", "=", 
       RowBox[{"plotEll", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"o", ",", "n", ",", "s"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", 
         RowBox[{"toRad", "@", "deg1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ctrs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"getIncenterTrilin", "[", 
          RowBox[{"o", ",", "s"}], "]"}], ",", 
         RowBox[{"getNinepointCenterTrilin", "[", 
          RowBox[{"o", ",", "s"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rads", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"getInradius", "@", "s"}], ",", 
         RowBox[{"getNinepointCircleRadius", "@", "s"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"caustic", "=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"o2", ",", "n2", ",", "s2"}], "}"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"o2", ",", "n2", ",", "s2"}], "}"}], "=", 
             RowBox[{"orbitNormals", "[", 
              RowBox[{"a", ",", 
               RowBox[{"toRad", "@", "i"}]}], "]"}]}], ";", 
            RowBox[{"getFeuerbachTrilin", "[", 
             RowBox[{"o2", ",", "s2"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "359"}], "}"}]}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"rhat", "=", 
       RowBox[{"rot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"toRad", "@", "25"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x11", "=", 
       RowBox[{"getFeuerbachTrilin", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x100", "=", 
       RowBox[{"getX100Trilin", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"act", "=", 
       RowBox[{"anticomplementaryTriangle", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"actSides", "=", 
       RowBox[{"triLengthsRL", "@", "act"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"actCtrs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"getIncenterTrilin", "[", 
          RowBox[{"act", ",", "actSides"}], "]"}], ",", 
         RowBox[{"getNinepointCenterTrilin", "[", 
          RowBox[{"act", ",", "actSides"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"actRads", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"getInradius", "@", "actSides"}], ",", 
         RowBox[{"getNinepointCircleRadius", "@", "actSides"}]}], "}"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"extouch", "=", 
       RowBox[{"extouchTriangle", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x2", "=", 
       RowBox[{"getBarycenterTrilin", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{"clr", ",", 
          RowBox[{"FaceForm", "@", "None"}], ",", 
          RowBox[{"PointSize", "@", "Large"}], ",", 
          RowBox[{"Arrowheads", "@", "Medium"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", "Gray", ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "a"}], ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"a", ",", "0"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", "clr"}], ",", 
            RowBox[{"Polygon", "@", "o"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#1", "/.", "ptClrs"}], ",", "Thick", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"Point", "@", "#2"}], ",", 
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\"\<X\>\"", ",", "#4"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Bold", ",", "16"}], "}"}]}], "]"}], ",", "#2", 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1.5"}]}], "}"}]}], "]"}]}], "*)"}], ",", 
               RowBox[{"Circle", "[", 
                RowBox[{"#2", ",", "#3"}], "]"}]}], "}"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\"\<inc\>\"", ",", "\"\<npc\>\""}], "}"}], ",", 
              "ctrs", ",", "rads", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "5"}], "}"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Red", ",", 
            RowBox[{"Point", "@", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(X\), \(9\)]\)\>\"", ",", 
                "fontSize"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.25"}], ",", 
                RowBox[{"-", "1."}]}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"Point", "@", "o"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<feu\>\"", "/.", "ptClrs"}], ",", "Thick", ",", 
            RowBox[{"Line", "@", "caustic"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"ellLabelTxt", "[", 
             RowBox[{"a", ",", 
              RowBox[{"o", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(P\), \(1\)]\)(t)\>\"", ",", 
                "fontSize"}], "]"}], ",", 
              RowBox[{"OptionValue", "@", "lgt"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "@", 
               RowBox[{"{", 
                RowBox[{"Dashed", ",", "Blue", ",", "Thick"}], "}"}]}], ",", 
              RowBox[{"Polygon", "@", "act"}]}], "}"}], ","}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<bar\>\"", "/.", "ptClrs"}], ",", 
            RowBox[{"Point", "@", "x2"}], ",", "Dashed", ",", "Thick", ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{"x11", ",", "x100"}], "}"}]}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(X\), \(2\)]\)\>\"", ",", 
                "fontSize"}], "]"}], ",", "x2", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.25"}], ",", "1.1"}], "}"}]}], "]"}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#1", "/.", "ptClrs"}], ",", "Dashed", ",", "Thick", 
                 ",", 
                 RowBox[{"Circle", "[", 
                  RowBox[{"#2", ",", "#3"}], "]"}]}], "}"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\"\<inc\>\"", ",", "\"\<npc\>\""}], "}"}], ",", 
                "actCtrs", ",", "actRads", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "5"}], "}"}]}], "}"}]}], "]"}], ","}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"Point", "@", "x100"}], ",", 
            RowBox[{"ellLabelTxt", "[", 
             RowBox[{"a", ",", "x100", ",", 
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(X\), \(100\)]\)\>\"", ",", 
                "fontSize"}], "]"}], ",", ".1"}], "]"}], ",", 
            RowBox[{"Point", "@", "x11"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(X\), \(11\)]\)\>\"", ",", "fontSize",
                 ",", 
                RowBox[{"Background", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"White", ",", 
                   RowBox[{"Opacity", "@", ".6"}]}], "]"}]}]}], "]"}], ",", 
              "x11", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1."}], ",", 
                RowBox[{"-", "1.25"}]}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}], ",", 
            RowBox[{"Point", "@", "extouch"}], ",", 
            RowBox[{"ellLabelPointsb", "[", 
             RowBox[{
              RowBox[{"2", "a"}], ",", "a", ",", "extouch", ",", "\"\<e\>\"", 
              ",", "fontSize", ",", "0.15"}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ell", ",", "gr"}], "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.787852916241913*^9, 3.7878529201855707`*^9}, {
   3.787852955936921*^9, 3.787852978599329*^9}, {3.787853022761109*^9, 
   3.787853035505643*^9}, {3.7878530787287397`*^9, 3.787853128348422*^9}, {
   3.7878537987482204`*^9, 3.7878538091360893`*^9}, {3.788076660366818*^9, 
   3.7880767047900505`*^9}, 3.7880768309117966`*^9, 3.788430664687042*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x12345feuerPlot", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Show", "[", 
        RowBox[{"#", ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.6"}], ",", "1.8"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"get12345plot", "[", 
         RowBox[{"1.5", ",", "20"}], "]"}], ",", 
        RowBox[{"showX11andX100", "[", 
         RowBox[{"1.5", ",", "20.", ",", 
          RowBox[{"lgt", "\[Rule]", ".2"}]}], "]"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7878527680006804`*^9, 3.7878528829138613`*^9}, {
  3.7878533320971727`*^9, 3.7878533359456854`*^9}, {3.788076710705228*^9, 
  3.788076726018611*^9}, {3.7880768348913894`*^9, 3.7880768520495*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
        {RGBColor[0, 0, 1], Thickness[Large]}, 
        {PointSize[Large], FaceForm[None], 
         {GrayLevel[0.5], Dashing[{Small, Small}], 
          LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{1.4095389311788624`, 0.34202014332566916`}, {
           0.45108693133427213`, -0.9537110161840732}, {-1.4825275309807053`, 
           0.1521871945032789}}], 
          PointBox[{{1.4095389311788624`, 0.34202014332566916`}, {
           0.45108693133427213`, -0.9537110161840732}, {-1.4825275309807053`, 
           0.1521871945032789}}]}, 
         {GrayLevel[0], PointSize[Medium], PointBox[{0, 0}]}, 
         {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
          LineBox[{{-0.04768414888480663, 0.4175787479967822}, {
           0.4734666293020426, -1.2946611743486895`}}]}, {
          {RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
           LineBox[CompressedData["
1:eJxV2HlczXkXB/CEsdRkmiYVkUqMh5Bd4iSMZVRkG4ZIaIghaxSV0ihLSChL
WqwlS6bIzRkNldJ2U9qXW/NMhRHzxCjyPM89n/lj/uqPXrfu7/c953ze52u6
cqPTak0NDQ23Dhoa//8Z0pz62M6pnhN2Dt5z2L9W8fDtuqmvB9RzolbDsFNn
YnhlpU5y0MU6dunXd5+mWyLvuDrsm6NFKrYset1+5qSCu4wYUtr/Xi1fj51q
Eh+exkdHz3n6w4oavjaooWtUcDrnp2UlpURW8urn7mvvfZHFux5WNC8eVMae
86Z9/atZDmtbOyTobi1mvWCLC1qKPDYyfHTbNkzJd2f22PbxZT63zdfc8dI2
h/c0uxy+kVbAcwaP66Syf8QHXOaZVTor+ZlOYMbKyhQ+FhfUY1y6kk2jBh5N
eXmRHfXuPdH/qOTBaSf3Hz10gHx+co816VrIH3Z75S3nm6QXM3K9wQsl77Jd
kTp/GZNdyI9JV64p+Xy5+4i8vumkMbdhlP1cJa+3aJ+nMeQJrXY1W2hZXsBJ
idpaY5vyaV3S4pd9HAvYZ4R+hPbBQlpu0ZgRdiOf7e+YNo34UEQOSUWOCZr5
bJz3oLJ6Qgnd0tFeaH8kl681D15+aXYZ2Z/9y0r5WQ4XL5/8+9LhFTTaZ+t4
8w3Z/OWdrivaGirp96VZe5vSH3Nu3bO1xzyrqa3JuNXJIJNtnOu1zmyqoT3f
eSp6uqRztUfqQJ8va+nZrAeRBy8+5M4VFUEt0bV0+eO4+NuNaVwVWHL4vZmK
cqYuWj9lyANO4dWmXqEqGmFv1Pu76vtcUh1wzrlFRfMjV/3stO4e700zsPWe
WUevKkdMOdCWzKd2pj2PPFJHDb4VI389fpv3KYd8G5RdR17J7tlbx97kjOYo
wxetdRQQX93j3uM4vq7KC9lkUk+rto0ZrWNzgU87jH+bOL6eHu/5PsAm5CwX
jXhtNXNWPY1709g3ufwIP7ENd7s7t56e1U4NS/bx4AkrtkcEzPnf53MDLWP3
+1Bea9Uss+n1pK07yfdNQyil5rl8oTmmnrLtlraZJEaScZ8Ky4N96mn4juas
gsgLVO+8uK9Zex39Mm5TsfKbOOo4Q7eXSUkd+RcpO5u43aBDA0aGlsTVUfHF
7nENvRJpS+nGq+d21lHJ4l7W1+7/TB1OrzytmFxHmsZhZkuc7lDraSPTnZ3q
6DOVglRFKcRT9At7pqlox+noGpuZqRQcZub1dJeKTmzyebsqnmndU+9VL4eq
KOSvp1bxn34hjr0QG15VS+83WSZqmaZRZMlKZ53gWuqjcfxzJ+tfSTfV4dNu
q1r67nlpN79vH5JtmaunYVENbTaf9Sli/iPyH97gobWthpSbmxOiF6TTMc+e
Xnt1a6jvfWOL0w4ZdH+4wt1hQTVpm488/xNl0gFzo3Y7vyo6ueWDl/vXj2lB
zJIBwy5V0nrLzH6zumXRnxa5K5ZmVND+xVktA1RZ1Gph5a6rKqdpzqMXdk7M
pgR71e5j78rI5Zvo/Q1eT6gla6evadcyqspYe6fQJodajYdZt+uVkmnJ2ebH
LTmUYrtuz5reJWRnutww92IuFSwoXnCi7zOaeGJes8oxj65cm9o/s08xxeRo
6Wq9zqOh5y9njzIqorZuPbf1n5ZPu/x+fKKn+5SCvu7lkncon96ErnM93bmQ
9oe7fv+TMp9sik5e0HhXQBW5V53t9QpocWtp+I7f8ik+SsvJbE4BTYqui1oT
nUfDF5zr1iWogPy0I99lb80hru4//UNqAXWvK9LYa5dNc6c/StF8VUAO2od7
NWk9phkvsjr2NlbSjRP7Fq0qSKffgtbenDZNSa3x16MdQx/SLs/dU/zXKclo
YGZ1N6c08t8wbfDTA0qa4D26e/Pnv5B+8JdPxl1R0sU/ymIVh+/RhS4vvG6m
KWmVpfHWFR+T6NW0/gGTSpQUWHNrmd8Pt+jc95WmNY1KSmnrFHo5Ko66x3gF
nninpL0nExW9fowm0y6dS1w6FJIyxijHd+MxMjFcb2XXpZB+dz1ksIaTbZYM
TY8e262QvKPVv2cD/B6fZyN8Hn+fDfH3veX/81n8/0ny/bgB32+HfH++iu8/
SJ6P/36+Pwaon5+34vnr5f3wBrwfH3l/XI73ZyLvl6fi/T5Xqd8/z8H7ny3n
w8k4nzFyfjwI5zdRzpdP4Xwt5Pz5Gc6/VOqDfVAfm6V+2Bv1M1zqi9tRX1el
/jgB9fdU6pNtUJ8XpX55NOq3Ux91ffMo1HeW1D/fR/1fl/7gZegPlfQPD0H/
vJD+4gPor8HSfzwB/Rco/cnh6M+r0r/cZCb9e1T6m03R377S/5yD/p8k84G3
Yz68VajnB+tjfhyX+cJfYb6kyPzhN5g/W2Q+8U3Mp4Myv/gu5leIzDeOipD5
1iTzj9NrZf5VRqjnI9v2lvm4SOYnO2N+esh8ZXfM1xfT1fOXNTF/M2U+sxXm
c7uxen4zbZf5fVnmO0dMlvmukPnPlT1k/htKPvDidMmHBMkPDv+35Eee5Auf
R76ESf5wBvJnl+QTZ26XfCqU/OL2OMkvN8k3LkO+bZf8Ywc/yT9/yUcuRT4e
lPxknfOSn0clXzka+XpX8pffIH9by9X5zPHI5zzJb65Bfn8l+c7nkO8zJP95
1HPJ/4BktQ+4zzLxwSLxA7vCD1fFFzwXvvDMVfuD8+CPkeITngufuFmp/cI7
4Zfb4ht2g28cxT+8Cv5JL1P7iDXho/ek9hPbwk/m3mpfsTZ8lXNH7S/2gr8+
ic9oBnx2XlftN/KA334Q31EAfNck/qNd8B98SInw4RLxI1UEiR9Xiy/pBHxZ
Jv4kV/jzlviUpsOn48WvpAO/uotvaS58u178S/km4t9M8TH5dxcfw88EP9vA
zwQ/E/xM8DPBzwQ/E/xM8DPBzwQ/E/xM8DPBzwQ/U/F4ef5h4mf6+/3AzwQ/
E/xM8DPBzwQ/E/xM8DPBzwQ/M/xM+/fI+X4l50vHJsv5w8/UIn7mDlIfBD8z
/EzwM8PP5CF+ZlepP4KfGX4m+JnhZ7qE+l4i9U3ZqP+JUv/UUfzM/xE/UzX6
p1n8TLPRX2ukv6gR/fdI+o/gZ4afCX5m+JngZ4afCX5m+JngZ4afCX5m+JkC
MV8iZb4Q/MzwM93AfNonfib4mR/K/CL4meFngp8ZfiZrzMd48TPDzww/M/zM
8DPDzww/M/zM8DN3ET/zbJnffBDzHX7mbZj/OTL/+SPywUz8zC3Ij4HiZ05F
voSLnzkI+ZMq+cPwM4dLPvED5Nc7yS+ORr7pS76xvviZ50v+8WTko7vkIwf+
Mz85DPn6heQrK5C/GuJnDkY+h0o+8zzkt4vkN8PPDD/zR+T/ZMl/joMPVooP
+E/44U/xA38UP7OO+IKT4Y+Z4g8uh0+sxSecAr8cEr/wSPjmvfiGfeEfX/EP
N8JH8DOPg5/gZ54HX90UX/Es+GuY+Iv94bMH4jPuLX5mB/Ebj4HvnMR3nAT/
wc/c9Zr4cKv4kNvhx/3iRx4OXxqKL1kBf4aLP3kDfPpSfMrR8OsZ8SuPhm97
im/5HPyrL/5l+JnhZ37pGFsd8OmWYqn4mQ+Ln6kffj8T/u6Pz/v90+d8AH6P
xf9fAt+/wPc7Bf9fwfcfif1AD8/XLM9Pnnj+DOwXLng/m7B/VOH9GWA/mY33
2yZ+Jke8f1vsN7dxPkOx/xjh/GyxHx3H+Zpjf8rB+Zdhv4KfeSP2rz2oH33s
Z42orwvY306i/rKw35mjPmOx/xHq9xX2Qz3Udyb2x4eo/xDslwPRHzXYP/+F
/mnCfhqC/hqE/bU3+m8L9lt39Kcv9t9L4mc+jv14FPp7LfbnQPS/NfZrD8yH
rti/rTE/TmI/N8B8+Xt/7+4h88cN+70f5hP8TBGYXxG4H8gWP3MV7g+OiJ/5
ncxHKhc/8xLcP8DPHIz7CSXma4v4mcZg/t7H/cZvY2U+d8T9x3bxM5/C/Ui7
rcx3+JngZzbG/cqGTMmHY7h/CW6W/ICfqRT5Aj8T/ExBuN9ZKH4m+JngZ9qI
+yEF8u0c7o/ikH/rcb9kVSX5GIP7p0Lk50HcT8UjX5/g/kqF/C0RP1Mx8hl+
JviZ4GeCn2kz7s+Mxc8UKn6mfuJngp8JfqZ7uJ+bDl/AzwQ/Uxfc79nDJ/Az
wc8EPxP8TPAzwc9kgPvFz+Aj+JngZ4KfCX4m+JngZ4KfGX6mMNx/BsNv8DPD
zwQ/M/xME3G/mgAfws8MP9OYR3I/W+0kvoSfGX4m+JnhZzLA/e8++BV+ZviZ
4GeGn+m/5DjaAg==
            "]]}, 
          {RGBColor[0.6, 0.4, 0.2], Thickness[Large], LineBox[CompressedData["
1:eJxV2HtczfcfB/Aj91x+2Q8jtsUKO6sRYmvV+yCXlVJxGml+oX7uNCpkOEw2
DSPLJUO1SlpR6SSp3qdT5+ji5GzTkB/DXJLLhMhcfj+/8371R/3j4dGj+p7v
5/1+v57vz4A5ywLCrBQKxbw2CsX//42JmP32EoOZFZavC0WO06vqM5PMvDC+
/KOczns461KPdnmjzWz95xBrrkpjp93jTNG9z3JqRHaBY3U2H5y2PH+Kp4l3
dJnlveWilqMH5ZtfdazmunnFz0qjCzlxmOfguuUVvF15zzPyYAmbKj7oNHWP
gZ9+eDTsdv9SVq49cfzaN3o2jbm9NP0nPbc/NW9OQGYJz+oc7Pf+n2XsUpdb
/KN9ATvEr2z33/+Us9p9yYve8TmctWHGiIgfDKyreTWo/sM03nh8oOZyNyPr
Fj/c9dm9ON6i3dnR39fIGbNsIqcUR1Fz/qPvJs00cq1vB5W39wGKfeGTEuRq
5KtOqSv2Xz9Cjyauv9+u0cC1L6t9No3JJScrz8KYTQaOp9okG9UJUgfYPNE/
L+eG3cWdI+6eophbnfZ/qi7nwvK+O84P0NHDrYMXtNlfxpq399x5bK+nVc0r
Qgtq9OyeVmfuriinYTl1WxIel3Ls6JJDkXkGqth4w3Zd11KOdPOyzxh3mrI/
PfTl5X46jnlw/KTvsQpqdj/UkyeWsGvy0N96P68kDb09u3RyEaveCRh1amA1
uT/Zfqnps0L2mtV1VKPTGSraonvWb2wBVwyyCQztbyJntxTnbaPzOfLIntqc
v0zkYDP8cy/HPA6ICc4PO1JDys/7LO04MJdd9tvWN3udpYG9tTTKNpubghv9
zbVnKfH5IXrPMZNnbzysOuhgpqtfT7MZ7ZTOzlav6t0CzaRY86tX+CcpnOc5
Pmr6WjMN+3TZDQpI5Iszx+rW7DdTpP2DxlONezm/+nTckBwzVQVfLzwQvJNr
rAYoL5SYSdm1d+bPpq857lSk9kW5mTLWrvklYHsovzPydt3Lsje/f+zij1fG
LKeiRj9XjyIzxf+1223O3G/o2uIN9/odNVOTPv29RQfjyHfql6/u7jOT2jbQ
+/6/95F/4+arr9ebSev46Kvg9okUEjj9yqEQM7luuNJf6/kTNX99ZE0vNzNl
l8dqZ3yZRslhCReT3jJTe91cveN3R0gZ6vFuh8qzlNC+OKJPXCYtOdr47Nbc
s/TrNx2Cu20+RqqRDcppT2soc8uUJM2IHDIXxAVpNTWkTTb2W5mQS9Fr9GGL
29bQ0oXj/qh/dpxCfnt+pXadie785G/zu7eW4lKaoj97fIYGxUTco935VDjN
J8p29hkqTPfeOuT8CWq/quLRnopqujjx3LG47iepSd3Dp5uymib3mrBrg1sh
+U0OWaSPqaLebcZVN4ecIrvI3PYvL1VS6U3V4JdrishpaM/6F46VVHXdbd/3
24qpcOW6oW1WV1Dus4YBJ+JLqDahaMMk3WmKVebqon5gyigxqrq2PU1XViwb
ccdTR3YeTSc3jTHSxvWGp7cKdbTRMN+/fo2Bdu66tXmUYynFJL44sii3nJzv
zs+6uLeUXAo6V425WUY5/zK++6tCT6opge4/9iyjgudXVg0I1VNYit/In1V6
ulbScWylXk+1zo8TDywopejIrfVV/ctI7RPhn/S9jryzt+sHLy8jB+OTHsYw
ptX7h3a/pi8jpamt0zuHi6nz0SeNz7qX09Usj3MH/jxFA7JmrF0SWE6u+771
/7FfITUv2HRk7L5ySrgfuHbRlAI65mcTtOp8+Zvn6XsteH0+vZp654t/9DBQ
ld2y87qf8+jCi4/CO00wkNlubsatc7mUt7LvJ6FRBlI/vnas/4tsKo665Pt+
soGst39SGeJ+lHxmfjVqQqWBVKO6drm8PoPmdzkcarproIaKwX4TStLIy2Wh
x8nORmo4/EfyiOfJVDjvdl/r942kym4cHjXnILlUP/DQjTZS7UNfqxum3VSX
E3P70kQjaZL6vJe3aDutjg1UfTHVSGrvYPu2S9eR1T87L/AMevN/y5fWLeXh
hoidwUbKmGD5Pje+Jd9Xys/zYvy8Tn4/P8LvV8jf5+H4+1XyfJyF59PK87Ma
z9/kYvl8vBCfL3ab5fOzCz7/eHk/nI73Eyvvj9Px/hLl/fJFvF87ef+smCbv
P0TOh7NwPko5P76H88uQ82VrnK9Czp+7tJy/wVIfHI76mCT1w6NQPyapL16H
+kL9cQPqz0Pqk1vqc6DUL2ehfuOkvtkV9e0r9c+xqP8+0h+8Gf0RK/3Dv6N/
aqS/OB79tUX6j6PQf/bSn2xCf76OsPQvp6F/J0l/8yD0d730P6vQ/3+vtMwH
voH5sFnmB8/H/Fgt84XtMF/UMn/4b8yfjTKfOAPzqULmF1/F/Lo5wjLfWIX5
ppb5xzsw/67NtcxHTm0n83GzzE+OZpmfF2S+shrzdbLMX07UyPz1kPnMOzCf
nWV+s11fmd8mme8cifmeLvOfVQ9k/r8eYckHVntIPkRJfnCGRvKjSvKF45Ev
2ZI/vBD5kyn5xFcdJJ9OSn6x1lXyq7fkG4ch3zwk/9h1k+TfQ8lHDkc+ZidY
8pOjkZ+9JF95PvLVXfKX3ZG/yZLP7IB8/kDym4uR3/f7W/KdpyPfTUmW/Gct
8r+T+IDtPMQH1uIHLocf4As+A18kp1r8wSPhj3DxCbf4RFdm8Qu/hF/gG94I
30SKf9gX/rEVH/EQ+ChE/MT3W/zkbfEVR8NXGZ9b/MVP4K/4JRaf0VfwmfUv
Fr+RD/wWIr6jVPjOQfxHtvBfD/Eh+cOHS8WPlAo/5osvqauj+DJL/Enb4M+j
4lPyg08fiF/JZC1+7SO+JR18WyT+JdV18a+z+JgadomP4WeCn93gZ4KfCX4m
+JngZ4KfCX4m+JngZ4KfCX4m+JngZ4KfSYHPXyefn+Bngp8Jfib4meBngp8J
fib4meBngp8Jfmb4mTKmyPluk/Olqo/k/J/L+VOvV1If8DPBzww/U0t9wc+U
JX7mR1J/pGldnwQ/M/xMMajvX6S+KRz1nyP1Txr0RwfpD3IXP/Ny6R9Si5/Z
QfqLgtB/adJ/BD8z/EzwM8PPBD8z/EzwM8PPBD8z/EzwM8PPb/YKmS/jZb4Q
/MzwM13BfNKJn0mL+dUg84vgZ4afKa5l/omfCX7mDPEzw88MPzP8zPAzw88M
PzP8zPAzz8H81sn85ibM9yqZ75yK+d8k858dxM9cK37mOciP+5IfPF78zGbJ
F27Jn3rJH9YgnzZJPjH8zPclvzgB+dZV8o11yL88yT+Gn7lI8pGbW+cn+yBf
nyos+cp9xM+cIvnLw5HP+ZLPnIv83iv5zfAzw8+civyHn7kXfKARH7AGfsgU
P/C38IWt+IKV8EeR+IPHt/YJh8MvZ8QvXAffRIpveHpr/7Ct+JlXiI8YfuZu
4ieuha+Gia/YC/56Iv7ibPjspPjszfOI35rFz6yF7x6I77gO/oOfORw+zBYf
shZ+VIsfWSl+5qXiS7arFH86iz+5CT7NF5+yurVfWQnfNopvWQ3/hol/GX5m
+Bn3GtlF6eJnVkxq5WtWwN9r8fMLW/ucG46J31X4+zr4PhfPVwX/B+D57bAf
hOHzwc/kgc/viv0iDu8nBvtHBt5fLPaTW3i/rq33F1Zjv0nD+dhi/znXcn7Y
j6xwvlfPyP6kwPnDzwQ/83jsXx+jfgqxn81GfQVhf7uA+huO/S4V9dkT+18+
6jca+6E96nsa9scdqP8md9kvZ6I/tmH/PIf+MWE/3Yv++hb7qxf6rwf22+3o
zzrxM01G/7bsxx7iZy7B/nylp/Q//EwXMB8ysX/vw/yIwX5uj/nyBfb3viky
f5Ziv5+P+WTC/l+B+fVa/ExBmG+euD9QYf69i/uFEMzHWNw/xGB+PsH9RMt8
9cf9RR3m7zDcb4RgPqtw/6ESP3Mp7kdcMN/hZ4KfuT3uV9Qk+TCj5f5lq+RH
Je5ndMgX+JngZyrA/U6I+JngZ4KfyQ73Q17It1DcH2mQfxW4X6pDPl4WP1MQ
8tMK91MLka/TcX81BPm7HPdbauQz/EzwM8HPBD/TTfEzJSD/e+F+zQk+gJ8J
fqZ43M8Z4Av4meBnUuF+bzF8Aj8T/NziG4KfCX4m+JlCcL84HD6Cnwl+JviZ
4GeCnwl+JviZ4WfS4P4zHH6Dnxl+JviZ4Wcag/tV+JngZ4afaX6l3M/uhS/h
Z4afCX5m+JmKcP8bBL/Czww/E/zM8DP9DxvQu10=
            "]]}, 
          {RGBColor[0.5, 0, 0.5], Thickness[Large], LineBox[CompressedData["
1:eJxV2GlczWkbB/DGkslYpmXKlLXEWCZLSCYukZFRtlAjSyXTMpGx1EiRZAmZ
wgyqkfSkRdq0HduVoUaMg1aVTlJGVHpsaRg885zrNy+86sX5VOf/v+/r9/ve
9yA33wWrOmloaHh8pKHx/59uTVnbY10VNKIj/eGpqgdWg3OWZ4eOUJDpgj/M
3TzSKfrJe5PBe/PpoftnSw9pM4WkdxiY7Myjg/frR7o2FtHyiJl1K01zyTLo
m6Kiqzfo96nax+dvyCbt0iVm5j1K6EWYskIrOIuUacklG1VldPqn/mVbFmfQ
gGPuimKHSvKNGe62+JNUshk97fZazypaUXq+Sjk+kWJba8vbjGoo42B1ZrnN
CWrXdXXetfYu6U0YMPDP6ChyiLLfFu1dS41Xes9pLYqgrssfpBt9qqKvDYMc
v4kPpBITv9p2DxU1N1zseD7Ole3mepXHb1KRx4aGoNThO9mh1TijwE5Fa+sc
e8//5SCbRKs2FTfVUpRJllHV8WiOfKz7V8PCWmq+d6St8XAcK7fc871w+C5Z
lLYbrR2YwA7mXe/45dXQjcZ3u3p5J/G1k2ETYhTV1Hyg8ddjG09xv0MGmoPj
q6j3he1e8TZpXKRVMGHDj3dIp9owe49PBje5Zhd6T66kWRmZVseiMpk97nt6
viynSeEP6q6ezmJLq2Vjl8aXUdlKl/4LE8/w5oHd3W/OKqWhtme2hu/O5kN9
tJ789/Ftela2t40X5LD1QR2b47tvUXGoU6tZt1we5n8y+4mtkqJPnR2pm5jL
fpGPPRK3Xqd+fomLjpjncW/Tt2/P512ldUMfxtWczuM9LTphQ58X0qs1/sbN
+vm8NjvWL9L8MvmoRocU+ubzmwvHYtwCCujzIzqDlyjyWWtUzamDkedovnl7
SNiLfJ46dmDKHsqlH5zcLpoaK3j8lJyTDhqZlNv00ub5NAXb6s/WiE9JpMkG
qRHJjgoe9Z/i4NR3UTT24ZiW5y4KfjRW03dW10AaWFoxad0KBQ8xn3nLlsI4
w3DNRYWDgpPDWpwS6mP5WWll5aIpCh5ou8PHzjWZu2e389UBCm7d1CPNfF4m
b0mNt9jXkc9L+rD3uYocdl1U/KVOcT7f6Pza/q/pZznCYppzYWQ+G/rk+eYf
vsjWnh5lWg75/JNTwqwmz0v8/op/xOSe+Rxev+y99qbLzK++eJhfkMfmtjql
cwIL+UGessvN1XlsPHHlzcPrfuff//h5kVIvj0v0Uh42ORezYdW3TRq5uWyQ
Yek9deJ19qk9Xpw6P5cXT2vYfazbDR4wb6ajXlMOv7byf9HlmpK/Pe8e7rcp
h589tbQ5R7d4SnuzXW/NHN7VfUrIG93bvK92e4zB/mxOab/iWVh/m13zezUW
amez/pH9nkbJJbz5+RyTOZFnOGzcekMN71LuG//p4Ps9zvDExFIzv8FlHFBm
kZQZmsVho/q4BN8pY5PYHoced2Sys2GRx6Cd5dy/l8FnCq9Mti0rfOn8ZQX3
DqsonFmZwcMU25LHKis41C5KydYZvD7mQI8kz0o2ytrY7cCCdN5Roth/8e9K
fvS0tpNe3zQ2+e1pyI977vCQuY175t1L5eS2Vf3uaFfxhMnO4RGxp9h7wvB1
dQeq2HCHsb7RkhQeemb/hoie1Xwrba//+E+TObjqWXvLtmq26HrB1+S3RI5c
8y6lva2aC985zR669iQrrg03Tnes4fS+KV1DDBPYpiFMaaCoYd0Z+79bfyme
X9uf6zxW7y53vu/Yf9KqE5x07qOOd553eXtLRZ2uZhz/4La6cGveP5+vWfs0
wDaWl4Vof5/z/i4HtFy/9WBrDNsmWCmPW9eyocq4WZV1lI9uTj03LaiW7bvo
76ip/4VX2eU1RWfVckiz/qW5PQ/xpbpVL1Lra9l2Yv8raeMjufznTZ5+3VV8
dNSuzPLcfWyp53y2Y6SKvZwbBjW/3cmz9z2ZPW6WipVna/7Yar2Nv/lits+w
FSo+Oy/B61EXf3ZPcHC6s0bF1Sv9TyRpevCf4WZfWf+o4qSkzqVpqZetrjfF
mLlvVvHhderP6T4+v+6g/n1ywu8Hy98nZ/z9uKXq/08L8f+DRqu/H43D91tm
qf7+VIfv79Wifj46i+eL0FQ/Pznj+dPk/VAw3o9Om/r90US8P0df9fslB7zf
Unn/5IH3XyTrQ3uwPl/L+lEb1m97P/X6Uj+sr8V79fpTIta/q6Z6f1Ao9odh
unr/0Grsn0DZXzQM+2u67D9a8+/+k/1JCdifDs/U+5f6Yf9eyFTvb4rG/ja2
V+9/mon9/5XMBxljPpxkfmgo5sdU5oucMF9XZP7ICfM3RuaTLDGff8r8khvm
N1Dmm7pjvhNk/ikJ8z9H8oECkQ+pkh9UgPyYJflC9ciXpZI/NA35Yyr5RPbI
p0rJL7qB/FqUr843Wm8h+dYm+Uc9kX9LC9X5SD2Qj9GSnzQS+flW8pWMv5d8
jZD8pe7I3xjJZ2owkHx2kPymhchv0zJ1vpPuTMn355L/NGO35P8q6QfyHSH9
4CX9QUFTpD9spF+oW4L0S4n0Dz1F/xRJP9F+kn7ylP6iv8dIf42RfqNy9Ntx
6T9yuij9N8BX3Y8UhH4Mlv6koa3Sn39tVPcrOaJfY6V/6TT6t1n6mb5DPxuU
q/ubFqK/Sfqd8tDvN6T/6SL630p8QKHwgaX4gV7AD1riC3oFX8wWf9Ar+EMp
PiFd+CRO/EIfJ4pfpotvyB6++U38Q3XwT6L4iKLgI0/xE/WBnwLXq31Fi+Gr
y9VqfxHBX1V91D7j6/DZu0K137hkmfhthfiObeC7LPEfa+iJ/0aJDzkKPtwi
fuRB8GOK+JJN4ctW8Scr4M/74lO+WSI+PSx+5fGB4tcg8S3HwbdJ4l+eC/9a
iI9Za574GH5m+Pk8/MzwM8PPDD8z/MzwM8PPDD8z/MzwM8PPDD8z/MzwMxvi
+ZfL8zP8zPAzw88MPzP8zPAzw88MPzP8zPAzw88EP3P8RllfF1lfvoL1/1zW
n50Hy/4Il/3B8DPBzww/E/zMOdh/SvEzw88EPzP8TPAzw8/0WvY3T8b+V8r+
Z3PMh53MB+u5y/zAz2yJ+dor88VamL9xMn8MPxP8zPAzwc8MPxP8zPAzwc8M
PxP8zPAzwc/8JfLFWvKF4WeCnzkA+eQtfuYC5NcQyS+Gnwl+ZviZ4GcegHys
Ej8T/EzwM8HPBD8T/EzwM8HPBD/TAuT3T5LfdBL53ln8TF8j/0Ml/6kT+uG4
9APdQX8slf6gAvEz2YifqRb90yL9Q73QT6Okn8ga/TVZ+osmoN+eSb+RO/rv
qfQffYV+PCD9SC7ozzjpT3JBv/aSfqUg9O826V96e0L62Ur6mZagvzdLfxP8
TPAzWaD/p0n/kzZ8MFJ8QCfEzxQkfiAD8TMFiC9oAvyhL/6gqfDJKfEJWcMv
zuIXGgXfmIhv6KT4mULFP9TRRXx0QHxEu8TPlCR+ok7wFYmv6JGN+Oul+Iuu
1YvPjorPKBh+8xa/UYD4mb4V35Gm+JmmiP9oYa34MFx8SAXiZ/ISP9JW8TNd
E19SqYX484L4k16ZfeBT6gK/zhC/Urfz4ttF4lsKmPuBfwl+JviZktV+jj9/
TfxMq33E14/x+QX4+3v8fs458bkt/r6W/H+2wf8/O0Z8T/h+5eJnrsD37yN+
/icX5fl8xM/shOd/g/PFdryfw0/k/PHv+2vB+QR+JviZQ/H+X+N8E431ycX5
pxrrlyLryz2xvq3iZ47E+sPPDD/TUvEz+2P/nMb57GPsrzic39yw/1xwvovC
/jwq+5c/xv4dgfOhL/Z3N/EzO2L/J+J82Rnz4YLz5xeYn8k4ny7EfDXi/GqP
+fPG+bY/5nPSCzn/mmN+g3E+Ho35vofzsz/m3/3D8zVtxvm7EfkxEufzBuSL
Pc7vDsgfJ5zv9ZFPjTj/30R+fS5+5gPiZ3qF+4O6mZJ/H0k+chDy8STuHwyR
n+dxP2GEfN2J+4sVyN883G+cED+TEe4/7iK/zcTPXDZD8h1+ZviZFuN+xcNM
+iEJ9y/Ns6U/FuF+5rb4meFnhp85Dvc7fcTPDD8z/Myf4H5oDvrNC/dHLei/
/uJnTkQ/LsH902P05wDcT/mjX+Nwf5WD/n2I+60j6Gf4meFnhp8ZfuYnuD+L
Qf/b4H5tDXwAPzP8zH1xP/cMvoCfGX7mrgflfm8IfAI/M/zM8DPDzww/M/zM
LcYf3C8y/MzwM8PPDD8z/MzwM8PPBD9zPO4/34ifGX4m+JnhZ4KfORr3q3vh
Q/iZ4Gc2jJD72dhfxZfwM8HPDD8T/Mx+uP/VhF/hZ4KfGX4m+Jn/Bz/p6tI=

            "]]}, 
          {RGBColor[1, 0.5, 0], Thickness[Large], LineBox[CompressedData["
1:eJxV2HtAzfcbB/BI2H5olcn151bR5FS2/QzjEZNbyMpdCU0xyl0l02pExcrK
5aeQmMvIImFaD4VyGZIuIjndb+ecos6hkm09b3/4yx9Hdb7fz/M879fz6b/E
+9vv2urp6Xm00dP799/yipag0AAN6w78MeCEkf6fYbYTQ9xHa7in0jvUaU4G
W93saThno5r3dsjPzOyax0HPagvdh6m4ufeFBYtTlBwRd+JapH811wd6Fmo/
LWdDVdgN46WV3CbfrnpUYzU33LIwsdCWsVtfu7Jaq1oObLRo6jOxhMMOZx29
2vUlr6zrYuLsoeS7D4fv2Zfwinu1GR2QcP8ZO/kZWZrrN/CujOTG02dyWLPY
ZcbA/2j55uMovelBD/m2S4XTm3tadnJIXX3q0Q12Pv+ufOw0HafXF/seuZnA
by9GZM6L0PEUveaorxZEkd0Z676dD+t41P4tPw8MukotifGzxvnreHh+RP6O
GRm0s+O7qFsKHX867oHLGPNM6rVx6QCzZC2XDrK/aJCTTdNcN2YFW2q5bdnU
Lhe+yqeetea3EjY38Aw3i0b7ac+JTl44qk6q55ZiVeqKj5U0YuKlwaaFr3j6
+sc7D2cU0ewOxoaRupescMsu8VtSQvpFmjPu+i/Zs4f7Zx5PSmlCVScaZFDH
X84eO16lKCf/V93zx7do+NijJvNf3SvIMW9txb4yFb/xOJ1h7V9JikTXfmdv
VfPrUStLzDZVkepW47UVsZU8YUxRU7c51TTkUa2Dg285669wGxLSp4bSu5yM
9HYs5S121q4v79aQ4sLESbGDi3lsyq69CUtVtMt1VW9PfSX7KY3bm5apyPD8
ZkWfGwU8dHPwdVdnNXl7p4ybE/qEnSwDyhLOqSl2W3Odk2s2l6wzNx70Rk0L
H1yZEjMmk6v6Nhum2WroVahX/8b5dzhlyPKzvvM11LRq5K+d5qZyh5CFcYr1
GkrupjqysSaRLU1GhyZt1dDPnka39C9HsS7wk9zcLRpyHebQJyEijqbWdU2f
6q2h488VQaZJl2lG98tz2VlDRqr+S7qcSaO3pwZZPVZoSJvmcPpezh0ynXXB
tX+Lmtq6jHR3Uz0kTY527hdpalq29mHEtQWPKS9renjED2p6wJqnLkm5tGPt
j6Mu2qgp/FqIcY+3+bQ4+V6jSb6KrqWZDXlq/ZxuB/C6XptVtN/lTtXkEy/I
ctZS5bCuKkr0tjaLtiqi+1ucDlw9XkMewfRf5YliKvrWc7uRTQ296Zuzw7RH
KRVExR0IvVBNMWPCQyigjHwMPx7mb1NNKxzL184vKKc4hYm/7Ykqsp+Z47PC
ppIi58y83WBaRT7Hh/601reKsnWqF4ZBlXR6zLt3Gy5Xk1N56OS0igradDk9
0UdVQ5cie+xynFxB50KGnPqhu5osHUw2NRwrJ3v/KR3DRmio6P6ZaaqmMhpm
4bn928G1VHXQsf2a6WVksaHd67L4Wgp8lL/hUnQpRV608tpmU0cF4Sr/hrIS
8qyZUmd9to7GDbpo4zq0hMJvFvpUmL2kM17f6w1cXUzr7Nwrft/3kjw6Fueu
O1dE6m/0O4cavCKnCS60tVpJvlHto328XlFDUbnPWjMlpbXNs9386BV1SPI7
6Dv/BcUa+M+MtK2nK4uM5m7tVUhKtZf7zdB6qsxetrzAv4D2G2X+Yaisp5Ae
BxIXPXlKMRaZoettGyhy54EXs23zKWyPvbbev4Gs2t3pZrwtjxKne7fZk9ZA
pz7bZ174OIe6Nd+KcTDQUkhSxpGP+2fTVRv1cfNxWpq+7Pq7wuVZFL3o/4V9
/LRklVN85dS5TAouDG7+8qyWgo8dTF1S+oCcQjwPej3VUvRvNj5bl90j70l3
JmW001Fk8e7LI4ozaHBk3dbxljrKcjdf1W/hTao8dOy3F5N0pIybu/p65nVq
O7PE4shSHQ3uFe/ltDOZXB6Fjw701dG4gS/r76y4SNlJOqvgEB0t+uvqmjZ7
zlCs/RSzc3t19IlRcZBVZDR9Gt/4TWOMjhY4z/+l+/Gg5FjFu6OeR3T0WD7n
9vj8L/l53o+f/1x+P1fg94+Vv8/z8Pdb5Ptxs6N8vwL5/lyD74/nYzM833V5
fl6I54+R98Pf4P2QvD/ehPe3QN4vH8T73SPvny/h/d+Q8+GPcD6fy/lxPM4v
Vs6XV+F8f5Hz5304/zqpDw5HfZyX+uGHqJ9OUl98DPWF+uO7qD/UJ29EfXpK
/XIF6veU1Df/gPqeIPXPm1H/SukPdkd/bJP+4R3onwrpL37fXznSf9wV/TdI
+pPt0J9XpH85CP3rLP3NAejvx9L/fBT9j/nAmzAfImV+cLWjzI+1Ml94MeZL
rswfPoL5UyPziRX9ZD79JfOL/TC/2sl8Y2vMt2sy/3g15t8kmY+ckirz0Vvm
J2tY5ud1ma88DPP1qcxfTlkj81df5jMfWijz+bnMb+ZUmd9jZL7z6hqZ7yNl
/rNHgcz/bMkH3jFU8qGT5Acbe0t+tJF84Vmmki9Jkj9s4iX5kyD5xOd3ST7V
Sn5xy33JL4XkGyu2S74ZSP5xCfJvq+Qjv02QfCz9szU/2WCR5Oc0yVf2Qr7m
Lm/NX9Ygf/8n+cxfIZ9LJL9ZP13yO13ynZcg3x0k//kw8j9vVqsPOB0+6Cp+
YDf4wVJ8wV3gixfrWv3B38MfleIT/gI+uefa6hdeDL80l7b6hnvBNw/FP+wI
/2yza/UR94SP8p60+omD4aezUa2+Yh18Ffem6V9/8Qj4a3ZDq8+oHj6bN73V
bzQYfssS31EqfLdD/Edq+K+b+JAc4cM48SOdgB/XiS/pF/iySfxJC+FPO/Ep
7XwiPn0mfiUL+HWj+JZ69xHffi3+JV178W+k+Jh2F4qP4WeCn0fDzwQ/E/xM
8DPBzwQ/E/xM8DPBzwQ/E/xM8DPBzwQ/kx2ev1Cen+Bngp8Jfib4meBngp8J
fib4meBngp8Jfmb4mWwPyPnqX2w9X+r8VM4ffiYn8TObSn0Q/MzwM8HPDD/T
cPEzj5P6I/iZ4WeCnxl+JgvUd0epb3JB/cPP9Jn4mcOkP+h39I+99A8Zekp/
dZf+onZfS/9li58Jfmb4meBnhp8Jfmb4meBnhp8Jfmb4meBnhp/JEfMlW/xM
8DPDzwQ/c++w1vlE8DO/Fj8T/MzwM8HPDD+TFvNRLX5m+JnhZ4afGX5m+Jnh
Z4afGX5mNeZ3b/Ezw898V+Y778T8DxQ/sxvyIVf8zGnIj1OSHzwA+XJb8oXv
In9CJX+4BPnUWfKJ4WeOlvxi+JndJN/4JPJvlPiZI5CP8DPnIj+PS37y+3xd
KfnK55G/hyR/eSDyeaTkMz9Dfg+R/OaqD/OdtyP/oyT/+Ql84CE+4Pd+OCx+
4Pe+WC6+4OXwR4P4g+d/6BN+Db8kiV+4PXwTI77hC/BPlviHc+GjveIj/hF+
ihY/8T74KkJ8xQr4K0n8xUnwWXfxGR+E3/4Qv/E0+O6k+I6t4b+fxH8cCB9O
FB/ydvjRR/zIQfDlUPElJ8OfmeJPhp+5RXzKM+BX+JmHwrfl4lv+CP6NFP9y
9ifiY/iZ8z7SBGywSUiOEz9ztXxOpvi8+p74+yh+ftmHPmcL+N0df7/XMfG9
nvie38L/Ffj+8dgPLPB8Sdgf3PD8P2O/+ALvZwT2Dz+8vynYT2Lxfvdhf7mM
95+C/QZ+5knYf2Jwfr9hP1qJ8z2E/Wknzr8W+9Vu1Ec89q8HqB8D7GehqK83
2N8Y9eeM/c4D9fkd9j/4mY9jP/RAfdthfwxE/T/Dfjke/fEj9s9g9E8Z9lNz
9FcB9td26D/4mYzQn+ew/yrQv7OxH8egv9OxPzuj/3djv/bFfDiC/XsA5sd6
7OcLMV/e7+8pmD/l2O/rZL/nh9j/12B+dcb9wGTMt0TcH8zE/JuH+4XDmI/r
cP9QJn7mXNxP3MZ8VeL+4q34mXXOcr/hLX7mUtx/zMf8Hor7EVW1zHf4meBn
zsf9yh2F5IPKWO5f7P0kP9rifiZV/EzwM8HPdA33OybiZ4KfCX6m4bgfKkO+
fYn7o7HIvyW4X3JBPurh/ikL+WmP+6ltyFeV+JmUyN/OuN/yRD7DzwQ/E/xM
8PM//0/uzzYh/4vEz5QKH8DPBD//4xG5nzOAL+Bngp/p0Yf3ewQ/E/xM8DPB
zwQ/E/xM8eJn6gsfwc8EPxP8TPAzwc8EPxP8zPAz9cP951T4DX5m+JngZ4af
aQ7uVyfCh/Azw89k1CT3sxbwJfzM8DPBzww/0wnc/6bAr/Azw88EPzP8TH8D
SutOVA==
            "]]}, 
          {RGBColor[
           0.8588235294117647, 0.4392156862745098, 0.5764705882352941], 
           Thickness[Large], LineBox[CompressedData["
1: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
fOSxmI9+Mj+5xlLmZ7bMV16M+Won85cVmL9LZT5zIOazj8xv7oj5fUnmOy9z
kvmuk/nPIVdk/i+WfOCEbMmHbpIfvI0lP7pIvnA18iVO8oc/5k+s5BO/fyr5
tFHyi99vkvzqK/nG81dIvjlK/nEu8u+w5CPnIR8bNKb85JUekp/bJV95hEry
dZ7kLzerkPw9IPnMOchnN8lvno78zpR853fI9/IcU/4zIf8dxQccBR+0ET9w
IfwAX3B7+MJM/MG/wx/h4hMOhE8cfzL5hd3gl2jxDW+Gb1LFP+wA/8R8afIR
P4GPGqtMfuIf4SdnW5OveCx81b+7yV8cDH8d8zD5jBTwWfR0k99oPvymFd+R
P3zXVvxHGvgPPqRC+PA38SN5wo/rxJfUBb7MFH/SNPjTKsfkU7KFTwvEr+SU
K36NEN+SEb5dLP6lx8ni32fiY1pXKD6Gnwl+doGfCX4m+JngZ4KfCX4m+Jng
Z4KfCX4m+JngZ4KfCX6mpnj+vfL89PH9wM8EPxP8TPAzwc8EPxP8TPAzwc8E
PzP8TMEOcr5z5HzJ0ijnv0XOn6xcpT7uS30Q/MzwM8HPDD/TEfEzw88EPzP8
TPAzw890F/XdReqbZqH+k6X+KQL9ESz9QX3Fz2wu/UMtP0h/lUt/0Xz033Dp
P4KfGX4m+JnhZ4KfGX4m+JnhZ4KfGX4m+JnhZxqP+dJS5gvBzww/UxXmk0Lm
Ex3H/FLK/CL4meFngp8ZfqZdmI+Xxc8MPzP8zPAzw88MPzP8zPAzw8/sjvnt
J/Ob72G+F8p85w2Y/8PFz3wV+aAoN+UD5yA/+oifua/4mdeIn7k/8ucXyR++
jnx6J37mwcivVpJfDD9zd8k3/lz8zG6Sfww/8yDJR7ZGfo6T/OSvkK9zJV95
FPLXT/KX85HP8ZLPDD/zPslvhp8ZfubryP9W4me+AB/Az5wGP3wQP3AEfLFL
fMEf/aEXf3AwfPK5+IQnwi9jxS+8EL5JFt9wFfzzWPzDI+GjavERp8FPNeIn
fg1fbRJf8U746zvxF6+Cz2aJz7iZVvzWX/zGAfCdtfiOS+G/heI/vgUfFogP
uQ5+PC9+5A7wZbj4khn+zBZ/cgN8elt8yvnw6xbxK++Gb+PEt2wD/4aJfzlM
/MzwMy/T3gl86JBwdZn4mY+Kn+k/+P3dXuLvPfj7e//0OUfB73vx/9/A9/fw
/W7A/w/w/W2wH3yL58Pz0wE8fxL2i7N4P4ewf8zF+5uJ/aQT3m8Lef/kivc/
D/vNeJxPNPafSTi/l9iPxuF8j2N/uonzH4T9Cn7mLOxftaifCdjPolFfbtjf
fFB/c7DffYL6dMH+V4L63YT9cCfq+yj2x0rUfxL2y5boj/PYPxvFz6zAfmqD
/hqF/TUA/XcZ++0m9KcN9t9O6F8P7MeR6G9z7M+W6P8c7NfwM1ti/+6P+RGM
/dwW88UR+/uXmD+Xsd/rMZ8+7v/hmF+f4H6gUPzMF3B/kCx+/jgf6Yb4mf1x
/1Alfua7uJ9QYr4OxP2FD+avH+43rDCfA3D/sRzzOxH3I7FDZL7DzwQ/8wrc
r2zJlXz4s0LuX0JKJT86435m9TeSL3H/vL+hJNzv7EE+wc8EP5Mz7oe6IN8W
4f7IA/kXhvulJhrJxw64fxoifqb1uJ+aKH6mNbi/eo38XYb7rVaLJJ/hZ4Kf
CX4m+JmeiJ/JDvk/HPdr2+AD+JngZ6rH/Vw7+AJ+JviZXHG/FwCfwM8EPxP8
TPAzwc8EP9Mf4md6Bh/BzwQ/E/xM8DPBzwQ/E/zM8DP9hPvP3fAb/MzwM8HP
DD/TPdyvXocP4WeGn6mtvdzPbnguvoSfGX4m+JnhZzqA+99m8Cv8zPAzwc8M
P9P/AO56DVc=
            "]]}}, {
          {RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 0], 
           PointBox[{0.30542292639874086`, -0.2607778980496586}], InsetBox[
            StyleBox[
             SubscriptBox["\<\"X\"\>", "1"],
             StripOnInput->False,
             FontSize->20,
             Background->Directive[
               GrayLevel[1], 
               Opacity[
               0.5]]], {0.30542292639874086`, -0.2607778980496586}, \
{-1.25, 1.2}]}, 
          {RGBColor[0.6, 0.4, 0.2], 
           PointBox[{0.12603277717747635`, -0.15316789278504173`}], InsetBox[
            StyleBox[
             SubscriptBox["\<\"X\"\>", "2"],
             StripOnInput->False,
             FontSize->20,
             Background->Directive[
               GrayLevel[1], 
               Opacity[
               0.5]]], {0.12603277717747635`, -0.15316789278504173`}, \
{-1.25, -1}]}, 
          {RGBColor[0.5, 0, 0.5], 
           PointBox[{-0.04768414888480663, 0.4175787479967822}], InsetBox[
            StyleBox[
             SubscriptBox["\<\"X\"\>", "3"],
             StripOnInput->False,
             FontSize->20,
             Background->Directive[
               GrayLevel[1], 
               Opacity[
               0.5]]], {-0.04768414888480663, 0.4175787479967822}, \
{1.25, -0.6}]}, 
          {RGBColor[1, 0.5, 0], 
           PointBox[{0.4734666293020426, -1.2946611743486895`}], InsetBox[
            StyleBox[
             SubscriptBox["\<\"X\"\>", "4"],
             StripOnInput->False,
             FontSize->20,
             Background->Directive[
               GrayLevel[1], 
               Opacity[
               0.5]]], {0.4734666293020426, -1.2946611743486895`}, \
{1.5, -1.}]}, 
          {RGBColor[
           0.8588235294117647, 0.4392156862745098, 0.5764705882352941], 
           PointBox[{0.21289124020861805`, -0.4385412131759537}], InsetBox[
            StyleBox[
             SubscriptBox["\<\"X\"\>", "5"],
             StripOnInput->False,
             FontSize->20,
             Background->Directive[
               GrayLevel[1], 
               Opacity[
               0.5]]], {0.21289124020861805`, -0.4385412131759537}, \
{0.5, 1.25}]}}}}},
      ImageSize->400,
      PlotRange->{{-1.6, 1.8}, {-1.5, 1.5}}], 
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
        {RGBColor[0, 0, 1], Thickness[Large]}, 
        {PointSize[Large], Arrowheads[Medium], FaceForm[None], 
         {GrayLevel[0.5], Dashing[{Small, Small}], 
          LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{1.4095389311788624`, 0.34202014332566916`}, {
           0.45108693133427213`, -0.9537110161840732}, {-1.4825275309807053`, 
           0.1521871945032789}}]}, {
          {RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
           CircleBox[{0.30542292639874086`, -0.2607778980496586}, 
            0.5291859674831357]}, 
          {RGBColor[
           0.8588235294117647, 0.4392156862745098, 0.5764705882352941], 
           Thickness[Large], 
           CircleBox[{0.21289124020861805`, -0.4385412131759537}, 
            0.7295903315919989]}}, 
         {RGBColor[1, 0, 0], PointBox[{0, 0}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(9\\)]\\)\"\>",
            StripOnInput->False,
            FontSize->20], {0, 0}, {-1.25, -1.}]}, 
         {GrayLevel[0], 
          PointBox[{{1.4095389311788624`, 0.34202014332566916`}, {
           0.45108693133427213`, -0.9537110161840732}, {-1.4825275309807053`, 
           0.1521871945032789}}]}, 
         {RGBColor[
          0.7411764705882353, 0.7176470588235294, 0.4196078431372549], 
          Thickness[Large], LineBox[CompressedData["
1:eJxV2HlYzfkXB/AwkWEUjSGibFmSmbErOimZIgyyjG0oEqPsSRKyREkTY7KF
ohlUltIgzEldqdyaVCKFFpS03HuzpeJn7nn//pi/PJ6ebvf7/Zxz3q/P6eGy
ctqS5jo6Ou7NdHT+/TcuSFGhN0HDe4em5mTMKBjt2N5iVtteGh4SW7ClbuEJ
erAwWL3pgpqT3FytRrS5QEedQvssq1Px3HOv7158+hcVmL3ctb6ylrMt8z7G
JN8kZerbCTN9qtmwpip3q14yBZQaW889W8n99uwJ+PaRgiw7WXB4UDm7F4Xv
aj7lDuk2Kza2G/aM9fW67xjtmk7FaZ1aB1wr5gTb584u39yl6riur/ScH/GU
Li06XV6upP1JS8L9Buay7rGrLQ4uzqQwm/3xURZpnOqt71TXOovCz53yvxV5
maNeKXxuLMqiy4N6DhquPESD6WnukrVZ1N/xSWEHDZP38WnFQeOzaJjHqcdL
LJW0oPOzXmdLM8kg5sP4gIpcOrHNpqZkcib9cH1x58w5BXRk5PJepaFKKjtb
Zui65gmtv5m8Kf3SXco2NFSfDiuhXXrrC3pezqDCPq90F6WXUdvA2riy8HRy
sWyI9f3nOVVYn2q/em0aefYZu9I1upy8On3oe2bkHcpf6dwiccFL0hxK+VCh
uk36ba1OObyqJK/NVs17nlBQtpH+wMppVRQ2Y0JDoX0K6RocddgSVk1NGw+4
2pfforfKHiXPEmvIKfKI05idSZQze4559d+1ZNvYNzbR9m963+GtW+w0FVVb
9vHR9blOs+rH3qu5oqIRp31KY+Ku0pjfN8zVM1DTT07dQs/UJJCtS8eTN+aq
KfBSv2OR38ZTXm6DacpRNc07UhbSfMNFilaNnZ+W/fn/GvsONUHRFDfb/BvP
BjWdUsW1bbT8g4Zuibg80VhDPu9CBzxsPEmzF+ooaoZoyNPNt0VGVBgF+fDG
QlsNTe9m97F3fSAZB5yyC3bU0MT8Vj33fvqFhqqyZ21w0JDLqZFqY8uN3MPB
xU7XRkPx5Y2HuxWGcEhe7/VHv9PQO/eyg0bzDrMy/mlyWBcNPTUPvv+nUwQr
rbpVTP2oJpMDZva2OVG8fE5RU9ciNS2bMbX1IetzPGF0SaXtZTUdevB43LrQ
8zzpcZiyXYCarM+fXzRrySXeFhQ1O8VZTbsdN1R8vT6eLQpcR5zspibXbU2D
KzYk8MJeB2aVlKhoa+nkSRkeV/h70xNWHKGi62aHza/MvMaDON9m5XwVvakL
MI4dfJ3P+zQU9+qoIpPJpVNjmt3ka9M6PzbaX0t9dEx9/0r5m/cGzDl0QVND
w298bbV0dBKv7tmFfnaqoWR/z0+bDG7x9kArnU0nqomSzbjrk1u8gt7YTa2q
oueLN1c6RCWz3+2QDwOHVJG7f7JRS7cUDht18dmMda+o49v0xhmmCl5Yf+W+
wcVKGqBeMckqT8Ehu6+pTrx4SVYlEYqr227zUb2NxbadX9KiiYr29/qlssr+
+Zcj7CvISDchd1d6KpuEeyRd8Sgnw9yAA0Wud3hc5q9LP4a+oG3j/ZLy3n3+
v2X9adu45+RR3jl29c40btVl3dbErGfkEq0fnNA2nSce+zLgSHkZzV7del1k
cDqn9ver7NhUSo36KmdLvQzevs71+AL9UtJbl9Jsi28Gp3U3XBvVvYScQnLM
11RmsIYiB3UxL6ZxfuMWd5x2l8vf9HB4sOwJdV/21Hh5/F0ebR8fGuJdRD1m
NJ1Z3U7J73rr77/i/4j6ukVYW7gqOS2ubsiZ3Q9J0SbyXfglJc+yftHpWmA+
6fzwJEdRr+QunuYJNnvy6OjZ9QmRVplcMfme9287cqixruGXkRsyua1Kp0xv
czZVOURG74rJZJuNB+zLniupoehHw32Fmey7ynyRXWYamRXEDJzyRRYX9nuR
lX9RQa75LT0yzLK46PdEy7GhSaRbP2i4jl0Wu1+4UjnhyVXqMXLgA9XsLP7H
09Nu4u8XacTDvL3H3LN4VbHrzuCwk9Q9eLx/izVZfLx1ra7CM2l0605j7vVZ
n8Vnn2h/ziPx80vy+zwRv79VPp+bRsjnp8nf53b4+wfl+/FWfL+h8v25F76/
hTwff8Tz5dRqn58HOMrz58n74X6v5f0UeGjfH+fh/RnJ++UBeL+R8v45H+//
kpwPu+B8hsv5MeH8zsn5sjfON0/Onzfi/OOlPngH6mOn1A+boH7Spb64AfXl
IPXHP6L+vpL65Jmoz++kfvkC6ne81De7ob4/HtPWP/uj/mulP9gY/bFP+ocj
0T+B0l9sif6aKf3Hnui/g9Kf/A3600v6lwPRvx7S31yG/t4p/c/W6P9VMh84
GvNho8wPDsX8uCjzhVdhvpyT+cO+mD+YT9z8tcwnzC++hvk1XeYbjyqT+dZf
5h8rMP+8ZT7yn5iP42V+8nTMz3EyX9kZ83WxzF+2xvxNkfnMSsznFJnfnIj5
vUfmO9/GfO8q859tK2T+95N84E/HJR/aS37w1EeSH7slX9gD+eIs+cOxyJ/u
kk88rF7y6arkFyfWSn4dk3zjfXWSbymSf6xG/tlIPvJR5OPXkp+8Z5Lk51jJ
Vy5Avj6T/OW1VpK/CslnDkQ+l0h+sxfyO1tfm+88x0fyfYXkPw+eKfl/so3W
B2zqJz5YK35g78PihyXiC/aDLx6P0vqDg0j8kSY+YRP45EUHrV94Xmvxy1Px
DXvDN4PEP3wG/nGI1vqIS+Gj3BVaP/Ea+OmmvdZXfBq+GmCm9RePg7+8orU+
o0T4bJSd1m/0FH6LF9/R/333j/iPfob/KsSHdBM+nCp+pKpW4sf+4kvygC/D
xJ/UBv786o7Wp3S/Wnw6tK/Wr3R6lPj1oPiWNsG3xeJfWgb/ThEfU6tz4mP4
meDnG/Azwc8MPxP8zPAzwc8MPxP8zPAzwc8MPxP8zPAzwc98X0eef6T4meFn
gp8Zfib4mff/9/0y/EzwM8PPBD8z/MzwM5tPkPNdIefLRp5y/nZy/jxf/Mwh
Uh8MPzP8zPAzw8+cJn7mQPEzw88MPzP8zPAzu6C+N0h9sxL13yh+5ubiZ94j
fuYi9E+Q+JmNxM/8VvzMX2RK/w2X/mP4meFnhp8Zfmb4meFnhp8Zfmb4meFn
hp8ZfuYzmC/F4meGnxl+ZviZ273XzieGnzle5hfDzww/M/zM8DPDz+wUpZ2P
BD8z/EzwM8PPBD8z/EzwM8PP5In5vdNZO78JfuarMt9pCua/mcx/2ox8iJZ8
oAHIjzOSHzQX+VIqfqaByB/Dvtr8IQvkU1/JJ7qA/NKX/KIk5NvrTyb/5hsF
I/9GS/6Rz3/zkYKRn99LfpIv8vWm5CttQ/5Ok/ylcOTzl5LPtAL53UHym+Bn
hp8pAvm/QPKfquGDzuIDMhA/cz/xA/0IX3iJL8ge/nAXf1B7+GS++IRc4RcH
8QtlwDcfxDf0G/yjK/6hW/CRs/iI1PCTnfiJsuErU/EVTYC/TMVf9Bo+MxGf
0WP47Zb4jYbBd2/Ga31HfcTPfFj8R/Xwoa74kMrgxxfiZzKHL9+IL+k8/Gkj
/qQa+HSp+JRaholfW4lfKfW8+FZP/EzDVop/p4t/CX5m+Jk89r3QM/sj7Yau
+JmKxM9kgp//Bn8Pxu+/k8+n3vj8Kvi97r38/TvwvRe+31z4vye+f2/cD1o+
lufLk+enTuJnisb9Yi7ej0L8TPfx/uBnMhA/UzTuL4/w/v/E/cYL5zMM9x83
nF8c7kdbcL6PcH/yx/nDzwQ/kz/uX8aonwTcz2wMpL4ccX9bifrTw/3OB/Vp
ifvfDtTvWNwP96C+34ufaRfqvwT3y7XojwDcPy+gf3bifjoK/TUb99cg9N+v
uN/+gP5chvvvPfTvUtyPX6G/N+P+vBv97477dQ7mw3bcv5djflzC/Xye+Jli
cH9fi/mD+URDMJ++w/2/VvxMM7AfGCB+/nwvlP1BCeafH/YLsZiPjtg/WGB+
OmA/YfZQ5qsb9hc/iZ+Jsd+4g/mciv3H3YEyv7djP6K7VOY7/EzwM/XHfiU/
QvKhFfYvceWSH/Az1XeXfIGfCX7mXtjvuCCf4GeCn/kk9kP5yLcC7I/skX9D
sV8qQz72xv7JWPzMY7Cfqke+VmF/ZSd+5jDst7o1ST7DzwQ/M/xM8DOHYn/2
DvkfJ36mOvgAfib4mVdhP7cGvoCfCX7mCOz3ZsEn8DPBzww/E/zM8DPBz7xf
/Ew34CP4meBnhp8Jfmb4meBnhp8ZfmZn7D/L4Lf4/+5HGX5m+Jmbpct+NQY+
hJ8ZfuZK7GdLC8WX8DPDzww/M/zMaux/feFX+JnhZ4afGX5m+JnhZ/4fWt0R
+Q==
           "]]}, 
         {GrayLevel[0], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)(t)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {1.5850810758209055`, 0.4378583165891033}, {0, 0}]}, 
         {RGBColor[0.6, 0.4, 0.2], 
          PointBox[{0.12603277717747635`, -0.15316789278504173`}], 
          {Thickness[Large], Dashing[{Small, Small}], 
           LineBox[{{0.5497612675177326, 
            0.2086223184397264}, {-0.7214242035030365, -0.8767483152345781}}],
            InsetBox[
            StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(2\\)]\\)\"\>",
             StripOnInput->False,
             
             FontSize->
              20], {0.12603277717747635`, -0.15316789278504173`}, \
{-1.25, 1.1}]}}, 
         {GrayLevel[0], PointBox[{-0.7214242035030365, -0.8767483152345781}], 
          InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(100\\)]\\)\"\>",
            StripOnInput->False,
            
            FontSize->
             20], {-0.7557702070263328, -0.9706650445322794}, {0, 0}], 
          PointBox[{0.5497612675177326, 0.2086223184397264}], InsetBox[
           StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(11\\)]\\)\"\>",
            StripOnInput->False,
            FontSize->20,
            Background->Directive[
              GrayLevel[1], 
              Opacity[
              0.6]]], {0.5497612675177326, 0.2086223184397264}, \
{-1., -1.25}]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          PointBox[{{-1.0741390511404143`, -0.08138371527363403}, \
{-0.34375076678442706`, 0.2269355981192784}, {
           1.1297600088883857`, -0.03621295279662672}}], {InsetBox[
            StyleBox[
             SubscriptBox["\<\"e\"\>", "1"],
             StripOnInput->False,
             
             FontSize->
              20], {-1.2176912955921795`, -0.1248894977957383}, {0, 0}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"e\"\>", "2"],
             StripOnInput->False,
             FontSize->
              20], {-0.3968725212131817, 0.3672141752663649}, {0, 0}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"e\"\>", "3"],
             StripOnInput->False,
             
             FontSize->
              20], {1.2785420794475153`, -0.05528899746364746}, {0, 0}]}}}}},
      ImageSize->400,
      PlotRange->{{-1.6, 1.8}, {-1.5, 1.5}}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{0}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7878527685912914`*^9, 3.787852805727216*^9}, {
   3.7878528370487103`*^9, 3.787852884002122*^9}, 3.787852922100547*^9, {
   3.787852961305147*^9, 3.7878529801534915`*^9}, {3.787853037900857*^9, 
   3.787853047883877*^9}, {3.787853080695877*^9, 3.787853129898605*^9}, 
   3.7878531666766768`*^9, {3.787853210711322*^9, 3.7878532594869647`*^9}, 
   3.787853336814641*^9, {3.787853800464103*^9, 3.7878538106943593`*^9}, 
   3.788075735864523*^9, 3.7880766463495984`*^9, {3.788076717668318*^9, 
   3.7880767269275484`*^9}, {3.7880767925761657`*^9, 3.7880768529670334`*^9}, 
   3.7897221792049203`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"export3", "[", 
  RowBox[{"\"\<0030_x12345_feuerbach_combo\>\"", ",", "x12345feuerPlot"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7878532697001534`*^9, 3.787853277184683*^9}, {
  3.7878533196998014`*^9, 3.787853340448457*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7878527184008694`*^9, 3.787852721248874*^9}, 
   3.7878527779375033`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "showAntiCompl"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "showAntiCompl"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<x100displ\>\"", "\[Rule]", ".15"}], ",", 
     RowBox[{"\"\<drCirc\>\"", "\[Rule]", "False"}]}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"showAntiCompl", "[", 
    RowBox[{"a_", ",", "deg1_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "o", ",", "n", ",", "s", ",", "ell", ",", "gr", ",", "x11", ",", "x100",
        ",", "x2", ",", 
       RowBox[{"clr", "=", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick"}], "}"}]}], ",", 
       RowBox[{"lgt", "=", ".33"}], ",", "mit", ",", "ctrs", ",", "rhat", ",",
        "rads", ",", "caustic", ",", "act", ",", "actInc", ",", "actInradius",
        ",", "actSides", ",", "actCtrs", ",", "actRads", ",", "actIntouch", 
       ",", "ext"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ell", "=", 
       RowBox[{"plotEll", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"o", ",", "n", ",", "s"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", 
         RowBox[{"toRad", "@", "deg1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ctrs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"getIncenterTrilin", "[", 
          RowBox[{"o", ",", "s"}], "]"}], ",", 
         RowBox[{"getNinepointCenterTrilin", "[", 
          RowBox[{"o", ",", "s"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rads", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"getInradius", "@", "s"}], ",", 
         RowBox[{"getNinepointCircleRadius", "@", "s"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"caustic", "=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"o2", ",", "n2", ",", "s2"}], "}"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"o2", ",", "n2", ",", "s2"}], "}"}], "=", 
             RowBox[{"orbitNormals", "[", 
              RowBox[{"a", ",", 
               RowBox[{"toRad", "@", "i"}]}], "]"}]}], ";", 
            RowBox[{"getFeuerbachTrilin", "[", 
             RowBox[{"o2", ",", "s2"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "359"}], "}"}]}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"rhat", "=", 
       RowBox[{"rot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"toRad", "@", "25"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x11", "=", 
       RowBox[{"getFeuerbachTrilin", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x100", "=", 
       RowBox[{"getX100Trilin", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"act", "=", 
       RowBox[{"anticomplementaryTriangle", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"actInc", "=", 
       RowBox[{"getNagelTrilin", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"actSides", "=", 
       RowBox[{"triLengthsRL", "@", "act"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"actIntouch", "=", 
       RowBox[{"intouchTriangle", "[", 
        RowBox[{"act", ",", "actSides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"actInradius", "=", 
       RowBox[{"magn", "[", 
        RowBox[{"actInc", "-", 
         RowBox[{"actIntouch", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ext", "=", 
       RowBox[{"extouchTriangle", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"actCtrs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"getIncenterTrilin", "[", 
          RowBox[{"act", ",", "actSides"}], "]"}], ",", 
         RowBox[{"getNinepointCenterTrilin", "[", 
          RowBox[{"act", ",", "actSides"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"actRads", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"getInradius", "@", "actSides"}], ",", 
         RowBox[{"getNinepointCircleRadius", "@", "actSides"}]}], "}"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"x2", "=", 
       RowBox[{"getBarycenterTrilin", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{"clr", ",", 
          RowBox[{"FaceForm", "@", "None"}], ",", 
          RowBox[{"PointSize", "@", "Large"}], ",", 
          RowBox[{"Arrowheads", "@", "Medium"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", "Black", ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "a"}], ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"a", ",", "0"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#1", "/.", "ptClrs"}], ",", "Thick", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"Point", "@", "#2"}], ",", 
                   RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\"\<X\>\"", ",", "#4"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Bold", ",", "16"}], "}"}]}], "]"}], ",", "#2", 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1.5"}]}], "}"}]}], "]"}]}], "*)"}], ",", 
                 RowBox[{"Circle", "[", 
                  RowBox[{"#2", ",", "#3"}], "]"}]}], "}"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\"\<inc\>\"", ",", "\"\<npc\>\""}], "}"}], ",", 
                "ctrs", ",", "rads", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "5"}], "}"}]}], "}"}]}], "]"}], ","}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Red", ",", 
            RowBox[{"Point", "@", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\!\(\*SubscriptBox[\(X\), \(9\)]\)\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"Bold", ",", "16"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.25"}], ",", 
                RowBox[{"-", "1.25"}]}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"ellLabelPoints", "[", 
             RowBox[{"a", ",", "o", ",", "\"\<P\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"Bold", ",", "16"}], "}"}], ",", "0.15"}], "]"}], ",", 
            "Blue", ",", 
            RowBox[{"ellLabelPointsb", "[", 
             RowBox[{
              RowBox[{"3", "a"}], ",", 
              RowBox[{"3", "a"}], ",", "act", ",", "\"\<P'\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"Bold", ",", "16"}], "}"}], ",", "0.2"}], "]"}]}], 
           RowBox[{"(*", 
            RowBox[{",", 
             RowBox[{"ellLabelTxt", "[", 
              RowBox[{"a", ",", 
               RowBox[{"o", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<\!\(\*SubscriptBox[\(P\), \(1\)]\)\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{"Bold", ",", "16"}], "}"}]}], "]"}], ",", ".25"}], 
              "]"}]}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", 
             RowBox[{"{", 
              RowBox[{"Dashed", ",", "Blue", ",", "Thick"}], "}"}]}], ",", 
            RowBox[{"Polygon", "@", "act"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<bar\>\"", "/.", "ptClrs"}], ",", 
              RowBox[{"Point", "@", "x2"}], ",", "Dashed", ",", "Thick", ",", 
              RowBox[{"Line", "@", 
               RowBox[{"{", 
                RowBox[{"x11", ",", "x100"}], "}"}]}], ",", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<\!\(\*SubscriptBox[\(X\), \(2\)]\)\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{"Bold", ",", "16"}], "}"}]}], "]"}], ",", "x2", 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1.25"}], ",", "1.1"}], "}"}]}], "]"}]}], 
             "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", "clr"}], ",", 
            RowBox[{"Polygon", "@", "o"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#1", "/.", "ptClrs"}], ",", "Thick", ",", 
               RowBox[{"Circle", "[", 
                RowBox[{"#2", ",", "#3"}], "]"}]}], "}"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\"\<inc\>\"", ",", "\"\<npc\>\""}], "}"}], ",", 
              "actCtrs", ",", "actRads", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "5"}], "}"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<feu\>\"", "/.", "ptClrs"}], ",", "Thick", ",", 
            RowBox[{"Line", "@", "caustic"}], ",", 
            RowBox[{"Point", "@", "ext"}], ",", 
            RowBox[{"ellLabelPointsb", "[", 
             RowBox[{
              RowBox[{"1.5", "a"}], ",", 
              RowBox[{".5", "a"}], ",", "ext", ",", "\"\<e\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"Bold", ",", "16"}], "}"}], ",", "0.15"}], "]"}]}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}], ",", 
            RowBox[{"PointSize", "@", "Large"}], ",", 
            RowBox[{"Point", "@", "actIntouch"}], ",", 
            RowBox[{"Point", "@", "actInc"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\!\(\*SubscriptBox[\(X\), \(8\)]\)\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"Bold", ",", "16"}], "}"}], ",", 
                RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
              "actInc", ",", 
              RowBox[{"{", 
               RowBox[{"1.25", ",", "1"}], "}"}]}], "]"}], ",", "Thick", ",", 
            RowBox[{"Circle", "[", 
             RowBox[{"actInc", ",", "actInradius"}], "]"}], ",", 
            RowBox[{"ellLabelPoints", "[", 
             RowBox[{"a", ",", "actIntouch", ",", "\"\<i'\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"Bold", ",", "16"}], "}"}], ",", "0.15"}], "]"}], ",", 
            RowBox[{"Thickness", "@", "Large"}], ",", "Dashed", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{"actInc", ",", "#"}], "}"}], "]"}], "&"}], "/@", 
             "actIntouch"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"Point", "@", "x100"}], ",", 
            RowBox[{"ellLabelTxt", "[", 
             RowBox[{"a", ",", "x100", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\!\(\*SubscriptBox[\(X\), \(100\)]\)\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"Bold", ",", "16"}], "}"}]}], "]"}], ",", 
              RowBox[{"OptionValue", "@", "\"\<x100displ\>\""}]}], "]"}], ",", 
            RowBox[{"Point", "@", "x11"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\!\(\*SubscriptBox[\(X\), \(11\)]\)\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"Bold", ",", "16"}], "}"}]}], "]"}], ",", "x11", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1."}], ",", 
                RowBox[{"-", "1.25"}]}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"Point", "@", "o"}], ",", "Blue", ",", 
            RowBox[{"Point", "@", "act"}]}], "}"}]}], "\[IndentingNewLine]", 
         "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ell", ",", "gr"}], "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7752971745963287`*^9, 3.775297182061423*^9}, {
   3.7752972180501823`*^9, 3.7752972385604653`*^9}, {3.775297274050559*^9, 
   3.7752974646283073`*^9}, {3.7752976622140083`*^9, 3.77529770355194*^9}, 
   3.787480133689603*^9, {3.7874802326047573`*^9, 3.7874802744130535`*^9}, {
   3.787480343790135*^9, 3.787480344348082*^9}, {3.7874803770787067`*^9, 
   3.787480531900138*^9}, {3.787480572468863*^9, 3.7874805965820627`*^9}, {
   3.7874806521878395`*^9, 3.7874807400836415`*^9}, {3.787480781453601*^9, 
   3.787481234492037*^9}, {3.78748204703868*^9, 3.787482272589252*^9}, {
   3.787482862005859*^9, 3.7874829000314283`*^9}, {3.7874829355395794`*^9, 
   3.787482992481699*^9}, {3.7874832369156446`*^9, 3.787483237298829*^9}, 
   3.788430665313367*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"anticomlpPlot", "=", 
  RowBox[{"showAntiCompl", "[", 
   RowBox[{"1.5", ",", "25"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.775297203548953*^9, 3.775297210280963*^9}, {
  3.7752972552488337`*^9, 3.7752972557115955`*^9}, {3.775297477007198*^9, 
  3.7752974951277514`*^9}, {3.7752978214233665`*^9, 3.7752978219758873`*^9}, {
  3.787481193671671*^9, 3.7874811937898135`*^9}, {3.787481389998871*^9, 
  3.7874813972792196`*^9}, {3.787483254888094*^9, 3.787483265863057*^9}, {
  3.7874847107758474`*^9, 3.787484718463067*^9}, {3.787484967256711*^9, 
  3.7874849783357697`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, {
    {RGBColor[0, 0, 1], Thickness[Large]}, 
    {PointSize[Large], Arrowheads[Medium], FaceForm[None], 
     {GrayLevel[0], Dashing[{Small, Small}], LineBox[{{-1.5, 0}, {1.5, 0}}], 
      LineBox[{{0, -1}, {0, 1}}]}, 
     {RGBColor[1, 0, 0], PointBox[{0, 0}], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(9\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->16,
        FontWeight->Bold], {0, 0}, {-1.25, -1.25}]}, {
      {GrayLevel[0], InsetBox[
        StyleBox[
         SubscriptBox["\<\"P\"\>", "1"],
         StripOnInput->False,
         FontSize->16,
         FontWeight->
          Bold], {1.4823775574072173`, 0.5085931837682558}, {0, 0}], InsetBox[
        StyleBox[
         SubscriptBox["\<\"P\"\>", "2"],
         StripOnInput->False,
         FontSize->16,
         FontWeight->
          Bold], {0.7617831344317568, -1.0216669251282755`}, {0, 0}], InsetBox[
        StyleBox[
         SubscriptBox["\<\"P\"\>", "3"],
         StripOnInput->False,
         FontSize->16,
         FontWeight->
          Bold], {-1.6402406039801483`, 0.1260489933066275}, {0, 0}]}, 
      {RGBColor[0, 0, 1], InsetBox[
        StyleBox[
         SubscriptBox["\<\"P'\"\>", "1"],
         StripOnInput->False,
         FontSize->16,
         FontWeight->
          Bold], {-2.314823435893239, -1.2978954407824939`}, {0, 0}], InsetBox[
        StyleBox[
         SubscriptBox["\<\"P'\"\>", "2"],
         StripOnInput->False,
         FontSize->16,
         FontWeight->
          Bold], {-0.9465620312265248, 1.5776253732675902`}, {0, 0}], InsetBox[
        StyleBox[
         SubscriptBox["\<\"P'\"\>", "3"],
         StripOnInput->False,
         FontSize->16,
         FontWeight->
          Bold], {3.7601537447512126`, -0.5919942656336353}, {0, 0}]}}, 
     {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large], 
      Dashing[{Small, Small}]}], 
      PolygonBox[{{-2.1403734781966737`, -1.2000833134174962`}, \
{-0.8436639346613594, 1.4061261554172866`}, {
       3.562587295771309, -0.560889631935887}}]}, 
     {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
      PolygonBox[{{1.3594616805549748`, 0.4226182617406997}, {
       0.7111069087873177, -0.8804864726766917}, {-1.4920187064290165`, 
       0.10302142099989509`}}]}, {
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
       CircleBox[{-0.3561402945908065, 0.047919082757039606`}, 
        1.0415023735252675`]}, 
      {RGBColor[0.8588235294117647, 0.4392156862745098, 0.5764705882352941], 
       Thickness[Large], 
       CircleBox[{-0.07296424356677733, 0.3224707118833438}, 
        1.4359225466014824`]}}, 
     {RGBColor[0.7411764705882353, 0.7176470588235294, 0.4196078431372549], 
      Thickness[Large], LineBox[CompressedData["
1:eJxV2HlYzfkXB/AwkWEUjSGibFmSmbErOimZIgyyjG0oEqPsSRKyREkTY7KF
ohlUltIgzEldqdyaVCKFFpS03HuzpeJn7nn//pi/PJ6ebvf7/Zxz3q/P6eGy
ctqS5jo6Ou7NdHT+/TcuSFGhN0HDe4em5mTMKBjt2N5iVtteGh4SW7ClbuEJ
erAwWL3pgpqT3FytRrS5QEedQvssq1Px3HOv7158+hcVmL3ctb6ylrMt8z7G
JN8kZerbCTN9qtmwpip3q14yBZQaW889W8n99uwJ+PaRgiw7WXB4UDm7F4Xv
aj7lDuk2Kza2G/aM9fW67xjtmk7FaZ1aB1wr5gTb584u39yl6riur/ScH/GU
Li06XV6upP1JS8L9Buay7rGrLQ4uzqQwm/3xURZpnOqt71TXOovCz53yvxV5
maNeKXxuLMqiy4N6DhquPESD6WnukrVZ1N/xSWEHDZP38WnFQeOzaJjHqcdL
LJW0oPOzXmdLM8kg5sP4gIpcOrHNpqZkcib9cH1x58w5BXRk5PJepaFKKjtb
Zui65gmtv5m8Kf3SXco2NFSfDiuhXXrrC3pezqDCPq90F6WXUdvA2riy8HRy
sWyI9f3nOVVYn2q/em0aefYZu9I1upy8On3oe2bkHcpf6dwiccFL0hxK+VCh
uk36ba1OObyqJK/NVs17nlBQtpH+wMppVRQ2Y0JDoX0K6RocddgSVk1NGw+4
2pfforfKHiXPEmvIKfKI05idSZQze4559d+1ZNvYNzbR9m963+GtW+w0FVVb
9vHR9blOs+rH3qu5oqIRp31KY+Ku0pjfN8zVM1DTT07dQs/UJJCtS8eTN+aq
KfBSv2OR38ZTXm6DacpRNc07UhbSfMNFilaNnZ+W/fn/GvsONUHRFDfb/BvP
BjWdUsW1bbT8g4Zuibg80VhDPu9CBzxsPEmzF+ooaoZoyNPNt0VGVBgF+fDG
QlsNTe9m97F3fSAZB5yyC3bU0MT8Vj33fvqFhqqyZ21w0JDLqZFqY8uN3MPB
xU7XRkPx5Y2HuxWGcEhe7/VHv9PQO/eyg0bzDrMy/mlyWBcNPTUPvv+nUwQr
rbpVTP2oJpMDZva2OVG8fE5RU9ciNS2bMbX1IetzPGF0SaXtZTUdevB43LrQ
8zzpcZiyXYCarM+fXzRrySXeFhQ1O8VZTbsdN1R8vT6eLQpcR5zspibXbU2D
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
+Q==
       "]], 
      PointBox[{{-1.0359776855484215`, -0.10056204277475314`}, \
{-0.5418989737483719, 0.2095118132453798}, {
       1.136992758523565, -0.02451395380463669}}], {InsetBox[
        StyleBox[
         SubscriptBox["\<\"e\"\>", "1"],
         StripOnInput->False,
         FontSize->16,
         FontWeight->
          Bold], {-1.1489410020152995`, -0.19924987957749174`}, {0, 0}], 
       InsetBox[
        StyleBox[
         SubscriptBox["\<\"e\"\>", "2"],
         StripOnInput->False,
         FontSize->16,
         FontWeight->
          Bold], {-0.5833300566387318, 0.35367652935349037`}, {0, 0}], 
       InsetBox[
        StyleBox[
         SubscriptBox["\<\"e\"\>", "3"],
         StripOnInput->False,
         FontSize->16,
         FontWeight->
          Bold], {1.2842461292164944`, -0.053087452357853976`}, {0, 0}]}}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], PointSize[Large], 
      PointBox[{{0.06841810709983026, 
       0.9989592278679901}, {-0.24013401283538485`, -0.9871025289265268}, \
{-1.288601778724179, 0.5118617243266138}}], 
      PointBox[{-0.3561402945908063, 0.04791908275703947}], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(8\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->16,
        FontWeight->Bold,
        Background->GrayLevel[
         1]], {-0.3561402945908063, 0.04791908275703947}, {1.25, 1}], 
      {Thickness[Large], 
       CircleBox[{-0.3561402945908063, 0.04791908275703947}, 
        1.0415023735252675`], {InsetBox[
         StyleBox[
          SubscriptBox["\<\"i'\"\>", "1"],
          StripOnInput->False,
          FontSize->16,
          
          FontWeight->
           Bold], {0.07298195247530288, 1.1488897828439149`}, {0, 0}], 
        InsetBox[
         StyleBox[
          SubscriptBox["\<\"i'\"\>", "2"],
          StripOnInput->False,
          FontSize->16,
          
          FontWeight->
           Bold], {-0.2562581471487666, -1.136233385199278}, {0, 0}], InsetBox[
         StyleBox[
          SubscriptBox["\<\"i'\"\>", "3"],
          StripOnInput->False,
          FontSize->16,
          
          FontWeight->
           Bold], {-1.400442759216155, 0.6118196909055386}, {0, 0}]}}, 
      {Thickness[Large], Dashing[{Small, Small}], 
       LineBox[{{-0.3561402945908063, 0.04791908275703947}, {
        0.06841810709983026, 0.9989592278679901}}], 
       LineBox[{{-0.3561402945908063, 
        0.04791908275703947}, {-0.24013401283538485`, -0.9871025289265268}}], 
       LineBox[{{-0.3561402945908063, 
        0.04791908275703947}, {-1.288601778724179, 0.5118617243266138}}]}}, 
     {GrayLevel[0], PointBox[{-1.1038924365940723`, -0.6770594880906051}], 
      InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(100\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->16,
        FontWeight->
         Bold], {-1.1919082584193257`, -0.7985223017762153}, {0, 0}], 
      PointBox[{0.8412211597536742, 0.16110634907725413`}], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(11\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->16,
        FontWeight->
         Bold], {0.8412211597536742, 0.16110634907725413`}, {-1., -1.25}]}, {
      {GrayLevel[0], 
       PointBox[{{1.3594616805549748`, 0.4226182617406997}, {
        0.7111069087873177, -0.8804864726766917}, {-1.4920187064290165`, 
        0.10302142099989509`}}]}, 
      {RGBColor[0, 0, 1], 
       PointBox[{{-2.1403734781966737`, -1.2000833134174962`}, \
{-0.8436639346613594, 1.4061261554172866`}, {
        3.562587295771309, -0.560889631935887}}]}}}}},
  ImageSize->800]], "Output",
 CellChangeTimes->{{3.787481397978064*^9, 3.7874814216677666`*^9}, {
   3.787482108853343*^9, 3.7874822736769304`*^9}, {3.787482865846723*^9, 
   3.7874829013825474`*^9}, {3.787482938083872*^9, 3.787482962417431*^9}, 
   3.787482993582918*^9, 3.7874832385628138`*^9, 3.787483279001811*^9, {
   3.787484714247378*^9, 3.787484719034355*^9}, {3.787484970199725*^9, 
   3.7874849790100546`*^9}, 3.787485909471959*^9, 3.7884303891563396`*^9, 
   3.7897221807139206`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{"\"\<0048_act_intouch\>\"", ",", "anticomlpPlot"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7874814003505225`*^9, 3.7874814197667785`*^9}}],

Cell[CellGroupData[{

Cell["Anticomplementary Progress Along Billiard for Various Points", \
"Subsubsection",
 CellChangeTimes->{{3.770650530249889*^9, 3.7706505377807426`*^9}, {
  3.7862676193348923`*^9, 3.7862676216706767`*^9}},
 ExpressionUUID -> "5ad260c0-7149-405b-978d-e8353dc76b28"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getAngularProgress"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "getAngularProgress"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<clean\>\"", "\[Rule]", "False"}], ",", 
     RowBox[{"\"\<degStep\>\"", "\[Rule]", "1."}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getAngularProgress", "[", 
    RowBox[{"a_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ts", ",", "ons", ",", "os", ",", "osSides", ",", 
       RowBox[{"degStep", "=", 
        RowBox[{"OptionValue", "@", "\"\<degStep\>\""}]}], ",", 
       "\[IndentingNewLine]", "p1ths", ",", "p2ths", ",", "p3ths", ",", 
       "\[IndentingNewLine]", "causticA", ",", "causticB", ",", 
       "\[IndentingNewLine]", "osFs", ",", "osFths", ",", 
       "\[IndentingNewLine]", "etts", ",", "ettTpths1", ",", "ettTpths2", ",",
        "ettTpths3", ",", "\[IndentingNewLine]", "acts", ",", "actSides", ",",
        "\[IndentingNewLine]", "actFs", ",", "actFths", ",", 
       "\[IndentingNewLine]", "actTps", ",", "actTpths1", ",", "actTpths2", 
       ",", "actTpths3"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ts", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", 
         RowBox[{"360", "-", "degStep"}], ",", "degStep"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ons", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"orbitNormals", "[", 
          RowBox[{"a", ",", 
           RowBox[{"toRad", "@", "#"}]}], "]"}], "&"}], "/@", "ts"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"os", "=", 
       RowBox[{"First", "/@", "ons"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"osSides", "=", 
       RowBox[{"Third", "/@", "ons"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p1ths", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"toDeg", "[", 
          RowBox[{"getBilliardAngle", "[", 
           RowBox[{"a", ",", "1", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@", 
        "os"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p2ths", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"toDeg", "[", 
          RowBox[{"getBilliardAngle", "[", 
           RowBox[{"a", ",", "1", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@", 
        "os"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p3ths", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"toDeg", "[", 
          RowBox[{"getBilliardAngle", "[", 
           RowBox[{"a", ",", "1", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@", 
        "os"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"these", " ", "move", " ", "along", " ", "caustic"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"causticA", ",", "causticB"}], "}"}], "=", 
       RowBox[{"getTriCausticParams", "[", "a", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"osFs", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"getFeuerbachTrilin", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"os", ",", "osSides"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"osFths", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"toDeg", "[", 
          RowBox[{"getBilliardAngle", "[", 
           RowBox[{"causticA", ",", "causticB", ",", "#"}], "]"}], "]"}], 
         "&"}], "/@", "osFs"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"etts", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"extouchTriangle", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"os", ",", "osSides"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ettTpths1", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"toDeg", "[", 
          RowBox[{"getBilliardAngle", "[", 
           RowBox[{"causticA", ",", "causticB", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@", 
        "etts"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ettTpths2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"toDeg", "[", 
          RowBox[{"getBilliardAngle", "[", 
           RowBox[{"causticA", ",", "causticB", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@", 
        "etts"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ettTpths3", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"toDeg", "[", 
          RowBox[{"getBilliardAngle", "[", 
           RowBox[{"causticA", ",", "causticB", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@", 
        "etts"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"these", " ", "sweep", " ", "billiard", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", " ", 
           RowBox[{"Cos", "[", "t", "]"}]}], ",", " ", 
          RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"acts", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"anticomplementaryTriangle", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"os", ",", "osSides"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"actSides", "=", 
       RowBox[{"RotateLeft", "/@", 
        RowBox[{"(", 
         RowBox[{"triLengths", "/@", "acts"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"actFs", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"getFeuerbachTrilin", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"acts", ",", "actSides"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"actTps", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"intouchTriangle", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"acts", ",", "actSides"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"actFths", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"toDeg", "[", 
          RowBox[{"getBilliardAngle", "[", 
           RowBox[{"a", ",", "1", ",", "#"}], "]"}], "]"}], "&"}], "/@", 
        "actFs"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"actTpths1", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"toDeg", "[", 
          RowBox[{"getBilliardAngle", "[", 
           RowBox[{"a", ",", "1", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@", 
        "actTps"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"actTpths2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"toDeg", "[", 
          RowBox[{"getBilliardAngle", "[", 
           RowBox[{"a", ",", "1", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@", 
        "actTps"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"actTpths3", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"toDeg", "[", 
          RowBox[{"getBilliardAngle", "[", 
           RowBox[{"a", ",", "1", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@", 
        "actTps"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"ts", ",", "#"}], "}"}], "]"}], "&"}], "/@", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "@", "\"\<clean\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "p1ths", ",", "\[IndentingNewLine]", "osFths", ",", "ettTpths1", 
           ",", "\[IndentingNewLine]", "actFths", ",", "actTpths1"}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "p1ths", ",", "p2ths", ",", "p3ths", ",", "\[IndentingNewLine]", 
           "osFths", ",", "ettTpths1", ",", "ettTpths2", ",", "ettTpths3", 
           ",", "\[IndentingNewLine]", "actFths", ",", "actTpths1", ",", 
           "actTpths2", ",", "actTpths3"}], "}"}]}], "]"}]}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQ/anX2qlS/I2j+6aAFBD9VbExC0QzcD6pANGasntr
QLTV2fTpINpoxr75IPr0u/p1IHrW07QtILrR2HUriK57Y7QLROc53roIopXO
6dwE0a99O8D09cDW+yCapzPgKYg+Z+TJWQWk79j6gelylxO6IFrpeIU+iPYo
rfcB0e+4VYJB9CTt1gQQ/b56EZi+lrdqJ4h2EQzfD6JfNBodBtEGxQlvQHTE
g5pPINqIYcdnEC2RyfkLRP8PlQHTL0JqzKqBdLiXuCWIZtjSZwuipVlFHEG0
/OVrp6ZKvnHMNbxzFkSH7xO4yaoI1K8cdRtEb1pz6AmIrlM6C6bvzOl5D6In
pa36AKJrFPf8ANHz1Sr/gWizye6reSzeOHK94d4KogEo+rHO
  "],
 ExpressionUUID -> "2c273d30-78a7-47fd-9a09-cd926141d85b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getAngularProgressP1P2P3"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "getAngularProgressP1P2P3"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<degStep\>\"", "\[Rule]", "1."}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getAngularProgressP1P2P3", "[", 
    RowBox[{"a_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ts", ",", "ons", ",", "os", ",", "osSides", ",", 
       RowBox[{"degStep", "=", 
        RowBox[{"OptionValue", "@", "\"\<degStep\>\""}]}], ",", 
       "\[IndentingNewLine]", "p1ths", ",", "p2ths", ",", "p3ths", ",", 
       "\[IndentingNewLine]", "causticA", ",", "causticB"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ts", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", 
         RowBox[{"360", "-", "degStep"}], ",", "degStep"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ons", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"orbitNormals", "[", 
          RowBox[{"a", ",", 
           RowBox[{"toRad", "@", "#"}]}], "]"}], "&"}], "/@", "ts"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"os", "=", 
       RowBox[{"First", "/@", "ons"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"osSides", "=", 
       RowBox[{"Third", "/@", "ons"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p1ths", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"toDeg", "[", 
          RowBox[{"getBilliardAngle", "[", 
           RowBox[{"a", ",", "1", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@", 
        "os"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p2ths", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"toDeg", "[", 
          RowBox[{"getBilliardAngle", "[", 
           RowBox[{"a", ",", "1", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@", 
        "os"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p3ths", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"toDeg", "[", 
          RowBox[{"getBilliardAngle", "[", 
           RowBox[{"a", ",", "1", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@", 
        "os"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"these", " ", "move", " ", "along", " ", "caustic"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"causticA", ",", "causticB"}], "}"}], "=", 
       RowBox[{"getTriCausticParams", "[", "a", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"these", " ", "sweep", " ", "billiard", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", " ", 
           RowBox[{"Cos", "[", "t", "]"}]}], ",", " ", 
          RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"ts", ",", "#"}], "}"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"p1ths", ",", "p2ths", ",", "p3ths"}], "}"}]}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.7920673933216486`*^9, {3.7920674664175396`*^9, 3.792067550479575*^9}, {
   3.7928377519804764`*^9, 3.792837764613059*^9}, 3.7928377981724987`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"angularProgressP1P2P3Plot", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"getAngularProgressP1P2P3", "[", 
     RowBox[{"1.5", ",", 
      RowBox[{"\"\<degStep\>\"", "->", ".25"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"LineLegend", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", "16"}], "]"}], "&"}], "/@", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(P\), \(1\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(P\), \(2\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(P\), \(3\)]\)\>\""}], "}"}]}], ",", 
       RowBox[{"LegendLayout", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Column\>\"", ",", "1"}], "}"}]}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", 
         RowBox[{"Darker", "@", "Green"}]}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", ".33"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"GridLines", "\[Rule]", "Automatic"}], ","}], "*)"}], 
    RowBox[{"FrameStyle", "\[Rule]", "Medium"}], ",", "\[IndentingNewLine]", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "360"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "180"}], ",", "180"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "180"}], ",", "180", ",", "60"}], "]"}], ",", 
         "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "360", ",", "30"}], "]"}], ",", "None"}], "}"}]}],
       "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{"Black", ",", "16"}], "}"}]}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"\"\<t\>\"", ",", "\"\<t'\>\""}], "}"}]}], ")"}]}]}], 
   RowBox[{"(*", 
    RowBox[{",", "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Angular Progress for N=3 Orbit Points\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Large"}], "}"}]}], "]"}]}]}], "*)"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7920672385175877`*^9, 3.792067245270519*^9}, {
   3.7920673140649147`*^9, 3.7920673737732096`*^9}, 3.792067520239596*^9, {
   3.792067555313283*^9, 3.792067594422207*^9}, 3.79206763904032*^9, {
   3.7928399976357183`*^9, 3.7928400004120502`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxt3F+sHOV5x/GBmrBN3XjaOGHTuPFAHNgkTjyAwUswnBcweBMcewAHNonB
A9jetTm2x/budqWinvcCKecCiblAyl5Y8lygci6Q2Asu9gLpjFQuVioqIwWp
5wLJU8lqzgUqU8VVtq1b1+zzfS2dR+Xmx4f3ed93npnZPXv+MHe+cvbZ47d6
npfd5nlf5v//T7HQ+VtJcbnwd9eu3/jnMl5f+NptkuJq4fJ/fzn+Bb66cPB/
v/Qf8GxhcIuk+NpC61ZJNjTXSIlbze9ukRRvMhdJ8VfMv3y5/PXbcM38PSn+
qjl8i6R4s3meFH/NBLdIin2TkuK/MMV8fee/NM+R4q+bZ0jxVnN1Xu/8DfP7
ubfib5q7SPEd5t/n4851E5Pib5lyPu78V+YgKf62eZIUbzNPk+K/NreR4u+Y
x0nxdtMixYG5Mt8P28D8OSnjd5r/mY9je6f5DinjdzGO7V0b0/uu+a/5uPvv
3zVbSBnfIevdSBnfYf7zy/Il7H3P+KSMf8/8KSnjd5v58tfd+N3mFlLG7zHf
JGX8HvN1UsYb5j/m8914Q9ZbajD+ffM1Usa/bzaRMv4D6edGyvgPpN5i74ey
342U8R+aPyFlfCfH78Z3yvlc2sn4j5j/I8Z/ZGbzcez9mPPrxn9s/jgf/zHj
u8xXSBnfZW4lZTxkf2xC6e9GSr3KPJT5OfbuNfOX+3Vs7pX9bqTMY3wJ5/fK
fqvYu0+u542U+fcxH1uV+X1y/nLs3c/9fj/z72c+tvfTL84Zz7G329RImb+b
/rHdzXyc75Z+VrH3wMY0DzAf2wfoH+eM527eg5w/N//BjWkfNLeTMl+lt4fj
38O8PXJ+DLZ7uJ9xvof+sdeU+hsp85vy+jHYNuX8Wpw3Zb8cew9xfz3E/Ifo
H1tscf6QrJ9j7yfcf27+T+R830iZz/gSzlV6D3P+sHmY43+Y+dji/GHpJ8fe
XvbHZi/3z17mq8z3Mh97j3D/PcL8Rzh+bFXmj3D9sfeo+EbK/Ec5fmwf5f7B
OfU59haYv8D8BeZju8B8nDOeY8+Ib+Q8AhxgY+T8LODYyP0SY6syU5kzfxWX
Rs5Pib3HNmag0jzG+cTxY3J8MbbY4gxnOH+M9wtcMl66fR/fmMHjsl+AzeOc
TxzjGFuVmcpcZcn80u37BOf/CfZXaVTGKu0TvL5w9oSc70s4V1k+IeejxN4+
9t/HvvvoHxtscEx9jC22OFOZMz/HpUrvyY0ZPMn9h43KWKVVmTE/wznOcfmk
nJ/Lbt+nNmbwFPtjozJ+SvqJsVWZMT/DucpSpbef1+9+9t/P+cdmP/cfjnGM
LfUWZzjDOc5xyfwSe62NGag0LfbHcUuON8aWcYsznOEc57hU6f10YwYqjcpY
pVWZ/ZT9cY5zXOLS7fsz7v+fsS8OsFEZq7QqM5W5ylKl9/TGDFSap3n94RjH
2D7N10ecMZ7hXGVJ/WW374GNGag0KmOV9gDXH2c4w/kB7j9c4tLt+3PO/8/Z
V6VRGau0zLc4wxnOVZYqvYO8/g6y70GuPzbY4BjH2KrMDnL+ca6yVOkd2piB
SqMyPsT+2GKLs0Psj3PGc1yq9KKN6asMVIaRrBdigw2OVMYqE5VWZaoyUzlm
vzHOcY4LlaXKSqX3zMb0n5H1fByoDBkPscEGRypjlYlKqzJVmbF+hscqc8Zz
XKgsVVYqvWc3pq8yeJbXAw5VGpWRylhlwnoJtipTlRn1GR6rzFUWKkuVlUrv
Od5/nqNv7ONAZajSqIxUxioTlZb9LE5xijOVY5W5ykJlyXolrlR6h+n/MP1j
HwcqQ5VGZaQyVpmwfoKtypTxFGcqxypzlYXKUmXF+hX2frExfZWBylCl+QWv
fxypjFUm1CfYqkxVZirHKnOVBesXuMQlrnDl+n5+Y/oqA5WhSqMyel7Wj3CM
Y5yotCpTlZnKscpcZaGyVFmp9F7g/n+BvrGPAxzgEIfYYIMjHOEYxzhRaVWm
KjOVY5W5ykJlqbJS6bU3pq8yUBmqNCojlXGb/nGCE2yxxSlOcYYzPMZjnOMc
FypLlZVK75cb01cZqAxVGpWRylhlotKqTFVmKscq81/SPy5wgUtc4gpXru9f
cf//ir6xjwMc4BCH2KiMVMYqE5VWZaoyUzlWmassVJYqK5XerzemrzJQGf6a
/rHBBkc4wjGOcYITbLHFKU5xpnKsMldZqCxVViq9IxvTVxmoDFUalZHKWGWi
0qpMj9A/znCGx3iM8yN8f4kLxgtcMl7iivHK9f0i9/+L9K0yUBm+KOuF2KiM
VMYqE5VWZaoy4/gyPFaZqyxUlior1quw9xL9v0Tf2McBDnD4Ev1jw7jBEY5w
jGOcqLQqU5UZ+2V4rDJXWagsVVYqvaMb0z9K/zhQGao0KiPmRzjGMU5wgi22
OMUpzo7SPx4zPsY5znGBC1yqrFivcn3HG7MWy/wa9lXWVQYqGypD1gtxU6Vh
3OCWykhlW2WssqsyUTlkvyG2KpcZX8apypHKTOWKyjHrjfFEZc54jqcqC5Vr
KkuV66y3jiuVM8Zn7rq/vDFrKv2XeT3guspAZUNlyPwQN1Uaxg1uqYxUtlXG
Krus18WJyqFKq3L5Zfn56G9wqnKkMmO/DK+oHKucqMxVTlUWKtdUlirXOZ51
XKmcqfRe2Zg1lb7KusrgFb4+4IbKUGVTpVHZYr0WjlS2GW/jWGVXZUJ9god4
iK3KZZWpypHKjPUyvKJyrHKiMlc5Zb0pLlSuMb6GS5Xrr8j9+3tcqZyp9F7l
6/+r4ppKn3Ef11+V9e/AgcoG9Q0cqmyqNCpbzG/hSGWb8TaOVXZVJiqHKi39
LOFl/Bucsl+KRyozlSvMfxeP8ft4wnoTnDO+iqeMT3Ghco3xNVziEq+rrFTO
VHrHuP7HxDWVvsq6ykBlQ2WosnlM+t2DDV7ALY6nhSOVbepfwLHKrsqE9RI8
ZP7fYKtymfplnOIUj/AIZypXWP9dPFY5Yf4E5yqnKguVayrLY/L3HZfxusqK
4/kCz1R6x+Xz4I2cR+241N+OfbwF14/L8ddxoLJB/T04VNlkfhOb43L8C7jF
/P04oj7CbZUx84/iLvM7OGF+gocqLf1bvMx6v8Ep672FRyozxi/hFea/i8f4
fTzheCY4Py5/77eKp4xPcaFyjf3+GZfUl3id/X6PK/wFntHvDHsn+Psnd/1P
mPmf+95+QuwzvgXXT5j5n/vegYMTsv523DjB+z8OGd+Fmyfk7zv3YHNC+l/A
LfbfjyPGD+H2Cfl9bRvHOMZdjq+DkxPSb4KHJ8w/zF//2Kpcvjmez53enC8e
3VxfnN3cX7xy8/jE45vHL56ckL+/aeH8Zv/i6c3zIy5unj/x2s3zKy5vnn/x
OtfrDlzdvH7i2c3rK/Y64uvHxTX8R+x33P0jrnfc/SUOOu7+Ezc67v4Uhx05
rwVudtz9LTYdd/+LWx33+hBHHff6Ebc77vUljjvu9Sfust8IJx33+hUPO+71
LbbUW7yMhzjtuPcP8ajj3l/EGeMxXmF+G4877v1LPOm49zdx3nHvf+Jpx70/
igvWC/Fax72/ikvGA7zece/P4gr7eNZx7+9ir+ve/8W1rqw3Oyb2u/y8CNfx
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
MDyfWTwcGJ7fLH59YHi+8+r/AbIOQa4=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJw12nlUzP/3B/BBiEQSEjGWkhaVSiF6alfJtO817dM+a0IYH1v27CGEUtZC
yNpkDaEIZR2ErIWiCL++v/d994/zOLf7fr3v687zlHMaGZXmHduVw+Hkdedw
/vcv+yXQc2wokEYqGFXb7bRtufwwmLXS7szT0ReKwLrRbr73hNnD9Vk32/XY
c7hmshrrFjvljD8vOc18cpvdcfH5Zkkt6w47y/jC9K1lrDlwOeMyJC2XdVdk
u/oU/l3IWgUVvLtabtGseyDPtstsP2fWqrgYY8PRG8e6N3arZf4+r8a6D+or
vLIdnkaQ++KMqeah4jzWGgiMfm17PYZ1f7irPp+x0YC1JpJ2DHg67FM4eQCW
7w/+nVzMWgu6xskFq8WsB+KqLOLaEivWg6AmWmce3hZGHow5l75tH3mOtTYm
lX3OfjSf9RDUh+5LzwJrHdT3u7HAthvroVgZ/nf/76uh5GGwm3bgxO0s1rp4
HednfNad9XAEz9gUWNmX9Qj81yt46r+aEDIXGa33tsduJsu5SLA4/KFLEFsf
iZiKG+GPh7H1kUgURCtblMFUHwXHb4v6BRSQ5aPw/sQD+x6JbH00FsW/WN7T
lK2PxgiXmH0RLUFUHwOfVH3NAWfJ8jEIKnrcS1/O1vUwqpvf3Fxntq6HtRff
9J2rztb1oRQrTS/VBlJdH/ydLioZuWTOWBRobpXsimHrY7HbtGisjQlbN0B2
x8G1Lj8CqG4A77umz+6UkznjUO87VaN6BVsfhyn2aU0evmzdELsddPq5jGDr
hkjREt8r/+BPdSMUtx9NKTtFlhuhXc+s0XwxWzdGVm3OcBMeWzfGANO3Vw7q
snUT3PPMFBz66Ed1E8x+ayA2PUvmjAc3UMfAegVbH4+vJjeLLwWydVPUaz/u
d8+ArZvi3JVX5rHtvlQ3g/8Pi4Z5N8kwg+mqpU8G5pLlZlDR3FY6IZWsMMPR
O7daa8D2m0MxcJvG9wFsvzkGdlGP3vzOh/rNsXLj2Ell58gKc3BFZneCs8mc
CVgQ+XtmZiwZE6D9XPfh0Cls/wQMbxs426Y/2z8BfT5FWdW886Z+C2wtX9f7
zUUyLNDkYfZWvIUst0D7qJqjc1LJCgv8KXhs3+bM9ltC9UX8nM8j2H5LJCT0
Hx3Y7kX9lrBoOtzb+j5ZYYkvBV1+ZB0hc6xQPUW83yOLDCvML8itl0ez/VaQ
TG6eMcaO7bdC0+rJxVZD2f6JGCMwKj/xk0f9E5EUWm2ys5Ysn4izdqpHm4+R
FRMxuXvT18PryBxrpLjbH6pOYfut8ebvxVXBHmy/Ne4kZjjNMGL7reHad9yq
Hb3Zfht0G/ibm1c7i/ptMOL7Ca1bm8hyG0h+WoSf9CMrbHBq5daU0MFkziRY
NVadulDvSf2T8PDFz2MPc8nySRhofvtJPp+smITY329O6umROZOx6azadf8P
M6l/Mi7Yzd9hVUKWT0adpsnV8nSyYjL89rY/+TaVzJmCqH0v5ld1Z/unIPuP
/iy3Ox7UPwXGO1b+SthKVkyBrjDEfFwkmWMLw567Dy01IsMWshfjDOb/cKd+
W/x4eTJZ/RJZYYsks1Yny7VkzlTYr92zvCmYjKk4vyurz1QDtn8qZpttPqXz
w436p6Ll1oPUZVfInGk4dFqut2AjGdPwaXdrzb8osnwa8jQuiHtZsP3TcOH9
UvVt3dh+OzT94BYfrp1B/XZQ3JmbZL+fLLeDke6msMAMssIOn+dkFH5yI3OA
Be8txH90yVxAT//656yvrvQ84OQtHa81V8l8YLj8a73qdrIcmGZWX9WeSs4D
LsweKgt3JCuAra5HxljpkJXAuLe6lpnNLnT+dEx0Xtp1wnUydzqWN4pafXeR
MR3PrR5mvJaR+dNxQtr698lMsnw69kbyOFP1yXnT8TFj/W+Vf850/nRs68iQ
TagjK6ej7+XKtsvHyBx7fH5kOqhsFZlrj7h2qxj1ODLswfmtv/ASyHx7bBr4
V/XhULLcHlYmXgecfzrR+fYYNsBWfcB9ssIebTfd300qJivt4Vyf0HRmFZnj
gK1511+tF5C5Dsi7d2OxwokMB7S0f9/mOJrMd8B1bu3XYV3Icgfsy/kS6vrC
kc53wMG3B45dvUBWOGDho8m3NuaSlQ5wvJi94tg8MscRHcrpNbohZK4jTmtl
rHo0mQxHDF79rOCZDpnviFP1KzRNfzvQ+Y6QGTRdv/mEnOcIrUPXFcXnyQpH
+Dt263i6k6x0hEvCyUyvhWSOE+qmdnPrE0nmOuHe5/5pfRzIcELu9NZfPD0y
3wkThLs49T3Z851wdPytLfs+2NP5Tpj7p+VR8W2ywgnJJ/Cqo4SsdEK4S+qj
FZvIHGcceVT51C+DzHXG5OZBQ/mhZDgjrO+qi4Ug851RHlX6w0iPLHeGRU3a
j4+92POdkWdS//3tl+l0vjNwytZgWC1Z6QzpTdXqlWfIHBe0PSs3nLCbzHXB
ocIPc/svJcMFN1f17mGQROa74DpWa8m8yHIXBB49+/WnNTnPBe+6H/9YPJw9
3wXjtHx8cruz57vg7M2Jmec/gc53RVKXvef71ZK5rliWOidl8zkyXGH4wOqD
xz4y3xXjEuqyrVaR5a54EP+iwlNCznPF2obJyq0hZIUrvlZO99JwJCtdEdSz
MPO0MXv+DIT/S61aPZA9fwbm698MGvHHjs6fgbQno4YsvEvmz8DLL2Fl1nvJ
8hkY/8Ne11VGzpuBjKZH5sWuZMUM7IJnQ9IwsnIGqvo1689vnkbnu8Hzu3rz
yytkrhtu/fw0ads2Mtzg+Lu0695UMt8NoSERHr8dyHI3jGwtGJY/hJznhnrZ
t8wdTVPpfDcE/Zo5V3mVrHSDQQdPT5xL5rhj78oBG2ZJyFx3rLurWzfbjQx3
+D0N1Pwwksx3xyjFv/CCdls63x2+DdkvimrIee74fbS87PsBssId4xPiNJf+
R1a6Qy7IGBwaQuZ4AHNbWmdbkrkesF/36PkjdTI88Gl/vx7z3k2h8z1g3Za6
l19BlnvgV8Duz8t3kPM8kPd44JhmGVnhgbslPZbm8MhKD/hNDfKWG5E5M5Eb
nVu9vweZOxOz1X87q72aTOfPRMg7s3+HL5D5M+HjtdBp1TayfCZeLtkrKJCR
82Yi8PO1M7+8yIqZ+Hl8weqV48nKmahKPz3RV43M8QTPrkQjoHESne+JZxub
pBuukuGJ6muTFN33kfmeME5Z7lUiJ8s9catrx4r14eQ8T/Q9+7SqyJas8ERH
+vKFrTpkpSfqvif0mt1uQ+fPArdf+33jOjJ3FvTti9wGnSZjFt5Ne/l4whYy
fxb6n/z9fZGMLJ+FK7ZWPbv5kfNm4VncgeUnLcmKWXj/dcaHHC2ychbmj3pU
cLjFms7nYYZd3YTmWrIGD8Gmm9SiT5K5PHSb3PuwyhayGQ/WjR/W16aTwcPf
7utt7wWQeTwMuPLL+I8Nmc+DrO3SG18dspCHvPk6H+t+T6T35+F+ccWlrGfk
bB7O9uzaEl1OzuPhv5rCnol7yCU8/OZ0LN++mKzgYT33Iqc1llzNw+uQ4f8y
XMlKHnoVnO6vb0Ru5iH2+4rK3+pkjhd257aUtjdb0fxeWHatJGFELZnrBb2v
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
B7sq2PyLkb3kyd7wS2z+xXj6bI2d7Aqb/87n8QO/rbrG5l+MYx+h2FvJ5l+M
r3f8j565yeZfjADNExXVVWz+O5+nyPj37g6bfzHqLB4k/6tm89/5eY3g9Bt8
n82/GCGjp34c/4DNvxiRW+p7uDxi899ZDzWNj6hn8y/GtJ/7+mc8YfMvRsyw
A2rrn7H579yf2oXggy/Y/Hfe75tElSsv2fyL0drLve/z12z+xahJ67ag7Q2b
fzHE3V2DBjSy+e/Mn8aTgvEf2PyL4bV2TYLbJzb/YnzeYXcw7gubfzEu1ylT
Fjez+ZfAvkZ4Nu8bm38JliX823yxhc2/BDVuR3o8+8HmX4Jon8OaHW1s/iX4
rQrF0N9s/iWoU7840PYPm38J5Dlrh4T9Y/MvgdMX43sLusQx5kpwQDnWeU83
8hgJDs8clXmlO9lAApN99+c29iQbd54fqzpDvTfZTIJtZXs/T+hDtpRg/Jft
aUF9yTYSqA3kPJRrkG0lyF/TNvaAJhkSrNxzKfmeFtlRgofDTx7qGER2lcDr
p92nsUPIHhKcf/3JyncomSeBlho/e5Eu2VeC0UcDu5WMIAdKkP7o2JYXI8mh
EpT1i/bWGEPmS3Bv0KJp9vrkGAkq9kyLlhmQBRJIdD9XHjAkJ0uQk/5n9gtj
slCC9285cwaZkqUSHL9+oNbTnJwhgXpi1cYsC3KmBG9aIsovW5HlEnx2Xcj/
399l/L+XSHDuQ4J82mRylgT+35cYLLAlr5ZgSs/QqPJp5GwJJvrute46nbxJ
Au8tFsedHcg5nZ+H0QOfrnYi50rwkzO7vNaFnCdB79+lccPdyPkS1N8KeJrg
QS6SwMBpkNFpT/JhCU4teRjWw4tcIgHXvHhhgA+5VILr5Y07DvqRyySYeuXv
hX8B5PMSTJ6x56t/MFkhwQuLU/YloeQrEow8FnxBLYJcKcGYow0pCZHkKgnW
hzTwb0STqyVYe15vn1EcuVaCBdOPT88WkOs63z/t3oyfieSnEqzZ0O8GP4Ws
lODHIqvbVWnkBgn2J/nGTBGTGyUoOH4p97CU/EmCCY+HL+XOJjdLEC73Mt46
h9wigaNg3R6NTHJb53mbQlpWLyB3SOCyJv3W9wVxiv83R4rhjYo1okyyihTr
hKr2n+aQVaUIuDz3UfRsch8pNpd8tK2TkjWkqD1+jz9DTNaSItjL1fx0Gllb
ivrkbrkjU8jDOr9f5r82K5HMlaJilXHrx3jyGCn0lvS44B5LNpDiRd3PmsIo
srEUSZn7RnD4ZDMp5Btt1vuGkS2lKNVM618QTLaRgm+3ZOXXALKtFKs0rd9O
8iNDitOZV9QXeJMdpRCveP3+wiyyqxQZkRVR7R5kDyl6Gv6JMHMj86QYpdhX
GeVC9pUi3NNocbYjOVCKJ+dSZWemk0OlKP9WtOTZNDJfinsdaZs7ppBjpFjU
Urxq0CSyoHOeygI3o4nkZCnSaupLJ1uQhVK8tdA57GhGlkqxdoCs/wwTcoYU
u9ZOuOpiSM6U4triO/sxlizv3Mfwb5ssxpCXSJFimJLCHUnOkqJ5tKl6z+Hk
1Z3f3w+8dzrkbCkmqZ3pXzGYvEmKEznnjTZpkXOkGFaQOpvfn5wrxcvpn6r0
+pLzpDjV36FbQ29yvhSFMYLm7T3JRVKEcswS3FTIhzuft95++jcOuUQKkWKA
+4Y/sYxLpYj8/CjA8Be5TIrW/+ZYn/1BPt/pxjVl07+TFVI86u1WpGgiX5Hi
oTD93sRP5Eopnr+N6pLfSK6Souhw/Z+eb8jVUpQZaq6Lekmu7fz8jt0398Qz
cp0UApl0ya968lMp2oeWpFo/JCulWP/heHvCPXJD5/vP63i9/g65UYpn24Z/
OHqT/Knzvnsdvqa4Rm6WIj1ff8L1S+QWKYzvfXpVcZHcJsVsJ/01JWfJHZ3z
dS95teEUmSPDlNM9NwqOk1Vk2D50orv5UbKqDNrXy05+OkDuI8OPf4lztxeQ
NWTofTll2uQ9ZC0ZDrzpm38rl6wtQ/3MYjfPHPIwGTZNKrpTsZHMleHCGtMb
euvIY2Ro05tSPWcl2UCGKt3o9AtLycYyHO9z2a1ZTjaT4b7J47r+mWRLGXxS
EotGzibbyPDM13/qCDHZVoYTNfMH904hQ4ZRd7cdfxlPdpShMm/QsoIosqsM
mTafVfzCyB4y7NKbt7MpgMyT4W9w0BmpN9lXBu458wuvPciBMqxO2qhq60IO
laH/16utmdPJfBnMhuyoL5hCjpGBc9qu2ykrskCGp1PUzh82JSfLYGDt6bJi
HFkow8RbI165jSZLZZg3zvBy8zByhgy/DNN15g4iZ8owdMTE/m/7keUyiJvW
3bDoRV4ig+v5uPCoruQsGTSHjXkt/B3DeLUMauMXRYe3kLNleHt61utxn8mb
ZLBa6xB+7w05R4ZB2eev+z8n58pwMmt971MPyXmd+/R+qtp0h5wvg/P+6zs4
18lFMizoEbHx/UXyYRlqZkWeKjpFLpFhbsagS7ZHyaUy6I0el5hfQC6TIbx0
SeDzXPJ5GXYesTF5v5GskOHIqKgFl1eSr8iQM2FYXdIicqUMUxdlnFfOJlfJ
8PiyfB83lVzd+fnOsv89LoZc23l/c96O/R1ErpNBQ1C7eMMs8lMZMra9ifji
SFbKYH9pfzf1yeQGGdZ4HTryaTy5UYZzh75vXDWa/Klz/2qChneDyc0yJN1I
uPpPjdwiw7Cnmf41/6IZt8mg5at2LPg7uUOGbocd3297S+ak4+RBnX5r6skq
6fi1Ksx0QhVZNR2LVdt9l18k90mHzTGflStLyBrpuKqseTxpL1krHZEz5vtu
3EjWTkd5fU2vzUvIw9JhHVwyYKqMzE2H4Ez6xhWx5DHp8Fk+9WSGH9kgHae3
TDqu6kQ2TkfEKNy3tiSbpaPnhCSJymiyZToKnZ90TelPtkmH844NvYT/ohjb
dn7/0ljDPp/JSMfqU7/08JjsmA632AfPel8nu6Zjy4aogKQTZI90SLp1Lefv
JvPS4VrTNenDSrJvOnq3rHzeM50cmI7MU/yqMj45NB1BF1YP+eNG5qfDYdyt
F7WW5Jh0WAkupWE4WZCOW8t/eKMnOTkdUZ7CmQ+aIhkL09FFRSOCU0eWds57
dMmVS+XkjHRkr375U7eQnJmOkfVVJQPWRir+D3FFjyM=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        LineBox[CompressedData["
1:eJw122lYjevfxvEkJCIJyZShpEGTFFJnSnNpnodVq3lcrSEhZIsyZw4hlEII
IXPmUiiSzCFkLBRl6ln/5/5d+80+PsfVtc77e6/2PrYXe2x4skekrIyMTH4v
GZn//Z39JdKwaS4Uh4FTraXOo5rSwWuZmyy3r375c1QRc4ul65HMa1cuMbdZ
9pFTCpVpZG63THYVuDxoZe60bMj64YE+4eQ/ltNjriRjNLMM7CdVv6ifwiwL
3wurh/91ZJbDolO8mnIec28otK983ieVWR72dbLxH1YyKyCtp+wl3m7m/ti2
Idw3/gTzANhFPnimcJNZCWtP/dLAY+ZBGLAsUrv/Z2ZlOOzY0FfQzTwYJbZP
ZBMH8ckqUDSKF8mNZx4C3jjcN53CPBRnt0w7Lj+beRg8smaeTPNmVkXMmdSN
KyKZh8MqoHTwTAmzGm4+quu7OZN5BKIcFnpt3Mg8EnVNdY+n7WUehVnHPFeu
LGUejRXyXV5ZF5nH4N+qYH2jGmZ1lB9UG7jmETlDHb1KbN5ve8vOx2K4V79j
Ad/Z+VhoPE33qetm5+OQWBV7vbtfBJ2Pg06/mOZ3w8gy43Hh0PeNq8az8/FY
437o8KfJ7HwCrK/s76k4nZ1PwMJtb0K/2LBzDQyJqV+6YQ4714DTvLcTf/uz
c008zp71e1IEO9dE49WMfepJ7HwiZi5JO980l51PxBajkY3xS9i5Fg6PC190
dSU718Lew2Z67zey80mILsv0e57HzidBc/ykuIJCdq6N9LShV8yPsHNt1M8J
O1V8ip3rYFnv0I3vL7JzHdjtv7lD5iY718VJj6fyrXfYuS7OZq9XONXAzvWg
mnP+ps9zdq4H47XWIffesPPJeH96zutJn9n5ZAycvIQf0s7O9TF05ITXgt/s
XB8O56NCwmUj6dwA4tZ1VcZ9yTDAmDFTB70dSM4wwG/tVLX5Q8kVBkifpH21
bSS7bwiz6jGvHMez+4bQMXW1WzGJ3TfE6xn9zpfos/uG6HnasucpE3bfCIbD
dzwqnMHuG2HI1+sd6VbsvhE2xW+UN7dj940w9pzhhdfO7L4x/gb4nxF7sPvG
KNBYsLPVl903xiKzz3Lewey+MW7kD11eGM7uT4H23W3HX0az+1Nwqm7hMIVE
dn8Knnn5zBwjZPenwDMxrnjsXHbfBA16jxsHpbP7JjjV/6pjWwa7b4J7o/ip
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
9dKlrN8d1VPT7kctYf3uWH6s1tZhMet3h4vDRzOdhazfHdqr5hb2X8D63fGk
RTP7cxrrd8e2NSVPb6eyfneMMr6w67CY9buD/3PArdVC1i+1kX9AvID1u+M/
Zy8nhyTW74Gxm8/kaiawfg+sHW5t0TOO9XsgLf2Q6Yto1u+BxNuHM85Gsn4P
nOT1GrKZz/o9cLQosS0pjPV7oFffvQPsQ1m/B7adCY5XD2b9HnDaHCjbGcD6
PTCt0/vuHT/W74Ehub3vFPiwfg/sDNb8Nc+L9Xug0CJxjqsH6/fAmWEbqsa6
sX4PeCx3jGh3Yf0e0LvqOOKGE+v3xJr02R+2OLB+T5ws/VgTZcf6PVGZ/emi
yWzW7wlV445zPa1ZvyfEF0sv1YL1e+Js+83reRas3xMvTV5WRZuzfk/098y/
aTid9XviSOz+s79MWb8nFl9cv+uKCeuX7uf+TVphzPo9MX/UfxPnGLJ+T7hr
l10drM/6PTHMUMPyoS7r90SZMn/zNm3W7wm7Xz8vB2ixfi8EmcVVqGmyfi88
H2W++tF41u+FHg8/qm8dy/q9wLf9Ps9zDOv3wrYXNzcMGMX6vTD9v8dRlWqs
3wsBXlu/Zqiyfi+M2xk52Wwo6/fC+N1Fql8Gs34vvBKePbR3EOv3Qn1Txyvv
gazfC34zSs70UWT9Xqgw09YpV2D9XnhXc8ooWp71e+GE7MZqld6s3wviB11t
FT1ZvzcGK6jviu/B+r3R0GfKHZXuCOr3hsOx4PTzf8gG3lhrfnFf+C8yvFHS
T2DZp5Ps5o3tmcsdD3aQed7416JY4fSdLPCGQK/fjo9t5Axv9Khb0LDiCznH
G5UnvBM1P5HzvXHr8/KAy+/Jpd6QL+zIDXhHrvDG3teLx39rJtd6wy/xd3vW
K3KTN/5uMpEf2URu84b2oO++R56RZXwwsq71ucUTspIPDtc+33q7kfX7wPRT
7MKABtbvgyFlhivf3Gf9PhBb3i5PqmP90vPuqp4/7rB+HwSvOxS5oIb1+2D4
yo+N/6pYvw+2+nb5Ztxk/T7Y3T3tWfc11i99nq4+/IVXWL8Pyv4cf915ifX7
YMGdxf7CC6zfB2HKxRffn2X9Plg9LEAxtJz1+6Bif7nlvZOs3xexdx/PsT7B
+n3hVFZteryU9fuC57vy6+gjrN8XPpF95644xPp9ESajf+VrMev3xbSV9TW+
+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
zupxWPw1a+cpF7JWHOJPBx5NvjqQs0EcHrZ0n4j8PICzWRyGP3j7xno4GXE4
v36GfretImf7OIiyWq+tTu3P2U36fOU+E14V9ePsJz2/90ip47ECZ14cxhhe
WH9uIDkmDk8V/rTq2PblLJBa1rTMfJE85zTp80WcLGg+3YdzRhzuO6RdVfve
m3N2HAoHhDo36JNz4rDSN+jEgKRenHPj8GPkub3nDstxzo+DY29RV/2XnpyL
45C5b1WVhyG5NA5j76/x0ZPIci6Xvo/nsirBZ3twrojDxmqZgscy5Mo4VLtd
fbDLXoZzbRwkynvtZ4/vvvT/boxDeJ1f3MXTfzk3xUH9y5gjO1z/cG6Jg+6f
uB61735xbouDktWc3a5Luzh3xqG37YwB/cZ2cpaJR+y+y6O6Kn5wlo/H67Op
zf35HZyV4mEzp+nC9D7tnFXjcbAg1X7u4W+c1ePxYOYp/mnvr5y14pGbszSo
qbuVs0E8JGMmyk/2+8zZLB7nHy/omlX2gTPi8Wm6+L6CSgtn+3gMmrTyQMrc
N5zd4lE9fuMf/vNXnP3isXjfkdN37Js48+KR6rs9wCLxCeeYeBjW79JaPqeB
syAexzznKbib1XFOi8fTkzOf/3St5JwRj7UvL3auF53nnB2P7CCdrfZX8znn
xONLwmnbswZFltz3L+3pvpD5ff4lzvnxWL/p3xnXfVWci6V9eU5XOi7WcS6N
h9Ll7fNv7G/gXC71RS1f0xVPOFfEo6D/oltGxk2cK6Xfx7zEtqm7X3Gujcfh
xzl6p+TfcG6Mh3zmRZeLye84N8XDVWL9OKj+PeeWeHikFIzYPfUT57Z4RL5y
H7FhyxfOnVInF3mMnd/GWSYBd5TeFjwv+spZPgE7+IH6WfXfOCslIOH1Tpmx
Mu2cVRMwZFR+v+PaHZzVE3BAFK0Frx+ctRJgvf+CSl36T84GCRiW8EwcV9DJ
2SwBCkPU6gdVd3FGAm4u/K+wpu0XZ/sEvFq+2CZ/yB/ObgnwGJrUsX7aX85+
CXj/cMrb/UH/OPMSUPDmweTmRd2cYxJQbPgvZqKbDLjvPwFB2lefS5rIadI9
92VvQgU9OGckIOu6XtO7bnJ2ArpvymoprZPlnCPtXfSm/5NRPTnnJqBVZe0D
xxJyfgIks29cCpsux7k4AVMD98qMqySXJqB8X/m1Nd69OJcnQCbH16DoFbki
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
8ReKQU5PRYF5+9WGgDD8HyOJjQU=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 360}, {-180, 180}}, 
     DisplayFunction -> Identity, AspectRatio -> 0.33, Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox["\"t'\"", {
           GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
        None}, {
        FormBox[
         StyleBox["\"t\"", {
           GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
        None}}, FrameStyle -> Medium, FrameTicks -> {{{{-180, 
          FormBox[
           RowBox[{"-", "180"}], TraditionalForm]}, {-120, 
          FormBox[
           RowBox[{"-", "120"}], TraditionalForm]}, {-60, 
          FormBox[
           RowBox[{"-", "60"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {60, 
          FormBox["60", TraditionalForm]}, {120, 
          FormBox["120", TraditionalForm]}, {180, 
          FormBox["180", TraditionalForm]}}, None}, {{{0, 
          FormBox["0", TraditionalForm]}, {30, 
          FormBox["30", TraditionalForm]}, {60, 
          FormBox["60", TraditionalForm]}, {90, 
          FormBox["90", TraditionalForm]}, {120, 
          FormBox["120", TraditionalForm]}, {150, 
          FormBox["150", TraditionalForm]}, {180, 
          FormBox["180", TraditionalForm]}, {210, 
          FormBox["210", TraditionalForm]}, {240, 
          FormBox["240", TraditionalForm]}, {270, 
          FormBox["270", TraditionalForm]}, {300, 
          FormBox["300", TraditionalForm]}, {330, 
          FormBox["330", TraditionalForm]}, {360, 
          FormBox["360", TraditionalForm]}}, None}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, Method -> {}, 
     PlotRange -> {{0, 360}, {-180, 180}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(2\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(3\\)]\\)\"", 16, StripOnInput -> 
        False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 2/3, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Column\"", ",", "1"}], "}"}]}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7920672986132236`*^9, 3.79206734269454*^9, 3.7920673782222805`*^9, {
   3.7920675708414984`*^9, 3.7920675966824875`*^9}, 3.7920676409310455`*^9, 
   3.7928377255495653`*^9, 3.792840001585657*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"export3", "[", 
  RowBox[{
  "\"\<1105_pics_angular_progress_p1p2p3\>\"", ",", 
   "angularProgressP1P2P3Plot"}], "]"}]], "Input",
 CellChangeTimes->{{3.792068591908608*^9, 3.792068601254484*^9}, {
  3.792068632835929*^9, 3.7920686424092607`*^9}, {3.7928400050658975`*^9, 
  3.7928400055127277`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"showTrilinWithP1P2P3", "[", 
   RowBox[{"a_", ",", "trilinFn_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"degStep", "=", ".1"}], ",", 
      RowBox[{"eps", "=", ".0001"}], ",", "ts", ",", "lp", ",", "xs", ",", 
      "ons", ",", "legend"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ts", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", 
         RowBox[{"360", "-", "degStep"}], ",", "degStep"}], "]"}], "+", 
       "eps"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ons", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"orbitNormals", "[", 
         RowBox[{"a", ",", 
          RowBox[{"toRad", "@", "#"}]}], "]"}], "&"}], "/@", "ts"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xs", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#2", ",", 
           RowBox[{"toDeg", "[", 
            RowBox[{"getBilliardAngle", "[", 
             RowBox[{"a", ",", "1", ",", 
              RowBox[{"trilinFn", "[", 
               RowBox[{
                RowBox[{"First", "@", "#1"}], ",", 
                RowBox[{"Third", "@", "#1"}]}], "]"}]}], "]"}], "]"}]}], 
          "}"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"ons", ",", "ts"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lp", "=", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"getAngularProgressP1P2P3", "[", 
         RowBox[{"a", ",", 
          RowBox[{"\"\<degStep\>\"", "->", ".25"}]}], "]"}], ",", 
        RowBox[{"(*", 
         RowBox[{",", "\[IndentingNewLine]", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"LineLegend", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"#", ",", "16"}], "]"}], "&"}], "/@", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(P\), \(1\)]\)\>\"", ",", 
                "\"\<\!\(\*SubscriptBox[\(P\), \(2\)]\)\>\"", ",", 
                "\"\<\!\(\*SubscriptBox[\(P\), \(3\)]\)\>\"", ",", 
                RowBox[{"ToString", "[", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\"\<X\>\"", ",", "n"}], "]"}], ",", 
                  "StandardForm"}], "]"}]}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<Column\>\"", ",", "1"}], "}"}]}]}], "]"}]}], 
          ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", 
             RowBox[{"Darker", "@", "Green"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Dashed", ",", "Thick", ",", " ", "Purple"}], "}"}]}], 
          "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", ".33"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"GridLines", "\[Rule]", "Automatic"}], ","}], "*)"}], 
        RowBox[{"FrameStyle", "\[Rule]", "Medium"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "360"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "180"}], ",", "180"}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{
               RowBox[{"-", "180"}], ",", "180", ",", "60"}], "]"}], ",", 
             "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", "360", ",", "30"}], "]"}], ",", "None"}], 
            "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"Black", ",", "16"}], "}"}]}], "]"}], "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{"\"\<t\>\"", ",", "\"\<t'\>\""}], "}"}]}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Dashed", ",", "Purple", ",", "Thick", ",", 
           RowBox[{"Line", "@", "xs"}]}], "}"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{"Show", "[", 
        RowBox[{"lp", ",", 
         RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"\"\<a/b=\>\"", "<>", 
             RowBox[{"nfn", "[", 
              RowBox[{"a", ",", "2"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"Large", ",", "Black"}], "}"}]}], "]"}]}]}], "]"}], ",", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "@", "Large"}], ",", "#"}], "}"}], "]"}], 
           "&"}], "/@", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", "Red", ",", 
            RowBox[{"Darker", "@", "Green"}], ",", 
            RowBox[{"{", 
             RowBox[{"Dashed", ",", " ", "Purple"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"#", ",", "16"}], "]"}], "&"}], "/@", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(P\), \(1\)]\)\>\"", ",", 
            "\"\<\!\(\*SubscriptBox[\(P\), \(2\)]\)\>\"", ",", 
            "\"\<\!\(\*SubscriptBox[\(P\), \(3\)]\)\>\"", ",", 
            RowBox[{"ToString", "[", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\"\<X\>\"", ",", "n"}], "]"}], ",", "StandardForm"}], 
             "]"}]}], "}"}]}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Column\>\"", ",", "1"}], "}"}]}]}], "]"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.792837811526097*^9, 3.7928382582209487`*^9}, {
  3.792838490549966*^9, 3.792838577271694*^9}, {3.7928386722301655`*^9, 
  3.792838953975438*^9}, {3.7928389894291344`*^9, 3.792839140302026*^9}, {
  3.792839177005533*^9, 3.7928391798213468`*^9}, {3.7928392131905203`*^9, 
  3.7928392151653285`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showTrilinWithP1P2P3", "[", 
  RowBox[{"2", ",", "getX823Trilin", ",", "823"}], "]"}]], "Input",
 CellChangeTimes->{{3.7928391428028355`*^9, 3.7928391891850595`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxt3F+sHOV5x/EJMWWbumGSOMmmceshcZJNcOKBGLwJhvMCBjbBwRPiwCYx
nAkxPmtj47F9drsXVs9cIHUvkDIXVNoLJM8Fas8FUuaCi71AOu+FL1YqKiMV
qecCyVPJavYCNVPFbbatW9fs830t7aNy89PH7/O+7zwzs3+OfZh7Xjr37Mt3
eJ6X3+l5H+f//1+58v4uSXG18lc3bt767yqerXz6TklxvXL1vz8e/x2+vvLM
/37s3+P5yuATkuIbK507JNnQXFnU38R3mJOkeId5djH8SfxH5p8XvhM3zN+S
4k+Z50jxTrwTf9o8SYp90yLFnzHlYn3nz5o/LPwZ/DmzaPfmZ/Euc33hz+HP
m98uvAt/wWwv/Hn8RfNvC38BN81uUvwlUy3Gnf/M3E2Kv2zuIsW7jU+K/9zc
SYr/wuwkxXvMLlIcmGuL/XAaLKd3j/mfxbj783tk/Vsp419hHKdfWU7vq+a/
FuPuz/HGVxnfa/6YlPG95j8X49j7GufbjX9N6m+ljH/dLIZv4vTr5hOkjH/D
7CBlXKXXMv++mO/+vCXrbbQY/6aR2xOn35T1bqWMf4v9cYo3vsX4vex/L+P3
mk+SMr6P+W58n5zPjX2Mf1vqb6WMf9vMF+PY+w7n141/R+7Xje8wvt/8ESnj
+80dpIyH7I9NaBYv95WQepU2lPkWe/dxfrC5bzlTxjewvU/228Le/fR3P/Pu
l/EVnKq0Kr3vcvxu/ndlvVsp8xjfwFald4DXywHmH2B/nB7gfGF7QPrZwt4D
y2kekPEVnOINbB+gfzfvQc6fm//gcqYPcj9jq9I7yP11kHkHOX6c4g1sD3L9
sNfm/LeZ35b9DE7bzMeWeou978l6t1Lmq0xV2u/J+hZ73+f6uXnfl/Vupcxj
fANbld5DnD9sHuL4H2I+TrFV6R1if2wOMf8Q81XaQ5w/7D3M+XuY+Q9z/nGq
0qr0HuH6PcL8R9gfp49w/2D7CPcP9laW06wwH6crzMeWcevmGfGtXESg0hj6
wbHKVGWu0jJ/C1cqvUeXM1BpHuV+wLHK9FGuL85xju2j3K+4Uuk9tpzBYzI/
wAYbHOMYpypzlVZl9Zicj6tu38c5/4+zv0qjMlaZPs77E84fl/UvY6uyYr8K
e4fZ/zD7Hpb1AmxUxipTlblKy/oWVyq9J5YzUGlUxipTlfkTXH9sscXVE5x/
t++TyxmoNE9y/+P4STk/MU5V5iqtykql9xTvn0+xLw6weYr7D8c4xin1Kc6f
4vpjq7JifoW9znIGKo3KuMP+OMUpznGOLba4Uun9YDkDlUZlrDJVmau0P2B/
XOHK7ftD7v8fsi8OsFEZq0xV5iqtykql9/RyBirN07z/4fhpzj9On+bzEecq
rcqK+qtu3yPLGag0KmOV6RGuP85xju0RPi9xhSu37484/z9iX5VGZawyZX6K
c5xjq7JS6T3D/s+wLw6wwQbHOMapyvwZ6S/HVmWl0ju6nIFKozI+yv44xSnO
j7I/toxbXKn0ouX0VQYqw0jWC7HBBkcqY5WJylRlpjJXWbBfgS22uFRZqaxV
ej9eTv/Hsp6PA5Uh4yE22OBIZawyUZmqzFTmrJ/jQqVl3OJSZaWyVuk9u5y+
yuBZXg84VGlURipjlQnrJThVmanMqc9xodKqLFVWKmuV3k94/f+EvrGPA5Wh
SqMyUhmrTFSm7JfiDGc4V1motCpLlRXrVbhW6R2j/2P0j30cqAxVGpWRylhl
wvoJTlVmjGc4V1motCpLlZXKmvVr7P10OX2VgcpQpfkpr38cqYxVJtQnOFWZ
qcxVFiqtypL1S1zhCte4dn0/t5y+ykBlqNKojJ6T9SMc4xgnKlOVmcpcZaHS
qixVViprld7z3P/P0zf2cYADHOIQG2xwhCMc4xgnKlOVmcpcZaHSqixVVipr
lV53OX2VgcpQpVEZqYy79I8TnOAUpzjDGc5xjgtcYIstLlVWKmuV3s+W01cZ
qAxVGpWRylhlojJVmanMVRYq7c/oH5e4xBWucI1r1/fPuf9/Tt/YxwEOcIhD
bFRGKmOVicpUZaYyV1motCpLlZXKWqX3i+X0VQYqw1/QPzbY4AhHOMYxTnCC
U5ziDGc4V1motCpLlZXKWqV3fDl9lYHKUKVRGamMVSYqU5XZcfrHOc5xgQts
j/PzJS4ZL3HFeIVrxmvX9wvc/y/Qt8pAZfiCrBdiozJSGatMVKYqM5U5x5fj
QqVVWaqsVNasV2PvRfp/kb6xjwMc4PBF+seGcYMjHOEYxzhRmarMVObsl+NC
pVVZqqxU1iq91eX0V+kfBypDlUZlxPwIxzjGCU5wilOc4Qznq/SPC8YLbLHF
JS5xpbJmvdr1HS9nI5b5DeyrbKoMVLZUhqwX4rZKw7jBHZWRyq7KWGVPZaJy
yH5DnKocMT7CmcqxylzlpsqC9Qo8UWkZt3iqslS5rbJSOWO9Ga5Vzhmfu+v+
y+VsqPR/yesBN1UGKlsqQ+aHuK3SMG5wR2WksqsyVtljvR5OVA5VpipHKjOV
Y5U5++V4U2WhcqLSMt/iqcpS5bbKSuWM9Wa4VjlX6b20nA2VvsqmyuAlPh9w
S2Wosq3SqOywXgdHKruMd3GssqcyoT7BQzzEqcqRykzlWGXOejneVFmonKi0
KqesN8Wlym3Gt3GlcqayVjlX6f2Kz/9fiRsqfcZ93FQZqGxR38KhyrZKo7LD
/A6OVHYZ7+JYZU9lonKoMmW9FI9UZoxneKwyV7mpslA5Yb0JtiqnjE9xqXKb
8W1c4QrPVNYq5yq9E1z/E+KGSp9xHzdVBipbKkOVbdZrY6Oyw3gHRyq7KmPq
Y9xTmTCe4KHKVOWI+hHOcIbHeIxzlZsqC5UT5k+wVTlVWarcVlmd4N/z8Exl
zX41nqv0Xubfn18WN17m+x/2VTYZb+JAZYvxFg5VthlvY6Oyw3gHRzjCXZXx
y9L/Ku6pTJif4KHKlP5TPFKZqRyrzFVust8mLlROGJ9gq3LK+BSXuMTb9PtP
uGK8wjM8wzWu8Zx+59g7ye8vnRQ3Tsr6d2GfcR83Gf8iDk7K7xftwa2TXH8c
Mj/EbeYfxIZxgzsn5fcPn8LRSfl9yKO4e1J+X6qLYxzj3kn5fdE1nJyUfhM8
PGn+4+Pxv8SpytHtcbtwdnu+eHx7fXF+e3/x5u3jExe3j188od8Otrf7F09v
nx9xefv8ibdvn19xdfv8i2fUN3F9+/qJ57evr9hb4/ffXhY31mS9P2B/zd0/
4ibjv8XBmrv/xK01d3+KwzU5ryVur7n7W2wYt7iz5l4f4ojxAnfX3OtLHDOe
4x4e4wRneIhHOMUpHuEhztbc+4d4zHgP54zHeJPxLi7W3PuXeLLm3t/ElnqD
p2vu/VFc4hBvr7n3V3HF/ADP1tz7s7jGPp6vufd3sddz7//iRk/Wm58Q+4zX
uNnj/QUHuMIt5m/jkPESt/EUG+ot7rDfBEfUF7iLN3HM/Bz38BgnOMPDnvt8
F6c9fn8Gj6gf4qznvj+Ix9Sv4bznvn+INxl/HheMR3jSc99vxJb9DJ723Pcj
ccl4iLdxC1c4wDPcxHXPfX8TzxlvYO+U+/4nbpyS8fmvxD6ucRPPcHDKff8U
t06576fikPoSt0+577digy3unHLfj8URLnAXb+KY9XPcY3yMk1Pu+7t4iEc4
PcXnPx6x3hBnOMFj6ns4Z70YbzLexQXjEZ4w3sGW9Q2e4jYucYi3cQtXp+R+
24Nn+Iu4PuV+fhPPmd/A3mne/18SN07L+Bz7p3n/x03GZzjAFW6ddj+fikPG
S9w+7X6+FRvGLe4wPsER4wXu4k0cn3Y/f4t7jI9xgjM8xCOc4hSPTru/HxBn
jCd4jHs4pz7Gm6fd30+IC+ojPDnt/n5DbBk3eMp4G5eMh3ib8RauTvP7onhG
fRPX2Mdz3MDeK2LPXX88/6XYf4Xrj5uvyH4zHFBf4dYrfP7jkPESt/EUG2xx
B09whAvcZf2/wzG+jHvUj3HC8Wd4SP1f45T6FI/wEGfUn8NjvIZz6mO8ibu4
wBGe4A62r7i//xRPGW/j8hX396fibcZbuMIBnuEmrrGP57iBvTNiDzfOyH7z
WOzjGjfxDAe4wi28jUNc4jb7TbFh3OIO4xMcMV7gLuObOMY57uExTnCGh6w3
wilO8Yj6Ic7OcP3xmPEezhlfxZuMd3GBIzxhvw62zF/BU3wQl9SHeJv1Wrii
fg+eMd7ENfbxnPq7sHeW9/9VceOs1NfYxxVunuV64gBb3Dor7w8FDs/KzwuX
cZv9fo0N9SnusF6CI+av4i7jEY6Zb3CP4w1xggM8PMvPQzhlPQ+PcP2iOKO+
wmNc4px+tvCm6x8X1Od4wniGresfTzneBJeMx3jb9Y8rbPDsrPz8GeKa8QDP
z8rPo3dj71X+/6kXxI1X6R/7r/Lv57j5qhxfiQNscYv5BQ5Z/zJuU59hQ32K
O6/K+UpwRH2Mu6/K+T6KY47P4B777ccJ8wM8pN7HKft5eOT6Py7O2O8qHjO/
xDnjW3gT/wYXrJfjCfMzbDm+FE+pT3DJ8cV4m/oIV9QbPMMhrpkf4Dnzfeyd
4+c/3Dgn9fUvxP45qa9wk/oSB9jiFvUFDnGO29Rn2LBfijvn6B9H53j94+45
rj+OqTe4R/1+nOA9eMjx+DhlvodH1P/u5+LM9Y/H1Jc453i28KbrHxeufzxx
/WPL/A08pT7BJfUx3nb944p6g2ccX4hr1z+eM/9u7CX0j3ck/Lz/M3Ej4f7H
O6kvsY8t3pXQP27iHO+mPsNBwvXHe6lPcIv6GO/DEQ6pN/gADnGbfgJ8iP18
bKj38GHXf1fcwRU+Qn2JI9c/PkZ9gbuJvB/n+LjrH8cJ/38mPsH5Pod7rn98
hvqjOHH943XXPx4m8n6/B19i/t04df3j19ivfl48ctcfv+76xxm2+A3qf4PH
+DJ+k/oM55yvFL/l+sebrn/8trv+uKB+Bb+D9+MJ9QF+l/18bF3/+Irr/znx
FFf4Pdc/Ll3/+APqC7zN/ZbjD13/uKI+xdc4vgTP6GcVf+T6xzX1Bl9nvxDP
2S/AN1z/2DvP5x/ecV7q65+KG+fpH+88L8fzPvapt3jXebnffoOb1F/Gu6nP
cIBTvPe83J/ncIv5q3gf9REOqV/BB6jfj9vUB/gQ/fjYUH/zmPgw/h3uuP7x
EfZ7H0euf3wMF7h7nt/fwsdZ/9c4dv3jE+yX4J7rH59x/eOEeoPX2S/EQ9c/
vuT6xyn1Hn7N9f8T8cj1j1/HJc64fyx+w/WPx9Tn+E32y3DOfhv4Ldc/3qQ+
xm+zX4QL9jP4Hdc/nlAf4Hdd/9hyPW8+K77i+sdT1q/we9zf7+OS+i38gesf
b7v+8Yfs92tcuf7xNdc/nlG/ij+i/iiuXf/4uusfz6nfg29Q72PvAp//eMcF
vv/8WNy4QP94Jy6xf4Hvf3jXBd7/cZP1c7wbZzigfgPvZf0Et6iP8T72i3BI
vcEHqA9xm/oAH6Lex8b1jw9TX0fiDsd3FR9x/ePI9Y+P4QJ3qc/xcdc/jqlP
8QnXP+7hGJ9x/eOE41vB665/POR67sGXqL8bp6zv4dcuyL9vXj0qHjF/C7/O
/Ms4c8eP37ggr49VPHbXB7/J8QU4vyD/3nvzGfFb7nzjTeZb/PYFPk9xwfFt
4Hfc/YInHJ/B77rzga3rH1+5IN/Xqh+Jp/Szhd9j/mVcsl+KP+D4Yrztrg/+
kP0CXFHv4Wusf/WIeMb8LfwRx5fjGqf4urtf8Jz1Db5BfYC9i3z+PS3ecZHv
u7hxkfd3vPOiWTxPKMf+RfrHu5gf4+ZFeb6Owbsv0j8OWN/Dey/K+b76Q3GL
eov3sX6Ow4ty/2zgA/SzitvMN/gQ9Xuwucj7/w/Eh+mnwp2L8nrYwkeov4wj
1k/xMebHuEs/K/g4x7cHx/Tj4ROsf7Uj7uEtfIb1c5wwP8Xr1K/ioesfX+J8
Bzh1/T8lfo36Co9Y3+LXmZ/jjH428Buufzym3uA3Xf84p97Db7nz/6R4k/vH
4rc5vhwX7v7D71zk9zHw5KJ7fof4XeoDbN39h69wf1dPiKfUW/we6+e45PhS
/AHHF+Nt7rcV/CH3wx5cUe/ha9xvVw+LZ9Rv4Y9c/7h2/ePrzF/Fc9c/vsH1
DLC3zvvv4+Id69x/uLEu+1m8c53XH/bXeV4Z3kV9jJvrXH+8m/324GCd64/3
4uoxcYv5Fu9b5/MHh+yX4gPUx7jN8a3gQ8zfgw39ePjwulzP6lFxh/OxhY9w
fDmO1nn/xcdc/7jL+gYf5/gCHDPfwyeYXxlxz/WPz1Cf48T1j9dd/3jozj++
tC73d4BT1z9+bd18arHfini07p4fJX6d/g3O1uV5fTcfEb/B+d7CY9ZP8Zvr
8vy6FZyv8/y6h8VvufONN935xW+vy/29gguu581D4nfYz+IJx7eB33X3A7Zu
/kPiK1x/i6fcrxv4Pdc/Ljm/Hv6A+q3vi7fX3fPLxB+6+wFXXA8PX3Pn73vi
mbu++CPOh8G1e/22xdfd/YLn9JPiG1xfg70+z288KN7R5/zhRp/nLeKdffd8
ObHf5/7Fu/qcvwfFzb75k8V8vLsv/Rgc9Dl/eG+f++8Bcavvnp8n3sd+Boes
7+EDffd8PnG7L8/n3MCH+nK/rWBDPze/Kz7M8Vnc6cv9toGPsP4Kjtz8+8XH
qN/CXTcfH3fnD8euf3yiz/1zn7jn+sdn3PnDSZ/nk4bidbc/HlKf4kvu/OHU
Hf9+8Wtc/xSP+tyf+PW+e76kOOu750+K3+jL80lTPOb839wnfrPvnm8pzt3+
94rf6pvPLebjTc7HzW+J3+6752uKiz7PR8Xv9M3vF+PfFE/67vmd4nfdfGxd
f/iKO1/fEE/d/Y3f68vzU9Ovi0t3/F8Tf+BeL3i7z/NZ8Yd986eL8b3iqu+e
fyq+Rj/pV8Uz1x/+yB3fV8R13/zLYv97xNf75l8X/eG5e30H4htuPvYG7vmv
4h0D93xYcWPgnh8r3jkwf7+o3y32B+YfF/6yeNfAPZ9W3ByYf1iMf0m8e+Ce
bysOBu75t+K9A/d8XHFr4J6fK943cM/XFYcD9/xd8YGBez6vuD1wz+8VHxq4
5/uKzcA9/1d8eOCeDyzuDNzzg8VHnD8ljgbmbxbr3SU+NnDPJxZ3B+75xeLj
A/d8Y3E8cM8/3lr4xMDwfGRxb2B4frL4zMDwfGVxMjA8f1m8PjA8n1k8HBie
3yy+NDA833nr/wAxNeZd
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
Fa+2I8sj0On15DFrh5JrItBD1f7tNlVyUwTatugdPPFKi+aPwCvRHct718ic
SIwf4hL4Zx9ZKxJeWU7XTJaTuZGY8XFmQGoG2TQSia0zLh3xIUOxPv7Q/Y7x
ZJ9I3GoNCfLrS+ZFYlOMpSavpRfNH4nLjXdDjE6QZZF4ubTnALUccl4kJvXt
/aBlMrkwEs/PbB3UrEIuiURv/y6Zn671pPkjscbFKFRlBbkmEhfCpTHD/chN
kXDOrurp25/cGgl7u2VvljZq0vxRSN6wTFizg6wVBR3NHuOHJpG5UThkcPxQ
7liyaRS+Zy/iP//cg+aPwtCqF698T5N9orDmZU5xVS6ZF4WNcfbjvRzIgiis
9pd2vt+VLIuC1cFl25Oqu9P8UehSPG4+Zy25MApTWkyMC0PIJVEIKViq76JP
lkchbZBv7ecXGjR/FKpu7ru0cx+5KQo7866mh2SSW6NQ2OeBl/YEMicai752
e3j7VzeaPxpb9+QszZOTudFQsTOs919ENo1G549tkwZ4kRENU681+k29yT7R
cM/J/bf3gTrNHw3h+09eggKyIBr1vR5Nt4wjy6LhuKe+5Z8hOS8aGxoNhld8
6krzR2P1yBWzl54gl0TjUTU/3WsGWR6NO1bLQ7uDXBONkS22Byq6kJui8XvK
iOuzbqjR/NHg7HbVNV1N5vBgW/f5d2MQWZ2HNuGRuvmDyVo8rOTbdjF43kVp
XR5S2rKaz+0lc3mKfy/6NkxNJxvyoLLt0qT748mmPOgLSgMD2zsrbclD5hK1
ZVXnyeDBZkKw0YT5ZDceTlUMXLzOjezDw51jWa1vNMkhPHwab3HU+K4qfV8e
WhMO9+Hnk/k89G0tj10bSRbw8LpvSdORYeRsHsych9See6NC35+HwzpfxWcO
khcrnt9ur7ZbSM7jYXCo7aXZE8n5PFwcOfCp8+9OlA8PMS84q3+Wk4t58Bv3
SX3TAnIJD+9nbZcMdyeX8tBlSc7fjZpkOQ9xDzKqv9VylK5UPL/+VWfbDeQa
HgZs2HolOYxcz4NF5irD2frkJh7mzT++uvXKv/L/dzMPS3XNxYe9yK08TB+w
o6/Fvb9Kt/Pwwm1J3pxwMicGwvgLX1Y+/6O0egzcT/Vz4CWTtWLQnjxy5ueW
DqV1Y1Cy5kcessjcGCy7XJ7m2fFbacMYPB659mOveWTTGHz/3ad5WVeyZQy2
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
Q5Kx+e5OQdsRMi8Z8S1us1efI/OTUdZrddbXSrIgGVdexbwZVEfOTkaD9y7f
Hs/IsmQ0rjs7uuIDeXEyDld1qvdoJ+clgyOyPrNFNVbp/GQkb/itf7YnuTAZ
kUsG+ewdQC5Ohl1y3yXxBuSSZDgXpHR8MSaXJsM2g3PX34osT8bGFzljFzuS
K5NRoLFyyOqp5JpkXLwZdjYzmFyfjMzsEyojYshNyVAZIvp+NIXcrHi++dSy
/hJyazL6z7E8GjSL3J6MnQfmeQsWkTkpuOBu6ZSwiqyegv57fdMm5pO1UpCS
EbL5ZSFZNwU/Ju7YIthH5qZgVe28SQ1HyYYp2JK6zGTEWbJpCqZsP2437RLZ
MgWHF63SD6siIwWmzbNmudwhu6Xg78o69b6PyD4p2P9Si1/xjBySgj2Pf0wO
f0vmpeCpR6XhvVYyPwULd0RcMmsnC1IQ6u5bKPlHzk6Bw1zDgAK1OKVlKdB/
m5Z6UJO8OAVDy+9k7uxDzkvByifBb+YMIuen4Mny2ADnYeTCFLwb+nTCV0Ny
cQr6bozoutSEXJKCTt0M7TUmkktTcGZiUojElixPwVf18eWVDuTKFDgaHXjZ
1Z1ck4JRF/tPGD+NXJ+CB3bfB7gFkptS0CDt88s9nNycgnOVRVaWMeRWxfcp
8bPWSSK3p2DqzKDwhjQyJxWXQhb/zBOR1VPR6aIo0yKbrJWKeLP4vhWzyLqp
qPeS2bvMJ3NTcS6uxvXkYrJhKmKS/WforCSbpuJLhObomLVky1SMMeq3c1s+
Gano37PY7GYB2S0VDZnjhr3bSfZJhVWg97n2veSQVMwP+OPSfpDMS0Wg3oKu
b4+S+Yrn16+yv3GKLEiF3wqbSdvLyNmp+NhHf3SCnOWfivw0vyC9qyz/VIQX
zO+4dp3ln4pZp78HJ9xi+adC69y6Xd/usPxTIbJo0815wPJPxfEZsa0tDSz/
VNw/+YEX1sTyT8X+5fzC0pcs/1Q8XJ37QuMtyz8Vd1KLI30/svxT8fysl/3y
zyz/VPwqP1Ze9o3ln4rJFTrdmn6y/FOx27fQ6+cfln8qzvb5r7SrSrzS7anI
OPI7p7samZOGv5aTz3fWIKun4fiGrYe+apK10hC1Y560vjdZNw3ag7KmHO9L
5qah9/ShZgsGkA3TMEgaIvXUI5umofsavfHdhpIt0/DWe++K8wZkpEHVJ+EQ
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
F0Li+PH+lgLWfyFecrs4XN7G+i/EAL05B95uZ/0X4nthW99eO1j/hXi28ed8
852s/0J0+m9we9Au1n8h3IpeS3KKWP+FGPmxoWPzbtZ/If7ZzlxTtof1X4jY
uCmWDXtZ/4VQsd7c+rOY9V+IlLN/z/ffz/ovRI7Og50WB1j/hdh9YckOn4Os
/0Jw1mefSz3E+i+E+kvO94WHWf+FcJ4302f7EdZ/IXa9sL11uoT1X4iSceuF
t4+y/guxxrPG9vUx1n8h6jtNHN9xnPVfiOEqGgG9T7L+C7Hs77KiEadY/4Vo
OfdjhNVp1n8htMYsfORZyvovxNw0/pXIM6z/inx+1L7KOMv6L1T8/+4nzClj
/RciY+ebByvPsf4r5r39/GDBedZ/Ic7NVbl04ALrvxCnLiYMOFPO+i9Eqo/h
yaty1n8h1pbFbqy9yPovxKuMMZcaL7H+K77H1dWT3lxm/RcibnDxz9YrrP9C
tD3L0fh1lfVfCMd9Wmkq11j/hXC1FnM1Kln/hbDdtXt07+us/0Kccd+3pH8V
678Qh37nOujdYP0Xwo+jFzTsJuu/EN1Hz68YWc36L4TZ8z3rx9xi/RfioeOs
q+Nus/4LsXTYz2DTGtZ/IV4P6T5tfC3rvxDuZTsOmt9h/Vfct9h9Iou7rP9C
vJnbY5fFPdZ/IW6uP25nUcf6r7jf1gs9zO+z/gsx2ybxqtkD1n8hYvZaHTOp
Z/0X4kljk/a4h6z/inkKbN6OfsT6L8TKQYaTRjaw/oswtNf8v0MbWf9FGHlp
lL3eY9Z/ESyGt3J0n7D+iyCvO2Gn/ZT1X4TzDlP/dW9i/Rdh6r5V9l2esf6L
MN/EV/0v82ARxn9NCPz+nPVfhCsDd4z59IL1XwST1/eWvHrJ+i/Cm/I7ksZX
rP8iaHinfrzzmvVfhJz5Gd8q37D+izD46IGVF5pZ/xXvs/Hz2eNvWf9FmDK9
Z27xO9Z/EbYa1Nzd+p71XwTz/p2v5H1g/RfhYe507wUfWf9FcPP8IZn+ifVf
BB8/H6uUFtZ/EbS9pxVEtLL+ixD7U77T+zPrvwgJXJEnvrD+i+B63GST2VfW
fxGsHlasGNbG+i/CbNUuRjrfWP9FuMkpFal+Z/0XoUbrcOJXZokIzT9Oqr/4
wfqvyFdne9iddtZ/EfhpVlEXf7L+i9D1dmDfkl+s/yJ4N16du+03678I67kR
u5d3sP6LMMvww9wZf1j/RUjb4DGA/5f1X5GH5dT0wH+s/yLM0L8xx4GTqPRW
EVaUbPUz6UQuFKHu6pY3g1TIRSIcKNsFdVVysQi6K1ZHtzEfFOHEO0eXps7k
EhFe+235fqML+YQIq8fMEJ1WI5eKwL1/pWxnV/I5EVTvxtxboU6Wi7C31upC
djfyFcX3vT1pZpwGuVKETHN3Te/u5Jsi6L2OzLLsQa4RoV7ALx2mSb4nQoZu
VF2PnuR6EUS/Jt7+ztyoeP8xn/Y29SI3Ke5P7dyYKi3ySxFi3L/+Od6b3CyC
E1znFGiTP4iwtG7hm0U65FaR4u/Xs5aCPuQ2EW6HfJOE9iW3K/r51m2bQz9y
hwhHdt08ZdSfzBFjfP0WeR9dcmcxkgbcP/+HWV2MztHbS14PIPcQw2ssd8vt
gWQtMWpOLZxTOojcR4xBPVV4OwaTdcXwc7o5ZakeebAYFzdy9cX6ZK7ivAJw
IoaQDcRYniZ+48QlG4qReKPL/XFDyWPFqIrwuNVvGNlUjIG3N935x2whhmMP
/1fNw8mWYnRJbVC/Y0C2FSPt2Ta7shFkiHHQUmt50UiykxhWDvtaV4wiu4kR
1fN95nRDspcYxgZRPWJGk33EUCtbU+kxhhwgxpJv3L0WRuQQMaC/b7/+WHKE
GA2v7tapjyPzxBi7y8/oK3O8GK/XPT302JjMF2PCiCm8ShNymhgWJjbOx03J
AjFSXA5FbzMjS8Sw40iPLRlPzhZjn90sSM3JuWK8nVfWI8aCLBPjqLnpwKkT
yAvEmPfzdarVRPJiMbb2/NF55CTycjESNs5v1rYk54kh7CgbwLEirxPD07Vx
y0fmfDE05o0TNViz/ovROECt8LoN678Yu52qDEttWf8V75v8odfeyaz/Cq/4
GLJhCuu/GM6XIrsusmP9F+NXfqN+Flj/Ffdx04Bdifas/2LcOn9vY7AD678Y
GR+fcNwdWf/FsJw/8Lm1E+u/GOvuzLQb58z6r8jneDc9rgvrvyI/rSezdVxZ
/8XIkY1M7urG+i/G8YcGTb+Z6xXz3zdpbnVn/Rcj8OTxha89WP/FaHoz/nyj
J+u/GDMvuKy968X6L8YGbmGPG1NZ/8V45KZufNmb9V+M5MUxHWXTWP/FaNMq
zj3pw/qvmK/iy/Ejvqz/YjztJ9m734/1X4KgxzMi9viz/ktQ7yau3xnA+i/B
31tvuIWBrP8SOI2cZ7MtiPVfgmb3HsYFwaz/Esz5T/h3awjrvwRnNpQfKwhl
/ZegpmyU7/Yw1n8Jvrf9e7ojnPVfgqXmVxJ2R7D+K87b0f/tvkjWfwksvlwV
HIli/Zfg0+UrqqeiWf8lKNeYsO88j/VfAusV8fyKGNZ/CYwyb7vVxLL+S5B6
c6hfQxzrvwTx8VbL38Sz/kswOHjUv7YE1n8JtrSZHVdNYv2XYOH2+yU6fNb/
/73PDc6IZNZ/CVxfqByclML6L0HBqf1lnqms/xIM4ptZxaSx/kvQ/tLFODud
9V+CAPenRXkZrP8SfE6csHd/Juu/BLH8arsKAeu/BA5rpue8ELL+S3BwuH+0
ipj1X4LfwbUdwySs/4rvuaw00lnK+i/B5PmjViZnsf5LUPs0f/Oq6az/ErQe
e73qdDbrvwQyJ++Zz3JY/yUYqCpJ0ZzJ+i/BoaKkVJtc1n8JVuQUL0+dxfov
wa220Y8LZrP+S/AkLSTtzhzWfwkSm5+d/D47Uf7/PijBpbP9c87PIpdIYDDM
/+bcXPIJxf5HvbY5ziSXSuAxaUKjygzyOQkOX+olKc8myyWIy/Pwy5lOvqK4
v+ObY02zyJUS5PrZrH4pId9U3J/XT66tF5NrFPf516FWRxH5ngQPe5W1fRKQ
6yUY9svl3IZMcqMEfm6njW0yyE0SqHGXj29MI7+UIHNZ4KGcVHKz4vuMK56v
k0L+IMGvgN6b9vHJrYrvHalRY5NEbpNAN/x9t6oEcrvi+3V6PDIgntwhwbqj
17s8iiVzpMg6OHVBeAy5sxRTfPfMro8mq0txKqzwtk8UuYcU+9QX+lyJIGtJ
8Xao2sPx4eQ+Uuw/Y2i3NZSsK8WuHcbBnBDyYCl+Zs7+GhVE5koR+XfJy9MB
ZAMpXJyPt2v4kw2lqBCbdAT7ksdK8WBoc+m2aWRTKXpmh31/MpVsIYWbgSRH
14tsKYWgJb2zpwfZVootV3YFZbmRoXj+W/LYzS5kJ8X8855OOeVEdpNi25jz
jlUOZC8p3v3hfqwD2UeKxSOD3tZPIQdI0Xtr/vM7tuQQKYrj782+bE2OkOKf
Ki96vyWZJ0X2oaPc/yaS46VIudIzLNSCzJdi+ugJBdzx5DQp7l77I200IQuk
iK/4kbx8HFmi+L4lv3+YGJGzpfBoPLmxwpCcK1X8e3bUmWkjyTIpfv836ErV
cPICKcrj1/WfNJS8WIrVbqO6rdMnL5dici/vl02DyHlSnB9b/HbwAPI6KRot
jbxd+5HzpTimZ28drUPeKkVD9zuVcVrkQimGD7VUC9AkF0kxWjiwxViDXCyF
ZePYzK9q5INSdLtbG12oSi6RIrBm8yILDvmEFOGtu9Ye7khQulSKv4UVQzR/
ks9Jserdtv3e38hyhV2j8oWfyVekaElINJF8JFdKETJ79/qAt+SbUnwZfaha
6xW5RopOl2ce39NEvifFYH5Lu04juV7xfYvqhwY9IDdK4bVux5yUO+QmRX/a
c8d6V5NfKt43qJfa32vkZinMZs7bm3WJ/EGKI3pfYk+cI7dK4ZOpb338FLlN
CgfetPsZJeR2KSQRvnOe7yN3SOE6XNS72y4yJwsTg2O/NG4hd87C+5VPOoes
I6tnIQedtoiXk3tk4WB//STDBWStLMSt6JqaMZPcJwvc5B2vbEVk3Sykf9kz
ZSmfPDgLR9+tafWMInOz8MZylyDLn2yQBdeBnfv+cSUbZuHcVbeftTbksVlY
4J377JUx2TQL3sFugw2Hki2ycDbza/wibbJlFm5f9qv4oEK2zcKm35Nlzl/i
lUYWxmoUfc5uIjtl4ecszaXp1WS3LPg4D6voeobslYWPQ3fbjNlF9smCTVeL
syeXkQOy0Ofno0VLROSQLEyu+V46P5gckYVR2lcvzLUm87Kw/eGfnjGDyPEK
u+/Q4PyKU5qfhZMBOT3t7pPTFN9Tf+fhTiVkQRZq2373Mv2PLMnCKS2xV2k4
OTsLDwLOVa4aR87NQn5Ul6gTHbHy/wOaoGEF
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        LineBox[CompressedData["
1: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
PxP/i28eeHg62z8Lux0qDIut2f5ZeK6hkH93Gts/C72XThDVWbH9s4BZ9bu+
TGX7ZyGlq0RDjjl/FmK2L2sabMn2z8LWAT97GUxh+2dhya8PiVMns/1OOGVu
qjlnEtvvhM9LS/pHWLD9TjhpsxBSc7bfCTZy0tOrJ7L9TkiZeTx8jxnb7wQL
k2mOZ0zZfieYjJ7BKzdh+53QuOX18ZfGbL8zLA54jf8+ge13xrP3T2oUmeEM
a50jR3WM2H5nZHfoHrYYz/Y7o1/JpvLZ49h+Z5jqh/WPGMv2OyN8wH+pcw3Z
ftnn2R1pWzeG7Z+NU5Yq2QUGbP9sxLzZY1Mymu2fDYXEOsXH+mz/bNj0937f
NIrtnw3dRzsed+ux/bNxP2T2w6HMZbMRfq/30wkj2f7ZWJUk/uigy/a7ICYP
ciEj2H4XXN+uqyPWYftd4O1wf8YabbbfBboD5Hn7tNh+F1ScX7G4eDjb7wJn
I91djzTZfhcohO8t+qDB9ruAr/H08l91tt8VE2p3lQ1h1nXF0QP3z48fxva7
ovST0x67oWy/K+4FdEgC1dh+V2wruWQpGML2u2JZzYqPK1XZflfZf8FmLc4b
zPa7guf8/e+ZQWz/HPhWLYmoUGH75+DkuJbDDQPZ/jkQ/J786McAtn8OktTD
avozZ87BYwG/WE+Z7Z8DrQ+haZb92f45EJs7K7v1Y/vn4MajKQuilNh+N+yp
mnolvS/b7wa5JxHV6xTZfjdoP71Zsr8P2++GDePmiy4osP1ueOm168e93my/
G05/tp/Z0Ivtd4Pauo3h7T3ZfjcUlhyAIrOcO57e2vVxuDzb7451Rbu9THqw
/e5I07m32E6O7XeHyHJOsm93DO13R+q22Rr8f+R8d8wzbF4y/y+5zB1ZuiEH
s7vIDe7wqb+1ZM8fspwH+j7yVSv6TVbxAD9pati1X2RdD4xW3Rv0uJNs6oF3
P88pvvtJhgceq5yI/f6D7OGBu3LFop7MPA+k9ew9XrWDLPCA2fPb6/Ta2fN7
wOaMyQ6z7+QcD/B0RS6y/0mjHg9E/yrb7/aVXOSBgW7ueSFtrM8Dvl4eUxNa
yZUemOHyUzK3hfV6oDJjrtvyL+Q2D1gO63Uzp5n1e2KTfuWT3f+xfk9YzR2Q
UfiZ9Xti5vavl858Yv2e0Dz1v/VXmli/J0TLUjrKP7J+Tyi5JX55/IH1e+Lt
1ceS+ves3xPjPlSvft/I+j1xW3PfuJZ3rN8TRt9jfH+8Zf2eyDTxVPz3hvV7
wuHIBtvezGWeuGg3p7tfA+v3xOWaszaDX7N+T5iPapNTf8X6PaF9fYyt9kvW
7wWNgcv+jaxn/V7YMNxwikEd6/dC9+5pn8a+YP1eqKtvGDzhOev3QsjhqadN
alm/F+ZOi71l9oz1e0HHasVs86es3wu3tp6xsahh/V54uaT/AYtq1u+FhMgj
IosnrN8LtiX7jpk/Zv1eeDain/vEKtbvhSV6v/xNK1m/F6rtF96a8Ij1e8Ho
7aGt4x6yfi/0HLvstsED1u8NNzltP737rN8bB/9k2GnfY/3eOOF8ZPWwCtbv
jekHDo4ddJf1e2OWlVhXqZz1e8vuRyVJ/g7r98b3N/OUft9i/d6I0ir81XaT
9cv23do45eMN1u+NtynjrtdfZ/3e2FoSub3qGuv3RrSH4blbZazfG+evxWhc
vMr6vVGyRP76/66wfm/0ePT2WN5l1u+N+P0fn60vZf0+8MtrweIS1u8D4c+q
9ymXWL8PliTxb4ZeZP0+UBq34oVLMev3wbfSn6OnXmD9Psj6t7Zg9HnW74MR
8ko+g86xfh887DF5YtcZ1u+DHJdK6w+nWb8PCidsFT46xfp9sPud9cMLRazf
B3ZLF3jsPcn6fdCzUe7HihOs3wfdW9JLE4+zfh8curJ6n8cx1u+DVNVn+y3+
x/p9kXjp3+VhR1m/L7qn7mz7Vcj6fREWNcOy7jDr90XP6Qs2lRxi/b4Y/aWu
a+dB1u8L24IPknkFrN8Xf1ZqdfodYP2+eLP91zLz/azfFz/y29UG7mP9vlDT
Xvy/T3tZvy8adXvb3djD+n0xz/7L0115rN8XdStz48S7Wb+v7DeGyK/Ou1i/
L9517xWO2Mn6ZfPp+95/z2X9flgdWzT7znbW7wfPuSp7dmxj/X7gm3TXJ2xl
/X4YWHWm17QtrN8PBnbhg5U2s34/HPw6vmftRtbvhy+l06sLcli/H45Xn1oq
2MD6/RCyb0+/aetZvx/cD6sm9VrH+v2wIkFj3/21rN8PHZ6nDm9ew/r9sG5N
TUbgatbvh2Wf0rV1sli/H849XLnyzUrW74chCu/OHljB+v3xujD+YPRy1u+P
4/9afPSXsX5/BITalL1dwvr9odV3ROPeTNbvjz2qsy8HL2b9svNpEqehi1i/
P7LLnZY+ymD9/liXnBC3agHr98e2keL26fNZvz+O/vs++ns66/fHJ21p56G5
rN8fT0VSfmAa6/fHikMJIiUp6/eH2reywZfErN8fRZ0vHPki1u+PM/mDFNWE
rD8AAc1nfMtSWX8ALlUpjE9IYf0BcBzsuHxwMusPgNWgvaEXE1l/AJ4dsToT
lsD6A7C3l/kS+XjWH4Dvibk3CuJYfwDKRwjSHGNZfwDUx57d2hjN+gOga+St
vTSK9QegdqppX51I1h+AG/l6vsU81h+AaZc7ujzCWX8AjMr5XR9DWX8A/jto
7L4whPUHYOCZL20qwaw/EIc22rzcH8j6AzGnvWigeQDrD8Ti+GvLrvmx/kA8
0H9n4ebL+gMhKp+v89yb9Qcixej1tEgv1h+I1tGBWZ88WH8gOlxHdae4s36Z
y+J3fZvD+gPR2ewcIHFl/YG47PzYtH026w/EkhHyuiJn1h+IcTPv6rbMYv2B
eNbYx5g/k/UHwttkvV2DA+sPhPIorUA/e9YfhDt2EUkVtqw/CNM9utKswfqD
UNZ7gfjYDNYfhIgHgSGa01l/EN6k9TRaOY31B2HMl8r61qmsPwiPmhTj/S1Z
fxAO7H9dUTqZ9cu8LK1rxCTWH4T+1XU/M81ZfxBW8pUuvDZj/bLnnfPJ3NqU
9QdBKHLhbzNm/UGocG+d02LE+oPwdsOiV/bjWX8QSk+vU90+lvUHo9+pXR8+
jmH9wcjNG+Q52YD1B6PQwc51qT7rD0Z+eXzVPT3WH4zEGcefDx7J+oOhPFMz
zH8E6w+Gxv5D/ju0WX8wiu6bXK0dzvqD0bJm/jo1TdYfjCELJ5a4q7P+YPx3
7BNWDWX9wUjQVB9WOoT1B6PBYfjklsGsPxi+pydt0x7E+oOhJ1lvMnsg6w+W
/X5i+luszPpDcPuvUsvOfqw/BK5jWuWv9mX9ModvNG3ow/pDoPtiVcq/3qw/
BJOmzT6r0Yv1h4CvYPbLTJ71h+CtstRilhzrl52/NA4N/BdN/SEYp+eXwO8i
54Tg14BrXpLf5PwQ3Lo8SnlhJ7koBB+zB+Ys/UEuC4HXvG9Vy9vJlSFQlQ69
u+wbuSEEDRfzExe3kdtC0EN948m5LWS5UIy2vbYmqZmsEgqFgY3fQj+TdUOR
dnv5S5cmsmkoxvkqYPIHMkJRmb1/oHYj2SMUE/zjbeXeknmhiG6yqXj9miwI
Rdun13tKXrL+UBgdeHpmcx3rD8VmzeV/456z/lAcN9cUWD5j/aG4cXtXd68a
1h+KpDN1ex88Zv2hWPRlgcOmStYfiqzlzQ1eD1l/KH4VJPAH3mf9Ybi+ufvB
nbusPwyrDyzulXGH9Ydh3ajV/8bfYv1huDJr2Yln11l/GHYo5SksLmP9Yeip
eL9z5BXWH4ZFHvfSykpYfxhqJmmKgi6yftn8wD91redZfxhudgoPZp5l/WGI
WW5/tf9p1h+GhwnfNbacZP1hCDS+cXDocdYfhsEXiry2HGX9Yej9QaKiXMj6
wxA1YunDzIOsPxxLK+QzWvez/nBY333WJzCf9YcjrnEb73Ie6w/HF+PVEq1d
rD8cXqFHzNJyWX84HFT3r6jYyvrDIRh9P1RjM+sPR8sjo8OROaw/HBcaxG6H
1rH+cGg+/WXTuIb1h2Nu2+U4rSzWH457k6NPua1g/eG4kWyuuGAp6w9HSQ9V
/32LWX84XrzJyrqWwfrDEeZ6YWXdPNbPQ3x20LTWNLIiD08O397QJWbvg4en
XY1JPYVkdR5OPTIr6ZnC3g8PtrcvRv5NIBvy0O01zKUtjr0vHo73FwTXR5Mt
eTjbLpx/LYK9Px62FXqs3xtGduLBL/N6Rlowe5883N/+d9zMAHIAD+NvnF04
wJe9Xx5qk4YEPvIk83m4E3I1P8uNvW8efvDvTbFyIafzkNz/ilzjLPb+ebj5
IevlCgdyFg9uuitPjrBl98GD9VmJ/6np5Fwe1u2VnLOyYvfDw9xv8kdKJpML
eZhxq0PFwpzdFw9blNPvHTAhF/Pg4tv7vJIRuz8eenvEHOcbkst5eOV2eN1l
fXafPChs0p7YdyS5lgcVaYDURZvdLw995o40W65BbuKh3/C0GWfU2H3LevYt
ldYOInfysH/b7uPfldn9R6DFcvrlXkrs/iMQe/LPvH4K7P4jcGzIquI+8uz+
I7DVM9/1198ozroRsLit2rfhF9kwAv9dPX21pINsGoGXl1xts7+SLSNQnFgY
6vmFjAjc35jxTukT2SkC27L5+cWNZI8I3DjXzAtqIAdEYO/8yLbWOjIvAt4W
7erznpH5Eegs2XKg4zFZEIFFF374xzwkp0cgLG9Z15275MwIbEry8tO+Rc6K
wPshOrLfDsg5EXBYN23K3hJybgQMtm6wvXeenB8BS+3lfT6dIhfK9vn8ndl5
jFwUAQ1ft9LOw+RiWU/qBL3P+8llEWhXLjS7n0cuj8DA8UP378klV8reX4jy
2IjN5NoIzI73nq+6ntwQgZNRlbPOZZGbZD/vmmk7cxm5LQJzzKLVbi8kd0ZA
7poo1SKdLBeJkoCsXzkismIkpi7wC65LIqtE4mWRl5VqHFk9EkXlBVMtI9j9
R+KhdMhv52B2/5G4afNDw8mX3X8kRl4bNmmiO7v/SFiP/19jH2d2/5F4oTjx
arkdu/9IHJ8cFyCxZvcfiW5FQ1ulyez+Zd4W0meNCbv/SNSMfD3puyG7f9nz
Zkf6OOqx+49E1iv/j4uHs/uPhNbVx6n7h7D7j4T+p6TEY8rs/iPhuMTQJ0+B
3X8keM6e+ZLuSM65kVi8L+S6WSc5PxJvZ5cbVreRCyNx8OXP6cGfyEWRyGhU
4d9+Qy6OxIf1NYpqL8hlkRjUtHDhzMfk8kgcXrlBJ6iCXBkJ571nbNyvk2sj
sTRxrcnoS+QG2fNULZ1Sd4rcJHueyft2CY6Q2yLhlhKwszGf3BkJjcOeSZNz
yXJROOds6RCzgawYhZz/LXUTrCSrREFtseUpv4Vk9Sicbjq/dpiErBuFah3R
j1MJZMMoiNLPyo+OIJtGYcf9oEup/mTLKGxWWj9i4xwyopD+bp5Rlj3ZKQqW
KXJPvKeSPaKgkpfQ9c2YHBAFu3i11dH6ZF4UsHq4x2ENMj8KIdv+6FwaQBZE
oVVodXFXT3J6FHZV9Kid3RnBOTMK17dcGnu7mZwVhYtuBzz7vyHnROHM+4iP
w2vIuVG4O3Bj2vdycn4UIludFm0sJRdGYf6T/YL2k+Qi2f73U05rHiAXR0F9
184d8tvIZVHQOFeRcjSLXB6FvccPJKgsIFfK3qe/4/mJyeTaKGhuSEsYGE5u
iEL0/R4bCjzITVH4KOin2WZLbovC/aMRra0TyZ1R2Hjv1ut9o8hy0Vj1w7iw
5xCyYjR+91f4OrgXWSUaxhVBcx5853FWj8aP3oOtTN+RdaNxVFtZe+pjsmE0
/m2Z7fC+jGwajTUKcu/NTpIto5G2+bimVh4Z0bg4cPyH/DVkp2iYOp40ujyX
7BGNZxerzidHkwOiMTFnlclJDzIvGglmWqMWWZP50cjYZ/Dv6RiyIBprszP6
nx9MTpf9/H6nNuPf4ZwzoxGmuyGn5QE5KxodGh5l+/PJOdH40H9il52InCs7
79ctuW1Hzo9GjtlFZf3B5ELZ8127G+jVEMa5KBourV67Zh0nF0ej9/rj136l
k8tkz+uizQ+zJ5dHQ6vqTnVCf3JlNA5+6vqpWh3KuTYadf+9TnTbSW6Qvf+f
yyUDwslN0XjqsF3OSY/cFg3V/+UfbXkXwrkzGs6vlEs6DpDlYtCdM2C8RyRZ
MQbvrkgK23TIKjEI/H1p593nwZzVY+C+NWzsg01k3Rgs6bpq/8WZbBiDr2XX
jg7vDuJsGgMl/Zgu59NkyxhkOh69Fh9FRgxmpvdYnDSY7BSDZscDd+yvBnL2
iMFfowk+b+LJATGoX/5Ja8pgMi8Gns/M0qcUB3Dmx8BCHDW9JpgsiIH+z/fN
Pf/6c06PgcfripcXdpEzY/Dy1CbhhynkrBicVSx0W1nlxzknBoUzRu7fwCfn
xuDnY9/4ri5fzvkxcJPcu1G+nlwYA5Fay5zv2uSiGFgtbV6+8KgP5+IYLK9o
Nk+yIJfFIH/3ts93Srw5l8fgtNqRjDyQK2OwOfnr6n/XvTjXxsDx+HxleXty
QwzG+Bt/u1nmybkpBtpvvI8mWJPbYjD9RORt7fMenDtjgJXxK1WMyXKxWN56
5+pvJ3fOirGY9Ti6wc3cjbNKLESHxxecGz6Hs3osBu923Ppc3pWzbixcby7L
nPtpNmfDWJx7uuV5aKUzZ9NYrLr7WZpY7MTZMhabvE4sXrd/FmfE4v7SuytL
N8zk7BQLp8lP93ZmOnL2iMXdzrwch7kOnANisWDnYN18sT1nXiy+VquV9Jhr
x5kfC12fIZfdl9pyFsj2zV55O3AbOKfHyv4+ip52MM6Gc2Ysir9PMt92fjrn
rFiUKtUMDNW05pwTi5YA7UtLNltxzo3FkXlxu6frTeWcHwvnQN3MxbencC6M
hUX/1jXfFk/mXBSLeYGTsvu4TeJcHIsTZzqOdptYcC6TPc/EQVk/9c05l8di
Usqzvt/GT+RcGYv9C50t39qbca6NxcbJhnfPJJpybpA9z5qrIQUOJpybYhHy
5rhjyIMJnNtiUXO0Lm9ZqhHnzlg81TUMHzN2PGe5OLwNufpe0DmWs2IcbB11
uw7XGXJWicPM6092mleN4aweh1s97xbteGbAWTcOz9bMn7boy2jOhnGoGTqt
ad8gsmkcXAvEiQ12+pwt4zAi+MpJ48xRnBGH74L7Hbnlepyd4tDtU/UDw8ke
cRj2PEctZO5IzgFxiEj+dNCsXpczLw66Y1e5aziT+XFoV5yu9X3+CM6COOxo
e7Y3W6jDOT0Oq/SMo7sl2pwz4zBK49yZiOVanLPioLytpOrlnuGcc2R9gmq1
ohuanHPjcOmn6uTR3zQ458dhp9rE0tyx5EJZ7+zSfeJ4dc5FcWjMLRo4/tQw
zsVxiB+hNsNGjlwWh/B3PIGV31DO5XEITHvQr+i0GudK2fvm/Xdzmhq5Ng7H
uga/zVw4hHNDHGbtXZUz9j9Vzk1xuHAtaPaHUHJbHNQtPFySawZz7ozDI1tz
1fmeZDk+qpWntN+vGsRZkY+S43rHxvmRVfh49Hp8n5BXKpzV+ej+vmTthASy
Lh9Vn1wCX30byNmQj1vWa/s1DSOb8pHdVm6hbz+AsyUfdWejpjpIlDmDj9Tz
P4X/jvbn7MTHrz4L7yl/7MfZgw/J5uJUM0NyAB+R5WZSoxQlzjw+Pj1q33qr
uC9nPh+NJhnNt/uQBXzMfjHh/N8gRc7pfGg9+qBpdboP50w+MuR0frkpk7P4
eKdnfn5QkgLnHD52N2cNDnrYm3MuHyrXVHvIW5Dz+dgZO2Dp+929OBfy4dRv
feZbRXIRH/v3nTtdO7cn52I+Br53yzjySZ5zGR9R+VueTAkjl/PRR657DL+m
B+dKPh7XfJit606ulfX/qQ2cdU+OcwMfI8PSjt5yJjfxoaC4JLXv1u6r/99t
fASeTBj5auc/zp2yn2+YkdNQ8JezXDw2B/e+9+l0F2fFePie1j5RffMPZ5V4
CB0V7y588ZuzejxWvvjieOP7L8668Xj888bj5Spkw3hUqrauPWDaydk0Hk+G
z2zq4fOTs2U8EBx6aNn8H5wRj9mP5UqUCzo4O8XDuGc5Vla2c/aIh/qEk/zq
7u+cA+JxYNyBxAYzMi8e0UqtGZtjv3Hmx0NwZMHlZ3lfOQviYVTw2CT3WRvn
9Hic5z07VqZKzozH0jXepxcUtHDOkn1+stvk36O/cM6Jx4od//Se/+8/zrnx
uPu+YMiPSZ8558fD4O3+DpObTZwL4+HdfbQl1u8j5yKZTR77ZzS/51wcD52N
kqNeKxs5l8XjYedr8YNR7ziXxyPm2AWnqptvOFfG4+qL3hft4xs418bLfj9q
WD1U7xXnhnh88Fcq0Emv49wUj3sF5naC6lq6/3io/Q1a/XLyU7r/eAT13GVi
tfcJ3X8C1kx9nRCsXEX3n4C/EzvKTOQf0P0nwPGJ3vgN7Xfo/hPQvHxL2aqv
1+n+E9BU0xKb97WE7j8Bdl1j7aYMOU33n4CPifPe7NuST/efgCeTN959cjfN
hrv/BEhSz/Am6B3i7JSAviXmpTsPnOXskYB+p19cL9C/wjlAtu/MdxO/ihuc
eQlIU2q5PXh+OWd+AsbYWsSUjXzAWZCA02F4WNFQyTk9ARcW/yp6Z/SEc2YC
sO/TegdpDeesBHj19QhVuPSMc04CfPKLA23/POecmwD1rDoV5an1nPMTsMze
JCZT/IpzYQIKVHZUBPg2cC5KwPtj53WDU99wLk7AJ8XhF6tWveVcloATH7c/
vL3nHefyBPSPdvZ1ONvIuTIBdy9q/fUuf8+5NgEaQ60tul984NyQgJSFvLHu
zR85NyVAJ7rfQ9euJs5tCUh4W1gr1+8z507Z8+Tuui1W/4+zXCLyd5i/Oq7f
zFkxEUOqc0wvmHzhrJKIipuiXduntnBWT8Rb+44KP7tWzrqJiOm7R/uffhtn
w0Rs/6iQN6uQbJqIAzwTSb/xXzlbJkI69YP2nONkJEJzVW85FZNvdP+JCNXQ
S/IvInskwuCgRb6B2Xe6/0RssLe+k3mKzEvEMuW6X3yzdrr/RDx43TzjbRFZ
kIj1S9WzW0066P4TcWxT8O3NJ8iZiSjy3Xi9yugH3X8i/Le0Ox47Ss5JhNeH
3QoGhj/p/hPxeMXP/9keJOcnovPhtEc99Drp/hOhtrXuD38PuSgR0y60npyn
+YvuPxELb+SHTN5GLkuE5YDs2H2DftP9J+JzwGiDy9nkStnn/R3StLbPH7r/
RPwZs/nLwKXkhkQUX7+a5NJFbkqEypafOUjrovtPxKNEgwVfW8mdiSg5P9SO
F/+X7j8Jifwr39a/JSsmYbvT6pzFwf/o/pPQqrVPzaKarJ6E6cPMxSdcu+n+
k3Bs1ZmNbTfJhknQSd1guEhHDtz9J8F86+6b8UFkyyTM2/q+l/U2MpLwvjbl
QUcV2SkJd9bM+7dduQdnjyQELd4rGeVMDkjCMJMWxR3Lybwk5L2X2/jrKpmf
hENjNF87/iELkvAlwPr6osnynNOTcHmvrcJBITkzCb2GfBdfPEbOSsIoxxFV
pR/JOUk4MbSo4aReT865SYhuuxq5OZScn4TG2BND+LnkwiQ0TLQ4ZfyEXJQE
nE1r+6jci3NxEobc0cza4kQuS0LaJP/xk5aRy2Xve7XC2orL5Mok7E8t9vXt
JNcm4dfu61OeTuzNuSEJe2w86+Ykk5uSENKR1lR6mNyWBN9E6976b8mdSZgs
OlmzTEuBs1wyXtV8/VPvR1ZMhuPhWeqmG8kqyejA6LsL75HVk7G7xfp/t3v3
4aybDAur7MB+IBsmY9cjfrLrfLJpMmLHrlu05izZMhnVL/VH3W4hIxn/Cmpb
uw0VOTslY/TgF3Mto8geyVjY3OIqyCMHyJ4vPaP78DMyLxlit006DYP6cuYn
Y3Jz+xQNV7IgGatnGNZ6rySnJ8P58Lw1OWXkzGT86Oj7/NFvclYy/NSeuQ6e
pMQ5JxkjNt5KDkgl5yZj7b0j1/cfIecno1nTs+rrO3JhMjLy1ujM1OnHuSgZ
7W0mxvkB5OJk9CmcsExuM7ksGfLH1+6Ne0AuT4aJr7TX0z79OVcmozXKdqKr
Hbk2GfzGeYUVGeSGZGTde/fe8wK5KRnn5q3kv/1KbkuG9+gzxzOMlDl3JqNJ
uf/EkXFkuRQs3L5WWLmPrJiCAqz9uKaerJICtfSKAZ7DBnBWT0FmqDRilBdZ
NwVas8YHyq8jG6bA2Kd3assdsmkK7C/vHt4kP5CzZQrShw561jqdjBRYrx2g
oTCP7JQCx5dPAsafJXuk4HOEpTKvlRyQgkPfAvy81FQ481JgYX78addEMj8F
b9vmXz/pQRakoLRlgU9iCjk9BVukDndMssmZKTgyYqbv3yPkrBRMEj+2rL5D
zklBv93ax86+J+emQLeX7ac9PQdxzk/B/g/Tx20eSS5Mwe8P3YUbbchFKUjd
GL53Zyi5OAU+L/RnnVhALkvBiu19X9zfQS5PgVxHycYfF8iVKXhW3XB4/FNy
bQqOTh/ql9RObpD5XEdN8eDBnJtSMDx3aMQgM3JbCuxiVczS3MmdKUjQWLj4
YzJZLhWHkv6siMkmK6YiRt1sUdtRskoqLIc92Jd1l6yeit8vV48zbiLrpmL9
RhOvNwqqnA1T8WLGNq/9o8mmqXjbszBG6EC2TMUEq6hbblFkpOLA4fr/WS0l
O6XCYaet96R9ZI9ULB34omNGGTkgFVrPlB76vybzUtFW6D808x+Znwo/p5i+
xdpDOAtScXLHnzfd1uT0VFwv6VPnH0LOTEWA1h6TsgXkrFREbejSnLqLnJOK
LWHZtdcvkXNT8Sa68UDoC3J+KpqG3Cvu+5tcmAqTjZbedzTUOBel4l9pwMlt
U8nFqZA6ruubHkguk72/G6l7EueRy1Mx7cyTo8Id5MpU5G0vT1xzkVwr+7xe
u3XOPyc3pEJQVCfX8YvclIrzK/w9ZmkO5dyWisxLo1yOW5E7U+H2aqfJmGCy
nAB5HeHW5xaQewnwYw2vyH83WVEA9btPKwZcJvcXwGCHy70XL8kqAgy/kPu1
5B95iAAPn35eeHrEMM7qAhy9dqPoCshaAhyWdFU0RJB1BfBzuaOssYysL4C7
/ulLcQVkQwGy1xWqPrhFNhLg+PeOIOePZFMBJtyd9aReUZ2zhQCH7p68umoc
2VKAnzqHoma7kq0FGHm6X8/RKWTInsfH6O2wHLKDAF2DrzmOOk12EqCn4Jto
VjXZVQDe1aCTy3+QPWTvI1LRtk5dg7OPAB4mmSku08gBAmwuubqoJpQcIkDR
LZuL8zLJPAGWr/8RY3mAHC3AUJegB4Nuk/kCLF4bZanwiZwkwN0LG9rU+mty
FggQtfidja0JWSLACd4XQZYXOV2ArUblD/+TkjMEwEbtg4k7yJkCSE4bQvEy
ebkAJteKm681kLMESNlq3pnbazjnbIHs9/nconWG5BwBRoUsjc53JW+RfV/m
jo+qEpBzBRDqpnbpbiXvlr3vXg8yN1wk5wvw4E2irfYrcoEAemFaORXyWpwL
Zd+vxuCr28eQjwkg2OSvt8KVXCTAFf3W/puF5LMC/O248OTaNnKx7P3Iy90f
VEouFaCzrdJl2RtymQAvjL8fGdpHm/NNARrUvk6/b0Qul32eqiavwIt8X4Dn
L1fE700nVwpgXjLs7OU95GoBHO4v2dl9k1wrwP5Ip/SY/8j1sudJuHWkdZAO
5wYBCqvHZ++xJDfKeoetXSgKJzcJUHXycX3iSnKzbP5aTd+1x8ltAlQcd4up
rCa3C3Dw0VsP6y5ypwAjxhmYPBo1gnOXAFYz9katdiHLCfHkXYVXopjcSwiF
cbqR0l1kRSE0fYd0Hr5B7i+EzkudjJ7NZBUhtG6HjXdQ0uU8RIiJbqXpu3TI
6kL0nSuu62NO1hKi0iBw9epZZF0hhn58UKwbQtYXQk+tLP+BgGwohN/IE+k5
K8hGQpx8XJgev5NsKsT37b7PA06SLYTY+KrtSdhNsqXseaUe+xc8J1sLUd3+
ftHJFjKEyLe6VvC750jODkKENW5yD9UgOwnRVHei5Jkx2VUIXvMAgwQHsocQ
9pG+94cEkX2EaD73qPlZKjlAiLG2826fWUEOEaKu57/cwl1knhDGKZcLzp8i
RwtRNf3BuFd3yHwhXkR2JY14RU4S4s73muPz28kCIcYZFZi2KelxlgjRY6F4
auZIcroQO/apKY+3JGcIofFI/2ubGzlTCNsPCkaPY8jLhfh5qa3Xowxylux9
8D/d+LiZnC37/DMPTmn9j5wjhDjdWz3lOnmLEEunKtvVPyfnyvbtS54f95W8
W4gM03vKKn1Hcc4X4k1blPNTXXKBEPPNIhZcsiQXCrEluu5bqQf5mBAFiq+6
X/LJRUIE5iV+115CPivEotNLRizcQS4WYnA/7Wd/TpFLhbB6ND1lZwW5TIhe
1f9NDXxHvinEiS6rHMsucrkQRw+4l1uq6XO+L7vvsVFWQcbkSiHiN5bb5M0i
V8vOjb9OlI8g1wrhIhamrp5PrhdiZU1vL/Mt5AbZ89/ebil3gtwoROYVu6Vt
d8hNQkyaG7ih11tys+zPm37iNesucpsQf2udFuwYOppzuxBjevUbOdyM3CnE
kR7D1K+7kLuEOFytf2d9LFlOBNNWh21LlpB7iaBq8KFl526yoghTztdNq7tA
7i/Cd2nUJ7snZBUR4jWMYh63kIeI8HVvsM4aJQPO6iLEvt66IsGArCXCO4ue
yhI7sq4Iozz8DQ+HkfVFsDGtde21gGwogsQ05uva7WQj2f6ARetnnCWbivD3
lMserSqyhQhqdQW7DVrIliIsuqLeJ7TfGM7WIvRM7AgpMyRDhH+jPEZ4ziQ7
iPB8jXLVwGiyk6yv3+cfXUvIriIYhi0dppFP9hChxiWkJPoK2UeEmB2tSQ31
5AAR+umdLM7+Qw4RYfnYwRMSNA0580QQv8wLmjeVHC3CUpXWJ5cCyHwRNoy6
OcEknZwkQpdpn+6n28kCEd4k1DacvkCWiPDsRG7KjWfkdBHuR7Q79u0kZ4jw
e1GLwgr1sZwzRUhs+c97ylTychFaBl6t0g0iZ4lwOffMGLsF5GxZ//Gd3bt2
k3NEODvxWW+TK+QtIrxam/Dpz2tyrgj95/cI6Sk/jvNuEap4PQbP1Cfni5D5
YOv1mzPJBSJE+F0ZkxlPLhRh782Qf+nZ5GMiBG62Vyg6SS4S4WW5g7zBE/JZ
ET6NsS2u+0EuFuHahSlfqzTHcy4VYXOR77y+NuQyEa7cUNBdFkW+KYLend7F
NlnkchEq7yQPw3Hyfdn3d/m9YSsekytFcPYz2Tawk1wtwoPFNuIGbSPOtbLv
x8/ZmzvtyfUiyBeEvApIIDeIcErBHfIbyY0iDJY0FHZcIDeJkHHxTj+L1+Rm
Eaq97vKuKEzg3CZCqeaDA1uNye0iFG5or77kR+4UYczeU53Gi8ldIlQovRr2
/TBZTow+AU9sFKvIvcTQTF62NPU3WVGMgIsbf4zVN+bcXwyfQckXLN3IKmK8
H5fwfnc6eYgYD+69Ouh/gKwuxq/D00clPCRriaHfw3xdzS+yrhjm7dfUd402
4awvhl1epFypJ9lQjN6dusunLiIbiaG1pfTTkP+RTcV4N+puhnst2UKMb1/j
ZnXIm3K2FGPK1+KS7xpkazFs8xwrRpmRIYZ63vjRK53IDmJkXatYMpxHdhIj
QqM2t3Eu2VWM0UuFBm83kD3E4D8w+zykkOwjxh6+4+GFZeQAMbbuXKyv/Zwc
IsamIIFR+1cyT4zzJfPX9exnxjlatu/vfxqu+mS+GKdsVQsfTicniTHrQ+Dg
bH+yQIznO0KmrBCSJWIc0+j9+9JacroYKC6wNT5EzhCjfNfA36/LyJlixN0t
Vq2qIy8XY/C/h8vkf5KzxPgdGuQgHTyRc7YYDj2DfcYZk3PEqEpsuqA3m7xF
jGFPPdPDY8m5sr7NNgVvlpJ3i7HPt8b96F5yvhgpmTVbLpWSC8QYsPrWJtUX
5EIxxghUU8//JB+TPY+/tW+BmjnnIjFaZ7WnvTInnxWjc4x7/1gvcrEYLzo+
e1sLyaVi3Jo9fHNkDrlMjIeWQ4e+OEm+Kfv+LNczLXhELhfDPujOtOut5Pti
zBf/3TlJxYJzpRgGDyMudJuSq8U4Lpcgr+dFrhVDMHZnR56YXC/r2V86WLqV
3CDGDOHwxsIL5EYx5HaVdFm9IDeJ8dlzZ6fRX3KzGM/GNWdk6k7i3Cb78xga
ZjnFgdwuxqERQe+8+OROMbIdZqMmm9wlRt+h74aXnSLLSdC4K2mO2jNyLwma
AwZeeNpFVpTgzdZRMxVGTebcX4Ie/su+H3Qmq0igPPT1jQsC8hAJHoSolU/P
JatLsM1vnbZVGVlLgqNLtrScaCLrSrBpw1XRnkFTOOtLoH7YrVVpGtlQgg3q
Wy/8iCYbSXDyXPSE6A1kUwmGvs245nuJbCHB/h1/vz94T7aUYIf0lc+jQZac
rWXP3xm/PGQGGRKYW102T08kO0hwZ7Tr6NE7yE4SvEpPmBB7h+wqgf6l5xNn
/CB7SGDtGWJSNHoqZx+Z5d1Mr/qSAyTI+Gnrn7KSHCLBy4OHXpRdIPMkGH0x
VeHSJ3K0BB6zb1uHallx5kuw+cLVH8fdyUkSwGn4rZPLyAIJvrUpeMYWkyUS
/N7xX0jNF3K6BP362d6S05/GOUOC6X0SljQHkTMlsCzOLdi9ibxcgnMdJWFq
98hZEmSdk/4N6mXNOVsCpXbNL8IZ5BwJJh25fDFsHnmLBG6qtioG58i5sv66
9Kv3v5J3S7Amy/uiv8l0zvmy939VZcj9ZHKBBHcrlvUzOU4ulOCsQpT8yi/k
YxLUHyhY9tR4Buci2fdD8sneQEg+K8EPpx96C86SiyV4ss56Ql0nuVSCG3dE
ea4zbDiXSRB2evqrmuXkmxIsO/B57cL75HIJDHrpTDuoBM73Jbgcql+1z4Rc
KcGp5VMMLH3J1RJs1zHuSFxArpVg64MtQ233k+slKK65s6TkLrlB1idUd3v9
ldwowYhZ/84UadpybpKgbK3vAAsHcrMEtcFH65JTyG2y70/dxquRO8jtsu/X
oUHLh90id0rgYDl0+Mav5C4JYms691br2HGWk6LzmFrgR1dyLym0bokuPlxA
VpRiXHx6ZM7/yP2lCL9WMnpiPVlFiht29QqXlO05D5FC87RkujHI6lKM4etO
2Soma0mxd/PWHR2HybpS5I2vcfB7SdaXot5Z6HtF1YGzoRRN+z4bTHIhG0kh
vDHa7/oysqkURQ87byRfJltI8cj68XabTrKlFFm+8+xg4cjZWorAqqbMdCEZ
UnwY7RD+9STZQYrh9z9OO9tKdpJi/bMtFRWmMzm7SvG06cIwGzHZQ4rg1ffW
Dr9A9pG9v2M1LQld5AAp/rzvTrS0n8U5RIqxp523blhL5kmhc807LqOGHC3F
zv/s5vQb6cSZL0Wx+kV95xRykhTWV9/Y2l8mC6RItdog7jPAmbNEimnzY/oU
8MjpUjx7oPxwzDlyhhRGJSkj9vebzTlTCvurb17pRZOXS6F+P3zxpSvkLClO
f9jVZ/5wF87ZsvOmHkPF88k5Urzdva7xQh15i+x+Fya5Btu4cs6V4pxu0F3B
QfJuKX69K8joP2AO53wplONvmdjPIxfIvj9hAr9xH8mFUjQbKajU+rtxPiaF
iyEMo+6Ri6Q4pfJj6Dtbd85npUhIq/qXWkIuluKLT7jvIC0PzqVSXBj5zUEp
hFwm60n9Wn0yj3xTdh+2a/0HviGXS1HY2zFmsoEn5/tS1CTsezoxmVwpxeKe
KB18nlwte36bGb6Ncl6ca6X4Wbez5/k55HrZn7eLvjO27SY3SFGy6l/m5i/k
Rin0LoVYlsKbc5Ps/Tx5/D+dbeRmKUYvGPqu/Au5TQqe4cNV5bN8OLdLkZ29
+/q4AnKnFC8VNVW75H05d8nel+4kPadoslwaRrklr9coJ/dKg+tP/1PzjP04
K6Yh4NqrUMF2cv80CCYc3dazpz9nlTSMybawniIkD0lDzudBp/u/Jaun4cBC
1QVLfQM4a6Vh4STV+5vvkXXTEBEVr2bpEMhZPw1un/2WRV4lG6YhedOAtB7T
gzgbpeG114pvf0vJpml4UVilPM0mmLNFGt7pHPPdeoNsmYabnnlT3zqHcLZO
Q9m8bfNaq8hIQ2kfrfylwaGcHdLwatuDDQEfyE5puD7+84TRojDOrmnoNAud
tPkf2SMN9jpXbBzWhnP2SYN3xc7VTf14nAPSsHfOCr33nuSQNIQkDskP2U7m
pWHO3jmvVOrJ0WlIESnVXhsRwZmfhodLauuMI8lJaYgM/PNz2AGyQNa3xmqj
zVuyRPZ8ny+pJI2I5Jwu25cctj4+iJwhe5+xmwP6bY7E/wEuNG6K
         "]]}}}, {}}, {
    ImageSize -> 800, GridLines -> Automatic, PlotLabel -> FormBox[
       StyleBox["\"a/b=2.00\"", {Large, 
         GrayLevel[0]}, StripOnInput -> False], TraditionalForm], 
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 360}, {-180, 180}}, 
     DisplayFunction -> Identity, AspectRatio -> 0.33, Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Epilog -> {
       Dashing[{Small, Small}], 
       RGBColor[0.5, 0, 0.5], 
       Thickness[Large], 
       LineBox[CompressedData["
1:eJw03Hdczf/7x/GIjEIqEaFS0VBpafds712nTp06s4zsrAhZEdlEEllZmRWS
cZARyYgIKSErGSWfzN/7++t6/fW9fW5H965znce5zvl8b58bXcnU8MSuCgoK
qn0VFP73v6M9tD822g52lRt4FtvvkF86IooMH5lf6lr/7fGoo8+j5Xp/2mc1
7KhwPXA6P/pVtVD+32vx7hrratd+an/ubxWI5QkBN3s459a6vt90Ku/Id7G8
MWbgmfsKDa6RxY19t1pI5JpZ/h+6Wb9yVfR+MHqBo0Tud2nBULtxTa41z0sX
eptI5GnfToQmb3/vanTU0/lmb4n8uMHrpTvvNLsefbTh/JgGsXx64epn4xW+
uNoVRfcNOS6WK3sbzOq6/avrjJQRj7PnieX76y/23WHV6vrgx7zjRR5iuUtq
zEGbO22uvChTu7vKYvkTtW9ud5PaXRUvxO2+UC0i7z/X1LQa20E7ROR1uN4b
MDc4OFFE3i/XGW9Ulp8wF5H323XGMWHrl3YheX9d+/ZL37Zjg1BuX3NtsrWC
As4Wx3rkmAvlSns3OnS5o4AtVzyCetxPkFdPFfaoyumCPZPzzrXPSpDnO5k+
3J7UFTbavvcnDkuQT+7VkT/OShETx2z4JLgVT143HLooKr+YGk9eN5z7d9cq
zTSevO74khBwLq1RQJ4Sjqe4FuzLFZDXAyNMlVVqogXk9cRl3aasr5oC8nri
YfiYHzVP4sjrhYvj/l1PzIsjrzeO3RdkLZDFkaeMf2cbHf+OjiNPBQkreJNv
dsSSpwLLglmrL9yIJa8P1uSu/HFpayx5fXF60Ue9ogmx5PVDl38J+fOdY+X/
X5+CKta6HjL7pxYrXxrml5eepIqA6KoL+h/48vdnjiu+rVTFpfhvUx9e4ctD
hmlODLLqD7v2iuwfO/jy08vS7hXl9McthZhjc+fyyVNDxfvsKI8oPnlqaH68
3svTinlquK0U4TNBjS8P/X9PHZ9cBhjt/hZDnjqsB7w49aw6hjwNHHr/Ynuv
0zHkacBc90yqdk4MeRrITi2/qLQghrwBaAvZua9MzLwBSOhWbWDuwzxNPB3Y
8TVqNPM0IeunKzXQYJ4mLBNOpmz6FU3eQMQvP1Wc/SqavIFI7L/O07AymrxB
yBjkd92+JJq8QfB0MOBX7IwmbxBsayvW31nJPC3c8rw32TWFeVoYXV7OG5TA
vMGwrd/QP9yPeYPh9zj8QpM18wZjTMfKyns6zBsCM/fj/3r3Yd4Q9CsbKVrf
wSNPG3lNCxwFTTzytHHlYMewidU88rSxbtjC6hI5j7yhcPpznO94jEfeUGSb
CZvac5k3DNqrzetfZzJvGJzK0h53mcu8YWicPWuNfxLzhiM/c+LbskjmDUed
WfDXcA+efO2s6UP6KOhgyCrRUxVLnvzywX3BsNKBq6lSa5MOT/792ePFKUk6
4JVfO/yiH08+qp9ySUGODm55T1z79W+UPM7d5V1tpQ4U/nl7D22JIk8XfY1z
NwvrosjThc0LtcjTlVHk6aLESDp7+Pko8nRRNutf15wjzNPFeUHTAN1c5unh
uNuyFyWrmKeHXpqHd0bNY54eIh9lH/o7gXl6EMWqSY/zmaeHKX7bXJL8mDcC
po0bLuraR8mv/L83Aol78lIaRjFvBHqdfvUrfxDzRuCG5+yukp7MG4EDF8+7
6P0XSZ4+5vLfpzS8jSRPHzcU5k7LfRxJnj5iepzuE34jkjx9LPoRZq54JpI8
fSh9/HblaAHzDPD6Rc2l0GzmGUC2ZI7hx+XMM0BjLxuFtFnMM4DnViVh10Tm
GWDGA/P4BZHMM8StiF/azR7MM0S3Vak3g6yYZ4gvtzw27NZjniFKvDxONPVn
niFebZifqN2FeSMxb8eTH25fIsgbifqz/4p59RHkjcT3XSO+8qsiyBuJpybP
lAIuRJA3Ehf3/OQZFUaQNwpTk6b6tm1n3iioNw71PZLJvFGo2HD5ZtBc5o3C
JMW77s+SmDcK8pPR1hFRzDPCn7zPOiUezDNC1prNGxQsmWeEqQ+zNWx0mGeE
jC1LncP7Ms8IGomq+6N/h5NnDHeHnu89P4STZwzRTvtCrSfh5BljeO+k7EfX
wskzRrXYMnJuUTh5xpi+dNDWLruZZ4LSWv6A6WuZZ4Kmd98yr89nngn+3VpX
3GUC80wg2LCYr8djngkGLi12G+XBPFOMsTjgoG7BPFO8CJNovtJmnimWTp9+
ZGsv5pnCP/T5Q4v2MPJMkdpLd8axxjDyRmPsR7NxqnfDyBuN1QqSHbyyMPJG
Y7ffor/pB8LIGw2dnScXrtvEvNFotV2htmQR88wwou5zUUwy88wQXuYoVo9m
nhkU7g8eesqdeWaw6p7XYm3GPDMo1Vq+zNVinjlenz3W7W035pnjT7P3ZM0v
oeSZ4/2obVbGz0LJM4fv+YMz9a6HkmeOM7LmsH8nQuU3zp1do6RggeKrvl/l
uaFy8f++/mlZwGne4AXjMkLlPz99lNtbWUDvk4N+67RQ+eYVy2OrAy1gWaI0
WBYXKjfTHd42KckCQy/Jss95kZdugbZhVY/azcnLsYB8B09LazB5RRb4/bek
QLcbeZUW+Ga5b73u85BOr8kC5UGbtt85HkLzjcGID//UfJeG0HxjsKAm/MgG
XgjNNwYNb08OO2IUQvONQdeD2pZbfgfTfGOQ/G1VcejdYJpvDEK39Vn0Yncw
zTcGefpfZ7rODKb5xmDt08alM72Dab4xQJ9B+xYOIq9pDDS/zHmS8CGI5rNE
QdebZprng2g+S0x2fnZp/5ogms8SMUblx/sKg2g+S6xU7m0WbhFE81miOPrl
rOldyEu3RLft46omPwik+Syxvf+rVb57A2k+S2jbKikrzgyk+SwxZuLYsp2e
gTSfJWTD6zSGDgik+awQcPbYzkVvAmg+K1yb2/vTjZIA+a//n88KaXWhe34s
D6D5rDC41GuqKi+A5rPCyIVz1DUMA2g+K/jqH43v1u5P81mhv16c6atr/p1e
kRU+/Bo+5dQWf5rPCnHtvnozE/1pPiv8XSLkG9v403zW2NdXbvO4G3la1kho
dGhOe+hH81lD8uxS+dB9fjSfNcJuDxhyPsWP5rPGzXE7hbEefjSfNV7KRw76
peZH81ljeXBlQ36jL81njdayxknBp3xpPmv8OPl3hdISX5rPGhn/FAdWhvnS
fDZoywvS2qPrS/PZ4JbVh0Orv/rQfDYQ1X1WyLrsQ/PZQGLxfmbBBh+azwbF
ufFpL8Q+NJ8N9qTNOT7W0ofms8HFebcqSrqSV2SD1D9OhYJqb5rPBmk1A4UW
+7xpPhtYrXbVsJnlTfPZIrRrrtFUb2+azxYt54+YvBroTfPZ4rWl4MmW9140
ny1Uk3rpZZV50Xy2yAu4Y3l7jRfNZ4v1vqrTYkReNJ8tqgrHL7S38qL5bGHR
cNdrphJ5lbYIemDT3vepJ83H/T6nNBXVY54031hUS15HL1ziSfONhYLTr3+i
aE+abywWJfdffcnUk+Ybi3t/gt7s7kpe0liU3J40XrXWg+Ybi6OzHV+rn/Cg
+cZCkPjhQMkKD5pvLJre+mX9E3rQfGNxpa7vv192HjTfWLi9cO53Wo08BTts
GdYwz/6TO81nhyHmxhc33nSn+exgFequf3efO81nh7FHntb+XuxO89nBVfCs
i4nIneazQ4e2uHKCK3k5dvhxXbj+1nDyiuzQV93znbALeZV2MA77e9/5tRvN
Zwf7M18epN50o/nsodQYomNyzI3ms8e4+7mVE7e40Xz2sHvW+jNioRvNZ4/k
IiOtbhPIS7LHjW+7uK+T5KXb412LRZOjJ3k59hgwZEuiig15RfaoqlEabTuK
vEp77J4x9mbTUDafPfJ/9XcP1WTzOaDmnG/pof5sPgd0ha+KhSqbzwHT2j7l
G6qx+RzgMC086MlANp8Dln41GL9Nl83nALXe23qWm7P5HLD3YP6iq+5sPgeM
vf5cUyWOzecALT1Lfb1UNp8DTPS8l+fmsfkcMXbDje16FWw+RwyXtr1M/c3m
c8TxqGER6Xbs9XVEwJqXp20XstfXEZfmGVler2KvryNSto0VrDRh/TnirElA
QP9s1p8jlm7INHRSpZ4rHTFsxYQOhx3s/eGIjf3crhx2ovebghMe+/fsebSN
3m9aTuiozjvZ8yZ7/zrhXsvsiZFl7L44ocUhccfoh3SvkpzgvPZi8yItuqfp
TtCZmGncuInufY4TerZNmto3OIjmc4Kaop3e/Cj6vKx0woobLi9X19HneZMT
Ak8nJKr7h9N8zijY80646k8EzeeMOYWGvI4ePJrPGWdWRIY1zo+h+ZyxxtZI
L2NSHM3njIm+5f0z3yfQfM6omJg0bfJ8Mc3njGb7vGt/5VKazxlDMvI9Z49O
ovmcscMy7VutRIbO+Zzh4dLn52ENCTrnc8GohJ7Fwq4idM7ngpWe+rP6TxWg
cz4XJLoMKw4bx0fnfC5Qdpr5SLee1+kluWBbdc7tWVcjO710F2hLS18t6hLR
6eW4YISpxoQrK8M6vSIXXEm6mLshILTTq3TBOiP7t7cXBNN8LsiYYK/6riiQ
5nNF2+Sh89JMAmg+V6zuc7fHuFo/ms8Vh4t/Pr5U7EvzueKT0glVwWkfms8V
VbNyn0564k3zuWLf6ykl1preNJ8rsneU9a1K9qL5XNH/1yTFf488aT5X+NjV
6wwM96T5XDEhdM+Fh3UekMU/91ZUAGoXGQ8OneOBMcaH1O+pAI1uTp8+aHvg
7//+7z8twF19Cs/jjjtuX3U/OsEQeHQoa7rRCndsXd9vnq0VsKhX7vdsP/dO
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
sRfKHWaSly5AntOuf9PmkpchwJdn70yOpJGXJYBxP9Ow9+nkbeKez4Qec0yW
k5cjQNNow/3TM8nL555fIl6VrSGvQID+7YPte28kr5D7/aUrjgmyySsSQHVT
YkDRdvJKBchckT+w7y7y5AK4V48ZMnkv60+Anwo6CfcOsP64eRUWvRtbyPoT
4InrtCt7T7D+BDh6Qa9NvYT1J8A1/erlK0tZfwJ8bLi9qMtF1p8AHraJHxZe
Yf0JsCume5XCDdafAFOW6FituM36i0cvFXs9tXusv3gcXVK/d/dD1l88rl46
JbepZf3FQ0NBtLiqjvUXj2c/97QkN7L+4mHU4dW/71vWXzz2N+t+K/7I+ouH
94ph20VfWH/x+Bdmqdb/O+svHgPLJdLrHay/eNjElmen/2X9xWPt0Xklroqx
1F888ledvanYM5b6i8exnvLaSu57Q2d/3Dz5jV+394+l/uLR4bZ48BTNWOov
Hl2mqMR7DyFvUjxG+ne7OkKHvJR4vDj7X5SSAXmp8TgwNXN4ixF56fF42SfJ
6JkZeRnx+GEZvOCOFXlZ8cjc3N/gmh15m+LxR2O98RVn8nLiMaO2dGu5O3n5
8UgRrptd6UNeQTxMNunerw0krzAeF15vONkcRl5RPP7Gq+l1jyavNB7pZ96Y
jhCQJ+eezxThc28xedfjceTxK4dpSeRVxqNo7LvwXcnkVceD//Cb2cNp5NVy
r1fv3Nq+s8lriMdQcWZ8yHzymuKht2vOtS3p5DXHo3udhXbjcvJa4/F724ZJ
1qvJ64hHc8WKy1nryVNIQOg3NcOPW8hTSsB2S8/9IbnkqSTgYayL/7l88tQT
kPDHRsekgDytBCxdNN1yzxHydBJwwdgva/hJ8gwTIHceab/3NHmmCfj7a4Xn
6PPkWSUg4GJH6YXL5Nkn4G6Xofsjb5CHBByfva//t0ryvBPwo2+UcvYD1l8C
tqgo7cQT1l8CrPrufvS1jvWXgAJtvYuHXrH+EtDjzFbp+PesvwTEvtB7MPoz
6y8Bz3V+DPjZxvpLgP++WMc7P1l/CXhjXhB8gPve0tlfAgQ2XoKV3PeWzv4S
MLW2ZNo07ntLZ38J2Ppr5TahWhz1l4BKJ0lD1KA46o/zuv8XGTGMvPwEHMhS
V4zRJ68gAV5P1v+QGpNXmIDwawmucyzIK+L20WPR2w225JVy+xit9KfIiTx5
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
kTFpsoot123n/RPD+MlgoRnXaef9E+NNLyWNUYPFdP/EuFnjVa2nK6b7J8ZL
hWgMG0VegRhPDj3v0DIn75AYdgcFOQNsySsUo3Tyj1OqzuSdEKPCYMij3p7k
FYkxsnDMSsUA8k6LUfnFN/hnGHmlYmTySva0xJB3nns91xztqBeSJ+f2FV9/
6U4SeVe5/qp+889MJu+6GFf+Qn/HTPIquPfTfx+nz59PXqUYY0qLsyKXkHdP
jF/rLIoNM8mrFmP/U7OhX9eRVyPGgYE9v57KJq9WjPG69YHJeeQ9F2OPXzW0
9pHXwM37Vvdu2WHyXokx9IrNx7CT5DVx77fcPXOfniHvPfd+fd7bP/Iiec1i
eODT8Ivl5H0Ro61XzAHN2+S1cj+vumiu4D557WLs3DZmwNrH5HVw+9hk+vZQ
HXm/xQiZ6eVy7BV5ChJohU4IznlPnqIE42Ykj57wmTwlCeZ8z7s35Dt5vSTI
tjTrffwneSoSmKi5ZOhwTuf9k2BB+Kkbk7tL6P5J4HmtUH9zbwndPwnEvgev
rO8nofsnQf+bxhtFGhK6f9w/f/rnp6BFno4EASM+iScNJW+EBLnCOyq7dckz
lGBevILldgPyjCRQahmQFGFEnqkEee7bG2+YkmfBPb9rr9K+mZNnJcGDlgu5
dyzJs5Xg2pTrJhE25NlL4H3Rf2PaWPKcJPBZmrzT3Z48SFBbhbl5DuR5SJAk
P7pmmSN53hKo9lya1uJInp8EgsULOu45khcowZCWrUU6juSFSiC5omx13568
CAkOljoWPRxLHk+Cdcrb24ew+fjcPpZOUM8eQ56Aez1aOsZajCZPJMHp5ydl
j0aSJ5WgMfmR1hS2vyQJ3u5d0F6vRd4ECQbWZ3v16U/eJAnCfdtmPlQib5oE
W+4vn97vF/WSIkGYY0rjxk/Uy2wJzv0a4zj6BfWSKsHjjrTt+yuplzQJNAzs
Jpw7S/2lc49nLz04fA95SyWYNRe1aSvJy5CgPnanaGIyeZkS9OkX6znFn7ys
///nPv/pk7degh6bbdbF/WT3TwLttiznWxV0T7MlOH7aMtd/I93THAn+81Y3
OhpO93SHBFfH/u21sBfd03yuB4vUw68n0Of5XglMZwTs27Wfff+TYNoGjeBc
OX3fPSSBY/hS+9oi+veZQglOdP/8PWt2HN0/CXyX55ce/cOn+8e9Hi8teGsd
Y+j+SRB30+jE8eE8un8SjH643MVjawTdPwkiVqRVOK8Lpfsnwc3CdfmrvvnR
/ZPgzvCQYQ8OutH9k2Dw0PdLpPUWdP8k+Pk7+Ffjt27yzvvHzc+b/PB8F1t5
5/2TwCs7l3da01Peef+49/Pe3+9uWQTKO+8f5+U8Uxu2JUzeef+4/agEz1iw
PLLTey6BytZV00w6eJ1egwTdzp4MnaDI7/Reca/3yz3Dzp6O7fSauD+fo/11
2AhBp/degrmzJ+1+EBXf6TVz/e7YaZ3CT+j0vnD9uH9MnmMr7PRaJShe8fhE
Tquw02uXwPxZT/shAaJOr4N7//2tDQrcIOr0fksweViXe4OrRJ2eghS6Bw3b
PnUVd3qKUhg5xfl8tBB3ekpSNLw4mdyNL+70ekkx52P3E13SxJ2eihRaE857
rtou7vRUpajunZRvXEKeuhRnH5Uv4VeSpynF1vuj389vIE9LCrud+y3ffSVP
W4p9Ny7veacg6fR0pEgu+Zp0oY+k0xshhZt7hP3OQZJOz1CKwf3rSsp0JZ2e
kRQzs19Nh5Gk0zOVIqOLrDHMnDwL7uczygf3t5bI1/z//ZPCX7w3OXcsebZS
mN4petvbgTx77vkLk6tnO5LnJEWJY6BimyN5kGJiyBOTLY7keUjR9cMeg2QH
8ry5x08uHLncjjw/Ke6MG/ffFxvyAqUImDx/cJkleaFSvBRqf2kxIy9Cilup
Q59nG5PHk8Lh8cX48wbk8aXgl2oYjdchTyBF5hGh057B5ImkEPws/zZdgzyp
FNM8rmm86ENekhTH/eRNzUrkTZBiu36Fzb5/9HpMkmJ8paK013/0+k6T4tPO
85N1v4g7vRQpfk+U/v7yll7f2VIEF6yRpdXT65sqxf7Zw07dqCEvTYqFbceO
1twhL12KouVBjYXl5C2VYv7Ag3uCysjLkKJq8qk+50+SlymF5aLHar8OkJfF
vf6tV2b12UneeinMzaruf99E3iYpYtsG553OJC9bio1TZSbhi8jL4ebjrT1x
ayZ5O6T4q9bhrjeRvHwpIl7n18UKydsrxXVxH8nsSPIKpNAboLl9th95h6To
mZRuH+9CXqEUJzfNqzexIu+EFCkaPwa+HklekRQ7+B8FK7TJOy1FWd7MgQP7
k1cqRY7Bm/zN3ck7L8VHtfMeXX7S+1fO9VuW6ZTQIur0rkphY3/lXGGjqNO7
zr0fKha9/FRD96BCig6+7U2923QPKqVI3cifH3iJvHtSHEht/51cRF419/wu
u3ktOUBejRS9Cod4rM8lr1aK8nGrnmevI++5FGp5Jp+zl5LXIMXab3mhG+aQ
90qKRt1XVRnJ5DVx98KqzGKukLz33Pt/aodNUgR5zVI8nVu9NcyHvC9StPY1
6eXoSF6rFG8ePLAdYU5eO/f85lbd6D2C3T8p/ErXxn/TZPdPCp0wo81Pe7P7
J8OD84O7r/wj7PQUZRAXj5+V8IbuqZIMYfW7NtnfEdL9k6H+7vtpg0uEdP9k
0L+SMaBrnpDunww7u2gt/rqMPHUZbHd8PPx+EnmaMpifs17yMZI8LRkKX0W0
/HAiT1sG7Xkqd/sZkKcjQ1zh+d9WfcgbIUOTxgbfxO8JdP9kmBZYkravLoHu
nwzj1y8WfLuWQPdPBqPz+/eFHKPPDwsZYk+HKV/ITqD7J8PcpXFwXESerQxv
h0k/3RpHnr0M6+3aSiaFkuckg7RHwVhde/Igw1Vb+97vdcnzkGHXiOJL5b3J
85bBZdqC18Wt8XT/ZLDpM+tf6XP6fAuUoWu18saH1+Lp/smw+BR/UPfj8XT/
ZDiRb9krcFs83T8ZvOBQc2gxeXwZbie0fxyWTJ5Ahip+w8kjkeSJZDiYPGtV
qAt5Uhlm/PGq7jOKvCQZEn4rvnnVn7wJMtzFevXqXwK6f9w+BvU49uyNgO6f
DEGfb//9c1dA90+GK6M2BzicE9D9k0FuNv3R+n30eZ4qw9rztU+6rCMvTYZ+
E06tWZNKXroMX9KiRlrLyFvK9dB3+8PvweRlyDBo5tNLD+zJy5ShucfPvrf1
ycuSYZbbxFcv+pG3nvPNzGP7/oqj+yfDY5dXq/lNcXT/ZBiWdi5Lfj+O7p8M
X9WXT/K4EEf3TwYVv5O2jQfj6P7J8Lo88NuOzeTtlcHMv/uelHTyCrifLx/l
mTSJvEMy5F/e92BmDHmFMig7dPfY5UneCRk2X5uR8caCvCIZ6kacyPQZSt5p
GZ5pD7S51ou8UhmcSjdPSmiPpfsng9Wdff3UX8XS/ZNB4V5gR+PdWLp/Mpz9
PUCh6jx9v7ouQ0mZUnv1oVi6fzL09M092JZNXqUM+9ZdaDBfRt49GWo8z0uW
TyevWobhw91a2hLIq5Eh0N7bZWEgebUyvFvbu5euA3nPZQhY2V2hbiR5Ddz7
Lav27skB5L2SYcx6L51diuz7nwym6wZs3veVT/dPBq2P/Ssu1/Pp/skgyfkU
3X6HT/dPhlPqVg/dzvPp/snQ+6d55d7DfLp/MowOr785JIe8Dq7nsAdBh1aQ
95t7/+UOrA2YTZ5CIq491HnVNZE8xUR4LS94cSeCPKVEJKmtsit0J69X4v/R
bOfxVH1fH8ClUqIyJRpVCGlUIqplyJx5jGS68zwgpK8k0iQpmZJSSiGlhFRK
lKKIlKEoGhQiGpT0O89jnT+97vW+5+6z9zrrnv05cPDhDY9Tq9GTpUD4/d8Z
WWroyVHg8ZnegBsz0VOkwNKnZX9bxzyx/lHAZt2UW3L9nlj/KPDaouyt22tP
rH8UuDep6WpurSfWPwrY9hkGyZR7Yv2jwGD8Hp3wy+hpUsDC9+aK72noaVMg
8+eipIgD6OlSwLVeQigbjt4qCswqsXidw0BPjwJDdIc31l7o6VPgTn9C8LAV
eoYU2BRsknbeAD1jCkQoSW3w0UIPiONZFGcwWwU9MwqsjJHlvZiCngUFWiNl
80789MD6R4Gz24uuuX/0wPpHgSJqwIbZLz2w/lGAY6vR/6LaA+sfBcqE89mJ
xR5Y/yjgbvLO3CoHPS8KbIx+8fvXCfR8KMCbyJpwdh96fhQI9QsoNwlGL5AC
HV2Du5uD0KNS4Izb2wO+rugxKFDITJr5ygw9NgUkYka1TPTQ4xPjZbDvzcnF
6Iko4LPk5aJWefRCKFCy9ljd5AnohVGAXfMpW2XAHesfBW79p7ZVrgN/H0UR
86/yu9vnOnesf8T8aehYfq7cHesfBZoerdEwuuyO9Y943Xo+Ky8VvUPE9/m4
W+Z7HHpHKdAWf7xXPgS9JApoXgmt/ReIXjIF1ntxNt1yQi+V+P9VEy7CZvQy
KLDZpmfjIV30sigQfKdAIk0VvWwK/NGcXUqRQi+HeH+bzfDnb25Y/4j1c7ro
n3qHG9Y/ClynJHTPeOKG9Y8CN4+tCcwudsP6RwEpne997WfcsP5RgGlRnX3j
EHqlFHi/3t9maSh65RR48nih1TJ/9CookOFJOVVmg14lBVZkZr6u00OvmgJj
F58v3T4PvRoK3Gi+t8BvEnq1xPxLPdpZ98UV6x8FAspG/2Y8d8X6R4EZqvMF
lSWuWP8o0JeYn6Sf6Yr1jwK0q5+VvkSTv3+J8faf+LWJil4nBTa80vb5aI1e
FwWWv3R8oqSL3gdiPTTmNNlPR6+HAl1GH5bH9rlg/aPA22spmZdqXbD+UUBG
WzR86ZIL1j8KpNv8/imOc8H6RwF7p0v+3wNcsP5RwKXl87PZG9EbpcCJu0vv
VM9CT4IK6r4RkV96nbH+UeF0MGcl974z1j8qbN5CqVyX7Iz1jwpPTx7+uZTu
jPWPCvFFM321DZyx/lGh0O0mbb4UeopU2LjLMvhDgxPWPyp47psySEnH+weq
VOj95i3cFeCE9Y8KOTNT+6SXOmH9o4JO3aVvfZ8csf5R4dbTq3+nXHTE+kcF
QanH6/VBjlj/qBAAVD3f+Y5Y/6igGeGiU5bjgPWPCu5nWs+tlnXA+keFBzDz
5SDTHusfFRaaOEU/v78V6x8VzhVbzb6puBXrHxWep4d5HNtuh/WPCkuzF7cy
s2yx/lFhklV1sV+7DdY/KnSEf712Xd4G6x8VFiw/Fd4A1lj/qNCWfirPg2mF
9Y8Kt1cZ9i9PsMT6R4WwnOJPyYUWWP+osCEp3NixfgvWP+J4wo9H3h0wx/pH
hbEA/dF1s8yx/hF/v8ie6W1qhvWPChS7PL/W3aZY/6hg4DUr6WiTCdY/Krxi
HIu86myC9Y8Kc2j7pSYomGD9o0LWydTYtxtNsP5RwcLm7iNFHfRCqMDKiKwI
STDH+keFl9tVjz72scH6R4Wdce1Wq3Vw/UZR4Wf/scFXEVQYr39UWDxd66Xz
Eje8/0eFomN3HA09bfD+H3G+bsqUZB02x/t/VNheuC7eSdsU7/9R4caK4AfZ
G03GvSQqfP9YbCWjgPfDkqmQe0hl8gdnE7z/RwUf275pHU0meP+PCltzS6Yb
/odeFnE8emeqK03Nxr1sKhivEWafm2WO9/+oUKqmZLp60Bzv/1Hh0iX7hZX1
W/D+HzGfZiaGS1+1wPt/VPCXyVE/nWA57hVR4c7FhdXVTCu8/0ecD2btl40m
1nj/j/j/bFBdoGCD9/+o8P7tv6fV7TZ4/4+Y7ydswuqybMe9SuL4du2kDG63
w/t/hK9edUBBaSve/6PC40e87TqVW3H/gwq6p16rW7Dscf+DWL/Rm0KjZR3G
vUYqbJrglzLlggPuf1BB4cz1LXvnO+L+BxWcDlV4eQc54v4HFV43Dg9pX8T7
k51UgDeqohk9juNeFxVW5D+dqr3UCfc/qGCWImGYFuCE+x9UcF6RLYpOd8L9
D2I9Wc5/MOG5E+5/UKFpZ+6x9VLO494QFaS2HRCbGjjj/gcVgoNCpwLdGfc/
qGATpfTaLtkZ9z+oMGHCmR0x951x/4MGwgr3Bok+9CbSoPPiatO2WS64/0ED
07PTjy7b6IL7HzSokdZnTA3E+7GyNND/d8EpLs4F9z9osF6Zcan8ksu4p0iD
WVq8slu16CnTwGYkryS5Dz1VGije+9zsO90V9z9oUPd50VZ1XVfc/6ABX3kR
5Ye167i3hAaNb6xiu6iuuP9Bg5BYI5ORaFfc/6DB9EJ/b/NM9HRpkP1Ht7W+
BL1VNFj6SWrGpefo6dGgaOBNRusX9PRp8OyM/SH2JDfc/6BBYfhWW8Y8N9z/
oEFGP/9Wi54b7n/QIOJjsWG1jdu4Z0aDhqrWHH1/XL8WNKjV1OetCUXPmhjP
WyuPVRxCz44GTUZGuR/PoOdIg8dq3P78YvRcaFCtlW+q+gQ9dxrUS4XqrexA
z4sYj9uOEt+/oedDg/fmr07zpNxx/4MGQarRD7JV3ce9QBps9pB6e0LXHfc/
aBD5do+uzWa8384gPk/SMeeBkzvuf9CA1ZClKh2EHp8G3eJ6tbkh6IloUGW+
V2ssDr0QGmjEHxDeSEUvjAZ+ISdUzC+jt4sG6g1XZ+SXoxdFgw/BpzWG6tDb
S4P7jSOyqh3oxdLgitEGt0UD6MXTYFPpCcGMCR5Y/2ggMaG09J28B9Y/Gvx6
EcTKWuyB9Y8Gzxf1XbbW88D6RwPn5oz4TjMPrH80sDwg8Zfqil4GDRyyVT+/
CUIviwZOdyIW2QSjl02DsR43/0v70MuhwXUdhvuEZPRyaXDpfF+GYw56eTQ4
VUy7l1qMXiFxvudzTd5Uo1dEvL494NDCl+gV02CqzbxJOz6iV0qDDbfi/576
iV45DQJMzO69nuKJ9Y8G8TnKhxaqeGL9I97/Ly4hSAv3U6ppUPDL+lu+gSfW
PxrsmVpQP2rlifWPBpKzpm909kKvngYLFmnDFQZ6jcTxRe5vUQpHr5k4vz8e
/9t7AL0WGpTTR7L+pqHXToNjy+vPRl9Gr5MGa/ImdSmWo9dFg9Hg2PXXatH7
QAOFdeVc39fo9dDAtqzcQbUfvV7ieLgxaV1j6A3QIC5w6dQ7M72w/tFgkaWE
ba6aF9Y/Yv37tc/IWe2F9Y8Gmk3qI9dNvbD+0cB8++TcZhcvrH90SEw9elOG
gt5EOvTPf3fTNQQ9KToYcDetvxaHnjQdToyuuq2eip4sHaztLz7Ju4SeHB0m
Bch12JSjp0iHCCGL+68OPWU6nFzG+PK4Az1VOoQzd93PH0RvHh360r5uuzhx
G9Y/OpRX/VS+NWsb1j86nPOvdvmwdBvWPzp0f09l6GzYhvWPDmsy6y7H2W3D
+keHhF0f6WO+6K2ig6lmzucjAvT06KAxe3qIYQx6+nSQXse3HUtGz5AOV7i7
c17nomdMh55dtndelqMHdHj6zLOq9xl6ZnRYXnCqZ14XehZ02H3kiCv9B3rW
dCi9smTZM2lvrH90iPvx5rDTfNwfdKTDM6WGlK+rvLH+0SH636nAXHNvrH90
8C+OmvCfpzfWPzp89rffw2ej50MHqZqdfZFR6PkR47NYzu7CcfQC6VBg/iCz
9yJ6VDpIrHz/butt9Bh0eP47QP5JA3psOvzWrFsQ9AE9Ph3mWzr9UfmDnogO
coqlx3pmYh4zhA6qL2m1L9Qx3xlGhztmHgdfG+J+6C462KYrFkg4YL4zig4u
xjdnbA7ywfpHh9p976NTwtCLpcM7hao22QT04unQZDPyPv0ceofo0AXpjC1l
6B2lg+Lb1TrS9egl0WFrYO6HD+/RSybm5wQbrzd/0Eulw7EP+eu/ymM+MYMO
C72K16hqYT4xiw7D06J+eG/ajvWPDo+Pu+vcdMW8Yw7xebIX+Doscv+XDlPz
Bqk39qCXR4cnsWXnPcg8ZiEd2vTCKuSuoFdEh+ucuC2dVegVE/Pj2Iw7Ve3o
lRLne2Qov2IIvXJifUx5kFQ/jcz/EfNzLP3T8CJfrH90sPdXUFtuSOb/6BD4
Zf7FnY5k/o8OZr9/f2qmkfk/Omi6ztxi+R+Z/yPGR69WpSYZvUY6GIUeKfMu
QK+ZDqPdu8LHqtBrIeqFTdDZwtfotdPBgZ8YLPiOXicdWrIvroLpO7D+Eeu3
Mlx6ngaZ/6ODVeLLFZM2kvk/OoiXbH/005XM/9HhJ5j/+M4m83906OBoN/yN
QW+IDiPc54wZp8j8Hx1mSg480rxB5v/o0B7T1r+ljsz/0SFmk2Mj8z2Z/2PA
9V8LKcf/ojeRARzLwQed0zAvIMUAYjId+aWMeQFpBqw6vGFEbgnmBWQZoERV
oWuT+To5Bjya+cPQxMgP6x8D/HtrH3pYoqfMABmnh0FsFzL/x4B9LhK+u3eQ
+T8GqEts/n2IReb/GBCTkhd2MhS9JQyYKdo369ReMv/HgLypD/5lJJD5PwZ8
KqoKSE4n838MmJX6yW//BTL/x4BXaouVhEXo6THA3f/wYee7ZP6PATkVA01a
T8j8H3H80zZ8Gmom838MWDt/oOzaOzL/xwD25tR1Qf3omTGgSm7Wuim/yfwf
A6yHPsWnTcb8hjUDduZE/pwnj/kNOwao5tvpHZ6H+Q1HBrT1/enqWeqP9Y8B
dU2UrNV6mAdxZ8CPKYf6Azah58UAxkGh6S5r9HwY8HCgczTCFT0/Bmz9KMX0
24FeIAP+rppQsZSJHpUBGueN5teT+TAGA45E5cV6/IcemwGz67rf34pHj88A
18WDUn+S0BMR40+dnKyQSeZfGCAd2zdP4iKZf2HAUStjiXtXyfwLA4T7V+1y
vkXmXxiw7ZflmasP0NvLAGNxsGNbHZl/YcB31lf92mYy/8IAfbf4mqgOMv/C
gEGt+M3fP5L5FwbcK/l4SGMAvSQGWM745D39F5n/Y8DGP/2TL/4j838MKGNF
HRyQwrxPBgP0npsdfDsd8z5ZDIic0rs+WCkA6x8DLsm02J2fg/mhHGI+SJtN
YKlhfiiXAUuTbozc0UAvjwEOE1PWp+qgV0gczwOR1OAK9IqI4ylN+1BO5q+K
GWBnc0f8jcw3lTLAc8m3rbEG6JUT82VPxFfWBvQqGGDTkJ94wgi9SgZIDPSN
DpH5q2oGdEc/8Agh81c1DPgWeLlXegN6tQw4vffH+9T16NUzIOJvy98Za9Fr
ZEDzi9lqDivRaybO31Or38ba6LUwICR0KOTmIvTaif8PLViQqoJeJwOK5tp7
3ZyOXhcD1nyMjnsrgd4HBhxjGnzpGCTzfwzIz7B0FnaS+T8GOJ0JFtnXkvk/
BjSofvs0/wae3yEGKK5bnh+RRub/GJCVvv3HQASZ/2OASuZ5k0EyPznKgHnl
PIcXq8j8HxNc+/7ebpJEbyIT2g6kNP6tI+sfE9aZB7zXSSTrHxMWXP2QMmxD
1j8mvC3JkoYhMv/MhFKbW59n6GM9VWSC5z7rR7888fqhzISwsS6uqRte31SZ
YGZwb4F4Mfn8BxM22ZxJ671B9n9M2LZ9dlawJPaTS5hQ6dySK/ULfx9pMsEw
7HLB/Bjy9y8T9jxqfh2WhPcPdJmgJApt79O1w/rHhA5X6iYbBXOsf0yQ0FFu
lP61DusfE6Q137zknp2E9Y8JYu4C9qqeVXj/jwm+k5/Mds3H+2HAhB1xb1bu
+WGN9/+Y8PhW24H+o3h/0oIJcpVvbQtS8H6sNRN+Vh7UeaOG99vtmKC6nLr2
gDHupzgy4UuGxbyoMdw/ciG+f9OX5I2huD/ozoSEVJMg7nXcD/Viwn+sQNk5
98j9XyYY23b9lMnB/Wk/JmhaD943YeL+eSATyoxlN+VIY16AyoSXzhOm1Ttj
XoDBBPexxj/0Y5gXYDPhyGKvmu4azAvwifdbnHsu/I35AxFxvCpOu2Q1yPwL
cb7vqW+OsiHzL0zoX/1ofTiLzL8w4QfrZP2B/WT+hQkyfsEjy86S+RcmHP1a
aF5VQuZfmKAXEaRzpZbMvzDh0IuM7HVvyPwLEy5sTDVN6yPzL0w4/jS+e9Yf
Mv/CBIWVcQqtUpj3SWYCIztysYI85n1SmbC46p96tyrmhzKYEF6gckmwCPND
WUxYXyNFebUU80PZTMjvnXtjzXL0cphg+uK6Sspq9HKZoM01PDKfzDflMSFe
x+HDi/XoFTIhOb5G+rkhekVMSPpIX7fICL1iJtHNzlreYIReKeHzvtP6yfxV
ORMctaP0Y8j8VQXxOiO8K2MDepVMmPX6bL2JIXrVTFAruZoQsR69GuL/r6/9
5UQeXy0TNLTKNtSS+at6JtheuTw4sBK9RiakNWqvqtZFr5kJ/y4uT3DSRq+F
CV59OoYpGui1E+OfFDScSY5fJ7Ge/BboMuej18UEFfX6X3/J/NoHJphPCl/q
q4ReD/F3+1o4MhO9XiaUayofSpyG3gAxX/Ij5rAmozfEhMCU+qr5Euj9YMIU
/bb1eb9xvowwoeFJVp/Kd5wvo0zYqftlA/UrzhcJFlyxCt+a3IPzZSILMss+
r7zcReb/WNC21qs25zWZ/2PBibqa/gMvyfwfC5Y4eFl6NZD5PxZckNjEVnyC
niILZMoz2soekPk/FsxN1//reIfM/7GgR3ZoycubZP6PBSvKrBPsr6KnxoIH
kMAuuYTeEha4Ry59NescepossKg//YZ2Cj1tFmgeLIq8koyeLguMI4zP9yWg
t4oFfGd5gyXx6OmxQC2mUdYpGj19FgRIFvSHRqBnyIJYDanMFDIfZsyCuo8L
G4o46AELuNHFax9T0TNjwV2/A+z2HehZsIBp8V7xiyd61iygCWfd+eGEnh0L
qMGdP/7ZoOfIguUB/aZTzNFzYcH7r8vVpm9Ez50FTiprpBT00fNiQXVhPFV5
JXo+LJgvkM+fo4WeH3F8zwEWLkIvkAWBmsI96nPQo7LgzWbNOh1F9BgsMB8z
i1gjS+b/WJAi5dphNJnM/7Egsr/EynKMrH8sUFftlnT7ifU0hAXP/4tzowxg
PQ0jji/9QczOHqynu1ggyvZsOPIO62kUC6StqndebENvLwv0F0TeqGpCL5YF
Na/G7nyoQy+eBb5hko9lHqJ3iAUvUk5MXVeB3lEWKH0wuhRQil4SCzi/ZNuP
X0MvmQWtCfWPnlxGL5UYLx/V1Cnn0ctgQam/r8gqE70sFugoKO46chK9bBYI
lt150XIUvRwW+AlmntE5gF4usV6chkej9qKXx4KwmMtSr3ehV8iC/66/bNkU
gl4RC36aJh7N4aFXTMyXFaFmSgz0SonP070rvT8AvXJivUlsGZngQ+b/WDCq
kqoZ7Ubm/4j5u3fG+akOZP6PBe1rH8WesCLzfyw4Xl7VrmVK5v+I8+33tfi+
EZn/Y8Gr/EXqgevI/B8xf/YbrJlG5uuaWTCrRLX/phaZ/2PBQcm7gezFZP6P
BX3PN2cunUfm/1ggDGm90DOLzP+xYMbQaPy1mWT+jwWHI7dujZYm838siE+6
NuI5kcz/sWA44oYu5zfm4QZYoDVhv4t+P17Ph4j3D+0TTX9H5p9ZxO9hxZPf
XmC+boQF9XE+D9/XYL5ulBjPNn/Zj7fRk2BDfOYkzo+rZP6PDewVCl8Vc8j8
Hxum6Dqc3JxG5v/YMF8jmhF2hMz/scGzIZJ+L5rM/7Fh9Sed5NmhZP6PDTeT
EociWGT+jw32+95F9e8g839s6Lry30aeK5n/Y8Oby5O0xqzI/B8bih/Zb0rf
SOb/2LD4WUykxRr0NNmgunPBu3+a6GmzYTTtC+3hXPR02RCpPHfaKTn0VrHB
KNSkMmoyenpscPHdcVj4m8z/scH48kd/4Vcy/8eGXGaVYVQ3mf9jw77D/tMz
Wsj8HxskmRebqp6S+T82JE+dGfe3ksz/saF7c8pcs1L0rNmwPatlf3IBenZs
2LJGoupnNnqObOif8qKKmoqeCzG+5+9FdR1Bz534e3PTZ04Mel5siGms/DU5
HD0fNjycM5x5mUf2f2w47BHW4EtBL5ANGybMi1nojR6VDWH2Ppf6HNFjsKEw
M3h9jQV6bOL4qvwXXDNGj8+GVfrtThfXoCdiQ4oy5cFlLfRC2LB8tTm9fAF6
YWyYXn9wZasServYIBE5V3ayDHpRbPhx8exX4wno7WXDNqPsJ3t+Yj4xlg2t
08SJjX2YT4xnw97NZmvWdGO/e4gNDadVTp9qxbzjUTZ8evTy0awGzDsmEb6z
aVbaQ/SS2eD2bmSW7h30UtmwXjN6zuPr6GUQ41tlmim+jF4WG8wM4xOXnUUv
mw3i1APd/WQeM4cNWW6UuDsJ6OWyQf3tYmZaLHp5bPhqX7orOhK9QuL1Dtkr
IWL0itjwePfgQAgLvWI2DBjqrtkbgF4pG8yzxAHpXuiVs+HX/BDBXUf0Ktiw
27LB/qslepVsWDhn/medzehVs6Fu1ac1Qn30atgg1V+qUrUcvVo26KQrHlyi
gV49G/wiBWGH56HXyIZdnbaNkkroNRPzX0Vl/14Z9FrYwA+zjps5Eb12Nuyw
cK7I+Y15zE42lJ08t9j6G+Y7u9igZFh06kcP5js/sOH97m9qV96Sz3+wYalS
S7qwBfOdvWw4X9H5FxrQGyDm29I4/Tk16A2xwfk/+3VjFej9YMNbkzs9vSXo
jRDj2Rxo9qEQvVE2cNY3rv58ET0JDmQfuHDuVxZ6EzngdHvvQflU9KQ4oKio
2Lw2ET1pDjy5Ki0OiEdPlgPPl2q4pe1BT44D4b26jPYw9BQ58Kvt22ktIXrK
HMjKd+nZzURPlQMtlPXrOgLQm0e8/36iyNobPTUOjJ0POH7bBb0lHDgSUhxn
ZIeeJgc6onM2Vpqjp80BqrdXjutG9HQ5UK8z8drXdeit4sA96Q+Ox1egp8cB
JQdnkelS9PQ5wGzPkf69ED1DDgTSnCbdUkHPmAO/7zx12SePHnDAbsblT57T
0DPjQNzc6KJ1E9GzIMYz5t+5uaOYZ7XmQNWPN/nTvmM+1o4Dz2i9dyT7MR/r
yIG7FpNqJn7EfKwLB2YUKN6e3kn+/uXA7kSVQ2ot6HlxoL1n0VLj5+j5cEDn
jcN/fk/Q8+NA0ufGfYcfoBfIgceTBpdV3kaPSnh3/gRMuIkeg3g/Zds8q0L0
2ByYv3if9clc9PgcSFeQau8/i56IAz8oYVX2GeiFcGBEdPhn8Qn0wgivUTJo
aQJ6uziQwssbPb0fvSgONKbyitSi0dvLgSXzzMNzI9CL5YDAaq3ZhmD04on5
IrVdopGL3iEOrHnXly2io3eUA/GK2mrzAsj8MwdeHQyk1XqT+WcOFI9OYse4
kflnDgR1xKmZO5D5Zw58DA8LlbEm888cKPkUFthqSuafOUBRMX5ZaEzmnzkw
4fm+qiP6ZP6ZA7SbKxeJV5H5Zw4UmWu89tMh88/E/HoW1OuqTuafOVAZ88/E
cQGZf+aAMk21wVmFzD9zYJVNzyEfBfTKOfD1aQmdI4teBQc+bO/22CeFXiUH
Ni5q23pOAr1qDjT/XbDp8W8y/8yB/w6az/s5TOafOXBAdqhN5yuZf+ZAeVA3
n9JD5p85wJj5/mlOF5l/5sAfpaae/tdk/pkDbf/O3tj4isw/cyC33k0z6TmZ
f+aA1DfJVV9ryfwzBw4va6x2ekjmnzmQeHxCR9k99Ho4IBPbxtYpR6+XAxaH
KoKyitEb4ECTx+Jb866iN8QB24KYoNOX0fvBAfdtkW5aOeiNcODk3OvRN7PQ
GyXW/4l3nXbp6ElwoWdzU9CnE+hN5EK5M3XigaPoSXFhtDju6uqD6ElzwWjI
IKhjH3qyXNitekguKQo9OS6wrp+7bBeBniIXbK/f1JENQU+ZC1e9ZfY28NFT
5ULjsp+5GSz05nHhUn3XcQ4VPTUufJO1NTT3R28JF26ev3lIzQc9TS40ba2K
kfRAT5sLMolqsz87oafLBbe7sYYv7dBbxYWgl1VvayzR0+PCUUH55Pum6Olz
Yc0lr/S7G9EzJL6/zKmU+wboGXNhS3jy0GM99IALv+dQz75agZ4ZF1LAOP2L
NnoWXPjj4tU0UQM9ay5I3pluvkgNPTsubGoo7TSbi54jF+yK6rJYyui5cIFq
UROeIo+eOxf2KRhTHsui58WFpyuq3CdMRc+HC2k6ihYbJ6Lnx4XsH13au8n7
iYFcUHs6aaRyBPPtVC4ULnS+NOM75tsZXHANubnWdwDz7Wwu8AJWJlz7gvl2
PhfOB1QWynxET0Scj9qDRxnv0AvhwrbiKxq1r9EL44L8myCaXgt6u7ggd/yr
3ekm9KK4MHD2bN3MevT2ciHToKMz5gl6sVxQf6a0e6wavXguMGfdy9h1H71D
XDB9xVv77zZ6R7nw93OZcWwpeknEeMnZ5MvfQC+ZC3rdzyPPFKKXyoXc+yo5
6/LQy+DC52u9859eQC+LC+sdlr9mZqOXzYVVBdVtMqfRy+HCM9tr8lfT0Mvl
wqlvP0K2JaOXx4XKcxcnTj2GXiGX+P3z6UrpYfSKuEC51y3ixaNXzIUzYa8s
tfehV0p838sy6h+j0CvnwvY5jRK5u9CrID7f8Ggzdyd6lYSvfPWUgRi9amI+
bS60l+KjV8OF6kKldy9Z6NUS41UucMynoVfPBe8f1GOxgeg1cmGlalZW4A70
monP+94kMvdGr4ULCdtqJml7oNfOhed/7ezkXdDr5II/3cjsrz16XVzY2RHx
rtcGvQ9c8HWYsKTTgnz+gwsX1z3+22xKPv9BeAc7WQ2byOc/uPDmqhf12Qby
+Q8ufPJ0/1CvTz7/wQVlruT7F2vI5z+I7zP5hPebFeTzH1xgmzuafdYhn//g
QcfWPSdGNMnnP3iwWDfKVnYJ+fwHD36VX/FdvJB8/oMHkRmRj4zmks9/8OCF
XEC052zy+Q8esL537NupSD7/wYPanJja9JnoKfNgQf9Hh/sy6KnyYGrfZene
KejN48EJ6cghlUnoqfFAqVV+irUEekt4YCC/bNOuUfL5Dx74MZOOXftFPv/B
g/MnFo59GSaf/+DBNvWCcK1B8vkPHgQHL5Wk95HPfxDf92zkkUs95PMfxPEz
81QH3pPPf/Dgy6LSUwbvyOc/eFCecU0p5g35/AcPPOZd3fm8lXz+gwenjZsr
l7wkn//gwaK3dgOhjehZ82DhYutfT5+hZ0eMx4apzVrk8y6OPFgmqt+77xF6
LjyIUBr80/0APXceTHS8b2B5Dz0vHqxbdX5t3m30fHjwbN/Ez4pl6PnxoP6F
g8vuYvQCeRBtOZn15Rp6VMI/dmGZ9xX0GDwY6b2fUHcZPTYxPr+/JJpeRI/P
A3rJXd2yc+iJeCDN79q29gx6ITy4fWbS7Kun0AvjgcP3V96r0tDbxYP/tBao
X0tGL4oHj/+mMvWT0NvLgz3L5ujcTkAvlgetNuLtFofQi+fBUPW+fw370TvE
gx21ejJ++9A7yoNNBqyIgT3oJfGgMU7Ndu9u9JJ5oPzIIVglAr1UHqzeNzp8
JRS9DB5QylZXWYvRy+LBo3sT3r7no5fNgzXmsWYxHPRyeLBRu/OjOhO9XB54
xq2veUhFL48HMsdvvWMHolfIA8XjZ1cq+aFXxIPBJ9qXb/ugV8wDY/4JR4YX
eqU80E1eNXe2O3rlPHBW3yr10Bm9Ch4srTSbHuaAXiUPpJ6Kli23Q6+aB/1m
Zj5d5PNMNcT4lyxIT9+CXi0P5m4J63IzRa+eB5/DalcpbEavkUfU/5Td9Ubo
NfPgnHLgo6MG6LXwIJ1dKu2yDr12HhRrr9g0ew16ncR6c93m/3oFel08yFV4
zT2/DL0PPHBM9w7gaaHXwwOq1p71Rhro9fLg8qexnqmL0RvgwanBg8GvFqA3
RNSL1e9f5M5F7wcPGvzrpCJV0BvhQf4v2UnOs9Ab5cHLucIaLQXPiryDbXQJ
CT5UH6t3njDTs8JCI1gybQIffpdMyGiT8azouDMjQ28iH3L53Vk3p3pWhHle
XFc3iQ8LZ23ffmKyZ4XiN5NnVCk+JHHc6sSS6E3lw+3T5b1u/zzGPWk+nF0c
d9Ng1GPck+HDf1cLtOePeIx7sny4tGnN5ok/PMa9GXxI+zBr+PM3j3FPjg+D
7wLMm76iJ8+HK5FLde/2oqfIh22TQi9c7kFPiQ+bbjGupX5AT5kP/fXzrOO7
0FPhwy6na7TwTvRU+TB1jtM0zmv05vKBXqu+3L8VvXnE97u/vdb9JXoLiOOX
XN29tQk9NT5cXf2Kb9GA3iLi8+MTiaYMvSXE+2tOtxg9QU+dDzNW2BQYPEJP
kw+v/ds/6Vehp8WHBaKcffr30dPmQ9jD0aj1d9FbxgdjOYOXhuXo6fIhZtON
mI2l6K3gw7nQF/tMi9FbxQeO9FizVRF6q/mQ6ZsidixET48PO4bkvb3y0VvL
h2fW7bGBl9DT58P+N+xh7gX0DPjgMn9jVsQ59Az50Or2ODb+DHpGfAgsPHEu
JRM9Yz5kLFb/cTEdvU182B00FlqWgh4Q3+d9oWbdCfRM+LC04slY5zH0zPhQ
dfXd6PcE9Mz50C57eL7sYfQs+HDoCmX7kgPoWfEh6te0UqM49Kz5sKx8wXK3
GPRs+fDP0KKYtwc9Oz5Uyus4HdyNnj0x/w1Cfl+IQM+RDzDQUlC1Ez0nPjwo
mcLqDkbPhQ/11jeWTRKh50q8Pza9T52PnjsfjIQh+RYc9Dz5cEtrMp3BRM+L
eH+D9JzDNPS8+XDmhHXF1SD0fPhQcPKQx0t/9HyJ9ffxVPtfX/T8+OAbamun
4YOeP5/oj6nZW73QCySOb/u9NyHu6AUR/jW9P1ku6FH5sHN18vcnjujRifOT
++Dxz63oMYjxTTwVqm6LHos4/2MTRpys0GPzgZ/ywjZqC3pcYj0cG2NfMUWP
zwevLIpXx2b0BHxw/PJ9utxG9ER8ODrtVJzJBvTEfPD7ZVMpWo9eCB8eTf12
O2ctejv5MNoRK25djV4Y8TpdonvGSvQi+DDliYe0uS56u/igH7D/bZg2erv5
8KUogVGoiV4Usb6onMyPS9Dbw4fY9UsiFy5Cby8fzn+7Lum5AL0YPsyka+km
zkUvlg92gft+PFZBbz8fes688J2sjF48H0weqweAInoH+WAZEPU3Qg69Q3xY
X/1zecl09I4Q63NhxsDwNPSO8uGvd5TpmqnoJfLh1ZJSNf5k9JL4sK/BZ3+B
JHrHifVD3xvS98993Evmw8kDFp90/7qPeyl84AnvtbJ/u497qXwY+SBnm//T
fdxL58PmtS76/cPu414GH5QWX0xd+Q29TD7oflklFHxFL4v4vLVyt4t60TvD
h2JJZuiPHvSyifl+PTDT8CN65/gQ9HPJyshu9HKIenvnuea9t+hd5IOOUWr0
5A70conxbDyz2aYdvct8mD5XxTuhBb08PlhVaz1vakavgA995yecndOEXiEf
lmc0PPRrQO8qH3yOP4ILT9Er4hO/52dP63+C3nU+iFcPqK2rQa+YDycO7Yve
VY1eCR/umsvoPqhEr5QPTwZuzJG9h94tYr2Nltm63kGvnA+eZxzLM26hd4cP
H1vzGe9L0Ksg1q//NKcVxejd44Pp6UxeaBF6lXyg5mbfryhE7wEfZum7WE4r
QK+aD2XHP/52uYzeI2I+nU9vPXURvRo++D+71PXxPHpP+CD67ai4Jhu9WmJ9
xzym7spC7ykf1mxwbas+hV49H25uXcaVT0evgQ9P7Q/P80lBr5EPExeXdOWc
QK+JOH+/eioGj6HXzAdpC/+rxkfRe8WHi7d8rsUdRq+FmN9Gc+89P4BeG7H+
m9pa5+9Hr50P066/HqXvQ+8NUb+W+Klfj0avkw81u87a//sPvbd8OLioe6dN
JHpdfJAUB2WdCEevmw836gLud4ai94GoR6EL2pcFo/eJWA+nmz+HCNHr4cM3
18df7vHQ+8KH2WEG7bIc9HqJ81e+o9SDiV4/Ue+SdkedpaE3QMyHFY0r+oLQ
GyTWkyj93voA9Ib4kPdVST96B3rDfLjXvCu+1ge9H0Q/NDyzVHkber+I/uDC
tPt+HuiN8MH6xcUzl1zR+8OHax803Iad0BvlQ29ZectGB/TG+KBw5oJunB16
EgJY7qBmW2+N3gQB5LXsWKNqid5EAVRfyuzwN0dvkgB+hSk5XjJBT0oAfma/
or5tQm+qAHQ3R/E2GKMnLYB/r96qRBuiJyMA+wtO4TX66MkK4FrAxES5tejN
EMCO19rbPFajJycA5u8fz0+tQE9eACrn0391LUNPUQAGjywfaWujpySAkC06
m3ma6CkL4Egvf9v1JeipCOCS0Gr2iBp6qgI4yGgXblyA3lwBfNL3YO6Zi948
AQTLvPv9QAW9BQIwbz23aKoyemoC6HKobrNRRG+RAKJrWJqH5dBbIoB5dqVj
T6ejpy6AUxEN/nIy6GkK4E/iCzunqehpCcDB/X154mT0tAXwXHHhlQZJ9JYJ
QD7xtJq8BHq6AmiSip7h+NcN+z8BLJ3dGXzktxv2fwKwetDgUvvTDfs/AZTR
OOelv7th/yeABbkPaRbf3LD/E4Bq8NDJ6K/o6RPjOzxB704vegYCeL9HUn+k
Bz1DAczIlszU+4iekQDm/J1O53SjZyyANLsViTlv0dskAEUflnLHG/SAOJ7f
j4eV29EzEYDCkKO2fQt6ZgIon/CvMKYZPXMBfH7StL+sET0LASxqfpb/tR49
K+L94V/mqT9Fz1oAoZ1qjR5P0LMVwLcBat2BR+jZCWCdw7Wpt6vQsxfAbPvv
e/rvo+dIrIcPC/UXVqDnJICCgoWLHW6j5yKAR087THeXoecqgK+/rE7k3UTP
XQD5vibKrdfR8xSAx4W8+1LX0PMSgPEH1sk1V9DzFkDH0e2J2/PQ8xGAUvD2
/Lhc9HwFMPWK+afCHPT8BMA63bOpJRs9fwHYvV1YIHEGvUABuEDJmqWZ6AUJ
wKsgqsYuHT2qAM4amvMEKejRBbBL8onaiRPoMYjxWd3aevMYeixifL/opbUk
oMcWwD7bk96/D6HHJeaDS8XcOQfQ4wvgQhftpUEcegIB9F0zO+geg56IOH6Q
Wivag56YOP9PfJ8e2Y1eCDH+FiPuuRHo7SS+n9Pux/d3ohdGvK6VpNEWjF4E
sf5PtwR9E6K3SwAHFAZipvLR2y0AM19B9HwOelEC2N847LWaid4e4vwvnzHV
nIbeXgG4x2yNdwtCL0YACRabWyn+6MUKoFWb/VPsi95+oj4u8nod7Y1evADW
uMXtT/BE76AANsuLv6e5oXdIAN13U9TOO6N3hJhfbUypAgf0jgrgZrd39g07
9BIFMM2tZeiWNXpJAqCesBuusEDvuAACBueceWCGXrIATA+d/1EN6KUIoN/V
evDhRvRSBRDz2/fwww3opQsgvHPDw6r16GUI4L7C8vT7a9HLJOrPhj2T76xG
L4sY/4TdkiUr0DtDHG8D7UjhMvSyifqlH3H+ghZ654j6GfDN7JQGejkCOOYh
SU1cjN5FYr5y26bELEQvVwDvtuRqBM9D7zKxfkuO3QpSRS9PAMsaSqucldEr
IM53mRFsVkSvUADNxauW6sihd1UAcvJ5IYrT0SsSQLpcuc4fafSuE/W7l7H5
rRR6xUS9vlNaWDURvRIBnAi5FH5RAr1SAXyvXZca/9cV+z8BzNd3nMr47Yr9
nwB+NH2qtPjpiv0f8Ten5+HiYVfs/4jx89KX+zvgiv2fAIShBSkv+tCrFMDw
wmXb8z6j94C4Hs+O8trzEb1qAZTuiYh37UbvkQBWNbz/pPEWvRri/JbvEX1/
jd4TAUxaKatR2YperQDWGxmPHHmJ3lNivGQrv3g2oVcvgMpW219qDeg1CODN
q4g5H+vQaySuX9rftl5+jF6TAGwbLI9wHqLXLADHczNfLn+A3isBmBg3L+mt
QK+FmG8fF/Ev3kavTQAT04U3A8rQaxdASZfJ9zk30XsjgKsvJTUaitDrJM7/
lMWm+wrReyuAOs5kq/X56HUJQBwou+ZjLnrdxPXscMKf4znofRCA+tPO05CN
3icByBrYzvl8Gr0eAdT/UaAmZqD3RQB7tgXv1k9Fr1cAG05c9G05gV4/Ub9f
t00IP4begAD0LdcHqiSgNygArRttkdcPojdEXL9r39nZ70dvWABx3b5P3seg
90MAt4e2DYfvQe8XMf7Rrfen70ZvhJh/aS2rM8PR+yOA7TfsjHVD0Rslxv+y
2uubIvTGiPp4fsNMEz56EkL4PG1n3UM2ehOE8IJfoGDHQG+iEOLiL7fUUdCb
JITtiuvmbw1AT0oIfx5OfVXji95UIUjZtk8y90ZPWgiTVLdn3vJAT0YIg8Gr
Tq9yRU9WSPy+HZqQ7YjeDCGoMjfcU9iKnpwQFJ4nvvzPGj15IaywjNz8eQt6
ikLY2hs65GSKnpIQJE2H+4o3oacshD1KPtqqRuipCKGeIZe1cz16qkIw5THs
XuihN1cIh2jFWitXoTdPCMopG1fG6qK3QAj5+sbbWrXQUyO+v/uH7GUa6C0S
wsWXVKnwRegtEYKsY0dE1Xz01IWQOUobmz4HPU0hVOTN3O+ijJ6WEJSutCkk
K6CnLYTndx6mvJiB3jIhyA1UKSrIoKcrhFcZdyJtp6C3Qgg8p6P1eyait0oI
b0tmSt3454L9nxAC4qeovP/jgv0fMT58AwmFXy7Y/wkh6J9nidGwC/Z/QqhN
nrUhYMAF+z8hLHKR+29fL3qGQlj/qzPq/Cf0jISw4bWS4f1u9IyFsPHVijNt
nehtEsIb7QvXBtvRA+Jv+hfqpBb0TITgyPG9qfgCPTPCN/Y8tbABPXPi+33T
UNCqQ89CCFqF0jOX16BnJYSDezccXlGFnjUxf1y79+neQ89WCNPqln7TvI2e
nRDyrOY8mV+Knr0QUsqqpOVvoOcohPA0rQsSV9FzEsLxp+syevPQcxGCVXLT
26aL6LkKYa24k196Dj13IdSoaJumZaHnScxfO6F9aAZ6XkLY/0p0xDEFPW9i
PolafmscR89HCFcvmR76mYCerxDSHpkaVR1Ez08I/pV+Eglx6PkLYYb67CbX
vegFCqFpoLFA+T/0goQgTv61vykcPaoQZj9v2XYkBD26ELLS7s4zF6LHEMKo
9Pvq7xz0WEK4bLHTKZuBHptYv+y063YU9LhCiNy549OgH3p8ITzQfdp9zAc9
AXF8/zrOrPRET0TM539Rsx+5oCcWwsqKhI0+DuiFCMHO9LVMrw16O4Wwrk03
PNQCvTDi+BeujRozQS9CCLdr0mbt2YjeLqJeXfi9+p8BeruFEB/ZUbtzLXpR
Qhgeqn7dtxK9PcT6iFTz8V2G3l4hGMPWzY810YsRQt+/07tXL0YvVggLJm+X
Pz4fvf1CaJEq6x9UQS9eCG6Kb6bbKqF3UAjFO99STs9E75AQfufX9fVPQ++I
ED4YncowlELvKHH+zhsx/puAXqIQdjrvs6kYdcb+TwiiYMv1oz+dsf8TgsPP
zZp6Q87Y/wmhYcf8GZR+Z+z/hDD9zu73iT3O2P8JQf7Y0NnSbvTSifV4449x
ewd6GULQsJxyaaQVvUwh2B4N6ZRvRi+L8L6lNqs3oHeGqP91V6PX1KKXTYw3
q791w0P0zglB5Qvvxcb76OUIIVXTgm50G72LxPrK4sfrlaCXK4SX7DcrNIvQ
uywEo7lce8UC9PKI+XO27/Xvi+gVCCHKak5jezZ6hUJoTcxaUpqJ3lUh+GrN
q0pIRa9ICBaPZuf7HUfvOjG/l01vWJaAXjExf78HaQ7Go1cihPbMkLOFMeiV
CqHbb/8G5n/o3SLWy+JnXfPD0Ssnrmc0btITMXp3hDBVf+cmEQ+9CmK9Te9r
UWKid4+ov3W3thUGoVdJjP/5eze27EDvgRCSJR93NHmhVy2EfVFH6ra7oveI
mG8vikWd9ujVCGHL/VfVPtboPSGuj5N23npuhl4t8X1NpCxMN6H3VAirx95t
u2yAXj1RX+K9+6frodcgBInBS8OM5eg1CoE7NOJ/dyl6TcT5GvTVmbEYvWYh
eHe9NnGfh94rol5Y0TNOKqPXIoTTi14vfy6HXhtxve2Y+nmyDHrtQijyPv9g
zWT03hDjWe911fOfE/Z/xPE/LssOHXHC/k8ISZo2CQlDTtj/CYE/KZSW1eeE
/Z8QzCtPLbz00Qn7PyFo/55yOe8tep+I7yvqHb3Qhl6PEG4u5U3NeIHeF+Lv
DWcq9j9Dr1cIir+iVLg16PUT9eP5iKRdJXoDQnjt3y1cfBu9QeLvICnvwWL0
hoQgvKdQUFKI3rAQdOJyfXdeQu8HUf+HPHasOofeLyEcCEk523kKvREhxN58
Pif+JHp/iPqQ6V2mnYjeqBCo24JF9w+gN0bUE7aDgUsMehIicL8u9actEr0J
ItAJO5/vE4reRBG8ilhi+oKP3iQRPJtEvbSFiZ6UCDZ+3/wqPxC9qSJ43yq4
PX07etIisJt0yZbijp6MCL4nx4ivO6AnKwLViwe1/1ihN0ME1e7rfQxN0ZMT
we2PfX+5RujJi+BQ10SJjLXoKYrgo365S8Vy9JREYOZm9blNEz1lEezxeXS9
fyF6KiJoNLY990sFPVURcN8+zR2RR2+uCFR8oHhwGnrziM9T3FXWORG9BSII
H956oXrUEfs/EZw5J+Bkf3fE/k8E1NJjf0P6HbH/E4HGoJ2VyUdH7P9E8IKr
u0my0xH7PxHUj+Q/K32FnpYIRjZv7qM1oKctgpC5m+NkH6O3TATn2v4evnAf
PV0RSBy7PWhwC70VxPkMuHa2ogi9VSKY2iyZuCkPvdWEt/ZR3rVzjhWd/9//
iUC9Y8aHeafQWyuC0MJm3cgT6OmL4KmfoqDxMHoGIrjWn3d2YSx6hiI4IhN1
1X83ekYi2HbE93BqCHrGIljdM1PzIRe9TSKIOu/E+kxFD0Rg2v3SbuIO9ExE
MNC9tUzeAz0zEfxLcM+e5YCeuQj+TD38c4YlehbE+d6yL+fvJvSsRGCdW3v6
rT561iIwzvv8vGwFerYiGN7jvzJeEz07EcQ+KThntwA9exH02tstnqyMnqMI
Lt8oPHltOnpOIvBzcRx2nYyeC3H+3xs5vBpxwP5PBBu8ZpsOfHLA/k8ElXGz
swZfOmD/J4LuOUus2qsdsP8Tgf9tddXCGw7jnjfx/aSnf2OfQ89HBGVHm64q
JKHnK4KkT5Hrz+xBz08Etm9mB6jw0fMXQcyVu3I7fdELJOb7juzFFXboBRHr
a/Gk0IEN6FFFsLXdoG+qNnp0EewqLQySno0eg5gfnd/LByehxxLBlQ2FL+59
s8f+j5h/3hePhHXaY/8ngtSwxw9Vntpj/yeCoURt/9O37LH/E8GJNEmj6bn2
455IBPSWu+sCktETi2CBz+jqzL3ohRDz6WCc3D0+ejtF8KOLfu3xdvTCiPGp
6/pVZoNehAiepEVUJa5Hb5cIZl76OWKvjt5uEVjk03Z+k0MvSgSJC7SW7Pq7
Ffs/EXQ1fWj/0rN13NtLjGfdhf0mzVux/xOBWPWxdOT9rdj/iUDyn6x5ZsFW
7P9E8NLyxNzzaejFE+v53jdxYix6B4nx/qaxLlCI3iHifP47bzLHF70jIghu
oEYVW6N3VATa7I6X69ehlyiClBi5lZlq6CWJ4LnbQU6PDHrHRfCzaGeE6k87
7P+I9RyUZbLinR32fyJwKOXnLq2zw/5PBLmhUqcml9iNe+nE+6esm/LorB32
fyIwHzzSyD2MXibxfQu4/SOh6GWJYF3tP3NGAHpniPFkWVWV26GXLYKJs/R8
h/XROyeCjoGUfzMXoZcjgneBdmkzZdC7KIK4mepqQ8O22P+J4C5IxZS9sR33
Lotg1tPhUsojW+z/RCBiqd4cvmqL/R8x/qHPBbR0W+z/RPDNuuLt7Rj0roog
bWLjv58c9IpEMKfPs3qWB3rXRbAvaPrq2YBeMTGeflobR7XQKxHBshRuzwN5
9EqJ+r7FVF/w22bcuyWCAxnXNSZ02WD/J4K/v07eEj+xwf5PBHm3j/19UmSD
/R8xHyfrDUll2GD/JwKnuRNzNGLQqxRB0dPMRVps9B6I4F5ujWiGK3rVIjBS
jM17ZYTeI6K+spe/iV2CXg0xf9fGz1eVQe+JCB6v79uTQAzKeP8ngr0fnTU+
t1hj/ycCzZZgde171tj/Ef3A3sFMu4vW2P8R42vtd9M1wXrcaxTB/g8RSSYh
6DWJ4JLJZh/F7eg1E59XJ73psRl6r0QwOeIBnaqDXgsxnh5T5T7JodcmgtpB
C5bDTyvs/4j1kzZ8I+O1FfZ/IniYen1lfaUV9n/EfBLGzfuca4X9H9EPbP/z
4HOC1bjXJQKh9I6Q58HodRPe4x/RZ7zR+yACRuBaU08T9D6J4OTuQbmfmuj1
iEBxWr7Tbln0voig4vQTdv+gJfZ/xPVNs63e8qUl9n/E/Gxr+Xag3BL7P6Jf
+BNlX3LGEvs/EQi2JFHrYy3HvSERfDm4sqqRhd4wcb3JWDp63xG9HyI4f8/7
fOY69H4R81ljbiBtDnojIgiix3fO/2cx7v0h6uVd6ef3uyyw/xOB1+8r390f
WWD/J4LWZzcV2/IssP8TQ0er5D+HRAvs/8Sw/f6pE8XB6E0Uw/Qxu3szt6E3
SQxu1Yt2+mxCT0oMkbdm3z61GL2pYoh+eyurSQo9aeL/U1+bSH7ZMu7JiGG5
vc3Tpc+2YP8nhpenj++1KNqC/Z8YZr76eGXHyS3Y/4mh5dyna+KILdj/iaFp
NHssdgd6imJI8jyskmKGnpIYhn0Pp+UuRU9ZDI7Wi9felkFPRQzf6EmXm76a
Y/8nhisOhh2Djebj3lwxNBu3VyuXmGP/J4ay8zrBWzLMsf8TQ9oTa9WoKHPs
/8Rw50C0RE0QeovEMKFaNmWxNXpLxGAweZSbsBw9dTHkLXA0UFBAT1MM9LnL
6/J/mGH/J4aRuxtXUtrMsP8Tw/oT5geNKszGvWVicD/TYbT2vBn2f2LwCN9b
63zADPs/McS2XBtN46G3inh/4M5KOTf0VovB9aeWS8kG9PTEMPdY8PxkNfTW
iuHv4aaXBVLo6RPjOWYTNaXPFPs/MWx7dTrgfKMp9n9ieHp74oIjZabY/4nh
yCnDyw/PmGL/J4ZF17YGesabYv8nhr0rPktZCtADMTy8u606zQs9EzGE6jvb
eJuiZyaGP9r7bx9dhp65GC6ts3xpNgs9C2I+3pzyMfKfCfZ/Ymi7of/W6rMJ
9n9i+PzZjnPlhQn2f8T4vPH9Xn7PBPs/MZR3uN6MLDDB/k8Mt2wlXo2lo+co
hk6h7U77A+g5Ed9vz+PaiDD0XMSgcmBs/UkGeq7E8VpepF3bhp67GA5/Tw7u
tEPPUwyUz3xZfUDPSwy3zacm1qxFz5v4PPMPjkU66PmI4ZPUi+Lpi9HzFYPM
kFPs9zno+RHz8cHoggOz0PMXQ9iYVU2fPHqBYnjSMTTdQg69IDE8+y09p1wO
PaoYeJZZqyMV0aMT6/VHvd4tFfQYxOuq8nr5auixxLDg+UmNo8vQYxPra9Dr
2gVD9Lhi6LZQUdtsix6fWL+HDDiX/NATiGGp46UUy3D0RGJQ50trRqWgJxaD
Xsy5nse30AsRw1jHCt2CbvR2iuFMySfD+4o4X8LEcFdBL+S6Nc6XCDG0yhko
2sbhfNklBnNV2WRGHc6X3cT8Zy70Vp6P6yPq/+rL4PY9obg+9ojhw/yxNNk3
uD72iiH+eGykuzOu3xhiPj882W/RjOs3Vgx1lScfL2RjfdkvhmuF2pWJylj/
4sVwdXWt9MtXWE8PimHh4nVJL4qx3h8Sw88317xtb+D16IgYYtSnvJrSitfL
o2IIOj39sr4u9huJYtg8l3Gz4jr2V0liyPzUHFizG/vd48TnX9lVrWmHv2eS
xeD0W26aKB5//6YQ6zdqh4WzJN5PTCWOZ8GzXMEDV+z/xDBVr9nBsZPM/4nh
wLLwe+V0L+z/xMDn7tW/z/fB/k8MyTLtHtsn+mH/JwZ9Q/bOJ7MCsP8Tg2/7
2QTFoCDs/8SwqkZBvFaXCuP9nxg0nIWUR3cDYbz/E8PoQi+mc7g/jPd/Ykgs
3nMw7aMvjPd/Yqjert73lukN4/2fGKy7rh6ODvcc9wqI88UOTmiSch/3CsWw
zMz+SvKoy7h3lajPs7e/tbR2HveKxODF6Jrxtt1x3LsuBknZpbe3uTqMe8Vi
+K/qfrLq1q3jXgmxvsK1teSTbMe9UuJ69cUxs1bFZty7JYYXJ9rnJjVajXvl
xHqbnPLoaZnluHeHGP/9f+4ef2gx7lWIodePstJqeMu4d4+otzJJ75yNt4x7
lWIo2Wfg1J9uPu49IOq906fNIzPNx71qMZz2ntHXfMJs3HskBqUm2m63ZWbj
Xo0Yfl/oHU59ajruPSGuv2VW3nK7Tce9WjFExTHW7TAwHfeeEuPb+Uu8fdRk
3KsnxkvHMGhajcm410BcL35emxN3ymTcayTm962DWvJhJuNekxiMcgQGY9tM
xr1mon6N8EJKTNF7JYYZH/uO31qJXgvxerjQ6dgi9NrEsObJKv+m2ei1i4EV
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
        "]]}, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox["\"t'\"", {
           GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
        None}, {
        FormBox[
         StyleBox["\"t\"", {
           GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
        None}}, FrameStyle -> Medium, FrameTicks -> {{{{-180, 
          FormBox[
           RowBox[{"-", "180"}], TraditionalForm]}, {-120, 
          FormBox[
           RowBox[{"-", "120"}], TraditionalForm]}, {-60, 
          FormBox[
           RowBox[{"-", "60"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {60, 
          FormBox["60", TraditionalForm]}, {120, 
          FormBox["120", TraditionalForm]}, {180, 
          FormBox["180", TraditionalForm]}}, None}, {{{0, 
          FormBox["0", TraditionalForm]}, {30, 
          FormBox["30", TraditionalForm]}, {60, 
          FormBox["60", TraditionalForm]}, {90, 
          FormBox["90", TraditionalForm]}, {120, 
          FormBox["120", TraditionalForm]}, {150, 
          FormBox["150", TraditionalForm]}, {180, 
          FormBox["180", TraditionalForm]}, {210, 
          FormBox["210", TraditionalForm]}, {240, 
          FormBox["240", TraditionalForm]}, {270, 
          FormBox["270", TraditionalForm]}, {300, 
          FormBox["300", TraditionalForm]}, {330, 
          FormBox["330", TraditionalForm]}, {360, 
          FormBox["360", TraditionalForm]}}, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, Method -> {}, 
     PlotRange -> {{0, 360}, {-180, 180}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(2\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(3\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox["\"\\!\\(\\\"X\\\"\\_823\\)\"", 16, StripOnInput -> False]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 2/3, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0.5, 0, 0.5]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Column\"", ",", "1"}], "}"}]}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7928391544688406`*^9, 3.792839219578625*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"causticProgressPlot", "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "=", "1.35"}], ",", 
       RowBox[{"tDeg", "=", "130."}], ",", "ons", ",", "onsDt", ",", 
       RowBox[{"dt", "=", "20."}], ",", "ell", ",", "caustic", ",", "ac", ",",
        "bc", ",", "gr", ",", "ext", ",", "extDt", ",", "pQ", ",", "arc", ",", 
       RowBox[{"arcR", "=", "1.2"}], ",", "arcStart", ",", "arcEnd"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ac", ",", "bc"}], "}"}], "=", 
       RowBox[{"getCausticAxes", "[", 
        RowBox[{"a", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ell", "=", 
       RowBox[{"plotEllAxes", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"caustic", "=", 
       RowBox[{"plotEllb", "[", 
        RowBox[{"ac", ",", "bc", ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Brown"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ons", "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", 
         RowBox[{"toRad", "@", "tDeg"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ext", "=", 
       RowBox[{"extouchTriangle", "[", 
        RowBox[{
         RowBox[{"ons", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"ons", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"onsDt", "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", 
         RowBox[{"toRad", "@", 
          RowBox[{"(", 
           RowBox[{"tDeg", "+", "dt"}], ")"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"extDt", "=", 
       RowBox[{"extouchTriangle", "[", 
        RowBox[{
         RowBox[{"onsDt", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"onsDt", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pQ", "=", 
       RowBox[{
        RowBox[{"onsDt", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"ons", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}], "+", 
        RowBox[{"ons", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"arcStart", "=", 
       RowBox[{"toRad", "@", "145."}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"arcEnd", "=", 
       RowBox[{"toRad", "@", "175."}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"arc", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ons", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}], "+", 
          RowBox[{"arcR", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "@", "t"}], ",", 
             RowBox[{"Sin", "@", "t"}]}], "}"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "arcStart", ",", "arcEnd", ",", ".01"}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "@", "Large"}], ",", 
          RowBox[{"FaceForm", "@", "None"}], ",", 
          RowBox[{"Arrowheads", "@", "Large"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", "Blue", ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ons", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"ons", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}]}], ",", 
            "Blue", ",", 
            RowBox[{"Point", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ons", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"ons", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}]}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", 
            RowBox[{"Darker", "@", "Green"}], ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"onsDt", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"onsDt", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}]}], ",", 
            "Blue", ",", 
            RowBox[{"Point", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"onsDt", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"onsDt", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}]}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", "Dashed", ",", "Pink", ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"onsDt", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "pQ"}], "}"}]}], 
            ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"Superscript", "[", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(P\), \(2\)]\)\>\"", ",", 
                  "\"\<*\>\""}], "]"}], ",", "20"}], "]"}], ",", "pQ", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "1.5"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"Point", "@", "pQ"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", "Pink", ",", 
            RowBox[{"Arrow", "@", "arc"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{"Point", "@", 
             RowBox[{"ext", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ",", 
            RowBox[{"Darker", "@", "Green"}], ",", 
            RowBox[{"Point", "@", 
             RowBox[{"extDt", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{"{", 
             RowBox[{"ellLabelPoints", "[", 
              RowBox[{"a", ",", 
               RowBox[{"Part", "[", 
                RowBox[{
                 RowBox[{"ons", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", "\"\<P\>\"", 
               ",", "20", ",", ".1"}], "]"}], "}"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{"{", 
             RowBox[{"ellLabelPoints", "[", 
              RowBox[{"a", ",", 
               RowBox[{"Part", "[", 
                RowBox[{
                 RowBox[{"onsDt", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", "\"\<P'\>\"", 
               ",", "20", ",", ".1"}], "]"}], "}"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{"ellLabelTxtb", "[", 
             RowBox[{"ac", ",", "bc", ",", 
              RowBox[{"ext", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<C\>\"", ",", "20"}], "]"}], ",", ".075", ",", 
              RowBox[{"inward", "\[Rule]", "True"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Darker", "@", "Green"}], ",", 
            RowBox[{"ellLabelTxtb", "[", 
             RowBox[{"ac", ",", "bc", ",", 
              RowBox[{"extDt", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<C'\>\"", ",", "20"}], "]"}], ",", ".075", ",", 
              RowBox[{"inward", "\[Rule]", "True"}]}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ell", ",", "caustic", ",", "gr"}], "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7920676904274817`*^9, 3.792068085157385*^9}, {
  3.792068115437785*^9, 3.7920681860966606`*^9}, {3.7920682167842655`*^9, 
  3.792068469914524*^9}, {3.7920686654085855`*^9, 3.792068668104867*^9}, {
  3.7920688399743013`*^9, 3.792068849176762*^9}, {3.792068896234335*^9, 
  3.7920688966742153`*^9}, {3.7920696377717323`*^9, 3.7920697270574636`*^9}, {
  3.7920698275195026`*^9, 3.792069848316764*^9}, {3.792069878528921*^9, 
  3.792069893067791*^9}, {3.7920699252024107`*^9, 3.7920699825538626`*^9}, {
  3.7920700190574646`*^9, 3.792070117900535*^9}, {3.792070173316062*^9, 
  3.7920701847956605`*^9}, {3.792070942700317*^9, 3.792071025333435*^9}, {
  3.7920711294052505`*^9, 3.7920711641222973`*^9}, {3.7920712021251693`*^9, 
  3.7920715667026176`*^9}, {3.7920716018619137`*^9, 3.792071627774601*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.35, 1.}]}, 
    {GrayLevel[0.5], Thickness[Medium], Dashing[{Small, Small}], 
     LineBox[{{-1.35, 0}, {1.35, 0}}], LineBox[{{0, -1}, {0, 1}}]}}, 
   {RGBColor[0.6, 0.4, 0.2], Thickness[Large], 
    CircleBox[{0, 0}, {0.9533290445399958, 0.2938303373777811}]}, 
   {PointSize[Large], Arrowheads[Large], FaceForm[None], 
    {RGBColor[0, 0, 1], Thickness[Large], 
     LineBox[{{-0.8677632730768282, 0.766044443118978}, {
      1.3491899657468975`, -0.03463655171763691}}], 
     {RGBColor[0, 0, 1], 
      PointBox[{{-0.8677632730768282, 0.766044443118978}, {
       1.3491899657468975`, -0.03463655171763691}}]}}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
     LineBox[{{-1.1691342951089922`, 0.4999999999999999}, {
      1.3390380723176694`, 0.12717688206849648`}}], 
     {RGBColor[0, 0, 1], 
      PointBox[{{-1.1691342951089922`, 0.4999999999999999}, {
       1.3390380723176694`, 0.12717688206849648`}}]}}, 
    {RGBColor[1, 0.5, 0.5], Thickness[Large], Dashing[{Small, Small}], 
     LineBox[{{1.3390380723176694`, 
      0.12717688206849648`}, {-0.8779151665060564, 0.9278578769051113}}], 
     InsetBox[
      StyleBox[
       TemplateBox[{"\"\\!\\(\\*SubscriptBox[\\(P\\), \\(2\\)]\\)\"","\"*\""},
        "Superscript"],
       StripOnInput->False,
       FontSize->20], {-0.8779151665060564, 0.9278578769051113}, {0, -1.5}], 
     PointBox[{-0.8779151665060564, 0.9278578769051113}]}, 
    {RGBColor[1, 0.5, 0.5], Thickness[Large], ArrowBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAnq+KovFv1z9Z/kVAvurkP3oMozb7
/9Y/ddlUye+Z5D9kp4ryo5HWP8DN4guTSOQ/0D1hqe4k1j8Y8yUdqvbjP3hM
kyPeudU/YyPrFTek4z+80scedVDVP8I8iBI8UeM/FFzOTbbo1D9RTM4yu/3i
PwhRjVikgtQ/XaL7mbap4j80j/DbQR7UP93PrW4wVeI/sEnYaZG70z8cjtPa
KgDiP3AxCImVWtM/WpCeC6iq4T/g5ha1UPvSP1lAdTGqVOE/YLRdXsWd0j+d
ZeR/M/7gP6iS6On1QdI/TbiQLUan4D8Qd2ax5OfRP49fKHTkT+A/iOwZA5SP
0T92uKggIfDfPyj3ySEGOdE/iL9Tg5k/3z9IQ7NEPeTQP3ogN5U2jt4/9J95
lzuR0D+wctXg/NvdP6DFGToDQNA/f9Yw9vAo3T8Y0raBLOHPP0sOrWoXddw/
6DWHaO1Fzz/0dPHYdMDbP6DpDiJNrs4/MNHK4A0L2z8YJv6PTxrOP8IHDSfn
VNo/oLkxfPiJzT8orHRVBZ7ZPzA0mphL/cw/jHGIGm3m2D8wsCN/THTMPzd8
eikjLtg/UDiesf7uyz9LlAk6LHXXPwjMppllbcs/sTpiCI271j8IApGIhO/K
PyWh/1RKAdY/UEpRt151yj8FhozkaEbVP8DPZ0b3/sk/YvTDf+2K1D/4+cs9
UYzJP/vpUfPcztM/+I/YjG8dyT/C4rMPPBLTPzh8OApVssg/AUwZqQ9V0j84
MtRzBEvIP6LeQ5dcl9E/uLa/boDnxz+z4me1J9nQP0hKKYfLh8c/sVsM4nUa
0D9Yt0gw6CvHP1Q/1v2Xts4/kENPxNjTxj+csaHhXTfNP2BFWISff8Y/4Ob5
Pke3yz/4XVqYPi/GP1HwAutdNso/8FcZD7jixT//p0XAq7TIP/iqGN4NmsU/
vxxvnjoyxz9opY7hQVXFP4XdD2oUr8U/EDtY3FUUxT+DI1sMQyvEP9B67XdL
18Q/Gd/lctCmwj/4qVZEJJ7EP+SmZY/GIcE/yAYiuOFoxD+8Gd+uXji/P9Ax
WjCFN8Q/KrJtiCksvD9QPn3wDwrEP75al6QBH7k/cGp0IoPgwz/dJbMC+xC2
P6h+jNbfusM/kubLpykCsz8Da68L
      "]]}, {
     {RGBColor[0, 0, 1], PointBox[{0.725162079337565, 0.1907390945278915}]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], 
      PointBox[{0.4141196913085011, 0.2646598394275182}]}}, 
    {RGBColor[0, 0, 1], InsetBox[
      StyleBox[
       SubscriptBox["\<\"P\"\>", "1"],
       StripOnInput->False,
       FontSize->20], {1.4490806919932218`, -0.03931018092649788}, {0, 0}], 
     InsetBox[
      StyleBox[
       SubscriptBox["\<\"P\"\>", "2"],
       StripOnInput->False,
       FontSize->20], {-0.9205526212154705, 0.8509755017671382}, {0, 0}]}, 
    {RGBColor[0, 0, 1], InsetBox[
      StyleBox[
       SubscriptBox["\<\"P'\"\>", "1"],
       StripOnInput->False,
       FontSize->20], {1.4375728350397994`, 0.1442326885663884}, {0, 0}], 
     InsetBox[
      StyleBox[
       SubscriptBox["\<\"P'\"\>", "2"],
       StripOnInput->False,
       FontSize->20], {-1.248006595781502, 0.5614748744335861}, {0, 0}]}, 
    {RGBColor[0, 0, 1], InsetBox[
      StyleBox["\<\"C\"\>",
       StripOnInput->False,
       FontSize->20], {0.6996855202902362, 0.12019871645187064`}]}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], InsetBox[
      StyleBox["\<\"C'\"\>",
       StripOnInput->False,
       FontSize->20], {0.40309259620413757`, 0.19047491391323787`}]}}},
  ImageSize->600]], "Output",
 CellChangeTimes->{{3.7920709933336167`*^9, 3.7920710264551854`*^9}, {
  3.792071161758315*^9, 3.792071164708805*^9}, {3.7920712041293945`*^9, 
  3.7920712224595585`*^9}, {3.792071309062477*^9, 3.7920713478777747`*^9}, {
  3.7920713856265135`*^9, 3.79207140858951*^9}, {3.792071445494092*^9, 
  3.792071567004437*^9}, {3.792071603692093*^9, 3.7920716281245537`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"export3", "[", 
  RowBox[{"\"\<1110_caustic_progress\>\"", ",", "causticProgressPlot"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7920686481079397`*^9, 3.7920686729959726`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ACT EKG", "Subsection",
 CellChangeTimes->{{3.7920945314260054`*^9, 3.7920945393952923`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"angularProgressPlot", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"getAngularProgress", "[", 
     RowBox[{"1.5", ",", 
      RowBox[{"\"\<degStep\>\"", "->", ".25"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"LineLegend", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", "16"}], "]"}], "&"}], "/@", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(P\), \(1\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(P\), \(2\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(P\), \(3\)]\)\>\"", ",", 
          "\[IndentingNewLine]", 
          "\"\<\!\(\*SubscriptBox[\(X\), \(11\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(1\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(2\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(3\)]\)\>\"", ",", 
          "\[IndentingNewLine]", 
          "\"\<\!\(\*SubscriptBox[\(X\), \(100\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(i\), \(1\)]\)'\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(i\), \(2\)]\)'\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(i\), \(3\)]\)'\>\""}], 
         "\[IndentingNewLine]", "}"}]}], ",", 
       RowBox[{"LegendLayout", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Column\>\"", ",", "1"}], "}"}]}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"Cyan", ",", "2"}], "]"}]}], ",", "\[IndentingNewLine]", 
       "Red", ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Dashed", ",", "Red"}], "}"}], ",", "3"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Darker", "@", "Green"}], ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Dashed", ",", 
            RowBox[{"Darker", "@", "Green"}]}], "}"}], ",", "3"}], "]"}]}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", ".33"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"GridLines", "\[Rule]", "Automatic"}], ","}], "*)"}], 
    RowBox[{"FrameStyle", "\[Rule]", "Medium"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "360"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "180"}], ",", "180"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "180"}], ",", "180", ",", "60"}], "]"}], ",", 
         "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "360", ",", "60"}], "]"}]}], "}"}]}], "}"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{"Black", ",", "16"}], "}"}]}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{
        "\"\<leader \!\(\*SubscriptBox[\(P\), \(1\)]\)(t)\>\"", ",", 
         "\"\<followers\>\""}], "}"}]}], ")"}]}]}], 
   RowBox[{"(*", 
    RowBox[{",", "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Angular Progress for N=3 Orbit Points\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Large"}], "}"}]}], "]"}]}]}], "*)"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7704037221752553`*^9, 3.770403726928547*^9}, {
   3.7704041746281548`*^9, 3.7704041825922933`*^9}, {3.7704042208991213`*^9, 
   3.7704042464506283`*^9}, {3.7704044495754557`*^9, 3.770404451777567*^9}, {
   3.7704052765722136`*^9, 3.770405402706102*^9}, {3.7704054685645566`*^9, 
   3.770405472218646*^9}, {3.7704055059247084`*^9, 3.770405538698798*^9}, {
   3.7704055695724087`*^9, 3.770405603289918*^9}, {3.77040563959332*^9, 
   3.770405733482417*^9}, {3.770406373697879*^9, 3.77040640748277*^9}, {
   3.7704067266184783`*^9, 3.770406740282447*^9}, {3.770406805819256*^9, 
   3.7704068785310144`*^9}, 3.770406921459242*^9, {3.770406952716015*^9, 
   3.7704070023893156`*^9}, {3.7704070467430143`*^9, 
   3.7704070500052905`*^9}, {3.7704071813182464`*^9, 
   3.7704071947403307`*^9}, {3.7704073761011267`*^9, 
   3.7704073778664064`*^9}, {3.770407938574337*^9, 3.770407943852261*^9}, {
   3.771510401960049*^9, 3.7715104353210816`*^9}, {3.775408972513213*^9, 
   3.7754089934588523`*^9}, {3.775409063122099*^9, 3.775409067523077*^9}, {
   3.7754091052104435`*^9, 3.775409125674662*^9}, {3.775409199292143*^9, 
   3.775409202482159*^9}, {3.7754092331720185`*^9, 3.775409251865116*^9}, {
   3.7754094719756618`*^9, 3.7754095247844067`*^9}, {3.7754095989372787`*^9, 
   3.775409739312108*^9}, {3.7754097810061493`*^9, 3.775409815121562*^9}, {
   3.7754098963842025`*^9, 3.7754099241131706`*^9}, {3.775410063122026*^9, 
   3.7754100838651357`*^9}, 3.7754101786575947`*^9, {3.7754102342021923`*^9, 
   3.775410238400185*^9}, {3.775410301001596*^9, 3.775410307936453*^9}, {
   3.787481283729336*^9, 3.7874812954697204`*^9}, {3.7874822924748807`*^9, 
   3.7874823249224052`*^9}, 3.78748237461092*^9, {3.7874825453437266`*^9, 
   3.787482547475879*^9}},
 ExpressionUUID -> "f3ebe730-1b4e-4fd9-93e5-47a37ee4ca65"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxt3F+sHOV5x/GBmrBN3XjaOGHTuPFAHNgkTjyAwUswnBcweBMcewAHNonB
A9jetTm2x/budqWinvcCKecCiblAyl5Y8lygci6Q2Asu9gLpjFQuVioqIwWp
5wLJU8lqzgUqU8VVtq1b1+zzfS2dR+Xmx4f3ed93npnZPXv+MHe+cvbZ47d6
npfd5nlf5v//T7HQ+VtJcbnwd9eu3/jnMl5f+NptkuJq4fJ/fzn+Bb66cPB/
v/Qf8GxhcIuk+NpC61ZJNjTXSIlbze9ukRRvMhdJ8VfMv3y5/PXbcM38PSn+
qjl8i6R4s3meFH/NBLdIin2TkuK/MMV8fee/NM+R4q+bZ0jxVnN1Xu/8DfP7
ubfib5q7SPEd5t/n4851E5Pib5lyPu78V+YgKf62eZIUbzNPk+K/NreR4u+Y
x0nxdtMixYG5Mt8P28D8OSnjd5r/mY9je6f5DinjdzGO7V0b0/uu+a/5uPvv
3zVbSBnfIevdSBnfYf7zy/Il7H3P+KSMf8/8KSnjd5v58tfd+N3mFlLG7zHf
JGX8HvN1UsYb5j/m8914Q9ZbajD+ffM1Usa/bzaRMv4D6edGyvgPpN5i74ey
342U8R+aPyFlfCfH78Z3yvlc2sn4j5j/I8Z/ZGbzcez9mPPrxn9s/jgf/zHj
u8xXSBnfZW4lZTxkf2xC6e9GSr3KPJT5OfbuNfOX+3Vs7pX9bqTMY3wJ5/fK
fqvYu0+u542U+fcxH1uV+X1y/nLs3c/9fj/z72c+tvfTL84Zz7G329RImb+b
/rHdzXyc75Z+VrH3wMY0DzAf2wfoH+eM527eg5w/N//BjWkfNLeTMl+lt4fj
38O8PXJ+DLZ7uJ9xvof+sdeU+hsp85vy+jHYNuX8Wpw3Zb8cew9xfz3E/Ifo
H1tscf6QrJ9j7yfcf27+T+R830iZz/gSzlV6D3P+sHmY43+Y+dji/GHpJ8fe
XvbHZi/3z17mq8z3Mh97j3D/PcL8Rzh+bFXmj3D9sfeo+EbK/Ec5fmwf5f7B
OfU59haYv8D8BeZju8B8nDOeY8+Ib+Q8AhxgY+T8LODYyP0SY6syU5kzfxWX
Rs5Pib3HNmag0jzG+cTxY3J8MbbY4gxnOH+M9wtcMl66fR/fmMHjsl+AzeOc
TxzjGFuVmcpcZcn80u37BOf/CfZXaVTGKu0TvL5w9oSc70s4V1k+IeejxN4+
9t/HvvvoHxtscEx9jC22OFOZMz/HpUrvyY0ZPMn9h43KWKVVmTE/wznOcfmk
nJ/Lbt+nNmbwFPtjozJ+SvqJsVWZMT/DucpSpbef1+9+9t/P+cdmP/cfjnGM
LfUWZzjDOc5xyfwSe62NGag0LfbHcUuON8aWcYsznOEc57hU6f10YwYqjcpY
pVWZ/ZT9cY5zXOLS7fsz7v+fsS8OsFEZq7QqM5W5ylKl9/TGDFSap3n94RjH
2D7N10ecMZ7hXGVJ/WW374GNGag0KmOV9gDXH2c4w/kB7j9c4tLt+3PO/8/Z
V6VRGau0zLc4wxnOVZYqvYO8/g6y70GuPzbY4BjH2KrMDnL+ca6yVOkd2piB
SqMyPsT+2GKLs0Psj3PGc1yq9KKN6asMVIaRrBdigw2OVMYqE5VWZaoyUzlm
vzHOcY4LlaXKSqX3zMb0n5H1fByoDBkPscEGRypjlYlKqzJVmbF+hscqc8Zz
XKgsVVYqvWc3pq8yeJbXAw5VGpWRylhlwnoJtipTlRn1GR6rzFUWKkuVlUrv
Od5/nqNv7ONAZajSqIxUxioTlZb9LE5xijOVY5W5ykJlyXolrlR6h+n/MP1j
HwcqQ5VGZaQyVpmwfoKtypTxFGcqxypzlYXKUmXF+hX2frExfZWBylCl+QWv
fxypjFUm1CfYqkxVZirHKnOVBesXuMQlrnDl+n5+Y/oqA5WhSqMyel7Wj3CM
Y5yotCpTlZnKscpcZaGyVFmp9F7g/n+BvrGPAxzgEIfYYIMjHOEYxzhRaVWm
KjOVY5W5ykJlqbJS6bU3pq8yUBmqNCojlXGb/nGCE2yxxSlOcYYzPMZjnOMc
FypLlZVK75cb01cZqAxVGpWRylhlotKqTFVmKscq81/SPy5wgUtc4gpXru9f
cf//ir6xjwMc4BCH2KiMVMYqE5VWZaoyUzlWmassVJYqK5XerzemrzJQGf6a
/rHBBkc4wjGOcYITbLHFKU5xpnKsMldZqCxVViq9IxvTVxmoDFUalZHKWGWi
0qpMj9A/znCGx3iM8yN8f4kLxgtcMl7iivHK9f0i9/+L9K0yUBm+KOuF2KiM
VMYqE5VWZaoy4/gyPFaZqyxUlior1quw9xL9v0Tf2McBDnD4Ev1jw7jBEY5w
jGOcqLQqU5UZ+2V4rDJXWagsVVYqvaMb0z9K/zhQGao0KiPmRzjGMU5wgi22
OMUpzo7SPx4zPsY5znGBC1yqrFivcn3HG7MWy/wa9lXWVQYqGypD1gtxU6Vh
3OCWykhlW2WssqsyUTlkvyG2KpcZX8apypHKTOWKyjHrjfFEZc54jqcqC5Vr
KkuV66y3jiuVM8Zn7rq/vDFrKv2XeT3guspAZUNlyPwQN1Uaxg1uqYxUtlXG
Krus18WJyqFKq3L5Zfn56G9wqnKkMmO/DK+oHKucqMxVTlUWKtdUlirXOZ51
XKmcqfRe2Zg1lb7KusrgFb4+4IbKUGVTpVHZYr0WjlS2GW/jWGVXZUJ9god4
iK3KZZWpypHKjPUyvKJyrHKiMlc5Zb0pLlSuMb6GS5Xrr8j9+3tcqZyp9F7l
6/+r4ppKn3Ef11+V9e/AgcoG9Q0cqmyqNCpbzG/hSGWb8TaOVXZVJiqHKi39
LOFl/Bucsl+KRyozlSvMfxeP8ft4wnoTnDO+iqeMT3Ghco3xNVziEq+rrFTO
VHrHuP7HxDWVvsq6ykBlQ2WosnlM+t2DDV7ALY6nhSOVbepfwLHKrsqE9RI8
ZP7fYKtymfplnOIUj/AIZypXWP9dPFY5Yf4E5yqnKguVayrLY/L3HZfxusqK
4/kCz1R6x+Xz4I2cR+241N+OfbwF14/L8ddxoLJB/T04VNlkfhOb43L8C7jF
/P04oj7CbZUx84/iLvM7OGF+gocqLf1bvMx6v8Ep672FRyozxi/hFea/i8f4
fTzheCY4Py5/77eKp4xPcaFyjf3+GZfUl3id/X6PK/wFntHvDHsn+Psnd/1P
mPmf+95+QuwzvgXXT5j5n/vegYMTsv523DjB+z8OGd+Fmyfk7zv3YHNC+l/A
LfbfjyPGD+H2Cfl9bRvHOMZdjq+DkxPSb4KHJ8w/zF//2Kpcvjmez53enC8e
3VxfnN3cX7xy8/jE45vHL56ckL+/aeH8Zv/i6c3zIy5unj/x2s3zKy5vnn/x
OtfrDlzdvH7i2c3rK/Y64uvHxTX8R+x33P0jrnfc/SUOOu7+Ezc67v4Uhx05
rwVudtz9LTYdd/+LWx33+hBHHff6Ebc77vUljjvu9Sfust8IJx33+hUPO+71
LbbUW7yMhzjtuPcP8ajj3l/EGeMxXmF+G4877v1LPOm49zdx3nHvf+Jpx70/
igvWC/Fax72/ikvGA7zece/P4gr7eNZx7+9ir+ve/8W1rqw3Oyb2u/y8CNfx
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
MDyfWTwcGJ7fLH59YHi+8+r/AbIOQa4=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1]], 
        LineBox[CompressedData["
1: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
j4+92POdkWdS//3tl+l0vjNwytZgWC1Z6QzpTdXqlWfIHBe0PSs3nLCbzHXB
ocIPc/svJcMFN1f17mGQROa74DpWa8m8yHIXBB49+/WnNTnPBe+6H/9YPJw9
3wXjtHx8cruz57vg7M2Jmec/gc53RVKXvef71ZK5rliWOidl8zkyXGH4wOqD
xz4y3xXjEuqyrVaR5a54EP+iwlNCznPF2obJyq0hZIUrvlZO99JwJCtdEdSz
MPO0MXv+DIT/S61aPZA9fwbm698MGvHHjs6fgbQno4YsvEvmz8DLL2Fl1nvJ
8hkY/8Ne11VGzpuBjKZH5sWuZMUM7IJnQ9IwsnIGqvo1689vnkbnu8Hzu3rz
yytkrhtu/fw0ads2Mtzg+Lu0695UMt8NoSERHr8dyHI3jGwtGJY/hJznhnrZ
t8wdTVPpfDcE/Zo5V3mVrHSDQQdPT5xL5rhj78oBG2ZJyFx3rLurWzfbjQx3
+D0N1Pwwksx3xyjFv/CCdls63x2+DdkvimrIee74fbS87PsBssId4xPiNJf+
R1a6Qy7IGBwaQuZ4AHNbWmdbkrkesF/36PkjdTI88Gl/vx7z3k2h8z1g3Za6
l19BlnvgV8Duz8t3kPM8kPd44JhmGVnhgbslPZbm8MhKD/hNDfKWG5E5M5Eb
nVu9vweZOxOz1X87q72aTOfPRMg7s3+HL5D5M+HjtdBp1TayfCZeLtkrKJCR
82Yi8PO1M7+8yIqZ+Hl8weqV48nKmahKPz3RV43M8QTPrkQjoHESne+JZxub
pBuukuGJ6muTFN33kfmeME5Z7lUiJ8s9catrx4r14eQ8T/Q9+7SqyJas8ERH
+vKFrTpkpSfqvif0mt1uQ+fPArdf+33jOjJ3FvTti9wGnSZjFt5Ne/l4whYy
fxb6n/z9fZGMLJ+FK7ZWPbv5kfNm4VncgeUnLcmKWXj/dcaHHC2ychbmj3pU
cLjFms7nYYZd3YTmWrIGD8Gmm9SiT5K5PHSb3PuwyhayGQ/WjR/W16aTwcPf
7utt7wWQeTwMuPLL+I8Nmc+DrO3SG18dspCHvPk6H+t+T6T35+F+ccWlrGfk
bB7O9uzaEl1OzuPhv5rCnol7yCU8/OZ0LN++mKzgYT33Iqc1llzNw+uQ4f8y
XMlKHnoVnO6vb0Ru5iH2+4rK3+pkjhd257aUtjdb0fxeWHatJGFELZnrBb2v
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
B7sq2PyLkb3kyd7wS2z+xXj6bI2d7Aqb/87n8QO/rbrG5l+MYx+h2FvJ5l+M
r3f8j565yeZfjADNExXVVWz+O5+nyPj37g6bfzHqLB4k/6tm89/5eY3g9Bt8
n82/GCGjp34c/4DNvxiRW+p7uDxi899ZDzWNj6hn8y/GtJ/7+mc8YfMvRsyw
A2rrn7H579yf2oXggy/Y/Hfe75tElSsv2fyL0drLve/z12z+xahJ67ag7Q2b
fzHE3V2DBjSy+e/Mn8aTgvEf2PyL4bV2TYLbJzb/YnzeYXcw7gubfzEu1ylT
Fjez+ZfAvkZ4Nu8bm38JliX823yxhc2/BDVuR3o8+8HmX4Jon8OaHW1s/iX4
rQrF0N9s/iWoU7840PYPm38J5Dlrh4T9Y/MvgdMX43sLusQx5kpwQDnWeU83
8hgJDs8clXmlO9lAApN99+c29iQbd54fqzpDvTfZTIJtZXs/T+hDtpRg/Jft
aUF9yTYSqA3kPJRrkG0lyF/TNvaAJhkSrNxzKfmeFtlRgofDTx7qGER2lcDr
p92nsUPIHhKcf/3JyncomSeBlho/e5Eu2VeC0UcDu5WMIAdKkP7o2JYXI8mh
EpT1i/bWGEPmS3Bv0KJp9vrkGAkq9kyLlhmQBRJIdD9XHjAkJ0uQk/5n9gtj
slCC9285cwaZkqUSHL9+oNbTnJwhgXpi1cYsC3KmBG9aIsovW5HlEnx2Xcj/
399l/L+XSHDuQ4J82mRylgT+35cYLLAlr5ZgSs/QqPJp5GwJJvrute46nbxJ
Au8tFsedHcg5nZ+H0QOfrnYi50rwkzO7vNaFnCdB79+lccPdyPkS1N8KeJrg
QS6SwMBpkNFpT/JhCU4teRjWw4tcIgHXvHhhgA+5VILr5Y07DvqRyySYeuXv
hX8B5PMSTJ6x56t/MFkhwQuLU/YloeQrEow8FnxBLYJcKcGYow0pCZHkKgnW
hzTwb0STqyVYe15vn1EcuVaCBdOPT88WkOs63z/t3oyfieSnEqzZ0O8GP4Ws
lODHIqvbVWnkBgn2J/nGTBGTGyUoOH4p97CU/EmCCY+HL+XOJjdLEC73Mt46
h9wigaNg3R6NTHJb53mbQlpWLyB3SOCyJv3W9wVxiv83R4rhjYo1okyyihTr
hKr2n+aQVaUIuDz3UfRsch8pNpd8tK2TkjWkqD1+jz9DTNaSItjL1fx0Gllb
ivrkbrkjU8jDOr9f5r82K5HMlaJilXHrx3jyGCn0lvS44B5LNpDiRd3PmsIo
srEUSZn7RnD4ZDMp5Btt1vuGkS2lKNVM618QTLaRgm+3ZOXXALKtFKs0rd9O
8iNDitOZV9QXeJMdpRCveP3+wiyyqxQZkRVR7R5kDyl6Gv6JMHMj86QYpdhX
GeVC9pUi3NNocbYjOVCKJ+dSZWemk0OlKP9WtOTZNDJfinsdaZs7ppBjpFjU
Urxq0CSyoHOeygI3o4nkZCnSaupLJ1uQhVK8tdA57GhGlkqxdoCs/wwTcoYU
u9ZOuOpiSM6U4triO/sxlizv3Mfwb5ssxpCXSJFimJLCHUnOkqJ5tKl6z+Hk
1Z3f3w+8dzrkbCkmqZ3pXzGYvEmKEznnjTZpkXOkGFaQOpvfn5wrxcvpn6r0
+pLzpDjV36FbQ29yvhSFMYLm7T3JRVKEcswS3FTIhzuft95++jcOuUQKkWKA
+4Y/sYxLpYj8/CjA8Be5TIrW/+ZYn/1BPt/pxjVl07+TFVI86u1WpGgiX5Hi
oTD93sRP5Eopnr+N6pLfSK6Souhw/Z+eb8jVUpQZaq6Lekmu7fz8jt0398Qz
cp0UApl0ya968lMp2oeWpFo/JCulWP/heHvCPXJD5/vP63i9/g65UYpn24Z/
OHqT/Knzvnsdvqa4Rm6WIj1ff8L1S+QWKYzvfXpVcZHcJsVsJ/01JWfJHZ3z
dS95teEUmSPDlNM9NwqOk1Vk2D50orv5UbKqDNrXy05+OkDuI8OPf4lztxeQ
NWTofTll2uQ9ZC0ZDrzpm38rl6wtQ/3MYjfPHPIwGTZNKrpTsZHMleHCGtMb
euvIY2Ro05tSPWcl2UCGKt3o9AtLycYyHO9z2a1ZTjaT4b7J47r+mWRLGXxS
EotGzibbyPDM13/qCDHZVoYTNfMH904hQ4ZRd7cdfxlPdpShMm/QsoIosqsM
mTafVfzCyB4y7NKbt7MpgMyT4W9w0BmpN9lXBu458wuvPciBMqxO2qhq60IO
laH/16utmdPJfBnMhuyoL5hCjpGBc9qu2ykrskCGp1PUzh82JSfLYGDt6bJi
HFkow8RbI165jSZLZZg3zvBy8zByhgy/DNN15g4iZ8owdMTE/m/7keUyiJvW
3bDoRV4ig+v5uPCoruQsGTSHjXkt/B3DeLUMauMXRYe3kLNleHt61utxn8mb
ZLBa6xB+7w05R4ZB2eev+z8n58pwMmt971MPyXmd+/R+qtp0h5wvg/P+6zs4
18lFMizoEbHx/UXyYRlqZkWeKjpFLpFhbsagS7ZHyaUy6I0el5hfQC6TIbx0
SeDzXPJ5GXYesTF5v5GskOHIqKgFl1eSr8iQM2FYXdIicqUMUxdlnFfOJlfJ
8PiyfB83lVzd+fnOsv89LoZc23l/c96O/R1ErpNBQ1C7eMMs8lMZMra9ifji
SFbKYH9pfzf1yeQGGdZ4HTryaTy5UYZzh75vXDWa/Klz/2qChneDyc0yJN1I
uPpPjdwiw7Cnmf41/6IZt8mg5at2LPg7uUOGbocd3297S+ak4+RBnX5r6skq
6fi1Ksx0QhVZNR2LVdt9l18k90mHzTGflStLyBrpuKqseTxpL1krHZEz5vtu
3EjWTkd5fU2vzUvIw9JhHVwyYKqMzE2H4Ez6xhWx5DHp8Fk+9WSGH9kgHae3
TDqu6kQ2TkfEKNy3tiSbpaPnhCSJymiyZToKnZ90TelPtkmH844NvYT/ohjb
dn7/0ljDPp/JSMfqU7/08JjsmA632AfPel8nu6Zjy4aogKQTZI90SLp1Lefv
JvPS4VrTNenDSrJvOnq3rHzeM50cmI7MU/yqMj45NB1BF1YP+eNG5qfDYdyt
F7WW5Jh0WAkupWE4WZCOW8t/eKMnOTkdUZ7CmQ+aIhkL09FFRSOCU0eWds57
dMmVS+XkjHRkr375U7eQnJmOkfVVJQPWRir+D3FFjyM=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1]], 
        LineBox[CompressedData["
1:eJw122lYjevfxvEkJCIJyZShpEGTFFJnSnNpnodVq3lcrSEhZIsyZw4hlEII
IXPmUiiSzCFkLBRl6ln/5/5d+80+PsfVtc77e6/2PrYXe2x4skekrIyMTH4v
GZn//Z39JdKwaS4Uh4FTraXOo5rSwWuZmyy3r375c1QRc4ul65HMa1cuMbdZ
9pFTCpVpZG63THYVuDxoZe60bMj64YE+4eQ/ltNjriRjNLMM7CdVv6ifwiwL
3wurh/91ZJbDolO8mnIec28otK983ieVWR72dbLxH1YyKyCtp+wl3m7m/ti2
Idw3/gTzANhFPnimcJNZCWtP/dLAY+ZBGLAsUrv/Z2ZlOOzY0FfQzTwYJbZP
ZBMH8ckqUDSKF8mNZx4C3jjcN53CPBRnt0w7Lj+beRg8smaeTPNmVkXMmdSN
KyKZh8MqoHTwTAmzGm4+quu7OZN5BKIcFnpt3Mg8EnVNdY+n7WUehVnHPFeu
LGUejRXyXV5ZF5nH4N+qYH2jGmZ1lB9UG7jmETlDHb1KbN5ve8vOx2K4V79j
Ad/Z+VhoPE33qetm5+OQWBV7vbtfBJ2Pg06/mOZ3w8gy43Hh0PeNq8az8/FY
437o8KfJ7HwCrK/s76k4nZ1PwMJtb0K/2LBzDQyJqV+6YQ4714DTvLcTf/uz
c008zp71e1IEO9dE49WMfepJ7HwiZi5JO980l51PxBajkY3xS9i5Fg6PC190
dSU718Lew2Z67zey80mILsv0e57HzidBc/ykuIJCdq6N9LShV8yPsHNt1M8J
O1V8ip3rYFnv0I3vL7JzHdjtv7lD5iY718VJj6fyrXfYuS7OZq9XONXAzvWg
mnP+ps9zdq4H47XWIffesPPJeH96zutJn9n5ZAycvIQf0s7O9TF05ITXgt/s
XB8O56NCwmUj6dwA4tZ1VcZ9yTDAmDFTB70dSM4wwG/tVLX5Q8kVBkifpH21
bSS7bwiz6jGvHMez+4bQMXW1WzGJ3TfE6xn9zpfos/uG6HnasucpE3bfCIbD
dzwqnMHuG2HI1+sd6VbsvhE2xW+UN7dj940w9pzhhdfO7L4x/gb4nxF7sPvG
KNBYsLPVl903xiKzz3Lewey+MW7kD11eGM7uT4H23W3HX0az+1Nwqm7hMIVE
dn8Knnn5zBwjZPenwDMxrnjsXHbfBA16jxsHpbP7JjjV/6pjWwa7b4J7o/ip
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
9dKlrN8d1VPT7kctYf3uWH6s1tZhMet3h4vDRzOdhazfHdqr5hb2X8D63fGk
RTP7cxrrd8e2NSVPb6eyfneMMr6w67CY9buD/3PArdVC1i+1kX9AvID1u+M/
Zy8nhyTW74Gxm8/kaiawfg+sHW5t0TOO9XsgLf2Q6Yto1u+BxNuHM85Gsn4P
nOT1GrKZz/o9cLQosS0pjPV7oFffvQPsQ1m/B7adCY5XD2b9HnDaHCjbGcD6
PTCt0/vuHT/W74Ehub3vFPiwfg/sDNb8Nc+L9Xug0CJxjqsH6/fAmWEbqsa6
sX4PeCx3jGh3Yf0e0LvqOOKGE+v3xJr02R+2OLB+T5ws/VgTZcf6PVGZ/emi
yWzW7wlV445zPa1ZvyfEF0sv1YL1e+Js+83reRas3xMvTV5WRZuzfk/098y/
aTid9XviSOz+s79MWb8nFl9cv+uKCeuX7uf+TVphzPo9MX/UfxPnGLJ+T7hr
l10drM/6PTHMUMPyoS7r90SZMn/zNm3W7wm7Xz8vB2ixfi8EmcVVqGmyfi88
H2W++tF41u+FHg8/qm8dy/q9wLf9Ps9zDOv3wrYXNzcMGMX6vTD9v8dRlWqs
3wsBXlu/Zqiyfi+M2xk52Wwo6/fC+N1Fql8Gs34vvBKePbR3EOv3Qn1Txyvv
gazfC34zSs70UWT9Xqgw09YpV2D9XnhXc8ooWp71e+GE7MZqld6s3wviB11t
FT1ZvzcGK6jviu/B+r3R0GfKHZXuCOr3hsOx4PTzf8gG3lhrfnFf+C8yvFHS
T2DZp5Ps5o3tmcsdD3aQed7416JY4fSdLPCGQK/fjo9t5Axv9Khb0LDiCznH
G5UnvBM1P5HzvXHr8/KAy+/Jpd6QL+zIDXhHrvDG3teLx39rJtd6wy/xd3vW
K3KTN/5uMpEf2URu84b2oO++R56RZXwwsq71ucUTspIPDtc+33q7kfX7wPRT
7MKABtbvgyFlhivf3Gf9PhBb3i5PqmP90vPuqp4/7rB+HwSvOxS5oIb1+2D4
yo+N/6pYvw+2+nb5Ztxk/T7Y3T3tWfc11i99nq4+/IVXWL8Pyv4cf915ifX7
YMGdxf7CC6zfB2HKxRffn2X9Plg9LEAxtJz1+6Bif7nlvZOs3xexdx/PsT7B
+n3hVFZteryU9fuC57vy6+gjrN8XPpF95644xPp9ESajf+VrMev3xbSV9TW+
+1m/L94m3sg5t4/1+8K35WqfUXtYvy8e1C7SSd/F+n3hwdvR0biD9fsivvNo
qPE21u8Lt/c2/FVbWL8vYkzru5o2sn5fnAitGjllPev3Re2IJdcz17J+X3RN
cPh8bxXr98PiH6FrRq9g/X7ov659V/Ry1u+HRYaaI44sZf1+2D9B7vfXDNbv
h4nCNabGi1i/H0oKSqtSFrB+Pwxf5nTwcBrr98PqBu17byWs3w9yygrTR4lY
vx82q2987CZg/X4oVgkpWZLI+qX7r9qKjsaxfj/MUL10/XE06/dDzoZJ/2Qj
Wb8fThovctAKZ/1+eLLl527HUNbvD4ur57tig1i/P8KeN7ku92f9/ih5Gr51
tw/r94eeoV71SU/W748R6UNeVbqxfn/0Mnt6v9GF9fvjVqRu7htH1u+PjaY7
NFvtWL8/epwtSu2wYf3+iEo/u7jTivX747KpxrROC9bvjxeicdvbZ7B+fxzQ
ebDtsxnr98fmZHv91yas3x+veye7PzBi/f4YPHD8z6v6rD8Aa7drDDuqy/oD
UOI8unjLJNYfAIOO7fnzNVl/AASTBv4MGM/6A5D69P4eU3XWH4Cn7ZpblUax
/gDMeKl9+81w1h8AQ523004PZf0BkJO3vp85mPUHoO3dgHWuSqw/AG49f4Wr
KLL+AEx+u8WmoS/rD5D++8F/0qberD8AR/tt6+3ak/UHILB+ZV1PGdYfgNx5
totP/uFTfyA2Kl2V43eRlQKhN+qhT/8fZPVAaAw0izv2jWwQCNkL84w9WskI
xJ+nikVfPpLdAsFfYH1meQuZF4jGJNsQtTdkQSBG3xq98sBLckYgXJxKDaY8
J+cE4nnlmdlnH5PzAyGTV39+xkNyaSCS5MUryu+TKwLx357mXQa15NpAVJc4
te2rITcF4s6S/QLlKnJbILTfVSmnX2f9QYhOCKtqusz6g7D18pfluMj6g+Df
r2rmjrOsPwiLpoxsajvF+oPwbUZLqNUJ1h+EV4tljq4+yvqDcKtXv0v3DrH+
IMhdWrxkcDHrD8KvqqJ3rgWsPwhWpXmvMvNZfxA+5dvxT+ax/iAIi3gBTbms
PwiWLxLLe21m/dLP23slUWM96w9CWfmiOMs1rD8IQ+av2eW5gvUHQ6mzoCts
GesPxtERs+PjlrD+YJy/fOpVwkLWHwy1+wpzYuex/mBE+w3fHSph/cHwXZFx
eU4K6w+GSuO+gmmJrD8YZ38enDoqlvUHY/DzjMhfEaw/GAsv3xtdx2P9wRg9
aKDbniDWH4xzMRFv4/xYfzCKFlfc0fNi/cHSP6/e7Xg/h/UHQ/1mp91uJ9Yf
jHmK4cdc7Fh/CAZ2vh/VMYv1h2DUoEnzNluw/hAUTxIcmTyd9YfAfdzN4goT
1h8C/tGPHk6GrD8E1UPctt7RZf0h6P96OM9Ri/WHwG6X+taL41l/CFaLPmno
jGH9IXBpLOtYp8b6Q9A8KbT10xDWH4IjNgt/Ww1i/SHoMcRZdl1/1h+CVvXj
H+/3Yf0hGNPPYrdST9YfAuUBGnKz/4VTfyhKBFY9UrrISqH4/E1p4aZ2snoo
HhidCD7aSjYIxWiFluzLH8gIhfC1YvOtN2S3UHT3UfeqbiLzQpHYXHbhyhOy
IBQDbf/IHWsgZ4Ti4NoLilvqyDmhWNzkfS6lhpwfiqM41WZ9k1waiunHwnL6
XyFXhIJnFZ9efZ5cG4ocFfGWjNPkplCs4h24pHOc3BYK2bArjTUlrJ+HXKt/
l/lFZHkeZP+NDWzbw94HDy2mqUuFeWRVHgbKXh/+YQt7Pzxo7vH947OerMWD
+qx2+TOr2PviYXXBk5FKy8lmPGifu6ESlMHeHw/j0VyTN59sz8NYiwb1e2L2
Pnm4tObox99JZD8eXtt+7aMWy94vD381sufo8skxPBx5U7XDKJi9bx4OrhRe
1/Ulp/HgV7CnQM2dvX8edix+qPTHkZzNg5vLt6ZaG/Z98PBrus7HXAtyLg/J
iwb38jJj3w8PPK/1PWWNyMU8XGx9enavDvu+eOgVvPCfiQa5nIfBPrP3nBvN
vj8e5sm7SYxVyZU8BN3+67RzEPs+eYi519bRqUBu5GFtWV9rWzn2/Ur7+kXI
LvsbxrmFB9t3HrInf5DbpM9nHqzU0Eru5KHVenrXuxayTBj637qd/eElWT4M
Y5MmrHz2mKwUhqH3k29W3CerhmFXhazCphqyehhcp7io+V4na4Whjd94qe9F
skEYth6ddfnQKbJZGNIzZzSbHyUjDJkGiz+fLyLbh6Gw8F6+Tj7ZLQzNk7sr
snPJfmEwGXJnYH0OmReGRhM5V8UV5JgwrF0RPGPKErIgDL/ysrfYzyOnheHq
r7GjHFPIGWE4k3V0lVksOTsMsbU7dg4OI+eEQdXRUPGJHzk3DLOWb9641o2c
H4YG/2stevbk4jDc+LnyarkluTQM2T2WPppsSi4Pg/8qxRfrJpMrwvBomGvW
Ew1yZRgOrNDIHDSKXBsGK0W95YYq5MYwGP0uNZ/Rj9wUhn1lh7wny7LvPwyr
51csVOjicW4Lw3Srqby7reTOMOxd8m1/+luyTDjkFcS/Bj0jy4fD6O7tHuvu
k5XCUVexJ/x7FVk1HNf2jLhsUUFWD8e6dx8vCU6RtcJRvXeWzIoSskE4Fgpv
jc3aSzYLx6tl+67E5ZIRjtgjIYuN15Ltw8Ff3vmtaSnZLRwPDtefEs4j+4Wj
37gz4S1JZF44vp2oWm0VQY4JR8fupVUL/cmCcPRyOXMoz5WcFo6YqWuv7bQm
Z4RjbS/RvgwzcnY4lr4c22CjR84Jx8HO7S3vx5Jzw+HgPDYyeSg5PxzTr5jW
1yuQi8Mxot/Mecb/QjmXhuP43D22C96Sy8PxSb/XsIw75IpwDC+w/IxT5Mpw
vBy+ufL8TnJtOGqiTxZ8yyQ3hmNl6bl5L+PJTeF4YqZvnu1BbglHZXSvZ2/M
yG3SzxtQ6NA1mtwZDg2lj/GX5cgyfESkG2jP/BDCWZ6PO3Ye0fF3yUp8uB8/
K+tURlblY/SShMbHuWR1PswnK10evpCsxcf1yT039A4jG/CxPjV2VL4N2YyP
njwrozcTyeAjd9z8vHoFsj0fNrKKGomfgzm78REUPXzD4btkPz5aB8oVbTpG
5vFxY9W2CWM3kmP4yJo+pcpdTBbwMUvurZuGNzmND0nv/ZLtJuQMPviS/1qP
DiFn83Hpa4M4oiOIcw4fEzdnnT1VT87lQ7WHlbjwBDmfj41lF7z0N5CL+aj6
pTTAU0Au5UOj4qf7QFdyOR879unfC9chV/Bxdms9nOXJlXy0CK+73WoO5FzL
x8LrA089qSA38pERwNdcnEdu4kPn2hr/E3PJLXwMDvjXd64HuY2P20qeHZW6
5E4+Mrd8eVrUmywTgYvqucuVmwI4y0egT4DGhT5nyEoR6PFssvvy9WTVCMid
uDt8TSxZPQKxEHSoWZG1IvBj8M5bk1XJBhG43OdD9s0v/pzNIlA19tWk5mtk
RGDxLrnjS7eT7SNwZ+1dw8JkslsE5iQ03rCzIftF4OG/b3lxqmReBHQ+RLX2
/+THOSYCFoZTFCZfIgsi0Pk5yun2enJaBE6I50/4wCdnRKCgb82ITBNytvT+
jFF3tvcm50Sg7zuNNr2HvpxzpX11Jm4zi8j5EbhV9OZhZSq5OAJ7hj9cUzub
XBqByceWbvVSIZdHoK52+AzvVz6cKyIQoxP98t5RcmUE/jy6O+xOOrk2Aqq9
3TfYOZAbI7D84xo9DCE3RSDo/Ju28iZvzi0ROHchR+nEIXJbBH4dvNKqn0ru
jMB6g9pxhiDLRMKpp3dKeV+yfCRian0bb97z4qwUibDPMavDdpBVI7E8vPx3
Fp+sHolRa8bUztQha0WCb6X2ddk3T84Gkbj85+Ay/hmyWSSKfDV+PFpMRiSO
rH/0+dNssn0knpXvCMrvR3aLRGyuelpnrQdnv0gMcNa+0LWZzIvERcVFbcUB
5JhIrN6aN6bfGLIgEtkWU/dovHbnnCY9r/Ec8m8/OSMSqQp6kdvjyNmREP0o
vCIzmZwTiZWn4otMv7pxzo1En20H788uI+dH4uZlH2ejueTiSITu6eEvN51c
GgmrpkTZrK45nMsj8WP2GeXWReSKSKxaN+G5mxy5MhLDFqjdOr/ClXNtJO6P
eplnPZDcGIk0FSvRj00unJsisbNo4sm3auQW6c8fd+yruceZc1sk1Koa7W5M
JHdGYkardcKjI06cZaKgMG3a8pSpZPkoHMp/ciD/oiNnpShMSw96kWZHVo1C
Qt1A5f51DpzVozA4cXR3fCBZKwr/Kf4ef/CtPWeDKPw7f6XkoZBsFoUrz46H
95IhIwo1ai+3W6+142wfBVV+uMbeUWS3KMiaDJhpcMSWs18U7BoV0v5YknlR
qF3gckbl/mzOMVF4f3Lq+OXRZEEUvq4W9Av+a8M5LQpJivptBZvIGVEwi2tN
itEjZ0fBd0eN+bGb1pxzorDz9jz1bD45NwrVtp8/t8uQ86PwtvXS0n+7Z3Eu
joLNDYtbB0EujUJxk0bZv1dWnMujIA79gX/LyRVReBlwP6NEl1wZhQKF29v6
1YNzbRT6ay68M3IhuTEKT/TrlzVNJDdF4brkfVFJsSXnlihsbm7t80uO3BYF
8/iPNoURFpw7o3DngdegAzdncpaJxlon7dp/emT5aNg/vF+ya6s5Z6VoVGjE
n1gsR1aNRuEtjfdbxTM4q0djV/L+iKfvpnPWisaNT/8irULIBtEwdTROOvtw
GmezaIivD/aZ7kVGNK5PcYw4cd+Ms300fuktDB/mQ3aLxi3DlGO+T0w5+0Wj
oWxIUCSfzIvGoi7BJMMvUznHRKNNEn740AKyIBrnzpn6Xe9HTovGkPzBy5J2
mXDOiIbeQe2srcbk7Gg83v34pEH1FM450UBo4VztSHJuNJ6MHu4s6UHOj8aW
smP1PfKNORdH49D+S08rQC6Nxui94bx9r404l0dju6hww/ZsckU0vnyuerVV
n1wZjbFT7susaTTkXBsNn0tBL+OXkhujcdykpkLTgNwUjalnPmqUPjfg3BIN
65ddr3+tJbdFY/yPGSN/gdwZjT0N5otmvdfnLBMD3QfPhld6kuVj8FlDopt4
eTJnpRg0nymbq2ZEVo3B6duJwWcK9Tirx2B2Wu5z45FkrRg0yH7cJt6sy9kg
Bs+2DrwVNYhsFoO1O5ZZ/1inwxkxuFA/XThwENk+Bsnidz67N2lzdovBgn9T
Mzeqkf1i8HDkzRGP907izIuB/RK56jA9ckwMVMd8vjn8rBZnQQwOWVy8/dWe
nBaDhTM2DX/8aCLnjBhsku8RfTWBnB2DDsVdn3b1IOfEwM9tp19Iribn3BgM
jwm+/d2AnB8DsXPP5+7VGpyLY+C9ZuSq+GhyaQzqrJwtp/Qil8fgzTq5mt0F
EzhXSPcSXKP2ziZXxqDoS/4+g5bxnGul79O2KtVyNbkxBu9dmnWvGZKbYjDJ
LS6urHEc5xbpzxe6aPVeQm6Lwdg03WNHtcmdMSj+vnlX0YOxnGViMVeR39C8
hCwfiwPN47JD9MlKsdA7vl27/3N1zqqxqNL2n/dmDVk9FsXjgoWvLMhasXCL
3VX04+UYzgax+Ds7z9jdnmwWi2zs6LxeOpqz9L8eb9kNeGw7gmwfi4O3O7Vv
ZI3i7BaLCpuhB6f+GMnZLxYPHMcvWhVF5sXi+S47o/LGEZxjYjG2R/7xUmey
IBamo97Zx15R45wm3Vttvq1hGjkjFjtU++7+fHw45+xY+MzuPrBPj5wTi4nu
poFfDqhyzo2F59nIvVcnkvNj0SzQOTe8aBjn4ljENi7SfjeRXBoLtWu658cd
HMq5PBZ9NgkyruqRK2KRdHhvVcXxIZwrY6GZ8WeS8jRybSzOeaSkHK1Q4dwY
C5MROw7lOJCbYrGh+OyoI/cHc26JRWbcLRuZUHJbLG6P33d/8Udlzp2xqGk2
PKYxjywTh88FF3986EOWj4POy1lfKrcO4qwUh8b8u0pntMiqcfjlKdvr5Fkl
zupxWPw1a+cpF7JWHOJPBx5NvjqQs0EcHrZ0n4j8PICzWRyGP3j7xno4GXE4
v36GfretImf7OIiyWq+tTu3P2U36fOU+E14V9ePsJz2/90ip47ECZ14cxhhe
WH9uIDkmDk8V/rTq2PblLJBa1rTMfJE85zTp80WcLGg+3YdzRhzuO6RdVfve
m3N2HAoHhDo36JNz4rDSN+jEgKRenHPj8GPkub3nDstxzo+DY29RV/2XnpyL
45C5b1WVhyG5NA5j76/x0ZPIci6Xvo/nsirBZ3twrojDxmqZgscy5Mo4VLtd
fbDLXoZzbRwkynvtZ4/vvvT/boxDeJ1f3MXTfzk3xUH9y5gjO1z/cG6Jg+6f
uB61735xbouDktWc3a5Luzh3xqG37YwB/cZ2cpaJR+y+y6O6Kn5wlo/H67Op
zf35HZyV4mEzp+nC9D7tnFXjcbAg1X7u4W+c1ePxYOYp/mnvr5y14pGbszSo
qbuVs0E8JGMmyk/2+8zZLB7nHy/omlX2gTPi8Wm6+L6CSgtn+3gMmrTyQMrc
N5zd4lE9fuMf/vNXnP3isXjfkdN37Js48+KR6rs9wCLxCeeYeBjW79JaPqeB
syAexzznKbib1XFOi8fTkzOf/3St5JwRj7UvL3auF53nnB2P7CCdrfZX8znn
xONLwmnbswZFltz3L+3pvpD5ff4lzvnxWL/p3xnXfVWci6V9eU5XOi7WcS6N
h9Ll7fNv7G/gXC71RS1f0xVPOFfEo6D/oltGxk2cK6Xfx7zEtqm7X3Gujcfh
xzl6p+TfcG6Mh3zmRZeLye84N8XDVWL9OKj+PeeWeHikFIzYPfUT57Z4RL5y
H7FhyxfOnVInF3mMnd/GWSYBd5TeFjwv+spZPgE7+IH6WfXfOCslIOH1Tpmx
Mu2cVRMwZFR+v+PaHZzVE3BAFK0Frx+ctRJgvf+CSl36T84GCRiW8EwcV9DJ
2SwBCkPU6gdVd3FGAm4u/K+wpu0XZ/sEvFq+2CZ/yB/ObgnwGJrUsX7aX85+
CXj/cMrb/UH/OPMSUPDmweTmRd2cYxJQbPgvZqKbDLjvPwFB2lefS5rIadI9
92VvQgU9OGckIOu6XtO7bnJ2ArpvymoprZPlnCPtXfSm/5NRPTnnJqBVZe0D
xxJyfgIks29cCpsux7k4AVMD98qMqySXJqB8X/m1Nd69OJcnQCbH16DoFbki
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
8ReKQU5PRYF5+9WGgDD8HyOJjQU=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
KbjH+y+63P568v6MrkiBK5T7N7oyBVd4f0erUlGf93+0cypaGJT7Q9olFVN4
/0i7pcKX95e0OhV3ef9Jd0xFGu9PaY9UDOP9K+2Zip94f0sjFSd5/0v7pOI2
749pTSpe8f6ZDk2FF++vaW0qpvH+m9aloi3vz2l9Ktbx/p3OScUj3t/T1lSY
ef9P56ZiENcH6LxUbOP6AZ2firlcX6ALUnGV6w90YSqmcn2CLkrFfK5f0MWp
eMH1DdqWiuFc/6CPpzrWR+iSVMRz/YQuTcVgrq/QZan4hesvdHkqznF9hq5I
hQ/Xb+jKVGzi+g6tSsNurv/Qzmnw4PoQ7ZKG9Vw/ot3SMJrrS7Q6DV24/kR3
TMNGrk/RHmloxfUr2jMNV7i+RSPNsf5F+6ShK9fHaE0awrh+RoemOdbXaG2a
Y/2N1qXhMdfnaH0apnP9js5Jwzuu79HWNFzn+h+dm4amXB+k8+yPj+uHUJyf
hj1cX6QL0jCF6490YRqecH2SLkrDAa5f0sVp+HBEWd+kbWnI5PonfTwNtbg+
SpekYQnXT+nSNMzl+ipdloa+XH+ly9PwguuzdEWaY/2WrkzDc67v0qp0nOH6
L+2cjrFcH6Zd0nGB68e0WzpyuL5Mq9MxievPdMd0tOD6NO2Rjp1cv6Y902Hl
+jaNdORz/Zv2Scdjro/TmnRc5Po5HZqOGVxfp7XpOMv1d1qX7lifp/XpiOb6
PZ2T7ljfp63p8OP6P52bjjzuD9B59vO5f0Dnp6PKXWV/gS5Id+w/0IXpOMT9
CbooHZu5f0EXp+M77m/QtnRs4v4HfTwdX3N/hC5Jx0Pun9Cl6aiZruyv0GXp
uMr9F7o8HXu5P0NX2B8/92/oynSc5/4OrcrAU+7/0M4ZWMv9IdolA9O4f0S7
ZWAJ95dodQYGc/+J7piB5tyfoj0yMJ37V7RnBvpwf4tGBmoFKPtftE8GenN/
jNZkoAb3z+jQDNzg/hqtzcBC7r/Rugz79buyP0frM/CG+3d0Tgbyub9HWzOw
gPt/dG4GfuT+IJ2XgRPcP6TzMxDF/UW6IANtuf9IF2Y49ifpIvv43L+kizOw
ivubtC0DVY3K/id9PAN/c3+ULslAGPdP6dIMpHN/lS6zn79V2X+lyzPgyv1Z
uiIDe7l/S1dm4Dfu79KqTBzn/i/tnIlw7g/TLpnow/1j2i0TK7i/TKszUZf7
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
C5rNV/L9aFiQPlPJ/6O9LDjOfEDaxwLfBCU/kPaz4D/mC9Ia+/PH/EE6yIKa
2Uo+IR1qQWorJb+QjrQ/n++VfENaa0Er5h/SCRb0YD4irbNgaDMlP5FOt+A+
8xVpvf3xM3+RNlvwB/MZ6Rz7/JnfSE+1wGOsku9IWy2YyvxHepYFnsyHpHMt
uMj8SHq+BTUuKPmSdJ4Fk5g/SS+z4MEJJZ+Szre/H5hfSa+y4DLzLekCC/oz
/5LeYIGV+Zh0of3vMT+T3mKfH/M16SILfmb+Jr3T/n5iPiddbEEE8zvp/RaM
YL4nbbOgJ/M/6cMWJDEflD5uQWvmh9KnLVjNfFG6xIK+zB+lL1nw2Wkln5Qu
taBzLyW/lL5pwRLmm9JlFpxi/il9z4I6zEelyy1oyPxU+pEFG5ivSldYkMP8
VfqFBWnMZ6UrLQhnfiv93gIj811pVTbaM/+VdsrGcubD0s7ZsDA/lq6TjQjm
y9Iu2ZjC/FnaNRvPmU9Lu2VjKPNr6WbZCGa+La3Oxq/Mv6XbZuMf5uPSHbNx
nfm5tHu2I1+X9shGI+bv0r2zsYH5vLRnNszM76UHZaMP831pZEPN/F/aKxuz
mQ9M+2RDy/xg2i8b3ZgvTGvsf5/5w3RQNr5lPjEdmg0v5hfTkdnwYL4xrc2G
U56Sf0wnZKP6RyUfmdZl4yXzk+n0bKxivjKtz4braiV/mTZnYxjzmemcbAxg
fjM9NRshzHe2/R+VfW9H
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJw93G9sHHWe5/HauczEO5cb98xkJl4mM26YDPEMmXEDgRgI+AeE2CQhriSG
dBInXf7b7f/lPwm+EzrXntDhB0jukzjhB0ipB0j4AVJaOiR8J+5cKyFhaZHc
p0XCD9CldpddrBW76b3lDt9u7nyT+ry/myfuV35/vr8/Vb+uqv513z8wfX74
O57nxd/1vHt/7d//3f39v8WRRKp3/sk9v2pOO793709o3u78x3vpZXOjs+ne
n8D8TWf2p2je6cxi+ea7crfZc1l9nebvuH+652PmPS5rX7v5e+4edw+bm5S/
1fx9d/eeD5j3uf93z83mH7hv73mvOaf03WH8Q/cHWbPNP5Ib5h8r/1fm/WrP
bfNP5M/NP1X5uvmAvGFuUX3r5j9y2fisme/T+Nwy/0zpq+aDinfT/HON19vm
X8jL5lblf8Ocd//i3p8IR3m151VLv99lf0JLv1/jW7b0B1RfydIfUPmLlv5L
9de39F+qvm5LP+T+Tzb/ln5I5Y9Z+q9Uf7ul48OW/qDcaukPanxaLP2w0pst
/bDbc+9vk6W3aXx2h0hvU/5vsfdrHV93LP3XSv/K0n+j8rct/Tfq35alP6Ty
m5b+kNq3YelH5MTSj6j+Dy39txq/mqX/VunvWfrvFC+29N9p/N629HbFX7b0
dtW3ZOkFlY+wKzD/lr+g/CFOyF+x8g9rPAMr/7COj4tW/mHV12PlH9Z4dVn5
R+ROK4+PWXncbuUfUXvarPyjak/eyj+qeAes/KPMv5V/lPm38kc1PruDlD+q
eN/i6KjyN3ByVPO1jb3HFO+2lX9M/f/cyj/G/Fv5xzj/rfzjyr9u5R9n/q08
6bes/OOK956VP6b+x1b+mMq/beWPMf9W/pjav2TlO5R/0cp3qL4FK9+heNNW
vkPjU7byT8glK/8E57+VJ73Hyj+h9nRZ+ScVv9PKP8n6b+WfVH3tVv5J1XfY
yj/F+W/ln9L4tlj5pzR+zVae/Hut/HHW/wHKH1f8b3F0XOvvHZwcV/3b2Hta
6bet/NNuJ5t/K/+02rtp5Z9Wez6x8s+o/LqVxx9a+Wfcd+/9rVn5Z1T+PSvf
qfmKrXyn2rdi5TtV37KVx29Yeaf2LeK84/y3+kifxoHT+VCx+slfwjG+aPGc
2ufj1Kn9XRb/Webf4j+r+jss/rM6XgsW/1m9X7VZfMq3Wnx8wOI/q/f7Zov/
rOLvtfjPab52+4n/HOc/ds+p/Q0cPKfyX+GI/Ldx/Jz6/zlOnlN7NnFKfRvY
e575t/jPa/7WLD6uWfznWf8tPr5p8cm/YvGf13hWLf7zOr7fsPgnFH/R4p9Q
+qsW/wTzb/FJL1t8ypcs/gnFK1r8ExqvHot/wu2997fb4r+g9E6L/4LqO2bx
X+D93+K/oPE9bPEp32rxX1B7D1h88jdb/Bc0/k0W/6TGy7P4J5X/24D4J1X/
HRzgr3B0kvMfxye5/sPJSR2/dZye1Ph9gr0u5V/H+S4djx9a/C6u/yx+l66X
3rP4XarvpsXHb1v8Lq7/LH4X67/F71Z/Fy1+t+p/1eJ3M/8Wv1vnU9nid2s8
A4vfrfEsWnzq77H4uMvivyh3Wnx8zOK/qP63W3x82OLjVouPD1j8F9X+Zov/
Iue/xT/l/lc2ASXin1J/Gtidco1sfnFwivnE0SnN1zqOT/F+jRPSb+L0lNbz
KvZOu2+y8bf4p90/ZONt8U9zfln804ynxT+t+e60+JRvt/inNR95i39a89ts
8c+ovbvXiH9G43EHuzOsbzjAmzjC6zg+o/bcwskZ+o/TMzrel7H3ksYzsvgv
qX3TFp/0wOK/pOOvx+K/xP2jxX+J6wWLT/m8xad8s8U/y/p/lfhn1Z872J3l
/MbBWY3XJo7Ocv+G47Nq/y2cnHX/O+s/Tklfxl6P6lu0+D0an2mL36P8JYtP
eo/Fx50Wv8f9z6z/Fp/yrRa/R/PTbPF9+t8n53zud3Ce9Nu44PN+hp3P/GOf
8rdw4Gt8buLQ1/gv48hXexdx1XfKh2Nf41fCNZ/7SZz4uh5wuO6zXuCU9Dxu
UH8Oe+c4/q/Q/3M6Xho4f47+4wLexO4c6zf2KV/DwTn6j0PSqzgifRFXz6n9
0zgmXgnXztF/nFC+E9dxO07PaX5aceMc84+98xofz/p/XuXvXKb/53X83MaF
85z/2J3n+gX75zW+NRyQ/yYOz3M/giO8iKvnNR/TOD7P8wVco309OMGduH5e
41PAKeVbcYP6m7F3gev/S/T/gsb7Ds5fUH0pLlxQfzexu8Dxj/0LHP84uKDx
iHFI/mUcEX8RVy/QfxzjEq5RvgcnuBPXyd+OU9JbcYP0Zuz1cvwX6X8vxz/O
9/J8CxfwJnbkT7Dfy/UqDsh/E4ekV3HUS/9xFU/juJf7S1yjvI+TXo2vw/Ve
Hc8FnFK+FTfIn8Pey7Jn/X+Z9f8i/X+Z/uMC+evYkb6OfdJrOHhZ4xPjkPzL
OMKLuIqncYxLuIZ7cPKyxsPh+suc/zglfytukD+HvVe4/sU53HiF/uMUF16h
/9jhBPuvaPxrOKB8jEPyV3H0Cv3HVcqHOCa9hGuvaDx9nFCfw3VcwCnO4wbl
c9i7qPp3X6b/F+k/zpN+GxdIr2NH+jr2L2r8b+HgouLHOMRVHF3k+gdXcYhj
4gW4hn2cXNT9lsN10gs4pX2tuIGbsVdUPM/6jxu99B+nuFBU++vYFbn+wX6R
+ccB5WMcFjn/cVRU+yNcJT3EMQ5wrajrZx8n1O9wnfYVcEr9edwouuzzjBz2
Lqk+D+cu8bzvAv2/xPGPC5fUvzp2l1Rfgv1LvP/j4JL7w6wfOCR/FUfkj3CV
+kMc4wDXaK+PE9rrcJ36Cji9pPlpxQ3Sc9i7rPIezl3m+D9P/y871YMLl9X+
OnaXdT+fYP8yxz8OLjP/OMRVHFE+wtXL9B/HOMC1y6x/OKH9DtdpXwGnxMvj
Bu1rxt4Vrn9w7orKN87R/yuqP8UF8texu8Lxj/0rzD8Ormi+Yhxe4fjH0RWN
b4SrV7jfxjH1Bbh2hf7jBHfiOvUVcHrF7cv6gRu0J4e9Po2/h3N9PO/06X+f
xiPFBVzHro/1D/t99B8HfRq/GIekV3HUp/MjwlUc4rhP7Q1wrc9lnzf6OCF+
J673sf7htM/9y6wfuNGn8clh7yrHP85dpb899P+q+1dZHFy46n6UtQu7q4oX
Yf+q4gU4uOp+nuXD4VXFz+PoqtufvcDVq+4HWfyz9P8qnw/g2lUdfzFOqC/C
9asavwCnVzVeDjeuuj/K4mPvGv3HuWvEf4n+X9P91zouXNP4xNhdIz72r7mf
ZPFxcM0dyPLh8Jr7cVYvjq5x/YGr11wui3+G/tO+BNeucT+BE7yI69dcSxYX
p9c0fw43rmm889graTw8nCsx/6fpf4n1DRdKrOfY4Qj7Ja5XcFDS+edwWNJ4
tuKoxPsPrpY037dP0f+SjqcE10oanxgnJd2vLOI67QlwWnI/zeLjRon1EHsB
9/8vyk0B7/c4F9B/3EJ6jPOB+2XWD9wWcPzjAuUd7gg0H3nsAvf97AXuDpj/
bsaT/AkuBtxP4yDQ8RThisXHIekOLwQa7zyOAteswPJS4DRuXXI10PO5dbwS
uAez/uOY/kV4NdDxFeAadngt4HoMJxYfb1j/T8r1QMdPgrcCnV8xTgP3wyw+
3g6Yf9yw+HiH9uax16/yHm7q13inL8i5fp0fCW7p5/zH+X6tFxFu6yc+LpDf
4Y5+HY957PrVPw9392v+0hOy38/xh4vEi3HQr/5FuNLP9SIO+53i4AX6k8cR
9Xl4qV/HY/q8XO3X+pnglX73iyw+jvu5fsWrjGeAa/18voHX+jn+cNLP58/P
yRvUl+J6P++veKuf9R+n/Xo/ivC2xccNG3+8Q32t2Bvg+cezctOAjscU5wY4
/nDLAOsvzg+oPxFuG9DxE+AC9TncMcDnNdgNaL493D2g+Uyd7A9wfY2LA6y/
OKD9i7hCewIcWny8QPvyOBrQ+Hl4yeJ1ytUBdzDLh1cGdP45HA+4Q9kLvEp/
kmfk2gDPt/DagM5vh5MBd1/2Am8MuHz2/0/L9QH3N1l5vDXgWrPyOB1g/T4u
b9OfBDcG9H4Y4R3ssDfI/e9TctOg+pvg3CDrK24ZdPdn5XF+kPHDbYOs10/K
hUH1N8Idg1o/HXaD7oHsBe4eZPyekP1Bna8RLmKHg0HOX1wZ1PmRdMjhIPdX
eGFQ63knjgZZf/HSIPN/TK5Sf4RX6J/D8SDXL3h1kPuBx+XaoPtVVh6vDXK/
gpNBrYce3rDxf0yuD7K+4S3653A6yPqJtwe1fiVH5QbtWcQ7g1yPYW9I8+vh
piG1J3lUzg3Rf9wypPodzg9x/uI28iePyIUhrZcR7hjS+eKwG+L+A3cPMX8P
y/6Qa8vK4+IQ7cfBEOcPrgxpfUgKckj9EV4Y4vjD0ZCOh912eWlI632Eq0Mc
n3jF6vudHNNfD69af38r14ZYX4/Ia0P6/GMRJ0M6Pjy8YeUfkutD7nfZC7w1
pM/nFn8jp0Pu0ewF3ibe4q/lxpD7+yx+m7wzpPuRCHvDrpD9xU3Dqi86LOeG
3ZHsBW4Z5nrzQTlPfg+3DfN51q/kwjDHF+4Ydn+WpR+S3bDWMw93kz/6pewP
u/+Rtf8BuTjs/iIrjwOLjyvDOh6j++VwWMeLhxcsPS9Hw+5DvSHKS8PcD+Hq
sNZj7xfyyrDWB+/ncjzs/n324qC8Osz5+DO5Nqz10rtPXht2t7N4LXIy7L7K
XuAN6+9P5fqwG85e4K1h1qufyOmw+zzL/2N5e9j9XeYfyY1h93L2Au8Muy+z
9Jzsjbinsr+4acQVswXtB3JuxP237MU+uWXE/afsxffl/Ij7N1n+JrltxP1x
Vv935cKI+8/Ziz1yx4j7syz/d2Q3wvHhyd0jbjlbsO+uZ/ZH3G/UcLk44k5l
9f+DHIy4P9UGDbky4m5nE7gthyPuQ91QyQsj7pM3soGVoxF34vxD/+G+V44+
nXlpxJ3/t1m69jFXf9//bIG4La+MuHPZAbAtxyNuTh8YyasjTt1hH3RtxP3H
rL3fymsj7r9nFwT/JCcj7gO9gajcxoh7ROMj10fcP2r85K0RN5K9+J6cjrge
jb+8/fv+ZfH+UG6MuJvZi33yzog7ko3vD2hnmeMjJzeV3R0dH3KuzP6IH8ot
ZfdC9uLHcr7sjmcv9sttZVfJXvxELpS5vsUdZfdXOr5lV3a9qljuLrv/ovND
9svu/ezFfXKx7NazdByUWb8OypWym8xe/FwOzb+QF8qsF61yVHb/Tue/vFR2
D2X/n5erZb3f2z7olbI2tEU4tvQH5NUy98O4VtZ6v4vXylwvsw86Kbt/nb04
JG+U9X4T4XpZ67X3K3mrzPsxTstcPzwob5fdn2t9lhtlrk8Pyztll2Tp2Ksw
Hm1yU0X1RThX4fNB3FLheuTXcr7ins9esO+5rcJ+clyosL8ad1TY7/KQ7Coc
D7i7ovZGR2Sf/Lu4WNH1d/RbOaiwfrAPulLR+0mEw4q7mr1olxcqPK/DUUXz
bfuglyp6v3W4WuH9FK9U9H5o+6Bj0nfxakXz7x6WaxWt1xFeq3A/jZMK7w+P
yBsVvf87XK/wfo23KnzejtMK1+94m/Fw7ItuVPR+FOGdit4/17E3qvH0jspN
o8THuVG7fpRbRnkegvOjHP+PyW1WHhdGeT6GO0Y1vgl25Pcel7tHdXw77I9y
/4SLo+pfgoNR+sE+6MqoXZ/L4aj7y6w8XhjV/XGCo1G3nY0fXhp1f3uPneyD
ro5yf41XRjUfCY5Heb9/Ql4ddYez+Lg2qv0Ti3ht1P11Nn44YXy8J+WNUR2P
DtdHdX0b4a1RnkfgdFTHm/eUvD2q62WHG6Pumaw83hnV9VCCvTGefx6Xm8a4
X8a5MfdwVh63jLHfDefHuD59Wm4bc9kbqcOFMa4HcceYzs8EuzH3SPbiGbl7
jOfV2B/T3wgXx3S+JDgY43qNfdCVMT4PxyH1R3hhTO8XCY7GOH7Zp7w0xvMx
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
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJw113lUjev7x/EtISUlIREZSlKaRIg+DZqleR5281x7TBFyhMyZQ8iQMoeQ
TJmLEKLMIYQoFGXqt7+/57rPP2e91n3ufT3v59pnrfaIiFTPaDkej1fQg8f7
37/ZP7MSWlLiDO3AqcZqobJR694NzA1WaqsESiF/mZus/p2cOGpJ7Axyq9Wb
uTPPqD9gbrNKrFdM/2NlT+6wMjXvO834CPMfK9PICJ3dWg5kHh5pvtpqu5pZ
DpefH4/owXMky+PfucuH6kTMPZGl/HvUgXfMCpBLHtaVGOREVsTCeypqfe4x
94FDZvDLdAdncl+sK3i6v+ACsyq8J09eIpzoQu6H8BbbpMdHmNVgUlXvcH2M
K7k/Ph137q27i1kdF4rGnHynOZM8ALPVrcU/NjAPRLPWq3xbFTfyIKjO1bx5
bhmzBtatGf3CXX4WeTCc7c+otcxn1oRrQ7Lc0k7mIUjb1S1Afoo7eSguXfJ1
NZ3NrIXBWw48mFHKPAx7TiUWTfrKPBzzfxRe5o33IGsjR9EwemsCOUsbG6u9
Bvzbx85HIH/6xF06b9j5CGzYnD9cabgnnY/EOeX5rcWB5KyRGOCqf75zIzsf
hQV52ukdNex8FF6XbQsuUPKi89E4sPbx5+YZ5KzRKPLT+fF4ATvXwYs/BxZH
nmHnOhBba35d/I2d60J71fCaaeO86VwXuyPKfi+NJPPGIOhz3Mrwbex8DKJq
/Opv3GfnehB09xGW9fahcz0cNa4ZaQIybyx0Dl5uMUpj52Nx/Xyu6omD7Fwf
/HNvW8sa2Lk+NnxaZYgBvnQ+Dp49PdY5OJGzxkHhyd1BdzLZuQHSx8W+un+U
nRugtWbwVJ/X7NwQ448t2uyt7kfnhlgxuG5VzQwybzxeF72tq0xj5+Ohdt/c
fVoROzeC3nudVsM6dm4E+6lad7b29KdzYxzsXT0k25wMY9yXzBn9MZKcZYy/
n2Ncbq8lVxjDy2SC4viL7L4JrD/GtPRpZvdN0PzvW36CRgDdN0F6Uv11Bzty
hQkaVt81KUwl80yxaIf88UVbyTDFpxGvxzZeZfdN8bbXx5wbX9h9U7T1335z
vEYg3TdDPATtmtZkmGHAibuDV8WTs8zQ6/l4jyVryRVmkA/UOd/rDLs/Ab+0
85aoNbD7E7Bl05dnRT2D6P4EVKt6tVcakCsmQD3wX+/ZnmSeOcyvrgo4MZsM
cywOjNRdkM/um2PdNZVTTyvYfXOoi6+532xk9yeiYXMtXBWC6f5EbNhjdD9i
HDlrImZW/PRQcSNXTETlL9W+XgIybxJyS897G61j9ydheDdrSeEJdn8SzDcu
LT9Vy+5PQtnXR5KodnbfAv9J/2s5OiCE7ltA1HOfdKs5OcsC9vLv3HV8yBUW
KJoyocpDQuZNxocVW0aPWM/uT4aGqnzRhmPs/mTMiR287vBddn8yPOSUdZI/
s/tTUDZyTn6tYijdn4KxfGvTt2PIWVOQlxavVWBHrpiC+vHd1/UMJ/OmwnW8
6qXB89j9qbBcmFT/JI/dnwrR8XI5l1J2fyp+OnjGJt5l9y2RkmmsP+0ju28J
Z9VPiZfkw+i+JdRUCp06h5ErLHEztsfztxZk3jS8tTCyzPEkYxoOl5zNeJXI
7k/DjdiTe79ls/vT0FtzY+W57ez+dJjutfqMU+z+dAww7jEo6w67Px2HZ++y
n/uO3Z8OPaVpGWb/2H0r2F+eVFuryKf7VnB3HRGdOpCcZYXyjq1NH0aQK6yQ
82rEIztDMg/Y10O8J8uCrA1kTFx9dbst+zxg4MwzB/PdyHzgx85FVfMC2OcD
X09UrbSOIhcA/UeeiWhKYfOAx4drT4kyyA3AnCUd3xoWsfnWkBwJXWC2ms23
xrPFey4n5LH51lgqujli6W423xo1u214yw6x+dbY8v7TRcEpNt8aN3YNuTS9
gs23RmPFrojvVWy+NXD3drc1D9h8GygqSn71e87m22D/wm/7Mt+x+Tawsp7I
v9vC5ttg55yKeYqdbL4NTpce9BkvF07zbTD9d4nlVCVyhQ1slA2XmKiTG2xw
ZJlOdj8tMs8Wrwa5LX2qQ9a2hf8K5ZdrxpNhi4XdFj0eP4nMt8Xdn8uvlFmR
s2xRF3C1ydCRzbeFz5KN61e7s/m2GOpsovzUn823hbhm2/b+4Wy+HW4sPbrC
Ip7Nt0P9rxFazkI23w5/83M2OWaw+XbIWxYydcJCNt8OH83l3ZSXsfl2mDLg
jkptLptvh6/juypy8th8OxQV3i8YV8Dmz8Bq4wWfzxWx+TOwNntqo+VRNn8G
th21uXTwFJs/A+2R9Rd7X2DzZyBgwkxNv2ts/gzsrZBT3FDN5s+A/oPUGxUP
2HyZU0Yvf/6EzbeH+s3bOR9fsfn26LCd0vm+ic23R5JliOqjFjbfHj7vPeVO
/mDz7VGhFCW3+C+bb49tpb1t7eUjaL49Uu63tncokhvsEXf7r8v2fmSeAxYp
uEvNNMjaDhjuO2PX2WFkOGBAyLx/5jpkvgPqW56V7x5HznKA0HttdzlTcoED
Vs7v38Pbgs13wN8p4z7lTWfzHeA281tDjR2b74jiBXWqf5zZfEck7N21V9OD
zXfEmeWiawZ+bL4jLr6t2mYawuY7Qkk3Z5ZBJJvviOf2X3tpxrP5jriy6uin
3ylsviMMpz/Svi9h851ghMbq/DlsvhMmnL2uHpzF5jth296nQ1WXsPlOMLRp
Uzizgs13guMuvz++a9l8J2jIXRv8cROb74T2SWmLRPlsvhOU/40Iat3F5jtj
h/W/S5FFbL4z+oRfrq8+xOY7Yx9//8Vxx9l8Z2xSl2zKOs3mOyPCOjHz1jk2
3xmux8Jz+1xm851xAadabW+w+c7IaPA5K6xm811Qtvq88qZ7bL4LNO3/yB97
xOa7YF5j6fnLT9l8F/zrpe19q4HNd8GcN8qNN9+y+S4Yr9iUc+kjm++Cp6Yn
Qo62sPkuaPumOm9DG5vvigsC627CTjbfFSP66sjP+Mfmu0JHafpO1e6RNN8V
v7WPf3rQi5zlim4DXOXW9CEXuOKk3bzf1v3IFa74MjaspXkAucEV/vWl7Ws0
ybyZWClu1hk3nKw9EyE7tDdfGEXGTKi9Gcx31mPzZ+L1APfNdwzY/JlIPPrJ
08WEzZ+JwJE3iivM2fyZKBgrODJ+Cps/Eyb9xmZsnM7mu0Gr44NWuw2b74Yl
yhHHZjqw+W4wuNHhsNOFzXdDpNrd9g+z2Hw3FC2ouGPozea7oSou6l2CP5vv
hvH9VNx3BbP5blh26f6we3w2fxa0X2RF/4pi82fhws8DE7Xi2fxZGF+/Z+/k
ZDZ/FkKXZV2aJWTzZyHRf/DOMCmbPwsWDxRnxWew+bNw89Kp10nz2PxZKBsy
IzFhIZvvjpEdezvDF5NV3aE1Z9UOr2XsedxRXTY/wWoV2dgdv3ZfTtZZy57P
HTNeJpf12Eh2d8fCIn5gQx57Xne0FzhEnswnC9zhW5L/OruAPb87NG8WvXfb
S851h9LFBQv7F7MedzztoXTx/kFyiTsaFvCOrjzK+tzxcWpTmPUJco07Vk8Y
2tB6ivW6g69UNW1bObnVHRsufVmCC6zfQ/b7JLyq4RLr98C491VqmddYvwea
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
INt/FHSHT+z3ToXtPwqSljVVZr3Z/qPgci4mNEKO7T8KA4eOfiP4HcU5Lwpq
4xdGhraRC6Lw5fSsN2M/k4ujMH61bej9t+QSWW/uuRu+L8hlUbiQs1bx1CNy
RRROez5TaLlDroyC874b23g3yDVRWN0zbP2HC+T6KDyaFX6q+BS5IQrz0gde
tjxCbpL1jRqbsLeQ3BqFlNJs/xf55I4o7DtsYfhhPZkXjZKREfOvLCcrRGOj
6dD6xIVk1WhMXZh+rmE2WSMaz65k7dFOIWtH43GOze+xUWS9aLhlvBvzO4Bs
HI3BcbWL1s0iW0Rj/pa3YV/syIiGzeV93ZWnkB2jsdrj4OHm8WT3aFQc/L5+
xSiyfzTGKcU1vh9E5kdDWBV/rUuJHBcN3WeZvve6IjnLfrcP9lY6FvidLPsd
3uuQ3Yct78hZ0Sg/oKmy6jE5JxpdK0KMTKvJst/BKxQ6vZdeIMt+19od81q+
vIQs+516r+Hek8m7ycXRiHWa571+PbkkGjce3+u9MZtcJrsfWNJ/mpQs+90X
dyZt/bJosux3nOfSaSfTfciy32VnNk0+rjCDXC/7/JF4MGkCuSEaSqaJYvlR
ZNnvosP2T+WS+5Flv3Mct63rLeiK4Cz73aK8OFq/z2cyLwZLT/3SwROyQgwc
oh8+V7xBlv1uyFsX4Zd4gqwRg9nd5S7yd5K1Y2B/Ty7x43Ky7O/2Pm3LX/RK
IxvHYN4pfnUZnyz7Ozvg/MrBf53JkN0fe+tl7QSyYwws4i6nYhjZPQb3l/7w
RC+yfwzi3AQzH7aEc+bHQF5eNUz2dxFn2d+dTkeyr16+SBbEYP3KVz+1isjp
MRj9uLqk/2pyVgySdewaCyXknBgUWLZdeRRIzo3BuWejzheDnBeDhZ6ms4fp
kgtioLDr0L0pSuTiGLx1+vtK9nc355IYlIrOtYpryWUxcIstSttcRq6IgfMZ
h8Gp+eTKGOQ6ehX9W0CuicEl97vqzpHk+v89X7fZPvbkhhhURFnwdMaSm2Jw
RCnz9zklcmsMnl/yyLV9Fsa5IwZnjNQOHi0g82LhH/nG8kYUWSEWoxReOK3X
I6vGIn5b/2dDm0M5a8Ri+b7A30lHydqxGGmQVLhSRNaLRYk07Hq2Odk4FkrC
NSahHSGcLWKRcfnb1hFnyYiFRdnn3Lp5ZMdYPAvek5YDsrvMKlXzLbuT/WOx
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
2snQbC8cuncwWS8Zd6XfMre1TONsnIyJv2bOabhGtkjGu9/uOqJ8MpIRtrz/
ullismMy9t3Vqp/tTHaXPd8zf7WPI8j+yTCv6Aot7LTkzE9Gx5vcl8X3yHHJ
GHP0Ytn3/WRBMsbHx6gt/o+cnoytcemDgoPIWckYMqetffYEck4ynNbUvahT
Jucmo3WfSs+576dyzkuGSkfKbv4lcoHs8/x2fl66jVycjO1PBoxulZJLkhFY
0nNxnju5LBmp0wI8s8aRK5KRF5lfs68nuTIZAuXf9kqvp3CuSUbdO+OuQ+fJ
9ckY7rFgxoot5IZkZGTvjiuUkpuSofb5+plfHuTWZHQen79y+XhyRzIkaacn
eiuReSm4O71E1a9pMmeFFBStb5Gsu0ZWTUHa9ckVPfaQNVLwNmmpR0kWWTsF
2XJ/lq0NJeuloP7Ms+piS7JxCkbNXrqgXZNskYJubfG9Z3dacEYKrvbtfGBQ
T3ZMQZl1sfPA02T3FBhMf/XEdBPZPwWVpb+/L5SS+SnYZ2neq7sPOS4FVTH7
l56cQBak4ORXp4956uT0FIhG1hUeapvEOSsF8lb1pq215JwUJBptUIo8Sc5N
QctkxUPym8h5KTBs+ri2No1ckIIrPdZa3vcjF6fg5pVfBn8tyCUpSO24/NZb
k1yWArl5mp/qf0/kXJGCPUcvXc55Tq5MwYJecm2RF8k1KdC+V9QrYRe5PgWX
eX+Wbl1EbkiBl/YFXns0uSkFmsHDutIdya0pGFh4up/uOHJHCsK+L6v8rUzm
pWJefltpZ6s5Z4VUjL5eEj+8lqyaCsWvt+YknSZrpMJuy+55DVvJ2qlQanui
MHc+WS8V+efCSqdGkI1TUTk8aPBIe7JFKiacMblvqE9GKiYXzpsT2pfsmIqD
R3ofPfFtAmf3VOTmVCsb1pH9U9FHp9H85lkyPxU/B629sbyAHJcK+0GmUSmL
yYJUbFtidUSSQE5PRdsAB6fts8hZqeg/9/3j9xPIOan4Y1rdw1uTnJuK4uD9
4lddZpzzUnFv16Rba96SC2T/vYnxydBb5OJU/HfH8enMY+SSVPR9a9QUvJlc
lgq9ipylK+aRK1Ix8+L76MeR5MpUqO67Y2zvTK5JRV178aZ7xuT6VDT6V9rP
HURuSMX7IeFfbf6Zcm5KxfMTSxz03pJbU2Hsq/dbv5rckYo5W5UvOp8g8wQI
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
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
VftbdQrNHwH/4rODDSeRzSOgHzG6N9uNjAgk6lUxuhLIPhF4w/iTu3MZmRmB
uoYSxZR9ZHYEPir27Yy7TBZGwK/8SnXeM3J+BMYu1vnY/JssikBVd/WbAB1b
mj8Ca6/9MvlrRxZHQHvARvv7weT6CJi2fdjYmEWWRGDZNOUyhW3kjghEmm1R
iTtNZkRih0OzZUcjWSMSonFNxWWdZL1I2H1z/1CgZUfzRyI46VDuaWsyInHb
3kaxXyDZJxJJp39/XyogMyNR4PCyxXIbmR0Jy1mlHsPOkoWRWKPe88CkmZwf
CbPO5IHzesiiSKjPy13SpTOV5o+E9fmnd0rtyeJI3Or7Z9XGKHJ9JFam5/qW
C8mSSAyvmSruf4DcEQnWlnb+putkRhS2O5RrBLeRNaJgP+/slACVaTR/FA6f
XLx29WSyeRRyP98498uXjCi0L9/PKhaQfaJQ77tk9podZKbU78x7yy6R2VH4
oPrbReUVWRgFUVxh/cEB02n+KIhnhPoJJ5FFUXhZPmBFgQ+5PAobWobqdwjI
4ij8Ct77OXcXuT4KR7sz9jOvkCVR0C5RH7DwHbkjCsINTc+bVO1p/mjcXtDZ
Nc+arBGNI6zs4RHhZL1oJCQnaq74j2wejSHHL1d+P0RGNBa05r8obSD7RENN
3BtV3ENmRuP00xDND2Nn0PzRyLun2zzPgyyMxrXVQzbN5ZHzo/Hvt48Bt5As
isbGX3MWSK6Ty6MRmvUtZ1c7WRyNX53Fo4pGzKT5o7ElPNrrtxNZEo1Hvyv6
7s8gd0if//PT1B07yAwm3L+rdry8RlZioke9w3BRB1mDiTp4t6aOcpBZm4mt
7U0Wx93Iekwo/Jyl6yYgG0ndHllpu59szsThJ+NGLLlHtmNCbHgrdMxfMpgQ
9mbcWTsUMrsxkatYknPWhOzDhPpNR18NZ3IIE/zWaZLt4WQmE+NYL65488gs
JgKSm/Nt1pDZTLAe2nzwOkDOlu4nY3761gtkIRPFffZfVG8k5zFx/daUnIuf
yPlMDNfy9y/s7yhzAVP6/87Jj8dHk0VMrD92/utPW3IpE3qOa7UEvuRyJhhr
lQcYpZIrmThT8mHB4BVkMRNmzy8bW+4l1zKx65ZS/epz5HomBGfsjUY1kpuZ
eGz6+PvbL2QJE/ENmT8+DpwlcxsT3bEVPyYZkDuY2Ky2pqoE5G4m5nQMG8mM
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
NhEhl9aO+OtBrk/EojPMO5VMcrN03s7VzxWzyJJEuDX0Tf2wmtyWiPR+fS8z
95I7ElGwKTY49RS5OxGuCQ+fKdeQGUlYf+aXAVrISknQWZFgPOgzWSMJbrs2
DWT3krWTcMTlSd/0wXEy6yVB2TKVpzCebJSEhHF4YGtNNk9C5bapJ5Vmk+2S
4J8743R2IBlJYJ3L2rwqgeyWhBlh5UNmCMg+SbjxuGHg1uXkkCQkui8K2LyZ
zEzCfUlDy9T9ZFYSHE/4r15dTmYnYaVST0BuFTk7Cf/WRJpZ3iELk3DxsI76
usfkvCQolDm/3/GWnJ+E4QEqJ8K+kwuSMP5pTlBDL1mUhPSbydd7VeJlLk3C
JBVW67vh5HLp849837xmPLlS+r59jxz9NJkslu63+mA/1Wnk2iQs3PEm+osz
uT4JWqzGZZvmkpulecx/O+F3KFmShJa8Wb8nxpPbktB0VXhAL4PckYRpS7Mv
SuaRu5NQYDmqOXUpmcHCkXGxi6+uJiuxsPeonen7zWQNFuIqloc8LyRrs2A4
fmJKUTFZj4WF2cOq7Y+RjVi4PzfmTOkZsjkL/w2I3vy+imzHguvBml2MGjJY
OO33VKm9juzGwtm8jcpnHpF9WNDOv1gT9JwcwoL5eqeo+2/ITBY+np37euJn
MosFtclL46I6yWwWtEbpv2b/Jmez4HIxMSq2b4LMQhay2jfctBpIzmNhzJgp
g9+qk/NZ+G2cpbNgGLmAhcUTja92jCKLWLC7PeaVx3hyKQtGtt6uqyaSy1l4
NV3lYpkZuZKFfmcd+p2xIYul84zY9bh4OrmWhaFfr3flOJLrWchP3axk70pu
ZmH8BYtLr73IEhb+hoWe4/uR21goMli4uz2Y3CHdr91nhcBIcjcLN0TDVhbH
khnJmHBvx8mXSWSlZJxuWDRcOZ2skQxJQNCMMVyydjL801NKx84j6yWjybSl
eXAO2SgZFYOuenQIyebJuK8bl3VpBdkuGX8MptfPX01GMqrXmd002EB2S8am
qaV1VzaTfZLRMue4h3cBOSQZh96oFd0uJDOTMfBq+sxp+8isZPT0pizYWUxm
J0OnpvL0p0Pk7GQUjJziaXFMnn8y7M8qbmadlOefjEf9y19tOiPPPxnzZhuu
Kz8vzz8ZJvc/vbpSJc8/GfOLDC1rquX5J2PGwLIb4hvy/JPxbMfoD8duyfNP
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
Dv7qu3++v4YMDpb8iF43ehXZmYOBGzr3JK0ku3Gw0MJw5LFlZC8ORPoKv78K
yT4cGHDX2VotJgdwcLKo/CZnITmEg6ErPA8fzSZHcLDmkfH9twIyk4N+msrT
dHnkeA626G1u8WGTWRzs14oqW5pOTpP6VUfJ8RQymwNL7cvXW5LIfA5Wb5r4
r28COZuDKqvF7kax5BwOnm37udcjmizkYMbViz3JEeTlHDCfS7xXhsrvPwel
T2O37w2S338OTCxMb5/2l99/DkblDH1V6yO//xz8sX36oHmO/P5z8CjBpOCN
h/z+c5Bvu8uw3VV+/znoc74kq8tZfv85iM85v6TbUX7/pfu3NZjaPVN+/zmQ
8Mbt7Jwuv/8cHJz0cMdnO/n952BzppvZaxv5/eegcUCm70NL+f3nYIj6+J9X
zeT3n4OVOw2GHzeR338OjniNLt02UX7/ObDu2ilaYCi//xykTlT/GTZefv85
yHz6YJ+tnvz+c9DSabhdQ1d+/zmweml8980I+f3nwHDS26lnh8nvv/Q8Kjo9
WD5Efv856HintsFbQ37/pfel369YLVX5/edA/+0250cD5fdfut+e0IlbBsjv
PwdlKjsGePeT338OQhtXN/RjyO+/9HzNd1ly+k+czAwuNmtcVYjrIStwMVa3
KWjQD7KS1Op2KSe+kQdxMeDSfCu/drIGF9+eqpZ8+UjW4oK50OncyjayNhcP
M1yidN6QR3GhdWv06kMvyXpcuHuWm1s/J+tz8ab23OzzLWQjLv7uarw4vYls
wkWSEn9V5QOyORc5+1r3mNeTrbm4VObZceAO2Y6Lx0sPsjVvku25MH13UzPn
OhnS56XF3JRcITtzkXfly0pUkd24iFW5OWPXebKXtJ/1KEnHGbIPFx+nt0U7
niIHcPFiCeP42uPkEC6u9Ve5fP8IOYKLgZeXLB1SSmZy0X2z5J13ETmeC9vy
wlfLRWQWF19FrnGnC8lpXMwvYYZJCshsLixfpFf230rmc9G5vzrdYCM5m4uK
ysUpDuvIOVyoLFi3x38VWcjFoO6inpgV5OVcHB85OzVlKTmPi7NXzrxKW0Re
y8XQB8pzk+eT86XvL2TE3mgBeQsXMauEV+ZyyAVcjGk+UDQ1nVzIxZmfh6fo
JpNFXCg/Fyb8iicXcSG8cn90A5NcysXoweo++yLIZdL9sOLfpoSQy7kQLRHX
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
CpmZYw==
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        LineBox[CompressedData["
1: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
UVwSjr8f9fRdpxOXhcPuVv4X5UPFFeH46c64p+1riRUReBCuHTPukrfMPwLp
h5eMicoXO0Wg239xm1UxYrcIuPSrclR2FyMCf9t/F+rycpzMPwKBre+3en1I
rIrA85gZTX6cK1ZHYFVK1lvv8WJjBKLyH07+vak4LwLlfkO9Jt7xkvlHYKfD
hxY/bxEXRqBdRsm6T5licwTGNF4yZ+BAcUkEdm3pNDX001iZfwQ2r9jQK+G0
uCICMRed/MKWihWRWDrz1gL3YLFDpOX+qknup7Zip0jcjWjycudfnjL/SEy5
3MPguVOMSMxsvG3fSYNYGYnZG29HuQwTqyKxZ0HNJlPtxOpIROcGTdt5bozM
PxL/KZ67n1kuzovEjZe3np0JFZsiUeuCnUehk7gwEu3au5VM+3u0zN/y9xM/
DnLZKS6xPP4G99oc04vLIjH0arMWg4eIKyKxvs/3p7+pJrbcB7x1CDjx2+lR
Mv8oNDy5qeDdYrFTFNq3OF//U4DYLQrXeu2b/1cLMaLQxvf5zl13PWT+UQie
Wtgs7HuxKgq/tDzu9zBVrI5Cqu+S50o3sTEKNdxrzVv7eqTMPwrZg7auO31Q
bIrCxPLMk5dniQuj8LTqWu7B0WJzFGY3PqH5oo64JAom7+X2XS5C5h+F64ff
Xd26XFwRhaDrDqG1gsWKaFya4dFqZCuxQzQG+yxy33VkhMw/GgPQq2i5p9gt
GhV7b//U4+JwmX80iq9mtp0ySayMRq/LjV5OuTVM5h+N6dF92rvGidXRcDky
9Ztlj4bK/KNRV71j6JYscV40vvtm7buU10Nk/pbH87TJrptTxYXRuBF1dvD7
T4Nl/tHo4Dk6+8RccUk0uvY9M2BQHXGZ5fwI7/HBiwfJ/KNR7dsJ89p8Jlao
EKa4/cOCle60vQr6d4nT1jUXO6hw0u7nA4FrBtKOKmx9YW67q7XYSYVbhYej
t60fQDur0MB0y8XLSeymQnHyhN5zN/an3VX4JbxN46gOYqiww7uF7tqmfrSX
Cm3/PPz0YQexUoVpsxs3W7apLx2iQs/Z62dday9WqXCsctCenaY+dLIKb54p
BrVtJ1ar0Khm78Xt1/Wmc1TYOK1B9/0txUYVVuw9Nvv2Kjc6V4XlTUbZrWgi
zlOh2tT47tvb96LzLY9XN7mHd4ue8vqosLN6xZGqRq50gQr1Vn29wFzTRV4v
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
7t/oyhTs3m69v6MVqTjD+z/aPhXfDLHeH9IOqfDYbr1/pB1TsY/3l7RTKhx4
/0k7p6Jwj/X+lHZLxTvev9LuqfhVa72/pZGKw/es97+0Vyoq3az3x7QyFeG8
f6ZDUvGW99e0KhVNeP9NJ6fibFvr/TmtTsV/La3373ROKr7n/T1tTEXiLev9
P52biu5cH6DzUjGvg3X9gM5PxbE46/oCbUqFP9cf6IJUNOX6BF2Yio1cv6CL
UqFztq5v0OZUXPGxrn/Qxan4aLCuj9AlqTC1sK6f0KWpmPbUur5Cl6Xih7nW
9Re6PBU9uD5DV6Qigus3dGUqvjRY13doRRryV1rXf2j7NNTl+hDtkIaq19b1
I9oxDT/3sK4v0U5p6DvDuv5EO6dhRz3r+hTtZjl/iHX9inZPQ8YY6/oWjTTc
5PoX7ZWG+D+s62O0Mg3f9LOun9EhaWi237q+RqvS0J3rb3RyGg6Ntq7P0eo0
BIy0rt/J+l8aGsyxru/RxjSoulrX/+jcNNTZYV0fpPPS0Pa2df1Q1v/S0M/b
ur5Im9Lg/6t1/ZEuSMOs49b1STNf/zTMdrCuX9JFafD6wrq+SZvT8M931vVP
ujgNSSOs66N0SRoUXD+lS9PwE9dX6bI0NHlnXX+ly9PwI9dn6QrL87nBun5L
V6ah5Ubr+i6tSEdgnHX9l7ZPx0SuD9MO6bjE9WPaMR2ZOdb1ZdopHT9w/Zl2
Tkfdj9b1adotHT9ds65f0+7p6MX1bRrpaMP1b9orHWquj9PKdHTm+jkdko6a
+db1dVplcQ3r+judnI4/9Nb1eVqdjoZcv6dz0jGd6/u0MR3buP5P56ZjDfcH
6Lx0dOf+AZ2fjg/cX6BN6Rj2zrr/QBek480X1v0JujAdq7l/QRelw5H7G7TZ
8vxw/4MuTsdh7o/QJRZz/4QuTcflDdb9FbrM8sX9k3X/hS5Phw/3Z+iKdNjV
tO7f0JXpWML9HVqRga+4/0PbZ6AR94dohww04/4R7ZiBeO4v0U4ZaMn9J9o5
A22irftTtFsG2nP/inbPgIr7WzQycDvLuv9Fe2VgLPfHaGUGznH/jA7JQG/u
r9GqDCzj/hudnAG7fdb9OVqdYdu/o3My4M39Pdpo+fe5/0fnZiCK+4N0Xgb+
4P4hnZ+BBdxfpE0ZSOf+I12Qgfvcn6QLLc8H9y/pogws5v4mbc7Ax4HW/U+6
OMO2P0qXWObH/VO6NANjuL9Kl2XgnY91/5Uuz8Bu7s/SFRlw5P4tXZmBxtzf
pRWZuMf9X9o+E99wf5h2yERP7h/Tjpm2/WXaKRPXuf9MO2eiBfenabdMdOL+
Ne2eiXLub9PIxG3uf9NemfDg/jitzMRC7p/TIZnQcX+dVmUih/vvdHImpnF/
nlZn4iL37+mcTGzg/j5ttJzP/X86N9NWH0DnWf6e9QN0fiZMrC+gTZbHy/oD
uiATn7E+gS7MtNUv0EWZKGR9A23OhB/rH+hiy3xZH0GXZOIa6yfo0kyMYX0F
XZaJK6y/oMstrxfrM+iKTLRh/QZdaXn+WN9BK7JwkvUftH0WlrI+hHbIwvub
1voR2jELF1lfQjtlIZL1J7RzFjawPoV2y8LvrF+h3bMQxvoWGlm4zvoX2isL
e1kfQyuz8KS5tX6GDsmCL+traFWWrf6GTraY9Tm0OgtNWb9D52ThJ9b30MYs
XGD9D52bhVasD6LzsjCL9UN0fhYcWV9Em7Jwg/VHdEEW7N9b65PoQsvfs36J
LsrCCNY30eYsXGH9E12chbusj6JLsjCW9VN0aRYSWV9Fl2VhG+uv6PIsTGZ9
Fl2RhR2s36Irs6BobK3vohVq2LH+i7ZTYz/rw2h7NQazfoyur8YL1pfRDmqo
WH9GN1FjNOvTaEc1jrN+jW6txjbWt9FOaqxj/RvdSQ1X1sfRzmrUY/0c7aJG
Q9bX0W5qfM36O7qfGs6sz6Pd1bb6PXqoGoNY30dDjaOs/6NHq1H13FofSHup
kcn6QdpXjVTWF9JKNcaw/pAOVKOE9Yl0iBrLWL9IR6jxmPWNtEqNS6x/pOPV
mMD6SDpZjSWsn6TT1TjI+kparcZ51l/SejWmsT6TzlHjW9Zv0tPV6Mb6Ttqo
xmnWf9Jz1ejH+lA6V41arB+lF6kRwPpSOs8yHutP6ZVqJLE+lc63PB+sX6XX
qlHE+lbapMZm1r/Sm9VozfpYukCNTqyfpberEcf6WrpQjamsv6X3WN6frM+l
i9S4wPpd+rAaQ1jfS5stzw/rf+kTlvFYH0wXq7Ge9cP0eTU2sL6YLlGjKeuP
6Wtq9GZ9Ml2qxlesX6ZvqdGI9c10mRqfrOvP4gdqPGF9NF2uRjLrp+mnahxi
fTVdocZD1l/Tr9S2+my6Uo1I1m/TVWpcYX03rdAgivXftJ0GZtaH0/YaDGD9
OF1fg7qsL6cdNMhl/TndRIONrE+nHTUoYf063VqDO6xvp500CGf9O91JY6uP
p501cGX9PO2iwRLW19NuGsxm/T3dT4MtrM+n3TX4wPp9eqhlfqzvp6FBb9b/
06M1uMb+ANpLgwj2D9C+GnzB/gJaqcFg9h/QgRp4sz+BDtEgi/0LdIQGP7C/
gVZp0Iv9D3S8xtYfQSdroGP/BJ2uQQf2V9BqDX5k/wWt12A++zPoHA2Wsn+D
nq5BNfZ30EYNXNj/Qc/V4DT7Q+hcDezZP0Iv0uAS+0voPA3i2X9Cr9TgHvtT
6HwNKti/Qq/V4AT7W2iTBmHsf6E3a+DF/hi6wPL8sn+G3q7B9+yvoQs1WMj+
G3qPBu/mWftz6CINitm/Qx/WYDj7e2iz5e/Z/0Of0KAm+4PoYg382T9En9dg
BvuL6BINAth/RF/TYDX7k+hSDQrYv0Tf0qAZ+5voMg1WsP+JfqBBEPuj6HIN
DOyfop9q8Gm2tb+KrtCgIfuv6FcaJLE/i67UYCj7t+gqDZ6zv4tWaNGU/V+0
nRZr2R9G22uhYf8YXV+LIvaX0Q5aDGP/Gd1Eixj2p9GOWijYv0a31qI5+9to
J62t/43upIWS/XG0sxaL2D9Hu2jRnf11tJsW/uy/o/tpUZ39ebS7Fp+WWfv3
6KFabGd/Hw0tWrD/jx6thZn9gbSXFlr2D9K+WjxhfyGt1Nr6D+lALf5hfyId
osVs9i/SEVqsZn8jrdLiL/Y/0vFazGd/JJ2stfVP0ulaHGB/Ja3Woif7L2m9
FgHsz6RztGjF/k16uhYp7O+kjVqEs/+TnqtFa/aH0rlanGf/KL1Ii+/YX0rn
adGe/af0Si02sj+Vzre8Puxfpdda5sv+VtqkxTH2v9KbtWjI/li6QIsj7J+l
t1vef+yvpQu1qMf+W3qPFqvYn0sXaeHG/l36sBah7O+lzVr8yv5f+oQWv7A/
mC7W4iD7h+nzWjRifzFdosUb9h/T17RIYn8yXWqZP/uX6Vta3Gd/M11m+Xxo
rf3P9AOtrT+aLtfiKfun6adanGJ/NV1heb3Yf02/0iKM/dl0pRbF7N+mq7TY
xv5uWqHDAvZ/03Y6fM3+cNpeh7fsH6fr6zCS/eW0gw7z2H9ON9HhD/an0446
1GX/Ot1ahyHsb6eddPjoZ+1/pzvp0Jv98bSzDlPYP0+76NCO/fW0mw5g/z3d
T4e17M+n3S3ns3+fHqrDZvb309DhFfv/6dE6Wz4A7aWz5QfQvjoUMl+AVups
+QN0oA7VmE9Ah+hs+QV0hM6Wb0CrdNjO/AM6Xod85iPQyTocYH4Cna7DQeYr
0GqdLX+B1utQg/kMdI4OkcxvoKfrsJj5DrRRh4nMf6Dn6pDKfAg6V4co5kfQ
i3TYy3wJOk+Hc8yfoFfqkMd8Cjpfh6vMr6DX6vCY+Ra0yfJ4mH9Bb9ZhOvMx
6AIdjjI/g96uQzfma9CFOuiZv0Hv0UHDfA66SIc7zO+gD+vgw3wP2qzDWeZ/
0Cd0tnwQuliH2swPoc/r8IL5InSJDqOYP0Jf02EJ80noUh3WML+EvqWz5ZvQ
ZTpkMv+EfqCD3SlrPgpdbnl+mZ9CP9Wh1klrvgpdocMc5q/QryyvD/NZ6ErL
54H5LXSVDvWZ7wKrFXqcYf4LbadHBfNhaHs91MyPoevrcZf5MrSDHt8zf4Zu
orfl09COevgzv4ZurUdr5tvQTnp8w/wbupMe55mPQzvr0Y75ObSLHsuZr0O7
6dGZ+Tt0Pz3GMJ+Hdrf8+8zvoYfq0YP5PjT0MDP/hx6tt+UD0V56eDM/iPbV
4zDzhWilHj8zf4gO1KMb84noED1UzC+iI/RYzXwjWqWHJ/OP6Hg9ypiPRCfr
sYz5SXS6HpOZr0Sr9bjE/CVar8dS5jPROXpsYn4TPV2P4cx3oo16xDP/iZ5r
ef2ZD0Xn6rGS+VH0Ij1aMl+KztMjnflT9Eo9+jCfis7X4xHzq+i1epQz34o2
6XGc+Vf0Zj3ymI9FF+jhzvwsersefszXogst82f+Fr3H8nwyn4su0iOV+V30
YT3sme9Fm/Wowfwv+oTl9WQ+GF2shwPzw+jzevRjvhhdosdl5o/R1/SYynwy
ulRvyy+jb+nx+pw134wu0+MO88/oB3rMZT4aXW4x89Pop3r0Zb4aXaFHEPPX
6Fd6zGA+G11pef8zv42u0qMW891ohQF/Mv+NtjNgOvPhaHsD9jE/jq5vwCzm
y9EOBlv+HN3EYMunox0NeOBqza+jWxtwjPl2tJMBbZl/R3cy4M4Raz4e7WzA
c4U1P492sZzPfD3azQAz8/fofgbsZz4f7W6Agfl99FDLv8d8PxqW+R+x5v/R
ow34lvmAtJcBZeOt+YG0rwGNmS9IKw2IZ/4gHWhATeYT0iEG/HjHml9IRxhw
q4Y135BWGXCX+Yd0vAElzEekkw249Kc1P5FON6AN8xVptcHy/WbNX6T1BnRl
PiOdY5kf8xvp6Qb89rM135E2GjCf+Y/0XAPOMR+SzjXAjfmR9CIDPrla8yXp
PAMWMn+SXmlA0wHWfEo634A+zK+k1xrQk/mWtMmAk8y/pDcbMJP5mHSBAc2Y
n0lvN6Aj8zXpQgN8mb9J7zGgAfM56SIDfmB+J33YgCPM96TNBlxg/id9woA1
zAeliy3vR+aH0ucNiGW+KF1iQDHzR+lrBjzta80npUsNuHzeml9K3zIghfmm
dJkB/Zl/Sj8w4A3zUelyA/5mfir91AAV81XpCsv7kfmr9CsDnJjPSlcaMJb5
rXSVAY7Md6UV2djB/FfaLhslra35sLR9NpoyP5aun428N9Z8WdohG42ZP0s3
yUZ/5tPSjtloyPxaunU2tu605tvSTtlwZf4t3SkbiczHpZ2z8S3zc2mXbDxk
vi7tlo31zN+l+2Ujg/m8tHs2+jC/lx6ajZm1rPm+NLLxpos1/5cenY17zAem
vbJhx/xg2jcb849Y84VpZTZmMH+YDsy25RPTIdl4wvxiOiIbauYb06psbPg0
4H/5x3R8NoobWfOR6eRsfK205ifT6dlY6WnNV6bV2SiKtOYv0/psfJhszWem
c7Ix8bk1v5mebnk+Q6z5ziP+H4bHWq4=
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        LineBox[CompressedData["
1:eJxd3Hlcjen/P/BjzwghZM8eQhGy9pJUCGnf1Gk/7WdNxtZgyJ5lyDImy5C9
sWbPnj3LkD3Gkj2EEL7nd17X9fnjN//M4/k47q7zPvc5933d1/V+v1tHpHhF
V1YoFNnVFIr/93/533i/2oPWWo4YSBU6lXUYlZi6+qMTXexUvzxhx6g/q4Eu
cWo9fsTmWQ4WwqVOE5WJW//Jaihc5rRzoTJ53temwuVOZl5r2p62tRaucHKw
yF244HYbYQU2/+ytCpnRXrgyqnksa/usu41wVfwZ3Gj8yxudhavjr9SVaR0m
dBU2Q9sob78udeyEf8HyI92btxxrL2yO0fMujvfY3EO4DuwSIpyzPvYUtsCH
Du4DHg/qJVwPzjV2d7Gc0Vu4PqYnut41P99HuAE6rEzptLt2X2FLPH6QU+3d
yH7CDfG8/7T0LXP6CzfC4nfzz184PUC4Mf6xaz3I6edAYSv0e/HD/42Dk3AT
jNnxa/h/PSHcFCFuezrdOS/dDBNU5VX8IgYLN8eh6h+reHyWboGBn9cV7pnt
LNwSwQsOrp3bfIhwK7xsftz53FZpa3w+erJ6XH8XOt0afYcduBxZIKxojeUX
l1ff6z1UvN4ae/6yXR58T1jRBl0Hr/vkGe0qXm+DayfLai1+Kaxoi/cP6qKV
2k283hYf9z1O+fBeWNEOPrajXtTWu4vX22Fww4cJSR+EFe1Rd8XGpvU0w8Tr
7WGuuvRb+SthRQdkDxw2r23scPF6B6y5rvt90QNhRUf8/WDXL65+I8TrHdEq
wbqe03lhhQ0yF/a4O3mQh3jdBg8bT/taPVdY0Ql3O2YNvtVqpHi9E5qbnT77
eZ6wojO2BbV/EfVVvt4ZSY3WOLSNHiVe74ItHVpqe10STu8C25FHVq/uNVq8
botja5yehq8UTrfF0ZPjs6f+lK93ReiVig6V7T3F613xulfocEO4sKIbdjf+
fXXzhfL1brDt5tj461H5end4tEreW/eNfL07bux6MTus2Rjxuh0Wlbzc/tJN
GHaoveup616dcLodSod4px9bLZxvhxHTMzLrnpXH2+Of9A271r6Xx9tjQNKC
LpOaeYnj7dH38ZtBa4YI59vjUcUox3oJwooeKC7sF315oTB6wKJqcsP7++Tx
PVDzgcUKp3vy+B7oPVsx9FMlb3F8T0R/aqOq2kEYPRHw45RP4jDh9J6oMqpm
sF2icH5PLFzpddZrvjzeAS5Hz7/8d4c83gGKfi9qHSqUxztg1oGfKTXeyeMd
cMjhWtABCx9xfC/cbuVc62Z3YfTCS93zg2GjhNN7wbbSjbV+icL5vVDtaP93
h2fJ43sjdFfPa8s2yON742Cj9JSnx+XxvfEt2O/Zlvvy+N5odLqb34sv8vg+
WN9v+ZV1lr7i+D6oXqlx3O1uwul9oGz7pX2mu3B+H7yyGVLrTLiwwhGf/1vY
8Ldf5fGOaFm/ev/8RfJ4R/Rc0CNhxmZ5vCO+36+94N9j8vi+uHH9acaOInl8
X8xpE+LQ6K08vi8cVvrF1KrmJ47vi7pfqr3ObCqs6Id7nx8syOkujH5olrWm
ro+LcHo/qMK9OvwRII/vh7aThs1MSpTH90f+NIcH96fI4/tj7u1W118sksf3
R+f09GqL/5bH98f6Tk7mt/bJ4weg6aKTvx45K48fgO6Pqt9zuSOPH4Ayy6y8
pFfy+AGY67xnbr/v8viBOLbf7+rW2v7i+IF4eBUVp1oIpw/EZFXDcTO7CucP
RPB/0ZveDxBWDMKyM6c+mHnI4wfh8q57ueeD5PGD8PzY5F4D4uTxgzB3wN7C
4HHyeON9Y+XD811+l8c7wT3vePy2RfJ4J4zuu+Tlw7/k8U7G61vLmee2yuOB
9+7n1Kr9wtbAOP3+G4dOyb8HRO27+bDgirASqBX7bs+8e/LvA1svn9GYPxfO
Bqo+a9/dtUyOBzR7XVZ5wE/hYuDDR8/vb2oGiPEHY6bfn52UlsLWg+H4Lmt+
ZkthDEZBiLbbbzbCysGIeHSnes8ewumDoRvdqt7G/sLZg7F6mb3zfRfh/MHY
5HJ69q2RwsWDEfRPxM3lfnJ8Z6TW1lhYh8nxnRFp4900KVaO74zBlQz//pYi
x3fGX03DWoaNk+M7IyGz4GK1KXJ8Z4x6m5OXOkOObzz+wrDcnfPk+M7Y0Cxg
6oElcvwhcHT7WD5/pRx/CIIrF9y2WyvHH4IDd81fZufI8Ydg9KINzx9sl+MP
gV+Tbovf7JbjD8G/SZXXXDwgxx+C0qYBZyfly/GH4Odv7kd/npLju+DUg+Ie
Pufl+C7oY2F/ZUKhHN8FxRZBLuP+leO7YI3zqp5ut+X4LqiTED3k1X05vgua
pIY2jP1Pju+CJeVp7nnP5PguqK+vSCt+Kccfii5jF6P4rRx/KCo/9u+d90GO
PxTP0ovfqD7L8YfitYtHxfuvcvyhWPB21Bu/H3L8oWhzboDXH5UCxfhDUWN4
o13bqwoXD0XtXxcvX1dDWOGKFNvuc/W/CFu7Qv/Rvm6b2sJwRVjpofVb6wor
XWE5+voFy/rC6a7osSeuWrClcLYrzobFnJvSSI7visVN9/wxzUqO74pGVTwe
xDSV47vhXdPeLTo3l+O7YdDmVScutpDju0GrLXTxaiXHd0OlXV718qzl+G5I
UNxf9rO1HN8Nq94kD+3UVo7vBucFHr/3aifHd4PtKYtj7drL8d2hT8pVfpa2
dsfn0GnntnWQ47vDd7BHpHtHOb47ag3A/DPS6e4YOrnOti42cnx3zM5+1sog
ne+OdcXTh66XLnbHNcfuE/ZLK4Zhr9fp5nukrYfho9+Z6cukMQwDV3ibh0sr
h6G6TZ9a9aXTh8Hf9u3NzfL9ZA/D9gG5Z7pI5w9Dv98Su/0h4ykehpgjt0Kf
/S/+4WiOcZvb/C/+4bi4YXG4m/y8MBzWy7yu+crPUzkc1z12jhzVRo4/HLPr
LWxh/7/PfzjOLNs5/4c8X/nD0bD/qZd7W8rxh+Ov9rGTg+T5VYyAWUiXBc+b
yfFHYOmO1dFR8vuBEXi9zMP9vPz+KEdgRNmJiS0by/FH4NPulW6hDeX4IzAx
adyr2Q3k+CNgWVhr+/p6cvwRuF6/7aUt8vus8EDZoDXzsuX33doD2+MzbKfV
kuN7IP5+xXPvmnJ8D4xpP6xqA/n7SffAyZqP8vLl7yvbA+Mnx7uMrSzH90An
/b5HJT/l798DJ1ZduxT5Xf7+R6JK8ypDLsnfs/VIDOpwJs2mXP7+RyJi3sMc
7Uf5+x+JngMDam17L3//I9FgQ9rNm/L6kT0SrxrfGfLhlbz+jMQ885gZP5/L
8UdifsSY6xVP5fijMDWjU8RLeb2yHoUxy69Gni+W44/Cmrg55n/ek+OPws0Z
pfOV/7v+jcLrjj+bN7opxx+FZRZWJYevyfFHYW5M5dYB8npaPAqvxr/5/PiC
HH80JqSnrYo6K8cfDXuXLQNvyuszRiPsVOVfBh6X44/GycLk7kuPyPFH4/gs
3zuP5PU+ezSOlfzRr+0+Of5oaLrNHu+/S44/GldG/HJyyg45vieGOyUPXbVF
2MITPWIzbbZtlO/HE9fOXl62c52wnSe8vOsf3vqXfH+eyKl55thKef/y9ERm
75JLU5bJ9+uJgIzv5oGLhdWe+GzTcn3HBfL9G8e78P7gy9nCmZ64snvfhL/l
/TPbEz9yB/3iO1U41xPt6ryb93WSjM8T6ulXbJeOFy70RMOmk81tDDJeTyz9
Ye+VqxYu9cTA0DNtuifK+Mfgbdf9a9fL+73FGHi9bffJIlLGb3yuSb4AfaiM
fwzK9Y03XAqU8Y/BtkkNh1n7yvjH4LL/FI84Txn/GCSdy7u6aYSMfwz+6Xb1
+0NXGf8YVFSZ/baes4x/DF5MGnW270AZ/xhUNnfaGugo4x+DlXe67tf0lPGP
wRHvNRZTu8n4x2DonH+vzu4k4x+DWfsPt5rbTsY/BuFrqjWe0UrG74XXn+oX
pTWV8XuhTn71qVENZfxeOLPjSM9hFjJ+L2RNvFGrYy0ZvxfK7DfZ/Kgm4/dC
5UleOZcUMn4v/FG2Iyfrm5j/qb2wLSTCLeSTnD96IfXJpTVN3glnGt9PtPW/
hS/lfNILYxa5//jtqXCuF1K6VerX9aGcX3rhn/4X11+9I1zoheltvwZpb8j5
phfy7mWnmcv5a6nx/TXY2GTNeTn/9UaNAfmBdqeFLbxx7FCyz4F8OR/2hl1F
1fZOB4XtjM+B4zc8PbJHzo+9ob7tvrtvrrCnN7x/7M7ZsVnOl71xokrGfeu/
ZfzeOOTloJ4n5+Pp3tiYXTnt43IZvzd6vK9vEbhExu8NyxVjvfLmy/i90bDX
7oAGs2T83lix7viA+Gkyfm/YKyysDk+S8XujbPHPKuZpMn5v9C+40sRfK+P3
wfmGf2tXJ8r4fVDlfWrHRzEyfh+k7m83pk24jN8HqqxEs7BgGb8PPDRvorN8
Zfw+eJRvO/XSaBm/D5alzzNUGi7j98Gz6sEB9i4yfh9ceHLSOXSQjN8H/meK
PTIcZfw+mOu+Zf6OHjJ+H+y9amZ93VbGb3z/2tNWnzrI+H0waceKzIatZfw+
WD22w189msn4fdBV9zF4ZEMZvy9uFE25H11Xxu8Ll36dB02sKeP3Rc1/XRdl
VpHx+8LftdH7tfL5D75I9y/Q7/os7OmLxLMT7Y+/E1b64npLF6fLL4XVvjge
bb3n9hP5fOmLjT+rbX78QDjTFy3j7jq8viWc7YteiimJZdeEc30Rfu5w7NeL
8nnUF4a+oQN/nhEu9MWXt82qVjkuXOyL89M3Xa12SLjUGJ/rP0dr7JXPr35Y
V/HvQ7NcYQs/dNm6a3TNzcLWftjkV9yq5nphOz9kHXqlMlst4/dDo5bRg2tk
yfj9MPTblaPV5PO30g9/Xs/7WmWujN8PDV6uMqs8Q8b///0/08/4vB35+ft4
Gb8fkru4VavQyfj9UFC1G74myfj98ObhiiPlsTJ+P6iGNFj2OVzG74fgTa2K
PwXL+P1wy9sj95OvjN8fYVU6t/w8Wsbvj6P7R6F8mIzfH30m+HX9OkTG7w9z
i8ffKgbK+P0x5/Sa4wpHGb8/1vRyzqrWQ8bvjws/0xfXspXx++Pp0rbn63eQ
cfsjUPHVt5m1jN8friseDG8v10ey/dHt4cF8O0sZvz9W9p52aWAdGb8/fs/p
M8fDTMbvj+37n9ceW1nG748vnfcnpVSI9ZhSfxw59e+xaZ/k+k0AunVMb72i
VNh4nb8z95f1O18IWwcgdu0t5cXHwnYBmOYZnfLivlzvCUCveX2f1bwlbLzv
eXb9/KDLNWFlAFL3+Wg8Lwob78O5jq12jTsj14cC0K9p/8Nr5HpSZgCafFm/
8dJB4ewAqKdoZ//YI5wbgM5O1ybZ58r1qADkza+3IlauTxnnWVmxiz9nrxc2
zuOWuN7Zfm+1jD8AVerMKmqxXMYfCKcXQfPCF8v4A3GxT7enOfNk/IGonaio
+DBTxh+Imz/fPnOeKuMPhDpk4Ik/Jsr4A/H63IiNr1Jl/IH4Er12m5tGxm88
vvbrtxsSZPyBCAv7PvOXGBl/IDy2nV+gVcr4je+vYlzrB0Ey/kDsrjTC39NX
xh+IFe33jTg9WsYfiGozA5sMHi7jD8SFKt9u57vI+AMxZMjCLUOdZPxB+H7C
acPlvjL+INR4HfA01EHGHwTPNmEzP8j1RLsgzLhb7e95nWT8QQg62SO4azsZ
fxAWX/lx6mpLGX8QdiTtqzS5iYw/CE1WPOjcXa5Xphv/fVP70Kd1ZPxB8Fv3
Z966mjL+IKhrefrHVpXxB+Hn1G3+9j/lemgQ6l7yu1npq3BhELTTOpUVlQkX
B2Gg5+ALe98Klwah1OnLpJUv5PppMBrVfN1x5hNhi2D8Hfq1ZHyxsHUwJrg6
F+vuCNsF47C+c1fDDbleGwznraFvJ10R9gyGqt1V1/kXhJXBqF6W773hjLA6
GM2n/tP79P/Wd4NRrcJg8eawcGYwRl/pWrnlfuHsYCzu5dbVb7dwbjB65KTv
WrpDxh8Mn6kv9j7YLOMPRq05JYH2cj25OBh1FvU8OmeNjD8YOyzu1Hy7SsYf
ghZXXccGZ8n4Q3BsjeO9wsUy/hAYKl3aNnqBjD8E75/89uHmbBl/CDIndLsW
N0PGH4K77+poq02V8Yeg5uhjHzdPkvGHwGGE+/Sg8TL+ENzpWdvF0iDjD0HD
mw+Di9Qy/hBsG1f5wwa5fp5rfD9nG9unq2T8IQj+5DgoKkrGH4KtW187eytl
/CEY2NtONTJExh+Cq1kpN70CZPxjcTB/4YFIHxn/WPTY/bF/uqeMfyyyrhhm
5HjI+MfCo3H8qbvuMv6xQOrmdi2GyvjHYnD3hYVxg2X8Y7Gz3/ePxwfK+Mfi
6kGf4zb9ZPxjMW/KzMiVvWX8Y9F0Rj2zZj1l/GMxfvn3+xvl/kLuWKjfPmvs
bCvjH4v6RYr/ntvI+I3vf3xdzV/tZfxjEbVU/yGijYzfGG9M11UOrWT8oZg2
7safls1l/KGY+Of2LlWayPhDkfhh+XhFIxl/KJqVtDtk3kDGH4o3gTNtbOR+
iGco7hzfWOZVW8Yfio3alv7zfpHxh+LaLceZN2vI+ENR8V/FIftqMv5QuEXa
2q+qLOMPxe057i0aK2T8oZj12x8H136X+zGh6PephZvTN+HCUBy4vffbq3Lh
4lCsaF2l0dZPwqWhCP1j3LWJZXL/Jwwtj4Vqw94LW4Sh++u79j6lwtZheN+9
bEzwG2G7MMxdlNHA8EruF4Wh7oiovDUvhD3DsKfWgGkPS4SVYWih2rXP4Zmw
OgwJnuErVj6R+0th+LHuurrRY+HMMITdzvrt70fC2WEoO9nPcthD4dwwuKlG
aioVy/jDoHuT/OjSfRl/GHruGrnzn3syfuPxqm22m+/K+MPQPzBxdd4dGb8S
j45m+N67LWymxF+DO6yxkrZQ4uLkxVfibwlbKeF7YrTj9SL5+Shx4pqFja+0
jRJVigrKXt+Un5cS56O3flgt7ahE/U2OE1TSUMJ/W9//hku7K9H/TOF0V2lP
JSJbTTgQLB2ghCbMqni2tFKJC7+987ourVJCcfKoxlG+H7USB4/sWrVPOk0J
yzUTe3nJeNKVWLFo9F9mMt4MJa73ezvojnSm8Xj1rl/Pyc8rS4mp9RYeuCE/
z2wl1vxsrVLIzz9HicYjt71xeyDPlxKr53U/uE2erzwlTvlGDughz2++Es2f
nH3073/CBUqUV+yyXi6/H4VKjH8yPH6i/P4UKeGavbxX+nN5fo3nb/jSr+tf
Cpco8TW3S8+Xr+X5VmJH3SHB3vL7XK7E0l8uld6T33dFOLKvFermfJTnPxxf
fk+MCZG/H4tw1Nv73GOM/H1ZheNxrxPb4n/I8x+OXy3+qbepkvh92oSjycFd
VWrL37NdOFpOaVVvmZmwYzgaNc8562Yurx/hKF6beLSVvH64h6N8TpWZrSzl
9SQc42vM3OdmJRwQjo+z1rzIktcrZTiq/bHiUIPWwqpwxB6OvJAnr3/qcLR5
+/fBjM7CaeF4+PZSt+nyepoejhHWrS5ucRDOCEfNyfugkNfnzHBYPdnYe6qT
cFY4hi76HtpDXu+zw7Hj6ZXEeiOEc8JxOCmwkfUYeb0Kh1PbD5Zh/sJ54fj7
e5/2l8fK63c4Luf9UkMj718F4VA+3jhpaIK8nofjaM+9o0dqhYuMf9/C322W
vH8WG8dP6dPja7pwifF8PMl+mJ0hr/fhOP1jdufJmcLl4Vh/c+uTRfJ+r4jA
zPfz3z7IFjaLwJ5Rf9rEbJL3gwjEHexr6LBT2CoCMapLh1sflPeHCKzILX4T
cFKe/whsbNHuy4WL8vxHYNi6eVcm35TnPwL5dWI1KQ/l+Y/ArE0RN/56Kc9/
BGx/2VG53id5/iPwpn6t7ycUYv4XEIGaTW4X7q8l55cRGGPnOP9DI2FVBL5l
1RmubSPnmxHY5W7Tso+cv6ZFIHuOa6ch/eT8MwJ2+3otWOYqnBGBNiUP03p5
y/loBE6dTrBsKefjWRE46TbwD68kOT+NQKPolg7X5f55TgQmnBjWfX2GnK9G
oPGg386dWCqcF4HhHm1GO/wt5+8R+NWxn/nnXcIFETjdfIVf7RNyPh+BKcte
ZKRdFS6KQJ+uR6v0eyTn9xFwct3U1fu9cEkExh8erjsln/9KjZ/ny1i3RQ2E
yyPwvMWXNgfbyeffSLxM6v/74N7CZpGYdCP/Qwd3+TwciTdTpnxNDBK2isS8
9sVdGsrnb+tIjJp43rq1fH63icSrqXvTFi2Wz8uRyF697Vb8RmHHSChUoaVb
Dsrn50jAzFrtXyjsHokv1b/WT5HrI56ReBy1aXnZV+GASCy7t+78cwu5vhQJ
ly5Nxnl2FFZFomnr9+rOcj1JHYkr6otLxsv1qbRI3H/95aRTklx/ikTr5skv
Jsv984xIWN48VOa4Wq5HRWLL3eq3U/YJZ0Wi0s+Spe3lemJ2JEJPxXQLkeuV
OZF41vfKpobV5XptJNqv32Tl01o4LxLOz6dkNpHru/mROOZxwVYl15MLjO9n
8Mk6zqlyPTcST350GrtJrp8XRaL53EYu2f/I9d1I2BcfLrOR+wslkXA7b/v3
ULkfUhqJX4cqMsvriP2Y8kg0PN2wbEh3uf8ThddwsOzsKWwWBXXUtt7bNMIW
Uai+89P6y4uFraKwv1K/LYv3yv2iKPxV896yb7eEbaJw3vDzQM0fwnZRxvPx
Njq/TRDtGIW6FQtftHYXRhRadz+1wi5Z2D0K3av8c+bNEmFP4/trVu9Y6CHh
gCjcWqS+PvWxsDIKkVMCPcbWDqZVUTg3YVxKaW9hdRQaHNo6ZVC4cFoU6o1s
sn/YXOH0KKQ2thxjmSecEQU7j4aG7MfCmVG4VrxwWGm9EDrL+H6unCmpBuHs
KESV/Br+X7JwThQU59bsmb1aODcKa7tVufX9knBeFA62OLFjkPG5w+T8KPTo
Xmw+uodwQRTG3crOtYsWLozCk1elrk+yhIuicFO/Izr5onBxFHK9Xs++WDmU
LonC92/Nm1XtK1wahYGveoY1UAuXR6Gr/sjUio3Cimgo9z1dmF8sbBYN9bmU
ccqmYbRFNLpabPh610fYKhrnG7oe7p0pbB2NXuHBfZMvCNtEo2rM3AfHqipp
u2jMb+K3/2BbYcdo7DhQ4+92Q4QRjZf6xN8rIoTdo1HtavV2Q6YJe0bDwqyi
e/k64YBoXLpUeWCzU8LKaOzq7n98y1NhVTSsinY32WScx5isjsaGuYGT63cR
TotGXlI982cjhdOjYV446kh7jXBGNC6kjU65uEQ4Mxp9mo+5eTdPOCsaAyvf
nON1Tzg7GqOPVP5pWzmCzonG2yeVpsR3FM6Nhu32Rb1qjhTOi8ZQnzUda+iE
86Oxv42iV8Ry4YJolNzqb2WVL1wYjRut58d0eCZcFI30rLcLZteJpIujUe/x
8AeDewuXRONv86u/DgsVLo1Gao9xUatnCJdHo+OUWb8O3CGsiEHfb6lpbYuE
zWKwaOeuzx6VomiLGISOOq3e21nYKga9zH4dEOIjbB2DtMW9/ug3WdgmBkvd
U7NG5gjbxcB1RbL7wqvCjjHAnNPzKn0XRgzMMyf2XdExmnaPgdnPx9X9vYQ9
Y/Dhxak/e04SDojB79/mLumSI6yMQfU/V2n7XRNWxWDo+m07g38Iq2Ng7+l8
ananGDotBscjOzY44SOcHoOvP43/TYnJNzkjBjv5Op0Zg9Y8ns6KQR/+fTo7
Bt9Xmcanc2Kg4/ujc2NQzPdP58WgE+Oj843vn/HTBf/7fOjC/31+dNH/Pl+6
OAYT+fnTJTEYzPNDl8bAj+ePLo/BCp5fWhGLNjz/tFksFPx+0Bax0PD7Q1vF
YhW/X7R1LKry+0fbxELL7ydtF4uL/P7SjrF4we83jVj5/afdY9GVvw/aMxad
+PuhA2LxiL8vWhkLL/7+aFUs7Pn7pNXG4/n7pdNicYq/bzo9Ft8um37/dEYs
dvL6QGfGYiWvH3RWLBrw+kJnx2IPrz90Tiwu8PpE5xo/H16/6LxYVOH1jc6P
ldc/uiAWubw+0oWxmMTrJ10Uix/RpusrXRyLHrz+0iXG43l9pktj0Y/Xb7rc
eD55facVKvTl9Z82U6Ee7w+0hQodeP+grVTy/kJbq7CF9x/aRoVzvD/Rdirk
8f5FO6qQwPsbDRWsef+j3VXYwPsj7anCet4/6QAVGvD+SitVcOH9l1ap8C/v
z7Rahb28f9NpKnTm/Z1OVyGS9386Q4UXHqb5AZ2pQl3OH+gsFXZxfkFnq+DO
+Qedo8Ipzk/oXBUKOH+h81RoyfkNna+S8x+6QIV330zzI7pQha/WpvkTXaSS
8yu6WIVVnH/RJSps5/yMLjWer39M8ze6XCXnd7QiDkc4/6PN4lCZ80PaIg4T
OX+kreLgwvklbR2Hjpx/0jZxaMj5KW0Xh6ucv9KOcajE+S2NOKzj/Jd2j8NQ
zo9pzzjU4vyZDojDS86vaWUcQjj/plVx+PbDND+n1XFYw/k7nRaHppzf0+lx
qMP5P50Rhyd8PqAz43CJzw90Vhxq8PmCzo5DNz5/0DlxSOPzCZ0bhwt8fqHz
4vCRzzd0fhys+fxDF8Thaazp+YgujMNiPj/RRXF4wOcrujgOjnz+okvioOXz
GV0ahyI+v9HlcQjl8x2tiMdjPv/RZvG4wudD2iIe5nx+pK3ikcrnS9o6Xj5/
0jbxaMXnU9ouXj6/0o7x2MjnWxrxiOfzL+0ej558PqY94+XzMx0QDwOfr2ll
PCrz+ZtWxWMPn89pdTx28vmdTjO+Pz7f0+nxsODzP50Rj1lcH6Az47GS6wd0
Vjw+c32Bzo6HL9cf6Jx4fLcyrU/QufF4wvULOs84Htc36Px4TOD6B10Qj7Nc
H6EL49GX6yd0UTxWc32FLo7HHK6/0CXxiOP6DF0ajwCu39Dl8VjP9R1akYA5
XP+hzRKQzfUh2iIBx7h+RFslIJzrS7R1ApZy/Ym2ScBurk/Rdgk4xPUr2jEB
wVzfopGAAq5/0e4JWMf1MdozAc5cP6MDErCV62u0MgFbuP5GqxLQketztDoB
9bh+R6cloDLX9+j0BPTn+h+dkYBzXB+kMxNgzfVDOisBSq4v0tkJ+LjEtP5I
5ySghOuTdG4Ckrl+Secl4AnXN+n8BFzn+iddkICKZqb1UbowAU25fkoXJaAB
11fp4gRouf5KlyTgPtdn6dIEfNpjWr+lyxPwgeu7tCIRi7j+S5slIpPrw7RF
ItZw/Zi2SsQ7ri/T1oko5PozbZMIR65P03aJSOb6Ne2YiFdc36aRiDpc/6bd
E3Gc6+O0p/H9cP2cDkhEVa6v08pELOX6O61KRBzX52l1Ik5x/Z5OS8QVru/T
6YmYy/V/OiMRZtwfoDMTkcP9AzorEZ9OmPYX6OxEHOX+A52TCC33J+jcRIRw
/4LOS0Q37m/Q+YkYwf0PusA4PvdH6MJEnOT+CV2UiG83TfsrdHEidnD/hS4x
/j3uz9CliTjP/Ru6PBGruL9DK5JQwv0f2iwJvbg/RFsk4SH3j2irJHTj/hJt
nYQ07j/RNkkYxP0p2i4Jr7h/RTsmyf0tGkn4wv0v2j0Jau6P0Z5JaMz9Mzog
CXncX6OVSajB/TdalYRZ3J+j1cbxuX9HpyXBlvt7dHoS6nD/j85Igj/3B+nM
JGRx/5DOSsJ27i/S2Ulw5P4jnZOE2dyfpHOT8C/3L+m8JID7m3R+Er5x/5Mu
SMJZ7o/ShUlYxv1TuigJl7m/Shcn4QX3X+mSJFhyf5YuTYKW+7d0eRJ03N+l
FcmYwP1f2iwZ27k/TFskYyz3j2mrZHTh/jJtnWx8HjLtP9M2yUjk/jRtlyz3
r2nHZDTk/jaNZPzG/W/aPRnnuT9OeyZjFffP6YBk9OH+Oq1MxiDuv9OqZDhz
f55WJ2MB9+/ptGTYc3+fTk/Gbu7/0xnJuMz8ADrT+O+ZP0BnJWML8wvo7GQE
MP+AzklGAvMT6NxkbGD+Ap2XjGrMb6Dzk3GF+Q90gXE85kfQhcn4McqUP0EX
Jcv8Cro4GfOYf0GXJKOU+Rl0aTKSmb9BlyfjJPM7aEUK6jP/gzZLwUbmh9AW
KajK/BHaKgXVmV9CW6fAi/kntE2KzE+h7VJk/grtaPz3zG+hkYLKzH+h3VPQ
mPkxtGcKfnww5c/QASkyv4ZWpsj8G1qVgr3Mz6HVKUhj/g6dloI/md9Dpxvj
Z/4PnZGC98wPojNT0If5Q3RWCmKZX0Rnp6A284/onBRUmmbKT6JzU5DA/CU6
LwXezG+i81Mwl/lPdEEKGjI/ii5MwRbmT9FFKTK/ii5OgS/zr+iSFExifhZd
moKRzN+iy1PwC/O7aIUaX5n/RVdVA8wPo83UKGT+GG2uxo8Zpvwy2kKNhcw/
oy3V2Mr8NNpKLfPX6OZquDG/jbZWI5D5b3Q7NS4xP462UaOU+XO0rRovmV9H
26mRwPw72kGNq8zPox3VMGf+Hj1AjbPM76OhRk/m/9Euxvhqm/IDaXc15jJ/
kPZQYxnzC2lPNXYz/5D2UcOa+Yl0gBpJzF+kQ9RowfxGWmkcn/mPdJQam5kf
SavUMn+STlRjBPMrabUavZl/SevVmM78TDpNjQjmb9IT1bjJ/E46XY1OzP+k
p6uxn/mhdIYan5g/Ss9VYxPzS+lMNdKZf0ovUWM581PpLDVsmb9Kr1LDmfmt
dLYa/sx/pder8ZD5sXSOGseZP0tvVWMt82vpXDXmM/+W3q1Gdebn0nlqmb9L
H1LjEPN76Xw1Qpj/S59U41/mB9MFxu8n84fpC2rEM7+YLlTjFfOP6evGv8/8
ZLpIjRjmL9N31XjD/Ga6WI2fpvVn4cdqWDA/mi5RYynzp+lXavRjfjVdqkY9
5l/TZcbPn/nZdLkaG5m/TVeoYcP8blqhwVrmf9NVNRjM/HDaTIOzzB+nzTX4
yPxy2kIDLfPPaUsNlMxPp600cGD+Ot1cgybMb6etNdjM/He6nQb5zI+nbTQy
f562Nf595tfTdhpMYv497aCBF/PzaUeNzN+nB2jgzPx+GhpcY/4/7aJBB9YH
0O4aLGf9AO2hwUTWF9CeGll/QPtoZH0CHaDBTNYv0CEaeLK+gVZqcI71D3SU
Bk9ZH0GrNFjM+gk6UYNbrK+g1cZ4WH9B6zWIYn0GnaaR9Rv0RA0UrO+g0zU4
xvoPeroGfVgfQmdo8IH1I/RcDbqyvoTONL4/1p/QSzSoxfoUOkuDuqxfoVdp
0In1LXS2BmtY/0Kv12AP62PoHA0Os36G3qrBSNbX0LkaRLP+ht6twZc0U30O
naeR9Tv0IQ0OsL6Hzjd+Hqz/oU9qUF7fVB9EF2iwi/VD9AUNJrC+iC7UYAPr
j+jrGiSyPoku0sCD9Uv0XQ0esb6JLtYYn49N9U/0Yw22sj6KLtFgKeun6Fca
fJ9oqq+iSzV4x/orukyDBazPoss1OM36LbpCg9qs76IVWln/RVfVwo/1YbSZ
FlNZP0aba2V9GW2hxR7Wn9GWWixjfRptpcW3Wqb6Nbq5Fg9Y30Zba/GF9W90
O62sj6NttIhl/Rxtq8VZ1tfRdlpsZ/0d7WCMh/V5tKPWeC021e/RA7TwZX0f
DS1esP6PdtGiF+sDaXetrB+kPbSoy/pC2lMr6w9pHy3asj6RDtDiM+sX6RAt
LrG+kVZq0Y71j3SU8f2wPpJWaRHE+kk6USvrK2m1FqtZf0nrtRjN+kw6TYtz
rN+kJ2rRkfWddLoWQ1j/SU/XyvpQOkOLeNaP0nON55v1pXSmFvmsP6WXGM8P
61PpLC0CWL9Kr9LClvWtdLbx82P9K73eeP5YH0vnaJHB+ll6qxbzWV9L52rx
nPW39G5jvKzPpfO0+JP1u/QhLUayvpfO10LD+l/6pBbTWB9MF2gxi/XD9AUt
HrG+mC7Uyvpj+roWnVifTBdpZf0yfVeLPqxvpouN3/9mpvpn+rEWB1kfTZdo
0YX10/Qr4/tlfTVdqsUx1l/TZVoMZ302Xa5FMuu36Qot1rK+m1bo8JL133RV
Ha6wPpw206Eu68dpcx2msL6cttDhHevPaUsd3FifTlvpUMz6dbq5Tta309Y6
VGX9O91Oh7Wsj6dtdDBn/Txtq8Nh1tfTdjrMYP097aDDOdbn047G41m/Tw/Q
4Rjr+2no0IT1/7SLDr7sD0C769CT/QNoDx02sb8A7amDE/sP0D46fO9o6k9A
B+jQjf0L6BAdnrO/Aa3UYT37H9BROtkfgVbp8Bf7J9CJOtlfgVbrMIj9F2i9
DlXYn4FO02E4+zfQE43js78Dna6Div0f6Ok62R+CztDJ/hH0XB0Wsr8EnalD
LPtP0EuMf3+nqT8FnaVDKPtX0Kt06MX+FnS2Dq/Y/4Jer0NN9segc3T4nf0z
6K06HGR/DTpXh2bsv0Hv1qER+3PQeTr4sH8HfUiHePb3oPN1ULL/B31SJ/uD
0AU6VAwz9Q+hL+jQkv1F6EIdJrP/CH1dhxL2J6GLdLjL/iX0XR2+/mfqb0IX
69Ca/U/oxzrUYn8UukSHX9k/hX5lPL/sr0KX6vAz3tR/hS7TYSX7s9DlOlxm
/xa6Qgdr9nehFXpsYv8Xuqoe79gfhjbT4wn7x9DmepxkfxnaQg9v9p+hLfXw
YX8a2kqPXPavoZvr4c7+NrS1Hvbsf0O30yOb/XFoGz36s38ObatHb/bXoe30
CGT/HdpBjyXsz0M76tGL/XvoAXqEsr8PDT1+Zf8f2sUYD/sD0e56rGL/INpD
j+nsL0R76hHH/kO0jx5B7E9EBxg/L/YvokOM75/9jWilHnPY/4iO0uMm+yPR
Kj1as38SnajHp6em/kq0Wo/17L9E6/Woz/5MdJoeXuzfRE/UQ8/+TnS6HrfZ
/4merpf9oegMPQawfxQ912j2l6Iz9Xi9wtR/il6ixwT2p6Kz9LjH/lX0Kj0u
sr8Vna3HIva/otcbzzf7Y9E5xvPD/ln0Vj2Os78WnavHP+y/Re/WYxb7c9F5
ejxm/y76kB5t2d+LztejEft/0Sf1+J39wegCPTqwfxh9QY809hejC/XYzf5j
9HU9LNifjC7SI5z9y+i7elRifzO6WI9z7H9GP9bDjP3R6BI9WrB/Gv3KOD77
q9Glehxm/zW6TI9v7M9Gl+vRjf3b6ApjvOzvRisMKGb/N7qqQfaHo80MiGX/
ONrcAAX7y9EWBmxi/zna0oBm7E9HWxnwkP3r6OYGHGV/O9raALD/Hd3OgDdH
TP3xaBsDLNg/j7Y14Dr769F2Blxi/z3awYAD7M9HOxowif376AEGlPU19fej
YUAD9v+jXQyyPyDtbsC7kab+gbSHAfbsL0h7GhDB/oO0jwGt2Z+QDjC+3/um
/oV0iAHvq5j6G9JKAx6w/yEdZcAN9kekVcbPm/0T6UQDOrG/Iq02YB37L9J6
AxzZn5FOM36e7N9ITzTg7U5Tf0c63YA57P9ITzfgKvtD0hkG9Gf/SHqu8fNi
f0k604A/2X+SXmJ8v71N/SnpLAOGsn8lvcqADPa3pLMNyGb/S3q98e+zPyad
Y0AA+2fSWw3wZn9NOtd4PPtv0rsNaMz+nHSeAb+zfyd9yICN7O9J5xvwB/t/
0ieN54/9QekCAzazfyh9wYBd7C9KFxqwnP1H6evGzzfW1J+ULjLg/HJT/1L6
rgF12N+ULjbAn/1P6ccGvGR/VLrEgPvsn0q/MqCA/VXpUgOs2H+VLjNgJPuz
0uUGxLN/K11hQFv2d6UVqbjM/q90VaPZH5Y2S0V79o+lzVNR+MnUX5a2SMUQ
9p+lLVPhwv60tFUqGrN/Ld08FW+2m/rb0tapsv8t3S4VJ9gfl7ZJhRf759K2
qXjA/rq0XSomsf8u7ZCKohWm/ry0Yyq82b+XHpCKq9VN/X1ppOIM+//SLqnQ
sj8w7Z6KRuwfTHukGp8PTP2Fac9UDGf/YdonFZvYn5gOSMVy9i+mQ1Jhxv7G
tDIVI9n/mI5KxW91Tf2RaVUqbnua+ifTianwW2Dqr0yrU+EWZuq/TOtTMWOc
qT8znZaK6mWm/s30ROPn3crU3/no/wExhXgX
         "]]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        LineBox[CompressedData["
1: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
f7CxYs//BJjHFY01dGTP/wS0dnubp81hz/8EzNaKfj/Knz3/E5D0X9a7meHs
+S+12VbuYvZ+0ZSA5TuztW+I2fM/AZzL7l+HLyArJOLCpAW7speTlRNxWDez
o/86smoiLqoVV+9j7zfqiUhre9nisoesnQjNXm9MOh8kGyXiyD0T15snyKaJ
sLFoMPrvPNkiEaW7+6zLZu9XSESAjrnfugdkJ6k3FrvnvyBzEqHRdbZ7xQey
XyKCqu1GNreQuYnQMYw8Ma6DzEtEm/2jq0uU2ftfIoq7WE9834+cmoj+ji8e
+w8lpyVCdd6WjGeG5IxEuI77NiR5HDkrEa8Od0nsa0nOS0TyzjTvi47k/ERU
Hjt8aIkHuSARV+IlPt7B5JJEbLg5ebg5j1yWiIQpCq16InJFIqpd3Q/oLCBf
TcSvInvN0SvIVYno12mOkTN7f65JxIu3gw4Kd7DzfyKW1l9buX8/O/8nIm/N
2fymY+z8n4ie0Xtv2p9n53/p7w8t/rLvJjv/J2FswaKPA2vIyklwiJi+PYe9
76smoadrQYPWF/b+nwShZemJsjb2/p8ErxHtL0O6svN/ErYnLpvZrx87/0vj
dS/X3RvKzv9JeCbaPS9/BBlJUFOWdJ1rTnZKgn3U3/BwGzInCQ8iRbN8XMl+
SXA/kDDC15/MTYKeUVNIZBSZlwSzrXEd89n5iJ8EnuGhxt3zyalJUH3+feDD
FeS0JDSHPAlRyyVnJKF2QcDBkF3krCQ8elf9uZSdz/Kk/b/SreugU+T8JBxY
1aduyRV2/kvCjryoqI777PyXhPVdXixcXMfOf0m4FnNAQ+0zO/8lQXeP59CS
X+z8l4TisjKJb1c6X1Yl4dymfio9+pNrkrBP5cvdK1rkuiSU5ZgWZ40k1yeh
h1PvVZGTyE1JGHi3d6DdNHJrEj779uo2ypOskIyp88bP1+GSlZOxxaN9v3Yi
WTUZG6LHLTCeQ1ZPxrXz9W+slpO1k7H/Z/qt4Bx2/k9GvwmHDJbvZOf/ZIQG
RL84eZCd/5Mxueend63sfI9kXH94daTNNXb+T0a09/38bPZ9gJOMJZzh45te
s/N/MpQbtap9mtn5Pxl3XsSKr3Sw838yJm1s7GLbi75P8JPxZt7zlMvs+0Zq
MtaOLDzlZUhOS0ZeaddLDWbkjGSceNywZI0tOSsZbiHZnydxyHnJKHMVNjcG
k/OTYepis7g4nn3/Scb0Nz82SGaz7z/J8Hx/RdNxOfv+k4z60wY9dTew7z/J
cL90wavrbvb9Jxla5cs/t5Sw7z/S8ei97drHs+z7TzJUA6Oef7zJvv8k4+i1
+UO/PWHff6TzN//Mgq4f2PefZHxXNv+h85N9/5HOd92o2dOUAuRW4KPy7oh2
UX9yFz48017N2q9DVubjTJ3Tiw9jyL34yDq5ZMQ4K7IqH/tNvs1YPIOsxkfF
aBM8DyCr83FMv+WXdSxZk48eYdMFB2aRtfnIK4vYprWMrM/H5f77JFtzyEZ8
nFUsatbZTR7JR6uXXfeSw2RTPtSOJpROqyCb8RE9JfDT29tkCz4m64j3rX5O
nsrHppkzay0byOCjVPnIyh9tZHs+luXm/Xeie6DcTnzM+WhiskidPIMPjZmX
+3gakjl8uKp+nTlqAtmLD4MJsa/6OJD9+GgcNaCyzZMcxMe2JSqNn8PJXKm3
bQ34ICBH8tE/0bzL5zQyjw8js/lvW9eSE/iot572q9cOMp+P0fuzJo84SBbz
8VYzc4/rGXKqdHw3rh435yZ5Hh9fJ+jVHXxKTuPjecffgk8fyUv48N6ntMK0
jZzBx90o23nzuwfJvYqP+VeaFtxTJ2fxcWf2rNVjjMg5fAzUj92TM5Gcx8cY
yyUVnRzJW/lIeHOkNsWHnM+H++kef1qiyHv4KLtyc8BsCbmAj31OUSO6LiUX
8TFrZ7zZlhxyCR/tE3eZWewhl0r7G/DD8PlRchkfjoZpvTIvkk/zoSJJr7O6
T67go+Vs3K7fr8iVfJj0vcup+Eq+yoekddbHVYrBct/kQ100IymsH7mKjwFv
op5a6pKr+fBX7jpWdxy5ho+qz3lJKrbkZ3wsbSjNVvQg10nnf+fg/I4w8hs+
0mXtQnI9Hw9l8enkBvr99eQmPvrJ8u8if6PrO0Juld6/suu/QP7Dh7Gsf/fI
CgI0/us/uYsA/WXj00JWFmC6bPw6h8jdSyAf3/5kVQE6ZOOvT1YTYI5sfszI
6gLsls2fA1lTgOOy+fUmawvg8W/+yfoCxMnujxSykUB+/ywnjxRATXZ/bSSb
CuT3XwHZTIA02f1ZRrYQoEp2/14jTxXAS3Z/PyFDgJp/9z/ZXiBfH7/JTgLk
ytZPr1C5ZwjwUba+hpI5Avn6G032EuC9bH1ak/0E8vXrRg6SXr9sfXPJXAF2
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
         "]]}, {
        Hue[0.030679774997896203`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        LineBox[CompressedData["
1:eJw13Hdczd8fB/BEhCQ7REMqMkIlo3q1VFq3veu2d92Z7GsnK0oyvmT+ClFm
mdfOzs6+dgglIyu/e33exz8ez8fpfN7n/Tmfc87nc/94G8Zm+SWoq6mplWio
qan+Z/98Uj9lJg8PAKda+8+3Z/Y2t2NW2IcP/7paxGOut5/SujLXNp650V5x
cOHGxVOZv9jzrxtv9s9nbrH/2WldzppS5t/2FjHDxvBOM6vh/fgHXXIeM6vD
7ov9LM2fzO2Q17TJ9mefQHJ7lG98E+AyllkTvwoWD3kWzNwJT5+1XXJ2KrMW
fui+lb/awKyNcxpOa8efYtbBmpGmU6peM3fD2g9BMQFdgsjdoT3igk5bK+Ye
ML/ysbUqkrknrmYdF6cuYu6FGS4GBZ33MffGopg/KfmPmfvg5YhVPxs6BpN1
0Xrb2K3XWOa+KP34K+ZPPHM/lEwsyFhbwNwfFdodKh6fZtaDsdr+ohOfmQdg
vXXbkxaDQsgD8d/2qX/MApj1sfjJu7gNC5gN0Pvg90myw2SZAVZILjleesva
DZFZpG8v0AuldkPwnm4RJfuQ1YzwYtrOhLK5rN0I56zCvgw5xNoHQdNhHO/Z
W9Y+CJd6ubS5MCCM2o0xosvS1zd9yTJjVBiHWf9ZwNoH4/Aw9Vl2R1j7YCi8
vTav+MjaTSCYvu7+W6NwajfBlweHDkwKJquZ4uW7KT1KlrB2U4xN0zdrPMna
zdD3RL5k1BfWboaMO1E1UWYR1D4EMY7VduIIsmwIZk2xm5iaz9qHIv1yVbr9
WdY+FE0el+Ufv7N2c/B+rEqTmEdSuzmmLoPiShRZbRi0F+65/mUlax+G2Se/
DX57lrUPx5/8Tpr/+87ah2PIH58b5kOjqH0EutpM6iaNIMtG4Kt0zGLZctY+
Eup7Hw/xlLP2kTh42qfb3SbWboEzQ3fn6g2K5gwLFFlrqw8MIMssoFk8rff9
+WS5BUKePJ3neZCsNgq1/qbmU16x/qPg5WbeYXcnPvUfhdCffNMpRmT5KAh0
SlfrjSerjUZ366S/633JGI1n+ub6X5NZ/9GILn521FTG+o/G/Wt6pWPWsP5j
MPZc1CndPaz/GNTvT/909yzrPwbtrXcOynzI+o/BRK0ZIU+aWH9LBDnsyzfV
jKH+liie+uOu+0CyzBKLx/jbuliS5ZY4eLLwUd/JZDUruBxouHUhmvW3wvKS
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
P+3h765s/mOw667agled2fzH4O/tlVFNHdj8x+D6m2MPDdqx+Y9B85dTQoka
m/8Y2KxZvabhtz/nuhikq786t/gHWaG8/vG+Uzy/ketjAItIU6tmcmMMJv1e
H+DcSG6JQa3h4lnTPpDVYhHzqsSk7h1ZMxZSiXltZD1ZJxbuDvZqWq/JurFY
oHPG9sULskEs+lVmdXv5jGwWiwHBNzS6KsgWsdi7yu1/8U/INrE4cb/T/FeP
yIjF2Q1Gw1Y9JLvFwvxR5qi0B2ReLKqstpgK75NDYnEhymHbtjoyPxYNf0vs
2jMnK/u/eb6i6B5ZEItB8z6PDmLOicXOdbKzLsyyWMwa3fo8gTk3FjdWFo04
zJwfi4VBZu7j2fWLY6GzyPbuJ+aSWPxYqT69jo2vNBYeJhOffGHjr4hF7s0J
pS4s3yplvv635l5+TJbHwnP2pL6LnpJrYhG9d4LuVHY/a2PRVLxz+BZ2v+ti
USa8qNmWzYciFu3dWkI3sPmqj8Uv0c6bme/Z/CvH981r8PSPbP5jceiUhcbp
Jjb/cZi0Ns7E+Sub/zjcXLvOVp09XzpxiOnfWe0Pe/5042BWN2mQVRu2/uMw
1LRn5C4Ntv7jMFPfKY7fia3/ONhLZr8PYOvBJg5v7g3ctZitF8Rhzr73QX/7
svUfh5wv77cc0mfrPw4hVwY5Vgxm6z8OEvWA1w1s/fLjoHd8v33GaLb+4yBP
2f571Di2/uOwc2HixQlsv8iJg43GEZ8lrmz9x6Hjj6XWhj5s/SvH77LasJXt
T/lxaPPjbYVRNFv/cbjXWihbkcTWfxzm3xhg5iJg6z8OS2q1xjtPZes/DvMe
JjotY/trVRxWXDe4bLCUrf84HJqX5/t3NVv/cfhWV+EzpIStf2V+2YesN+1k
+7/y/p0wyoo5yPZ/5XjXmIQI5Gz/j8Ma2d1JVy6z/T8On4pDF0jvsf0/Dg+1
uvilv2D7fzykM9c/qfjE9v94LHnTwcfpN9v/4/GrYFfVoI7s/I+HbbGJoV9v
dv7HY7XUcea1Qez8j4df7Pm9xaPY+R+PgOsTcyvs2fmvtLzsVC9vdv7H41nB
qDY1Eez8j8fQp3tvn2fvF7x4xHa2q+w2nZ3/yvFmlTX9L4+d//GYuLvudi57
v0mOxz5Dgxn7d7LzPx5/kha8NTnKzv94TL/Y9OcZe7+SKfvf8Z/y4hE5Nx4+
thUfh3xk72Px6OprdHf/X3JxPPrkXcme3Y29n8aj9UL1x7xB5NJ43FSvGHHb
ir2vxqND1tfvIW7kqngUoOOD3uHs/TUeP6f6WnTOJNfEY6XopP6YOex9Nh63
22cULmHvz3Xx6HfA0r5bKXu/jcc6S9cC+VFyvXL+ck+dWX2dve/Go/r4pFNL
2ft+Szy2DN08dvN39v6bgBaHrCXXOtP3g2YCrhQq7nU1YN9DCTDoldsQbUnW
TUC/we4e1W7s+ygBRfMTTHpHks0SMKRyX5SAfR9ZJCDs1p85pxaQbRLg83D7
RfV17PspAQ8+i/sOZ99nbgkY/+5Iq81p9j2VgDYnz+8deJcckoCJl7Z3vvuW
fV8lYMCCwHVBf8jJCThmELlsjQ773kxASYpCvmIQOScB05ZYHbeyZt+fCfgw
WbN6ths5NwHzDXttiAtj3+PKvw9bqH4vjVycgKyLv3F9Bvs+T8DLv54pDsvI
pQmIa2rxMfqPfa8nIP1M+qrE3eSqBKR0a7dRnX3fyxOgY/7w8Lsack0C+t/I
0OjBfh+oVY5no3pR1nNyXQIWHHma/uUD+75PwLh8x6WrW8j1CXg1plsbV3X2
e0cC2t20+fS7E7lFGb972cZd3dnvH4mYX1uX68p+39BMhMfPY4nnBrLfQxLR
/U1v+36DyLqJGDfwt2SCCft9JBFd0rPvDjQjmyXCN0Z31xFmi0TM1uaf1mC2
ScTzzvI53wez308SMfjc4M+LjMhuiXi98daVvQPY70mJ0P2asCi5DzkkEast
Hkbt7sp+X1KOb/LUmOz25OREbGyTOeX0Lzb/iSi52Sl12Sc2/4noMGzu29vP
2PwnonK1zso1N9n8J6KrubL9FJv/RGxX9d/L5j8RS1TXX8/mPxFGqvgL2fwn
YrNqfFls/hPRXjX+YDb/iXinys+WzX8i+vzLn81/Ik6r7o8Gm/9ETFHdv3p6
vusSEaC6vzXs9w1lPqr7X0quT8Ro1fwsZL93JEJTNX9x5JZETFTNrx37/SMJ
qf/mn63/JPiono/P7Hs4CZ9vKJ+fS2TdJNxTPV9b2PdxEixVz18O2SwJUtXz
6cW+l5MwTfX8GpFtkjBA9Xx/Y/t/Etr+e/7Z/p+EUNX6WM/2/yTEqNZPOtv/
k+CrWl+2bP9PwmPV+uvC9v8kJKjW5yN2/iutWr+72PmfhBzV+p7Gzv8kPPm3
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
yHpDcoQEtiZfp/cbROZLMCnu8a0MY3K8BHcHrbxWOJicLAHvUmTdchNyugTj
Np8IDzclCyTQUYs+9YNZIsFD3QGCFDNyjgRPZ3S5WsY8Q4LYhNkTjjDLJFh0
tc2AdczzlfORmXLDjTlXgpll9w6dY9dfKkFjzukhOsz5EnTO/DPflI2vUII9
988YdmbjL5ZAMPxs8BGW7wYJ3HcPm2lpRC6RoFpW/TrHgLxNgi28s28WsvtZ
KkHHpMCbkex+75bAf7n1999sPiqU4zncYUccm68DyudxWeDwlT3JVcr703Hf
g/ndyMck8LG7/tNWmyyX4EjihvtHO5HPSjAiMeH0H/Z81Uiw++WXv+rs+bsi
wWPT6keXWtn6V85X3fstAT/Z+pdgluLYhk1f2fqX4PQSWc9dbD08kqC/2bOA
bLZeFBIs8OpZpvaarX8Jcjv3jHRXsPUvQdmYR8d9HrD1L0HBn119e7D12yhB
vaOnfNVVtv6V97corO2182z9SxA0da31WbZf/Jbg5E+XCkkVW/9SfG8vvvik
gq1/KRYcSX3Shu1PmlJ06NDb53EJW/9SDG2TNltQzNa/FLIRz+8dWcHWvxTZ
I5vPHV3I1r8Us43XHhOx/VVPCpHFU8unYrb+pZg8Q7pHLZWtfym6mfpU3I1m
61+KJ4vdL/IDycOk0HZ4nL9xMtlCirnJ9/+3wp5sKUXq7CHVYyzJNlJoJe2Y
lmdGniiFefPn8gI9MqRYOjfe0EeH7CyFVLel4lhbspsUbdMDXB99Y+e/FMeS
7j8pf8vOfynS8o7PHfWInf9SbPtvHC/pGjv/pdhqcWaKj5yd/1KU2wfZvatk
578UhunXWsduZee/FA8MeObj2PtFshSFX055f5zPzn/lePODtEOk7PyX4oqq
/iJ7v5FI4aOqzxjIzn8p2qnqNzqz8185v6r6juz9SibF2X/1H8nzpahU1Yfs
Rs5VPh97Hg/xVCMvleKtqr7kR3r/y1deX1V/8hG5UIqRqvqUl8jFUnxS1a88
TN4gRaaqvuU2cony+fpX/5K8TQqBqj7mLHKpFFaq+pns/Xm3FK9V9TWDyRVS
JKnqbzqTD0gxXVWf04K9/0vhqqrfyd73j0kRrarvqcne/6Xo96/+J30/nFXG
U9UHfUqukeK5qn7oZfIVKVdf9DC5Vjn/qvqjW8i3pbivqk/Kvo/qpNihql86
jfxIiu2q+qYJZIUUpv/qn5JfSnFeVR/VllyvvL+q+qlDyA3K+VLVV+1NbpRC
oaq/qk7+IsVYVX3WT/R92SJFrKp+6yPybylyVfVdL7L6utno8a/+K7ldNmao
6sNuJ2tmY5GqfmwhWSsbear6svPIOtnorKo/K2Lf/9nYqKpPG8u+/7OxUlW/
1p99/2djjaq+Lfu+N8hG47/6t+z7PxtvVPVx2e8DZsrxqOrnDmDf/9lcfd3u
7Ps/GxdU9Xc7sO//bOip6vP+od8nbLLxZ/gFnbZfyROV8VX1fT+QkY25/+r/
kp2zcUhVH/gZ2U05PlX94EdkT2U8VX3h+2ReNj6r6g/fIwdkY6+qPjFziPL6
qvrFzBHZ0FfVN35A5mfj0b/6x+T4bPRX1Ud+Tk7OxltV/eR6cno20lX1lRvJ
gmx8UtVf/kGWZCNOVZ+5Hd2PnGzEqOo365BnZOPXrZm9zQcG4P8ogomF
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 360}, {-180, 180}}, 
     DisplayFunction -> Identity, AspectRatio -> 0.33, Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox["\"followers\"", {
           GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
        None}, {
        FormBox[
         StyleBox["\"leader \\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)(t)\"", {
           GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
        None}}, FrameStyle -> Medium, FrameTicks -> {{{{-180, 
          FormBox[
           RowBox[{"-", "180"}], TraditionalForm]}, {-120, 
          FormBox[
           RowBox[{"-", "120"}], TraditionalForm]}, {-60, 
          FormBox[
           RowBox[{"-", "60"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {60, 
          FormBox["60", TraditionalForm]}, {120, 
          FormBox["120", TraditionalForm]}, {180, 
          FormBox["180", TraditionalForm]}}, None}, {None, {{0, 
          FormBox["0", TraditionalForm]}, {60, 
          FormBox["60", TraditionalForm]}, {120, 
          FormBox["120", TraditionalForm]}, {180, 
          FormBox["180", TraditionalForm]}, {240, 
          FormBox["240", TraditionalForm]}, {300, 
          FormBox["300", TraditionalForm]}, {360, 
          FormBox["360", TraditionalForm]}}}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, Method -> {}, 
     PlotRange -> {{0, 360}, {-180, 180}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(2\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(3\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(X\\), \\(11\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(e\\), \\(1\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(e\\), \\(2\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(e\\), \\(3\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(X\\), \\(100\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(i\\), \\(1\\)]\\)'\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(i\\), \\(2\\)]\\)'\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(i\\), \\(3\\)]\\)'\"", 16, StripOnInput -> 
        False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Column\"", ",", "1"}], "}"}]}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7874823796501284`*^9, {3.787482539250808*^9, 3.7874825494418707`*^9}, 
   3.7874834307036514`*^9, 3.7874849939527884`*^9, 3.7874858064853587`*^9, {
   3.787488403807106*^9, 3.78748840766116*^9}, 3.7897221836330414`*^9, 
   3.7920945439537716`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{"\"\<0049_act_progress\>\"", ",", "angularProgressPlot"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7754089999621735`*^9, 3.7754090367348804`*^9}, {
  3.7862675981438093`*^9, 3.786267606735614*^9}, {3.7862701772072287`*^9, 
  3.7862701910801015`*^9}, {3.7862703522228117`*^9, 3.7862703527264338`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "getAngularPogressI1Diff"}], ";", 
  RowBox[{
   RowBox[{"getAngularPogressI1Diff", "[", 
    RowBox[{"a_", ",", "degStep_", ",", 
     RowBox[{"yfact_:", "1"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i1", ",", "i1t", ",", "i1v", ",", "i1vd"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"i1", "=", 
       RowBox[{
        RowBox[{"getAngularProgress", "[", 
         RowBox[{"a", ",", 
          RowBox[{"\"\<degStep\>\"", "\[Rule]", "degStep"}], ",", 
          RowBox[{"\"\<clean\>\"", "\[Rule]", "True"}]}], "]"}], "[", 
        RowBox[{"[", "5", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"i1t", "=", 
       RowBox[{"First", "/@", "i1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"i1v", "=", 
       RowBox[{"Second", "/@", "i1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"i1vd", "=", 
       RowBox[{"yfact", " ", 
        RowBox[{"Differences", "[", "i1v", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Most", "@", "i1t"}], ",", "i1vd"}], "}"}]}], "]"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.787483836632634*^9, 3.787484088249042*^9}, {
  3.787484124337077*^9, 3.7874841629692507`*^9}, {3.7874842861851945`*^9, 
  3.787484301976883*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getAngPP", "[", "a_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"degStep", "=", ".25"}], ",", "i1diff", ",", "llp"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"i1diff", "=", 
       RowBox[{"getAngularPogressI1Diff", "[", 
        RowBox[{"a", ",", "degStep", ",", "500"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"getAngularProgress", "[", 
           RowBox[{"a", ",", 
            RowBox[{"\"\<degStep\>\"", "\[Rule]", "degStep"}], ",", 
            RowBox[{"\"\<clean\>\"", "\[Rule]", "True"}]}], "]"}], ",", 
          "i1diff"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"#", ",", "16"}], "]"}], "&"}], "/@", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
             "\"\<\!\(\*SubscriptBox[\(P\), \(1\)]\)\>\"", ",", 
              "\[IndentingNewLine]", 
              "\"\<\!\(\*SubscriptBox[\(X\), \(11\)]\)\>\"", ",", 
              "\"\<\!\(\*SubscriptBox[\(e\), \(1\)]\)\>\"", ",", 
              "\[IndentingNewLine]", 
              "\"\<\!\(\*SubscriptBox[\(X\), \(100\)]\)\>\"", ",", 
              "\"\<\!\(\*SubscriptBox[\(i\), \(1\)]\)'\>\"", ",", 
              "\"\<vel(i1')\>\""}], "\[IndentingNewLine]", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<Column\>\"", ",", "1"}], "}"}]}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Dashed", ",", "Blue"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Dashed", ",", "Red"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Darker", "@", "Green"}], ",", "Thick"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Dashed", ",", "Thick", ",", 
             RowBox[{"Darker", "@", "Green"}]}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"\"\<a=\>\"", "<>", 
            RowBox[{"nfn", "[", 
             RowBox[{"a", ",", "3"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "16"}], "}"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", ".33"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"GridLines", "\[Rule]", "Automatic"}], ","}], "*)"}], 
        RowBox[{"FrameStyle", "\[Rule]", "Medium"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "360"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "180"}], ",", "180"}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"GridLines", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "360", ",", "30"}], "]"}], ",", 
           RowBox[{"Range", "[", 
            RowBox[{
             RowBox[{"-", "180"}], ",", "180", ",", "30"}], "]"}]}], "}"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{
               RowBox[{"-", "180"}], ",", "180", ",", "60"}], "]"}], ",", 
             "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", "360", ",", "30"}], "]"}], ",", "None"}], 
            "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"Black", ",", "16"}], "}"}]}], "]"}], "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{"\"\<t\>\"", ",", "\"\<t'\>\""}], "}"}]}], ")"}]}]}], 
       RowBox[{"(*", 
        RowBox[{",", "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Angular Progress for N=3 Orbit Points\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "Large"}], "}"}]}], "]"}]}]}], "*)"}], 
       "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7874858149338026`*^9, 3.787485830342679*^9}, {
  3.7874883878830924`*^9, 3.7874883919619217`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"angularProgressPlotClean1265", "=", 
  RowBox[{"getAngPP", "[", "1.262", "]"}]}]], "Input",
 CellChangeTimes->{{3.7920070716098433`*^9, 3.7920070819711466`*^9}, {
  3.7920945762559605`*^9, 3.7920945878942137`*^9}, {3.7920946183390794`*^9, 
  3.7920946368926754`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxt3G+MHPV9x/FJYpJr6oZN4iSbxq2HYJJN4sQDmHiTGO4HGNiAgyfEIZvE
cBOwfWtj47Fvd7sPUG8eIPUeWGIqUekqWfI8QOqpQso84ME+QLp5wIOrhMpI
tdR9gOSpZKn7AJWp4jbbxq0L+31/Ld1X5clHL//+zXdmdnYXr393vXD+mZOf
9Dwvu8PzPs7//79y8b1dkuJq8S9v3vrov2t4uvi5OyTF9eK1P3zc/iG+sfj0
/37s3+HZ4vATkuKbi5fn7X/Anrs0H38Lf9KdIsU73DPz5k/hT7t/mfsOvOD+
Zu7P4M+6Z0nxTrwTf849ToobrkWKP+/K+XzqL7jfz/15/EUnh/sFvMtlc38R
f8n97dy78JfdZO4v4a+4v5/7y7jpdpPir7pq3q7+U3cnKf6a+4d5u3q3a5Di
P3N3kOI/d1fn/dV73C5S7Lt83o4Tf3t6d7n/mbfrn9/l/u1jrt5F+9dpx8nX
t6d3t7s+b9c/v9v993z83bTvdTfm7TjZ6/5r3r6X9nvcv87bcXKP9F+9h/Zv
uHnzLZx8g+P7Bu3fdPW8HSff3J5ey/3HvF3/vOU+nI9v0f4tN79db+HkW24H
Ke3fZn2cfJvx36b9O9L/o5T278h6q9jbx3ht3yfnc3Uf7d91nyKl/btuNm/H
3vfkfN7S9u/J/br6Pdr3u0+T0r6f84e9gPWxC9z85b4Y0D/geuAicJ8kZfy9
nB/s7t2eCe2ruLhX1tvE3n3Udx/j7pP2RZzcJ6+3VVzgTezdT/06/n5Zb/F+
xt8v863iwqR3gPqxw4sHGH9A6k1wcYD1sffA9nQPyPV2OHmA+nHxgFzfTR33
fc6fjv/+9ky+L9djFRcmvYOM13EHOf6DjD8oz4MEFwdZH3ttzn+b8W1pX8RJ
m/OHi7ast4m9H8j5+ShlvMnEZPED9wlSxv+Q86/jfijzfZQy7odyfAkuTHo/
on7sfiTzf5QyHie4MOkd4v7B7hDjDzHeZHGI+x97D3L+HmT8g5x/nJgsTHoP
8Xx4iPEP8frDyUPcP7h4iNcP9ha3p1uU+3MRJ4uMx8Ui43Wck3o/ynn4Jp3j
9YQjk4nJzGThWA9X+Br2Hmb9h1nXpHuY+wFHJpOHuT9xxnwZLh6W61PgyqT3
yPb0H5H59mCHF3H0iMwf4YT2VZzhK7gwWdF+Tdd9lPofZX2TzmT0qFyPJZw8
yvMJZ4+yPi5MVqxXYe8w6x9m3cMyn4+dychkYjIzWTB/gSuT3mPb0zfpTEYm
E5PZY1x/XOACV49x/nXdx7enb9I9zvXH0eNyfiKc0L6KM5OFycqk9wTPzydY
F/vYPcHzCEc4wgn9E5w9wfXHhcmK8RX2OtvTN+lMRh3WxwlOcIYzXOACVya9
H29P36QzGZlMTGYmix+zPq5wpes+yf3/JOtiHzuTkcnkSa4/zkwWJiuT3lPb
0zfpnuL5h6OnOP84eYr1cWayMFnR/5que2R7+iadychkcoTrjzOc4eII75e4
wpWu+xPO/09Y16QzGZlMGJ/gDGe4MFmZ9J5m/adZF/vYYYcjHOHEZPa01Jfh
wmRl0ju6PX2TzmR0lPVxghOcHWV9XNBe4MqkF27PhknfZBDKfAF22OHQZGQy
NpmYTE1mJnPWy3GBC1yarEzWJr2fbs/GT2W+BvZNBrQH2GGHQ5ORydhkYjI1
mTF/hnOTBe0FLk1WJmuT3jPbs2HSf4bXAw5MOpOhychkzHwxTkymJjP6Zzg3
WZgsTVYma5Pez3j9/4y6cQP7JgOTzmRoMjIZm0xYL8EpTnFmMjdZmCxNVsxX
4dqkd4z6j1E/bmDfZGDSmQxNRiZj5o9xYjKlPcWZydxkYbI0WZmsmb/G3s+3
Z8OkbzIw6X7O6x+HJiOTMf1jnJhMTWYmc5OFyZL5S1zhCte41rqf3Z4Nk77J
wKQzGT4r84c4whGOTSYmU5OZydxkYbI0WZmsTXq/4P7/BXXjBvaxjwMcYIcd
DnGIIxzh2GRiMjWZmcxNFiZLk5XJ2qTX3Z4Nk77JwKQzGZqMutSPYxzjBCc4
xSnOcIZznOMCF7g0WZmsTXq/3J4Nk77JwKQzGZqMTMYmE5OpycxkbrL4JfXj
Epe4whWuca11/4r7/1fUjRvYxz4OcICdydBkZDI2mZhMTWYmc5OFydJkZbI2
6f16ezZM+iaDX1M/dtjhEIc4whGOcYwTnOAUpzgzmZssTJYmK5O1Se/49myY
9E0GJp3J0GRkMjaZHKd+nOIUZzjDOc5xcZzvl7ikvcQV7RWuaa+17ue4/5+j
bpO+yeA5mS/AzmRoMjIZm0xMpiYzji/DucnCZGmyMlkzX42956n/eerGDexj
HwfPUz92tDsc4hBHOMKxycRkajJjvQznJguTpcnKZG3SW9qejSXqx77JwKQz
GTI+xBGOcIxjnOAEpzjF2RL145z2HBe4wCUucWWyZr5a646250Ik4xdww2TT
pG+yZTJgvgC3TTraHe6YDE12TUYmeyZjkyPWG+HE5Brtazg1uW4yM7lhMme+
HI9NFrQXeMtkaXJisjI5Zb4prk3OaJ/pdf/N9lww2fgNrwfcNOmbbJkMGB/g
tklHu8Mdk6HJrsnIZI/5ejg2OTKZmFwzmZpcN5mxXoY3TOYmxyYLxhd4y2Rp
ckL/Ca5MTmmf4trkzKT3wvZcMNkw2TTpv8D7A27hFg5Mtk06kx3Gd3Boskt7
F0cmeyZj+sd49II8/0Y4MblmMjW5bjJj/gxvmMxNjuk/xgXHU+At2rdwaXJC
+wRXJqcma5Mzk96LvP+/KF4w2aC9gZu4iX3s4xZu4cBk26Qz2WF8B4cmu7R3
cWSyZzI2OTKZvMjfn+E15l/D6Yvy9yWv4XXa13FmcoP+f4dz+ud4jMe4wAXe
wlu4NDmhfYIrXOGpydrkzKR3gut/QrxgskF7AzdxE/sn+PtK3DIZ0D/AbdzG
zmSH9g4OcYi7JiPaI9wzGdMe4xEe4cTkGu1rOMUpXsfrODO5QfsGzk2OaR/j
wuQW7Vu4NDnhfE9wRf8KT03WtNd4xvgZ9k7y988nxQsn+fyHG7iBm7iJfZMt
2ls4MNmmvY0ddriDOzjk+ELcNRmdlNfbEu4xvodjHOORyeQkvy/CayZT1k/x
usnM5Ab9N3BucszxjHFhcovj2cIl/Us8od5/xhX9Kzyl/xTXuMYzjm+GvVP8
XvSUeOGUzP8Z3Dgl8zdwk/avYP8Ur3/cOsX1xwHjA9xm/EHsTrk/Iufu0L+D
w1Pye7SjuHtKfi/VxRGOcO+U/P5pGcccX4xHp9x/ftz+FzgxuXa7vZg7vT1e
vH57fnF2e33xxu3jE+e3j188vl2fuLhdv3jr9vkRl7fPn3hy+/yKq9vnXzyl
fxPXt6+feHb7+oq9ZX5/d1K8sCy/L/o9bizr/SNuLuv9JfaX9f4Tt5b1/hQH
y07qwO1lvb/FjvYCd5b19SEOac9xd1lfX+KI9gz38DqOl/X1Kx7RvoYTnOA1
PMLpsj4/xOvL+nwRZzjCG4zv4nxZn1/i8bI+38TFsj7/xFvL+nwUlzjAk2V9
voor1vPxdFmfz+J6WZ/f4tmyPt/FXk+f/+KFnr4/iBu4xs0e1x/7PX3/Ebd6
+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
OvZnFo+Gjv2bxa8MHfs7b/4fCr25/Q==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
w9sHTbvI+MMwUxuxbU1BJxl/GBqdH7JyenJHGX8Y7q+8tTerYQcZfxi+pXp8
KTjqJOMPw7ANOxOapraT8d3x15agqkuatpXx3ZF/dvEtpzOOMr47Zg04/O36
hNYyvjtMkWMy13ZsJeO7Y/66w0t+vO0g47tj8Odei886tJDx3RH4yz8bjmU2
lfHdMabzln2XXjeS8T3gu3PD0LdhDWV8D8SceHaw1bl6Mr4H0ptM3hrQv46M
74Ey59AOLcNryfgeWHZ67LC5HtVlfA/YNttSeq9HFRnfA+aC1UuaOapkfA+4
LEqLiHF+P5Dje8JVcyUlGCW0gyeOrl7S8/MBMw1PDPnlw9pHW+4e5vieePdm
c9Nf7v9LZ3gi6PDnN82ufaJzPJG/b/TCfEtFM8f3xPdjfXdcuFSNtnhix57X
zcOO2NKq4TjUcuq5XtfsaIfhGLB6991KI+rSGI4/7v5ZvcnB+rR6OCZd8reZ
1smezhiOlv3zZ/dd1ZjOGY717qGdR9k0k/GHI77doMX7DS1k/OGIm5/mePyl
g4w/AgPcTz6526qVjD8CS09Vvd7Vv7WMPwLP/vzZcW+mo4w/AqNz86uk728j
449A1Z1nco3P2sr4I/D4ZpvevzdxkvFH4Mcjrlfbj2wv44+w/v1nb3j0YwcZ
fyRW1am6//HWjjL+SKRsn9yt69VOMv5ILLEMbHy4QhcZfyTenrqTsaJzVxl/
JGoUbOql7uQs44/EO7ukf1ceEZtHAjs6lk727ybjj0TikOrO1Z+JVaMQvf/t
dkztLuOPQmzTTSGt6vaQ8Uchd8ZG17wtYvUoPK7q3/NZn54y/iiUrvo86MpZ
cc4orFAd9E4Kd5HxR8F+5Qbv3f+KLaPwu99vnX/9qZeMPxqbply6ML5+bxl/
NOYt+9Lizy1ijMYqxxaVT/R2lfFHY/b0zup5heKM0cjN6digamAfGX80Xp/o
UrX3E7F5NL4fE12zxY99ZfzRqObXsMZhm34y/hjcSdxzrWG22GEMfPrcGN6h
nZuMPwZ1mrn3+/CnWD0Gh49+mDp1aH8ZfwyW/9Hq2bFL4pwxuGDpO+a4eoCM
PwahDh/TZ7wUW8ZAv1ndp+KkgTL+WHTt+8+v6ypDxh+LqMhYv+YjxRiL2d3/
+mHyz2L1WARWW5V+6Lo4Yyy+3bDsv9NskIw/Fj/ez825FyU2j4VN36HzTvxP
bBmLEYkD/l7wSqzywgU7dWlvl8G0nRe2Ruxsf3yC2MELaX9NeuhiFjt7obi3
97S5VYbI4/OCU90qQcdGiL288L1n/hnLIrHaCyc+Xut2/4pY64VpL5s8Pt1o
qDx+L0z+8suw7DBxlhd6Tl61ZeRGcY4Xnv7vaeTDx+I8Lwz8buGlmE7DZH5e
mHfyxahzWnGRFybUveDU9E+xxQsROv+D4z6KS73gUrN6qK6/u8zfG4+/uxKe
Pk1s540Yc+VGmuNiB29U/d7vFr7zkPl7o9ucks8VR4vhjYQTY8/9liX28kb/
WXPXDb0iVnvD++l3xwsaesr8vdFj466FXYPFGd44YX931My14ixv6LMixp64
J87xxrtRsx6+dhwu87f+/Pb6YTU0YrM3cvv7V7PbLi7yxsKbNbtWeCm2eKPa
H5mt7jqPkPl7o1nIz122GcSqcVhdPGld5B6x3ThUWt3uiM1HscM43FtQdmd1
v5Ey/3Fwrnx/SIspYut9Q/e/NH2zzGKvcdDcWGVbWnGUzH8c1h91qDxwmFg7
DpvbOCdMni3OGAfHa9mzt58SZ43Dwb1HNp2qMVrmPw411m//rni0OG8cRri9
+XJtkdhs/fl/LhWeuCguGofSHxx3bq07RuY/DjEDor786CcuHYen235903+5
WOWDxz1O3nhTLLbzwb3mjd+tajxW5u8Dtee+ub1CxM4+CHgecffYGjF8cDNu
cu+hd8VePkia/POzYDsvmb8P5h21nVarm1jrg6s5z78c9BZn+MD78ImfovXi
LB+EtK/Rs+picY4PWjpVcd7whzjPB7Ma38p2vSI2+6DqqCWLTr0VF/lAc7qW
i199b5m/D7r0rbXtbxdxqQ+C/te9Vqi/WOWLdxH/zbiRJrbzxbr9Jzt6Lxc7
+GLyo9utC/aKnX3x77HIBd2LxfBFnW3hmavLxF6+mO5ytGfFRuNk/r74Ujd0
V1QfsdYXpedLHI4EijN8Ebi0ck7jCeIsX/hW7j1Wu1Kc44u2r16OPrpfnOeL
ZW1nHLD7W2z2hXGA697gT+IiX2zz6a3e2MRH5u+LiUXZVx/3E5f6Yqezulf7
ELHKDyMKJq+PmyS284Nef8Fl42qxgx9eTmhZ59ZBsbMfxvXu6lfnthh+OPb3
xmbuX8ReftD0ajL3h2a+Mn8/+Ka22relv1jrh68nXE9dDhVn+GGxb1Hx18ni
LD88OTamqtNacY715+vU1I79S5znh6ljQnua7ojNfrCMmaZb8VVc5Acn45/D
Djb3k/n74UBEpwu3B4hL/eC5367T1zCxyh/jb86c0Gyq2M4fLxbnFvdbJ3bw
x62SRdGBh8XO/qh9fLRb2l0xrOfvezX5l29iL3+0/HOqx28t/GX+/jhtrrz3
1ECx1vrze396+iBcnOGPWvxf5u+Pvz0n1W+SI87xh8fAT569zOI8f3wbkZHv
bRGb/VHkbjc9WTVe5u+P+v12HZvjILb4w6+hdtUWiEv90SNpfLsCtVg1Hhfa
TJj5T4bYbjy+DXt1ucJ6scN4JK+97NzqiNh5POrPH7F/yD0xxmPwzikLYysE
yPzHY83ODWfmthSrx6PHi38X5Q0Sa8ejp9vOj9cjxBnjsXB713YVpouzxqN1
n5O9Om0Q54zHgazb7oFHxXnjsf/UA1PmP2LzeJgcQ/7ZVzFQ5j8exYVF2160
ElvGY9DMOy9aDxGXjkf+AufTIVFiVQCu9Zselv2T2C4A6gvrTl3bKHYIwOqu
cR3sC8TOAcjYUbgu5IEYAdhz5KTnpspBMv8AbLoxcegrR7E6AJVq197Vf5hY
G4CnnwrzFsWIMwJwJ+FT+MOZ4qwAdO3W8O6ALeKcAHR8vmH06hPivABsOd3/
zJdHYnMAmvjn/BBVLVjmH4ABbmv059qJLQFY26jVrX6e4tIAzB7meuU3jVgV
iG5rq0xsO0dsF4jD/udKN/xP7BCIN8dL/RxPi50DscOl9PS2p2IEosnuRG2v
GiEy/0Bsf9g67mRHsToQNsX/XQgdJdYG4sy1t2c+JokzAnEffSatWiDOCoQ6
vG7FIb+JcwKxvP+bKaXnxXmBODY9pd6mV2JzIDqPGvQg1C5U5h+IatXH2jXv
JrYE4mvwxv0PvMWlgbhUqq+ySy9WBaFtbNO6sxaL7YJwsEP7qhG7xQ5BeKke
U2HIVbFzEJwLktt1ei9GEMwLl61q2jBM5h+E5pFVp9VzFauDsKhrh091A8Xa
ILg7ruvcZII4I8h6/9/DrcMqcVYQgl48HjHooDgnCFfWvpqsvi3OC8KCurs+
zv4qNgfBdv2Zf/a2CJf5B8FuSs2wUogtQXDb91NWt0hxaRAadU9aN/EnsSoY
3xYPyju/SWwXDLtxe0s6nBA7BGPvlgMpWY/FzsFIH+62e2pltcw/GLu1Hb72
qy/2CkaLpROcvrQRq4NRlLTW/VgvsTYYn1a1S1roIc4IxoM+hTvCAsRZwRg7
3qdpz3hxTjBmzzx0vuYEcV4wZoQ1K345V2wOxo81d4y6skpcFIzzt4/j8A6x
JRinDj4t/P2QuDQY7y/89XHzebEqBKu+VC9Zf1dsF4LMSYdyN5aKHUJwKOqp
1/YKETL/EAztd/Zdfh0xQtBlYcGOs63FXiE4Ozlk3qOeYnUIVvgN21rVXawN
QaFDYIPO48UZIdiLVS8DNeKsEEyq3Md9wY/inBDkDJrb4+RccV4Imr+sfa7a
arE5BB4HprQf+6u4yHp81/bwNX+JLSHIKMqZ9fqCuDQEW7cu/nPMPbEqFA8+
Pa6067XYLhTDYpznNK0cKfMPxS//dgldWF/sHIo+J68ur9ZOjFAsP+Xhnekq
9grFkAE31tuNEKtDoTXYbcgJFmtDMTFuS4JrsjgjFPN1s+sVTxFnhSLq2eX8
qVninFDUu2XRdt0gzgvFi42u/o//EJtDsep/q6ZvPS4uCsXxahXstNfFllDo
3JbbD3oiLg3F3eKCPY0/iVVhWN+9fZUvtlEy/zCk1l/TvKS52CEM3mk9mt9y
FjuHoX+7vi1uDBYjDB/m9e1/11fsFYb8sf8tfhkrVochqcmkgdV+FGvDgNGq
kPbzxBlh6JtXparfGnFWGIJdRgTN/V2cE4ZTO86YTh0R54WhWkahqc4VsTkM
q5LMP8Q8EheFoctA04qjZWJLGGYvelbWvka0zD8MEyYl7l7VTKwKx1+aaU8b
OovtwrFh79d9aweLHcIxee5/g5z9xM7hKJl8af3ZODHCra9nx4+GCWKvcETX
fR3XdoFYHY43FUJqPlgn1obDq02J7a+7xBnhuLk2fMa04+KscHSddG1pRLE4
JxyvDTsiRz8T54UjfMMC22FfxeZwfBpq+NOzdozMPxyzTZumBjiKLeHY/mDP
AmNvcWk4khcvqrhmhFilxqp5URUuhYpt1HBbnv9rXZ3YTo2/3sd0jJwhtlej
oP7StYeWix3UaDTgaMe228VOaqQOP/Rh1V9iZzWqeG9r1+KS2FWN5sEV7/3+
UAw1XlVdMnzMR7GnGnVcZsz+zzZWnk81Dvw25shuB3GAGrVPnWg2uadYrcbU
qvYFPp5ijRr1dp/42zVErFWj44y8+Z204nQ1Lt98rbo4UeoXMtTY3PHnTYfj
xJlqPK3T32WdjzhLjXfzf52TOlCcrUZmXP90547iHDXump9eu9dAnKtGwDz/
iT9VFOep4dKwoG/9l1LPkK/G9fX2T5fdEJvVmPX0ZqjNcXGhGmvOd0+IzxMX
qTH3Wck/+1aJi9UY4Bm76uMsscU636q7Y5304hI1LjWa2NA9VFyqRlfbyhnj
PMVlavQ81ks/ukd5fUUENvmtPNyrudgmApUf+fap+Z3YLgIN53TMu/xG6iPs
IxDXa/rbWXfEDhHoeCz4WrtTYqcIVH0S2GbPH2LnCMQGHMrrtlbsGoGA6zEe
KzPFiEBG8qW9r/RizwgkrGlZ1C1U7BWBm9trh6k9xAEReP5O1XViN7E6Anr/
l7WmNxFrIpC66sdzxvJ6Dm0E3tR40MPnldRfpEfA7ptdrWY3xBkRMM+c1eHS
UXFmBK62SfHW7xBnRWDN/5aO+bJUnB2BQ5W0z/VTxTkRqOnR4N2l8vqP3AjM
3e3Zvdk4cV4E1JbUZO9+4vwI/P5iTWqqo9gcgb73F1X44XtxofX5sf/9Wdz7
SLooApcP1nk/6K64OAJ/TZhWUrlQbIlAqYthbl6euCQCJx7W2Th0hbg0AkWL
8NE8TVxm/f1hi33aJIhVkdDfCE7XjRPbRCJ74JbOm/uK7SIxXtW/j7mV2D4S
74O2q49WFztEosAB8dtfS/2HUyTqrLGzn3hT7ByJsI2funU7KnaNRM8TOyae
+58YkXDbs27f2J/FnpHocqZ13t50sVcktu8Lb11FLQ6IRC+j3/XeHmJ1JOr2
e7RobBexJhJpN6/Zjaov1kbiUOMrzTp/lvqR9EicUf8w4fU/5fUkkfg4feTT
VafEmdbfd/Gic/s8cVYk5vnMrr1ymTg7ErUHPR37cpI4JxKtdkz9vU2UODcS
TxNvvBk4XGx9XeIHrLa4dRXnR2KD06w+TeuLzZGo2u7pjAPvpD7F+rr+6P33
lIpHxEWR+HR76BPb+eLiSLz1fj/qpr/YEokPz117JLQUl0RiofFum4PPpH6l
NBK3M/1/v/CnuCwSzeb8GbRpanl9SxR+r1L0R5/hYpsorD3q4bGojtguCke8
123Y9LfUs9hHoUb/0b4/bhI7RCH7/IVntuX1L05ReJl05GOYi9g5CtcXv6iV
+kXqWVyjYJ8Ue8TtuBhRcPq8csPJ+WLPKIz4kjy8lq/YKwpPRoweXbeJOCAK
zcuGe1y+J/Uu6ig4VOh2aUyu2Pp3mLRx09yZKWJtFBLG9ar1Q09xehT8vaep
Wv9XXg8ThdHPh1WYc1icGQWD98w9uTPEWVFYUX3tyWnDxdlRyKodf6duTXFO
FK7OGL817JLUv+RGYcO/WRcjlonzotDbtU6tZkHi/CgUVTpXL6tZeT1NFBZe
Prlyv0XqXwqjsDtrQMjqjeKiKCz+7VhDl1hxcRTuno9YNMNJbInC4YeHMuc+
lfqXkih8uNbnnPsOcal1vNkNO+xLFpdF4VDIau29LuX1M9F41swl7fArqX+x
icZe15X1fPLEdtHYMP5t+9VasX00SoZVWLHSWewQjaEN+gwfUyr1L07ROPnT
m7Z7fxc7R2Pm5AWtr6aIXaOxvnihS27n8nqZaHxfvyjA+bnUv3hGY3eXnIXJ
28Re0XCIf3o7XCMOiEbpdyE+1dqK1dHAmzkVou9L/YsmGt9sG1RIyxFro3Ei
9Yq2f6g4PRpNB5aa9jcqr6+JRkJLO7cXV6Xexfq9tGbohHdXfxZnRaOOpfff
xtHi7GjE2Lt2Pm0jzolGRzd992vHpN4lNxo/DKjWZ8UUcV407EMjl9XtI86P
xpbbAVuHvSmvZ4nG4TOeRV1/FRdG4/XGXpMvxYqLolHv8pOWXRzExdHo9LyW
cdYuqXexWJ+vWaG/ODqKS6LRp0ajPb2XSr1LaTTqtntZ9UgVcVk0/g6oeOiI
qbz+JQbDPZq27PdQ6llsYrBx9sn5XXzFdjF4s9WYsOao1LPYx2C391KXOc5i
hxg08N094c0aqV9xisEd45zrt6uLnWNguGbzafgPUr/iGoMNhcmb+9wvr1eJ
wc0nyP1tjNh6neIbFfho2z6pT/GKQb12N3ycHcUBMcj/zvE9FpbXo8SgXfbF
+3c+SP2JJgbjFq4Yahsh1sZg1sW+3mdOSb1JutWXQnyadxdnxCBweOLmaiul
3iQzBm97Ju2aU0GcFYOzVYrebdEMprOt8//Y71PEBakfyYnBsAVjwg65iHNj
cKtq2OkDq6R+xHodt69Rt//CK4jzYzC7X1Rq4DmpFzHH4MCZ7nuHL5f6kMIY
dErvbv26kfqQohjM7PC2ont7qQ8pjsFFG92H0H+l/sMSg6bNXbIf5Eu9R0kM
vns2tYVlqtR7lMZgRZMgi7+71HuUxeDh5pxhY22lvkMVi76bqly8cFHqN2xi
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
Nv1Zi+us76ZVOvRn/TddWYdv+5T6cNpGh7WsH6dtdXhlUOrLaTsd9rP+nK6n
QxDr02l7Hc6zfp1uqsM51rfTDjoks/6ddtThGuvjaScdBrN+nu6kwxDW19PO
Okxn/T3dU4d2rM+nXXU4xvp92k2Hsazvp6GDE+v/6aE6LGJ/AO2pQwT7B+hR
OkxmfwHtpUNf9h/QvjpEsT+BDtDBjv0LdIgOtdnfQKt16MD+Bzpah1vsj6A1
Opxl/wSdpEMw+ytorQ4P/6f0X9DG/39+lf4MOt36+Nm/QU/SIYP9HXSGDmfY
/0HP0KEb+0PoTB1s2D9Cz9fBm/0ldJYOd0cq/Sf0Eh382J9CZ+tQk/0r9Grr
68f+FjpHh6bsf6E36bCV/TF0rg5x7J+hd+jgwf4aOk+Hxey/oXfrrJ+3Sn8O
na9DY/bv0Ad1CGN/D23WYQX7f+gCHbLZH0QX/v/rq/QP0Wd1OMT+IrpIh0z2
H9FXrO+3fkp/El2sw6McpX+JvqVDGvubaIsOR68q/U/0Ax0GsD+KLtFhNPun
6Oc6/FOs9FfRpTo8PqT0X9Fvre+fSkp/Fl2mw0r2b9Gfddi3SunvolV6VGb/
F11ZjwPBSn8YbaPHT7uU/jHaVo8a7C+j7fTox/4zup4e89ifRttbfx/71+im
erRjfxvtoEcm+99oRz0ubVD642gnPeqyf47upEfZTKW/jnbWoz777+ie1vMz
lf482lWPAlulf49208OF/X009FjI/j96qB6fvlf6A2lPPeqwf5AepUc19hfS
Xnp0Zf8h7avHeRulP5EO0OMX9i/SIXq8mKT0N9JqPVTsf6Sj9WjM/khao8dS
9k/SSXr86qH0V9JaPY7UUfovaaMey9mfSafrUYn9m/QkPZLY30ln6KFj/yc9
Qw9LgtIfSmdaf18fpX+Unm99/dhfSmfpkcf+U3qJHtXZn0pn6zGY/av0auvr
xf5WOkePDX2U/ld6kx4XNin9sXSuHlEtlP5Zeoce/uyvpfP0KN2l9N/Su/W4
dkTpz6XzrY+/qdK/Sx+0zs9V6e+lzXrYsv+XLtBjhq/SH0wX6pEwWukfps/q
MYb9xXSRHmD/MX1FDx/2J9PFemxk/zJ9S4/rS5X+ZtqihwP7n+kHevRifzRd
Yn0/r1D6p+nnehz9duD/+6vpUj1C2H9Nv7WOx/5sukyPMz8p/dv0Z+vjZ383
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
J6UBzHc2/x/SH3CY
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         Dashing[{Small, Small}], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
k/Vp4A3aL+HWGNs/3tT8ONT8L4o7Y7I+W7jL+Nq4N8b5FEdjXD/g/hj3S/CA
9vN4W/Nja1zqDw+JE+PmH+L8ODku20Mbp8ZlPtZxZpz9H2fH2f+xPS7rmcc5
8qWxGef8Z8QF2tvCjubHRdpbx+44849rtF/CHu3lcV3zY3/cRHH+vHh13Pxt
nA83x81fx+3jNcafx8G47I/DF8Qb49wPx61x82lcH2+Ocz7GIf0bPi/uaH7c
pb8N3MN5HI3L+dzC/XE5n7UPigf0t4G3me88tiZkfofPiRO4jZMT5rO4Pk5N
yPaRxxk8fFacneB4ie0Jmd8Gzk3IfOSxmWD7e0ZcmDCfxPWxM8H84+KErHce
uxPm53H9nLg2Yf4uro+9Ca7PcH3C/GVcH/t4+LR4dcL8fVwfNyfMX8T18doE
2xMOJsy/xPWfEm9MyPG0jVv0t4E3J1h/HE4YWQfcmZDjZ/tJcZf+NHCP8eZx
RHvDA+L+hBxP23ig48fbzHceW5Pmz+P6T4gTk7KebZyclP25gVOT3G/AmUnW
73FxlvJtbE9yfw/nJjkfYjPJ8f8xcWHS9OP62CHewEXy5bGr9W1xbZLrVexp
fVyflO0xj/1J8ydx/f3iVeajgZuT5k/j+KPiNeo3cDBpunH8EfHGpPnjOI5b
k9xfxJuT7E/7xOGk+TCu/7C4gxu4O2n+Jo4/JO7RnwaOJuV4Y+H+JNcDPxAP
tH5WvD1pfhrHsVU2P47jD4oTZfqHk2WODw+IU2XzkziOM2U5Xg3vF2fLcjxs
YLss6z3cK86VZfttYFPm+vc+caHM9yHYKbN93Ssuahy7Zfa/e8S1snz/4GOv
zPdbuF6W7aOREftlmY9hWrxaNj+K/X1xs2w+iv098VqZ8/UecVA2yfgN3iib
34vj3xG3dP6+Ld4sGzd2ShyWTUomVtwpm9+P498Sd3V+7xL3yuau+A2Oyua3
4vg3xf2y2R2/wYMyx4c7xdtlsx47KbYq5mK8Q+8SJyp8H/Z1cbJiRuPyXxOn
Kuan8ZuvijMV047jd4izFfPz+M1XxHbFzMRvdohzFTMSv/mi2FTMH8QXNMN2
7ELFfDd+c0vsVMxVeSBDXKyYP4w38F+I3YrZFfuGuFYxH8QD6Iu9iknHzW+J
6xUz/FY8sWK/Yn727p2/86ufH3o+9mrFBPEX/l15brn5//XFaxVzNN7A+uKg
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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         Dashing[{Small, Small}], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJw13Hl8TOfbBvChliAltYZaBkHsYwlBcCEiCJJIImSb7JN91kitoUrsaSmx
jz0t1VAl1DL22GMPVWJPrfmhbdTSd95z3dN/+vl+To5nnpPJzDnPc99Xy5iM
wPjKKpXKWlWl+v//O/5z2bb+UJMJ2v5U8cAvji6bWePRm8N06cCFdUvrXHz4
mY0uG3i5oP+sTdc/F5cPHF97c8KjB/XEbweeVx/447PbruKKgb2uvNyce6WZ
+MPAh1fOpfaObylW4b5711sobS2ujCXLhvhdn9BWXAUDhnSa9+dVd3E1PL2y
xZQ6uqPYCRP6r/ss4FRncU2cqBf2w/EWGrEzRttun/s6rJu4Nlr0qN7k7rLu
Yhd02lj10sVLPcRf4NQm69Axzh7iuvin8YTSEJ9e4nrY/+f0FqXTe4vrw/ql
R97DQk9xA1yqZvgn4n99xA3Rsv3byj7t+4kb4Xhm95XLtF5iVyw/3X3v8OX9
xY2h7RObMf78AHETXHft9m9UJYi/xO6qkWd+W+VwU0xbMDryoMcgcTO4vuv3
Pvqiw81xo0rxX1t0g8UtULVn6q65lYaI1Sj0TdlcfaU4Ww3jpfCxzbt7y/GW
uFzcN+DsaXF2SxxbuMLbOXqoHG+FBssvPbjzjzi7Fc47uf2NRT5yvDWi294c
q3EbJsdb4/eY8Y9/3CdWuaHKn8jfMdpXjrvhyKm0zX0eiFVtEHnN6f3wicPl
eBvMN8+98UfNEXK8LXRjd096s0ac3RYv/b/3mKsZKcfbYfFWc/Kao+Lsdng8
+9SCLkF+ctwdE32atuz3SJztjhqhlQ8esYyS4+0R2vZltSNVR8vx9thYs/Ge
3t+LVR1QdXbEd25uY+R4B/g9q2OevUus6ojcy3+27KL2l+MdMXVjr6mXE8Sq
Tog861vc9SfH8U7w+CN069A3juOdcSw8Zlm9PgFyvDPUA6r3WTFNrOqCo/2M
3a8fcxzvgqeNPDufcQqU412x427v382jxNldMc570l/XvnUc1+CK2sXrxTUx
NLg0oNyyv/FY+XkNsjOu6vtHiG0arHRuWCnTKlZ1w++v51aKeyBGN6ytET62
etsgOb8btume/hGlE9u6YVgX66K0H8Wq7thUvzhU81yM7uhessgjv3OwnN8d
mqkLW19LF9u6I/TrN233/ixW9cB/DfoMH10uRg9MHFppxUpNiJzfA77j3rZf
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
9DCU0Tla3JmfGR2v+ZvO1eL80dVLm7mpbIrztKjSfEv5vR5Vaav954vGDJ03
rCadb59Ph4gOLaPq0AVaNGoydWto/7p0oRZLTjw70Op8fdqmxY8/b/B+G9mI
LtJiV6ct+y6/bkwXa9F18f0Nx3Ka0iValFX0WnJO3YIutV+ftYeXfvWHmi6z
P/fHjs5Z27EVXa5Fcv/D/92YJPUVFVp8e27JbfezbrQqGpW2TKi2tGlb2ika
Y607k5tmtKNdolGRPuzj8aNSf+Eajfsrbu/NbdSBVkdj8PkhK2emST2Gu/14
RvSPa453ojXR6Dqpw9uHTbvQntHA/A1zwzK70ohGp6Wpg2bqpF7DNxqP67+Z
Zmgo9Rr+0Ri23ljn43FxaDSu+VfMaWuW+g1tNLb6Lcx+1VrqN3TRuOPWY+n4
q2J9NC5b72oTvulJZ0WjqHrWnEa9pb4jOxrJl89uS/9TnBONV5cWmdNWS71H
rn1+vwTOb+Av9R550eh2f/pqXRWp97BGY/+pUeN0+8T50WgSvj+tYYbUfxRE
I+Bj9lJzm750YTROfOfy9azbYls0LI+z3wxbKvUhRdGY0n/OBpuf1IcUR6Ok
cfKY8qpSH1ISjYEd3v5Wclhcap+vf8L2yZOkXqQsGn9d0j255TGQLo/GjRnv
PSr+J66IxpnZu3Ymj3PUj8Rg/Mrc5n33iJ1icKJS4vCUBlI/4hKD0k+1vvzP
LHa1//zSwKl/XxWrY9Bg6n8TAj2kvsQ9Bi/mH1xXb5lYE4Pdxi88+/0j9ozB
mCd+X5wJlXoT2N1uRuMj+8W+MZhyRT+wZTOpN/GPwdTGM4zPpotDY4CuP25Q
PxBr7a+vXqLtiI/Un+hiELBs04GLP4r1MRj0/c85I+v40FkxqDG1VcNeZnF2
DEa+vRSSe1OcY//3fiv0Chso9Sm59vnsvL9v+WZxXgzuvA+x+ThLfYo1Bnlj
Kg1OMonzY2DxX6lR/S4uiMFX1RZPdR4i9SuFMdga8aTx4m1iWwy+2NXx75z6
Ur9SFAOviOGV308VF9vn653Z+fETcUkM+oTXSxgZKPUspTFo33bRio4HxWUx
cG40aPccd6lnKY+B7mXgeu1ScUUMbr5YOmKvylHfEosjb6PyFqSJnWJxfpLe
cO+W2CUWP4Uf2b/HV+pdXGNRZ3b8uM/3itWx+DNG6/64jdS7uMdiQNupzoO/
F2ti0T21bnluZaln8YxFxZIVA471FSMWDz+Lj/A0iX1jYav83Z7ybWL/WDT9
ddeu5w/FobF4W31PYafmUu+ijcWjTxc67xwn1sXCGh5mmfStWB+LdT+dLs85
K86Kxe4d0/67XdVRDxOLA/X2f8qEOCcW3+2YNHzcZHFuLPR/RXtO2yPOi4Xx
5bKWz/8ntsai9+T80PWdpf4lPxYxtTO6rE0SF8TiwqkX5fc3iwtj0eND92cZ
9x31NLH4qpNn/NAWUv9SFIuxGUc2xoaLi2NhCPAqO7NCXBKLNt3W6iffEJfG
wrvJ4ImWBlL/UhYL5/Ynu+8bKy6PRcessms+34krYjFkY+zi5pcc9TNxqHf/
zFy4SP2LUxxGn4p/tn2M2CUO2vxa12MXi13jUHf/p4T4i2J1HA7+eXLPzjpS
/+IehwFTnG/6+os1cZg603i7w7dizziEtTOcGXfZUS8Th/897br1Yj2pf/GN
w6hLUYbvgsX+cfhjWYNW1uXi0Dh8/vfG7RU3xdo4HHXO/LSqqdS/6OKgevPn
p7lRYn0ceuV2XHx0gzgrDo9sdeYNfeyor4nDt3deHavbQepdcuIQ9ds3NTuk
i3Pj8KBFkdv8XeK8OKx4cuqyxz9iaxyuHVt4vr2X1Lvkx2H2kYqTCTPEBfbz
N6xJen5SXBiH4FZbQ/c7O+pZ4uDVc2/X4kBxURxqhZ+e2XmFuDgOjzs1vHPp
rrgkDn/WqDhxoK3Us5TGYZPXpT0vHPUvZXGInvTGLe5XcXkcLM9zprT4KK6w
z/fKtJYthjrqV+IRdduQEbNQ7BSPzl6r95VdE7vE47PtJ0bsbC71Ka7xaD3O
I/63RLE6Hn9d2zy42k6xezy+G9qv/rf/ijXxiD3Tf0bnVlI/4hmPGws3Les2
zFFfEo+5J14FB6WKfePRfmuSz/ffiv3j0XdPjWdv9ohD4/Htx8yjGbcd9Sjx
+HtFrWFOlaX+QxePlNU3Xx5oJ9bHY93InR0XjhJnxSPyrHtKlslRPxKPzZ03
N5y2QpwTj6LXcUvWHBbnxmPBp/mDrz8S58VjaaVuM9o5O+o94rEzPDU/t7s4
Px4jpuk+/2K8uMB+PfaZKuVPFxfanVfvctAWR32Iff5bGp9ueF5cFI93Bfs6
vXgjLo7Hz5PWD7zRROovSuLx5M4Xg64OctRzxKN/+LvUB476j7J4rKns8uGz
XHF5POYfeNvaY6+4Ih5Dn41slHnHUf+RgGkj71Y96ajncEpAWOPDTd06i10S
8DgxbvbiILFrAmLXXE2uPsVRr5GAF7VOvpq3UeyegDnfnfBsfFasScB3/SIS
d74WeyYg+mS/VYFNHPUNCRj2ecTr94PEvglY0b3H3O1JYv8EeM4tnhT7rTg0
AVua173XYp+jHiIBI26cuVpaKtYloHaNV2mbnRJofQLSp9uOpWrEWQkYcPnf
5x6h4uwElCvrz+KcBEzlcSjOTcAenk/nJaA//33amoCFHJ/OT8C/fH10QQIS
+frpwgQc5fxoWwKMnD9dlIDlvD50cQLO8/rRJfbzeX3p0gR0dFauP12WgI38
/dDlCailU35/dEUC1vD3S6sSsYq/f9opERP4/qBdEnGE7x/aNRGn+f6i1YlY
wPcf7Z4I17vK+5PWJOIq37+0ZyLcdyrvbxqJuMD3P+1r/3n+fdD+iTjDvx86
NBFL+PdFaxNxj39/tC4R+/n3SesTcZZ/v3RWIv7j3zednYiT/PuncxLxLT8f
6NxEnOPnB52XiFx+vtDWRPRbqXz+0PmJOM/PJ7ogETp+ftGFiRjBzzfalojD
/PyjixLhskj5fKSLE/EDPz/pEvv8+PlKlybC77ry+UuXJWIeP5/p8kT05ec3
XZGIRfx8p1U6nOTnP+2kw0d+P9AuOtzl9wftqsNxfr/Qah0+8fuHdtchrKby
/URrdNB3Vr6/aE8dZvH7jYYOG/n9R/vqUMzvR9pfB++NyvcnHapDKb9faa0O
HseV719ap0OjMuX7mdbrEKRWvr/pLB228fudztahy13l+5/O0UFzRLk/oHN1
mMH7BzpPhyjeX9BWHdp+rtx/0Pk6xPL+hC7QIWS5cv9CF+rwG+9vaJsO4c+U
+x+6SIcLvD+ii3U4w/snukSHH3h/RZfqUOmpcv9Fl+kwn/dndLkOhbx/oyt0
WMH7O1qVhCze/9FOScjj/SHtkoR5vH+kXZMQzftLWp2ELbz/pN2TMIn3p7Qm
CYd4/0p7JmEJ729pJGEl739p3yToeH9M+yehepFy/0yHJmEn769pbRKyef9N
65Kwl/fntD4Jd3n/Tmcl4Qrv7+nsJLjXV+7/6ZwkNPxZeT6gc5PgtEN5fqDz
klApQnm+oK1J0PynPH/Q+fbX76Q8n9AFSUjm8wtdmIQunynPN7QtCXWqKM8/
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
jq5vwVrm09GuFqR6Kvl1dFMLLjLfjlZbkMP8O9rNggLm49HuFuQxP4/uZMEn
5uvRGgvOM3+P7mnBW+bz0Z4W7GB+H+1lQQnz/WhY8JL5f7S3Bb8wH5D2tWA9
8wNpPwteMV+Q9rfAu6GSP0gHWbCb+YR0qAXfML+QDrdgM/MNaa0FLg2U/EM6
zoJtzEekdRa4JSn5iXSqfX7MV6T1Fri+UfIXabMF75nPSGfZfz/Mb6SnWNB0
oJLvSGdboG+p5D/Ss+zzZT4knWNBw1IlP5JeYIHOVcmXpHMt6OSl5E/SSy2Y
xHxKOs+C6hFKfiW92oLtzLekrRacYP4lvcmCzzcp+Zh0vgVNrij5mfR2C7o+
V/I16QIL9jF/k95tQd9aSj4nXWh//e2U/E76gAWlzPekbRZgmJL/SR+3YOsc
JR+ULrLgA/ND6XMW7A9Q8kXpYgsaByn5o/RVC+4wn5QuscByXckvpW9bsLxI
yTelS+0/z/xT+qEF4bFKPipdZsGEdkp+Kv3cgt9qKPmqdLkFj5m/Sr+1IGSR
ks9KV1gw/5KS30p/sGDeZSXflVZlImO4kv9KV8nEPebD0k6ZuFBVyY+lnTPR
n/mytEsmOi5U8mfp+pm4XU3Jp6VdM+HRWMmvpZtmYmI/Jd+WVmfit7NK/i3t
lokBWUo+Lu2eiZwOSn4u3SkTN6sr+bq0JhOuzZX8XbpnJlo8U/J5ac9M7PxS
ye+lvTJxa7OS70sjE16blfxf2jsTnTyUfGDaNxOeR5T8YNovEy/qK/nCtH8m
ug9S8ofpoEwsu6HkE9OhmSj3UfKL6fBMVKxQ8o1pbSYWdlTyj+m4TGReV/KR
aV0mPrup5CfTqZkY3VHJV6b1mbjeUMlfps2ZmHdAyWemszKxy03Jb6anZOLL
e0q+88D/AylEaJA=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw13GdYVFfXBuCxY0clih07KioqKvZHRUAEHYrSYegDDDAViRrFjp2gRmIs
qKjYsWMkih07Ggt2bAm+GsWWYP/mm2fv/Ml1X8cza9Yw5Zy911rtIlN8Yqoq
FIqcGgrF//9f/pcb9+O8S/Yuf1Alw1fM6lGjyfm/h9Nlw7/1LWq79tx/wuXD
W+wdOjv3ZhXQFcM3d/C4dP5sLeH3w38dk3akVkF94crhjtdfbcr8s5Hwl+Fx
2369nXzeRliBYxPC9s8oaiZcFRk952XvONBCuDpy5wfY/Lm1tXBNdL6x2aAZ
ZydshaJh66p5n20nXAfV7Q/6zB/eQbgeFDMO/1rrUEfhBugd18DpaI/OwtZw
c6u7Yd3GLsKNEOkxYuFa267CjWHXb3/RzkXdhJtgwPXvw4q+dxe2wX3nBMdz
uh7CP2BFg8evjjzuKdwUmV3fV3Xt6ijcDGMm9Vn1S5m0LX443+fQmJW9hZvj
9cColECvPsIt0KZP5PtjVfsKt0TLeoXLJx2SbgWH5msKJyc6CbeG/u2kf0+2
6SfcBp3r5LzwuirdFjHq0ugms/oL26Hs55seDZ0G0Ol2UG88vHnIU2FFO3xY
b9rwyzJncbwd7rfsO9925EBxvD229tx49o/Xwunt8W8j95czVg8Sxzugi9fe
LSr3weJ4B9w+vffihHfCio6YdG2GMnTNEHG8I/5cetfD4DpUHO+ELtsb/bvs
lXB6J7g+b7z7yIph4nhn1N2i/vDX4OHieGf03tAtsfEjYUUXbNtiTFgzEuJ4
F9Sad3ZRz+XCCnusc23VbvAzedwevQKq/nG83whxvCtMnV/VPD5HOL0rDtRp
fnDADXm8G+znhmZ17DhSHO8Gw4uGxrl6YUV3uG76c1RIkTzeHW3ckj7l1h8l
jjvg1i8/54QHCac7YNHve8Yt3CyP98Caw6ccuryVx3vAf2oDfZ+hLuJ4T6yf
9DR6xzzh9J5410sbtPyqPN4Lk4+lHHzeYrQ43gvnMt7/b3uUsMIRxSPs0u5s
F4Yj9v9U9sL4Tv57RzR9mPdo8iBXusgR45o7VH2ZLqzojdvPmlQrPiOM3hjT
pGBzg3pu4vze0Fy9fuSYUrioN9aFoPXd5cKKPgjrmrNHVSqMPpiZ3zpR2dJd
nN8H0z61cNsWKlzUB5dq/u2VvE5Y0Rf1HfRZq8uE0RffFlTt06/dGHF+X6zd
Ve7rHCFc1BelWqeum3OEFU7oPDjh5bSHwnDC4wLnRydae4jznfClQS8/fbBw
kRMm7jSsWpwtrOiH4+enNPrhhjD6oemak21qNxorzu+H1JB5vRI8hYv64YXd
TwXO84QV/XF589J+puPC6A/fWqu62n2W5/fH85SObQY5eYrz+2PZ43YbT2qE
FQNQt/bucX/kCmMAVrW/VtjlnnD6APjZDFlarYmXOH8AIjfUSfIeI6xwxrlb
C6s2ni4MZzxYX7WK637hdGd826hp86pcnu+M5q5jfqjbepw4fyCOVInMXaMU
xkC4vl62ZPMs4fSBGLFi1arOB4WLBuLgx7tZbcrl+YNw879+o5c2Hy/OHwTl
rYszf/QQTh8Emy532z6YLFw0CM9LZ777Y5uwYjA2rV53q/kdef5g7Bri5fdj
daU4fzB6e6/bkNtSuGgwok64uS3tI6wYAmWNkn0DxwhjCD5kHAjKDZfnD8HM
jIm7r5jk+UNga3zYqXChPH8o9rx07puwXp4/FIu9//W8c1CePxTL7rs8r3dR
nj8UDbzvTqv6SJ4/DEWd/zf7yAd5/jD8T1nP4FzHW5w/DIunOh//sY1w0TBk
3Nr79/Q+worhsAr4HjbWVRjDcXDG9XX3AuX5w3F6c4MOTknyfPPx9RsjfNLl
+cD0GiuvD1gmbAe4H3/1/ukm+XhA3X55g4MKhFXAkv0722Wfl48PHDJdbLvu
nnAO4FS+bVfKKxkPqGI45lpH4UOXAZUr3FQpjYQVI/AxcbhhXXthuxHovCjw
v1V9hTECka7/RUW6CKtG4MDAdo7/+gmnj8DQEenXJsYI54zAigMTj882CReN
gKtisj59jow/AmemeQZ7rJDxR2LN3kMVj3Nl/JEIKuy8xWO/jD8SXm1nvJ1x
UsYfCcOFTq7zr8n4I7Ek8S+biEcy/khM/FD1au0KGX8khv7Y6eWsbzL+SOgd
w25dqecr4o9CzzNtq71qIWw3Ck3vDn74wF4YoxBS9PDOhv7CqlG4qP45epCL
cPooPF3s8L9N3sI5ozCxVlnpszDhIvNxn+5rPiUKl41Ck7H3NjxNk/FdYF23
/oTcOTK+C+58bddmUJaM74K0ZsVxm9fK+C5Y2f/dqufbZHwXbNpxr231QzK+
C5a9qBL27wkZ3wWT/TsUFl2W8c3nDxqVE3VHxh+N/XdyUx4+k/FHI2jXhSVO
b2T80ebfg8kRUV9k/NF4cnWfh6aWn4g/Gk5zD+0Y31g4ZzTWaao/r99auGg0
njfyV23pIlw2GvsubNW36iOscEWL7U7Tk4YI27kicm7S01WuwnBFN1srxSal
sMoVi/v+23NRkIzvilr11JeU0TK+KxwzL/Z/lyTju+LazaunDZNkfFfUXxNz
/Vq6jO+GB9cPHLFeIOO7QTOq9/Uey2R8N4zomWHqtlrGd0Na053/1twk47th
4YwbO0/ulPHd8PXy5ArVQRnfDcXNg5s8PCrju2F7p8kJw87K+O5o699+zPQr
Mr47lh14VmXDLRnfHVn/rf1r80MZ3x3nVurdl/wt47vj1dsrkwJey/juOJik
P1XjPxnfHeoNkT/98k3Gd8euFf9V1Kk5QcQfg+pvb2mi6gvbjUHWmM9Dc2yE
MQZvQrfnH28prBoDm6Q51sXthdPH4OSsKXn7ugqbf9cjrt84MdtRuGgMghs7
bR08QLhsDLRXl+SWDpXxPXCo3PlrsIuM74HGt8s+nfaQ8T2Q1T/raVNvGd8D
5TaHFOP9ZXwPfDU1X5EcKuN7wP7I079MUTK+B5rabhkUEy/je2BbLd/rQ1Jk
/LEYfgL/fTHK+GMx5kCvvzZNlvHHoukXtycD0mX8sXC63dJx3xwZfyy+O26t
b7tQxh+LztWDC2MzZfyxqPaiztR1K2T8sdiRWXXRiVUyvifSe37tVrJOxvdE
9VpdVxbnyvieeFdm32DHVhnfE7kzfrg0eZeM74mbnadb99sn43vizfdkm7uH
ZHxPGDerbZIKZXxPeK5IHPuiSMb3wrx1799NOC3je2FGzHe3nedkfC/Ynqs1
480lGd8Lv6nqlra/JuN7oUX5gjkjbsr4XlixZ+FxrzsyvheSmvx60u2BjO+F
jjdOn+j1WMYfh7Ordn6o8ZeMPw7u41Kzzj+X8ceh27yrl3/6R8Yfh1kVXx+2
fSPjj8PtHcWf8t/L+OPQrmCJb+9KGX8cHrgNa7P+s4w/DiO7BixRfJfxx+NV
qzc3x1edKOKPR6ve+7otrSGM8ejb/OGRo1bCqvFYMMur8EFd4fTxeKLRhr5u
IJwzHrk6v5KKRsJF4/Gi1YbRT2yEy8Zjcr91/5xpJqxQYrSVY+VvLYStlTib
X7o8srV8Pkq0DD/6toWdsKMSpb/l4XR7+fyUmDu/6s6ITsJKJR52uBdT0UU+
XyXuTX2RresmrFWiw3+LDc8c5PNXYvO0c+09ewlnKjHzqNefm3rLfJR45mfa
87avcL4SadXdnvfpL/NTYueT1M2xzsIlSiyfH2ezZJDMV4mNzt3Dtg4RrlDi
e805uwqGyfy9cav6/3oVQubvjS6qmfX2j5T5e2PK3G7JOS4yf2+kuhinzXCV
+Xuj25Mtsf7uMn9v1Bt1enx7D5m/N5p/mB35eKzM3/x43oFnV3rJ/L3hvyhl
88jxMn9vOBTnd3milPl7w9D5pP5HH5m/Nx7cqLO7hp/M3xsH22yvljFB5u+N
TknzVir8Zf7eiAx0+TklQObvje873ZvdCJT5+6Cd5uj43sEyfx98vLRMNTtE
5u+DO65TUy6Hyvx9UGPmm/UNw2X+Pqgb7tTaXSXz98HPL71qpkXI/H0wMsJ6
5rpImb8PChvbHjgaJfP3wbeEiydvRMv8fXDurura0xiZvw9+KrlR/WWszN/8
79d8nPYiTubvAy9dfPQTtczfB+8GZ5X+GS/z90HPdXu+FSbI/H0QfOPmx7WJ
Mn9fPP31ycsfNTJ/X7g2XPzJK0nm74s2uSGjWybL/H3R5N/814+k4Ys7+462
3JAi8/eF708/vwjWyvx9kXqi3oyGOpm/Lw7nvPxaKJ3ui37HzsyK1sv8feHV
ta5TTYPM3xzPvobjBul8X+ha3Mt2Nsr8ffHv2OVLz0mX+CLufMN+E0wyf1+0
G9Rw213pCl+M2dqnYWiqzN8PZRGfZt+WtvbDwt/PdveeJPP3g+av+x1OSTv6
ofRk5OI+aTJ/P/y7NTxjtbT5Oiml3wmnqj/K/P3wokno3ihprR+eXC63Oy5t
vg7Ciuo5LSbL/P3Qu/qA8VrpHD/Yvn7ldUI63w+mzrOPWE+R+fvBf5jzoWDp
Ej8s9R2g2ihd5gdDSfaNv6Ur/PCbo6p/16ky/wkYfOqn9XHS1hMQrL/Sb6O0
3QRcmdyu8T1p83XF8AG9JjT+SeY/Abl3N7Z2lVZOgH//lgsmSasmwCul/eHN
0toJ+OeM87k/pc2/69P8Skq/SZt/t2+fHFfTfprMfwLuN26gHS+dPwGacaFO
Jmnz7+j5cTN0v0qXTEB144HRhdJlE7AxwuHKfemKCWj5u7XDN2nFRAy7M2dy
6+ky/4l4siyvdLC0+Xu/sHxpdKC040R8OOU1JFXa/L056PDrn7Kkzd9bTQ5M
d9slbf5eOFZU/dA5afPnov+hWf97Kp0+EV+/m/+TzpyIw+5Tf2iZLvOfiCHD
P7v3l86fiMce6QXe0kXm5+dqPTNJumQivg/ae3K+dNlE9G6m/W2zdMVE/KDx
73JKWuGPg50mz3ksbe2PK6Nf/1llhszfHz5r/3RsL+3oj/KFHr+PkoY/uu2Z
tiRWWumPJXs2XFggrfJH43/eLM2X1vqj9ZA9H29Jp/tj6vZeXarMlPn7o9bA
s/0dpHP8sSfzvmugdL4/1px7asqQLvKHZ8eQx4elS8z5FJds+0e6zB+d5jz4
p8Msmb8/Vi12PB8irQhA4eCZYdnS1gEIu7Lu3E1puwDM6RXXzXa2zD8A0TuK
14VIIwC/HT/rniutDMCk21NcXkurAnDPutHeoXNk/uZ4n4vzl0qnB2Bvwufw
Z9KZAWjSu9nDYXNl/gGwernBa7V0fgDmnh964at0UQA+TsiZFDVP5h+AlkPW
6C9JlwVgYfP29wZnyPwDkDza+fouaUUgmq6tMaXzfJl/IHZPvFSxQdouEKWn
KyZ0XCDzD8TyfhXnt0kjEN/3JWr7L5T5ByL9WYe4s9KqQDy69elK6CKZfyC2
3nx/4aN0eiAKMXDqb4tl/oEYFN6k6qglMv9AzBj6blqFdH4gcmYm2+QulfkH
oq3niKehmTL/QDyuPd66zc8y/0DcCt74+1PpikBsrtDX2Jsl8w9Ck9hWTeYu
k/kH4ZduXWtGLJf5B+GCalyVUStk/kGodiqpi8MvMv8gbF/yy2+tVsr8g/A6
ouYMm2yZfxCm9+r2ucmvMv8gOHRc16PlKpl/ECqX9x3S7TeZfxCc//nbY8Rq
mX8Q9q19/ZNqjcw/CGFN9n6ct1bmH4TnORceH1on8w/Cq58ahFXkyPyD0PLw
rMzeG2T+QajaR7NuykaZfzDOLRuRfzlX5h+MSu9D5d02y/yDsWTzkeTMLTL/
YFzKSlN/z5P5B2PwI78vk7bJ/INh2+2D8tN2mX8w5t4esnjuTpl/ME4NGF/a
arfMPxirDZmBf+TL/INh3LXZWb1X5h+M63WmrGm9X+YfjPLCQfn3D8j8g3G5
VcCveYdk/sGYfmThjGmHZf7BmPHjjZ/Dj8j8g3F13U/vxv4h8w9Bm88/lIw6
JvMPQUXlZG+34zL/EIw7e339xJMy/xAEpma/0J2W+YfAvdX8wF/PyvxDkPa5
oOmlczL/ENTbvmBc/Ysy/xCkjNjrEHRZ5h8Crxn97+8rkfmH4JKVflGLP2X+
IWg+yyZuyQ2Zfwjq3uuwqmGpzD8ESalffdbekfmHoFW0/7FB92X+IfgzZ0T9
Zw9l/iHoNb5L4prHMv9Q7PjvSq3oZzL/UKSeVzUeWC7zD0XdJ6G/t3oh8w/F
+CXbezV8JfM3H1+2dIP1G5l/KNRT945q917mH4qiv+xcRvwn8w/FjcueN7Sf
ZP6h+P64Qdf8rzL/UOy+uUX33fy7xPxD0bDg+KOw6sL5objjpttxuZZwUSia
+g6oMb6ucEkoEhtWtStrIFwWijNpPXvPbCxcEYoDe+Yn9WsqrAiDfYxPnU/N
ha3DcL7boKElrYXtwrDgZeyQgnbCjmHwG2cctreTMMLwoJlp8tGuwsowBK17
3+V+D2FVGO72r5zWoI+wNgyJqxQFPv2F08OQoKpbb9sg4cwwbE1Yvt9muMw/
DDMCV77IGiXzD8On75kvOrrL/MNgezv99XlPmX8YXKf9r88cb5m/+d+3ufXG
d6LMPwzPK2+qBwTL/MMRc7XqjV4qmX84hqd8NQyNkfmHo8LmwyxVgsw/HKc+
5476NUXmH47Plye+/dso8w/Hsc5Pr3hOlvmHo6xaQavi6TL/cKzyKGkeNEfm
H478ocesqi2U+YdjdOWO7iczZf7m8/8OOL3qF5l/OM67tGy+YLXMPxz/zP8r
4ecNMv9w1H7h/j0/T+YfDt9zSS2f75L5h+Ne57Y1Bh2Q+avg3Oxs1dwjwlYq
zOqpC+5yQr4eKiz858LEU8XCtipkde82dMoV+fqo0GPqbH/Pm8L2KtzKmvx6
wH35eqlQdYPf+GFPhZ1V8DlY/UT4C/n6qfC6vv2y1W+F3VUYmGDV8MNH+Xqq
MD10zcz4KgF0gAq9sxYP/mQlrFLBur5jxhZrYbUK3dWLD+lshbUqhFpFNA+0
E05TIdijxbdQe+F0FS7m3T+Y7iicofr/6+EVx52FM1Vo/1fuS7sRwtkqvHec
03DdGOEcFcKmdfMZ4iOcp4LpuU/tj0HC+SpsvzppwY0o4QIVUgsvd7+mES5S
oWF3D5fXJuFiFR5GrureY7pwiQr1uvYctChDuFSFPSl9z9XLEi5T4cW7lX12
/yZcrkLcxdpXDZuEK1Qo/vu/70G7hStVyP4xq2XMYWFFBG76XUjPOilsFYE+
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
hg4wP1/W19CqFIxh/Q2tTsEj1ufQ2hSsZf0OnZaCKj6W+h46PQUPWP9DZ6Sg
DuuD6MwUdGP9EJ2dgi+sL6JzUlDJ+iM6LwXxrE+i81NQxPoluiAFLqxvootS
UG2Fpf6JLk7BINZH0SUpmMf6Kbo0BZ9ZX0WXpWA/66/o8hQ0YH0WXZGCa6zf
oitTsJ71XbRCi5as/6Kra1HI+jDaSosnrB+j62nxkvVltLUW9qw/o2202M36
NNpWiyWsX6NbaTGK9W20nRaXWP9Gd9TiIOvjaHstXrF+jnbQIpP1dbSjFvX2
W+rvaCctVrM+j3bW4jHr9+gh5sdnfR8NLdqz/o920SKN9YG0uxYrWD9Ie2rR
gfWFtFKL6hMt9Ye0nxY/sz6RDtDClvWLdIgWbVjfSKu0OMr6Rzpai6usj6TV
WlSwfpLWaLGY9ZW0VottrL+kjVroWJ9Jp2mRxfpNeqoWMazvpNO1OM/6T3q2
FltYH0pnaNGb9aP0Ii3Osr6UztQilPWn9HIttrI+lc42v96sX6VXm18P1rfS
OVqks/6VztWiI+tj6Twt7Fg/S+/QIpv1tXS+Fk6sv6X3a/GF9bl0gRbhrN+l
C7V4yvpeukiLk6z/pU9p0Yr1wXSxFiNYP0xf1KLmYEt9MV1iPp/1x/R1LV6z
Ppku1WIk65fpe+bXm/XNdJkW1Sx/B+GnWrixPpou1+I066fpl1q0YH01XWH+
PLH+mn5vfrzTlvpsutIcj/Xb9BctnrO+m1boMIb133R1HZxYH05b6bCD9eN0
PR1sWV9OW+twh/XntI0OqaxPp211eMX6dbqVDk9Y307b6ZDB+ne6ow4fWR9P
2+vgzfp52kGHaNbX0446FLD+nnbSwZ31+bSz+fmxfp8eokMs6/tp6ODC+n/a
RYdN7A+g3XWYzP4B2lOHNewvoJU6JLL/gPbTYTb7E+gAHdqxf4EOMcdjfwOt
0kHJ/gc6WoeX7I+g1TpUsn+C1ugwlf0VtFaH2tss/Re0UYe/2J9Bp+lgYv8G
PVWHFezvoNPNfx/2f9CzdQhkfwidoUNX9o/Qi3TQsb+EztShqqel/4RersMM
9qfQ2eb3C/tX6NU6TGB/C52jw2j2v9C5OpxhfwydZ3489s/QO3RQsb+Gzjfn
y/4ber/59WZ/Dl2gQzf279CFOgSzv4cu0uEf9v/Qp3TQsD+ILtahL/uH6Is6
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
PjOdloqZwy3zm49ZPDUV17It852P/R9ek5Hj
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         Thickness[Large], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        LineBox[CompressedData["
1:eJxVmXtcVNUWxw+EQL4YyQel2JGUyBeTKaKi/HgP7xFfyGvOjJGKppOaWb7O
7WpRak4qSVo6pjfRfExqXa5CnewhmeWUqGipk5qQryY1I8K8q8+sPmfLP3y+
n73PXud35py91/qtXraZeaX+kiTd9pOkv/9HY+jD+5URkP7+U5/i/yNQ/+qi
I72tzNoIzCrsdOfpCGYpDhErI1ojL5b6GHHYs3LYf8zvMqtxWGD48JMrU5i1
OJR9brn/j37M0kg0LLoV8fwvT/L1I/FD7b4t0/cyqyPR84urneufY9ZGon73
gsu745ilUQgYULxC8v/n+lEY+HbEhC8OTeLrR6HnqQWr/V5j1kZBWviBumcs
sxSPq3v7mk91Z0Y83jXWRc69YOPr41EQsjD8lfeYtXhkzNqdEDqHWQIybDsr
Oo1kloEZ7bt3ejmQGcD1pSWbZrmtPlaAtu8E961fx6wCod+MWPpeKbMTGLQ8
ZEmzkVkDYvrcuL6/VfGxB2hpDXzpRh2zlIAb0/7tt7GCWU5A5dmgUM3GjAR0
3Pi7Ms7IrCTA+cG6XrWtFo6fAM+I71/48E1mZwL2/XituWIos5YAKfThAwUn
Sjh+Aq7GW4/fN5dZSkTvNufMjq7MciLeSnyl/93/FnP8RMQOdxbnFjAriajZ
F+tefKeI4yfC+VDt5JWbmJ2J6L9x6t0FqcxaIpYc+7ws7Wohx0+EcXbY3Gur
mKUkyMcbLj09nFlOQvWR7gsOnS/g+EnQWlqvNy9jVpLgmRVwU4phVpNQNeiV
mLOeiRw/Cfmvh0xauZxZS8KRA1vCHxjG7ElC75aYoCmX8jl+MsoHXa5ZvoZZ
TkZlcFnD4iRmJGN5Xaw3/uYEjp+M/NUta7/azKwmo6HpI6XXOGZnMvp/nHoq
PohZS8aWNWmv9dk/nuMTV+9o++3TzFIKYpXjJxHBLKdAjnEvnH1yHMdPwZzH
K/49eQWzkoLBA+Nmdk9mVlPQGjzoixV/juX4KSivL+tQu5dZIz676sut05k9
Keg/Lm5xViSzlAqnqf3ebZ4xHJ94/8Wfa9czIxVFCztse3kCs5IK0zcFc9t0
ZlZT0VnOaxjybR7HT8WUW9nju61k1lIR12/jvKpsZk8qBgfsrGtszyylIf/a
A98eOzKa46choOpg+LQVzEjD9GVd4nbkMCtp6NHr1/0VBmY1DVWJ3/eNPGbm
+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
pw/9FP4Pho3D1w==
         "]], 
        LineBox[CompressedData["
1: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
kFLE8uWTSsPntB2R+DrlwP8B21sWoQ==
         "]], 
        LineBox[{{179.7502662619949, 180.}, {179.75076626199493`, -180.}}], 
        LineBox[{{180.2492338151851, -180.}, {180.24973381533994`, 
         180.}}]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 360}, {-180, 180}}, 
     DisplayFunction -> Identity, AspectRatio -> 0.33, Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox["\"t'\"", {
           GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
        None}, {
        FormBox[
         StyleBox["\"t\"", {
           GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
        None}}, FrameStyle -> Medium, FrameTicks -> {{{{-180, 
          FormBox[
           RowBox[{"-", "180"}], TraditionalForm]}, {-120, 
          FormBox[
           RowBox[{"-", "120"}], TraditionalForm]}, {-60, 
          FormBox[
           RowBox[{"-", "60"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {60, 
          FormBox["60", TraditionalForm]}, {120, 
          FormBox["120", TraditionalForm]}, {180, 
          FormBox["180", TraditionalForm]}}, None}, {{{0, 
          FormBox["0", TraditionalForm]}, {30, 
          FormBox["30", TraditionalForm]}, {60, 
          FormBox["60", TraditionalForm]}, {90, 
          FormBox["90", TraditionalForm]}, {120, 
          FormBox["120", TraditionalForm]}, {150, 
          FormBox["150", TraditionalForm]}, {180, 
          FormBox["180", TraditionalForm]}, {210, 
          FormBox["210", TraditionalForm]}, {240, 
          FormBox["240", TraditionalForm]}, {270, 
          FormBox["270", TraditionalForm]}, {300, 
          FormBox["300", TraditionalForm]}, {330, 
          FormBox["330", TraditionalForm]}, {360, 
          FormBox["360", TraditionalForm]}}, None}}, 
     GridLines -> {{0, 30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330, 
      360}, {-180, -150, -120, -90, -60, -30, 0, 30, 60, 90, 120, 150, 180}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, Method -> {}, PlotLabel -> 
     FormBox[
       StyleBox["\"a=1.262\"", {
         GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 360}, {-180, 180}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(X\\), \\(11\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(e\\), \\(1\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(X\\), \\(100\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(i\\), \\(1\\)]\\)'\"", 16, StripOnInput -> 
        False], 
       StyleBox["\"vel(i1')\"", 16, StripOnInput -> False]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Column\"", ",", "1"}], "}"}]}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7920070765965133`*^9, 3.7920070862227535`*^9}, 
   3.792007195444789*^9, {3.792094580176247*^9, 3.7920945913298025`*^9}, {
   3.7920946267496514`*^9, 3.79209464034545*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"angularProgressPlotClean15", "=", 
  RowBox[{"getAngPP", "[", "1.5", "]"}]}]], "Input",
 CellChangeTimes->{{3.7874823893131514`*^9, 3.7874824531051655`*^9}, {
   3.787482557848194*^9, 3.787482582777646*^9}, {3.7874826632982664`*^9, 
   3.787482712738389*^9}, {3.787483067137704*^9, 3.7874830774899073`*^9}, {
   3.787483734337971*^9, 3.787483737017289*^9}, {3.78748416649107*^9, 
   3.787484404634573*^9}, {3.787484447251199*^9, 3.787484462212372*^9}, {
   3.787484537780819*^9, 3.7874845944994683`*^9}, 3.7874850065492353`*^9, {
   3.787485056803105*^9, 3.7874850873717947`*^9}, {3.787485123566156*^9, 
   3.7874851278831215`*^9}, {3.7874851688866725`*^9, 
   3.7874851997877035`*^9}, {3.7874852557241526`*^9, 3.787485258044117*^9}, {
   3.7874852917318583`*^9, 3.7874852918528366`*^9}, {3.7874853497326717`*^9, 
   3.7874853547565527`*^9}, {3.787485402140417*^9, 3.7874854272378197`*^9}, {
   3.78748547044485*^9, 3.787485473117697*^9}, {3.787485515453606*^9, 
   3.7874855478442545`*^9}, {3.787485785197996*^9, 3.7874857854456644`*^9}, {
   3.7874858240161576`*^9, 3.787485838271869*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxt3F+sHOV5x/GBmrBN3XjaOGHTuPFAHNgkTjyAwUswnBcweBMcewAHNonB
A9jetTm2x/budqWinvcCKecCiblAyl5Y8lygci6Q2Asu9gLpjFQuVioqIwWp
5wLJU8lqzgUqU8VVtq1b1+zzfS2dR+Xmx4f3ed93npnZPXv+MHe+cvbZ47d6
npfd5nlf5v//T7HQ+VtJcbnwd9eu3/jnMl5f+NptkuJq4fJ/fzn+Bb66cPB/
v/Qf8GxhcIuk+NpC61ZJNjTXSIlbze9ukRRvMhdJ8VfMv3y5/PXbcM38PSn+
qjl8i6R4s3meFH/NBLdIin2TkuK/MMV8fee/NM+R4q+bZ0jxVnN1Xu/8DfP7
ubfib5q7SPEd5t/n4851E5Pib5lyPu78V+YgKf62eZIUbzNPk+K/NreR4u+Y
x0nxdtMixYG5Mt8P28D8OSnjd5r/mY9je6f5DinjdzGO7V0b0/uu+a/5uPvv
3zVbSBnfIevdSBnfYf7zy/Il7H3P+KSMf8/8KSnjd5v58tfd+N3mFlLG7zHf
JGX8HvN1UsYb5j/m8914Q9ZbajD+ffM1Usa/bzaRMv4D6edGyvgPpN5i74ey
342U8R+aPyFlfCfH78Z3yvlc2sn4j5j/I8Z/ZGbzcez9mPPrxn9s/jgf/zHj
u8xXSBnfZW4lZTxkf2xC6e9GSr3KPJT5OfbuNfOX+3Vs7pX9bqTMY3wJ5/fK
fqvYu0+u542U+fcxH1uV+X1y/nLs3c/9fj/z72c+tvfTL84Zz7G329RImb+b
/rHdzXyc75Z+VrH3wMY0DzAf2wfoH+eM527eg5w/N//BjWkfNLeTMl+lt4fj
38O8PXJ+DLZ7uJ9xvof+sdeU+hsp85vy+jHYNuX8Wpw3Zb8cew9xfz3E/Ifo
H1tscf6QrJ9j7yfcf27+T+R830iZz/gSzlV6D3P+sHmY43+Y+dji/GHpJ8fe
XvbHZi/3z17mq8z3Mh97j3D/PcL8Rzh+bFXmj3D9sfeo+EbK/Ec5fmwf5f7B
OfU59haYv8D8BeZju8B8nDOeY8+Ib+Q8AhxgY+T8LODYyP0SY6syU5kzfxWX
Rs5Pib3HNmag0jzG+cTxY3J8MbbY4gxnOH+M9wtcMl66fR/fmMHjsl+AzeOc
TxzjGFuVmcpcZcn80u37BOf/CfZXaVTGKu0TvL5w9oSc70s4V1k+IeejxN4+
9t/HvvvoHxtscEx9jC22OFOZMz/HpUrvyY0ZPMn9h43KWKVVmTE/wznOcfmk
nJ/Lbt+nNmbwFPtjozJ+SvqJsVWZMT/DucpSpbef1+9+9t/P+cdmP/cfjnGM
LfUWZzjDOc5xyfwSe62NGag0LfbHcUuON8aWcYsznOEc57hU6f10YwYqjcpY
pVWZ/ZT9cY5zXOLS7fsz7v+fsS8OsFEZq7QqM5W5ylKl9/TGDFSap3n94RjH
2D7N10ecMZ7hXGVJ/WW374GNGag0KmOV9gDXH2c4w/kB7j9c4tLt+3PO/8/Z
V6VRGau0zLc4wxnOVZYqvYO8/g6y70GuPzbY4BjH2KrMDnL+ca6yVOkd2piB
SqMyPsT+2GKLs0Psj3PGc1yq9KKN6asMVIaRrBdigw2OVMYqE5VWZaoyUzlm
vzHOcY4LlaXKSqX3zMb0n5H1fByoDBkPscEGRypjlYlKqzJVmbF+hscqc8Zz
XKgsVVYqvWc3pq8yeJbXAw5VGpWRylhlwnoJtipTlRn1GR6rzFUWKkuVlUrv
Od5/nqNv7ONAZajSqIxUxioTlZb9LE5xijOVY5W5ykJlyXolrlR6h+n/MP1j
HwcqQ5VGZaQyVpmwfoKtypTxFGcqxypzlYXKUmXF+hX2frExfZWBylCl+QWv
fxypjFUm1CfYqkxVZirHKnOVBesXuMQlrnDl+n5+Y/oqA5WhSqMyel7Wj3CM
Y5yotCpTlZnKscpcZaGyVFmp9F7g/n+BvrGPAxzgEIfYYIMjHOEYxzhRaVWm
KjOVY5W5ykJlqbJS6bU3pq8yUBmqNCojlXGb/nGCE2yxxSlOcYYzPMZjnOMc
FypLlZVK75cb01cZqAxVGpWRylhlotKqTFVmKscq81/SPy5wgUtc4gpXru9f
cf//ir6xjwMc4BCH2KiMVMYqE5VWZaoyUzlWmassVJYqK5XerzemrzJQGf6a
/rHBBkc4wjGOcYITbLHFKU5xpnKsMldZqCxVViq9IxvTVxmoDFUalZHKWGWi
0qpMj9A/znCGx3iM8yN8f4kLxgtcMl7iivHK9f0i9/+L9K0yUBm+KOuF2KiM
VMYqE5VWZaoy4/gyPFaZqyxUlior1quw9xL9v0Tf2McBDnD4Ev1jw7jBEY5w
jGOcqLQqU5UZ+2V4rDJXWagsVVYqvaMb0z9K/zhQGao0KiPmRzjGMU5wgi22
OMUpzo7SPx4zPsY5znGBC1yqrFivcn3HG7MWy/wa9lXWVQYqGypD1gtxU6Vh
3OCWykhlW2WssqsyUTlkvyG2KpcZX8apypHKTOWKyjHrjfFEZc54jqcqC5Vr
KkuV66y3jiuVM8Zn7rq/vDFrKv2XeT3guspAZUNlyPwQN1Uaxg1uqYxUtlXG
Krus18WJyqFKq3L5Zfn56G9wqnKkMmO/DK+oHKucqMxVTlUWKtdUlirXOZ51
XKmcqfRe2Zg1lb7KusrgFb4+4IbKUGVTpVHZYr0WjlS2GW/jWGVXZUJ9god4
iK3KZZWpypHKjPUyvKJyrHKiMlc5Zb0pLlSuMb6GS5Xrr8j9+3tcqZyp9F7l
6/+r4ppKn3Ef11+V9e/AgcoG9Q0cqmyqNCpbzG/hSGWb8TaOVXZVJiqHKi39
LOFl/Bucsl+KRyozlSvMfxeP8ft4wnoTnDO+iqeMT3Ghco3xNVziEq+rrFTO
VHrHuP7HxDWVvsq6ykBlQ2WosnlM+t2DDV7ALY6nhSOVbepfwLHKrsqE9RI8
ZP7fYKtymfplnOIUj/AIZypXWP9dPFY5Yf4E5yqnKguVayrLY/L3HZfxusqK
4/kCz1R6x+Xz4I2cR+241N+OfbwF14/L8ddxoLJB/T04VNlkfhOb43L8C7jF
/P04oj7CbZUx84/iLvM7OGF+gocqLf1bvMx6v8Ep672FRyozxi/hFea/i8f4
fTzheCY4Py5/77eKp4xPcaFyjf3+GZfUl3id/X6PK/wFntHvDHsn+Psnd/1P
mPmf+95+QuwzvgXXT5j5n/vegYMTsv523DjB+z8OGd+Fmyfk7zv3YHNC+l/A
LfbfjyPGD+H2Cfl9bRvHOMZdjq+DkxPSb4KHJ8w/zF//2Kpcvjmez53enC8e
3VxfnN3cX7xy8/jE45vHL56ckL+/aeH8Zv/i6c3zIy5unj/x2s3zKy5vnn/x
OtfrDlzdvH7i2c3rK/Y64uvHxTX8R+x33P0jrnfc/SUOOu7+Ezc67v4Uhx05
rwVudtz9LTYdd/+LWx33+hBHHff6Ebc77vUljjvu9Sfust8IJx33+hUPO+71
LbbUW7yMhzjtuPcP8ajj3l/EGeMxXmF+G4877v1LPOm49zdx3nHvf+Jpx70/
igvWC/Fax72/ikvGA7zece/P4gr7eNZx7+9ir+ve/8W1rqw3Oyb2u/y8CNfx
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
MDyfWTwcGJ7fLH59YHi+8+r/AbIOQa4=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
KbjH+y+63P568v6MrkiBK5T7N7oyBVd4f0erUlGf93+0cypaGJT7Q9olFVN4
/0i7pcKX95e0OhV3ef9Jd0xFGu9PaY9UDOP9K+2Zip94f0sjFSd5/0v7pOI2
749pTSpe8f6ZDk2FF++vaW0qpvH+m9aloi3vz2l9Ktbx/p3OScUj3t/T1lSY
ef9P56ZiENcH6LxUbOP6AZ2firlcX6ALUnGV6w90YSqmcn2CLkrFfK5f0MWp
eMH1DdqWiuFc/6CPpzrWR+iSVMRz/YQuTcVgrq/QZan4hesvdHkqznF9hq5I
hQ/Xb+jKVGzi+g6tSsNurv/Qzmnw4PoQ7ZKG9Vw/ot3SMJrrS7Q6DV24/kR3
TMNGrk/RHmloxfUr2jMNV7i+RSPNsf5F+6ShK9fHaE0awrh+RoemOdbXaG2a
Y/2N1qXhMdfnaH0apnP9js5Jwzuu79HWNFzn+h+dm4amXB+k8+yPj+uHUJyf
hj1cX6QL0jCF6490YRqecH2SLkrDAa5f0sVp+HBEWd+kbWnI5PonfTwNtbg+
SpekYQnXT+nSNMzl+ipdloa+XH+ly9PwguuzdEWaY/2WrkzDc67v0qp0nOH6
L+2cjrFcH6Zd0nGB68e0WzpyuL5Mq9MxievPdMd0tOD6NO2Rjp1cv6Y902Hl
+jaNdORz/Zv2Scdjro/TmnRc5Po5HZqOGVxfp7XpOMv1d1qX7lifp/XpiOb6
PZ2T7ljfp63p8OP6P52bjjzuD9B59vO5f0Dnp6PKXWV/gS5Id+w/0IXpOMT9
CbooHZu5f0EXp+M77m/QtnRs4v4HfTwdX3N/hC5Jx0Pun9Cl6aiZruyv0GXp
uMr9F7o8HXu5P0NX2B8/92/oynSc5/4OrcrAU+7/0M4ZWMv9IdolA9O4f0S7
ZWAJ95dodQYGc/+J7piB5tyfoj0yMJ37V7RnBvpwf4tGBmoFKPtftE8GenN/
jNZkoAb3z+jQDNzg/hqtzcBC7r/Rugz79buyP0frM/CG+3d0Tgbyub9HWzOw
gPt/dG4GfuT+IJ2XgRPcP6TzMxDF/UW6IANtuf9IF2Y49ifpIvv43L+kizOw
ivubtC0DVY3K/id9PAN/c3+ULslAGPdP6dIMpHN/lS6zn79V2X+lyzPgyv1Z
uiIDe7l/S1dm4Dfu79KqTBzn/i/tnIlw7g/TLpnow/1j2i0TK7i/TKszUZf7
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
C5rNV/L9aFiQPlPJ/6O9LDjOfEDaxwLfBCU/kPaz4D/mC9Ia+/PH/EE6yIKa
2Uo+IR1qQWorJb+QjrQ/n++VfENaa0Er5h/SCRb0YD4irbNgaDMlP5FOt+A+
8xVpvf3xM3+RNlvwB/MZ6Rz7/JnfSE+1wGOsku9IWy2YyvxHepYFnsyHpHMt
uMj8SHq+BTUuKPmSdJ4Fk5g/SS+z4MEJJZ+Szre/H5hfSa+y4DLzLekCC/oz
/5LeYIGV+Zh0of3vMT+T3mKfH/M16SILfmb+Jr3T/n5iPiddbEEE8zvp/RaM
YL4nbbOgJ/M/6cMWJDEflD5uQWvmh9KnLVjNfFG6xIK+zB+lL1nw2Wkln5Qu
taBzLyW/lL5pwRLmm9JlFpxi/il9z4I6zEelyy1oyPxU+pEFG5ivSldYkMP8
VfqFBWnMZ6UrLQhnfiv93gIj811pVTbaM/+VdsrGcubD0s7ZsDA/lq6TjQjm
y9Iu2ZjC/FnaNRvPmU9Lu2VjKPNr6WbZCGa+La3Oxq/Mv6XbZuMf5uPSHbNx
nfm5tHu2I1+X9shGI+bv0r2zsYH5vLRnNszM76UHZaMP831pZEPN/F/aKxuz
mQ9M+2RDy/xg2i8b3ZgvTGvsf5/5w3RQNr5lPjEdmg0v5hfTkdnwYL4xrc2G
U56Sf0wnZKP6RyUfmdZl4yXzk+n0bKxivjKtz4braiV/mTZnYxjzmemcbAxg
fjM9NRshzHe2/R+VfW9H
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         Dashing[{Small, Small}], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJw93G9sHHWe5/HauczEO5cb98xkJl4mM26YDPEMmXEDgRgI+AeE2CQhriSG
dBInXf7b7f/lPwm+EzrXntDhB0jukzjhB0ipB0j4AVJaOiR8J+5cKyFhaZHc
p0XCD9CldpddrBW76b3lDt9u7nyT+ry/myfuV35/vr8/Vb+uqv513z8wfX74
O57nxd/1vHt/7d//3f39v8WRRKp3/sk9v2pOO793709o3u78x3vpZXOjs+ne
n8D8TWf2p2je6cxi+ea7crfZc1l9nebvuH+652PmPS5rX7v5e+4edw+bm5S/
1fx9d/eeD5j3uf93z83mH7hv73mvOaf03WH8Q/cHWbPNP5Ib5h8r/1fm/WrP
bfNP5M/NP1X5uvmAvGFuUX3r5j9y2fisme/T+Nwy/0zpq+aDinfT/HON19vm
X8jL5lblf8Ocd//i3p8IR3m151VLv99lf0JLv1/jW7b0B1RfydIfUPmLlv5L
9de39F+qvm5LP+T+Tzb/ln5I5Y9Z+q9Uf7ul48OW/qDcaukPanxaLP2w0pst
/bDbc+9vk6W3aXx2h0hvU/5vsfdrHV93LP3XSv/K0n+j8rct/Tfq35alP6Ty
m5b+kNq3YelH5MTSj6j+Dy39txq/mqX/VunvWfrvFC+29N9p/N629HbFX7b0
dtW3ZOkFlY+wKzD/lr+g/CFOyF+x8g9rPAMr/7COj4tW/mHV12PlH9Z4dVn5
R+ROK4+PWXncbuUfUXvarPyjak/eyj+qeAes/KPMv5V/lPm38kc1PruDlD+q
eN/i6KjyN3ByVPO1jb3HFO+2lX9M/f/cyj/G/Fv5xzj/rfzjyr9u5R9n/q08
6bes/OOK956VP6b+x1b+mMq/beWPMf9W/pjav2TlO5R/0cp3qL4FK9+heNNW
vkPjU7byT8glK/8E57+VJ73Hyj+h9nRZ+ScVv9PKP8n6b+WfVH3tVv5J1XfY
yj/F+W/ln9L4tlj5pzR+zVae/Hut/HHW/wHKH1f8b3F0XOvvHZwcV/3b2Hta
6bet/NNuJ5t/K/+02rtp5Z9Wez6x8s+o/LqVxx9a+Wfcd+/9rVn5Z1T+PSvf
qfmKrXyn2rdi5TtV37KVx29Yeaf2LeK84/y3+kifxoHT+VCx+slfwjG+aPGc
2ufj1Kn9XRb/Webf4j+r+jss/rM6XgsW/1m9X7VZfMq3Wnx8wOI/q/f7Zov/
rOLvtfjPab52+4n/HOc/ds+p/Q0cPKfyX+GI/Ldx/Jz6/zlOnlN7NnFKfRvY
e575t/jPa/7WLD6uWfznWf8tPr5p8cm/YvGf13hWLf7zOr7fsPgnFH/R4p9Q
+qsW/wTzb/FJL1t8ypcs/gnFK1r8ExqvHot/wu2997fb4r+g9E6L/4LqO2bx
X+D93+K/oPE9bPEp32rxX1B7D1h88jdb/Bc0/k0W/6TGy7P4J5X/24D4J1X/
HRzgr3B0kvMfxye5/sPJSR2/dZye1Ph9gr0u5V/H+S4djx9a/C6u/yx+l66X
3rP4XarvpsXHb1v8Lq7/LH4X67/F71Z/Fy1+t+p/1eJ3M/8Wv1vnU9nid2s8
A4vfrfEsWnzq77H4uMvivyh3Wnx8zOK/qP63W3x82OLjVouPD1j8F9X+Zov/
Iue/xT/l/lc2ASXin1J/Gtidco1sfnFwivnE0SnN1zqOT/F+jRPSb+L0lNbz
KvZOu2+y8bf4p90/ZONt8U9zfln804ynxT+t+e60+JRvt/inNR95i39a89ts
8c+ovbvXiH9G43EHuzOsbzjAmzjC6zg+o/bcwskZ+o/TMzrel7H3ksYzsvgv
qX3TFp/0wOK/pOOvx+K/xP2jxX+J6wWLT/m8xad8s8U/y/p/lfhn1Z872J3l
/MbBWY3XJo7Ocv+G47Nq/y2cnHX/O+s/Tklfxl6P6lu0+D0an2mL36P8JYtP
eo/Fx50Wv8f9z6z/Fp/yrRa/R/PTbPF9+t8n53zud3Ce9Nu44PN+hp3P/GOf
8rdw4Gt8buLQ1/gv48hXexdx1XfKh2Nf41fCNZ/7SZz4uh5wuO6zXuCU9Dxu
UH8Oe+c4/q/Q/3M6Xho4f47+4wLexO4c6zf2KV/DwTn6j0PSqzgifRFXz6n9
0zgmXgnXztF/nFC+E9dxO07PaX5aceMc84+98xofz/p/XuXvXKb/53X83MaF
85z/2J3n+gX75zW+NRyQ/yYOz3M/giO8iKvnNR/TOD7P8wVco309OMGduH5e
41PAKeVbcYP6m7F3gev/S/T/gsb7Ds5fUH0pLlxQfzexu8Dxj/0LHP84uKDx
iHFI/mUcEX8RVy/QfxzjEq5RvgcnuBPXyd+OU9JbcYP0Zuz1cvwX6X8vxz/O
9/J8CxfwJnbkT7Dfy/UqDsh/E4ekV3HUS/9xFU/juJf7S1yjvI+TXo2vw/Ve
Hc8FnFK+FTfIn8Pey7Jn/X+Z9f8i/X+Z/uMC+evYkb6OfdJrOHhZ4xPjkPzL
OMKLuIqncYxLuIZ7cPKyxsPh+suc/zglfytukD+HvVe4/sU53HiF/uMUF16h
/9jhBPuvaPxrOKB8jEPyV3H0Cv3HVcqHOCa9hGuvaDx9nFCfw3VcwCnO4wbl
c9i7qPp3X6b/F+k/zpN+GxdIr2NH+jr2L2r8b+HgouLHOMRVHF3k+gdXcYhj
4gW4hn2cXNT9lsN10gs4pX2tuIGbsVdUPM/6jxu99B+nuFBU++vYFbn+wX6R
+ccB5WMcFjn/cVRU+yNcJT3EMQ5wrajrZx8n1O9wnfYVcEr9edwouuzzjBz2
Lqk+D+cu8bzvAv2/xPGPC5fUvzp2l1Rfgv1LvP/j4JL7w6wfOCR/FUfkj3CV
+kMc4wDXaK+PE9rrcJ36Cji9pPlpxQ3Sc9i7rPIezl3m+D9P/y871YMLl9X+
OnaXdT+fYP8yxz8OLjP/OMRVHFE+wtXL9B/HOMC1y6x/OKH9DtdpXwGnxMvj
Bu1rxt4Vrn9w7orKN87R/yuqP8UF8texu8Lxj/0rzD8Ormi+Yhxe4fjH0RWN
b4SrV7jfxjH1Bbh2hf7jBHfiOvUVcHrF7cv6gRu0J4e9Po2/h3N9PO/06X+f
xiPFBVzHro/1D/t99B8HfRq/GIekV3HUp/MjwlUc4rhP7Q1wrc9lnzf6OCF+
J673sf7htM/9y6wfuNGn8clh7yrHP85dpb899P+q+1dZHFy46n6UtQu7q4oX
Yf+q4gU4uOp+nuXD4VXFz+PoqtufvcDVq+4HWfyz9P8qnw/g2lUdfzFOqC/C
9asavwCnVzVeDjeuuj/K4mPvGv3HuWvEf4n+X9P91zouXNP4xNhdIz72r7mf
ZPFxcM0dyPLh8Jr7cVYvjq5x/YGr11wui3+G/tO+BNeucT+BE7yI69dcSxYX
p9c0fw43rmm889graTw8nCsx/6fpf4n1DRdKrOfY4Qj7Ja5XcFDS+edwWNJ4
tuKoxPsPrpY037dP0f+SjqcE10oanxgnJd2vLOI67QlwWnI/zeLjRon1EHsB
9/8vyk0B7/c4F9B/3EJ6jPOB+2XWD9wWcPzjAuUd7gg0H3nsAvf97AXuDpj/
bsaT/AkuBtxP4yDQ8RThisXHIekOLwQa7zyOAteswPJS4DRuXXI10PO5dbwS
uAez/uOY/kV4NdDxFeAadngt4HoMJxYfb1j/T8r1QMdPgrcCnV8xTgP3wyw+
3g6Yf9yw+HiH9uax16/yHm7q13inL8i5fp0fCW7p5/zH+X6tFxFu6yc+LpDf
4Y5+HY957PrVPw9392v+0hOy38/xh4vEi3HQr/5FuNLP9SIO+53i4AX6k8cR
9Xl4qV/HY/q8XO3X+pnglX73iyw+jvu5fsWrjGeAa/18voHX+jn+cNLP58/P
yRvUl+J6P++veKuf9R+n/Xo/ivC2xccNG3+8Q32t2Bvg+cezctOAjscU5wY4
/nDLAOsvzg+oPxFuG9DxE+AC9TncMcDnNdgNaL493D2g+Uyd7A9wfY2LA6y/
OKD9i7hCewIcWny8QPvyOBrQ+Hl4yeJ1ytUBdzDLh1cGdP45HA+4Q9kLvEp/
kmfk2gDPt/DagM5vh5MBd1/2Am8MuHz2/0/L9QH3N1l5vDXgWrPyOB1g/T4u
b9OfBDcG9H4Y4R3ssDfI/e9TctOg+pvg3CDrK24ZdPdn5XF+kPHDbYOs10/K
hUH1N8Idg1o/HXaD7oHsBe4eZPyekP1Bna8RLmKHg0HOX1wZ1PmRdMjhIPdX
eGFQ63knjgZZf/HSIPN/TK5Sf4RX6J/D8SDXL3h1kPuBx+XaoPtVVh6vDXK/
gpNBrYce3rDxf0yuD7K+4S3653A6yPqJtwe1fiVH5QbtWcQ7g1yPYW9I8+vh
piG1J3lUzg3Rf9wypPodzg9x/uI28iePyIUhrZcR7hjS+eKwG+L+A3cPMX8P
y/6Qa8vK4+IQ7cfBEOcPrgxpfUgKckj9EV4Y4vjD0ZCOh912eWlI632Eq0Mc
n3jF6vudHNNfD69af38r14ZYX4/Ia0P6/GMRJ0M6Pjy8YeUfkutD7nfZC7w1
pM/nFn8jp0Pu0ewF3ibe4q/lxpD7+yx+m7wzpPuRCHvDrpD9xU3Dqi86LOeG
3ZHsBW4Z5nrzQTlPfg+3DfN51q/kwjDHF+4Ydn+WpR+S3bDWMw93kz/6pewP
u/+Rtf8BuTjs/iIrjwOLjyvDOh6j++VwWMeLhxcsPS9Hw+5DvSHKS8PcD+Hq
sNZj7xfyyrDWB+/ncjzs/n324qC8Osz5+DO5Nqz10rtPXht2t7N4LXIy7L7K
XuAN6+9P5fqwG85e4K1h1qufyOmw+zzL/2N5e9j9XeYfyY1h93L2Au8Muy+z
9Jzsjbinsr+4acQVswXtB3JuxP237MU+uWXE/afsxffl/Ij7N1n+JrltxP1x
Vv935cKI+8/Ziz1yx4j7syz/d2Q3wvHhyd0jbjlbsO+uZ/ZH3G/UcLk44k5l
9f+DHIy4P9UGDbky4m5nE7gthyPuQ91QyQsj7pM3soGVoxF34vxD/+G+V44+
nXlpxJ3/t1m69jFXf9//bIG4La+MuHPZAbAtxyNuTh8YyasjTt1hH3RtxP3H
rL3fymsj7r9nFwT/JCcj7gO9gajcxoh7ROMj10fcP2r85K0RN5K9+J6cjrge
jb+8/fv+ZfH+UG6MuJvZi33yzog7ko3vD2hnmeMjJzeV3R0dH3KuzP6IH8ot
ZfdC9uLHcr7sjmcv9sttZVfJXvxELpS5vsUdZfdXOr5lV3a9qljuLrv/ovND
9svu/ezFfXKx7NazdByUWb8OypWym8xe/FwOzb+QF8qsF61yVHb/Tue/vFR2
D2X/n5erZb3f2z7olbI2tEU4tvQH5NUy98O4VtZ6v4vXylwvsw86Kbt/nb04
JG+U9X4T4XpZ67X3K3mrzPsxTstcPzwob5fdn2t9lhtlrk8Pyztll2Tp2Ksw
Hm1yU0X1RThX4fNB3FLheuTXcr7ins9esO+5rcJ+clyosL8ad1TY7/KQ7Coc
D7i7ovZGR2Sf/Lu4WNH1d/RbOaiwfrAPulLR+0mEw4q7mr1olxcqPK/DUUXz
bfuglyp6v3W4WuH9FK9U9H5o+6Bj0nfxakXz7x6WaxWt1xFeq3A/jZMK7w+P
yBsVvf87XK/wfo23KnzejtMK1+94m/Fw7ItuVPR+FOGdit4/17E3qvH0jspN
o8THuVG7fpRbRnkegvOjHP+PyW1WHhdGeT6GO0Y1vgl25Pcel7tHdXw77I9y
/4SLo+pfgoNR+sE+6MqoXZ/L4aj7y6w8XhjV/XGCo1G3nY0fXhp1f3uPneyD
ro5yf41XRjUfCY5Heb9/Ql4ddYez+Lg2qv0Ti3ht1P11Nn44YXy8J+WNUR2P
DtdHdX0b4a1RnkfgdFTHm/eUvD2q62WHG6Pumaw83hnV9VCCvTGefx6Xm8a4
X8a5MfdwVh63jLHfDefHuD59Wm4bc9kbqcOFMa4HcceYzs8EuzH3SPbiGbl7
jOfV2B/T3wgXx3S+JDgY43qNfdCVMT4PxyH1R3hhTO8XCY7GOH7Zp7w0xvMx
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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         Dashing[{Small, Small}], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
UVwSjr8f9fRdpxOXhcPuVv4X5UPFFeH46c64p+1riRUReBCuHTPukrfMPwLp
h5eMicoXO0Wg239xm1UxYrcIuPSrclR2FyMCf9t/F+rycpzMPwKBre+3en1I
rIrA85gZTX6cK1ZHYFVK1lvv8WJjBKLyH07+vak4LwLlfkO9Jt7xkvlHYKfD
hxY/bxEXRqBdRsm6T5licwTGNF4yZ+BAcUkEdm3pNDX001iZfwQ2r9jQK+G0
uCICMRed/MKWihWRWDrz1gL3YLFDpOX+qknup7Zip0jcjWjycudfnjL/SEy5
3MPguVOMSMxsvG3fSYNYGYnZG29HuQwTqyKxZ0HNJlPtxOpIROcGTdt5bozM
PxL/KZ67n1kuzovEjZe3np0JFZsiUeuCnUehk7gwEu3au5VM+3u0zN/y9xM/
DnLZKS6xPP4G99oc04vLIjH0arMWg4eIKyKxvs/3p7+pJrbcB7x1CDjx2+lR
Mv8oNDy5qeDdYrFTFNq3OF//U4DYLQrXeu2b/1cLMaLQxvf5zl13PWT+UQie
Wtgs7HuxKgq/tDzu9zBVrI5Cqu+S50o3sTEKNdxrzVv7eqTMPwrZg7auO31Q
bIrCxPLMk5dniQuj8LTqWu7B0WJzFGY3PqH5oo64JAom7+X2XS5C5h+F64ff
Xd26XFwRhaDrDqG1gsWKaFya4dFqZCuxQzQG+yxy33VkhMw/GgPQq2i5p9gt
GhV7b//U4+JwmX80iq9mtp0ySayMRq/LjV5OuTVM5h+N6dF92rvGidXRcDky
9Ztlj4bK/KNRV71j6JYscV40vvtm7buU10Nk/pbH87TJrptTxYXRuBF1dvD7
T4Nl/tHo4Dk6+8RccUk0uvY9M2BQHXGZ5fwI7/HBiwfJ/KNR7dsJ89p8Jlao
EKa4/cOCle60vQr6d4nT1jUXO6hw0u7nA4FrBtKOKmx9YW67q7XYSYVbhYej
t60fQDur0MB0y8XLSeymQnHyhN5zN/an3VX4JbxN46gOYqiww7uF7tqmfrSX
Cm3/PPz0YQexUoVpsxs3W7apLx2iQs/Z62dday9WqXCsctCenaY+dLIKb54p
BrVtJ1ar0Khm78Xt1/Wmc1TYOK1B9/0txUYVVuw9Nvv2Kjc6V4XlTUbZrWgi
zlOh2tT47tvb96LzLY9XN7mHd4ue8vqosLN6xZGqRq50gQr1Vn29wFzTRV4v
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
7t/oyhTs3m69v6MVqTjD+z/aPhXfDLHeH9IOqfDYbr1/pB1TsY/3l7RTKhx4
/0k7p6Jwj/X+lHZLxTvev9LuqfhVa72/pZGKw/es97+0Vyoq3az3x7QyFeG8
f6ZDUvGW99e0KhVNeP9NJ6fibFvr/TmtTsV/La3373ROKr7n/T1tTEXiLev9
P52biu5cH6DzUjGvg3X9gM5PxbE46/oCbUqFP9cf6IJUNOX6BF2Yio1cv6CL
UqFztq5v0OZUXPGxrn/Qxan4aLCuj9AlqTC1sK6f0KWpmPbUur5Cl6Xih7nW
9Re6PBU9uD5DV6Qigus3dGUqvjRY13doRRryV1rXf2j7NNTl+hDtkIaq19b1
I9oxDT/3sK4v0U5p6DvDuv5EO6dhRz3r+hTtZjl/iHX9inZPQ8YY6/oWjTTc
5PoX7ZWG+D+s62O0Mg3f9LOun9EhaWi237q+RqvS0J3rb3RyGg6Ntq7P0eo0
BIy0rt/J+l8aGsyxru/RxjSoulrX/+jcNNTZYV0fpPPS0Pa2df1Q1v/S0M/b
ur5Im9Lg/6t1/ZEuSMOs49b1STNf/zTMdrCuX9JFafD6wrq+SZvT8M931vVP
ujgNSSOs66N0SRoUXD+lS9PwE9dX6bI0NHlnXX+ly9PwI9dn6QrL87nBun5L
V6ah5Ubr+i6tSEdgnHX9l7ZPx0SuD9MO6bjE9WPaMR2ZOdb1ZdopHT9w/Zl2
Tkfdj9b1adotHT9ds65f0+7p6MX1bRrpaMP1b9orHWquj9PKdHTm+jkdko6a
+db1dVplcQ3r+judnI4/9Nb1eVqdjoZcv6dz0jGd6/u0MR3buP5P56ZjDfcH
6Lx0dOf+AZ2fjg/cX6BN6Rj2zrr/QBek480X1v0JujAdq7l/QRelw5H7G7TZ
8vxw/4MuTsdh7o/QJRZz/4QuTcflDdb9FbrM8sX9k3X/hS5Phw/3Z+iKdNjV
tO7f0JXpWML9HVqRga+4/0PbZ6AR94dohww04/4R7ZiBeO4v0U4ZaMn9J9o5
A22irftTtFsG2nP/inbPgIr7WzQycDvLuv9Fe2VgLPfHaGUGznH/jA7JQG/u
r9GqDCzj/hudnAG7fdb9OVqdYdu/o3My4M39Pdpo+fe5/0fnZiCK+4N0Xgb+
4P4hnZ+BBdxfpE0ZSOf+I12Qgfvcn6QLLc8H9y/pogws5v4mbc7Ax4HW/U+6
OMO2P0qXWObH/VO6NANjuL9Kl2XgnY91/5Uuz8Bu7s/SFRlw5P4tXZmBxtzf
pRWZuMf9X9o+E99wf5h2yERP7h/Tjpm2/WXaKRPXuf9MO2eiBfenabdMdOL+
Ne2eiXLub9PIxG3uf9NemfDg/jitzMRC7p/TIZnQcX+dVmUih/vvdHImpnF/
nlZn4iL37+mcTGzg/j5ttJzP/X86N9NWH0DnWf6e9QN0fiZMrC+gTZbHy/oD
uiATn7E+gS7MtNUv0EWZKGR9A23OhB/rH+hiy3xZH0GXZOIa6yfo0kyMYX0F
XZaJK6y/oMstrxfrM+iKTLRh/QZdaXn+WN9BK7JwkvUftH0WlrI+hHbIwvub
1voR2jELF1lfQjtlIZL1J7RzFjawPoV2y8LvrF+h3bMQxvoWGlm4zvoX2isL
e1kfQyuz8KS5tX6GDsmCL+traFWWrf6GTraY9Tm0OgtNWb9D52ThJ9b30MYs
XGD9D52bhVasD6LzsjCL9UN0fhYcWV9Em7Jwg/VHdEEW7N9b65PoQsvfs36J
LsrCCNY30eYsXGH9E12chbusj6JLsjCW9VN0aRYSWV9Fl2VhG+uv6PIsTGZ9
Fl2RhR2s36Irs6BobK3vohVq2LH+i7ZTYz/rw2h7NQazfoyur8YL1pfRDmqo
WH9GN1FjNOvTaEc1jrN+jW6txjbWt9FOaqxj/RvdSQ1X1sfRzmrUY/0c7aJG
Q9bX0W5qfM36O7qfGs6sz6Pd1bb6PXqoGoNY30dDjaOs/6NHq1H13FofSHup
kcn6QdpXjVTWF9JKNcaw/pAOVKOE9Yl0iBrLWL9IR6jxmPWNtEqNS6x/pOPV
mMD6SDpZjSWsn6TT1TjI+kparcZ51l/SejWmsT6TzlHjW9Zv0tPV6Mb6Ttqo
xmnWf9Jz1ejH+lA6V41arB+lF6kRwPpSOs8yHutP6ZVqJLE+lc63PB+sX6XX
qlHE+lbapMZm1r/Sm9VozfpYukCNTqyfpberEcf6WrpQjamsv6X3WN6frM+l
i9S4wPpd+rAaQ1jfS5stzw/rf+kTlvFYH0wXq7Ge9cP0eTU2sL6YLlGjKeuP
6Wtq9GZ9Ml2qxlesX6ZvqdGI9c10mRqfrOvP4gdqPGF9NF2uRjLrp+mnahxi
fTVdocZD1l/Tr9S2+my6Uo1I1m/TVWpcYX03rdAgivXftJ0GZtaH0/YaDGD9
OF1fg7qsL6cdNMhl/TndRIONrE+nHTUoYf063VqDO6xvp500CGf9O91JY6uP
p501cGX9PO2iwRLW19NuGsxm/T3dT4MtrM+n3TX4wPp9eqhlfqzvp6FBb9b/
06M1uMb+ANpLgwj2D9C+GnzB/gJaqcFg9h/QgRp4sz+BDtEgi/0LdIQGP7C/
gVZp0Iv9D3S8xtYfQSdroGP/BJ2uQQf2V9BqDX5k/wWt12A++zPoHA2Wsn+D
nq5BNfZ30EYNXNj/Qc/V4DT7Q+hcDezZP0Iv0uAS+0voPA3i2X9Cr9TgHvtT
6HwNKti/Qq/V4AT7W2iTBmHsf6E3a+DF/hi6wPL8sn+G3q7B9+yvoQs1WMj+
G3qPBu/mWftz6CINitm/Qx/WYDj7e2iz5e/Z/0Of0KAm+4PoYg382T9En9dg
BvuL6BINAth/RF/TYDX7k+hSDQrYv0Tf0qAZ+5voMg1WsP+JfqBBEPuj6HIN
DOyfop9q8Gm2tb+KrtCgIfuv6FcaJLE/i67UYCj7t+gqDZ6zv4tWaNGU/V+0
nRZr2R9G22uhYf8YXV+LIvaX0Q5aDGP/Gd1Eixj2p9GOWijYv0a31qI5+9to
J62t/43upIWS/XG0sxaL2D9Hu2jRnf11tJsW/uy/o/tpUZ39ebS7Fp+WWfv3
6KFabGd/Hw0tWrD/jx6thZn9gbSXFlr2D9K+WjxhfyGt1Nr6D+lALf5hfyId
osVs9i/SEVqsZn8jrdLiL/Y/0vFazGd/JJ2stfVP0ulaHGB/Ja3Woif7L2m9
FgHsz6RztGjF/k16uhYp7O+kjVqEs/+TnqtFa/aH0rlanGf/KL1Ii+/YX0rn
adGe/af0Si02sj+Vzre8Puxfpdda5sv+VtqkxTH2v9KbtWjI/li6QIsj7J+l
t1vef+yvpQu1qMf+W3qPFqvYn0sXaeHG/l36sBah7O+lzVr8yv5f+oQWv7A/
mC7W4iD7h+nzWjRifzFdosUb9h/T17RIYn8yXWqZP/uX6Vta3Gd/M11m+Xxo
rf3P9AOtrT+aLtfiKfun6adanGJ/NV1heb3Yf02/0iKM/dl0pRbF7N+mq7TY
xv5uWqHDAvZ/03Y6fM3+cNpeh7fsH6fr6zCS/eW0gw7z2H9ON9HhD/an0446
1GX/Ot1ahyHsb6eddPjoZ+1/pzvp0Jv98bSzDlPYP0+76NCO/fW0mw5g/z3d
T4e17M+n3S3ns3+fHqrDZvb309DhFfv/6dE6Wz4A7aWz5QfQvjoUMl+AVups
+QN0oA7VmE9Ah+hs+QV0hM6Wb0CrdNjO/AM6Xod85iPQyTocYH4Cna7DQeYr
0GqdLX+B1utQg/kMdI4OkcxvoKfrsJj5DrRRh4nMf6Dn6pDKfAg6V4co5kfQ
i3TYy3wJOk+Hc8yfoFfqkMd8Cjpfh6vMr6DX6vCY+Ra0yfJ4mH9Bb9ZhOvMx
6AIdjjI/g96uQzfma9CFOuiZv0Hv0UHDfA66SIc7zO+gD+vgw3wP2qzDWeZ/
0Cd0tnwQuliH2swPoc/r8IL5InSJDqOYP0Jf02EJ80noUh3WML+EvqWz5ZvQ
ZTpkMv+EfqCD3SlrPgpdbnl+mZ9CP9Wh1klrvgpdocMc5q/QryyvD/NZ6ErL
54H5LXSVDvWZ7wKrFXqcYf4LbadHBfNhaHs91MyPoevrcZf5MrSDHt8zf4Zu
orfl09COevgzv4ZurUdr5tvQTnp8w/wbupMe55mPQzvr0Y75ObSLHsuZr0O7
6dGZ+Tt0Pz3GMJ+Hdrf8+8zvoYfq0YP5PjT0MDP/hx6tt+UD0V56eDM/iPbV
4zDzhWilHj8zf4gO1KMb84noED1UzC+iI/RYzXwjWqWHJ/OP6Hg9ypiPRCfr
sYz5SXS6HpOZr0Sr9bjE/CVar8dS5jPROXpsYn4TPV2P4cx3oo16xDP/iZ5r
ef2ZD0Xn6rGS+VH0Ij1aMl+KztMjnflT9Eo9+jCfis7X4xHzq+i1epQz34o2
6XGc+Vf0Zj3ymI9FF+jhzvwsersefszXogst82f+Fr3H8nwyn4su0iOV+V30
YT3sme9Fm/Wowfwv+oTl9WQ+GF2shwPzw+jzevRjvhhdosdl5o/R1/SYynwy
ulRvyy+jb+nx+pw134wu0+MO88/oB3rMZT4aXW4x89Pop3r0Zb4aXaFHEPPX
6Fd6zGA+G11pef8zv42u0qMW891ohQF/Mv+NtjNgOvPhaHsD9jE/jq5vwCzm
y9EOBlv+HN3EYMunox0NeOBqza+jWxtwjPl2tJMBbZl/R3cy4M4Raz4e7WzA
c4U1P492sZzPfD3azQAz8/fofgbsZz4f7W6Agfl99FDLv8d8PxqW+R+x5v/R
ow34lvmAtJcBZeOt+YG0rwGNmS9IKw2IZ/4gHWhATeYT0iEG/HjHml9IRxhw
q4Y135BWGXCX+Yd0vAElzEekkw249Kc1P5FON6AN8xVptcHy/WbNX6T1BnRl
PiOdY5kf8xvp6Qb89rM135E2GjCf+Y/0XAPOMR+SzjXAjfmR9CIDPrla8yXp
PAMWMn+SXmlA0wHWfEo634A+zK+k1xrQk/mWtMmAk8y/pDcbMJP5mHSBAc2Y
n0lvN6Aj8zXpQgN8mb9J7zGgAfM56SIDfmB+J33YgCPM96TNBlxg/id9woA1
zAeliy3vR+aH0ucNiGW+KF1iQDHzR+lrBjzta80npUsNuHzeml9K3zIghfmm
dJkB/Zl/Sj8w4A3zUelyA/5mfir91AAV81XpCsv7kfmr9CsDnJjPSlcaMJb5
rXSVAY7Md6UV2djB/FfaLhslra35sLR9NpoyP5aun428N9Z8WdohG42ZP0s3
yUZ/5tPSjtloyPxaunU2tu605tvSTtlwZf4t3SkbiczHpZ2z8S3zc2mXbDxk
vi7tlo31zN+l+2Ujg/m8tHs2+jC/lx6ajZm1rPm+NLLxpos1/5cenY17zAem
vbJhx/xg2jcb849Y84VpZTZmMH+YDsy25RPTIdl4wvxiOiIbauYb06psbPg0
4H/5x3R8NoobWfOR6eRsfK205ifT6dlY6WnNV6bV2SiKtOYv0/psfJhszWem
c7Ix8bk1v5mebnk+Q6z5ziP+H4bHWq4=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxd3Hlcjen/P/BjzwghZM8eQhGy9pJUCGnf1Gk/7WdNxtZgyJ5lyDImy5C9
sWbPnj3LkD3Gkj2EEL7nd17X9fnjN//M4/k47q7zPvc5933d1/V+v1tHpHhF
V1YoFNnVFIr/93/533i/2oPWWo4YSBU6lXUYlZi6+qMTXexUvzxhx6g/q4Eu
cWo9fsTmWQ4WwqVOE5WJW//Jaihc5rRzoTJ53temwuVOZl5r2p62tRaucHKw
yF244HYbYQU2/+ytCpnRXrgyqnksa/usu41wVfwZ3Gj8yxudhavjr9SVaR0m
dBU2Q9sob78udeyEf8HyI92btxxrL2yO0fMujvfY3EO4DuwSIpyzPvYUtsCH
Du4DHg/qJVwPzjV2d7Gc0Vu4PqYnut41P99HuAE6rEzptLt2X2FLPH6QU+3d
yH7CDfG8/7T0LXP6CzfC4nfzz184PUC4Mf6xaz3I6edAYSv0e/HD/42Dk3AT
jNnxa/h/PSHcFCFuezrdOS/dDBNU5VX8IgYLN8eh6h+reHyWboGBn9cV7pnt
LNwSwQsOrp3bfIhwK7xsftz53FZpa3w+erJ6XH8XOt0afYcduBxZIKxojeUX
l1ff6z1UvN4ae/6yXR58T1jRBl0Hr/vkGe0qXm+DayfLai1+Kaxoi/cP6qKV
2k283hYf9z1O+fBeWNEOPrajXtTWu4vX22Fww4cJSR+EFe1Rd8XGpvU0w8Tr
7WGuuvRb+SthRQdkDxw2r23scPF6B6y5rvt90QNhRUf8/WDXL65+I8TrHdEq
wbqe03lhhQ0yF/a4O3mQh3jdBg8bT/taPVdY0Ql3O2YNvtVqpHi9E5qbnT77
eZ6wojO2BbV/EfVVvt4ZSY3WOLSNHiVe74ItHVpqe10STu8C25FHVq/uNVq8
botja5yehq8UTrfF0ZPjs6f+lK93ReiVig6V7T3F613xulfocEO4sKIbdjf+
fXXzhfL1brDt5tj461H5end4tEreW/eNfL07bux6MTus2Rjxuh0Wlbzc/tJN
GHaoveup616dcLodSod4px9bLZxvhxHTMzLrnpXH2+Of9A271r6Xx9tjQNKC
LpOaeYnj7dH38ZtBa4YI59vjUcUox3oJwooeKC7sF315oTB6wKJqcsP7++Tx
PVDzgcUKp3vy+B7oPVsx9FMlb3F8T0R/aqOq2kEYPRHw45RP4jDh9J6oMqpm
sF2icH5PLFzpddZrvjzeAS5Hz7/8d4c83gGKfi9qHSqUxztg1oGfKTXeyeMd
cMjhWtABCx9xfC/cbuVc62Z3YfTCS93zg2GjhNN7wbbSjbV+icL5vVDtaP93
h2fJ43sjdFfPa8s2yON742Cj9JSnx+XxvfEt2O/Zlvvy+N5odLqb34sv8vg+
WN9v+ZV1lr7i+D6oXqlx3O1uwul9oGz7pX2mu3B+H7yyGVLrTLiwwhGf/1vY
8Ldf5fGOaFm/ev/8RfJ4R/Rc0CNhxmZ5vCO+36+94N9j8vi+uHH9acaOInl8
X8xpE+LQ6K08vi8cVvrF1KrmJ47vi7pfqr3ObCqs6Id7nx8syOkujH5olrWm
ro+LcHo/qMK9OvwRII/vh7aThs1MSpTH90f+NIcH96fI4/tj7u1W118sksf3
R+f09GqL/5bH98f6Tk7mt/bJ4weg6aKTvx45K48fgO6Pqt9zuSOPH4Ayy6y8
pFfy+AGY67xnbr/v8viBOLbf7+rW2v7i+IF4eBUVp1oIpw/EZFXDcTO7CucP
RPB/0ZveDxBWDMKyM6c+mHnI4wfh8q57ueeD5PGD8PzY5F4D4uTxgzB3wN7C
4HHyeON9Y+XD811+l8c7wT3vePy2RfJ4J4zuu+Tlw7/k8U7G61vLmee2yuOB
9+7n1Kr9wtbAOP3+G4dOyb8HRO27+bDgirASqBX7bs+8e/LvA1svn9GYPxfO
Bqo+a9/dtUyOBzR7XVZ5wE/hYuDDR8/vb2oGiPEHY6bfn52UlsLWg+H4Lmt+
ZkthDEZBiLbbbzbCysGIeHSnes8ewumDoRvdqt7G/sLZg7F6mb3zfRfh/MHY
5HJ69q2RwsWDEfRPxM3lfnJ8Z6TW1lhYh8nxnRFp4900KVaO74zBlQz//pYi
x3fGX03DWoaNk+M7IyGz4GK1KXJ8Z4x6m5OXOkOObzz+wrDcnfPk+M7Y0Cxg
6oElcvwhcHT7WD5/pRx/CIIrF9y2WyvHH4IDd81fZufI8Ydg9KINzx9sl+MP
gV+Tbovf7JbjD8G/SZXXXDwgxx+C0qYBZyfly/GH4Odv7kd/npLju+DUg+Ie
Pufl+C7oY2F/ZUKhHN8FxRZBLuP+leO7YI3zqp5ut+X4LqiTED3k1X05vgua
pIY2jP1Pju+CJeVp7nnP5PguqK+vSCt+Kccfii5jF6P4rRx/KCo/9u+d90GO
PxTP0ovfqD7L8YfitYtHxfuvcvyhWPB21Bu/H3L8oWhzboDXH5UCxfhDUWN4
o13bqwoXD0XtXxcvX1dDWOGKFNvuc/W/CFu7Qv/Rvm6b2sJwRVjpofVb6wor
XWE5+voFy/rC6a7osSeuWrClcLYrzobFnJvSSI7visVN9/wxzUqO74pGVTwe
xDSV47vhXdPeLTo3l+O7YdDmVScutpDju0GrLXTxaiXHd0OlXV718qzl+G5I
UNxf9rO1HN8Nq94kD+3UVo7vBucFHr/3aifHd4PtKYtj7drL8d2hT8pVfpa2
dsfn0GnntnWQ47vDd7BHpHtHOb47ag3A/DPS6e4YOrnOti42cnx3zM5+1sog
ne+OdcXTh66XLnbHNcfuE/ZLK4Zhr9fp5nukrYfho9+Z6cukMQwDV3ibh0sr
h6G6TZ9a9aXTh8Hf9u3NzfL9ZA/D9gG5Z7pI5w9Dv98Su/0h4ykehpgjt0Kf
/S/+4WiOcZvb/C/+4bi4YXG4m/y8MBzWy7yu+crPUzkc1z12jhzVRo4/HLPr
LWxh/7/PfzjOLNs5/4c8X/nD0bD/qZd7W8rxh+Ov9rGTg+T5VYyAWUiXBc+b
yfFHYOmO1dFR8vuBEXi9zMP9vPz+KEdgRNmJiS0by/FH4NPulW6hDeX4IzAx
adyr2Q3k+CNgWVhr+/p6cvwRuF6/7aUt8vus8EDZoDXzsuX33doD2+MzbKfV
kuN7IP5+xXPvmnJ8D4xpP6xqA/n7SffAyZqP8vLl7yvbA+Mnx7uMrSzH90An
/b5HJT/l798DJ1ZduxT5Xf7+R6JK8ypDLsnfs/VIDOpwJs2mXP7+RyJi3sMc
7Uf5+x+JngMDam17L3//I9FgQ9rNm/L6kT0SrxrfGfLhlbz+jMQ885gZP5/L
8UdifsSY6xVP5fijMDWjU8RLeb2yHoUxy69Gni+W44/Cmrg55n/ek+OPws0Z
pfOV/7v+jcLrjj+bN7opxx+FZRZWJYevyfFHYW5M5dYB8npaPAqvxr/5/PiC
HH80JqSnrYo6K8cfDXuXLQNvyuszRiPsVOVfBh6X44/GycLk7kuPyPFH4/gs
3zuP5PU+ezSOlfzRr+0+Of5oaLrNHu+/S44/GldG/HJyyg45vieGOyUPXbVF
2MITPWIzbbZtlO/HE9fOXl62c52wnSe8vOsf3vqXfH+eyKl55thKef/y9ERm
75JLU5bJ9+uJgIzv5oGLhdWe+GzTcn3HBfL9G8e78P7gy9nCmZ64snvfhL/l
/TPbEz9yB/3iO1U41xPt6ryb93WSjM8T6ulXbJeOFy70RMOmk81tDDJeTyz9
Ye+VqxYu9cTA0DNtuifK+Mfgbdf9a9fL+73FGHi9bffJIlLGb3yuSb4AfaiM
fwzK9Y03XAqU8Y/BtkkNh1n7yvjH4LL/FI84Txn/GCSdy7u6aYSMfwz+6Xb1
+0NXGf8YVFSZ/baes4x/DF5MGnW270AZ/xhUNnfaGugo4x+DlXe67tf0lPGP
wRHvNRZTu8n4x2DonH+vzu4k4x+DWfsPt5rbTsY/BuFrqjWe0UrG74XXn+oX
pTWV8XuhTn71qVENZfxeOLPjSM9hFjJ+L2RNvFGrYy0ZvxfK7DfZ/Kgm4/dC
5UleOZcUMn4v/FG2Iyfrm5j/qb2wLSTCLeSTnD96IfXJpTVN3glnGt9PtPW/
hS/lfNILYxa5//jtqXCuF1K6VerX9aGcX3rhn/4X11+9I1zoheltvwZpb8j5
phfy7mWnmcv5a6nx/TXY2GTNeTn/9UaNAfmBdqeFLbxx7FCyz4F8OR/2hl1F
1fZOB4XtjM+B4zc8PbJHzo+9ob7tvrtvrrCnN7x/7M7ZsVnOl71xokrGfeu/
ZfzeOOTloJ4n5+Pp3tiYXTnt43IZvzd6vK9vEbhExu8NyxVjvfLmy/i90bDX
7oAGs2T83lix7viA+Gkyfm/YKyysDk+S8XujbPHPKuZpMn5v9C+40sRfK+P3
wfmGf2tXJ8r4fVDlfWrHRzEyfh+k7m83pk24jN8HqqxEs7BgGb8PPDRvorN8
Zfw+eJRvO/XSaBm/D5alzzNUGi7j98Gz6sEB9i4yfh9ceHLSOXSQjN8H/meK
PTIcZfw+mOu+Zf6OHjJ+H+y9amZ93VbGb3z/2tNWnzrI+H0waceKzIatZfw+
WD22w189msn4fdBV9zF4ZEMZvy9uFE25H11Xxu8Ll36dB02sKeP3Rc1/XRdl
VpHx+8LftdH7tfL5D75I9y/Q7/os7OmLxLMT7Y+/E1b64npLF6fLL4XVvjge
bb3n9hP5fOmLjT+rbX78QDjTFy3j7jq8viWc7YteiimJZdeEc30Rfu5w7NeL
8nnUF4a+oQN/nhEu9MWXt82qVjkuXOyL89M3Xa12SLjUGJ/rP0dr7JXPr35Y
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
qT8znZaK6mWm/s30ROPn3crU3/no/wExhXgX
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         Thickness[Large], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        LineBox[CompressedData["
1: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
         "]], 
        LineBox[CompressedData["
1:eJxd2n98S9ffAPD42ZiaMKXmx4Iia4uia0OLDzoLirCa0proivxo03uTOzrr
azprp6PIrEjNtphuMoqOqm6ryYotzDxhHWWdZVifoCPzax3dPB/fc57nfjz+
0Nf7dc8595xzf53z+aRfRs6sRa0VCkUo/vfob3qbsWmVJSZQPPqXv5j9dZrg
Wpj/n1/03C4T1FxeK0z0L2J2m6D5XOkpm8hdYYJ728evWtSWu9oErRsuKcNK
M5k9JijL7X5k+TBurwmefL9M4/juFWafCbydZn4+fSF3vQm6ryj4eW9LBrPf
BOmHzgzZXcodMEFm9UItaLmDJoh4c/imjPqFzM3oEN2NTsu5FWZYN6L2TkIf
bqUZMkq+tzR+Y2BWmSGv4I2IECN3uBmqLHsebu7MrTZDftdRvwwUFzBr0Imx
/3352MvMMWbw/zHs+Zf7cGvNEPHd5InvLJvPDGbISvti1ty6dGadGSrWrX/i
yEhuvRmMBWmarzamMaeaYWtupSPu/jxmgxkyR++eEbmQ22iGhr+Hla45MZdZ
MEPvg5OOz4jjzjVD8ukZmVllqfy6mqG8Tb8e57pxF5mhvvrpg4Wr5jA7zKAP
jZpgbXmJ2Yn9ST968W07twvHt/nYz8eaZjO70Y1zKvoZuSvM0Ba+eeD4PYW5
Gr09uvCJRdweM7gHmBMKG19k9poBwj6NbTZx+8xQcyt8z7ybs5jrcTwdPu9Y
tpTbj/25VHnu+4czmQNmiG2XUXt8NXfQDI4ZBds29uBuNkOdv6Mw+FM9s8IC
LRu2TlsWx620QPjg+Jb7jhnMKgsonrGfyayezhxugWb1nZF9Lk9jVlvA97Et
L6wLt8YCHs2C5HETkpljLBDo2riqeOlUZq0FtHG3Zt/cPYUZLFCkjHpmXmAy
sw7LP3G3+PBAbr0FgjOzi7ou1jGn4vG0JaMmffYCs8ECrgHmdtNvTmI2Yvk+
5ev6aLkFCzg3dN3vfut55lwLpM4cuuby6STmfAsYR40x1fbnLrKAyhlZP2rp
RGYHjv+lDVvGnpzA7MTx/3bss2MR3C4LeCN/jD26Yjyz2wKO8rUfDfsFmCss
oFm/5c1/Ermrcb7qWqa8MHYcs8cC+cvmd44JGcvsxfF8MnnXtrpEZp8FKpZe
P1/0aQJzPdbv8FPlmbzRzH4LQFnCvqw5o5gD2F5S/PakOC1z0AJCj5B9up7x
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
PcK+fw1nPvlT4td1MfwPFA8YDw==
         "]], 
        LineBox[{{179.5006879337728, 180.}, {179.50118793455624`, -180.}}], 
        LineBox[{{179.99881167558627`, -180.}, {179.99931167558626`, 
         180.}}]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 360}, {-180, 180}}, 
     DisplayFunction -> Identity, AspectRatio -> 0.33, Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox["\"t'\"", {
           GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
        None}, {
        FormBox[
         StyleBox["\"t\"", {
           GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
        None}}, FrameStyle -> Medium, FrameTicks -> {{{{-180, 
          FormBox[
           RowBox[{"-", "180"}], TraditionalForm]}, {-120, 
          FormBox[
           RowBox[{"-", "120"}], TraditionalForm]}, {-60, 
          FormBox[
           RowBox[{"-", "60"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {60, 
          FormBox["60", TraditionalForm]}, {120, 
          FormBox["120", TraditionalForm]}, {180, 
          FormBox["180", TraditionalForm]}}, None}, {{{0, 
          FormBox["0", TraditionalForm]}, {30, 
          FormBox["30", TraditionalForm]}, {60, 
          FormBox["60", TraditionalForm]}, {90, 
          FormBox["90", TraditionalForm]}, {120, 
          FormBox["120", TraditionalForm]}, {150, 
          FormBox["150", TraditionalForm]}, {180, 
          FormBox["180", TraditionalForm]}, {210, 
          FormBox["210", TraditionalForm]}, {240, 
          FormBox["240", TraditionalForm]}, {270, 
          FormBox["270", TraditionalForm]}, {300, 
          FormBox["300", TraditionalForm]}, {330, 
          FormBox["330", TraditionalForm]}, {360, 
          FormBox["360", TraditionalForm]}}, None}}, 
     GridLines -> {{0, 30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330, 
      360}, {-180, -150, -120, -90, -60, -30, 0, 30, 60, 90, 120, 150, 180}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, Method -> {}, PlotLabel -> 
     FormBox[
       StyleBox["\"a=1.500\"", {
         GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 360}, {-180, 180}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(X\\), \\(11\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(e\\), \\(1\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(X\\), \\(100\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(i\\), \\(1\\)]\\)'\"", 16, StripOnInput -> 
        False], 
       StyleBox["\"vel(i1')\"", 16, StripOnInput -> False]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Column\"", ",", "1"}], "}"}]}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.787485182005766*^9, 3.7874852030109186`*^9}, 
   3.7874852615286474`*^9, 3.7874852951927404`*^9, 3.7874853653023744`*^9, {
   3.787485407188837*^9, 3.7874854306571426`*^9}, 3.787485476478188*^9, {
   3.7874855193076897`*^9, 3.7874855511877985`*^9}, 3.787485789029608*^9, 
   3.7874858415539913`*^9, {3.7874883936405706`*^9, 3.7874884146387696`*^9}, 
   3.7874884772884445`*^9, 3.789722188760545*^9, 3.7920070388703322`*^9, 
   3.79200711755002*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"angularProgressPlotBoth", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "angularProgressPlotClean1265", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "angularProgressPlotClean15", "}"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7920072501536613`*^9, 3.792007279475252*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1:eJxt3F+sHOV5x/EpMeE0ccMmcZJN69STxEkW4uCBGLwhhvMSDGzAwRPikE1i
OBNi++wxNh7bu6u9QD0jFannwhJzQaW9sOSRitRzgZS94OJcIJ258MVKRWWk
Wsq5QPJUcpu9cMtUcZtt69Y1+3wfS/uo3Pz48D7vvPPMzP459uH96itnXjh+
l+d52d2e93H+//8Ui/HRW7f/+WBRXC7+xc2PfRVPFj9zt6S4Wrz63x+Pf4Rv
LD7/vx/793i6+MD/fOw/4JuLrbskWdBdntXfwne5E6R4m3thNvwJ/En3jzPf
jRfcX898D/6Ue5EUb3enZuOfxp9xT5PimvvL2fi9+LOumLmGP+cuzvxZ/Hn3
NzN/Du9wN2b+PP6C+93MO/AX3YWZv4C/5P5t5i/iuttJir/sytm4+k/dvaT4
z9w9pHin+4dZvfor7u9m3on/3F2Z+St4l9tBin13bTaOE38+va+6f5qN63//
qrublPGvuX+ejePka/Ppfd3912xc/zte/Trju7l+ONkt57O6m/FvcD1x8g33
x6SMf9PNhm/h5Jvuj0gZ/5arZuM4+Zb7PCnjDfdJUsYb7qPZ+ti7z8njqeP3
uW2kjN/P/bmf8fvlfFax922pv50y/m33CVLG98h6t3R8j/uX2fw9jH+H64OT
77jrs/HvMP4A1xcnD7g/zMYfYHwv/e1lfK+7i5TxgOuHXeD+ffZqDKg3mQcy
P8feg1wf7B6cz4TxVZw/KOttYu8hN3t7uKXzHnL/OVv/IeY/5GZvL6s4N+l9
l/PH7rtyfW+nzGd8FecmvX3yPN9Omb9PruciTvZxvXC+T/rZxN7D8+kelvFF
nDws/azi/GF5HnKd9wjXT+c/Mp/JIzzPODfp7ef52s+8/W72dr2Ik/30j/P9
3D/sNbn+Oh8vNpnfZD7Om/SPve/J8W6nzDeZfE/OZxXn35Pjb2LvUbm/t3Te
o3K82ynzH+X64fxRrh/2vs/1w+77cr1up8zHCc6p38TeAZ4f7A4w/wDzTeYH
uH7Ye0yet9sp8x+T4y3ixGT+GOePvce5f48z/3HWx8njPH84f5zXD/YW59Mt
Mh8ni7x+cM54rvOc3J9b2Hfz6Rz94MhkYjIzmTN/E5dO+imx9wT3T9d9Yj6d
yegJOf8IJzjBGc5w/oTcnxyXT8j5XMXeD1hf1/2BzL+dsu4P6B9HjEc4MZlR
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
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1:eJw13Hd8zff3B/BrR62YjVGu2SCI2SDkhSAIIlvmzb7Zd6ax6qqVqpISpLVC
0VSN2LHq1oxRTYtWWyNfVGOnKLF/9/d+nfSfPp6Pj5uTz703934+7/c5r/ax
mf4J1TUaTUEtjeb//1/13713jv9mJoIq9fK/FRihCa1ymVdZE9fCau5VLvfa
2vP0rzWdqlzh5fZVt7PvlSWIn3qdbLBrZrPiKld6Hf+k0bUOuVV+7RU8ttaF
Afoqa3CuzHvsJFS5Onbc9+xpdqlyTTi1fJi0uiJeXBu9Zx25VlpSZSeU/B2Q
3XBdld/D77ujXUKmVLk+nF/NLPh+UpUbYohvk4r63arsjNf7GtyaVr3KjXHo
0pXgF3/GiZvA/bWHdt6uKjfFlK21m3dcWOVmaDCmb51f4qvcHJr6eSdyh1S5
BcLST7aOa1Hl95F1rfGvPo9ixS44/GLs1uElVW6J0s7FGZPWVbkVeu95fsE6
tcqtkTr/n+VFAVVuA3uvRenVe1T5A4RurPVeWu0qt0W7mUmtHl6PEbfDB4cO
+Hy2v8paTG15c9DQpWKbFueefLmkQXrV8fbI2u3x4PmoquPtkX7i9c032qrj
HfDwva31tK90crwD3vxV/DTqkljTEUuzXLsf3F51vCNM5csH9F9QdbwTbib0
+Pqn+KrjnfBjnYKLc7yqjnfG3n+668JbVR3vjAVdeiR8czdajndBzRWRU0sL
xLYuiHde/cfQkKrjH+KC/lDAowZVxz/E7b47i24cj5LjrtDc2Li95XSxzRV2
5ze1l/WtOt4VHs9T4oPuRcrxrlj8W7X08G/Emm5oEzzq8LfhVce7IXOP951B
zaqOd0fnA99Ob/5ThBzvDjfvX15+NE+scUNA+tNr672qjrvBu13vVcEvwuV4
D7yptWN1wC6xrQc6lpwY9XV61fGeiEh3etLNteq4w1emPKt1M0yO98Le0A2r
u68R23phzb3DPVZNrjruDnPB2VshzcVwR6rtxIuoXybLv3fH5x4HV+34Qmx3
h1fQi2cTx4o1vdFL06v7oDpi9EbNHnlBhuOh8vje+K+D88LHs8T23pjqp7tm
9xJr+mDLZK/gv96EyOP74OMJC58POyS29cGpl0b706liu+PfY9F3TwaKNX2R
lNFy09AXwfL4vsib1WDDpWKxrS+svuMXFmeL7X3hl3F2+D8eYk0/2Jvv2BTz
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
iRbbgnAkp1nytpni3CBE1P0q/9BacUEQ7o4JqHX6iLgoCKMnfPrThetiexAG
/hbW6Oo7cWkQylo53bnVLkjOPwgnP9+Sfc9LXBGElM9jr1REizXBWNV9SJ//
Zoqdg+F7xye/cq1YG4wz+oVur46I3YPRunfdBm+uixEMv6RDIW/fif2C8eNn
a7u9axcs5x+M+O7fffPOS2wIxrJtP5W9ixbbgvFYrT+Lc4MxYlKfdpoCcUEw
0i4GR2js4qJgtMvSXdKUie3B+DJ/RGE1TYicfzD2n3/2uLpWXBaMBivMF2pC
XBGMJS32JdXRiTUhCL149Kf3bGLnEOgtqzs2KhBrQ1DfEjC/mV3sHoKafz9v
0bpMjBAUdN1Y0UETKucfgqU7ZvRx04p1IbixZ4vj7ktsCMHsZ4lJI3RiWwje
+/je8kk2cW4Iag2Z821MgbggBAsbzN9ntouLQlDNLfjv+WViewiGtYyZuEYz
Wc4/BMf9OzfbpxWXhaBG017+v0JcEYJLjVu5VujEmlCUjFyy23mW2DkUazcG
tui3TqwNRf17vdLCfhS7hyIlqNal2f8TIxSb009nFlULk/MPxcMzc8LL2ot1
oYj7PXBf0+FiQyhmLU9bPzZWbAvF8dTmnnM/FeeGIuLG9m+OrRcXhCLGuruy
1jFxkeP45N1hvjfFdkf9UWF3ltcIl/MPRYZ36vG/O4rLQnHXcqreQG9xRSji
b6Rcz40Xayaj2oSM6AdzxM6TcelNnS0TNoq1k3Fq0cK/d58Qu0/G1OOZbtrb
YkzGrYiR63JrR8j5T8aymz/G1/5QrJuMm/MOrpg1WmyYjJ0PuoVX14ttkzG6
kVtpTo44dzJ+rffu/ebfiQsmo2/tuoHfnhYXTUb+u4sbve6K7ZPRcnezXtfe
i5Tzn4wZ2esaz+4uLpsM71YzMnv6iismo5b915SyNLEmDBPOPe/81Rdi5zDE
/Zh2LHSbWBsGXZdrCe1+FruH4WZGZ/cHj8QIw9UbY0YedY6S8w/Dks9mlazp
LdaFoaBZn6uf+osNYehx/t9NGWaxLQwn5+eMic0T54ZhyOcV5ZF7xAVhWPtF
yHcxv4mLwjD5m3bb05+L7WHYM6Cs7acu0XL+YVj9LvGDtQPFZWF4/Kb45+Nh
4oow9LY2DX8yTawJR/W79291Wy12Dsez9s+WpP4g1oZjVOfWn++5LnYPR6f2
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
dMs0sV8c/hf8xrdVX3FoHDrldk34rao/RheHvmmrho63i/VxGFati+mTeWJD
HP5zsn2d7CvOjsPuOsmBDZtU9cvEYVQ7+9C036X/JScOEfPWvfx0lTg3DrFb
Znf3jxHnx2GlJujjPzqLHZ8Lbrqv57nclf6Xwjic6rSoZqNt4qI4jLjstfaQ
UVwch3qzdtdp37+qnyYOp7+o83hwpfTDlMRhbdDC5g0Oikvj0LlHhVveDPHl
OLzvFPmstKp/piwO9m9X9T1WTVweh598PDenHJP+mIo4fHqhqOOpOeLKOCyY
OS398siq/pl4XL4zYfKa2mKneMR92e+wyynpj3GOx/BdO82j54td4vFsxuPw
bqPF2ngM+/L25B9ri13jce0HY3D9k9If4x6P/9Vc5FVvrtgjHu/vMDv9MKKq
3yYef260f9eputgnHg22r23vVdU/4xePw1cemRt8Ig6Nx7RfUzcvHizWxSPo
XenFE5XS/6KPx6TNtesW7REb4tHmlHfcBJM4Ox6eMwfVXtezqr8mHkOj+7Uu
vCv9LznxqGg6/Ne4TeLceJzdFB57MUacH4+JHefVfdlGXBCPj5Y8r3/pd+l3
cXzPzflo0P6EJeKieKx4MSF2i6+4OB4Tys7HfVfVH2OPh++Seu0j7dLvUhKP
xQd71iqZIi6NR8bI0Nl3+4gvx2NdXlaPBb9L/0tZPHoEmOcW+Ygd38vt/V93
HrNf+l0q4nHdudtHQV3FlY7X42qtx5fyq/pfEtBh8O6Cc3XETgkwrFi5ZlCW
9Ls4JyC9x/zQ9rekn8UlAZ9eO+H76SSxNgGuv3jXi/5B+lkc1xH1d27sv7+b
2D0BKTq/mUuWS/+KRwJqlM3cer9aVb9LApYljV1xOk36V3wSkBG5oXP336U/
xS8Bv3WKCmg6TBzq+H0Wt+kxp6pfRZeAyxfG/TKzqVifgCV36hucqvpTDAlI
7fHBOO0t6T/JTsDxXsV7To8T2xIw8Ctzszq7pN8kJwG+DZtf/bOl2HGdtat6
7PLRtuF0fgJ+Tb7z+8Tb0k9SkIBeODXm2ThxYQIO/y9mw5Ad0j9SlIC4bu2L
XFuIixMQ8/PQBZb/pF/EnoDN7oXL7h6WfpGSBLR8z5i5f670i5Qm4MqSc+3/
8ZX+kMsJcFobfWFKU+kPKUuAdm/CyY//kP6P8gQ0XnIm5J810v9R4Xi9PvB4
ez5O+j0qE7DYr+WY/q7S76FJRP+hS65r70s/h1Mislamz8zfLv0bzonY31nz
en1V/4ZLIsaGVB8yun9Vv0Yi5hX8ONXlkfRnuCZi1J06zR6butPuiXBLaTur
6zPpv/BIhKV37zY/ZUv/BRLhU7Ej/N7LjrTjOtsY/P3PS6ZLf4VfIrp94Dx0
wyvppwhNRAbW1DW8kf4JXaLj823L15veSr+EPhE/jto9/uxb6Y9wXNdn9X31
37J3NejsRFzc+sWlX949Yb+DzeEv761a+mPCYb7+ifjwd3Wc/Q25iejrox5v
5+ufiLWB6ufTBYmY9qeqTxcmwnW0+v3ookR8/aH6/eniREwMUudH2x1+os6f
LknEm37q+aFLHT8/Uz1/9OVEVHugnl+6LBHzv1HPP12eiCmh6vWhKxyP/1C9
fnRlItqtUa8vrUlCW6jXn3ZKQkd/9f6gnZMwt616/9AuSfgrT72/aG0S1u1T
7z/aNQknCtT7k3ZPwt5l6v1LeyRhQn31/qaRhJZ91Puf9kmC7Rf190H7JQHd
1d8PHZqEoBvq74vWJaHmMPX3R+uTsD5F/X3ShiTMq6H+funsJCxqpP6+aVsS
3v9a/f3TOUn4xV19PtC5SejaU31+0PlJ8L2rPl/ogiSMvag+f+jCJDjnqs8n
uigJuzqrzy+6OAmDotTnG21PgkWvPv/okiRo/qc+H+lSR/0Y9flJX07Cv/x8
pcuSUMnPX7rc8fOvq89nuiIJET3V5zddmYR++erzndboofFUn/+0kx6zrqnv
B9pZj7mN1fcH7aLHdX6/0Fo9TvP7h3bVo/My9f1Eu+txit9ftIceR/n9RkOP
rfz+o330OMzvR9pPjxov1fcnHarHNX6/0jo9NvL7l9brsZvfz7RBj3Hfqu9v
OluP2Gbq+5226bGI3/90jh4FvD6gc/Ww8vqBztfjLK8v6AI9fuH1B12oxxte
n9BFetS/qq5f6GI95vH6hrbrEbhJXf/QJXos4PURXarHmFrq+om+rEfQEXV9
RZfpsYHXX3S5HmmfqOszukKPhbx+oysdzy+v72hNMgbdVdd/tFMy/uD1Ie2c
jAu8fqRdkuE+Rl1f0tpktC5U15+0azLyeH1KuycjidevtEcyagSr61sayXh/
kbr+pX2Soef1Me2XjHW8fqZDkzG6s7q+pnXJSOX1N61PRsNq6vqcNiRjJ6/f
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
5X/Rxy1Yw3wwusSCxlEqP4w+53g+Jql8MbrUgmvMH6MvWlDrX5VPRl+24PNN
Kr+MvmJB93yVb0aXWVDA/DP6lgUXmI9Gl1ug/U7lp9H3LXjEfDW6wvH3wvw1
+qkFduaz0ZUW1H+u8tvo1xZ4Vqp8N1pjxQHmv9E1rdjAfDjayQob8+Po+lbE
vlP5crSzFceZP0c3s2LgXyqfjnaxopj5dXQbK/5jvh2tteIjk8q/oztZEblZ
5ePRrlbcY34e7WbFH8zXo92tSA9V+Xt0Pyta7FP5fLSHFfOY30d7WvEx8/1o
WOHaQuX/0d5WrGY+IO1jxSnmB9K+Vmg/VfmCtJ8VR5g/SAdaUX+YyiekQ61o
/0rlF9IRVtxhviGtc9QPU/mHdLwVPzMfkdZb4d1R5SfSaVbMZb4ibbBiFfMX
aYvj9WM+I51txd/Mb6SnW3GC+Y60zYpjzH+k51jR+L7Kh6RzrKg1WeVH0gut
2MV8STrXitPMn6TzrPiE+ZR0vhUptVV+Jb3K8XjmW9IFVuxm/iW9wfH6Mx+T
LrQik/mZ9BYrdjBfky6yIpn5m/RuK54zn5MutiKX+Z30ISucG6t8T9ru+PnM
/6SPWzGmn8oHpUusGJus8kPpc1b8xHxRutSKNOaP0hetuM18Uvqyw8wvpa84
Xn/mm9JlVrRJVPmn9C0rNjIflS53/H0yP5W+b0XnKypfla6womM9lb9KP7Vi
K/NZ6UorNjG/lX5tRaOnKt+V1mRhJ/Nf6ZpZyGA+LO2UhUDmx9L1s7CQ+bK0
cxaeMn+WbpaFJcynpV2yYGR+Ld0mC826qHxbWpuFe8y/pTtl4TDzcWnXLGxk
fi7tloX+zNel3bMwhPm7dL8s/MB8XtojC37M76U9s/CI+b40sjCwWOX/0t6O
35/5wLRPFsYwP5j2zcL7e1S+MO2XhUrmD9OBWUhjPjEdmoVI5hfTEVm4w3xj
WpeF18w/puOz8DXzkWm9o95MlZ9Mp2XhDfOVaUMW4pm/TFuy8DfzmensLPRp
qvKb6emO55P5zvb/Axi9biU=
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1:eJw93G9sHHV+x/HpXY747tLzcpcjvrsULxCIOXLnBQIxEPAPCMRAgjf/8CZx
4vG/3fX/sb0OVoXkqYSKKyF5H6DiB6gZqUhxJaTsA1QsFSkjFSmWipR9gIof
UHke0OJWtN726OH20qaX+by/zQPWL35/vr9/Mzs7+9u5Z2Dq5PB3PM+Lvud5
t1/t3//c+v2/hWIs1TsfvP0yb046m26/BObNzv+6nb9kbnTuuP3im7/p/IPb
LwXzducdt1/y5pudN2+XP2r23O9uu9P8HXebtw6Zd7i0vpz5Dpe2vc3c5L57
+yVr/oH739vl95h3ubR9GfOPVP9Oc8bp1Xyn4m0P4x8rvWH+ieJtmnervg3z
T5V/3XyX4tfNe1T/mrlFjs0/U/lV88+VXjP/Qv1fMe9V/MvmP1L6svlupS+Z
W10632+Zs/ICDrOKN2/p96i+wNLv0fiWLP1ejYdv6fe6dH57LP0+9Sdv6fcp
3lFL36fyztL3KX+Hpd/P/Fv6/ap/v6U/oP61WvoDzL+l71f5jKXvZ/4tvU2+
NUR6G/OPvQeVvmXpDyr+V5b+S7U3sfRfarzWLf0hpdct/SGVv27pB5h/Sz+g
/KuW/ivFv2rpv1L6iqX/Wo4s/deqb9nS2zUeS5bezvxbek7pC9jlmH/Ln1P8
KRznFK9s5R+WfSv/sPL3WPmHFa/bypN+1Mo/ovLOyj+i9hyy8o8of7uVf0T1
7bfyjzL/Vv5RnU/2WPlHlb/Zyj+q+nda+YOaj1uDlD+o+r7F4UG1r4FjvIm9
x1T/hpV/TPV/buUfU/66lSf9upV/XL5m5fFHVv5xjn8r/7jiXbHyhzj+rTx+
18ofYv6t/CG1Z9HKdyj/gpXHr1t5PGXlOzj+rfwTqs+38k9o/HusPOl5K/+E
yh+18k8q3Vn5J9W/Q1b+Sebfyj/p/judfyv/lOprtfJPKf8eK4+brTzeaeUP
q/ytAcofVnu2cXhY7dnCMfm/wt7T8oaVf1r5P7fy+IaVf1rjc93KP6N4sZV/
Rvk/svLPqP6rVv4ZrdcrVr6T+bfynUp/18qTvmTlSX/LyjvO/zjrlP661efU
vgD7jvm3+p3Wp48jx/Fv8XA3Tpz6f9TiP6v4nRYfH7L4zypeu8Unfb/Fx60W
/1nm3+I/q/40W3y80+I/x/z3E/851fctdqRvYf85zv84fI73fxxR/nMc4xs4
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
5723fUMOi270t12n/+wvHns69WLRnb+Ypnemrhbd3nRCN+TlonsqXRCbclR0
keLLK0VXU/vkWtF9X+2XV4vuTLqgfyfHRfcnOsBd+t+1ovtjjY9cL7p1jZ+8
/vv+pv6enBRdWeMvbxbd36b+vtwouq30gPqhvF3U+cH7keyVmL9muank/k3r
Q86UOP7ulFtK7vn0j5/I2ZI7mv6xW24rucX0D/ZB50p6v/TukjtK7p+1vmVX
Yj3ukbtKnG9a5HzJ/SY1+6ILJfeRji/ZL3F+3iuXS+4THZ9yUHKPpX/cLc+X
3GT6R6scltxBdUReLOn7sQVcLbl/0flDXqY/4T1yVHIbaTpeKdn5Sa6VOD7Z
B71acofSdByX3D+k5fFaSZ+XbR90vcT3c3i9xPvh/XJS4v33AXmzxPstbpTY
34G3S3Z+l70y7x9tclNZ558FnClzPsMtZe5XPyhny5y/2QfdVnZfpuVxruz2
p3+wD7qjrOvlELuy+/e0ftxV5vMs+6DzZb1feex7LpT5vhT7ZT6/43LZ/Wua
zr7ogHheuzxfdk+k9ePQ2s++5sUyn5dwtcz1L14uc78XR9j2Qa+U9X7ocK2s
640QrzLeMY4ZT9sHvWbxcb2s94cQrzMeMU7KHC94s8z19aNyg/wh3i7reImx
N6L14rGvuWmE6zucGXFb6XjilhHu9+LsiPrnsc+5bUTX3w7nRrgewB0jfF+A
3Qjr73G5a0TXqw7nR7jewoURPl9hf4R+sK+5PML9FhyMsJ7w/Aj7lXBo8Tvk
xRE+r+Mq9YV4mfQYRyMcn3hlhPtt7HuujXC84NURzW+M4xHOx+yDXrPxw3Xy
h3h9RO+/MU4YL+8peXOE7wNxw8rj7RHu52BvlOOLfc9Noxpv2wedGeV6FreM
cn2Os6Pcv3labhul/Tg3ap9f5Y5RnQ9i7Eb5/g13jXK/in3R+VHOV7gwqv7G
2B/l+r1TLtNehwPSQzw/quvFGIfWfvY5L45qvWRxdZTPu3h5VOdbH0e0fwGv
jHJ/EtdGuZ+AV0f5fgHHo9z/fVZeG+X+NK6Psp7xOu31cTKq4ynEm9Qf4Qbt
ifE25RPsjXH/4zm5aYz7czgzxudt3DKm+fBxdozvH3DbmNob4dyYPu/EuGOM
+NiNcf59Xu4iPYvzY3xexIUxvg/C/pjdf5PLY9wfxMEY5ys8P6b5TXA4xvXD
EXmR9mRxlfY7vMx4+DjCIV4Z4/4UrlFfjFctPo5pv+2DXhvTfGVxnfFweJ36
fZxY//HmmN2flRvMR4y3x1h/2Bvn/s+LctO46svizDj3b3EL6T7OjrN/A7eN
s/5wbpz7h7iD+hLsxjl+2ZfcNc5+HZwf5/sDXBjn+yXsj3N+w+VxjXeEg3He
7/D8uN3fl8Nxro9sXzTtz7Ivujqu48HhZezjaJzjH6/QngjXqC/Gq+N8v4Lj
ce5/viSv0b4srjM+Dq9bfJyQP8Sb46w/3Bjn+MfbtC/B3gSfR1+WmyY4/+DM
BN/f4ZYJ7u/j7ATvb7htgu+7cW6C/uOOCb5Pxm7Cvv+SuybU3yzOT/B+igsT
nP+wTzzbB10mPcLBBOcfPE9/ExxOcP12TF6c4PyPqxP2/aG8TPt9HNHeEK+Q
HuHahI6XGK/S3wTH9M87Lq9NcP7B9Qn2t+L1Ca0fHyc2/niT9ke4wXzFeBsn
2Jvk8wn7oJsmOf/gzCTHH26Z5PjD2Un7/llum2T94dwk95NxB+kJdpN8fumW
uyb5fgDnaZ/DhUm+38X+JNcXuDxp38/LAeVjPE//EhxOcv5ln/LipO0PkKuT
9BMvT2q8c7avmf47vDJp+xPkGvXZPuhV0gMcT3L84rVJ9kfhOvEivI5rOJm0
/RfyJvXXcWNS5+cEb0/a/g7Zm2L9sw+6aYr9gTgzxf4J3IJzODulV4fbpjSe
eZybsv0rcgflA+xwiLumNP9VnMcRLkypvzXs4xiXpzS/dRwQP8Hz1NfAIfE9
9hkv0v6M7VOe0vGWxcuk53BEeYdXqD+Pa6T7eJXxtn3Q8RTHD14jvYrrU7Z/
Sl4nfg0n9C/Gm6TXccP6j7dxA3uBxs87Je8I2B+ImwLOB3hXwP4anCG/w7sD
1Z/HLdTv470B+xtxNqD/eB/lq7gtYP8gPhDotYZzge2/kw8Gtj9P7iBegg+T
v4Ed6R77ho/gDO4KuB7Bx6g/h/PY4dMB+5NxgXQf9wa2v1H2GZ8QDwW2P1Iu
4wiPM/41HFj/cYX22z7oees/foPxbeDQ+s8+5jcZ72a8SP4sfpt4OVy1/uN3
cB4vk9/H79n844j5DPH7uIpXbP7xB9RXwzXrP/7Q5h+v4gR/TH1btm+b8h77
gj8hfgav4Sz+lPH4/33Q1NeJP6N/ebzOeujDX1Cf7YNOKL+Av7T+483A9k/L
X9v6xw3W5zX8TcDvE/A2+RN8k/ZsYW/a9n/LO6aZf/YNN+FWvGva9pczTqR3
4t3T7M/ELdjHe6fpv+1LnubzC943bfvj5bZp2z8vH6A+2wedo74YH5zW/NRx
xzTzjw9T3xZ2pHvsEz6CM7iL+rP4GM7hPPkdPk393bhAuo97cYB9HOKhaX4f
hMv0J8Lj0/y+Bgf4Gq5M6/7WDTxPe20f9BvM3xYOp7n/j99kPjLsK16cZr8g
fnvafl8iV6ft9yfyO9Z/vGz9x+9N2+9b5Ij2LOD3p+33MfKKzT/+YNp+XyPX
rP/4Q3wDr07rfvYG/tjmH8e2/vEntv7Zx7xGe1rxp/Qnh+u2/vFnjLftg16n
fB/+Ytp+38S84AX8JfO3hDen7fdT8tc2/7hh/cff0L8beJv+beCb5N/C3gzz
j3fMsP7Zl9w0w/sf3jWj++3tODNjvz+Td8/we3/cQvk+vJd4Uzg7Y79/k/eR
voTbZvj9KD5A/Ks4R/lr+OCM/T5P7qD8Bj48o/Hdwm6GcejV6xHSm3HXjP1+
UD5Gf9px3vqPT1O+GxfoTx/upT1T2J+x3z/KQ9S3hMvWfzw+o/V8FQe05xqu
UP4Gnif/Bn6D+W3gkPi38Jvkb74gLzKerfjtGf2euB1XaV8nfofy3XiZ8fXx
e4znFI5m7Pev8vuUX8Ir9Ocy/oDxvIpr+Br+0PqPV+nfBv54xn7fK8fkv4U/
IX/zRXnN+o8/pb/tuE5/OvFnlO/G6+Tvw1/Y/OOE9i/gLxmvKt60+cdfz9jv
q+UG43UNf8P6u4G36e8Gvkn+LezNcvzjHbOqv7lPbprV+LTiXbP6PrYdZ2b1
6vBu8nfjFvL34b2z9vt2OTvL/ON9s7z/47ZZtfcyPkD9V3Fu1n5/Lx+kPzdw
x6z9fl8+PMvvm7Gz/uMjtGenL3fN2vMD5GPUtwfnSW/Fp/F+XKA/7biXeIew
P2vPP5CHZu35CHKZ9G48jntwQP4+XCFeCc/Tnin8Bv1/HYfMX4jfpL638CL5
l/DbjP+7uDprz5+Q38FX8DLlr+L3SP8IRzZ/+P1Zez6GvGLziT+YtedryDXS
N/CHxPsKr5K+hT8m/Vscz9rzP+RPZu35IPLarD0/RP6U+HtwfdaePyJ/NmvP
J5HXZ7lewF9Q/hBOZnW8duIvmY8uvMl8duOvZ+35KnKD/D7+xuYfb9v845uk
v469Cscf3lFR+lu4qcLvdfGuCvOPMxV7/oy8m/qu4JaKPb9G3lux59vIWXwN
78PXcRvlb+ADFXu+jpyjPRv4YIX5xx0Ve36PfJj2fosd9d3CRyr2fCDmgfRm
fKxizxeS8xV7/pB8umLPJ5ILFXt+kdxL+w5hn/Z34qGKPR9JLtOebjxOfT04
wH24UrHnM8nzlJ/Cb1D/6zgk/wJ+s2LPh5IX8RJ+m/69i6ukX8bvVOz5VPJy
xZ5fJb9XsedbyVFFrzF+n/G9jlcq9vws+QPSP8c1vIE/rNjzueRV6m/gj23+
cWzzjz+h/M5BeQ0340+prwXXmb9W/Bn934/XK/b8MvkL8h/CCfk78ZfU34U3
id+Nv7b5xw3y+/gb+lPC2+Sfwjcr9nw32Ztj/vGOOY5/3ISX8K45vS7jzJw9
f07ePWfPp2Oc8FW8d86ebydnSb+G983xfETcRrw6PjBnz9eTc+TfwAfJv4k7
aN8WPkz6NnbUdwsfmbPnAzIP5M/gY7R3D86TvxWfJt5+XJjjehH3ztnzDWWf
/J14aM6ejyiX57ifhseJ34MD6uvDFcqX8PycPb9RfoPyr+OQ9AX85pw9H1Je
JH4Vv23zj6s2//gd2nMFL1O+ht8j/0c4muP7Mfw+8a/jFZt//AFexzXq28Af
2vzjVeI38Mfk/xbHc/b8T/mTOXs+qLxG+Qz+dM6eL0q7iJfFn5G+H6+TnsNf
sF4P4YR0h78kXhfepL5u/PWcPV9VbtDePvwN5ct4m/EN8E08j71L3H/DOy5p
vb6Fmy7ptYp3XVL9yzhzifvTeDfpK7gF1/Be6lvF2Ut8fsf7SF/DbZe4n4cP
EG8d5y7Z83flg6Rv4o5Lun/VwIdpzzZ2lL+Fj1zi+C/KXdSXwcfIvwfnaW8W
n6b+NlzAOdx7ies/7JPu8BDjfxSXL/F9Ih5nvgo4YHx8XKH+Ep4nf4DfuOR4
vrP7P35u4hw=
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1:eJw13Hd8jef7B/BDjdgxvzHKidWIFQRBJB8RhASRJTsn+2SfGbHqUDRtlRQl
NWOHUrFTo47RNmajqFEjLSV2ihL7d37P5zr9p6/36/HkPveZz3Pf1/VxTsgJ
Sq6pUqmKaqtU//9/+38bZmdOPt5ce4gq9y67/PXFcx+eHaYrvP1Hvvnv2w8f
WelKb6+Q3WNPvW8krvK+d3Xrso3vm4ufey8dtaqe7p2TuNp7wSeOXuvffCx+
670t8vvfFk5zFqsw5PmOqAevO4lrwrF/n3Zn8rqKa6E4p/3Mbi9cxHXQ4FHd
Fk8N3cUOOLDuyBSnJz3F9REeUXPoqP5u4oaY9Inq7VpDH3FjtFiVNaNwe1+x
Izyx8Kb6YT9xU/QJaj26v0t/cTOsbe/x/mziAHFzjFl8cuLdVQPFLbBlX/Iv
k654iFuibVHc+cnNB4tbwf/b0853A4aI/4dxDfU5P87xFDuhVd/ib+8fGipu
je/OeX1p+s9L3AZ+3Z1LXFpB3BZBf8evH7rD7nZoPOzX0S/8h4k/xvb0e5fG
37G7PZZ9lLBklMVH3AFbmrS8frX1cLEafZYZW9TdJbaoccutdM8Jf1857oz+
vT72V98WW5wRc7+hzmHaCDneERMv+J+b0XykHO8I54J2PWdvEas64XSX2ODm
w0bJ8U4IiF3fpfslsaozLNoxS09k+snxzmj614xtD2uMluNdMDA+cMbCJWJL
F9TctaH/j65j5HhX1Prdt0HcT2JLV4y++XPArAn+cvwTpPb6PNz5ttjyCYYW
Ll81ODdAjrugsefuotN1x8pxF8y/UfvpxUKxqhs2NHUdGNptnBzvhvdBb7uM
/lGsckV5sHFOid94Oe6K9t/m9vzykljVHTdGhH92v2+gHO+OKwd61S6bLFb1
wM6FDZxjrPbjPXCs4mzi5joT5HhP1Hk9LmFrgNjSE3cGDv4xeaH9eC9sW/iy
4cVL9uO98H2nufVetwuS470xblNUwoV4saU3tC18fk/caD/uhvlx7m2L74vh
hhUzBtdZ0ytY/r0b8n71TRxnEFvdcGRLnXole8SqPrj4ofzCz9Vi9EGt8xlb
FgwJkfP7wPH6E2OjT8XWPpi7fbWzt1Ws6ouJG62bO9cMlfP74osdRoefhost
feFZe753gzliq+3fH9aHNfxFrOqH5d/ciThSJ0zO74fUT59GuY4SW/ph3q6d
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
pqflYvNWJd/Z+/8Adhx0fQ==
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], 
             Thickness[Large]], 
            LineBox[CompressedData["
1:eJw93Hlczfn3B/Brz549hOyNtWgI0UtCEtq1u+23utVdk/0iZJ0sQ9ZpDCN7
ttFYxjUMGYZsI3tj7UuIMWT/3d99vd/mn3k8H9fnnns+t3vv5/N+n3Pax6T7
x1dVKBR5NRSK//+//G/o/ZsjwyPHDKaK3Ysetd7+05fH7nSpu/OsN0+7f3kr
XOZ+e8z+MWc/VwFd4X5zb+i3Yz7VEn7tfn6RW5PS9/WFK90/dLYdsulDI+GP
7mf3BP/Q+V1TYQWqP449+Pd/LYSr4mRijOual62Eq+PiLbeqAeVthGvi5tNa
TV/pHIRt8GHj8cl2L9oL10HanuqTlyR3FK6Hb8YqKoc/7CTcALsG3vzsNKGL
sC1Ozeh0bGhJV+FGyP+pz7Jk32+EG8N+sObj+tPdhJvgj67f7z4/uIdwUxxP
O7voxd6ews2Q6n7s53+79BZujmcrzrV/7OMk3ALn62rTf63hLGyHPOf8758c
lW6JTheHLDAY+wi3QqNgD6Vfj77CrTHq5AmvKfek7XFx5pLl5atchNug0dVL
u3/w+Va4LV7UPNnjO0U/4Xb4vW23Qwf2STugvstjxwYJ/WmTA3yiNSnLW7iK
x9ujZ8TAlSgSNrVH+JWWpbaZA8TjHZCcv2rjly4DxeMd0MRhQJjNVWFFR2D0
kZ+7zBokHu+IUUe8Rgf3chOPd8KPxSt6Lb8ubOqER8e/hF2fPVg83hnDf8/7
3KnnEPF4ZxyOH52iuyqs6IJjP81v/ttUd/F4F3S8+4fPrEYQj3fFiF7zQtrH
CZu6olHu2g0Df5GPO+LeoP1552oNFY87YtKdGq+uhggrvkFWo279g7bKx7/B
Tf+PnUe9k493w9YA/ZwCLw/xeDc0+T6j54JVworuWLOwoObVh/Lx7tg4MbJO
Tt9h4vEeCO3cwuOQSdjUA+rj60/7/yUf74mX/64/GdLSUzzeE1vTDbqzccKK
Xujf+UXLbbvl473gNrJek9fv5OO9MXvswZP5w4aLx3vjoGPWptOLhBVOsD2m
6ud7VRhOcPhiqOfRZoT49064s2T+qXVxwmYnqIPqN1ZuF1Y4Y9GXH7cufCkM
Z9zZfC2wXf+R4nhnNDh093GrqcJmZ7yLch823Sys6IMVPjMDRlX3Esf3Qd3Y
x7ZTRwqb+iChjv2M5guEzX2wavr9HXbnhBV98U3Hv/bNqj9KHN8Xxz4+OBg4
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
Nhq1PgWNm3hS2C4aTh7FZ9+eF3aItvwCXOi9/rqwYzSq7OlxO/GBsFM0/td6
Yb+QF8Ku0Zj3a9APae+FEY1Zg8xTttcIpb2ioZp8yqlhI2HfaLyq1aPTGnvh
kGgs+mnKER9HYWU09uTUjO7qIqyKRsfz9yd1g7AmGu27v0gP9hHOjEbZwKId
20OETdFY3enimm7xwtmWfz+m5+bLWuGcaPS5eaz/lunCudHwadzt2OaFwnnR
GJd1Jv9CrnB+NA61+CWm88/CBdGoU3osfMs+4cJoFJ9WVws+LmyOhmOdN2ec
LwgXRWPmpOEOg24LF0fjztJXE3VPhUuiMSfIfVjJO+HSaJRUNP1PbRNGl0Xj
106KKs4thCuisU3f82anLsKV0ajeOL7S61thRQxWrKh5fr2nsE0MHCOrX+oY
KGwbg8rjdybfjBW2i8HS5xvc/9ALO8Sg3+SLq/6ZLewYg3n7TB+cVgg7xSBp
fa/7+zYJu8bg05rzp5MPCCMGb4p+6xB8StgrBk2qHE/NuCbsG4O3Wf92OFcm
HBKDs2PPHBn/XlgZg5BqVX9pWS+cVsWg9pwf5zduK6yJgVPHx3s9nIQzY9A5
znPnNg9hUwzUCQGvvYOEsy2v/9q5ap1UwjkxeDBl2vh+U4RzY7ByxKCUWUuE
82IQ8en6IZuNwvkxuB7f7vczB4QLLOfn/S8f/zgjXBiDxu07P/p0W9gcg4JH
v77TvhIuisETl9l7O9SKoItjUHfukIW29sIlMbhq6/15kLNwaQzmJ38/Z/MI
4TLL+Vi3dM2YCOGKGNhuc/jFRSdcGYPqc7N8w7OFFbFQ6Mb8c3yDsE0sdhWN
vKs6IGwbi+O9ksy+54TtYhHhePTdpPvCDrHY08jvy4P3wo6x8Mhs57mscSTt
FIsvl94PmNVN2DUW51ZN9DvgIYxYDN1x9V33cGGvWGxx/l/eI72wbyye5lfd
93CRcEgsvkv/e803PwsrY7FkeezxvceEVbGY+/n64pnXhTWxuPVmRvzKf4Uz
Y/H67crtL+tH0aZYLCh1P77cUTg71vJ7ElVj2jDhnFikB0y9sjNKODcWnb5s
y+4yWTjPkv8P8ZMefy+cH4sXN7QfKvYIF1heT1ezcth54cJYHJ0+uvLOE2Fz
LGrrKuufrDWBLopFz236J686CRfH4tClhpdTPIRLYpH3dmPt3krh0ljUD4k9
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
GvuD6CLL+WL/EH1Oiy851v4iuliL/+yt/Uf0FS382J9El2jhyv4l+pYWO9jf
RJda3n/2P9EPtMhlfxRdZvl8sX+KLtdiOvur6ArL3yv7r+jXWoxgfxZdqcU9
9m/RHy2fd/Z30QodbrH/i66uQxn7w2gbHVawf4yuZzH7y2hbHe6z/4xuqoMd
+9NoOx1Os3+NttfhJPvbaAcdvNn/RnfS4RH742hHHZazf47uoUMX9tfRTjr0
Zf8d7aLD54bW/jzaVYeH7N+j3XSow/4+Gjo4sP+P9tQhiv2BtJcOCvYP0j46
5LC/kPbVQc/+QzpQhyrsT6RDdKjO/kU6QgcX9jfSSh3+jbb2P9JxOtRlfySt
0mET+ydptQ7V2F9Ja3Soxf5L2qDDPvZn0pk6vF9g7d+kp+qwh/2dtEmH552t
/Z90lg6r2R9KZ+tQzv5RepEOh9hfSudYXh/7T+kVOrizP5XO1WEh+1fpdTqM
YX8rnafDXva/0pt0GM7+WDpfhzT2z9I7dHjJ/lq6QIff2H9L79ehA/tz6ULL
62f/Ln3Ecj46WPt7abPl9bL/lz5peT92WvuD6SIdprJ/mD6nQ2/2F9PFOkxh
/zF9RYcF7E+mS3QoZv8yfcvyetnfTJfqcJT9z/QDHXaxP5ou08GL/dN0uQ47
2V9NV+hwgv3X9GsdjrE/m660nA/2b9MfdTjL/m5aocd37P+mq+thYn84baPH
XvaP0/X0OM3+ctpWj23sP6eb6tGY/em0nR6R7F+n7fWow/522kGPyvrW/ne6
kx7x7I+nHfV4xP55uoceXdlfTzvp0Zf997SLHjbsz6dd9ejC/n3aTY9Z7O+n
ocdk9v/TnnooOB+A9tLjEOcH0D56fMv5ArSvHmmcP0AH6uHL+QR0iB7zOb+A
jtBjP+cb0Eo9RnD+AR1nOZ+cj0Cr9Ajk/ARarUc55yvQGj1yOH+BNuixkPMZ
6Ew9anF+Az1Vj4Oc70Cb9FjE+Q90lh4DOR+CztbDlfMj6EV6uHG+BJ2jR0fO
n6BX6LGM8ynoXD2UnF9Br9Pjv7+s8y3oPMv55PwLepMef3I+Bp2vx/P/rPMz
6B16TOR8DbpAj8Wcv0Hv16OA8znoQj3ucX4HfcTy/nC+B23Woyfnf9An9TjA
+SB0keXvs6p1fgh9To8Szhehiy3vF+eP0Fcsfz+cT0KX6NGO80voW3oYON+E
LtVjKuef0A/0WMP5KHSZHracn0KX65HF+Sp0hR4BnL9Cv9bjBuez0JV63Ob8
FvqjHvac70IrDAjj/Be6ugElnA9D2xhwjvNj6HoGFHK+DG1rQD7nz9BNDRjG
+TS0nQGV7azza2h7A3pxvg3tYMAFzr+hOxlg4nwc2tEAB87PoXsYMIXzdWgn
A1py/g7tYoAP5/PQrpb8OL+HdjPg0zPrfB8aBqg5/4f2NKCU84FoLwNqc34Q
7WPARM4Xon0NuMT5Q3SgAZM5n4gOMWAV5xfREQbU4XwjWmlAXc4/ouMMePXZ
Oh+JVlke5/wkWm3AYM5XojUGbOf8JdpgwNvJ1vlMdKYBpzm/iZ5qwG3Od6JN
Bqzl/Cc6y4CpnA9FZxvQhvOj6EUGJHO+FJ1jwCbOn6JXGGDP+VR0rgFnOb+K
XmdA+R3rfCs6zwA/zr+iNxnQnPOx6HwD/ptknZ9F7zCgB+dr0QUGzOb8LXq/
AVs5n4suNKAsyDq/iz5iQMUk63wv2myAgvO/6JMGBHA+GF1kQH/OD6PPGbCZ
88XoYsvr5/wx+ooB0zmfjC4xoBrnl9G3DEjhfDO61IAEzj+jHxhwgPPR6DJL
vpyfRpdb3j8H63w1usKANyXW+Wv0awNeV7XOZ6MrDRjD+W30R8vzcb4brTDi
xRDr/De6uhEtOB+OtjFiAOfH0fWMMFexzpejbY3YyvlzdFMjOnI+HW1nxPsC
6/w62t6IbM63ox2MeNXaOv+O7mTEHs7Hox2NmMn5eXQPI87aWufr0U4Wj7PO
36NdjOjC+Xy0qxHjOb+PdjNiMuf70TDCgfP/aE8j2nI+IO1lxJ8J1vmBtI/l
+ThfkPY14n4H6/xBOtCI4ZxPSIdYnp/zC+kII3bHWOcb0kojBnL+IR1nxC7O
R6RVRvz9q3V+Iq02wsD5irTGCGfOX6QNRthxPiOdacRSzm+kpxpR8tk635E2
Wc7fb9b5j3SWEcGcD0lnGzGM8yPpRUa8HGGdL0nnGHGjk3X+JL3CiFjOp6Rz
jVjL+ZX0OiMac74lnWdENc6/pDcZMZHzMel8I6I4P5PeYcSDFdb5mnSBEamc
v0nvN2I653PShZbzy/md9BEj+nO+J202Ygnnf9InjfhjlXU+KF1kxLOe1vmh
9Dkjrtyxzheli43oyvmj9BUjOnA+KV1ixInj1vml9C0jpnK+KV1qxOcL1vmn
9AMjth22zkelyyyfN2/r/FS63PJ+trPOV6UrjDizxTp/lX5tefyydT4rXWnE
6nDr/Fb6oxGzldb5rrQiA6F9rfNf6eoZ+LuNdT4sbZMBP86PpetlYPIV63xZ
2jYD33L+LN00A7dOWOfT0nYZGB5knV9L22cgptg635Z2yEBXzr+lO2WgBufj
0o4ZaMr5uXSPDGCIdb4u7ZSBfanW+bu0SwbGdLHO56VdM+DhZp3fS7tlYPlG
63xfGhlImW6d/0t7ZuCxq3U+MO2VgX99rPODaZ8M/LfbOl+Y9s3Aox+t84fp
wAyseWKdT0yHZGDQdev8YjoiA9p463xjWpmB2Q+s84/puAw02W2dj0yrMqDu
YJ2fTKszYJ9tna9MazJwbad1/jJtyMADL+t8ZjozA5OM1vnNx6yemoE6Z6zz
nY/9HxpBk0o=
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}], 
             Thickness[Large], 
             RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0]], 
            LineBox[CompressedData["
1:eJxdmXtYVOX2x7ekhuZlTPKejDdEJBsVExXly/0OA5JyHfaMomQao3gOZF62
eYl+kWfULDSVSVE5acYxVOxiu7JCM5sSFY1Tk2QNhTWZJhrqWTyzar/8+Ifn
87zvu9f+7tn7fdf6rmGWwrR8L0mS/ugkSe3/F25882CGaRqk9j9lHv+fhm0H
dlxabGJWp+HM6yVdfXyZpRCMXPLY3DHOfA8jBCFn1n586DVmJQTO3Leaq+cw
qyFY+X7sypF+zNJ0tG7c4tureS6vn46dy6IynzrArEzH1KlX90ZZmdXpKCt4
eelLQczSDPTrEuebfWsOr5+BQa6NN7YeZ1Zm4KCra3DqWmZ1Bi73qRu4Op5Z
CkXl4rvqmD5/rQ/Fh9dnxyQ0WHh9KBpWK29fqWBWQ1G6qHzIrfnMEuAXVjV3
nYFZD5TM67Pq/26Z+XpAS0lbkvdHzDLx7hP/vlvGrAAvzZLNi2Yz2wFjz0+n
pg9nVgGDM/33Q1dlDzuBjM8C8PwxZikMXX8uO3N+HbM+DI0vTY98NY0ZYeiV
cT70vC+zHIbIgSGHen2dx/HD4PNJbXhOMbM9DNZOs2Ne8mFWw+C8UXbq8CET
x6frV+z/7P1UZikc/l2KQv/zWy7HD0d5ymu65zcxIxzpM1bqo4OY5XAMCTbH
/Hg+h+OHQyme+PiTy5jt4Ygc+kufL4cyq+Go3tx3Rv8T2Rw/HMtNozaHLGCW
IhD5xkMnQvsw6yOwvLZmhe+xLI4fAcfIwfMvmZnlCPg09x5e+ACzEgHn+QUJ
jYczOX4EhmwsekZvZlYjcCB/evTUnszOCJQ+cm+a/9sZHD8S3nJBs2s+sz4S
nVuuXVjWjxmR8Ckev6Hx49kcPxI10hBbj38yK5FonDc7r9toZnskSk8+88yX
DbM4fiSs/8iwzHmB2RmJBtcE23szmKUo1Jzqonxz7XGOHwWl8Z39J/YxIwo5
HxWUPZXLLEehraey7VJfZiUKPgXeyfd/ls7xab73F0N/f5ZZjcL1wJfXbp/G
7CRuirjZ6cZMjh+NwO97/DrsTWZ9NEqHVXx/+wlmRCMoPS71hVHMcjRaLujf
/PK7NI4fDX2U39OndzLboxGiKxi7LIdZjUZrtxERFwcxOyle0uUZroupHD8G
y8u379yzlVkfA59zjqbeWcyIQVuTfeOowcxyDHSP/Bx4pdHI8WMQWW8JSapg
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
vs8=
             "]], 
            LineBox[CompressedData["
1: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
S3lQFpN8+foWnb4I+Imn4zQf/gvWXPJ5
             "]], 
            
            LineBox[{{179.50027072353973`, 180.}, {
             179.50077072369834`, -180.}}], 
            LineBox[{{179.99922919724108`, -180.}, {179.99972919724107`, 
             180.}}]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         AxesOrigin -> {0, 0}, PlotRange -> {{0, 360}, {-180, 180}}, 
         DisplayFunction -> Identity, AspectRatio -> 0.33, 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox["\"t'\"", {
               GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
            None}, {
            FormBox[
             StyleBox["\"t\"", {
               GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
            None}}, FrameStyle -> Medium, FrameTicks -> {{{{-180, 
              FormBox[
               RowBox[{"-", "180"}], TraditionalForm]}, {-120, 
              FormBox[
               RowBox[{"-", "120"}], TraditionalForm]}, {-60, 
              FormBox[
               RowBox[{"-", "60"}], TraditionalForm]}, {0, 
              FormBox["0", TraditionalForm]}, {60, 
              FormBox["60", TraditionalForm]}, {120, 
              FormBox["120", TraditionalForm]}, {180, 
              FormBox["180", TraditionalForm]}}, None}, {{{0, 
              FormBox["0", TraditionalForm]}, {30, 
              FormBox["30", TraditionalForm]}, {60, 
              FormBox["60", TraditionalForm]}, {90, 
              FormBox["90", TraditionalForm]}, {120, 
              FormBox["120", TraditionalForm]}, {150, 
              FormBox["150", TraditionalForm]}, {180, 
              FormBox["180", TraditionalForm]}, {210, 
              FormBox["210", TraditionalForm]}, {240, 
              FormBox["240", TraditionalForm]}, {270, 
              FormBox["270", TraditionalForm]}, {300, 
              FormBox["300", TraditionalForm]}, {330, 
              FormBox["330", TraditionalForm]}, {360, 
              FormBox["360", TraditionalForm]}}, None}}, 
         GridLines -> {{0, 30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330,
           360}, {-180, -150, -120, -90, -60, -30, 0, 30, 60, 90, 120, 150, 
          180}}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 800, Method -> {}, PlotLabel -> 
         FormBox[
           StyleBox["\"a=1.265\"", {
             GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
         PlotRange -> {{0, 360}, {-180, 180}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)\"", 16, StripOnInput -> 
            False], 
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(X\\), \\(11\\)]\\)\"", 16, 
            StripOnInput -> False], 
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(e\\), \\(1\\)]\\)\"", 16, StripOnInput -> 
            False], 
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(X\\), \\(100\\)]\\)\"", 16, 
            StripOnInput -> False], 
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(i\\), \\(1\\)]\\)'\"", 16, 
            StripOnInput -> False], 
           StyleBox["\"vel(i1')\"", 16, StripOnInput -> False]}, "LineLegend",
           DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"\"Column\"", ",", "1"}], "}"}]}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1:eJxt3F+sHOV5x/GBmrBN3XjaOGHTuPFAHNgkTjyAwUswnBcweBMcewAHNonB
A9jetTm2x/budqWinvcCKecCiblAyl5Y8lygci6Q2Asu9gLpjFQuVioqIwWp
5wLJU8lqzgUqU8VVtq1b1+zzfS2dR+Xmx4f3ed93npnZPXv+MHe+cvbZ47d6
npfd5nlf5v//T7HQ+VtJcbnwd9eu3/jnMl5f+NptkuJq4fJ/fzn+Bb66cPB/
v/Qf8GxhcIuk+NpC61ZJNjTXSIlbze9ukRRvMhdJ8VfMv3y5/PXbcM38PSn+
qjl8i6R4s3meFH/NBLdIin2TkuK/MMV8fee/NM+R4q+bZ0jxVnN1Xu/8DfP7
ubfib5q7SPEd5t/n4851E5Pib5lyPu78V+YgKf62eZIUbzNPk+K/NreR4u+Y
x0nxdtMixYG5Mt8P28D8OSnjd5r/mY9je6f5DinjdzGO7V0b0/uu+a/5uPvv
3zVbSBnfIevdSBnfYf7zy/Il7H3P+KSMf8/8KSnjd5v58tfd+N3mFlLG7zHf
JGX8HvN1UsYb5j/m8914Q9ZbajD+ffM1Usa/bzaRMv4D6edGyvgPpN5i74ey
342U8R+aPyFlfCfH78Z3yvlc2sn4j5j/I8Z/ZGbzcez9mPPrxn9s/jgf/zHj
u8xXSBnfZW4lZTxkf2xC6e9GSr3KPJT5OfbuNfOX+3Vs7pX9bqTMY3wJ5/fK
fqvYu0+u542U+fcxH1uV+X1y/nLs3c/9fj/z72c+tvfTL84Zz7G329RImb+b
/rHdzXyc75Z+VrH3wMY0DzAf2wfoH+eM527eg5w/N//BjWkfNLeTMl+lt4fj
38O8PXJ+DLZ7uJ9xvof+sdeU+hsp85vy+jHYNuX8Wpw3Zb8cew9xfz3E/Ifo
H1tscf6QrJ9j7yfcf27+T+R830iZz/gSzlV6D3P+sHmY43+Y+dji/GHpJ8fe
XvbHZi/3z17mq8z3Mh97j3D/PcL8Rzh+bFXmj3D9sfeo+EbK/Ec5fmwf5f7B
OfU59haYv8D8BeZju8B8nDOeY8+Ib+Q8AhxgY+T8LODYyP0SY6syU5kzfxWX
Rs5Pib3HNmag0jzG+cTxY3J8MbbY4gxnOH+M9wtcMl66fR/fmMHjsl+AzeOc
TxzjGFuVmcpcZcn80u37BOf/CfZXaVTGKu0TvL5w9oSc70s4V1k+IeejxN4+
9t/HvvvoHxtscEx9jC22OFOZMz/HpUrvyY0ZPMn9h43KWKVVmTE/wznOcfmk
nJ/Lbt+nNmbwFPtjozJ+SvqJsVWZMT/DucpSpbef1+9+9t/P+cdmP/cfjnGM
LfUWZzjDOc5xyfwSe62NGag0LfbHcUuON8aWcYsznOEc57hU6f10YwYqjcpY
pVWZ/ZT9cY5zXOLS7fsz7v+fsS8OsFEZq7QqM5W5ylKl9/TGDFSap3n94RjH
2D7N10ecMZ7hXGVJ/WW374GNGag0KmOV9gDXH2c4w/kB7j9c4tLt+3PO/8/Z
V6VRGau0zLc4wxnOVZYqvYO8/g6y70GuPzbY4BjH2KrMDnL+ca6yVOkd2piB
SqMyPsT+2GKLs0Psj3PGc1yq9KKN6asMVIaRrBdigw2OVMYqE5VWZaoyUzlm
vzHOcY4LlaXKSqX3zMb0n5H1fByoDBkPscEGRypjlYlKqzJVmbF+hscqc8Zz
XKgsVVYqvWc3pq8yeJbXAw5VGpWRylhlwnoJtipTlRn1GR6rzFUWKkuVlUrv
Od5/nqNv7ONAZajSqIxUxioTlZb9LE5xijOVY5W5ykJlyXolrlR6h+n/MP1j
HwcqQ5VGZaQyVpmwfoKtypTxFGcqxypzlYXKUmXF+hX2frExfZWBylCl+QWv
fxypjFUm1CfYqkxVZirHKnOVBesXuMQlrnDl+n5+Y/oqA5WhSqMyel7Wj3CM
Y5yotCpTlZnKscpcZaGyVFmp9F7g/n+BvrGPAxzgEIfYYIMjHOEYxzhRaVWm
KjOVY5W5ykJlqbJS6bU3pq8yUBmqNCojlXGb/nGCE2yxxSlOcYYzPMZjnOMc
FypLlZVK75cb01cZqAxVGpWRylhlotKqTFVmKscq81/SPy5wgUtc4gpXru9f
cf//ir6xjwMc4BCH2KiMVMYqE5VWZaoyUzlWmassVJYqK5XerzemrzJQGf6a
/rHBBkc4wjGOcYITbLHFKU5xpnKsMldZqCxVViq9IxvTVxmoDFUalZHKWGWi
0qpMj9A/znCGx3iM8yN8f4kLxgtcMl7iivHK9f0i9/+L9K0yUBm+KOuF2KiM
VMYqE5VWZaoy4/gyPFaZqyxUlior1quw9xL9v0Tf2McBDnD4Ev1jw7jBEY5w
jGOcqLQqU5UZ+2V4rDJXWagsVVYqvaMb0z9K/zhQGao0KiPmRzjGMU5wgi22
OMUpzo7SPx4zPsY5znGBC1yqrFivcn3HG7MWy/wa9lXWVQYqGypD1gtxU6Vh
3OCWykhlW2WssqsyUTlkvyG2KpcZX8apypHKTOWKyjHrjfFEZc54jqcqC5Vr
KkuV66y3jiuVM8Zn7rq/vDFrKv2XeT3guspAZUNlyPwQN1Uaxg1uqYxUtlXG
Krus18WJyqFKq3L5Zfn56G9wqnKkMmO/DK+oHKucqMxVTlUWKtdUlirXOZ51
XKmcqfRe2Zg1lb7KusrgFb4+4IbKUGVTpVHZYr0WjlS2GW/jWGVXZUJ9god4
iK3KZZWpypHKjPUyvKJyrHKiMlc5Zb0pLlSuMb6GS5Xrr8j9+3tcqZyp9F7l
6/+r4ppKn3Ef11+V9e/AgcoG9Q0cqmyqNCpbzG/hSGWb8TaOVXZVJiqHKi39
LOFl/Bucsl+KRyozlSvMfxeP8ft4wnoTnDO+iqeMT3Ghco3xNVziEq+rrFTO
VHrHuP7HxDWVvsq6ykBlQ2WosnlM+t2DDV7ALY6nhSOVbepfwLHKrsqE9RI8
ZP7fYKtymfplnOIUj/AIZypXWP9dPFY5Yf4E5yqnKguVayrLY/L3HZfxusqK
4/kCz1R6x+Xz4I2cR+241N+OfbwF14/L8ddxoLJB/T04VNlkfhOb43L8C7jF
/P04oj7CbZUx84/iLvM7OGF+gocqLf1bvMx6v8Ep672FRyozxi/hFea/i8f4
fTzheCY4Py5/77eKp4xPcaFyjf3+GZfUl3id/X6PK/wFntHvDHsn+Psnd/1P
mPmf+95+QuwzvgXXT5j5n/vegYMTsv523DjB+z8OGd+Fmyfk7zv3YHNC+l/A
LfbfjyPGD+H2Cfl9bRvHOMZdjq+DkxPSb4KHJ8w/zF//2Kpcvjmez53enC8e
3VxfnN3cX7xy8/jE45vHL56ckL+/aeH8Zv/i6c3zIy5unj/x2s3zKy5vnn/x
OtfrDlzdvH7i2c3rK/Y64uvHxTX8R+x33P0jrnfc/SUOOu7+Ezc67v4Uhx05
rwVudtz9LTYdd/+LWx33+hBHHff6Ebc77vUljjvu9Sfust8IJx33+hUPO+71
LbbUW7yMhzjtuPcP8ajj3l/EGeMxXmF+G4877v1LPOm49zdx3nHvf+Jpx70/
igvWC/Fax72/ikvGA7zece/P4gr7eNZx7+9ir+ve/8W1rqw3Oyb2u/y8CNfx
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
MDyfWTwcGJ7fLH59YHi+8+r/AbIOQa4=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1: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
KbjH+y+63P568v6MrkiBK5T7N7oyBVd4f0erUlGf93+0cypaGJT7Q9olFVN4
/0i7pcKX95e0OhV3ef9Jd0xFGu9PaY9UDOP9K+2Zip94f0sjFSd5/0v7pOI2
749pTSpe8f6ZDk2FF++vaW0qpvH+m9aloi3vz2l9Ktbx/p3OScUj3t/T1lSY
ef9P56ZiENcH6LxUbOP6AZ2firlcX6ALUnGV6w90YSqmcn2CLkrFfK5f0MWp
eMH1DdqWiuFc/6CPpzrWR+iSVMRz/YQuTcVgrq/QZan4hesvdHkqznF9hq5I
hQ/Xb+jKVGzi+g6tSsNurv/Qzmnw4PoQ7ZKG9Vw/ot3SMJrrS7Q6DV24/kR3
TMNGrk/RHmloxfUr2jMNV7i+RSPNsf5F+6ShK9fHaE0awrh+RoemOdbXaG2a
Y/2N1qXhMdfnaH0apnP9js5Jwzuu79HWNFzn+h+dm4amXB+k8+yPj+uHUJyf
hj1cX6QL0jCF6490YRqecH2SLkrDAa5f0sVp+HBEWd+kbWnI5PonfTwNtbg+
SpekYQnXT+nSNMzl+ipdloa+XH+ly9PwguuzdEWaY/2WrkzDc67v0qp0nOH6
L+2cjrFcH6Zd0nGB68e0WzpyuL5Mq9MxievPdMd0tOD6NO2Rjp1cv6Y902Hl
+jaNdORz/Zv2Scdjro/TmnRc5Po5HZqOGVxfp7XpOMv1d1qX7lifp/XpiOb6
PZ2T7ljfp63p8OP6P52bjjzuD9B59vO5f0Dnp6PKXWV/gS5Id+w/0IXpOMT9
CbooHZu5f0EXp+M77m/QtnRs4v4HfTwdX3N/hC5Jx0Pun9Cl6aiZruyv0GXp
uMr9F7o8HXu5P0NX2B8/92/oynSc5/4OrcrAU+7/0M4ZWMv9IdolA9O4f0S7
ZWAJ95dodQYGc/+J7piB5tyfoj0yMJ37V7RnBvpwf4tGBmoFKPtftE8GenN/
jNZkoAb3z+jQDNzg/hqtzcBC7r/Rugz79buyP0frM/CG+3d0Tgbyub9HWzOw
gPt/dG4GfuT+IJ2XgRPcP6TzMxDF/UW6IANtuf9IF2Y49ifpIvv43L+kizOw
ivubtC0DVY3K/id9PAN/c3+ULslAGPdP6dIMpHN/lS6zn79V2X+lyzPgyv1Z
uiIDe7l/S1dm4Dfu79KqTBzn/i/tnIlw7g/TLpnow/1j2i0TK7i/TKszUZf7
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
C5rNV/L9aFiQPlPJ/6O9LDjOfEDaxwLfBCU/kPaz4D/mC9Ia+/PH/EE6yIKa
2Uo+IR1qQWorJb+QjrQ/n++VfENaa0Er5h/SCRb0YD4irbNgaDMlP5FOt+A+
8xVpvf3xM3+RNlvwB/MZ6Rz7/JnfSE+1wGOsku9IWy2YyvxHepYFnsyHpHMt
uMj8SHq+BTUuKPmSdJ4Fk5g/SS+z4MEJJZ+Szre/H5hfSa+y4DLzLekCC/oz
/5LeYIGV+Zh0of3vMT+T3mKfH/M16SILfmb+Jr3T/n5iPiddbEEE8zvp/RaM
YL4nbbOgJ/M/6cMWJDEflD5uQWvmh9KnLVjNfFG6xIK+zB+lL1nw2Wkln5Qu
taBzLyW/lL5pwRLmm9JlFpxi/il9z4I6zEelyy1oyPxU+pEFG5ivSldYkMP8
VfqFBWnMZ6UrLQhnfiv93gIj811pVTbaM/+VdsrGcubD0s7ZsDA/lq6TjQjm
y9Iu2ZjC/FnaNRvPmU9Lu2VjKPNr6WbZCGa+La3Oxq/Mv6XbZuMf5uPSHbNx
nfm5tHu2I1+X9shGI+bv0r2zsYH5vLRnNszM76UHZaMP831pZEPN/F/aKxuz
mQ9M+2RDy/xg2i8b3ZgvTGvsf5/5w3RQNr5lPjEdmg0v5hfTkdnwYL4xrc2G
U56Sf0wnZKP6RyUfmdZl4yXzk+n0bKxivjKtz4braiV/mTZnYxjzmemcbAxg
fjM9NRshzHe2/R+VfW9H
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1:eJw93G9sHHWe5/HauczEO5cb98xkJl4mM26YDPEMmXEDgRgI+AeE2CQhriSG
dBInXf7b7f/lPwm+EzrXntDhB0jukzjhB0ipB0j4AVJaOiR8J+5cKyFhaZHc
p0XCD9CldpddrBW76b3lDt9u7nyT+ry/myfuV35/vr8/Vb+uqv513z8wfX74
O57nxd/1vHt/7d//3f39v8WRRKp3/sk9v2pOO793709o3u78x3vpZXOjs+ne
n8D8TWf2p2je6cxi+ea7crfZc1l9nebvuH+652PmPS5rX7v5e+4edw+bm5S/
1fx9d/eeD5j3uf93z83mH7hv73mvOaf03WH8Q/cHWbPNP5Ib5h8r/1fm/WrP
bfNP5M/NP1X5uvmAvGFuUX3r5j9y2fisme/T+Nwy/0zpq+aDinfT/HON19vm
X8jL5lblf8Ocd//i3p8IR3m151VLv99lf0JLv1/jW7b0B1RfydIfUPmLlv5L
9de39F+qvm5LP+T+Tzb/ln5I5Y9Z+q9Uf7ul48OW/qDcaukPanxaLP2w0pst
/bDbc+9vk6W3aXx2h0hvU/5vsfdrHV93LP3XSv/K0n+j8rct/Tfq35alP6Ty
m5b+kNq3YelH5MTSj6j+Dy39txq/mqX/VunvWfrvFC+29N9p/N629HbFX7b0
dtW3ZOkFlY+wKzD/lr+g/CFOyF+x8g9rPAMr/7COj4tW/mHV12PlH9Z4dVn5
R+ROK4+PWXncbuUfUXvarPyjak/eyj+qeAes/KPMv5V/lPm38kc1PruDlD+q
eN/i6KjyN3ByVPO1jb3HFO+2lX9M/f/cyj/G/Fv5xzj/rfzjyr9u5R9n/q08
6bes/OOK956VP6b+x1b+mMq/beWPMf9W/pjav2TlO5R/0cp3qL4FK9+heNNW
vkPjU7byT8glK/8E57+VJ73Hyj+h9nRZ+ScVv9PKP8n6b+WfVH3tVv5J1XfY
yj/F+W/ln9L4tlj5pzR+zVae/Hut/HHW/wHKH1f8b3F0XOvvHZwcV/3b2Hta
6bet/NNuJ5t/K/+02rtp5Z9Wez6x8s+o/LqVxx9a+Wfcd+/9rVn5Z1T+PSvf
qfmKrXyn2rdi5TtV37KVx29Yeaf2LeK84/y3+kifxoHT+VCx+slfwjG+aPGc
2ufj1Kn9XRb/Webf4j+r+jss/rM6XgsW/1m9X7VZfMq3Wnx8wOI/q/f7Zov/
rOLvtfjPab52+4n/HOc/ds+p/Q0cPKfyX+GI/Ldx/Jz6/zlOnlN7NnFKfRvY
e575t/jPa/7WLD6uWfznWf8tPr5p8cm/YvGf13hWLf7zOr7fsPgnFH/R4p9Q
+qsW/wTzb/FJL1t8ypcs/gnFK1r8ExqvHot/wu2997fb4r+g9E6L/4LqO2bx
X+D93+K/oPE9bPEp32rxX1B7D1h88jdb/Bc0/k0W/6TGy7P4J5X/24D4J1X/
HRzgr3B0kvMfxye5/sPJSR2/dZye1Ph9gr0u5V/H+S4djx9a/C6u/yx+l66X
3rP4XarvpsXHb1v8Lq7/LH4X67/F71Z/Fy1+t+p/1eJ3M/8Wv1vnU9nid2s8
A4vfrfEsWnzq77H4uMvivyh3Wnx8zOK/qP63W3x82OLjVouPD1j8F9X+Zov/
Iue/xT/l/lc2ASXin1J/Gtidco1sfnFwivnE0SnN1zqOT/F+jRPSb+L0lNbz
KvZOu2+y8bf4p90/ZONt8U9zfln804ynxT+t+e60+JRvt/inNR95i39a89ts
8c+ovbvXiH9G43EHuzOsbzjAmzjC6zg+o/bcwskZ+o/TMzrel7H3ksYzsvgv
qX3TFp/0wOK/pOOvx+K/xP2jxX+J6wWLT/m8xad8s8U/y/p/lfhn1Z872J3l
/MbBWY3XJo7Ocv+G47Nq/y2cnHX/O+s/Tklfxl6P6lu0+D0an2mL36P8JYtP
eo/Fx50Wv8f9z6z/Fp/yrRa/R/PTbPF9+t8n53zud3Ce9Nu44PN+hp3P/GOf
8rdw4Gt8buLQ1/gv48hXexdx1XfKh2Nf41fCNZ/7SZz4uh5wuO6zXuCU9Dxu
UH8Oe+c4/q/Q/3M6Xho4f47+4wLexO4c6zf2KV/DwTn6j0PSqzgifRFXz6n9
0zgmXgnXztF/nFC+E9dxO07PaX5aceMc84+98xofz/p/XuXvXKb/53X83MaF
85z/2J3n+gX75zW+NRyQ/yYOz3M/giO8iKvnNR/TOD7P8wVco309OMGduH5e
41PAKeVbcYP6m7F3gev/S/T/gsb7Ds5fUH0pLlxQfzexu8Dxj/0LHP84uKDx
iHFI/mUcEX8RVy/QfxzjEq5RvgcnuBPXyd+OU9JbcYP0Zuz1cvwX6X8vxz/O
9/J8CxfwJnbkT7Dfy/UqDsh/E4ekV3HUS/9xFU/juJf7S1yjvI+TXo2vw/Ve
Hc8FnFK+FTfIn8Pey7Jn/X+Z9f8i/X+Z/uMC+evYkb6OfdJrOHhZ4xPjkPzL
OMKLuIqncYxLuIZ7cPKyxsPh+suc/zglfytukD+HvVe4/sU53HiF/uMUF16h
/9jhBPuvaPxrOKB8jEPyV3H0Cv3HVcqHOCa9hGuvaDx9nFCfw3VcwCnO4wbl
c9i7qPp3X6b/F+k/zpN+GxdIr2NH+jr2L2r8b+HgouLHOMRVHF3k+gdXcYhj
4gW4hn2cXNT9lsN10gs4pX2tuIGbsVdUPM/6jxu99B+nuFBU++vYFbn+wX6R
+ccB5WMcFjn/cVRU+yNcJT3EMQ5wrajrZx8n1O9wnfYVcEr9edwouuzzjBz2
Lqk+D+cu8bzvAv2/xPGPC5fUvzp2l1Rfgv1LvP/j4JL7w6wfOCR/FUfkj3CV
+kMc4wDXaK+PE9rrcJ36Cji9pPlpxQ3Sc9i7rPIezl3m+D9P/y871YMLl9X+
OnaXdT+fYP8yxz8OLjP/OMRVHFE+wtXL9B/HOMC1y6x/OKH9DtdpXwGnxMvj
Bu1rxt4Vrn9w7orKN87R/yuqP8UF8texu8Lxj/0rzD8Ormi+Yhxe4fjH0RWN
b4SrV7jfxjH1Bbh2hf7jBHfiOvUVcHrF7cv6gRu0J4e9Po2/h3N9PO/06X+f
xiPFBVzHro/1D/t99B8HfRq/GIekV3HUp/MjwlUc4rhP7Q1wrc9lnzf6OCF+
J673sf7htM/9y6wfuNGn8clh7yrHP85dpb899P+q+1dZHFy46n6UtQu7q4oX
Yf+q4gU4uOp+nuXD4VXFz+PoqtufvcDVq+4HWfyz9P8qnw/g2lUdfzFOqC/C
9asavwCnVzVeDjeuuj/K4mPvGv3HuWvEf4n+X9P91zouXNP4xNhdIz72r7mf
ZPFxcM0dyPLh8Jr7cVYvjq5x/YGr11wui3+G/tO+BNeucT+BE7yI69dcSxYX
p9c0fw43rmm889graTw8nCsx/6fpf4n1DRdKrOfY4Qj7Ja5XcFDS+edwWNJ4
tuKoxPsPrpY037dP0f+SjqcE10oanxgnJd2vLOI67QlwWnI/zeLjRon1EHsB
9/8vyk0B7/c4F9B/3EJ6jPOB+2XWD9wWcPzjAuUd7gg0H3nsAvf97AXuDpj/
bsaT/AkuBtxP4yDQ8RThisXHIekOLwQa7zyOAteswPJS4DRuXXI10PO5dbwS
uAez/uOY/kV4NdDxFeAadngt4HoMJxYfb1j/T8r1QMdPgrcCnV8xTgP3wyw+
3g6Yf9yw+HiH9uax16/yHm7q13inL8i5fp0fCW7p5/zH+X6tFxFu6yc+LpDf
4Y5+HY957PrVPw9392v+0hOy38/xh4vEi3HQr/5FuNLP9SIO+53i4AX6k8cR
9Xl4qV/HY/q8XO3X+pnglX73iyw+jvu5fsWrjGeAa/18voHX+jn+cNLP58/P
yRvUl+J6P++veKuf9R+n/Xo/ivC2xccNG3+8Q32t2Bvg+cezctOAjscU5wY4
/nDLAOsvzg+oPxFuG9DxE+AC9TncMcDnNdgNaL493D2g+Uyd7A9wfY2LA6y/
OKD9i7hCewIcWny8QPvyOBrQ+Hl4yeJ1ytUBdzDLh1cGdP45HA+4Q9kLvEp/
kmfk2gDPt/DagM5vh5MBd1/2Am8MuHz2/0/L9QH3N1l5vDXgWrPyOB1g/T4u
b9OfBDcG9H4Y4R3ssDfI/e9TctOg+pvg3CDrK24ZdPdn5XF+kPHDbYOs10/K
hUH1N8Idg1o/HXaD7oHsBe4eZPyekP1Bna8RLmKHg0HOX1wZ1PmRdMjhIPdX
eGFQ63knjgZZf/HSIPN/TK5Sf4RX6J/D8SDXL3h1kPuBx+XaoPtVVh6vDXK/
gpNBrYce3rDxf0yuD7K+4S3653A6yPqJtwe1fiVH5QbtWcQ7g1yPYW9I8+vh
piG1J3lUzg3Rf9wypPodzg9x/uI28iePyIUhrZcR7hjS+eKwG+L+A3cPMX8P
y/6Qa8vK4+IQ7cfBEOcPrgxpfUgKckj9EV4Y4vjD0ZCOh912eWlI632Eq0Mc
n3jF6vudHNNfD69af38r14ZYX4/Ia0P6/GMRJ0M6Pjy8YeUfkutD7nfZC7w1
pM/nFn8jp0Pu0ewF3ibe4q/lxpD7+yx+m7wzpPuRCHvDrpD9xU3Dqi86LOeG
3ZHsBW4Z5nrzQTlPfg+3DfN51q/kwjDHF+4Ydn+WpR+S3bDWMw93kz/6pewP
u/+Rtf8BuTjs/iIrjwOLjyvDOh6j++VwWMeLhxcsPS9Hw+5DvSHKS8PcD+Hq
sNZj7xfyyrDWB+/ncjzs/n324qC8Osz5+DO5Nqz10rtPXht2t7N4LXIy7L7K
XuAN6+9P5fqwG85e4K1h1qufyOmw+zzL/2N5e9j9XeYfyY1h93L2Au8Muy+z
9Jzsjbinsr+4acQVswXtB3JuxP237MU+uWXE/afsxffl/Ij7N1n+JrltxP1x
Vv935cKI+8/Ziz1yx4j7syz/d2Q3wvHhyd0jbjlbsO+uZ/ZH3G/UcLk44k5l
9f+DHIy4P9UGDbky4m5nE7gthyPuQ91QyQsj7pM3soGVoxF34vxD/+G+V44+
nXlpxJ3/t1m69jFXf9//bIG4La+MuHPZAbAtxyNuTh8YyasjTt1hH3RtxP3H
rL3fymsj7r9nFwT/JCcj7gO9gajcxoh7ROMj10fcP2r85K0RN5K9+J6cjrge
jb+8/fv+ZfH+UG6MuJvZi33yzog7ko3vD2hnmeMjJzeV3R0dH3KuzP6IH8ot
ZfdC9uLHcr7sjmcv9sttZVfJXvxELpS5vsUdZfdXOr5lV3a9qljuLrv/ovND
9svu/ezFfXKx7NazdByUWb8OypWym8xe/FwOzb+QF8qsF61yVHb/Tue/vFR2
D2X/n5erZb3f2z7olbI2tEU4tvQH5NUy98O4VtZ6v4vXylwvsw86Kbt/nb04
JG+U9X4T4XpZ67X3K3mrzPsxTstcPzwob5fdn2t9lhtlrk8Pyztll2Tp2Ksw
Hm1yU0X1RThX4fNB3FLheuTXcr7ins9esO+5rcJ+clyosL8ad1TY7/KQ7Coc
D7i7ovZGR2Sf/Lu4WNH1d/RbOaiwfrAPulLR+0mEw4q7mr1olxcqPK/DUUXz
bfuglyp6v3W4WuH9FK9U9H5o+6Bj0nfxakXz7x6WaxWt1xFeq3A/jZMK7w+P
yBsVvf87XK/wfo23KnzejtMK1+94m/Fw7ItuVPR+FOGdit4/17E3qvH0jspN
o8THuVG7fpRbRnkegvOjHP+PyW1WHhdGeT6GO0Y1vgl25Pcel7tHdXw77I9y
/4SLo+pfgoNR+sE+6MqoXZ/L4aj7y6w8XhjV/XGCo1G3nY0fXhp1f3uPneyD
ro5yf41XRjUfCY5Heb9/Ql4ddYez+Lg2qv0Ti3ht1P11Nn44YXy8J+WNUR2P
DtdHdX0b4a1RnkfgdFTHm/eUvD2q62WHG6Pumaw83hnV9VCCvTGefx6Xm8a4
X8a5MfdwVh63jLHfDefHuD59Wm4bc9kbqcOFMa4HcceYzs8EuzH3SPbiGbl7
jOfV2B/T3wgXx3S+JDgY43qNfdCVMT4PxyH1R3hhTO8XCY7GOH7Zp7w0xvMx
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
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1: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
UVwSjr8f9fRdpxOXhcPuVv4X5UPFFeH46c64p+1riRUReBCuHTPukrfMPwLp
h5eMicoXO0Wg239xm1UxYrcIuPSrclR2FyMCf9t/F+rycpzMPwKBre+3en1I
rIrA85gZTX6cK1ZHYFVK1lvv8WJjBKLyH07+vak4LwLlfkO9Jt7xkvlHYKfD
hxY/bxEXRqBdRsm6T5licwTGNF4yZ+BAcUkEdm3pNDX001iZfwQ2r9jQK+G0
uCICMRed/MKWihWRWDrz1gL3YLFDpOX+qknup7Zip0jcjWjycudfnjL/SEy5
3MPguVOMSMxsvG3fSYNYGYnZG29HuQwTqyKxZ0HNJlPtxOpIROcGTdt5bozM
PxL/KZ67n1kuzovEjZe3np0JFZsiUeuCnUehk7gwEu3au5VM+3u0zN/y9xM/
DnLZKS6xPP4G99oc04vLIjH0arMWg4eIKyKxvs/3p7+pJrbcB7x1CDjx2+lR
Mv8oNDy5qeDdYrFTFNq3OF//U4DYLQrXeu2b/1cLMaLQxvf5zl13PWT+UQie
Wtgs7HuxKgq/tDzu9zBVrI5Cqu+S50o3sTEKNdxrzVv7eqTMPwrZg7auO31Q
bIrCxPLMk5dniQuj8LTqWu7B0WJzFGY3PqH5oo64JAom7+X2XS5C5h+F64ff
Xd26XFwRhaDrDqG1gsWKaFya4dFqZCuxQzQG+yxy33VkhMw/GgPQq2i5p9gt
GhV7b//U4+JwmX80iq9mtp0ySayMRq/LjV5OuTVM5h+N6dF92rvGidXRcDky
9Ztlj4bK/KNRV71j6JYscV40vvtm7buU10Nk/pbH87TJrptTxYXRuBF1dvD7
T4Nl/tHo4Dk6+8RccUk0uvY9M2BQHXGZ5fwI7/HBiwfJ/KNR7dsJ89p8Jlao
EKa4/cOCle60vQr6d4nT1jUXO6hw0u7nA4FrBtKOKmx9YW67q7XYSYVbhYej
t60fQDur0MB0y8XLSeymQnHyhN5zN/an3VX4JbxN46gOYqiww7uF7tqmfrSX
Cm3/PPz0YQexUoVpsxs3W7apLx2iQs/Z62dday9WqXCsctCenaY+dLIKb54p
BrVtJ1ar0Khm78Xt1/Wmc1TYOK1B9/0txUYVVuw9Nvv2Kjc6V4XlTUbZrWgi
zlOh2tT47tvb96LzLY9XN7mHd4ue8vqosLN6xZGqRq50gQr1Vn29wFzTRV4v
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
7t/oyhTs3m69v6MVqTjD+z/aPhXfDLHeH9IOqfDYbr1/pB1TsY/3l7RTKhx4
/0k7p6Jwj/X+lHZLxTvev9LuqfhVa72/pZGKw/es97+0Vyoq3az3x7QyFeG8
f6ZDUvGW99e0KhVNeP9NJ6fibFvr/TmtTsV/La3373ROKr7n/T1tTEXiLev9
P52biu5cH6DzUjGvg3X9gM5PxbE46/oCbUqFP9cf6IJUNOX6BF2Yio1cv6CL
UqFztq5v0OZUXPGxrn/Qxan4aLCuj9AlqTC1sK6f0KWpmPbUur5Cl6Xih7nW
9Re6PBU9uD5DV6Qigus3dGUqvjRY13doRRryV1rXf2j7NNTl+hDtkIaq19b1
I9oxDT/3sK4v0U5p6DvDuv5EO6dhRz3r+hTtZjl/iHX9inZPQ8YY6/oWjTTc
5PoX7ZWG+D+s62O0Mg3f9LOun9EhaWi237q+RqvS0J3rb3RyGg6Ntq7P0eo0
BIy0rt/J+l8aGsyxru/RxjSoulrX/+jcNNTZYV0fpPPS0Pa2df1Q1v/S0M/b
ur5Im9Lg/6t1/ZEuSMOs49b1STNf/zTMdrCuX9JFafD6wrq+SZvT8M931vVP
ujgNSSOs66N0SRoUXD+lS9PwE9dX6bI0NHlnXX+ly9PwI9dn6QrL87nBun5L
V6ah5Ubr+i6tSEdgnHX9l7ZPx0SuD9MO6bjE9WPaMR2ZOdb1ZdopHT9w/Zl2
Tkfdj9b1adotHT9ds65f0+7p6MX1bRrpaMP1b9orHWquj9PKdHTm+jkdko6a
+db1dVplcQ3r+judnI4/9Nb1eVqdjoZcv6dz0jGd6/u0MR3buP5P56ZjDfcH
6Lx0dOf+AZ2fjg/cX6BN6Rj2zrr/QBek480X1v0JujAdq7l/QRelw5H7G7TZ
8vxw/4MuTsdh7o/QJRZz/4QuTcflDdb9FbrM8sX9k3X/hS5Phw/3Z+iKdNjV
tO7f0JXpWML9HVqRga+4/0PbZ6AR94dohww04/4R7ZiBeO4v0U4ZaMn9J9o5
A22irftTtFsG2nP/inbPgIr7WzQycDvLuv9Fe2VgLPfHaGUGznH/jA7JQG/u
r9GqDCzj/hudnAG7fdb9OVqdYdu/o3My4M39Pdpo+fe5/0fnZiCK+4N0Xgb+
4P4hnZ+BBdxfpE0ZSOf+I12Qgfvcn6QLLc8H9y/pogws5v4mbc7Ax4HW/U+6
OMO2P0qXWObH/VO6NANjuL9Kl2XgnY91/5Uuz8Bu7s/SFRlw5P4tXZmBxtzf
pRWZuMf9X9o+E99wf5h2yERP7h/Tjpm2/WXaKRPXuf9MO2eiBfenabdMdOL+
Ne2eiXLub9PIxG3uf9NemfDg/jitzMRC7p/TIZnQcX+dVmUih/vvdHImpnF/
nlZn4iL37+mcTGzg/j5ttJzP/X86N9NWH0DnWf6e9QN0fiZMrC+gTZbHy/oD
uiATn7E+gS7MtNUv0EWZKGR9A23OhB/rH+hiy3xZH0GXZOIa6yfo0kyMYX0F
XZaJK6y/oMstrxfrM+iKTLRh/QZdaXn+WN9BK7JwkvUftH0WlrI+hHbIwvub
1voR2jELF1lfQjtlIZL1J7RzFjawPoV2y8LvrF+h3bMQxvoWGlm4zvoX2isL
e1kfQyuz8KS5tX6GDsmCL+traFWWrf6GTraY9Tm0OgtNWb9D52ThJ9b30MYs
XGD9D52bhVasD6LzsjCL9UN0fhYcWV9Em7Jwg/VHdEEW7N9b65PoQsvfs36J
LsrCCNY30eYsXGH9E12chbusj6JLsjCW9VN0aRYSWV9Fl2VhG+uv6PIsTGZ9
Fl2RhR2s36Irs6BobK3vohVq2LH+i7ZTYz/rw2h7NQazfoyur8YL1pfRDmqo
WH9GN1FjNOvTaEc1jrN+jW6txjbWt9FOaqxj/RvdSQ1X1sfRzmrUY/0c7aJG
Q9bX0W5qfM36O7qfGs6sz6Pd1bb6PXqoGoNY30dDjaOs/6NHq1H13FofSHup
kcn6QdpXjVTWF9JKNcaw/pAOVKOE9Yl0iBrLWL9IR6jxmPWNtEqNS6x/pOPV
mMD6SDpZjSWsn6TT1TjI+kparcZ51l/SejWmsT6TzlHjW9Zv0tPV6Mb6Ttqo
xmnWf9Jz1ejH+lA6V41arB+lF6kRwPpSOs8yHutP6ZVqJLE+lc63PB+sX6XX
qlHE+lbapMZm1r/Sm9VozfpYukCNTqyfpberEcf6WrpQjamsv6X3WN6frM+l
i9S4wPpd+rAaQ1jfS5stzw/rf+kTlvFYH0wXq7Ge9cP0eTU2sL6YLlGjKeuP
6Wtq9GZ9Ml2qxlesX6ZvqdGI9c10mRqfrOvP4gdqPGF9NF2uRjLrp+mnahxi
fTVdocZD1l/Tr9S2+my6Uo1I1m/TVWpcYX03rdAgivXftJ0GZtaH0/YaDGD9
OF1fg7qsL6cdNMhl/TndRIONrE+nHTUoYf063VqDO6xvp500CGf9O91JY6uP
p501cGX9PO2iwRLW19NuGsxm/T3dT4MtrM+n3TX4wPp9eqhlfqzvp6FBb9b/
06M1uMb+ANpLgwj2D9C+GnzB/gJaqcFg9h/QgRp4sz+BDtEgi/0LdIQGP7C/
gVZp0Iv9D3S8xtYfQSdroGP/BJ2uQQf2V9BqDX5k/wWt12A++zPoHA2Wsn+D
nq5BNfZ30EYNXNj/Qc/V4DT7Q+hcDezZP0Iv0uAS+0voPA3i2X9Cr9TgHvtT
6HwNKti/Qq/V4AT7W2iTBmHsf6E3a+DF/hi6wPL8sn+G3q7B9+yvoQs1WMj+
G3qPBu/mWftz6CINitm/Qx/WYDj7e2iz5e/Z/0Of0KAm+4PoYg382T9En9dg
BvuL6BINAth/RF/TYDX7k+hSDQrYv0Tf0qAZ+5voMg1WsP+JfqBBEPuj6HIN
DOyfop9q8Gm2tb+KrtCgIfuv6FcaJLE/i67UYCj7t+gqDZ6zv4tWaNGU/V+0
nRZr2R9G22uhYf8YXV+LIvaX0Q5aDGP/Gd1Eixj2p9GOWijYv0a31qI5+9to
J62t/43upIWS/XG0sxaL2D9Hu2jRnf11tJsW/uy/o/tpUZ39ebS7Fp+WWfv3
6KFabGd/Hw0tWrD/jx6thZn9gbSXFlr2D9K+WjxhfyGt1Nr6D+lALf5hfyId
osVs9i/SEVqsZn8jrdLiL/Y/0vFazGd/JJ2stfVP0ulaHGB/Ja3Woif7L2m9
FgHsz6RztGjF/k16uhYp7O+kjVqEs/+TnqtFa/aH0rlanGf/KL1Ii+/YX0rn
adGe/af0Si02sj+Vzre8Puxfpdda5sv+VtqkxTH2v9KbtWjI/li6QIsj7J+l
t1vef+yvpQu1qMf+W3qPFqvYn0sXaeHG/l36sBah7O+lzVr8yv5f+oQWv7A/
mC7W4iD7h+nzWjRifzFdosUb9h/T17RIYn8yXWqZP/uX6Vta3Gd/M11m+Xxo
rf3P9AOtrT+aLtfiKfun6adanGJ/NV1heb3Yf02/0iKM/dl0pRbF7N+mq7TY
xv5uWqHDAvZ/03Y6fM3+cNpeh7fsH6fr6zCS/eW0gw7z2H9ON9HhD/an0446
1GX/Ot1ahyHsb6eddPjoZ+1/pzvp0Jv98bSzDlPYP0+76NCO/fW0mw5g/z3d
T4e17M+n3S3ns3+fHqrDZvb309DhFfv/6dE6Wz4A7aWz5QfQvjoUMl+AVups
+QN0oA7VmE9Ah+hs+QV0hM6Wb0CrdNjO/AM6Xod85iPQyTocYH4Cna7DQeYr
0GqdLX+B1utQg/kMdI4OkcxvoKfrsJj5DrRRh4nMf6Dn6pDKfAg6V4co5kfQ
i3TYy3wJOk+Hc8yfoFfqkMd8Cjpfh6vMr6DX6vCY+Ra0yfJ4mH9Bb9ZhOvMx
6AIdjjI/g96uQzfma9CFOuiZv0Hv0UHDfA66SIc7zO+gD+vgw3wP2qzDWeZ/
0Cd0tnwQuliH2swPoc/r8IL5InSJDqOYP0Jf02EJ80noUh3WML+EvqWz5ZvQ
ZTpkMv+EfqCD3SlrPgpdbnl+mZ9CP9Wh1klrvgpdocMc5q/QryyvD/NZ6ErL
54H5LXSVDvWZ7wKrFXqcYf4LbadHBfNhaHs91MyPoevrcZf5MrSDHt8zf4Zu
orfl09COevgzv4ZurUdr5tvQTnp8w/wbupMe55mPQzvr0Y75ObSLHsuZr0O7
6dGZ+Tt0Pz3GMJ+Hdrf8+8zvoYfq0YP5PjT0MDP/hx6tt+UD0V56eDM/iPbV
4zDzhWilHj8zf4gO1KMb84noED1UzC+iI/RYzXwjWqWHJ/OP6Hg9ypiPRCfr
sYz5SXS6HpOZr0Sr9bjE/CVar8dS5jPROXpsYn4TPV2P4cx3oo16xDP/iZ5r
ef2ZD0Xn6rGS+VH0Ij1aMl+KztMjnflT9Eo9+jCfis7X4xHzq+i1epQz34o2
6XGc+Vf0Zj3ymI9FF+jhzvwsersefszXogst82f+Fr3H8nwyn4su0iOV+V30
YT3sme9Fm/Wowfwv+oTl9WQ+GF2shwPzw+jzevRjvhhdosdl5o/R1/SYynwy
ulRvyy+jb+nx+pw134wu0+MO88/oB3rMZT4aXW4x89Pop3r0Zb4aXaFHEPPX
6Fd6zGA+G11pef8zv42u0qMW891ohQF/Mv+NtjNgOvPhaHsD9jE/jq5vwCzm
y9EOBlv+HN3EYMunox0NeOBqza+jWxtwjPl2tJMBbZl/R3cy4M4Raz4e7WzA
c4U1P492sZzPfD3azQAz8/fofgbsZz4f7W6Agfl99FDLv8d8PxqW+R+x5v/R
ow34lvmAtJcBZeOt+YG0rwGNmS9IKw2IZ/4gHWhATeYT0iEG/HjHml9IRxhw
q4Y135BWGXCX+Yd0vAElzEekkw249Kc1P5FON6AN8xVptcHy/WbNX6T1BnRl
PiOdY5kf8xvp6Qb89rM135E2GjCf+Y/0XAPOMR+SzjXAjfmR9CIDPrla8yXp
PAMWMn+SXmlA0wHWfEo634A+zK+k1xrQk/mWtMmAk8y/pDcbMJP5mHSBAc2Y
n0lvN6Aj8zXpQgN8mb9J7zGgAfM56SIDfmB+J33YgCPM96TNBlxg/id9woA1
zAeliy3vR+aH0ucNiGW+KF1iQDHzR+lrBjzta80npUsNuHzeml9K3zIghfmm
dJkB/Zl/Sj8w4A3zUelyA/5mfir91AAV81XpCsv7kfmr9CsDnJjPSlcaMJb5
rXSVAY7Md6UV2djB/FfaLhslra35sLR9NpoyP5aun428N9Z8WdohG42ZP0s3
yUZ/5tPSjtloyPxaunU2tu605tvSTtlwZf4t3SkbiczHpZ2z8S3zc2mXbDxk
vi7tlo31zN+l+2Ujg/m8tHs2+jC/lx6ajZm1rPm+NLLxpos1/5cenY17zAem
vbJhx/xg2jcb849Y84VpZTZmMH+YDsy25RPTIdl4wvxiOiIbauYb06psbPg0
4H/5x3R8NoobWfOR6eRsfK205ifT6dlY6WnNV6bV2SiKtOYv0/psfJhszWem
c7Ix8bk1v5mebnk+Q6z5ziP+H4bHWq4=
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0], 
             Thickness[Large]], 
            LineBox[CompressedData["
1:eJxd3Hlcjen/P/BjzwghZM8eQhGy9pJUCGnf1Gk/7WdNxtZgyJ5lyDImy5C9
sWbPnj3LkD3Gkj2EEL7nd17X9fnjN//M4/k47q7zPvc5933d1/V+v1tHpHhF
V1YoFNnVFIr/93/533i/2oPWWo4YSBU6lXUYlZi6+qMTXexUvzxhx6g/q4Eu
cWo9fsTmWQ4WwqVOE5WJW//Jaihc5rRzoTJ53temwuVOZl5r2p62tRaucHKw
yF244HYbYQU2/+ytCpnRXrgyqnksa/usu41wVfwZ3Gj8yxudhavjr9SVaR0m
dBU2Q9sob78udeyEf8HyI92btxxrL2yO0fMujvfY3EO4DuwSIpyzPvYUtsCH
Du4DHg/qJVwPzjV2d7Gc0Vu4PqYnut41P99HuAE6rEzptLt2X2FLPH6QU+3d
yH7CDfG8/7T0LXP6CzfC4nfzz184PUC4Mf6xaz3I6edAYSv0e/HD/42Dk3AT
jNnxa/h/PSHcFCFuezrdOS/dDBNU5VX8IgYLN8eh6h+reHyWboGBn9cV7pnt
LNwSwQsOrp3bfIhwK7xsftz53FZpa3w+erJ6XH8XOt0afYcduBxZIKxojeUX
l1ff6z1UvN4ae/6yXR58T1jRBl0Hr/vkGe0qXm+DayfLai1+Kaxoi/cP6qKV
2k283hYf9z1O+fBeWNEOPrajXtTWu4vX22Fww4cJSR+EFe1Rd8XGpvU0w8Tr
7WGuuvRb+SthRQdkDxw2r23scPF6B6y5rvt90QNhRUf8/WDXL65+I8TrHdEq
wbqe03lhhQ0yF/a4O3mQh3jdBg8bT/taPVdY0Ql3O2YNvtVqpHi9E5qbnT77
eZ6wojO2BbV/EfVVvt4ZSY3WOLSNHiVe74ItHVpqe10STu8C25FHVq/uNVq8
botja5yehq8UTrfF0ZPjs6f+lK93ReiVig6V7T3F613xulfocEO4sKIbdjf+
fXXzhfL1brDt5tj461H5end4tEreW/eNfL07bux6MTus2Rjxuh0Wlbzc/tJN
GHaoveup616dcLodSod4px9bLZxvhxHTMzLrnpXH2+Of9A271r6Xx9tjQNKC
LpOaeYnj7dH38ZtBa4YI59vjUcUox3oJwooeKC7sF315oTB6wKJqcsP7++Tx
PVDzgcUKp3vy+B7oPVsx9FMlb3F8T0R/aqOq2kEYPRHw45RP4jDh9J6oMqpm
sF2icH5PLFzpddZrvjzeAS5Hz7/8d4c83gGKfi9qHSqUxztg1oGfKTXeyeMd
cMjhWtABCx9xfC/cbuVc62Z3YfTCS93zg2GjhNN7wbbSjbV+icL5vVDtaP93
h2fJ43sjdFfPa8s2yON742Cj9JSnx+XxvfEt2O/Zlvvy+N5odLqb34sv8vg+
WN9v+ZV1lr7i+D6oXqlx3O1uwul9oGz7pX2mu3B+H7yyGVLrTLiwwhGf/1vY
8Ldf5fGOaFm/ev/8RfJ4R/Rc0CNhxmZ5vCO+36+94N9j8vi+uHH9acaOInl8
X8xpE+LQ6K08vi8cVvrF1KrmJ47vi7pfqr3ObCqs6Id7nx8syOkujH5olrWm
ro+LcHo/qMK9OvwRII/vh7aThs1MSpTH90f+NIcH96fI4/tj7u1W118sksf3
R+f09GqL/5bH98f6Tk7mt/bJ4weg6aKTvx45K48fgO6Pqt9zuSOPH4Ayy6y8
pFfy+AGY67xnbr/v8viBOLbf7+rW2v7i+IF4eBUVp1oIpw/EZFXDcTO7CucP
RPB/0ZveDxBWDMKyM6c+mHnI4wfh8q57ueeD5PGD8PzY5F4D4uTxgzB3wN7C
4HHyeON9Y+XD811+l8c7wT3vePy2RfJ4J4zuu+Tlw7/k8U7G61vLmee2yuOB
9+7n1Kr9wtbAOP3+G4dOyb8HRO27+bDgirASqBX7bs+8e/LvA1svn9GYPxfO
Bqo+a9/dtUyOBzR7XVZ5wE/hYuDDR8/vb2oGiPEHY6bfn52UlsLWg+H4Lmt+
ZkthDEZBiLbbbzbCysGIeHSnes8ewumDoRvdqt7G/sLZg7F6mb3zfRfh/MHY
5HJ69q2RwsWDEfRPxM3lfnJ8Z6TW1lhYh8nxnRFp4900KVaO74zBlQz//pYi
x3fGX03DWoaNk+M7IyGz4GK1KXJ8Z4x6m5OXOkOObzz+wrDcnfPk+M7Y0Cxg
6oElcvwhcHT7WD5/pRx/CIIrF9y2WyvHH4IDd81fZufI8Ydg9KINzx9sl+MP
gV+Tbovf7JbjD8G/SZXXXDwgxx+C0qYBZyfly/GH4Odv7kd/npLju+DUg+Ie
Pufl+C7oY2F/ZUKhHN8FxRZBLuP+leO7YI3zqp5ut+X4LqiTED3k1X05vgua
pIY2jP1Pju+CJeVp7nnP5PguqK+vSCt+Kccfii5jF6P4rRx/KCo/9u+d90GO
PxTP0ovfqD7L8YfitYtHxfuvcvyhWPB21Bu/H3L8oWhzboDXH5UCxfhDUWN4
o13bqwoXD0XtXxcvX1dDWOGKFNvuc/W/CFu7Qv/Rvm6b2sJwRVjpofVb6wor
XWE5+voFy/rC6a7osSeuWrClcLYrzobFnJvSSI7visVN9/wxzUqO74pGVTwe
xDSV47vhXdPeLTo3l+O7YdDmVScutpDju0GrLXTxaiXHd0OlXV718qzl+G5I
UNxf9rO1HN8Nq94kD+3UVo7vBucFHr/3aifHd4PtKYtj7drL8d2hT8pVfpa2
dsfn0GnntnWQ47vDd7BHpHtHOb47ag3A/DPS6e4YOrnOti42cnx3zM5+1sog
ne+OdcXTh66XLnbHNcfuE/ZLK4Zhr9fp5nukrYfho9+Z6cukMQwDV3ibh0sr
h6G6TZ9a9aXTh8Hf9u3NzfL9ZA/D9gG5Z7pI5w9Dv98Su/0h4ykehpgjt0Kf
/S/+4WiOcZvb/C/+4bi4YXG4m/y8MBzWy7yu+crPUzkc1z12jhzVRo4/HLPr
LWxh/7/PfzjOLNs5/4c8X/nD0bD/qZd7W8rxh+Ov9rGTg+T5VYyAWUiXBc+b
yfFHYOmO1dFR8vuBEXi9zMP9vPz+KEdgRNmJiS0by/FH4NPulW6hDeX4IzAx
adyr2Q3k+CNgWVhr+/p6cvwRuF6/7aUt8vus8EDZoDXzsuX33doD2+MzbKfV
kuN7IP5+xXPvmnJ8D4xpP6xqA/n7SffAyZqP8vLl7yvbA+Mnx7uMrSzH90An
/b5HJT/l798DJ1ZduxT5Xf7+R6JK8ypDLsnfs/VIDOpwJs2mXP7+RyJi3sMc
7Uf5+x+JngMDam17L3//I9FgQ9rNm/L6kT0SrxrfGfLhlbz+jMQ885gZP5/L
8UdifsSY6xVP5fijMDWjU8RLeb2yHoUxy69Gni+W44/Cmrg55n/ek+OPws0Z
pfOV/7v+jcLrjj+bN7opxx+FZRZWJYevyfFHYW5M5dYB8npaPAqvxr/5/PiC
HH80JqSnrYo6K8cfDXuXLQNvyuszRiPsVOVfBh6X44/GycLk7kuPyPFH4/gs
3zuP5PU+ezSOlfzRr+0+Of5oaLrNHu+/S44/GldG/HJyyg45vieGOyUPXbVF
2MITPWIzbbZtlO/HE9fOXl62c52wnSe8vOsf3vqXfH+eyKl55thKef/y9ERm
75JLU5bJ9+uJgIzv5oGLhdWe+GzTcn3HBfL9G8e78P7gy9nCmZ64snvfhL/l
/TPbEz9yB/3iO1U41xPt6ryb93WSjM8T6ulXbJeOFy70RMOmk81tDDJeTyz9
Ye+VqxYu9cTA0DNtuifK+Mfgbdf9a9fL+73FGHi9bffJIlLGb3yuSb4AfaiM
fwzK9Y03XAqU8Y/BtkkNh1n7yvjH4LL/FI84Txn/GCSdy7u6aYSMfwz+6Xb1
+0NXGf8YVFSZ/baes4x/DF5MGnW270AZ/xhUNnfaGugo4x+DlXe67tf0lPGP
wRHvNRZTu8n4x2DonH+vzu4k4x+DWfsPt5rbTsY/BuFrqjWe0UrG74XXn+oX
pTWV8XuhTn71qVENZfxeOLPjSM9hFjJ+L2RNvFGrYy0ZvxfK7DfZ/Kgm4/dC
5UleOZcUMn4v/FG2Iyfrm5j/qb2wLSTCLeSTnD96IfXJpTVN3glnGt9PtPW/
hS/lfNILYxa5//jtqXCuF1K6VerX9aGcX3rhn/4X11+9I1zoheltvwZpb8j5
phfy7mWnmcv5a6nx/TXY2GTNeTn/9UaNAfmBdqeFLbxx7FCyz4F8OR/2hl1F
1fZOB4XtjM+B4zc8PbJHzo+9ob7tvrtvrrCnN7x/7M7ZsVnOl71xokrGfeu/
ZfzeOOTloJ4n5+Pp3tiYXTnt43IZvzd6vK9vEbhExu8NyxVjvfLmy/i90bDX
7oAGs2T83lix7viA+Gkyfm/YKyysDk+S8XujbPHPKuZpMn5v9C+40sRfK+P3
wfmGf2tXJ8r4fVDlfWrHRzEyfh+k7m83pk24jN8HqqxEs7BgGb8PPDRvorN8
Zfw+eJRvO/XSaBm/D5alzzNUGi7j98Gz6sEB9i4yfh9ceHLSOXSQjN8H/meK
PTIcZfw+mOu+Zf6OHjJ+H+y9amZ93VbGb3z/2tNWnzrI+H0waceKzIatZfw+
WD22w189msn4fdBV9zF4ZEMZvy9uFE25H11Xxu8Ll36dB02sKeP3Rc1/XRdl
VpHx+8LftdH7tfL5D75I9y/Q7/os7OmLxLMT7Y+/E1b64npLF6fLL4XVvjge
bb3n9hP5fOmLjT+rbX78QDjTFy3j7jq8viWc7YteiimJZdeEc30Rfu5w7NeL
8nnUF4a+oQN/nhEu9MWXt82qVjkuXOyL89M3Xa12SLjUGJ/rP0dr7JXPr35Y
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
qT8znZaK6mWm/s30ROPn3crU3/no/wExhXgX
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}], 
             Thickness[Large], 
             RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0]], 
            LineBox[CompressedData["
1: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
             "]], 
            LineBox[CompressedData["
1:eJxd2n98S9ffAPD42ZiaMKXmx4Iia4uia0OLDzoLirCa0proivxo03uTOzrr
azprp6PIrEjNtphuMoqOqm6ryYotzDxhHWWdZVifoCPzax3dPB/fc57nfjz+
0Nf7dc8595xzf53z+aRfRs6sRa0VCkUo/vfob3qbsWmVJSZQPPqXv5j9dZrg
Wpj/n1/03C4T1FxeK0z0L2J2m6D5XOkpm8hdYYJ728evWtSWu9oErRsuKcNK
M5k9JijL7X5k+TBurwmefL9M4/juFWafCbydZn4+fSF3vQm6ryj4eW9LBrPf
BOmHzgzZXcodMEFm9UItaLmDJoh4c/imjPqFzM3oEN2NTsu5FWZYN6L2TkIf
bqUZMkq+tzR+Y2BWmSGv4I2IECN3uBmqLHsebu7MrTZDftdRvwwUFzBr0Imx
/3352MvMMWbw/zHs+Zf7cGvNEPHd5InvLJvPDGbISvti1ty6dGadGSrWrX/i
yEhuvRmMBWmarzamMaeaYWtupSPu/jxmgxkyR++eEbmQ22iGhr+Hla45MZdZ
MEPvg5OOz4jjzjVD8ukZmVllqfy6mqG8Tb8e57pxF5mhvvrpg4Wr5jA7zKAP
jZpgbXmJ2Yn9ST968W07twvHt/nYz8eaZjO70Y1zKvoZuSvM0Ba+eeD4PYW5
Gr09uvCJRdweM7gHmBMKG19k9poBwj6NbTZx+8xQcyt8z7ybs5jrcTwdPu9Y
tpTbj/25VHnu+4czmQNmiG2XUXt8NXfQDI4ZBds29uBuNkOdv6Mw+FM9s8IC
LRu2TlsWx620QPjg+Jb7jhnMKgsonrGfyayezhxugWb1nZF9Lk9jVlvA97Et
L6wLt8YCHs2C5HETkpljLBDo2riqeOlUZq0FtHG3Zt/cPYUZLFCkjHpmXmAy
sw7LP3G3+PBAbr0FgjOzi7ou1jGn4vG0JaMmffYCs8ECrgHmdtNvTmI2Yvk+
5ev6aLkFCzg3dN3vfut55lwLpM4cuuby6STmfAsYR40x1fbnLrKAyhlZP2rp
RGYHjv+lDVvGnpzA7MTx/3bss2MR3C4LeCN/jD26Yjyz2wKO8rUfDfsFmCss
oFm/5c1/Ermrcb7qWqa8MHYcs8cC+cvmd44JGcvsxfF8MnnXtrpEZp8FKpZe
P1/0aQJzPdbv8FPlmbzRzH4LQFnCvqw5o5gD2F5S/PakOC1z0AJCj5B9up7x
zM1Yf+NCwxJFHLMiC1wLagvXX49lVmZBjMU7reLCSGZVFigOvxf3xQ8jmMOz
wPfbkM5bjg5nVmdB/pE7dyccjmHWZAGUDNqje30Ycwz6ZvCn+SuGMGuzwNNU
adqxOooZsH6bFa2VHzzLrMPyncKPZ1QNZtbj8TUx9vfPDmROxfpnS2HTPwOY
DVmgXvFOc3xUf2Yjlm99o3HRAjWzgP3vsGl/x9g+zLnYftaUMS0HejLn4/H5
Dx6ak7ozF6G1HxcO+rUrswP9aqWjpWNnZie2nx2ZVigqmV3ok7+2Xn2jFbMb
y389xTu/3V/j/uMKdFPvecaqK8zVaN1vtcdV3xxm1x+94WyrnMYmZi/65OC3
fM77zL5H57skHpvcxsOuPx633e7abkQHZj9604r5y9p1Zg6gDdsLnsvoyhzE
8bbR7dwUH8bcjMe/u9auXZtwZkU2wKdLvZ8cfZpZmY3X+1nxg7w+zKpsUN8u
CqwKUzOHY/nMsSEqYz9mdTZ4DgxNaT7Qn1mD7uutmflwAHNMNvgjOl+MThrI
rMX67Ye231IwiBmywXCkfdxnnsHMOvS7n/c3N2uY9dng2t8S1xQVyZyKx0f8
UjI2LYrZgO3N+KW78HY0sxHPF/n6zPW7hzALOB7l2pKdvqHMuVh+17qm/7o5
jDk/G/TL77/7dmEMc1E2+L6KvxTfZTizA9t7EFbc+n1uJ87HoFVhf/QfwezC
/gnB3/9xc7uzIWjyTEoYMpK5An27deauvdzV6Mo/klNiYpk9OJ65wp2Evdxe
9PEvhhujn2P2ZUP+gVrPxR3c9Vh/5ckJn/SLY/Zjf9yNY78p5Q5g/VPG/lpV
PHMQxzNYGN+5kLsZ23t5zrmpzdwKKwhfR4fcNmmZlVaIWRXR0OECt8oKhqsd
p2zUjWIOt0K+dGDIlgPcaivolyye1qffaGaNFRyFMHfAGu4YK3hWuq9X3ObW
ot8vf+fEvARmsIK69ZLtkodbZwWf5+WS/RGJzHorBO83bl+zijvVChWNy9u1
usptsOL7pef5HpPHMBvx/K99FFW3g1uwguvdp/8a1W4scy6O93C/AdMWcudj
+7M0hV1quIuw/Nof/KvDxjE7sH+lQwI12dxObH/zsMRdR7ldVtCuNFZFdwJm
txVyN1XnLYrnrrBC+Jpid6uF3NVW8OdlXG29mttjBcWMHxvN+7i9VvDWV0HC
BW4fXo+RSetfbTWeud4Kxp+Hv9JLw+23QvWGc88Pnc4dwPKZU7/Ya+cO4vhm
rNRuc3I34/xVZMW3PcStyAHl0m4DLvi5lTmge/GLhRFtJzCrcsC3t2nWlUHc
4TngV+yZ0WsytzoHFLff2nnCzK3JgcAE597ba7hjciA8w1e2uZxbmwP5hxuP
HzzJDXj+2rdSZzdx63Ig9UZKgdhxIrM+B1R9B77eKZI7NQccu25lRuq4DTmg
bheSeXwRtxH7O7/jxusruYUcKNL37bzhI+5cPN/5q5cPfcWdj/1Pq3pGOMdd
hOXXrjj+2S1uB/b3dshlS6ckZmcOCM7rxoODuV14/vP7Zq0dz+3G/l68suHG
PO6KHICMnj0a7NzVOeCu6uB9qZjbkwOaYR+/s6CM25sDwTe7Jvz1FbcP60+4
WNX3R+56HN/zTWfOXuX24/H0TQa14nnmAPa3sjq6JYw7iNfz1uGH5ijuZjxe
evCDbOBWCCA8O/fbtrO52wqQPyL8ueEmbqUAFZaYbbfzuEMF0Fr3H0p2cKsE
yD3+3qgx27m74fFT+w4fO8AdLgCsun6v8Tvu3gLoNz2zctt5brUAytfGK+5d
444QwJdkCP39AbcG25f2jckJncQcLYAi3TV4Y2/uGAFSp5yaOyeaO1YAR+0g
Q1UCt1YA3YXLtfumcCcKoLrhbD9tLjcI0OxLKC9cwp2E470WPXz+q9w6PN51
fOe6ldzJ2N5xb8219dx6AfwDS8u3beVOEcAb/dT0v93cqTifc6I63arkThcg
OEacVezhNghQr+jxlvd77kxsL/kvxY6z3EacH93WSM1v3FnYn92T0pKvcwvY
38Cta0/d5ZYEiPl+wdAV/3LnYv3zTy1bF/ICcx7Ovy/jqQkq7nzsX4Z9+pZw
7gIc39KJwmY1dxFeT8vuQ6M03MXY37+yct8cxu0QwN1lwK/WOO4SLD993pDW
Y7idON5/Vr+fMJF7K/antu+CXpO5XXg9Oko7t03nLhMgsOe38lMvcrvxetu/
3PBxKnc5zk/P6YV95nNXCOBpubFz3ELuSgGMB28N6rCIu1qAovjKnsuN3DXY
Xulm1wYLtwf7n/rE2VlW7qMCuDq+ffpLgduL7Z15d8cJG/dJvD+jjphWStw+
nL+Ww4Muvcpdh+NRjrt2dSl3Pd7/CcpDpcu4G7C90ffK/vxf+/+fr+DzOJKU
D2B/gmPl9ppw/nt45PMFsf2JpD938H74lvS3GefzYaE8nhZ8PtLJeBUihG8k
89FWxPbIfClF8G8n8xkqgk51U55vlQgV/cj16CaCOolcr3ARir4m17O3CMZB
5HqrRQgeI/dDBNa/R+4XDZ5/BLmfovH8/cj9FiOCMkjux1gR6peT+1Urgnsx
uZ8T8fyLyf0OImjryPOQhD5NnhedCNUXyfOULIKziTxvevHx5zEF29eS5zVV
BM148jyni+AIJc+7QQTDbPI+yBTBO5W8L4wiCF3I+yQL23uavG8EEXwN5H0k
iaAfSt5XuSKofibvszwRAp+R910+zn/vUvl9WID9OUvel0Xi4+/TYuzPJPK+
dYjgSSTv4xIRXJvJ+9qJ9QeS9/lWLF9A3vcuvN4fku9Bmfj498ItQn4t+Z6U
Y/1D5HtTgfVt5HtUidd/HfleVeP4e5HvWY34+PfOg+1Vk+/hURFyr5HvpRf7
s5F8T0/i9V5Cvrc+bG82+R7XiaAYQL/X4uPf8wa8n0eT771fhJgTZD1wBftr
JuuFgAipZ8h6okl8fL0RxPqvkfXIHRz/k0p5vdKM9TeS9UyL+Ph6R2EDzU6y
HmprA7+FrJeUNqheSNZToTbIv9teXm+pbOA7QdZj3Wzgak/Wa+HoS2Q919sG
jp/Iek9tA89Fsh6MsEFwLFkvarD9SWQ9GW2DovYF8nozxgbhp3bL69FYG3gv
kPWq1ga5U8l6NtH2+HoXbNBcRtbDSTYILCfrZZ0N3Hqynk7G46vJeltvA+1l
sh5PsYE6lKzXU21Q/5Cs59NxfIPJet9gA2ER2Q9k4vz+QPYLRiy/kuwnsmxQ
YSX7DQHnp4rsRyQs7yL7lVyc78VkP5OH8z2P7HfybWAI6y/vhwpsoJ9K9ktF
2J6J7KeK0QOflvdbDix/j+zHSmwQ8wHZrzltAPVkP7cV/eNieb/nwv6pd8v7
wTJsfznZL7rxfpxO9pPleHwp2W9W4PjHkP1oJc6nKlTer1bbQLGe7Gdr8PyT
yX7Xg/dnOdkPH310PrJf9uL4dpD99Ek830Wy3/Zh+TSyH6/D8ofoft0GKsWX
8n6+Ac/3IEfe7/vR10k84Ar2t1cbOV4QwPYnkHhCEx5fSOINQTxfXxKPuIPj
M3WX4xXN6JdIPKPF9ni8Q2EHz1USD2mLDhTL8RKlHRT3SDwl1A4wu0GOt6iw
/EckHtPNDq44Eq8Jx+Ov75PjOb3RcSTeo0YnkXhQBLbvfFKOF2mwvWkknhSN
vkLiTTF2yG9P4lGxWP8FEq/Sousj5XhWIo7n32VyvAvQPwbkeFgStlc6WY6X
6dCDP5bjaclY/pk35HibHn35rhyPS8Hy9/xyvC4Vj88g8bx09Id1crzPgHYO
PvJ/8cBMtLe/HC80oseTeGIWeh2JNwp4viVRcjxSQkdWyfHKXBz/HBLPzEM/
vC/HO/OxvRcny/HQAqzvK5HjpUU43z+QeGox1teTeKsDr59vixyPLbGD/3US
r3Vi/fwecjx3K7ruDTne68Lyow/I8eAyPP+Tf8rxYrf98XhyOfa39V053lxh
B1UIiUdXYvtTS+R4dbUd16Mknl2D/pDEuz12EDQkHn7UDr4CEi/32sFwL06O
p598dP5EOd7uw/7vr5Pj8XU4Hx/QeL398Xh+gx30K0i834/1H5B8wBU7GPeQ
fEHADvUukk9owvZCSL4hiP6W5CPuYHsFJF/RbAfnLpLPaMH29CTfoZDA053k
Q9pK4H+b5EuUEgR0JJ8SKoHxvEnOt6gkCE8h+ZhuEriKSL4mXAIYRPI5vSWo
Px0p53vU2N5Qkg+KkKCoP8kXadBpJJ8ULYFuPck3xeDxDiQfFYv96UXyVVo8
XwjJZyVKoC8k+S6QILqF5MOSJMiaTfJlOpyPriSflixBTR3Jt+klSG5F8nEp
EjQHSL4uVYLULiSfly5BSxjJ9xkkcPxK8oGZEuS2IflCI5bvmCrnE7Mk0BST
fKOAHkPykZIEiokkX5krgbOU5DPzJPBqSL4zX4KUT0k+tECCpAskX1qE7d0h
+dRiHO9Ykm91SOBeSvKxJXi+PJKvdeL1X0byuVslSHyF5HtdEjT9TfLBZRLc
8ZB8sVsCg4Xkk8sliL2rlfPNFRKo5pN8dKUE/d8j+epqCZY7SD67RoJ90STf
7ZFgSx+SDz8qwbeLSb7ci/37nuTTT+L9+hXJt/tw/vNIPr5OgkYlzdfj87WD
5PMbJKh6leT7/RJIx8nvAa5I8MZB8nuBAI7nNPk9QZMEHwbI7w2CWP/hr//5
PcK+fw1nPvlT4td1MfwPFA8YDw==
             "]], 
            
            LineBox[{{179.5006879337728, 180.}, {
             179.50118793455624`, -180.}}], 
            
            LineBox[{{179.99881167558627`, -180.}, {179.99931167558626`, 
             180.}}]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         AxesOrigin -> {0, 0}, PlotRange -> {{0, 360}, {-180, 180}}, 
         DisplayFunction -> Identity, AspectRatio -> 0.33, 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox["\"t'\"", {
               GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
            None}, {
            FormBox[
             StyleBox["\"t\"", {
               GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
            None}}, FrameStyle -> Medium, FrameTicks -> {{{{-180, 
              FormBox[
               RowBox[{"-", "180"}], TraditionalForm]}, {-120, 
              FormBox[
               RowBox[{"-", "120"}], TraditionalForm]}, {-60, 
              FormBox[
               RowBox[{"-", "60"}], TraditionalForm]}, {0, 
              FormBox["0", TraditionalForm]}, {60, 
              FormBox["60", TraditionalForm]}, {120, 
              FormBox["120", TraditionalForm]}, {180, 
              FormBox["180", TraditionalForm]}}, None}, {{{0, 
              FormBox["0", TraditionalForm]}, {30, 
              FormBox["30", TraditionalForm]}, {60, 
              FormBox["60", TraditionalForm]}, {90, 
              FormBox["90", TraditionalForm]}, {120, 
              FormBox["120", TraditionalForm]}, {150, 
              FormBox["150", TraditionalForm]}, {180, 
              FormBox["180", TraditionalForm]}, {210, 
              FormBox["210", TraditionalForm]}, {240, 
              FormBox["240", TraditionalForm]}, {270, 
              FormBox["270", TraditionalForm]}, {300, 
              FormBox["300", TraditionalForm]}, {330, 
              FormBox["330", TraditionalForm]}, {360, 
              FormBox["360", TraditionalForm]}}, None}}, 
         GridLines -> {{0, 30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330,
           360}, {-180, -150, -120, -90, -60, -30, 0, 30, 60, 90, 120, 150, 
          180}}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 800, Method -> {}, PlotLabel -> 
         FormBox[
           StyleBox["\"a=1.500\"", {
             GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
         PlotRange -> {{0, 360}, {-180, 180}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)\"", 16, StripOnInput -> 
            False], 
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(X\\), \\(11\\)]\\)\"", 16, 
            StripOnInput -> False], 
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(e\\), \\(1\\)]\\)\"", 16, StripOnInput -> 
            False], 
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(X\\), \\(100\\)]\\)\"", 16, 
            StripOnInput -> False], 
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(i\\), \\(1\\)]\\)'\"", 16, 
            StripOnInput -> False], 
           StyleBox["\"vel(i1')\"", 16, StripOnInput -> False]}, "LineLegend",
           DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"\"Column\"", ",", "1"}], "}"}]}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7920072662336493`*^9, 3.7920072799210615`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{
   "\"\<0050_act_progress_clean_1265\>\"", ",", 
    "angularProgressPlotClean1265"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.792007204177446*^9, 3.7920072215142164`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{
   "\"\<0049_act_progress_clean_15\>\"", ",", "angularProgressPlotClean15"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7874857256007214`*^9, 3.7874857279119043`*^9}, {
  3.7874858915367107`*^9, 3.78748589256073*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{
   "\"\<0051_act_progress_clean_both\>\"", ",", "angularProgressPlotBoth"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7920072937939777`*^9, 3.7920073082577877`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"angularProgressPlotClean1263", "=", 
  RowBox[{"getAngPP", "[", "1.263", "]"}]}]], "Input",
 CellChangeTimes->{{3.787485863535709*^9, 3.787485867888933*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxd3F+MXOV5x/EDccI2ccs0ccI0dbIniRMmwYkPweABDPsCBg9g8AEcGBLD
ngTbOzZr+9i7M5kLS/teIGUvkDgXVJ0LJB9VVJkLS8wFUueCdt9KljIXSByp
SNkLSz4XVB1VqExVt5m2blyzz/ddaR9ufvnkfd7znuecMzP7z+93fnX2+eO3
BkGQfzEIPk//3/QfX/vmlb+99A+iYu6jHZLicu6f75AUj+fu/IakeDL38jZJ
8bW5Z/944+Z//4Gnc3//RUnx9bnGrZIsby5v1N/At5p/ukVSvM08vzH8Bfwl
85VbJMUzZniLpPjL5kVSvN08eouk+M9MeIukuGJqpPjPTbGxnvdXzQuk+Gvm
OVK8w1zbqPf+urmPFH/DfJcU32H+faPeu2p2kuK/MOXGuPc3ze2k+C/NbaR4
p6mQ4m+ZL5Lib5vtpHjWNEhxyHgotqH5U1LGv2O+Tsr4d8y3SRn/rvm/jfP1
49+V491MGf8e5/89xrHFwS7zJ6SM7zL//fnhVnDwffO/G8f349+X+psp4z8w
XyVl/AdmBynjd5ptpIyrDGrmS6T8/zU5nsXBD408nn78h3K8mynjPzIbwzew
xSs/Yvwu1r+L8bvM10gZ3818P77bfIWU8R9L/c2U8R+b6cbxcfAT8z8b8/34
T+T+30wZ3yPX42bK+B5zKynjEf1HYhPJ+RpsVbpI5jsc3G1uIWW+Snu3XL8V
7O6W83M4+Kn5AinzfirnY7BV6ah3OLiH5/0e5t8j4wbbe+gXO5XBXjNDyvy9
9I/tXjkfix3jDgf3cv3uZf69zMf2Xjkfix3jDgf38Xz5+fdJPzdT5t8nr3eL
HeMOB/s4/33M3yfP0xy2+3gesNvH/cNBnetfZ36d88e2zvOMXV3Wczi4n/7v
Z/79zMcWW+zu5/xx8ADPv5//gJzfzZT5D3D9sFMZPMj5P8j8B7l+2D4oz6fF
jnGHg/3M38/8/VJvsFXp9nP9cPAQ8x9i/kOcP7YP0T922OHgYd4fHmY+Ntg+
zOsHO8YdDuaYP8f8OdbHdo752M1Jfw4HRupv5kaERsZDbAzPE06M9JtgS73F
uUrH/DVcqgwe4f3jEdZXaR7h9YwT6hNsscU5zrFjvsMl4yUOHt2a4aNyPUJs
sMHJo6yPrcqc+hw7lSXzS7/uY1z/x1j/Ma4/NioTxhNsmW9xzniOHeMOl4yX
ODjA+gdYH4fYqExUWpW5SneA5w2XuMTB41szfJz+sVGZPC7nl2CLLc6Zn2OH
HS4fl+fxql/3CV6/T7C+SvMEzz9OnmB9bFXmT7A+dipLlcFBXr8HWfcg1x+b
g7wf4QQn2FJvcY5z7LDDJfNLHDS2ZqjSNFgfJw053wRbxi3OG6yPHeMOl4yX
ft0nt2ao0qhMnqR/bLHFuUrHuMPlk6zv132K95+nWPcpeR5CbJ7i9Y8TlVZl
rtKpLFUGT2/N8Gmef2yeZn2cMJ5g+zSfzzhX6VSW1F/16x7amuEh1sdGZcJ4
gi22OMc5dod4/nCJS7/uM1z/Z1hfpXmG/nGi0jLf4hzn2KksVQbPsv6zrItD
bLDBCU6wVZk/y/OPncpSZXB4a4YqjcrkMOtjiy3OD7M+dow7XKoM4q1ZURmq
jGI5XoQNNjhWmahMVVqVmcpc5YD1BthhhwuVpcqJyuC5rVl5To5XwaHKiPEI
G2xwrDJRmaq0KjOVOcfP8UClY9zhQmWpcqIyeH5rVlSGz/N6wJFKozJWmahM
OV6KrcpMZU59jgcqncpCZalyojJ4gdf/C/SNKzhUGak0KmOVicpUpWU9izOc
4VzlQKVTWagsOV6JJyqDI/R/hP5xBYcqI5VGZawyUZly/BRblRnjGc5VDlQ6
lYXKUuWE409w8LOtWVEZqoxUmp/x+sexykRlSn2KrcpMZa5yoNKpLDh+gUtc
4gme+L5f3JoVlaHKSKVRGb8ox49xghOcqrQqM5W5yoFKp7JQWaqcqAxe4vl/
ib5xBYc4xBGOsMEGxzjGCU5wqtKqzFTmKgcqncpCZalyojJobs2KylBlpNKo
jFUmTfrHKU6xxRZnOMM5zvEAD7DDDhcqS5UTlcHLW7OiMlQZqTQqY5WJylSl
VZmpzFUOVLqX6R8XuMAlLvEET3zfP+f5/zl94woOcYgjHGGjMlaZqExVWpWZ
ylzlQKVTWagsVU5UBr/YmhWVocroF/SPDTY4xjFOcIJTnGKLLc5whnOVA5VO
ZaGyVDlRGRzdmhWVocpIpVEZq0xUpiqtyuwo/eMc53iAB9gd5ftLXDBe4JLx
Ek8Yn/i+X+H5f4W+VYYqo1fkeBE2KmOVicpUpVWZqcw5vxwPVDqVhcpS5YTj
TXDwKv2/St+4gkMc4uhV+seGcYNjHOMEJzhVaVVmKnPWy/FApXuVny/jQmWp
cqIymN+alXn6x6HKSKVRGTM/xglOcIpTbLHFGc5wPk//eMD4ADvscIELXKqc
cLyJ7zvZmjOJzJ/BFZVVlaHKmsqI40W4rtIwbnBDZayyqTJR2VKZquyyXhdb
lauMr+JMZU9lrrKvcsDxBnio0jHu8CiR5/l3uFC5rrJUOeZ4YzxROWV86u/7
L7fmjMrKL3k94KrKUGVNZcT8CNdVGsYNbqiMVTZVJipbHK+FU5VdlVblqspM
ZU9lzno57qscqByqdMx3eKSyULmuslQ5VjlROVUZ/GprzqisqKyqDH/F5wOu
qYxU1lUalQ2O18CxyibjTZyobKlMqU9xF3exVbmqMlPZU5lzvBz3VQ5UDlU6
lSOON8KFynXG13GpcqxyonKqMniN37/jmde2ZuU1Xv+4Sv0dOMSzuEZ9DUcq
6yqNygbzGzhW2WS8iROVLZUp53cWd1VaxlfwqsqM8bdwD/81zlX2VQ6ofw8P
8d9hh9fwiP5GuFC5zvg6LlWOVU44/md4qjI4tjVnVFZUVlWGKmsqI5X1Y3I+
+7BR2WD8II5VNlUmx/j6CrdUpoynuKvSst4KXqV+FWc4wz2Vuco+x/stHqgc
qnQqR8z/HS5Urqssj8nfd1zFY5UTzn+Cpxz/D/6+H9+aM8f5+g9XVFaP8/rH
IZ7FNXwnjlTWOX4dG5UN5h/EscqmyuS49D+PW8xfwCk+i7sqrcpVjvcbnKns
qcxV9umvjwcqh4wPsVM5YnyEC5Xrx831z8/v97ikvsRjzv9f8AR/hqfH5ev/
qb/vJ3j/9/f/hBz/thPiygn5fXgFV6m/A4cn5O81Z3GN+XfiiPkRrlO/DxvG
DW4w/yCOT5j//NyHcfOE/P1BEycn5O8h53HrhPnXjfuP0xNmvHH/cfeE+a/P
/WtsT5iH/+beP95Ywaub427D2eZ8cW/z+OJ8c31xf/P8xIPN8xcPN/sTu83+
xaPN6yMuNq+feH3z+orLzesvHm/eH/Fk8/6Jp5v3Vxws+PsvnlmQ8T/gyoJ/
fsTVBf98icMF//yJawv++RRHC/L3wR/h+oJ/vsVmQa67w40F//oQx4wPcHPB
v77ECeM5buEeTnGGuwv+9S22jFu8irs4W/DvH+Legn9/EeecT4L7zG/iAY7x
cMG/v4kd4waPFvz7o7jAEV5f8O+v4nLBv/+Kxwv+/Vk84fgVPF3w7+/ioCXj
gb//Lf/5IK60/OeHuEr9GIeMl7jG+DqOcIHreIQNdrjRkvenIY4ZH+Am6/Vx
wniOW7iHU/p5C3db/vNdbFv+81+8yvwuzlr+6wdxj/oFnLf81x/iPuMv4QHj
MR62/Nc3Ysd6Bo9a/usjccF4hNdxDZc4xGNcxRNcwdOWPP+34eCkjAd4Bk9f
E1fwBFfxGIe4xDW8jiNc4PpJ//Wt2GCHG3iIYzzATY7XxwnOcYv6Hk5xhrvU
r2J7kr+fw6uMd3GGU9zDLZxz/AT3T/rvT8QDHOMh6zWwO8nfF+IRx6/jAkd4
HddwedJ//yUen/Tfn4kn+HY8Zf4MDk757//EM/gPuHKK1z+unpL5YxxSfxXX
TvnvT8UR9QWu4xE22OEG84c4ZnyAm7iPE5zjFu7hFGe4i1exxRav4i7OcIp7
uIVznOD+Kf/zCfGA8RgPT/mfb4gd4waPGK/jgvEIr+MaLk/5n7+Ix4xX8QRX
8BTP4OB1ceDvP57+UlzBE1x9nZ8v4pDxEtdel+fh9zjCH+E69SNssMMNPMQx
HuAmx/stTvBF3KK+h1Oc4S71v8GWcYtXGf81zvBZ3MMLOGd+gvu4iQc4xkPc
wO51//NP8YjxOi5e9z8/Fa8zXsMlDvEYV/EEV/AUz+BgURzgmUX/82FxBU9w
ddH/fFkc4hLXON46jnCB63iEzaL/+be4wfgQx4v+5+fiJuN9nOAct3APpzjD
3UX/832xxRavLnL/cYbP4h5ewDmex/1F+Xx9CQ8YP4yHnE8DO8bn8AjvwwXe
g9eZX8Ml47N4zHgVT3AFT6m/DQenef+fF8+clvoJruASV09Lfx/h8LT//ZO4
dlo+3wY4ov4irrPeW9hQb3HjtP/9mDhm/jxunva/XxMnzDe4Rf0enHL+Ie6e
5vshbDlegFd9/6+KM+pL3MMFzk/73z+K+75/PKA+x0PGM+x8/3jE+ikuGE/w
uu8fl6f971/F49Py/WeEJ5zfLJ6elu/HbsfBGf792SvimTP0jytn+P05rp7h
+zkcMn8N15g/wBHjF3Gd8QybM7z+cIPxFMesN4+bZ3g94YR6g1ustwenjIe4
iyvYsn6AV/HkqDhjvau4x3iBc98/7lP/Hh5Qn+Mh1zPDjvOxeER9iosz/Hsr
vE59jEvqDR7jCE+YH+Kp7x8HZ/n3P3jmrNRPfiGunJX6ElepL3CIHa5RP8AR
znGd+gwb1rO4cZb+cXyW1z9unuX+44R6g1vU78EpnsVdzqeCLfMDvEr9Zz8X
Z75/3KO+wDnns4b7vn888P3joe8fO+av4BH1KS6oT/C67x+X1Bs85vwiPPH9
4ynzb8dBSv94W8rfB7wsnkl5/vF26gtcwQ7vSOkfV3GOd1Kf4TDl/uNd1Ke4
Rn2Cd+MYR9QbvBdHuE4/Id7PehVsqA/wAd9/U9zAJT5EfYFj3z8+Qv0AN1N5
P87xUd8/TlL+fSY+xvU+i1u+f7xI/WGc+v7xsu8fd1N5/5zFF5h/O7a+f/wG
601eEq/6+4/f9P3jDDv8NvXv4R6+iN+hPsM518vid33/uO/7x5f8/ccD6ufw
+3gPHlIf4g9Yr4Kd7x9f9v2/KB7hEn/o+8eF7x9/TP0Ar/O85fiK7x+X1Fv8
CeeX4jH9zONPff94Qr3B11gvwlPWC/F13z8OzvHvH/G2c1I/+Zl45hz94+3n
+H4OV6h3eMc5ed7ew1XqL+Kd1Gc4xBbvOifP51lcY/483k19jCPq5/Be6vfg
OvUh3k8/FWyov3FEfAB/hhu+f3yI9T7Cse8fH8ED3DzH32/hoxz/LZz4/vEx
1ktxy/ePF33/OKXe4GXWi3DX948v+P6xpT7Ab/j+XxCv+v7xm7jAGc+Pw2/7
/nGP+hy/w3oZzllvBb/r+8d96hN8ifViPGA9g9/3/eMh9SH+wPePHffzxvPi
y75/POL4Jf6Q5/sjXFC/hj/2/eN13z++wnpv4dL3jz/x/eMx9fP4U+oP44nv
H1/z/eMp9bP4OvUVHJzn8x9vO8/XP8+JZ87TP96OC1w5z9d/eMd53v9xlePn
eCfOcEj9Ct7F8VNcoz7Bu1kvxhH1Bu+lPsJ16kO8n/oKNr5/fID6SSxucH5X
8SHfP459//gIHuAm9Tk+6vvHCfUWH/P94xZO8KLvH6ec3xxe9v3jLvdzFl+g
/nZsOX6A3zgv++1cPSxeZf4afpP5F3Hmzx+/fZ7v13DP3x/8DucX4vy8/L7w
xrPid/31xn3mO3zpPJ+neMC4xe/75wUPOT+DP/DXAzvfP758Xr5eK58Rj3z/
+EN8ERecj8Uf4wSv+/uDr/jnEZfn2b8Gf8Lxrx4Sj5m/hj/l/HI8Oc/+MPia
7x9POR+Dr5+X/VpCHCzx+fe0eNsSX+/imSXe3/H2JZmf4wr1Fu/ACa4usR8L
3rnE/cchxw/wriV5fq4+Ja4tmY10eDfHz3G0JM/PCt5LP/O4Tr3B+6mfxcb3
/6T4gO8fN5bk9bCGDy1x/3FMPxYfwQlu0s8cPko/IU5YL8DHOP7VhriF1/Ci
7x+n/vrjZerncZfzMfjCkjw/IbbU3zgofoPzK/Eqx3f4Te5XjjOu3wp+2/eP
e/7+43eon8U59QF+l/MrnxD3me/wJepzPKDe4vdxgodLfv8O8Qf++cPOP3/4
8pLsb1Q+Lh5R7/CHHD/HBa8Hiz/2zz9e53mbw1d4HmZxyfUO8Cc8b1cPiMfU
r+FPqc/xxD9/+Jq//3jq+8fXOb8QB8u8/z4m3rbM84dnlrn/eDvOcWWZ+493
LHP/cXWZ9x+8k/VmcUh9gHfh8lFxbZn7j3cv0z+OsMV7l+V+JLjO+c3h/XgW
G84vwAeYXz4ibnA91vAhzi/H8TLPHz7i+8dN3z8+ikOcsF6Aj9FPacQt6h1e
ZL0cp6xn8TL1Ce5y/Qy+wHohttzPAL+xbL68sd6ceHXZ7x8lfpN6g7Nl9p97
WPz2Ms8r7rG+xe8sy/M9h3M//yHxu/TvcN9fX3zJz8cDf//w+/553S8ecj4r
+AOul8HOz8eXl+Xz1D0oHvnriz/01xMX1Af4Y3/+D4jXOb7FV/z1w+Wy7PcX
4E/89btfPPb940+5PwZP/Ou3Lr627PdnE0+xxdeXzZ9tzMdBm/7xtjbXb594
pi31Fm9v83rClbbff068o83r9T5xtc1+hngn4waHbfZ/xLvasj+ku1dc4/ws
3t027K8njjh+gPcy7vaK6232k8T7/fljw/kE+EDbbKS7R9xoy/O2gg9xPgbH
fj4+Qv3aT8VNjmfx0bZhf0Nx4q8/PtaW+7l2t7jV9vsnihc5nsEp4zci8bK/
f7jr18cX/PXDlvMJ8BvMt3vEq22/f6T4Tfq1PxFnbb//pPjttuwXanHP94ff
8c/DbnHO/bhxl/jdtt8fU9znfAN8ifqVH4kHbRNu/A/8PvX2h+Khvz418Qdt
v7+n2LVNdeN/4Mv+et0pHvn18Ydtv7+ouGj7/UfFH7f9/qTi9Tb7s+IrbdkP
1u4Sl/75x5+0/f6o4nHb758q/rTt91cVT9p+/1Xxtbb5t43rg6dtv3+r+Hrb
7+8qDjp+/1fxto7fH1Y848e/Ld7e4Xn/lrjS8fvPind0/P604mrH718r3tnx
+9uKw47f/1a8q+P3xxXXOn7/XPHujt9fVxx1/P674r0dvz+vuN7x+/eK93f8
/r5i0/H7/4oPdPz+wOJGx+8fLD7U8fsLi+OO+auN490mPtLx+xOLmx2/f7H4
aMfvbyxOOn7/47UNH7t5/TdegNfFrY5h/2TxYsewv7I47Rj2XxYvdwz7M4u7
HcP+zeILHcP+zmv/D2Lrrz8=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
/YZdLN5uDgiLXif1G/axKJ215MDX0VK/4RCL2Qmupq4dquo1YjG5W/mvNS5I
fYZzLOpW9KhUhUo9hkssrqQnWCaUSf2Feyzubz0/3TmmPY1YHFIN7qe/J/UV
XrGo99ygGpos9RXqWLTfWz4j/J8WdHAsCrpeeTvnXwdaE4tnl63fOv7XgNbF
osWfm19k3K5D62OhuXmps92j6nRGLHpZNzUf+ugZ6xsssTg/oWD3pb//HMj3
Pxb7bynHWc+QHYvfXijnW/n+x2J3mfLv03mxuHVTGZ/Oj8VJN+X50YWxCDqk
PH+6KBarK5X50dZYvKmpzJ8ujoVrgfL60CWxqJikvH50aSyinyuvL10Wiyk9
lNefLo/F4GTl/aErYpE1V3n/6MpYPM1X3l9aFYehO5T3n7aLQ9oc5fNB28fB
caPy+aEd4lC3mfL5op3icISfP9o5Dm26K59P2iUOJX8pn1/aPQ7/TFY+3zTi
sDdG+fzTXnEo/qj8fdDqODjMUv5+6OA4hE1T/r5oTRwidcrfH62Lw6LTyt8n
rY/Dav790hlx+I1/37QlDs/5909nxcEzSvl+oLPjYHmgfH/QuXH4j98vdF4c
wmcr3z90fhyWlijfT3RhHLyeKN9fdFEcvJso32+01fbv/ah8/9HFtufjoXw/
0iVx+MDvT7o0Diu3KN+vdFkcgk4o3790eRx8f1S+n+mKOHQoVL6/6co47OP3
O63SIcRH+f6n7XQ4slH5faDtdbgzV/n9oB10yCxVfl9oJ5unKL8/tLMOT/j7
RLvocIK/X7S7Di0bKr9vNHTwm6r8/tFeOnzN30darcM9/n7SwTrs5e8rrdHh
Ln9/aZ0O//D3mdbrsIG/33SGDtXeK7/vtEWHFmeU3386S4e4BOX6gM7WYRqv
H+hcHQp4fUHn6dDbqFx/0Pk69PlNuT6hC22vJ69f6CId6k1Urm9oqw6feinX
P3SxDs95fUSX6DB5iXL9RJfaXk9eX9FlOqzk9Rddbps/r8/oCh0e8PqNrtTh
Aq/vaFU8tvH6j7aLx31eH9L28Wg0Rbl+pB3iMXiYcn1JO8UjndeftHM8nJ8q
16e0SzxW8PqVdo/HSl7f0ohHLq9/aa94xPL6mFbH4yyvn+ngeHieUK6vaU08
9vH6m9bFo0u2cn1O6+PxDa/f6Yx4BKlK/399T1vicZvX/3RWPPbw/oDOjscS
3j/QufGYyfsLOi8eDc8r9x90fjw6uSn3J3RhPGq7K/cvdFE8Bu1U7m9oazw+
8P6HLo5H18vK/RFdEg+Pq8r9E10aj0zeX9Fl8Ujk/RddHg+7kcr9GV0Rjw28
f6Mr4xFeS7m/o1UJyOH9H22XgK28P6TtEzAuU7l/pB0SsIH3l7RTApq+V+4/
aecELOX9Ke2SAIfFyv0r7Z6ACt7f0rD9e7z/pb0S8JVWuT+m1Qno/KNy/0wH
J+AD769pTQL+4/03rUvASN6f0/oEuPL+nc5IQDbv72lLAobw/p/OSkArrg/Q
2QmI5/oBnZsA51fK+gKdl4A9XH+g8xNwgusTdGECUrl+QRcloKOHsr5BWxMw
iesfdHECFnB9hC6xvT9cP6FLE7Ca6yt0me3xXH+hyxNQfbOyPkNXJKD1T8r6
DV2ZAF+u79CqRHz6n7L+Q9slopzrQ7R9IqZz/Yh2SEQnri/RTomI5PoT7ZyI
O1yfol0S0WG8sn5FuydiAde3aCQin+tftFci1nJ9jFYnwvEHZf2MDk7Er1xf
ozWJCOH6G61LxECuz9H6RPhy/Y7OSMRDru/RlkTs5/ofnZWIblwfpLNtj+f6
IZ2biAFcX6TzEjGI6490fiJGcX2SLkxEAdcv6aJEhHN9k7YmIpnrn3RxIvpx
fZQuSUQjB2X9lC5NhDfXV+myRKzm+itdnohzXJ+lKxLRmuu3dGUiVnF9l1Yl
YRzXf2m7JLTl+jBtn4Tqj5X1Y9ohCRO5vkw7JWEn159p5yQc4fo07ZKErVy/
pt2TsJ/r2zSS0ITr37RXEnZwfZxWJyGD6+d0cBJyuL5Oa2zjc/2d1iXhPdfn
aX0SDnH9ns5Iwid+yvo+bUlCd67/01lJ6MX9ATo7Cbe5fwDFuUko5P4CnZeE
vtx/oPOTcJ77E3RhEnZx/4IuSsIK7m/QVtvry/0Putj2/Lk/QpckQc39E7o0
CZ7cX6HLkqDn/gtdnoSx3J+hK5IQx/0bujIJHbi/Q6uSEcr9H9ouGVncH6Lt
k1GX+0e0QzJU3F+inZKxn/tPtHMyBnF/inaxHef+Fe2eXLW/RSMZe7n/RXsl
I537Y7Q6GZO4f0YHJ0PP/TVak4yb3H+jdcn4gvtztD4ZS7l/R2ckozH392hL
Mg5y/4/OSoaV+4N0djKac/+Qzk3GS+4v0nm2+XL/kc5Phpb7k3RhMgq4f0kX
JeMb7m/S1mRkcv+TLk5GI+6P0iXJaM39U7o0Gcu4v0qXJSOO+690eTKCuT9L
VyRjBfdv6Urb+dzfpVUpOMD9X9ouBSO5P0zbp+Br7h/TDiloyf1l2ikFau4/
084pWM79adolBVruX9PuKXjJ/W0aKYjj/jftlYJn3B+n1Sl4xf1zOjgFBdxf
pzUpcOH+O61LQXfuz9P6FLhx/57OSMFk7u/TlhQ84P4/nZWCSNYH0NkpaLBA
qR+gc1NwnvUFdF4KtrH+gM5PQVPWJ9CFKUhn/QJdlIIi1jfQ1hQ4sv6BLra9
/qyPoEtSkMH6Cbo0Bfmsr6DLUjCE9Rd0ue35sD6DrkjBUdZv0JUpmMf6DlqV
iiTWf9B2qejA+hDaPhULWD9CO9gez/oS2ikVz1l/QjunIpT1KbRLKh6wfoV2
T8Um1rfQSMUQ1r/QXqmIY30MrU7FItbP0MGpiGJ9Da1JxVXW39A62/msz6H1
qVjN+h06IxVtKpX6HtqSilus/6GzUrGS9UF0dircWD9E56ZiK+uL6LxUZLD+
iM5PRftZSn0SXZgKu3ClfokuSsVk1jfR1lR4sv6JLk7FLtZH0SWp6Omg1E/R
pbbXm/VVdFkqsll/RZen4jLrs+iKVHxk/RZdmYofWN9Fq/R4wvovuoYeE1gf
RtvpEcT6Mbq2Hp//rNSX0fZ63GD9Gd1QjzDWp9EOevRk/RrtqEfblUp9G+2k
R+11Sv0b3VaPu6yPo531GMP6ObqLHi6sr6Nd9FjC+jvaTQ9/1ufR7rb5sH6P
9tBjMev7aNieT12l/o8epoeO9YG0lx7TWD9I+9iOs76QVutxk/WHdIAe7X5W
6hPpYD02sn6RDtOjgvWNtEaPfNY/0lo9/mZ9JK2zPZ71k3SSHltYX0nr9bD7
Uqm/pE16PGd9Jp1he/1Zv0ln2t4f1nfSFj0es/6TnqWHgfWhdJYefqwfpRfo
Ec36Ujpbj8OsP6Vz9MhgfSqdq8d71q/Sa/RIZH0rnaeHifWv9EY9klgfS+fr
8UkTpX6WLtDjHOtr6ULb/Fh/S++2zYf1uXSRHlbW79IH9Pid9b20VY9VrP+l
j+vR5KlSH0wX66Fn/TB9Wo9/WF9Ml+ixl/XH9Hk9brM+mS7Vw8z6ZfqqHotY
30yX6eGgvA/i27bPM+uj6XI9DrF+mn6oxyDWV9MVts8n66/p53p4sz6brrTN
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
/wABg3U3
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         Dashing[{Small, Small}], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJw13F1sHWV+x/Hpbrpxt+n6LJvduLvZ9YENG8MGfIBAzBLwAwRsSMAnIcQn
rx7b583v49f4AilzgYovUHMqUeELKk8rKnyB5FMJCatC9Vwg4QvUnKpIWBWS
pxIqVoWa0y4tbps2beb3/efG55P/8zz/52Vmzng8M3cPTZ0pfcfzvOh3Pe/O
T/v31F88+r+3r5Wd1Oj+9vb//7tajuWk++s7njLvdP/zHVfMTZUfMH/TvffO
j4J5t/ubO/E+863u/77jHrPn0vLO/B33n3fix8x73J47P3Lm77m0/mFzi/uv
O243f9/97x0fMO9zt+641fwDea854/7njm+X8A81D7vmu9TeTfOP5K/M+11a
fdv8Y/c7d35smX+i9m+YD6j9TXOb4hvmP1R83fxTtb9m/pn8nvmgvGL+ueov
m3+h+HVzu/K9Yc6qfIjDrOJXLX636k9Z/G6Nv2Lxe+QBi9/j0m2rYPFfqv28
xX+p9nssfkhxZ/FDmr8ui98r5yx+r/IdtvivtJ7tFv+V2muz+GHla7X4YcVb
LN6h8d0uEu9QfBd796n9mxa/T/3Zsfj96s+2xfHnFv+12mtY/NfqzycWP6J4
bPEjyvehxR9Q+TWLP6D237P4g/KKxR/U/vG2xTsVv25x/IbFc8p3DTt81crn
WH8c59SfitV/iPW3+rjf6j+k8n1W/yG112P1H1b5bqv/sMofs/oPqz+dVp/4
Yav/COtv9R9h/7f6j7D+Vv8Rzc9eq39U5W8PU/+oyn+LQ3wTx/gr7D2q9rat
/qPqz+dW/1H2f6v/qPJ9YvUfU/kNq/+Y5udDq098zeoTf8/qH9Pxb8XqH1O+
t63+MfZ/q0/8DavfJV+z+l0az1Wr3+XSn4HV71J7Fav/uOoPWP3HWX+rj/us
/uMaT4/V/w3rb/V/w/pbfdxp9Sl/2Oo/wfpb/SfUvwNWn3ir1X9C9fda/eMc
/4eof1zj/xaHxG/i+DjHf+w9qfnftvpPqvznVv9J5b9h9Z9U+59Y/afkDauP
P7T6T7H/W338ntXv5vhv9fHbVr+b/d/qE3/D6jvFr+Gs4/hv7Tn1fwr7TuOt
WPt4AEeU77d8zqU/8zgh3mP5n5a7Lf/THP8t/9PqX6flf1r5Dlv+pzVf7Zb/
adbf8tN+q+UnvtfyP8P6D5L/GdYfu2c4/mP/GdYfh8S3cUT8cxwTv4ET4p9g
71l5w/I/y/Hf8uM1y/+sxv+e5X+W9bf8lH/b8tP+dcv/LPu/5T+h8V6z/Cc4
/lv+Eyo/ZfmJVyz/Caf/t/yU77f8lO+z/CfUnx7L/5zyd1v+5xQ/Zvlxp+V/
TuM9bPmf4/zP8lP+gOV/jvW3/MT3Wv7nFb/tk/95xb/FjvhN7D/P8R+HxLdx
9Lz68zmOn9f4buCE+p9gr4fjv+Xv0XyuW/4e1V+z/Pg9y9/D+lv+HvX/bcvf
o3zXLT/l37D8vXz/W3581fL3ajxTlr+X73/LT/kBy0+83/L3an/OW37K91j+
F1h/y/8Cx3/L/wLf/5YfH7b8lG+3/MQPWH7ab7X8L7D/W/4X9fvG7QHyv+h2
0/XG7kW+37H/oubjBg7xBo7wGo5f5PwMJ7R3HXsnOf5a/pOKT1n+k06/X1n+
k2q/z/Ljbst/kvmy/MTbLf9Jzocs/ynFb18h/ym2d+xOqfw29k9pvm7g8JTm
awNHeA3Hp9y/pePHCfWvY+8ljj+WH09Z/pfYviz/S2q/z/K/5NLfL7stP/U7
LT9ut/zUb7X8L3P+d5n8L2s+bmL3MuPH/suMH4d4A0cvc7zGMe2v4ORll/6s
Ya9PDi1/H+fblr9P/R+w/H2cT1v+Pr4/LX+fxtdp+anfbvkp32r585q/25fk
TF75b+JsnuMbzuXV/g3sKL+B88TXsJ/X9ruCgzzbPw6JX8M14lM4Iv8ArucZ
P45xN27ktR6dOMmz/eMmbsXeaY7/Fxk/vomzp9XeNs6d5niO3Wm2f5wnvoZ9
vIKD0zoe1nBIvmu4hqdwdJrza1w/rfnuwzH5u3GDfJ04oX47bhJvxd4Zzn8u
MP4zjB9nz/D7Lc4Rv4HdGad+4PwZja+Ofcqv4OAM+z8OiV/DNdoLcER8ANfp
Tx+OcTdunNH6duKEeDtu0l4r9l5h/z/P+PFNnMXbOPcK64/dKxz/cf4V9b+O
feqv4OAV5b+OQ+pfwzXKT+GI8gO4/grbP45f0fbQjRuU78QJ5dtxk3gr9s5y
/aPA+PFNnD3L+HHurMbXwI74Bs6fZf2xT3srOMDXcYiv4RqewtFZtn9cJ18f
jnE3blC+Eyf0N4ub9C+DvVfZ/vsZP76Js3gb515V/25ghzdwHq9h/1Xlj3BA
/DoOX+X7D9eIT+EID+D6q4wfx7gbNyjfiRPi7bj5KuPH3jldX/Vs/OfY/s8x
/nPqf4Jz5zj/we6c+27aD5yn/hr2iUc4OMf4cUj7Ia7hAEfndD3Rx/VznE/i
mLjDDeI5nBDP4ib9yWCvn+3/Vcbfz/hxtl/1E5zrV/sN7HCM8/3qfx37xCMc
9Ot6dw2H5LuGa/3ud9NyOOpXf31cJ57HMe073KB8Dic4i5s4g70C4z/L+AuK
N3G2oO0jwbmC5qOBXUHjjXG+wP6PfeIRDojXcFhw30t/4hrtBzgi7uM6/cnj
uOBa0n7gBv3P4QRncbOg+ctg77zs2fjPq/3mK4z/vNYrwTnKN7A7z/aP8+cZ
P/bPq38RDmi/hsPzGm+Ia7Qf4Ij2fVwnnscxdrhBezmckD+Lm5TPYO+Cyns4
c4Hxn2H8xBOcI97A7oLai3H+glM/sX9B8xfh4ILGU8PhBfUvxDXaC3B0QfPp
4zr58zimvMMN+pvDCeWzuIkz2Luo/ng4c5Hxn2b8F9V+gnOUb2B3UeONcf4i
6499HOHgIvs/Di+y/eMa5QMc0R8f1ymfxzHtOdy4yPhxQv+zuIkz2LvE9o8z
l9j/84z/kvu9tB2cu8T+j90lrV+M87iOfdqPcEC8hkPyhbhG+QBHxH1cp34e
x5c0Hw43cA4nlM/iJvEM9i7z/Yczl93303p9jP+yy6R5cO6yxh9hd9n9OO0/
zl/WfPnYv+xUDgeUz+LwsvuD9AOu4eRlxn9Z/Y1x/bL7Qfr/OKZ/IW5Q38fJ
ZY6PuEl7WexdcT9Kf+LMFffDtN5LjP+Ka03z4NwV9/tpfuwoH+L8Fbc/zY/9
K+qfw8EV9S+LQ+Ierl1xd6X5TzF++hfj+hW2JxzTnxA3sI+TK5pvh5tXNH9Z
7A1ovT2cGVA8Ocn4B9TfGOcG1J8IO+Ihzg+4fWl+7A+oPw4HA+yPOKQ9D9cs
/4uMn/7FuD7gDqT/j+MB1h83BnQ88HEyoPVzuDngfprmx56v/nq4xWf+X2A+
cIzbfPUnwlnf/STNjzso7+Oc79rS/LjLZ/vDzvLjXl/bT9Ir533mHxdwhH1f
+2+Iq77m08cB/XV4EWdxSP88vOQz/z1yzdf6xXjZxo8jn/nHq7Tn47rP/ofX
GW8Wx77W08Ob1E+elxu+1jPGW8xvhBObf7xD/33ctPnHu7721yz2BmUPtwyq
f8lzcmaQ4x9uG2T7w9lBzUeIOwZZf5wbJD/uIp7FbpDjH+4dZP5PyHnKx7gw
yP6H/UGuH+Aq9X0c0D+HF6mfxSHj9fDSoPaX5Fm5xnhjvEx/IhwNcvzBq4Ps
f7iOHV5nPrM4pr6HNwe1vSTPyA2bf7zFfEU4oT8h3hnU8c7HTRs/3qX9LPaG
+P7HLUNsf0/LGRzjtiHtvxHODnH+hjuGtD35ODek70OHu3AWuyGtl4d7h9j/
nZwnHuPCEOeT2B/Seoa4OqT9wccB9R1epH4Wh0Oc/+Il+hd3y7UhrX+Il4fc
g2lxHA25e9IPeHXIdaT1n5LrzEeI1ynvcDzkfpV+wJuMJ35Sbgy5X6b18daQ
1t/hhPXx8M6Q+3la/7jcHNLxPsS7Nh/YG2b/wy3Drj2t/4ScGWb7wm3Dat/h
7DD5ccewxhv/Rs4Nc38B7qJ9h92w9jcP9w4z/sflPO2HuDDM/oR9ynu4Oqz1
j7vkYNjdndbHi8P8voxD6z9eGmb9jsm1YY7veHmY/QlHw+4P0w94ddgdSus/
JteH3X1pfbw+rPVwOMYe3mQ+4kflxrD7RVofb1l+nLAeHt4Z5vvqqNwcdvem
9fHusMum9bFXZP5wS1HjiR+RM0WOb7itqOOlw9ki+w/uKOr4Ez8s54ps/7ir
yPV67Ih7uNfqPyTni+5naX1cKOr3AYf9ItsvrhaZv5wcFLU/h3ixqP3N4bDI
/OOlIt+nnXKN/B5eLmq+wwfliPnw8GrR3Z/GH5DrRc2/h9eL7sU0fkSOrX28
WXTH0viv5UbRdaUf8FZR2394v5wU3dX0A94pOo3rPrlZdF+k13c65F0bH/ZK
Op57uKXE+A7LmZLWw8NtJXc8jf9KzpaYP9xRov175VxJ8+HhrpL7bXo8OCS7
ksbr4d4Sx7tfyvmSezT9gAsltud7ZL/kHks/4GqJ4/XdclByR9IPeLGk/TPM
ymGJ71+8VHJ++qFdrpV0ffb2z+XlkvZHD0clN5Z+OCivltxz6YefyfUS368/
lddLbjttr02OGa+HN0vuofTDAblR4u9TP5a3Su6P0w84KXH97kfyTknHGw83
S24k/XCXvFty76TlM7JXdn+XulVuKbs/Sw+QP5AzZfcnafz35bayi9IP35ez
ZXd/egBokTvK7qn0w/fkXNn9c3qB87tyV9n9edr+d2RXdv+qP8BspO4tuxfS
+C05X3bNdAPdlQtl95O0/G9lv+z+Whcs5GrZ1dIvrB05KLuP0wNaIi+W3cPp
Aa8hh2X3R6Nv/uKLv3z/b1IvlV1O8e7UtbL7e52QyMtld1e6ge3IUdn9MF3g
prxaduvpgv1Wrpfd++q/vF52K+l83ZLjsjukP0DIm2X3kebHpW6U3d1p+Lvy
Vtk9nsa/Jydl96epW+Sdsvvb9MP35WbZ/YPWT94tuye0vrJXccPpz4zcUnF/
lX7gPuhMxZ1NP9wlt1XchfTDj+RshfOX/XKHxX8s5yru79IPP5G7KhwvuQ/a
VVxFDcu9FbZnnK/ofMv7qVyo8H3xM9mvuJPph4NytaLzR7sPOqi4J9IPv5AX
K+yv7XJY0f0Jt/FSxT2e/j/3RdcqOp55d8vLFXc4jeOowvHlHnm14v4lPb7h
eoXzW+6DXqd8iOMK1z+4D3qzwt+DcKPidtL+4a2KeyCtf6+cVPR94nHf8w7z
Y/dBNyvu1+kH7nverXC9EXtVjj/c99xS5fsSZ6rM731yW1XzdQ1nqzqf8O6X
O6qMD+eqXF/hPuiuKt8P2FVZL+6D7q26f0zbx/kq3+8PyIWqtocQ+1WnHedB
uVp1z6ZxHFR1vPc65cUq1+twWOX6X05equr7yuFale9bvFzl/AhHVbbHh+RV
4g7Xq5x/4nXmN8Zxle3jYXmzyvkhblQ5/8FbVXcwrYeTKvvfI/JOlfNr3KR8
iHer2n5j7I2ovHdUbhmh/zgzovUNcduI+hfj7Ii2R+9RuWOE329wboTzd9w1
wu+z2I2oP95jcu8Iv5/g/AjXd3BhhOth2B/R+LxjcpX+ORyMaPsK8eIIv8/j
0MbPfc5LI1yvwbURfX/bfdDLI/y9B0fEvcflVfI5XLfx4/URrmfgeITj4W/k
zRGtt8ONEbYfvMX6xDgZ4fz/CXlnROdHDjeJh3jX5h97o5x/HpdbRnU8cDgz
Sv9x2yj5cXZUvy95T8odo5pfh3OjnK/hrlFtrzF2Vv8puXdU5y8O50c5XuDC
KNs/9kc5f+uWq6Nc78TBKPs7Xhxl+8HhKPPPfcpLtJfFtVFtfw4vj9r1BTmy
+cGro1yfwvVR/X5k90Gvj/L3RBxT3nta3hzV9187boxy/RxvMb8+TkbZvvGO
5cfNUX4fx7uUT7A3xvHrGblljPtFcGaM/LhtjOtrODum+Q5xB/EI58b4fQ53
EU+wo773rNw7pu0ri/OWHxfGGD/2x/g+w1XiEQ7GtL4xXsQJDumfx33MS+TL
4hrlHV7GPo7GOD7hVcYT4fqYXb+U18mX4HiM84vn5M0xrk/jxhjXe/DWmI5P
Pk7GuP6Fd6gf4SbzHeNd6ifYG+f843m5ZZztH2fGOZ7htnHy4ywOcce4xhPh
3DjXc3AX+RLsxll/7nvuxXYfdH6c+ztwwfJjf5zjM66Oa30iHIzb9Xt5cZz9
D4fjbP+98tK49ucsrhF3eJn++Tga5/sVr47r98MI18f5vsDrNn4cj/P79wvy
5jh/H8ONcb4P8ZblxwnrE+Kdca5P4+a4/f1G3qW9BHsTmk/vRbllgr8P4MwE
11tw2wT7P87iEHdMsP3h3IT6F+OuCa6vY4e9k3LvBH+vx/kJ/r6PC/TXxz75
Qlyd4Po4DuhfjBcn2P9xOMH8n5KXaC+LazZ+vDzB9X0c2fjx6gTHH1yfYPvD
64wnwfGE/f1T3pzg+jhu0D+Ht+ifjxPmI8Q79DfCzQn7+628O6H9M8HepLYP
j/uSWyb5+xTOTJIft02y/eHsJOPHHZPafiKcm2T9cRf57D5oN8n2x33QvZNc
n8f5Sa534sKk/X1d9ie5Pomrkxx/cDDJ3w/xIvkSu++a8Xp5eWmS+0NwjfFn
8TL9y+HI5gevTnJ/Dq5jH69Pan0CHNNeiDcpX8MN+hPhLVzHCfljvIMbuDlJ
ObxL/Sb2pvj957TcgjM4M8V64LYp9S+Hs1NcT8cdU9yfgXNTdv+K3EV7AXbE
Q9w7pf7XcB5HuIDr2Kc/Ma5Oafto4IB8CV6kfhOHNn7uO16ifgbXprh/EC8z
vhyOaM/ug17FeVwnv4/Xp7i/1+6bJl+IN6fs/ii5wfgivIXrOLHx4x3yN3DT
xo93Kd/EXsD4uW95D87gloDtH+8LWH+cobzD+wPls/ug2wK7f00+SPkAZwPu
f8SHAs13DXeQL8JHiNdxLrD77+SjtN/AXdRP8HHiTewCbb8e9wmfoP0M7g3o
Jz5F3O6DzlPf4bOMpw8XiPv4EvEp7NNeiIuB3R8pVxlfhMdZjzoOqB/jucDu
z5QXA453+DXiTRza+nOf8uuB3R8qLwV2/6j8ZmD3l8o15sfht4jn8bKtP36H
8QV2X7SNH79r649X6V+E36e9Oq4Tj/EHgd2fK69TPsEf0d8mjsnncd/xx8Qz
eJP1asef2vaPG8S78We0l8dbAc/v4C/oT2D3VQfc/46/DOz+aHnH1h9/Tf/q
uIlj/E1g92fLu8xHgm8Fdn+37E1z/zveM638rdzH3EK8He+b1nzncIby3Xj/
NN9/uG2a7R8fnNbzH1M4O83+jw9N2/3xcsc0z4/gI9N2f72cm2b/x0dxA3dN
M8/4+LTd3y87+udxn/IJ6mdwr40fn6J8DueJd+Oz5MvjwrQ9vyBfYrxT2Lfx
4yLlr+Mq8RU8jtdwMM3zJ3iO+bmBF5nvbfzatD3fIYfEb+PXyd96Xl6ifDt+
k/KduDbt/iMdP36L8n14GQ/gd2z8OLLx43dt/HjVxo/fZ7xruG7jxx/gG3h9
muc38UfEb+J4mv2f+5Y/tu0fb07b80Pyp2yPnbhh2z/+bNqeT5K38AD+gu0j
wMm0Pf8kfzmt57mu4x3KR/hrXMdN1mMDf2Pjx7vT9vyWfIv6TezN2PNf8p4Z
lW/lvuaWGXt+TN43Y8+XyRni3Xg/9ftw24w9vyYfpP4Uzs7Y82/yoRn2f9xB
fAUfmeH5QpyjvQ18dMaez5O7qL+Nj9Ofm9jZ+PGJGXs+UO6lP+34FPFOnMfd
+OyM9oc+XLDx40uUn8I+voaLlL+OqzP2/KQ8jtdwYOPHczP2fKa8SPvb+DXK
38Qh8dv49Rl7PlRemrHnR+U3mY9OXJtx/56OH781Y8+nyss2fvzODMd/HM3Q
D/yujR+v2vrj98m3huvEN/AHM/Z8rrxu48cfzdjzvXLMfN3GHzPe1ivypo0f
f8r6duIG8W78Ge334a0Zvv/wFzZ+nLCe1/CXtv3jHfq3gr+e0fO6a7g5Y89f
y98wHzfwLvFtfGvGnu+WvVmO/3jPrOa3dUBuId6O980yfpyZZf/H+2c1nj7c
NmvPr8sHZzn+4+ys+ncNH5q15+Pljll7fl4+Msvz1Tg3y/N3+Cj9v4G76P82
Pk57N7Gjvdv4BPG9vtw7y/Ny+BT5DuA8/W3HZ/FhXJi19xfIl+jPMewT78ZF
2u/B1Vl7f4I8Tvv9OKC9ATw3a+9nkBdpfwq/Rv2rOJzlJ36d+m/gJebjOn5z
Vtv327hG+RX81qy9n0JenrX3V8jv0N6HOKK9Dfwu/gSvztr7M+T3Z+39GnKd
/Nv4A8b7FV639cYfzdr7PeTY1h9/TPt7B+VN2m/Fn1L+AG4Qb8efET+Mt2z9
8Rez9n4TOcHd+EvWoxfvsD304a9n7f0qchMP4G8oX8G7s/b+FvkW47uKvTl+
/8B75uz9MHLLnMpfx/vm7P0ycmbO3j8j7yf+Hm6b43wVH8Qf4uycvf9GPjTH
vOOOOXt/jnwEf45z9HcbHyX+Fe4ifhMfJ9+32NH/2/gE9fcOsQ5z9v4g+dSc
vV9IzhNvx2fxYVyYs/cXyZfwMezTv25cnNP23oOrxPvwOO7HAR7Ac9Sv4EXi
U/i1OR0vruKQ+Q7x6/T/Dbw0Z++Pkt9ke3gb1yi/gt+as/dTyctz9v4q+R38
IY6Yzw38Lvk+wau2/vh9yn+O67b++AP8FV5nfE38EfW/xbGtP/7Y1n9Y3iTe
ij+lfwdwA7fjz+bs/WTyFvU78Rdz9n4zOSFfN/6S+j14Z87enyZ/TXv9uMn4
fPwN7Vfwrq0/vkW+q9ibt/e/yXvmWX/cMs/+j/fN834hnMEreD/tvYfb5u39
dfJB4h/iLN7Ah+bt/Xhyx7y9P08+Mm/v15NzeBsfnbf388ld88wTPj5v7/eT
3by9/08+gfdyH23vvL0/UD5Fe204j7P47Ly+rztwYZ71x5eId2F/3t5/KBfn
7f2IchX34XHyFXBAfADP4QpenLf3N8qvzdv7HeWQ/Nfw6/P2fkh5iXw1/Kat
P64Rj/Bb8/Z+SnkZr+F35nm/HY6Ib+B35+39mPKqrT9+n3xbuD7P+S3+gLjd
B70+z/VO/BHz8S2O5+39n/LHeG9J3sSt+FP6cwA3iLfjz/BhvMX4OvEXzP8x
nNBeN/6S8j14h3gf/pp4P27a+uNv5u39rPIunsK38FXsLehniPcs2Pth5Rbi
NbwPL+MM5Vfw/gXWH7dRvo4PLmj7X8fZBY7/+BD+BHdQvoGPEP8c54gn+Cjx
r3DXgr2/Vz6+oOt7u9jRP4/3H59Y4PwP9y7Y+4PlU7R3AOcX+PsQPkv+w7iw
wPVifGlB2/8x7NMfh4vMZw+uLuh+yz48vqDrrwUcLHD+j+cWdP9pBS8uuH9K
1x+/tuB4v7P7P7MnWcY=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         Dashing[{Small, Small}], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJw13HdcU+fbBvBYR2mLisWBGzeuioqKino5QUXZCIIQIEDYmRTrihurVdzU
UdE6sC7cuONoRX9aqVWLq6a1KlWruHG/ec91p//08/0ckyfPSUjOeZ77vlrE
ZwUnfqJSqQqqq1T//3/Hf3O6Pjh09Y/f+lOlA7S3NzQe/OjZMdo2wPnF1Y5O
j6pa6fIBzf7a+CLnn5riigHut63zm/znKn4+wOx1/e2se27iygH1j5ZPi/mr
qfjdgEmVetXgjBZiFV5WH9hH928r8SeI2nppqkdiW3E1dPwm1TLO5iGugezn
XStVUR3FTtjQtfyXapc7iz9HQkZ3U+d2nmJnzMlddPibhK7iWqgsDI1OWNNN
7AL99hczbde6i+ugeObFKQ/q9RB/ibbr/TZMCuwpdoVro3PJed/2EtfF7+XP
Apqe8hbXg2uXiR+avu8tro8Nv/frPK9HX3ED/DehcVFcho/YDRcTb5vz1/cT
N8TJj23mdLjeX9wIHWdYnOY4QdwYmimPC1v/6HATGLT1xiT2GyhuitXnJoT4
/eFwM6ztOfrRWd0gcXNcrbNu9v3PBovdUTG7eMH6dWKLO+Li+8x+2WeIHG+B
+Q8yPt68KLa0wOu/klZEpA6V4y2hnen5habKMDneEstKn9T7sFysaoWIJ1/k
tf7KV463QmSD7urLJ8Wq1ni3a+rkWpF+crw1qvSb9fz8f2JVG1T/aeTNOtOG
y/E22LopOrGs3gg53haan4+fbb5ZbGmLsF1vou/2HSnH28G76OnEDr+KLe1w
Ulux6n6svxz3QKL/VLR5IrZ44Ox69buyqaPkeHu8mj02u9qXo+V4e0wr65C4
ca1Y1QHzJ0XkHfEMkOMdUL1azVK/Y2JVR5xJMc36sW2gHO+IDnXvr4nKEKs6
IWLyXe9zux3HO2HB51dvPn/tON4ZL7dUb3V5QJAc74xDpcnr02eKVV/hsfuS
6ofOOo5/hSttv39yrHawHO+Cn17/2WhCqNjSBar31fs+zHcc90TD86e+dL0p
hidSUn9OeeweIv/eE1MPTq01VSO2euIHXfMrpzeJVV3RxzBy1cn7YnRF1zN1
B5s6h8rju+Lnnqd3Xc0SW7ui/tc/X322U6zqhs/8EraeeCZGN7wYeKz1sB5h
8vhuMC9aNWhyttjaDac2+XyRtl+s6o5F173nOFeK0R1/tI8+F+8dLo/vjoeq
Sf9m5Iit3XG615g3nYvFKi/s90pq+uMrMbxwN+CY+XzPMfJ4LzSa9LDDNrPY
6gUMOa0dtEes6gGDa2jsd0/F6IE2T1cPmu8ZIY/vgSWrF40Ymim29sCP9W7t
2rVFrOqJJQXnDl4pF6MnEvybbdjZJlIe3xPnnj7aPzhebO0J358X+Hz3g1jV
C/sTk6fMvyZGL3TM++2Cb/2x8vheWBjxccqBILG1F0JVZf/cnidWeeN+0rWw
06fF8MbW+h87aT6Jksd7Y9aTFb8c9BFbvfHNpEFT/5ctVvVG7UvbjiwrEqM3
PLxW/9nkvuPxvVHT+6hfTKtoeXxvDNqxMD4qWqzqg3tNgpfUXSpGH3S6ds33
2/NiSx943FhQfrj6OHl8H+ibDru9tZ9Y1RdRmzttHGsWoy+qDN9X8MtWsaUv
Fl2YPvjJbcfj+2JMjQDV9UYx8ngfzPG6MnxGkBg+yB9csvi/2WKLD0ZP3Bnc
4KjY6oNl18vfVnnueHw/OL2fVH17+1h5fD/My293t3Gs2NIPLgu71fNfIrb2
w72F+s8HnBGr+iPfu3P/F+8dj++Phppvl/RqqJbH94f7rgbrwruLrf3x5l5S
tYhRYtUAPBjTv7JvshgDMGzDhIOfTHU8fgC6JdTM3brC8fgB+K7i4ereexyP
t3+cF7j1/um82B1ovO+7ZR/uOp4PUK8c/KynKo5WA21etZkX0lBsAYre1v4h
tJu4ADg+7XRin5FiK6DPrGxeXSO2AS19PD/bO1GsGojskqvjRiwVuw/Et4N6
j/15mxgDsWSUtk/bXxzjD8TSgOA+GX86xh+I6Q+Klq546Rh/ID5scMrdXite
xh+Ixrs3+G9uK7YNRMjD/GZz+4tVg1D9vz3eoeFi90G4Gzr3crVMMQZhylep
XVbPFKsHocP4SEvT1WLLIMRedvtk1h5xwSD8FdT00ZX/OcYfhJaRCya53HaM
Pwgzjvj92+2NY/zBKLx9MaV/nQQZfzDyP0vs1d1DjMGo/9Pfc+oMEKsH49Cb
q/lXw8SWwYicMW3l3HRxwWB4XzpU0m662DoYo4Y5j9n+vdg2GHfvrJnYvEis
GoI9ib5ZE35xjD8EnTp/rTlxwzH+ENz9ZtjC508d4w9Bt5WZHb78TCPjD4FP
txGaxs3FBUMwPP+SwaWH2DoEm/02z3kyQmwbgpi4qjeOqsWqoUjtfmRVTrbY
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
p+B8oHJ/Q1tTUIP3P3RJCi61Ue6P6NIUrPVV7p/oshTU4/0VbUtBZ95/0eX2
5+P9GV1hH0+t3L/Rlfbzxfs7WpWKx8uU+z/aKRVHc5T7Q9olFUmfKvePtFsq
rvgp95e0eyquVlfuP2mPVNz/Vbk/pT1TYbup3L/S3qnw4v0tjVRcmK/c/9J+
qcjLUu6P6cBUJPL+mY5IhRvvr2l1KsJ4/01r7eOnKvfntC4VfXj/Tuek4td+
yv09bUnFZ7z/p3NTsZjrA3ReKlK5fkDnp8LYSllfoAtSMYjrD3RhKt4+V9Yn
6KJU9OP6BV2ciszayvoGbU1FB65/0CX28/lCWR+hS1Nx/oyyfkKXpWLrcWV9
hbal4nqQsv5Cl6eiKtdn6IpULO2urN/QlakoG62s79CqNDwZqaz/0E5p0HJ9
iHZJQyeuH9FuaTjfU1lfot3T0DRMWX+iPdLwWKesT9GeaXjQU1m/or3TcM9V
Wd+ikYbLfyvrX7RfGoJ3K+tjdGAaRu1Q1s/oiDS8a6+sr9HqNPTm+hutTUNr
rs/RujSsOK+s39E5adhXqqzv0ZY0xHP9j85NQ8EyZX2QzkvDVg9l/ZDOT0PL
tsr6Il2Qhlpcf6QL03Cgn7I+SRel4eBBZf2SLk5DL65v0tY07NYo6590SRqm
n1PWR+nSNPw9WVk/pcvSgChlfZW2pUFdQ1l/pcvT8GGXsj5LV9jfryPK+i1d
mYb52cr6Lq1Kx/4+yvov7ZSOreeV9WHaJR3ltZX1Y9otHcu5vky7pwNcf6Y9
0vHwU2V9mvZMx7+blfVr2jsdT5yU9W0a6Zj/Tln/pv3S4TxCWR+nA9PRs6uy
fk5HpKN5lLK+TqvTUbBYWX+ntelQTVXW52ldOrpw/V7W/9Nx7UP4/6/v05Z0
1L+srP/TuekIT1P2B+i8dNRrquwfyPp/OgyblP0FuiAdnyUo+w90YTrSRyj7
E1a+/+nY56rsX9DF6UhZoexv0NZ0bD6m7H/QJen4RrX///dH6NJ0DM1W9k/o
snS0aqDsr9C2dNzRK/svdHk6yrg/Q1ekw7u7sn9DV6ZjA/d3aFUG0rn/Qztl
YA73h2iXDKQuUPaPaLcMtLQq+0u0ewbCuP9Ee2RgCPenaE/78brK/hXtnYFj
3N+iYXddZf+L9stAIffH6MAMuJYp+2d0RAaac3+NVmfgfaGy/0ZrM3CU+3O0
LgMW7t/RORmI4P4ebclAK+7/0bkZeMn9QTrPPt/Zyv4hnZ8BA/cX6YIMuHH/
kS7MwK1qyv4kXZSBX/oo+5d0cQZ2cX+TtmagHfc/6RL7+8H9Ubo0Ay82Kvun
dFkGkrm/StsycN5Z2X+lyzPQg/uzdEUGenP/lq7MwOzGyv4urcpEG+7/0k6Z
+LyZsj9Mu2SiD/ePabdMNOX+Mu2eiSzuP9MemRjL/WnaMxNnvJT9a9o7E6mF
yv42jUwkcv+b9stEe+6P04GZaMj9czoiE8HcX6fVmRjE/Xdamwk/7s/Tukx0
5/49nZMJV+7v05ZMhHP/n87NxCTWB9B5mShi/QCdn4ntrC+gCzIxhvUHdGEm
ClifQBfZzy/rF+hi+/lkfQNtzcRC1j/QJZm4vUKpj6BLM9GJ9RN0WSbiWF9B
2zLx7Cel/oIuz0QY6zPoikxUFiv1G3RlJm4eUeo7aFUWglj/QTtlYRzrQ2iX
LPy6Wqkfod2yMJr1JbR7Frqw/oT2yMJS1qfQnlkIY/0K7Z0FDetbaGThQX+l
/oX2y0Is62PowCwcZ/0MHZEFM+traHUWFrH+htZmIYb1ObQuCydYv0PnZGE7
63toSxY8Wf9D59rny/ogOi8LC1g/ROfbH8/6IrogC5+y/oguzMIu1ifRRVl4
NFipX6KLs/DKRalvoq1ZyGD9E12ShWWsj6JL7Wb9FF2WBWfWV9G2LJRVKvVX
dHkWhrE+i66wj5eg1G/RlVlYskqp76JVOjRk/RddTYehrA+jnXSIYv0Y7azD
P4uV+jLaRYd+rD+j6+qwlvVptJsOZ1m/RjfR4VKSUt9Gu+vwVK3Uv9GtdXBm
fRztocNu1s/RnezPx/o62lOHNNbf0V46bGJ9Hu2tQyHr92gfHVJZ30dDh8tP
lPo/eogOS1gfSPvpMJ71g7S/Dt+xvpAO1KER6w/pUB1uDFfqE+kIHcJZv0hH
6/A56xtptQ6jWf9Ia3RoxfpIWqvDF6yfpNPtz8f6Slqnw/P/lPpL2mT/96zP
pHN0KGX9Jj1Rhw2s76QtOtRi/Sc9Q4f5rA+lc3XYwfpRep4OK1hfSufp0Jf1
p/QSHWaxPpXO1+HDGaV+lV6lQx7rW+kCHeaw/pVebz/O+li6UId35Ur9LL1V
h69YX0sX6XCe9bf0Hvv5ZX0uXazDINbv0od16MH6XtqqQwLrf+lTOtytqdQH
0yX218P6Yfqc/f1hfTFdqsMw1h/Tl3Roy/pkusz+eWH9Mn1DBxPrm2mbDvc+
2v+bIv5Hh3TWR9Pl9r9H1k/TD3Wwsr6artAhl/XX9HMd9rI+m67UAazfpt/Z
Py9PlPpuWqWHhvXfdDU91rI+nHbSYyXrx2lnPW6yvpx20aMK68/punoUsT6d
dtPjH9av0030aM36dtpdjwGsf6db6zGc9fG0hx6/9lDq5+lOeoxhfT3tqccK
1t/TXnoEsD6f9tajA+v3aR89hrC+n4b9+Vn/Tw/RI5z9AbSfHk3YP0D763GZ
/QV0oB4P6yj9B3SoHnPZn0BH6LGX/Qt0tB4n2N9Aq/UYz/4HWqPHEfZH0Fo9
vmb/BJ2ux7u9Sn8FrdNjH/svaJN9/uzPoHP0GMn+DXqiHn7s76AtejyvqfR/
0DPs82d/CJ2rxwj2j9Dz7O8f+0voPD3i2X9CL9GjBvtT6Hw9BrF/hV6lx2n2
t9AFejz7Qel/odfbX0++0h9DF+pRl/0z9FY9vNlfQxfpUcz+G3qPHvf2Kv05
dLF9/uzfoQ/r0ZP9PbRVj0vs/6FP6TGR/UF0iR7lo5T+IfqcHkfZX0SX2v9+
2H9EX9LjrxFKfxJdpkdD9i/RN/RYwP4m2qZHO/Y/0f/Yzzf7o+hyPV6PU/qn
6Id61GF/FV2hx1j2X9HP9ZjD/iy6Uo9W7N+i3+kxk/1dtMqAYvZ/0dUM+Jz9
YbSTAbnsH6OdDQhhfxntYsBZ9p/RdQ0Yx/402s2A6exfo5sYMIb9bbS7Ad3Y
/0a3NmAl++NoDwP+Zv8c3cmAUeyvoz0NuM7+O9rLgGj259HeBkxm/x7tY4Ab
+/toGJDI/j96iAFm9gfSfgbsZ/8g7W/AAvYX0oEG9GX/IR1qwGr2J9IRBqSw
f5GONsCb/Y202gBn9j/SGgM2sT+S1hqQwf5JOt3+/rC/ktYZsIr9l7TJgOPs
z6RzDKjK/k16ogFR7O+kLQaUsv+TnmEfj/2hdK4BHdg/Ss8zoAv7S+k8Axqy
/5ReYsA69qfS+QZH/yq9yoBb7G+lCwxIZ/8rvd7+frM/li40IJL9s/RWA6ay
v5YuMsCf/bf0Hvv7y/5cutj+/OzfpQ8bMID9vbTVgJ3s/6VPGTCN/cF0iQFL
2T9Mn7N/ftlfTJfaP+/sP6YvGTCX/cl0mQFt2L9M3zDgU/Y30zYD9Ox/pv+x
P5790XS5/e+B/dP0QwOC2F9NVxjQg/3X9HODoz+brrSPz/5t+p3B0d9Nq4wo
Yv83Xc2IuuwPp52MsLB/nHY2ojr7y2kXI/5g/zld1wg1+9NpNyNmsX+dbmKE
mf3ttLsR29j/Trc24iz742kPu9k/T3cyohf762lPI/az/572MuIL9ufT3kbU
Z/8+7WPEfPb30zAigv3/9BAjOjEfgPYzQsv8ANrfiEjmC9CBRkxl/gAdakQI
8wnoCCNCmV9ARxuh8lPyDWi1EZ8z/4DWGFHAfARaa4SV+Ql0uhFXma9A64wY
zPwF2mQ/X8xnoHOMqGB+Az3RCC/mO0CxxYhWzH+gZxjxCfMh6FwjtjA/gp5n
RCXzJeg8I1Yzf4JeYsQ3zKeg843IYn4Fvcr+eWO+BV1g/zwx/4Jeb8QO5mPQ
hUasYX4GvdWIPczXoIuMWMX8DXqPERnM56CLjXj8SMnvoA8b0YD5HrTViJHM
/6BP2V8/80HoEvvfA/ND6HNG+/WZki9ClxqRx/wR+pIRfZlPQpfZz1cDJb+E
vmFEO+ab0DYjwpl/Qv9jRCDzUehyIxYxP4V+aH//mK9CVxjRk/kr9HMjOjCf
ha404gLzW+h3Rrgx34VWmbCS+S90NRNOMx+GdjKhO/NjaGcT2jFfhnYxoTfz
Z+i6JmxnPg3tZsInzK+hm5gwmfk2tLsJC5l/Q7c2IYv5OLSHCVWYn0N3MuEM
83VoTxMGM3+H9jKhAfN5aG8TNMzvoX3s82O+Dw0Tnj1U8n/oISb4MB+I9jPh
wS4lP4j2N6Gc+UJ0oAnpzB+iQ00wMJ+IjjDhG+YX0dEmJDHfiFabkML8I1pj
wru+Sj4SrTVhNPOT6HQT1jFfidaZMIP5S7TJhLcvlXwmOseEAOY30RNNeLhX
yXeiLSb0YP4TPcOEHOZD0bkmuDI/ip5nQn3mS9F5Jpxi/hS9xIRS5lPR+Sa8
3KnkV9GrTLiXoORb0QUmxDP/il5vwkHmY9GFJuzIU/Kz6K0m9GK+Fl1kws53
Sv4WvccEb+Zz0cUmdGZ+F33YhGjme9FWEwYy/4s+ZYIT88HoEvvni/lh9DkT
fvJT8sXoUhNqMX+MvmRCU+aT0WUmnLuu5JfRN0y4eVXJN6NtJuQy/4z+x358
u5KPRpebsLGXkp9GPzThTnclX42uMGH570r+Gv3chL7MZ6MrTWjP/Db6nQlT
me9Gq8xIZf4bXc2Mpx//+P98ONrJjM7Mj6OdzTiwQMmXo13MCGL+HF3XjGOn
lHw62s2MHObX0U3MaMZ8O9rdjPbMv6Nbm/EV8/FoDzN6MD+P7mTG6idKvh7t
acYXzN+jvcz4b7CSz0d7m/H7RCW/j/YxQ818Pxpm+DL/jx5ixhjmA9J+ZnzN
/EDa336+mC9IB5oRy/xBOtQME/MJ6QgzHi1U8gvpaDN+Zr4hrTZjla+Sf0hr
zCjOVvIRaa0Z3sxPpNPNeFai5CvSOjPO6ZX8RdpkxnDmM9I5Zrgxv5GeaH89
KUq+I20xY+05Jf+RnmHGgndKPiSda0Yy8yPpefb5M1+SzrMfZ/4kvcSMSOZT
0vn288P8SnqVGbWYb0kXmHFmkpJ/Sa83Y72rko9JF9rHY34mvdWMblWVfE26
yIyXE5X8TXqPGXv+UPI56WIzXs9S8jvpw2bc/1HJ96StZhwdqeR/0qfMaM18
ULrE/vp3KPmh9DkzDu5U8kXpUjP2n1LyR+lLZszfqOST0mVmdNqs5JfSN8wY
5qPkm9I2M6ow/5T+x4zx9ZV8VLrcDPcKJT+VfmjG3QtKvipdYcbAGUr+Kv3c
jBU2JZ+VrjRjwn0lv5V+Z0ZwnJLvSquyMZT5r3S1bPRnPiztlA1n5sfSztnI
/Z+SL0u7ZCM8Wcmfpetm4+RkJZ+WdsuG73Qlv5Zuko1X75V8W9o9G3M0Sv4t
3Tobhd8o+bi0Rzae/qbk59KdsrGpk5KvS3tmowXzd2mvbEx1U/J5ae9spKxT
8ntpn2w8n67k+9LIhmGrkv9LD8nGF5uUfGDaLxsJs5T8YNo/GwtTlXxhOjAb
8R2V/GE6NBsvHiv5xHRENs5nK/nFdHQ2bJuVfGNanY3/qZT8Y1qTjbfPlHxk
Wmt//v1KfjKdno2WXyn5yrQuG/uuKfnLtCkbrUqVfGY6Jxvut5X8ZnpiNtpa
lXznAf8HEZll1A==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         Thickness[Large], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        LineBox[CompressedData["
1:eJxVmXtYVOX2x8c73mrKRDSgMUkRTce8kaF+ud9hADMuA+zZpeLRdE554aDm
trxQmY2mSOlTO69QmkOp8QuP7i4gR1GmREMzneMt0qzBK5bKWT6z+u0X/uH5
POvde+3vzJ73Xeu7+suz06e0NxgMt9oZDA/+p/7aa+W1/OdgePCnTOX/z0GZ
/2pehMSsPYfSgR2OpvVnNoRh7ZfymB/OTfEywnAp++vZ321hVsJg7dYLg6cx
a2HILtuU0y6E2TAeTWc+npJ89SW+fjz+3LnX07OCWRmPmpPLF0fOZdbGw30Q
y35/ltkwAcExT059uPVFvn4Czlnvzt/2HbMyAbVP72m/+y1mbQI0tQahacyG
idjXuyp/pN/f10/E5eZtytazMl8/Ec4+auWq7czaRJTcGvHIH7OZDcBRd31x
TSizCaisi+zVuz0zgOKYxz84ddjmZQn4/ITxnm8JswLk1bz66CGJWQUaU1du
vz6EWQNCGu4p792WvOwG/B8dmFP+LbMhHPPyii6PcjCbiNf896fRucwIxyFP
9+OfhjBL4TCNWP3r0OZ8zh8Ox0zntsvvMKvhmDlyQSfHEGYtHMqLfQL9D+Vx
/nB4auR770xnNkRA/WHZ1gtdmU0RGNq05KEnPs3l/BHYt6dqYFgysxQBn+HK
sXEeK+ePQGX+8ua+a5nVCNzImPl8YyizFgFDH3PdnDM5nD8Cp69tefz3pcyG
SGiWC+0jhzKbInHj5lfjXmnI5vyRyOzRa17RImYpEqFTs+TsQcxKJH4b7t5u
/CGL80dCWTX+8oZFzFokyl7eXvvnYGZ3JObEJJ4Z8mMm54+CKWDzN08vYzZF
oXHNwa6tI5kRhQtp+6M+PP8C549C2NHqdt3WMitR2FL2YR2imdUoFHf7flj4
7cmcPwqW+Z5dXT9hdkeh479OHy/NZTZEo7byftDVR5hN0aibvtzU6eDznD8a
Nw5/nHB2IbMUjY0XdwcVjWRWotEyfNXwhsuTOH80fC6UXrmyiVmLhnFCz5MH
cpjd0UB1YGFKb2ZDDKIGBseX1Gdw/hgE/Xy8bt1bzIhBaHjK0sQYZikG+wZn
Nu9pz6zEoNKxuOTYgXTOH4Mb+0Jvb1rErNH6u+1KnwxjdsdArXn9vuWvNM4f
i7idn1QMrWI2xWJp45Fndy9gRizCvtBMl8KYpVho65qbtfsWzh8LU+2ScZFf
M6ux6LHF+uaMpcxaLIqvJs8OjWN2x8L/kO/ish7Mhji4drffMGdzKuePQ2bF
L+cahzEjDo0ZHXwWVKVw/jiYzXeQGc+sxMHY2+c/Lzcmc/44KDMGuSsLmLU4
BC8acHjMn0mcPw5ld/Ycu7CS2RCP2vSP4jQTsykenqB9i2r2JHL+eBQu7Fd3
I5FZikfxyp5r4s4ncP54ZF6cMPLAAmY1njaoA36TezNr8Wg096no5ozn/PHw
eS3NfiqR2ZCAgqrurm+a4jg/8cuLU79ezowEGNe/8+qxp5ilBJh+OFhzqzqW
8yfAPbDwZPA0ZjUB5g7l4dO6MmsJKJw5ZMOuHTGcPwEtgzauaLUwGxIROmL6
Z5NuRXP+RHg+bdi3YyMzEqFUtkzpFMUsJUJaVitbf4vi/Inw2d/rlV3rmNVE
GM8uy7w7kVlLhPmLbW5cieT8ifAL+elU0XpmQxLwihxQFsVM34PfrMlLa65F
cP4kGAPLmo99zCwlwRMVmHw0jVlJgjkwbekX7ZnVJDjnlr21ZHc450+CfdLk
rDHTmN1JUPdl/FHfj9mQDPPInLSkenD+ZJQaL7xZvpQZyfBZH1B+cRyzlAz1
2/o3752fyPmTofz0UfPFDGY1GfbfetYp1RM4P8U3VE09FMrspvfylaJ+B3aO
5/wpUHaPT8wJYjalwLOiR8GGjWGcPwWOkGuXF/gyS8Sn/si8s/rvOoPWX70S
bnyYWU2Bc/sm/PudcZw/BebuJX/e7cnsputD7z5R9+6znD8VngLnjEG9mE2p
cIwwbe5eGsr5U2FueK5kbiCzlApnjfyEvG0s56f4mUkDjg5nVlNhuRS4eu9X
Yzg/rU/zkf1imd0U7/nG+56G0ZzfAmdSn+iwl5iNFliCJy1suTGKn4fiH34l
PbmC2WyBqf3OgC/7MYM4x9r0xa6RXrZYoF7f29o7hlmyQCnJ2HHq52e8bLfA
vkFG6zxmxQLPP0r7LHmE2UHx8sD1uTtHsB4LsPa1p9ckMDtpfdrqdP9fzayP
4trMFXeKmV3Ew9InDwphdlP+lLFbY94f7mWPBe4pGSNOuIex/jSovmUbWkKY
jbTPHi1D+fynWT/F589edb5mKOtPg+RY33GzHzOIO/YbdX7mENafBnfAsAMf
fRvC+tOgdHoqq8Gf2U736xJbs7BwMOuneN+9P609Ecz6ic/FLvYby6ymwWQv
2N7hg0Gsn/jizez01oGsn3hsUIVhGrMrDdqk7O+7ff8U6yc9yY9dnzme2UPx
c1rugB1BrD8dau72gpAAZiPxjOqi1xwDWH86lLiKbv6dmc10jj206MPWRU+y
/nS4PesPP9XSn/UTT/lizNtzmKV0YODm94ZeN7F+ij8RubXzHGYlHVrTnqKh
vz/B+ml9XMd/OVsCWT/le79H0HtdmJ0UX/zB/KP9Alg/Xb91wUrrM/6sn7hd
YunYlMdZP3GHcVezZvVj/aQn5uydf6/py/ozoKT3iM+r8mP9xMccS0Y39WH9
dM7v8Z06oS+zmfj0rw2vpviy/gwgov6ga0Vv1k/xsyczLNWPsf4MaIdHl1/t
zGyn9b6de21J6sX6Kd+Lo2/PKnmU9VM8LOFE/IVHWD/FH4lNNI9hdhKveaV7
4Eoj66d8AcvqAuoeZv3Egyxv3VvxEOun9Sfdk48l9mT9FJ/37Mz1fXqw/klQ
ti8bG3GlG+snth7JrKvpyvqpTmpybhr2iQ/rJx4/pJ+8rgvrp/Vrkm/lF3dm
/RQfdf+j/m90Yv0UP/BdhbqsI+snrl96+8S7HVg/rc+NmrX/4/asn+IHDVFp
Ve1YP8WHyj++edrA+ine8OGXcidmjeKVL8ftnHF/olc/8Zm1fb/+6a6X3cQ9
j/S/nf2Xlz3EpQdao3+942UD1ZGzRlZsWd7iZSNxn/o13Ube9rKJOOKz/Nm/
3/Symfjt8BGHK294GcTfVr/mu+a6ly3EZ0cEJBRd87JEfO/IhPx/NnvZTvy7
/6up8z1eVoi/O5k02O8PLzuIG9+ITM+/6mWV+OjY3g9/d8XLTmLI1c/HXPay
Rlyw9uGAS02sn/iabZp18y+sn7jHqtvdX7vE+h/cL3lT0LyLrJ/q7jGbDOrb
F1g/ce00uXD/edZPHFd1pOwhZjPxrKzWoQvPsX7ihP3T23VhthD3OD56wK7/
sv4Hcf8IxxxmO3HlsAGxLzArxK4QnR3EPoP09SpxyiH9fk5iU7WeTyPem6w/
j+tB/mr9ed3El2Rdj+dBvFzXa6C+xZ2gfx5G4s7v6p+XiTg4S/88zcTtt+qf
N4jnZenfh+WFtt+XRFyySv8+7Q/uX69/3wrxjAD9fXAQN9fr74tKXGDW3ycn
cf23+vumPXieSP19dBGHfK6/r27i0Yf099lDPOcZ/X03UJ/XW9N/D0biv+r1
34uJ+MJ7+u/JTBw+U/+9IbPt79FC/Ivwe5Vo/butkf//e7YTJ8bqv3eF1me+
oe8HDoovqNb3C5XiN+/p+4mT4t8L+41GXDNY349ctH5zhb5fuYnP1un7mYf4
4+X6fmegvvhOqL4fGrPa7pcm4qZUfT81E59Zqu+3yII2StiPLVlt92uJ4kXC
fm6n+KVR+n6vEH8unAeOrLbnhUocIZwnziw6H1z6eaPR8+cL55GL4g3CeeWm
+1tW6+eZh+IjhfPOkA0Fbv08NGZDWxmqn5embADCeWrOpv1woX7egq7f8r5+
HluIfxTOa4nut1w4z+0Uj9mrn/cK3a85Qq8HHJSvfJNeL6gU3y3UE07iiaV6
vaFlQ1UX6vWIi64fLNQr7uy29YyHrj8s1DuGnLb1kDEHpkChXjLlAO8J9ZSZ
2Eeot5DTth6zEF+fptdrUg7UnXF6PWen6//co9d7Sg6U/4vR60EHxS8F6fWi
SvcbL9STToqPFOpNLQeGAUI96sqBdFyoV93E+4V61kPruwj1rsEK0zKhHjZa
29bLJiuMY4R62myF55ZQb8MKd4hQj1usUJcK9bpkBSqEet5uhfS6UO8rVmgv
Cf2AwwrnKqFfUK2whHyp9xNOur5I6Dc0et5rO/R+xEXPUyL0K256/q5CP+Oh
558h9DuGXKgnXtf7IWMuzA6hXzJRfJfQT5kpnvO83m8hF45CoR+z5EJKFfs1
4r1CP2fPhZIm9HtKLjzBQj/ooPv9tU7vF1XiE0I/6cyl/fo3vd/UcmHcKPSj
rlxoTwr9qjsXJkXoZz25sHeboPe7hjx4EoR+2Ej8udAvm/JgPiL00+Y8OI8J
/TbyqB906f24JQ/BBWK/TvEgoZ+358ExQOj3lTwYGwQ/wJGHlmmCX6DmwRUj
+AnOPKijBb9Bo/V9BT/ClYeyTMGvcD/QJ/gZHlq/SPA7DPlw+Ap+iDEflTWC
X2LKR8s5wU8x56PgM8FvQT6KywQ/xpIPQ5Ho19D9qwQ/x56PQovg9yj5qB0u
+EGOfHgyBb9IpfsHCn6SMx/Bjwt+k5YP5RvBj3JRvuOCX+Wm+HTBz/Lko2mh
4HcZJEjvC36YjwSfwYJfZpTg+kDw0/wkmPwm6n6bSYLdIfhxwRI0u+DXmSl+
qUr380Lp+lmC3wcJmea9uh8YJ8ERIfiFFgllqwQ/MZOe52YX3W+UJOAFwY8s
kKCECn6lXUJxueBnFlL+vwS/U5Gg7hb80GIJhlOCX+qQUFkh+KmlEi58L/qt
EhpXC35smYSZnwp+rZP0nBD83EoJaw8Jfq8mYVK54AfXSvjthuAXuyT4uwU/
uVFC0GLBb3ZLCPYT/OgmCRuzBb/aI7X1s1skbPEV/G6DDS8dEPxwHxu2pAp+
udGGxiuCn+5nQ8dhgt9usqHuZ8GPD7ah+GfBrzfbUBon+PmhNjj3CX4/KP6W
MA+Is+GxJcK8wGJDULNLnydk2uC/Tpg3SPT8zcI8osCGgjBhXmG3YVKZMM8o
tCGqjzDvUGywJgjzkGIbCucK8xKHDStXCvOUUhsyA8V5iw1DC4R5TJkNox4V
5jVOG9QOVfo8p5LyPyfMezRb23lQrQ0YI8yLXDY4xgnzpEa6/1xh3uSmz7OX
MI9qsqGhQphXeej7uynMs1ps8DsgzLsMMpqahXmYjwzrdGFeZpTh00+Yp/nJ
8FOEeZuJ1g8S5nHBMk5fFeZ1ZhnF7wrzvFDiHGHeBxn7+gvzwDgZmzRhXmiR
8dlkYZ6YKSPpP8K8UZLx0nlhHllAesYI80q7jHPVwjyzUMb9RmHeqcgI6/SM
Pg8tlrHXV5iXOmSUtArz1FIZlx4S5q2qjDMbhHlsmYyGIcK81ilj21RhnltJ
zw9h3qvJ6PiNMA+uleE4J8yLXTI67xDmyY0ybpwW5s1uGSFOYR7dJLedV3tk
+KcL8+wWGfP2CfNuw4vYEiTMw31exMq53nn5idcXfdaux99z6Kn4H2/V0ss=

         "]], 
        LineBox[CompressedData["
1:eJxV2X98S2fbAPCgLCiKIqytmE5TOotpyay4UBaUpXQWdHR9OiI/2jTnbLqq
LfYU5aktKIK+ZHTEVlPTWR8tgqo+U8R0dHRbHjrr/Gytm7DS9+p735/3XPpP
P9/PfZ/71zk5576va1BK+qx328tksr/ayWRt/+cu/zjh6e0lIGv7sy9i/xuX
gFMQFkxM5vYvgQ0RHc4nDOKWGSH33ymjvr/+LrPcCA/0J9IrCrmDjJDUpTdE
LuZWGEF9YNf8dkO5lUboVfvZuzPupjKrjND81eHGbge51Uaorl310aT3uDVG
8J2Blfde5QYjwMQXFvVo/Qez1ghfp7Ys3VPBrcP6kd+0L1nLrTeCx1UJmgTu
ZCOU9ylbOFLBbTDCraY99s9/SWG2GqG4n6v0k73cmUYo+HNEz/vp3HYjnLx+
IbdSw51rhNLqSb37tOd2GKEInt929ew7zE4jfFIX9KTvZm6XEVJPC72+S+Z2
G6H2jby9fwzjLjZC7MUn9o0Pk5lLjdClz5D5+05xe4xgXZh1K9rBXWWE7PX/
vRbzNrfXCBVNXX/4cih3Ld6PiPW/RzUtZPbhfIzFe26t424wQvj4ZR0dw7gb
jWBY3C8s5LsFzH4jyE+lPFm3hFtmgorqlZ/Xd+aWm0B+b0X3gV++zRxkAt+B
siGxM7gVJqgdZb80pjGJWWkC7/xVTf3zuVUmCNSZ36zVcKtN0DBAXS3+PJ9Z
Y4Kix4XP38vhBuxvcn37SVHcWhOUth4ZY6uZx6wzgVXe+/2s5dx6E2gWzU2Z
F8GdbALVEN/eoO/nMhtMoNs89tb25dxWE7gte6seR3JnmsAeN/3nYVf0zHYT
BA/cffKlldy5JqjOP9O5dSS3wwQtM47F7bjxFrPTBLHnT7frks/tMoHzix3V
MJnbbYLswIvDJzycw1xsgrgPGg90/oK71AQh79X94Hyb24PjqXgafrcndxWO
Z8EqZcczbzJ7TdB89rNpv2Rz15rAfLckPGsktw/nr/rk5ZpbicwNuJ71ztu3
d3E3miAAuv14fD633wRwOixzZh9umRk0KtXUzRdmM8vNoL72Q/WmtdxBZoia
NDNn+hRuhRnuDNI3fdOeW2kGV/5Hmy8dn8WsMoOsTPNw13JutRnKW9o5X4jl
1pghv+rjp7q/E5jBDNr9XxyMKuPWmqGg5tyrJcu4dTiebzzKm7HcejM4/qep
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
         "]], 
        LineBox[{{179.7502678242547, 180.}, {179.75076782426177`, -180.}}], 
        LineBox[{{180.24923225179992`, -180.}, {180.24973225195959`, 
         180.}}]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 360}, {-180, 180}}, 
     DisplayFunction -> Identity, AspectRatio -> 0.33, Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox["\"t'\"", {
           GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
        None}, {
        FormBox[
         StyleBox["\"t\"", {
           GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
        None}}, FrameStyle -> Medium, FrameTicks -> {{{{-180, 
          FormBox[
           RowBox[{"-", "180"}], TraditionalForm]}, {-120, 
          FormBox[
           RowBox[{"-", "120"}], TraditionalForm]}, {-60, 
          FormBox[
           RowBox[{"-", "60"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {60, 
          FormBox["60", TraditionalForm]}, {120, 
          FormBox["120", TraditionalForm]}, {180, 
          FormBox["180", TraditionalForm]}}, None}, {{{0, 
          FormBox["0", TraditionalForm]}, {30, 
          FormBox["30", TraditionalForm]}, {60, 
          FormBox["60", TraditionalForm]}, {90, 
          FormBox["90", TraditionalForm]}, {120, 
          FormBox["120", TraditionalForm]}, {150, 
          FormBox["150", TraditionalForm]}, {180, 
          FormBox["180", TraditionalForm]}, {210, 
          FormBox["210", TraditionalForm]}, {240, 
          FormBox["240", TraditionalForm]}, {270, 
          FormBox["270", TraditionalForm]}, {300, 
          FormBox["300", TraditionalForm]}, {330, 
          FormBox["330", TraditionalForm]}, {360, 
          FormBox["360", TraditionalForm]}}, None}}, 
     GridLines -> {{0, 30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330, 
      360}, {-180, -150, -120, -90, -60, -30, 0, 30, 60, 90, 120, 150, 180}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, Method -> {}, PlotLabel -> 
     FormBox[
       StyleBox["\"a=1.263\"", {
         GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 360}, {-180, 180}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(X\\), \\(11\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(e\\), \\(1\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(X\\), \\(100\\)]\\)\"", 16, StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(i\\), \\(1\\)]\\)'\"", 16, StripOnInput -> 
        False], 
       StyleBox["\"vel(i1')\"", 16, StripOnInput -> False]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Column\"", ",", "1"}], "}"}]}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.78748587155777*^9, 3.7874884243258314`*^9, {3.7874884818261366`*^9, 
   3.7874885069601583`*^9}, 3.7897221930387506`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{
   "\"\<0049_act_progress_clean_1263\>\"", ",", 
    "angularProgressPlotClean1263"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7874834534555635`*^9, 3.7874834574228926`*^9}, {
  3.7874858792328644`*^9, 3.7874858997586365`*^9}}],

Cell[CellGroupData[{

Cell["Symmedian Quartic", "Subsubsection",
 CellChangeTimes->{{3.7862688724765263`*^9, 3.786268878494406*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "@", "t"}]], "Input",
 CellChangeTimes->{{3.790414122738613*^9, 3.7904141235999193`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "showSymmErr"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "showSymmErr"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"symClr", "\[Rule]", 
      RowBox[{"Darker", "@", "Red"}]}], ",", 
     RowBox[{"idealClr", "\[Rule]", 
      RowBox[{"Darker", "@", "Green"}]}], ",", 
     RowBox[{"factor", "\[Rule]", 
      RowBox[{"10", "^", "7"}]}], ",", 
     RowBox[{"fontSize", "\[Rule]", "20"}]}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"showSymmErr", "[", 
    RowBox[{"a_", ",", "tDeg2_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "o", ",", "n", ",", "s", ",", "a6", ",", "b6", ",", "denom", ",", "gr", 
       ",", "x6", ",", "x6i", ",", "x6mult", ",", "gr2", ",", "ell", ",", "t",
        ",", 
       RowBox[{"b", "=", "1"}], ",", "\[Delta]", ",", "ell6", ",", 
       RowBox[{"degStep", "=", ".25"}], ",", 
       RowBox[{"tDegMax", "=", "360"}], ",", "x6s", ",", "x6sInter", ",", 
       "x6sMult"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x6s", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"t", "=", 
           RowBox[{"toRad", "@", "tDeg"}]}], ";", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"o", ",", "n", ",", "s"}], "}"}], "=", 
           RowBox[{"orbitNormals", "[", 
            RowBox[{"a", ",", "t"}], "]"}]}], ";", 
          RowBox[{"getSymmedianTrilin", "[", 
           RowBox[{"o", ",", "s"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"tDeg", ",", "0", ",", 
           RowBox[{"tDegMax", "-", "degStep"}], ",", "degStep"}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"a", "^", "4"}], "-", 
         RowBox[{
          RowBox[{"a", "^", "2"}], "*", 
          RowBox[{"b", "^", "2"}]}], "+", 
         RowBox[{"b", "^", "4"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"denom", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "*", 
          RowBox[{"a", "^", "4"}]}], "-", 
         RowBox[{"2", "*", 
          RowBox[{"a", "^", "2"}], "*", 
          RowBox[{"b", "^", "2"}]}], "+", 
         RowBox[{"3", "*", 
          RowBox[{"b", "^", "4"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a6", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"b", "^", "4"}]}], "-", 
          RowBox[{
           RowBox[{"a", "^", "2"}], "*", 
           RowBox[{"b", "^", "2"}]}], "-", 
          RowBox[{"\[Delta]", "*", 
           RowBox[{"b", "^", "2"}]}], "+", 
          RowBox[{"3", "*", "\[Delta]", "*", 
           RowBox[{"a", "^", "2"}]}]}], ")"}], "*", 
        RowBox[{"a", "/", "denom"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"b6", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", "^", "4"}], "+", 
          RowBox[{
           RowBox[{"b", "^", "2"}], "*", 
           RowBox[{"a", "^", "2"}]}], "+", 
          RowBox[{"\[Delta]", "*", 
           RowBox[{"a", "^", "2"}]}], "-", 
          RowBox[{"3", "*", "\[Delta]", "*", 
           RowBox[{"b", "^", "2"}]}]}], ")"}], "*", 
        RowBox[{"b", "/", "denom"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x6sInter", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ellInterRaybUnprot", "[", 
           RowBox[{"a6", ",", "b6", ",", "#", ",", 
            RowBox[{"-", "#"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", "x6s"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x6sMult", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ray", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"#2", "-", "#1"}], ",", 
            RowBox[{
             RowBox[{"OptionValue", "@", "factor"}], "*", 
             RowBox[{"magn", "[", 
              RowBox[{"#2", "-", "#1"}], "]"}]}]}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"x6sInter", ",", "x6s"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ell6", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"t", "=", 
           RowBox[{"toRad", "@", "tDeg"}]}], ";", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"a6", " ", 
             RowBox[{"Cos", "@", "t"}]}], ",", 
            RowBox[{"b6", " ", 
             RowBox[{"Sin", "@", "t"}]}]}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"tDeg", ",", "0", ",", 
           RowBox[{"tDegMax", "-", "degStep"}], ",", "degStep"}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"Point", "@", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<O\>\"", ",", 
                RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "1.5"}]}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", 
            RowBox[{"OptionValue", "@", "idealClr"}], ",", 
            RowBox[{"Line", "@", "ell6"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"OptionValue", "@", "symClr"}], ",", "Thick", ",", 
            "Dashed", ",", 
            RowBox[{"Line", "@", "x6sMult"}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ell", "=", 
       RowBox[{"plotEll", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"o", ",", "n", ",", "s"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", 
         RowBox[{"toRad", "@", "tDeg2"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x6", "=", 
       RowBox[{"getSymmedianTrilin", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x6i", "=", 
       RowBox[{
        RowBox[{"ellInterRaybUnprot", "[", 
         RowBox[{"a6", ",", "b6", ",", "x6", ",", 
          RowBox[{"-", "x6"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x6mult", "=", 
       RowBox[{"ray", "[", 
        RowBox[{"x6i", ",", 
         RowBox[{"x6", "-", "x6i"}], ",", 
         RowBox[{
          RowBox[{"OptionValue", "@", "factor"}], "*", 
          RowBox[{"magn", "[", 
           RowBox[{"x6", "-", "x6i"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gr2", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "@", "Large"}], ",", 
          RowBox[{"FaceForm", "@", "None"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Black", ",", "Thick", ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", "x6mult"}], "}"}]}], ",", 
            RowBox[{"ellLabelTxt", "[", 
             RowBox[{"a", ",", 
              RowBox[{"o", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\!\(\*SubscriptBox[\(P\), \(1\)]\)(t)\>\"", ",", 
                RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", 
              ".1"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Blue"}], "}"}]}], ",", 
            RowBox[{"Polygon", "@", "o"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Darker", "@", "Green"}], ",", 
            RowBox[{"Point", "@", "x6"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\!\(\*SubscriptBox[\(X\), \(6\)]\)\>\"", ",", 
                RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", "x6i",
               ",", 
              RowBox[{"{", 
               RowBox[{".25", ",", "1.5"}], "}"}]}], "]"}], ",", "Blue", ",", 
            RowBox[{"Point", "@", 
             RowBox[{"o", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"OptionValue", "@", "symClr"}], ",", 
            RowBox[{"Point", "@", "x6mult"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<~\!\(\*SubscriptBox[\(X\), \(6\)]\)\>\"", ",", 
                RowBox[{"OptionValue", "@", "fontSize"}]}], "]"}], ",", "x6", 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.5"}], ",", 
                RowBox[{"-", "1.25"}]}], "}"}]}], "]"}]}], "}"}]}], "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ell", ",", "gr", ",", "gr2"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.6"}], ",", "1.6"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.786267933787493*^9, 3.786268318141987*^9}, {
  3.786268407555626*^9, 3.786268467711282*^9}, {3.786268534767432*^9, 
  3.7862685658857613`*^9}, {3.7862688905152903`*^9, 3.786268891635295*^9}, {
  3.787854560185876*^9, 3.78785463025607*^9}, {3.7878570336781216`*^9, 
  3.7878570519647923`*^9}, {3.7904141206023154`*^9, 3.7904141207460985`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"symmQuarticPlot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"showSymmErr", "[", 
     RowBox[{"1.5", ",", "60.", ",", 
      RowBox[{"factor", "\[Rule]", 
       RowBox[{"2.", "*", 
        RowBox[{"10", "^", "6"}]}]}]}], "]"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.786268472412176*^9, 3.786268479089316*^9}, {
  3.786268674647683*^9, 3.786268687392601*^9}, {3.7862687682006316`*^9, 
  3.7862687685676537`*^9}, {3.786268916967434*^9, 3.786268921663216*^9}, {
  3.787856989981802*^9, 3.787857009988895*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, 
   {PointSize[Large], 
    {GrayLevel[0], PointBox[{0, 0}], InsetBox[
      StyleBox["\<\"O\"\>",
       StripOnInput->False,
       FontSize->20], {0, 0}, {0, -1.5}]}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
     LineBox[CompressedData["
1:eJxdnHVYVVvXxW1MbK+dKHZ3TURFsVCxuxMxUCwM7O4EEzCuomIH6kQBkZLO
o0jHOYqY2Lx8d471Pc/m/uPDRU/svfZac47xm6PBjMUjZxcpVKjQueKFCv3f
nzml7gcd+2GgQvhvdk3DuK35P9uufdCfdk+hAZVO/xme/3PDj65dWu62pdL9
jT1/fDdQ+xatxllm2pPXoasHN+T/3K7Wyby3u9bTnrnlNiXnGqjLwn/7X662
mQyPcvc0zP95y9qZj15mbKPHxhNu0zcDlfd+5RT0YBf9Y2v1rdtXAxX5kNzo
xs59lL6w7tiKXwxU3XWaf6dWB2lcg24xvp8M9H7I5EPrqx4mo5a9Vo39aKC6
zld23/hzhPKufu7x4oOB7OY3G/Ui7Rit7zPCpFK2gab20e3yCj5BjqXtO/R4
Z6CIEWmvnO86UeNz1xb20Rvo05zDPPr0KeLKi0NMMg20PWnCb8OWMxRtmDQ9
Lc1ALWJsK7XufI6C6vc32ZxioKNn7N+FNTtPc2s0qPU30UChnhaTptVxoX8u
VbUck2CgLN2vdrEVXMm4iN3N3ToDDXr7qlfXYm5UzffO2DOxBgoZVW34hlw3
Ms9ypH1RBnL6MqCbu/4CjX3mbjMx3EBhNX/6P3lzkcp/bZ9SPMRAZJ4Wfiv0
ElVz6HVpb6CBXNenmezyvkyJJ+o/+eSXf79yfx0wv/cvUcTEZp18DHRq6vDM
+MtX6OWnkzmjvAxksGv/e4TzVfrz3eOfkY8N1HxJrTMX97rToFouri0fGChp
142zMRuukdfjkydTbxvIxJbDU5ZeJ7e5H/6uvpH/+TwsSwXMvEG+LxrHvbuS
/3vTp7t8mnuQ0xl9q14X89+vgi51v6sHtX9RrejC8/mv17Kfg0Xtm6Srd32K
/SkDWf+a+CjjyE3yOPjWYupxA608c7akXblbFP+n2PPGhwzkffxSaMbWW+TS
3TXaf4+BzDY3dej/9xaNKb1g9+DtBvon4vPy3fa3KatSx4wrjgb6vOu7ycPs
2zQ/qsTHjLUG6vqr77fgOXeoz4VKHkXs89enQxFr/4Q71PnsrRa/FhvoRtON
F66MuUsW52wWhs3PXx8nm41b+uou9ej50X7rTAOZnt0TVdviHlW/U2vMP5MN
1OHPuB3uT+6R5buPFbaPMdCHRtN19Trdpwsz3G5EWhnIT+/Uzd79PrU22de9
kGX+eh9U3/hGowd07XnHR6XMDbS6alsff6cHVHLQwC4fuxto5J3Wfr4VH9Ky
Tq6P7nUw0NDXFze57HhIk2YNGjqhpYFKDxo0Y2reQ2pXftF3nYmBBq/5FPZr
xSPK8Jzl26OOgV7MON9r5btHZNX+7pPVVQ0U03xTxbAZntR9SVnD0XL51zsl
62HJOE+aetp87IHiBrrUZ5xrHavHVCtvfNn5f/TUdeSq7uV9H1O2YX2V+l/1
lNCpwbvX3Z9Q8FOjNXff6elK9JjG2zyeUJeA5QOaperp9dlB1qWbPKX6g5ds
X6vTU41Ok1LmOT+l8xNf9XMP19PgZjX7nq/AtCJtzy5Pfz0tuGueeGsrU58j
ETP/9dLTZ1ufpqd/Mv3r91m34r6eqmyY6nujixd12Drvb/3reiqu7/Po91Iv
+jI/OvqKW/7rLxncvJO7FxU7VWZpZWc91XeNCRqX7kWBnnmxEw7qybnUpPFz
6z+jMlERNR2366nL6nnbp014Rj5W4ebb1umpzdJLxv2OPKO4RNvJC+z0dGR5
wsWKr57R7jUWK1vN19PMWdlG/kbPybNnvdMhU/S0NS4ia36f5/R1VqZu+Kj8
77/+UrEva57T6N6PzG5a6qnogjMV5t55Ti0qRsfm9NZToH3pF8/fP6fFlS7e
LN9RT8/PTHhTwtSbylk/iS3XTE8rrGuV7zDNm/TXYyYa6uhpSsy3ygNOepO/
Z9zAy5X09PHYXTfzcG/6fD/0Wj8jPS127L2mcRkfur7q0wmvX1nkPP340A99
fWjLuNPVa+dk0ajOaTFnHXxoRONxPcamZtH7XTbhne/6UAvj8PLLYrNofcjB
b7ff+5DRwWQ3m6As+ugR96daE1/qPm9nqQFeWfRzSdb5qVN8iVdmDyl8J4ti
e20/tfeYLw1/NH2986UsKrTL6dK5V740uPXEa1Wds2j7zJbrTpR4QTOfr8la
vC+LlgbOjVne+wWZmO8wv+KYRTFlnZZ0sn+Rvw/ZvfRZnkVxlTsUjb/2gtzL
Wu/muVk018fXckbaCzqyZ46z04QsyhheMi+4th+V7V6l1JihWXTxQOSb2qP8
6HRxfepHyqLaY5qeH7bbj873PU227bOovG/jYjOf+9Hs46WbB5rkv//lys/H
//CjBgmd7pb8J4vavZx8rH3bl/SsxqBPTUpl0dPeR3u+n/OSbCee/NT4VyYt
fbVkyc7TL6nw9VN+xd9n0tPOwe9LRL6k5oW+bHqRkEndd15bMru0P60yntN5
XmgmLVjf466bmT81HZr4Wf8sk5YE+K30sfenwDD74GG3M2nl0oDlPu7+dLPn
rKjDbpn0tVbKPLdkf2rnUqruo6OZ5LsgrsKs6gF0zy774bNtmfRn0OlmRYcF
kOs8L88rKzPJ2XLAEsfNAVR8rnXnFfMyqVhGdZeEBwFU3uZ8zwbjM2mQ3sGh
ZnYArV4ekHTdMpPM7hg96dgokI7OqtKtbvdMGnFoZYNW4wJpeI5+9OLmmdS1
4t25RfcG0rtNbwe71MwkW6uIofefBZJTk39b3y+dSXZWFQ4N/BaYf16aVLr+
M4NeWUZ9utc8iNKGW5fers+gD3/vtS4yNYj6N53cwjw+gwJL2hdrfjiImmzc
t/Otfwb1aZnXvrVfEL0oOb7b1IcZNPTKwtXGv4Ko0Fprq2eXM6jMwcLHA1oH
07H13RKLn8ggm7IdB8+YEUyTDxgKtdqe/373XEdHHQ2mZpm2LzrbZ1DvrLr2
jfyD6fCU9/0bzc6gc2VcbIb8DqZDI+8e+WSdQVtTx/6wavOKsvZ1e+lmnkGh
mSdft5rxiqa3qfitW7sMarI7JzrtyCuK3prb4Va9DKqxu/K/K/1eUb28wOPl
jDOoYT995ZQfr8jH6FCXIb/TafTv3bGmLUPIIWdJM1t9OqW0N3vQf0oInQi/
vdkuNp2mZq9f3vNACDVZ7j9p0ot08iz98VWZ5yH0t0W/wKZ30qna9iU7b38O
oT2+cWmx59PJbX6x2ycrhdLWWTO9bfan07F9aw/3bxFK0+a9WZPqkE6xw0YP
eNM3lK5YzW1ktiCdIpcl35g2KZRMnftGbhibTm2q7r0esjyUYjxi3Fz7pdOX
l7EmzfeG0v2nV92vtkunkzzjy+ILoWR3ekHRE3XT6UN20t9zT0Ip7FaS17wy
6WTobNrkSVQolY4s9KfO9zQauL3OEJ/3oZRqGh9yPzWN/ikeMPJe8TByL+ky
onNYGjVpO6T24TphVDT9utPJJ2lkXjJh14ROYbSlyWrvpH/TaHb7yI1lh4ZR
21LOqcbH0uhOnTOJl2eFUeC20GoNNqXRnKYv9rRxCKOv7XOXVbdNo60+H+ee
OxxGpnWMK30dn0Z7TyWN+nUl//Vudip3v38aGe4v7Wz2PIzWnryxbkq7NBp/
9uQH27gwGnAqwcFQO42qO9rM3J4TRv02WJhMKZlGxUbXWLHTKJz+Sd+9997n
VNpXyGC0om44XWu/PPxLQiptWzMwz7JT/u9np5WtEZBKUdl3epccEp5/rqeN
aXQ3lb4nhfx7Y0Y4DQs9FVD5XCqtGjXaxGx1OA39PXyTflcqNU6vc+jh/nCq
cXv+iUsrUqn7j7oxtS6G05FGtqaDp6XS+KgFMXMeh9PmMcUHRQ1KpRkBbVc6
hee/XrlvNS06pVIb6ydO9zLD6ei5JndP10ulal3XNPH8G04XE051eF0qlebc
zP57qUoEPclad7PwlxQ6v5NLrmseQc2rGQ8yTsj/Ob/C6G4WQSNeelQv8jKF
TjQ90/ft6AhaOjKz65ubKZRxcFdvm4URNCl89IuzzikUmHzgb+LGCPpl/PC1
5dYU+vjEMK/XsQi6MjrnuM42hXQNv8xwvBpBDmO/Vx49LoVq7m8Q7u4VQf1K
vLO51yeFVtQrfYqjImjv0mKc1zwlf53NuPhQH0FTXU80aVclhWoUzot2youg
ZIc6XoP+JNODkLDKM6tE0ttDjS8PSU+mgX/fmVdqFkk1S0//1TkkmSI9HAdd
7hVJW+xOR5d6kExVbBMrNB4ZSUMv+47xPZdM9rTaYcecSAq6kHRi/s5kKham
swtfE0mD51d79G1pMjU8eP9Nkf2RdCXwQozNhGSqF6o7V8M1kqInZRsHmSfT
9bdd3Krdj6TmtHBdlRbJ1KC97tWPgPy/X+SOmUXlZNq7+quRd0IkGW90sJ/+
K4mevIjuvOxTJD24faTnnJQkKn75g7lRiSjaeiLTY1RgEr0ZEFZ5U40oWlRk
48eWt5No7u5WB5NbRlGl1etrf3BKoqdtY1yamkVRs0qNhjtvSqJ675+1HWUd
RbcGv7zSbkES5ewq0mj2nKj8dZMy6NaIJNprFDJ94uoomv20hFWdbklU7Ob6
qM57osjt0uuoZfWT6FDfXXNyz0RRvf4t/94ySqK/Jfb8OXUzijxSotPfZCdS
qIE2m/pE0Ujr2OufoxJp+OXNiceio2iBl8WKL48TyTZqzF99ZhRV2DtyfKJr
Ii0oo/Nt9CuKKja3WHN/VyLN+mtdv0+5aPr4YWvu6qWJ9NDJNNe8XjRx7v4c
03GJ1K5BQodm7aLp+edfW571TqSKfRt6fTaPplol10ZaNE6kD72ebXUZFU0t
XWP+3i+TSAtzr9h2mhNN+qv6Ac1T39Lt6p9mua+MphPjzvs99nhLic2CRhrt
jKa3pf4+Nl33lhpfO9jQwima/oZPmrfQ8i3FdHv6dN7VaLobNKj0jqpvqc/x
nIqLH0fTBZ+tKeuSEmh0jL7E+OBoOv3uV8eh1xKo5dJDO5okRNPunYH0bVUC
jZuY4xiTHU29Xcz7r+6XQJWbtEtYmJf//a4lbIsun0Dtq17YkVI+hvaYD7Ew
1r2h3928bHrXj6G7z+f41r/4hoL21LR3aBtDl8t0tTBe+oYcSyw5cNoshoIa
fi8d0+MNhT08d+n88BiqlVJ2zNoSb2jyO49LO6bFUJ8rpRb8Cn1N59v4O4xc
EkMHi9/YOdb5NT1a3bly3oYY8pqiz90/+zXl9lowdt/+GBpxOSrXrc1roq0/
OxU6G0PZ//W/OrIq4eI86noMrdpT6NFsbx159jJbsftJDIX4WhWttFdHcVvj
brgFxdDmLYveOY/R0dzWx7ue0+W//9qhD4vW11G5I36/1+lj6I+h3HXLrHi6
3yUhq9ePGCptnWtseyuerkfZvX9rFEthFR3qL10bT04OFl9nVoulVTW6mlr3
i6e+bt0++JvEktnRnLlVysVTq35j/Ct2iKUnRw6b3o2Ko7ysgKU9+sTSq7td
rnY6E0c+IYZoC6tYsn9Vq+uxOXH04WP7jA6TY2nqsYuVY1rHkXljs4NFFsbS
lOFzNn//Fkt2LeO8b62KpaN2FYJ/Po2lm8FZi/pti6VNoxw7J+T/mZOxef39
w7EUEuxZ3HVYLJXZ8Ta1zPlYKpyVudEy/3Pe+jPhQJ/rsZS8bWx22JsYapWz
Zsk4z1iKNnI40vNCDGUu0y8f/jKWUj9/eLjTJoZia6zd2ywqltxcll542CGG
rpZrfCUlKZZKpKScDvoZTT71jDzXZ+d/H5eh+ufPoqlywhyPnz9jKe9oXNip
HdHkftFjzVijODJOiHKeYBVN5Lmy9NHKcaT3uL3/d9VoGjbKfvjtenH0Oq/E
102vo6j/nb29brWIo7Z1t1XOdomiod1fPD/YJY54bqkOvedHUdEVVmEj+sbR
kIxdznZtoii748YJn4bF0f3fjY/u+xpJL89EW9lNiKPfRf6Zt98zks71+u4S
OTuOTL49mmTvGEkPq9zqX21pHKVU3+/Zd0AkDbz5vVlXhzjq5dQ2OLdsJOX2
yOzTfXv+5+k+Kf5QeAT13OWzofahOBr76X2LqiciaE2bH1EJp/Lvy5HE0hsm
R9DXvTW6OF6KoxYrhnqFNszf1zMSjxa9FUcTy9scLZ1/Lo20bZ82+3EcOVw6
GNHyWji9GVWj+uUXcdT0Y1ufLsvCaW3CywYBoXHU/HacR4su4WS6+NTXwPg4
Cl/YNaXk7zAa6vzP9mupcfTlS9ULIV5hNL1Lur9tdhy9MR1rtnFrGPWZ+/pm
+e/5r+f4+2/NQfm/v/at/YHC8TTNp0GLc8ZhFPpjfJ+c0vG0++wf4woRofTz
gXVYmyrxdHJY0pcFx0Opf/L4mGF14ulU766mNyeG0soSZQYObRJP3zy25yTX
CyXD5NbVW7SJJ8/HrzsXfhlCO6Jv98zsEk/rOgxMqzI8hE43uHNli1k81Uj/
5Fg49hUterZkbCHLeLpz+7qL39RX5FptVNeJI+LJf8O6N3Mzgslx0Ufzo+Pj
qf7KAy+TbYMpsXTxRdenx1PXUQN+dv0WREW7LXe/OD+evF3blFq4LojajBqa
u25pPAWXLLZndbEgqh7j17fj6ng6v/Fqjdm7A6ni3H47/DfG05aLXS1bVwok
48Qhnr12xJNlbubNqBMBtHzakYgD++NpTRUTw8R6AXR3VK7f82PxtMFo7Z5n
F/zpzqa1+yNOx5PzlkutjFr6U26V4Q283eJpcavdc1rdekk3LgQvP3g1no5H
tA7p2PUlrbW0d+ydvw/kPHqWV+epHxVz+to74EE83dKdOJDVN78P8qp/oSPH
k71J65on/F/Q6A3frq7zjacQz3qdmlu9oGa9zg6+EBhPf/u0WXMu0pdOlVvk
cDUsnoZU6rPp13hfmuGp63wgJp4GbZmY3uOtD+0KO2Bn/Sae4ltepBmzfOia
28QWX5PjqVO9+aaLs7wpeWKnsSsy42ltq7JdZtp60/YfZjkR7/O/b7NqJenz
cwqaGfihwud4+m3SsmPRVc+p2qLBVi2/x1OTWxVGe/x+RvVeTy/Z5E/+emjk
WmyA4zP6ZBdX5W9hHdkHJbz2K/6Mzvy6aHunhI7ILH5lh11eFNI/q7xlGR3t
O/Ri8S5jr/x6K+uTZ3kdHWr15olTY6aq4TUqlauio/e9bfhHq6c0p2P1eT2r
6+jk2vY1OnR+QmMvXf1gWVtHWwuPLTSw92NaeN7XtVP+vnt0Xusr3Sw86Wqw
44a8RjryMOs2pNSwR+RVscn6S6Y62rG/Ye0Hox9S7OGGzq1a6KjNsKdWAyY/
oAleFcMPts7f59ON6jyYdZ8mWz2oG9lOR+1u1n9UxuYe5VoWX/elo458lgyb
3NfuLlmWr5T1qYuOrob+6DltzR2aOb7h1JDuOuJE9/0zHW9Teh833c5eOup7
qOKeYTtu0XqLthMbmukou0POvIb7b1L9oTvjT5jryDq71eTEox5U9fKpMe/7
6ajPxmNUudsNCqqxKajegPzP+9knpLfFNXKMXdutraWODMuGxPW3vkrnD35z
qjtYR97BHNB82r9UatHObP0QHe2Z/LpSjs0l+lv+W7ujw/I/z+9t9U+svkDF
zjWdWWe4jmr+fTmj8TZXsvHtsnHzCB2tbRg80OnQeXpybdZ2v5E6Wlj/4eZP
vc5ScrlaK7OsdWR+8P6anWOcqZbJx6FZo/LvZ6/9o//aHif/h5dK+43WUYcJ
sz6P3n6Yck2au2/KPwcPtMmb05z2013Lfe1qj9XR+JoH9I6Lt1NP5ypOh/N/
fnfwy7RVtIESajdNy8z/Ob3plre7aTE9njGlUu1x+X//bqONHrp9PaX/1VGO
6X+/Z/X7pfLvWf37WvL6rF7fWt6f1ftXkc/H6vONlc/P6vObyPfj2vh+j+X7
s/r+bnJ9WF0fU7l+rK5foFxfVtfXQa4/q+sfKveH1f3JlfvH6v4dkfvL6v4O
k/vP6v6Pl/XBan2ky/phtX56yPpitb58Zf2xWn+usj5Zrc8nsn55ENZvc1nf
rNb3bVn/rNa/qTwfrJ6PjfL8sHp+Lsvzxer52ivPH7vj+XOQ55PV83ldnl9W
z28R+u/55v9/vuX55yp4/g/I/sBqf+gp+wer/cNO9hdW+8sp2X/4I/afZrI/
sdqfCjX+b/9itX+tk/2N1f62TvY/3ob9r73sj6z2xzeyf7LaPy1kf2W1vw6U
/ZfV/vtT9mdW+3Og7N+s9u9lsr+z2t+vy/7Pav9/L+cDq/PhsJwfrM4PGzlf
2APnywU5f1idPzvkfOLbOJ8c5PxidX4NkfON1fm2Xc4/VuffGTkfWZ2PYXJ+
sjo//eR8ZXW+9pDzl9X5ayLnM7/F+Rwk5zer8/umnO+szveqcv6zOv83SH3A
p1AfPJD6gVX98EXqC1b1hZPUH7wK9cdxqU9Y1Sc7pX5hVb9MkfqGVX3TROof
noH6Ryf1Eav66JPUTzwD9VOs1Fc8BPVVG6m/WNVfzaU+Y1WfrZf6jVX9Nl7q
O1b1XTOp/1jVf/2kPuQvqA/HSf3Iqn5MkPqSVX1JUn+yqj9TpT5lVZ82lPqV
Vf36R+pbVvXtPal/WdW/g6Q+ZlUfP5H6mVX93Frqax6G+jpe6m9W9Xem1Ods
hfq8nNTvrOr3P1Lf8zXU98FS/3MV1P9lpD9g1R9clv6Br6B/SJf+glV/oZP+
gzPQf6RIf8KqPykq/Qur/iVY+htW/c1m6X/4A/qfI9IfseqPpkn/xMvQP82U
/or7oL+yk/6Lc9B/hUp/xqo/eyD9GxfWS//WW/o7Vv2dnfR/3A/9X6j0h6z6
wzLSP7LqH39Jf8mqvyTpP9kY/ecG6U95HvrTYOlfWfWvq6W/ZdXffpb+l4eh
/7WS/phVf/xM+mdW/fMx6a/5Ifpr9N+s+m/05zwJ/XmA9O8cjv4d/T2r/v6O
9P+s+v+9og/wL+gD30Q/4HbQD6AvsNIXoD/weOgPTqJPcCvoE26iX/AY6Bc3
RN9gc+gbv0X/YKV/QB9hpY8cFf2Ek6CfQF9hpa80F/2FF0F/qSP6DGdDn/EW
/YaVfgN9h5W+kyP6Dyv9B/oQK32oouhHPB/6EfQlVvoS9CdW+tMN0adY6VPQ
r1jpVxdF3+ID0Legf7HSv5qIPsZ7oI9BP2Oln0FfY6WvVRT9jb2gv9mIPsfz
oM9tE/2OX0O/g77HSt+D/sdK/7ss+iArfRD6IdeHfhgp+iLfgL7oLvoj14H+
OET0SW4AfTJY9EtW+uUw0Td5OfRN6J+s9M/aoo9yBPRR6Kes9NMU0VdZ6atT
RH/lmtBf94k+y9HQZy1Ev+Xl0G+h77LSd91F/+V46L8/RB/mz9CHoR+z0o8X
i77MmdCXh4v+zCehP7cQfZrPQZ/2FP2aXaBfQ9/mudC3j4j+zdWhfw8VfZyV
Pg79nJV+flT0dR4HfR36Oyv9Hfo8K33eSvR7Xgn9Hvo+K32/uuj/HAH93138
Ad6u/AHxD3gv/AP4C1wc/gL8B1b+A/wJHgd/Av4Fv4N/0VT8Dd4Df+OL+B+8
Df4H/BFW/kgb8U/4HvyTzeKv8Bz4K8XEf2Hlv1wVf4ZN4c/Av+Hq8G9Kib/D
g+DvRIj/w3r4P/CHOAf+0APxj/g4/CP4S6z8pabiP3Fr+E/wpzgC/hT8K1b+
1Tbxt/go/K3d4n/xBfhf8MdY+WPwz/gJ/DP4a6z8tXXiv3ES/Ddv8ed4DPy5
+uLfsfLvosTf4zrw96aJ/8dN4f/pxR9k5Q8eFP+Qt8E/hL/Iyl9sKv4jm8N/
hD/JIfAn4V+y8i8Li7/JRvA34X+y8j9NxR/l3vBH+4l/ysHwT+GvsvJXM8R/
5SD4r/BneTn8Wfi3bAP/Fv4ud4e/e0z8Xx4O/xf+MPeCPwz/mIfAP4a/zEXh
L8N/5tPwn+FP82/4023Fv2Z/+NfwtzkX/jb8b14B/9tU/HG2gz8O/5yVf95M
/HXuDX+9kPjv7AX/Hf48K38e/j17wr+Hv8/K34f/z0vg/7sIH8ClwQeAH2DF
D4AvYFfwBeAPOBP8AfgEng0+obfwC6wDvwC+gRXfMEv4B14M/gF8BCs+AvwE
5+0UfuKp8BUcD74C/AX/AH9RQvgM/go+A/wGbwS/Ab6DFd+xWfgPHgP+A3wI
nwIf8kn4EbYDPxIgfAm/B18C/oQVf2IsfAovA58CfoV9wK+Ab2F/8C1jhH/h
vPnCv4CPYcXHgJ/hTeBnwNew4mvA3/Bh8Dfewudwe/A54HdY8Tvge/gk+B7w
P9wQ/A/4IK4OPqi98ENcEvwQ+CJWfJGZ8Ef8B/wR+CReBD4J/BJbgl+qJ3wT
1wffBP6JE8A/gY/iS+CjPgg/xTHgp8BXseKrwF/xOfBX3YTP4lTwWeC3OAL8
FvguZvBd4L9Y8V/gw7g4+DDwYzwC/Bj4Mh4Bvsxd+DPeAP4MfBp3AJ8Gfo2f
g18D38afwbeBf2PFv4GP49bg48DP8XLwc+Dr+BH4OvB33AT83QLh81jxeZnC
7/Ev8Hvg+7gc+D7wf9wb/B/4QPYEHwh+kBU/CL6Qh4IvbCf8IaeCPwSfyM7g
E8Evch3wi+Ab+RT4RvCPXAf8I/hIzgIfCX6Sm4KfBF/Jb8FXgr/k8+AvwWfy
z2/CZ4Lf5OvgN8F3suI7wX9yCvhP8KF8Fnwo+FEOAD9aTvhSHgO+FPwpK/4U
fCong08Fv8qO4FfBt3JT8K1ewr+yDfhX8LGcCz52k/Cz7A1+FnwtdwdfC/6W
l4C/BZ/LxcHngt/lr+B3wfdyGfC94H+5Ffhf8MGs+GDwwzwB/DD4Yh4Gvhj8
MZcDfww+mQ+DTwa/zN3BL4Nv5tvrhG8G/8zxwxwruDXb11P9PlT4Z1b/fkDO
f/+e1evXlNdn9f5Hav73/qw+XyX5fKw+fx35/PwE3y/8+X/fj9X3/5j93/dn
dX2yXf67PqyuX4xcP1bXN8Ppv+vL6vqPlOvPG3B/asv9YXX/Lsj9Y3V/y8/9
7/4y+Gd+JPefo7A+Osn6YLV+Lsv64TlYX9myvlitv6+y/litzxmyPrkq1m+0
rF9W6/uqrG9W6z9S1j+r52OwPB+snp9H8vywer5KCP/M6vm7Js8fq+cT/DOr
57ejPL+snm+dPN/MeP6byfPPrtgfLsv+wGr/AP/Man85L/sLg3/m17L/sNqf
wD+z2r+Wyv7Fan97Jvsbq/2vn+x/rPbHyrI/MvhnBv/Man9tK/srq/23ruy/
rPbnW7I/8wDs3zayf7Pa38E/s9r/W8j+z+p8eCfnA1/E+fFYzg9ug/OlhZwv
DP6ZV8n5w+p8GiTnE9vh/LKU84sn43z7a/nf+cbq/Osn5x9n4nx8IOcjD8f5
GSTnJ4N/5jdyvvIUnL+35fxldT73kvOZwT+zXs5vVue7u5zv3Bnnf5qc/6zq
g8ZSH7CqH4ZJ/cDLUV8sl/qCVf3xVeoPvoz6pJrUJwz+mYtJ/cKqvqkp9Q2r
+qex1D+s6qNTUh9xadRP3aR+YvDP3FrqK45F/XVU6i/ehfpsrtRnrOo38M/8
BfXddanvWNV/RYR/ZlUfBkt9yEtQP3pJ/cjgnxn8M6v6c7rUnwz+mXOkPmVV
vy6R+pVvoL49KfUtg39ma6l/eSTq4yypj7kl6ue1Uj8z+GcG/8yq/v4q9TeD
f+YYqc95BOr331K/8xDU91ukvufZqP8XSv3Pqj+IlP6AwT9zrPQPfA39xXTp
L/go+o806T+4HPqTc9Kf8Bn0LzWkf2FX9DdG0t/wLPQ/q6T/YdUfdZT+iBn9
k4/0T7wI/ZWd9Fecd036L2/pv7gp+jMz6c94Jfo3W+nfWPV39tLfcQD6v1XS
/7EH+sMf0h8y+Gd+If0jq/4yT/pLdkH/eVb6Ty6G/rS49KdsjP7VSvpXVv0t
+GcG/8zW0v+y6o87S3/MBvTPS6R/5pPor+2lv2bwzwz+mVPRn3+S/pzBP7O/
9O8M/pnBP7Mf+v/B0v8z+GcG/8xHoR/Yin7AU6AvBIm+wOCfGfwzH4E+cUr0
CQb/zJtFv2AD9I0g0TcY/DObiP7B4J8Z/DM3gH5ST/QTBv/M1qKv8HroLwmi
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

      "]]}, 
    {RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 0], Thickness[Large], 
     Dashing[{Small, Small}], LineBox[CompressedData["
1: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
dz3/st3XZFxaef5OX4dS+OjaqNGUk8k4xdbMsdXhUii9OWjaoGHJuOvbzftT
7peC+qTR01KjX+LGc8cmaRSXQnYX5fyWDV7ifhxycaFGGawP9+y5wvIFToTn
ih19y2qeCren2t5JuLJr/QF7bcrA+alJ/Mi855h2UzP91LoyMLxwv0U7vefY
aUKefa53Gdz98j4ncUUinjf7E7oytAwOth56aNO9BDT4PMbX9UUZZKpYlo9r
kIDhP34f1y4rA6tnPs3GT3mGiRP0g5zqlcNy96ZXfQOe4oqCfM0D7crh5rf+
elafn2B9CJ/l37cc1rVrk7ti1BO0DdKsG2ZWDktnrrNr7B2PRvE9dpTMKYef
c9zudy99jHE61qMnrSqHN5+fxD0Z/hiLYmx2V+8qh8O7jW0/ej9Cm+9mq+v7
lMP1lKo7Ph8e4q35M5q6XCmHgTeD0+PMHqJBkMFk66hyWPz9oe+i83H4wLVz
75tJNT+f7cThm+vE4aYZWjeOvyqHc60P7PhlF4tJh1/+afypHP6aPlTLehCD
87YWHmz5rxy6NO97SLVzDMZvbDfwTlMl/B192OKXCqLB/oFmFR2VcN3m/I85
z6Nx59ih958ZKyEuanHDDiei0Nep2tJkmBLq9BkyR2f+fUw6NzfAfLwSZvRq
oGPRJxL3j3ni+N5WCU9slOr76tzDpSWnXHUdlbDSaXXUw9QIVCnQ1PjgogSj
9sHpb4Lv4DpwejhqixIaeE0b+HJzOG6FZ1kdPZVwXpGv42pzG0ePrTd4s7cS
PP1+WiT0DEPnyn2B088qYVhsM5XwRqFYZP8i/splJdQNj9EzKA7Bw3d22buE
KeGVopVNv903UVv337jzUUp4XO/dqIqx19G8ldWBmnoILO/YW2+pqYf+NTY8
MjxJCR79jO7FJlzC69cua/inKyHpSNrBEK9gLFE9Y2Cbq4TRGic9h88Owoi4
e3ud3iihfofreXb65/D3pHXWye+U0L7pgbdt35/FZs/iBuxXKsEl5rvjrkN+
uG5fwJaTn5RQlnF1x/eBJ3GD2Rn1bxVKaBjQytWp8CjOOOU8K+C7Es74Hs4I
1z+InbM8t/v/rPn9O85+5uO9C80dhvcvq6x5ff9UmPzUdkXjJXn39lTVfD/t
/brNFszBqHzfrxtrvt71vPmomHML4HSzb5ZxNf/9gb3zuy+7uAncL6fdW1Dz
/c6cPP772m0PuJx69vq8mr9v6cUZq46pH4KWh001Y2p+ngsXPKYOND4Gzca4
jNhZ8/NGalq4+1mdhAZ5leU3a36fHmejp9RZ6gf/1ifrW5TUvL5Xf/9dsv0s
vDi6wHpWYc3zsiZo9+dngbAg4fK/wjwldG27adTd5PMQr6ysr8xUwq3Tveto
ZVyA7SV3p7gmK8FwYrfyRlkXocs9rT9HninBpNWoHeczL8OyO5E6w+KUcCJ2
XPCHtKugYp2TuzlSCZsztD2/vrgO/o4WFnNClXBKb8mluCc3wSzKyOV1zft/
1u7PqwGvQ8B3TVJPjUAl9A6xst2ccwvKTPsOLz2phIFODwbEpIaCsbpqt42H
lDDO872LWmIYOMSO6v5olxJuT4lfMS/uNrRvYG/2YlPN81K69FPK3XDonm4+
xL/meS1tnvrP8cYdiFOrtum3SAm2Y5a+0z0fAW/hvb/37JrvtzevWYeTd6Fo
VIfr8dZKaL1B77fNvnsw5UDz+4njlNDIqJ+eYnMkdBntdiR4qBIWO/f+Fr7i
PmxuErFnZm8lfH0Zca7CPgpSfdU833VTwogIDSNf62h4kHCt0aQ2Sshtvqvf
nZEP4N11vwbeGkqwGjv1+6Q+CFNNO6ndqaME7Qcr2t5tFgNjf7TSD/9WDtVh
Ngeb7YmBNg8+/T1SWg4Nezfv2O9vDPg5zog2zyuHK038BnZbFwu/Gu7VyX1Z
Dokq6oXFyljwKey7yvRhzfrQr/Lh5vlxYDekke/eO+Uwd8g2jfLsOAhb9bz1
2cvlMMenbF3vSQ/h2Ig3Dff4l8MEvQYjJj5+CIMO2xgNP1wOHfv162I27BGE
Tp3+Pnp7OaR0723b7tYj2HC1tWODtTXr048L+550fwz15311aLaoHBxvbyuw
8n8M1W9/LMuaXg4dvvxTXm0RD1sPn0mfMb4cjA9cDn29Ox6+lb64fmhoOZw4
9/7Ku9/xgHsqX60xKofHj/yiol2eQOyvud3rdygH3Yruo+cVP4GiByu7DNYo
h7BTJxsnzXwK7wcMtGn8pwyC2k6Y8yfpKTR2jOizQVkGs7XsKstGPYN/zxx1
XBVl0FI7W+dI+DMIql6wveGzMugxa9mx0h4JMPjQ89hOEWWwtKT83Hu/BDA5
Gj3lflAZwIixBsebJsI0GH8v3asM3I908FG4J8Ldrb2OLdpaBnV+FVXfrkiE
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
DYI2Dg==
      "]]}}, 
   {PointSize[Large], FaceForm[None], 
    {GrayLevel[0], Thickness[Large], 
     LineBox[{{0, 0}, {0.732561533804594, 0.28345741671647906`}}], InsetBox[
      StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)(t)\"\>",
       StripOnInput->False,
       FontSize->20], {0.7859210604053547, 0.959351056310177}, {0, 0}]}, 
    {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
     PolygonBox[{{0.7499999999999998, 0.8660254037844388}, {
      1.349249993009506, -0.4369207690004362}, {-1.4931723139997244`, \
-0.09530405309023288}}]}, {
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], 
      PointBox[{0.6855554798680477, 0.2652688905599283}], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(6\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->
         20], {0.6854071947511824, 0.2652115131053057}, {0.25, 1.5}]}, 
     {RGBColor[0, 0, 1], PointBox[{0.7499999999999998, 0.8660254037844388}]}, 
     {RGBColor[
       NCache[
        Rational[2, 3], 0.6666666666666666], 0, 0], 
      PointBox[{0.732561533804594, 0.28345741671647906`}], InsetBox[
       StyleBox["\<\"~\\!\\(\\*SubscriptBox[\\(X\\), \\(6\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->
         20], {0.6855554798680477, 0.2652688905599283}, {-1.5, -1.25}]}}}},
  ImageSize->600,
  PlotRange->{{-1.6, 1.6}, {-1.1, 1.1}}]], "Output",
 CellChangeTimes->{{3.7862684793855*^9, 3.786268567998084*^9}, {
   3.7862686509509563`*^9, 3.786268688623409*^9}, 3.786268769745239*^9, {
   3.7862689122968955`*^9, 3.786268922864973*^9}, 3.7878545550778027`*^9, {
   3.787854607009025*^9, 3.7878546322197037`*^9}, {3.787856998593671*^9, 
   3.7878570567165203`*^9}, 3.789722195339855*^9, 3.7904136040706778`*^9, {
   3.790414127853545*^9, 3.790414138793875*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{"\"\<0041_symmedian\>\"", ",", "symmQuarticPlot"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.786268933806776*^9, 3.786268935014546*^9}, {
  3.7862689728181605`*^9, 3.7862689804486074`*^9}, {3.786270194447098*^9, 
  3.78627019792682*^9}, {3.7862703327189665`*^9, 3.7862703332784414`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "makeRadiiGraphPlot"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "makeRadiiGraphPlot"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ylabel", "\[Rule]", "None"}], ",", 
     RowBox[{"legendPlacement", "->", "Left"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"makeRadiiGraphPlot", "[", 
   RowBox[{"a_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"degStep", "=", "1"}], ",", "ons", ",", "rads", ",", "o", ",", 
      "s", ",", "llp", ",", 
      RowBox[{"clrs", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "/.", "ptClrs"}], ")"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"\"\<inc\>\"", ",", "\"\<cir\>\"", ",", "\"\<npc\>\""}], 
         "}"}]}]}], ",", "ps", ",", "epi", ",", "lgd"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ons", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"orbitNormals", "[", 
         RowBox[{"a", ",", 
          RowBox[{"toRad", "@", "deg"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"deg", ",", "0", ",", 
          RowBox[{"360", "-", "degStep"}], ",", "degStep"}], "}"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"rads", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"getInradius", "@", "#"}], ",", 
          RowBox[{"getCircumradius", "@", "#"}], ",", 
          RowBox[{"getNinepointCircleRadius", "@", "#"}]}], "}"}], "&"}], "/@", 
       RowBox[{"Third", "/@", "ons"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ps", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thick", ",", "#"}], "}"}], "&"}], "/@", "clrs"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"epi", "=", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", 
        RowBox[{"\"\<cir\>\"", "/.", "ptClrs"}], ",", 
        RowBox[{"Arrowheads", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", ".03"}], ",", ".03"}], "}"}], "]"}], ",", 
        RowBox[{"Arrow", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"90", ",", "1.15"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"90", ",", "2.3"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<R/\!\(\*SubscriptBox[\(r\), \(9\)]\)=2\>\"", ",", "16"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"90", ",", 
            RowBox[{".5", 
             RowBox[{"(", 
              RowBox[{"1.15", "+", "2.3"}], ")"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.25"}], ",", "1"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}], ",", 
        RowBox[{"Arrowheads", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", ".03"}], ",", ".03"}], "}"}], "]"}], ",", 
        RowBox[{"Arrow", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"270", ",", ".55"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"270", ",", "2.3"}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<R/r=???\>\"", ",", "Large"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"270", ",", 
            RowBox[{".5", 
             RowBox[{"(", 
              RowBox[{"1.15", "+", "2.3"}], ")"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.25"}], ",", "1"}], "}"}]}], "]"}]}], "}"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"llp", "=", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "@", "rads"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Black", ",", "Medium"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "Medium"}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"\"\<a=\>\"", "<>", 
            RowBox[{"nfn", "[", 
             RowBox[{"a", ",", "1"}], "]"}], "<>", "\"\<, b=1\>\""}], ",", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "Large"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<t\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"Black", ",", "Large"}], "}"}]}], "]"}], ",", 
           RowBox[{"OptionValue", "@", "ylabel"}]}], "}"}]}], ",", 
        RowBox[{"FrameTicksStyle", "\[Rule]", "16"}], ",", 
        RowBox[{"Epilog", "\[Rule]", "epi"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "ps"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "Automatic"}], "}"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Legended", "[", 
      RowBox[{"llp", ",", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Directive", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Thickness", "@", "Large"}], ",", "#"}], "}"}], "]"}],
              "&"}], "/@", "clrs"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"#", ",", "Large"}], "]"}], "&"}], "/@", 
            RowBox[{"{", 
             RowBox[{
             "\"\<r\>\"", ",", "\"\<R\>\"", ",", 
              "\"\<\!\(\*SubscriptBox[\(r\), \(9\)]\)\>\""}], "}"}]}]}], 
          "]"}], ",", 
         RowBox[{"OptionValue", "@", "legendPlacement"}]}], "]"}]}], 
      "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7883884368734245`*^9, 3.7883884599135456`*^9}, {
  3.7883885048735647`*^9, 3.788388506820362*^9}, {3.7883885616198063`*^9, 
  3.7883887765058107`*^9}, {3.792838974199508*^9, 3.7928389743581305`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"radiiGraphPlot", "=", 
   RowBox[{"makeRadiiGraphPlot", "[", "2.", "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7750672979703164`*^9, 3.775067357889373*^9}, {
   3.7750674108327627`*^9, 3.775067650650186*^9}, {3.7750676816811914`*^9, 
   3.7750680068665075`*^9}, {3.7754078746931295`*^9, 3.775407879626133*^9}, {
   3.7760887002404423`*^9, 3.7760887866624575`*^9}, {3.7761053281858606`*^9, 
   3.7761059048601704`*^9}, {3.7862706924038887`*^9, 
   3.7862706929943376`*^9}, {3.7883443041715913`*^9, 3.788344391537691*^9}, {
   3.7883444268563333`*^9, 3.788344434537408*^9}, {3.788344485850918*^9, 
   3.7883445298496165`*^9}, {3.788347479740937*^9, 3.788347484947542*^9}, {
   3.788349034866767*^9, 3.788349113385333*^9}, 3.788388433469533*^9, {
   3.7883884675588202`*^9, 3.788388471932687*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        LineBox[CompressedData["
1:eJxdlntUVXUWxxksfKzRKCSdqfAoWsqY4INMQvmaL1DRy0PkIXjui3t53Mu5
Tyez5qAlrtboULQ0pGVHJTUSxVc+JpuTojjKUjAfQ2oey3GWxVJ85ORM2jhr
7m/W3vCP6+tmH875/fb+fj+DLRWZ9vCwsDDnr8LC/vvv/366Um4tGllw9fiF
lNB/oOFg56fqixdDuhc6VvtPlcdfCulILJhx59SV174J6f7oWDfucM7eyyE9
EJldPy3ZnGuE9LOYnbR11ZJPhJYwKGV4iuOU0EPw87JedyvbhR6KOydbdm3b
J/TzGP2v5PN5K4UejrKo+ph3coSOw67YWFvjb4QeidzamBOL94j3GYV+6Rec
EROETkDxZ6YxB74U7z8a4T5H270MocdgRcHqwiE/iO8di95Dvv7o9kqhx6Ey
zn1zY5LQibj3XOsD6ZY4r5ewZ8Uv4wftEHo85j3rbhmzWOiXkXqoXb04S+gJ
eP/7PotrhgmdhIt9L644ESH0K/h+8LCa+zfE/SSjo3Da/NWXhJ6Im9GOWOm0
0JPw3e3H2p5pFToF07dnTIg+ITRgXlZr/uhkSKvAppcS87PPifpknK0/2vPs
FVGfjPg349qOdYn6q/Cu7Z98KTz0fuqrWLM9tubIAPG+U7Au/mEwKV7Up+Cn
G4vU+6miPhX+lE1Gs03Up+Lu7h49rUtFfRq2DJyYvm69qE/DmhVXt0w9JOrT
0dza2/rCVVGfjsQ/rTr7257iPmZg1+07L96LC2l1Bs45TIk1c0U9FYdN0c+d
9It6Khq2p5neXivqaWiPMlJrdVFPQ9WAdmfnNVGfieSRW85Z+obmRZ2JiXWJ
hd+OFfMzC5ExMXMy80V9FlzhEY46VdRn4/GUZ/Zv3iTqs4GBLe9ZWkU9HfVX
ssv23RL1dCwNl9tWPy3mdw4ObLqc3ZkU0uocvOBqqNxSJOpz0fXvuS1/rhT1
uVi/cYRnQL2om7Bv7PLaxiMhDRM62s/HeK6J3zeh8Z1rrXE9Qvukm9Dikho2
PyX2KwNpsYu0TwaHNDIwIqrztd8lhLSagcSshvThk0R/Bupazy+pmyX6M7F+
6afbVeEPyETQefj0VzbRn4meX+zu/64i+jPx+5LT3+1+XfRnwTtuWOcry0V/
FlqT34uOrRb9WcC0kUsdtaI/C2Oub/1jxAbRn40PHotqeSD8CNlYe916f+YO
0Z+NIxNXSp17RX82KtfYXZcPiv55aI47PiX2sOifhzd6/23CZy2ifx6krSkD
1pwQ/fNgr99xpvmk6M/B3Spr3SThd8hBn7StzT2+Ev05GJ2/tyPqjOjPwSxp
To1b6LD5iKd1zMevWf983KPP1+dDZn8/F4Po+yEXb7P3z8Vx+n16Llax789D
Mz0f5KGWnV8e1tLz1fOQyM4/H6n0fpCPQ+z+8lFJ71fPx+vs/gvwBJ0PFCDA
5qcADXS+9AJsY/O3ACl0PrEAcWx+F8BM51tfgBNs/guxi+4HCnGd7U8hjtH9
0gvxMdu/IjzxM9lPFCGR7q9ahK/pfutFqGP7vxCN1B+wEGbqH+pCDKX+oi/E
m8x/ZDxJ/UmSMY76F2QEqL/JMtZQ/1NlnKX+qMn4gfqnLqNHBvFXQ8ZR5r9m
tFN/lswwU/+GGZepv8tm7Kf+r5rxC80HzYyIPSQ/dDNaaL4YZiy8SfPHgsM0
nyQLmmh+wYIPab7JFrxB80+1oP/HJB81C+pofuoWZNB8NSxYz/LXin53SD5L
VkQ8TfIbVuQUkXyXrUgaQvJftWJUP8IHmhXfUn7QrUinfGFYsY7xhw0HKJ9I
NoyKIfwCG+op38g2LKP8o9pQS/lIs+Flyk+6DR9QvjJsyGb8ZcdKymeSHV9Q
foMdVZTvZDviKP+pdvQ9RfhQs+Me5UfdDonypWHHVMafxUilfCoVYwnlVxRj
MuVbuRj7KP+qxVhP+VgrBuNnvZjzs1HcjZ8dnJ8lB+dnODg/yw7Oz6qD87Pm
6Pb9Ds7PhqMbPzs5P0tOzs9wcn6WnZyfVSfnZ82Jh156/07Oz4azGz+XoIrO
l1SCB5SfUcL5WS7h/KyW8PnWSlDL5r8E31B+Nkrwd8bPpThH+VkqRSflZ5Ti
MuVnuZTzs1rK+VkrRQPb/1LOz0ZpN34uQ4D6i1TG+Rll2ED9SS7DfcrPahnn
Z62M87Nehnrqj0ZZN34ux1+ov0rlnJ9Rjp3Un+VynKb+rZajhfKzVo5tzP/L
0UHzwSjHcsbPLkyl+SK5AJY/LkTRfJJdcNL8Ul3oRfNNcyGV5p/u4vxsuLCC
5acbe2m+Sm6MoPkLN25Qfpbd0Gh+q27sp/muuXGB5r/uxk7KB4YbXzJ+qMBM
yhdSBWIpf6ACYyifyBWcn9UKzs9aBecfvQJ9KB8ZFfAxflLgp3wVqeAo5S9J
4fycoGAs5TconJ9NCj6k/CcrOEb5UFFQRflRVXCE8mW1gj9Q/tQUPE/5tEmB
g/KrruBHyrdtCh6n/GsonI+7lG787MEIWo/0oBftlzz4J31+gofzOzz8/Uwe
LKfvL3twiH6f8qjOvt8DnZ5PtQcb6flpHtTQ823yIImev+7BdHo/bR4cp/dn
ePj9dnmwjN2/F0/S+Yj08vmRvGik85Xg5fMHL5LpfJq8iKfzK3sxl8634sUp
Ov+ql/NztRc9TpP90bz4nO5Xkxdb6f7pXjyk+9nm5fxseHGG7neXFxvY/vuw
m/pDpI/zs+RDLPWXBB8U6j/wcX8y+ZBB/Uv2AdTfFB/2MH72oU9/4o/VPhyk
/qn5cI76a5MPD6n/6j5coP7c5oOP+rfhw1+pv3f5sJb5vx8/0nyI9GMo5WfJ
j500XxL8iKb8DD9qaT6Z/JyfZT8qab4pfgQZP/txg+ZjtR9PjSf5qflRSvO1
6dHzaP7qfkyk/Nzm5/xs+Dk/d/lxi+V/AGmUnyMDnJ+lAN6ifJEQ4PyMAP5B
+cQU4PwsBzg/K4Fu/PzoeZSPqgOcn7UA5+emAOdnPcD5uS2A45TfjADn564A
5+ewIO5TPowMcn6UghhM+TIhyPkZQc7PpiA+p/wqBxFO+VYJduPn4P/5+T/L
TDnH
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0.5, 0, 0.5]], 
        LineBox[CompressedData["
1:eJxdl3l0VPUVx0M8cEhq07QCBY7VRyBsEZgEEgSBfANkYR/IOlnf7JlkMvNm
rafV9p0KQkEPoSJQFnlQi1ERAlhQe6oPMNJaCqnIYmV5LJKAaRkpW8RCaZ2f
597kn5xvbu7kvd/v3u/3kyE2/yJnYkJCQn2vhIT/ff/2K5b71XbT1v7ee7nx
HyDnlSS1zymh+6Lk4HMPV16/H9ep2ND7xu6kHQn4VvfD1Fudl/9c1SuuB8Ix
eJNz3SWhH0VS90X7I1MT41rCz2/PVVe7hE6D6Yf7x1yoF3oYKt6YtfEP84Qe
juu+ixmFjwk9EjdGTj5SeEF8/mj0eWvJ2ZbNQj+B4u0O14eVQo9FzbDya9sG
CG3C5YltidXHxfNn4vLBLbppndBZGHJ3xIgrdUKPx87Fh3d3PiH0BJzs1ee4
dk+cRzbSDtyZNWqH0Dk4rQ8fOqhe6Il4Lv2L0q8zhH4S5yq27sjrFuc7Cfeu
XppvOSr0ZOw8Z/nLa28J/RQGdy7/x+qXhJ6Cxepr4RdUoafifNiqJYSFnoYr
2cNXNjQJnYtn8x+S5nx3v8AYd1HvDCWuVWBczdw31z8t6nlI/bTX7cwlop6H
x19O71r5sqhPh3VFV37l66I+HQVDf5c0VRf1GSiKTht49TNRn4G/LxlxYOAt
UZ+Jd4eV1C3pFz8PdSbGp13tik0Q55OPjv39dknlop6PxBkLvjjzM1EvwCrP
UPfNzaJegClHxvonfiTqhfj+sOHzf/pPUS/Ep8feX9uWLO6vCJtuvhFLfzyu
1SIcaH/V/PF4UZ+FytQz0S1Foj4LU09vGrOhRtRnI3DlYk5LUNRno/Op1snv
LRX1OVA8X+49uFHU56A5Z29s3y5Rn4sTtj4dyz8S9bn4a0mgIPNzUZ8HW1JS
rXZN1Odh/9is/kceEvM7H1e2VV9o/XFcq/NhO/brA7kZor4Az95/MTM4TdQX
wJL8TRoWiroZp1K2391ij2uY8W7e0RXNEfH7Zox9aXFS76VxrZuRe/zC97rX
iv6FOJfre97VIvoXojY99mHhO6J/IaavanGvPST6F2JC8Sd15hOifxHG7wt2
NQl/wCI82u5b++VXon8RVn9iZLXdE/2LMG1Zy4lbyYnx/mLsqss6+8yAuEYx
LCmBy8VD4lotRvKQPoefzohrvRifZ695vXOC6C+Bfi3/hCb8CCXY3Kvm0iv5
or8Eed0Pa8Zc0V+Ct3dbUhzFor8UHeuHeEdYRH8pfpI2c8yoWtFfilevX7rr
ton+UtzY8/G+C07RX4YU86nIOuF3KEPS2c2/XNYg+suQq6YU724U/WX49//9
WfSXo4DWUY5k1l+OH9DP18vRzf5+BbbS50MFBrDnr4BB30+vgMbe34Jcej6w
YBM7Pws+oOerW3CCnX8l7krkflCJGnZ/lWih96tX4kl2/1VYSecDVZDY/FQh
i86XXoURbP6qkUfnE9WQ2fxWo43Ot/7g99n812Ak3Q/U4AO2PzU4TvdLr0E1
279a+Ol+oha1dH/VWlym+63XYg/b/zqUUX9AHXTqH2od/kb9Ra/DcuY/Mvcn
SUYX9S/IcFB/k2VMov6nylhA/VGTsZP6py5jGfVXQ8YZ5r9WfD2U+LNkRTr1
b1ixlPq7bMXt6cT/VSsO0XzQrJhM80O34kWaL4YVb7P8sWESzSfJhgk0v2DD
PJpvsg19af6pNtw7RvJRs8FE81O3YRrNV8MGF8tfO07SfJbsuEHzG3b8iua7
bMcgmv+qHdsoH2h2XKf8oNs5Xxh2rGf84cBFyieSg/MLHDhP+UZ24B3KP6oD
wykfaQ7EKD/pDlyhfGU44GP85UQd5TPJiQGU3+DEN5TvZCdilP9UJ2opH2pO
TKH8qDsRoXxpOPGfO5Q/XbBQPpVc6Ev5FS68QPlWdmEc5V/VhUzKx5oLjJ91
F+dnw9WDn92cnyU352e4OT/Lbs7Pqpvzs+ZGDnt/N+dnw92Dn+s5P0v1nJ9R
z/lZruf8rNbDoPer1XN+1ush0fkw6nvwsweH6XxJHvRn8+fh/Cx7OD+rHlyi
8615cJvNvwfb6X4YHkiMnxuwgu6X1IBrbP8a0EH3U27g/Kw2cH7WGpDO9r+B
87PR0IOfG1FF/UVq5PyMRsyi/iQ34gz1L7WR87PWyPlZb8Qd6o9GYw9+9mID
9VfJy/kZXvSm/Cx7cYz6t+rFGurvmpfzs+7l+WB4UcD4uQlemi9SEzpY/jTB
T/NJbsJKml9qE07SfNOa0EbzT2/i/Gw04Y8sP324TvNV8sFO8xc+/ILms+yD
jea36sNJmu+aD+/R/Nd9GEX5wPBhPuMHPwzKF5IfXsof8GM25RPZjxzKL6of
2ZRvND8eo/yj+7GG8pHhRz7jJwVvUr5KVWCl/CUpuE/5zKTgGOU3KHif8p1Z
wRrKf7ICUD5UFPye8qOqoJPyZbPC+VlTsJHyaauCm5RfdYXzbfsDTfnXUFBI
+Tim4Bbj5wBm03pqAD+i/VKAf74pwPkdAf585gBS6PPLAfyLvp8SwA72/gHk
0/NpDmAlPT8tgDZ6vq0BHKXnrweQSP+/aQ+ggt6fEcAeer+xALLZ/QfxGzof
qUE+P1IQo+l8mYLIpvOHIIrofJqDcNL5lYM4S+dbCWIKnX81yPejOYhWuj9a
EJ/R/WoNopTunx5EgO5nexB1dH+NILrofseC2Mv2P4Ry6g+pIRyg/iGFcJj6
iymEVdR/EIKH+pM5hPPUv+QQgtTflBAyGT+HMJ36Y3MIe6l/aiH8lvprawiH
qP/qIXRQfm4PYTD1b+NBP/X3WAjdlJ8Twmin+ZAaRgbNDymMTTRfTGH8ieYP
wphN88kc5vwsh1FG800JI5nx8wNN87E5jEE0P7Uwsmi+tobxDM1fPYzTNJ/b
w5yfjTDn51gYA1j+R7CD8kFqhPOzFOF8YYpwfkYEBuUTc4Tzsxzh/KxEevBz
BKMpHzVHOD9rEc7PrRHOz3qE83N7BI9QfjMinJ9jEc7PCVHUUD5MjXJ+lqJo
pHxpinJ+RpTzszmKcZRf5Si8lG+VaA9+jn7Hz/8FDLV4gA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[
         0.8588235294117647, 0.4392156862745098, 0.5764705882352941]], 
        LineBox[CompressedData["
1:eJxdl3l0VPUVxwMeOCS1aVqBAsfqIxC2CEwCCYJAvgGysA9knaxv9kkymXmz
1tNq+04FoaCHUBEoizyoxagIASyoPdUHGGkthVRksbI8FknAVIaULWKxtJ2f
597kn5xvbu7kvd/v3u/3k6E2/2Jn74SEBE+vhIT/fv//Vyznxg7TtgHer3Li
P0D2K4lq39NC90Pxoecerui6Htcp2Njn5p7EnbG47o9ptzuu/LnyRlwPgmPI
Zuf6y0I/isTuS/ZHpnXFtYSf35mnrnEJnQrTDw+MvegRejjK35i96Q/zhR6B
Lt+l9ILHhB6Fm6OmHC24KD5/DPq+tfRc8xahn0DRDofrwwqhx6F6eNn17QOF
NuHKpNbeVSfE82fgyqGtumm90JkYem/kyKu1Qk/AriVH9nQ8IfREnOrV94R2
X5xHFlIP3p09eqfQ2Tijjxg22CP0JDyX9kXJ1+lCP4nz5dt25naL852M+9cu
L7AcE3oKdp23/OW1t4R+CkM6VvxjzUtCT8US9bXwC6rQ03AhbNUSwkJPx9Ws
EavqG4XOwbN5D0lzv7tfYKy7sE+6EtcqML563psbnhb1XKR82utOxlJRz8Xj
L6d1rnpZ1GfAurIzr+J1UZ+B/GG/S5ymi/pMFEanD7r2majPxN+Xjjw46Lao
z8K7w4trl/aPn4c6CxNSr3XGJorzyUP7gf67pTJRz0PvmQu/OPszUc/H6rph
7ltbRD0fU4+O80/6SNQL8P3hIxb89J+iXoBPj7+/rjVJ3F8hNt96I5b2eFyr
hTjY9qr54wmiPhsVKWejWwtFfTamndk8dmO1qM9B4Oql7OagqM9Bx1MtU95b
JupzodR9ue/QJlGfi6bsfbH9u0V9Hk7a+rav+EjU5+GvxYH8jM9FfT5siYk1
2nVRn48D4zIHHH1IzO8CXN1edbHlx3GtLoDt+K8P5qSL+kI8++2LGcHpor4Q
lqRvUrFI1M04nbzj3lZ7XMOMd3OPrWyKiN83Y9xLSxL7LItr3YycExe/171O
9C/C+Rzf865m0b8INWmxDwveEf2LMGN1s3vdYdG/CBOLPqk1nxT9izFhf7Cz
UfgDFuPRNt+6L2+I/sVY84mR2Xpf9C/G9OXNJ28nif0vwu7azHPPDIxrFMGS
HLhSNDSu1SIkDe175On0uNaL8HnW2tc7Jor+YujX805qwo9QjC29qi+/kif6
i5Hb/bBmzBP9xXh7jyXZUST6S9C+Yah3pEX0l+AnqbPGjq4R/SV4tevyPbdN
9Jfg5t6P9190iv5SJJtPR9YLv0MpEs9t+eXyetFfihw1uWhPg+gvxb/+58+i
vwz5tI4yJLH+MvyAfr5ehm7298uxjT4fyjGQPX85DPp+ejk09v4W5NDzgQWb
2flZ8AE9X92Ck+z8K3BPIveDClSz+6tAM71fvQJPsvuvxCo6H6iExOanEpl0
vvRKjGTzV4VcOp+ogszmtwqtdL71B7/P5r8ao+h+oBofsP2pxgm6X3o1qtj+
1cBP9xM1qKH7q9bgCt1vvQZ72f7XopT6A2qhU/9Qa/E36i96LVYw/5G5P0ky
Oql/QYaD+pssYzL1P1XGQuqPmoxd1D91GcupvxoyzjL/teLrYcSfJSvSqH/D
imXU32Ur7swg/q9acZjmg2bFFJofuhUv0nwxrHib5Y8Nk2k+STZMpPkFG+bT
fJNt6EfzT7Xh/nGSj5oNJpqfug3Tab4aNrhY/tpxiuazZMdNmt+w41c032U7
BtP8V+3YTvlAs6OL8oNu53xh2LGB8YcDlyifSA7OL3DgAuUb2YF3KP+oDoyg
fKQ5EKP8pDtwlfKV4YCP8ZcTtZTPJCcGUn6DE99QvpOdiFH+U52ooXyoOTGV
8qPuRITypeHEv+9S/nTBQvlUcqEf5Ve48ALlW9mF8ZR/VRcyKB9rLjB+1l2c
nw1XD352c36W3Jyf4eb8LLs5P6tuzs+aG9ns/d2cnw13D372cH6WPJyf4eH8
LHs4P6seGPR+NQ/nZ90Dic6H4enBz3U4QudLqsMANn91nJ/lOs7Pah0u0/nW
6nCHzX8ddtD9MOogMX6ux0q6X1I9rrP9q0c73U+5nvOzWs/5WatHGtv/es7P
Rn0Pfm5AJfUXqYHzMxowm/qT3ICz1L/UBs7PWgPnZ70Bd6k/Gg09+NmLjdRf
JS/nZ3jRh/Kz7MVx6t+qF2upv2tezs+6l+eD4UU+4+dGeGm+SI1oZ/nTCD/N
J7kRq2h+qY04RfNNa0QrzT+9kfOz0Yg/svz0oYvmq+SDneYvfPgFzWfZBxvN
b9WHUzTfNR/eo/mv+zCa8oHhwwLGD34YlC8kP7yUP+DHHMonsh/ZlF9UP7Io
32h+PEb5R/djLeUjw488xk8K3qR8laLASvlLUvAt5TOTguOU36Dgfcp3ZgVr
Kf/JCkD5UFHwe8qPqoIOypdNCudnTcEmyqctCm5RftUVzrdtDzTlX0NBAeXj
mILbjJ8DmEPrKQH8iPZLAf75pgDndwT485kDSKbPLwfwFX0/JYCd7P0DyKPn
0xTAKnp+WgCt9HxbAjhGz18PoDf9/6YtgHJ6f0YAe+n9xgLIYvcfxG/ofKQE
+fxIQYyh82UKIovOH4IopPNpDsJJ51cO4hydbyWIqXT+1SDfj6YgWuj+aEF8
RverJYgSun96EAG6n21B1NL9NYLopPsdC2If2/8Qyqg/pIRwkPqHFMIR6i+m
EFZT/0EIddSfzCFcoP4lhxCk/qaEkMH4OYQZ1B+bQthH/VML4bfUX1tCOEz9
Vw+hnfJzWwhDqH8bD/qpv8dC6Kb8nBBGG82HlDDSaX5IYWym+WIK4080fxDG
HJpP5jDnZzmMUppvShhJjJ8faJqPTWEMpvmphZFJ87UljGdo/uphnKH53Bbm
/GyEOT/HwhjI8j+CnZQPUiKcn6UI5wtThPMzIjAon5gjnJ/lCOdnJdKDnyMY
Q/moKcL5WYtwfm6JcH7WI5yf2yJ4hPKbEeH8HItwfk6IopryYUqU87MURQPl
S1OU8zOinJ/NUYyn/CpH4aV8q0R78HP0O37+D7K1Ux0=
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0., 360.}, {0, 2.302775637731993}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {
       Dashing[{Small, Small}], 
       RGBColor[0.5, 0, 0.5], 
       Arrowheads[{-0.03, 0.03}], 
       ArrowBox[{{90, 1.15}, {90, 2.3}}], 
       InsetBox[
        FormBox[
         StyleBox[
         "\"R/\\!\\(\\*SubscriptBox[\\(r\\), \\(9\\)]\\)=2\"", 16, 
          StripOnInput -> False], TraditionalForm], {
        90, 1.7249999999999999`}, {-1.25, 1}], 
       RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], 
       Arrowheads[{-0.03, 0.03}], 
       ArrowBox[{{270, 0.55}, {270, 2.3}}], 
       InsetBox[
        FormBox[
         StyleBox["\"R/r=???\"", Large, StripOnInput -> False], 
         TraditionalForm], {270, 1.7249999999999999`}, {-1.25, 1}]}, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{None, None}, {
        FormBox[
         StyleBox["\"t\"", {
           GrayLevel[0], Large}, StripOnInput -> False], TraditionalForm], 
        None}}, FrameStyle -> {{
        GrayLevel[0], Medium}, {
        GrayLevel[0], Medium}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     FrameTicksStyle -> 16, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, Method -> {}, PlotLabel -> 
     FormBox[
       StyleBox["\"a=2.0, b=1\"", {
         GrayLevel[0], Large}, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0., 360.}, {0, 2.302775637731993}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox["\"r\"", Large, StripOnInput -> False], 
       StyleBox["\"R\"", Large, StripOnInput -> False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(9\\)]\\)\"", Large, StripOnInput -> 
        False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    0.8588235294117647, 0.4392156862745098, 
                    0.5764705882352941]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    0.8588235294117647, 0.4392156862745098, 
                    0.5764705882352941]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8588235294117647, 0.4392156862745098, 
                    0.5764705882352941], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5725490196078431, 0.2928104575163399, 
                    0.38431372549019605`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.8588235294117647, 0.4392156862745098, \
0.5764705882352941]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8588235294117647, 0.4392156862745098, 
                    0.5764705882352941]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8588235294117647, 0.4392156862745098, 
                    0.5764705882352941], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 2}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Before"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.776105716175856*^9, 3.7761057328006153`*^9}, 
   3.7761057740105715`*^9, {3.776105813491808*^9, 3.7761058341717834`*^9}, {
   3.776105880086489*^9, 3.776105905631414*^9}, 3.7862609993553944`*^9, 
   3.786267328421528*^9, 3.7862675381301084`*^9, 3.78627069583272*^9, 
   3.788344243942548*^9, {3.788344310001193*^9, 3.7883443924077787`*^9}, {
   3.7883444281628747`*^9, 3.788344435111451*^9}, {3.7883445085748124`*^9, 
   3.7883445304436255`*^9}, 3.788347072867523*^9, 3.7883473074383497`*^9, 
   3.788347485805639*^9, {3.7883490717154713`*^9, 3.7883491166802425`*^9}, 
   3.78838847243931*^9, 3.788388508651292*^9, {3.7883886199610977`*^9, 
   3.788388703305539*^9}, {3.788388753131548*^9, 3.788388777752447*^9}, 
   3.7897221967420692`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{"\"\<0075_radii_plot\>\"", ",", "radiiGraphPlot"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.775407883466461*^9, 3.7754079138965635`*^9}, 
   3.7760887143466516`*^9, {3.776088792867757*^9, 3.776088796131032*^9}, {
   3.7862675420406523`*^9, 3.7862675453045163`*^9}, {3.7862702023834124`*^9, 
   3.786270213015012*^9}, {3.7862706988706274`*^9, 3.786270699391223*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"minMaxrR", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Delta]", ",", "c2", ",", "Rmin", ",", "Rmax", ",", "rmin", ",", 
       "rmax"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Delta]", "=", 
       RowBox[{"Sqrt", "@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", "^", "4"}], "-", 
          RowBox[{
           RowBox[{"a", "^", "2"}], "*", 
           RowBox[{"b", "^", "2"}]}], "+", 
          RowBox[{"b", "^", "4"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c2", "=", 
       RowBox[{
        RowBox[{"a", "^", "2"}], "-", 
        RowBox[{"b", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Rmin", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", "^", "2"}], "+", "\[Delta]"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "a"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Rmax", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", "^", "2"}], "+", "\[Delta]"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "b"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rmin", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Delta]", "-", 
          RowBox[{"b", "^", "2"}]}], ")"}], 
        RowBox[{
         RowBox[{"b", "^", "2"}], "/", 
         RowBox[{"(", 
          RowBox[{"c2", " ", "a"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rmax", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", "^", "2"}], "-", "\[Delta]"}], ")"}], 
        RowBox[{
         RowBox[{"a", "^", "2"}], "/", 
         RowBox[{"(", 
          RowBox[{"c2", " ", "b"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Rmin\>\"", "\[Rule]", "Rmin"}], ",", 
        RowBox[{"\"\<Rmax\>\"", "\[Rule]", "Rmax"}], ",", 
        RowBox[{"\"\<rmin\>\"", "\[Rule]", "rmin"}], ",", 
        RowBox[{"\"\<rmax\>\"", "\[Rule]", "rmax"}]}], "|>"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7883478219151154`*^9, 3.788347971407606*^9}, {
  3.788348109070985*^9, 3.788348218944597*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<Rmin\>\"", ",", "\"\<rmin\>\""}], "}"}], "/.", 
  RowBox[{"minMaxrR", "[", 
   RowBox[{"1.5", ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7883482202813435`*^9, 3.7883482251994123`*^9}, {
  3.7883482805264482`*^9, 3.7883483057664604`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.4008541396588878`", ",", "0.5080332901208872`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7883482254484625`*^9, {3.7883482847735972`*^9, 3.7883483061574736`*^9}, 
   3.7897221977963037`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"radiiScatterPlot", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"degStep", "=", "2.5"}], ",", 
      RowBox[{"as", "=", 
       RowBox[{"{", 
        RowBox[{"1.001", ",", "1.25", ",", "1.5", ",", "1.75", ",", "2."}], 
        "}"}]}], ",", "ons", ",", "rads", ",", "o", ",", "s", ",", "lp", ",", 
      "Rr", ",", "Rr9", ",", "clrs", ",", "lab", ",", "rmin", ",", "parMin", 
      ",", "parMax"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ons", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"orbitNormals", "[", 
           RowBox[{"#", ",", 
            RowBox[{"toRad", "@", "deg"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"deg", ",", "0", ",", 
            RowBox[{"360", "-", "degStep"}], ",", "degStep"}], "}"}]}], "]"}],
         "&"}], "/@", "as"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rads", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"getInradius", "@", "#"}], ",", 
            RowBox[{"getCircumradius", "@", "#"}], ",", 
            RowBox[{"getNinepointCircleRadius", "@", "#"}]}], "}"}], "&"}], "/@", 
         RowBox[{"Third", "/@", 
          RowBox[{"ons", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "ons"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Rr", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "&"}], "/@", 
         RowBox[{"rads", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "rads"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Rr9", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "&"}], "/@", 
         RowBox[{"rads", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "rads"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"parMin", "=", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Rmin\>\"", ",", "\"\<rmin\>\""}], "}"}], "/.", 
         RowBox[{"minMaxrR", "[", 
          RowBox[{"a", ",", "1"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", 
          RowBox[{"First", "@", "as"}], ",", 
          RowBox[{"Last", "@", "as"}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Dotted", ",", "Black"}], "}"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"parMax", "=", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Rmax\>\"", ",", "\"\<rmax\>\""}], "}"}], "/.", 
         RowBox[{"minMaxrR", "[", 
          RowBox[{"a", ",", "1"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", 
          RowBox[{"First", "@", "as"}], ",", 
          RowBox[{"Last", "@", "as"}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Dotted", ",", "Black"}], "}"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"clrs", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Hue", "[", 
         RowBox[{"1", "-", 
          RowBox[{"#", "/", 
           RowBox[{"Length", "@", "as"}]}]}], "]"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "@", "as"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"lp", "=", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"parMin", ",", "parMax", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"PointSize", "@", "Medium"}], ",", 
               RowBox[{"clrs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"Point", "@", 
                RowBox[{"Rr", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "@", "rads"}]}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<b=1\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "Large"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Black", ",", "Medium"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "Medium"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", ".65"}], ",", 
        RowBox[{"FrameTicksStyle", "\[Rule]", "16"}], ",", " ", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"Black", ",", "Large"}], "}"}]}], "]"}], "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{"\"\<R\>\"", ",", "\"\<r\>\""}], "}"}]}], ")"}]}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Legended", "[", 
      RowBox[{"lp", ",", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "@", ".0125"}], ",", "#"}], "}"}], "]"}], 
           "&"}], "/@", "clrs"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<a=\>\"", "<>", 
              RowBox[{"nfn", "[", 
               RowBox[{"#", ",", "2"}], "]"}]}], ",", "16"}], "]"}], "&"}], "/@",
           "as"}]}], "]"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7750681202023635`*^9, 3.7750681737951117`*^9}, {
  3.775068204338416*^9, 3.7750684037772303`*^9}, {3.7750684636820097`*^9, 
  3.775068978401907*^9}, {3.775408376955265*^9, 3.775408392043669*^9}, {
  3.7760888048309355`*^9, 3.77608883480732*^9}, {3.788344264280511*^9, 
  3.788344292529845*^9}, {3.7883443998083115`*^9, 3.7883444398344917`*^9}, {
  3.7883445421844554`*^9, 3.7883445592113986`*^9}, {3.788344597616639*^9, 
  3.788344602009961*^9}, {3.788347545524414*^9, 3.788347674676312*^9}, {
  3.788347993602359*^9, 3.7883480376272635`*^9}, {3.788348092250248*^9, 
  3.788348093004552*^9}, {3.7883482516424255`*^9, 3.788348274298894*^9}, {
  3.7883483134524355`*^9, 3.788348597514289*^9}, {3.7883487174726925`*^9, 
  3.7883487477755227`*^9}, {3.7883488505146437`*^9, 3.7883489165385528`*^9}, {
  3.788348951043562*^9, 3.7883489909404516`*^9}, {3.788350979320465*^9, 
  3.7883510072792873`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         Dashing[{0, Small}], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         Dashing[{0, Small}], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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

         "]]}}}, {
      PointSize[Medium], 
      Hue[
       NCache[
        Rational[4, 5], 0.8]], 
      PointBox[CompressedData["
1:eJy9lF1Ik2EUx9fG0qZmdpFRiCW+00lhNzarmU5XaX5N08IZiU6LEBzYh1aL
ZJGgEIqamjcFhYiuLEPIrCnLBE370DQNLxRSkvKDKBUvtDz/c/WCzEC6GOPP
4TzPOb/34bc7w5SYJZVIJKV/fyv/UcJ4spt0NnTnK/WiQjoaKk+coGyeDKac
9nqSssWgobwxZIbyYL+WsixtjnLh70jKSdYlypXhCZRLyp1OruQ7KgPlrvwt
lGs2GylHtm+nPJucTVk97E25LSeX8q1jAuWfI3mUT1n9Kbdor1Gu6FFRnkk3
U+6sQF0ZgHrBDvRPN6K/uwbn6/fh/G+XcH+5C+5/74/5HtoyKF/VYX7LlxTK
XpnYz7iop2zxwf6bWrD/dXfwiasFH79a8IsJAb8qHfh6jIBvFvPXMP+hVNTd
fqFe3Id+IRv9G2JxvnQC57/Mxv1KeRRlexPmq4oBf88yzJ+0B/xzTNjPUwH+
zU+wf2809i/qBB95Bvi8DQK/Zx/Bz+8++Jo04BvRDf4/zoL/xD3Up7kex/2P
+9Df8wbnm404v60R97+Ixf2aHMx3xRXzWUsxv18g5heeYr9P8dhv6jz273TG
/vJo8FmaBB/jB/DLM4FfcQr41i+A75wP+HvZwV8RjvreMdRvPkB/dTj6O1xx
flsDzm/1xv2VNnx/fTrmW17G+6jTYn7fUbwfmRL7hXXgfflewP67PLD/1mrw
sQeBz5An+B1sBj91GfhqA8HXl/m/Y/6u9agnHUX99BH0R4yh/8BnnN+ai/Pz
bbi/JAX3B+RhvgEP8Ffy+8ni9+PTgP3mdeDvfAb7X5zH/sc14BMzAD7jdvAz
p4KfPQF8F9gv6+2fEyL/3Gb/VK7RP/tF/ikU+cfA/nnuwD/+7J8b7J8Z9k/X
OvungP3jzP4xi/yjcuCfc//oHwn7R8b+aWX/CKv4Z5sD/7Swf3rYP4XsHyf2
Ty/7o4n9I4j8c5jf/xS//68i/8SL/NMr8k+7A/88Yv8o2T9K9k8/++e7yD8y
kX8y2T+X2T9F7B/rKv5xEfnHwv65u4p/bGv0j8D+kTjwj7vIP8Psn0Psn2D2
T9ga/WNg/+jYP2oH/lGxfwb/k3/+AMOFpMQ=
       "]]}, {
      PointSize[Medium], 
      Hue[
       NCache[
        Rational[3, 5], 0.6]], 
      PointBox[CompressedData["
1:eJzNlGtMU2cYxzuWIMHEUHCIU7Q44mUTJcOhQswjbkCWGgPMzQsoXjZqI1cR
RIuAYzEsfsCpZEOWoBMdl7D4QY1zi1GgIAqlIogK2vdgIIr1wkstipf6Ev/9
8iYN+mXZh+bk5D0953n+l1/AprS4H9xUKtV+8Ru9NjVrak1GTvMtXy9fZWG0
rb15ntslTiVxhfWxCiPzT/fHzTJxyteVJXX1M5qRnFHsuM6pZmPoqcuPGA2a
w/IY45TLMo/XDDMKOhc+wX+AU/HiuO5nDkbJ0Z3RiYOcoluNL/LcFXJMuZjb
9ZRTyp7I9YWeClnSIiYuG+ak0Z6PaB6v0OGHq21t4nztDHVprjg/5jiV8AHn
xGftq/Qap1BCf+XzfKs4L6l57O+mUO0J7zJHHydT0wXPqJeMDgTZwmdbOJWm
dg5NtzOa3NAyUnSDU1r6yeVznzDaca4v5EA7J+OSIbV5gNG/B9t+O9TKad2n
msvfiP0mFBStq2/m9DoofldfL6P6xAr3RU2conzt6t8Zo3S94YZd6NVbdibJ
IPTSx1RHD4n7RJP28xxxH/t9o3qieJ6X3rpgEM/f2lrZESreV1AU9plOvG/T
gNYvpIXT3vJJ3r59jHoTQsw9bZwa+vV3NtwT+v99c6N7B6fW0OSD06yMMnMC
In4U8086oY2YKeZv3+u7IPA2J8OlT2bH2BhpogJX1CmcLNbG0uxnjByx/OQX
/Zy+C/zoz2yhx9VU27R44YeBzhwLVin0dN8fep9HnLIq5/xc9KFC3sG6+i+F
P+F/6ZcmCX+OrK960TnEyeOw0nXaQ6Hxyx5UnRV+tNrnVeuEH/aCOq3Fzikm
Ur0zXfi15OWW1aP+fXzWkTfqH8d5LM49pP+XS++Xvz+C+bZjvnZp/lfY71vs
F4D9u7F/B/TZCX2yoJ8f9NsBfa9AXwX6G6H/FvhTCH+64V8+/FsJf5/A3xT4
vwb+O/PBkI865CcS+fFCvhzI10Upf858NiCffshvMvJbjHz/inxXIf9tyP8G
9GMV+lGB/jxEf8qkfjH0LwD9U019289U9DNF6m8w+r0f/bai/7vRfw34UAs+
XAM/9oAfMl/+K/5EueDPnTH4cxT6DUK/+DH4c0jyZwr8S4d/u96TP878fCXx
5y7ytRX5S0D+4iT+dEn80Un8kfOfhX6Y0I8c9Gcy+nNN4k8g+ncb/RuR+inz
xy7xxwf9D3PBH0+JH4MSXxaCP1PBH5vEJ5k/FS744/z+MObLxnxmaX4nX1di
P420v8xnmT+Z0LcF+jLo3wj9N0v86XlH/qyF/xku+OPMj4+Ur39c8Mco8ScV
+f0F+S5BvqvH4E85+mNFf5z9WvM/4c8bqRj1yg==
       "]]}, {
      PointSize[Medium], 
      Hue[
       NCache[
        Rational[2, 5], 0.4]], 
      PointBox[CompressedData["
1:eJy9lX9MlHUcx0GEc0IEtsG1lGBzLgI77AQpyw93dYbiWUeFdOJ5KZqIWizl
6gLSUtADSQSVkYK01vVrnUNlRnKh/CiEhAMhj2B8n0gaUpABzyMwoWu8n3+e
jbW11h+3++PZ8zzfz/vzer+ekC2vx2+b4+bmdsz1+/vf7KiT9afw1LGkSdai
YtSbdrIv4whPQtGPJy4lMiov89h+/02eIjYslFUWMEr+4/jp0WUCebVcHh1o
Y3RGf/ZglUkgllttOeTJUWTxikJbiUBLhOdMLIij8lUNz6o/FGgosKRn7cMc
+bQur+s6INB+7z+/7fHhKCruYtsPiQIpRyZ2BA4zim1ZqFocKtDcHUbjoWZG
P7PCwSPjPOnHPkie+oxR1urgTP11nuYlffPlFxZGxgXZ/oGf81Sl8lppeINR
Wnhy/O2jPG3QlNuGNjJymu57R27mqahkOCdfy+h23ycnX9zDU3qKM9pTwyjz
PV0j75r/zagAxU+u+bVVY5rHdvFU0z2/Kf0ZRlMLFhv89/LUZJHFKtYwitBu
mq7Yz9OlC74VifGMNts+/S6sgKdOtxORcQZGp+qd/WUf85TTv37ra7sYvXI3
dp26iid7+7YseQaj6cv24AQHT0u/L8rvyGOkU15Zrhjgaao09FxIKaO5a62t
y9wF8otW38m1MUrc7Qhvkws02f3C8Fc1jK5dt9sLFQJNWBNejnAwyh0bTZ+n
EWjn4Yeer2GMAh5td2t15Tkga7ond+XZ05jme2qnQCamHbs3yShMp6oMMAv0
9Ir3G1bKOLpYnHTrgRxX/nszi61+HK27c/NXQ4FAhqMVjiA5R3WdqbL2Ytf9
2zc7shdxdPxcTEzCGYGuzvf4ujmYI+WTVm9nqWu/SRWaWyEc5eH6FVxvwP1v
4X4dnr8Jz7+A90fh/aE43yqcrwvnz8D5xfl+x3wWzJ+K+euQzzTyEfMbR34j
a2byXYR81yN/97KZ/KX70WN/tdjfMey3EPvdiP13Y/8K8HEefPDgpwP8xIKv
evCVBf7M4G8QfJrA5w3wWwJ+U8D3FvCtB/+14P8A+uGHfvyC/mxFf9Toly/6
FY3+qdE/T/QzF/08K+mvEv1+BP0+jf73ov+vwg8e8MNH8MdS+MMJv9yFX/5r
/yhwvlCcz4rzD87in0jMH4n54yT+6ZP4R8zXaxb/pEr8c0PinyHsd9+/9I9S
4h+jxD9F4NMCPg0S/0yB73Dw/ZLEP+4S/+jQnwn0pxH9mkS/xP7tRv+CJP7p
Q3/3ob/h6PdT6Pd5iX+08EMS/GCHP96GP/Ilfnl8Fv/U4nq9xD+i34x4vg3v
fwLvF/0Yg/N1SvzzIOb7DfNlS+ZvRj7jyEfMb07PTH5ivv7IV4X8veEfj+qZ
/YRhP+L34+o/+KdX4p9K8DECfrrAj8jXNfD1Lvg7CP7E76MZfHZI/LNH4h8D
+K8G/+L3WYZ+iN/vZPRnNfrlM4t/ZOhn3v/kn78AzRi0Yg==
       "]]}, {
      PointSize[Medium], 
      Hue[
       NCache[
        Rational[1, 5], 0.2]], 
      PointBox[CompressedData["
1:eJy9lH9MlHUcx88YgrD4eVcoiYLNJrhIW/w4iQ+0VCi3uvgRd3mXIKYdIpCd
dyKoK0hFwyMQK7ZAyWihMnLnplzCQLkLFYR+EaPnHs0dP4aYw0KeHxnt3v7z
bDdba/1xuz+efZ/n831/Xq93eE7Ba5sekclk5tnf3/+egYejS7Ucjbae2nJP
ydDiu0uDj83l6XKQ34JRgSHDriyfQLVAK0bK7cVJLP26h8nVZoh0SuBeXdTP
UlvDB9s+bRTJ7B80MyOyFHHlyY/r3xapYGtilXWYpfqQnnbTqECGjab61o9Y
qupPkdlUAqVb9fy6BJZuR64oMHby1OibOb32ewd1xiZpSlJ4Uv04f1qf4qCV
xW2DN0c5EjOmxvqGGPrN68Ifnp9zdPW5q2mDBxlSFRYF3jJy9LNDYUpRMzTv
ouc+SzZHbS88E95HDFUsOf1OvI6jrwZo9bVVDPlWLmM36znKVV0btqXOPm/c
MqV/n6P7tvzjhrcY0jzFp1m+4MiksBgmKhk6Eax702OAI58jB85XdzAU5OSs
mR48NVcsXhsxw9CdzNj223E8Vclrr9TGOOgn9bLUNUU8NXwb8HW00UEvLjwz
z6OZpzWfDag2nnNQf15M7sxNnuRz08VB3kFNx2vCI8IE0mwr294axpJf8vPO
2gyBrlt8jSWJLM3pbl9fWSFQUEvZE0PrWerc0XQ/yyrQ41nmrk07WdrBe+Xr
xgViSrr97dUsbT3QFR0qF2lC2dtoaWZpyficW2HxIpV6jSgmO1hKOjnp9FGL
lFWeoVj1HUvZZ9R283aR4mI+OVdwg6XC2vCWov0iXU499vvmSZam7Jr80qMi
PX0vJ9J7mqW+P+9yVQ0iRd1J+CFBYOmCVhlcN7v/xA93v87N7n9Y8nwC56Nx
3oT3X8T79+L7Ufj+s5hPi/kWYf69mL8I93Pifvtx/yHcvw35hCIf8ZIrvxDk
F4B8GeT7IH818r+E/SzAfl6W7g/7/RL7HcH+G7D/5eDjMPiwgJ+JGhc/evCl
AV/l4I8Hf37gczX43Ad+reA3AHyfBd+vgH9/1sX/GPzohh+x8Eee6fKnC35p
4NcY/NsN/+rgZz78rIG/efB3IfzOgd/t8P8Q/B9GP5xEPxRL+iMK/dKLfvmv
+ycM8xX+y/6xIZ905KNEfjz6x4l8e930j3Q/h7C/Fkn/5PzD/mkCP97on1BJ
/0yBPzP465P0z0vgNxn82sC3AnzXgX8d+PeCHzfghyf6Jxj+dMAvOfwql/j3
Lvwcg5+R8HenpH/U8DsP/sfC/xL0Q89D+mc5+qUH/ROH/rmO50vxnMH5GJzP
xfsH8P4N+H48vr8S8+kw33zM/x7mz8P9xnG/Xbj/L7j/WUk/y5DfY8hPTHLl
O4J8TyD/DW76R4n9ad30zzj2fxT7fxR8WN30zxvgywC+9oC/ELuLvwd8GsFn
Gfg9D369wXfvQ/rnNPxIhj+E/vkGfqW56Z9q+Jn9P/XPX3n2vtQ=
       "]]}, {
      PointSize[Medium], 
      Hue[0], 
      PointBox[CompressedData["
1:eJy9lWtQVGUYx/ccBCmyGQxyxlJXRXAhCJTLKDTPWzPcIhGQEVFhx8UVL2AN
WUwNQusQ6yVUNEKBTTPHhURuK2rClGk0GVsN3ojZs+zJGBgKJ24hi7AbtX8+
dGYY+9D0gdkPZ857nvf5//4/FqteT1LzMpns6NTfX7+DNYFnPLNsNJj7wqbu
70yk9vthQkiUsUU3Fzfntptp63yd+kQ3x5IGxvL0G0SynnVKcM3iWf2HPZmq
OyIN7f7FL3ohz4LGIzpSi0VK9MnUR+/lWHhp+v0DIxbqCWvlN9+VsW2XElZc
/aqLanqyDS2RMqbderl9bbOZllwfi1XU2ml0gXFSPihQif6VPe+622nQ2hI7
uUWgOkvqTf0FGwlzhP1tLgLZil47VvCOjZqKH+Uu6zDR3kgnedzU/FF1ias8
20xkSbpRmplvo10eY32nTSbacqg/cmO1jXLKPSLMvECXq2JKmnptVD+SU3sn
XKCVS37tHwi208hFp9kZ+wT6sSA+6+ViO33BBUa53xZojpd3fO4DOxmGhv1H
fc10Rb7u6hsKGdvQsi+oUmumlwSdf0Xa1H3mtW/v7zHTZNHvnezY1HPbl18v
iO6ieyqX3oPfyJgzPfe5/lwXWRIKuWtWGUuKcqsOm2Uh1e0D18mPYz7Zn2mq
0i3k/IdpdsFGjvXnzH9q4qKFAo4XPuGs5diFgz1GXyeR0pKfd95Rz7GJEPnP
48tFCl53S5lwj2MVxo68ijiRyoyhPtljHCu5++bO1p0iNShXdOU9y7Oc4GX9
4UUi+Ufc0EYH8sz9SIepTSfSKS6t++NInpX3ZVhfbRBJM5rSmbaeZ/vvv6gs
uybS2aHuR5kqnslraF5Zm0j5KadWV+/g2fYSZgy7JdLw3/zwLE4ef3z3FA9a
PFfj+Rm8vwjvf4Dz83C+Dt8/ie+vxHxumK8K82swfznuV4r7+eD+tbi/EvuR
hTr2sxz7M2B/kyOO/T7AftOx/xDsvxP5KJHP98jPC/kNI1818l2F/MuQfwP4
2AU+xpc6+GkHP63gqw18rQZ/Lk0O/irAZy/4XAN+K8FvJ/jOB9/bwP8n4N9D
+89+nEN/Ap529KcM/Uoed/Rrun8BCx39q0M/S9DPPvT3BPqbjH6/jX4PoP++
6P9D+KEBfkiFP2LgjzXwy/C3Dr/81/5ZK/GP+Bj/eOL+k/DPUYl/arC/LvjH
Ffs1zOCfn5BPNvLZhPzeQn7nka/hX/rHGf5pBD+XwFcq+IoCf0Xgb5pPFfjs
AL+u4FeQ+CcD/CvA/0P0YxT9UKA/jehPMvplh39CJf7RoZ/F6Od59HcP+uuN
fj+Dfn+E/lei/+/DDxr4oRL+8IY/iuGXNPhl9DH+kb7/Hs4vxPlH8P1P8f3p
+eZiPoNk/tMSv4ZI7p+K/cyCfxQS/1gl+1VK/DP9/yEF+RiR39IZ/BOE/JuQ
fyP42Aw+euEfE/gxgK/fwJcf+POCf66Az2bwuR78asDvAPiOAN954F8D/p9E
P9wOO/pRi/7Ewj+H0K+YGfxTjX7q/if//An322dI
       "]]}}, {Axes -> False, PlotLabel -> FormBox[
       StyleBox["\"b=1\"", {
         GrayLevel[0], Large}, StripOnInput -> False], TraditionalForm], 
     PlotRange -> All, Frame -> True, FrameStyle -> {{
        GrayLevel[0], Medium}, {
        GrayLevel[0], Medium}}, AspectRatio -> 0.65, FrameTicksStyle -> 16, 
     ImageSize -> Large, FrameLabel -> {
       FormBox[
        StyleBox["\"R\"", {
          GrayLevel[0], Large}, StripOnInput -> False], TraditionalForm], 
       FormBox[
        StyleBox["\"r\"", {
          GrayLevel[0], Large}, StripOnInput -> False], TraditionalForm]}, 
     DisplayFunction -> Identity, Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1., 0.44}, DisplayFunction :> 
     Identity, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {"ScalingFunctions" -> None}, 
     PlotRange -> {{1.0005009990002505`, 1.9013878188659974`}, {
      0.4342585459106648, 0.527319768893327}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.05], 
        Scaled[0.05]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox["\"a=1.00\"", 16, StripOnInput -> False], 
       StyleBox["\"a=1.25\"", 16, StripOnInput -> False], 
       StyleBox["\"a=1.50\"", 16, StripOnInput -> False], 
       StyleBox["\"a=1.75\"", 16, StripOnInput -> False], 
       StyleBox["\"a=2.00\"", 16, StripOnInput -> False]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[4, 5], 0.8], 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[4, 5], 0.8], 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[3, 5], 0.6], 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[3, 5], 0.6], 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[2, 5], 0.4], 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[2, 5], 0.4], 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[1, 5], 0.2], 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[1, 5], 0.2], 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "0.0125`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[
                    Rational[4, 5]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    Hue[0.8000000000000002, 1., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], "Hue[4/5]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = Hue[
                    Rational[4, 5], 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[
                    Rational[4, 5]], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "0.0125`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[
                    Rational[3, 5]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> Hue[0.6, 1., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], "Hue[3/5]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = Hue[
                    Rational[3, 5], 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[
                    Rational[3, 5]], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "0.0125`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[
                    Rational[2, 5]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    Hue[0.4000000000000001, 1., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], "Hue[2/5]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = Hue[
                    Rational[2, 5], 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[
                    Rational[2, 5]], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "0.0125`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[
                    Rational[1, 5]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    Hue[0.20000000000000004`, 1., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], "Hue[1/5]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = Hue[
                    Rational[1, 5], 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[
                    Rational[1, 5]], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "0.0125`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> Hue[0., 1., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], "Hue[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0], Editable -> False, Selectable -> False]}], "}"}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.788348981252407*^9, 3.7883489918472443`*^9}, {
   3.7883509897878327`*^9, 3.788351008084209*^9}, 3.7897221984100714`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"radiiGrid", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"radiiGraphPlot", ",", "radiiScatterPlot"}], "}"}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7883474548628817`*^9, 3.7883474667836237`*^9}, {
  3.7883491960608644`*^9, 3.7883491973082724`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0]], 
            LineBox[CompressedData["
1:eJxdlntUVXUWxxksfKzRKCSdqfAoWsqY4INMQvmaL1DRy0PkIXjui3t53Mu5
Tyez5qAlrtboULQ0pGVHJTUSxVc+JpuTojjKUjAfQ2oey3GWxVJ85ORM2jhr
7m/W3vCP6+tmH875/fb+fj+DLRWZ9vCwsDDnr8LC/vvv/366Um4tGllw9fiF
lNB/oOFg56fqixdDuhc6VvtPlcdfCulILJhx59SV174J6f7oWDfucM7eyyE9
EJldPy3ZnGuE9LOYnbR11ZJPhJYwKGV4iuOU0EPw87JedyvbhR6KOydbdm3b
J/TzGP2v5PN5K4UejrKo+ph3coSOw67YWFvjb4QeidzamBOL94j3GYV+6Rec
EROETkDxZ6YxB74U7z8a4T5H270MocdgRcHqwiE/iO8di95Dvv7o9kqhx6Ey
zn1zY5LQibj3XOsD6ZY4r5ewZ8Uv4wftEHo85j3rbhmzWOiXkXqoXb04S+gJ
eP/7PotrhgmdhIt9L644ESH0K/h+8LCa+zfE/SSjo3Da/NWXhJ6Im9GOWOm0
0JPw3e3H2p5pFToF07dnTIg+ITRgXlZr/uhkSKvAppcS87PPifpknK0/2vPs
FVGfjPg349qOdYn6q/Cu7Z98KTz0fuqrWLM9tubIAPG+U7Au/mEwKV7Up+Cn
G4vU+6miPhX+lE1Gs03Up+Lu7h49rUtFfRq2DJyYvm69qE/DmhVXt0w9JOrT
0dza2/rCVVGfjsQ/rTr7257iPmZg1+07L96LC2l1Bs45TIk1c0U9FYdN0c+d
9It6Khq2p5neXivqaWiPMlJrdVFPQ9WAdmfnNVGfieSRW85Z+obmRZ2JiXWJ
hd+OFfMzC5ExMXMy80V9FlzhEY46VdRn4/GUZ/Zv3iTqs4GBLe9ZWkU9HfVX
ssv23RL1dCwNl9tWPy3mdw4ObLqc3ZkU0uocvOBqqNxSJOpz0fXvuS1/rhT1
uVi/cYRnQL2om7Bv7PLaxiMhDRM62s/HeK6J3zeh8Z1rrXE9Qvukm9Dikho2
PyX2KwNpsYu0TwaHNDIwIqrztd8lhLSagcSshvThk0R/Bupazy+pmyX6M7F+
6afbVeEPyETQefj0VzbRn4meX+zu/64i+jPx+5LT3+1+XfRnwTtuWOcry0V/
FlqT34uOrRb9WcC0kUsdtaI/C2Oub/1jxAbRn40PHotqeSD8CNlYe916f+YO
0Z+NIxNXSp17RX82KtfYXZcPiv55aI47PiX2sOifhzd6/23CZy2ifx6krSkD
1pwQ/fNgr99xpvmk6M/B3Spr3SThd8hBn7StzT2+Ev05GJ2/tyPqjOjPwSxp
To1b6LD5iKd1zMevWf983KPP1+dDZn8/F4Po+yEXb7P3z8Vx+n16Llax789D
Mz0f5KGWnV8e1tLz1fOQyM4/H6n0fpCPQ+z+8lFJ71fPx+vs/gvwBJ0PFCDA
5qcADXS+9AJsY/O3ACl0PrEAcWx+F8BM51tfgBNs/guxi+4HCnGd7U8hjtH9
0gvxMdu/IjzxM9lPFCGR7q9ahK/pfutFqGP7vxCN1B+wEGbqH+pCDKX+oi/E
m8x/ZDxJ/UmSMY76F2QEqL/JMtZQ/1NlnKX+qMn4gfqnLqNHBvFXQ8ZR5r9m
tFN/lswwU/+GGZepv8tm7Kf+r5rxC80HzYyIPSQ/dDNaaL4YZiy8SfPHgsM0
nyQLmmh+wYIPab7JFrxB80+1oP/HJB81C+pofuoWZNB8NSxYz/LXin53SD5L
VkQ8TfIbVuQUkXyXrUgaQvJftWJUP8IHmhXfUn7QrUinfGFYsY7xhw0HKJ9I
NoyKIfwCG+op38g2LKP8o9pQS/lIs+Flyk+6DR9QvjJsyGb8ZcdKymeSHV9Q
foMdVZTvZDviKP+pdvQ9RfhQs+Me5UfdDonypWHHVMafxUilfCoVYwnlVxRj
MuVbuRj7KP+qxVhP+VgrBuNnvZjzs1HcjZ8dnJ8lB+dnODg/yw7Oz6qD87Pm
6Pb9Ds7PhqMbPzs5P0tOzs9wcn6WnZyfVSfnZ82Jh156/07Oz4azGz+XoIrO
l1SCB5SfUcL5WS7h/KyW8PnWSlDL5r8E31B+Nkrwd8bPpThH+VkqRSflZ5Ti
MuVnuZTzs1rK+VkrRQPb/1LOz0ZpN34uQ4D6i1TG+Rll2ED9SS7DfcrPahnn
Z62M87Nehnrqj0ZZN34ux1+ov0rlnJ9Rjp3Un+VynKb+rZajhfKzVo5tzP/L
0UHzwSjHcsbPLkyl+SK5AJY/LkTRfJJdcNL8Ul3oRfNNcyGV5p/u4vxsuLCC
5acbe2m+Sm6MoPkLN25Qfpbd0Gh+q27sp/muuXGB5r/uxk7KB4YbXzJ+qMBM
yhdSBWIpf6ACYyifyBWcn9UKzs9aBecfvQJ9KB8ZFfAxflLgp3wVqeAo5S9J
4fycoGAs5TconJ9NCj6k/CcrOEb5UFFQRflRVXCE8mW1gj9Q/tQUPE/5tEmB
g/KrruBHyrdtCh6n/GsonI+7lG787MEIWo/0oBftlzz4J31+gofzOzz8/Uwe
LKfvL3twiH6f8qjOvt8DnZ5PtQcb6flpHtTQ823yIImev+7BdHo/bR4cp/dn
ePj9dnmwjN2/F0/S+Yj08vmRvGik85Xg5fMHL5LpfJq8iKfzK3sxl8634sUp
Ov+ql/NztRc9TpP90bz4nO5Xkxdb6f7pXjyk+9nm5fxseHGG7neXFxvY/vuw
m/pDpI/zs+RDLPWXBB8U6j/wcX8y+ZBB/Uv2AdTfFB/2MH72oU9/4o/VPhyk
/qn5cI76a5MPD6n/6j5coP7c5oOP+rfhw1+pv3f5sJb5vx8/0nyI9GMo5WfJ
j500XxL8iKb8DD9qaT6Z/JyfZT8qab4pfgQZP/txg+ZjtR9PjSf5qflRSvO1
6dHzaP7qfkyk/Nzm5/xs+Dk/d/lxi+V/AGmUnyMDnJ+lAN6ifJEQ4PyMAP5B
+cQU4PwsBzg/K4Fu/PzoeZSPqgOcn7UA5+emAOdnPcD5uS2A45TfjADn564A
5+ewIO5TPowMcn6UghhM+TIhyPkZQc7PpiA+p/wqBxFO+VYJduPn4P/5+T/L
TDnH
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             RGBColor[0.5, 0, 0.5]], 
            LineBox[CompressedData["
1:eJxdl3l0VPUVx0M8cEhq07QCBY7VRyBsEZgEEgSBfANkYR/IOlnf7JlkMvNm
rafV9p0KQkEPoSJQFnlQi1ERAlhQe6oPMNJaCqnIYmV5LJKAaRkpW8RCaZ2f
597kn5xvbu7kvd/v3u/3kyE2/yJnYkJCQn2vhIT/ff/2K5b71XbT1v7ee7nx
HyDnlSS1zymh+6Lk4HMPV16/H9ep2ND7xu6kHQn4VvfD1Fudl/9c1SuuB8Ix
eJNz3SWhH0VS90X7I1MT41rCz2/PVVe7hE6D6Yf7x1yoF3oYKt6YtfEP84Qe
juu+ixmFjwk9EjdGTj5SeEF8/mj0eWvJ2ZbNQj+B4u0O14eVQo9FzbDya9sG
CG3C5YltidXHxfNn4vLBLbppndBZGHJ3xIgrdUKPx87Fh3d3PiH0BJzs1ee4
dk+cRzbSDtyZNWqH0Dk4rQ8fOqhe6Il4Lv2L0q8zhH4S5yq27sjrFuc7Cfeu
XppvOSr0ZOw8Z/nLa28J/RQGdy7/x+qXhJ6Cxepr4RdUoafifNiqJYSFnoYr
2cNXNjQJnYtn8x+S5nx3v8AYd1HvDCWuVWBczdw31z8t6nlI/bTX7cwlop6H
x19O71r5sqhPh3VFV37l66I+HQVDf5c0VRf1GSiKTht49TNRn4G/LxlxYOAt
UZ+Jd4eV1C3pFz8PdSbGp13tik0Q55OPjv39dknlop6PxBkLvjjzM1EvwCrP
UPfNzaJegClHxvonfiTqhfj+sOHzf/pPUS/Ep8feX9uWLO6vCJtuvhFLfzyu
1SIcaH/V/PF4UZ+FytQz0S1Foj4LU09vGrOhRtRnI3DlYk5LUNRno/Op1snv
LRX1OVA8X+49uFHU56A5Z29s3y5Rn4sTtj4dyz8S9bn4a0mgIPNzUZ8HW1JS
rXZN1Odh/9is/kceEvM7H1e2VV9o/XFcq/NhO/brA7kZor4Az95/MTM4TdQX
wJL8TRoWiroZp1K2391ij2uY8W7e0RXNEfH7Zox9aXFS76VxrZuRe/zC97rX
iv6FOJfre97VIvoXojY99mHhO6J/IaavanGvPST6F2JC8Sd15hOifxHG7wt2
NQl/wCI82u5b++VXon8RVn9iZLXdE/2LMG1Zy4lbyYnx/mLsqss6+8yAuEYx
LCmBy8VD4lotRvKQPoefzohrvRifZ695vXOC6C+Bfi3/hCb8CCXY3Kvm0iv5
or8Eed0Pa8Zc0V+Ct3dbUhzFor8UHeuHeEdYRH8pfpI2c8yoWtFfilevX7rr
ton+UtzY8/G+C07RX4YU86nIOuF3KEPS2c2/XNYg+suQq6YU724U/WX49//9
WfSXo4DWUY5k1l+OH9DP18vRzf5+BbbS50MFBrDnr4BB30+vgMbe34Jcej6w
YBM7Pws+oOerW3CCnX8l7krkflCJGnZ/lWih96tX4kl2/1VYSecDVZDY/FQh
i86XXoURbP6qkUfnE9WQ2fxWo43Ot/7g99n812Ak3Q/U4AO2PzU4TvdLr0E1
279a+Ol+oha1dH/VWlym+63XYg/b/zqUUX9AHXTqH2od/kb9Ra/DcuY/Mvcn
SUYX9S/IcFB/k2VMov6nylhA/VGTsZP6py5jGfVXQ8YZ5r9WfD2U+LNkRTr1
b1ixlPq7bMXt6cT/VSsO0XzQrJhM80O34kWaL4YVb7P8sWESzSfJhgk0v2DD
PJpvsg19af6pNtw7RvJRs8FE81O3YRrNV8MGF8tfO07SfJbsuEHzG3b8iua7
bMcgmv+qHdsoH2h2XKf8oNs5Xxh2rGf84cBFyieSg/MLHDhP+UZ24B3KP6oD
wykfaQ7EKD/pDlyhfGU44GP85UQd5TPJiQGU3+DEN5TvZCdilP9UJ2opH2pO
TKH8qDsRoXxpOPGfO5Q/XbBQPpVc6Ev5FS68QPlWdmEc5V/VhUzKx5oLjJ91
F+dnw9WDn92cnyU352e4OT/Lbs7Pqpvzs+ZGDnt/N+dnw92Dn+s5P0v1nJ9R
z/lZruf8rNbDoPer1XN+1ush0fkw6nvwsweH6XxJHvRn8+fh/Cx7OD+rHlyi
8615cJvNvwfb6X4YHkiMnxuwgu6X1IBrbP8a0EH3U27g/Kw2cH7WGpDO9r+B
87PR0IOfG1FF/UVq5PyMRsyi/iQ34gz1L7WR87PWyPlZb8Qd6o9GYw9+9mID
9VfJy/kZXvSm/Cx7cYz6t+rFGurvmpfzs+7l+WB4UcD4uQlemi9SEzpY/jTB
T/NJbsJKml9qE07SfNOa0EbzT2/i/Gw04Y8sP324TvNV8sFO8xc+/ILms+yD
jea36sNJmu+aD+/R/Nd9GEX5wPBhPuMHPwzKF5IfXsof8GM25RPZjxzKL6of
2ZRvND8eo/yj+7GG8pHhRz7jJwVvUr5KVWCl/CUpuE/5zKTgGOU3KHif8p1Z
wRrKf7ICUD5UFPye8qOqoJPyZbPC+VlTsJHyaauCm5RfdYXzbfsDTfnXUFBI
+Tim4Bbj5wBm03pqAD+i/VKAf74pwPkdAf585gBS6PPLAfyLvp8SwA72/gHk
0/NpDmAlPT8tgDZ6vq0BHKXnrweQSP+/aQ+ggt6fEcAeer+xALLZ/QfxGzof
qUE+P1IQo+l8mYLIpvOHIIrofJqDcNL5lYM4S+dbCWIKnX81yPejOYhWuj9a
EJ/R/WoNopTunx5EgO5nexB1dH+NILrofseC2Mv2P4Ry6g+pIRyg/iGFcJj6
iymEVdR/EIKH+pM5hPPUv+QQgtTflBAyGT+HMJ36Y3MIe6l/aiH8lvprawiH
qP/qIXRQfm4PYTD1b+NBP/X3WAjdlJ8Twmin+ZAaRgbNDymMTTRfTGH8ieYP
wphN88kc5vwsh1FG800JI5nx8wNN87E5jEE0P7Uwsmi+tobxDM1fPYzTNJ/b
w5yfjTDn51gYA1j+R7CD8kFqhPOzFOF8YYpwfkYEBuUTc4Tzsxzh/KxEevBz
BKMpHzVHOD9rEc7PrRHOz3qE83N7BI9QfjMinJ9jEc7PCVHUUD5MjXJ+lqJo
pHxpinJ+RpTzszmKcZRf5Si8lG+VaA9+jn7Hz/8FDLV4gA==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             RGBColor[
             0.8588235294117647, 0.4392156862745098, 0.5764705882352941]], 
            LineBox[CompressedData["
1:eJxdl3l0VPUVxwMeOCS1aVqBAsfqIxC2CEwCCYJAvgGysA9knaxv9kkymXmz
1tNq+04FoaCHUBEoizyoxagIASyoPdUHGGkthVRksbI8FknAVIaULWKxtJ2f
597kn5xvbu7kvd/v3u/3k6E2/2Jn74SEBE+vhIT/fv//Vyznxg7TtgHer3Li
P0D2K4lq39NC90Pxoecerui6Htcp2Njn5p7EnbG47o9ptzuu/LnyRlwPgmPI
Zuf6y0I/isTuS/ZHpnXFtYSf35mnrnEJnQrTDw+MvegRejjK35i96Q/zhR6B
Lt+l9ILHhB6Fm6OmHC24KD5/DPq+tfRc8xahn0DRDofrwwqhx6F6eNn17QOF
NuHKpNbeVSfE82fgyqGtumm90JkYem/kyKu1Qk/AriVH9nQ8IfREnOrV94R2
X5xHFlIP3p09eqfQ2Tijjxg22CP0JDyX9kXJ1+lCP4nz5dt25naL852M+9cu
L7AcE3oKdp23/OW1t4R+CkM6VvxjzUtCT8US9bXwC6rQ03AhbNUSwkJPx9Ws
EavqG4XOwbN5D0lzv7tfYKy7sE+6EtcqML563psbnhb1XKR82utOxlJRz8Xj
L6d1rnpZ1GfAurIzr+J1UZ+B/GG/S5ymi/pMFEanD7r2majPxN+Xjjw46Lao
z8K7w4trl/aPn4c6CxNSr3XGJorzyUP7gf67pTJRz0PvmQu/OPszUc/H6rph
7ltbRD0fU4+O80/6SNQL8P3hIxb89J+iXoBPj7+/rjVJ3F8hNt96I5b2eFyr
hTjY9qr54wmiPhsVKWejWwtFfTamndk8dmO1qM9B4Oql7OagqM9Bx1MtU95b
JupzodR9ue/QJlGfi6bsfbH9u0V9Hk7a+rav+EjU5+GvxYH8jM9FfT5siYk1
2nVRn48D4zIHHH1IzO8CXN1edbHlx3GtLoDt+K8P5qSL+kI8++2LGcHpor4Q
lqRvUrFI1M04nbzj3lZ7XMOMd3OPrWyKiN83Y9xLSxL7LItr3YycExe/171O
9C/C+Rzf865m0b8INWmxDwveEf2LMGN1s3vdYdG/CBOLPqk1nxT9izFhf7Cz
UfgDFuPRNt+6L2+I/sVY84mR2Xpf9C/G9OXNJ28nif0vwu7azHPPDIxrFMGS
HLhSNDSu1SIkDe175On0uNaL8HnW2tc7Jor+YujX805qwo9QjC29qi+/kif6
i5Hb/bBmzBP9xXh7jyXZUST6S9C+Yah3pEX0l+AnqbPGjq4R/SV4tevyPbdN
9Jfg5t6P9190iv5SJJtPR9YLv0MpEs9t+eXyetFfihw1uWhPg+gvxb/+58+i
vwz5tI4yJLH+MvyAfr5ehm7298uxjT4fyjGQPX85DPp+ejk09v4W5NDzgQWb
2flZ8AE9X92Ck+z8K3BPIveDClSz+6tAM71fvQJPsvuvxCo6H6iExOanEpl0
vvRKjGTzV4VcOp+ogszmtwqtdL71B7/P5r8ao+h+oBofsP2pxgm6X3o1qtj+
1cBP9xM1qKH7q9bgCt1vvQZ72f7XopT6A2qhU/9Qa/E36i96LVYw/5G5P0ky
Oql/QYaD+pssYzL1P1XGQuqPmoxd1D91GcupvxoyzjL/teLrYcSfJSvSqH/D
imXU32Ur7swg/q9acZjmg2bFFJofuhUv0nwxrHib5Y8Nk2k+STZMpPkFG+bT
fJNt6EfzT7Xh/nGSj5oNJpqfug3Tab4aNrhY/tpxiuazZMdNmt+w41c032U7
BtP8V+3YTvlAs6OL8oNu53xh2LGB8YcDlyifSA7OL3DgAuUb2YF3KP+oDoyg
fKQ5EKP8pDtwlfKV4YCP8ZcTtZTPJCcGUn6DE99QvpOdiFH+U52ooXyoOTGV
8qPuRITypeHEv+9S/nTBQvlUcqEf5Ve48ALlW9mF8ZR/VRcyKB9rLjB+1l2c
nw1XD352c36W3Jyf4eb8LLs5P6tuzs+aG9ns/d2cnw13D372cH6WPJyf4eH8
LHs4P6seGPR+NQ/nZ90Dic6H4enBz3U4QudLqsMANn91nJ/lOs7Pah0u0/nW
6nCHzX8ddtD9MOogMX6ux0q6X1I9rrP9q0c73U+5nvOzWs/5WatHGtv/es7P
Rn0Pfm5AJfUXqYHzMxowm/qT3ICz1L/UBs7PWgPnZ70Bd6k/Gg09+NmLjdRf
JS/nZ3jRh/Kz7MVx6t+qF2upv2tezs+6l+eD4UU+4+dGeGm+SI1oZ/nTCD/N
J7kRq2h+qY04RfNNa0QrzT+9kfOz0Yg/svz0oYvmq+SDneYvfPgFzWfZBxvN
b9WHUzTfNR/eo/mv+zCa8oHhwwLGD34YlC8kP7yUP+DHHMonsh/ZlF9UP7Io
32h+PEb5R/djLeUjw488xk8K3qR8laLASvlLUvAt5TOTguOU36Dgfcp3ZgVr
Kf/JCkD5UFHwe8qPqoIOypdNCudnTcEmyqctCm5RftUVzrdtDzTlX0NBAeXj
mILbjJ8DmEPrKQH8iPZLAf75pgDndwT485kDSKbPLwfwFX0/JYCd7P0DyKPn
0xTAKnp+WgCt9HxbAjhGz18PoDf9/6YtgHJ6f0YAe+n9xgLIYvcfxG/ofKQE
+fxIQYyh82UKIovOH4IopPNpDsJJ51cO4hydbyWIqXT+1SDfj6YgWuj+aEF8
RverJYgSun96EAG6n21B1NL9NYLopPsdC2If2/8Qyqg/pIRwkPqHFMIR6i+m
EFZT/0EIddSfzCFcoP4lhxCk/qaEkMH4OYQZ1B+bQthH/VML4bfUX1tCOEz9
Vw+hnfJzWwhDqH8bD/qpv8dC6Kb8nBBGG82HlDDSaX5IYWym+WIK4080fxDG
HJpP5jDnZzmMUppvShhJjJ8faJqPTWEMpvmphZFJ87UljGdo/uphnKH53Bbm
/GyEOT/HwhjI8j+CnZQPUiKcn6UI5wtThPMzIjAon5gjnJ/lCOdnJdKDnyMY
Q/moKcL5WYtwfm6JcH7WI5yf2yJ4hPKbEeH8HItwfk6IopryYUqU87MURQPl
S1OU8zOinJ/NUYyn/CpH4aV8q0R78HP0O37+D7K1Ux0=
             "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0., 360.}, {0, 2.302775637731993}}, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Epilog -> {
           Dashing[{Small, Small}], 
           RGBColor[0.5, 0, 0.5], 
           Arrowheads[{-0.03, 0.03}], 
           ArrowBox[{{90, 1.15}, {90, 2.3}}], 
           InsetBox[
            FormBox[
             StyleBox[
             "\"R/\\!\\(\\*SubscriptBox[\\(r\\), \\(9\\)]\\)=2\"", 16, 
              StripOnInput -> False], TraditionalForm], {
            90, 1.7249999999999999`}, {-1.25, 1}], 
           RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 0], 
           Arrowheads[{-0.03, 0.03}], 
           ArrowBox[{{270, 0.55}, {270, 2.3}}], 
           InsetBox[
            FormBox[
             StyleBox["\"R/r=???\"", Large, StripOnInput -> False], 
             TraditionalForm], {270, 1.7249999999999999`}, {-1.25, 1}]}, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{None, None}, {
            FormBox[
             StyleBox["\"t\"", {
               GrayLevel[0], Large}, StripOnInput -> False], TraditionalForm],
             None}}, FrameStyle -> {{
            GrayLevel[0], Medium}, {
            GrayLevel[0], Medium}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         FrameTicksStyle -> 16, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, Method -> {}, PlotLabel -> 
         FormBox[
           StyleBox["\"a=2.0, b=1\"", {
             GrayLevel[0], Large}, StripOnInput -> False], TraditionalForm], 
         PlotRange -> {{0., 360.}, {0, 2.302775637731993}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           StyleBox["\"r\"", Large, StripOnInput -> False], 
           StyleBox["\"R\"", Large, StripOnInput -> False], 
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(9\\)]\\)\"", Large, 
            StripOnInput -> False]}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    0.8588235294117647, 0.4392156862745098, 
                    0.5764705882352941]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    0.8588235294117647, 0.4392156862745098, 
                    0.5764705882352941]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8588235294117647, 0.4392156862745098, 
                    0.5764705882352941], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.5725490196078431, 0.2928104575163399, 
                    0.38431372549019605`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.8588235294117647, 0.4392156862745098, \
0.5764705882352941]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8588235294117647, 0.4392156862745098, 
                    0.5764705882352941]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8588235294117647, 0.4392156862745098, 
                    0.5764705882352941], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& ), Editable -> 
          True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 2}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Before"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             FaceForm[
              Opacity[0.3]], 
             Dashing[{0, Small}], 
             GrayLevel[0]], 
            LineBox[CompressedData["
1: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
             "]]}}}, {{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             FaceForm[
              Opacity[0.3]], 
             Dashing[{0, Small}], 
             GrayLevel[0]], 
            LineBox[CompressedData["
1:eJwd13k4VN8bAHCGlET2fGWNRLa0ifAOLYqSCIkkiWgVhYpIi0iICqFdJVpF
RJJsKYRQtjtIKmqWe+8g8nvn99c8n2fmuXPOu9xzXk2fg067GUJCQp7CQkKC
T9l6PVdJBhv4vifGZzIICJ/+p/AR+vih5ie56GE7ZTtHETb4tu/UtRMhwPzx
rempomxY5uTjEStKQMiHsF7V6WxwsvRpFp5OwD17DcbKWWyYvWyh9A8JAhym
JmSuKbLh7f4BvfMKBGjfNVnH1WdDqjW/XVaXgBtdNQOPDNhgfbtg72N07oKI
0r2GbEiPKiq21yOgxdVaddCIDVWJn0/HLCRgyR+FO90mbIhrCfzyx4AAoVS5
6nZTNvylK+JfmRDwweKj8+gqNlyw4aSoryTgocyww09PNijcubZIbSMBpLin
0f3tbNi4s+3ODXTOaylrPy82rHFlEvMcCGhsXC7Uv4MN2w178nQ2ESC2LPBb
jw8bPJ98z9bfTID8l7l2xB42RBv48Ra6ELAla/5h8SNseB/XUzPlifsLy2OR
CWywa1l9cNo+AiIrAuJfXWTDwFR7VyiaviDmdyqRDaYqwXN+on+HtudLJ7Mh
Ys847+N+Ao5/vX3OOJUNVkY99ikHCeig7XyOZrAheHF0jHwwAQbW6Tm69zB+
rF1HOeEEEDuov2oVGI9KxXilcwQoeJCPRN6yYaR7yvEcOvJUT8YQWuqQdi+F
LpINUH3+jg1miXu2NMcSEMue/tGulg2qMR13YuMI8K3+1XK6kQ1PC01GfiZg
fG9179XqYUMJ6Z5xNpWA1le1yjMn2HAjZZGr2k0C4uvKS4bRwmOfzcPRhf43
4hsn2VDh/InbgvZ/Jvfm8hQbyjNEumNvEdBWExqsLcKBfyM/rrFvE3B+SZew
/UwObHfb0lSUQ4DO6pm5pUocONA2GTo/jwC1c7/jTZZzoLS8sDeqkICn+zc4
LjXlQFH+49ftaOva9RtNV3BAXnfnfqMijOeIHMfSnAOhn5aad6KVVkX0brTi
gO+bxJTFxVi/Wtu2hK3lQEJW0paOVwRc2ZQXw3flgHu8SLxQBQFmod4a2WEc
aHE+nl7znoDVH5zIB+EcMJizLFmmnoBn7T8mXxzjQKD8FS8P9Irv9NOGExzQ
+ZVw7DeanTgvixHNgW1pCsWyHwk4djrwRMh5DrgmRno5NxLwtWpwVVQGB67Y
tRa/aCHA59shVdMyDnRst9JgdGF+9KtdLF9zsP53FFiif65iv1pVzgEqXnJB
OJoQL5TZXMGBsdvW9/+gswvy+/ZXceDWYp+5nd0ENIUdm/PkI67nhFXjw16M
9+ruF649HNB9nP12aT8BcNtmtoEQFx42JoR9/0HAvN+HircIc+Hl2R5/9Z8E
LNuQkBbB4EJyo/cSN7TawZNUoygXntsu21GNnjzWohcqzoV9tq8kbv/C/paI
D2uU5ULdt/+qXEYIuN6fl3RvPhdOqoH6TTbWX+e916Q9F96cyUltpgmoNl83
rLCRC2XWyV3/0CMDqramDlzwmto1Q59PgLeNx+ljjlw47fRbIgZNmpepiLhw
QW5fY6XJKAH8KsW3Kl5cOPg4WihujIBTDf3VQYe4cOYud3z+hCC/wvybl7kQ
bym2RUqYBQ2iF/bXXuHCrbtqxkvQrOgCqT9XuZB0oYnjho5d96nJIoML/nN0
jW6iD/T1OH/N5oKe9cuYxQwWtPkHOane58Id54FcRxEWyIw8Va4s4cKjX5KG
x6exoE9+VDOB4ILfr0Xy8eIssHtCKHSwuNCZXl+Zh/ZkT5lr9XPhh+FR9wb0
6qFPSiXfuPAhWM9UZib+f5zjvJ8/cT3JG8ouoy0UNAKcKS7QA2n/0iVw/Tyn
B3YzeXByt9LdREkWZA/smF2/lAcVMuY8ExkWjHquN5NYzoOeirP37dEWdboJ
9qY8WHvhwfrdaP+dpc8+mPFg11jKpjR0SedXssmKB2ZbRgIn0RoOSk6sdTxo
CDf5XinLgm1d5e6a23kwXOFjYiPPgsE+uVI/Lx5ohNNB7mh2EmWbt4MHnbMP
Xj+EXvxnS5epDw+e8owrstENSnp8R38ejGa0a4yjuzycuXFBPBiHEbd8BRbQ
XlpDqmfx9w/leqbNYYGfk5DZ6XM8yGJKXVBBe/GXl/yM5cFOjxrtJegPUjc3
voznQXJ4lqI3WjabLnJJ5kE3izvxEn3FXPlqeiYP+uQY3X5KLHi4ifZZ85wH
oSODxs//Y4HB/UVFTwt4sHoGua4GbROyaqVaIQ/Ulf5u7ES/9+lr5r/kgcM5
VRURZRbopF+G/Nc8mNNfXrcZbbTMWULzPQ+UNzYd/oWOSnF1NGDxwHtwppW0
CgusrDWbr/bxQPiezhVNtI3GxWiRAR4onJzTtRjtehECOgcxP/LXTFzQgVLp
HgnDPIAjc0XT0fejv9eO8XkQxDnloKrKgkZaIY+UIsE7Y0OBkhrms3T8625p
EtpUk9sXoKlsCdN2GRJinIt/LEez1W4fLZEnYUf9569b0KadNnIxyiRo/tbm
JKJPPVMoV9EhoWmbNcVQZ8GcNbk1QZYk1gEvpQv9YFr45kYrEorU094OoVNX
GjIMmSTsVDLvJ9Hz9ph3DNmQwLyaND5LgwVN0VdcfdaRsMfJ7JQFOlP5Y7qn
Mwlc3X/jaeiL4WI6BwLw+9iJMltNFgzr/jrbFEjCSOaJFU7o44buUkv2kRDi
XXHXE72nqSpp9AAJ6qZPtwahnzQk7zoTQsJ4cItGBnqgMMwq5yQJc3V3ww/0
4K2SF6JXSIjct703Yh4LXm7aaht3lYR3ickR59BKpcQ06XQSCl7JSyajfVNv
i6tkkqCaP1/oDjoqP0F/+S0SOFVgWoeu5HV8PvyIhOsWxX+ktViQFBe29O9j
Etad3JDzHzrS+H15zFMSmn1vO8xDK1884nm5gIT9rS9DlqBX6Mfll5SQMOON
3RwXdPGh9IeSNSRsLVldehn9ubigJa0W98MLuJSFNhGz09V+T8KmXe+23UW3
lra6rvxIgl/v0rcF6GZn8bq9LSRkX6gZbkabsQb/tfaSUD/zXeEsbYxnu3Na
7Sjm9xTD4Sh68dOYy1bjJOjV+M8+gT67SK644C8JDp1nq6LRQ3Jrg2/+I8F9
2gzpBHSt/qPnJ0QpOEnlqd1G+5ip+5hLU+A7YLTgI7rn17/KZzIUMMQLljej
l6+X3aAvR4Gwy7qV7Wj3OXUNKooUJB94rsVCc24uzBZWoWA0WucwiWapevo0
L6CAkpae+d98fN4bY52NehR05IzvU0VPpEpI1y6kQCTbtkoTPSzyyeW1IQWh
y1RdF6L1omwf5C2h4Iz52jFztGpx7P4koMB4N8NuGzokMjNJ0pqC7wFHp3mh
pSISvsTZULCKzircif4UPtF1Zg0Ff+7NHd+D/tBR+SDCnoIZEtvFQtFd0ne3
hrhRsFjaYUUy2uBn16CcOwWpTRopqegnlW43n2+jINDbrO8qWlFS/BpvOwUP
yrZsz0YTKyZuHPHF9Z1k1eSiDzv8TlL0o2C4N7EqH03enJFf5E+Buv+Loifo
yUf3A8YDKejeGRleiG6wNCOjgyi48fJZcAX6nrL0Gu1gCnbLVim8Q8vfICuq
QyhItDiZV4128v8Cs8IoKNISeVmP1tn5wj49kgLuJY7tZ/R5fuaERRQFDh0/
E9vRsxpCvxDRFObx1Ycv6FPy44p6ZzAf6ye1e9DL1D7feBVPgfTALcdBdHrN
+BPvBAraHwsxh9CxR8aGpyVS0Jy1W/snOq0hZMjxEgW7tnp+GEGf05sxMpSG
+Z+8kU4K9p+T4ZGYQQF9q9OERq/4b5halklBvuKGcj7acfB1fsx1CuoTvhWP
o3MP1ulp5lBwc2GmkZAOC+K/j1K19yiofacTJIzeH/xx5NADCk4tUXjAQKf1
b/WuyMPney8dE0W3uIl3BjyiYN+pQzJi6N9Tm6Nln1AwZrlAfTraR+66o+9z
CioM5s4VR9vIZ4VLvqBg+6Nd4jPRyiE6DYWFFDT4WY4IfCCmYUy8hALJyZLL
s9BSDYNNz19RMCEfuE0SPZgf0bK9jIKp9jfyUujle5U9nr3B5xcdD5yNtnqW
N9flLQWnxwxFpNGFF9XFRitxv18nkgXe9u+g8rUqChZljijKoJOnMrZa1eB6
j0+7JLBvctYbVi0FCoXrRWTRUc9DnM68p8DkdHmgwOCnKqX3gYJrqvtqBc7M
TeV9+EiBe9EWFTm06al2RlAjBfNPR/oJ7Pmnb6XCJwr2FPzOEZgmn2cXN1Ng
czS3W+CrV2z1vVopOEcVzpRHR3RksBhtFJR5/Gck8Jny3Ip77RRoNbXZCrx4
c0j9hi8UFIaSbgIXpJD/OF9xvUdCvQRuT9D1vNpFwYshXw+BZW0l+y16sF7Z
FQ4Cn6q5ntLXSwH7fsoKgYfmdO+PZVEwvrBXSeBc67dBRv0U6F988EewvjaH
DddbByi4/J1fKrCaXRh9bBDjv74x6v/fW60K1RyiQKh66UqBp1bkatb+oOBb
gOGwID5ma3KpA78oeGn9OkXg+kNMnsIIBRvdhk0EvlMXoFz2mwLTZ6XVgvg7
e2nt9WVTUOe21ElgaavAbxJcCrTtt7YK8teklurqQVHgo1JcKsh3mHXQRhE+
Ba7U1DyBT3Ib9z8cpWCJ7PQoQX1I24npT/ylwIsKUBPUz745HTV3JrH/7jTu
ENRX1Rv1ixunKNDcK54mgdadEL16nUHDWWrWiKBeF5ZkflknSkNQMiEu8Jy8
7DXcaTQ48K6pzkAXxX1OXyNOw4Ib3XqC+pdily3+PZuG6rUKbYL+Iae5vkmT
oUHv/eNcQX9FqFmHrpKjwVHc/egU9p9YvejOdEUaUmf94k6g33lxtGxVaSj6
kRIt6FfZ5qa/XDUa9FX1Zwv6+QMMT2Rr0JAfyk8R9HvSpfpjfC0aih/ZxHDQ
tzidvrkLaXg1XXdM8L7IrRwrNjegQXlHqdcP9I3GwcX1hjSwwt+XfkfzXeYn
DS+iocV8l88AuvU4j7/IlIZEd45zN/pZWdOxN6toOOfQ0PIRHV3xUcJ5DQ0u
y6veCt5/78yOvPm2lgZ3o8O5dWht/5JUCTsaVPQnd1UJ/n+4e2irI65HFKJK
0d6cC5bjnjTMPZ/r/QD9da/GjEQvGgrEyrpyBOeJtDmt5U1Dp+ObzXfQK9to
C4ddNIxX3tO5jtb1cQu5E0BDpsaOE4LzwTHidazbURoGki59jUBvbkpY0ZFI
Q/Ka1mP26MinBYMpyTSsrv/dbIs2G13/elMKDdGiNlqrBfs5X/Cj5goNG2ff
ybMQ7P/uSpOSLBqOn2nyMUSDxe2onIc0DO5I9ZZEz75/RjK7hgaR5Q/La/B8
jayZO+BVh/E/brygEr11Xm2/ej0N/Gsh515rC+aPrV63Gmg4+Xvz4hfo0W2S
zAefaagS/mByC+0Qsuf5634arrU6dh5DG0Rr2c4Q4oOGRDOpg5ax+KvyRJgP
kzaBXzTR7Dh3xa0ifBiR03ypgs7ZfDP4vhgfNhvzd8miZ6VrdthJ8kG7MuvI
JN5X3J2m215R5oPa1ZQYwf1lOPZSvu0yPkR6t+4IQ+e7X9SV38uHBd49b5/j
/WvReyXH0n18WGHT65+PbuuxTfc9wIdKE+70e+juzReSXgTxQfbPVrMM9E+R
cFn3MD4czQjZGYU21Fnhk3OGD32PltfZo5PklbS33eADxTMT78X7YvUOhbr5
bXxwUVj2lY/30xaT5uC7G0YhJtXnWi3ejyNnyPv5lY2C+NHB6pN4H0/sSwhj
m42Br1K4fT3OB10va0rPF45B2O1qOY4injebb/c3GoxDV7+c0jycb3rD7621
fzwORtT7bzxpFmQdmH1PV/8vnJm5TpqF89r9NmPDkzl/oZS0XFWH893yF7mf
go0mgJ9e9NZjOp5PliYGax9PQOLW/gdzRXGeJOQOSFlOAnN9+ec4IRaIK751
Plg5CTseqAcYTxJQaXz8ndj6f/DTauQdgfPvCQvZDROd/+B8xLnt63Cejnrf
Ey/lPwVZisHhI1wCFM3GHn+emoKIn1L9G/4QYC0RdYq0F2J6ppxfVIHzOx3/
b0tjihBTp33KO3SIgJDmL37FfULMvmqD1SMDBJRGJFxxMRRmvsjrysxhEZB5
pfCVe6gw8/7XnSphPQSoqGqH3qgVZtrub6uX7CRggdKvw94KDCYnwM7nezsB
w96/tIoVGcyMARH/L+iX5S6DMkoM5umMiH316LmH/a9XKjOYzzyehT9G70s+
0rdAg8FUvDs/KxRtZEo+5C1kMFvCXGfMQLO1V9qlMRnMzM+8Q3ptBHDNehbw
rBlM4TThi3PRXRosRYdVDGb7kdaHkmhZzWl6omsZzMo5739wPhMwU6lMNcie
wXw+NnqgBO0Wm7POwZXBhInT2fboKCFNi1w3BlP+IlVjiVZZSzPF3BnMrAhD
rjF60d/Hka89GMwNDHKdPLrUw+298U4GMyC4d6qrlYDuhOvrLvgwmNS7i8aN
6BBZZsfQLgZzbZyYdwWabovVv+XHYC4d21R5Fz09fNGff/4MJn9Qk76K7jEx
fucRwGB+ayrVi0OXPTud+zKQwazo0PA6gR7PW3RLYR+DuUbDIeUA+n+HRPgE

             "]]}}}, {
          PointSize[Medium], 
          Hue[
           NCache[
            Rational[4, 5], 0.8]], 
          PointBox[CompressedData["
1:eJy9lF1Ik2EUx9fG0qZmdpFRiCW+00lhNzarmU5XaX5N08IZiU6LEBzYh1aL
ZJGgEIqamjcFhYiuLEPIrCnLBE370DQNLxRSkvKDKBUvtDz/c/WCzEC6GOPP
4TzPOb/34bc7w5SYJZVIJKV/fyv/UcJ4spt0NnTnK/WiQjoaKk+coGyeDKac
9nqSssWgobwxZIbyYL+WsixtjnLh70jKSdYlypXhCZRLyp1OruQ7KgPlrvwt
lGs2GylHtm+nPJucTVk97E25LSeX8q1jAuWfI3mUT1n9Kbdor1Gu6FFRnkk3
U+6sQF0ZgHrBDvRPN6K/uwbn6/fh/G+XcH+5C+5/74/5HtoyKF/VYX7LlxTK
XpnYz7iop2zxwf6bWrD/dXfwiasFH79a8IsJAb8qHfh6jIBvFvPXMP+hVNTd
fqFe3Id+IRv9G2JxvnQC57/Mxv1KeRRlexPmq4oBf88yzJ+0B/xzTNjPUwH+
zU+wf2809i/qBB95Bvi8DQK/Zx/Bz+8++Jo04BvRDf4/zoL/xD3Up7kex/2P
+9Df8wbnm404v60R97+Ixf2aHMx3xRXzWUsxv18g5heeYr9P8dhv6jz273TG
/vJo8FmaBB/jB/DLM4FfcQr41i+A75wP+HvZwV8RjvreMdRvPkB/dTj6O1xx
flsDzm/1xv2VNnx/fTrmW17G+6jTYn7fUbwfmRL7hXXgfflewP67PLD/1mrw
sQeBz5An+B1sBj91GfhqA8HXl/m/Y/6u9agnHUX99BH0R4yh/8BnnN+ai/Pz
bbi/JAX3B+RhvgEP8Ffy+8ni9+PTgP3mdeDvfAb7X5zH/sc14BMzAD7jdvAz
p4KfPQF8F9gv6+2fEyL/3Gb/VK7RP/tF/ikU+cfA/nnuwD/+7J8b7J8Z9k/X
OvungP3jzP4xi/yjcuCfc//oHwn7R8b+aWX/CKv4Z5sD/7Swf3rYP4XsHyf2
Ty/7o4n9I4j8c5jf/xS//68i/8SL/NMr8k+7A/88Yv8o2T9K9k8/++e7yD8y
kX8y2T+X2T9F7B/rKv5xEfnHwv65u4p/bGv0j8D+kTjwj7vIP8Psn0Psn2D2
T9ga/WNg/+jYP2oH/lGxfwb/k3/+AMOFpMQ=
           "]]}, {
          PointSize[Medium], 
          Hue[
           NCache[
            Rational[3, 5], 0.6]], 
          PointBox[CompressedData["
1:eJzNlGtMU2cYxzuWIMHEUHCIU7Q44mUTJcOhQswjbkCWGgPMzQsoXjZqI1cR
RIuAYzEsfsCpZEOWoBMdl7D4QY1zi1GgIAqlIogK2vdgIIr1wkstipf6Ev/9
8iYN+mXZh+bk5D0953n+l1/AprS4H9xUKtV+8Ru9NjVrak1GTvMtXy9fZWG0
rb15ntslTiVxhfWxCiPzT/fHzTJxyteVJXX1M5qRnFHsuM6pZmPoqcuPGA2a
w/IY45TLMo/XDDMKOhc+wX+AU/HiuO5nDkbJ0Z3RiYOcoluNL/LcFXJMuZjb
9ZRTyp7I9YWeClnSIiYuG+ak0Z6PaB6v0OGHq21t4nztDHVprjg/5jiV8AHn
xGftq/Qap1BCf+XzfKs4L6l57O+mUO0J7zJHHydT0wXPqJeMDgTZwmdbOJWm
dg5NtzOa3NAyUnSDU1r6yeVznzDaca4v5EA7J+OSIbV5gNG/B9t+O9TKad2n
msvfiP0mFBStq2/m9DoofldfL6P6xAr3RU2conzt6t8Zo3S94YZd6NVbdibJ
IPTSx1RHD4n7RJP28xxxH/t9o3qieJ6X3rpgEM/f2lrZESreV1AU9plOvG/T
gNYvpIXT3vJJ3r59jHoTQsw9bZwa+vV3NtwT+v99c6N7B6fW0OSD06yMMnMC
In4U8086oY2YKeZv3+u7IPA2J8OlT2bH2BhpogJX1CmcLNbG0uxnjByx/OQX
/Zy+C/zoz2yhx9VU27R44YeBzhwLVin0dN8fep9HnLIq5/xc9KFC3sG6+i+F
P+F/6ZcmCX+OrK960TnEyeOw0nXaQ6Hxyx5UnRV+tNrnVeuEH/aCOq3Fzikm
Ur0zXfi15OWW1aP+fXzWkTfqH8d5LM49pP+XS++Xvz+C+bZjvnZp/lfY71vs
F4D9u7F/B/TZCX2yoJ8f9NsBfa9AXwX6G6H/FvhTCH+64V8+/FsJf5/A3xT4
vwb+O/PBkI865CcS+fFCvhzI10Upf858NiCffshvMvJbjHz/inxXIf9tyP8G
9GMV+lGB/jxEf8qkfjH0LwD9U019289U9DNF6m8w+r0f/bai/7vRfw34UAs+
XAM/9oAfMl/+K/5EueDPnTH4cxT6DUK/+DH4c0jyZwr8S4d/u96TP878fCXx
5y7ytRX5S0D+4iT+dEn80Un8kfOfhX6Y0I8c9Gcy+nNN4k8g+ncb/RuR+inz
xy7xxwf9D3PBH0+JH4MSXxaCP1PBH5vEJ5k/FS744/z+MObLxnxmaX4nX1di
P420v8xnmT+Z0LcF+jLo3wj9N0v86XlH/qyF/xku+OPMj4+Ur39c8Mco8ScV
+f0F+S5BvqvH4E85+mNFf5z9WvM/4c8bqRj1yg==
           "]]}, {
          PointSize[Medium], 
          Hue[
           NCache[
            Rational[2, 5], 0.4]], 
          PointBox[CompressedData["
1:eJy9lX9MlHUcx0GEc0IEtsG1lGBzLgI77AQpyw93dYbiWUeFdOJ5KZqIWizl
6gLSUtADSQSVkYK01vVrnUNlRnKh/CiEhAMhj2B8n0gaUpABzyMwoWu8n3+e
jbW11h+3++PZ8zzfz/vzer+ekC2vx2+b4+bmdsz1+/vf7KiT9afw1LGkSdai
YtSbdrIv4whPQtGPJy4lMiov89h+/02eIjYslFUWMEr+4/jp0WUCebVcHh1o
Y3RGf/ZglUkgllttOeTJUWTxikJbiUBLhOdMLIij8lUNz6o/FGgosKRn7cMc
+bQur+s6INB+7z+/7fHhKCruYtsPiQIpRyZ2BA4zim1ZqFocKtDcHUbjoWZG
P7PCwSPjPOnHPkie+oxR1urgTP11nuYlffPlFxZGxgXZ/oGf81Sl8lppeINR
Wnhy/O2jPG3QlNuGNjJymu57R27mqahkOCdfy+h23ycnX9zDU3qKM9pTwyjz
PV0j75r/zagAxU+u+bVVY5rHdvFU0z2/Kf0ZRlMLFhv89/LUZJHFKtYwitBu
mq7Yz9OlC74VifGMNts+/S6sgKdOtxORcQZGp+qd/WUf85TTv37ra7sYvXI3
dp26iid7+7YseQaj6cv24AQHT0u/L8rvyGOkU15Zrhjgaao09FxIKaO5a62t
y9wF8otW38m1MUrc7Qhvkws02f3C8Fc1jK5dt9sLFQJNWBNejnAwyh0bTZ+n
EWjn4Yeer2GMAh5td2t15Tkga7ond+XZ05jme2qnQCamHbs3yShMp6oMMAv0
9Ir3G1bKOLpYnHTrgRxX/nszi61+HK27c/NXQ4FAhqMVjiA5R3WdqbL2Ytf9
2zc7shdxdPxcTEzCGYGuzvf4ujmYI+WTVm9nqWu/SRWaWyEc5eH6FVxvwP1v
4X4dnr8Jz7+A90fh/aE43yqcrwvnz8D5xfl+x3wWzJ+K+euQzzTyEfMbR34j
a2byXYR81yN/97KZ/KX70WN/tdjfMey3EPvdiP13Y/8K8HEefPDgpwP8xIKv
evCVBf7M4G8QfJrA5w3wWwJ+U8D3FvCtB/+14P8A+uGHfvyC/mxFf9Toly/6
FY3+qdE/T/QzF/08K+mvEv1+BP0+jf73ov+vwg8e8MNH8MdS+MMJv9yFX/5r
/yhwvlCcz4rzD87in0jMH4n54yT+6ZP4R8zXaxb/pEr8c0PinyHsd9+/9I9S
4h+jxD9F4NMCPg0S/0yB73Dw/ZLEP+4S/+jQnwn0pxH9mkS/xP7tRv+CJP7p
Q3/3ob/h6PdT6Pd5iX+08EMS/GCHP96GP/Ilfnl8Fv/U4nq9xD+i34x4vg3v
fwLvF/0Yg/N1SvzzIOb7DfNlS+ZvRj7jyEfMb07PTH5ivv7IV4X8veEfj+qZ
/YRhP+L34+o/+KdX4p9K8DECfrrAj8jXNfD1Lvg7CP7E76MZfHZI/LNH4h8D
+K8G/+L3WYZ+iN/vZPRnNfrlM4t/ZOhn3v/kn78AzRi0Yg==
           "]]}, {
          PointSize[Medium], 
          Hue[
           NCache[
            Rational[1, 5], 0.2]], 
          PointBox[CompressedData["
1:eJy9lH9MlHUcx88YgrD4eVcoiYLNJrhIW/w4iQ+0VCi3uvgRd3mXIKYdIpCd
dyKoK0hFwyMQK7ZAyWihMnLnplzCQLkLFYR+EaPnHs0dP4aYw0KeHxnt3v7z
bDdba/1xuz+efZ/n831/Xq93eE7Ba5sekclk5tnf3/+egYejS7Ucjbae2nJP
ydDiu0uDj83l6XKQ34JRgSHDriyfQLVAK0bK7cVJLP26h8nVZoh0SuBeXdTP
UlvDB9s+bRTJ7B80MyOyFHHlyY/r3xapYGtilXWYpfqQnnbTqECGjab61o9Y
qupPkdlUAqVb9fy6BJZuR64oMHby1OibOb32ewd1xiZpSlJ4Uv04f1qf4qCV
xW2DN0c5EjOmxvqGGPrN68Ifnp9zdPW5q2mDBxlSFRYF3jJy9LNDYUpRMzTv
ouc+SzZHbS88E95HDFUsOf1OvI6jrwZo9bVVDPlWLmM36znKVV0btqXOPm/c
MqV/n6P7tvzjhrcY0jzFp1m+4MiksBgmKhk6Eax702OAI58jB85XdzAU5OSs
mR48NVcsXhsxw9CdzNj223E8Vclrr9TGOOgn9bLUNUU8NXwb8HW00UEvLjwz
z6OZpzWfDag2nnNQf15M7sxNnuRz08VB3kFNx2vCI8IE0mwr294axpJf8vPO
2gyBrlt8jSWJLM3pbl9fWSFQUEvZE0PrWerc0XQ/yyrQ41nmrk07WdrBe+Xr
xgViSrr97dUsbT3QFR0qF2lC2dtoaWZpyficW2HxIpV6jSgmO1hKOjnp9FGL
lFWeoVj1HUvZZ9R283aR4mI+OVdwg6XC2vCWov0iXU499vvmSZam7Jr80qMi
PX0vJ9J7mqW+P+9yVQ0iRd1J+CFBYOmCVhlcN7v/xA93v87N7n9Y8nwC56Nx
3oT3X8T79+L7Ufj+s5hPi/kWYf69mL8I93Pifvtx/yHcvw35hCIf8ZIrvxDk
F4B8GeT7IH818r+E/SzAfl6W7g/7/RL7HcH+G7D/5eDjMPiwgJ+JGhc/evCl
AV/l4I8Hf37gczX43Ad+reA3AHyfBd+vgH9/1sX/GPzohh+x8Eee6fKnC35p
4NcY/NsN/+rgZz78rIG/efB3IfzOgd/t8P8Q/B9GP5xEPxRL+iMK/dKLfvmv
+ycM8xX+y/6xIZ905KNEfjz6x4l8e930j3Q/h7C/Fkn/5PzD/mkCP97on1BJ
/0yBPzP465P0z0vgNxn82sC3AnzXgX8d+PeCHzfghyf6Jxj+dMAvOfwql/j3
Lvwcg5+R8HenpH/U8DsP/sfC/xL0Q89D+mc5+qUH/ROH/rmO50vxnMH5GJzP
xfsH8P4N+H48vr8S8+kw33zM/x7mz8P9xnG/Xbj/L7j/WUk/y5DfY8hPTHLl
O4J8TyD/DW76R4n9ad30zzj2fxT7fxR8WN30zxvgywC+9oC/ELuLvwd8GsFn
Gfg9D369wXfvQ/rnNPxIhj+E/vkGfqW56Z9q+Jn9P/XPX3n2vtQ=
           "]]}, {
          PointSize[Medium], 
          Hue[0], 
          PointBox[CompressedData["
1:eJy9lWtQVGUYx/ccBCmyGQxyxlJXRXAhCJTLKDTPWzPcIhGQEVFhx8UVL2AN
WUwNQusQ6yVUNEKBTTPHhURuK2rClGk0GVsN3ojZs+zJGBgKJ24hi7AbtX8+
dGYY+9D0gdkPZ857nvf5//4/FqteT1LzMpns6NTfX7+DNYFnPLNsNJj7wqbu
70yk9vthQkiUsUU3Fzfntptp63yd+kQ3x5IGxvL0G0SynnVKcM3iWf2HPZmq
OyIN7f7FL3ohz4LGIzpSi0VK9MnUR+/lWHhp+v0DIxbqCWvlN9+VsW2XElZc
/aqLanqyDS2RMqbderl9bbOZllwfi1XU2ml0gXFSPihQif6VPe+622nQ2hI7
uUWgOkvqTf0FGwlzhP1tLgLZil47VvCOjZqKH+Uu6zDR3kgnedzU/FF1ias8
20xkSbpRmplvo10eY32nTSbacqg/cmO1jXLKPSLMvECXq2JKmnptVD+SU3sn
XKCVS37tHwi208hFp9kZ+wT6sSA+6+ViO33BBUa53xZojpd3fO4DOxmGhv1H
fc10Rb7u6hsKGdvQsi+oUmumlwSdf0Xa1H3mtW/v7zHTZNHvnezY1HPbl18v
iO6ieyqX3oPfyJgzPfe5/lwXWRIKuWtWGUuKcqsOm2Uh1e0D18mPYz7Zn2mq
0i3k/IdpdsFGjvXnzH9q4qKFAo4XPuGs5diFgz1GXyeR0pKfd95Rz7GJEPnP
48tFCl53S5lwj2MVxo68ijiRyoyhPtljHCu5++bO1p0iNShXdOU9y7Oc4GX9
4UUi+Ufc0EYH8sz9SIepTSfSKS6t++NInpX3ZVhfbRBJM5rSmbaeZ/vvv6gs
uybS2aHuR5kqnslraF5Zm0j5KadWV+/g2fYSZgy7JdLw3/zwLE4ef3z3FA9a
PFfj+Rm8vwjvf4Dz83C+Dt8/ie+vxHxumK8K82swfznuV4r7+eD+tbi/EvuR
hTr2sxz7M2B/kyOO/T7AftOx/xDsvxP5KJHP98jPC/kNI1818l2F/MuQfwP4
2AU+xpc6+GkHP63gqw18rQZ/Lk0O/irAZy/4XAN+K8FvJ/jOB9/bwP8n4N9D
+89+nEN/Ap529KcM/Uoed/Rrun8BCx39q0M/S9DPPvT3BPqbjH6/jX4PoP++
6P9D+KEBfkiFP2LgjzXwy/C3Dr/81/5ZK/GP+Bj/eOL+k/DPUYl/arC/LvjH
Ffs1zOCfn5BPNvLZhPzeQn7nka/hX/rHGf5pBD+XwFcq+IoCf0Xgb5pPFfjs
AL+u4FeQ+CcD/CvA/0P0YxT9UKA/jehPMvplh39CJf7RoZ/F6Od59HcP+uuN
fj+Dfn+E/lei/+/DDxr4oRL+8IY/iuGXNPhl9DH+kb7/Hs4vxPlH8P1P8f3p
+eZiPoNk/tMSv4ZI7p+K/cyCfxQS/1gl+1VK/DP9/yEF+RiR39IZ/BOE/JuQ
fyP42Aw+euEfE/gxgK/fwJcf+POCf66Az2bwuR78asDvAPiOAN954F8D/p9E
P9wOO/pRi/7Ewj+H0K+YGfxTjX7q/if//An322dI
           "]]}}, {Axes -> False, PlotLabel -> FormBox[
           StyleBox["\"b=1\"", {
             GrayLevel[0], Large}, StripOnInput -> False], TraditionalForm], 
         PlotRange -> All, Frame -> True, FrameStyle -> {{
            GrayLevel[0], Medium}, {
            GrayLevel[0], Medium}}, AspectRatio -> 0.65, FrameTicksStyle -> 
         16, ImageSize -> Large, FrameLabel -> {
           FormBox[
            StyleBox["\"R\"", {
              GrayLevel[0], Large}, StripOnInput -> False], TraditionalForm], 
           FormBox[
            StyleBox["\"r\"", {
              GrayLevel[0], Large}, StripOnInput -> False], TraditionalForm]},
          DisplayFunction -> Identity, Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {1., 0.44}, DisplayFunction :> 
         Identity, FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], Method -> {"ScalingFunctions" -> None}, 
         PlotRange -> {{1.0005009990002505`, 1.9013878188659974`}, {
          0.4342585459106648, 0.527319768893327}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.05], 
            Scaled[0.05]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           StyleBox["\"a=1.00\"", 16, StripOnInput -> False], 
           StyleBox["\"a=1.25\"", 16, StripOnInput -> False], 
           StyleBox["\"a=1.50\"", 16, StripOnInput -> False], 
           StyleBox["\"a=1.75\"", 16, StripOnInput -> False], 
           StyleBox["\"a=2.00\"", 16, StripOnInput -> False]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[4, 5], 0.8], 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[4, 5], 0.8], 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[3, 5], 0.6], 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[3, 5], 0.6], 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[2, 5], 0.4], 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[2, 5], 0.4], 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[1, 5], 0.2], 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[1, 5], 0.2], 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.0125`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[
                    Rational[4, 5]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    Hue[0.8000000000000002, 1., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], "Hue[4/5]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = Hue[
                    Rational[4, 5], 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[
                    Rational[4, 5]], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.0125`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[
                    Rational[3, 5]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> Hue[0.6, 1., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], "Hue[3/5]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = Hue[
                    Rational[3, 5], 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[
                    Rational[3, 5]], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.0125`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[
                    Rational[2, 5]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    Hue[0.4000000000000001, 1., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], "Hue[2/5]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = Hue[
                    Rational[2, 5], 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[
                    Rational[2, 5]], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.0125`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[
                    Rational[1, 5]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    Hue[0.20000000000000004`, 1., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], "Hue[1/5]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = Hue[
                    Rational[1, 5], 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[
                    Rational[1, 5]], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.0125`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> Hue[0., 1., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], "Hue[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0], Editable -> False, Selectable -> False]}], "}"}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7883474672487745`*^9, 3.788347490604725*^9}, 
   3.7883488228124785`*^9, {3.788348874327855*^9, 3.7883489181541605`*^9}, 
   3.7883489931490736`*^9, 3.788349125920367*^9, 3.7883491988278728`*^9, 
   3.788351015270977*^9, 3.7897221985155663`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{"\"\<0080_radii_grid\>\"", ",", "radiiGrid"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7754084009021096`*^9, 3.7754084105032187`*^9}, {
  3.7760888118292217`*^9, 3.7760888482900248`*^9}, {3.7862675502643805`*^9, 
  3.7862675539518566`*^9}, {3.786270207863761*^9, 3.7862702162872314`*^9}, {
  3.788349186341278*^9, 3.7883492043330173`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"drawSimRovR", "[", 
    RowBox[{"a_", ",", "tDeg_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ell", ",", "ons", ",", "gr", ",", "lab", ",", "r", ",", "R", ",", "x1",
        ",", "x3", ",", "clrs"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ell", "=", 
       RowBox[{"plotEll", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ons", "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", 
         RowBox[{"toRad", "@", "tDeg"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"r", "=", 
       RowBox[{"getInradius", "[", 
        RowBox[{"ons", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"R", "=", 
       RowBox[{"getCircumradius", "[", 
        RowBox[{"ons", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x1", "=", 
       RowBox[{"getIncenterTrilin", "[", 
        RowBox[{
         RowBox[{"ons", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"ons", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x3", "=", 
       RowBox[{"getCircumcenterTrilin", "[", 
        RowBox[{
         RowBox[{"ons", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"ons", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"clrs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}], ",", 
         RowBox[{"\"\<cir\>\"", "/.", "ptClrs"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FaceForm", "@", "None"}], ",", 
          RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Gray", ",", "Dashed", ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "a"}], ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"a", ",", "0"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Blue"}], "}"}]}], ",", 
            RowBox[{"Polygon", "@", 
             RowBox[{"ons", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#3", ",", 
               RowBox[{"Point", "@", "#2"}], ",", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\"\<X\>\"", ",", "#1"}], "]"}], ",", 
                   RowBox[{"{", "20", "}"}]}], "]"}], ",", "#2", ",", 
                 RowBox[{"{", 
                  RowBox[{"1.25", ",", 
                   RowBox[{"-", "1.25"}]}], "}"}]}], "]"}]}], "}"}], "&"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x3"}], "}"}], ",", "clrs"}], "}"}]}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Thick", ",", "#1", ",", 
               RowBox[{"Circle", "[", 
                RowBox[{"#2", ",", "#3"}], "]"}]}], "}"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"clrs", ",", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "R"}], "}"}]}], "}"}]}], "]"}]}], "}"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"lab", "=", 
       RowBox[{"\"\<a=\>\"", "<>", 
        RowBox[{"nfn", "[", 
         RowBox[{"a", ",", "2"}], "]"}], "<>", "\"\<, \[Theta]=\>\"", "<>", 
        RowBox[{"nfn", "[", 
         RowBox[{"tDeg", ",", "2"}], "]"}], "<>", "\"\<\[Degree]\\nr=\>\"", "<>", 
        RowBox[{"nfn", "[", 
         RowBox[{"r", ",", "3"}], "]"}], "<>", "\"\<, R=\>\"", "<>", 
        RowBox[{"nfn", "[", 
         RowBox[{"R", ",", "3"}], "]"}], "<>", "\"\<, r/R=\>\"", "<>", 
        RowBox[{"nfn", "[", 
         RowBox[{
          RowBox[{"r", "/", "R"}], ",", "3"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ell", ",", "gr"}], "}"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{"lab", ",", "16"}], "]"}]}]}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7883450204833527`*^9, 3.788345330372639*^9}, {
  3.788345377981705*^9, 3.788345441548236*^9}, {3.7883456999077463`*^9, 
  3.788345924357116*^9}, {3.7883462677573905`*^9, 3.788346379808177*^9}, {
  3.7883495112570105`*^9, 3.7883495455064125`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getX1X3loci", "[", "a_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"locusX1", ",", "locusX3", ",", "ons", ",", 
       RowBox[{"eps", "=", ".001"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"locusX1", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ons", "=", 
            RowBox[{"orbitNormals", "[", 
             RowBox[{"a", ",", 
              RowBox[{"t", "+", "eps"}]}], "]"}]}], ";", 
           RowBox[{"getIncenterTrilin", "[", 
            RowBox[{
             RowBox[{"ons", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"ons", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", 
            RowBox[{"\[Pi]", "/", "1.2"}]}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Dashed", ",", 
             RowBox[{"\"\<inc\>\"", "/.", "ptClrs"}]}], "}"}]}]}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"locusX3", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ons", "=", 
            RowBox[{"orbitNormals", "[", 
             RowBox[{"a", ",", 
              RowBox[{"t", "+", "eps"}]}], "]"}]}], ";", 
           RowBox[{"getCircumcenterTrilin", "[", 
            RowBox[{
             RowBox[{"ons", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"ons", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", 
            RowBox[{"\[Pi]", "/", "1.2"}]}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Dashed", ",", 
             RowBox[{"\"\<cir\>\"", "/.", "ptClrs"}]}], "}"}]}]}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"locusX1", ",", "locusX3"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.788346959978297*^9, 3.788347000385474*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"locusX1", ",", "locusX3", ",", "ons", ",", 
       RowBox[{"eps", "=", ".001"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"locusX1", ",", "locusX3"}], "}"}], "=", 
       RowBox[{"getX1X3loci", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Dynamic", "[", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"drawSimRovR", "[", 
            RowBox[{"a", ",", "tDeg"}], "]"}], ",", "locusX1", ",", 
           "locusX3"}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}]}], "]"}], 
       "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "2"}], "}"}], ",", "1.01", ",", "3", ",", ".01"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tDeg", ",", "0."}], "}"}], ",", 
     RowBox[{"-", "180"}], ",", "180", ",", ".25"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7883451783085995`*^9, 3.788345185659383*^9}, {
  3.788345336169894*^9, 3.788345367202248*^9}, {3.7883454445316844`*^9, 
  3.788345675155839*^9}, {3.788345937917014*^9, 3.788345993563753*^9}, {
  3.788346127853066*^9, 3.788346132035863*^9}, {3.7883464021643476`*^9, 
  3.788346469971249*^9}, {3.7883466193308697`*^9, 3.7883466206749897`*^9}, {
  3.7883470068987603`*^9, 3.7883470249307775`*^9}, {3.7883473549689226`*^9, 
  3.78834735582436*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 2, $CellContext`tDeg$$ = 0., 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 2}, 1.01, 3, 0.01}, {{
       Hold[$CellContext`tDeg$$], 0.}, -180, 180, 0.25}}, Typeset`size$$ = {
    852., {3., 9.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$2655210$$ = 
    0, $CellContext`tDeg$2655211$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 2, $CellContext`tDeg$$ = 0.}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$2655210$$, 0], 
        Hold[$CellContext`tDeg$$, $CellContext`tDeg$2655211$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      DynamicModule[{$CellContext`locusX1, $CellContext`locusX3, \
$CellContext`ons, $CellContext`eps = 
         0.001}, {$CellContext`locusX1, $CellContext`locusX3} = \
$CellContext`getX1X3loci[$CellContext`a$$]; Dynamic[
          Show[{
            $CellContext`drawSimRovR[$CellContext`a$$, $CellContext`tDeg$$], \
$CellContext`locusX1, $CellContext`locusX3}, ImageSize -> Large, 
           PlotRange -> {{-3, 3}, {-2, 2}}]]], 
      "Specifications" :> {{{$CellContext`a$$, 2}, 1.01, 3, 
         0.01}, {{$CellContext`tDeg$$, 0.}, -180, 180, 0.25}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{903., {66., 72.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7883474258700967`*^9, 3.788349532326726*^9, 
  3.789722200808613*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "shape"}], "MessageName"], ":", 
  " ", "\<\"Lists \[NoBreak]\\!\\({locusX1$20970, locusX3$20970}\\)\[NoBreak] \
and \[NoBreak]\\!\\(getX1X3loci[2]\\)\[NoBreak] are not the same shape. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Set/shape\\\", \
ButtonNote -> \\\"Set::shape\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7903297419843025`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "shape"}], "MessageName"], ":", 
  " ", "\<\"Lists \[NoBreak]\\!\\({locusX1$52143, locusX3$52143}\\)\[NoBreak] \
and \[NoBreak]\\!\\(getX1X3loci[2]\\)\[NoBreak] are not the same shape. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Set/shape\\\", \
ButtonNote -> \\\"Set::shape\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7904980799811916`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "shape"}], "MessageName"], ":", 
  " ", "\<\"Lists \[NoBreak]\\!\\({locusX1$440923, locusX3$440923}\\)\
\[NoBreak] and \[NoBreak]\\!\\(getX1X3loci[2]\\)\[NoBreak] are not the same \
shape. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Set/shape\\\", ButtonNote -> \
\\\"Set::shape\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.790523587751913*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "shape"}], "MessageName"], ":", 
  " ", "\<\"Lists \[NoBreak]\\!\\({locusX1$1294322, locusX3$1294322}\\)\
\[NoBreak] and \[NoBreak]\\!\\(getX1X3loci[2]\\)\[NoBreak] are not the same \
shape. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Set/shape\\\", ButtonNote -> \
\\\"Set::shape\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.790753818033473*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "shape"}], "MessageName"], ":", 
  " ", "\<\"Lists \[NoBreak]\\!\\({locusX1$40784, locusX3$40784}\\)\[NoBreak] \
and \[NoBreak]\\!\\(getX1X3loci[2]\\)\[NoBreak] are not the same shape. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Set/shape\\\", \
ButtonNote -> \\\"Set::shape\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7913249692138844`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "shape"}], "MessageName"], ":", 
  " ", "\<\"Lists \[NoBreak]\\!\\({locusX1$51062, locusX3$51062}\\)\[NoBreak] \
and \[NoBreak]\\!\\(getX1X3loci[2]\\)\[NoBreak] are not the same shape. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Set/shape\\\", \
ButtonNote -> \\\"Set::shape\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7913267990736165`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "shape"}], "MessageName"], ":", 
  " ", "\<\"Lists \[NoBreak]\\!\\({locusX1$84506, locusX3$84506}\\)\[NoBreak] \
and \[NoBreak]\\!\\(getX1X3loci[2]\\)\[NoBreak] are not the same shape. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Set/shape\\\", \
ButtonNote -> \\\"Set::shape\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7914835047680035`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "shape"}], "MessageName"], ":", 
  " ", "\<\"Lists \[NoBreak]\\!\\({locusX1$60245, locusX3$60245}\\)\[NoBreak] \
and \[NoBreak]\\!\\(getX1X3loci[2]\\)\[NoBreak] are not the same shape. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Set/shape\\\", \
ButtonNote -> \\\"Set::shape\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.791563825042055*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "shape"}], "MessageName"], ":", 
  " ", "\<\"Lists \[NoBreak]\\!\\({locusX1$1780696, locusX3$1780696}\\)\
\[NoBreak] and \[NoBreak]\\!\\(getX1X3loci[2]\\)\[NoBreak] are not the same \
shape. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Set/shape\\\", ButtonNote -> \
\\\"Set::shape\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7915718509612193`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "shape"}], "MessageName"], ":", 
  " ", "\<\"Lists \[NoBreak]\\!\\({locusX1$1166108, locusX3$1166108}\\)\
\[NoBreak] and \[NoBreak]\\!\\(getX1X3loci[2]\\)\[NoBreak] are not the same \
shape. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Set/shape\\\", ButtonNote -> \
\\\"Set::shape\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.791573564748889*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "shape"}], "MessageName"], ":", 
  " ", "\<\"Lists \[NoBreak]\\!\\({locusX1$2355424, locusX3$2355424}\\)\
\[NoBreak] and \[NoBreak]\\!\\(getX1X3loci[2]\\)\[NoBreak] are not the same \
shape. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Set/shape\\\", ButtonNote -> \
\\\"Set::shape\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.791723186904605*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "shape"}], "MessageName"], ":", 
  " ", "\<\"Lists \[NoBreak]\\!\\({locusX1$163166, locusX3$163166}\\)\
\[NoBreak] and \[NoBreak]\\!\\(getX1X3loci[2]\\)\[NoBreak] are not the same \
shape. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Set/shape\\\", ButtonNote -> \
\\\"Set::shape\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7921826571099896`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "shape"}], "MessageName"], ":", 
  " ", "\<\"Lists \[NoBreak]\\!\\({locusX1$53867, locusX3$53867}\\)\[NoBreak] \
and \[NoBreak]\\!\\(getX1X3loci[2]\\)\[NoBreak] are not the same shape. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Set/shape\\\", \
ButtonNote -> \\\"Set::shape\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7921874213667307`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "shape"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Lists \[NoBreak]\\!\\({locusX1$2202947, \
locusX3$2202947}\\)\[NoBreak] and \[NoBreak]\\!\\(getX1X3loci[2]\\)\[NoBreak] \
are not the same shape. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Set/shape\\\", ButtonNote -> \
\\\"Set::shape\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7922467368781223`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"drawSimRovRandX1X3Loci", "[", 
    RowBox[{"a_", ",", "tDeg_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pRr", ",", "loci"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"loci", "=", 
       RowBox[{"getX1X3loci", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pRr", "=", 
       RowBox[{"drawSimRovR", "[", 
        RowBox[{"a", ",", "tDeg"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"{", 
        RowBox[{"pRr", ",", "loci"}], "}"}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7883492467730274`*^9, 3.7883493797166815`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"minMaxOrbits", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Show", "[", 
         RowBox[{"#2", ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"400", ",", "400"}], "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "#1"}], ",", "#1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}]}], "]"}], 
        "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.5", ",", "2.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"drawSimRovRandX1X3Loci", "[", 
            RowBox[{"2.", ",", "0"}], "]"}], ",", 
           RowBox[{"drawSimRovRandX1X3Loci", "[", 
            RowBox[{"2.", ",", "90."}], "]"}]}], "}"}]}], "}"}]}], "]"}], 
     "}"}], ",", 
    RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.788349312805744*^9, 3.7883493201877885`*^9}, 
   3.7883493669911537`*^9, {3.788349397861738*^9, 3.7883494962700353`*^9}, {
   3.7883495697087884`*^9, 3.788349751934348*^9}, {3.7883497958385277`*^9, 
   3.788349818220328*^9}, {3.7883498668204784`*^9, 3.7883498713504143`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{
        {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {2., 1.}]}, 
        {PointSize[Large], FaceForm[None], 
         {GrayLevel[0.5], Dashing[{Small, Small}], 
          LineBox[{{-2., 0}, {2., 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{2., 
           0.}, {-1.7370341836426544`, -0.49565921883308517`}, \
{-1.7370341836426646`, 0.4956592188330763}}]}, {
          {RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 0], 
           PointBox[{-1.3027756377319948`, -4.450865344751306*^-15}], InsetBox[
            StyleBox[
             SubscriptBox["\<\"X\"\>", "1"],
             StripOnInput->False,
             
             FontSize->
              20], {-1.3027756377319948`, -4.450865344751306*^-15}, \
{1.25, -1.25}]}, 
          {RGBColor[0.5, 0, 0.5], 
           PointBox[{0.09861218113400287, 1.4464293838648567`*^-14}], InsetBox[
            StyleBox[
             SubscriptBox["\<\"X\"\>", "3"],
             StripOnInput->False,
             
             FontSize->
              20], {0.09861218113400287, 1.4464293838648567`*^-14}, \
{1.25, -1.25}]}}, {
          {RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
           CircleBox[{-1.3027756377319948`, -4.450865344751306*^-15}, 
            0.434258545910665]}, 
          {RGBColor[0.5, 0, 0.5], Thickness[Large], 
           CircleBox[{0.09861218113400287, 1.4464293838648567`*^-14}, 
            1.9013878188659954`]}}}}, {{}, {}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
         Opacity[1.], Dashing[{Small, Small}], FaceForm[Opacity[0.3]], 
         LineBox[CompressedData["
1:eJwV2nc81e8XAHDRLkVJqm9Dg1A0NMxTaKBSQqhIKGU1SRJlyyYre++917H3
HneQEIls92Mrv8/vH/f1fvm497nnOec853m9cD82VtRlZmJiqiN//P+1mqtX
KYxKIGySPeU5a4J8Vuenn1MIFN1IyPem2eBVSW/a5w4CT7Hpp63+dkEB6RLh
kVYCQzuuWGq4euFm+STJ4CYCiaoW1k5eP7xaYSAZXkcgS4b6npMlgdhtd/DL
bCWBIwE5Qn4Jofj20YCTXwmB1ZK9T5TmwvGvaVH6l3wCL2ynyZy6FIXCAZ/s
mjMIzJCfWmZzjMGaF9l+OokEboqo7u9uiUPLdBMn+UgC/75YfmWyOxEn7yls
sf1G4DXHapWqB8n4bmAvnd2TwNucN9NUb6fipWo6ztgTWGDf2OT6Mg0z6JM3
M18SqJ/kpeuYloEV59+3+egSKMRR/VK4JRMtl5f5WlUJvDNSKDk+noXRp3aF
3JEg8P2pnnAVnlzcau/IEiBI4DjxgTJxKQ+r9orUSB4ksM2gab2Oej4uzY87
hP9joLI+IZbtWIghw/sFdcYZ+El2ze4PIUXYa3PP1r6bgRkTPUFTGcV45WHd
nsUsBoroOwc/MCjBtNWHvenapO+bz950KEPthvCaxJsMNGrkcFViLcfLRgJs
uy4wcFw+xMLBoxxD32DFhY0MZDbfc1XXtwKrXczpCxEzSHuakfnKrwpjT551
8nOcwefOR2y1OauRIzHMLMtoBoNy+K5oeFWjbciNjcYXZvDw50d/tZxqMC1j
c8We8mmcnp8KETOoQw21qX3fI6fxtt6H1xw/69DijMfBE3bTKDIpvrlbpR5N
VsTSLK5No25kR9gxiQb0iFJUPFI5hTq9p0a0VxrxV4PcZbeIKTxv7fT64bMm
bM+ZFAj4NIU/W303n+psQrmjxwq/ik/hiq3xedW4ZjSnH0opezCJP+di+0vC
WpDNzjy9l3USh578mkiltqDFBaknUsUTWDBdlje6tRW30Onck/9NYM1nr3DJ
t61ojktxVm1j+PHKT1tZiTZUo8+uffJxDEek9Ys/GrbhLRX9NUV8Y3jn5fHy
pcA2jFuwvN75cRSLsy/ZVi22IduR9SVSR/7gFRGlmoT4drQaTtkhWz+C0S7n
qnZ1tuOD6e8Vf16N4IsTKpSqf+1o889ZiqN0GOWtrhutKnRgSOeGdw5qv1Eg
bAQoIx0oSSsmZv4NIaNuTMBmWyemHOBWOhg5hPXOjmstznRiWt3C9+bxX5jS
FaOo+K4TldKfmWyxHMRz0kKRYcudyOz5vpPpyCBeytYbKNxLQeGxJ8ldVQPo
pK3UyCdCwbKTLFT5bQN4TdQga+U1BQ/P1xq7B/ZjzPwUf1Q/BSPCzlpzXupH
oRW5Dv1lCqraLqqFDPShUZ3YXhcOKr7/xcNTzd+HTXPlpoMyVCzt8rrt97oH
L3ln+GwOpqL9Gg3bLwXf8a5UOEddOhVXL9CXc1i+IyG0KXWiioqCS0rT7d5d
qJqh12kwTsXvR6kFTT103H/n7tnaVSpeHTTX3MNLx0Xz3Sru7DRUbE9UzMin
4pNXwRk6Z2modDPix9Z1VMzc+pH+RpqGAcIHi+oUKJjgseg/q0hDHakKS7uh
DjxMHKHdekFDgx8nTD7saUPO+rD/nCJpyLpnfT68bsVXgdKptik0nMt/FP2u
sQUfjn75ti2fhpun5jJT1jejjR2h29hIw2dae85vLG7Ek5OtBeuoNJz8L2xM
26QBEw28VFp6afhR9Nmy6J9aZLitucY9RUPzpB8jJVE1+IZ5jj1+noY9i7fE
NB9X4/aE41vr/tFQSGykbe+hKvT/N2H0eR0dJWsf6C/8qMBzHqOvOrbQ8Vb4
K9+V4HL8T21OoZSdjmm+MWUCj8rwXuU6CbnddOSp2LrhYgPieM+hA+e46Xhl
26XHdcpFuDIy8d7/GB2HX/Tub+/Px/aDB/KC+ehosrovQO1FLvIUrtl89SQd
a6RokzprstE0wTPI/RQdNe/3Ti97Z2Adm0a45Vny+e59gscE0nDS5s0VjvN0
nEr61tNon4Q/N6unK1ykY5mglalrcSxuyJ7bcVaUjsFPFrJ9lyLwwT97NxSj
49ee2TsjpsHYWOx5a06cjve4HfM0131F267ONzQJ8vuE9fndFLPHORuJY08l
6XisNonFdf1jvMZHtYogvawYYC8s8wFqxiujXUkLt1W+H7znDuuaL2TykS6r
km2K8PIHE4X7FW/J99MI+Yf7H4fBsVzlqdfk513lOvK0iYiC00MiCsfI9dz0
nxr6/ikeNMNXZ51EyL9fykiX2pQCrz6az0ddoON9k4ttHyrTwPbcPR3Tc3Tk
nrv314IlE/46bZZnIuOxdeS4QLhkNrhEdeRcJuP1O1L4+5BJLpj+zMoUJ+O5
dTtriWxiPgTtfy47Q8a70wgya34UAq++trk2Dx29BOXKtbYhKEHlTY/DdNRb
rvNwDCqB9jWPSj8coCMxfvGbYXop3NiY1MGzl072a0fp75VlsGeuztp9Fx1P
MdaOqwxXQPnHfQHRZH5ox+f2aM1XQq5N/LjSejq22ujLz66tBmnf4qwqJjpa
ax6+kbmvFn6X1mstEDT8q7Zdu/doHUwYDR/In6Dhw4dDfz1O1IP+xWZm6WEa
rrSof3a50AgW3LGUpC4adpi3vKWINgEr8djZo52GhWYbmGLEm+GEsRkBDTT8
vfy4bjKoBXZwJd5gKqLhP0Mnq/vebRB5LTORJ5CGa9QT32eztoNfIltUhBcN
T71zmHxo1w5FAVrIcKJhuBubntfbDphZ2XKbzYyGljoTrmHyFNA4QDmscJeG
sgWZp58hBSJD/czNZMn1dDhvtzpDBf7lh/EfgIaJw1ThIE4abDj8SIxNgIaj
xxZ3hlPoELj9oftHJhqWNl7WmJLpgtFt51g/z1KRb3pbvkd6FxxR3OSi/YeK
+hnSnc1fumHJ7vW68nYqFk64ucme74Enx8BsbRQVkznu0XvO9YHd6ZU9bFJU
lIKRc6VP+8AKdXounqOiT9wVjrv+faCVX2xz/TgVnapE8q2X+4BT66PpgW1U
xNxPHocL+2HPo2iVdBoFM1hEa2IEB8BmurSj9xkFrVqyHgXfH4C/7V0myfcp
WCiqpCTrMAAOC3oH9G9SMLv0UXtR3wAwC+VvTz1FwRC2tWMCroNAkxHmfT3X
iWpXYxdedf+CfV9qFwUtO1Hlki3/tQ1DsElp52KJUSdKCXDG1p4ZgicTxpYy
Gp0Ya3LgU7fDEAjtfpPJLdGJ7Xu2W106/Rs8pVWewVIHLutEl1i8Hobnu0/z
qL7qQI9Vg7yXAcPAkifhJKjVgY0xL9v2lQ7Dl5ATrCvkefUkYUDBm3UE3FP4
IixOdqBAFjQciRiBfKEBwSPD7TjEvHnqWOkfOJ+sHy/8oB15rqnbZA78gRHd
4GfBcu3I+WEgmWn9KEiftrVjEWlH5n3ynu2yo2AocKu0ZFc7FlON175oGgXq
op8qa3MbuncMi/2qH4MamlTdf5fbcE9C/onkgAlI6r3Po3S0FUdzgqZnMyZg
oPi+Vu7OVhwRW1Tf3jgBAR0LuvtZWpHjUs3t3H8TUPSf19k//S3Y5vbx2Kjm
JHCo/Q7wCGlBaQ2Pn5tZp2BYc++SwL4WbLnCK52bMwWhn2NdRI43oanJrrHC
0ilw9vPIctjQhM3xL+uS66dAO4PrwY+hRix++TlSvXcK5vKkvIOiGnH+7vmT
lHXToD4jEWh0pBEjl25RTBSmwU/ySfiLQw1IiapqPEaZhk/Pl8vtD9VhqIkM
b/qPaZgcz6AL/KtFcxctjxO/p0FqK69rV3ctLm/L3zU2Pw1Di292q/rWouHn
dBl/rhkQe2xp3LmtFp2OuAdVqcwAh77371+r1dicX8AmXD0DPie7+FL+VKLv
OmOegsYZmJNe1SyprcSTlLGGsx0zwPX+uW9PbCX6BA6cXOqbAa2A5kPiTyux
aB97X8/iDEiFVQk6DVagpN81vV18DHgV+XbOsL8chfxtQn9YMIBD4N6mp4Ol
WMEVR038zIBzcg5JHpWl5Pp4SoztGRDprCdYE12Ko/puY+3uDDj5VrVC9Vkp
rq5sCNkdwYB3rkMnNk6WoMSuO6rfKhkgobfvu8Qi4qDmy/zCWgYUrz5sYC1C
fLFE7W5vZEDzSbgxa4V4/N7LbwOdDOg+fnpk8yZEdw8KOv1iQBIf747be4vR
M2Nn3VoWAspjXZ5KXC7Ee0yJUo7rCXDZsn7Ien0hum2r1lu7mYB4W72A/voC
pHEenf3BRsBmdj3HnyoFyKT8w4XnAAEPghpyFw3zsdYwVnvLBQKIPz9LTEJz
kTe/OND6MQHstTLPX3Jmodabtb8bdAj4nhv73+2fmdhb52C4/SkB4v9ad0sl
Z+L062xFK30CVA8crNW8momG5bte7XhDgDB1v+gn0ww0n95nsmpNQOulCnnl
njRUq09z6rMlQIMV6nXi01Dn0+XHBfYEsAhz77A3TUMDg79mGl8ISHuNHSw7
0nCqMYbnvicB/T+CpHqupWL6wJsD50IIUBY3yWQzSsJDJsx/s0IJCI2WyLPa
nIRsz07uPh1OAKvvZ4ldMYkYTSvZyxlFwNzhGMuEvgQ8KzJ/ODCeAK320xu+
KMdjYnZf+GQCASuuQ0f3M+Jwo8H8V4kkAnq0fl1od49DhTVeUzUpBOw5r7UQ
3xCLsjI3TwdnEhDwUuDv+qsx+EuoaG1VFgG0dO7e7MFoPKuzajmcTUAHGgg4
WUdj7UMz+/15BBTbGBUFlEah8mENp+tFBKyP4+zTgkhsOlFz42oxGf8PKScF
eiNwe+XosCQS8Hb7B/XdlhH46Lhz1aFSAi5ShbaqYjiWXj5dHFNBgErywMi7
y2HYGr8r17WSAMfLDc8Vu0JR4NbB78ZVBFyrzrim9DoUtU7T8FANAZceubwP
kw9BZu93KFFPQL7Hv4dKewIR9S065khvpTrfcrj5DRWlSm7ENxAwYCbju+Vz
AKbO+39maiL3P4X38+qoH1ZRuMuetxBg9Npn3rf8K7rdY6TMk969Mvnz8pI3
DvktnrdsJSDOpKdW5LQ3Bo8V8n9sI0C2VLlnR6gnytx4FjlLeirhQwaD6oGR
F/han7YT8NDlBY2bzQM/dco8FO8gYCTRorKO2Q2ttp+rDSbdluA+SLxxwR07
H69ZIe38alk29/cX9P+8tEWpkwB14lYox30ndPzv8GQ0aRdnGc9NzQ4o1Dad
SpD2TCqu85G2R/4fpvckKATkfKklCnJtcTct/jmS7pjwqWuI/IxtL2FggfRX
jeuNOfs+Ie8vNdWTVAJkTrf/eMVjiWd5OpofkNadK80L5/yA2rMWCvakg/xs
rP9tMEMv4r+eRNKEZ7C37dJb3F5o8LGRNPeTqSsXJl6h0uQBkRHSVZdf9h+r
MsbEO907mGgE/PjD1yOU/gy/dQH7DtJn764/+yVUG3fX9YkcJN360UHI8PB9
DCq87slLWviQD0s52y3ciAsHBUibdB+Qt/PlxbuP9Yb5SJtt/293s5gUcDWv
mz5C+qurKis/vzKM0c7BHtKvYtSixvwegR+7Em0T6b2bNIbNA54A+/f00lly
ffvoZrsq/A1A2/IbUw/pQ0VNF7XlX4KCyK0AJH2c/vpQ2fU3QLvN7B1E+iyv
ovaqjCkkHR+aMSH9VToqfN+l93DlzsFCedJuPyUsd4tawEpAHbGPtJ1TSYPZ
Hivo5V0J+03G+09nxnXVr5/gswXWJJOOqJC0jmGzBguf3UYvScvYT9U//WID
3Yx/PkKk30pyv/JfZwf3k59eHyH3VyFtukLc0h787cXsg0lTNsjvVFxwgMml
+6oKpFWtfyTQXzjBoYjeiggyf2J+ac6SNQFDT0xSbpJ2s3kzJl7sCo0/TJsY
ZD7m1Eld6GV1B9EnnHnCpKkHmR3innvAMCg6N5P52yMeqJLB5QlO785HPCHd
ss1cz6rKE/wriHhHMv/PnvzepsPtDRsyJCN2kX624PHsQ5M3XGpgmwgi6yVR
hYH3zL+SeTDhGNFMwNo4AV71Dh9YEM0D60YCao0yRD2s/YEp1vf0DFmPOpNh
/HWCAbCXLcXzIWmp691N1fQAkHMyS+Uj6/fNjrZEdqFA+Nswku9L1vs3vzvr
ByjBkDQa+bexjMw/i6ds9azhUHvL5v060tLy2Ue9tcJhQH5zoAjZX3KFr1pe
ygoHb+5cui/Zfyyzgi9JP4iAo/nKvicKyfx++9N6JjYS2gxu1+WR/Y+boa6z
ViIGfoTqrS3KIOt98JvVRrcYYGD9zqJ0AriM88qn+mLggeaa4oxUArLc988a
2sSCgMwxd/NEctRW2Gr1X10cBGxOCTKNIM8Dq6Ex5duJoBfrZKpA9u9vJeah
20ISYUW698XRMAKYRS88TBpPhIHGX/WVwWS8sOtwkFMS1H65qjfkT+a7RfDp
a+XJUF7JpxLmRubHDZ/h376p8FtwXO6GKwGGCdH3TYtT4e5tfVvCmdzvY1pn
lgZTQUMiu0PciYCo7b+4u06ngdXj5H1JNgR0WX+MY6lPg50KBqLbyKvB27Uz
N5iX0+HdlX0+rqYEmIduiqw7lAE8QyHqW00IsOcqybW7mgEquU48TK8JsAqm
nOryyABhrwmWWgMC/s0LMiZ4M4EeLxbYr0lAHaedQcedLKgoGWSIyRCwS+Kq
Z0ZgDlhlqFKuSJH5d6JldUdFDpxUvT574xIB2XdDSnVGc+BVdPK0ojgZ76+t
6r0iuUBXfXNEUpiAY/aWbqcpucDZ03DP6wgBFqX/3VTYmg+SWe2t15gI2OIn
d9LfqBA4o/e8/PuXAXI6fom3vAuhx+q3W+oyA5p8LEXn8wpBP7Hq7vZ5Bvga
tPtyrysCJ5s8vpRxBqhLaE52BxSB7ru4FLMuBojdb8gaLS+GnnUz6VfTGTDE
W9Fw064EApvExb6nMADXcEny+ZbABaP71cZJDBjbOXx3NaYEZmZ1p9xjGSCg
lvnmW20JeDr4xhcEM+D2S+8Sr62lQNev6s9wYkBUNIXXzqMUkhWYjlzUYoCe
2YO1lr5l8K9WpaN1Izl/KRC23N4VsHdwYWvmOgYsRhQFM0dVQGT45evezAy4
6GMz1pNVARXy0/W3VmZATylc0JpaAfbs4QKJk+T8+Kjqk8PeSpgOs3+yiTID
FepbmK1CKqH7aZKKStgMaL4QmhaMqgLLy4kf3p+ZgXjmxNt/QmogTafdYl5w
BtL2yf/an1IDvv7KXa8EZkD0TIXcjeIa0JYQjtM5Ss6furEu/t9rILk5NleY
cwbUEkK45rhqYeXoLiP7xWlyXnN5luteCx1NTLZ/i6fBIVHu+/MPdWCov+3V
gyvTcN/0k0+tTAOceqv85/XdKWBNZD+6TacZ0rpeDt56NQF1OrvrAiVbQSjl
7M9zUmMg8vbs5H23Nqg5Fiz7qnwEbLcqTrbS2iFdYmf32Nnf8GXcv49vsQPu
D2H7qfxBOCe8LCv1uxOKFsP0ZFMGQW08yX/TaCe0f5wNeRQ5CE73PhQ3TXRC
LVVh0Ym8n+ndLrZXnOuEiGgto+bHg5AQuG3fpXUU4CeI/VxbBuHfophKxmEK
uBYXPk9WH4CxO1ERS/cp0DyWzLx/rh+ynks9ZauhgN/1E3ciRvtBed1kEGc9
BRJdJgOP9/fDwZFgYm8TBSRWRgRPNfSDy69zzAc6KEAr4FI4G94PQm/fh7D2
UWB/7LOdm2/1w5M3s6Oe8xT4z3Ia/kX2QUrmQc7zx6hwOP7WDvnQH3Cfrb6m
7z0V1o8OyNz48gPO2neYPbaggsE+Rqe8yQ+g5bZq/rSkwqKRItfVGz8gSb6i
7rsNFbZ+6QDehR74k6q4v9CVCptt7XiDFHqA0n624Gg4FQ68WyrR/NsNeo61
G4OrqXDHmnm30HA3zKvY6Q7VUiF17cj0Sls3fDqxeeFEAxWGeXaLecd2w63Y
j8WZLVQQzVMXT7vbDWsoxa3JdCrklV5dFx3XBW/MAjlvjlJhz30BZmslOrRR
xuEMKw3apXN2KkvQoeqB/zqj7TQYThv2OsZDhyGt6tQYdhoctLoyVDpPA2PT
8hwOThos3j/893cADT5e/OXQeYAG4rIjMqN9VDBfnhWfEaLBJLNAOU2fAgKx
ijv9btNgQHzCy1yJAilXdL3dFWlwu8CIZb8EBT49iV+2U6LB0M+IivvbKFDj
3vvBUJUGpbdKFmtSO4GPzVyO+xEN3sx+stCe7YDiXhvOo8bk89bRDyIs2kFd
1sbd5wsNuqTpV1KetkNTs0O+oAsNKIb9R/PvtEPK2US2SlcaFKVcrW041g7b
afcvj3nQwNH7TOOvxjbIP5aRedSPBsy5Tc2/97dBi137L4lIGgh6yggJF7WA
Qb2MLXsBDcK/H+HjjmkBuTUJF40LaVC7UwdYPVrgp5c9V30RDSR0Oit/6rRA
rkbSQ4sSGjwt3PfAemsLaOqP/62vpEGdBI/JhZwm6HOX9GNvoUEei/ct7Zl6
uBrDLy05QAPPn2nX7pTVQ8lrgR9mgzQIFXtmI+FZD0V/ZZUyftFAbKKtg+1M
PXz3Gmk9OEwDi4w2noiXdXDVe2ZH7xgNshKERcymaiB4M1fy3CwZH34B+o2S
GmihrC5vJ/ftJM/z8QPuNWC88fgx3gUaXNnx52OxUA3oOl3epLBEgw1aG7+N
GlWD5MtmLtt/NGj0OfGIabwSfr5eVHFaT4cjkeJphYWVUMNWr/ZpAx2+PzkZ
Y+pcCSJ2SxdMNpJ5I9fhMiJQCWpJZnZqm+lAZ+P/VvS8AnaX8Ris30aHuKAb
D/mGy4Df/dv9RQ46GNo+1mvNKYOc+U27mnbRYaKg5/o7+zIIGJmIC+WkgyX1
sE8ZTxkULnM/AS46nHMoyJbVJfs0RfG49j463CEOG8pWIGxRXtMpzU0HISsV
JzFdhKXfBpsYpPuYxCoF1iNoMURPhh6mA1PQavz668Wgl8csTRyhg95kEyW6
vhB+H9SIsSbz/KXDz09OBoVQk7ikcpiXDuFsJu8MWAth/MeauWLSmMCsKaBQ
ADdZlJhnjtMh6M5s2te2PLghxq0EAnSQuXVDzeB1HkgtnLBsJH3u3ZjZZY48
iA+J91c7QQdW3VGJ38q54L9lNVD/JB1+pXC85KZnQ8KZIz0mQnSY6dG0Ve7N
gAaRtTL8Z+mwbrXImNMqA9jCnJ/4ko7lGhGkkHPAYL/nO2ZhOtkvbaQUH6dD
6Nt9+m2kv8T80pD4lQot1JNOaufpEMmNbrO2qfB5Z/bxbNIhD7jLE3lSgaW3
JJvtAh0eD+a5n2pJhv0yj8KQ9MVFY3pNZwKs0exIXStChx/PiyP4dyfA/huW
9bdJ79F2a3JSjQff1NTOANK1Ocavr3bHgqNvbO5xUTK+8uprw/+LhZhxYw8D
0pvaLI6sPIyB+Meolkwa7h4TTeyLAlXBhVwBMTo0jFlfZz4cBbrwU+Epadec
lh33tCMhfFCZEkp649ORjX9/hYOuRHcaqzgZDx03+Vu84VDhOb7+Munz1VTT
YL0wkEMn+Veki6LXm5hSQuBj8ZOIJtJU7pKq/FfB4BKh3D9HmvX97U8r24Ig
zMT+7n6yzwV/OPjR/FoAtMRnduiQfvD91a/cAT9Iepo6YEu64FMV06ylL2TU
TfJEkbZ65Bv0LNcbhLhF5X6QjqUclwlX8oIDGlf4F0jLsg0M06c8gNHuLckm
SYfnrLeD2VzcwTbsuD0P6awvjHFnRVeQH2BaK0b6nkzH5nmnLzCfsT/rJulB
dpVczXIH2ClgGaBBui7aeV/1si1YaBzLNCStGvtF7aSwNcRpsTGbk27LfOLr
aWAFOlcu2diRFsh8TIzLmoM7V5aoO+mc0/9uZuW/hfLfRsf8SPf0V9maC7yA
lUJDmWDSU4+r6z9d1IVDoWm+4f9fz8aJfk5hJYjxET0YRbq4SW1TztVDSERs
7P6/LaK4HSuuqOKPmn31kaR5uhJNVC8/xXGWN5NhpJk23MobEnqJVXfYrweR
1pLdqHgITXBfIqPDh3SerEaB6q0P2LeZnGtJ89l6d1ZPWOFTbfsvNqQ9S0P1
H2db42rsxax3pP/KlCwtW9jhmQbBnfqk/5j2PvS+4ogNBc+i7pNOSvhjLMDq
jJXaI/pypBv5m7aUdrgib3LSkwv/jwenmB1/kzt6fM7+epi0/vOn0YzTnniv
imVxC2mVvT/bC756of6Dr+4Mcv94DnOvfF70xmvH9B/QSQfNlc+wlvrizuqf
7iGkV6x2BrYe9cd4ZZtFy//7+79ZL4cAzPv8zEeDNNew5UuO20G4a/M/A07S
IT1MRm0ZwZi1ISl6ksy/Dbvf61VvCcV/I8Ec1aS3UlkufTIOQ5qjnMsL0gvX
HNsfcIdjAZXFT4q0bsCZtxfaw9FcYJWyg3Tg4e6ikfOR6DaaP51E1kfh/PCj
y/+iUdICAprI+nKbntHiSI1Bprw11zxJl7ATPENasZhYz3JcifR7wwqqbWUc
Pj5dZddG1i/fr7mWTOdEHA0Qzcm7SOZvoI651c0kXNLbGq5H+gsuq8ltS0a7
OoEXu0h/y1a2obml4OjVO9l6ZL+weQRhRrJp+N/D439mz5HxNrIMa4hLw+Nc
qpNepOWuf3bm25yO01taqUKkK3R4tvTVpaPWqUBFLbJf6TMk18GNTJROsJ2M
P0P2G8uxLK/ETEywHt92kXTVlQ2Hf2/NwhhNf/by03RQNqNxODVm4cUr+SVt
p+hw3OI04q0cPLOwpYomSIfQRlwYvJ2PIi3iBpb8dHCgTfsfTstH3gh7/MNH
hwBtmq8GewFaP900d5e0xTS7Z2trAV5mSt56iOznxSHqXeGKRRgp9agv+Bgd
ykQcKuf4StCaw/rQhUN0CJu5wbVBvQR5eCuirQ7SYe7O2uecTiUo+kiAreYA
HdYrGv87/acE0xyfOt/eTwcOjdN+D+JLsSb3Df/1vXQ4wMs6/4G/HMW2Vy63
7iT7A8+2ELl75fi6RJ13I+m/X/sldtuUY2O5p7n4DnL/Fe6pJPWUozrbr6AQ
NvL84epLbnCvQIez07UKrGS83eX6O+cq8bqQe/E98nzm7cvWXFNWg/2XTdnW
k+d9/ujTs3ETNSiwt/Xmmjlynsl1TlXYV4t9R8IylggaRMZ9CvJ7U4s5d4IW
fs/QQLj6yr89vHXI9If6NHGCnJ/CtAtpX+px3J9K/07OH0WCzqfOKTVhZci5
1e42GpzvdL/daNmEFEE1v/BWcj406fyundCE7Nb7DZ6S803E1dlTzszN+OGx
VfloIw2mdz6zr01tRt0nb0/31tCg1ZDy9r1dC/LpXt74spgGH9pqLq32t6LU
xwCPS7E04L/2tztlvhV5f/m8b4qmwXiYr4MmaxuGp/4JUo8i588ibfbCi22o
tcHVyzCcBm4lB0qfubWhm5eZ6MdAGhz+cNDXR7wds+c+vZFzp8F/Gq6bBX06
8MVNfltXExpksAfd807qQI0PnDfwDQ3MHI4+WqzoQOdo/ZXxVzSIMssIQkYH
6rBc2nOFnDfrBnXCxO904vM4LumupzQwbHpuOb+Fgv8ME+6GkvNq6t3twk+s
qJin53zt20VynntmfKhDpwutf3Mqyc+Q8/klxW+K77vwIIY8ODBFBUZHWWyz
Wxfaqgd5To5TocDouUllfheKtPbZOY9QofV7QH4IWzc+fTTmlkrO1WNyhh2s
hd24gbLzYFgTFaRFj+RWs/egtI/rhqNxVPBb0yJqmNuLB8a4XFNUqRCq3BZ0
o7kXJRZdN3UqU2FLquEc31AvismVaCwoUsH30KbLk5v6UNWV3+fiTfK+cFRS
3/dCH/K5z1wIuUyFL2uk7bM8+9B4Y6HEOn4q3DN1kD5yvR/XWKetEV6kQEmy
aLRvyk/s/toYuceDAh9q1b4x5//E8dy6igkXCrBsT7M0qPiJvHzHmcucyOe9
1HdK0H9ijEZLx2MbCvhrd95tZR7ADQt6NBdTCqQuzoZXKg/g5lM7bjo+JO9b
g4MltKUBdL824rTrOAUu8qyjfb78C11MP220yukErQLilVbGb/wkP+QZVdEB
jREvHWMv/8F/Sn3/NX5rh343j8dbnMZQOvhEbf+TNsCUJE/KzwnU3ktJCiRa
ID3YaF2+7RTur89WvVDTBEF+T5m/OU5hLY+Q7kpBE1zedL/7vcsUWgm43yxK
aYKdGcsHLnydwpSpeylnfJtAYd6vJyxyCv3fD0WM6jbBkTt5+VA+hQluxVlf
mZugifAi/FanMDlczKzyYiPkDPruCn0zjUU2xRl6fvWQtT3wq9W7aVS2Lx1f
dayHuQBmD80P03j6C2Obp3k9iIh8m+OymUbTXnXmGI16eHpCUdfMaxobfXhd
vI7Wg02uGPtU2jS+76g9aZJSBywrpyyTx6exw0qPX620Fig/ThFij2awbr1R
9s3OakhTkLpmpj2DcSUdyqFV1bAYZrwz68kMTpQ1ik7kVMNeq7Sdxw1nkMqw
azEPqIZdW1K+LZvNoDdVYqOGZjU8PNO5TtVrBv/rd3ORGK4C/lMHF3srZlB3
vrtRc64SRrUScv5Uz+CF9YlhXL8rIeSqWhujbgYXmybdG6iVIKEBXGtaZ5Dr
rWDhsbxK2FrFUr+hZwYPrc3ZH2ReCVPnMicriBnsSjasDV6tgHCBH3vnDzMw
WlNdeYClAriF584WHWOg5tqg1htEOSzIsQd8Os5A2dZB/bTBcmhad1p2nSAD
hb++JvQry6H/zd9dCxcZ+HVLBX+0XTk0NuhbON1i4LM9qS0nN5bDIvfJX+rv
GGgpEtnycUMZ9Dy95TT8noFvujVXr8+XwnqRm2pvLBjYquLAte13Kax0nnxh
95mB43ziLI5VpVD7VfSRtzMDr4t4OV62LYXexqNiKqEMTMy80VywphQebp88
9KyKgboubzk8xhHef3zYM1rDQCtTmYfLNQhm/1ovGdQzUEA46IhaJMK+8R+z
ui0M/LB2lmNSHeGinONv8S4Ghr668de6uhjyfcrUTMcZGOLPrn8zuAheKLyw
Zt9BYNT7wBoRqQLQKE3xv8JBoMt54eRN/xVAQPrGfaacBIorTD9pmM2HRZY+
lba9BBoLbhbjj8uHXUxmZs+OEHgiLr7h6vZ8OFJf7MUlTP7+nZTZP1ouJDn4
Nz6/S+Cfk6eaJB5nQyVxVva4MoHb8t2KNkhkw/FnrdcGVAjctPPil8rd5D2m
52LVHXXy88zlEv9rzAKx7IPubFoEUhJSXly8kAX6BjmeO40IvHc6Rp57Uyb0
S/PdjDUm0OzPuUCegQyYSyeeib4k8P7CwzcHizKgJWhrmcobAoPV9kaNvsgA
ZcP6FOP3BDpSPj0fp6aDGxen9yE7Anc9LrT1iEiDzz4hhk72BAaUN0Q1fEgD
1+YF22kHAlMNvk4vKaeBt3b9s5wvBPpJBBGnNqbBljD2Qm4PAvevM1vDbJAK
BsuSL42+EVhirEHTfZwMgmti9yQEEqjgojYqtjMZJs5zdw0GEfjdRtZrvjwJ
2Dfs81cIJdA/+I/xwWNJsCnsUvWaKALtdJeWhIYSwGVPlR8licAf7tL8stpx
8GKCJZg5hYyfzNrVTZvi4OOG7c38qQQuSwoMxSbHwoWWHVHG6QQ+5NgabrUY
Aw09nBl12QQO/h6t+eoSDS1nT8VRcwh03S7Af+VMNIje/ZDQl0ugpXzDxjZK
FLjma1cM5ROYtEdvxvpgFLQemG0vKybQdsD/0dWUCJCtVs1NQXI9lQs+vYoR
sOdHgv3//x/0h5N6mvJcOBx2Xup8WEauf90JGZp4ODR2BedkV5Juf1AoXBMK
r1d3vv9cRSDLmojx9Oeh4H7/xVq5agITtM/osrKGQllpo0ZDDRlfga3JSeHB
oCA5HxdUT6CipTL369RvkGuYLXCtgcy32XxLIUYAXMt5eXuMtGq9D0/EuQAo
qG0x5msisPkdZ1xKnh88Uux6VEraS3n3mevLvpCimNCv1Eygetl1DV9xX2iV
5rA0aiFQW/bTomrxVxh93exBkHaJ7+So/+cN6975HTJpJXCP+awAQ9IbFC3F
g/XbCCw3xEidYk9Q3Tb3uZc0bW98WtJfDzjz+H3zrXYCQy/2syWKe0CEMnw5
2EEgG8PtvPtrN9j2efeUFemoxQf9dZMu8E1vJKaH9MDtELqRvjNYb3qedK6T
zLeekRrzISfw5Lmy7EBaxNpVdfqRI1QK7nemkpYRCT7d3GUPyQJf1LkpBN4N
HFnhULIDlvSHAdGk5+KFt1JlrGE4oILpJ+kQh6+hioWfoHxblSsXlVwP72y1
8FkrYP5TJylHujmh4e6SogU8OX5miylps6D33SqS78Gz+fZEMGm/lYNvPx43
Bafulz9LSX/NMjR6wf4GbHkp/b2kzaP9OU4svgAjtcyhhf+/39ESPS3Uh/8B
HeETEw==
          "]]}}, {{}, {}, 
        {RGBColor[0.5, 0, 0.5], AbsoluteThickness[1.6], Opacity[1.], 
         Dashing[{Small, Small}], FaceForm[Opacity[0.3]], 
         LineBox[CompressedData["
1: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
yTAKBrFHzJWUjGKOcYnkODsFP7ULVm03+oJJ3jss01goOBP130qmxRcc2Mub
YLGagh6fAhbl7b+gTIyOaNdiOXKfEOZXDvyCtYMP3DO/laP2iJTUJvoXnJtZ
d2uqvhwDrEqDZ3aMY8jGZ8z1XuUY5hCUGvx5HIVe/aulfSfP3/lcm83Pf0PP
l7/nq96U4vWMJuszPyYxVeCXfZ9DCeado1So3Z/C7CgLl0LBYrw4GLrXOGMa
MyiJPHUKhei63F+jYDWLN6ZFm/sF8nDdUOqu44ZzeH1R79z57dmYeTFeamQr
A+sj01JEN2WjmU/s5xV+Br5rSjk+tZKFB37YNQoKMvCxfFb6ffL57LVxk7qh
KAPDOa+U+BdlYYuRdXGaLAMPnpBdc+xIFtI/nHg/f4SByXtnQ5McMzGpLlRe
y5WBT2rWXX9XnY7jZesY3i0MzDxcEydQlo5rR5yVVtoY+OzhnkjbzHSU8I6Y
8uhk4PmcrQNrQtPxjP9yuVMvA+f5Rz9LXkzHocpAyqkxBibwaVuqzqehqKez
66sFBr6MTf/hLZmG3P4gayfIRBFDx22lT1LwxS+HQ3usmDif5W/+xysFCxcL
uFSsmaiyrjZH904K1vqO3zxqw8T4olz9dpMUPCxkWGZ1g4k5GSm9I3tSsJe1
0fuxExPFQ6/mt2MyNrdrc4b7MzH65eKFVcwkTOxllfdLYWL2e+fb+74mobfe
nuKraUz0y7yYYtSbhL04QT2cwcQKTX1jcjeQU8PFeG0OE4u9f23XDE5CrsV9
PTeLmXg7h6Ad3ZOE/Cn7GYvIxMtrxVNs8xPQzlwgab6fifU3c9mMwxNw4Dqj
4sMgExn6go+0XBJwbY7UjrQhJtYJcg3xqCfgY/YPqSfHmLj+lTVPYnM8rsha
f374nYl/bIPkzH+8xJBtYn8zFpnYc3F5zROJOPSU2rr6JS+BGsmccsARhxuW
/4SrbSXQW1yvcG76BR4y+nStn49Aj76HpYaUFxifZjPAu51A/ri8v391X2DP
nM8vh50Evo86IMtuGYu+rkOzndIEViyvpC+8iEFV9mj2M7oEqshPiV3xiUFu
14ucqYcJDIrwtGi0jsHMlA9hjCMEXsyyE4iSj8G9ZrWcIccJPBtwPl/kbTQO
iSnMFJ4i8Fz8p7yl2Sjcv8NQN9+EHD9spNV+OBK/dTw0CLhBoKm12HG+fZHY
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
PwIgwlw=
          "]]}}},
      ImageSize->{400, 400},
      PlotLabel->FormBox[
        StyleBox[
        "\"a=2.00, \[Theta]=0.00\[Degree]\\nr=0.434, R=1.901, r/R=0.228\"", 
         16, StripOnInput -> False], TraditionalForm],
      PlotRange->{{-2.5, 2.5}, {-2, 2}}], 
     GraphicsBox[{{
        {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {2., 1.}]}, 
        {PointSize[Large], FaceForm[None], 
         {GrayLevel[0.5], Dashing[{Small, Small}], 
          LineBox[{{-2., 0}, {2., 0}}], LineBox[{{0, -1}, {0, 1}}]}, 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{1.2246467991473532`*^-16, 1.}, {
           1.9826368753323234`, -0.13148290817866992`}, \
{-1.9826368753323225`, -0.1314829081786741}}]}, {
          {RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 0], 
           PointBox[{7.287966646376405*^-16, 0.3944487245360096}], InsetBox[
            StyleBox[
             SubscriptBox["\<\"X\"\>", "1"],
             StripOnInput->False,
             
             FontSize->
              20], {7.287966646376405*^-16, 0.3944487245360096}, \
{1.25, -1.25}]}, 
          {RGBColor[0.5, 0, 0.5], 
           PointBox[{2.1178690706107977`*^-15, -1.3027756377319917`}], 
           InsetBox[
            StyleBox[
             SubscriptBox["\<\"X\"\>", "3"],
             StripOnInput->False,
             
             FontSize->
              20], {2.1178690706107977`*^-15, -1.3027756377319917`}, \
{1.25, -1.25}]}}, {
          {RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
           CircleBox[{7.287966646376405*^-16, 0.3944487245360096}, 
            0.5259316327146818]}, 
          {RGBColor[0.5, 0, 0.5], Thickness[Large], 
           CircleBox[{2.1178690706107977`*^-15, -1.3027756377319917`}, 
            2.3027756377319917`]}}}}, {{}, {}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
         Opacity[1.], Dashing[{Small, Small}], FaceForm[Opacity[0.3]], 
         LineBox[CompressedData["
1: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
HeETEw==
          "]]}}, {{}, {}, 
        {RGBColor[0.5, 0, 0.5], AbsoluteThickness[1.6], Opacity[1.], 
         Dashing[{Small, Small}], FaceForm[Opacity[0.3]], 
         LineBox[CompressedData["
1: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
yTAKBrFHzJWUjGKOcYnkODsFP7ULVm03+oJJ3jss01goOBP130qmxRcc2Mub
YLGagh6fAhbl7b+gTIyOaNdiOXKfEOZXDvyCtYMP3DO/laP2iJTUJvoXnJtZ
d2uqvhwDrEqDZ3aMY8jGZ8z1XuUY5hCUGvx5HIVe/aulfSfP3/lcm83Pf0PP
l7/nq96U4vWMJuszPyYxVeCXfZ9DCeado1So3Z/C7CgLl0LBYrw4GLrXOGMa
MyiJPHUKhei63F+jYDWLN6ZFm/sF8nDdUOqu44ZzeH1R79z57dmYeTFeamQr
A+sj01JEN2WjmU/s5xV+Br5rSjk+tZKFB37YNQoKMvCxfFb6ffL57LVxk7qh
KAPDOa+U+BdlYYuRdXGaLAMPnpBdc+xIFtI/nHg/f4SByXtnQ5McMzGpLlRe
y5WBT2rWXX9XnY7jZesY3i0MzDxcEydQlo5rR5yVVtoY+OzhnkjbzHSU8I6Y
8uhk4PmcrQNrQtPxjP9yuVMvA+f5Rz9LXkzHocpAyqkxBibwaVuqzqehqKez
66sFBr6MTf/hLZmG3P4gayfIRBFDx22lT1LwxS+HQ3usmDif5W/+xysFCxcL
uFSsmaiyrjZH904K1vqO3zxqw8T4olz9dpMUPCxkWGZ1g4k5GSm9I3tSsJe1
0fuxExPFQ6/mt2MyNrdrc4b7MzH65eKFVcwkTOxllfdLYWL2e+fb+74mobfe
nuKraUz0y7yYYtSbhL04QT2cwcQKTX1jcjeQU8PFeG0OE4u9f23XDE5CrsV9
PTeLmXg7h6Ad3ZOE/Cn7GYvIxMtrxVNs8xPQzlwgab6fifU3c9mMwxNw4Dqj
4sMgExn6go+0XBJwbY7UjrQhJtYJcg3xqCfgY/YPqSfHmLj+lTVPYnM8rsha
f374nYl/bIPkzH+8xJBtYn8zFpnYc3F5zROJOPSU2rr6JS+BGsmccsARhxuW
/4SrbSXQW1yvcG76BR4y+nStn49Aj76HpYaUFxifZjPAu51A/ri8v391X2DP
nM8vh50Evo86IMtuGYu+rkOzndIEViyvpC+8iEFV9mj2M7oEqshPiV3xiUFu
14ucqYcJDIrwtGi0jsHMlA9hjCMEXsyyE4iSj8G9ZrWcIccJPBtwPl/kbTQO
iSnMFJ4i8Fz8p7yl2Sjcv8NQN9+EHD9spNV+OBK/dTw0CLhBoKm12HG+fZHY
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
PwIgwlw=
          "]]}}},
      ImageSize->{400, 400},
      PlotLabel->FormBox[
        StyleBox[
        "\"a=2.00, \[Theta]=90.00\[Degree]\\nr=0.526, R=2.303, r/R=0.228\"", 
         16, StripOnInput -> False], TraditionalForm],
      PlotRange->{{-2.5, 2.5}, {-2, 2}}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{0}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.788349727333516*^9, 3.788349754631935*^9}, {
   3.7883498032086115`*^9, 3.7883498206153126`*^9}, 3.7883498735055256`*^9, 
   3.789722203504612*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{"\"\<0081_radii_min_max_orbits\>\"", ",", "minMaxOrbits"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7883498886672935`*^9, 3.7883499030406327`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getSumProdCosines"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSumProdCosines", "[", 
    RowBox[{"a_", ",", "tDeg_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "o", ",", "n", ",", "s", ",", "exc", ",", "prod", ",", "cosSum", ",", 
       "excCosProd"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"o", ",", "n", ",", "s"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", 
         RowBox[{"toRad", "@", "tDeg"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cosSum", "=", 
       RowBox[{"Total", "@", 
        RowBox[{"getTriCosines", "@", "o"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"exc", "=", 
       RowBox[{"excentralTriangle", "[", 
        RowBox[{"o", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"excCosProd", "=", 
       RowBox[{"Apply", "[", 
        RowBox[{"Times", ",", 
         RowBox[{"getTriCosines", "@", "exc"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"cosSum", ",", "excCosProd"}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7752290999282503`*^9, 3.7752291764169087`*^9}, {
  3.7752292234171944`*^9, 3.7752293075447364`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sum of Cosines Divided by Product of Cosines vs a/b", "Subsubsection",
 CellChangeTimes->{{3.775233433239487*^9, 3.7752334364838095`*^9}, {
  3.7752922588199935`*^9, 3.775292267403884*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "sp", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sp", "=", 
         RowBox[{"getSumProdCosines", "[", 
          RowBox[{"a", ",", "0"}], "]"}]}], ";", 
        RowBox[{"{", 
         RowBox[{"a", ",", 
          RowBox[{
           RowBox[{"sp", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "/", 
           RowBox[{"sp", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "1.001", ",", "2", ",", ".05"}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Sum of Cosines by Product of Exc. Cosines vs (a/b)\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Medium"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "15"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"12", ",", "20"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<a/b\>\"", ",", 
        "\"\<\[Sum]cos(\[Theta])/\[Product]cos(\[Theta]')\>\""}], "}"}]}]}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.775229730479662*^9, 3.7752299002885504`*^9}, {
  3.7752299321393576`*^9, 3.7752300590109515`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQnbWnZLIEywd7zbiEaCYGDQfzTseEpxc+2J+caHj0
nJiGA0sYn+6muR/tLXf4+qSEajhcULr9sy7rk/3Gxe8Pztym4TD3/fJj3uaf
7b8k/H2mZ6bpADHviz3nOXf/pRc0oeZ9sf+sa6Cq0KwFNe+rvWGSaJ+HtzbU
vG/2GXvuPjFV14Ga990+JqKnJlJUF2reD/tnjFmrc0X0oOb9sHd+y3kuXVkf
at5Pe6WjTwu2KRhAzftlnxC4XePJNgOHeWDzftsvmpPg+SnYEGreH/uPMgHz
F303hJr3x/7X6U6dgwuNoOb9td/7+q+rUpCxwx0Wx1fnE/7ZM4CBiQMA2kaK
tQ==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.005, 12.04},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\[Sum]cos(\[Theta])/\[Product]cos(\[Theta]')\"", TraditionalForm], 
     None}, {
     FormBox["\"a/b\"", TraditionalForm], None}},
  FrameStyle->15,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
    StyleBox["\"Sum of Cosines by Product of Exc. Cosines vs (a/b)\"", {
      GrayLevel[0], Medium}, StripOnInput -> False], TraditionalForm],
  PlotRange->{{1, 2}, {12, 20}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7752298627270284`*^9, 3.7752299005897455`*^9}, {
   3.7752299341878777`*^9, 3.775230060265597*^9}, 3.775897870679919*^9, 
   3.786261000911542*^9, 3.786267558482716*^9, 3.789722204737753*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "getRadiusRatio"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getRadiusRatio", "[", 
    RowBox[{"a_", ",", "tDeg_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"o", ",", "n", ",", "s"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"o", ",", "n", ",", "s"}], "}"}], "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", 
         RowBox[{"toRad", "@", "tDeg"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"getInradius", "@", "s"}], "/", 
        RowBox[{"getCircumradius", "@", "s"}]}], ")"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7751238248701305`*^9, 3.775123851348311*^9}, {
  3.775229310865854*^9, 3.7752293217208195`*^9}, {3.7883499373490105`*^9, 
  3.788349938395994*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"aInfl", "=", " ", "1.372851"}], ",", "ratioInfl"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ratioInfl", "=", 
     RowBox[{"getRadiusRatio", "[", 
      RowBox[{"aInfl", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
    "ratioInfl"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.775123919595586*^9, 3.7751239323390093`*^9}, {
  3.7752293292327275`*^9, 3.7752293348796225`*^9}}],

Cell[BoxData["0.4069092662122753`"], "Output",
 CellChangeTimes->{3.7751239329473925`*^9, 3.7752171216949797`*^9, 
  3.7752293352546196`*^9, 3.7758978706948786`*^9, 3.7862610009426565`*^9, 
  3.78834994007432*^9, 3.7897222047700872`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rRvsabPlot", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "o", ",", "n", ",", "s", ",", "pl", ",", "aInfl", ",", "ratioInfl", ",", 
      "pInfl"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"aInfl", "=", " ", "1.372851"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ratioInfl", "=", 
      RowBox[{"getRadiusRatio", "[", 
       RowBox[{"aInfl", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"pInfl", "=", 
      RowBox[{"{", 
       RowBox[{"aInfl", ",", "ratioInfl"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pl", "=", 
      RowBox[{"Quiet", "@", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"getRadiusRatio", "[", 
          RowBox[{"a", ",", "0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "1", ",", "3"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "@", ".01"}], ",", "Orange"}], "}"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameTicksStyle", "\[Rule]", "Large"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"Large", ",", "Black"}], "}"}]}], "]"}], "&"}], "/@", 
            RowBox[{"{", 
             RowBox[{"\"\<a/b\>\"", ",", "\"\<r/R\>\""}], "}"}]}], ")"}]}], 
         ",", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "@", "Large"}], ",", "Blue", ",", 
            RowBox[{"Point", "@", "pInfl"}], ",", "Dashed", ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"aInfl", ",", "0"}], "}"}], ",", "pInfl"}], "}"}]}], 
            ",", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "ratioInfl"}], "}"}], ",", "pInfl"}], 
              "}"}]}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"\"\<(\>\"", "<>", 
                 RowBox[{"nfn", "[", 
                  RowBox[{
                   RowBox[{"pInfl", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "3"}], "]"}], "<>", 
                 "\"\<,\>\"", "<>", 
                 RowBox[{"nfn", "[", 
                  RowBox[{
                   RowBox[{"pInfl", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "3"}], "]"}], "<>", 
                 "\"\<)\>\""}], ",", "16"}], "]"}], ",", "pInfl", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "1.5"}]}], "}"}]}], "]"}]}], "}"}]}]}], 
        "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"pl", ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.775123517845849*^9, 3.7751238227009325`*^9}, {
  3.775123855123214*^9, 3.7751238998364363`*^9}, {3.775123939220598*^9, 
  3.7751242652470503`*^9}, {3.7751244111576633`*^9, 3.775124563398337*^9}, {
  3.7752293399869623`*^9, 3.7752293543545322`*^9}, {3.7883499492873*^9, 
  3.788349991823202*^9}, {3.788350043606249*^9, 3.7883500926942525`*^9}, {
  3.7883501731817636`*^9, 3.788350179630497*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0.5, 0], Thickness[0.01], Opacity[1.], LineBox[CompressedData["
1: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
bRgpwP8AZnNB+Q==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 0.09},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[Large], 
    RGBColor[0, 0, 1], 
    PointBox[{1.372851, 0.4069092662122753}], 
    Dashing[{Small, Small}], 
    LineBox[{{1.372851, 0}, {1.372851, 0.4069092662122753}}], 
    LineBox[{{0, 0.4069092662122753}, {1.372851, 0.4069092662122753}}], 
    InsetBox[
     FormBox[
      StyleBox["\"(1.373,0.407)\"", 16, StripOnInput -> False], 
      TraditionalForm], {1.372851, 0.4069092662122753}, {-1, -1.5}]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"r/R\"", {Large, 
        GrayLevel[0]}, StripOnInput -> False], TraditionalForm], None}, {
     FormBox[
      StyleBox["\"a/b\"", {Large, 
        GrayLevel[0]}, StripOnInput -> False], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->Large,
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{1, 3}, {0.10750117322429055`, 0.49999957691855645`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7751240461765757`*^9, 3.7751242656489754`*^9}, {
   3.7751244120911665`*^9, 3.775124463065339*^9}, {3.7751245536583843`*^9, 
   3.7751245637673497`*^9}, 3.77521712185954*^9, {3.7752293407579*^9, 
   3.7752293547192717`*^9}, 3.7758978712284517`*^9, 3.786261001077963*^9, 
   3.786267562775236*^9, {3.788349934002784*^9, 3.788349992524432*^9}, {
   3.7883500454193563`*^9, 3.788350093553998*^9}, 3.788350180147277*^9, 
   3.788427062751398*^9, 3.789722204903241*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"export3", "[", 
  RowBox[{"\"\<0082_rR_vs_ab\>\"", ",", "rRvsabPlot"}], "]"}]], "Input",
 CellChangeTimes->{{3.7883501617474775`*^9, 3.7883501901795235`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"radiiGrid2", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"makeRadiiGraphPlot", "[", 
        RowBox[{"2.", ",", 
         RowBox[{"legendPlacement", "->", "Right"}], ",", 
         RowBox[{"ylabel", "->", "\"\<\>\""}]}], "]"}], "}"}], ",", 
      RowBox[{"{", "radiiScatterPlot", "}"}]}], "}"}], ",", 
    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.788388366143652*^9, 3.788388403756996*^9}, {
  3.78838848391065*^9, 3.78838848995747*^9}, {3.7883887959008985`*^9, 
  3.788388806468649*^9}, {3.788388847255539*^9, 3.788388849245206*^9}, {
  3.7884270376911135`*^9, 3.7884270742891235`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             RGBColor[0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0]], 
            LineBox[CompressedData["
1:eJxdlntUVXUWxxksfKzRKCSdqfAoWsqY4INMQvmaL1DRy0PkIXjui3t53Mu5
Tyez5qAlrtboULQ0pGVHJTUSxVc+JpuTojjKUjAfQ2oey3GWxVJ85ORM2jhr
7m/W3vCP6+tmH875/fb+fj+DLRWZ9vCwsDDnr8LC/vvv/366Um4tGllw9fiF
lNB/oOFg56fqixdDuhc6VvtPlcdfCulILJhx59SV174J6f7oWDfucM7eyyE9
EJldPy3ZnGuE9LOYnbR11ZJPhJYwKGV4iuOU0EPw87JedyvbhR6KOydbdm3b
J/TzGP2v5PN5K4UejrKo+ph3coSOw67YWFvjb4QeidzamBOL94j3GYV+6Rec
EROETkDxZ6YxB74U7z8a4T5H270MocdgRcHqwiE/iO8di95Dvv7o9kqhx6Ey
zn1zY5LQibj3XOsD6ZY4r5ewZ8Uv4wftEHo85j3rbhmzWOiXkXqoXb04S+gJ
eP/7PotrhgmdhIt9L644ESH0K/h+8LCa+zfE/SSjo3Da/NWXhJ6Im9GOWOm0
0JPw3e3H2p5pFToF07dnTIg+ITRgXlZr/uhkSKvAppcS87PPifpknK0/2vPs
FVGfjPg349qOdYn6q/Cu7Z98KTz0fuqrWLM9tubIAPG+U7Au/mEwKV7Up+Cn
G4vU+6miPhX+lE1Gs03Up+Lu7h49rUtFfRq2DJyYvm69qE/DmhVXt0w9JOrT
0dza2/rCVVGfjsQ/rTr7257iPmZg1+07L96LC2l1Bs45TIk1c0U9FYdN0c+d
9It6Khq2p5neXivqaWiPMlJrdVFPQ9WAdmfnNVGfieSRW85Z+obmRZ2JiXWJ
hd+OFfMzC5ExMXMy80V9FlzhEY46VdRn4/GUZ/Zv3iTqs4GBLe9ZWkU9HfVX
ssv23RL1dCwNl9tWPy3mdw4ObLqc3ZkU0uocvOBqqNxSJOpz0fXvuS1/rhT1
uVi/cYRnQL2om7Bv7PLaxiMhDRM62s/HeK6J3zeh8Z1rrXE9Qvukm9Dikho2
PyX2KwNpsYu0TwaHNDIwIqrztd8lhLSagcSshvThk0R/Bupazy+pmyX6M7F+
6afbVeEPyETQefj0VzbRn4meX+zu/64i+jPx+5LT3+1+XfRnwTtuWOcry0V/
FlqT34uOrRb9WcC0kUsdtaI/C2Oub/1jxAbRn40PHotqeSD8CNlYe916f+YO
0Z+NIxNXSp17RX82KtfYXZcPiv55aI47PiX2sOifhzd6/23CZy2ifx6krSkD
1pwQ/fNgr99xpvmk6M/B3Spr3SThd8hBn7StzT2+Ev05GJ2/tyPqjOjPwSxp
To1b6LD5iKd1zMevWf983KPP1+dDZn8/F4Po+yEXb7P3z8Vx+n16Llax789D
Mz0f5KGWnV8e1tLz1fOQyM4/H6n0fpCPQ+z+8lFJ71fPx+vs/gvwBJ0PFCDA
5qcADXS+9AJsY/O3ACl0PrEAcWx+F8BM51tfgBNs/guxi+4HCnGd7U8hjtH9
0gvxMdu/IjzxM9lPFCGR7q9ahK/pfutFqGP7vxCN1B+wEGbqH+pCDKX+oi/E
m8x/ZDxJ/UmSMY76F2QEqL/JMtZQ/1NlnKX+qMn4gfqnLqNHBvFXQ8ZR5r9m
tFN/lswwU/+GGZepv8tm7Kf+r5rxC80HzYyIPSQ/dDNaaL4YZiy8SfPHgsM0
nyQLmmh+wYIPab7JFrxB80+1oP/HJB81C+pofuoWZNB8NSxYz/LXin53SD5L
VkQ8TfIbVuQUkXyXrUgaQvJftWJUP8IHmhXfUn7QrUinfGFYsY7xhw0HKJ9I
NoyKIfwCG+op38g2LKP8o9pQS/lIs+Flyk+6DR9QvjJsyGb8ZcdKymeSHV9Q
foMdVZTvZDviKP+pdvQ9RfhQs+Me5UfdDonypWHHVMafxUilfCoVYwnlVxRj
MuVbuRj7KP+qxVhP+VgrBuNnvZjzs1HcjZ8dnJ8lB+dnODg/yw7Oz6qD87Pm
6Pb9Ds7PhqMbPzs5P0tOzs9wcn6WnZyfVSfnZ82Jh156/07Oz4azGz+XoIrO
l1SCB5SfUcL5WS7h/KyW8PnWSlDL5r8E31B+Nkrwd8bPpThH+VkqRSflZ5Ti
MuVnuZTzs1rK+VkrRQPb/1LOz0ZpN34uQ4D6i1TG+Rll2ED9SS7DfcrPahnn
Z62M87Nehnrqj0ZZN34ux1+ov0rlnJ9Rjp3Un+VynKb+rZajhfKzVo5tzP/L
0UHzwSjHcsbPLkyl+SK5AJY/LkTRfJJdcNL8Ul3oRfNNcyGV5p/u4vxsuLCC
5acbe2m+Sm6MoPkLN25Qfpbd0Gh+q27sp/muuXGB5r/uxk7KB4YbXzJ+qMBM
yhdSBWIpf6ACYyifyBWcn9UKzs9aBecfvQJ9KB8ZFfAxflLgp3wVqeAo5S9J
4fycoGAs5TconJ9NCj6k/CcrOEb5UFFQRflRVXCE8mW1gj9Q/tQUPE/5tEmB
g/KrruBHyrdtCh6n/GsonI+7lG787MEIWo/0oBftlzz4J31+gofzOzz8/Uwe
LKfvL3twiH6f8qjOvt8DnZ5PtQcb6flpHtTQ823yIImev+7BdHo/bR4cp/dn
ePj9dnmwjN2/F0/S+Yj08vmRvGik85Xg5fMHL5LpfJq8iKfzK3sxl8634sUp
Ov+ql/NztRc9TpP90bz4nO5Xkxdb6f7pXjyk+9nm5fxseHGG7neXFxvY/vuw
m/pDpI/zs+RDLPWXBB8U6j/wcX8y+ZBB/Uv2AdTfFB/2MH72oU9/4o/VPhyk
/qn5cI76a5MPD6n/6j5coP7c5oOP+rfhw1+pv3f5sJb5vx8/0nyI9GMo5WfJ
j500XxL8iKb8DD9qaT6Z/JyfZT8qab4pfgQZP/txg+ZjtR9PjSf5qflRSvO1
6dHzaP7qfkyk/Nzm5/xs+Dk/d/lxi+V/AGmUnyMDnJ+lAN6ifJEQ4PyMAP5B
+cQU4PwsBzg/K4Fu/PzoeZSPqgOcn7UA5+emAOdnPcD5uS2A45TfjADn564A
5+ewIO5TPowMcn6UghhM+TIhyPkZQc7PpiA+p/wqBxFO+VYJduPn4P/5+T/L
TDnH
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             RGBColor[0.5, 0, 0.5]], 
            LineBox[CompressedData["
1:eJxdl3l0VPUVx0M8cEhq07QCBY7VRyBsEZgEEgSBfANkYR/IOlnf7JlkMvNm
rafV9p0KQkEPoSJQFnlQi1ERAlhQe6oPMNJaCqnIYmV5LJKAaRkpW8RCaZ2f
597kn5xvbu7kvd/v3u/3kyE2/yJnYkJCQn2vhIT/ff/2K5b71XbT1v7ee7nx
HyDnlSS1zymh+6Lk4HMPV16/H9ep2ND7xu6kHQn4VvfD1Fudl/9c1SuuB8Ix
eJNz3SWhH0VS90X7I1MT41rCz2/PVVe7hE6D6Yf7x1yoF3oYKt6YtfEP84Qe
juu+ixmFjwk9EjdGTj5SeEF8/mj0eWvJ2ZbNQj+B4u0O14eVQo9FzbDya9sG
CG3C5YltidXHxfNn4vLBLbppndBZGHJ3xIgrdUKPx87Fh3d3PiH0BJzs1ee4
dk+cRzbSDtyZNWqH0Dk4rQ8fOqhe6Il4Lv2L0q8zhH4S5yq27sjrFuc7Cfeu
XppvOSr0ZOw8Z/nLa28J/RQGdy7/x+qXhJ6Cxepr4RdUoafifNiqJYSFnoYr
2cNXNjQJnYtn8x+S5nx3v8AYd1HvDCWuVWBczdw31z8t6nlI/bTX7cwlop6H
x19O71r5sqhPh3VFV37l66I+HQVDf5c0VRf1GSiKTht49TNRn4G/LxlxYOAt
UZ+Jd4eV1C3pFz8PdSbGp13tik0Q55OPjv39dknlop6PxBkLvjjzM1EvwCrP
UPfNzaJegClHxvonfiTqhfj+sOHzf/pPUS/Ep8feX9uWLO6vCJtuvhFLfzyu
1SIcaH/V/PF4UZ+FytQz0S1Foj4LU09vGrOhRtRnI3DlYk5LUNRno/Op1snv
LRX1OVA8X+49uFHU56A5Z29s3y5Rn4sTtj4dyz8S9bn4a0mgIPNzUZ8HW1JS
rXZN1Odh/9is/kceEvM7H1e2VV9o/XFcq/NhO/brA7kZor4Az95/MTM4TdQX
wJL8TRoWiroZp1K2391ij2uY8W7e0RXNEfH7Zox9aXFS76VxrZuRe/zC97rX
iv6FOJfre97VIvoXojY99mHhO6J/IaavanGvPST6F2JC8Sd15hOifxHG7wt2
NQl/wCI82u5b++VXon8RVn9iZLXdE/2LMG1Zy4lbyYnx/mLsqss6+8yAuEYx
LCmBy8VD4lotRvKQPoefzohrvRifZ695vXOC6C+Bfi3/hCb8CCXY3Kvm0iv5
or8Eed0Pa8Zc0V+Ct3dbUhzFor8UHeuHeEdYRH8pfpI2c8yoWtFfilevX7rr
ton+UtzY8/G+C07RX4YU86nIOuF3KEPS2c2/XNYg+suQq6YU724U/WX49//9
WfSXo4DWUY5k1l+OH9DP18vRzf5+BbbS50MFBrDnr4BB30+vgMbe34Jcej6w
YBM7Pws+oOerW3CCnX8l7krkflCJGnZ/lWih96tX4kl2/1VYSecDVZDY/FQh
i86XXoURbP6qkUfnE9WQ2fxWo43Ot/7g99n812Ak3Q/U4AO2PzU4TvdLr0E1
279a+Ol+oha1dH/VWlym+63XYg/b/zqUUX9AHXTqH2od/kb9Ra/DcuY/Mvcn
SUYX9S/IcFB/k2VMov6nylhA/VGTsZP6py5jGfVXQ8YZ5r9WfD2U+LNkRTr1
b1ixlPq7bMXt6cT/VSsO0XzQrJhM80O34kWaL4YVb7P8sWESzSfJhgk0v2DD
PJpvsg19af6pNtw7RvJRs8FE81O3YRrNV8MGF8tfO07SfJbsuEHzG3b8iua7
bMcgmv+qHdsoH2h2XKf8oNs5Xxh2rGf84cBFyieSg/MLHDhP+UZ24B3KP6oD
wykfaQ7EKD/pDlyhfGU44GP85UQd5TPJiQGU3+DEN5TvZCdilP9UJ2opH2pO
TKH8qDsRoXxpOPGfO5Q/XbBQPpVc6Ev5FS68QPlWdmEc5V/VhUzKx5oLjJ91
F+dnw9WDn92cnyU352e4OT/Lbs7Pqpvzs+ZGDnt/N+dnw92Dn+s5P0v1nJ9R
z/lZruf8rNbDoPer1XN+1ush0fkw6nvwsweH6XxJHvRn8+fh/Cx7OD+rHlyi
8615cJvNvwfb6X4YHkiMnxuwgu6X1IBrbP8a0EH3U27g/Kw2cH7WGpDO9r+B
87PR0IOfG1FF/UVq5PyMRsyi/iQ34gz1L7WR87PWyPlZb8Qd6o9GYw9+9mID
9VfJy/kZXvSm/Cx7cYz6t+rFGurvmpfzs+7l+WB4UcD4uQlemi9SEzpY/jTB
T/NJbsJKml9qE07SfNOa0EbzT2/i/Gw04Y8sP324TvNV8sFO8xc+/ILms+yD
jea36sNJmu+aD+/R/Nd9GEX5wPBhPuMHPwzKF5IfXsof8GM25RPZjxzKL6of
2ZRvND8eo/yj+7GG8pHhRz7jJwVvUr5KVWCl/CUpuE/5zKTgGOU3KHif8p1Z
wRrKf7ICUD5UFPye8qOqoJPyZbPC+VlTsJHyaauCm5RfdYXzbfsDTfnXUFBI
+Tim4Bbj5wBm03pqAD+i/VKAf74pwPkdAf585gBS6PPLAfyLvp8SwA72/gHk
0/NpDmAlPT8tgDZ6vq0BHKXnrweQSP+/aQ+ggt6fEcAeer+xALLZ/QfxGzof
qUE+P1IQo+l8mYLIpvOHIIrofJqDcNL5lYM4S+dbCWIKnX81yPejOYhWuj9a
EJ/R/WoNopTunx5EgO5nexB1dH+NILrofseC2Mv2P4Ry6g+pIRyg/iGFcJj6
iymEVdR/EIKH+pM5hPPUv+QQgtTflBAyGT+HMJ36Y3MIe6l/aiH8lvprawiH
qP/qIXRQfm4PYTD1b+NBP/X3WAjdlJ8Twmin+ZAaRgbNDymMTTRfTGH8ieYP
wphN88kc5vwsh1FG800JI5nx8wNN87E5jEE0P7Uwsmi+tobxDM1fPYzTNJ/b
w5yfjTDn51gYA1j+R7CD8kFqhPOzFOF8YYpwfkYEBuUTc4Tzsxzh/KxEevBz
BKMpHzVHOD9rEc7PrRHOz3qE83N7BI9QfjMinJ9jEc7PCVHUUD5MjXJ+lqJo
pHxpinJ+RpTzszmKcZRf5Si8lG+VaA9+jn7Hz/8FDLV4gA==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             RGBColor[
             0.8588235294117647, 0.4392156862745098, 0.5764705882352941]], 
            LineBox[CompressedData["
1:eJxdl3l0VPUVxwMeOCS1aVqBAsfqIxC2CEwCCYJAvgGysA9knaxv9kkymXmz
1tNq+04FoaCHUBEoizyoxagIASyoPdUHGGkthVRksbI8FknAVIaULWKxtJ2f
597kn5xvbu7kvd/v3u/3k6E2/2Jn74SEBE+vhIT/fv//Vyznxg7TtgHer3Li
P0D2K4lq39NC90Pxoecerui6Htcp2Njn5p7EnbG47o9ptzuu/LnyRlwPgmPI
Zuf6y0I/isTuS/ZHpnXFtYSf35mnrnEJnQrTDw+MvegRejjK35i96Q/zhR6B
Lt+l9ILHhB6Fm6OmHC24KD5/DPq+tfRc8xahn0DRDofrwwqhx6F6eNn17QOF
NuHKpNbeVSfE82fgyqGtumm90JkYem/kyKu1Qk/AriVH9nQ8IfREnOrV94R2
X5xHFlIP3p09eqfQ2Tijjxg22CP0JDyX9kXJ1+lCP4nz5dt25naL852M+9cu
L7AcE3oKdp23/OW1t4R+CkM6VvxjzUtCT8US9bXwC6rQ03AhbNUSwkJPx9Ws
EavqG4XOwbN5D0lzv7tfYKy7sE+6EtcqML563psbnhb1XKR82utOxlJRz8Xj
L6d1rnpZ1GfAurIzr+J1UZ+B/GG/S5ymi/pMFEanD7r2majPxN+Xjjw46Lao
z8K7w4trl/aPn4c6CxNSr3XGJorzyUP7gf67pTJRz0PvmQu/OPszUc/H6rph
7ltbRD0fU4+O80/6SNQL8P3hIxb89J+iXoBPj7+/rjVJ3F8hNt96I5b2eFyr
hTjY9qr54wmiPhsVKWejWwtFfTamndk8dmO1qM9B4Oql7OagqM9Bx1MtU95b
JupzodR9ue/QJlGfi6bsfbH9u0V9Hk7a+rav+EjU5+GvxYH8jM9FfT5siYk1
2nVRn48D4zIHHH1IzO8CXN1edbHlx3GtLoDt+K8P5qSL+kI8++2LGcHpor4Q
lqRvUrFI1M04nbzj3lZ7XMOMd3OPrWyKiN83Y9xLSxL7LItr3YycExe/171O
9C/C+Rzf865m0b8INWmxDwveEf2LMGN1s3vdYdG/CBOLPqk1nxT9izFhf7Cz
UfgDFuPRNt+6L2+I/sVY84mR2Xpf9C/G9OXNJ28nif0vwu7azHPPDIxrFMGS
HLhSNDSu1SIkDe175On0uNaL8HnW2tc7Jor+YujX805qwo9QjC29qi+/kif6
i5Hb/bBmzBP9xXh7jyXZUST6S9C+Yah3pEX0l+AnqbPGjq4R/SV4tevyPbdN
9Jfg5t6P9190iv5SJJtPR9YLv0MpEs9t+eXyetFfihw1uWhPg+gvxb/+58+i
vwz5tI4yJLH+MvyAfr5ehm7298uxjT4fyjGQPX85DPp+ejk09v4W5NDzgQWb
2flZ8AE9X92Ck+z8K3BPIveDClSz+6tAM71fvQJPsvuvxCo6H6iExOanEpl0
vvRKjGTzV4VcOp+ogszmtwqtdL71B7/P5r8ao+h+oBofsP2pxgm6X3o1qtj+
1cBP9xM1qKH7q9bgCt1vvQZ72f7XopT6A2qhU/9Qa/E36i96LVYw/5G5P0ky
Oql/QYaD+pssYzL1P1XGQuqPmoxd1D91GcupvxoyzjL/teLrYcSfJSvSqH/D
imXU32Ur7swg/q9acZjmg2bFFJofuhUv0nwxrHib5Y8Nk2k+STZMpPkFG+bT
fJNt6EfzT7Xh/nGSj5oNJpqfug3Tab4aNrhY/tpxiuazZMdNmt+w41c032U7
BtP8V+3YTvlAs6OL8oNu53xh2LGB8YcDlyifSA7OL3DgAuUb2YF3KP+oDoyg
fKQ5EKP8pDtwlfKV4YCP8ZcTtZTPJCcGUn6DE99QvpOdiFH+U52ooXyoOTGV
8qPuRITypeHEv+9S/nTBQvlUcqEf5Ve48ALlW9mF8ZR/VRcyKB9rLjB+1l2c
nw1XD352c36W3Jyf4eb8LLs5P6tuzs+aG9ns/d2cnw13D372cH6WPJyf4eH8
LHs4P6seGPR+NQ/nZ90Dic6H4enBz3U4QudLqsMANn91nJ/lOs7Pah0u0/nW
6nCHzX8ddtD9MOogMX6ux0q6X1I9rrP9q0c73U+5nvOzWs/5WatHGtv/es7P
Rn0Pfm5AJfUXqYHzMxowm/qT3ICz1L/UBs7PWgPnZ70Bd6k/Gg09+NmLjdRf
JS/nZ3jRh/Kz7MVx6t+qF2upv2tezs+6l+eD4UU+4+dGeGm+SI1oZ/nTCD/N
J7kRq2h+qY04RfNNa0QrzT+9kfOz0Yg/svz0oYvmq+SDneYvfPgFzWfZBxvN
b9WHUzTfNR/eo/mv+zCa8oHhwwLGD34YlC8kP7yUP+DHHMonsh/ZlF9UP7Io
32h+PEb5R/djLeUjw488xk8K3qR8laLASvlLUvAt5TOTguOU36Dgfcp3ZgVr
Kf/JCkD5UFHwe8qPqoIOypdNCudnTcEmyqctCm5RftUVzrdtDzTlX0NBAeXj
mILbjJ8DmEPrKQH8iPZLAf75pgDndwT485kDSKbPLwfwFX0/JYCd7P0DyKPn
0xTAKnp+WgCt9HxbAjhGz18PoDf9/6YtgHJ6f0YAe+n9xgLIYvcfxG/ofKQE
+fxIQYyh82UKIovOH4IopPNpDsJJ51cO4hydbyWIqXT+1SDfj6YgWuj+aEF8
RverJYgSun96EAG6n21B1NL9NYLopPsdC2If2/8Qyqg/pIRwkPqHFMIR6i+m
EFZT/0EIddSfzCFcoP4lhxCk/qaEkMH4OYQZ1B+bQthH/VML4bfUX1tCOEz9
Vw+hnfJzWwhDqH8bD/qpv8dC6Kb8nBBGG82HlDDSaX5IYWym+WIK4080fxDG
HJpP5jDnZzmMUppvShhJjJ8faJqPTWEMpvmphZFJ87UljGdo/uphnKH53Bbm
/GyEOT/HwhjI8j+CnZQPUiKcn6UI5wtThPMzIjAon5gjnJ/lCOdnJdKDnyMY
Q/moKcL5WYtwfm6JcH7WI5yf2yJ4hPKbEeH8HItwfk6IopryYUqU87MURQPl
S1OU8zOinJ/NUYyn/CpH4aV8q0R78HP0O37+D7K1Ux0=
             "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0., 360.}, {0, 2.302775637731993}}, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Epilog -> {
           Dashing[{Small, Small}], 
           RGBColor[0.5, 0, 0.5], 
           Arrowheads[{-0.03, 0.03}], 
           ArrowBox[{{90, 1.15}, {90, 2.3}}], 
           InsetBox[
            FormBox[
             StyleBox[
             "\"R/\\!\\(\\*SubscriptBox[\\(r\\), \\(9\\)]\\)=2\"", 16, 
              StripOnInput -> False], TraditionalForm], {
            90, 1.7249999999999999`}, {-1.25, 1}], 
           RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 0], 
           Arrowheads[{-0.03, 0.03}], 
           ArrowBox[{{270, 0.55}, {270, 2.3}}], 
           InsetBox[
            FormBox[
             StyleBox["\"R/r=???\"", Large, StripOnInput -> False], 
             TraditionalForm], {270, 1.7249999999999999`}, {-1.25, 1}]}, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"\"", TraditionalForm], None}, {
            FormBox[
             StyleBox["\"t\"", {
               GrayLevel[0], Large}, StripOnInput -> False], TraditionalForm],
             None}}, FrameStyle -> {{
            GrayLevel[0], Medium}, {
            GrayLevel[0], Medium}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         FrameTicksStyle -> 16, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, Method -> {}, PlotLabel -> 
         FormBox[
           StyleBox["\"a=2.0, b=1\"", {
             GrayLevel[0], Large}, StripOnInput -> False], TraditionalForm], 
         PlotRange -> {{0., 360.}, {0, 2.302775637731993}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           StyleBox["\"r\"", Large, StripOnInput -> False], 
           StyleBox["\"R\"", Large, StripOnInput -> False], 
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(9\\)]\\)\"", Large, 
            StripOnInput -> False]}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    0.8588235294117647, 0.4392156862745098, 
                    0.5764705882352941]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    0.8588235294117647, 0.4392156862745098, 
                    0.5764705882352941]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8588235294117647, 0.4392156862745098, 
                    0.5764705882352941], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.5725490196078431, 0.2928104575163399, 
                    0.38431372549019605`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.8588235294117647, 0.4392156862745098, \
0.5764705882352941]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8588235294117647, 0.4392156862745098, 
                    0.5764705882352941]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8588235294117647, 0.4392156862745098, 
                    0.5764705882352941], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& ), Editable -> 
          True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             FaceForm[
              Opacity[0.3]], 
             Dashing[{0, Small}], 
             GrayLevel[0]], 
            LineBox[CompressedData["
1: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
             "]]}}}, {{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             FaceForm[
              Opacity[0.3]], 
             Dashing[{0, Small}], 
             GrayLevel[0]], 
            LineBox[CompressedData["
1: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

             "]]}}}, {
          PointSize[Medium], 
          Hue[
           NCache[
            Rational[4, 5], 0.8]], 
          PointBox[CompressedData["
1:eJy9lF1Ik2EUx9fG0qZmdpFRiCW+00lhNzarmU5XaX5N08IZiU6LEBzYh1aL
ZJGgEIqamjcFhYiuLEPIrCnLBE370DQNLxRSkvKDKBUvtDz/c/WCzEC6GOPP
4TzPOb/34bc7w5SYJZVIJKV/fyv/UcJ4spt0NnTnK/WiQjoaKk+coGyeDKac
9nqSssWgobwxZIbyYL+WsixtjnLh70jKSdYlypXhCZRLyp1OruQ7KgPlrvwt
lGs2GylHtm+nPJucTVk97E25LSeX8q1jAuWfI3mUT1n9Kbdor1Gu6FFRnkk3
U+6sQF0ZgHrBDvRPN6K/uwbn6/fh/G+XcH+5C+5/74/5HtoyKF/VYX7LlxTK
XpnYz7iop2zxwf6bWrD/dXfwiasFH79a8IsJAb8qHfh6jIBvFvPXMP+hVNTd
fqFe3Id+IRv9G2JxvnQC57/Mxv1KeRRlexPmq4oBf88yzJ+0B/xzTNjPUwH+
zU+wf2809i/qBB95Bvi8DQK/Zx/Bz+8++Jo04BvRDf4/zoL/xD3Up7kex/2P
+9Df8wbnm404v60R97+Ixf2aHMx3xRXzWUsxv18g5heeYr9P8dhv6jz273TG
/vJo8FmaBB/jB/DLM4FfcQr41i+A75wP+HvZwV8RjvreMdRvPkB/dTj6O1xx
flsDzm/1xv2VNnx/fTrmW17G+6jTYn7fUbwfmRL7hXXgfflewP67PLD/1mrw
sQeBz5An+B1sBj91GfhqA8HXl/m/Y/6u9agnHUX99BH0R4yh/8BnnN+ai/Pz
bbi/JAX3B+RhvgEP8Ffy+8ni9+PTgP3mdeDvfAb7X5zH/sc14BMzAD7jdvAz
p4KfPQF8F9gv6+2fEyL/3Gb/VK7RP/tF/ikU+cfA/nnuwD/+7J8b7J8Z9k/X
OvungP3jzP4xi/yjcuCfc//oHwn7R8b+aWX/CKv4Z5sD/7Swf3rYP4XsHyf2
Ty/7o4n9I4j8c5jf/xS//68i/8SL/NMr8k+7A/88Yv8o2T9K9k8/++e7yD8y
kX8y2T+X2T9F7B/rKv5xEfnHwv65u4p/bGv0j8D+kTjwj7vIP8Psn0Psn2D2
T9ga/WNg/+jYP2oH/lGxfwb/k3/+AMOFpMQ=
           "]]}, {
          PointSize[Medium], 
          Hue[
           NCache[
            Rational[3, 5], 0.6]], 
          PointBox[CompressedData["
1:eJzNlGtMU2cYxzuWIMHEUHCIU7Q44mUTJcOhQswjbkCWGgPMzQsoXjZqI1cR
RIuAYzEsfsCpZEOWoBMdl7D4QY1zi1GgIAqlIogK2vdgIIr1wkstipf6Ev/9
8iYN+mXZh+bk5D0953n+l1/AprS4H9xUKtV+8Ru9NjVrak1GTvMtXy9fZWG0
rb15ntslTiVxhfWxCiPzT/fHzTJxyteVJXX1M5qRnFHsuM6pZmPoqcuPGA2a
w/IY45TLMo/XDDMKOhc+wX+AU/HiuO5nDkbJ0Z3RiYOcoluNL/LcFXJMuZjb
9ZRTyp7I9YWeClnSIiYuG+ak0Z6PaB6v0OGHq21t4nztDHVprjg/5jiV8AHn
xGftq/Qap1BCf+XzfKs4L6l57O+mUO0J7zJHHydT0wXPqJeMDgTZwmdbOJWm
dg5NtzOa3NAyUnSDU1r6yeVznzDaca4v5EA7J+OSIbV5gNG/B9t+O9TKad2n
msvfiP0mFBStq2/m9DoofldfL6P6xAr3RU2conzt6t8Zo3S94YZd6NVbdibJ
IPTSx1RHD4n7RJP28xxxH/t9o3qieJ6X3rpgEM/f2lrZESreV1AU9plOvG/T
gNYvpIXT3vJJ3r59jHoTQsw9bZwa+vV3NtwT+v99c6N7B6fW0OSD06yMMnMC
In4U8086oY2YKeZv3+u7IPA2J8OlT2bH2BhpogJX1CmcLNbG0uxnjByx/OQX
/Zy+C/zoz2yhx9VU27R44YeBzhwLVin0dN8fep9HnLIq5/xc9KFC3sG6+i+F
P+F/6ZcmCX+OrK960TnEyeOw0nXaQ6Hxyx5UnRV+tNrnVeuEH/aCOq3Fzikm
Ur0zXfi15OWW1aP+fXzWkTfqH8d5LM49pP+XS++Xvz+C+bZjvnZp/lfY71vs
F4D9u7F/B/TZCX2yoJ8f9NsBfa9AXwX6G6H/FvhTCH+64V8+/FsJf5/A3xT4
vwb+O/PBkI865CcS+fFCvhzI10Upf858NiCffshvMvJbjHz/inxXIf9tyP8G
9GMV+lGB/jxEf8qkfjH0LwD9U019289U9DNF6m8w+r0f/bai/7vRfw34UAs+
XAM/9oAfMl/+K/5EueDPnTH4cxT6DUK/+DH4c0jyZwr8S4d/u96TP878fCXx
5y7ytRX5S0D+4iT+dEn80Un8kfOfhX6Y0I8c9Gcy+nNN4k8g+ncb/RuR+inz
xy7xxwf9D3PBH0+JH4MSXxaCP1PBH5vEJ5k/FS744/z+MObLxnxmaX4nX1di
P420v8xnmT+Z0LcF+jLo3wj9N0v86XlH/qyF/xku+OPMj4+Ur39c8Mco8ScV
+f0F+S5BvqvH4E85+mNFf5z9WvM/4c8bqRj1yg==
           "]]}, {
          PointSize[Medium], 
          Hue[
           NCache[
            Rational[2, 5], 0.4]], 
          PointBox[CompressedData["
1:eJy9lX9MlHUcx0GEc0IEtsG1lGBzLgI77AQpyw93dYbiWUeFdOJ5KZqIWizl
6gLSUtADSQSVkYK01vVrnUNlRnKh/CiEhAMhj2B8n0gaUpABzyMwoWu8n3+e
jbW11h+3++PZ8zzfz/vzer+ekC2vx2+b4+bmdsz1+/vf7KiT9afw1LGkSdai
YtSbdrIv4whPQtGPJy4lMiov89h+/02eIjYslFUWMEr+4/jp0WUCebVcHh1o
Y3RGf/ZglUkgllttOeTJUWTxikJbiUBLhOdMLIij8lUNz6o/FGgosKRn7cMc
+bQur+s6INB+7z+/7fHhKCruYtsPiQIpRyZ2BA4zim1ZqFocKtDcHUbjoWZG
P7PCwSPjPOnHPkie+oxR1urgTP11nuYlffPlFxZGxgXZ/oGf81Sl8lppeINR
Wnhy/O2jPG3QlNuGNjJymu57R27mqahkOCdfy+h23ycnX9zDU3qKM9pTwyjz
PV0j75r/zagAxU+u+bVVY5rHdvFU0z2/Kf0ZRlMLFhv89/LUZJHFKtYwitBu
mq7Yz9OlC74VifGMNts+/S6sgKdOtxORcQZGp+qd/WUf85TTv37ra7sYvXI3
dp26iid7+7YseQaj6cv24AQHT0u/L8rvyGOkU15Zrhjgaao09FxIKaO5a62t
y9wF8otW38m1MUrc7Qhvkws02f3C8Fc1jK5dt9sLFQJNWBNejnAwyh0bTZ+n
EWjn4Yeer2GMAh5td2t15Tkga7ond+XZ05jme2qnQCamHbs3yShMp6oMMAv0
9Ir3G1bKOLpYnHTrgRxX/nszi61+HK27c/NXQ4FAhqMVjiA5R3WdqbL2Ytf9
2zc7shdxdPxcTEzCGYGuzvf4ujmYI+WTVm9nqWu/SRWaWyEc5eH6FVxvwP1v
4X4dnr8Jz7+A90fh/aE43yqcrwvnz8D5xfl+x3wWzJ+K+euQzzTyEfMbR34j
a2byXYR81yN/97KZ/KX70WN/tdjfMey3EPvdiP13Y/8K8HEefPDgpwP8xIKv
evCVBf7M4G8QfJrA5w3wWwJ+U8D3FvCtB/+14P8A+uGHfvyC/mxFf9Toly/6
FY3+qdE/T/QzF/08K+mvEv1+BP0+jf73ov+vwg8e8MNH8MdS+MMJv9yFX/5r
/yhwvlCcz4rzD87in0jMH4n54yT+6ZP4R8zXaxb/pEr8c0PinyHsd9+/9I9S
4h+jxD9F4NMCPg0S/0yB73Dw/ZLEP+4S/+jQnwn0pxH9mkS/xP7tRv+CJP7p
Q3/3ob/h6PdT6Pd5iX+08EMS/GCHP96GP/Ilfnl8Fv/U4nq9xD+i34x4vg3v
fwLvF/0Yg/N1SvzzIOb7DfNlS+ZvRj7jyEfMb07PTH5ivv7IV4X8veEfj+qZ
/YRhP+L34+o/+KdX4p9K8DECfrrAj8jXNfD1Lvg7CP7E76MZfHZI/LNH4h8D
+K8G/+L3WYZ+iN/vZPRnNfrlM4t/ZOhn3v/kn78AzRi0Yg==
           "]]}, {
          PointSize[Medium], 
          Hue[
           NCache[
            Rational[1, 5], 0.2]], 
          PointBox[CompressedData["
1:eJy9lH9MlHUcx88YgrD4eVcoiYLNJrhIW/w4iQ+0VCi3uvgRd3mXIKYdIpCd
dyKoK0hFwyMQK7ZAyWihMnLnplzCQLkLFYR+EaPnHs0dP4aYw0KeHxnt3v7z
bDdba/1xuz+efZ/n831/Xq93eE7Ba5sekclk5tnf3/+egYejS7Ucjbae2nJP
ydDiu0uDj83l6XKQ34JRgSHDriyfQLVAK0bK7cVJLP26h8nVZoh0SuBeXdTP
UlvDB9s+bRTJ7B80MyOyFHHlyY/r3xapYGtilXWYpfqQnnbTqECGjab61o9Y
qupPkdlUAqVb9fy6BJZuR64oMHby1OibOb32ewd1xiZpSlJ4Uv04f1qf4qCV
xW2DN0c5EjOmxvqGGPrN68Ifnp9zdPW5q2mDBxlSFRYF3jJy9LNDYUpRMzTv
ouc+SzZHbS88E95HDFUsOf1OvI6jrwZo9bVVDPlWLmM36znKVV0btqXOPm/c
MqV/n6P7tvzjhrcY0jzFp1m+4MiksBgmKhk6Eax702OAI58jB85XdzAU5OSs
mR48NVcsXhsxw9CdzNj223E8Vclrr9TGOOgn9bLUNUU8NXwb8HW00UEvLjwz
z6OZpzWfDag2nnNQf15M7sxNnuRz08VB3kFNx2vCI8IE0mwr294axpJf8vPO
2gyBrlt8jSWJLM3pbl9fWSFQUEvZE0PrWerc0XQ/yyrQ41nmrk07WdrBe+Xr
xgViSrr97dUsbT3QFR0qF2lC2dtoaWZpyficW2HxIpV6jSgmO1hKOjnp9FGL
lFWeoVj1HUvZZ9R283aR4mI+OVdwg6XC2vCWov0iXU499vvmSZam7Jr80qMi
PX0vJ9J7mqW+P+9yVQ0iRd1J+CFBYOmCVhlcN7v/xA93v87N7n9Y8nwC56Nx
3oT3X8T79+L7Ufj+s5hPi/kWYf69mL8I93Pifvtx/yHcvw35hCIf8ZIrvxDk
F4B8GeT7IH818r+E/SzAfl6W7g/7/RL7HcH+G7D/5eDjMPiwgJ+JGhc/evCl
AV/l4I8Hf37gczX43Ad+reA3AHyfBd+vgH9/1sX/GPzohh+x8Eee6fKnC35p
4NcY/NsN/+rgZz78rIG/efB3IfzOgd/t8P8Q/B9GP5xEPxRL+iMK/dKLfvmv
+ycM8xX+y/6xIZ905KNEfjz6x4l8e930j3Q/h7C/Fkn/5PzD/mkCP97on1BJ
/0yBPzP465P0z0vgNxn82sC3AnzXgX8d+PeCHzfghyf6Jxj+dMAvOfwql/j3
Lvwcg5+R8HenpH/U8DsP/sfC/xL0Q89D+mc5+qUH/ROH/rmO50vxnMH5GJzP
xfsH8P4N+H48vr8S8+kw33zM/x7mz8P9xnG/Xbj/L7j/WUk/y5DfY8hPTHLl
O4J8TyD/DW76R4n9ad30zzj2fxT7fxR8WN30zxvgywC+9oC/ELuLvwd8GsFn
Gfg9D369wXfvQ/rnNPxIhj+E/vkGfqW56Z9q+Jn9P/XPX3n2vtQ=
           "]]}, {
          PointSize[Medium], 
          Hue[0], 
          PointBox[CompressedData["
1:eJy9lWtQVGUYx/ccBCmyGQxyxlJXRXAhCJTLKDTPWzPcIhGQEVFhx8UVL2AN
WUwNQusQ6yVUNEKBTTPHhURuK2rClGk0GVsN3ojZs+zJGBgKJ24hi7AbtX8+
dGYY+9D0gdkPZ857nvf5//4/FqteT1LzMpns6NTfX7+DNYFnPLNsNJj7wqbu
70yk9vthQkiUsUU3Fzfntptp63yd+kQ3x5IGxvL0G0SynnVKcM3iWf2HPZmq
OyIN7f7FL3ohz4LGIzpSi0VK9MnUR+/lWHhp+v0DIxbqCWvlN9+VsW2XElZc
/aqLanqyDS2RMqbderl9bbOZllwfi1XU2ml0gXFSPihQif6VPe+622nQ2hI7
uUWgOkvqTf0FGwlzhP1tLgLZil47VvCOjZqKH+Uu6zDR3kgnedzU/FF1ias8
20xkSbpRmplvo10eY32nTSbacqg/cmO1jXLKPSLMvECXq2JKmnptVD+SU3sn
XKCVS37tHwi208hFp9kZ+wT6sSA+6+ViO33BBUa53xZojpd3fO4DOxmGhv1H
fc10Rb7u6hsKGdvQsi+oUmumlwSdf0Xa1H3mtW/v7zHTZNHvnezY1HPbl18v
iO6ieyqX3oPfyJgzPfe5/lwXWRIKuWtWGUuKcqsOm2Uh1e0D18mPYz7Zn2mq
0i3k/IdpdsFGjvXnzH9q4qKFAo4XPuGs5diFgz1GXyeR0pKfd95Rz7GJEPnP
48tFCl53S5lwj2MVxo68ijiRyoyhPtljHCu5++bO1p0iNShXdOU9y7Oc4GX9
4UUi+Ufc0EYH8sz9SIepTSfSKS6t++NInpX3ZVhfbRBJM5rSmbaeZ/vvv6gs
uybS2aHuR5kqnslraF5Zm0j5KadWV+/g2fYSZgy7JdLw3/zwLE4ef3z3FA9a
PFfj+Rm8vwjvf4Dz83C+Dt8/ie+vxHxumK8K82swfznuV4r7+eD+tbi/EvuR
hTr2sxz7M2B/kyOO/T7AftOx/xDsvxP5KJHP98jPC/kNI1818l2F/MuQfwP4
2AU+xpc6+GkHP63gqw18rQZ/Lk0O/irAZy/4XAN+K8FvJ/jOB9/bwP8n4N9D
+89+nEN/Ap529KcM/Uoed/Rrun8BCx39q0M/S9DPPvT3BPqbjH6/jX4PoP++
6P9D+KEBfkiFP2LgjzXwy/C3Dr/81/5ZK/GP+Bj/eOL+k/DPUYl/arC/LvjH
Ffs1zOCfn5BPNvLZhPzeQn7nka/hX/rHGf5pBD+XwFcq+IoCf0Xgb5pPFfjs
AL+u4FeQ+CcD/CvA/0P0YxT9UKA/jehPMvplh39CJf7RoZ/F6Od59HcP+uuN
fj+Dfn+E/lei/+/DDxr4oRL+8IY/iuGXNPhl9DH+kb7/Hs4vxPlH8P1P8f3p
+eZiPoNk/tMSv4ZI7p+K/cyCfxQS/1gl+1VK/DP9/yEF+RiR39IZ/BOE/JuQ
fyP42Aw+euEfE/gxgK/fwJcf+POCf66Az2bwuR78asDvAPiOAN954F8D/p9E
P9wOO/pRi/7Ewj+H0K+YGfxTjX7q/if//An322dI
           "]]}}, {Axes -> False, PlotLabel -> FormBox[
           StyleBox["\"b=1\"", {
             GrayLevel[0], Large}, StripOnInput -> False], TraditionalForm], 
         PlotRange -> All, Frame -> True, FrameStyle -> {{
            GrayLevel[0], Medium}, {
            GrayLevel[0], Medium}}, AspectRatio -> 0.65, FrameTicksStyle -> 
         16, ImageSize -> Large, FrameLabel -> {
           FormBox[
            StyleBox["\"R\"", {
              GrayLevel[0], Large}, StripOnInput -> False], TraditionalForm], 
           FormBox[
            StyleBox["\"r\"", {
              GrayLevel[0], Large}, StripOnInput -> False], TraditionalForm]},
          DisplayFunction -> Identity, Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {1., 0.44}, DisplayFunction :> 
         Identity, FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], Method -> {"ScalingFunctions" -> None}, 
         PlotRange -> {{1.0005009990002505`, 1.9013878188659974`}, {
          0.4342585459106648, 0.527319768893327}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.05], 
            Scaled[0.05]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           StyleBox["\"a=1.00\"", 16, StripOnInput -> False], 
           StyleBox["\"a=1.25\"", 16, StripOnInput -> False], 
           StyleBox["\"a=1.50\"", 16, StripOnInput -> False], 
           StyleBox["\"a=1.75\"", 16, StripOnInput -> False], 
           StyleBox["\"a=2.00\"", 16, StripOnInput -> False]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[4, 5], 0.8], 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[4, 5], 0.8], 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[3, 5], 0.6], 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[3, 5], 0.6], 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[2, 5], 0.4], 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[2, 5], 0.4], 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[1, 5], 0.2], 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[
                    NCache[
                    Rational[1, 5], 0.2], 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.225], 
                    Hue[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.0125`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[
                    Rational[4, 5]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    Hue[0.8000000000000002, 1., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], "Hue[4/5]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = Hue[
                    Rational[4, 5], 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[
                    Rational[4, 5]], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.0125`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[
                    Rational[3, 5]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> Hue[0.6, 1., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], "Hue[3/5]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = Hue[
                    Rational[3, 5], 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[
                    Rational[3, 5]], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.0125`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[
                    Rational[2, 5]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    Hue[0.4000000000000001, 1., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], "Hue[2/5]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = Hue[
                    Rational[2, 5], 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[
                    Rational[2, 5]], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.0125`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[
                    Rational[1, 5]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    Hue[0.20000000000000004`, 1., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], "Hue[1/5]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = Hue[
                    Rational[1, 5], 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[
                    Rational[1, 5]], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.0125`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> Hue[0., 1., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], "Hue[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0], Editable -> False, Selectable -> False]}], "}"}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7883888022758646`*^9, 3.7883888072634935`*^9}, 
   3.7883888500600233`*^9, {3.7884270486048794`*^9, 3.788427074868517*^9}, 
   3.7897222061967897`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"export3", "[", 
  RowBox[{"\"\<0083_radii_grid2\>\"", ",", "radiiGrid2"}], "]"}]], "Input",
 CellChangeTimes->{{3.788388868033243*^9, 3.788388895892708*^9}, {
  3.7884270521599474`*^9, 3.7884270532791758`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"9", "*", 
      RowBox[{"k", "^", "12"}]}], "-", 
     RowBox[{"18", "*", 
      RowBox[{"k", "^", "10"}]}], "-", 
     RowBox[{"k", "^", "8"}], "+", 
     RowBox[{"16", "*", 
      RowBox[{"k", "^", "6"}]}], "-", 
     RowBox[{"21", "*", 
      RowBox[{"k", "^", "4"}]}], "+", 
     RowBox[{"2", "*", 
      RowBox[{"k", "^", "2"}]}], "+", "1"}], "\[Equal]", "0"}], ",", "k"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.788353128452507*^9, 3.7883531369586573`*^9}, 
   3.788353285006687*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", 
     RowBox[{"-", "1.372851055417972`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "0.8792350560317472`"}], "-", 
      RowBox[{"0.46900430543559074`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "0.8792350560317472`"}], "+", 
      RowBox[{"0.46900430543559074`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", 
     RowBox[{"-", "0.5599638547925577`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", 
     RowBox[{"0.`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.4095529256484893`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.4095529256484893`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", 
     RowBox[{"0.`", "\[VeryThinSpace]", "-", 
      RowBox[{"1.0661727958474654`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"1.0661727958474654`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "0.5599638547925576`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", 
     RowBox[{"0.8792350560317472`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.46900430543559074`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", 
     RowBox[{"0.8792350560317472`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.46900430543559074`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "1.372851055417972`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7883531374393845`*^9, 3.788353285517514*^9, 
  3.7897222079770975`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "/@", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Values", "/@", 
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"9", "*", 
         RowBox[{"k", "^", "6"}]}], "-", 
        RowBox[{"18", "*", 
         RowBox[{"k", "^", "5"}]}], "-", 
        RowBox[{"k", "^", "4"}], "+", 
        RowBox[{"16", "*", 
         RowBox[{"k", "^", "3"}]}], "-", 
        RowBox[{"21", "*", 
         RowBox[{"k", "^", "2"}]}], "+", 
        RowBox[{"2", "*", "k"}], "+", "1"}], "\[Equal]", "0"}], ",", "k"}], 
     "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7883533035973835`*^9, 3.788353353743482*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.0661727958474654`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.4095529256484893`", " ", "\[ImaginaryI]"}]}], ",", 
   "0.5599638547925577`", ",", 
   RowBox[{"0.8792350560317472`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.46900430543559074`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.8792350560317472`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.46900430543559074`", " ", "\[ImaginaryI]"}]}], ",", 
   "1.372851055417972`"}], "}"}]], "Output",
 CellChangeTimes->{{3.788353336190652*^9, 3.7883533540598884`*^9}, 
   3.789722207995076*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"o", ",", "n", ",", "s", ",", "pl", ",", "sp"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pl", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"sp", "=", 
            RowBox[{"getSumProdCosines", "[", 
             RowBox[{"a", ",", "0"}], "]"}]}], ";", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"a", ",", 
               RowBox[{"sp", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", 
               RowBox[{"12", 
                RowBox[{"sp", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "1.01", ",", "3", ",", ".05"}], "}"}]}], "]"}]}],
        ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Thick", ",", "Orange"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", "Purple"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Black", ",", "12"}], "}"}], ",", "4"}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{"Large", ",", "Black"}], "}"}]}], "]"}], "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{"\"\<a/b\>\"", ",", "\"\<\[Sum] & \[Product]\>\""}], 
           "}"}]}], ")"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"Legended", "[", 
      RowBox[{"pl", ",", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "@", "Large"}], ",", "#"}], "}"}], "]"}], 
           "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", "Purple"}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\[Sum]cos(\!\(\*SubscriptBox[\(\[Theta]\), \(i\)]\))\>\"", 
           ",", "\"\<12\[Product]cos(\!\(\*SubscriptBox[\(\[Theta]\), \
\(i\)]\)')\>\""}], "}"}]}], "]"}]}], "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7752293945547795`*^9, 3.775229547285385*^9}, {
  3.775229588725542*^9, 3.7752297168501167`*^9}, {3.7752312216958265`*^9, 
  3.775231381064165*^9}, {3.7752397780418215`*^9, 3.7752399103849745`*^9}, {
  3.775239996048329*^9, 3.7752400092890615`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1:eJw1zF9IUwEUx/G7u3+UFaVzSL1YCt2y9M1yQueY9A9a1Np8aQ8WE0uUoSGa
SjV7KrEtQpRJWL4ISUMMA18Krj3kg5NFGQiBjjHwQd39b+pS7zz34XDgC7/P
yQdBTwPLMAy3d/o/4w/zCpeB1PC4q29HA5XTQwaOTxeynRkNZhQ9COD1Laxo
cQ0ivB5EqOIre4pGNMjN/RLkhw7cngxosO/JsFWXt3q6xPBk8Lycd9/4q5Kn
QKLeG70zoJKnQn/bQ598UyVPg6GGsjetVpW8DQgxEBv/ppC3Ab/5sXfVPQp5
/6D9Y5O7t1ohbxOCmeTKl6xM3hYEvsdLRF4mbxuuzuWlKvtk8rYh7Dia6qyT
yctC6FXR8IdSmbz/4JzyL71VJPJ2oPHQZqR8VgJH7Npyl4PBH88WO26NSNCd
Cwy2sPGx+Q4Jkl16YNCXGG1+7ZHg+rIeTBista03VkiQm8dMGMia3ruOGB6L
j9aj3ek1kTwWLw4WlrsTInksFly+X+qZEskz45Pzq/2LUZE8M649f+qdC4nk
WTDdXH+4oMnwLCje86cH7hqeBR87XZGaS4Znxc9X7Jz5rOFZ8UKFvXjWaXg2
rD2W5l5YDM+G01+HTpySBPJseLD4XGowKZBnx4neTy1/fgrk2XG0vSb8a0aA
XY6fP5Y=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0.5, 0, 0.5]], 
        LineBox[CompressedData["
1:eJwtzF9IUwEUx/G7u3mFxGixjERGjgaLLHpJ6MVzmqGuhEps+jBIgoWB5Yti
eB9cE58M+ieFKzJl0IussAeLkGoFFYQzams6V9v8M3Wmd3P33rV01l3n4XDg
C79P+cX2BjvLMIzp3yn/oO2mVzQJ4PnKPhvOySCZlCBA/aETXOsXGd6JSkhC
dts5EW+T4ZZXCSkYrXF3WMIS5Oe2DTjWWyaUHJHgv5eGpMbwoeuySF4asg+u
Lofup8kTodOwNZl+vUGeBO6m40x4MUWeDO+POp837kqRlwGnamKHGpLkZYCv
k4NjHQJ5v8Gb65kqtq+Tl4V7I+d4S+oXeX/A5goGRm+vkrcJHl9Ns6U6Qd4m
NPAtzX5uhbwtYOHuyKfQEnk56KmqMHe9jZO3DW2nZu17xxdB56mNdusYfJrT
+wKvFoDPBwbv7Py2Fp6ch1i3EhiU41P91vU5qIsqQYWuAaOrvWwO8nOPCq1C
0ZsL52Pksdj3cHjh0mCUPBbr+6/rfPEIeSw6btTOrEKEPDU+Ktc/qTL/JE+N
pUVr4tCeH+Rp8EVp3+P5zCx5Gqw+0/iZS4TI0+BA8Uvv7sQMeQV49mRTxJiZ
Jq8AWyutjivaafI4NPs+rhgrg+Rx6BZMpwft38nj8JpDO6YfCpBXiBX7DQf2
xfzkFSLfqx2XDvvhL+KqQ2o=
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0.9795312500000001, 0}, 
     PlotRange -> {{1.01, 2.96}, {0, 1.4998886386690566`}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.9795312500000001, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox["\"\[Sum] & \[Product]\"", {Large, 
           GrayLevel[0]}, StripOnInput -> False], TraditionalForm], None}, {
        FormBox[
         StyleBox["\"a/b\"", {Large, 
           GrayLevel[0]}, StripOnInput -> False], TraditionalForm], None}}, 
     FrameStyle -> {{
        GrayLevel[0], 12}, {
        GrayLevel[0], 12}, {
        GrayLevel[0], 12}, {
        GrayLevel[0], 12}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, Method -> {}, 
     PlotRange -> {{1.01, 2.96}, {0, 1.4998886386690566`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Sum]cos(\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(i\\)]\\))\"", 
       "\"12\[Product]cos(\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(i\\)]\\)')\
\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.775231308653796*^9, 3.775231341188822*^9}, {
   3.7752313731323805`*^9, 3.775231381522938*^9}, {3.775239788479029*^9, 
   3.775239910728057*^9}, {3.7752399985059032`*^9, 3.77524000989145*^9}, 
   3.775897871423929*^9, 3.7862610011769743`*^9, 3.7862675654321613`*^9, 
   3.7897222080873117`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["derived tris", "Subsubsection",
 CellChangeTimes->{{3.78773936056767*^9, 3.7877393646389313`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lemma3plot", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pl1", ",", "pl2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pl1", "=", 
      RowBox[{"showDerivedTris", "[", 
       RowBox[{"1.5", ",", 
        RowBox[{"-", "90."}], ",", 
        RowBox[{"drLegends", "\[Rule]", "False"}], ",", 
        RowBox[{"drCaustic", "\[Rule]", "False"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pl2", "=", 
      RowBox[{"showDerivedTris", "[", 
       RowBox[{"1.5", ",", "0.", ",", 
        RowBox[{"drLegends", "\[Rule]", "True"}], ",", 
        RowBox[{"drCaustic", "\[Rule]", "False"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Show", "[", 
            RowBox[{"#1", ",", 
             RowBox[{"PlotLabel", "\[Rule]", "None"}], ",", 
             RowBox[{"Frame", "\[Rule]", "None"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"#2", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1.75"}], ",", "3"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Automatic", ",", "400"}], "}"}]}]}], "]"}], "&"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"pl1", ",", "pl2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "2.25"}], ",", "1.75"}], "}"}]}], "}"}]}], 
           "}"}]}], "]"}], "}"}], ",", 
       RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7881668893736305`*^9, 3.788167021268745*^9}, {
  3.7881671039821825`*^9, 3.788167305695112*^9}, {3.78816736774267*^9, 
  3.7881673970544806`*^9}, {3.7881674372787056`*^9, 3.7881675959726815`*^9}, {
  3.788167752205785*^9, 3.788167759972644*^9}, {3.78816811560465*^9, 
  3.788168117902254*^9}, {3.7881687444127197`*^9, 3.788168751333198*^9}, {
  3.788168792292796*^9, 3.7881688395242157`*^9}, {3.788168921695577*^9, 
  3.7881689745964317`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {GrayLevel[0], Thickness[Large], CircleBox[{0, 0}, {1.5, 1.}]}, 
       {GrayLevel[0], Dashing[{0, Small}], FaceForm[None], 
        LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -1}, {0, 1}}], {
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
          PolygonBox[{{9.184850993605148*^-17, -1.}, {-1.4569160837085917`, 
           0.23795006481866898`}, {1.4569160837085908`, 
           0.23795006481866995`}}], 
          {RGBColor[0, 0, 1], 
           PointBox[{{9.184850993605148*^-17, -1.}, {-1.4569160837085917`, 
            0.23795006481866898`}, {1.4569160837085908`, 
            0.23795006481866995`}}]}}, 
         {EdgeForm[{RGBColor[
           NCache[
            Rational[2, 3], 0.6666666666666666], 0, 0], Thickness[Large]}], 
          PolygonBox[{{-4.169687168600418*^-16, 0.23795006481866945`}, {
           0.7284580418542955, -0.381024967590665}, {-0.7284580418542957, \
-0.3810249675906655}}], 
          {RGBColor[
            NCache[
             Rational[2, 3], 0.6666666666666666], 0, 0], 
           PointBox[{{-4.169687168600418*^-16, 0.23795006481866945`}, {
            0.7284580418542955, -0.381024967590665}, {-0.7284580418542957, \
-0.3810249675906655}}]}}, 
         {EdgeForm[{RGBColor[1, 0.5, 0], Thickness[Large]}], 
          PolygonBox[{{-4.4252983216455716`*^-16, 
           0.23795006481866945`}, {-0.235204834747071, -1.1998549152396074`}, \
{0.23520483474707135`, -1.1998549152396072`}}], 
          {RGBColor[1, 0.5, 0], 
           PointBox[{{-4.4252983216455716`*^-16, 
            0.23795006481866945`}, {-0.235204834747071, \
-1.1998549152396074`}, {0.23520483474707135`, -1.1998549152396072`}}]}}, 
         {EdgeForm[{RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
          Dashing[{Small, Small}]}], 
          PolygonBox[{{-3.6449305799803715`*^-16, 0.23795006481866948`}, {
           0.34667327655382113`, -0.7054297018341217}, {-0.3466732765538212, \
-0.7054297018341219}}], 
          {RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 0], Dashing[{Small, Small}],
            PointBox[{{-3.6449305799803715`*^-16, 0.23795006481866948`}, {
            0.34667327655382113`, -0.7054297018341217}, {-0.3466732765538212, \
-0.7054297018341219}}]}}, 
         {EdgeForm[{RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], Thickness[Large]}], 
          PolygonBox[{{-2.4404689982530937`*^-15, 4.202562418976661}, {
           1.9118380783825097`, -0.9999999999999993}, {-1.911838078382509, \
-1.0000000000000007`}}], 
          {RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 0], 
           PointBox[{{-2.4404689982530937`*^-15, 4.202562418976661}, {
            1.9118380783825097`, -0.9999999999999993}, {-1.911838078382509, \
-1.0000000000000007`}}]}}, 
         {EdgeForm[{RGBColor[1, 0.5, 0], Thickness[Large], 
          Dashing[{Small, Small}]}], 
          PolygonBox[{{-3.0481454272893334`*^-16, 0.23795006481866945`}, {
           1.1102428071547699`, -0.05662023334720836}, {-1.1102428071547703`, \
-0.056620233347209115`}}], 
          {RGBColor[1, 0.5, 0], Dashing[{Small, Small}], 
           PointBox[{{-3.0481454272893334`*^-16, 0.23795006481866945`}, {
            1.1102428071547699`, -0.05662023334720836}, \
{-1.1102428071547703`, -0.056620233347209115`}}]}}, 
         {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large], 
          Dashing[{Small, Small}]}], 
          PolygonBox[{{-8.881784197001252*^-16, 1.4759001296373389`}, {
           2.9138321674171825`, -0.999999999999999}, {-2.9138321674171825`, \
-1.0000000000000009`}}], 
          {RGBColor[0, 0, 1], Dashing[{Small, Small}], 
           PointBox[{{-8.881784197001252*^-16, 1.4759001296373389`}, {
            2.9138321674171825`, -0.999999999999999}, {-2.9138321674171825`, \
-1.0000000000000009`}}]}}, 
         {EdgeForm[{RGBColor[
          0.7411764705882353, 0.7176470588235294, 0.4196078431372549], 
          Thickness[Large]}], 
          PolygonBox[{{-4.596650373870696*^-16, 0.23795006481866945`}, {
           
           0.71413996183808, -0.6868872653332763}, {-0.7141399618380802, \
-0.6868872653332767}}], 
          {RGBColor[
           0.7411764705882353, 0.7176470588235294, 0.4196078431372549], 
           PointBox[{{-4.596650373870696*^-16, 0.23795006481866945`}, {
            0.71413996183808, -0.6868872653332763}, {-0.7141399618380802, \
-0.6868872653332767}}]}}}}},
      Frame->None,
      ImageSize->{Automatic, 400},
      PlotLabel->None,
      PlotRange->{{-3, 3}, {-1.75, 3}}], 
     TemplateBox[{GraphicsBox[{{
          Thickness[Large], 
          GrayLevel[0], 
          CircleBox[{0, 0}, {1.5, 1}]}, {
          FaceForm[None], 
          Dashing[{0, Small}], 
          GrayLevel[0], 
          LineBox[{{-1.5, 0}, {1.5, 0}}], 
          LineBox[{{0, -1}, {0, 1}}], {{
            EdgeForm[{
              Thickness[Large], 
              RGBColor[0, 0, 1]}], 
            
            PolygonBox[{{1.5, 
             0.}, {-1.1430749027719944`, -0.6475182594260426}, \
{-1.1430749027719989`, 0.6475182594260386}}], 
            RGBColor[0, 0, 1], 
            
            PointBox[{{1.5, 
             0.}, {-1.1430749027719944`, -0.6475182594260426}, \
{-1.1430749027719989`, 0.6475182594260386}}]}, {
            EdgeForm[{
              Thickness[Large], 
              RGBColor[
               NCache[
                Rational[2, 3], 0.6666666666666666], 0, 0]}], 
            
            PolygonBox[{{-1.1430749027719969`, -1.9912430684406352`*^-15}, {
             0.17846254861400054`, 0.3237591297130193}, {
             0.17846254861400276`, -0.3237591297130213}}], 
            RGBColor[
             NCache[
              Rational[2, 3], 0.6666666666666666], 0, 0], 
            
            PointBox[{{-1.1430749027719969`, -1.9912430684406352`*^-15}, {
             0.17846254861400054`, 0.3237591297130193}, {
             0.17846254861400276`, -0.3237591297130213}}]}, {
            EdgeForm[{
              Thickness[Large], 
              RGBColor[1, 0.5, 0]}], 
            
            PolygonBox[{{-1.1430749027719966`, -9.009026020280044*^-15}, \
{-0.8437718672737926, 
             0.5741929895354764}, {-0.8437718672737943, \
-0.5741929895354813}}], 
            RGBColor[1, 0.5, 0], 
            
            PointBox[{{-1.1430749027719966`, -9.009026020280044*^-15}, \
{-0.8437718672737926, 
             0.5741929895354764}, {-0.8437718672737943, \
-0.5741929895354813}}]}, {
            EdgeForm[{
              Thickness[Large], 
              Dashing[{Small, Small}], 
              RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0]}], 
            
            PolygonBox[{{-1.1430749027719966`, -3.658201906605663*^-15}, \
{-0.5141550583368032, 
             0.4934412476243406}, {-0.5141550583368023, \
-0.49344124762434427`}}], 
            Dashing[{Small, Small}], 
            RGBColor[0, 
             NCache[
              Rational[2, 3], 0.6666666666666666], 0], 
            
            PointBox[{{-1.1430749027719966`, -3.658201906605663*^-15}, \
{-0.5141550583368032, 
             0.4934412476243406}, {-0.5141550583368023, \
-0.49344124762434427`}}]}, {
            EdgeForm[{
              Thickness[Large], 
              RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0]}], 
            
            PolygonBox[{{-1.9683749459844424`, -3.1587308265638467`*^-15}, {
             1.499999999999998, 2.7212359026650685`}, {
             1.5000000000000024`, -2.721235902665054}}], 
            RGBColor[0, 
             NCache[
              Rational[2, 3], 0.6666666666666666], 0], 
            
            PointBox[{{-1.9683749459844424`, -3.1587308265638467`*^-15}, {
             1.499999999999998, 2.7212359026650685`}, {
             1.5000000000000024`, -2.721235902665054}}]}, {
            EdgeForm[{
              Thickness[Large], 
              Dashing[{Small, Small}], 
              RGBColor[1, 0.5, 0]}], 
            
            PolygonBox[{{-1.1430749027719966`, -3.000518154987938*^-16}, {
             0.8710801555648042, 0.15407701180169792`}, {
             0.8710801555648079, -0.15407701180169828`}}], 
            Dashing[{Small, Small}], 
            RGBColor[1, 0.5, 0], 
            
            PointBox[{{-1.1430749027719966`, -3.000518154987938*^-16}, {
             0.8710801555648042, 0.15407701180169792`}, {
             0.8710801555648079, -0.15407701180169828`}}]}, {
            EdgeForm[{
              Thickness[Large], 
              Dashing[{Small, Small}], 
              RGBColor[0, 0, 1]}], 
            
            PolygonBox[{{-3.7861498055439933`, -3.9968028886505635`*^-15}, {
             1.4999999999999956`, 1.2950365188520812`}, {
             1.5000000000000044`, -1.2950365188520812`}}], 
            Dashing[{Small, Small}], 
            RGBColor[0, 0, 1], 
            
            PointBox[{{-3.7861498055439933`, -3.9968028886505635`*^-15}, {
             1.4999999999999956`, 1.2950365188520812`}, {
             1.5000000000000044`, -1.2950365188520812`}}]}, {
            EdgeForm[{
              Thickness[Large], 
              RGBColor[
              0.7411764705882353, 0.7176470588235294, 0.4196078431372549]}], 
            
            PolygonBox[{{-1.1430749027719966`, -3.1951409230385513`*^-15}, \
{-0.035684373525247275`, 
             0.5700691386568443}, {-0.035684373525244575`, \
-0.5700691386568487}}], 
            RGBColor[
            0.7411764705882353, 0.7176470588235294, 0.4196078431372549], 
            
            PointBox[{{-1.1430749027719966`, -3.1951409230385513`*^-15}, \
{-0.035684373525247275`, 
             0.5700691386568443}, {-0.035684373525244575`, \
-0.5700691386568487}}]}}}}, {
        PlotLabel -> None, Frame -> None, 
         PlotRange -> {{-2.25, 1.75}, {-1.75, 3}}, 
         ImageSize -> {Automatic, 400}, Frame -> True, ImageSize -> Large, 
         PlotLabel -> FormBox[
           StyleBox["\"Orbit and Derived Triangles\"", 
            Directive[{
              GrayLevel[0], 14}], StripOnInput -> False], TraditionalForm], 
         PlotRange -> {{-2, 2}, {-2, 2}}}],FormBox[
        FormBox[
         TemplateBox[{
           StyleBox["\"billiard\"", 20, StripOnInput -> False], 
           StyleBox["\"orbit\"", 20, StripOnInput -> False], 
           StyleBox["\"medial\"", 20, StripOnInput -> False], 
           StyleBox["\"orthic\"", 20, StripOnInput -> False], 
           StyleBox["\"intouch\"", 20, StripOnInput -> False], 
           StyleBox["\"excentral\"", 20, StripOnInput -> False], 
           StyleBox["\"extouch\"", 20, StripOnInput -> False], 
           StyleBox["\"anticompl\"", 20, StripOnInput -> False], 
           StyleBox["\"feuerbach\"", 20, StripOnInput -> False]}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    0.7411764705882353, 0.7176470588235294, 
                    0.4196078431372549]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    0.7411764705882353, 0.7176470588235294, 
                    0.4196078431372549]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[2/3, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "}"}]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "}"}]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "}"}]}], "}"}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7411764705882353, 0.7176470588235294, 
                    0.4196078431372549], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.49411764705882355`, 0.47843137254901963`, 
                    0.2797385620915033], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.7411764705882353, 0.7176470588235294, \
0.4196078431372549]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7411764705882353, 0.7176470588235294, 
                    0.4196078431372549]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7411764705882353, 0.7176470588235294, 
                    0.4196078431372549], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                   ",", #7, ",", #8, ",", #9}], "}"}]}], "]"}]& ), Editable -> 
          True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{0}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7881674522850056`*^9, 3.7881674762709785`*^9}, {
   3.788167525950164*^9, 3.7881675963747654`*^9}, {3.788167749712332*^9, 
   3.7881677603640594`*^9}, 3.788168087022495*^9, 3.788168118580181*^9, {
   3.7881687451973314`*^9, 3.788168751882456*^9}, {3.788168796162691*^9, 
   3.7881688098425264`*^9}, 3.788168839878375*^9, {3.7881689263962884`*^9, 
   3.7881689775759907`*^9}, 3.788169088793082*^9, 3.789722208191538*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"export3", "[", 
  RowBox[{"\"\<0072_lemma3\>\"", ",", "lemma3plot"}], "]"}]], "Input",
 CellChangeTimes->{{3.788168121447837*^9, 3.7881681330281944`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"derivedTrisPlot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"showDerivedTris", "[", 
     RowBox[{"1.5", ",", "30"}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Frame", "\[Rule]", "None"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "None"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.775752609002528*^9, 3.775752649194042*^9}, {
  3.7757527239301434`*^9, 3.775752741937976*^9}, {3.7757528294503064`*^9, 
  3.7757528309772234`*^9}, {3.7757531628582773`*^9, 3.775753163234272*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Thickness[Large], 
      GrayLevel[0], 
      CircleBox[{0, 0}, {1.5, 1}]}, {
      Thickness[Large], 
      Dashing[{Small, Small}], 
      RGBColor[0.7411764705882353, 0.7176470588235294, 0.4196078431372549], 
      CircleBox[{0, 0}, {1.1430749027719964`, 0.23795006481866912`}]}, {
      FaceForm[None], 
      Dashing[{0, Small}], 
      GrayLevel[0], 
      LineBox[{{-1.5, 0}, {1.5, 0}}], 
      LineBox[{{0, -1}, {0, 1}}], {{
        EdgeForm[{
          Thickness[Large], 
          RGBColor[0, 0, 1]}], 
        PolygonBox[{{1.299038105676658, 0.5000000000000001}, {
         0.8995352945247652, -0.8002322590360164}, {-1.4969411981678697`, 
         0.06382980574323183}}], 
        RGBColor[0, 0, 1], 
        PointBox[{{1.299038105676658, 0.5000000000000001}, {
         0.8995352945247652, -0.8002322590360164}, {-1.4969411981678697`, 
         0.06382980574323183}}]}, {
        EdgeForm[{
          Thickness[Large], 
          RGBColor[
           NCache[
            Rational[2, 3], 0.6666666666666666], 0, 0]}], 
        PolygonBox[{{-0.2987029518215522, -0.3682012266463923}, \
{-0.09895154624560594, 0.2819149028716159}, {
         1.0992867001007114`, -0.1501161295180082}}], 
        RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0, 0], 
        PointBox[{{-0.2987029518215522, -0.3682012266463923}, \
{-0.09895154624560594, 0.2819149028716159}, {
         1.0992867001007114`, -0.1501161295180082}}]}, {
        EdgeForm[{
          Thickness[Large], 
          RGBColor[1, 0.5, 0]}], 
        PolygonBox[{{0.8382054805727108, -0.7781194756068754}, {
         0.7110103352958164, 0.4082682098244717}, {
         0.9353963394322002, -0.6835179678475662}}], 
        RGBColor[1, 0.5, 0], 
        PointBox[{{0.8382054805727108, -0.7781194756068754}, {
         0.7110103352958164, 0.4082682098244717}, {
         0.9353963394322002, -0.6835179678475662}}]}, {
        EdgeForm[{
          Thickness[Large], 
          Dashing[{Small, Small}], 
          RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0]}], 
        PolygonBox[{{0.3925260005858717, -0.6174274208834492}, {
         0.48758772039470466`, 0.37341448783562264`}, {
         1.0578294571673341`, -0.2850439526220511}}], 
        Dashing[{Small, Small}], 
        RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0], 
        PointBox[{{0.3925260005858717, -0.6174274208834492}, {
         0.48758772039470466`, 0.37341448783562264`}, {
         1.0578294571673341`, -0.2850439526220511}}]}, {
        EdgeForm[{
          Thickness[Large], 
          RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0]}], 
        PolygonBox[{{-1.7046627073953482`, -2.101281209488333}, \
{-1.1804151578475233`, 3.363026018277562}, {
         1.964361033390378, -0.2682487428270916}}], 
        RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0], 
        PointBox[{{-1.7046627073953482`, -2.101281209488333}, \
{-1.1804151578475233`, 3.363026018277562}, {
         1.964361033390378, -0.2682487428270916}}]}, {
        EdgeForm[{
          Thickness[Large], 
          Dashing[{Small, Small}], 
          RGBColor[1, 0.5, 0]}], 
        PolygonBox[{{-0.9899319042289761, -0.11897503240933541`}, \
{-0.6854908128859164, 0.19041531790760924`}, {
         1.140743943034089, -0.01518830641396507}}], 
        Dashing[{Small, Small}], 
        RGBColor[1, 0.5, 0], 
        PointBox[{{-0.9899319042289761, -0.11897503240933541`}, \
{-0.6854908128859164, 0.19041531790760924`}, {
         1.140743943034089, -0.01518830641396507}}]}, {
        EdgeForm[{
          Thickness[Large], 
          Dashing[{Small, Small}], 
          RGBColor[0, 0, 1]}], 
        PolygonBox[{{-1.8964440093197625`, -1.2364024532927846`}, \
{-1.097438387015977, 1.3640620647792483`}, {
         3.695514598369293, -0.3640620647792481}}], 
        Dashing[{Small, Small}], 
        RGBColor[0, 0, 1], 
        PointBox[{{-1.8964440093197625`, -1.2364024532927846`}, \
{-1.097438387015977, 1.3640620647792483`}, {
         3.695514598369293, -0.3640620647792481}}]}, {
        EdgeForm[{
          Thickness[Large], 
          RGBColor[
          0.7411764705882353, 0.7176470588235294, 0.4196078431372549]}], 
        PolygonBox[{{-0.13314656189102944`, -0.6974596734305453}, {
         0.1103490271019293, 0.42290075186638865`}, {
         1.1030612917521772`, -0.2448510707520874}}], 
        RGBColor[0.7411764705882353, 0.7176470588235294, 0.4196078431372549], 
        PointBox[{{-0.13314656189102944`, -0.6974596734305453}, {
         0.1103490271019293, 0.42290075186638865`}, {
         1.1030612917521772`, -0.2448510707520874}}]}}}}, {
    PlotRange -> All, Frame -> None, PlotLabel -> None, Frame -> True, 
     ImageSize -> Large, PlotLabel -> FormBox[
       StyleBox["\"Orbit and Derived Triangles\"", 
        Directive[{
          GrayLevel[0], 14}], StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-2, 2}, {-2, 2}}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox["\"billiard\"", 20, StripOnInput -> False], 
       StyleBox["\"caustic\"", 20, StripOnInput -> False], 
       StyleBox["\"orbit\"", 20, StripOnInput -> False], 
       StyleBox["\"medial\"", 20, StripOnInput -> False], 
       StyleBox["\"orthic\"", 20, StripOnInput -> False], 
       StyleBox["\"intouch\"", 20, StripOnInput -> False], 
       StyleBox["\"excentral\"", 20, StripOnInput -> False], 
       StyleBox["\"extouch\"", 20, StripOnInput -> False], 
       StyleBox["\"anticompl\"", 20, StripOnInput -> False], 
       StyleBox["\"feuerbach\"", 20, StripOnInput -> False]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.7411764705882353, 0.7176470588235294, 
                    0.4196078431372549]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.7411764705882353, 0.7176470588235294, 
                    0.4196078431372549]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    0.7411764705882353, 0.7176470588235294, 
                    0.4196078431372549]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    0.7411764705882353, 0.7176470588235294, 
                    0.4196078431372549]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7411764705882353, 0.7176470588235294, 
                    0.4196078431372549], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.49411764705882355`, 0.47843137254901963`, 
                    0.2797385620915033], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.7411764705882353, 0.7176470588235294, \
0.4196078431372549]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7411764705882353, 0.7176470588235294, 
                    0.4196078431372549]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7411764705882353, 0.7176470588235294, 
                    0.4196078431372549], Editable -> False, Selectable -> 
                    False]}], "}"}]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[2/3, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "}"}]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "}"}]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "}"}]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7411764705882353, 0.7176470588235294, 
                    0.4196078431372549], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.49411764705882355`, 0.47843137254901963`, 
                    0.2797385620915033], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.7411764705882353, 0.7176470588235294, \
0.4196078431372549]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7411764705882353, 0.7176470588235294, 
                    0.4196078431372549]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7411764705882353, 0.7176470588235294, 
                    0.4196078431372549], Editable -> False, Selectable -> 
                    False]}], "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10}], "}"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7757526043060884`*^9, 3.775752649690714*^9}, {
   3.775752724669166*^9, 3.775752742372813*^9}, 3.775752794517742*^9, 
   3.775752831458934*^9, {3.775753134016259*^9, 3.775753163660133*^9}, 
   3.775897871650323*^9, 3.776107069732961*^9, 3.786261001329573*^9, 
   3.7862702894260597`*^9, 3.788166872674099*^9, 3.789722209589164*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"export3", "[", 
   RowBox[{"\"\<0043_derived-triangles\>\"", ",", "derivedTrisPlot"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7757531568682995`*^9, 3.7757531858975835`*^9}, {
  3.776107075287403*^9, 3.776107078477518*^9}, {3.78627022357574*^9, 
  3.7862702311026416`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Billiard Trajectories: needs to to to ngons_v1.nb", "Subsubsection",
 CellChangeTimes->{{3.7870727561630793`*^9, 3.787072762070177*^9}, {
  3.7870728589102435`*^9, 3.7870728671253223`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "makeTrilinPlot"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"makeTrilinPlot", "[", 
    RowBox[{"a_", ",", "tDeg_", ",", "kimbN_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ons", ",", "gr", ",", "X", ",", "pedalTri", ",", "medialTri", ",", 
       "medialPedals", ",", "trils"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ons", "=", 
       RowBox[{"orbitNormals", "[", 
        RowBox[{"a", ",", 
         RowBox[{"toRad", "@", "tDeg"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"X", ",", "trils"}], "}"}], "=", 
       RowBox[{"Part", "[", 
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"getNewCenters", "[", 
           RowBox[{
            RowBox[{"ons", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"ons", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", 
            RowBox[{"{", "kimbN", "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "4"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pedalTri", "=", 
       RowBox[{"pedalTriangle", "[", 
        RowBox[{
         RowBox[{"ons", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"ons", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", "trils"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"&&", "&"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"medialTri", "=", 
       RowBox[{"medialTriangle", "[", 
        RowBox[{
         RowBox[{"ons", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"ons", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"medialPedals", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"X", "+", "#"}], ")"}], "/", "2"}], "&"}], "/@", 
        "pedalTri"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FaceForm", "@", "None"}], ",", "Thick", ",", 
          RowBox[{"PointSize", "@", "Large"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Blue"}], "}"}]}], ",", 
            RowBox[{"Polygon", "@", 
             RowBox[{"ons", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", "Blue", ",", 
            RowBox[{"Point", "@", 
             RowBox[{"ons", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", 
            RowBox[{"Darker", "@", "Red"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Line", "@", 
               RowBox[{"{", 
                RowBox[{"X", ",", "#"}], "}"}]}], "&"}], "/@", "pedalTri"}]}],
            "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Darker", "@", "Green"}], ",", 
            RowBox[{"Point", "@", "X"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<X\>\"", ",", 
                RowBox[{"{", "20", "}"}]}], "]"}], ",", "X", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", ".5"}]}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Red", ",", 
            RowBox[{"Point", "@", "pedalTri"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"ellLabelPoints", "[", 
            RowBox[{"a", ",", 
             RowBox[{"ons", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<P\>\"", ",", "20", 
             ",", ".1"}], "]"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"#1", ",", "20"}], "]"}], ",", "#2", ",", "#3"}], 
               "]"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(s\), \(1\)]\)\>\"", ",", 
                 "\"\<\!\(\*SubscriptBox[\(s\), \(2\)]\)\>\"", ",", 
                 "\"\<\!\(\*SubscriptBox[\(s\), \(3\)]\)\>\""}], "}"}], ",", 
               "medialTri", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1.75", ",", 
                   RowBox[{"-", "1.75"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], "}"}]}], 
            "]"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"#1", ",", "20"}], "]"}], ",", "#2", ",", "#3"}], 
               "]"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<p\>\"", ",", "\"\<q\>\"", ",", "\"\<r\>\""}], 
                "}"}], ",", "medialPedals", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", 
                   RowBox[{"-", "1"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1.5", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "2"}], ",", 
                   RowBox[{"-", ".75"}]}], "}"}]}], "}"}]}], "}"}]}], "]"}], 
           "}"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"gr", ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7898947115242553`*^9, 3.7898953622193604`*^9}, {
  3.789895408795889*^9, 3.7898956070599384`*^9}, {3.7899251594278417`*^9, 
  3.7899251946679063`*^9}, {3.7899252408205037`*^9, 3.7899252678724713`*^9}, {
  3.7899253958047237`*^9, 3.7899253977085934`*^9}, {3.789925435140596*^9, 
  3.7899255836556454`*^9}, {3.789925806483407*^9, 3.7899258174852858`*^9}, {
  3.7899259989876704`*^9, 3.789925999138525*^9}, {3.7900781604151545`*^9, 
  3.7900781910791163`*^9}, {3.791483620616374*^9, 3.7914836239125385`*^9}, {
  3.7914836722586155`*^9, 3.7914836730175905`*^9}, {3.79148392103998*^9, 
  3.791483929839736*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trilinPlotPos", "=", 
  RowBox[{"makeTrilinPlot", "[", 
   RowBox[{"1.5", ",", "5", ",", "9"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.790078120753238*^9, 3.790078137522375*^9}}],

Cell[BoxData[
 GraphicsBox[
  {PointSize[Large], Thickness[Large], FaceForm[None], 
   {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
    PolygonBox[{{1.4942920471376184`, 
     0.08715574274765797}, {-0.7902074939428605, -0.8499861741402477}, \
{-1.3376286937527837`, 0.4525235304620925}}], 
    {RGBColor[0, 0, 1], 
     PointBox[{{1.4942920471376184`, 
      0.08715574274765797}, {-0.7902074939428605, -0.8499861741402477}, \
{-1.3376286937527837`, 0.4525235304620925}}]}}, 
   {RGBColor[
     NCache[
      Rational[2, 3], 0.6666666666666666], 0, 0], Dashing[{Small, Small}], 
    LineBox[{{0, 0}, {-0.9751872653846735, -0.4098535166148483}}], 
    LineBox[{{0, 0}, {0.03552659297503642, 0.27536224834853346`}}], 
    LineBox[{{0, 0}, {0.1846343801628594, -0.450088881042105}}]}, 
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], PointBox[{0, 0}], InsetBox[
     StyleBox["\<\"X\"\>",
      StripOnInput->False,
      FontSize->20], {0, 0}, {-2, -0.5}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{{-0.9751872653846735, -0.4098535166148483}, {
     0.03552659297503642, 0.27536224834853346`}, {
     0.1846343801628594, -0.450088881042105}}]}, {InsetBox[
     StyleBox[
      SubscriptBox["\<\"P\"\>", "1"],
      StripOnInput->False,
      FontSize->20], {1.5934419074521584`, 0.10016747589920968`}, {0, 0}], 
    InsetBox[
     StyleBox[
      SubscriptBox["\<\"P\"\>", "2"],
      StripOnInput->False,
      FontSize->20], {-0.828394849075438, -0.9424076321896553}, {0, 0}], 
    InsetBox[
     StyleBox[
      SubscriptBox["\<\"P\"\>", "3"],
      StripOnInput->False,
      FontSize->20], {-1.417199608410081, 0.5130914224561275}, {0, 0}]}, {
    InsetBox[
     StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(s\\), \\(1\\)]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {-1.0639180938478219`, -0.19873132183907763`}, {1, 1}], 
    InsetBox[
     StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(s\\), \\(2\\)]\\)\"\>",
      StripOnInput->False,
      FontSize->
       20], {0.07833167669241732, 0.2698396366048752}, {1.75, -1.75}], 
    InsetBox[
     StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(s\\), \\(3\\)]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0.3520422765973789, -0.38141521569629483`}, {-1, 1}]}, {
    InsetBox[
     StyleBox["\<\"p\"\>",
      StripOnInput->False,
      FontSize->20], {-0.48759363269233674`, -0.20492675830742416`}, {1, -1}],
     InsetBox[
     StyleBox["\<\"q\"\>",
      StripOnInput->False,
      FontSize->20], {0.01776329648751821, 0.13768112417426673`}, {1.5, 0}], 
    InsetBox[
     StyleBox["\<\"r\"\>",
      StripOnInput->False,
      FontSize->20], {0.0923171900814297, -0.2250444405210525}, {-2, -0.75}]}},
  ImageSize->Large]], "Output",
 CellChangeTimes->{{3.790078126464957*^9, 3.79007819210235*^9}, 
   3.7914835742582474`*^9, 3.7914836251126423`*^9, 3.791483674166545*^9, {
   3.791483924090644*^9, 3.791483931530545*^9}, 3.7915789477919273`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trilinPlotNeg", "=", 
  RowBox[{"makeTrilinPlot", "[", 
   RowBox[{"1.5", ",", "5", ",", "40"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.789894783624346*^9, 3.7898947877669353`*^9}, {
  3.789895023892253*^9, 3.789895025496171*^9}, {3.7898956226627502`*^9, 
  3.7898956239262133`*^9}, {3.789925430742403*^9, 3.7899254308070164`*^9}, {
  3.789925824766782*^9, 3.789925988574544*^9}, {3.7900780203621798`*^9, 
  3.7900781115139866`*^9}}],

Cell[BoxData[
 GraphicsBox[
  {PointSize[Large], Thickness[Large], FaceForm[None], 
   {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
    PolygonBox[{{1.4942920471376184`, 
     0.08715574274765797}, {-0.7902074939428605, -0.8499861741402477}, \
{-1.3376286937527837`, 0.4525235304620925}}], 
    {RGBColor[0, 0, 1], 
     PointBox[{{1.4942920471376184`, 
      0.08715574274765797}, {-0.7902074939428605, -0.8499861741402477}, \
{-1.3376286937527837`, 0.4525235304620925}}]}}, 
   {RGBColor[
     NCache[
      Rational[2, 3], 0.6666666666666666], 0, 0], Dashing[{Small, Small}], 
    LineBox[{{0.6715685060809665, 
     0.7400948714120399}, {-1.1387251576632005`, -0.020738714636124544`}}], 
    LineBox[{{0.6715685060809665, 0.7400948714120399}, {0.6021775695389587, 
     0.20225426523164414`}}], 
    LineBox[{{0.6715685060809665, 0.7400948714120399}, {
     1.0193398593709975`, -0.10767800340542823`}}]}, 
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], 
    PointBox[{0.6715685060809665, 0.7400948714120399}], InsetBox[
     StyleBox["\<\"X\"\>",
      StripOnInput->False,
      FontSize->20], {0.6715685060809665, 0.7400948714120399}, {-2, -0.5}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{{-1.1387251576632005`, -0.020738714636124544`}, {
     0.6021775695389587, 0.20225426523164414`}, {
     1.0193398593709975`, -0.10767800340542823`}}]}, {InsetBox[
     StyleBox[
      SubscriptBox["\<\"P\"\>", "1"],
      StripOnInput->False,
      FontSize->20], {1.5934419074521584`, 0.10016747589920968`}, {0, 0}], 
    InsetBox[
     StyleBox[
      SubscriptBox["\<\"P\"\>", "2"],
      StripOnInput->False,
      FontSize->20], {-0.828394849075438, -0.9424076321896553}, {0, 0}], 
    InsetBox[
     StyleBox[
      SubscriptBox["\<\"P\"\>", "3"],
      StripOnInput->False,
      FontSize->20], {-1.417199608410081, 0.5130914224561275}, {0, 0}]}, {
    InsetBox[
     StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(s\\), \\(1\\)]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {-1.0639180938478219`, -0.19873132183907763`}, {1, 1}], 
    InsetBox[
     StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(s\\), \\(2\\)]\\)\"\>",
      StripOnInput->False,
      FontSize->
       20], {0.07833167669241732, 0.2698396366048752}, {1.75, -1.75}], 
    InsetBox[
     StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(s\\), \\(3\\)]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0.3520422765973789, -0.38141521569629483`}, {-1, 1}]}, {
    InsetBox[
     StyleBox["\<\"p\"\>",
      StripOnInput->False,
      FontSize->20], {-0.23357832579111698`, 0.3596780783879577}, {1, -1}], 
    InsetBox[
     StyleBox["\<\"q\"\>",
      StripOnInput->False,
      FontSize->20], {0.6368730378099626, 0.471174568321842}, {1.5, 0}], 
    InsetBox[
     StyleBox["\<\"r\"\>",
      StripOnInput->False,
      FontSize->20], {0.845454182725982, 0.31620843400330584`}, {-2, -0.75}]}},
  ImageSize->Large]], "Output",
 CellChangeTimes->{{3.7900780483333454`*^9, 3.790078114509942*^9}, 
   3.7900781971468544`*^9, 3.7915789553826075`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"export3", "[", 
  RowBox[{"\"\<1120_trilins\>\"", ",", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"trilinPlotPos", ",", "trilinPlotNeg"}], "}"}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7898956254756775`*^9, 3.789895657518409*^9}, {
  3.7900782130503063`*^9, 3.790078221457813*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "showOrthicIncenter"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "showOrthicIncenter"}], "=", 
   RowBox[{"{", 
    RowBox[{"drObtuse", "\[Rule]", "False"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"showOrthicIncenter", "[", 
    RowBox[{"u_", ",", "v_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ref", ",", "refSides", ",", "el", ",", "ort", ",", "gr", ",", "x4", 
       ",", 
       RowBox[{"k", "=", "1.33"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ref", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "v"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"refSides", "=", 
       RowBox[{"triLengthsRL", "@", "ref"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x4", "=", 
       RowBox[{"getOrthocenterTrilin", "[", 
        RowBox[{"ref", ",", "refSides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ort", "=", 
       RowBox[{"orthicTriangle", "[", 
        RowBox[{"ref", ",", "refSides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gr", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "@", "Large"}], ",", 
          RowBox[{"FaceForm", "@", "None"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Blue"}], "}"}]}], ",", 
            RowBox[{"Polygon", "@", "ref"}], ",", "Blue", ",", 
            RowBox[{"Point", "@", "ref"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", "Black", ",", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Line", "@", 
                RowBox[{"{", 
                 RowBox[{"#1", ",", "#2"}], "}"}]}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{"ref", ",", "ort"}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drObtuse"}], ",", 
            RowBox[{"{", 
             RowBox[{"Dashed", ",", "Black", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Line", "@", 
                 RowBox[{"{", 
                  RowBox[{"#", ",", "x4"}], "}"}]}], "&"}], "/@", 
               RowBox[{"ReplacePart", "[", 
                RowBox[{"ort", ",", 
                 RowBox[{"2", "\[Rule]", 
                  RowBox[{"ref", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "@", "drObtuse"}], ",", 
            RowBox[{"{", 
             RowBox[{"Dashed", ",", "Black", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Line", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"ref", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "#"}], "}"}]}], 
                "&"}], "/@", 
               RowBox[{"Part", "[", 
                RowBox[{"ort", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Orange"}], "}"}]}], ",", 
            RowBox[{"Polygon", "@", "ort"}], ",", "Orange", ",", 
            RowBox[{"Point", "@", "ort"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", 
            RowBox[{"Point", "@", "x4"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"OptionValue", "@", "drObtuse"}], ",", 
                  "\"\<\!\(\*SubscriptBox[\(X\), \(4\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(X\), \(4\)]\)=\!\(\*SubscriptBox[\
\(X\), \(1\)]\)'\>\""}], "]"}], ",", "20", ",", 
                RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
              "x4", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"OptionValue", "@", "drObtuse"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"-", "k"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "1.25"}], "k"}], ",", "0"}], "}"}]}], "]"}]}],
              "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"#", ",", "20", ",", 
                RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], "&"}], "/@", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Text", "[", 
                 RowBox[{"#1", ",", "#2", ",", "#3"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<A\>\"", ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "@", "drObtuse"}]}], ",", 
                    "\"\<B\>\"", ",", 
                    "\"\<B=\!\(\*SubscriptBox[\(X\), \(1\)]\)'\>\""}], "]"}], 
                   ",", "\"\<C\>\""}], "}"}], ",", "ref", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "k"}], "}"}], ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "@", "drObtuse"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"1.25", "k"}]}], "}"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "k"}]}], "}"}]}], "}"}]}], "}"}]}], 
              "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"#", ",", "20"}], "]"}], "&"}], "/@", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Text", "[", 
                 RowBox[{"#1", ",", "#2", ",", "#3"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<A'\>\"", ",", "\"\<B'\>\"", ",", "\"\<C'\>\""}], "}"}],
                  ",", "ort", ",", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"!", 
                    RowBox[{"OptionValue", "@", "drObtuse"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1.5"}], "k"}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "k"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "k"}], "}"}]}], "}"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"1.25", "k"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "k"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1.5"}], "k"}], ",", "0"}], "}"}]}], "}"}]}],
                   "]"}]}], "\[IndentingNewLine]", "}"}]}], "]"}]}]}], 
           "}"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"gr", ",", 
        RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.792001553365678*^9, 3.7920016897361636`*^9}, {
  3.792001721013959*^9, 3.7920018718467064`*^9}, {3.7920019127498164`*^9, 
  3.7920020645537367`*^9}, {3.792002095688836*^9, 3.7920023463225737`*^9}, {
  3.792002426215022*^9, 3.792002429796441*^9}, {3.7920024603956285`*^9, 
  3.792002486948675*^9}, {3.7920025170678077`*^9, 3.7920028697593517`*^9}, {
  3.7920029151380816`*^9, 3.7920029772485557`*^9}, {3.792003020443264*^9, 
  3.792003273789563*^9}, {3.7920056173036957`*^9, 3.7920057034476013`*^9}, {
  3.7920057341086435`*^9, 3.7920057625501337`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"orthicIncenterPlot", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"showOrthicIncenter", "[", 
       RowBox[{".8", ",", ".7"}], "]"}], ",", 
      RowBox[{"showOrthicIncenter", "[", 
       RowBox[{"1.2", ",", ".7", ",", 
        RowBox[{"drObtuse", "\[Rule]", "True"}]}], "]"}]}], "}"}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7920016908572955`*^9, 3.7920016966406603`*^9}, {
  3.792001880503564*^9, 3.792001939759948*^9}, {3.792002074174014*^9, 
  3.7920020887264175`*^9}, {3.7920021447262874`*^9, 3.7920021456637526`*^9}, {
  3.792002334438343*^9, 3.7920023375120983`*^9}, {3.792002763263831*^9, 
  3.792002771048026*^9}, {3.7920033151118145`*^9, 3.792003318480815*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      {PointSize[Large], FaceForm[None], 
       {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
        PolygonBox[{{0, 0}, {1, 0}, {0.8, 0.7}}], 
        {RGBColor[0, 0, 1], PointBox[{{0, 0}, {1, 0}, {0.8, 0.7}}]}}, 
       {GrayLevel[0], Dashing[{Small, Small}], 
        LineBox[{{0, 0}, {0.9245283018867925, 0.2641509433962264}}], 
        LineBox[{{1, 0}, {0.5663716814159292, 0.49557522123893805`}}], 
        LineBox[{{0.8, 0.7}, {0.8, 0.}}]}, {}, {}, 
       {EdgeForm[{RGBColor[1, 0.5, 0], Thickness[Large]}], 
        PolygonBox[{{0.9245283018867925, 0.2641509433962264}, {
         0.5663716814159292, 0.49557522123893805`}, {0.8, 0.}}], 
        {RGBColor[1, 0.5, 0], 
         PointBox[{{0.9245283018867925, 0.2641509433962264}, {
          0.5663716814159292, 0.49557522123893805`}, {0.8, 0.}}]}}, 
       {RGBColor[1, 0.5, 0], PointBox[{0.8, 0.22857142857142856`}], InsetBox[
         StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \
\\(4\\)]\\)=\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)'\"\>",
          StripOnInput->False,
          FontSize->20,
          
          Background->GrayLevel[
           1]], {0.8, 0.22857142857142856`}, {0, -1.33}]}, 
       {RGBColor[0, 0, 1], 
        StyleBox[InsetBox["\<\"A\"\>", {0, 0}, {0, 1.33}],
         StripOnInput->False,
         FontSize->20,
         Background->GrayLevel[1]], 
        StyleBox[InsetBox["\<\"B\"\>", {1, 0}, {0, 1.33}],
         StripOnInput->False,
         FontSize->20,
         Background->GrayLevel[1]], 
        StyleBox[InsetBox["\<\"C\"\>", {0.8, 0.7}, {0, -1.33}],
         StripOnInput->False,
         FontSize->20,
         Background->GrayLevel[1]]}, 
       {RGBColor[1, 0.5, 0], 
        StyleBox[
         InsetBox["\<\"A'\"\>", {0.9245283018867925, 0.2641509433962264}, {-1.995, 0}],
         StripOnInput->False,
         FontSize->20], 
        StyleBox[
         InsetBox["\<\"B'\"\>", {0.5663716814159292, 0.49557522123893805`}, {0, -1.33}],
         StripOnInput->False,
         FontSize->20], 
        StyleBox[InsetBox["\<\"C'\"\>", {0.8, 0.}, {0, 1.33}],
         StripOnInput->False,
         FontSize->20]}},
      ImageSize->400], 
     GraphicsBox[
      {PointSize[Large], FaceForm[None], 
       {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], 
        PolygonBox[{{0, 0}, {1, 0}, {1.2, 0.7}}], 
        {RGBColor[0, 0, 1], PointBox[{{0, 0}, {1, 0}, {1.2, 0.7}}]}}, 
       {GrayLevel[0], Dashing[{Small, Small}], 
        LineBox[{{0, 0}, {0.9245283018867925, -0.26415094339622636`}}], 
        LineBox[{{1, 0}, {0.7461139896373057, 0.43523316062176165`}}], 
        LineBox[{{1.2, 0.7}, {1.2, 0.}}]}, 
       {GrayLevel[0], Dashing[{Small, Small}], 
        LineBox[{{0.9245283018867925, -0.26415094339622636`}, {
         1.2000000000000002`, -0.3428571428571428}}], 
        LineBox[{{1, 0}, {1.2000000000000002`, -0.3428571428571428}}], 
        LineBox[{{1.2, 0.}, {1.2000000000000002`, -0.3428571428571428}}]}, 
       {GrayLevel[0], Dashing[{Small, Small}], 
        LineBox[{{1, 0}, {0.9245283018867925, -0.26415094339622636`}}], 
        LineBox[{{1, 0}, {1.2, 0.}}]}, 
       {EdgeForm[{RGBColor[1, 0.5, 0], Thickness[Large]}], 
        PolygonBox[{{0.9245283018867925, -0.26415094339622636`}, {
         0.7461139896373057, 0.43523316062176165`}, {1.2, 0.}}], 
        {RGBColor[1, 0.5, 0], 
         PointBox[{{0.9245283018867925, -0.26415094339622636`}, {
          0.7461139896373057, 0.43523316062176165`}, {1.2, 0.}}]}}, 
       {RGBColor[1, 0.5, 0], 
        PointBox[{1.2000000000000002`, -0.3428571428571428}], InsetBox[
         StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(X\\), \\(4\\)]\\)\"\>",
          StripOnInput->False,
          FontSize->20,
          
          Background->GrayLevel[
           1]], {1.2000000000000002`, -0.3428571428571428}, {-1.6625, 0}]}, 
       {RGBColor[0, 0, 1], 
        StyleBox[InsetBox["\<\"A\"\>", {0, 0}, {0, 1.33}],
         StripOnInput->False,
         FontSize->20,
         Background->GrayLevel[1]], 
        StyleBox[
         InsetBox["\<\"B=\\!\\(\\*SubscriptBox[\\(X\\), \\(1\\)]\\)'\"\>", \
{1, 0}, {0, 1.6625}],
         StripOnInput->False,
         FontSize->20,
         Background->GrayLevel[1]], 
        StyleBox[InsetBox["\<\"C\"\>", {1.2, 0.7}, {0, -1.33}],
         StripOnInput->False,
         FontSize->20,
         Background->GrayLevel[1]]}, 
       {RGBColor[1, 0.5, 0], 
        StyleBox[
         InsetBox["\<\"A'\"\>", {0.9245283018867925, -0.26415094339622636`}, {0, 1.6625}],
         StripOnInput->False,
         FontSize->20], 
        StyleBox[
         InsetBox["\<\"B'\"\>", {0.7461139896373057, 0.43523316062176165`}, {0, -1.33}],
         StripOnInput->False,
         FontSize->20], 
        StyleBox[InsetBox["\<\"C'\"\>", {1.2, 0.}, {-1.995, 0}],
         StripOnInput->False,
         FontSize->20]}},
      ImageSize->400]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.792001696953081*^9, 3.792001798447287*^9}, {
   3.7920018614091897`*^9, 3.7920019054373565`*^9}, {3.7920020660626683`*^9, 
   3.7920021462462234`*^9}, {3.7920021824167128`*^9, 
   3.7920022066323757`*^9}, {3.7920022474800415`*^9, 3.792002275485129*^9}, {
   3.7920023175604587`*^9, 3.7920023473099136`*^9}, {3.792002483011195*^9, 
   3.7920024878123617`*^9}, 3.79200259707294*^9, 3.792002633968477*^9, 
   3.7920026695923543`*^9, {3.7920027474012365`*^9, 3.7920028713072157`*^9}, {
   3.7920029527600465`*^9, 3.7920029781860795`*^9}, {3.7920030655905905`*^9, 
   3.792003073175315*^9}, {3.7920031099988832`*^9, 3.792003278341364*^9}, 
   3.7920033188896914`*^9, 3.792005650469046*^9, {3.792005686089007*^9, 
   3.7920057043920774`*^9}, {3.792005735486506*^9, 3.792005763457736*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"export4", "[", 
  RowBox[{"\"\<1180_orthic_incenter\>\"", ",", "orthicIncenterPlot"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7920033031660333`*^9, 3.7920033384494057`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.792003306723214*^9, 3.7920033071081853`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1264, 661},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 399, 7, 70, "Section"],
Cell[CellGroupData[{
Cell[1004, 33, 5447, 130, 312, "Input"],
Cell[6454, 165, 3501, 67, 252, "Output"]
}, Open  ]],
Cell[9970, 235, 192, 4, 31, "Input"],
Cell[10165, 241, 9841, 248, 512, "Input"],
Cell[CellGroupData[{
Cell[20031, 493, 290, 6, 31, "Input"],
Cell[20324, 501, 7285, 135, 256, "Output"]
}, Open  ]],
Cell[27624, 639, 211, 5, 31, "Input"],
Cell[CellGroupData[{
Cell[27860, 648, 1475, 23, 31, "Input"],
Cell[29338, 673, 6888, 121, 256, "Output"]
}, Open  ]],
Cell[36241, 797, 479, 9, 31, "Input"],
Cell[CellGroupData[{
Cell[36745, 810, 5313, 137, 372, "Input"],
Cell[42061, 949, 7213, 132, 257, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49311, 1086, 6102, 159, 392, "Input"],
Cell[55416, 1247, 9580, 163, 260, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65033, 1415, 6453, 163, 412, "Input"],
Cell[71489, 1580, 11136, 193, 447, "Output"]
}, Open  ]],
Cell[82640, 1776, 266, 6, 31, "Input"],
Cell[82909, 1784, 362, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[83296, 1795, 1946, 48, 92, "Input"],
Cell[85245, 1845, 32649, 592, 792, "Output"]
}, Open  ]],
Cell[117909, 2440, 219, 5, 31, "Input"],
Cell[CellGroupData[{
Cell[118153, 2449, 96, 1, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[118274, 2454, 1833, 40, 92, "Input"],
Cell[120110, 2496, 274176, 4572, 980, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394323, 7073, 1278, 28, 52, "Input"],
Cell[395604, 7103, 317003, 5249, 1003, "Output"]
}, Open  ]],
Cell[712622, 12355, 223, 4, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[712882, 12364, 96, 1, 39, "Subsubsection"],
Cell[712981, 12367, 8813, 215, 452, "Input"],
Cell[CellGroupData[{
Cell[721819, 12586, 167, 3, 31, "Input"],
Cell[721989, 12591, 237, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[722263, 12599, 2238, 51, 92, "Input"],
Cell[724504, 12652, 79839, 1341, 383, "Output"]
}, Open  ]],
Cell[804358, 13996, 196, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[804579, 14004, 1131, 28, 72, "Input"],
Cell[805713, 14034, 79894, 1345, 298, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[885644, 15384, 3127, 80, 152, "Input"],
Cell[888774, 15466, 120225, 2021, 736, "Output"]
}, Open  ]],
Cell[1009014, 17490, 237, 6, 31, "Input"],
Cell[1009254, 17498, 11218, 276, 632, "Input"],
Cell[CellGroupData[{
Cell[1020497, 17778, 504, 10, 31, "Input"],
Cell[1021004, 17790, 3253, 64, 291, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1024294, 17859, 597, 10, 31, "Input"],
Cell[1024894, 17871, 3542, 68, 320, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1028485, 17945, 162, 2, 49, "Subsection"],
Cell[CellGroupData[{
Cell[1028672, 17951, 503, 9, 31, "Input"],
Cell[1029178, 17962, 3018, 62, 303, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1032233, 18029, 1160, 33, 52, "Input"],
Cell[1033396, 18064, 9474, 210, 359, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1042907, 18279, 1043, 28, 72, "Input"],
Cell[1043953, 18309, 9761, 209, 670, "Output"]
}, Open  ]],
Cell[1053729, 18521, 204, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[1053958, 18529, 9233, 232, 592, "Input"],
Cell[1063194, 18763, 11866, 210, 406, "Output"]
}, Open  ]],
Cell[1075075, 18976, 358, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[1075458, 18987, 1062, 23, 72, "Input"],
Cell[1076523, 19012, 9013, 154, 406, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1085573, 19171, 295, 7, 31, "Input"],
Cell[1085871, 19180, 20935, 372, 408, "Output"]
}, Open  ]],
Cell[1106821, 19555, 198, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[1107044, 19563, 8217, 213, 552, "Input"],
Cell[1115264, 19778, 25251, 436, 369, "Output"]
}, Open  ]],
Cell[1140530, 20217, 307, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[1140862, 20228, 2699, 71, 112, "Input"],
Cell[1143564, 20301, 3220, 73, 437, "Output"]
}, Open  ]],
Cell[1146799, 20377, 179, 3, 31, "Input"],
Cell[1146981, 20382, 13934, 319, 572, "Input"],
Cell[CellGroupData[{
Cell[1160940, 20705, 1130, 18, 31, "Input"],
Cell[1162073, 20725, 24409, 408, 395, "Output"]
}, Open  ]],
Cell[1186497, 21136, 196, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[1186718, 21144, 245, 6, 31, "Input"],
Cell[1186966, 21152, 182, 5, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1187185, 21162, 255, 6, 31, "Input"],
Cell[1187443, 21170, 193, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1187673, 21179, 380, 8, 31, "Input"],
Cell[1188056, 21189, 2719, 55, 253, "Output"]
}, Open  ]],
Cell[1190790, 21247, 10214, 256, 572, "Input"],
Cell[CellGroupData[{
Cell[1201029, 21507, 949, 18, 31, "Input"],
Cell[1201981, 21527, 14889, 317, 732, "Output"]
}, Open  ]],
Cell[1216885, 21847, 205, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[1217115, 21855, 1945, 48, 92, "Input"],
Cell[1219063, 21905, 5060, 102, 562, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1224160, 22012, 1381, 39, 112, "Input"],
Cell[1225544, 22053, 1033, 28, 77, "Output"]
}, Open  ]],
Cell[1226592, 22084, 2148, 57, 112, "Input"],
Cell[1228743, 22143, 1197, 34, 72, "Input"],
Cell[CellGroupData[{
Cell[1229965, 22181, 162, 3, 31, "Input"],
Cell[1230130, 22186, 2078, 44, 678, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1232245, 22235, 213, 4, 31, "Input"],
Cell[1232461, 22241, 4632, 95, 654, "Output"]
}, Open  ]],
Cell[1237108, 22339, 888, 23, 52, "Input"],
Cell[CellGroupData[{
Cell[1238021, 22366, 915, 25, 31, "Input"],
Cell[1238939, 22393, 4545, 94, 633, "Output"]
}, Open  ]],
Cell[1243499, 22490, 175, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[1243699, 22497, 4433, 102, 192, "Input"],
Cell[1248135, 22601, 45634, 820, 810, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1293806, 23426, 2372, 62, 132, "Input"],
Cell[1296181, 23490, 32774, 574, 558, "Output"]
}, Open  ]],
Cell[1328970, 24067, 435, 8, 31, "Input"],
Cell[CellGroupData[{
Cell[1329430, 24079, 2255, 54, 112, "Input"],
Cell[1331688, 24135, 42043, 735, 465, "Output"]
}, Open  ]],
Cell[1373746, 24873, 268, 6, 31, "Input"],
Cell[1374017, 24881, 14340, 358, 732, "Input"],
Cell[CellGroupData[{
Cell[1388382, 25243, 457, 11, 31, "Input"],
Cell[1388842, 25256, 6603, 141, 737, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1395482, 25402, 1655, 33, 52, "Input"],
Cell[1397140, 25437, 5544, 121, 755, "Output"]
}, Open  ]],
Cell[1402699, 25561, 311, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[1403035, 25572, 1382, 30, 72, "Input"],
Cell[1404420, 25604, 9629, 190, 748, "Output"]
}, Open  ]],
Cell[1414064, 25797, 217, 5, 31, "Input"],
Cell[1414284, 25804, 7161, 181, 352, "Input"],
Cell[1421448, 25987, 847, 20, 31, "Input"],
Cell[CellGroupData[{
Cell[1422320, 26011, 640, 18, 31, "Input"],
Cell[1422963, 26031, 6305, 139, 737, "Output"]
}, Open  ]],
Cell[1429283, 26173, 403, 8, 31, "Input"],
Cell[1429689, 26183, 19599, 431, 1192, "Input"],
Cell[CellGroupData[{
Cell[1449313, 26618, 3427, 83, 212, "Input"],
Cell[1452743, 26703, 23914, 495, 746, "Output"]
}, Open  ]],
Cell[1476672, 27201, 180, 3, 31, "Input"],
Cell[1476855, 27206, 9521, 246, 612, "Input"],
Cell[1486379, 27454, 12118, 298, 732, "Input"],
Cell[CellGroupData[{
Cell[1498522, 27756, 1142, 29, 72, "Input"],
Cell[1499667, 27787, 34958, 634, 370, "Output"]
}, Open  ]],
Cell[1534640, 28424, 253, 5, 31, "Input"],
Cell[1534896, 28431, 122, 2, 31, "Input"],
Cell[1535021, 28435, 15181, 356, 872, "Input"],
Cell[CellGroupData[{
Cell[1550227, 28795, 598, 10, 31, "Input"],
Cell[1550828, 28807, 11413, 240, 433, "Output"]
}, Open  ]],
Cell[1562256, 29050, 210, 5, 31, "Input"],
Cell[CellGroupData[{
Cell[1562491, 29059, 267, 4, 39, "Subsubsection"],
Cell[1562761, 29065, 9387, 238, 852, "Input"],
Cell[1572151, 29305, 3631, 94, 392, "Input"],
Cell[CellGroupData[{
Cell[1575807, 29403, 3347, 87, 232, "Input"],
Cell[1579157, 29492, 62374, 1106, 309, "Output"]
}, Open  ]],
Cell[1641546, 30601, 324, 7, 31, "Input"],
Cell[1641873, 30610, 7272, 182, 392, "Input"],
Cell[CellGroupData[{
Cell[1649170, 30796, 190, 3, 31, "Input"],
Cell[1649363, 30801, 115130, 1985, 336, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1764530, 32791, 9845, 240, 532, "Input"],
Cell[1774378, 33033, 4553, 94, 455, "Output"]
}, Open  ]],
Cell[1778946, 33130, 202, 4, 31, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1779197, 33140, 99, 1, 49, "Subsection"],
Cell[CellGroupData[{
Cell[1779321, 33145, 5973, 133, 312, "Input"],
Cell[1785297, 33280, 228078, 3977, 304, "Output"]
}, Open  ]],
Cell[2013390, 37260, 371, 7, 31, "Input"],
Cell[2013764, 37269, 1523, 39, 132, "Input"],
Cell[2015290, 37310, 5314, 131, 372, "Input"],
Cell[CellGroupData[{
Cell[2020629, 37445, 291, 5, 31, "Input"],
Cell[2020923, 37452, 107921, 1921, 327, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2128881, 39378, 1115, 16, 31, "Input"],
Cell[2129999, 39396, 108719, 1933, 327, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2238755, 41334, 356, 9, 52, "Input"],
Cell[2239114, 41345, 218176, 3858, 642, "Output"]
}, Open  ]],
Cell[2457305, 45206, 241, 6, 31, "Input"],
Cell[2457549, 45214, 288, 7, 31, "Input"],
Cell[2457840, 45223, 237, 6, 31, "Input"],
Cell[CellGroupData[{
Cell[2458102, 45233, 181, 3, 31, "Input"],
Cell[2458286, 45238, 108204, 1927, 327, "Output"]
}, Open  ]],
Cell[2566505, 47168, 296, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[2566826, 47179, 110, 1, 39, "Subsubsection"],
Cell[2566939, 47182, 121, 2, 31, "Input"],
Cell[2567063, 47186, 10592, 270, 592, "Input"],
Cell[CellGroupData[{
Cell[2577680, 47460, 599, 13, 31, "Input"],
Cell[2578282, 47475, 38988, 654, 428, "Output"]
}, Open  ]],
Cell[2617285, 48132, 357, 7, 31, "Input"],
Cell[2617645, 48141, 6545, 175, 332, "Input"],
Cell[CellGroupData[{
Cell[2624215, 48320, 854, 14, 52, "Input"],
Cell[2625072, 48336, 26029, 514, 439, "Output"]
}, Open  ]],
Cell[2651116, 48853, 436, 8, 31, "Input"],
Cell[2651555, 48863, 2338, 65, 192, "Input"],
Cell[CellGroupData[{
Cell[2653918, 48932, 303, 7, 31, "Input"],
Cell[2654224, 48941, 237, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2654498, 48952, 7756, 197, 272, "Input"],
Cell[2662257, 49151, 41413, 808, 433, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2703707, 49964, 318, 8, 31, "Input"],
Cell[2704028, 49974, 67855, 1312, 439, "Output"]
}, Open  ]],
Cell[2771898, 51289, 410, 8, 31, "Input"],
Cell[2772311, 51299, 5798, 150, 312, "Input"],
Cell[2778112, 51451, 2250, 59, 132, "Input"],
Cell[CellGroupData[{
Cell[2780387, 51514, 1939, 48, 112, "Input"],
Cell[2782329, 51564, 2316, 46, 155, "Output"],
Cell[2784648, 51612, 499, 9, 23, "Message"],
Cell[2785150, 51623, 499, 9, 23, "Message"],
Cell[2785652, 51634, 501, 10, 23, "Message"],
Cell[2786156, 51646, 503, 10, 23, "Message"],
Cell[2786662, 51658, 499, 9, 23, "Message"],
Cell[2787164, 51669, 499, 9, 23, "Message"],
Cell[2787666, 51680, 499, 9, 23, "Message"],
Cell[2788168, 51691, 497, 9, 23, "Message"],
Cell[2788668, 51702, 505, 10, 23, "Message"],
Cell[2789176, 51714, 503, 10, 23, "Message"],
Cell[2789682, 51726, 503, 10, 23, "Message"],
Cell[2790188, 51738, 503, 10, 23, "Message"],
Cell[2790694, 51750, 499, 9, 23, "Message"],
Cell[2791196, 51761, 518, 11, 23, "Message"]
}, Open  ]],
Cell[2791729, 51775, 717, 19, 92, "Input"],
Cell[CellGroupData[{
Cell[2792471, 51798, 1453, 38, 72, "Input"],
Cell[2793927, 51838, 63452, 1079, 417, "Output"]
}, Open  ]],
Cell[2857394, 52920, 218, 5, 31, "Input"],
Cell[2857615, 52927, 1375, 36, 152, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2859027, 52968, 195, 2, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[2859247, 52974, 1591, 44, 112, "Input"],
Cell[2860841, 53020, 1646, 38, 271, "Output"]
}, Open  ]],
Cell[2862502, 53061, 942, 26, 92, "Input"],
Cell[CellGroupData[{
Cell[2863469, 53091, 497, 13, 72, "Input"],
Cell[2863969, 53106, 237, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2864243, 53114, 3678, 89, 192, "Input"],
Cell[2867924, 53205, 4867, 96, 388, "Output"]
}, Open  ]],
Cell[2872806, 53304, 182, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[2873013, 53311, 722, 16, 31, "Input"],
Cell[2873738, 53329, 67855, 1314, 848, "Output"]
}, Open  ]],
Cell[2941608, 54646, 234, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[2941867, 54654, 581, 18, 31, "Input"],
Cell[2942451, 54674, 1950, 48, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2944438, 54727, 661, 19, 31, "Input"],
Cell[2945102, 54748, 688, 14, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2945827, 54767, 3042, 79, 132, "Input"],
Cell[2948872, 54848, 12566, 263, 387, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2961487, 55117, 104, 1, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[2961616, 55122, 2441, 60, 112, "Input"],
Cell[2964060, 55184, 44983, 941, 417, "Output"]
}, Open  ]],
Cell[3009058, 56128, 178, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[3009261, 56135, 550, 11, 31, "Input"],
Cell[3009814, 56148, 43434, 912, 579, "Output"]
}, Open  ]],
Cell[3053263, 57063, 317, 7, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3053617, 57075, 195, 2, 39, "Subsubsection"],
Cell[3053815, 57079, 7075, 177, 352, "Input"],
Cell[CellGroupData[{
Cell[3060915, 57260, 204, 4, 31, "Input"],
Cell[3061122, 57266, 2940, 69, 308, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3064099, 57340, 459, 8, 31, "Input"],
Cell[3064561, 57350, 3047, 72, 354, "Output"]
}, Open  ]],
Cell[3067623, 57425, 358, 9, 31, "Input"],
Cell[3067984, 57436, 9693, 233, 472, "Input"],
Cell[CellGroupData[{
Cell[3077702, 57673, 758, 16, 31, "Input"],
Cell[3078463, 57691, 5836, 125, 370, "Output"]
}, Open  ]],
Cell[3084314, 57819, 200, 4, 31, "Input"],
Cell[3084517, 57825, 94, 1, 31, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
